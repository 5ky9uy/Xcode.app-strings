N2vp2vx8database2v118Load_Property_ListE
N2vp2vx8database2v18DecisionE
N2vp2vx8database2v115Replace_StringsE
N2vp2vx8database2v130Replace_String_From_Legacy_4CCE
N2vp2vx8database2v15MatchE
N2vp2vx8database2v19ConditionE
N2vp2vx8database2v19Match_AllE
N2vp2vx8database2v19Match_AnyE
N2vp2vx8database2v14WhenE
N2vp2vx8database2v18When_NotE
N2vp2vx8database2v14ThenE
N2vp2vx8database2v122Override_Property_ListE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF10BooleanRefEEE
N2vp2vx8database2v120Constraint_EvaluatorE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF9NumberRefEEE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF9StringRefEEE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF7TypeRefEEE
N2vp2vx8database2v125Four_CC_Constraint_ParserE
N2vp2vx8database2v117Constraint_ParserE
N2vp2vx8database2v125Boolean_Constraint_ParserE
N2vp2vx8database2v124Number_Constraint_ParserE
N2vp2vx8database2v124String_Constraint_ParserE
N2vp2vx8database2v112Match_ParserE
N2vp2vx8database2v116Condition_ParserE
N2vp2vx8database2v116Match_All_ParserE
N2vp2vx8database2v116Match_Any_ParserE
N2vp2vx8database2v111When_ParserE
N2vp2vx8database2v115When_Not_ParserE
N2vp2vx8database2v111Then_ParserE
N2vp2vx8database2v115Decision_ParserE
N2vp2vx8database2v129Override_Property_List_ParserE
N2vp2vx8database2v122Replace_Strings_ParserE
N2vp2vx8database2v137Replace_String_From_Legacy_4CC_ParserE
N2vp2vx8database2v115Database_ParserE
N2vp2vx8database2v124Condition_Parser_FactoryE
N2vp2vx8database2v125Constraint_Parser_FactoryE
N2vp2vx8database2v123Decision_Parser_FactoryE
N2vp2vx8database2v125Load_Property_List_ParserE
N2vp2vx8database2v125Load_Configuration_ParserE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v116Condition_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v116Condition_ParserEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v117Constraint_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v117Constraint_ParserEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v115Decision_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v115Decision_ParserEEE
NSt3__120__shared_ptr_emplaceIN2vp2vx8database2v14RuleENS_9allocatorIS5_EEEE
N2vp2vx8database2v14RuleE
N2vp2vx8database2v16ObjectE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v19ConditionENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v19ConditionEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v18DecisionENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v18DecisionEEE
N2vp2vx8database2v118Load_ConfigurationE
N2vp2vx22IO_Node_Audio_InjectorE
N2vp2vx30IO_Node_Audio_Injector_FactoryE
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory33set_should_enable_audio_injectorsENS3_9data_flow5StateIbEEE3$_0NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory33set_should_enable_audio_injectorsENS0_9data_flow5StateIbEEE3$_0
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_15Input_Port_TypeEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_15Input_Port_TypeEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory17set_mic_port_typeENS3_9data_flow5StateINS3_15Input_Port_TypeEEEE3$_1NS_9allocatorIS9_EEFvjRKS7_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx15Input_Port_TypeEEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory17set_mic_port_typeENS0_9data_flow5StateINS0_15Input_Port_TypeEEEE3$_1
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_16Output_Port_TypeEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_16Output_Port_TypeEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory17set_ref_port_typeENS3_9data_flow5StateINS3_16Output_Port_TypeEEEE3$_2NS_9allocatorIS9_EEFvjRKS7_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx16Output_Port_TypeEEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory17set_ref_port_typeENS0_9data_flow5StateINS0_16Output_Port_TypeEEEE3$_2
NSt3__120__shared_ptr_pointerIPdN2vp16Allocator_DeleteIdEENS_9allocatorIdEEEE
N2vp16Allocator_DeleteIdEE
NSt3__110__function6__funcIZZN2vp2vx22create_voice_processorERKNS2_7ContextERKNS_10shared_ptrINS2_16Service_ProviderEEENS2_9AllocatorISt4byteEEENK3$_0clEvEUlT_T0_T1_E_NS_9allocatorISJ_EEFNS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISN_EEEEjjRKNS_4__fs10filesystem4pathEEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx22Configuration_DatabaseENS_14default_deleteIS5_EEEEjjRKNS_4__fs10filesystem4pathEEEE
ZZN2vp2vx22create_voice_processorERKNS_7ContextERKNSt3__110shared_ptrINS_16Service_ProviderEEENS_9AllocatorISt4byteEEENK3$_0clEvEUlT_T0_T1_E_
NSt3__120__shared_ptr_pointerIPN5caulk10concurrent9messengerEN2vp16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteIN5caulk10concurrent9messengerEEE
sdiastsadrbbsdcssdcw
N2vp2vx2io28Property_Controller_DelegateE
N2vp2vx2io12Node_CommandE
N2vp2vx2io27Property_Controller_CommandE
N2vp2vx10components20Audio_Issue_DetectorE
NSt3__120__shared_ptr_pointerIPN2vp8services27Audio_Issue_Detector_ClientENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp8services27Audio_Issue_Detector_ClientEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIxNS_9allocatorIxEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIxNS3_9allocatorIxEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_0NS_9allocatorIS6_EEFvRKNS_6vectorIxNS7_IxEEEEEEE
NSt3__110__function6__baseIFvRKNS_6vectorIxNS_9allocatorIxEEEEEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_0
NSt3__120__shared_ptr_pointerIPN2vp2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryENS1_16Allocator_DeleteIS5_EENS_9allocatorIS5_EEEE
N2vp16Allocator_DeleteINS_2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryEEE
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_1NS_9allocatorIS6_EEFvRKbEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_1
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIfE17register_listenerENS_8functionIFvRKfEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIfE17register_listenerENSt3__18functionIFvRKfEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_2NS_9allocatorIS6_EEFvRKfEEE
NSt3__110__function6__baseIFvRKfEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_2
ibmpiwmptbmpielpittpisupitsp
uolpwphpbphpBphpcerpcahpkpspottposupoelppsdpmdhpspapwpapotsp
rsmvlimvoimv
rsrvlirvoirvlorvoorvsprveprvtbrv
rvlf
tcvtrcvtsriaucrvrovdroiudmpschpscapscdemcmvsadddldaostrdstrueasmm2smdepm
tfdh09xhtfdH63aH51bHf06bg06b891b013b203bfedwpfhad2aa
nupephpehvpepspettpe
N2vp10decorators17Xcode_InstrumentsE
N2vp10decorators12_GLOBAL__N_131Boolean_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_123Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_fEE
N2vp10decorators12_GLOBAL__N_131Base_64_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIjEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_jEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIfEE
N2vp10decorators12_GLOBAL__N_134CF_Literal_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_126CF_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIdEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_xEE
N2vp10decorators12_GLOBAL__N_138Operation_Mode_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_135Chat_Flavor_Property_Pretty_PrinterE
mcpl)
AN2vp2vx33Voice_Processor_Interface_AdapterE
18VoiceProcessorBase
23VoiceProcessorInterface
grabmarf?ohwlav!lav!psd!gfc!o/i!tatslpmipsnunknuNSt3__120__shared_ptr_emplaceIN2vp2cf19Notification_CenterENS1_9AllocatorISt4byteEEEE
N2vp2vx2io29Parameter_Controller_DelegateE
N2vp2vx2io28Parameter_Controller_CommandE
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrINS_13__empty_stateIcEEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__120__l_anchor_multilineIcEE
NSt3__120__r_anchor_multilineIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N2vp2vx10components20Audio_Issue_Detector14Node_DecoratorE
N2vp2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryE
N2vp2vx2io22Node_Decorator_FactoryE
N2vp2vx2io20Parameter_ControllerE
N2vp2vx2io19Property_ControllerE
N2vp2vx3dsp5GraphE
N2vp2vx3dsp26Fixed_Slice_Duration_GraphE
N2vp2vx3dsp34Variable_Slice_Duration_Pull_GraphE
N2vp2vx3dsp34Variable_Slice_Duration_Push_GraphE
NSt3__120__shared_ptr_pointerIPN8DSPGraph5GraphENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8DSPGraph5GraphEEE
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_E_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_14Parameter_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_T0_T1_E_NS_9allocatorISI_EEFNS5_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_T0_T1_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_E0_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_13Property_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_T0_T1_E0_NS_9allocatorISI_EEFNS5_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_T0_T1_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_E_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_14Parameter_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_T0_T1_E_NS_9allocatorISI_EEFNS5_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_T0_T1_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_E0_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_13Property_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_T0_T1_E0_NS_9allocatorISI_EEFNS5_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_T0_T1_E0_
N2vp2vx8database2v112File_ManagerE
N2vp2vx8database2v121Database_File_ManagerE
N2vp2vx10components16Audio_StatisticsE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_0JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_0JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_1JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_1JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_2JNS3_13Port_Sub_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_13Port_Sub_TypeEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_2JNS0_13Port_Sub_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_3JNS3_18Port_Endpoint_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_3JNS0_18Port_Endpoint_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_4JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_4JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_5JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_5JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_6JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_6JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_7JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_7JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_9JNS3_14Operation_ModeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_9JNS0_14Operation_ModeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE4$_10JNS3_11Chat_FlavorEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_11Chat_FlavorEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE4$_10JNS0_11Chat_FlavorEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
N2vp2vx10components16Audio_Statistics17Payload_Key_StateE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE17register_listenerENS_8functionIFvRKSB_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS9_ISM_EEFvjSL_EEE
ZN2vp2vx9data_flow5StateINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE17register_listenerENS3_8functionIFvRKS9_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSN_7TypeRefENS_4hashISO_EENS_8equal_toISO_EENS2_9AllocatorINS_4pairIKSO_SP_EEEEEEEUlRKSC_E_NSA_IS13_EEFvS12_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS4_13unordered_mapIN10applesauce2CF9StringRefENSL_7TypeRefENS4_4hashISM_EENS4_8equal_toISM_EENS_9AllocatorINS4_4pairIKSM_SN_EEEEEEEUlRKSA_E_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKjE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKjEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKjE_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKbE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKbEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKbE_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvRKdEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvRKdEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKdE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKdEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKdE_
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIxNS4_9allocatorIxEEEEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_35Spatial_Head_Tracking_ConfigurationEEE
]xEc
N2vp10decorators9AB_HelperE
shba
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlT_E_JS9_EEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS4_13State_ManagerESH_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value7Type_IDE
N2vp18Virtual_DestructorE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlT_E_JS7_EEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_EEERNS1_13State_ManagerESF_SO_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx9data_flow5ValueEEEE
NSt3__117bad_function_callE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlT_E_JN10applesauce2CF9StringRefEEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSE_5StateIT0_EEEUlRKNS_5tupleIJSC_EEEE_NS_9allocatorISQ_EEFvSP_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEEEEEEE
NSt3__110__function6__funcIZN2vp2vx27Control_Center_Manager_Impl20update_app_bundle_idEN10applesauce2CF9StringRefEEUlRT_E_NS_9allocatorISA_EEFvRNS2_6darwin18Notification_ProxyEEEE
ZN2vp2vx27Control_Center_Manager_Impl20update_app_bundle_idEN10applesauce2CF9StringRefEEUlRT_E_
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlT_E_JN10applesauce2CF9StringRefEEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSB_5StateIT0_EEEUlRKNSt3__15tupleIJS9_EEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEjEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlT_T0_E_JS9_jEEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_jEEERNS4_13State_ManagerESH_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlT_T0_E_JS7_jEEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_jEEERNS1_13State_ManagerESF_SP_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEjEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlT_T0_E_JN10applesauce2CF9StringRefEjEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSF_5StateIT0_EEEUlRKNS_5tupleIJSD_jEEEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEjEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlT_T0_E_JN10applesauce2CF9StringRefEjEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSC_5StateIT0_EEEUlRKNSt3__15tupleIJSA_jEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISA_NS_9allocatorISA_EEEEbEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSI_EUlRKT_RKT0_RKT1_RKT2_E_JS9_SA_SE_bEEEvOSM_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SA_SE_bEEERNS4_13State_ManagerESM_S16_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1F_E_NSC_IS1K_EEFvS1I_S1J_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorINS0_11Chat_FlavorENS4_9allocatorIS6_EEEEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS4_6vectorIS9_NS4_9allocatorIS9_EEEEbEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS3_6vectorIS8_NS3_9allocatorIS8_EEEEbEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSG_EUlRKT_RKT0_RKT1_RKT2_E_JS7_S8_SC_bEEEvOSK_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_S8_SC_bEEERNS1_13State_ManagerESK_S14_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1D_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISA_NS_9allocatorISA_EEEEbEEEE17register_listenerENS_8functionIFvRKSF_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NSC_ISQ_EEFvjSP_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS3_6vectorIS8_NS3_9allocatorIS8_EEEEbEEEE17register_listenerENS3_8functionIFvRKSD_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_RKT0_RKT1_RKT2_E_JN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISO_NS_9allocatorISO_EEEEbEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSU_5StateIT0_EEEUlRKNS_5tupleIJSN_SO_SS_bEEEE_NSQ_IS16_EEFvS15_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEN2vp2vx11Chat_FlavorENS_6vectorIS8_NS_9allocatorIS8_EEEEbEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_RKT0_RKT1_RKT2_E_JN10applesauce2CF9StringRefENS0_11Chat_FlavorENSt3__16vectorISL_NSM_9allocatorISL_EEEEbEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSS_5StateIT0_EEEUlRKNSM_5tupleIJSK_SL_SQ_bEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEbEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlRKT_bE_JS9_bEEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_bEEERNS4_13State_ManagerESH_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlRKT_bE_JS7_bEEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_bEEERNS1_13State_ManagerESF_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEbEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_bE_JN10applesauce2CF9StringRefEbEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSG_5StateIT0_EEEUlRKNS_5tupleIJSE_bEEEE_NS_9allocatorISS_EEFvSR_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEbEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_bE_JN10applesauce2CF9StringRefEbEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSD_5StateIT0_EEEUlRKNSt3__15tupleIJSB_bEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISB_EEEEEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSI_EUlRKT_RKT0_E_JS9_SE_EEEvOSM_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SE_EEERNS4_13State_ManagerESM_S10_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NSC_IS1E_EEFvS1C_S1D_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefENS4_6vectorINS0_11Chat_FlavorENS4_9allocatorISA_EEEEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefENS3_6vectorINS0_11Chat_FlavorENS3_9allocatorIS9_EEEEEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSG_EUlRKT_RKT0_E_JS7_SC_EEEvOSK_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SC_EEERNS1_13State_ManagerESK_SY_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISB_EEEEEEEE17register_listenerENS_8functionIFvRKSF_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NSC_ISQ_EEFvjSP_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefENS3_6vectorINS0_11Chat_FlavorENS3_9allocatorIS9_EEEEEEEE17register_listenerENS3_8functionIFvRKSD_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_RKT0_E_JN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISJ_EEEEEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSO_5StateIT0_EEEUlRKNS_5tupleIJSH_SM_EEEE_NSK_IS10_EEFvSZ_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefENS_6vectorIN2vp2vx11Chat_FlavorENS_9allocatorIS9_EEEEEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_RKT0_E_JN10applesauce2CF9StringRefENSt3__16vectorINS0_11Chat_FlavorENSF_9allocatorISH_EEEEEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSM_5StateIT0_EEEUlRKNSF_5tupleIJSE_SK_EEEE_
NSt3__120__shared_ptr_emplaceIN2vp2vx27Control_Center_Manager_ImplENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF9StringRefEE17register_listenerENS_8functionIFvRKS8_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF9StringRefEE17register_listenerENSt3__18functionIFvRKS5_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager17set_app_bundle_idENS3_9data_flow5StateIN10applesauce2CF9StringRefEEEE3$_0NS_9allocatorISB_EEFvRKS9_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF9StringRefEEEE
ZN2vp2vx22Control_Center_Manager17set_app_bundle_idENS0_9data_flow5StateIN10applesauce2CF9StringRefEEEE3$_0
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager10set_bypassENS3_9data_flow5StateIbEEE3$_1NS_9allocatorIS8_EEFvRKbEEE
ZN2vp2vx22Control_Center_Manager10set_bypassENS0_9data_flow5StateIbEEE3$_1
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager17set_media_handoffENS3_9data_flow5StateIbEEE3$_2NS_9allocatorIS8_EEFvRKbEEE
ZN2vp2vx22Control_Center_Manager17set_media_handoffENS0_9data_flow5StateIbEEE3$_2
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS7_EEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS8_ISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorINS0_11Chat_FlavorENS3_9allocatorIS5_EEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager26set_supported_chat_flavorsENS3_9data_flow5StateINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS8_EEEEEEE3$_3NS9_ISD_EEFvRKSB_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIN2vp2vx11Chat_FlavorENS_9allocatorIS5_EEEEEEE
ZN2vp2vx22Control_Center_Manager26set_supported_chat_flavorsENS0_9data_flow5StateINSt3__16vectorINS0_11Chat_FlavorENS4_9allocatorIS6_EEEEEEE3$_3
N2vp2vx10components20Smart_Cover_DetectorE
N2vp2vx2io6ObjectE
N2vp9DecoratorE
N2vp2vx35IO_Property_Setter_Delegate_FactoryE
N2vp2vx25IO_Personal_Audio_CommandE
N2vp2vx2io20Node_Command_FactoryE
N2vp2vx33IO_Personal_Audio_Command_FactoryE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_26IO_Personal_Audio_SettingsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_33IO_Personal_Audio_Command_FactoryC1ERS9_NS_10shared_ptrINS2_8services14Personal_AudioEEEE3$_0JNS4_12Time_StampedIyEESJ_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_SJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_26IO_Personal_Audio_SettingsEEE
ZN2vp2vx9data_flow14State_FunctionINS0_26IO_Personal_Audio_SettingsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_33IO_Personal_Audio_Command_FactoryC1ERS6_NSt3__110shared_ptrINS_8services14Personal_AudioEEEE3$_0JNS1_12Time_StampedIyEESH_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_SH_EEERNS1_13State_ManagerESJ_SQ_EUlNSA_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_26IO_Personal_Audio_SettingsEE17register_listenerENS_8functionIFvRKS6_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateINS0_26IO_Personal_Audio_SettingsEE17register_listenerENSt3__18functionIFvRKS3_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx25IO_Personal_Audio_Command8set_nodeENS_10shared_ptrINS3_2io4NodeEEEE3$_1NS_9allocatorIS9_EEFvRKNS3_26IO_Personal_Audio_SettingsEEEE
NSt3__110__function6__baseIFvRKN2vp2vx26IO_Personal_Audio_SettingsEEEE
ZN2vp2vx25IO_Personal_Audio_Command8set_nodeENSt3__110shared_ptrINS0_2io4NodeEEEE3$_1
NSt3__120__shared_ptr_pointerIP7_xmlDocN10applesauce4raii2v16detail23opaque_deletion_functorIS2_XadL_Z10xmlFreeDocEEEENS_9allocatorIS1_EEEE
N10applesauce4raii2v16detail23opaque_deletion_functorIP7_xmlDocXadL_Z10xmlFreeDocEEEE
N2vp2vx10components14Audio_CapturerE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_0JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_0JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_1JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS9_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_1JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_2JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS9_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_16Output_Port_TypeEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_2JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
N2vp2vx24IO_Volume_Limit_DelegateE
N2vp2vx32IO_Volume_Limit_Delegate_FactoryE
N2vp2vx8database2v18DatabaseE
N2vp2vx22Configuration_DatabaseE
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA15_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v117Constraint_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA15_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA12_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA12_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA16_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA16_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA17_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA17_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA28_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA28_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA39_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA39_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA24_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA24_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA32_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA32_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA22_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA22_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA45_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA45_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA30_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA30_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA29_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA29_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA37_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA37_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA32_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA32_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA31_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA31_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA34_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA34_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA20_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA20_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_12Match_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v116Condition_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_12Match_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_16Match_All_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_16Match_All_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_16Match_Any_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_16Match_Any_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_11When_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_11When_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_15When_Not_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_15When_Not_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_11Then_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v115Decision_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_11Then_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Property_List_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEEEEEDaDpOT0_EUlvE_NS_9allocatorISG_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISK_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Property_List_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEEEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA1_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA1_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA7_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA7_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA9_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA9_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_29Override_Property_List_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_29Override_Property_List_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_22Replace_Strings_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_22Replace_Strings_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_37Replace_String_From_Legacy_4CC_ParserEJN10applesauce2CF9StringRefEEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_37Replace_String_From_Legacy_4CC_ParserEJN10applesauce2CF9StringRefEEEEDaDpOT0_EUlvE_
N8nlohmann6detail23output_adapter_protocolIcEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v121Database_File_ManagerENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v121Database_File_ManagerEEE
NSt3__110__function6__funcIZN2vp2vx8database2v18Database4loadEjRKNS_4__fs10filesystem4pathEE3$_0NS_9allocatorISC_EEFvNS_10shared_ptrINS5_4RuleEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN2vp2vx8database2v14RuleEEEEEE
ZN2vp2vx8database2v18Database4loadEjRKNSt3__14__fs10filesystem4pathEE3$_0
N8nlohmann6detail11other_errorE
false
N8nlohmann6detail12out_of_rangeE
N8nlohmann6detail16invalid_iteratorE
N8nlohmann6detail11parse_errorE
N2vp2vx2io14Node_DecoratorE
N2vp2vx2io4NodeE
N2vp2vx20IO_Node_CPU_ProfilerE
N2vp2vx28IO_Node_CPU_Profiler_FactoryE
N2vp2vx9data_flow5Value14Type_ID_EraserIbEE
NSt3__110__function6__funcIZN2vp2vx28IO_Node_CPU_Profiler_Factory31set_should_enable_cpu_profilersENS3_9data_flow5StateIbEEE3$_3NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx28IO_Node_CPU_Profiler_Factory31set_should_enable_cpu_profilersENS0_9data_flow5StateIbEEE3$_3
N2vp2vx10components20Property_List_WriterE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer9configureEvE3$_0JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer9configureEvE3$_0JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIjNS_9allocatorIjEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_1JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESN_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS7_IS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIjNS3_9allocatorIjEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_1JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESL_SS_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_2JNS3_13Port_Sub_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_2JNS0_13Port_Sub_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_3JNS3_18Port_Endpoint_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_3JNS0_18Port_Endpoint_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIfNS_9allocatorIfEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_4JS9_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS7_IS1A_EEFvS18_S19_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIfNS4_9allocatorIfEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIfNS3_9allocatorIfEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_4JS7_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SL_EEERNS1_13State_ManagerESN_SU_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIjNS_9allocatorIjEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_5JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESN_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS7_IS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIjNS3_9allocatorIjEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_5JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESL_SS_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIfNS_9allocatorIfEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_6JS9_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS7_IS1A_EEFvS18_S19_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIfNS3_9allocatorIfEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_6JS7_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SL_EEERNS1_13State_ManagerESN_SU_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_7JN2CA17StreamDescriptionEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_jEEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_7JN2CA17StreamDescriptionEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_jEEERNS1_13State_ManagerESH_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESH_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_9JNS3_14Operation_ModeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_9JNS0_14Operation_ModeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE4$_10JNS3_14Beam_DirectionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_14Beam_DirectionEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE4$_10JNS0_14Beam_DirectionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE4$_11JNS3_11Chat_FlavorEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE4$_11JNS0_11Chat_FlavorEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7DataRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSB_RKNS3_27Voice_Processor_State_OwnerEE4$_12JNS_6vectorIhNS_9allocatorIhEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NSL_IS1A_EEFvS18_S19_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIhNS4_9allocatorIhEEEEEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF7DataRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7DataRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS0_27Voice_Processor_State_OwnerEE4$_12JNSt3__16vectorIhNSH_9allocatorIhEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS1_13State_ManagerESN_SU_EUlNSH_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSB_RKNS3_27Voice_Processor_State_OwnerEE4$_13JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF13DictionaryRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS0_27Voice_Processor_State_OwnerEE4$_13JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx14observe_globalIbEEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EEEUljRKbE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx14observe_globalIbEEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EEEUljRKbE_
N2vp3sim9ExceptionE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE1EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE1EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE0EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE0EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE3EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE3EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE2EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE2EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
N2vp2vx10components20Property_List_Writer13Sim_Key_StateE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENS_8functionIFvRKS7_EEEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENSt3__18functionIFvRKS4_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
NSt3__110__function6__baseIFvRKN2CA17StreamDescriptionEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE8EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvRKjEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvRKjEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE8EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE8EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE10ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIjNS_9allocatorIjEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIjNS3_9allocatorIjEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE10ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIjNS_9allocatorIjEEEEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE10ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE11EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE11EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE11EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE12EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE12EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE12EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE13ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIfNS_9allocatorIfEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIfNS3_9allocatorIfEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE13ENS_6vectorIfNS_9allocatorIfEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIfNS_9allocatorIfEEEEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE13ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE15EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvRKdEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvRKdEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE15EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE15EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE17EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE17EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE17EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE19ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE19ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE19ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE20ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE20ENS_6vectorIfNS_9allocatorIfEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE20ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE22EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE22EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE22EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE23EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE23EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE23EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE24EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE24EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE24EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE25EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE25EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE25EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE26EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE26EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE26EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE27EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE27EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE27EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE28EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE28EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE28EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE30EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE30EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE30EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE31EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE31EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE31EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE32EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvRKbEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvRKbEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE32EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE32EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE34EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE34EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE34EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE36EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIfE17register_listenerENS_8functionIFvRKfEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIfE17register_listenerENSt3__18functionIFvRKfEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE36EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE36EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE37EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE37EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE37EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE38EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE38EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE38EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE39EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE39EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE39EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE40EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE40EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE40EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE41EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE41EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE41EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE42EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE42EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE42EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE43EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE43EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE43EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE44EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE44EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE44EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE46EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE46EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE46EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE47ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE47ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE47ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE48EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE48EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE48EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE49E13CAOrientationEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENS_8functionIFvRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserI13CAOrientationEE
ZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENSt3__18functionIFvRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE49E13CAOrientationEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKS9_E_NS_9allocatorISK_EEFvSJ_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE49E13CAOrientationEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS6_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE50E13CAOrientationEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE50E13CAOrientationEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKS9_E_NS_9allocatorISK_EEFvSJ_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE50E13CAOrientationEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS6_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE51EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE51EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE51EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE52EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE52EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE52EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE55EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE55EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE55EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE56EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE56EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE56EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF8ArrayRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF8ArrayRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF8ArrayRefEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE60EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE60EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE60EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE61EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE61EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE61EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE62EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE62EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE62EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF7DataRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF7DataRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF7DataRefEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE64EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE64EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE64EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
NSt3__120__shared_ptr_pointerIPN2vp3sim20Property_List_WriterENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_3sim20Property_List_WriterEEE
AN5caulk19bad_expected_accessIN2vp3rpb5ErrorEEE
N2vp2vx10components24Phone_Proximity_DetectorE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS8_36create_state_for_darwin_notificationIZNS3_10components24Phone_Proximity_Detector9configureEvE3$_0EEDaOT_PKcEUlyE_JNS4_12Time_StampedIyEEEEESE_SG_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESF_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS1_12Time_StampedIyEEEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS5_36create_state_for_darwin_notificationIZNS0_10components24Phone_Proximity_Detector9configureEvE3$_0EEDaOT_PKcEUlyE_JNS1_12Time_StampedIyEEEEESB_SD_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESC_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcEUlRT_E_NS_9allocatorIS9_EEFvRNS2_6darwin18Notification_ProxyEEEE
NSt3__110__function6__baseIFvRN2vp6darwin18Notification_ProxyEEEE
ZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcEUlRT_E_
NSt3__120__shared_ptr_pointerIPN2vp6darwin21Notification_ListenerEZZNS1_2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcENKUlT_E_clIS3_EEDaS9_EUlS4_E_NS_9allocatorIS3_EEEE
ZZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcENKUlT_E_clINS_6darwin21Notification_ListenerEEEDaS4_EUlPS8_E_
N5caulk19bad_expected_accessIN2vp6darwin18Notification_ErrorEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS4_12Time_StampedIyEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNSA_36create_state_for_darwin_notificationEPKcEUlT_E0_JS7_EEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_EEERNS4_13State_ManagerESE_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionINS1_12Time_StampedIyEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS7_36create_state_for_darwin_notificationEPKcEUlT_E0_JS4_EEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_EEERNS1_13State_ManagerESB_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
N2vp2vx2io5nodes23Far_End_Voice_Proc_NodeE
N2vp2vx10components30Speech_Activity_Event_ListenerE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components30Speech_Activity_Event_Listener9configureEvE3$_0JbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components30Speech_Activity_Event_Listener9configureEvE3$_0JbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__120__shared_ptr_pointerIPN2vp6darwin12NotificationENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_6darwin12NotificationEEE
NSt3__120__shared_ptr_emplaceIN2vp6darwin19Notification_CenterENS1_9AllocatorISt4byteEEEE
N2vp2vx8database2v112Data_ManagerE
N2vp2vx8database2v121Database_Data_ManagerE
N2vp2vx2io5ports28Audio_Ring_Buffer_Input_PortE
N2vp2vx2io5ports29Audio_Ring_Buffer_Output_PortE
N2vp2vx2io5wires20Audio_Converter_Wire15Source_TerminalE
N2vp2vx2io5wires20Audio_Converter_Wire20Destination_TerminalE
N2vp2vx2io4WireE
N2vp2vx2io5wires20Audio_Converter_WireE
N2vp2vx9ComponentE
N2vp7utility19Property_List_StoreE
N2vp7utility25Property_List_Parser_CoreE
NSt3__120__shared_ptr_pointerIPN2vp7utility19Property_List_StoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp7utility19Property_List_StoreEEE
N2vp7utility31Property_List_String_Key_LookupE
NSt3__120__shared_ptr_pointerIPN2vp7utility31Property_List_String_Key_LookupENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp7utility31Property_List_String_Key_LookupEEE
N2vp2vx33IO_Speech_Activity_Event_ListenerE
N2vp2vx41IO_Speech_Activity_Event_Listener_FactoryE
N5caulk10concurrent7details15rt_message_callIZN2vp2vx33IO_Speech_Activity_Event_Listener7processENS4_2io6MomentERNS6_4NodeEE3$_3J28AUVoiceIOSpeechActivityEventEEE
N5caulk10concurrent7details12message_callIZN2vp2vx33IO_Speech_Activity_Event_Listener7processENS4_2io6MomentERNS6_4NodeEE3$_3J28AUVoiceIOSpeechActivityEventEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS2_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEE17register_listenerENSt3__18functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx33IO_Speech_Activity_Event_Listener38register_event_listener_block_listenerEvE3$_0NS_9allocatorIS5_EEFvRKNS2_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEEE
NSt3__110__function6__baseIFvRKN2vp5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEEE
ZN2vp2vx33IO_Speech_Activity_Event_Listener38register_event_listener_block_listenerEvE3$_0
NSt3__110__function6__funcIZN2vp2vx41IO_Speech_Activity_Event_Listener_Factory38set_should_disable_and_reset_on_unmuteENS3_9data_flow5StateIbEEE3$_4NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx41IO_Speech_Activity_Event_Listener_Factory38set_should_disable_and_reset_on_unmuteENS0_9data_flow5StateIbEEE3$_4
N2vp2vx28Uplink_Configuration_ManagerE
N2vp2vx29Uplink_Configuration_DelegateE
N2vp2vx30Downlink_Configuration_ManagerE
N2vp2vx31Downlink_Configuration_DelegateE
N2vp2vx24IO_Port_Factory_ProviderE
N2vp2vx2io12Port_FactoryE
N2vp2vx15IO_Port_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_15IO_Port_Factory14set_is_enabledENS3_9data_flow5StateIbEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_15IO_Port_Factory14set_is_enabledENS0_9data_flow5StateIbEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_15IO_Port_Factory14set_is_enabledENS3_9data_flow5StateIbEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_15IO_Port_Factory14set_is_enabledENS0_9data_flow5StateIbEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvjRKjEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvjRKjEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Port_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Port_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Port_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Port_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
ZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENSt3__18functionIFvjRKS4_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_15IO_Port_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
NSt3__110__function6__baseIFvjRKN2CA17StreamDescriptionEEEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_15IO_Port_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_15IO_Port_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_15IO_Port_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZNK2vp2vx2io6Object11Log_Context15get_descriptionERNS_13basic_ostreamIcNS_11char_traitsIcEEEEE3$_5NS_9allocatorISC_EEFvRKS6_EEE
NSt3__110__function6__baseIFvRKN2vp2vx2io6Object11Log_ContextEEEE
ZNK2vp2vx2io6Object11Log_Context15get_descriptionERNSt3__113basic_ostreamIcNS4_11char_traitsIcEEEEE3$_5
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N5boost16exception_detail19error_info_injectorINS_16bad_lexical_castEEE
N5boost16bad_lexical_castE
N5boost16exception_detail10clone_baseE
N2vp2vx2io4PortE
N2vp2vx2io13Node_TerminalE
N2vp2vx2io10Input_PortE
N2vp2vx2io11Output_PortE
N2vp2vx10components12CPU_ProfilerE
N2vp2vx2io5GraphE
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE4$_14NS_9allocatorIS8_EEFNS2_8ExpectedINS_6vectorINS6_14Parameter_InfoENS2_9AllocatorISD_EEEENS6_5ErrorEEENS6_5ScopeEEEE
NSt3__110__function6__baseIFN2vp8ExpectedINS_6vectorINS2_3rpb14Parameter_InfoENS2_9AllocatorIS6_EEEENS5_5ErrorEEENS5_5ScopeEEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE4$_14
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE3$_0NS_9allocatorIS8_EEFNS2_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
NSt3__110__function6__baseIFN2vp8ExpectedIfNS2_3rpb5ErrorEEEjNS4_5ScopeEjEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE3$_0
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE4$_15NS_9allocatorIS8_EEFNS2_8ExpectedINS_6vectorINS6_13Property_InfoENS2_9AllocatorISD_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE4$_15
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE3$_1NS_9allocatorIS8_EEFNS2_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE3$_1
NSt3__120__shared_ptr_pointerIPN2vp2vx2io13Node_DelegateENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io13Node_DelegateEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io12Node_CommandENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io12Node_CommandEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4NodeENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4NodeEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4PortENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4PortEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4WireENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4WireEEE
N2vp2vx10components26Wireless_Charging_DetectorE
ffF@tmceelcaegmafhcegtcegmceedrmbpsdtmceelcaegmafhcegtcegmceedrmbpsdN2vp2vx2io13Node_DelegateE
N2vp2vx39IO_ExpanseAGC_Adaptive_Control_DelegateE
N2vp2vx47IO_ExpanseAGC_Adaptive_Control_Delegate_FactoryE
NSt3__120__shared_ptr_emplaceIN2vp2vx2io6Object11Log_ContextENS_9allocatorIS5_EEEE
N2vp2vx25DSP_Node_Factory_ProviderE
N2vp15No_Copy_No_MoveE
N2vp2vx2io12Node_FactoryE
N2vp2vx16DSP_Node_FactoryE
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E_NS_9allocatorISH_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENSI_IcEEEERKN2CA17StreamDescriptionEEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN2CA17StreamDescriptionEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E0_NS_9allocatorISH_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENSI_IcEEEERKN2CA17StreamDescriptionEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E0_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E_NS_9allocatorISD_EEFvNS3_18Graph_Parameter_IDEN10applesauce2CF9NumberRefEEEE
NSt3__110__function6__baseIFvN2vp2vx18Graph_Parameter_IDEN10applesauce2CF9NumberRefEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E0_NS_9allocatorISD_EEFvNS3_17Graph_Property_IDEN10applesauce2CF13DictionaryRefEEEE
NSt3__110__function6__baseIFvN2vp2vx17Graph_Property_IDEN10applesauce2CF13DictionaryRefEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E0_
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_22DSP_Node_ConfigurationEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_22DSP_Node_ConfigurationEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_22DSP_Node_ConfigurationEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS3_22DSP_Node_ConfigurationEZNS3_16DSP_Node_Factory17set_configurationENS3_9data_flow5StateIS5_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS5_E_NS_9allocatorISK_EEFvjSJ_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx22DSP_Node_ConfigurationEEEE
NSt3__120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEEE
ZN2vp2vx14observe_uplinkINS0_22DSP_Node_ConfigurationEZNS0_16DSP_Node_Factory17set_configurationENS0_9data_flow5StateIS2_EEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS5_IT_EET0_EUljRKS2_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS3_22DSP_Node_ConfigurationEZNS3_16DSP_Node_Factory17set_configurationENS3_9data_flow5StateIS5_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS5_E_NS_9allocatorISK_EEFvjSJ_EEE
ZN2vp2vx16observe_downlinkINS0_22DSP_Node_ConfigurationEZNS0_16DSP_Node_Factory17set_configurationENS0_9data_flow5StateIS2_EEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS5_IT_EET0_EUljRKS2_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKjEEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_4EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_4EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory23set_block_size_is_fixedENS3_9data_flow5StateIbEEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory23set_block_size_is_fixedENS0_9data_flow5StateIbEEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory23set_block_size_is_fixedENS3_9data_flow5StateIbEEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory23set_block_size_is_fixedENS0_9data_flow5StateIbEEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory18set_fft_block_sizeENS3_9data_flow5StateIjEEE3$_6EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory18set_fft_block_sizeENS0_9data_flow5StateIjEEE3$_6EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory18set_fft_block_sizeENS3_9data_flow5StateIjEEE3$_6EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory18set_fft_block_sizeENS0_9data_flow5StateIjEEE3$_6EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvjRKdEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvjRKdEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIdZNS3_16DSP_Node_Factory15set_sample_rateENS3_9data_flow5StateIdEEE3$_7EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKdE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKdEEE
ZN2vp2vx14observe_uplinkIdZNS0_16DSP_Node_Factory15set_sample_rateENS0_9data_flow5StateIdEEE3$_7EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKdE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIdZNS3_16DSP_Node_Factory15set_sample_rateENS3_9data_flow5StateIdEEE3$_7EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKdE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIdZNS0_16DSP_Node_Factory15set_sample_rateENS0_9data_flow5StateIdEEE3$_7EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKdE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENS_8functionIFvjRKS7_EEEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory16set_input_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE3$_9EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory16set_input_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE3$_9EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory16set_input_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE3$_9EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory16set_input_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE3$_9EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory17set_output_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE4$_11EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory17set_output_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE4$_11EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory17set_output_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE4$_11EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory17set_output_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE4$_11EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF9NumberRefEE17register_listenerENS_8functionIFvjRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF9NumberRefEE17register_listenerENSt3__18functionIFvjRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN10applesauce2CF9NumberRefEZNS3_16DSP_Node_Factory22set_parameter_overrideENS3_18Graph_Parameter_IDENS3_9data_flow5StateIS7_EEE4$_14EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
NSt3__110__function6__baseIFvjRKN10applesauce2CF9NumberRefEEEE
ZN2vp2vx14observe_uplinkIN10applesauce2CF9NumberRefEZNS0_16DSP_Node_Factory22set_parameter_overrideENS0_18Graph_Parameter_IDENS0_9data_flow5StateIS4_EEE4$_14EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN10applesauce2CF9NumberRefEZNS3_16DSP_Node_Factory22set_parameter_overrideENS3_18Graph_Parameter_IDENS3_9data_flow5StateIS7_EEE4$_14EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
ZN2vp2vx16observe_downlinkIN10applesauce2CF9NumberRefEZNS0_16DSP_Node_Factory22set_parameter_overrideENS0_18Graph_Parameter_IDENS0_9data_flow5StateIS4_EEE4$_14EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvjRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvjRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN10applesauce2CF13DictionaryRefEZNS3_16DSP_Node_Factory21set_property_overrideENS3_17Graph_Property_IDENS3_9data_flow5StateIS7_EEE4$_17EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
NSt3__110__function6__baseIFvjRKN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx14observe_uplinkIN10applesauce2CF13DictionaryRefEZNS0_16DSP_Node_Factory21set_property_overrideENS0_17Graph_Property_IDENS0_9data_flow5StateIS4_EEE4$_17EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN10applesauce2CF13DictionaryRefEZNS3_16DSP_Node_Factory21set_property_overrideENS3_17Graph_Property_IDENS3_9data_flow5StateIS7_EEE4$_17EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
ZN2vp2vx16observe_downlinkIN10applesauce2CF13DictionaryRefEZNS0_16DSP_Node_Factory21set_property_overrideENS0_17Graph_Property_IDENS0_9data_flow5StateIS4_EEE4$_17EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory33set_should_enable_audio_recordersENS3_9data_flow5StateIbEEE4$_18EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory33set_should_enable_audio_recordersENS0_9data_flow5StateIbEEE4$_18EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory33set_should_enable_audio_recordersENS3_9data_flow5StateIbEEE4$_18EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory33set_should_enable_audio_recordersENS0_9data_flow5StateIbEEE4$_18EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory26set_should_connect_to_AUPBENS3_9data_flow5StateIbEEE4$_19EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory26set_should_connect_to_AUPBENS0_9data_flow5StateIbEEE4$_19EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory26set_should_connect_to_AUPBENS3_9data_flow5StateIbEEE4$_19EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory26set_should_connect_to_AUPBENS0_9data_flow5StateIbEEE4$_19EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory25set_should_connect_to_RPBENS3_9data_flow5StateIbEEE4$_20EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory25set_should_connect_to_RPBENS0_9data_flow5StateIbEEE4$_20EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory25set_should_connect_to_RPBENS3_9data_flow5StateIbEEE4$_20EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory25set_should_connect_to_RPBENS0_9data_flow5StateIbEEE4$_20EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE4$_21EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE4$_21EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE4$_21EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE4$_21EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE4$_22EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE4$_22EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE4$_22EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE4$_22EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
N2vp2vx43IO_Far_End_Voice_Proc_Node_Factory_ProviderE
N2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS2_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEE17register_listenerENS_8functionIFvjRKSE_EEEEUljRKNS4_5ValueEE_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx9data_flow5StateINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEE17register_listenerENSt3__18functionIFvjRKSB_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS2_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEZNS3_34IO_Far_End_Voice_Proc_Node_Factory15set_input_blockENS3_9data_flow5StateISD_EEE3$_0EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSG_IT_EET0_EUljRKSD_E_NS_9allocatorISS_EEFvjSR_EEE
NSt3__110__function6__baseIFvjRKN2vp5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEEE
ZN2vp2vx16observe_downlinkINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEZNS0_34IO_Far_End_Voice_Proc_Node_Factory15set_input_blockENS0_9data_flow5StateISA_EEE3$_0EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSD_IT_EET0_EUljRKSA_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_34IO_Far_End_Voice_Proc_Node_Factory18set_max_block_sizeENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_34IO_Far_End_Voice_Proc_Node_Factory18set_max_block_sizeENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_34IO_Far_End_Voice_Proc_Node_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_34IO_Far_End_Voice_Proc_Node_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
N2vp2vx2io5nodes17Mic_Ref_Sync_NodeE
N2vp2vx10components14Audio_InjectorE
N2vp2vx24IO_Wire_Factory_ProviderE
N2vp2vx2io12Wire_FactoryE
N2vp2vx15IO_Wire_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEE17register_listenerENS_8functionIFvjRKSA_EEEEUljRKNS4_5ValueEE_NS_9allocatorISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEE17register_listenerENS3_8functionIFvjRKS8_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_15IO_Wire_Factory20set_storage_capacityENS3_9data_flow5StateIS9_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
NSt3__110__function6__baseIFvjRKNS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEE
ZN2vp2vx14observe_uplinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_15IO_Wire_Factory20set_storage_capacityENS0_9data_flow5StateIS7_EEE3$_3EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_15IO_Wire_Factory20set_storage_capacityENS3_9data_flow5StateIS9_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx16observe_downlinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_15IO_Wire_Factory20set_storage_capacityENS0_9data_flow5StateIS7_EEE3$_3EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
N2vp2vx21IO_Power_Log_DelegateE
N2vp2vx2io21Node_Delegate_FactoryE
N2vp2vx29IO_Power_Log_Delegate_FactoryE
N5caulk19bad_expected_accessIN2vp2vx2io5ErrorEEE
N5caulk10concurrent7details15rt_message_callIZZN2vp2vx21IO_Power_Log_Delegate14log_power_dataEvENK3$_2clEvEUlRKNSt3__110shared_ptrINS3_8services9Power_LogEEEE_JRSB_EEE
N5caulk10concurrent7details12message_callIZZN2vp2vx21IO_Power_Log_Delegate14log_power_dataEvENK3$_2clEvEUlRKNSt3__110shared_ptrINS3_8services9Power_LogEEEE_JRSB_EEE
N2vp2vx22IO_Node_Audio_CapturerE
N2vp2vx30IO_Node_Audio_Capturer_FactoryE
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Capturer_Factory33set_should_enable_audio_capturersENS3_9data_flow5StateIbEEE3$_0NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx30IO_Node_Audio_Capturer_Factory33set_should_enable_audio_capturersENS0_9data_flow5StateIbEEE3$_0
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE17register_listenerENS_8functionIFvjRKSB_EEEEUljRKNS4_5ValueEE_NS9_ISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE17register_listenerENS3_8functionIFvjRKS9_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_globalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EEEUljRKSA_E_NS8_ISL_EEFvjSK_EEE
NSt3__110__function6__baseIFvjRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZN2vp2vx14observe_globalINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EEEUljRKS8_E_
N2vp2vx32IO_Smart_Cover_Detector_DelegateE
N2vp2vx40IO_Smart_Cover_Detector_Delegate_FactoryE
N2vp2vx34IO_Property_Setter_Command_FactoryE
N2vp2vx2io5ports23Audio_Buffer_Input_PortE
N2vp2vx2io5ports24Audio_Buffer_Output_PortE
N2vp2vx38IO_Wireless_Charging_Detector_DelegateE
N2vp2vx46IO_Wireless_Charging_Detector_Delegate_FactoryE
N2vp2vx28IO_Parameter_Setter_DelegateE
N2vp2vx36IO_Parameter_Setter_Delegate_FactoryE
NSt3__110__function6__funcIZN2vp2vx28IO_Parameter_Setter_Delegate6notifyENS3_2io5EventERNS5_4NodeEE3$_1NS_9allocatorIS9_EEFvRKfEEE
ZN2vp2vx28IO_Parameter_Setter_Delegate6notifyENS0_2io5EventERNS2_4NodeEE3$_1
N2vp2vx27IO_Parameter_Setter_CommandE
N2vp2vx35IO_Parameter_Setter_Command_FactoryE
NSt3__110__function6__funcIZN2vp2vx27IO_Parameter_Setter_Command24set_parameter_controllerENS_8weak_ptrINS3_2io20Parameter_ControllerEEEE3$_1NS_9allocatorIS9_EEFvRKfEEE
ZN2vp2vx27IO_Parameter_Setter_Command24set_parameter_controllerENSt3__18weak_ptrINS0_2io20Parameter_ControllerEEEE3$_1
N2vp2vx37IO_Mic_Ref_Sync_Node_Factory_ProviderE
N2vp2vx28IO_Mic_Ref_Sync_Node_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_0EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_0EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_mic_formatENS3_9data_flow5StateIS6_EEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_mic_formatENS0_9data_flow5StateIS3_EEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_ref_formatENS3_9data_flow5StateIS6_EEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_ref_formatENS0_9data_flow5StateIS3_EEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIiE17register_listenerENS_8functionIFvjRKiEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIiE17register_listenerENSt3__18functionIFvjRKiEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIiZNS3_28IO_Mic_Ref_Sync_Node_Factory22set_mic_ref_time_deltaENS3_9data_flow5StateIiEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKiE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKiEEE
ZN2vp2vx14observe_uplinkIiZNS0_28IO_Mic_Ref_Sync_Node_Factory22set_mic_ref_time_deltaENS0_9data_flow5StateIiEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKiE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_28IO_Mic_Ref_Sync_Node_Factory34set_ref_audio_ring_buffer_capacityENS3_9data_flow5StateIS9_EEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx14observe_uplinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_28IO_Mic_Ref_Sync_Node_Factory34set_ref_audio_ring_buffer_capacityENS0_9data_flow5StateIS7_EEE3$_4EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
NSt3__120__shared_ptr_emplaceIN2vp2vx9data_flow6EngineENS1_9AllocatorIS4_EEEE
N2vp2vx15Voice_ProcessorE
N2vp2vx25Voice_Processor_InterfaceE
N2vp2vx27Voice_Processor_State_OwnerE
N2vp2vx29Voice_Processor_State_ManagerE
N2vp2vx9data_flow14State_ObserverE
N2vp2vx30Voice_Processor_State_ObserverE
N2vp2vx25DSP_Node_Factory_DelegateE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEEN2vp24Real_Time_Safe_AllocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEEN2vp24Real_Time_Safe_AllocatorIcEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_21Configuration_ContextEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_12_GLOBAL__N_123make_constructor_lambdaIS6_EEDavEUlDpRKT_E_JNS3_14Operation_ModeENS3_11Chat_FlavorENS3_15Input_Port_TypeENS3_16Output_Port_TypeENS3_13Port_Sub_TypeENS3_18Port_Endpoint_TypeEbbbbbbbbjjjjjjjdbbEEESD_OT0_DpRKNS4_5StateIT1_EEEUlSH_E_JSJ_SK_SL_SM_SN_SO_bbbbbbbbjjjjjjjdbbEEERNS4_13State_ManagerET_DpRKNSR_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS17_E_NS_9allocatorIS1C_EEFvS1A_S1B_EEE
NSt3__110__function6__baseIFvNS_4spanIPKN2vp2vx9data_flow5ValueELm18446744073709551615EEEPS6_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_14Operation_ModeEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_15Input_Port_TypeEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_18Port_Endpoint_TypeEEE
N2vp2vx9data_flow5Value14Type_ID_EraserIjEE
N2vp2vx9data_flow5Value14Type_ID_EraserIdEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_21Configuration_ContextEEE
ZN2vp2vx9data_flow14State_FunctionINS0_21Configuration_ContextEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_12_GLOBAL__N_123make_constructor_lambdaIS3_EEDavEUlDpRKT_E_JNS0_14Operation_ModeENS0_11Chat_FlavorENS0_15Input_Port_TypeENS0_16Output_Port_TypeENS0_13Port_Sub_TypeENS0_18Port_Endpoint_TypeEbbbbbbbbjjjjjjjdbbEEESA_OT0_DpRKNS1_5StateIT1_EEEUlSE_E_JSG_SH_SI_SJ_SK_SL_bbbbbbbbjjjjjjjdbbEEERNS1_13State_ManagerET_DpRKNSO_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS15_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E_JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESC_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E_JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSB_EEERNS1_13State_ManagerES9_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E0_JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESC_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E0_JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSB_EEERNS1_13State_ManagerES9_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS_9allocatorIS18_EEFvS16_S17_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN2CA17StreamDescriptionEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_SR_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_20Global_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_global_configurationEvENK4$_35clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_20Global_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_20Global_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_global_configurationEvENK4$_35clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_20Uplink_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_uplink_configurationEvENK4$_36clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_20Uplink_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_20Uplink_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_uplink_configurationEvENK4$_36clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22DSP_Node_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor17get_configurationENS3_18Uplink_DSP_Node_IDEENK4$_37clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_22DSP_Node_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor17get_configurationENS0_18Uplink_DSP_Node_IDEENK4$_37clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_30DSP_Node_Configuration_OptionsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_optionsENS3_18Uplink_DSP_Node_IDEENK4$_38clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_30DSP_Node_Configuration_OptionsEEE
ZN2vp2vx9data_flow14State_FunctionINS0_30DSP_Node_Configuration_OptionsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_optionsENS0_18Uplink_DSP_Node_IDEENK4$_38clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_uplink_SRC_algorithmEvENK4$_39clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_uplink_SRC_algorithmEvENK4$_39clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor22get_uplink_SRC_qualityEvENK4$_40clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor22get_uplink_SRC_qualityEvENK4$_40clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32get_uplink_wire_storage_capacityEvENK4$_41clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16chrono8durationIxNS4_5ratioILl1ELl1000EEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32get_uplink_wire_storage_capacityEvENK4$_41clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS_9allocatorIS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_SR_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIiEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor36get_uplink_mic_ref_sample_time_deltaEvENK4$_42clEvEUlDpRKT_E_JNS3_20Uplink_ConfigurationEddjjddjjjjjjjjjEEEDaOT_DpRKNS4_5StateIT0_EEEUlSF_E_JSH_ddjjddjjjjjjjjjEEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIiEE
ZN2vp2vx9data_flow14State_FunctionIiEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor36get_uplink_mic_ref_sample_time_deltaEvENK4$_42clEvEUlDpRKT_E_JNS0_20Uplink_ConfigurationEddjjddjjjjjjjjjEEEDaOT_DpRKNS1_5StateIT0_EEEUlSC_E_JSE_ddjjddjjjjjjjjjEEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor37get_uplink_mic_ref_delay_millisecondsEvENK4$_43clEvEUlT_T0_E_JiN2CA17StreamDescriptionEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JiSG_EEERNS4_13State_ManagerESC_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIfEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor37get_uplink_mic_ref_delay_millisecondsEvENK4$_43clEvEUlT_T0_E_JiN2CA17StreamDescriptionEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JiSD_EEERNS1_13State_ManagerES9_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor41get_uplink_ref_audio_ring_buffer_capacityEvENK4$_44clEvEUlRKT_E_JNS3_20Uplink_ConfigurationEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor41get_uplink_ref_audio_ring_buffer_capacityEvENK4$_44clEvEUlRKT_E_JNS0_20Uplink_ConfigurationEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22Downlink_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_downlink_configurationEvENK4$_45clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_22Downlink_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_22Downlink_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_downlink_configurationEvENK4$_45clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22DSP_Node_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor17get_configurationENS3_20Downlink_DSP_Node_IDEENK4$_46clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_22DSP_Node_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor17get_configurationENS0_20Downlink_DSP_Node_IDEENK4$_46clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_30DSP_Node_Configuration_OptionsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_optionsENS3_20Downlink_DSP_Node_IDEENK4$_47clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_30DSP_Node_Configuration_OptionsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_optionsENS0_20Downlink_DSP_Node_IDEENK4$_47clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_downlink_SRC_algorithmEvENK4$_48clEvEUlRKNS3_22Downlink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_downlink_SRC_algorithmEvENK4$_48clEvEUlRKNS0_22Downlink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_downlink_SRC_qualityEvENK4$_49clEvEUlRKNS3_22Downlink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_downlink_SRC_qualityEvENK4$_49clEvEUlRKNS0_22Downlink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor34get_downlink_wire_storage_capacityEvENK4$_50clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor34get_downlink_wire_storage_capacityEvENK4$_50clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor40get_downlink_software_volume_pre_gain_dBEvENK4$_51clEvEUlRKNS3_22Downlink_ConfigurationEfE_JSC_fEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_fEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor40get_downlink_software_volume_pre_gain_dBEvENK4$_51clEvEUlRKNS0_22Downlink_ConfigurationEfE_JS9_fEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_fEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor30get_spatial_head_tracking_modeEvENK4$_52clEvEUlNS3_14Operation_ModeENS3_35Spatial_Head_Tracking_ConfigurationEE_JSC_SD_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_SD_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor30get_spatial_head_tracking_modeEvENK4$_52clEvEUlNS0_14Operation_ModeENS0_35Spatial_Head_Tracking_ConfigurationEE_JS9_SA_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_SA_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor33get_spatial_head_tracking_enabledEvENK4$_53clEvEUlNS3_35Spatial_Head_Tracking_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor33get_spatial_head_tracking_enabledEvENK4$_53clEvEUlNS0_35Spatial_Head_Tracking_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvjRKbEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvjRKbEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZZNS3_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlbE_EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKbEEE
ZN2vp2vx14observe_uplinkIbZZNS0_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlbE_EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor39get_should_enable_graph_audio_recordersEvENK4$_55clEvEUlbE_JbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor39get_should_enable_graph_audio_recordersEvENK4$_55clEvEUlbE_JbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_should_connect_to_AUPBEvENK4$_56clEvEUlbbE_JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_should_connect_to_AUPBEvENK4$_56clEvEUlbbE_JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_should_connect_to_RPBEvENK4$_57clEvEUlbbE_JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_should_connect_to_RPBEvENK4$_57clEvEUlbbE_JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlRKNS3_20Global_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlRKNS0_20Global_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx14observe_globalIbZZNS3_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlbE_EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_globalIbZZNS0_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlbE_EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_mic_trim_gains_dsp_property_override_stateEvE4$_59JNS3_15Input_Port_TypeEN2CA17StreamDescriptionENS_6vectorIfNS_9allocatorIfEEEENS7_8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SH_SL_SM_EEERNS4_13State_ManagerESO_SV_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS14_E_NSJ_IS19_EEFvS17_S18_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF8ArrayRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_mic_trim_gains_dsp_property_override_stateEvE4$_59JNS0_15Input_Port_TypeEN2CA17StreamDescriptionENSt3__16vectorIfNSF_9allocatorIfEEEENS4_8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SE_SJ_SK_EEERNS1_13State_ManagerESM_ST_EUlNSF_4spanIPKNS1_5ValueELm18446744073709551615EEEPS12_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor63create_mic_noise_suppression_level_dsp_parameter_override_stateEvE4$_60JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF9NumberRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor63create_mic_noise_suppression_level_dsp_parameter_override_stateEvE4$_60JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_mic_post_gain_dsp_parameter_override_stateEvE4$_61JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_mic_post_gain_dsp_parameter_override_stateEvE4$_61JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor58create_mic_bluetooth_eq_preset_dsp_property_override_stateEvE4$_62JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor58create_mic_bluetooth_eq_preset_dsp_property_override_stateEvE4$_62JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor70create_mic_Uplink_Noise_Suppression_Bypass_dsp_property_override_stateEvE4$_63JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor70create_mic_Uplink_Noise_Suppression_Bypass_dsp_property_override_stateEvE4$_63JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor59create_speaker_calibration_data_dsp_property_override_stateEvE4$_64JNS3_16Output_Port_TypeES8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_S8_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor59create_speaker_calibration_data_dsp_property_override_stateEvE4$_64JNS0_16Output_Port_TypeES5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_S5_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_ref_post_gain_dsp_parameter_override_stateEvE4$_65JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_ref_post_gain_dsp_parameter_override_stateEvE4$_65JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor52create_ref_port_sensitivity_parameter_override_stateEvE4$_66JNS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_jEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor52create_ref_port_sensitivity_parameter_override_stateEvE4$_66JNS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_jEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor58create_ref_bluetooth_eq_preset_dsp_property_override_stateEvE4$_67JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor58create_ref_bluetooth_eq_preset_dsp_property_override_stateEvE4$_67JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor62create_ref_port_volume_limit_curve_dsp_property_override_stateEvE4$_68JNS3_16Output_Port_TypeENS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_jEEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor62create_ref_port_volume_limit_curve_dsp_property_override_stateEvE4$_68JNS0_16Output_Port_TypeENS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_jEEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor61create_speaker_iv_data_source_ids_dsp_property_override_stateEvE4$_69JNS3_16Output_Port_TypeENS_6vectorIjNS_9allocatorIjEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NSH_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIjNS4_9allocatorIjEEEEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor61create_speaker_iv_data_source_ids_dsp_property_override_stateEvE4$_69JNS0_16Output_Port_TypeENSt3__16vectorIjNSD_9allocatorIjEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SH_EEERNS1_13State_ManagerESJ_SQ_EUlNSD_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor62create_speaker_calibration_data_cf_dsp_property_override_stateEvE4$_70JNS3_16Output_Port_TypeENS7_8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_EEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor62create_speaker_calibration_data_cf_dsp_property_override_stateEvE4$_70JNS0_16Output_Port_TypeENS4_8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_EEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
N2vp2vx9data_flow5Value14Type_ID_EraserINS1_12Time_StampedIN10applesauce2CF13DictionaryRefEEEEE
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS3_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS9_E_NS_9allocatorISE_EEFvNSC_13DictionaryRefEEEE
NSt3__110__function6__baseIFvN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS6_E_
NSt3__120__shared_ptr_pointerIPN2vp2cf21Notification_ListenerEZNS1_2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS5_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS4_E_NS_9allocatorIS3_EEEE
ZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlPNS_2cf21Notification_ListenerEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS3_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlSD_E0_JNS4_12Time_StampedINSG_13DictionaryRefEEEEEERNS4_13State_ManagerESD_DpRKNS4_5StateIT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlSA_E0_JNS1_12Time_StampedINSD_13DictionaryRefEEEEEERNS1_13State_ManagerESA_DpRKNS1_5StateIT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor61create_personal_audio_HLC_product_id_parameter_override_stateEvE4$_72JNS3_16Output_Port_TypeENS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_jEEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor61create_personal_audio_HLC_product_id_parameter_override_stateEvE4$_72JNS0_16Output_Port_TypeENS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_jEEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor54create_metric_reporter_ids_dsp_property_override_stateEvE4$_73JNS_6vectorIxNS_9allocatorIxEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NSG_IS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor54create_metric_reporter_ids_dsp_property_override_stateEvE4$_73JNSt3__16vectorIxNSC_9allocatorIxEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerESI_SP_EUlNSC_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
N5caulk19bad_expected_accessIN2vp2vx10Error_CodeEEE
N8nlohmann6detail9exceptionE
NSt3__120__shared_ptr_emplaceIN5caulk7details19lifetime_guard_baseIN2vp2vx15Voice_ProcessorEE13control_blockENS_9allocatorIS8_EEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx22Configuration_DatabaseENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx22Configuration_DatabaseEEE
NSt3__110__function6__funcIZN2vp2vx15Voice_ProcessorC1ERKNS2_7ContextENS_10shared_ptrINS2_16Service_ProviderEEENS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISC_EEEEE4$_83NS_9allocatorISG_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN2vp2vx15Voice_ProcessorC1ERKNS_7ContextENSt3__110shared_ptrINS_16Service_ProviderEEENS5_10unique_ptrINS0_22Configuration_DatabaseENS5_14default_deleteISA_EEEEE4$_83
NSt3__110__function6__funcIZN2vp2vx15Voice_ProcessorC1ERKNS2_7ContextENS_10shared_ptrINS2_16Service_ProviderEEENS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISC_EEEEE4$_84NS_9allocatorISG_EEFvvEEE
ZN2vp2vx15Voice_ProcessorC1ERKNS_7ContextENSt3__110shared_ptrINS_16Service_ProviderEEENS5_10unique_ptrINS0_22Configuration_DatabaseENS5_14default_deleteISA_EEEEE4$_84
NSt3__120__shared_ptr_pointerIPN2vp2vx9ComponentENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_2vx9ComponentEEE
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor9configureEvE4$_85NS_9allocatorIS5_EEFvRS4_EEE
NSt3__110__function6__baseIFvRN2vp2vx15Voice_ProcessorEEEE
ZN2vp2vx15Voice_Processor9configureEvE4$_85
NSt3__110__function6__funcIZNK2vp2vx15Voice_Processor12get_propertyENS3_11Property_IDERNS2_12Mutable_BlobEE3$_2NS_9allocatorIS8_EEFvRKS4_EEE
NSt3__110__function6__baseIFvRKN2vp2vx15Voice_ProcessorEEEE
ZNK2vp2vx15Voice_Processor12get_propertyENS0_11Property_IDERNS_12Mutable_BlobEE3$_2
NSt3__110__function6__funcIZNK2vp2vx15Voice_Processor17get_property_infoENS3_11Property_IDEE3$_3NS_9allocatorIS6_EEFvRKS4_EEE
ZNK2vp2vx15Voice_Processor17get_property_infoENS0_11Property_IDEE3$_3
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor12set_propertyENS3_11Property_IDERKNS2_4BlobEE3$_4NS_9allocatorIS9_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor12set_propertyENS0_11Property_IDERKNS_4BlobEE3$_4
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor27begin_uplink_initializationEvE4$_86NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor27begin_uplink_initializationEvE4$_86
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor25end_uplink_initializationEvE4$_87NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor25end_uplink_initializationEvE4$_87
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor29begin_downlink_initializationEvE4$_88NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor29begin_downlink_initializationEvE4$_88
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor27end_downlink_initializationEvE4$_89NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor27end_downlink_initializationEvE4$_89
tnroN2vp2vx15Voice_Processor14Type_ConverterIbEE
N2vp2vx8Property14Type_ConverterIbEE
N2vp2vx8Property9ConverterE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIbEE
N2vp2vx8Property19Blob_Type_ConverterIbEE
N2vp2vx8Property14Blob_ConverterE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIbEE
N2vp2vx8Property28Property_List_Type_ConverterIbEE
N2vp2vx8Property23Property_List_ConverterE
N2vp2vx15Voice_Processor21String_Type_ConverterIbEE
N2vp2vx8Property21String_Type_ConverterIbEE
N2vp2vx8Property16String_ConverterE
N2vp2vx15Voice_Processor14Type_ConverterIfEE
N2vp2vx8Property14Type_ConverterIfEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIfEE
N2vp2vx8Property19Blob_Type_ConverterIfEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIfEE
N2vp2vx8Property28Property_List_Type_ConverterIfEE
N2vp2vx15Voice_Processor21String_Type_ConverterIfEE
N2vp2vx8Property21String_Type_ConverterIfEE
N2vp2vx15Voice_Processor14Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property14Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property19Blob_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property28Property_List_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property21String_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor14Type_ConverterIjEE
N2vp2vx8Property14Type_ConverterIjEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIjEE
N2vp2vx8Property19Blob_Type_ConverterIjEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIjEE
N2vp2vx8Property28Property_List_Type_ConverterIjEE
N2vp2vx15Voice_Processor21String_Type_ConverterIjEE
N2vp2vx8Property21String_Type_ConverterIjEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_15Input_Port_TypeEEE
NSt3__120__shared_ptr_emplaceIN8nlohmann6detail21output_stream_adapterIcEENS_9allocatorIS4_EEEE
N8nlohmann6detail21output_stream_adapterIcEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE12EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE12EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterIdEE
N2vp2vx8Property14Type_ConverterIdEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIdEE
N2vp2vx8Property19Blob_Type_ConverterIdEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIdEE
N2vp2vx8Property28Property_List_Type_ConverterIdEE
N2vp2vx15Voice_Processor21String_Type_ConverterIdEE
N2vp2vx8Property21String_Type_ConverterIdEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE13EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE13EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE14EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE14EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE15EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE15EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIfZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE58EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIfZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE58EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property14Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property19Blob_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property28Property_List_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property21String_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor14Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property14Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property19Blob_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property28Property_List_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property21String_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_16Output_Port_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE23EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE23EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_13Port_Sub_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_13Port_Sub_TypeEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE32ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISI_iEERKNS2_8services14Audio_HardwareEjjERKNSF_IjEERKNSF_IT0_EESI_EUlT_SV_DpT1_E_JjSE_jjEEEDaOSV_DpRKNSF_IS10_EEEUlDpRKT_E_JjSE_jjEEERNS4_13State_ManagerESZ_DpRKNSF_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1M_E_NS_9allocatorIS1R_EEFvS1P_S1Q_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_13Port_Sub_TypeEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE32ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISF_iEERKNS_8services14Audio_HardwareEjjERKNSC_IjEERKNSC_IT0_EESF_EUlT_SS_DpT1_E_JjSB_jjEEEDaOSS_DpRKNSC_ISX_EEEUlDpRKT_E_JjSB_jjEEERNS1_13State_ManagerESW_DpRKNSC_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1K_E_
N2vp2vx15Voice_Processor14Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_18Port_Endpoint_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_18Port_Endpoint_TypeEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE33ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISI_iEERKNS2_8services14Audio_HardwareEjjERKNSF_IjEERKNSF_IT0_EESI_EUlT_SV_DpT1_E_JjSE_jjEEEDaOSV_DpRKNSF_IS10_EEEUlDpRKT_E_JjSE_jjEEERNS4_13State_ManagerESZ_DpRKNSF_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1M_E_NS_9allocatorIS1R_EEFvS1P_S1Q_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_18Port_Endpoint_TypeEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE33ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISF_iEERKNS_8services14Audio_HardwareEjjERKNSC_IjEERKNSC_IT0_EESF_EUlT_SS_DpT1_E_JjSB_jjEEEDaOSS_DpRKNSC_ISX_EEEUlDpRKT_E_JjSB_jjEEERNS1_13State_ManagerESW_DpRKNSC_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1K_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIbZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE34EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIbZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE34EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE24EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE24EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE25EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE25EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE26EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE26EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE27EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE27EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE28EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE28EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE29EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE29EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE30EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE30EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE31ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISH_iEERKNS2_8services14Audio_HardwareEjjERKNSE_IjEERKNSE_IT0_EESH_EUlT_SU_DpT1_E_JjSD_jjEEEDaOSU_DpRKNSE_ISZ_EEEUlDpRKT_E_JjSD_jjEEERNS4_13State_ManagerESY_DpRKNSE_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1L_E_NS_9allocatorIS1Q_EEFvS1O_S1P_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE31ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISE_iEERKNS_8services14Audio_HardwareEjjERKNSB_IjEERKNSB_IT0_EESE_EUlT_SR_DpT1_E_JjSA_jjEEEDaOSR_DpRKNSB_ISW_EEEUlDpRKT_E_JjSA_jjEEERNS1_13State_ManagerESV_DpRKNSB_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1J_E_
N2vp2vx9data_flow5Value14Type_ID_EraserINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property14Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property19Blob_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property21String_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property14Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property21String_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property14Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property28Property_List_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property21String_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property14Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property28Property_List_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property21String_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterI13CAOrientationEE
N2vp2vx8Property14Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterI13CAOrientationEE
N2vp2vx8Property19Blob_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterI13CAOrientationEE
N2vp2vx8Property28Property_List_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor21String_Type_ConverterI13CAOrientationEE
N2vp2vx8Property21String_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property14Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property21String_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property14Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property19Blob_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property21String_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE0EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF7TypeRefEEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE0EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
sdsuNSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7TypeRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateIS8_PKcEENS4_5StateIT_EEOT0_EUlSI_E_JjEEEDaOSI_DpRKNSH_IT0_EEEUlDpRKT_E_JjEEERNS4_13State_ManagerESI_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7TypeRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateIS5_PKcEENS1_5StateIT_EEOT0_EUlSF_E_JjEEEDaOSF_DpRKNSE_IT0_EEEUlDpRKT_E_JjEEERNS1_13State_ManagerESF_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE1EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE1EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE2EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE2EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE3EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE3EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE4EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE4EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE5EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE5EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE6EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE6EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_8optionalIdEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_ZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_20Global_ConfigurationES7_EEDaMT_T0_EUlRKSE_E_JSE_EEESF_OSH_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESG_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__18optionalIdEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__18optionalIdEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS5_ZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_20Global_ConfigurationES5_EEDaMT_T0_EUlRKSC_E_JSC_EEESD_OSF_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_DpRKNSL_IT0_EEEUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_DpRKNSP_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS18_E_NS_9allocatorIS1D_EEFvS1B_S1C_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_DpRKNSM_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS16_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_DpRKNSP_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS18_E_NS_9allocatorIS1D_EEFvS1B_S1C_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_DpRKNSM_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS16_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljjE_JjjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JjjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljjE_JjjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JjjEEERNS1_13State_ManagerET_DpRKNSD_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlddE_JddEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JddEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlddE_JddEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JddEEERNS1_13State_ManagerET_DpRKNSD_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__120__shared_ptr_pointerIPN2vp2vx16DSP_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx16DSP_Node_FactoryEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_RDoFS7_djEJdjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjEEERNS4_13State_ManagerET_DpRKNSH_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS4_RDoFS4_djEJdjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_8optionalIdEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_ZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_30DSP_Node_Configuration_OptionsES7_EEDaMT_T0_EUlRKSE_E_JSE_EEESF_OSH_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESG_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__18optionalIdEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS5_ZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_30DSP_Node_Configuration_OptionsES5_EEDaMT_T0_EUlRKSC_E_JSC_EEESD_OSF_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_DpRKNSL_IT0_EEEUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIdJbdjRKNS3_30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFSC_SE_EEUlbdjS8_ddSA_E_NS_9allocatorISK_EEFdbdjS8_ddSA_EEE
NSt3__110__function6__baseIFdbdjRKN2vp2vx30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIdJbdjRKNS0_30DSP_Node_Configuration_OptionsEddNSt3__18optionalIdEEEEENS6_8functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFSA_SC_EEUlbdjS5_ddS8_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_122make_bind_front_lambdaIRKNS_8functionIFdbdjRKNS3_30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JdjSD_ddSH_EEESM_SO_DpRKNS4_5StateISP_EEEUlDpRKST_E_JdjSD_ddSH_EEERNS4_13State_ManagerESN_S11_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NS_9allocatorIS1E_EEFvS1C_S1D_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_122make_bind_front_lambdaIRKNSt3__18functionIFdbdjRKNS0_30DSP_Node_Configuration_OptionsEddNS9_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JdjSB_ddSF_EEESK_SM_DpRKNS1_5StateISN_EEEUlDpRKSR_E_JdjSB_ddSF_EEERNS1_13State_ManagerESL_SZ_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUldE_JdEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JdEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUldE_JdEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JdEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFSF_SH_EEUlS8_dSD_E_NS_9allocatorISN_EEFjS8_dSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFSD_SF_EEUlS5_dSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_dEEESP_SR_DpRKNS4_5StateISS_EEEUlDpRKSW_E_JSD_dEEERNS4_13State_ManagerESQ_S14_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1C_E_NS_9allocatorIS1H_EEFvS1F_S1G_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_dEEESN_SP_DpRKNS1_5StateISQ_EEEUlDpRKSU_E_JSB_dEEERNS1_13State_ManagerESO_S12_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1A_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljE_JjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljE_JjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_RDoFS7_dEJdEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdEEERNS4_13State_ManagerET_DpRKNSH_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS4_RDoFS4_dEJdEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJdjdEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFS7_S9_EEUldjdE_NS_9allocatorISF_EEFjdjdEEE
NSt3__110__function6__baseIFjdjdEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJdjdEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFS5_S7_EEUldjdE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKNS_8functionIFjdjdEEEJdjdEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjdEEERNS4_13State_ManagerET_DpRKNSI_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKNSt3__18functionIFjdjdEEEJdjdEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjdEEERNS1_13State_ManagerET_DpRKNSG_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjNS_8functionIFjdjdjjEEEJdjdjjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjdjjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjNSt3__18functionIFjdjdjjEEEJdjdjjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjdjjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJdjdjjEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFS7_S9_EEUldjdjjE_NS_9allocatorISF_EEFjdjdjjEEE
NSt3__110__function6__baseIFjdjdjjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJdjdjjEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFS5_S7_EEUldjdjjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_147make_input_channel_count_override_getter_lambdaENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE4$_13JNS3_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerET_DpRKNSM_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NSE_IS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_147make_input_channel_count_override_getter_lambdaENSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEjE4$_13JNS0_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerET_DpRKNSK_IT0_EEEUlNS8_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_RKT0_E_JNS3_16Output_Port_TypeENS3_22Downlink_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_SI_EEERNS4_13State_ManagerESC_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_RKT0_E_JNS0_16Output_Port_TypeENS0_22Downlink_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_SF_EEERNS1_13State_ManagerES9_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlS8_djE_NS_9allocatorISI_EEFjS8_djEEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS8_SA_EEUlS5_djE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdjEEEJSB_djEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSB_djEEERNS4_13State_ManagerET_DpRKNSL_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS_9allocatorIS1A_EEFvS18_S19_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdjEEEJS9_djEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JS9_djEEERNS1_13State_ManagerET_DpRKNSJ_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_148make_output_channel_count_override_getter_lambdaENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE4$_14JNS3_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerET_DpRKNSM_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NSE_IS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_148make_output_channel_count_override_getter_lambdaENSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEjE4$_14JNS0_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerET_DpRKNSK_IT0_EEEUlNS8_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E_JS7_dEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_dEEERNS4_13State_ManagerESE_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E_JS4_dEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_dEEERNS1_13State_ManagerESB_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E0_JS7_dEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_dEEERNS4_13State_ManagerESE_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E0_JS4_dEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_dEEERNS1_13State_ManagerESB_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIdJbRKNS3_30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSC_SE_EEUlbS8_dddSA_E_NS_9allocatorISK_EEFdbS8_dddSA_EEE
NSt3__110__function6__baseIFdbRKN2vp2vx30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIdJbRKNS0_30DSP_Node_Configuration_OptionsEdddNSt3__18optionalIdEEEEENS6_8functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlbS5_dddS8_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_122make_bind_front_lambdaIRKNS_8functionIFdbRKNS3_30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JSD_dddSH_EEESM_SO_DpRKNS4_5StateISP_EEEUlDpRKST_E_JSD_dddSH_EEERNS4_13State_ManagerESN_S11_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NS_9allocatorIS1E_EEFvS1C_S1D_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_122make_bind_front_lambdaIRKNSt3__18functionIFdbRKNS0_30DSP_Node_Configuration_OptionsEdddNS9_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JSB_dddSF_EEESK_SM_DpRKNS1_5StateISN_EEEUlDpRKSR_E_JSB_dddSF_EEERNS1_13State_ManagerESL_SZ_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSF_SH_EEUlS8_ddjSD_E_NS_9allocatorISN_EEFjS8_ddjSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEddjRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSD_SF_EEUlS5_ddjSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_ddjEEESP_SR_DpRKNS4_5StateISS_EEEUlDpRKSW_E_JSD_ddjEEERNS4_13State_ManagerESQ_S14_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1C_E_NS_9allocatorIS1H_EEFvS1F_S1G_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEddjRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_ddjEEESN_SP_DpRKNS1_5StateISQ_EEEUlDpRKSU_E_JSB_ddjEEERNS1_13State_ManagerESO_S12_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1A_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIbJRKNS3_30DSP_Node_Configuration_OptionsEddjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlS8_ddjE_NS_9allocatorISI_EEFbS8_ddjEEE
NSt3__110__function6__baseIFbRKN2vp2vx30DSP_Node_Configuration_OptionsEddjEEE
ZN2vp2vx15Voice_Processor15create_callbackIbJRKNS0_30DSP_Node_Configuration_OptionsEddjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS8_SA_EEUlS5_ddjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKNS_8functionIFbRKNS3_30DSP_Node_Configuration_OptionsEddjEEEJSB_ddjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSB_ddjEEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKNSt3__18functionIFbRKNS0_30DSP_Node_Configuration_OptionsEddjEEEJS9_ddjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_ddjEEERNS1_13State_ManagerESH_SO_EUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSF_SH_EEUlS8_djSD_E_NS_9allocatorISN_EEFjS8_djSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdjRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSD_SF_EEUlS5_djSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_djEEESP_OT0_DpRKNS4_5StateIT1_EEEUlDpRKSW_E_JSD_djEEERNS4_13State_ManagerESQ_DpRKNS12_ISS_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1J_E_NS_9allocatorIS1O_EEFvS1M_S1N_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdjRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_djEEESN_OT0_DpRKNS1_5StateIT1_EEEUlDpRKSU_E_JSB_djEEERNS1_13State_ManagerESO_DpRKNS10_ISQ_EEEUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1H_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESE_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESB_DpRKNSK_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJddjbdjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFS7_S9_EEUlddjbdjE_NS_9allocatorISF_EEFjddjbdjEEE
NSt3__110__function6__baseIFjddjbdjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJddjbdjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS5_S7_EEUlddjbdjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKNS_8functionIFjddjbdjEEEJddjbdjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JddjbdjEEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKNSt3__18functionIFjddjbdjEEEJddjbdjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JddjbdjEEERNS1_13State_ManagerESE_SL_EUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjNS_8functionIFjddjbdjEEEJddjbdjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JddjbdjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjNSt3__18functionIFjddjbdjEEEJddjbdjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JddjbdjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JNS3_14Beam_DirectionEEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESD_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JNS0_14Beam_DirectionEEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESA_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JfEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JfEEERNS4_13State_ManagerESD_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JfEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JfEEERNS1_13State_ManagerESA_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JbEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESD_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JbEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESA_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_J13CAOrientationEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESD_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_J13CAOrientationEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESA_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
N2vp2vx26IO_Property_Setter_CommandIjEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvRKjEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvRKjEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIjE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKjE_NS_9allocatorISC_EEFvSB_EEE
ZN2vp2vx26IO_Property_Setter_CommandIjE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKjE_
N2vp2vx26IO_Property_Setter_CommandIbEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvRKbEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvRKbEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIbE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKbE_NS_9allocatorISC_EEFvSB_EEE
ZN2vp2vx26IO_Property_Setter_CommandIbE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKbE_
N2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvRKS8_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvRKS5_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKS7_E_NS_9allocatorISF_EEFvSE_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKS4_E_
N2vp2vx27IO_Property_Setter_DelegateINSt3__16vectorIhNS2_9allocatorIhEEEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIhNS_9allocatorIhEEEEE17register_listenerENS_8functionIFvRKS9_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS7_ISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIhNS3_9allocatorIhEEEEE17register_listenerENS3_8functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx27IO_Property_Setter_DelegateINS_6vectorIhNS_9allocatorIhEEEEE6notifyENS3_2io5EventERNSA_4NodeEEUlRKS8_E_NS6_ISG_EEFvSF_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIhNS_9allocatorIhEEEEEEE
ZN2vp2vx27IO_Property_Setter_DelegateINSt3__16vectorIhNS2_9allocatorIhEEEEE6notifyENS0_2io5EventERNS8_4NodeEEUlRKS6_E_
N2vp2vx27IO_Property_Setter_DelegateI13CAOrientationEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENS_8functionIFvRKS6_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENSt3__18functionIFvRKS3_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx27IO_Property_Setter_DelegateI13CAOrientationE6notifyENS3_2io5EventERNS7_4NodeEEUlRKS5_E_NS_9allocatorISD_EEFvSC_EEE
NSt3__110__function6__baseIFvRK13CAOrientationEEE
ZN2vp2vx27IO_Property_Setter_DelegateI13CAOrientationE6notifyENS0_2io5EventERNS4_4NodeEEUlRKS2_E_
sglpsmdaNSt3__120__shared_ptr_pointerIPN2vp8services19Audio_Data_Analysis16Settings_ManagerENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIN2vp8services19Audio_Data_Analysis16Settings_ManagerEEE
uaepNSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlRKT_E_JNS_6vectorIxNS_9allocatorIxEEEEEEEDaOSF_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSM_EEERNS4_13State_ManagerESF_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NSK_IS18_EEFvS16_S17_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF9StringRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlRKT_E_JNSt3__16vectorIxNSG_9allocatorIxEEEEEEEDaOSC_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESC_SS_EUlNSG_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlT_T0_E_JNS3_14Operation_ModeES8_EEEDaOSF_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_S8_EEERNS4_13State_ManagerESF_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlT_T0_E_JNS0_14Operation_ModeES5_EEEDaOSC_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_S5_EEERNS1_13State_ManagerESC_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS7_EEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_20Global_ConfigurationESA_EEDaMT_NS_8optionalIT0_EESL_EUlRKSH_E_JSH_EEESI_OSJ_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SX_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS8_IS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorINS0_11Chat_FlavorENS3_9allocatorIS5_EEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_20Global_ConfigurationES8_EEDaMT_NS3_8optionalIT0_EESJ_EUlRKSF_E_JSF_EEESG_OSH_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESH_SV_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__120__shared_ptr_pointerIPN2vp8services19Audio_Data_Analysis6ClientENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIN2vp8services19Audio_Data_Analysis6ClientEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIxNS_9allocatorIxEEEEE17register_listenerENS_8functionIFvRKS9_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS7_ISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIxNS3_9allocatorIxEEEEE17register_listenerENS3_8functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor36configure_audio_data_analysis_clientEvE4$_90NS_9allocatorIS5_EEFvRKNS_6vectorIxNS6_IxEEEEEEE
ZN2vp2vx15Voice_Processor36configure_audio_data_analysis_clientEvE4$_90
tsgmswhasmrcNSt3__120__shared_ptr_pointerIPN2vp2vx15IO_Port_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx15IO_Port_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx15IO_Wire_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx15IO_Wire_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx28IO_Mic_Ref_Sync_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx28IO_Mic_Ref_Sync_Node_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryEEE
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvEUlvE_NS_9allocatorIS8_EEFvvEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvENKUlvE_clEvEUlRS4_E_NS_9allocatorISA_EEFvS9_EEE
ZZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvENKUlvE_clEvEUlRS1_E_
ZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvEUlvE_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvEUlvE0_NS_9allocatorIS8_EEFvvEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvENKUlvE0_clEvEUlRS4_E_NS_9allocatorISA_EEFvS9_EEE
ZZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvENKUlvE0_clEvEUlRS1_E_
ZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvEUlvE0_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvEUlT_E_NS_9allocatorIS9_EEFNS2_8ExpectedINS_6vectorINS5_13Property_InfoENS2_9AllocatorISE_EEEENS5_5ErrorEEENS5_5ScopeEEEE
NSt3__110__function6__baseIFN2vp8ExpectedINS_6vectorINS2_3rpb13Property_InfoENS2_9AllocatorIS6_EEEENS5_5ErrorEEENS5_5ScopeEEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvENKUlT_E_clINS5_5ScopeEEEDaS8_EUlRKS4_E_NS_9allocatorISF_EEFvRS4_EEE
ZZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvENKUlT_E_clINS2_5ScopeEEEDaS5_EUlRKS1_E_
ZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvEUlT_E_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvEUlT_T0_T1_E_NS_9allocatorISB_EEFNS2_8ExpectedIN10applesauce2CF7TypeRefENS5_5ErrorEEEjNS5_5ScopeEjEEE
NSt3__110__function6__baseIFN2vp8ExpectedIN10applesauce2CF7TypeRefENS2_3rpb5ErrorEEEjNS7_5ScopeEjEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvENKUlT_T0_T1_E_clIjNS5_5ScopeEjEEDaS8_S9_SA_EUlRKS4_E_NS_9allocatorISH_EEFvRS4_EEE
ZZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvENKUlT_T0_T1_E_clIjNS2_5ScopeEjEEDaS5_S6_S7_EUlRKS1_E_
ZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvEUlT_T0_T1_E_
(*359`a
&!&!*!+!.!.!
>DFHJMUV
 *0/0
fo
01050
ISO-10646-UCS-2
ISO-10646-UCS-4
 !"#$%
'()*+,-./0123456789:;
=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\
^_`abcdefghijklmnopqrstuvwxyz{|}~
text
textnoenc
comment
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz{\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 * . ` c j o 
 * . ` c j o 
(*359`a
q q 
!$!$!&!&!(!(!*!-!/!1!3!9!=!?!E!I!
01050;0<0A0
1,111
q q 
!/!/!4!4!9!9!=!=!F!I!
01050;0;0
(*359`a
5!8!
0<0<0A0
1,111
!$!$!&!&!(!(!*!-!0!1!3!3!>!?!E!E!!
>DFHJMUV
 *0/0
AD
>@FHJMUV
 *0/0
fo
p p t y 
0!0)080:0
1 2)2Q2_2
fo
p p t y 
 S!_!`$
1 2)2Q2_2
 ' 0 C E Q S T W W } ~ 
 )#*#
#h'u'
00000=0=0
00000
F F ~ ~ 
 *#*#
#i'i'k'k'm'm'o'o'q'q's's'u'u'
   ' 0 8 ; > A C G Q S S W W 
0=0=00
 E E } } 
 )#)#
#h'h'j'j'l'l'n'n'p'p'r'r't't'
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!2!2!:!;!@!D!J!K!
!(#+#
$&$@$J$
'''')'K'M'M'O'R'V'V'X'^'a'g'
0 0 06070>0?0
2*2C2P2P2`2}2
D D R R z | 
 @!D!K!K!
# #!#|#|#
%o&o&
!#!%!%!'!'!)!)!.!.!2!2!:!;!J!J!
#"#(#+#{#}#
$&$@$J$
&n&p&}&
'''')'K'M'M'O'R'V'V'X'^'a'g'
0 0 06070>0?0
2*2C2P2P2`2}2
 ( ) / / _ _ 
N6DspLib10PowerGuard9AlgorithmE
N6DspLib10PowerGuard17PowerAnalyzerBaseE
333@n
>N6DspLib18LoudspeakerManager9AlgorithmE
?NSt3__110__function6__funcIZN12DspLibBufferpLERKS2_E3$_0NS_9allocatorIS5_EEFvPfS8_S8_mEEE
NSt3__110__function6__baseIFvPfS2_S2_mEEE
ZN12DspLibBufferpLERKS_E3$_0
NSt3__110__function6__funcIZN12DspLibBuffermIERKS2_E3$_1NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBuffermIERKS_E3$_1
NSt3__110__function6__funcIZN12DspLibBuffermLERKS2_E3$_2NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBuffermLERKS_E3$_2
NSt3__110__function6__funcIZN12DspLibBufferdVERKS2_E3$_3NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBufferdVERKS_E3$_3
NSt3__110__function6__funcIZN12DspLibBuffer3maxERKS2_S4_RS2_E3$_6NS_9allocatorIS6_EEFvPfS9_S9_mEEE
ZN12DspLibBuffer3maxERKS_S1_RS_E3$_6
@N6DspLib13ToneGeneratorE
 BN6DspLib10AudioMeter9AlgorithmE
?N6DspLib19LoudspeakerSystemID9AlgorithmE
?`u}?
@es-8R
@lwh
E)f?J
333?n
MbP?15DspLibBassQueen
?N6DspLib15NotchFilterBank10FilterBankE
N6DspLib19SampleRateConverterE
=|^
=sG^A`B
5?N6DspLib13MeisterStueck6Kernel9AlgorithmE
N6DspLib3XTC9AlgorithmE
es-8R
HCN6DspLib14PeakPowerGuard9AlgorithmE
22DspLibLoudspeakerModel
?N6DspLib3RMSE
?N6DspLib3FFT10FilterbankE
AUUUUUU
4:{
:D<T
:D<{
9l]t9am
9U@#:
HB8F
:U<t
uE=8
>e6=>'
J>e6=>B
HB8m
:U@#:
8l]t9
8ncW8
P>:X
FT=/Vw=
=/Vw=
^{<h
#4;X
8ncW8
2:o$s:
5;),;;s
%:;D[3;"
 =$E#=
$=9!%=
$=$E#=
);D[3;
=;),;;g
$;5R
:o$s:]
7$[*8
>3;8$;;Q[7;
?Kv-?
%M?k
9?Kv-?
O>vH
)#;Q[7;8$;;
8$[*8
N6DspLib10BassKoenig9AlgorithmE
WC33
`?_p
( A`
:19DspLibLoudnessMeter
NSt3__110__function6__funcIZN19DspLibLoudnessMeter10initializeEjdE3$_0NS_9allocatorIS3_EEFvRfjjEEE
NSt3__110__function6__baseIFvRfjjEEE
ZN19DspLibLoudnessMeter10initializeEjdE3$_0
(knN30DspLibThermalSpeakerProtection
?N6DspLib6Biquad6FilterE
@333333
K=87v=
>8/!>
RE?y)N?
1v?.
V?y)N?
h8>8/!>
=87v=
D,Go
333?
?N6DspLib8BuzzKill9AlgorithmE
?Rrb%
5$1$
N6DspLib11ToneMeister9AlgorithmE
$tIfff?
UZr?
+P=@
u?O>)>
O>)>
cM?R
i}z?
>Q_\
fo?I
3}?q
nw=\
Km}?
1x?eN
?zs?gK
?17DspLibVirtualBass
MbP?
p}?A
?18DspLibControlFreak
?iRr?\ 
iRr?`
=!vV
?!vV
>>by?4
>by?
o?N6DspLib27AnalyticSignalTransformBaseE
N6DspLib29AnalyticSignalTransformBiquadE
N6DspLib30AnalyticSignalTransformAllpassE
N6DspLib32AnalyticSignalTransformPolyPhaseE
u?d;
Qx?H
G!?:Fq?|
?24DspLibLoudnessNormalizer
zDN6DspLib15NonLinearDevice9AlgorithmE
@@33s@
L>333?33
33cA
33S@
4N6DspLib13AlgorithmBaseE
N6DspLib26AlgorithmBaseNewParametersE
?Rll?
22DspLibMozartCompressor
N6DspLib3FIRE
>ff&?
p@N6DspLib7LowFlow9AlgorithmE
PCF33
 Bff&?
N6DspLib13MeisterStueck9AlgorithmE
@NSt3__110__function6__funcIZN6DspLib18forAllParametersOfERKNS2_26SystemParametersDefinitionENS_8functionIFvNS2_22SystemParameterAddressENS2_19ParameterDefinitionEEEEE3$_0NS_9allocatorISB_EEFvNS2_25AlgorithmParameterAddressES8_EEE
NSt3__110__function6__baseIFvN6DspLib25AlgorithmParameterAddressENS2_19ParameterDefinitionEEEE
ZN6DspLib18forAllParametersOfERKNS_26SystemParametersDefinitionENSt3__18functionIFvNS_22SystemParameterAddressENS_19ParameterDefinitionEEEEE3$_0
NSt3__110__function6__funcIZN6DspLib18forAllParametersOfERKNS2_29AlgorithmParametersDefinitionENS_8functionIFvNS2_25AlgorithmParameterAddressENS2_19ParameterDefinitionEEEEE3$_1NS_9allocatorISB_EEFvjS8_EEE
NSt3__110__function6__baseIFvjN6DspLib19ParameterDefinitionEEEE
ZN6DspLib18forAllParametersOfERKNS_29AlgorithmParametersDefinitionENSt3__18functionIFvNS_25AlgorithmParameterAddressENS_19ParameterDefinitionEEEEE3$_1
?N6DspLib10PowerGuard19WooferPowerAnalyzerE
N6DspLib10PowerGuard20TweeterPowerAnalyzerE
<333333
?ffffff
>xfuamsvfxoba
mcpl
mcpl,
33s?33s?33
33s?
 Afff?
qerf)
mcpl
 C333?
@fff?
HBmcpl
?xmuamed3lppa
xfuasiovlppa
xfuamndllppa
xfuaalislppa
xfuactlglppa
xfuamlpslppa
xfuarocxlppa
xfuasiovlppa
0000000000000000
%IR?%IR?%IR?%IR?
gffff
?gffff
xfuasmpsxoba
xfualescxoba
xfuaxmcsxoba
xfuawsapxoba
xfuaxtapxoba
Mmcpl)
@-&*@
Mbp?
@@5a
OKKYj
Ro T
yDr9t?_
Cfff?fff?fff?fff?
ffffff
?333333
 Afff?
B`e<
B`e<
xfuatennlppa
xfuasondlppa
xfuaverdlppa
42ovciov
?fff?
?xfuaavnnlppa
q=J?
?ffffff
mron
gz?Mex?e
v?qxs?
$?%L+?"
&8?!
>>?~
O?$L+?
qxs??
v?Mex?
gz?^
p?.r
T>qxs
~?\`
Mex??
v?pxs?
1?#L+?
?a8W:
$f?9>O;
k>ap
tjiA
Ga=ff
Y?B`e<
 C33s?)\
PPEo
\C33
(\?q=J?K
PCE\
8}?5?
Aff&
+2ff&?
>ff&@
@>33
p=>3\
(\>G
=gff>3\
P}G;
>F}K@+^
."N=j
<eva=
4>4<@
@d|G
}1>Z
(L%>.b
=$>P
AM>mVe@"
(P:=
Z>#n
n?)\
9&t=
3>l+R
>Y2z
OB=p
->1^4
K@F+,
]P=F
Ao?f
!X94=
DB33s
(EJ
@q=J
Axz%>,e)?R
}?p{
?fff?
zt?{
@ffffff
@333333
@333333
?333333
.@433333
~?-C
?33333
yE>ffffff
 @ffffff5@
?ffffff
?9]L
ff&?
@UUUUUU
2+d4
Mb`?
?GR:
?ffffff
6*?1
@A@333333
?fffff6t@
?p%;6
y?433333
5A4%
p?UL
+Hub?
xaua
2qrv
qebn
mndl
mndl+
mlps/
2sns
snco
neps
kdyd
2cga
rced
ngnc
qebn
ngnc
qebn
2qrv
2pdm
2pdm
ctxa
ktsm
ktsm
ngnc
qebn
seed
seed
qebn
lcfs!
qebm"
qebm%
hsor#
hsor$
hsor&
krfc,
krfc-
krfc.
1mpc0
rced1
qebm2
yldc3
2qrv4
3pps5
3pps6
3pps7
2pps8
kzub)
raeh*
lcfs:
keel'
rikl(
tsmt
tsmt
tsmt 
nebv
zFff
fB33cB
pB33qB
lBffxBffxB
rB33cB
BBff@B33;Bff6B
2B331B
-B33%B
j<=(~=
<X94<
WC33
y@33s@
l@fff@
K@ffF@
B@d;?@
,@L7)@ff&@
(@H
?20SpatialMetadataError
Ov#;
K+_<
K+_<
Ov#;
#Y>^
8<F!.<
:nl7
w:WM
Z}*=4
Z}*=
w:nl7
%*=h4
'<1w
file:///tmp/AUSM_Virtual_Surround_Device_Reference.ir
file:///tmp/AUSM_Virtual_Surround_Tuning.ir
file:///tmp/AUXTC_Tuning.wav
file:///tmp/AUSM_Virtual_Surround_Tuning.ir
CDDR
SharpeningLimit
DecorrelationLimit
AnalysisType
FrameSize
HopSize
xfua2qrvlppa
?|*#?
>(?-'-?
B?=EF?
L?g|O?C
Q?;4T?
V?;4T?C
Q?g|O?
I?=EF?\
1?-'-?
>(?|*#?
N4>v
?e=P
tC>f
!?>u$?*
&?g~)?
+?S[.?
3?{K5?
cE?d G?h
H?QgJ?
K?shM?%
N?}!P?9bQ?6
X?BAY?
Y?W$Z?
wZ?=
wZ?W$Z?
Y?BAY?
SW?M
R?9bQ?}!P?%
N?shM?
K?QgJ?h
H?d G?
cE?J
7?{K5?5
0?S[.?
+?g~)?*
&?>u$?L
&X>f
N=pa]=
}{=Ql
TP>3
]e>t
p>lyu>
;!?'
%?x^&?
*?OW+?
.?h"0?
M??IH@?
>A?b1B?
G?_bH?
4I?y
OL?R
M?huN?
#O?F
O?KrP?
Q?NER?
S?PqT?A
T?HjU?e
V?-!W?o
6X?@
Y?t`Y?R
Z??9Z?
bZ??9Z?
Y?t`Y?z
W?-!W?
OV?e
U?HjU?A
T?PqT?
R?NER?O
Q?KrP?F
#O?huN?
OL?6
4I?_bH?e
 C?b1B?
>A?IH@?
M1?h"0?(
,?OW+?C
'?x^&?
?)\
z>lyu>#
#>"8
Ul=pa]=w
6<Dn
"";^
.=d=5=
j<=/
J=\>R=
w=5B
&>$))>
?>^.B>
Q>:<T>8
V>OxY>
^>kba>
^i> l>w
y>|D|>
l?!"
?5A ?
5"?/
$$?G
$?Uk%?
P'?0
)?Ll*?S
+?5A,?
,?6v-?
.?-@/?M
m0?C
1?#,2?U
Q3?m
3?2t4?.
!6?%
7?aR8?w
9?6u:?
A?YmB?
ZC?J
D? *E?_
gI?J
3J?g
J?1^K?b
~L?w
L?C9M?
N?#NO?
O?#IP?x
9Q?r
T?YPT?
3V?fjV?
W?m9W?
jW?p
sX?t
-Z?xCZ?.XZ?
kZ?.XZ?xCZ?
-Z?@
.Y?R
 X?w
jW?m9W?
V?fjV?
3V?r
T?YPT?|
P?#IP?
O?#NO?'
HN?c
M?C9M?w
K?1^K?
3J?J
E? *E?
DD?J
B?YmB?
{A?m
:?6u:?
e9?w
8?aR8?
;7?%
!6?`
5?2t4?m
Q3?U
2?#,2?
m0?M
/?-@/?D
.?6v-?
,?5A,?
+?Ll*?
&?Uk%?G
$$?4
5"?q
 ?5A ?=
~>|D|>
lq>w
n> l>
^i>5
d>kba>
\>OxY>8
V>:<T>U
D>^.B>3
+>$))>
!>'l
Y=\>R=t
j<=d=5=
}H<;
a<tm<U
=Zc
l3=;
:={/>=S
A=QlE=s
L=5`P=
W=vq[=
_j=)#n=
y=;R}=
;!>Cr">m
&>TR'>
+>\<,>>x->
n7>K
4;>dx<>#
E@>P
_E>i
G>"9I>
GR>>
 Z>2q[>P
^>bf_>
`>Jb>
f> ^g>
go>j
r>*ss>1
:z>l
P~>6
 ?Yk ?
e!?0
!?J"?B_"?
#?.W#?~
B%?)
%?~6&?]
y'?G
(?@i(?
,?#h,?
5.?A
/?IH0?B
s1?@
2?M-3?Ov3?
4?'P4?_
5?,E6?
/8?u8?
8?lC9?
<?#-=?
o>?W
>?8.??Dm??
)@?'g@?
 A?-]A?
B?DOB?*
C?l=C?WxC?
'D?taD?
FE? 
E?k'F?
^F?O
GH?t|H?%
MI?8
LJ?=
EK?qvK?
L??7L?
!M?"PM?
}M?~
N?n2N?
8O?NcO?
P?n4P?d]P?
2R?2WR?
R?gS?
?T?g`T?
U?X<U?
ZU?pxU?
V?c%V?
,W?|EW?
TX?/iX?p}X?\
Y?F%Y?P6Y?
gY?dwY?
Y?dwY?
GY?P6Y?F%Y?
X?p}X?/iX?
]W?|EW?
AV?c%V?W
U?pxU?
ZU?X<U?
T?g`T?
/S?gS?
|R?2WR?
%Q?H
P?d]P?n4P?$
O?NcO?
^N?n2N?
}M?"PM?
fL??7L?y
K?qvK?
EK?f
LJ?r
H?t|H?
GH?I
:G?6
^F?k'F?
D?taD?
'D?c
C?WxC?l=C??
B?DOB?
A?-]A?
@?'g@?
??Dm??8.??
/>?R
n=?#-=?
`;??
9?lC9?
8?u8?
/8?`
6?,E6?3
(5?T
4?'P4?
3?Ov3?M-3?
Q2?O
0?IH0?
f/?]
5.?l
,?#h,?z
0+?3
E*?#
(?@i(?]
&?~6&?m
B%?=
#?.W#?
"?B_"?J"?0
 ?Yk ?v
??2
P~>V
:z>+
'v>1
t>*ss>
h> ^g>
`c>Jb>
`>bf_>
\>2q[>
1V>7
J>"9I>$
_E>P
=>dx<>
4;>4
-6>p
01>^
.>>x->\<,>
(>TR'>T
#>Cr">
;!>K
=;R}=
q=)#n=
(_=vq[=
T=5`P=
I=QlE=S
A={/>=
@%=+
y<tm<Y
 r;q3
,>B$A>p
V>L%m>l
0?zl6?y
;?PAA?
IK?c
fT?N
`?_rc?
1i?X
do?Y
zf?_rc?
|\?N
fT?c
`F?PAA?y
;?zl6?s
>L%m>p
V>B$A>
Mv=[
 r;d:
6e;i{l;gHt;
=XV)=
f=bp
'>Jt1>
?Ql ?Ov#?
s)?qf,?
P/??02?u
H=?!
xL?`
NS?*uU?
[?*g]?
7_?h
e?w)g?!
l?N%m?
q?'
\r?#
\r? 
pp?r
n?N%m?
h?w)g?
7_?*g]?
W?*uU?
xL?=
5??02?
P/?qf,?
y&?Ov#?Ql ?
;>Jt1>
G=XV)=
|;gHt;i{l;
c;WMg;
{n;WEr;H0v;
[~;[L
 ?;.L.;
<p0J<<
r"=hh1=
/>7@4>
N>omT>$
e>l
j>UQp>[
?e3!?3
"?8;$?c
4*?&
z1?C
2?,S4?~
5?'!7?
1C?}yD?
_O?>
Y?"
0b?T
f?`{g?
h??ui?
Yl?I
l?/\m?
n?&"o?!
=p?N
'q?d
o?&"o?
m?/\m?I
j??ui?
)h?`{g?
Te?c
Za?$
Y?_
8N?b
E?}yD?
1C?
G??T
A;?=
8?'!7?~
5?,S4?C
$-?&
;'?c
%?8;$?3
"?e3!?
v>UQp>l
x_>$
Y>omT>
9>7@4>
`o=0
@=hh1=
r"=R
<p0J<
;.L.;
NO;o
7z;H0v;WEr;
j;WMg;
m;!ao;g8q;
Op;I
g(;@
zz:z
RKN:
;VEz;
Js<j
L=/JT=
#>C$&>
E>FSH>
M>1vP>
1S>p
5l>e
mz>mL}>
,?-
-?8=.?
/?mh0?M 1?
2?;D3?
4?pb5?
D@?R
A?x9B?
lE?6
H?2&I?$
I?0]J?S
(L?:
VM?(
8P?<
Q?SuR?
*U?2
8V?4
W?FHX?}
FZ?y
Z?9?[?
[?a3\?
#]?-
^?@f_?
 a?i
a?0`b?I
b?-/c?
~e?O
e?f:f?>
f?,Jg?@
Gi?
l?97m?Oum?
'n?C`n?
go?;
vp?+
tq?[
Cr?4Wr?jir?9zr?
r?9zr?jir?4Wr?
.r?4
!p?Y
5o?X
n?C`n?
'n?x
m?Oum?97m?
5j?3
g?,Jg?
f?f:f?O
~e?h
\d?T
c?-/c?I
b?0`b?
_?@f_?
\?a3\?
[?9?[?y
IY?}
X?FHX?
BW?4
8V?2
S?SuR?
XQ?<
VM?:
J?0]J?$
I?2&I?[
'D?`
B?x9B?L
6?pb5?Z
3?;D3?6
1?M 1?mh0?
.?8=.?
P+?n
[(?N
^%?&
>mL}>
mz>U
1S>1vP>W
K>FSH>
G@>G
S8>\
(>C$&>X
\=/JT=U
;VEz;
;RKN:
oa;I
Op;0
s;g8q;!ao;
bh;`
f;_hh;
Ui;O
ek;P
0n;7
vp;yuq;
.r;KTs;
~w;D
|;p2};<\~;
$|;!
u;1dq;
h6;5
-;/u);Z
T:q&?:
:):_
9E j9
vQ8:
!F<RBS<\r`<
N!=;
:C=m
 v=k"z=B(~=-
,>iP->R
/>#61>
eF>N
I>rqJ>
O>o<Q>
S>VWU>
wY>:
Z>N;\>
d`>p
a>f.c>
e>+ag>j
@q>o
?KD ?
+"? 
$?00%?J
%?)P&?
o'?k
J)?g
*?~f*?
,?fU-?
l.?}
.?$&/?
/?<;0?L
2?Ta2?y
3?Fr3?
3?q'4?
C6?k
N7?w
g:?8
;?6m;?
r=?Z
@?Gn@?"
A?DiA?
B?rbB?
C?OOD?
F?s$G?
sG?9
H?PLI?A
I?{5J?
K?6iK?
ML?B
N?PZN?R
P?T[P?
{Q?m
R?WPR?
R?S#S?"iS?
}T?i
JU?y
V?9XV?
aW?+
fX? 
X?~'Y?DgY?
\?!O\?N
]?)>]?1y]?
b^?&
_?GG_?
_?a'`?
na??
Cb?^wb?e
e?;4e?
ce?v
f?0Nf?
5h?W`h?w
/i?LXi?
k?r%k?
mk?h
>l?v`l?
1n?CNn?Bjn?
$o?<>o?6Wo?
oo?$
(p?8>p?qSp?Qhp?
|p?
q?2&q?G7q?
Hq?lXq?}hq?0xq?
/r?,:r?RDr?
`r?oir?
qr?oir?
Nr?RDr?,:r?
q?0xq?}hq?lXq?
Hq?G7q?2&q?
|p?Qhp?qSp?8>p?
oo?6Wo?<>o?
$o?E
n?Bjn?CNn?
1n?4
l?v`l?
Ik?r%k?
i?LXi?
h?W`h?
5h?#
|f?0Nf?
ce?;4e?'
@d?(
b?^wb?
Cb?h
^`?a'`?
_?GG_?
(^?o
]?1y]?)>]?
\?!O\?
Y?DgY?~'Y?r
V?9XV?=
S?"iS?S#S?;
R?WPR?
P?T[P?
N?PZN?
K?6iK?
J?{5J?
I?PLI?"
aH?K
sG?s$G?
4F?K
D?OOD?
B?rbB?
A?DiA?
@?Gn@?8
p<?v
;?6m;?R
X8?#
4?q'4?
3?Fr3?p
2?Ta2?
N1?4
0?<;0?
/?$&/?}
-?fU-?
<,?
*?~f*?
-(?k
&?)P&?G
%?00%?
o$?#
h!?W
 ?KD ?
a?d
kn>1
0j>j
h>+ag>:
d>f.c>p
d`>+
]>N;\>:
V>VWU>
R>o<Q>]
K>rqJ>
2>#61>
.>iP->P
=B(~=k"z=
g?=L
},=i
m<\r`<RBS<
9E j9{
:):q&?:
%;/u);
m;1dq;T
;<\~;p2};
s;KTs;
.r;yuq;
vp;7
0n;L
4h;_hh;
:9[#;tG^;
 ?<n
<=guK=
0z=pb
/4>}
:>1ZA>
&+? &-?
a>?9+@?b
C?s_E?Q
SJ?!
K?p}M?
R?({S?
T?*OV?~
V_?4
um?uGn?
p?NPq?
t?}.u?"
u?zLv?
x?F,y?
y?5\z?
e{?:
I|?x
}?QG}?<~}?
~?E;~?hc~?
~?hc~?E;~?d
}?<~}?QG}?
I|?k
z?5\z?^
y?F,y?
v?zLv?"
u?}.u?r
r?NPq?
o?uGn?
um?8
W?*OV?
T?({S?t
O?p}M?!
G?s_E?w
A?9+@?
"/? &-?
H>1ZA>}
"!>^
Z=guK=
T!=aS
!~<n
;tG^;9[#;
8xfuasiovlppa
m@p|
>Q?
2 ;>
8>p%
?I.TA
<>~S
vN?"l-
?Aad?A
0/8@
,H3@
l!J@,H
MgG@d
]Z?xEN@
A!\A
$(5AW
`">ND/>]
_:>)\
@[B9
lw>It
U@F_
o_>T
>F@%
|@Ul
:u_@-[
Uh<?$E
<@S`|=
a?a8
_?sG
1/v=&
r@)
@AVa=
5@CuS
>n|7=u
8?Vb
2UaA}P
V5A"
SAI.>A
-?*Ry?
1cAi
?a0$<
=!V??
?erB
?"5u?#
X\W=
[u?E
XY;=
Q.M>
&A~:
w0?7
O@`A
8$?YQ!@
N*?Z
y?kd
,?DlL
K@#2h
>[D@?
,z?}\'
?J{`AU
z?cE-
2L>]
V?}y
O?k+#
C_?Z
_{@x
K!>[
)\9A+
?bi0
WAZ/
eN@}
j/b>
@><k
-|)?jM
@jhW
6\$==*N>
1g?!
=><k
PE>4
@aT.@
jA~
@vO-A;
Px@r
??RJ@,
q=E/!@
 @Eoi;M
zpK@
@#eK? 
->q
>||.
2@v#=q
Z=cb
x>[_
Z?DL
9=|G
1yw?
F=od
}^q?
bdASVQB
+0(@>
[@jj
?g}J
U0zA
y@4.0?
%1=k
>(,!
A=($
@aUQ?
5F'?
?k-@
@|)l>*t
#D>d
>C@"
3z@7qr
&g=5
UAAB
sLAo+u
[3A{1
m99@
]8=k
]3q@
0=9S
=lBm
8cA3.!
pq>
{DBr3.
A<NSA
?IyW
\6?re
Y@T7K
/s?7
=sh{A'1
=;pn
?[uB=
@"Rw
<lJ?
L=)\
?anpf80pfa6pfawpfa9pfa6pfaopfawpfawpf61pfenpf80pfe6pfewpfe9pfe6pfeopfewpfewpf61pf42pf42ovbntr42pfbwtr42pf@
#=q=J?
#=q=J?
#=q=J?
?fff?fff?
l?33s?33s?
?fff?fff?
l?33s?33s?33s?33s?
cltc
N3gsl15narrowing_errorE
?fff?
?fff?333?
?333?
??WK?7
5M=S
<;pN<
?CDDR
SharpeningLimit
DecorrelationLimit
AnalysisType
FrameSize
HopSize
@qerf 
~?`5
h~?n]~?
?ti|?
'~?M
{?8b}?n
<~?LN~?Kq~?
y~?o
{?*F{?M
s{?xS{?
|?-~|?R)|?
|?+$|?
}?j:}?B@}?
~?n%~?,E~?
z?1ku?
!{?`
X{?~ {?
z?sF{?#1{?
|?<L|?'x|?4
|?e*}?{M}?
.u?.fu?}
#y?b6y?
~y?cXy?U
y?n'z?G`z?"
U{?^
|?JZ|?z
Qt?+
%u?m
Vw?T#w?
s?'>t?
2t?[
?t?"vt?
pt?C[t??pt?
t?Q~t?
av?:
y|?4
1}?F
~?^_~?
~?6&
Js?M4s?
s?wVs?
o?$0p?
-q?v
^u?k
y?# z?
"{?I
|?&S}?{
~?{H~?y
?61q?
Pi?
i?Q+m?
/m?M-m?
Sm?}
m?&#o?3.o?>go?
"p?*xp?
Ao?#
p?Csp?
Cr?1^r?
y?0)z?
:~?=
g?Vph?
dl?jjl?+
j?VWl?
l?bym?\]l?
m?{hm?
o??eo?M
o?""p?=
s?;ut?4Au?
y?Dqz?>
{?#(|?:
}~?r
kf?SMf?b#f?_
=g?u
i?R4g?
|h?N
i?-:j?
zi?=
j?Lik?e
Ml?D
~?j#
e?A]e?):e?B"e?V
(e?#Se?+
e?CKe?U
De?i e?
'e?;
e?6re?
vf?C0g?
tg?,Lh?
5i?'
6m?C.n?
p?#Uq?JVr?
zu?3
mx?,By?9
|?.-}?
}?=Q~?+
~?7)
vc?{
_?:e_?fj_?
(`?*
m?O^o?z
p?Ewq?
u?R>v?
8w??>x?~6y?u&z?
}Z?9
Z?Jj[?
^?MZ_?H
b?Yfc?Vod?"
l?S9n?^
Dw?m<x?
Dy?I.z?
X|?y
}?_"~?Yx~?
zX?p
qX?}
g[?A2[?
?c?&
:g?70i?
k?^om?
fp?t
os?h
v?CMw?Qsx?
[z?`"{?
{?.v|?
Y?7mY?
SQ?<
DT?=
[?/~]?>}^?
Ha?FCc?
i?||k?
l?own?8Vp?m
vz?5e{?
|?9>}?
 ~?ef~?
?VBS?
ZQ?J
N?,UL?+RP?
@R?j
iT?`
W?*tY?g
-\?hJ^?
_?sha?
bc?~
n?m9p?
-u?ckv?
[|?`
F~?{
K?>vM?
N?sGP?
X?jSZ?
\?6;^?w
_?C@b?
{h?c
~p?@=r?
v?ulx?bny?
Tz?Z2{?.
$~?6H~?
~?G$
K?H=K?
D?^KC?b
#C?B@F?N
~G?d
9Q?x|R?
V?6iX?H
r?cht?
%v?>Sw?.nx?P
{?Fp|?8
|?Tt}?
}?^+~?
H=?U
@?V>@?$
@?aC?3<C?
H?<YJ?
Y?%L\?
6a?[
Vs?1/u?
v?W8x?Y(y?
w0?H/1?
`0?*
3?s<<?
7?Wq8?
Pi?o
,t?~
Iw?a
{?2||?
Y}?(
@,?:
3?{H4?
D?d9G?
TR?a
pX?/
i?Onl?
s?P0u?
x?NVy?*iz?X{?
P}?#
~?1-
(?V()?
f*?>
-?5z.?y
5?k37?
4t?^
]w?E
x?D+z?
|?(+}?
(~?,
?(O$?
-?IQ/?
F?Z[J?L
+c?v
1s?q
v?$Qx?
{?I^|?4
}?7~?xF~?8
~?;$
l8?:&;?S
>?sRB?|
`?v9d?
hg?d
y?Iz?
}?jD~?
=#?3
L*?{x,?"
3?TN6?
E?K&I?ZsM?
Y}?4
~?De~?
c!?#
p'?I
w-?J
W?% \?D
c?j2g?
k?~jm?
@p?H
~?nc~?
L8?j
T?o,Y?|
e?B.i?
ro?`
$t?}
|?]x}?f)~?
U&?<
.?"?4?b@8?[
Q?+4W??K[?
y?"2{?
|?!W}?e
~?Az~?
?9~ ?
&?m=*?
&.?O
C?<jI?:KN?j
i?IHm?
4p?&
+?U
?<I$?x6)?
.?6s4?
Q`?g
kl?=ko?
E{?d
J<?i
N?7_T?
c?/]g?
2n?0Yq?GYs?
n}?U
8~?n
~?[A
M]?`
v?'!x?
 {?f
!}?=
[~?l
?S-&?
/B?J*H?
Z?Sg`?
d?A)i?
et?i
v? :w?
&|?l
}?40~?H
?&X!?
kk?`
|?j;}?
a{>?
KW?"
u?f.w?%Wx?
w{?k*|?e
?(='?
XN?H
i?Q9l?
t?<zv?7
9z?o6{?Y
]}?s
}?TD~?
~?g1
X>I+W>
~>yJ
s"?xs*?
Y?6<_?Oxd?
?j?t6m?O
{?zh|?
?>t(;>
G>29J>
7Z>y
_/?>
1X?^
k?nZn?
y?>oz?lb{?
P}?L
}?]M~?u
>7d+>
$>5/ >r
'>(]%>
R>hR_>\
u?{Ow?
7~?f
 >ZW.>
>>GPF>
s>!Y
W;?moD?
lh?i
p?.$s?GAu?
Dx?6
{?Ho|?l
}?dd~?
*>sh3>
3A>%?S>
__>}#w>
?5o#?
[?l3_?F|c?
Nr?WHt?
w?a^y?
>?}_H?_
`?HBe?
x?E#z?
}?}%~?i
{h>#
=>^%Y>e
<?m`F?
MV?*
Z?D3_?=sc?lCg?<
yu?[
v?$4x?
8~?J}~?D
{h>#
S?!QX?
w?kny?
f|?0
~?Lt~?}
~?1.
{h>#
k?{|n?
x?_z?Z[{?^3|?l
{h>#
_s>%\
'?+e4?-
qf?a
>u?E=w?]
!z?&3{?
{h>#
V`>'
~>st
7?}~>?
v?]qx?s
{h>#
q?8Et?
{h>#
/?sI6?(w=?
cb?3
 v?X
{h>#
+2?Y
9s?2ju?
{h>#
>IGH>
&?;%.?
6?lT>?
{h>#
#\>a
?q*!?
J?KmQ?
o?G[r?
)u?t
{h>#
G?PnO?
*W?4)\?n
{h>#
->`!]>
c3?1
rD?;
"f?J
h?b~k?Pcn?1
{h>#
R?gqY?
d?6pg?F
{h>#
+?.87?<
P?O#X?
2i?b
t?)Nv?
{h>#
T\>/e
<?$|F?
$n?#
q?SYt?P
Q}?p
{h>#
?v@$?
U?^iX?
s?e@v?
y?4Gx?<wv?
{h>#
1M?4^T?
0]?*
m?Mlq?
7t?<wv?4Gx?
~?6^
}?R)}?
{h>#
= >+
sy?A
|?R)}?
~?Yi~?Y
X|?R
rz?@'y?
{h>#
>SmV>
?E>$?
Y?bYa?%eg?
w?@'y?
rz?R
~?Yi~?
}?d4}?|
+v?=
{h>#
_:?o
6c?J
h?]_m?
+v?y
|?d4}?
}?;h|?
Dy?6
{h>#
Ps?K
{?;h|?a
p~?$
~?a_~?
Vw?gMu?
{h>#
E5?B_7?
r?gMu?
}?a_~?
2}?X
{h>#
@Z>.
?1r%?
H7?3
#c?M
h?iSm?b
%v?{
p~?e
i|??
z?9Gy?^
{h>#
?[:"?A
3?l\D?
Us?5
w?9Gy?
i|?y
F|?fi{?
y?Ocw?
{h>#
 ?9Z0?C
\u?Ocw?
Wz?fi{?
F|?V
a~?j
}?=u}?v
|?{$|?
>{?i#z?
{h>#
e.>OF
)??x
x?i#z?
>{?{$|?v
|?=u}?
R~?T
~?=&~?
{h>#
!v?j
}?=&~?-
s~?5
u?Pos?
{h>#
r>F)
D?|:Q?
Z?_/b?
rp?Pos?
p|?D
s~? 
c~?~
K|?so{?Z_z?
ju?W
{h>#
y?Z_z?so{?
K|?O
c~?#
}?S}}?o
0|?!N{?.6z?
So?ERk?
{h>#
Lf?ERk?
x?.6z?!N{?
0|?o
|?S}}?
|?z-{?
{h>#
bM>|I
z?z-{?V
L~?\
2~?E
C}?@
y?<6x?5bv?
{h>#
s>V)f>2
R9?UtH?
t?5bv?<6x?#
C}?E
&~?+
}?82}?
x?7$v?
p?gPm?
{h>#
E<>A
!?2;7?
h?gPm?
s?7$v?9
|?82}?+
!}?iw|?P
z?Iay?
{h>#
78>e
>Z>&
8C>#
M>qM
bE?R
=h?g
w?Iay?
{?iw|?
v~?z
n~?9
<y?|
u?;@s?(8p?
{h>#
O>\_E>
A3?@
C?K|P?
*Z?9
ol?(8p?;@s?
~?{(
~?'f~?i
}?@Q|?5v{?
gz?T
zu?
l?&1g?
{h>#
, >[
?~g1?
a?&1g?
{w?T
gz?5v{?@Q|?
~?'f~?
~?8$
^~?J
|?%@|?
Sw?.Iu?r
{h>#
&>8t&>
h>;y
BA?VuN?A
r?.Iu?
a{?%@|?
^~?
~?A 
|?L0|?
M{?q5z?+
.w?<
{h>#
Qo?T
.w?+
x?q5z?
M{?L0|?
W~?{
6{?*
t?{Dr?\
{h>#
>@9B>
xD>@
K_?e
n?{Dr?y
j}?R
t?3"r?
{h>u;
!+?O
n?3"r?
*{?D
n?\oj?
.e?\oj?
}?g[}?
kn?d/j?
d?d/j?
zx?m
|?g[}?
~?c=~?.
T}?f
gx?N
v?tit?4
=n?7
[;? 
I?G$U?Z
=n?4
q?tit?N
T}?.
}?c=~?
~?J>~?K
y?xkx?.
q?KGn?
J?U<U?%
j?KGn?
ot?.
v?xkx?(
V}?K
}?J>~?
:~?5
]x??
v??Yt?
i?and?
]?and?
q??Yt??
]x?v
Q}?5
E<Ak9<
Z=p^@=t7>=
7=}'3=Ye\=S7L=
UE=lG?=
@9=?
a#=D
I<G`9<
#<F^
Ho=2>v=
Yz=rDt=i!l=h
h=aFa=
?=b:9=
z<F.i<]2J<K
^e<EbX<
=<PM2<
>JJ
`<=r
X<6l@<$
>Y=
SZ<0
)>O5->
)P=$
vY>TGX>
:9>2
$=>r[@>5
@>NgA>
>>]i6>f
*0>B
%>q5!>+
%m=W
6<fX6<
#<dJ^>
]>m<_>5
^>yt]>
R]>r
%^>W
]>W&]>94P>
P>'xQ>v
L>Z)F>
6>5J1>
[->]
*=vS
X<cP4<fa.<
|h>wyg>
(~>59}>
[r>Y,p>
Q>0*N>
'>,+ >
u0=`H
>`#t>
j>cDj>
L`>=
6>0`0>II(>a
Q=t'>=
#<0j
p->i
y=1Hb=
Z(=m-
>2>w>cDp>
aj>x
F>9<<>`3>
v=_Z^=
<cUa<
z>]ar>h"i>
^U>)
"@>}
<p27<Y
#<V'
y>M?o>;
M>pBC>t
=7ri=5
Q=+/==_40=(
_<|^a<
>0Xs>
yf>m
X+>2l
\=Z4Q=f
N>?[B>
F5>\
J3>n
)N=d$7=
[#=V
2<: 1<I
4b<h
8<\$9<!i9<
9<?g
>%:s>Q
U>`<F>9
5>dA)>_
d<0`<
qT<g
&a<Q
y:<#I:<68:<=3:<
5>f!#>el
f=dDR=
Q$=9
c<Pn:<,1:<
(y>)
EX>4
= &u=?
|d<:
#=ey
FK>g.9>
"u>l
<Vgd<
V:<~l9<
8==~.=
[t>u
Ws=Z
?pX?8
Nz>B
2>@
@F=U
=<-j7<
>a/p>
[>C:I>
j'>@
Z=# F=
WP>(
z=}Xg=i?S=
/<j
{?;
nY>i(B>
WA=q%4=
g?R
Y>xrK>G
+?U
`>BkN>
=NK{=
U=-&@=
{<b%
yi>
Q>Y+;>
3>$-,>W
-6=m4/=q
Vp>/
73>*
EL>q!B>{
R$=oo
H=b}?=3
a{>?
:P>#
C>`G5>D
=u%m=
X>I+W>
~>yJ
?@E?
H{>;9h>
Y[>ynJ>]y;>
t`=`V9=
+= w/=3
?>t(;>
G>29J>
7Z>y
b>cbT>
C>t02>P
5V=+
=7d+>
$>5/ >r
'>(]%>
R>hR_>\
$N> 
<>eR,>
aU=v
*=}@'=
 >ZW.>
>>GPF>
s>!Y
>f&~>!
]c=G
f=*oo=
*>sh3>
3A>%?S>
__>}#w>
>p4r>
q+>/
=(;r=
'I=a
C=i_Q=
eT>\9?>
n=8zJ=
{ =0j
/<fAw<
=,3'=KJ[=
=>^%Y>e
i=L>c=w
==M6+="\
<tT$=
W=eB
,>L8
#<$Z
G=H}
=Vs{=W
#<3'
_s>%\
&>",
=-=Z0
V`>'
~>st
a?n
UP>F
;>eW)>]
ZC=7 0=<
lD<~
'=kZ
p=<aX=
>-o>
5u=Z
><ft>
y!>W
+e=9
G:=:
'=si
>IGH>
= ?$!
= n}=?|d=
p'=q
#\>a
+?p))?
O=$p;=
0?gs0?+
=&&g=
;=Ed)=
->`!]>
"0?T
T^>\rH>
<g=5zP=
5?AZ9?7w;?
9;?Z
4?DX/?
?s+?V;
N>M@:>/
?Z@!?
P@?I
3?Z2+?
D&>5
=wt
T\>/e
=?)E8?PW0?i
>x>[
Q=>5==
<?3U5?
+?VL ?-
>iW|>
&>mO
T@=Yf-=
]8?/
?>=D
= >+
rQ?f
E?GE=?
3?e,"?
>J*f>
m/==)
#<b%
>SmV>
?&>'?&,H?
%?Go
>x=k>
Z?C&]?|
]?k>[?
>&Z}><jd>
9>Zc'>
a?/b?
_?(uZ?a
S?o8J?
^$?-1
Hi>yRR>
7E=1
d?5*_?%
W?{dN?
{.>#O
B_=AII=Jy5=
@Z>.
.?CnK?
vi?`
2?Y"!?
d>7.N>
pV=oUA=
#<iX@={8
g?RIm?
Mh?K"`?
.6?8@$?v
i>$+R>[{=>
>9rm>
e.>OF
Yh?@{Q?
E*?]
mD>>
W{=Z
b=uLL=
08=i
qw?|Cz?(!y?
\?zbF?
d>.UN>
n.=yC
r>F)
r3?B
w?GD_?sJI?^z5?
>-6h>
c?eMM?;
&?Ys
->lz
CP?*Pj?
>d)p>
K=&7=
{R>w"
R?!3>?
> _s>
E>BY2>D
M=w~9=m<'=r
E>"s
q?'HY?!
S=d?=e>,=<J
R?>Gl?
[?aLF?
.!?bQ
d>2>N>T
V=ldA=][.=
78>I>
>_]g>~
W0=A
8>i$
j?>D
fy?k
>>,a+>
=(;s=EJ[=
(l>8
cT?u
n_=%pI=Z
;?9B)?G
X>JBC>2
#<K(
<Mo6>
?/}:?
U?y(l?2I
?a"i?
>{yr>
=b0|=
&=-8
#<'b
d.>&
<j?W.S?e>?
9=Qh'=
@@>"
?Y!;?M
U?,
e=v&O=
?8H<?
Qm?m-
"^>1EH>
g=;KP=
^;?0EV?
s.?NG
7_><?I>Ap5>h
==)h=KOQ=&
<=""*='c
%I<<S8>
gV?OMA?
F.?+
>SWw>
#<>K#
m?K4
>h?x>
5==2
N8DSPGraph9ExceptionE
xfuatennlppa
?33s@
?fff
333?
l@ff
?fff?33
33s@33s@
?33s
zE333?333?333?
PCF33
 Bff&?
PCF33
 Bff&?
333?
 C33s?
?33s?33s?)\
main
qebn(UL-)MicDCFilter
frif(UL-)Mic1FIR
frif(UL-)MiC2FIR
frif(UL-)Mic3FIR
frif(UL-)Mic4FIR
qebn(UL-)Mic1EQ
qebn(UL-)Mic2EQ
qebn(UL-)Mic3EQ
qebn(UL-)Mic4EQ
2cel(UL-)Mic1LECV2
2cel(UL-)Mic2LECV2
3cel(UL-)Mic1LECV3
3cel(UL-)Mic2LECV3
cecm(UL-)Mic1LECV4
cecm(UL-)Mic2LECV4
cecm(UL-)Mic3LECV4
cecm(UL-)Mic4LECV4
cecm(UL-)PolyEC
5cel(UL-)Mic1LECV5
5cel(UL-)Mic2LECV5
5cel(UL-)Mic3LECV5
5cel(UL-)Mic4LECV5
5cel(UL-)PolyEC1V5
5cel(UL-)PolyEC2V5
gpsd(UL-)EchoProcessingGraph
enco(UL-)OCNE
2lsm(UL-)MicSelV2
snes(UL-)MicSense
n2mb(UL-)BF
fnmb(UL-)BeamNF
sfnb(UL-)BeamNFSelector
tenn(UL-)NeuralNet
tenn(UL-)NeuralNet2
2ser(UL-)RES1V2
2ser(UL-)RES2V2
3ser(UL-)RES1V3
3ser(UL-)RES2V3
4ser(UL-)RES1V4
4ser(UL-)RES2V4
5ser(UL-)RES1V5
5ser(UL-)RES2V5
5ser(UL-)RES3V5
snes(UL-)MicSense2
2sns(UL-)NSV2
snco(UL-)FixedOCNS
snco(UL-)OCNS
4sno(UL-)OCNSV4
1ssb(UL-)BSS1
2snm(UL-)MMNSV2
sndm(UL-)MagDiffNS
4snm(UL-)MagDiffNSV4
2ssb(UL-)BSS2
2ssb(UL-)BSS2_4In
lesn(UL-)NoiseSelector
qenh(UL-)HandsetNoiseEQ
bvrd(UL-)ReverbSuppressor
2tge(UL-)GateV2
3tge(UL-)GateV3
gpsd(UL-)DNNVADGraph
(UL)-PostGain
qebn(UL-)EQ
2cga(UL-)AGCV2
pusl(UL-)LevelDrivenSuppressor
seed(UL-)Deesser
2qrv(UL-)WirelessChargerEQ
lcfs(UL-)SC
3cel(UL-)Mic3LECV3
3cel(UL-)Mic4LECV3
verd(UL-)Dereverb
sond(UL-)Denoise
dfmb(UL-)BeamItFD
dtmb(UL-)BeamItTD
dtmb(UL-)NFN
kdnw(UL-)WindKill
snfn(UL-)NFNSwitch
eytt(UL-)TTYEchoSuppressor
pusk(UL-)KeystrokeSuppressor
gpsd(DL-)FEVMixDSPGraph
gpsd(DL-)FEVDNNVADGraph
qebn(DL-)PreEQ
tsmt(DL-)PreTM
mndl(DL-)LDNM
nebv(DL-)VirtualBass
2sns(DL-)NSV2
snco(DL-)OCNS
neps(DL-)SpeechEnh
2qrv(DL-)VarEQV2
seed(DL-)FEVDeesser
seed(DL-)Deesser
2cga(DL-)AGCV2
kdyd(DL-)DynDucker
rced(DL-)Decorrelator_MediaChat
ngnc(DL-)CNG_MediaChat_Left
qebn(DL-)CngEQ_MediaChat_Left
ngnc(DL-)CNG_MediaChat_Right
qebn(DL-)CngEQ_MediaChat_Right
2pdm(DL-)MBDPV2
2pdm(DL-)MBDPV2_2
2qrv(DL-)VarEQV2Vol
ctxa(DL-)XTC
ktsm(DL-)Meister
ktsm(DL-)MeisterU
(DL-)OauGain
(DL-)FevOauGain
(DL-)MixFevOau
ngnc(DL-)CNG
qebn(DL-)CngEQ
qebn(DL-)HwEQ
tsmt(DL-)TM
tsmt(DL-)MultiTM
keel(DL-)Tweak
rikl(DL-)TweakIR
lcfs(DL-)SCi
qebm(DL-)HwMNBandEQ
hsor(DL-)Rotator
hsor(DL-)StereoRotator
qebm(DL-)CrossOverHwMNBandEQ
hsor(DL-)CrossOverRotator
mndl(DL-)LDNM_VolumeLimit
krfc(DL-)CF
krfc(DL-)CF_HF
krfc(DL-)CF_LF
mlps(DL-)SPLMeter
1mpc(DL-)CPMSVolume1
rced(DL-)Decorrelator
qebm(DL-)PostDecEQ
yldc(DL-)PerChanDelay
2qrv(DL-)FrontCameraNoiseEQ
3pps(DL-)SpkrProtV3
3pps(DL-)SpkrProtV3_HF
3pps(DL-)SpkrProtV3_LF
2pps(DL-)SpkrProtV2
(DL-)FinalGain
kzub(DL-)BuzzKill
raeh(DL-)HLC
lcfs(DL-)SC
(DL-)StereoUpmix
St18bad_variant_access
:NSt3__18ios_base7failureE
#9)V*9
H9}?O9
qs9@
$#:MH%:
s':s
4.:R0:
;=:(
D:oBF:
V:D6Y:
.`:^
e:%5g:fci:
Q(;{
?.;s
b1;A
3;wX4;e'5;w
n>;@%?;
@;:lA;t=B;
F;VmG;.CH;M"I;B
J;<OK;
R;&\S;[1T;1
Y;OaZ;
r];f(^; 
_;vz`;
Sl;0)m;
o;~Sp;
cs;a=t;
 u;s
u;%~v;
jz;$R{;.
{;>~y;
w;EYv;}
p;=7o;L{m;{
b;$:a;U
M;y@K;sCI;#TG;qqE;
;zf
qm:#
c:D{Z:
9N*=:b
}*;(BC;
\;tOv;r
1<s68<`
e=3/
w&=Qy(=
9=Wg;=
'A=*$C=/,E=
>G=X"I=
>(J
T(>u
e*>s
->3V.>
z4>H
5>"S6>3
7>:[8>
;>of<>2
B>9HC>f
HL>3
M>AcN>;(O>N
FS>&
W><7X>l
F[>e
7]>G
a>TLb>
_d>k"e>
f>agg>C
=m>Z
q>Sor>
{w>YWx>
|>ab}>^?~>:
<?{
^ ?H
*#?Kg#?
$?x;$?
N%?9
&?:&?mp&?
(?[N(?
)?@J)?
)?p.*?qu*?
+?GM+?
4,?|Y,?*
,?'$-?5f-?+
L.?K
/?dG/?
h/?H
T0?r
J1?jy1?
1?B,2?
3?JA3?
4?4$4?vG4?
o4? 
O5?X
"7?yA7?
c7?U
7?0(8?[i8?
B9?Wv9?
7:?-U:?
;?5#<?ZO<?N
<?+B=?
^=?k
>>?Q
Q??i
]@?2}@?W
GB?2yB?
B?+6C?
PC?coC?
C?>)D?
hD?V
7F?\UF?
F?$G?KG?6
H?I@H?
wH?'
I?/I?~QI?
zI? 
I?)!J?
dJ?g|J?
GK?T
L?U,M?
BM?Z]M?
FN?U
O?~0O?
P?i4P?
ZP?r
P?X<Q?0QQ?
PR?Y
.S?gcS?
T?Q*T?
T?[.U?
AU?7XU?\uU?
U?!4V?
V?W?
zW??
<Y?6`Y?
Y?G8Z?nHZ?
Z?(/[?Cn[?
}[?l
[?(,\?fe\??
]??*]?A[]?
.^? X^?U
C`?2\`?h|`?
`?`a?
Ua?gfa?
}a?d
(b?Reb?
"d?JXd?
5e?nke?
@f?Ouf?
g?fJg?
~g?0
h?rKh?
~h?s
Ki?x~i?
8k?Kkk?
k?P&l?
zm?!~m?
_n?`gn?
=o?v?o?
Fo?wTo?|jo?
+p?^Ap?X`p?
"r?[Pr?
Es?3Ds?3Hs?
Ss?Cgs?
t?8#t?
=t?Oat?
u?E v?t
5v?bOv?
=w?Elw?
ew?~ew?
x?.-x?
y?z6y?
-y?G:y?
Gz?x[z?
3{?S={?
k{?k
z|?*z|?x
}?8+}?
R}?5B}?i8}?p6}?A=}?%M}?
e}?7
I~?|7~?
5~?TK~?
z~?Pm~?hh~?Ul~?^y~?*
~?^y~?Ul~?hh~?Pm~?
i~?TK~?
*~?|7~?
e}?%M}?A=}?p6}?i8}?5B}?
R}?8+}?
|?*z|?
*|?g
O{?S={?
xz?x[z?
Oy?G:y?
-y?z6y?*
Lx?.-x?
x?F
lw?~ew?
ew?Elw?
=w?M
qv?bOv?
$v?a
v?E v?
Cu?o
t?Oat?
=t?8#t?H
s?Cgs?
Ss?3Hs?3Ds?
r?[Pr?
"r?o
p?X`p?^Ap?
o?|jo?wTo?
Fo?v?o?
vn?`gn?
m?!~m?
Cm?O
Wl?P&l?
k?Kkk?
i?x~i?
~h?rKh?
~g?fJg?A
f?Ouf?
e?nke?
d?JXd?
Dc?e
pb?Reb?
(b?G
}a?gfa?
Ia?`a?
`?h|`?2\`?
$`?-
7_?T
^? X^?
.^?x
]?A[]??*]?<
\?fe\?(,\?
}[?Cn[?(/[?
]Z?nHZ?G8Z?
Y?6`Y?
?W?W?
tV?!4V?>
U?\uU?7XU?
AU?[.U?:
OT?Q*T?
S?gcS?
jQ?0QQ?X<Q?<
ZP?i4P?
fO?~0O?
}M?Z]M?
BM?U,M?C
J?g|J?
dJ?)!J?
zI?~QI?/I?a
wH?I@H?
G?KG?$G?
xF?\UF?
7F?G
2E?C
hD?>)D?Q
C?coC?
PC?+6C?^
B?2yB?
9A?s
@?2}@?
^=?+B=?
<?ZO<?5#<?C
8;?M
v:?-U:?
9?Wv9?
8?[i8?0(8?9
c7?yA7?
,6?F
O5?^
o4?vG4?4$4?
|3?JA3?
3?s
r2?B,2?t
1?jy1?
h/?dG/?
-?5f-?'$-?!
,?|Y,?
+?GM+?-
*?qu*?p.*?D
z)?@J)?
(?[N(?
6'?i
&?mp&?:&?
N%?u
f$?x;$?
#?Kg#?
L"?v
N!??
^ ?o
~>^?~>ab}>
x>YWx>
jt>9
s>Sor>*
Co>_
h>agg>2
e>k"e>
b>TLb>
7]>w
X><7X>,
8Q>J
O>;(O>AcN>S
cJ>W
pE>U
D>9HC>
W?>s
=>of<>
y:>W
9>:[8>7
6>"S6>c
N0>[
/>3V.>
e*>g
K=X"I=
>G=/,E=*$C=
K==Wg;=
R*=Qy(=
w`<-
jE<`
><s68<
}$<G
;tOv;
\;(BC;
:N*=:
P:D{Z:#
C;qqE;#TG;sCI;y@K;
_;$:a;
k;L{m;=7o;H
t;EYv;
w;>~y;]
|;$R{;
4w;%~v;s
 u;a=t;
cs;Y
q;~Sp;
n;0)m;
Ta;vz`;
^;f(^;
r];N
7[;OaZ;=
U;[1T;&\S;i
L;<OK;K
I;M"I;.CH;VmG;
C;t=B;:lA;
?;@%?;
W;;H
I8;~
5;e'5;wX4;
b1;H
?.;R
q%;+
^t:@
k:fci:%5g:w
.`:.
[:D6Y:
H:oBF:
k2:R0:
s':MH%:
qs9-
nV9}?O9N
19)V*9
o6MX
6{}99
5:Jdc:
X;aue;
<cA#<
&<:L*<
-<6g1<
8<gI<<
R<.iV<
]<Zna<
"=<8$=
N)=K
c7=X
M;=r
==z^?=
zC= 
F=+fG=
J=:YK=
cO=F
)R=D
U=ZxV=n
\=6b]=
b=?Jd=
e=[%g=>
n==p=vq=
r=UJt=
z=rz{=
>\Z >
%>!2&>
)>N**>
>->v
->Zs.>f
$0>t
0>UI1>
5>F(6>I
39>s
\:>/
^=>u
JA>Y
A>"xB>I
D>\uE>
F>LTG>
J>QYK>+
^N>m
.R>q
U>V@V>
V>@{W>
\>3M]>
`>0ha>
b>jMc>
f>fGg>
h>Oji>
&j>s
n>Pko>
uq>U)r>V
Wt>L
w>ivx>q
vz>U%{>
|>zB}>-
7 ?[g ?
-!?+a!?
?"?P{"?m
5$?g$?
%?@#&?
'?K?'?yn'?s
*?NG*?
+??1+?
+?a7,?
p,?L
%-?e-?
$/?wY/?
?0?Q}0?U
(1?sU1?
B2?!v2?
4?^K4?
5?^*6?.b6?
Q7?m
8?O@8?Nn8?
9?<49?
:?'Q:?
:?N";?
6<?0j<?
=?|H=?K
}>?t
b??e
7@?5q@?p
'A?7OA?
wA?u
$B?%SB?>
C?=UC?4
D?.BD?hiD?7
E?j:E?
hE?k
/F?~fF?
H?UCH?)pH?
jI? 
QJ?'wJ?
jK?"
EM?-iM?
VN?1
O?XHO?D~O?
O?W)P?VLP?
oP?z
Q?_3Q?
UR?Z
S?hBS?
eS?L
W?q?W?
>X?!vX?
Y?TAY?
FZ?'xZ?
R\?`}\?
_?%$`?
x`?%
 a?zGa?lpa?_
c?(9c?
!d?GOd?
fe?t
;f?Tff?
f?q!g?
8g?_Pg?Iig?
 h?@Eh?slh?
Ki?:ai?
j?v=j?Faj?$
k?r1k?
$l?mDl?
fl?^
m?@0m?>]m?
n?n4n?uUn?
o?{Co?TTo?
,p?/Np?
qp?~
q?/!q?H1q?
Bq?2Uq?wiq?
xr?x
,s?uBs?
Zs?_us?
t?l>t?
qt?K~t?I
9v?/Mv?tbv?
yv?S
w?O0w?cTw?
\w?Afw?
x?l#x?fAx?#ax?d
-y?yEy?
_y?D|y?c
z?Oz?
*z?v=z?
){?A8{?
I{?\{?"q{?B
|?/*|?Q9|?
^|?os|?
}?#/}?
6~?&O~?
G~?CF~?#F~?
G~?kK~?
n~?&}~?e
~?,w~?
\~?zR~?
C~?jG~?
7}?&#}?<
{|?uc|?
M|?:|?x(|?
y?(xy?
jw?BZw?
)w?f w?
wv?F[v?
xt?Qdt?^Rt?
Bt?#3t?j%t?
s?A_s?
?s?,"s?
zr?&lr?{Br?
q?jjq?YMq?V2q?K
p?Ayp?&Op?
o?Cxo?
n?2hn?
=n?x
hm?kLm?
l?Lfl?
:l?u
|k?\k?
i?4{i?
6i?q
h?lxh?
?e?}
d?4~d?D]d?
 d?r
ec?4c?B
2b?Z
a?<pa?
`?`V`?
_?jc_?
A_?# _?b
"^?0
]?Hd]?
[?7x[?}D[?
Z?n^Z?
6Z?G
Y?r`Y?
DW?+
U?[xU?
EU?m
lS?'2S?#
'R?1
P?UqP?
N?6kN?
@N?K
wG?pNG?
F?iWF?
D?@aD?
5D?3
0B?/
A?NkA?)=A?
}??.D??8??
>?bn>?
<>?o>?2
R<?w
k;?a6;?d
:?"n:?
\9?R
d8?:+8?<
7?cT7?
6?@a6?w
5?$Z5?@
e3?r43?
1?(N1?
j0?z50?V
,.?{
-?t-?
*,?V
*?`D*?8
)?KU)?6
G(?;
'?FV'?
%?If%?
.%?@
%$?$
!?zm!?N6!?
&v>mBu>a`t>
.n>q7m>
Cl>.Sk>-fj>z|i>
~b>T
.[> KZ> jY>h
U>gET>
M>U/L>_QK>
uJ>}
:>V:9>
e8>S
"3>PC2>
f1>*
s&>y
wl=
'^=zD[=
}J=v
E=!HB=
:=SF7=ph4=}
}&=R
Os<C
%;Q5
9.._9
GX:Nbh:
Nx:a
0;pQ4;_
j;j]m;
z;I4};
X<=
<C/
"<de"<
"<V/#<
g#<B
I$<-
2%<Fo%<
i&<.
,(<z_(<
G+<As+<
+<.,,<
-<j--<
N-<|p-<6
'.<~O.<
x.<s
{/<]
10<zS0<
v0<P
1<X/1<
E1<:]1<
u1<d
D2</S2<~b2<
r2<b
$3<_-3<
i3<Rx3<x
m3<dc3<
R3<sL3<@G3<9C3<?@3<0>3<
<3<-<3<6(3<
2<'{2<
51<d
\0<A>0<0!0<!
/<&w/<1d/<~R/<
$/<C
q.<4V.<
$.<;
-<Vm-<
*-<Q
@,<N,,<y
I+<]++<+
g*<[S*<0@*<%
r(<NK(<
$(<n
'<Sw'<
;'<@ '<
h&<SA&<
$<Cw$<
z"<.Q"<{)"<
:!<|
P<i3<
~;3$~;
tw;F
Rv;E
9u;N
)t;T
"s;w
q;0$q;9
p;\(p;
m;\Cm;Y
+l;<
f;0]f;+
3e;W
b;2tb;W
ga;p
^;_;^;
[;qQ[;'
T;|.T;
;P;g
M;wlL;
K;b5K;
J;^sI;
G;27G;
?;y5?;
<;mq<;
8;DV8;
'7;l
5;?n5;*
*;'k*;_
+(; 
#;'K#;
 ;An ;
+;L
n:x!l:
d:^xa:
W:9~T:
Q: dO:
=:^q;:
?2:c
}+:n;):
P":~
9VV~9
1l9L
P9WIG9
y07:
G7ho^7
.8Q;38
t8$^y8
~8id
.94
Y%8;
0123456789abcdef
/Library/Audio/Tunings/Generic/AU
%NSt3__112bad_weak_ptrE
:St19bad_optional_access
tcvtN5caulk19bad_expected_accessIiEE
N8nlohmann6detail10type_errorE

U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N5caulk19bad_expected_accessIvEE
L>33
@^y7
?PQ 
?m^e
?Qt
?DFB
?Ht2
%^Nx
?n;\
?O0q
EZY.
?N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_16bad_lexical_castEEEEE
St8bad_cast
iRR?
}&@<
d_>"
>7Rv
>7o|
K:DO
:Ps:?M
tS?Uw
\?^t
j?G"
x(n?
.q?:Z
t??
<\qq
D5}?R
M7$=
M7$=
D5}?R
<\qq
t??
.q?:Z
x(n?
j?G"
\?^t
tS?Uw
:Ps:?M
>7o|
>7Rv
d_>"
P\';%m
;rQy
;RIq
;-Bi
<;7Y
6~<<
Q<741
2GE<
.<IK
U>?|_
7>f37>
>5a[>
=%E?</
U>v2
=2GE
L^>}
e>ml
741?
4l>W>
19?nmq>
r=6~<
;7Y?4
yx>{
-Bi?M
RIq?
rQy?
e<.b
m;>a
/>CN
=P\'
xfuaverdlppa
xfuasondlppa
mk?R
LQ?f
>St16invalid_argument
main
.?+L+?|
T>ocC>
0 >^
=F^V=A
=F^V=<
1>ocC>
Yf>g
'?+L+?l
4A?v
I?XsL?
;T?%
Y?Lo[?
r?yxs?h
Fw?Rex?Ppy?
K{?a
gz?Ppy?Rex?
Fw?D
t?yxs?
[m?7
]?Lo[?
O?XsL?
Q>fZ]>3
@ ?Q
A?DeG?
VM?+]S?
zY?\
%/1A[_amsw
 ' ) - 3 G M Q _ c e i w } 
!5!A!I!O!Y![!_!s!}!
"!"%"+"1"9"K"O"c"g"s"u"
#'#)#/#3#5#E#Q#S#Y#c#k#
$)$=$A$C$M$_$g$k$y$}$
%'%1%=%C%K%O%s%
&'&)&5&;&?&K&S&Y&e&i&o&{&
'5'7'M'S'U'_'k'm's'w'
(!(1(=(?(I(Q([(](a(g(u(
)!)#)?)G)])e)i)o)u)
*%*/*O*U*_*e*k*m*s*
+'+1+3+=+?+K+O+U+i+m+o+{+
,#,/,5,9,A,W,Y,i,w,
-;-C-I-M-a-e-q-
.%.-.3.7.9.?.W.[.o.y.
/'/)/A/E/K/M/Q/W/o/u/}/
0#0)070;0U0Y0[0g0q0y0}0
1!1'1-191C1E1K1]1a1g1m1s1
2)252Y2]2c2k2o2u2w2{2
3%3+3/353A3G3[3_3g3k3s3y3
474E4U4W4c4i4m4
5-535;5A5Q5e5o5q5w5{5}5
6#6165676;6M6O6S6Y6a6k6m6
7?7E7I7O7]7a7u7
8!83858A8G8K8S8W8_8e8o8q8}8
9#9%9)9/9=9A9M9[9k9y9}9
:':+:1:K:Q:[:c:g:m:y:
;!;#;-;9;E;S;Y;_;q;{;
<)<5<C<O<S<[<e<k<q<
=!=-=3=7=?=C=o=s=u=y={=
>#>)>/>3>A>W>c>e>w>
?7?;?=?A?Y?_?e?g?y?}?
@!@%@+@1@?@C@E@]@a@g@m@
A!A3A5A;A?AYAeAkAwA{A
B#B)B/BCBSBUB[BaBsB}B
C%C'C3C7C9COCWCiC
D#D)D;D?DEDKDQDSDYDeDoD
E+E1EAEIESEUEaEwE}E
F%F'F3F9F=FCFEF]FyF{F
G#G)G/G5G9GKGMGQG]GoGqG}G
H1H=HGHUHYH[HkHmHyH
I+I7I=IEIUIcIiImIsI
J#J9JAJEJWJ]JkJ}J
K%K1K;KCKIKYKeKmKwK
L!L-L3LKLULWLaLgLsLyL
M'M)M/M3MAMQMYMeMkM
N+N5N7N=NONSN_NgNyN
O%O-O?OIOcOgOmOuO{O
P)P5P?PEPGPSPqPwP
Q#Q%Q5QGQIQqQyQ
R'RCRERKRaRmRsR
S#SASESGSKS]ScS
T5T7T;TATITSTUT_TaTkTmTqT
U'U+U9U=UOUQU[UcUgUoUyU
V#V/V3V9V?VKVMV]V_VkVqVuV
W#WGWMW_WaWmWwW}W
X'X+X-XUX[X]XmXoXsX{X
Y!YEYKYMYWY]YuY{Y
Z)Z/Z;ZMZ[ZgZwZ
[%[+[=[I[K[g[y[
\)\/\3\9\G\K\M\Q\o\u\w\}\
]1]=]A]G]O]U][]e]g]m]y]
^!^'^+^-^1^9^E^I^W^i^s^u^
_'_3_5_;_G_W_]_c_e_w_{_
`#`/`7`S`_`e`k`s`y`
a-a9aKaUaWa[aoaya
b!b'b;bAbKbQbSb_beb
c/cAcCcOc_cgcmcqcwc}c
d!d'd+d9dCdIdOd]dgdud
e!e/e9e?eKeMeSeWe_eqe}e
f)f1f;fAfGfMf[fafsf}f
g'g1g7g?gEgQg[gogyg
h-h9h;h?hEhKhMhWhYh]hchihkhqh
i)i/iCiGiIiOieikiqi
j+j7j=jKjgjijuj{j
k#k'k-k9kAkWkYk_kuk
l)l+l1l5lUlYl[l_lelglslwl}l
m%m'm+m1m9m?mOm]mamsm{m
n)n3n;nEnunwn{n
o/o=oMoSoaoeoyo}o
p'p3p9pOpQpWpcpupyp
q!q3qQqYq]q_qcqiq
r%r/r;rCrUrgrqrwr
s!s+s=sWs[sas
t-t9t?tAt]tkt{t
u%u;u=uMu_ukuwu
v!v-v3v=v?vUvcvivovsv
w!w-w5wAwKwYw]w_wqw
x%x+x5x=xSxYxaxmxwxyx
y%y+y9y?yKyWy]ygyiysy
z#z'z-zKzWzYz_zeziz}z
{+{5{7{;{O{U{_{q{w{
|1|7|I|g|i|s|
}3}9};}?}E}M}S}Y}c}u}w}
~)~+~/~5~A~C~G~U~a~g~k~q~s~y~}~
tFBn
i9Bc
}BG\
i9Bn
.e'OhbBj7)A
UA-f
[#`A
AnA/
Bg}\B
2gMB
\-Cd
ElB0@
Ak!C
@C>IB,
XBTf
(RA)
9'Ab?.Bm
BeM,
XA'r
@;O@BXk1BL_E
&w5B
C6c1C
|AMn
^ByD
 hW@p
a.ZB(r
/By 
@nm/B
fVCBZ
-C|t
BB_.?
MSB3
!B^@
G%AnntBO
mB!-
(Bxq
B3L_
C#j&C
KM%C
AM4BR
? Cj
3OB)
%9BB
,B'o
B1O6A
@k6B
B{O|B
+A:I
.FB,SX@-yRB
phARpo@
QcBDP
"BNR
yA#^ B['%B
B[Up
;Bk3
i=1BV#
,Cic
vB9h<A
1C\s
12'A
j(C/
:BAy
Bdw0
l`BBO
@Cr0
mB1HD
;B/?aB
3BCT
t&|@
:HA!
OB:,Y
}">A
tBJ"[@
e:Ao8;B
FAbT
g>9s
B-R C
ukBqh
MB=l
V}ArF
wBl_
Kf$C
C":/
.CBSN
0 CL
ih0C
}}AD
B^j4Bx
B/OzB1
2CVB
Cj.'
>ZA_
%fI{
]A<D
{AB>r
>@7P
A+60B
N_B$
B\Y6
]chB
@M[GAIt
E_@u
K\B
#Ako
A*o
,3B?
? BI
sBB4
TBF2PB
FOBl
B*miB^
#C:#
%*Chg
_-C+
e1CF
b(Ca63C
hA&N
BE,
BO:+B+
SB*UoBc
LeBG
rEAQ
@5azA
dUB0
#B<7
hY@[L
 BMkRBV
$B(\QB5
vB85zBNumB
=B$=&B
,:A`
A!AdA(
@2SCA3
%AA]-
;<BJ
tBC]vB@
kB.'eB
[dBX
=Bu.vB9w
8%Cj
_-C|
P$-C4
Cj[(C
_@(C
3C8k'
A+!7A
"B:`
|B_~WB
y?[z.A
4BQ$^B
@H\TA
;Bg^
wB$,{B
MLB6g*B
lRAV
#\)ACB
WsAyp
Bp0'B
g*B9
+B{T8B@
QBhaMB
(_.A?}
M;BE
tNBF
CsQ+C
81C6[!C
P1C?
"C'*,CV
}.CL
'C#;1C
)AEg
B6x"B% /B
OIA{
&ABB
UB4$OB
B*O=B
qXBx<lB
A^:=A
B*a?BW[hB
G8B 
A;m BU
AcL$B
:A3Q
Bo"XB
_BRk4B
BW>.B
nKB_
%?8JJA
-A?S
eCA[
Az8.Ap
59AqA
tkA@
+@~
B)'%B
X>B}
%7BXV
#gB(
nB<}fB
KqBd
~ZBF
_uB,
&CaD3C
Cg&!C
1Cg&'C
$C!3.C
~ CO
.Cl-'C
)$A.
@5J^
@zxXAs
@GLzA;|
cXAD?c@
z?FC0AcM
0BQ-
AEBf
1}B!
GB]%$B
Ak0WA4
GB}y#B
p7@L}\A#8
J<BU
)B~<
RAnq9@
 %BN
2hBV
J:BO1HBZ
7B+Q B&
Q#Bi@
2ASK
Am7DA
oA7Db@
y+Bk
<Bzt9B
U9BVa=Br
m@B1;TB}
^B:eeB(
^BR?bB^F[B}BDB
R5oAu
wBA=
~BSI
~UB|l@B
,1Br
'B;OgB
.C3e
C/K,C
0C1+!C
x/C-d-
s#C8
CL8'C
/CbQ&C
CE~#CwI-C
K3,C(
6m/C
Ye@@
Q&AQ
\ADV
B3B3
<B,.=B
3BSd B&D
cBu]_B
RAhr
@m}r
+B*
BA}sB/
\B7s:B
AadB
m/BoaSB
KwB{5
BLP^B
y;BG
fBGbBB{*!B
eKAdC{@
@.QjA
BNx(B#
=xAY;
,B%\RBI6vBH`
>B%8
BOAU
DBK\cB
wBI+
g"Br
t^B$BMBDB3B
]4BCu6B
L&8?.
At#\A
AN<#A
|@+E
A g3A
9A}.*
A0UdA-
B'W B]
TBHHVB
3#B9
SBM|\B
dB_{oB
ExBB
{B=<
TlB}
oBE}
$CXx
D/C7
C7E$C
-Cq`%C3*
/Cek0
R.C'
A&3NAF
Byg(Bb
tfA`
8KBdmaB
tBw]aB
?A}}
.uB=
|Ay$
BaS2B
$A"t
v!B;3DB
`~B<
GkB"
kBQ)NB
h/B2U
@FdVA[r
\4BI
,?BH
c/AY
`JAN
`8AP
@pF!A
a\Ag
@,(|An0
2Qx@X
,BA@5Bdh6B;
*B;X
ta?e /
.BnJ8B
VBiPXB
>B|JOB
"xBZ
N}Bc
tBkX_B
-B,O
B.(YB
U:B5Y
C\|/CO
`+C.
F/CG
*C(B C4
C_9'C>
+CBY#C~7
~&CS+/CaY0
 C=r$C
:E2CVI)CY(C8^+C'
3Cv~0
 se@
(Y@ 
WsAm
Q@vC
Z!Bx
,Ban>B
tA.:
SB9geB
BMV%B"
BB}5]B
0B_,
/4Bd
RB@MsB
iwBn
WBHi8B
f\ARt
BY~%Bi
B'p`B
BB"\%B1@
@3>mA
@@v_A
BEu>B
Q^Be/vB
zVB!\9Bpk
:B3RJB
\^Aq
@H}gA&
?A=t
Aib^AX
DA)B
2Av-IA
@?nC>w
TcA
AX["?
*Br'3B
49B i>B
>"B[
GAj$
ssBS
B&[sB
#(CVR
\r0C&/%C
V!C0
pV0C.M)C
"C8s
"C"T)C
h1CH
}?2C#;+C(
32C4
?@=,
!RA-m
p?A~d
d;/?
8!BVM
w@AF
BhG%BC
MBY@
_B=GtB
_yB/
t%BS`
5BrkPBW
|B:G
SBux:B
aB J}Bd
bBf
5BUh
$4B
B,ReBb
&B'L
D7@n
GAV
1B+CSB6
QBmlB
fmB|
9@6B)A
!\Bk
g(BC;
A}vWAH
nAjY
B I!BS
?:A=$
8@cS{
m@2"
'@5zJA
0B/.5B
@<B!
61Bb
HB8,OBU
ZZB7
Bt!4B
hdBd
c~B&*zB
kgB*lzB
A1[j
x/An
0Cv2"
3Cy0'
-Cpq"C
P?/C
%Ciz
+C%#$C;
["Ci
!^-C
CW(!C
mP.C
Cfv!C 
$C&-+CY
AEv]A
Ar{ZA
TBJD
$BYn1B
4B2e&B
QB#GDBD
`]AO
T1B
BcF-B3HFB
]BD%rB
eBXILB
A3gDA
6B9Z
1Bx3LB6GgB
t2BCX
2Bf4
2B'FMBmahBrB
OBBU
$B>s
BA[j
@0#CA^
fTB?
SSB0X:B
?}Ae
qB;<\B
JBO(8B
s@t".Al
HgB`
LBeh<Bl
A4HAuu
DBc_IBL
fB1c
4(Bt[(B
qAn/
@tK;A
R~?8
gA-'
s~A=
XAH<
+B";-B
H"B8
<B}^FB
LHB|
AB7Z7B
?Rd\A
ueB#pcB5
A0V B
JB\AZB
|yBkPsB
'oB=
1M/A\
/B\rQB
{B,^
BtDsB
CP$!C=
C4q#C
G6,C
a+C-
C\~C
HCo_
\&CT
L,C^X$CjX
-1CIo.
( Cda#C0X)C
y+CY
GP.C^2,C
AOfoA
!A_.
-%B~P6B
.GBI
OfAmj
T1B#
.WBlxdB
w_B,
.Bcx
@VeGA
\Bl%qB
!ANmh@
C{Bq
X{BE@fB
5NBS~5Bp!
m9BMbTB
qhBC
NBNJ6BqG
zBAI"
gB`cNBi
BTs2B
kBLw
G8Bnl
:AWc
A~`lA
>vBO
7Bz OBT@fB
 1B4
~eBC
YBmfGB
GBAu
cTBy[QB
5B9j4B
{mAix
Aur/@6Gh
*An+_A
(lAy
i#*@
A6EiA
 Ae|
@&BA
;BVu1B
B%L#BN
iYBe
g\Bl
c7B?
*7AA
]!B@FAB
~Ba%
RbBv
`jB2
PA/{h
Pa*C
C']2
!+Cq/
3C`2 C
Cf6$C
$C!}.C
%C|"
+CJQ3
N,Cz%&C
C-5%CR
&/CT
4L2C
aAg/
(@yF
-kAK
@LsFA
AHr-A
h,O?
3!B>
8BOX8Bor6B
@=n6?
9BG[IB
?SB\
.9B#
@Hn>A
UBAdeB
^A2j
+B/BBe
<oBC
[BA-CB
@%$ZA
B[H7B
nB.gTB~M<B
$B"lB
-BGGIB-
eB";
A-LzA=
A8uA
B\Y#B}
nUBc#;B
BUH2B
0L@r
cB`Z{B
AB1ZAO
7BCNOB2
|B/~
4B'l
~A+c
>IAQG
$AVO
 B3e0Bv
QEBO
SA{+
MBw
A-4HA
2c}@cf
?~A4
~z;W
?A9J\A(NMA'
Sj+@
@RS3A
A|rB9
A0@ZAl
k2B1K4B1
AX78A
<Be6$B%
:YBR
cBY~eBo
^B/KOBk
>![Ay
BRA,B
/yBh
bB$jHB
9Aa0
/Bm~MB/
rB82
nB|cWB
cBB]
AeN0B
^B,`|B
C?W'C
23C,=%C
#CM#,C
4-C4%$C
BG1C
CO_CY
dy/CbC*C
(Cn).C
'CP2!C
R*CoN0CD82
Z|w@
F?e?
]A?*
@lXGA
1}A@j
|6B1F4B
(B{q
M@BZfLBL
NB%1HB
AX$yA{
z?B^
8bBw
UBtyDB
q1BXQ
<W@<
}A0V
Q[B!
BX~B
PB3,6B
A'nuA
M@](
BR`sB
Bak)B-
\B]MwB_
BQEoB
UB^/=Br
tA`k
*B![CB
|*Ae
BCAmBX2SB
9B_[
A`[kA)
[An&
AkLbA
KA@l
JcB>ZyB
dB(eNB1':B.
!B%k
;{BuA
oBCbeB
BMg*B
;B0uMB&VXB
J4A6
KA<k
Nc@qxb
{AZ|`A,
|]J@E
<N5boost9exceptionE
St12domain_error
?/';
 9j*
!H"H
VrH-
GRty
]kK"
Z?Lq
NSt3__112system_errorE
St12out_of_range
N5ausdk11AUExceptionE
12CAXException
St12length_error
St11logic_error
11CAException
St14overflow_error
St13runtime_error
3$_0
St9bad_alloc
St9exception
 5
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Rule]
CASuperBowl
failed to convert "
" to four character code
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Database_Parser]
allocator<const T>::allocate(size_t n) 'n' exceeds maximum supported size
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_Audio_Injector_Factory.cpp
/tmp/
v%u.%s
vp.inject.
iiii.000.
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Injector]
I/O node audio injectors are enabled
I/O node audio injectors are disabled
microphone port type for audio injectors is %s (%s)
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Wired]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Bluetooth_HFP]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Bluetooth_LE_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::TTY_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::USB_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Car_Play_Main_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)128]
reference port type for audio injectors is %s (%s)
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Line_Out]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headphones_Wired]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headset_Bluetooth_HFP]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headphones_Bluetooth_A2DP]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Receiver_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::HAC_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Speaker_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::TTY_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::USB_Audio_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Bluetooth_LE_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Display_Port]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::HDMI]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Air_Play_Screen]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Air_Play_Music]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Car_Play_Main_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)128]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Injector_Factory]
com.apple.coreaudio.VoiceProcessor (messenger)
Carrier
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
operator()
base64_from_binary.hpp
t < 64
false
AUNBandEQ_FilterType
AUNBandEQ_FilterFrequency
AUNBandEQ_FilterGain
AUNBandEQ_FilterBandwidth
DSP_Settings_EQ_Override
gain
noise suppression
speaker calibration
IO_SAMPLE_RATE
IO_BLOCK_SIZE
_INPUT
_SAMPLE_RATE
_CHANNEL_COUNT
_OUTPUT
FFT_BLOCK_SIZE
com.apple.coreaudio
VoiceProcessor
type
message
file
function
line
status
std::string_view vp::reflect_type_name() [T = DSPGraph::Exception]
assert_invariant
json.hpp
m_type != value_t::object or m_value.object != nullptr
m_type != value_t::array or m_value.array != nullptr
m_type != value_t::string or m_value.string != nullptr
m_type != value_t::binary or m_value.binary != nullptr
[json.exception.
cannot use operator[] with a string argument with 
type_error
null
object
array
string
boolean
binary
discarded
number
uplink
downlink
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Issue_Detector]
std::string_view vp::reflect_type_name() [T = vp::Audio_File]
Could not construct
version
subtype
manufacturer
data
????
Float32
Int16
Fixed8.24
Float64
Int32
, interleaved
, deinterleaved
%2u ch, %6.0f Hz, %s%s
%2u ch, %6.0f Hz, 'freq'
%2u ch, %6.0f Hz
%2u ch, %6.0f Hz, %s (0x%08X) 
 big-endian
 little-endian
 signed
 unsigned
integer
float
%spacked in %u bytes
 high-aligned
 low-aligned
%u.%u
%s-bit%s%s %s%s%s%s%s
from %u-bit source, 
from UNKNOWN source bit depth, 
%u frames/packet
%u bits/channel, %u bytes/packet, %u frames/packet, %u bytes/frame
Bypass
Enable Acoustic Gain Control
Request Metadata
Mute Uplink Output
Disable
Microphone Trim Gains
Reference Trim Gains
Micriphone DSP Settings
Reference DSP Settings
Beam Direction
Hardware Has Voice Processor
Driver Processing Mode
Enable Tap Stream
Mute Downlink Voice Input
Max Far End Voice Frames
Speaker Input Data Source IDs
Hardware Volume (dB)
Thermal Budget
Speaker Calibration Data
Codec Type
Codec Sample Rate
Reporter IDs
A/B Helper Uplink Chain State
A/B Helper Downlink Chain State
Spatial Metadata
Spatial Head Tracking Configuration
Enable Media Chat
Enable Spatial Chat
Enable Media Playback on External Device
Muted Activity Event Listener
Mix Stereo To Mono
Unknown
Operation Mode
Generic Call
Baseband Call
FaceTime Video Call
GameChat Call
FaceTime Audio Call
Continuity Call
WiFi Call
HomeKit Call
Half-Duplex Call
Uknown Call
Chat Flavor
Default Mode
Music Mode
Voice Isolation Mode
Uknown
std::string_view vp::reflect_type_name() [T = vp::decorators::Xcode_Instruments]
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor_Interface_Adapter]
~shared_spin_lock
shared_spin_lock.h
m_state == state_t{}
unlock
result == true
microphone input sample rate %f is not supported
microphone input channel count is zero
microphone input block size is zero
microphone input port types array is null
microphone input port types array is empty
reference input sample rate %f is not supported
reference input channel count is zero
reference input block size is zero
reference input port types array is null
reference input port types array is empty
failed to begin uplink initialization
failed to set microphone stream format
failed to set microphone block size
failed to set microphone port type
failed to set microphone device ID
failed to set reference stream format
failed to set reference block size
failed to set reference port type
failed to set reference device ID
bad argument
bad frame count
bad property ID
bad property read
bad property
DSP error
configuration fault
I/O fault
state fault
not implemented
not supported
unknown
exception filter caught unexpected exception
output sample rate %f is not supported
output channel count is zero
failed to set uplink client near end voice output stream format
failed to end uplink initialization
hardware mix output sample rate %f is not supported
hardware mix output block size is zero
far end voice input callback is null
failed to begin downlink initialization
failed to set hardware mix output stream format
failed to set hardware mix output block size
failed to set client far end voice input stream format
failed to set client far end voice input block
failed to end downlink initialization
speaker telemetry input sample rate %f is not supported
speaker telemetry input channel count is zero
speaker telemetry input block size is zero
failed to set downlink speaker telemetry input stream format
failed to set downlink speaker telemetry input block size
unlock_shared
expected_state.m_reader_count > 0
expected_state.m_writer_count == 0
uplink microphone input audio buffer list is null
uplink client output audio buffer list is null
failed to write uplink microphone input signal
failed to run uplink DSP
failed to read uplink client output signal
downlink hardware output audio buffer list is null
failed to write downlink default audio input signal
failed to write downlink system audio input signal
failed to write downlink other audio input signal
failed to run downlink DSP
failed to read downlink hardware output signal
failed to write uplink hardware DSP reference input signal
uplink reference input audio buffer list is null
audio buffer list is null
microphone audio buffer list is null
microphone audio time stamp is null
frame count is zero
vector.hpp
this->m_holder.m_size >= n
insert
this->priv_in_range_or_end(pos)
priv_forward_range_insert
this->m_holder.capacity() >= this->m_holder.m_size
get_next_capacity, allocator's max_size reached
flat_map::at key not found
database.v([1-9][0-9]*).([0-9]+).([a-z]+)
assertion failure: audio issue detector service must be nonnull
assertion failure: audio issue detector service client must be nonnull
assertion failure: input node index is out of range
assertion failure: output node index is out of range
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Downlink_Far_End_Voice_Input]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Downlink_Output]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Uplink_Hardware_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Uplink_Output]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)128]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Issue_Detector::Node_Decorator_Factory]
get DSP parameter
set DSP parameter
get DSP property info
get DSP property
set DSP property
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/dsp/Graph.cpp
get required input frame count
get expected output frame count
process
reset
connect
disconnect
failed to %s due to unknown exception
failed to %s due to DSPGraph exception
VPTRPBAudioUnitType
VPTRPBAudioUnitSubType
VPTRPBAudioUnitManufacturer
DSPGraph Configuration
unknown exception
DSPGraph exception
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::File_Manager]
vp_ref_stream_format
vp_ref_block_size
vp_ref_port_type
vp_ref_port_sub_type
vp_ref_port_endpoint_type
vp_ref_port_is_Apple_bluetooth_product
vp_mic_stream_format
vp_mic_block_size
vp_mic_port_type
vp_mic_uplink_output_stream_format
vp_enable_acoustic_gain_control
vp_hardware_mix_output_stream_format
vp_hardware_mix_output_block_size
vp_mic_downlink_input_stream_format
vp_operation_mode
vp_codec_type
vp_codec_sample_rate
vp_bypass
vp_disable
vp_hardware_has_vp
vp_tap_stream_enabled
vp_media_chat_enabled
vp_spatial_chat_enabled
vp_chat_flavor
vp_stereo_to_mono_mix_enabled
vp_media_playback_on_external_device_enabled
vp_config_operation_mode
vp_config_input_port
vp_config_output_port
vp_config_ref_subport
vp_config_primary_vocoder
vp_config_primary_vocoderFs
vp_mix_stereo_to_mono
vp_spatial_head_tracking_enabled
vp_spatial_head_tracking_mode
vp_route_duration_ms
vp_route_change_duration_ms
default
voice isolation
music
deallocate
cpp_allocator.h
len <= max_size()
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Statistics]
caulk::pmr::polymorphic_allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
std::string_view vp::reflect_type_name() [T = vp::decorators::AB_Helper]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Property_Exchange.cpp
property exchange failed to allocate property 
property exchange does not support property 
assertion failure: application bundle ID state must be set
assertion failure: bypass state must be set
assertion failure: media handoff state must be set
assertion failure: supported chat flavors state must be set
assertion failure: control center service is null
assertion failure: preferred chat flavor is invalid
std::string_view vp::reflect_type_name() [T = vp::vx::Control_Center_Manager]
is not
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Standard]
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Wide_Spectrum]
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Voice_Isolation]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)128]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Smart_Cover_Detector]
valid
invalid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Personal_Audio_Command]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Personal_Audio_Command_Factory]
assertion failure: audio ring buffer storage is null
assertion failure: audio ring buffer storage offset underflow occurred
assertion failure: audio ring buffer storage offset overflow occurred
hwmic
hwref
epmic
epref
epout
tsmic
tsref
ulout
dlfev
dloau
dlsso
dlvio
sptel
dlout
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Capturer]
invalid data structure header
invalid data structure size
struct parser read overflow
trim_gain_db
assertion failure: volume limit dBA target must be strictly positive
assertion failure: I/O node must support real-time property control
assertion failure: settings manager must be non-null
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Volume_Limit_Delegate]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Volume_Limit_Delegate_Factory]
{%s}
find global configuration
find uplink configuration
find downlink configuration
find uplink DSP node configuration
find uplink DSP node configuration options
find downlink DSP node configuration
find downlink DSP node configuration options
operation_mode
chat_flavor
input_port_type
output_port_type
output_port_sub_type_4cc
output_port_sub_type_legacy
output_port_endpoint_type_4cc
output_port_endpoint_type_legacy
output_port_is_apple_bluetooth_product
output_port_is_not_apple_bluetooth_product
spatial_chat_is_enabled
spatial_chat_is_not_enabled
spatial_headtracking_is_enabled
spatial_headtracking_is_not_enabled
media_chat_is_enabled
media_chat_is_not_enabled
media_playback_on_external_device_is_enabled
media_playback_on_external_device_is_not_enabled
stereo_to_mono_mix_is_enabled
stereo_to_mono_mix_is_not_enabled
voice_processing_is_bypassed
voice_processing_is_not_bypassed
voice_processing_is_disabled
voice_processing_is_not_disabled
voice_processing_is_done_in_hardware
voice_processing_is_not_done_in_hardware
spatial_mode
hardware_mic_input_channel_count
hardware_ref_input_channel_count
client_nev_output_channel_count
client_fev_input_channel_count
hardware_mix_output_channel_count
vocoder_sample_rate
vocoder_type
tap_stream_is_enabled
tap_stream_is_not_enabled
match
match_all
match_any
when
when_not
then
else
load_plist
load
load_global
Global
load_uplink
load_downlink
Downlink
override_plist
replace_strings
replace_input_port_type_4cc
input_port_type_legacy
replace_output_port_type_4cc
output_port_type_legacy
replace_output_sub_type_4cc
replace_output_endpoint_type_4cc
" : 
DictionaryRef_iterator iterator out of range.
Error, not a json style CFDictionary
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Database]
get_decimal_point
lexer.hpp
loc != nullptr
invalid BOM; must be 0xEF 0xBB 0xBF if given
invalid literal
unget
not token_string.empty()
scan_literal
std::char_traits<char_type>::to_char_type(current) == literal_text[0]
scan_string
current == '\"'
invalid string: missing closing quote
invalid string: '\u' must be followed by 4 hex digits
invalid string: surrogate U+D800..U+DBFF must be followed by U+DC00..U+DFFF
invalid string: surrogate U+DC00..U+DFFF must follow U+D800..U+DBFF
0x00 <= codepoint and codepoint <= 0x10FFFF
invalid string: forbidden character after backslash
invalid string: control character U+0000 (NUL) must be escaped to \u0000
invalid string: control character U+0001 (SOH) must be escaped to \u0001
invalid string: control character U+0002 (STX) must be escaped to \u0002
invalid string: control character U+0003 (ETX) must be escaped to \u0003
invalid string: control character U+0004 (EOT) must be escaped to \u0004
invalid string: control character U+0005 (ENQ) must be escaped to \u0005
invalid string: control character U+0006 (ACK) must be escaped to \u0006
invalid string: control character U+0007 (BEL) must be escaped to \u0007
invalid string: control character U+0008 (BS) must be escaped to \u0008 or \b
invalid string: control character U+0009 (HT) must be escaped to \u0009 or \t
invalid string: control character U+000A (LF) must be escaped to \u000A or \n
invalid string: control character U+000B (VT) must be escaped to \u000B
invalid string: control character U+000C (FF) must be escaped to \u000C or \f
invalid string: control character U+000D (CR) must be escaped to \u000D or \r
invalid string: control character U+000E (SO) must be escaped to \u000E
invalid string: control character U+000F (SI) must be escaped to \u000F
invalid string: control character U+0010 (DLE) must be escaped to \u0010
invalid string: control character U+0011 (DC1) must be escaped to \u0011
invalid string: control character U+0012 (DC2) must be escaped to \u0012
invalid string: control character U+0013 (DC3) must be escaped to \u0013
invalid string: control character U+0014 (DC4) must be escaped to \u0014
invalid string: control character U+0015 (NAK) must be escaped to \u0015
invalid string: control character U+0016 (SYN) must be escaped to \u0016
invalid string: control character U+0017 (ETB) must be escaped to \u0017
invalid string: control character U+0018 (CAN) must be escaped to \u0018
invalid string: control character U+0019 (EM) must be escaped to \u0019
invalid string: control character U+001A (SUB) must be escaped to \u001A
invalid string: control character U+001B (ESC) must be escaped to \u001B
invalid string: control character U+001C (FS) must be escaped to \u001C
invalid string: control character U+001D (GS) must be escaped to \u001D
invalid string: control character U+001E (RS) must be escaped to \u001E
invalid string: control character U+001F (US) must be escaped to \u001F
invalid string: ill-formed UTF-8 byte
get_codepoint
current == 'u'
0x0000 <= codepoint and codepoint <= 0xFFFF
next_byte_in_range
ranges.size() == 2 or ranges.size() == 4 or ranges.size() == 6
scan_number
invalid number; expected digit after '-'
invalid number; expected digit after '.'
invalid number; expected '+', '-', or digit after exponent
invalid number; expected digit after exponent sign
endptr == token_buffer.data() + token_buffer.size()
value
object key
object separator
number overflow parsing '
sax_parse_internal
parser.hpp
not states.empty()
excessive object size: 
handle_value
json_sax.hpp
not keep_stack.empty()
ref_stack.back()->is_array() or ref_stack.back()->is_object()
not key_keep_stack.empty()
object_element
end_object
not ref_stack.empty()
iter_impl
iter_impl.hpp
m_object != nullptr
set_begin
cannot compare iterators of different containers
operator==
invalid_iterator
set_end
operator->
m_it.object_iterator != m_object->m_value.object->end()
m_it.array_iterator != m_object->m_value.array->end()
cannot get value
iterator does not fit current value
iterator out of range
cannot use erase() with 
operator++
excessive array size: 
end_array
out_of_range
parse_error
<U+%.4X>
parse error
 at line 
, column 
syntax error 
while parsing 
; last read: '
unexpected 
; expected 
<uninitialized>
true literal
false literal
null literal
string literal
number literal
<parse error>
end of input
'[', '{', or a literal
unknown token
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Node.cpp
audio buffer list pointer is null
audio time stamp pointer is null
, and 
audio frame count is zero
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_CPU_Profiler_Factory.cpp
%Y%m%d.%H%M%S
.CPUProfile.json
CPUCycleCount
CPUInstructionCount
Mean
Count
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_CPU_Profiler]
I/O node CPU profilers are enabled
I/O node CPU profilers are disabled
file_text
std::string_view vp::reflect_type_name() [T = vp::vx::dsp::Graph_Compiler]
vp.%Y%m%d.%H%M%S
.%03u
vp.%Y%m%d.%H%M%S.xxx.props.bin
vp.%Y%m%d.%H%M%S.xxx.times.bin
SpatialMode
HeadTracking
std::string_view vp::reflect_type_name() [T = vp::vx::components::Property_List_Writer]
File Name Prefix
failed to write %s to property list
file name prefix
Process Call Count
'Process' call count
AppendRefSignal Call Count
'AppendReferenceSignal' call count
ProcessDL Call Count
'ProcessDownlinkAudio' call count
%f, %f, %llu
MIC Overload
uplink microphone overload message
REF Overload
uplink reference overload message
SPKR TEL Overload
downlink speaker telemetry overload message
DLP Overload
downlink overload message
HW REF Format
uplink reference input format
HW REF Block Size
uplink reference input block size
Ref Port Types
uplink reference port types
Ref Port #0 Subtype
reference port sub-type
Ref Port #0 EndpointType
reference port endpoint type
HW REF Trim Gains
uplink reference trim gains
Telephony REF DSP Settings
custom reference DSP settings
HW REF Device Sample Rate
reference device sample rate (Hz)
HW MIC Format
uplink microphone input format
HW MIC Block Size
uplink microphone input block size
Mic Port Types
uplink microphone port types
HW MIC Trim Gains
uplink microphone trim gains
Telephony Mic DSP Settings
custom microphone DSP settings
HW MIC Device Sample Rate
microphone device sample rate (Hz)
HW MIC Presentation Latency
microphone input latency
HW MIC Safety Offset
microphone input safety offset
HW REF Input Latency
reference input latency
HW REF Input Safety Offset
reference input safety offset
HW REF Presentation Latency
reference output latency
HW REF Safety Offset
reference output safety offset
VP Output Format
uplink client output format
MaxNumOutPkts
maximum number of uplink client output packets
MaxOutPktByteSize
maximum byte size of uplink client output packets
Enable AGC
DL MIX Format
downlink mix output format
DL MIX Block Size
downlink mix output block size
DL FEV Format
downlink far-end-voice input format
DL Volume
downlink volume
Hardware Volume
hardware volume (dB)
Preprocessing input gain
pre-processing input gain
VP Mode
VoiceProcessor operation mode
Telephony Vocoder Type
codec type
Telephony Vocoder Sample Rate
codec sample rate
Bypass VP
Disable VP
beam direction
SPKR TEL Format
downlink speaker telemetry input format
SPKR TEL Block Size
downlink speaker telemetry input block size
Speaker Input Data Source
speaker telemetry input data source IDs
HW Has VP
Device Orientation
device orientation
CA Orientation
UI orientation
IO Cycle Usage
I/O cycle usage
HW REF Tap Stream Enabled
Mute Output
Mute Downlink Voice
Power Budget settings
CPMS budget
speaker calibration data
chat flavor
FaceTime spatial metadata
Media Chat Volume
media chat volume
spatial head-tracking configuration
Product
product
Acoustic ID
acoustic ID
HW Layout ID
hardware layout ID
assertion failure: audio buffer mixer must have non-zero input buffer count
assertion failure: audio buffer mixer must have non-zero output buffer count
assertion failure: audio buffer mixer must have non-zero maximum block size
assertion failure: audio buffer storage is null
assertion failure: node must be non-null
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Node_Socket.cpp
failed to allocate audio buffer for 
 with 
 format 
 and size 
 terminal index 
 must be less than 
I/O frame count must be nonzero
cannot construct frame count with sample time diff of 
 samples
close
not close
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor_State_Manager]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Phone_Proximity_Detector]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/nodes/Far_End_Voice_Proc_Node.cpp
far end voice callback failed with status 
std::string_view vp::reflect_type_name() [T = vp::vx::components::Speech_Activity_Event_Listener]
v12@?0i8
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Data_Manager]
Settings
ClientIOSampleRatePreference
SupportedChatFlavors
AudioBufferFadingIsEnabled
Standard
Voice_Isolation
Wide_Spectrum
expected "Standard", "Voice_Isolation", or "Wide_Spectrum" at "%s"
ReferenceSourceType
MicHardwareInputLatencyCompensationIsEnabled
MicHardwareInputSafetyOffsetCompensationIsEnabled
RefHardwareInputLatencyCompensationIsEnabled
RefHardwareInputSafetyOffsetCompensationIsEnabled
RefHardwareOutputLatencyCompensationIsEnabled
RefHardwareOutputLatencyCorrectionIsEnabled
RefHardwareOutputSafetyOffsetCompensationIsEnabled
RefHardwareOutputSafetyOffsetCorrectionIsEnabled
RefPhyiscalStreamLatencyIsEnabled
RefAudioRingBufferCapacityMilliseconds
MicRefTimeDelayMilliseconds
MicRefTimeDelayMillisecondsMin
MicRefTimeDelayMillisecondsMax
MicRefLatencyCompensationSamplesLUT
SampleRateConversionAlgorithm
SampleRateConversionQuality
Default
External
Internal
expected "Default", "External", or "Internal" at "%s"
Latency
SampleRate
HardwareDSPNodeHasIVDataInput
VolumeRange_dB
Nodes
DSPGraphFilePath
DSPGraphMacros
DSPGraphPropertyStripFilePath
DSPGraphPropertyStripFilePaths
DSPGraphAUStripFilePath
DSPGraphAUStripFilePaths
DSPGraphPropertyStripOverrideFilePath
DSPGraphPropertyStripOverrideFilePaths
DSPGraphParameterValues
DSPGraphPropertyValues
ShouldEnableLatencyCompensation
PreferredSampleRateHz
MinBlockDurationSeconds
MaxBlockDurationSeconds
PreferredBlockDurationSeconds
MinFFTBlockDurationSeconds
MaxFFTBlockDurationSeconds
DSPGraphInputChannelCounts
DSPGraphOutputChannelCounts
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Generic]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Baseband_Call]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Face_Time_Video]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Game_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Face_Time_Audio]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Call_Continuity]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Wifi_Call]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Home_Kit]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Half_Duplex]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)128]
assertion failure: failed to allocate input port's audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/ports/Audio_Ring_Buffer_Port.cpp
failed to write into audio ring buffer
requested data is ahead of available audio time range
requested data is behind of available audio time range
failed to read from audio ring buffer
Could not find item
assertion failure: failed to allocate audio converter
assertion failure: failed to allocate source audio buffer
assertion failure: failed to allocate destination audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/wires/Audio_Converter_Wire.cpp
failed to write into destination audio ring buffer
 because audio converter failed to render with status 
failed to write into source audio buffer
failed to read from destination audio ring buffer
assertion failure: failed to calculate required number of input frames
assertion failure: failed to calculate expected number of output frames
failed to set audio converter SRC complexity to 
 with status 
failed to set audio converter SRC quality to 
audio converter failed pre-flight operation with status 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Parameter_Exchange.cpp
parameter exchange failed to allocate parameter 
parameter exchange does not support parameter 
missing object at '%s'
expected dictionary at '%s'
assertion failure: block state must be valid
added
removed
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Speech_Activity_Event_Listener]
speech activity detection %s disabled and reset on unmute
should be
should not be
echo DSP mic input
echo DSP ref input
echo DSP mic clip data input
content DSP mic input
hardware DSP mic output
hardware DSP ref output
hardware DSP mic clip data output
echo DSP mic output
content DSP client output
hardware DSP output
fixed
variable
input
output
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Port_Factory]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Hardware_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Hardware_DSP_Ref_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Ref_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Mic_Clip_Data_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Content_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_Default_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_System_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_Other_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Hardware_DSP_Speaker_Telemetry_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Mic_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Ref_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Mic_Clip_Data_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Echo_DSP_Mic_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Content_DSP_Client_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Output_Port_ID::Hardware_DSP_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)1]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)2]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)128]
%s port is %s
enabled
disabled
%s port I/O block size is %u
%s port I/O format is %s
non-PCM audio formats are not supported
fixed-point audio formats are not supported
F%u@%.0f/%X,%u%s
%02u. %s
%.*g
bad lexical cast: source type value could not be interpreted as target
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Port.cpp
assertion failure: state manager must be non-null
assertion failure: state observer must be non-null
assertion failure: state owner must be non-null
std::string_view vp::reflect_type_name() [T = vp::vx::components::CPU_Profiler]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Graph.cpp
assertion failure: node factory object must be nonnull
assertion failure: node decorator factory object must be nonnull
assertion failure: node delegate factory object must be nonnull
assertion failure: node command factory object must be nonnull
assertion failure: port factory object must be nonnull
assertion failure: port decorator factory object must be nonnull
assertion failure: wire factory object must be nonnull
assertion failure: wire decorator factory object must be nonnull
v16@?0Q8
assertion failure: decorator factory cannot return null I/O node instances!
]=>T[
]=>P[
 terminal 
 of node 
 has format 
 while node has format 
 is not connected
parameter 
 has 
 conflicting producers
property 
priv_insert
this->priv_in_range_or_end(p)
uninitialized_copy_n_and_update
advanced_insert_int.hpp
n == 1
copy_n_and_update
std::string_view vp::reflect_type_name() [T = vp::vx::io::Graph]
insert_unique
flat_tree.hpp
this->priv_in_range_or_end(hint)
std::string_view vp::reflect_type_name() [T = vp::vx::io::Graph_Builder]
priv_destroy_last_n
n <= this->m_holder.m_size
std::string_view vp::reflect_type_name() [T = vp::vx::components::Wireless_Charging_Detector]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_ExpanseAGC_Adaptive_Control_Delegate]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Hardware]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Echo]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Content]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Voice_Mix]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Voice]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Dynamics]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Hardware]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)128]
std::string_view vp::reflect_type_name() [T = vp::vx::DSP_Node_Factory]
.dspg
.propstrip
.austrip
.propstrip (override)
%s configuration is %s
cannot use push_back() with 
%s I/O block size is %u
%s I/O block size is %s
%s FFT block size is %u
%s I/O sample rate is %f
%s input '%s' format is %s
%s output '%s' format is %s
%s parameter %s override is %s
%s property %s override is %s
%s audio recorders are %s
%s AUPB is %s
connected
disconnected
%s RPB is %s
%s sample rate conversion algorithm is %u
%s sample rate conversion quality is %u
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Far_End_Voice_Proc_Node_Factory]
far-end-voice "proc" I/O block is %p
far-end-voice "proc" max I/O block size is %u
far-end-voice "proc" I/O format is %s
assertion failure: failed to allocate microphone signal audio ring buffer
assertion failure: failed to allocate reference signal audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/nodes/Mic_Ref_Sync_Node.cpp
frame count 
 is larger than 
maximum allowed block size
input data size 
 does not match 
expected data size 
output data size 
microphone input sample time is not valid
reference input sample time is not valid
unknown I/O error has occurred
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Injector]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Wire_Factory]
std::string_view vp::reflect_value_name() [V = vp::Domain::Uplink]
std::string_view vp::reflect_value_name() [V = vp::Domain::Downlink]
std::string_view vp::reflect_value_name() [V = (vp::Domain)2]
std::string_view vp::reflect_value_name() [V = (vp::Domain)3]
std::string_view vp::reflect_value_name() [V = (vp::Domain)4]
std::string_view vp::reflect_value_name() [V = (vp::Domain)5]
std::string_view vp::reflect_value_name() [V = (vp::Domain)6]
std::string_view vp::reflect_value_name() [V = (vp::Domain)7]
std::string_view vp::reflect_value_name() [V = (vp::Domain)8]
std::string_view vp::reflect_value_name() [V = (vp::Domain)9]
std::string_view vp::reflect_value_name() [V = (vp::Domain)10]
std::string_view vp::reflect_value_name() [V = (vp::Domain)11]
std::string_view vp::reflect_value_name() [V = (vp::Domain)12]
std::string_view vp::reflect_value_name() [V = (vp::Domain)13]
std::string_view vp::reflect_value_name() [V = (vp::Domain)14]
std::string_view vp::reflect_value_name() [V = (vp::Domain)15]
std::string_view vp::reflect_value_name() [V = (vp::Domain)16]
std::string_view vp::reflect_value_name() [V = (vp::Domain)17]
std::string_view vp::reflect_value_name() [V = (vp::Domain)18]
std::string_view vp::reflect_value_name() [V = (vp::Domain)19]
std::string_view vp::reflect_value_name() [V = (vp::Domain)20]
std::string_view vp::reflect_value_name() [V = (vp::Domain)21]
std::string_view vp::reflect_value_name() [V = (vp::Domain)22]
std::string_view vp::reflect_value_name() [V = (vp::Domain)23]
std::string_view vp::reflect_value_name() [V = (vp::Domain)24]
std::string_view vp::reflect_value_name() [V = (vp::Domain)25]
std::string_view vp::reflect_value_name() [V = (vp::Domain)26]
std::string_view vp::reflect_value_name() [V = (vp::Domain)27]
std::string_view vp::reflect_value_name() [V = (vp::Domain)28]
std::string_view vp::reflect_value_name() [V = (vp::Domain)29]
std::string_view vp::reflect_value_name() [V = (vp::Domain)30]
std::string_view vp::reflect_value_name() [V = (vp::Domain)31]
std::string_view vp::reflect_value_name() [V = (vp::Domain)32]
std::string_view vp::reflect_value_name() [V = (vp::Domain)33]
std::string_view vp::reflect_value_name() [V = (vp::Domain)34]
std::string_view vp::reflect_value_name() [V = (vp::Domain)35]
std::string_view vp::reflect_value_name() [V = (vp::Domain)36]
std::string_view vp::reflect_value_name() [V = (vp::Domain)37]
std::string_view vp::reflect_value_name() [V = (vp::Domain)38]
std::string_view vp::reflect_value_name() [V = (vp::Domain)39]
std::string_view vp::reflect_value_name() [V = (vp::Domain)40]
std::string_view vp::reflect_value_name() [V = (vp::Domain)41]
std::string_view vp::reflect_value_name() [V = (vp::Domain)42]
std::string_view vp::reflect_value_name() [V = (vp::Domain)43]
std::string_view vp::reflect_value_name() [V = (vp::Domain)44]
std::string_view vp::reflect_value_name() [V = (vp::Domain)45]
std::string_view vp::reflect_value_name() [V = (vp::Domain)46]
std::string_view vp::reflect_value_name() [V = (vp::Domain)47]
std::string_view vp::reflect_value_name() [V = (vp::Domain)48]
std::string_view vp::reflect_value_name() [V = (vp::Domain)49]
std::string_view vp::reflect_value_name() [V = (vp::Domain)50]
std::string_view vp::reflect_value_name() [V = (vp::Domain)51]
std::string_view vp::reflect_value_name() [V = (vp::Domain)52]
std::string_view vp::reflect_value_name() [V = (vp::Domain)53]
std::string_view vp::reflect_value_name() [V = (vp::Domain)54]
std::string_view vp::reflect_value_name() [V = (vp::Domain)55]
std::string_view vp::reflect_value_name() [V = (vp::Domain)56]
std::string_view vp::reflect_value_name() [V = (vp::Domain)57]
std::string_view vp::reflect_value_name() [V = (vp::Domain)58]
std::string_view vp::reflect_value_name() [V = (vp::Domain)59]
std::string_view vp::reflect_value_name() [V = (vp::Domain)60]
std::string_view vp::reflect_value_name() [V = (vp::Domain)61]
std::string_view vp::reflect_value_name() [V = (vp::Domain)62]
std::string_view vp::reflect_value_name() [V = (vp::Domain)63]
std::string_view vp::reflect_value_name() [V = (vp::Domain)64]
std::string_view vp::reflect_value_name() [V = (vp::Domain)65]
std::string_view vp::reflect_value_name() [V = (vp::Domain)66]
std::string_view vp::reflect_value_name() [V = (vp::Domain)67]
std::string_view vp::reflect_value_name() [V = (vp::Domain)68]
std::string_view vp::reflect_value_name() [V = (vp::Domain)69]
std::string_view vp::reflect_value_name() [V = (vp::Domain)70]
std::string_view vp::reflect_value_name() [V = (vp::Domain)71]
std::string_view vp::reflect_value_name() [V = (vp::Domain)72]
std::string_view vp::reflect_value_name() [V = (vp::Domain)73]
std::string_view vp::reflect_value_name() [V = (vp::Domain)74]
std::string_view vp::reflect_value_name() [V = (vp::Domain)75]
std::string_view vp::reflect_value_name() [V = (vp::Domain)76]
std::string_view vp::reflect_value_name() [V = (vp::Domain)77]
std::string_view vp::reflect_value_name() [V = (vp::Domain)78]
std::string_view vp::reflect_value_name() [V = (vp::Domain)79]
std::string_view vp::reflect_value_name() [V = (vp::Domain)80]
std::string_view vp::reflect_value_name() [V = (vp::Domain)81]
std::string_view vp::reflect_value_name() [V = (vp::Domain)82]
std::string_view vp::reflect_value_name() [V = (vp::Domain)83]
std::string_view vp::reflect_value_name() [V = (vp::Domain)84]
std::string_view vp::reflect_value_name() [V = (vp::Domain)85]
std::string_view vp::reflect_value_name() [V = (vp::Domain)86]
std::string_view vp::reflect_value_name() [V = (vp::Domain)87]
std::string_view vp::reflect_value_name() [V = (vp::Domain)88]
std::string_view vp::reflect_value_name() [V = (vp::Domain)89]
std::string_view vp::reflect_value_name() [V = (vp::Domain)90]
std::string_view vp::reflect_value_name() [V = (vp::Domain)91]
std::string_view vp::reflect_value_name() [V = (vp::Domain)92]
std::string_view vp::reflect_value_name() [V = (vp::Domain)93]
std::string_view vp::reflect_value_name() [V = (vp::Domain)94]
std::string_view vp::reflect_value_name() [V = (vp::Domain)95]
std::string_view vp::reflect_value_name() [V = (vp::Domain)96]
std::string_view vp::reflect_value_name() [V = (vp::Domain)97]
std::string_view vp::reflect_value_name() [V = (vp::Domain)98]
std::string_view vp::reflect_value_name() [V = (vp::Domain)99]
std::string_view vp::reflect_value_name() [V = (vp::Domain)100]
std::string_view vp::reflect_value_name() [V = (vp::Domain)101]
std::string_view vp::reflect_value_name() [V = (vp::Domain)102]
std::string_view vp::reflect_value_name() [V = (vp::Domain)103]
std::string_view vp::reflect_value_name() [V = (vp::Domain)104]
std::string_view vp::reflect_value_name() [V = (vp::Domain)105]
std::string_view vp::reflect_value_name() [V = (vp::Domain)106]
std::string_view vp::reflect_value_name() [V = (vp::Domain)107]
std::string_view vp::reflect_value_name() [V = (vp::Domain)108]
std::string_view vp::reflect_value_name() [V = (vp::Domain)109]
std::string_view vp::reflect_value_name() [V = (vp::Domain)110]
std::string_view vp::reflect_value_name() [V = (vp::Domain)111]
std::string_view vp::reflect_value_name() [V = (vp::Domain)112]
std::string_view vp::reflect_value_name() [V = (vp::Domain)113]
std::string_view vp::reflect_value_name() [V = (vp::Domain)114]
std::string_view vp::reflect_value_name() [V = (vp::Domain)115]
std::string_view vp::reflect_value_name() [V = (vp::Domain)116]
std::string_view vp::reflect_value_name() [V = (vp::Domain)117]
std::string_view vp::reflect_value_name() [V = (vp::Domain)118]
std::string_view vp::reflect_value_name() [V = (vp::Domain)119]
std::string_view vp::reflect_value_name() [V = (vp::Domain)120]
std::string_view vp::reflect_value_name() [V = (vp::Domain)121]
std::string_view vp::reflect_value_name() [V = (vp::Domain)122]
std::string_view vp::reflect_value_name() [V = (vp::Domain)123]
std::string_view vp::reflect_value_name() [V = (vp::Domain)124]
std::string_view vp::reflect_value_name() [V = (vp::Domain)125]
std::string_view vp::reflect_value_name() [V = (vp::Domain)126]
std::string_view vp::reflect_value_name() [V = (vp::Domain)127]
std::string_view vp::reflect_value_name() [V = (vp::Domain)128]
I/O wire sample rate conversion algorithm is %u
I/O wire sample rate conversion quality is %u
I/O wire storage capacity is %lld milliseconds
assertion failure: messenger must be non-null
assertion failure: service must be non-null
assertion failure: period must be positive
assertion failure: I/O node must support real-time parameter control
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Power_Log_Delegate]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_Audio_Capturer_Factory.cpp
%03u
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Capturer]
I/O node audio captures are enabled
I/O node audio captures are disabled
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Capturer_Factory]
assertion failure: orientation service is null
std::string_view vp::reflect_type_name() [T = vp::vx::Orientation_Manager]
enable DSP graph audio recorders
configure DSP graph
set property strip on DSP graph
file_path
set AU strip on DSP graph
set property strip override on DSP graph
set DSP graph parameter
parameter
set DSP graph property
property
initialize DSP graph
Tuning Resources Path
Absolute '.dspg' File Path
Literal '.dspg' Text
Absolute '.austrip' File Paths
Absolute '.propstrip' File Paths
Block Size
Block Size Policy
Fixed
Variable
Variable (Pull)
Variable (Push)
Parameters
Properties
SRC Algorithm
SRC Quality
Enable Audio Recorders
Enable Latency Compensation
Connect AUPB
Connect RPB
context
exception
/AppleInternal/Library/BuildRoots/63e787c1-19d2-11ed-9ec1-96898e02b808/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.Internal.sdk/System/Library/PrivateFrameworks/AudioToolboxCore.framework/PrivateHeaders/DSPGraph_Box.h
Box::out inIndex out of range! box %s has %zu outputs but input %u was requested
Box::in inIndex out of range! box %s has %zu inputs but input %u was requested
std::string_view vp::reflect_type_name() [T = vp::vx::dsp::Graph_Builder]
%Y%m%d.%H%M%S.
cannot create object from initializer list
cannot use operator[] with a numeric argument with 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/ports/Audio_Buffer_Port.cpp
input data frame count 
 is larger than input port's audio buffer capacity 
audio time stamp does not have valid sample time
failed to copy input data
failed to zero-out audio buffer list
process frame count 
requested read time range [
 is ahead of available time range [
 is behind of available time range [
audio buffer lists buffer counts don't match
audio buffer list channel counts don't match
output data frame count 
 is larger than output port's audio buffer capacity 
failed to copy output data
create state
find and retain state
retain state
release state
auto-release state
get state value
set state value
create state transaction
release state transaction
register listener
unregister listener
register state observer
unregister state observer
std::string_view vp::reflect_type_name() [T = vp::vx::data_flow::Engine]
commit state transaction
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Parameter_Setter_Delegate]
assertion failure: parameter state must be valid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Parameter_Setter_Command]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Mic_Ref_Sync_Node_Factory]
"mic-ref-sync" I/O block size is %u
"mic-ref-sync" microphone I/O format is %s
"mic-ref-sync" reference I/O format is %s
"mic-ref-sync" time delta is %d samples
"mic-ref-sync" reference audio ring buffer capacity is %lld milliseconds
std::string_view vp::reflect_type_name() [T = vp::vx::data_flow::State_Manager]
.caf
.wav
v8@?0
/usr/local/lib/libAudioDiagnostics.dylib
NewAudioCapturerImpl
assertion failure: component must be non-null
set messenger
write uplink 
 input
write downlink 
assertion failure: failed to get buffered uplink content DSP output frame count
read uplink content DSP client output
create initialization counts
create control center manager
create orientation manager
create property states
create user defaults states
create configuration states
create tuning resource directory paths
create uplink I/O parameter setter commands
create I/O parameter setter delegates
create I/O property setter commands
create I/O property setter delegates
create I/O PowerLog.framework delegate
create I/O volume limit delegate
create I/O adaptive agc delegate
create I/O personal audio command
log configuration changes
update initialization counters
configure control center manager
UInt64
get buffered input frame count for uplink mic-ref "sync" node
process uplink "mic-ref-sync" DSP
get buffered input frame count for uplink hardware DSP node
process uplink hardware DSP
get buffered input frame count for uplink echo DSP node
get uplink echo DSP I/O block size
process uplink echo DSP
get buffered input frame count for uplink content DSP node
process uplink content DSP
reset uplink DSP
get downlink hardware DSP I/O block size
get buffered input frame count for downlink hardware DSP
get required input frame count for downlink hardware DSP
get buffered output frame count for downlink dynamics DSP
get required input frame count for downlink dynamics DSP
get buffered input frame count for downlink dynamics DSP
get frame deficit for downlink dynamics DSP
get buffered output frame count for downlink voice DSP
get required input frame count for downlink voice DSP
get buffered input frame count for downlink voice DSP
get frame count deficit for downlink voice DSP
get buffered output frame count for downlink voice mix DSP
get required input frame count for downlink voice mix DSP
get buffered input frame count for downlink voice mix DSP
get frame count deficit for downlink voice mix DSP
get buffered output frame count for downlink voice proc
process downlink voice proc
process downlink voice mix DSP
process downlink voice DSP
process downlink dynamics DSP
process downlink hardware DSP
reset downlink DSP
configuration context
global configuration
uplink configuration
uplink %s DSP configuration
uplink %s DSP configuration options
uplink SRC algorithm
uplink SRC quality
uplink wire storage capacity (milliseconds)
uplink mic-ref sample time delta
uplink mic-ref delay (milliseconds)
uplink ref audio ring buffer capacity (milliseconds)
downlink configuration
downlink %s DSP configuration
downlink %s DSP configuration options
downlink SRC algorithm
downlink SRC quality
downlink wire storage capacity (milliseconds)
downlink software volume pre-gain (dB)
spatial head-tracking mode
spatial head-tracking enabled
should use internal reference
enable graph audio recorders
connect to AUPB
connect to RPB
should fade audio buffers
register RPB server listener
unregister RPB server listener
connect RPB server
disconnect RPB server
com.apple.coreaudio.VoiceProcessor
hardware DSP mic input
hardware DSP ref input
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Allocation]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Frame_Count]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Data]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Direction]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Sample_Time]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Node_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Port_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Wire_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Terminal_Index]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Parameter_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Property_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Operation_Not_Implemented]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Operation_Not_Supported]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)128]
string_view::substr
dynamics DSP default audio input
dynamics DSP system audio input
dynamics DSP other audio input
hardware DSP speaker telemetry input
hardware
echo
content
voice mix
voice
dynamics
%s use internal reference
should
should not
%s fade audio buffers
Data
Value
UInt32
InputMap
OutputMap
unordered_map::at: key not found
dump
serializer.hpp
i != val.m_value.object->cend()
std::next(i) == val.m_value.object->cend()
not val.m_value.array->empty()
"bytes": [
"subtype": 
{"bytes":[
],"subtype":
null}
true
<discarded>
\u%04x
\u%04x\u%04x
%.2X
invalid UTF-8 byte at index 
: 0x
dump_escaped
incomplete UTF-8 string; last byte: 0x
\ufffd
decode
index < 400
dump_integer
n_chars < number_buffer.size() - 1
to_chars
to_chars.hpp
std::isfinite(value)
last - first >= std::numeric_limits<FloatType>::max_digits10
len <= std::numeric_limits<FloatType>::max_digits10
last - first >= 2 + (-kMinExp - 1) + std::numeric_limits<FloatType>::max_digits10
last - first >= std::numeric_limits<FloatType>::max_digits10 + 6
grisu2
value > 0
compute_boundaries
normalize
x.f != 0
normalize_to
delta >= 0
((x.f << delta) >> delta) == x.f
m_plus.e == m_minus.e
m_plus.e == v.e
get_cached_power_for_binary_exponent
e >= -1500
e <= 1500
index >= 0
static_cast<std::size_t>(index) < kCachedPowers.size()
kAlpha <= cached.e + e + 64
kGamma >= cached.e + e + 64
grisu2_digit_gen
M_plus.e >= kAlpha
M_plus.e <= kGamma
p1 > 0
d <= 9
p2 > delta
p2 <= (std::numeric_limits<std::uint64_t>::max)() / 10
x.e == y.e
x.f >= y.f
grisu2_round
len >= 1
dist <= delta
rest <= delta
ten_k > 0
buf[len - 1] != '0'
format_buffer
min_exp < 0
max_exp > 0
k > n
append_exponent
e > -1000
e < 1000
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Bypass_Voice_Processing]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Disable_Voice_Processing]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Acoustic_Gain_Control]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mute_Uplink_Near_End_Voice_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mute_Downlink_Far_End_Voice_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Maximum_Number_Of_Uplink_Output_Frames]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Maximum_Number_Of_Far_End_Voice_Input_Frames]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Pre_Processing_Input_Gain_dB]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Port_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Physical_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Physical_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Input_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Input_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Trim_Gains]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Trim_Gains_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_DSP_Settings]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Physical_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Input_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Input_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Output_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Output_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Output_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Output_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Virtual_Audio_Stream_Physical_Stream_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Sub_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Endpoint_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Is_Apple_Made_Bluetooth_Product]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Trim_Gains]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Trim_Gains_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_DSP_Settings]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Near_End_Voice_Output_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Far_End_Voice_Input_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Far_End_Voice_Input_Block]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Mix_Output_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Mix_Output_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Beam_Direction]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Operation_Mode]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Chat_Flavor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Has_Voice_Processor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Tap_Stream_Enabled]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Downlink_Software_Volume]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Downlink_Hardware_Volume_dB]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Data_Source_IDs]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Calibration_Data_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Codec_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Codec_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::CPMS_Budget]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Metrics_Reporter_IDs]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::IO_Cycle_Usage]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Device_Orientation]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::UI_Orientation]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Spatial_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Spatial_Chat_Metadata]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Spatial_Chat_Head_Tracking_Configuration]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Media_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Software_Volume]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Action]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Level]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Ramp_Time_In_Seconds]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Unducking_Ramp_Time_In_Seconds]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speech_Activity_Event_Listener_Block]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Stereo_To_Mono_Mix]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Media_Playback_On_External_Device]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)128]
bitset set argument out of range
(null)
Could not convert
vp_enable_debug_features
vp_enable_graph_audio_recorders
EnableTelephonyMonitor
EnableVPTelephonyMonitor
vp_enable_io_node_cpu_profilers
vp_disable_AUPB
vp_disable_RPB
assertion failure: failed to create uplink hardware DSP microphone input port factory
assertion failure: failed to create uplink hardware DSP reference input port factory
assertion failure: failed to create uplink mic-ref "sync" node factory
assertion failure: failed to create uplink hardware DSP node factory
mic_clip_data
assertion failure: failed to create uplink echo DSP node factory
assertion failure: failed to create uplink content DSP node factory
client
assertion failure: failed to create uplink content DSP client output port factory
assertion failure: failed to create downlink hardware DSP speaker telemetry input port
assertion failure: failed to create downlink hardware DSP node factory
iv_data
assertion failure: failed to create downlink hardware DSP output port
assertion failure: failed to create downlink dynamics DSP node factory
default_audio
system_audio
other_audio
assertion failure: failed to create downlink voice DSP node factory
assertion failure: failed to create downlink voice mix DSP node factory
assertion failure: failed to create downlink far end voice proc node factory
Generic
VPVX
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<unsigned int>]
assertion failure: property state must be valid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<bool>]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<applesauce::CF::DictionaryRef>]
HostApplicationDisplayID
com.apple.FaceTime
com.apple.facetime
bitset test argument out of range
Operating System
Operating System Release Type
AppleInternal Build
Tuning Directory Path
Temporary Directory Path
Secret Directory Path
Hardware Layout ID
Hardware Microphone Input
Hardware Reference Input
Hardware Mix Output
Uplink
Default Audio Output
System Audio Output
Other Audio Output
RGBRPBTerminalSubHostPeerUUIDString
RGBRPBTerminalSubHostPeerIndex
watchOS
tvOS
macOS
buffer error: text too long
growing buffer past SIZE_MAX
Resolve: pubID %s sysID %s
Resolve: pubID %s
Resolve: sysID %s
Resolve URI %s
XML_DEBUG_CATALOG
XML_CATALOG_FILES
file:///etc/xml/catalog
Adding document catalog %s
Local Resolve: pubID %s sysID %s
Local Resolve: pubID %s
Local Resolve: sysID %s
Free catalog entry %s
Free catalog entry
allocating catalog
allocating catalog entry
urn:publicid:
Public URN ID %s expanded to NULL
Public URN ID expanded to %s
System URN ID %s expanded to NULL
System URN ID expanded to %s
Found %s in file hash
%s not found in file hash
%s added to file hash
Failed to parse catalog %s
%d Parsing catalog %s
urn:oasis:names:tc:entity:xmlns:xml:catalog
prefer
system
public
Invalid value for prefer: '%s'
File %s is not an XML Catalog
group
publicId
systemId
rewriteSystem
systemIdStartString
rewritePrefix
delegatePublic
publicIdStartString
delegateSystem
rewriteURI
uriStartString
delegateURI
nextCatalog
%s entry lacks '%s'
Found %s: '%s' '%s'
Found %s: '%s'
%s entry '%s' broken ?: %s
Detected recursion in catalog %s
Found system match %s, using %s
Using rewriting rule %s
Trying system delegate %s
Found public match %s
Trying public delegate %s
URN ID %s expanded to NULL
URN ID expanded to %s
Found URI match %s
Trying URI delegate %s
ISO-10646-UCS-2
UCS-2
ISO-10646-UCS-4
ISO-8859-1
ISO-8859-2
ISO-8859-3
ISO-8859-4
ISO-8859-5
ISO-8859-6
ISO-8859-7
ISO-8859-8
ISO-8859-9
SHIFT_JIS
Shift-JIS
xmlNewCharEncodingHandler : no name !
xmlNewCharEncodingHandler : out of memory !
xmlInitCharEncodingHandlers : out of memory !
ASCII
US-ASCII
xmlRegisterCharEncodingHandler: NULL handler !
xmlRegisterCharEncodingHandler: Too many handler registered, see %s
MAX_ENCODING_HANDLERS
ebcdic
EBCDIC-US
IBM-037
SHIFT-JIS
ICU converter : problems with filters for '%s'
input conversion failed due to input error, bytes %s
xmlCharEncOutFunc: no output function !
&#%d;
output conversion failed due to conv error, bytes %s
xmlAddDtdEntity: document is NULL
xmlAddDtdEntity: document without external subset
xmlAddDocEntity: document is NULL
xmlAddDocEntity: document without internal subset
0123456789ABCDEF
xmlAddEntity: invalid redeclaration of predefined entity
xmlCreateEntity: malloc failed
xmlEncodeEntities: malloc failed
xmlEncodeEntities: input not UTF-8
xmlEncodeEntities: char out of range
&#x%X;
xmlEncodeEntities: realloc failed
xmlCopyEntity:: malloc failed
%s:%d: 
Entity: line %d: 
No error message provided
error: 
warning: 
validity error: 
validity warning: 
element %s: 
parser 
namespace 
validity 
HTML parser 
memory 
output 
I/O 
XInclude 
XPath 
regexp 
module 
Schemas validity 
Schemas parser 
Relax-NG parser 
Relax-NG validity 
Catalog 
C14N 
XSLT 
encoding 
schematron 
internal buffer 
URI 
warning : 
error : 
out of memory error
%s:%d: 
Entity: line %d: 
20913
HTML document creation failed
0x%02X 0x%02X 0x%02X 0x%02X
charset=
out of memory
nohref
compact
noresize
noshade
ismap
checked
readonly
declare
selected
defer
multiple
nowrap
quot
quotation mark = APL quote, U+0022 ISOnum
ampersand, U+0026 ISOnum
apos
single quote
less-than sign, U+003C ISOnum
greater-than sign, U+003E ISOnum
nbsp
no-break space = non-breaking space, U+00A0 ISOnum
iexcl
inverted exclamation mark, U+00A1 ISOnum
cent
cent sign, U+00A2 ISOnum
pound
pound sign, U+00A3 ISOnum
curren
currency sign, U+00A4 ISOnum
yen sign = yuan sign, U+00A5 ISOnum
brvbar
broken bar = broken vertical bar, U+00A6 ISOnum
sect
section sign, U+00A7 ISOnum
diaeresis = spacing diaeresis, U+00A8 ISOdia
copy
copyright sign, U+00A9 ISOnum
ordf
feminine ordinal indicator, U+00AA ISOnum
laquo
left-pointing double angle quotation mark = left pointing guillemet, U+00AB ISOnum
not sign, U+00AC ISOnum
soft hyphen = discretionary hyphen, U+00AD ISOnum
registered sign = registered trade mark sign, U+00AE ISOnum
macr
macron = spacing macron = overline = APL overbar, U+00AF ISOdia
degree sign, U+00B0 ISOnum
plusmn
plus-minus sign = plus-or-minus sign, U+00B1 ISOnum
sup2
superscript two = superscript digit two = squared, U+00B2 ISOnum
sup3
superscript three = superscript digit three = cubed, U+00B3 ISOnum
acute
acute accent = spacing acute, U+00B4 ISOdia
micro
micro sign, U+00B5 ISOnum
para
pilcrow sign = paragraph sign, U+00B6 ISOnum
middot
middle dot = Georgian comma Greek middle dot, U+00B7 ISOnum
cedil
cedilla = spacing cedilla, U+00B8 ISOdia
sup1
superscript one = superscript digit one, U+00B9 ISOnum
ordm
masculine ordinal indicator, U+00BA ISOnum
raquo
right-pointing double angle quotation mark right pointing guillemet, U+00BB ISOnum
frac14
vulgar fraction one quarter = fraction one quarter, U+00BC ISOnum
frac12
vulgar fraction one half = fraction one half, U+00BD ISOnum
frac34
vulgar fraction three quarters = fraction three quarters, U+00BE ISOnum
iquest
inverted question mark = turned question mark, U+00BF ISOnum
Agrave
latin capital letter A with grave = latin capital letter A grave, U+00C0 ISOlat1
Aacute
latin capital letter A with acute, U+00C1 ISOlat1
Acirc
latin capital letter A with circumflex, U+00C2 ISOlat1
Atilde
latin capital letter A with tilde, U+00C3 ISOlat1
Auml
latin capital letter A with diaeresis, U+00C4 ISOlat1
Aring
latin capital letter A with ring above = latin capital letter A ring, U+00C5 ISOlat1
AElig
latin capital letter AE = latin capital ligature AE, U+00C6 ISOlat1
Ccedil
latin capital letter C with cedilla, U+00C7 ISOlat1
Egrave
latin capital letter E with grave, U+00C8 ISOlat1
Eacute
latin capital letter E with acute, U+00C9 ISOlat1
Ecirc
latin capital letter E with circumflex, U+00CA ISOlat1
Euml
latin capital letter E with diaeresis, U+00CB ISOlat1
Igrave
latin capital letter I with grave, U+00CC ISOlat1
Iacute
latin capital letter I with acute, U+00CD ISOlat1
Icirc
latin capital letter I with circumflex, U+00CE ISOlat1
Iuml
latin capital letter I with diaeresis, U+00CF ISOlat1
latin capital letter ETH, U+00D0 ISOlat1
Ntilde
latin capital letter N with tilde, U+00D1 ISOlat1
Ograve
latin capital letter O with grave, U+00D2 ISOlat1
Oacute
latin capital letter O with acute, U+00D3 ISOlat1
Ocirc
latin capital letter O with circumflex, U+00D4 ISOlat1
Otilde
latin capital letter O with tilde, U+00D5 ISOlat1
Ouml
latin capital letter O with diaeresis, U+00D6 ISOlat1
times
multiplication sign, U+00D7 ISOnum
Oslash
latin capital letter O with stroke latin capital letter O slash, U+00D8 ISOlat1
Ugrave
latin capital letter U with grave, U+00D9 ISOlat1
Uacute
latin capital letter U with acute, U+00DA ISOlat1
Ucirc
latin capital letter U with circumflex, U+00DB ISOlat1
Uuml
latin capital letter U with diaeresis, U+00DC ISOlat1
Yacute
latin capital letter Y with acute, U+00DD ISOlat1
THORN
latin capital letter THORN, U+00DE ISOlat1
szlig
latin small letter sharp s = ess-zed, U+00DF ISOlat1
agrave
latin small letter a with grave = latin small letter a grave, U+00E0 ISOlat1
aacute
latin small letter a with acute, U+00E1 ISOlat1
acirc
latin small letter a with circumflex, U+00E2 ISOlat1
atilde
latin small letter a with tilde, U+00E3 ISOlat1
auml
latin small letter a with diaeresis, U+00E4 ISOlat1
aring
latin small letter a with ring above = latin small letter a ring, U+00E5 ISOlat1
aelig
latin small letter ae = latin small ligature ae, U+00E6 ISOlat1
ccedil
latin small letter c with cedilla, U+00E7 ISOlat1
egrave
latin small letter e with grave, U+00E8 ISOlat1
eacute
latin small letter e with acute, U+00E9 ISOlat1
ecirc
latin small letter e with circumflex, U+00EA ISOlat1
euml
latin small letter e with diaeresis, U+00EB ISOlat1
igrave
latin small letter i with grave, U+00EC ISOlat1
iacute
latin small letter i with acute, U+00ED ISOlat1
icirc
latin small letter i with circumflex, U+00EE ISOlat1
iuml
latin small letter i with diaeresis, U+00EF ISOlat1
latin small letter eth, U+00F0 ISOlat1
ntilde
latin small letter n with tilde, U+00F1 ISOlat1
ograve
latin small letter o with grave, U+00F2 ISOlat1
oacute
latin small letter o with acute, U+00F3 ISOlat1
ocirc
latin small letter o with circumflex, U+00F4 ISOlat1
otilde
latin small letter o with tilde, U+00F5 ISOlat1
ouml
latin small letter o with diaeresis, U+00F6 ISOlat1
divide
division sign, U+00F7 ISOnum
oslash
latin small letter o with stroke, = latin small letter o slash, U+00F8 ISOlat1
ugrave
latin small letter u with grave, U+00F9 ISOlat1
uacute
latin small letter u with acute, U+00FA ISOlat1
ucirc
latin small letter u with circumflex, U+00FB ISOlat1
uuml
latin small letter u with diaeresis, U+00FC ISOlat1
yacute
latin small letter y with acute, U+00FD ISOlat1
thorn
latin small letter thorn with, U+00FE ISOlat1
yuml
latin small letter y with diaeresis, U+00FF ISOlat1
OElig
latin capital ligature OE, U+0152 ISOlat2
oelig
latin small ligature oe, U+0153 ISOlat2
Scaron
latin capital letter S with caron, U+0160 ISOlat2
scaron
latin small letter s with caron, U+0161 ISOlat2
Yuml
latin capital letter Y with diaeresis, U+0178 ISOlat2
fnof
latin small f with hook = function = florin, U+0192 ISOtech
circ
modifier letter circumflex accent, U+02C6 ISOpub
tilde
small tilde, U+02DC ISOdia
Alpha
greek capital letter alpha, U+0391
Beta
greek capital letter beta, U+0392
Gamma
greek capital letter gamma, U+0393 ISOgrk3
Delta
greek capital letter delta, U+0394 ISOgrk3
Epsilon
greek capital letter epsilon, U+0395
Zeta
greek capital letter zeta, U+0396
greek capital letter eta, U+0397
Theta
greek capital letter theta, U+0398 ISOgrk3
Iota
greek capital letter iota, U+0399
Kappa
greek capital letter kappa, U+039A
Lambda
greek capital letter lambda, U+039B ISOgrk3
greek capital letter mu, U+039C
greek capital letter nu, U+039D
greek capital letter xi, U+039E ISOgrk3
Omicron
greek capital letter omicron, U+039F
greek capital letter pi, U+03A0 ISOgrk3
greek capital letter rho, U+03A1
Sigma
greek capital letter sigma, U+03A3 ISOgrk3
greek capital letter tau, U+03A4
Upsilon
greek capital letter upsilon, U+03A5 ISOgrk3
greek capital letter phi, U+03A6 ISOgrk3
greek capital letter chi, U+03A7
greek capital letter psi, U+03A8 ISOgrk3
Omega
greek capital letter omega, U+03A9 ISOgrk3
alpha
greek small letter alpha, U+03B1 ISOgrk3
beta
greek small letter beta, U+03B2 ISOgrk3
gamma
greek small letter gamma, U+03B3 ISOgrk3
delta
greek small letter delta, U+03B4 ISOgrk3
epsilon
greek small letter epsilon, U+03B5 ISOgrk3
zeta
greek small letter zeta, U+03B6 ISOgrk3
greek small letter eta, U+03B7 ISOgrk3
theta
greek small letter theta, U+03B8 ISOgrk3
iota
greek small letter iota, U+03B9 ISOgrk3
kappa
greek small letter kappa, U+03BA ISOgrk3
lambda
greek small letter lambda, U+03BB ISOgrk3
greek small letter mu, U+03BC ISOgrk3
greek small letter nu, U+03BD ISOgrk3
greek small letter xi, U+03BE ISOgrk3
omicron
greek small letter omicron, U+03BF NEW
greek small letter pi, U+03C0 ISOgrk3
greek small letter rho, U+03C1 ISOgrk3
sigmaf
greek small letter final sigma, U+03C2 ISOgrk3
sigma
greek small letter sigma, U+03C3 ISOgrk3
greek small letter tau, U+03C4 ISOgrk3
upsilon
greek small letter upsilon, U+03C5 ISOgrk3
greek small letter phi, U+03C6 ISOgrk3
greek small letter chi, U+03C7 ISOgrk3
greek small letter psi, U+03C8 ISOgrk3
omega
greek small letter omega, U+03C9 ISOgrk3
thetasym
greek small letter theta symbol, U+03D1 NEW
upsih
greek upsilon with hook symbol, U+03D2 NEW
greek pi symbol, U+03D6 ISOgrk3
ensp
en space, U+2002 ISOpub
emsp
em space, U+2003 ISOpub
thinsp
thin space, U+2009 ISOpub
zwnj
zero width non-joiner, U+200C NEW RFC 2070
zero width joiner, U+200D NEW RFC 2070
left-to-right mark, U+200E NEW RFC 2070
right-to-left mark, U+200F NEW RFC 2070
ndash
en dash, U+2013 ISOpub
mdash
em dash, U+2014 ISOpub
lsquo
left single quotation mark, U+2018 ISOnum
rsquo
right single quotation mark, U+2019 ISOnum
sbquo
single low-9 quotation mark, U+201A NEW
ldquo
left double quotation mark, U+201C ISOnum
rdquo
right double quotation mark, U+201D ISOnum
bdquo
double low-9 quotation mark, U+201E NEW
dagger
dagger, U+2020 ISOpub
Dagger
double dagger, U+2021 ISOpub
bull
bullet = black small circle, U+2022 ISOpub
hellip
horizontal ellipsis = three dot leader, U+2026 ISOpub
permil
per mille sign, U+2030 ISOtech
prime
prime = minutes = feet, U+2032 ISOtech
Prime
double prime = seconds = inches, U+2033 ISOtech
lsaquo
single left-pointing angle quotation mark, U+2039 ISO proposed
rsaquo
single right-pointing angle quotation mark, U+203A ISO proposed
oline
overline = spacing overscore, U+203E NEW
frasl
fraction slash, U+2044 NEW
euro
euro sign, U+20AC NEW
image
blackletter capital I = imaginary part, U+2111 ISOamso
weierp
script capital P = power set = Weierstrass p, U+2118 ISOamso
real
blackletter capital R = real part symbol, U+211C ISOamso
trade
trade mark sign, U+2122 ISOnum
alefsym
alef symbol = first transfinite cardinal, U+2135 NEW
larr
leftwards arrow, U+2190 ISOnum
uarr
upwards arrow, U+2191 ISOnum
rarr
rightwards arrow, U+2192 ISOnum
darr
downwards arrow, U+2193 ISOnum
harr
left right arrow, U+2194 ISOamsa
crarr
downwards arrow with corner leftwards = carriage return, U+21B5 NEW
lArr
leftwards double arrow, U+21D0 ISOtech
uArr
upwards double arrow, U+21D1 ISOamsa
rArr
rightwards double arrow, U+21D2 ISOtech
dArr
downwards double arrow, U+21D3 ISOamsa
hArr
left right double arrow, U+21D4 ISOamsa
forall
for all, U+2200 ISOtech
part
partial differential, U+2202 ISOtech
exist
there exists, U+2203 ISOtech
empty
empty set = null set = diameter, U+2205 ISOamso
nabla
nabla = backward difference, U+2207 ISOtech
isin
element of, U+2208 ISOtech
notin
not an element of, U+2209 ISOtech
contains as member, U+220B ISOtech
prod
n-ary product = product sign, U+220F ISOamsb
n-ary summation, U+2211 ISOamsb
minus
minus sign, U+2212 ISOtech
lowast
asterisk operator, U+2217 ISOtech
radic
square root = radical sign, U+221A ISOtech
prop
proportional to, U+221D ISOtech
infin
infinity, U+221E ISOtech
angle, U+2220 ISOamso
logical and = wedge, U+2227 ISOtech
logical or = vee, U+2228 ISOtech
intersection = cap, U+2229 ISOtech
union = cup, U+222A ISOtech
integral, U+222B ISOtech
there4
therefore, U+2234 ISOtech
tilde operator = varies with = similar to, U+223C ISOtech
cong
approximately equal to, U+2245 ISOtech
asymp
almost equal to = asymptotic to, U+2248 ISOamsr
not equal to, U+2260 ISOtech
equiv
identical to, U+2261 ISOtech
less-than or equal to, U+2264 ISOtech
greater-than or equal to, U+2265 ISOtech
subset of, U+2282 ISOtech
superset of, U+2283 ISOtech
nsub
not a subset of, U+2284 ISOamsn
sube
subset of or equal to, U+2286 ISOtech
supe
superset of or equal to, U+2287 ISOtech
oplus
circled plus = direct sum, U+2295 ISOamsb
otimes
circled times = vector product, U+2297 ISOamsb
perp
up tack = orthogonal to = perpendicular, U+22A5 ISOtech
sdot
dot operator, U+22C5 ISOamsb
lceil
left ceiling = apl upstile, U+2308 ISOamsc
rceil
right ceiling, U+2309 ISOamsc
lfloor
left floor = apl downstile, U+230A ISOamsc
rfloor
right floor, U+230B ISOamsc
left-pointing angle bracket = bra, U+2329 ISOtech
rang
right-pointing angle bracket = ket, U+232A ISOtech
lozenge, U+25CA ISOpub
spades
black spade suit, U+2660 ISOpub
clubs
black club suit = shamrock, U+2663 ISOpub
hearts
black heart suit = valentine, U+2665 ISOpub
diams
black diamond suit, U+2666 ISOpub
Cannot initialize memory for list
Cannot initialize memory for sentinel
Cannot initialize memory for new link
no_proxy
ftp_proxy
FTP_PROXY
ftp_proxy_user
ftp_proxy_password
Syntax Error
allocating FTP context
send failed
getaddrinfo failed
gethostbyname address mismatch
gethostbyname failed
socket failed
Failed to create a connection
USER %s
PASS %s
PASS anonymous@
SITE %s
USER anonymous@%s
USER %s@%s
FTP server asking for ACCNT on anonymous
Invalid answer to EPSV
%u,%u,%u,%u,%u,%u
Invalid answer to PASV
Failed to create a data connection
bind failed
listen failed
EPRT |2|%s|%s|
PORT %d,%d,%d,%d,%d,%d
RETR %s
recv failed
USER anonymous
http_proxy
HTTP_PROXY
http
Not a valid HTTP URI
Failed to identify host in URI
allocating header buffer
%s http://%s:%d%s
%s http://%s%s
%s %s
 HTTP/1.0
Host: %s
 HTTP/1.0
Host: %s:%d
Accept-Encoding: gzip
Content-Type: %s
Content-Length: %d
allocating input
allocating input buffer
recv failed
allocating context
getaddrinfo failed
address size mismatch
Failed to resolve host
socket failed
error setting non-blocking IO
error connecting to HTTP server
Connect attempt timed out
Connect failed
getsockopt failed
Error connecting to remote host
select failed
send failed
HTTP/
Content-Type:
ContentType:
Location:
WWW-Authenticate:
Proxy-Authenticate:
Content-Encoding:
gzip
Content-Length:
Excessive depth in document: %d use XML_PARSE_HUGE option
Popping input %d
Unfinished entity outside the DTD
%s(%d): 
Pushing input %d : %.30s
xmlParseCharRef: character reference out of bounds
xmlParseCharRef: invalid xmlChar value %d
String decoding Entity Reference: %.30s
predefined entity has no content
String decoding PE Reference: %.30s
not validating will not read content for PE entity %s
Name %s is not XML Namespace compliant
Name
NmToken
EntityValue: '%c' forbidden except for entities references
SystemLiteral
Public ID
Space required after 'SYSTEM'
Space required after 'PUBLIC'
Space required after the Public Identifier
Comment too big found
comment doesn't start and stop in the same entity
Double hyphen within comment: <!--%.50s
Double hyphen within comment
XML declaration allowed only at the start of the document
xmlParsePITarget: invalid name prefix 'xml'
colons are forbidden from PI names '%s'
PI declaration doesn't start and stop in the same entity
ParsePI: PI %s space expected
PI %s too big found
ParsePI: PI %s never end ...
oasis-xml-catalog
Space required after '<!NOTATION'
colons are forbidden from notation names '%s'
Space required after the NOTATION name'
Notation declaration doesn't start and stop in the same entity
Space required after '<!ENTITY'
Space required after '%%'
xmlParseEntityDecl: no name
colons are forbidden from entities names '%s'
Space required after the entity name
Invalid URI: %s
SAX compatibility mode document
New Doc failed
fake
Space required before 'NDATA'
Space required after 'NDATA'
xmlParseEntityDecl: entity %s not terminated
Entity declaration doesn't start and stop in the same entity
Space required after '#FIXED'
Attribute default value declaration error
Name expected in NOTATION declaration
standalone: attribute notation value token %s duplicated
standalone: attribute enumeration value token %s duplicated
Space required after 'NOTATION'
Space required after '<!ATTLIST'
ATTLIST: no name for Element
ATTLIST: no name for Attribute
Space required after the attribute name
Space required after the attribute type
Space required after the attribute default value
Attribute list declaration doesn't start and stop in the same entity
Element content declaration doesn't start and stop in the same entity
xmlParseElementMixedContentDecl : Name expected
xmlParseElementContentDecl : %s '(' expected
Space required after 'ELEMENT'
xmlParseElementDecl: no name for Element
Space required after the element name
PEReference: forbidden within markup decl in internal subset
xmlParseElementDecl: 'EMPTY', 'ANY' or '(' expected
Element declaration doesn't start and stop in the same entity
Space needed after '<?xml'
Space needed here
Missing encoding in text declaration
#x%X
invalid entity type found
Entity '%s' failed to parse
nbktext
xmlParseEntityRef: no name
Entity '%s' not defined
Entity reference to unparsed entity %s
Attribute references external entity '%s'
'<' in entity '%s' is not allowed in attributes values
Attempt to reference the parameter entity '%s'
PEReference: no name
PEReference: %s
PEReference: %%%s; not found
Internal: %%%s; is not a parameter entity
xmlParseDocTypeDecl : no DOCTYPE name !
error parsing attribute name
Specification mandates value for attribute %s
xml:lang
Malformed value for xml:lang : %s
xml:space
preserve
Invalid value "%s" for xml:space : "default" or "preserve" expected
xmlParseStartTag: invalid element name
attributes construct error
xmlParseStartTag: problem parsing attributes
CData section too big found
CData section not finished
%.50s
Premature end of data in tag %s line %d
UTF-16
UTF16
Document labelled UTF-16 but has UTF-8 content
UTF-8
UTF8
Unsupported encoding %s
Blank needed after '<?xml'
Unsupported version '%s'
Blank needed here
Start tag expected, '<' not found
UCS-4
UCS4
Huge input lookup
xmlns
http://www.w3.org/XML/1998/namespace
pseudoroot
CharRef: invalid hexadecimal value
CharRef: invalid decimal value
CharRef: invalid value
internal error
PEReference at end of document
PEReference in prolog
PEReference in epilog
PEReference: no name
PEReference: expecting ';'
Detected an entity reference loop
EntityValue: " or ' expected
PEReferences forbidden in internal subset
AttValue: " or ' expected
Unescaped '<' not allowed in attributes values
SystemLiteral " or ' expected
Unfinished System or Public ID " or ' expected
Sequence ']]>' not allowed in content
SYSTEM or PUBLIC, the URI is missing
PUBLIC, the Public Identifier is missing
Comment must not contain '--' (double-hyphen)
xmlParsePI : no target name
Invalid PI name
NOTATION: Name expected here
'>' required to close NOTATION declaration
Entity value required
Fragment not allowed
'(' required to start ATTLIST enumeration
NmToken expected in ATTLIST enumeration
')' required to finish ATTLIST enumeration
MixedContentDecl : '|' or ')*' expected
MixedContentDecl : '#PCDATA' expected
ContentDecl : Name or '(' expected
ContentDecl : ',' '|' or ')' expected
PEReference: forbidden within markup decl in internal subset
expected '>'
XML conditional section '[' expected
Content error in the external subset
conditional section INCLUDE or IGNORE keyword expected
XML conditional section not closed
Text declaration '<?xml' required
parsing XML declaration: '?>' expected
external parsed entities cannot be standalone
EntityRef: expecting ';'
DOCTYPE improperly terminated
EndTag: '</' not found
expected '='
String not closed expecting " or '
String not started expecting ' or "
Invalid XML encoding name
standalone accepts only 'yes' or 'no'
Document is empty
Extra content at the end of the document
chunk is not well balanced
extra content at the end of well balanced chunk
Malformed declaration expecting version
Name too long use XML_PARSE_HUGE option
Unregistered error message
cur index out of bound
xmlParseStringCharRef: character reference out of bounds
xmlParseStringCharRef: invalid xmlChar value %d
unexpected change of input buffer
NCName
PCDATA invalid Char value %d
xmlParseComment: invalid xmlChar value %d
Comment not terminated 
<!--%.50s
Comment doesn't start and stop in the same entity
Comment not terminated
xml-stylesheet
xml-model
catalog
Catalog PI syntax error: %s
external
xmlParseElementChildrenContentDecl : depth %d too deep, use XML_PARSE_HUGE
xmlParseElementChildrenContentDecl : '%c' expected
All markup of the conditional section is not in the same entity
xmlParseStringEntityRef: no name
xmlLoadEntityContent parameter error
Reading %s entity content input
xmlLoadEntityContent input error
xmlLoadEntityContent: invalid char value %d
xmlParseStringPEReference: no name
%%%s; is not a parameter entity
Attribute %s redefined
Attribute %s:%s redefined
xmlParseEndTag: '</' not found
unparsable
Opening and ending tag mismatch: %s line %d and %s
AttValue length too long
invalid character in attribute value
AttValue: ' expected
detected an error in element content
Couldn't find end of Start Tag %s line %d
StartTag: invalid element name
dictionary allocation failure
xmlns: '%s' is not a valid URI
xmlns: URI %s is not absolute
xml namespace URI cannot be the default namespace
http://www.w3.org/2000/xmlns/
reuse of the xmlns namespace name is forbidden
xml namespace prefix mapped to wrong URI
xml namespace URI mapped to wrong prefix
redefinition of the xmlns prefix is forbidden
xmlns:%s: Empty XML namespace is not allowed
xmlns:%s: '%s' is not a valid URI
xmlns:%s: URI %s is not absolute
Unexpected change of input
standalone: attribute %s on %s defaulted from external subset
Namespace prefix %s for %s on %s is not defined
Namespaced Attribute %s in '%s' redefined
Namespace prefix %s on %s is not defined
Failed to parse QName '%s'
Failed to parse QName '%s:'
Failed to parse QName '%s:%s:'
lang
space
xmlParseInternalSubset: error detected in Markup declaration
Bytes: 0x%02X 0x%02X 0x%02X 0x%02X
Input is not proper UTF-8, indicate encoding !
Version mismatch between document and entity
Pbm popping %d NS
Memory allocation failed : %s
Memory allocation failed
Parser input data memory error
Char 0x%X out of allowed range
Input is not proper UTF-8, indicate encoding !
Char 0x0 out of allowed range
Internal error, xmlCopyCharMultiByte 0x%X out of bound
encoding unknown
encoding not supported %s
USC4 little endian
USC4 big endian
EBCDIC
UCS4 2143
UCS4 3412
UCS2
ISO-2022-JP
Shift_JIS
EUC-JP
couldn't allocate a new input stream
xmlNewEntityInputStream entity = NULL
new input from entity: %s
Cannot parse entity %s
Internal entity %s without content !
Internal parameter entity %s without content !
Predefined entity %s without content !
new input from file: %s
failed to load external entity: NULL filename 
failed to load external entity "%s"
Got NULL parser context
cannot initialize parser context
cannot allocate parser context
failed to allocate buffer
UTF-16LE
UTF-16BE
switching encoding: encoder error
switching encoding : no input
xmlSwitchToEncoding : no input
xmlSAX2InternalSubset
xmlSAX2ExternalSubset
Entity(%s) document marked standalone but requires external subset
Entity(%s) already defined in the internal subset
Entity(%s) already defined in the external subset
SAX.xmlSAX2EntityDecl(%s) called while not in subset
xml:id
xml:id : attribute type should be ID
SAX.xmlSAX2AttributeDecl(%s) called while not in subset
SAX.xmlSAX2ElementDecl(%s) called while not in subset
SAX.xmlSAX2NotationDecl(%s) externalID or PublicID missing
SAX.xmlSAX2NotationDecl(%s) called while not in subset
SAX.xmlSAX2UnparsedEntityDecl(%s) called while not in subset
xmlSAX2StartDocument
Validation failed: no DTD found !
xmlSAX2StartElement
Namespace prefix %s is not defined
xmlSAX2StartElementNs
Namespace prefix %s was not found
Namespace default prefix was not found
invalid namespace declaration '%s'
Avoid attribute ending with ':' like '%s'
xmlns: %s not a valid URI
Empty namespace name for prefix %s
xmlns:%s: %s not a valid URI
Namespace prefix %s of attribute %s is not defined
Attribute %s in %s redefined
xml:id : attribute value %s is not an NCName
Microsoft Document Connection
xmlSAX2AttributeNs
xmlSAX2Characters
xmlSAX2TextNode
xmlSAX2Characters: xmlStrdup returned NULL
xmlSAX2Characters: huge text node
xmlSAX2Characters overflow prevented
xmlGetGlobalState: out of memory
building QName
QName split
building namespace
building DTD
building internal subset
building doc
building attribute
building PI
building node
building text
building character reference
building reference
building comment
building CDATA
base
html
head
href
http://
ftp://
urn:
getting namespace list
searching namespace
creating buffer
growing buffer past UINT_MAX
growing buffer
invalid hexadecimal character value
invalid decimal character value
unterminated entity reference %15s
copying node
allocating the XML namespace
%.20s
default%d
%.20s%d
creating URI structure
saving URI
unescaping URI value
escaping URI value
resolving URI against base
:/?_.#&;=
reaching arbitrary MAX_URI_LENGTH limit
Cannot create automata for element %s
Content model of %s is not determinist: %s
malloc failed
xmlNewElementContent : name == NULL !
xmlNewElementContent : name != NULL !
Internal: ELEMENT content corrupted invalid type
#PCDATA
xmlAddElementDecl: content != NULL for EMPTY
xmlAddElementDecl: content != NULL for ANY
xmlAddElementDecl: content == NULL for MIXED
xmlAddElementDecl: content == NULL for ELEMENT
Internal: ELEMENT decl corrupted invalid type
xmlAddElementDecl: Table creation failed!
Redefinition of element %s
Internal: ATTRIBUTE struct corrupted invalid type
Attribute %s of %s: invalid default value
xmlAddAttributeDecl: Table creation failed!
Attribute %s of element %s: already defined
Element %s has too may ID attributes defined : %s
xmlAddNotationDecl: Table creation failed!
xmlAddNotationDecl: %s already defined
xmlAddID: Table creation failed!
ID %s already defined
xmlAddRef: Table creation failed!
xmlAddRef: Reference list creation failed!
xmlAddRef: Reference list insertion failed!
NOTATION %s is not declared
standalone: %s on %s value had to be normalized based on external subset declaration
Syntax of default value for attribute %s of %s is not valid
ID attribute %s of %s is not valid must be #IMPLIED or #REQUIRED
Element %s has %d ID attribute defined in the internal subset : %s
Element %s has %d ID attribute defined in the external subset : %s
Element %s has ID attributes defined in the internal and external subset : %s
Default value "%s" for attribute %s of %s is not among the enumerated set
Definition of %s has duplicate references of %s
Definition of %s has duplicate references of %s:%s
Definition of %s has duplicate references to %s
Definition of %s has duplicate references to %s:%s
No declaration for attribute %s of element %s
Syntax of value for attribute %s of %s is not valid
Value for attribute %s of %s is different from default "%s"
Value "%s" for attribute %s of %s is not a declared Notation
Value "%s" for attribute %s of %s is not among the enumerated notations
Value "%s" for attribute %s of %s is not among the enumerated set
Value for attribute %s of %s must be "%s"
Validating namespace
No declaration for attribute xmlns:%s of element %s
No declaration for attribute xmlns of element %s
Syntax of value for attribute xmlns:%s of %s is not valid
Syntax of value for attribute xmlns of %s is not valid
Value for attribute xmlns:%s of %s is different from default "%s"
Value for attribute xmlns of %s is different from default "%s"
Value "%s" for attribute xmlns:%s of %s is not a declared Notation
Value "%s" for attribute xmlns of %s is not a declared Notation
Value "%s" for attribute xmlns:%s of %s is not among the enumerated notations
Value "%s" for attribute xmlns of %s is not among the enumerated notations
Value "%s" for attribute xmlns:%s of %s is not among the enumerated set
Value "%s" for attribute xmlns of %s is not among the enumerated set
Value for attribute xmlns:%s of %s must be "%s"
Value for attribute xmlns of %s must be "%s"
Element %s was declared EMPTY this one has content
Element %s was declared #PCDATA but contains non text nodes
Element %s is not declared in %s list of possible children
Attribute element not expected
Text element has children !
Text element has namespace !
Text element has no content !
Entity element not expected
Notation element not expected
Document element not expected
HTML Document not expected
unknown element type
No declaration for element %s
Internal: MIXED struct corrupted
standalone: %s declared in the external subset contains white spaces nodes
Element %s does not carry attribute %s
Element %s does not carry attribute %s:%s
Element %s required attribute %s:%s has no prefix
Element %s required attribute %s:%s has different prefix
Element %s namespace name for default namespace does not match the DTD
Element %s namespace name for %s does not match the DTD
no root element
HTML
root and DTD name do not match '%s' and '%s'
xmlValidateDocumentFinal: doc == NULL
Found NULL content in content model of %s
Found PCDATA in content model of %s
Building content model
ContentModel broken for element %s
 ...
Element %s has too many ID attributes defined : %s
element table allocation failed
ENTITY attribute %s reference an unknown entity "%s"
ENTITY attribute %s reference an entity "%s" of wrong type
ENTITIES attribute %s reference an unknown entity "%s"
ENTITIES attribute %s reference an entity "%s" of wrong type
NOTATION attribute %s reference an unknown notation "%s"
realloc failed
Element %s content does not follow the DTD, expecting %s, got %s
Element content does not follow the DTD, expecting %s, got %s
CDATA
attribute %s line %d references an unknown ID "%s"
IDREF attribute %s references an unknown ID "%s"
IDREFS split
IDREFS attribute %s references an unknown ID "%s"
xmlValidateAttributeCallback(%s): internal error
attribute %s: could not find decl for element %s
NOTATION attribute %s declared for EMPTY element %s
fread()
fflush()
fclose()
creating HTTP output context
copying URI
creating input buffer
creating output buffer
growing input buffer
failed to load HTTP resource "%s"
failed to load HTTP resource
/xml
+xml
Unknown encoding %s
building canonical path
Unknown IO error
Permission denied
Resource temporarily unavailable
Bad file descriptor
Bad message
Resource busy
Operation canceled
No child processes
Resource deadlock avoided
Domain error
File exists
Bad address
File too large
Operation in progress
Interrupted function call
Invalid argument
Input/output error
Is a directory
Too many open files
Too many links
Inappropriate message buffer length
Filename too long
Too many open files in system
No such device
No such file or directory
Exec format error
No locks available
Not enough space
No space left on device
Function not implemented
Not a directory
Directory not empty
Not supported
Inappropriate I/O control operation
No such device or address
Operation not permitted
Broken pipe
Result too large
Read-only file system
Invalid seek
No such process
Operation timed out
Improper link
Attempt to load network entity %s
encoder error
flush error
write error
no input
buffer full
loading error
not a socket
already connected
connection refused
unreachable network
address in use
already in use
unknown address family
file://localhost/
file:///
file:/
creating buffer context
1.2.11
xmlCreateZMemBuff:  %s %d
Error initializing compression context.  ZLIB error:
%c%c%c%c%c%c%c%c%c%c
gzread()
gzclose()
fwrite()
xmlIOHTTPWrite:  %s
%s '%s'.
Error appending to internal buffer.
Error sending document to URI
xmlZMemBuffAppend:  %s %d %s - %d
Compression error while appending
bytes to buffer.  ZLIB error
xmlZMemBuffExtend:  %s %lu bytes.
Allocation failure extending output buffer to
text/xml
Content-Encoding: gzip
xmlIOHTTPCloseWrite:  %s '%s' %s '%s'.
Error retrieving content.
Unable to
data to URI
xmlIOHTTPCloseWrite: HTTP '%s' of %d %s
'%s' %s %d
bytes to URI
failed.  HTTP return code:
xmlZMemBuffGetContent:  %s - %d
Error flushing zlib buffers.  Error code
NULL
XML_MEM_BREAKPOINT
XML_MEM_TRACE
creating execution context
epsilon transition left at runtime
pushing input string
saving regexp
exec save: allocation failed
allocating state
adding state
allocating range
failed to compile: %s
compiling regexp
allocating atom
generate transition: atom == NULL
copying atom
allocating counter
add state: state is NULL
add state: target is NULL
adding transition
atom push: atom is NULL
pushing atom
TODO: XML_REGEXP_STRING
AegeanNumbers
AlphabeticPresentationForms
Arabic
ArabicPresentationForms-A
ArabicPresentationForms-B
Armenian
Arrows
BasicLatin
Bengali
BlockElements
Bopomofo
BopomofoExtended
BoxDrawing
BraillePatterns
Buhid
ByzantineMusicalSymbols
CJKCompatibility
CJKCompatibilityForms
CJKCompatibilityIdeographs
CJKCompatibilityIdeographsSupplement
CJKRadicalsSupplement
CJKSymbolsandPunctuation
CJKUnifiedIdeographs
CJKUnifiedIdeographsExtensionA
CJKUnifiedIdeographsExtensionB
Cherokee
CombiningDiacriticalMarks
CombiningDiacriticalMarksforSymbols
CombiningHalfMarks
CombiningMarksforSymbols
ControlPictures
CurrencySymbols
CypriotSyllabary
Cyrillic
CyrillicSupplement
Deseret
Devanagari
Dingbats
EnclosedAlphanumerics
EnclosedCJKLettersandMonths
Ethiopic
GeneralPunctuation
GeometricShapes
Georgian
Gothic
Greek
GreekExtended
GreekandCoptic
Gujarati
Gurmukhi
HalfwidthandFullwidthForms
HangulCompatibilityJamo
HangulJamo
HangulSyllables
Hanunoo
Hebrew
HighPrivateUseSurrogates
HighSurrogates
Hiragana
IPAExtensions
IdeographicDescriptionCharacters
Kanbun
KangxiRadicals
Kannada
Katakana
KatakanaPhoneticExtensions
Khmer
KhmerSymbols
Latin-1Supplement
LatinExtended-A
LatinExtended-B
LatinExtendedAdditional
LetterlikeSymbols
Limbu
LinearBIdeograms
LinearBSyllabary
LowSurrogates
Malayalam
MathematicalAlphanumericSymbols
MathematicalOperators
MiscellaneousMathematicalSymbols-A
MiscellaneousMathematicalSymbols-B
MiscellaneousSymbols
MiscellaneousSymbolsandArrows
MiscellaneousTechnical
Mongolian
MusicalSymbols
Myanmar
NumberForms
Ogham
OldItalic
OpticalCharacterRecognition
Oriya
Osmanya
PhoneticExtensions
PrivateUse
PrivateUseArea
Runic
Shavian
Sinhala
SmallFormVariants
SpacingModifierLetters
Specials
SuperscriptsandSubscripts
SupplementalArrows-A
SupplementalArrows-B
SupplementalMathematicalOperators
SupplementaryPrivateUseArea-A
SupplementaryPrivateUseArea-B
Syriac
Tagalog
Tagbanwa
Tags
TaiLe
TaiXuanJingSymbols
Tamil
Telugu
Thaana
Thai
Tibetan
Ugaritic
UnifiedCanadianAboriginalSyllabics
VariationSelectors
VariationSelectorsSupplement
YiRadicals
YiSyllables
YijingHexagramSymbols
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC_HRIRdatabase.cpp
LoudspeakerManager
DisableModelUpdates
ColdStart
ColdResistance
DSP Sound assertion in %s at line %d
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibBuffer.cpp
%e, 
[==== DspLibBuffer::print( printStyle: %d ) - this: %p =======================================================================>
      channels: %d, samplerate: %5.3f Hz, capacity: %lu frames, maxNumFrames: %lu, numFrames: %lu, frameOffset: %lu, memory usage: %lu bytes, %lu total, 
uses stack, 
external resources, 
internal resources, 
      silent: %s, valid: %s, min: %1.8e, max: %1.8e, maxmag: %1.8e (%3.1f dB) at frame index %d
      mean: %1.8e, rms: %1.8e (%3.1f dB), median: %1.8e
      checksum: %1.8e, checksumMS: %1.8e, aligned by %lu floats: %s.
      address of channel %d: 0x%lx, 
      channel_%d = [ 
      channel_%d = { 
                    
%ef, 
                    
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
      numFrames() == 0. Buffer is empty.
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ToneGenerator/dsp/DspLibToneGenerator.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/AudioMeter/dsp/DspLibAudioMeter.cpp
presets
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PeakPowerGuard/dsp/DspLibPeakPowerGuardAdmittanceFilterCoeffSet.cpp
name
samplerateInHz
FIRarray
temperatureInDegreeCelcius
numberOfCoefficients
FIRcoefficients
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemID.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDTestToneGenerator.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Biquad/dsp/DspLibBiquadDesigns.cpp
a1 = %f and a2 =%f, create a biquad filter which is not stable
ERROR: prototypeForPhaseCompensation not available for this filter type.
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassQueen/dsp/DspLibBassQueen.cpp
Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassQueen/dsp/DspLibMitigationAdaptation.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/NotchFilterBank/dsp/DspLibNotchFilterBank.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/SampleRateConverter/dsp/DspLibSampleRateConverter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueckOSCFilter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LowFlow/dsp/DspLibLowFlowAnalysisPath.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueckKernel.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PeakPowerGuard/dsp/DspLibPeakPowerGuard.cpp
%#.9g 
%#.9g + %#.9gi   
%#.9g - %#.9gi   
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerModel/dsp/DspLibLoudspeakerModel.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/RMS/dsp/DspLibRMS.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BuzzKill/dsp/DspLibBuzzKillClasses.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FFT/dsp/DspLibFFT.cpp
Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FFT/dsp/DspLibFFT.h
DefaultAudioChannelLayout
SelectedAudioChannelLayout
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassKoenig/dsp/DspLibBassKoenig.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDImpedanceMeasurement.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudnessMeter/dsp/DspLibLoudnessMeter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ThermalSpeakerProtection/dsp/DspLibThermalSpeakerProtection.cpp
bypass
algorithm version
input gain
max input level
window size
lookahead delay
filterbank channel spacing
filterbank mitigation quality
filterbank analysis quality
filterbank weight decay
high pass filter enable
high pass filter frequency
high pass filter order
adaptation target tolerance
adaptation creep threshold
adaptation minimu gain
enable inverse pressure filter
enable excursion control
output gain
release time
enable filter update crossfade
input high pass order
excursion limit, percent of xmax ch 0
excursion limit, percent of xmax ch 1
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Biquad/dsp/DspLibBiquad.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibMath.cpp
ERROR DspLibUtility::isEqual(): a = %.17g, b = %.17g, error = %.17g %%
ERROR: could not load: 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDPilotTone.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BuzzKill/dsp/DspLibBuzzKill.cpp
Error at section %lu: 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ToneMeister/dsp/DspLibToneMeister.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDModelFit.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FourBandRandomOrderLrFilterBank/dsp/DspLibFourBandRandomOrderLrFilterBank.cpp
%s: %s
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/VirtualBass/dsp/DspLibVirtualBass.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ControlFreak/dsp/DspLibControlFreak.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/HilbertTransform/dsp/DspLibHilbertTransform.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudnessNormalizer/dsp/DspLibLoudnessNormalizer.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/VirtualBass/dsp/DspLibNonLinearDevice.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDImpedanceModels.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibBase.cpp
PowerGuard
LookAhead
MaxAttenuation
PowerTimeScale1
PowerTimeScale2
PowerTimeScale3
PowerTimeScale4
PowerHardLimit1
PowerHardLimit2
PowerHardLimit3
PowerHardLimit4
PowerSoftLimit1
PowerSoftLimit2
PowerSoftLimit3
PowerSoftLimit4
WooferAmpVoltsFullScale
TweeterAmpVoltsFullScale
WooferAmpEfficiency
TweeterAmpEfficiency
WooferMinPowerModelRatio
PowerSmoothingTime
TweeterResistance
WooferReleaseTime
TweeterReleaseTime
LoudspeakerSystemID
general
Reset
NvmTimeBetweenUpdatesBeforeDecayInSeconds
NvmDecayTimeConstantInSeconds
TestTone
TestToneEnable
TestToneFrequencyHz
TestToneAmplitudeDecibel
ImpedanceEstimation
CurrentSenseCalibrationAmperesPerFullScale
VoltageSenseCalibrationVoltsPerFullScale
ImpedanceEstimateSmoothTimeConstantSeconds
ImpedanceEstimateUpdateRateSeconds
ImpedanceInvertPhase
RDCEstimation
RdcEstimateSmoothTimeConstantSeconds
EnableRdcAdaptation
RdcCoherenceThreshold
RdcDefaultOhms
RdcMinOhms
RdcMaxOhms
VoiceCoilCalibrationTemperatureCelcius
VoiceCoilResistanceAtCalibrationTemperatureOhms
VoiceCoilTemperatureCoefficient
RdcErrorThreshold
PilotTone
PilotToneDesiredFrequencyHz
PilotToneAmplitudeDecibel
PilotToneFadingTimeConstantSeconds
PilotToneFadeOutUpperThresholdDecibels
PilotToneFadeOutLowerThresholdDecibels
LR2InductanceModel
Zlr2LeDefaultHenry
Zlr2Le2DefaultHenry
Zlr2RLe2DefaultOhms
EnableZlr2Adaptation
Zlr2NumOfIterations
Zlr2MinFreqHz
Zlr2MaxFreqHz
Zlr2AdaptationSmoothTimeConstantSeconds
LeMinHenry
LeMaxHenry
Le2MinHenry
Le2MaxHenry
RLe2MinOhms
RLe2MaxOhms
Zlr2SetCoherenceToZeroThresholdDecibel
Zlr2SparcityThresholdPercent
Zlr2L1NormThresholdDecibel
Zlr2FreqStride
Zlr2AdaptationSmoothSlowTimeConstantSeconds
Zlr2SlowAdaptationThresholdDecibel
Zlr2ErrorThreshold
ResonanceModel_1st
EnableZmsAdaptation_1st
EnableMmsAdaptation_1st
BlDefaultTeslaMeter_1st
MmsDefaultGrams_1st
RmsDefaultKiloGramsPerSeconds_1st
KmsDefaultNewtonPerMeter_1st
ZmsMinFreqHz_1st
ZmsMaxFreqHz_1st
ZmsNumOfIterations_1st
ZmsAdaptationSmoothTimeConstantSeconds_1st
ZmsL1NormThresholdDecibel_1st
ZmsSetCoherenceToZeroThresholdDecibel_1st
ZmsSparcityThresholdPercent_1st
ZmsAdaptationSmoothSlowTimeConstantSeconds_1st
ZmsSlowAdaptationThresholdDecibel_1st
MmsMinGrams_1st
MmsMaxGrams_1st
RmsMinKiloGramsPerSeconds_1st
RmsMaxKiloGramsPerSeconds_1st
KmsMinNewtonPerMeter_1st
KmsMaxNewtonPerMeter_1st
BlMinTeslaMeter_1st
BlMaxTeslaMeter_1st
EnableBlAdaptation_1st
ZmsErrorThreshold_1st
ResonanceModel_2nd
ResonanceModel_3rd
EnableZmsAdaptation_Spare
EnableMmsAdaptation_Spare
BlDefaultTeslaMeter_Spare
MmsDefaultGrams_Spare
RmsDefaultKiloGramsPerSeconds_Spare
KmsDefaultNewtonPerMeter_Spare
ZmsMinFreqHz_Spare
ZmsMaxFreqHz_Spare
ZmsNumOfIterations_Spare
ZmsAdaptationSmoothTimeConstantSeconds_Spare
ZmsL1NormThresholdDecibel_Spare
ZmsSetCoherenceToZeroThresholdDecibel_Spare
ZmsSparcityThresholdPercent_Spare
ZmsAdaptationSmoothSlowTimeConstantSeconds_Spare
ZmsSlowAdaptationThresholdDecibel_Spare
MmsMinGrams_Spare
MmsMaxGrams_Spare
RmsMinKiloGramsPerSeconds_Spare
RmsMaxKiloGramsPerSeconds_Spare
KmsMinNewtonPerMeter_Spare
KmsMaxNewtonPerMeter_Spare
BlMinTeslaMeter_Spare
BlMaxTeslaMeter_Spare
EnableBlAdaptation_Spare
ZmsErrorThreshold_Spare
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MozartCompressor/dsp/DspLibMozartCompressor.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FIR/dsp/DspLibFIR.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueck.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerModel/dsp/DspLibLoudspeakerModelParameters.cpp
mode
inv p cutoff [Hz]
inv p cutoff order
Re [Ohms]
Le [Henry]
Mms [kg]
Rms [kg/s]
Cms [m/N]
Phi [N/A]
Vab [m^3]
Sd [m^2]
amp sensitivity [V/Fs]
excursion limit [m]
driver_gainLin
driver_p0_real
driver_p0_imag
driver_p1_real
driver_p1_imag
driver_p2_real
driver_p2_imag
driver_p3_real
driver_p3_imag
driver_z0_real
driver_z0_imag
driver_z1_real
driver_z1_imag
driver_z2_real
driver_z2_imag
driver_z3_real
driver_z3_imag
radiator_gainLin
radiator_p0_real
radiator_p0_imag
radiator_p1_real
radiator_p1_imag
radiator_p2_real
radiator_p2_imag
radiator_p3_real
radiator_p3_imag
radiator_z0_real
radiator_z0_imag
radiator_z1_real
radiator_z1_imag
radiator_z2_real
radiator_z2_imag
radiator_z3_real
radiator_z3_imag
number of radiators
Sd active driver [m^2]
Sd passivc radiator [m^2]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC_FIRMatrix.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PowerGuard/dsp/DspLibPowerGuardClasses.cpp
ReleaseType
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Statistics]
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Statistics_Impl]
std::string_view vp::reflect_type_name() [T = vp::services::AB_Helper]
Unknown input parameter!
CircularModels.cpp
ClickEventTimingHelper.mm
clickEventLog_
.dat
clickEventSim_
/tmp/ClickRemoval/
PresetV
PresetA
Gain Offset
RotationUtilities.cpp
yawPitchRoll2RotationMatrixFOA
R.NumRows()==4
R.NumCols()==4
Processor_%d
'mozs'
Input Gain
Output Gain
DSPchain
ATV: mono
ATV: stereo
ATV: 5.1
ATV: 7.1
ATV: Atmos
MAC: mono
MAC: stereo
MAC: 5.1
MAC: 7.1
MAC: Atmos
LPCore.cpp
algoUpmixPISteered
AULando_LRCLsRs.cpp
N1 > 0
ComplexMat
fbComplexMat.h
mNumRows * mNumCols <= mCapacity
operator*
lhs.mNumCols == rhs.mNumRows
inversed
mNumRows == mNumCols
mNumRows == 2
det != Complexf{0.f}
vpEchoGateV2.cpp
vpechogate2
Front mic EC LEE
Back mic EC LEE
EC LEE Output
Front Mic
Back Mic
Beam Mics
EC delta EIR
EC main lobe delay
EC adaptation state
EC time aligned ref signal energy
EC mic LEE signal cross-correlation
AUMixSwitch
NotificationHandler.cpp
SnapCoordinates
arithmetic multiplication overflow
arithmetic addition overflow
SCTwoInputMixer.cpp
inOneABL->mNumberBuffers == channelCount
out(0).wire()->buffer()->byteCapacity() >= n * sizeof(Float32)
SCTwoInputMixer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/AUSpatialCapture/SCTwoInputMixer.hpp
all formats must be either freq or time domains.
BypassableIRProcessor
initializeFadingParameters
updateFadingParameters
crossFade
(I) gate curr downlink gain
(I) gate downlink gain target
(I) Output from gate speech prob
(I) Input to gate speex speech prob
(Expert) Allow reset of InitialDeltaIR thresh on scenario change
(I) deltaIR input from EC
(Tuning) Near-End is Active Threshold
(Expert) Echo is Loud and non-linear thresh
(Tuning) Echo is Soft Threshold
(Tuning) Near-end to Echo OpengateThresh
(Tuning) Near-end to Echo OpengateSoftThresh
(I) gate Current Gate Scale Factor
(Tuning) Near-end to Echo Closed/Bargein Thresh
(Expert) Ref is Loud making non-linear echo thresh
(I) Some indication of downlink playback scenario
(Tuning) DeltaIRThresh
(I) MinDLGainTarget 
(I) Input to gate: AGC dynamic gain
(I) Input to gate: AGC post gain
(I) Input to gate: IR main lobe delay
(Tuning) Time scale to override DeltaIR by InitialDeltaIR thresh: 0==none, >0 scales
(Expert) gate Soften gate closed decision
(Expert) gate consider high freq energy
(Expert) gate Flag to enable perceptual gate
(Expert) gate Smooth level considered a tone
(Expert) gate Assumed masking offset for pure tone
(Expert) gate Assumed masking offset for noise
(Tuning) Level above which excess coupling is declared
(Tuning) Disable/Enable detection of high coupling
(Tuning) Mic to use for IR energy
(Tuning) Near-end to Echo OpengateThresh for excess coupling scenarios
(Tuning) Near-end to Echo OpengateSoftThresh for excess coupling scenarios
(Tuning) Near-end to Echo Closed/Bargein Thresh for excess coupling scenarios
(Expert) Upper limit for delta IR Energy in dB
(Expert) Power to be applied to the relative delta IR Energy to update gate thresholds
(I) Input to gate: Echo to local voice ratio from linear EC
(Tuning) Bit pattern for improving choppiness caused by Gating
(I) Input to gate: OCNS/OCNE Noise SPL Estimate
(Tuning) Adjustment to the amplitude of the fill
(Tuning) Combined RES and Gate suppression threshold that triggers CNI
(Tuning) Smoothing constant for noise estimate used for fill
(Tuning) Time constant for holding in fill state and slow gate release
(DebugOnly) Noise Fill SPL/Energy
(Tuning) Level above which CNI is disabled
(Tuning) Level below which CNI is disabled
(Tuning) Noise fill level is maintained constant above this
(Tuning) Probability above which NE speech is considered present
TypeDefault
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v3/vpProcessUplink_v3.cpp
vpProcessUplink_v3.cpp
CABufferList.h
_vpio_res: check 4 failed!
_vpio_res: check 6 failed!
denoise
Basic target echo supp level
Basic target echo supp active
Speech prob (I)
(I) AGC dynamic gain
(I) AGC post gain
(I) EC adaptation state
(I) EC time aligned ref signal energy
Apply RES gain internally (3 modes)
(Expert) EnableAdjustResidual
(Expert)  Max leakage level
(Expert) High leakage level
(Expert) Low leakage level
(I) EC Mic Eclee Xcorr
(Expert) HighMicEcleeXcorr, used4 EnableAdjustResidual=1
(Expert) LowMicEcleeXcorr, used4 EnableAdjustResidual=1
ScaleUp factor0, used4 EnableAdjustResidual=1
ScaleUp factor1, used4 EnableAdjustResidual=1
ScaleUp factor2, used4 EnableAdjustResidual=1
ScaleDown factor1, used4 EnableAdjustResidual=1
ScaleDown factor2, used4 EnableAdjustResidual=1
(Expert) Enable Noise Floor
(Expert) NoiseFloorBias for single talk
(Expert) NoiseFloorBias for double talk
Use NS gains
Limit Low frequency scale factors
Gainfloor HF CutoffFreq
Gainfloor HF Echo Suppress level
Gainfloor HF Echo Suppress Active
Mode: 0==RESonly,1==RES/NS,2=NSonly+removeRE, 3=NSonly
Noise suppression target
Tuning balance between RES and NS suppression
(I) speech prob
SPL Time Constant
SPL Meter Calibration
(I) noise SPL (gated PS)
Use external noise estimation
Enable Poly EC eclee & ecout
Has NFN Switch in the chain
NFN Switch Decision 0-no NFN, 1-use NFN
minimum dB poly EC better than linear EC
Echo2Lv LinearEC
Echo2Lv PolyEC
Enable Eclee3 for residual echo estimation
Apply NS gains on RES inputs for leakage calculation
Scale factor for poly EC echo proxy in dB
Use Echo2Lv from ECs in single-mic chain
Recaluate Echo2Lv values in RES for multi-mic use case
FactoryDiagsMode
channel %d
channelSplitMode
buffer
statusCounter
audioBlockSize
numFramesForStatus
percentCPUAverage
percentCPUPeak
megaCyclesPerSecondAverage
megaCyclesPerSecondPeak
latencyInMilliseconds
megaInstructionsPerSecondAverage
megaInstructionsPerSecondPeak
queueSize
numAudioChannels
audioSampleRate
arrayOfDictionaries
speex denoise
speex echo supp level
speex echo supp active
speex speech prob (I)
AGC dynamic gain (I)
AGC post gain (I)
EC adaptation state (I)
EC time aligned ref signal energy (I)
Apply RES gain internally
ParamRamper.cpp
outParamValues.size() >= inNumFrames
vp_use_vareq
VoiceProcessor_v2.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/VoiceProcessor_v2.h
Chat flavor not supported in this vp version
AULevelDrivenSuppressor.cpp
%4d %s %s 
21:46:09
aulsup
Operating mode: 0-mild (default) 1-moderate 2-aggressive
Nominal level of signal above which to preserve (dBfs)
Suppression offset from nominal (dB). Net=Nominal value param1 + this offset
Nominal level of signal below which to gate more (dBfs)
Mask limits on supression (enable=1, disable=0)
vpDebug_TuningSupport.cpp
%s%d%02d%02d.%02d%02d%02d.%03u
%s%lu
, %f
, %d
CreateLogHannMat
SubbandXYZ.cpp
fabs(wSum) > 1e-12
val.size() == indx.size()
val.size() == jndx.size()
SetPolarDOAFromXYZ
fabsf(z) <= 1.0
isfinite(el)
isfinite(az)
elevation >= -90.0 && elevation <= 90.0
ARGapFillerTrainingRegionHeuristics.mm
gap length too small compared to window length
error in filter coeff calc
invalid input length
bad input size
x is empty
input size mismatch
xEnvdB: 
fluxPerRegion: 
centroidPerRegion: 
Power
Spectral
Base
filter Length in Milli Secs
Kalman matrix configuration
fftSize
hopSize
Enable Dual LMS
Enable Dual KF
Enable eclee log for channel 1
For RES: ECMicEcleeXcorr
Flag for RES: Adapted
For RES: ECSxxTimeAligned energy
Adapt Kalman after N frames
M Channel EC
Number for bands to use
Stereo
StereoHeadphones
MatrixStereo
MidSide
Binaural
Ambisonic_B_Format
Quadraphonic
Pentagonal
Hexagonal
Octagonal
Cube
MPEG_1_0
MPEG_2_0
MPEG_3_0_A
MPEG_3_0_B
MPEG_4_0_A
MPEG_4_0_B
MPEG_5_0_A
MPEG_5_0_B
MPEG_5_0_C
MPEG_5_0_D
MPEG_5_1_A
MPEG_5_1_B
MPEG_5_1_C
MPEG_5_1_D
MPEG_6_1_A
MPEG_7_1_A
MPEG_7_1_B
MPEG_7_1_C
Emagic_Default_7_1
SMPTE_DTV
ITU_1_0
ITU_2_0
ITU_2_1
ITU_2_2
ITU_3_0
ITU_3_1
ITU_3_2
ITU_3_2_1
ITU_3_4_1
DVD_0
DVD_1
DVD_2
DVD_3
DVD_4
DVD_5
DVD_6
DVD_7
DVD_8
DVD_9
DVD_10
DVD_11
DVD_12
DVD_13
DVD_14
DVD_15
DVD_16
DVD_17
DVD_18
DVD_19
DVD_20
AudioUnit_4
AudioUnit_5
AudioUnit_6
AudioUnit_8
AudioUnit_5_0
AudioUnit_6_0
AudioUnit_7_0
AudioUnit_7_0_Front
AudioUnit_5_1
AudioUnit_6_1
AudioUnit_7_1
AudioUnit_7_1_Front
AAC_3_0
AAC_Quadraphonic
AAC_4_0
AAC_5_0
AAC_5_1
AAC_6_0
AAC_6_1
AAC_7_0
AAC_7_1
AAC_7_1_B
AAC_7_1_C
AAC_Octagonal
TMH_10_2_std
TMH_10_2_full
AC3_1_0_1
AC3_3_0
AC3_3_1
AC3_3_0_1
AC3_2_1_1
AC3_3_1_1
EAC_6_0_A
EAC_7_0_A
EAC3_6_1_A
EAC3_6_1_B
EAC3_6_1_C
EAC3_7_1_A
EAC3_7_1_B
EAC3_7_1_C
EAC3_7_1_D
EAC3_7_1_E
EAC3_7_1_F
EAC3_7_1_G
EAC3_7_1_H
DTS_3_1
DTS_4_1
DTS_6_0_A
DTS_6_0_B
DTS_6_0_C
DTS_6_1_A
DTS_6_1_B
DTS_6_1_C
DTS_7_0
DTS_7_1
DTS_8_0_A
DTS_8_0_B
DTS_8_1_A
DTS_8_1_B
DTS_6_1_D
WAVE_2_1
WAVE_3_0
WAVE_4_0_A
WAVE_4_0_B
WAVE_5_0_A
WAVE_5_0_B
WAVE_5_1_A
WAVE_5_1_B
WAVE_6_1
WAVE_7_1
Atmos_5_1_2
Atmos_5_1_4
Atmos_7_1_2
Atmos_7_1_4
Atmos_9_1_6
Logic_Mono
Logic_Stereo
Logic_Quadraphonic
Logic_4_0_A
Logic_4_0_B
Logic_4_0_C
Logic_5_0_A
Logic_5_0_B
Logic_5_0_C
Logic_5_0_D
Logic_5_1_A
Logic_5_1_B
Logic_5_1_C
Logic_5_1_D
Logic_6_0_A
Logic_6_0_B
Logic_6_0_C
Logic_6_1_A
Logic_6_1_B
Logic_6_1_C
Logic_6_1_D
Logic_7_1_A
Logic_7_1_B
Logic_7_1_C
Logic_7_1_SDDS_A
Logic_7_1_SDDS_B
Logic_7_1_SDDS_C
Logic_Atmos_5_1_2
Logic_Atmos_5_1_4
Logic_Atmos_7_1_2
Logic_Atmos_7_1_4_A
Logic_Atmos_7_1_4_B
Logic_Atmos_7_1_6
CICP_1
CICP_2
CICP_3
CICP_4
CICP_5
CICP_6
CICP_7
CICP_9
CICP_10
CICP_11
CICP_12
CICP_13
CICP_14
CICP_15
CICP_16
CICP_17
CICP_18
CICP_19
CICP_20
BeginReserved
EndReserved
HOA_ACN_SN3D
HOA_ACN_N3D
DiscreteInOrder
UseChannelDescriptions
UseChannelBitmap
GetNumberChannelDescriptions
CoreAudioBaseTypes.hpp
GetAudioChannelLayout().mNumberChannelDescriptions == (mStorage.size() - kHeaderSize) / sizeof(AudioChannelDescription)
algorithm
clickTypes
subspace
DetectionParams.mm
SMean
SCovMx
SubspaceMethod
regionBeginSeconds
regionEndSeconds
padSeconds
PrimaryParams
SubspaceParams
CostParams
Miss
FalseAlarm
PriorParams
NoiseParams
innerMaskRadiusSec
outerMaskRadiusSec
NonstationaryNoiseEstimator.h
invalid mask size
ch%u
yyyy-MM-dd'T'HH:mm:ss
vpProcessDownlink_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpProcessing/vpProcessDownlink_v2.cpp
preflight downlink: not ok to process?!
preflight downlink: tryer acquire failed
SampleRateChangedCallback
AUBeamNFSelector.cpp
(inID == kAudioUnitProperty_SampleRate) || (inID == kAudioUnitProperty_StreamFormat)
newSampleRateSize <= sizeof(newSampleRate)
tempASBDSize <= sizeof(tempASBD)
BlockSizeChangedCallback
inID == kAudioUnitProperty_MaximumFramesPerSlice
newBlockSizeSize <= sizeof(newBlockSize)
Input(i).GetStreamFormat().mSampleRate == mSampleRate
Output(i).GetStreamFormat().mSampleRate == mSampleRate
BeamSystemNoiseProfile
BeamFarfieldEQ
Auto.
Force left.
Force center.
Force right.
Left.
Center.
Right.
Aggregate omni.
+X beam.
-X beam.
Mode 0.
Mode 1.
Mode 2.
Force fixed value.
mSampleRate == Input(i).GetStreamFormat().mSampleRate
mSampleRate == Output(i).GetStreamFormat().mSampleRate
beamnfselector
Position detection mode.
Detected phone position.
Current beam.
Output mode.
Update threshold mode.
Update threshold.
Update threshold at Noise level 1.
Update threshold at Noise level 2.
Noise level 1.
Noise level 2.
Current noise level.
Wind detection probability.
Wind detection threshold.
Threshold left.
Threshold right.
Start frequency (Fmin).
End frequency (Fmax).
Update threshold crossed.
M1 Separation.
+X Separation.
M4 Separation.
-X Separation.
MaxSep: max([M1],[M4],[+X],[-X]).
PSD smoothing time constant.
Separation Difference smoothing time constant.
Downlink speech presence probabiility
Mic Status.
|OutputElement
ResetOutputChannelLayout
SetFullLayout
aucr
GetGains
WindDetectorAndSuppressor.cpp
GetParameterList
AUSpeechEnhancer.cpp
outNumParameters == mParameterInfoTable.size()
Rectangular
Gamma Tone
Nearest Neighbor
setupCore
mMaxFrameSize > 0
Bypass Algorithm
Wind Flag
Downlink SPP Threshold
Filter Bank Type
Interpolation Type
Loud Speaker Calibration
Signal Power Smoothing Time
Noise Power Attack Time
Noise Power Release Time
Environmental Noise Power (dBA)
Auto Volume Low Noise
Auto Volume High Noise
Auto Volume Low Slope
Auto Volume High Slope
Total Volume Max Gain
Pre Auto Volume SNR (dBA)
Current Auto Volume Gain
Bypass Auto EQ
EQ Bandwidth
Regularization High SNR
EQ Min Gain (low freq)
EQ Max Gain (low freq)
Pre EQ Signal Power (dBA)
Num Iterations to Converge EQ
Use Tabulated Speech PSD
Enable EQ Display (expert mode)
Current User Volume Gain
Current Total Volume Gain
EQ Min Gain (high freq)
EQ Max Gain (high freq)
EQ Frequency Boundary
EQ Low Noise
Change in Environment
0.20 kHz
0.40 kHz
0.80 kHz
1.25 kHz
1.60 kHz
2.00 kHz
2.50 kHz
3.15 kHz
4.00 kHz
5.00 kHz
6.30 kHz
8.00 kHz
10.00 kHz
12.50 kHz
16.00 kHz
20.00 kHz
EQ Slew Rate (dB/s)
Noise Slew Rate (dB/s)
Auto Volume Slew Rate (dB/s)
Near-End Speech Presence
Near-End SPP Threshold
populateParameterInfoTable
SpeechEnhancerParameters.h
paramInfo.size() == kNumberOfParams
getAverageSpeechSpectrum
SpeechEnhancerCore.h
DFTFrequenciesSize > 1
resampleSpectrum
DFTFrequenciesSizeIn > 1
DFTFrequenciesSizeOut > 1
setParameterLight
index >= 0 && index < mParameterInfoTable.size()
parameterValue
input.size() == mNumInputChannels
output.size() == mNumInputChannels
isFrequencyDomain ? (input[0].size() >= 2 * numFrames) : (input[0].size() >= numFrames)
SpeechEnhancerFilterBank
SpeechEnhancerFilterBank.h
mDFTfrequencies.size() > 1
BassKoenig_ViewFactory
InputGain
InputLowPassFilterFreq
InputLowPassFilterOnOff
NumXchannels
HighPassFilterStartFreq
HighPassFilterStopFreq
DownsamplingFactor
LookaheadDelay
ExcursionLimit
AmplifierCalibrationFactor
Use4thOrderHpf
SelectFrequencyResponseGraph
ExcursionLimiterOnOff
InverseBoxFilterOnOff
GlobalBypass
HighPassFilterQuality
kThieleSmallParameter_ReOhms
kThieleSmallParameter_LemH
kThieleSmallParameter_MmGrams
kThieleSmallParameter_RmKilogramsPerSecond
kThieleSmallParameter_CmMillimetersPerNewton
kThieleSmallParameter_BlNewtonsPerAmpere
kThieleSmallParameter_VabCubicMeters
kThieleSmallParameter_SdCentimetersSquared
EQ0 - on
EQ0 - Frequency
EQ0 - Gain
EQ0 - Quality
EQ1 - on
EQ1 - Frequency
EQ1 - Gain
EQ1 - Quality
EQ2 - on
EQ2 - Frequency
EQ2 - Gain
EQ2 - Quality
EQ3 - on
EQ3 - Frequency
EQ3 - Gain
EQ3 - Quality
EQ4 - on
EQ4 - Frequency
EQ4 - Gain
EQ4 - Quality
HighpassFilterAttack
HighpassFilterRelease
DisplayRelease
Trim Channel 0
Trim Channel 1
Flip audio signal phase
TemperatureProtection 0
safe temperature, Celcius 0
critical temperature, Celcius 0
TemperatureProtection 1
safe temperature, Celcius 1
critical temperature, Celcius 1
TemperatureProtection 2
safe temperature, Celcius 2
critical temperature, Celcius 2
TemperatureSensor 0
TemperatureSensor 1
TemperatureSensor 2
Rail Voltage
RailVoltage Protection
safe voltage
critical voltage
inverse box filter gain
inverse box filter low cutoff
ScottyKernel
Adapt BSS Filters
Covariance Alpha TC
Mixture Phase
Energy Regularization
Covariance Regularization
Weighted Covariance Regularization
Unmixing Regularization
Scale Mode
Source Prior Beta
White Noise Gain Max
Optimization Mode
Minimum Energy Threshold
Start Up Wait
Covariance Diagonal Initialization
Energy Low Frequency
Energy High Frequency
Mixing Mode
Num of Echo Chan
Adaptive Prior Probability
Prior Strength
AUBSS2.cpp
Multiple Reference MDP
Speed 
GetParameterValueStrings
std::get<3>(param) == 1
BSS Phase
No Mixing
BSS-RES
Others
aubss2
Tensor3Lib.h
tDSP_zmeye
N == X.cols
tDSP_copy_freq_abl_to_ztensor
XInput.rows >= numBuffs
tDSP_zmzvmult
A.len == b.len && (A.len == c.len)
A.cols == b.rows
b.cols == 1
c.cols == 1
tDSP_ztvztvhmultupper
a.rows == b.rows
a.cols == b.cols
C.rows == a.rows
C.cols == a.rows
a.len == C.len
b.len == C.len
tDSP_zmsreg
Nm == A.cols
reg >= 0
UpdateVj
IVALib.h
rk > 0
covAlpha >= 0
weightedCovReg >= 0
Nv == Vj.len
Nv == temp1x1xNf.len
temp1x1xNf.rows >= 1 && temp1x1xNf.cols >= 1
xxt.cols == Nm
Vj.rows == Nm
Vj.cols == Nm
tDSP_ztsymmetric
A.rows == A.cols
tDSP_zmzmuppermult
A.cols == B.rows && C.rows >= A.cols
A.len == B.len && (A.len == C.len)
tDSP_zmlu
lu.cols == n
tempNx1xNf.rows >= n
temp1x1xNf.rows >= 1
Nv <= pivotNx1xNf.len && Nv <= tempNx1xNf.len && Nv <= temp1x1xNf.len
n > 1
tDSP_zmsolvelu
n >= lu.cols
b.rows >= n
Nv <= pivotNx1xNf.len && Nv <= b.len && Nv <= x.len && Nv <= temp1x1xNf.len
UpdateWScale
Nf == Vj.len
Nf == Wout.len
Nf == tempNx1xNf.len
Nf == temp1x1xNf.len
j < Nm
Wout.rows == Nm
Wout.cols == Nm
Win.cols == Nm
tDSP_ztmov
rows == lhs.rows
cols == lhs.cols
Nv == lhs.len
tDSP_zminverse_from_lu
lu.cols >= n
inv.rows >= n
inv.cols >= n
lu.len == inv.len && lu.len == pivotNx1xNf.len && lu.len == tempNx1xNf.len && lu.len == temp1x1xNf.len && lu.len == inv.len
FixWNG
Nf == YOutput.len
Nf == YMag2.len
Nf == temp1xNf.len
XMag2.rows >= Nm
YMag2.rows >= Nm
temp1xNf.rows >= 1
MixturePhase
Nf == XMag2.len
Nm == XMag2.rows
Nm == YOutput.rows
Nm == YMag2.rows
tDSP_zmeyef
X.rows == X.cols
UpdatePrior
AUXIVALU.h
index <= priors.size()
UpdateUmixing
AUXIVACramer23.h
UpdateWProject23
Nm == 2 || Nm == 3
tDSP_inversecolt2x2
MIn.rows == 2
MIn.cols == MIn.rows
MOut.rows == MIn.rows
MOut.cols == MIn.rows
MIn.len == MOut.len
jSource < MIn.rows
tDSP_inversecolt3x3
MIn.rows == 3
MIn.cols == 3
jSource < 3
tDSP_inverse2x2
MatIn.rows == 2
tDSP_inverse3x3
tDSP_zvtzmzvmult
a.rows == B.rows
a.rows == B.cols
1 == c.rows
1 == c.cols
Ba.rows == a.rows
Ba.cols == 1
a.len == B.len && a.len == Ba.len && a.len == c.len
tDSP_zvhzvmult
a.len == b.len && a.len == c.len
a.cols == b.cols && a.cols == 1
tDSP_zmzmekmulth
A.len == B.len && A.len == C.len
BcolInd < A.cols
tDSP_zvtzmmult
a.len == B.len && a.len == c.len
arows == bcols
a.rows == c.rows
&a != &c
AUXIVARLS.h
Configuration
Input
Output
Orientations
Portrait upside down
Landscape left
Landscape right
Face up
Face down
Orientation
AUReferenceSignalMixer
NeuralNetRES.cpp
NumContextFrames
Lambda_TC
ECoutScale
ECleeScale
FFT2Mel
NumMelBands
NumFFTBins
EndpointDecisionLayerVAD3.cpp
SetDelaySamples
CircularDelay.cpp
numSamples <= mMaxDelaySamps
numFrames <= mMaxFrames
Active
ChannelA
ChannelB
Channels
ExportDate
Filter
Filters
Mute
Order
Phase
PhaseCompensate
PhaseFlip
QVersion
automation
state
setPointBGain
setPointBFrequency
systemVolumeSetPointA
systemVolumeSetPointB
systemVolumeSetPointM
systemVolumeSetPointM_enable
systemVolumeSetPointM_gain
systemVolumeSetPointM_frequency
counterSetPropertyDspLibDictionary
Servo
bss_bypass
AUBSS1.cpp
Directional + Positional Robustness
Positional Robustness.
aubss1
Bypass BSS
Run MDNS (Test only)
Scaling
+X Separation
-X Separation
Update Threshold
Noise SPL Estimate
Separation Mode
TopVolumeButtonPress
TopVolumeButtonRelease
BottomVolumeButtonPress
BottomVolumeButtonRelease
Group
Part
Note
LayerItem
Element: %u
Scope : %@
-inf
Scope: %@
AUState
BoxProperties
BoxParameters
LRLsRs
LRCLsRs
Algorithm
Phase Shift
Downmix C
Front-Back Bias
Steering
Steering Moderator
Decay
Low Crossover Frequency
High Crossover Frequency
Inverted Rs Polarity
Soft Bypass
Bypass (no latency)
Bypass (aligned latency)
Extract LsRs (PI)
Upmix PseudoInverse
Upmix PseudoInverse Steered
sampleRate = 
CLSPBlocksAdaptive.cpp
fcc:
csigma = 
a2 = 
b2 = 
ca10 = 
ca11 = 
ca12 = 
ca20 = 
ca21 = 
ca22 = 
xUpperLimit = 
decayTime = 
a1 = 
attackTime = 
releaseTime = 
a1_atk = 
a1_rel = 
vpSetupUplinkDSPChain.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDSPChains/vpSetupUplinkDSPChain.cpp
SetupDNNVADGraph
loading DNN VAD graph "%s"
failed to load DNN VAD graph text
failed to load DNN VAD graph text with exception: %s
failed to set DNN VAD graph name
failed to set DNN VAD graph name with exception: %s
loading DNN VAD AU strip "%s"
failed to load DNN VAD AU strip
failed to load DNN VAD AU strip with exception: %s
loading DNN VAD property strip "%s"
failed to load DNN VAD property strip
failed to load DNN VAD property with exception: %s
Not able to enable DNNVAD
SetupReferenceSignalMixer
skip reference mixer setup because reference channel count is 0
skip reference mixer setup because reference block size is 0
unknown exception while setting ref signal mixer...
standard exception while setting ref signal mixer [%s]
SetupUplinkEchoProcessingGraph
loading echo processing graph "%s"
failed to load echo processing graph text with unknown exception
failed to load echo processing graph text with exception : %s
loading echo processing AU strip "%s"
failed to load echo processing AU strip with unknown exception
failed to load echo processing AU strip with exception : %s
loading echo processing property strip "%s"
failed to load echo processing property strip with unknown exception
failed to load echo processing property strip with exception : %s
CLSPBlocks.cpp
mc_x_lim = 
ASAFrontEnd.cpp
Crossover2f
Crossover2f.cpp
maxFramesPerSlice > 0
invalid sample rate
invalid filter order
invalid or unhandled filter order
must only be called on the audio I/O thread
SetLowCrossover
success
SetHighCrossover
mismatch in LP and HP coefficient array sizes
invalid coefficient array size
unstaged a null low crossover
unstaged a null high crossover
must be primed on audio I/O thread before every process call
ModelNetPathBase
EmbeddingMode
DefaultEmbeddingMode
EmbeddingSize
AUNeuralNet.cpp
TaskID
Model_
Legacy
LowDelay
Parameter Name Unimplemented
AUNeuralNet
NeuralNet is ready
Processing gain adjustment
Silence threshold
Input level
Output level [ch0]
Model selector
Model selector override
Max suppression gain
Embedding Mode
Use Default embedding when embedding not available
Lower bound for the calculated mask [dB]
Upper bound for the calculated mask [dB]
Lower bound for the calculated postmask [dB]
Upper bound for the calculated postmask [dB]
Latency added by NN processing for each frame [samples]
Will the next block be processed? [Low Delay Block Processor Only]
Was the current block processed?
Which Block Processor is being used?
Block size of NN processing [samples]
SpeakerPositions
AUSpatialMixerV2DynamicXTCFilter
updateFilters
XTCModelingDelay
XTCSpeakerSpan
XTCRegularization
XTCConstraint
XTCPostTimbralFrequency
XTCPostTimbralBlend
XTCPostGain
XTCCrossover
Generated Using the AUSM - Virtual Surround Tuning Tool
 - Magic Unicorn
 - Measured Device Reference
writeIRFile
readAUXTCFilter
SaveXTCFile
applyCrossover
featureWindowLengthSeconds
ARGapFillerTrainingRegionHeuristicFactory.mm
heuristics
power
windowOverlap
interpolationThreshold
trainingThreshold
spectral
fftLog2N
overlapFactor
fluxInterpolationThreshold
fluxTrainingThreshold
centroidInterpolationThreshold
centroidTrainingThreshold
ARGapFillerTrainingRegionHeuristics.h
too short
SpectralProcessingHelpers.h
value error
Error: No group available for filter import. Please free up one group.
Error: Not a single filter is available for import. Please free up filters.
Successfully imported %lu filters and assigned them to group %d. 
%d filters were not imported.
Missing key: %@
Error for filter %d: %@
attempting to assign a global parameter to channel %ld but AU was created with only %u channels
could not find key :%@
Unknown filter type: %@
Frequency 0 of %f less than minimum (%f)
Frequency 0 of %f greater than maximum (%f)
Frequency 1 of %f less than minimum (%f)
Frequency 1 of %f greater than maximum (%f)
Frequency 2 of %f less than minimum (%f)
Frequency 2 of %f greater than maximum (%f)
Frequency 3 of %f less than minimum (%f)
Frequency 3 of %f greater than maximum (%f)
Frequency array has %lu elements, should have 4
Frequency array has %lu elements but should have 2
missing key: %@
Frequency of %f less than minimum (%f)
Frequency of %f greater than maximum (%f)
Gain of %f less than minimum (%f)
Gain of %f greater than maximum (%f)
Order of %f less than minimum (%f)
Order of %f greater than maximum (%f)
Quality of %f is less than minimum (%f)
Quality of %f is greater than maximum (%f)
missing key %@
channel number = 0, but channel enumeration starts with channel 1
attempting to assing a filter to channel: %ld, but only %d channels are available
channel %ld phase flip: import would change value from %d to %d
channel %ld mute: import would change value from %d to %d
vpDebug_FileSaving.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_FileSaving.cpp
vp_save_files_dir
SetSaveFilesDirectory
audio recordings available in %s
file saving turned OFF! recording directory %s cannot be created
SaveFilesPrepare
magic file exists, enabling file saving level %d
Simulator override file saving level: %d
master default exists, enabling file saving level %d
SaveFilesCleanup
writing properties plist file: %s ...
writing time stamps plist file: %s ...
writing error log file: %s  ... 
%.4f
no errors occurred on the I/O thread.
couldn't open file to write: %s  ... 
writing gating control data file: %s ... 
writing dlp control data file: %s ... 
RereadSaveFilesDefaults
File-Saving switch turned on
File-Saving switch turned off
vp debug features (HUP) are %s
master default does not exist, disabling file saving level
%d%02d%02d.%02d%02d%02d.%03u
CreateSignalSaveFiles
"%s" audio capture not created because file format is empty
created "%s" audio capture
failed to create "%s" audio capture
err-%d writing %s
%d%02d%02d.%02d%02d%02d
.xxx.
0x%x
badsavefile
WaveFileReader
vpDebug_Logging.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_Logging.cpp
LogVPUplinkChain
____________loguplinkchain:begin___________
(bypassed)
    %s: %s %s (%p)
         param %s: %f
(UL)-AUXVP
    %s: ON (%p)
____________loguplinkchain:end___________
LogVPDownlinkChain
____________logdownlinkchain:begin___________
(DL)-AUXVP
____________logdownlinkchain:end___________
LogNonTransientErrors
LogVPParams
____________logparams:begin___________
    PRODUCT: %{private}s
    Num Ref Ports = %lu, Num Mic Ports = %lu 
      : Ref Port #%lu=%s
      : Mic Port #%lu=%s
    Acoustic ID: %d
    This product does not have a valid Acoustic ID
    HW Format REF: %s
    HW Format MIC: %s
    HW Block Size REF: %d
    HW Block Size MIC: %d
    REF Signal: %s, Hw tap stream: %s
    HW Format EXT REF: %s
    HW Trim Gain MIC(ch-%d): %f dB
    HW Trim Gain REF(ch-%d): %f dB
    VP Output Format: %s
    REF Channel BitMap: %x, OUT Channel BitMap: %x
    HW MIC Channels: %s, BitMap: %x
    EP MIC Channels: %s, BitMap: %x
    Primary epmic index: %d
    SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max)
    Hw real-world correction: %f samples
    Ref-Mic Delay: %f msec
    Pre-echo-processing Digital Input Gain: %f dB
    Post-echo-processing Digital Input Gain: %f dB
    Downlink Mix Gain: %f dB
    Downlink Final Gain Chn 0: %f dB
    Downlink Final Gain Chn 1: %f dB
    DL Format FEV: %s
    DL Format FEV Process: %s
    DL Format MIX: %s
    DL Block Size MIX: %d
____________logparams:end___________
com.apple.coreaudio.ausm
min gain
max gain
azimuth
elevation
distance
enable
rate
global reverb gain
reverb blend
occlusion attenuation
obstruction attenuation
filter frequency
filter bandwidth
filter gain
head yaw
head pitch
head roll
source directivity yaw
source directivity pitch
source directivity roll
source width
source height
source depth
source divergence
source divergence azimuth range
source divergence position range
head locked
speaker snap
diffuse
absolute distance
listener position X
listener position Y
listener position Z
SetBusCount
device
com.apple.mediaserverd
Initialize_block_invoke
AULoudnessNormalizer
AUControlFreak
InitializeDynamicsProcessing
Cleanup
UpdateAutoModeReverb
UpdateAutoModeReverb_block_invoke
EarlyLateSplit
UpdateAutoModeReverbBlock
InitializeDynamicXTC_block_invoke
SpeakerSpan
Regularization
Constraint
PostTimbralFrequency
PostTimbralBlend
Crossover
PostGain
FilterLength
MagicUnicorn
ReferenceData
UpdateCounteractRotationShader
ConfigureHOADecoder
Render
ParameterCanRamp
ProcessMultipleBufferListsSlicingPrivate
ProcessMultipleBufferListsPrivate
AUSpatialMixerV2.mm
ioOutputBufferLists
ioOutputBufferLists[0]
numMixBuffers == mSharedBuffers.mixBufferPtrs.numChannels()
PresetLoaded
Initialized
Reinitialized
ChannelLayoutChanged
PositionParametersChanged
HeadOrientationQuaternion
ListenerPosition
AllParameters
UpdateReverbIfNecessary
FindDynamicProcessor
ToggleTuningBasedOnPersonalizedHRTFMode
PropertyChanged_block_invoke
Tuning_Mode_HRTFXTC_Reference_Data
SetParameter
ScheduleParameter
SaveState
AUSMChannelOverrides
InputProperties
OutputProperties
GlobalProperties
SoundStages
RestoreState
ElementNumber
NewFactoryPresetSet
SetAudioChannelLayout
??? (null layout pointer)
XTCIRFullPath
HRIRFullPath
XTCIRFile%@
NumXTCIRFiles
IRFile%@
NumIRFiles
AUScopeDynamic NRT lock
AUSpatialMixerV2_
ausm_default_head_tracking_mode
ausm_print_rm_head_pose
ausm_personal_hrtf_type
ausm_enable_debug_features
ausm_source_mode_override
setInputAndOutputStreamFormat
uninitialize
setInputAndOutputAudioChannelLayout
insertUnique
lastKnownValueForParameter
compileTrackInfo
computeIntermediateParameterValueAndAdvance
coordinatesType
minElevation
maxElevation
minAzimuth
maxAzimuth
minX
maxX
minY
maxY
minZ
maxZ
ExclusionZones
cfrk
ldnm
loadPreset
filter type
filter enable
AUFXWrapper
~AUFXWrapper
AcousticID
DiffuseFieldPowerRMS
DOABasedProbability.cpp
DOAConditioner.h
DOABasedProbability.hpp
DOAConditioner
mFrequencySmoothingSelection < mFrequencySmoothingMatrixOptions.size()
log_spatial_capture_doa
auspatialcapture-raw-doa-log.txt
auspatialcapture-conditioned-doa-log.txt
AUSPLMeter.cpp
auspl_lc_menu
com.apple.MobileBluetooth.debug
A2DP
LoudnessCompensationEQEnable
splmeter
Volume (dB)
OutputSensitivity
Meter Enable (dBA)
SPL (dBA)
Meter Enable (dBC)
SPL (dBC)
Meter Enable (LKFS)
LKFS (dB)
Duration
Spare 1
Mapped Volume (dB)
SPL Gain (dB)
Scalar Volume
ExtendedAudioBufferList_CreateWithFormat failed
ExtendedAudioBufferList_Prepare failed
ULDATFeaturesChain.cpp
AUOneChannelNSProperties
AUAGCV2Properties
HighpassFilterCutoffHz
NoiseSuppressFloorDB
UseVADMode
AbsoluteSilenceThdDb
UseNoiseDithering
AudioSampleRateHz
AudioBufferSizeSamples
AudioAnalysisSizeSamples
PointerAt
DistanceEstimator.cpp
NumInputChannels
MCLPOutScale
ECOutScale
LambdaPSD_TC
KalmanProcessStd
KalmanObservationStd
WaitFrames
Apple: AUBoostClip
Apple: AUSoftClip
Apple: AUVolume
Apple: AUSpeakerProtectionV2
Apple: AUSpeakerProtectionV3
Apple: AUBeam2
Apple: AUBeam2N
Apple: AUBeamNF
Apple: AUBeamSelector
Apple: AUBeamNFSelector
Apple: AUMixSwitch
Apple: AUMixSwitchNF
Apple: AUFIRFilter
Apple: AUDereverb
Apple: AUDenoise
Apple: AUNeuralNetRES
Apple: AUNeuralNetSPP
Apple: AUNeuralNet
Apple: AUSoundIsolation
Apple: AUNeuralNetVAD
Apple: AUSeparate
Apple: AUSpatialProbability
Apple: AUDistance
Apple: AUBeamItFD
Apple: AUBeamItTD
Apple: AUNFNSwitch
Apple: AUWindKill
Apple: AUFTSpatialAC
Apple: AULoudnessInNoise
Apple: AULevelDrivenSuppressor
Apple: AUCNG
Apple: AUAuxVPUplink
Apple: AUAuxVPDownlink
Apple: AUCPMSVolumeV1
Apple: AUAGCV2
Apple: AULinearEchoCancelerV2
Apple: AULinearEchoCancelerV3
Apple: AUMultiChanEchoCanceler
Apple: AUEchoCancelerV5
Apple: AUECMIMO
Apple: AUECSUMO
Apple: AUECMicRef
Apple: AUTTYEchoSuppressor
Apple: AUSubBandMultEchoCanceler
Apple: AUSpeexNSV2
Apple: AUOneChannelNS
Apple: AUOneChannelNSV4
Apple: AUOneChannelNoiseEstimator
Apple: AUResidualEchoSuppressorV2
Apple: AUResidualEchoSuppressorV3
Apple: AUResidualEchoSuppressorV4
Apple: AUResidualEchoSuppressorV5
Apple: AUEchoGateV2
Apple: AUEchoGateV3
Apple: AUVolumeCompressorV2
Apple: AUDeesser
Apple: AUMicSelectorV2
Apple: AUMultiMicNoiseSuppressorV2
Apple: AUMagnitudeDifferenceNoiseSuppressor
Apple: AUMagnitudeDifferenceNoiseSuppressorV4
Apple: AUBSS1
Apple: AUBSS2
Apple: AUHandsetNoiseEQ
Apple: AUNoiseSelector
Apple: AUReverbSuppressor
Apple: AUMultiBandDynamicsProcessorV2
Apple: AUDynamicDucker
Apple: AUVariableEQV2
Apple: AUMNBandEQ
Apple: AUReferenceSignalMixer
Apple: AURotationShading
Apple: AUEarPlug
Apple: AUDCBlocker
Apple: AUTweakaLeak
Apple: AUTweakaLeakIR
Apple: AUDecorrelator
Apple: AUDSPGraph
Apple: AUMatrixPatcher
Apple: AUFIREngine
Apple: AUCarter
Apple: AULando
Apple: AUScotty
Apple: AUCircArray
Apple: AULoudnessWarrior
Apple: AUHapticsProtection
Apple: AUFixedGain
Apple: AUChannelSpecificDelay
Apple: AUSpatialCapture
Apple: AUHOAZoom
Apple: AUMicSense
Apple: AUMultiChannelAGC
Apple: AUChannelSelector
Apple: AUMidSide
Apple: AUSpeechEnhancer
Apple: AUHearingLossCompensator
Apple: AULimitWindBoost
Apple: AUClipDetector
Apple: AUExpanseController
Apple: AUSignalCombiner
Apple: AUMicIssueDetector
Apple: AUControlFreak
Apple: AUBuzzKill
Apple: AUVirtualBass
Apple: AUBassKoenig
Apple: AUBassQueen
Apple: AULowFlow
Apple: AUMeisterStueck
Apple: AUToneMeister
Apple: AUMozartCompressorSingleBand
Apple: AULittleLateNightMode
Apple: AUPeakPowerGuard
Apple: AUThermalSpeakerProtection
Apple: AUXTC
Apple: AULoudnessNormalizer
Apple: AULoudspeakerManager
Apple: AUSilenceNonFiniteAnalyzer
Apple: AUGlitchDetectionAnalyzer
Apple: AUEcConvergenceOversight
Apple: AUECMIMOHelper
Apple: AUSPLMeter
Apple: AUCrossCorrelator
Apple: AUADAMSink
Apple: AUBiquad
Apple: AUEndpointVAD
Apple: AUEndpointVAD2
Apple: AUEndpointVAD3
Apple: AUSpatialMixer
AllAUsPublic
AUTemplateBase.h
Characterized amplifier system
Power budget
PowerLUT
TargetGainLimitDB
Measurements
VolumeLevel
power_inst
power_100ms
power_1000ms
power_thermal
cpms_ts_i
cpms_ts_100
cpms_ts_1000
cpms_ts_thermal
PODProp constructor: inDataPtr was nullptr; cannot create anything.
PODProp constructor: inDataSize did not match the given type.
AmpModelType
QuadraticModel
QuadraticBoostModel
LogModel
Dummy
No valid AmpModelType entry found in plist.
coefs
rangeMin_W
rangeMax_W
QuadraticModel needs a positive x^2 coefficient.
Polynomial needs 
 coefficients
, for x in [
 * x^
high_power_coefs
low_power_coefs
boost_coefs
high_power_threshold
power_multiplier
 * ln(x - 
) + 
Dummy amplifier (100% efficiency).
Gain smoothing attack TC
Gain smoothing release TC
Volume level
Output gain (dB)
ftac_invalid_window_x
ftac_invalid_window_y
ftac_invalid_aspect_ratio_in_portrait_orientation
ftac_invalid_aspect_ratio_in_landscape_orientation
ftac_invalid_client_cx_bitset
ftac_invalid_client_cy_bitset
ftac_invalid_client_all_zero_bitset
AUScotty.cpp
inData
numIn>0 && numIn<=kScotty_MaxNumIn
numOut>0 && numOut<=kScotty_MaxNumOut
Low-latency
CartesianSpatializer
DeviceNameAsString
vpDSPEngineConfiguration.mm
lowerCaseName != NULL
VP configuration info
ref port subtype
vp version
unknown device
tree index
CreateVPVersionLookUpKeys
!"Unexpected Family Type: %d"
ref port
mic port
ref port endpoint type
mic port subtype
mic port endpoint type
vp_force_version
VPvX_iPhone
NeuralNet.cpp
NeuralNetImplementationType
BNNS
Espresso
NumLayers
Quantization
ModelNetPath
InputName
EmbeddingName
OutputName
ComputeEngineName
StreamingMode
iPhone
iPad
FrontMic
BackMic
BeamMics
Output Mode (to Beam)
Auto/Manual
Signal time constant sec
Active time constant sec
Inactive time constant sec
HF min level diff thd
HF level diff ceiling
HF normal level diff
Deprecated
HF self noise floor
LF min level diff thd
LF level diff ceiling
LF normal level diff
LF min level
Echo min level diff thd
Echo level diff ceiling
Echo normal level diff
Echo high gain thd
Echo low gain thd
Echo hardware bias
Normal X-corr coeff lim
Noise floor det length sec
Noise floor thd mic
Noise floor thd echo
Switch to front thd
Switch to back thd
Return to normal thd
Return to normal ceiling
Beam direction (set by VP)
Occlusion state
Front VAD
Back VAD
Echo VAD
Front/back ratio
LF front/back ratio
HF front/back ratio
Echo front/back ratio
Max echo gain
X-corr
Occlusion bias detector
Return to normal detector
Front input level
Back input level
HF bottom input level
HF front input level
HF back input level
VP pre gain (set by VP)
HF max el. noise level (3-mic)
HF level where el. noise masked (3-mic)
Dead mic thd
HF level cov time constant
HF min level cov f/b diff
HF level cov f/b diff ceiling
HF normal level cov f/b diff
HF level cov f/b diff
Device orientation
Echo canceler converged
getProperty
setPropertyDictionary
LFELowPassFrequency
VADMode
Failed to read VAD mode from plist.
EndpointVAD2.cpp
TopLayerStateProductDimensions
MidLayerStateProductDimensions
FullStatePrior
FullStateTransMx
TopLayerObservationDimension
TopLayerObservationPrior
TopLayerObservationTransMx
FeaturesDSPWrapper.h
CounteractRotationShader
BypassMatrix
HRTFXTCSpatializer
XTCSourceExtentIRCustomURL
InitializeGrids
InitializeGridsAndAmbisonicEncoder
LoadHRIRs
ParametricProcessor.cpp
mInputData.HRIRs[0].NumCols()>=filterLength
LoadXTCIRs
mInputData.XTCIRs[0].NumCols()>=filterLength
<plist path not set>
AUSpatialCapture.mm
<no tuning loaded>
auspatialcaptureplistpath
auspatialcapture-graph-printout.txt
auspatialcapture-graph-decompile.txt
auspatialcapture.dot
AUSpatialCapture
tuningName
<anoynmous tuning>
doaBeamit
panner
linFullSignal
SDLSPlistFD
focusedBeams
wideBeams
LimitWindBoostRefChannel
latency
AU preset
DebugDirectory
SaveZoomCurveInPreset
SavePlistAndPropertiesInPreset
PlistPath
plist
spatialTimbreFilter
wideVsSpatialMix
focusedVsSpatialMix
suppressor_class.cpp
dft_v3.cpp
Echo level threshold.
M4/M1 energy ratio threshold.
M1/NFN energy ratio high threshold.
M1/NFN energy ratio low threshold.
Low freq - Echo Level calculation.
High freq - Echo Level calculation.
Low freq - M4/M1 energy calculation.
High freq - M4/M1 energy calculation.
Low freq - M1/NFN energy calculation.
High freq - M1/NFN energy calculation.
Smoothing TC - Echo Level calculation.
Smoothing TC - M4/M1 energy calculation.
Smoothing TC - M1/NFN energy calculation.
Echo Level (dB).
M4/M1 energy ratio (dB).
M1/NFN energy ratio (dB).
NE distortion possible flag
M4 status. 0 (ok). 1 (occ/scratch).
System state. 0 (NE only). 1 (FE only/DT)
Selected path. 0 (M1). 1 (NFN).
EC M1 Delta EIR.
EC M1 IR Delay.
EC M1 Adapted flag.
EC M1 Time aligned ref signal energy.
EC M1 Mic-Eclee Xcorr.
EC NFN Delta EIR.
EC NFN IR Delay.
EC NFN Adapted flag.
EC NFN Time aligned ref signal energy.
EC NFN Mic-Eclee Xcorr.
vpProcessDownlink_v3.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v3/vpProcessDownlink_v3.cpp
LoadSpatialCaptureTuning.mm
Problem detected (All channels)
Number of glitches detected (All channels)
(T) Sensitivity Setting (0=manual, 1=Default, 2=Less sensitive)
Problem detected
(I) Glitches detected
(I) Glitch level
(I) Wideband Detection level
(I) Glitches detected during interval
(T) Detector cutoff (only in manual=0 sensitivity setting)
(T) Wideband variance threshold
(T) Activity threshold
(T) Interval for counting detection
(T) Glitch count to raise problem flag
(T) Activity Q parameter
(T) Detector mode
(T) Active band cutoff frequency
(T) Subband deviation threshold
(T) Wideband level slope
(T) Wideband level intercept
(T) Activity level threshold
WindSuppressorCore.cpp
mAggregateOmniMicWeight.size() == mNumInputChannels + 1
mWindTracker.size() == mNumInputChannels
mGainApplicationCutoffIndex.size() == mNumInputChannels
mSmoothSuppressionGains.size() == mNumInputChannels
mSmoothSuppressionGains[0].size() == mCplxVectorSize
mRampedGainFloor.size() >= mCplxVectorSize
setFrequencySmoothingFilter
psd1.size() >= mNumBinsToProcess
psd2.size() >= mNumBinsToProcess
coherence.size() >= mNumBinsToProcess
updateAggregateOmni
mAggregateOmniMicWeight.size() >= 2
computeWindSuppressionGain
psd.size() >= mNumBinsToProcess
gain.size() >= mNumBinsToProcess
refineGainsBasedOnEnergy
applyFrequencySmoothingWindow
input.size() >= inputSize
mTmpVector1.size() >= inputSize + mFilterSize
smoothGainsInTime
createGreterThanMask
vecIn.size() >= numElements
vecOut.size() >= numElements
createSmallerThanMask
generateFrequencySmoothingWindow
window.size() >= N
generateHighPassCutoffIndex
AUNeuralNetRES.cpp
nnres
Number of DNN layers
Number of frames for context window
Forgetting factor (time constant)
Echo suppression amount
Use gain floor?
EC Delta EIR.
EC IR Delay.
EC Adapted flag.
EC Time aligned ref signal energy.
EC Mic-Eclee cross correlation.
FreqDomainConvolver.cpp
Filter length must be even
Filter length must be less than or equal to block size
AUSpatialProbability.cpp
Steering vector dictionary
External steering vector
Von Mises (DOA)
Watson (DOA)
Complement Von Mises (DOA)
Complement Watson (DOA)
Uniform (DOA)
Steerig Vector-based Watson
Steerig Vector-based Complement Watson
Steerig Vector-based Mixture of Watson
Steerig Vector-based Uniform
Steerig Vector-based Gaussian-like
Steerig Vector-based Mixture of Gaussian-like
Weighted with external probability
Fixed (to shapeParameterMax)
Weighted with external probability (between kappaMin and kappaMax)
Weighted with external CDR (between kappaMin and kappaMax)
Weighted with Frequency (between kappaMin and kappaMax)
Set externally per frequency
Not used
Target presence probability
One minus interferer presence probability
Target definition mode. Used to define the centroid for the target model.
Target azimuth, used for DOA mode.
Target elevation, used for DOA mode.
Target distance, used for DOA mode.
DOA-based target source model (used for TargetDefinitionMode: DOA).
Steering vector-based target source model (used for TargetDefinitionMode: SteeringVectorDictionary and ExternalSteeringVector).
Steering vector-based interfering source model (used for TargetDefinitionMode: SteeringVectorDictionary and ExternalSteeringVector).
Shape parameter for the target model (fixed or frequency weighted).
Maximum value of the shape parameter for the target model.
Minimum value of the shape parameter for the target model.
Prior probability mode for the target and interferer (fixed or weighted).
Prior probability of a source (either target or interfererer).
Conditional prior probability of the target source.
Smooth subband DOA estimates? (used for TargetDefinitionMode: DOA)
Temporal smoothing of the subband DOA estimates (time constant, in seconds).
Frequency smoothing of the subband DOA estimates (bandwith, in octaves).
Post-mask definition mode. Used to define computation of the real-vaued gain.
Minimum gain for the post-mask (in dB).
Scaling parameter for sigmoid mapping from CDR to shape parameter.
Offset parameter for sigmoid mapping from CDR to shape parameter (in dB).
Average presence probability of the target source for the current frame (averaged across subbands).
Average presence probability of an interfering source for the current frame (averaged across subbands).
Average presence probability of the background noise component for the current frame (averaged across subbands).
Bypass with external probability as the target probability estimate?
Lower bound for the estimated target probability (in dB).
Cutoff frequency to start decaying concentration parameter (in Hz).
Target beam index for steering vector-based models.
Minimum gain for the post-mask in noise (in dB).
Apply extra suppression if average SPP is lower than this threshold (constant probability).
Hangover time of the decision of identifying a speech frame based on the SPP value (time constant, in seconds)
SetKappaSubband
SpatialProbabilityBase.hpp
mKappaSubband.size() == (inDataByteSize / sizeof(Float32))
AUOneChannelNSV4.cpp
LPC Bypass
LPC All
LPC VAD Only
LPC FREQ Only
LPC Noise
NoiseUpperBound
NoiseLowerBound
noise supp level
speech prob
noise SPL (gated PS)
noise SPL (one mic)
AGC dynamic gain
AGC post gain
LPC Mode
LPC VAD Clip Threshold
Noise Estimator
Notification type = 
, Notification Time (samples) = 
Detection
Removal
TSJump
, Event Type = 
, Notification RecvTime (samples) = 
, AudioBufBegin (samples) = 
, AudioBufEnd (samples) = 
, jump = 
, Click Type = 
, Detection Time (samples) = 
, Click Found = 
 BLOWUP DETECTED!!
, Removal WinBegin (samples) = 
, Removal WinEnd (samples) = 
, Input Energy 
, Output Energy 
, Energy Ratio 
ClickEventLogger.mm
%04d%02d%02d.%02d%02d%02d_%d%d%d
ClickEventLogger.h
failed to get event
failed to store event
BasicZeroCrossingGapFiller.mm
%s%s
ParamX
Invalid VAD mode
VAD2StateLabels.cpp
Loss at 250 Hz
Loss at 500 Hz
Loss at 1 kHz
Loss at 2 kHz
Loss at 3 kHz
Loss at 4 kHz
Loss at 6 kHz
Loss at 10 kHz
Maximum compression gain
Minimum compression gain
Attack time
Release time
Power Spectrum smoothing time
Fine-tuning gain bias
Fine-tuning brightness adjustment
Fine-tuning ratio adjustment
Fine-tuning SPL bias
Enable Noise Suppression
Noise estimate smoothing time
Noise estimate bias
Noise suppression time constant
Noise suppression floor
Minimum combined comp+supp gain
Filtering mode
Output sensitivity
Gain downstream of Audio Unit
Processing mode
Headphone Type
Expander Ratio
Expander Threshold
Linked Mode
AUHearingLossCompensator.cpp
hearc
CircArrayKernel.mm
Number of input channels is larger than supported
Max frames per slice isn't a power of 2
Order determined from beam compositions doesn't match expected
Number of beam FIRs and beam compositions doesn't match
Driver masks vector size doesn't match number of output channels
Mismatch of speakers in rows between speakers in rows vec and modal FIRs vec
Number of beam FIRs doesn't match current number
New beam filters differ in size from previous ones
Could not queue staged beam filters
Mismatch between algorithm order and modal FIR coeffs inner size
Modal FIRs not power of 2 length
pFilterCoeffs is NULL
MaxFramesPerSlice is 0
Coeffs outer size is 0
Coeffs inner size is 0
AUECMIMO.cpp
ecmimo_log_period_in_seconds
auecmo
Total modelled filt len
Initial threshold on prior state-error covariance
Secondary threshold on prior state-error covariance
Error PSD gain
Error PSD Regularization
Step size
Initialization for state error covariance
Iterate between LB Expectation (E) & Maximization (M)
Smoothing constant for leakage based posterior
Smoothing constant for ref PSD
Smoothing constant for error PSD
Leakage amplification
Reference signal excitation threshold
Total filt len when reading out
Time period after which debug metrics are logged
Update filter every X input block
QRD mode (iQRD=1, RMGS=2), param IDs: 0,4,5,9,10,12,17,18,19
Delay of QRD (output smoothing, only if filtLen > blockSize)
QRD whether to skip mixed norm calculation or not
P-Norm
findNearestPoint
ActiveIntensityAnalysis.cpp
grid.size() == 3 * N
SourceExtentProcessor
setHOAParams
SourceExtentFilterDelay
SourceExtentSizeWeight
updateExtentParameters
pseudoInverse
MoorePenrose.cpp
A.NumRows()==Aplus.NumCols()
A.NumCols()==Aplus.NumRows()
ClickRemovalRecorder.mm
detector_input
removal_input
delayed_detector_input
delayed_removal_input
removal_output
markings
accelerometer
HRTFNFSpatializer
RadiusNearFieldMin
RadiusMonoPanned
RadiusInHead
InHeadGain
processAccumulatingStereo
BinauralSourceExtentIRCustomURL
CLSPKernel CalcCoeffs atk/rel params Ch %u: ThermalGainAtkTime=%f; ThermalGainRelTime=%f; PeakDispAtkTime=%f; PeakDispDecayTime=%f; FeedbackIntTime=%f; 
ClosedLoopSpeakerProtectionKernel coeffs Ch %u:
 at1C=%f;
 at2C=%f;
 csigma=%f;
 bt0C=%f;
 bt1C=%f;
 bt2C=%f;
 ca10=%f;
 ca11=%f;
 ca12=%f;
 ca20=%f;
 ca21=%f;
 ca22=%f;
 xUL=%f;
 sze0=%f;
 at1A=%f;
 at2A=%f;
 szc0=%f;
 at1B=%f;
 at2B=%f;
 ptp.ap1=%f;
 ptp.ap1a=%f;
 ptp.xlim=%f;
 flvavg=%f;
Thermal Coeffs:
 AmbTemp=%f;
 th_ag=%f;
 invRt=%f;
 thermAtk=%f;
 thermRel=%f;
 th_ac1=%f;
 th_bc0=%f;
 th_bc1=%f;
 th_am1=%f;
 th_bm0=%f;
 th_bm1=%f;
 ThermalPeriod=%u;
 invThermalPeriod=%f;
 ThermalLim=%f;
 HardTempLimHR=%f;
 Thermal_kI=%f;
PredDisp_Data
PredDisp_Data_r
PredDispMore_Data
PredDispMore_Data_r
Reb_Data
Err_Data
A1_Data
A2_Data
Phi_Data
EAMS_Data
CPScale_Data
Reb_Data_r
Err_Data_r
A1_Data_r
A2_Data_r
Phi_Data_r
EAMS_Data_r
CPScale_Data_r
CoeffLog
CoeffLog_r
Uninitialize
DSPGraph
/Library/Audio/Tunings/Generic/VAD/nnvad.dspg
/Library/Audio/Tunings/Generic/VAD/nnvad.propstrip
/Library/Audio/Tunings/Generic/VAD/nnvad.austrip
%s-%s-%s-%s
%s-%s-%s-%s-%s
vpAspen_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpAspen_v2.cpp
TryLoadingTuningPlists_block_invoke
snprintf error
Trying to load tuning %{private}s%s
Couldn't load tuning strip
Succesfully loaded tuning strip %{private}s%s
i24@?0*8r*16
ulnk
dlnk
TryLoadingTuningPlists
Tunings loaded successfully for %s-%s-%s! '%{private}s/%{private}s/%{private}s/%{private}s'
No vocoder tuning fallback could be found for vocoder type %s
no custom tuning plists found for headphone, headset or endpoint-specific device %s-%s; trying to find tunings for the original ref & mic port types...
No tuning plists found due to unknown vocoder type. This could be transient. Using default paramters.
BuiltInMicDataSource
com.apple.audio.virtualaudio
InitializeVPParams
initializevpparams: VAD-BuiltInMicDataSource = %i
BuiltInMicSelection
initializevpparams: VAD-BuiltInMicSelection = 0x%x
dl mix fmt & hw ref fmt were out-of-sync..re-setting while using external ref
Hey I just met you, and this is crazy, but here's my component 'Audio - DSP Software', so file a radar maybe.
VPV3
Tuning loading is bypassed for this device
(UL)-AuxVP
(DL)-AuxVP
AUTweakaLeak
tweakaleak_verbose
Analysis
Smoothing
Adaptation
Monitoring
Monitoring - Left
Monitoring - Right
/tmp/TLParamLog
/tmp/TLParamNamesToLog.txt
AUTweakaLeak.cpp
Biquads_%u
Anchors
Biquads
Butterworth Bandpass
8th Order Bandpass
System Latency
LP Cutoff: Correlation
HP Cutoff: Correlation
LP Cutoff: LF Power
HP Cutoff: LF Power
LP Cutoff: HF Power
HP Cutoff: HF Power
Correlation Frame Width
Correlation Stride
Correlation Att/Rel
LF Power Attack
LF Power Release
HF Power Attack
HF Power Release
LF Power Ratio Attack
LF Power Ratio Release
DL Power Attack
DL Power Release
Force Freeze
Normalize Corrective Gain
Bypass Gain Offset
Gain Offset (w/o norm)
Gain Offset (w/ norm)
Max Corrective Gain
Min Corrective Gain
Speaker LF Power Threshold
Speaker HF Power Threshold
Mic LF Power Threshold
Remove DC For Correlation
Bypass Correlation
Correlation Threshold
Corrective Boost Cutoff
Corrective Cut Cutoff
SPL Overload Threshold
SPL Overload Ramp Time
DL Gate Lower SPL
DL Gate Upper SPL
DL Gate Lower DL Level
DL Gate Upper DL Level
Is On Ear
SPL Overload Hysteresis
Corrective Filter Q
Reference Trim Gain
LF Analysis Filter Type
Correlation
LF Power Ratio (mic/spk)
HF Power Ratio (mic/spk)
Applied Gain
Adaptation Frozen
Mic LF Power
Speaker LF Power
Mic HF Power
Speaker HF Power
DL Gate Threshold
Total Speaker Power
Cutoff Freq
Ramp Time (ms)
Gain (dB)
Final Gain Channel 0
Final Gain Channel 1
DL Mix Block Size
Min Mix Gain
Max Mix Gain
Noise Threshold for Vol Boost
Min Boosting Level
Boost Amount
Max Non Boosting Level
FEV Gain at Min. Volume
FEV Gain at Max Volume
DL AGC Target in Music
DL AGC Max Gain in Music
Hold time for switching DL AGC params
Threshold for music presence detection
Scaling for volume matching
vpWirelessChargingNotificationQueue
StartVPWirelessChargingMatStateListener
vpWirelessCharging.mm
gNotifyDispatchQueue != nil
B8@?0
IsWireless
com.apple.system.powersources.source
Portrait Upside Down
Landscape Left
Landscape Right
Shading Enabled
Left Cutoff
Right Cutoff
total modelled filt len
(I) actual filt sz
delta EIR disable
(I) delta EIR
(I) Freeze adaptation option
(I) EC Ref-Mic Delay MilliSec
(I) EC main lobe delay
Allow LMS filter scale down for rapid h changes
EC init convergence options
(D) DualEC
DualEC DualEcStatDur
DualEC MinBackupOverAdapt
DualEC MinCopyAdaptToBackup
DualEC MaxCopyAdaptToBackup
DualEC ResetTime
DualEC EPS_EC_ERROR_MIN
DualEC MIN_ADAPT_DOING_OK
DualEC MIN_ADAPT_OVER_BACKUP
DualEC MIN_ADAPT_IN_SINGLETALK
DualEC MIN_ECHO_LEVEL_TO_CHECK
DualEC MIN_HANG_TIME
FastInitConverge MaxAdaptRate
FastInitConverge MinAdaptRate
FastInitConverge HighXCorr
FastInitConverge LowXCorr
FastInitConverge TimeConstForRunningAv
FastInitConverge EnableSubSampForDelayEst
FastInitConverge LeakThresh
(D) RER floor on/off
RER floor LeakThresh
RER floor MicEchoEstXcorrThresh
Threshold on echo to local voice energy for beam
(I) Echo flag to beam2
(I) Mic Eclee Xcorr
Fast Adapt: 0=off, 1=init conv, 2=init+re conv
Crop: Enable crop for long total filter lens
Crop: Pre-lobe delay for long total filter lens
Crop: Copped filter length for long total filter lens
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v4/vpProcessUplink_v4.cpp
vpProcessUplink_v4.cpp
echosuppressor
Mid gain
Side gain
LowBand
HighBand
Cadenza7_Experimental
Cylo3_Experimental
Compression Amount
Input Amplitude
Output Amplitude
SoundGaindB
SoundGaindB Offset
MaxOutputPower
MaxNoiseRelGain
MaxNoiseAbsGain
MinSoundThresh
MaxNoiseThresh
UpSlewRate
DownSlewRate
SmoothWinMs
WinMs
MaxVolume
MinVolume
Volume
Number of volume knees
Number of compression knees
UpwardsCompRatio
A-Weighting Enabled
Lookahead (ms)
ShortWin Enabled
ShortWinMs
ShortWin Peak
ShortWin Attack
ShortWin Decay
ShortWin Max dBRMS
ShortWin Max dBFS
LongWin Enabled
LongWinSec
LongWin Attack
LongWin Decay
LongWin MaxOutputPower
VolumeKneeX1
VolumeKneeX2
VolumeKneeX3
VolumeKneeX4
VolumeKneeX5
VolumeKneeY
CompKneeX
CompKneeRatio
AUTweakaLeakIR
AUTweakIRInternalLogs
TalIRInternals
(Tun) Run AU but bypass the gain internally
(Tun) One forces the AU to calc BQ filter coeff internally
(Tun-only startup) Size of FFT used for analysis (will be doubled for robust mode)
(Tun-only startup) Number of active samples of IR (<=BlockSize)
(Tun) Start freqency used for analysis (Hz)
(Tun) End freqency used for analysis (Hz)
(Tun) Nominal target gain for the analysis (dB)
(Tun) Target gain when in Bypass (dB)
(Tun) Upperbound limit on applied-gain (dB)
(Tun) Lowerbound limit on applied-gain (dB)
(Tun) Upperrail of measured IR-gain rel2 nom target (dB)
(Tun) Lowerrail of measured IR-gain rel2 nom target (dB)
(Tun) Protect lower rail of IR-gain rel to Target (dB)
(Tun) Alpha smoothing value when gain is increasing
(Tun) Alpha smoothing value when gain is decreasing
(Tun) Q for corrective filter
(Tun) Corrective Boost Cutoff
(Tun) Corrective Cut Cutoff
(Tun) Overload threshold on SPL (dB)
(Tun) Overload threshold on SPL hysteresis (dB)
(Tun) When in overload, this is the alpha used 
(Dyn Int) Force adaptation to freeze in case of external isses
(Dyn Int) Set externally to say device is on ear
(Dyn Int) Set externally from NS to give SPL (dB)
(Dyn RO) Instanenous raw gain before oversight (dB)
(Dyn RO) Instanenous raw smoothed gain (dB)
(Dyn RO) Instanenous dynamic gain actually selected (dB)
(Tun) Num of Biquads to use in compute when there is no table
(Tun) A multiplicative bias to dB gain when using calculated coeffs
(Tun) 0=Old operation, 1=Double IR for EC alignment robustness
panWithSize
BypassedStereoPanner.cpp
numSurroundingPoints == 16
isCloseTo
AUSpatialMixerV2
CalculateSubbandDOA
SubbandDOACalculator.cpp
beamsFrom < mNumBeams
beamsTo < mNumBeams
auspro
SpatialProbabilityBase.cpp
ChannelSelectorBox.cpp
out(0).wire()->buffer()->byteCapacity() >= size
static_cast<int>(inABL->mNumberBuffers) > channelSelection
inABL->mBuffers[channelSelection].mDataByteSize >= size
ChannelSelectorBox
req filt len
actual filt sz (I)
delta EIR (I)
tsmic clipping (I)
EC Ref-Mic Delay MilliSec (I)
EC main lobe delay (I)
EC filter type
Dual EC
Dual EC DualEcStatDur
Dual EC MinBackupOverAdapt
Dual EC MinCopyAdaptToBackup
Dual EC MaxCopyAdaptToBackup
Dual EC ResetTime
Dual EC EPS_EC_ERROR_MIN
Dual EC MIN_ADAPT_DOING_OK
Dual EC MIN_ADAPT_OVER_BACKUP
Dual EC MIN_ADAPT_IN_SINGLETALK
Dual EC MIN_ECHO_LEVEL_TO_CHECK
Dual EC MIN_HANG_TIME
FastInitConvergence MaxAdaptationRate
FastInitConvergence MinAdaptationRate
FastInitConvergence HighXCorr
FastInitConvergence LowXCorr
FastInitConvergence TimeConstForRunningAverage
FastInitConvergence EnableSubSampingForDelayEst
FastInitConvergence LeakThresh
RER floor on/off
Echo flag to beam2 (I)
AU_Disable_NonFinite_Handling
offset
ConstantDetectorParams.mm
SmartFIR.mm
Filter length must be power of 2
Block size must be power of 2
FFT initialization failed
Trying to initialize channel out of bounds
vpSetupDownlinkDSPChain.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDSPChains/vpSetupDownlinkDSPChain.cpp
SetupDownlinkFarEndVoiceMixGraph
loading far end voice mix graph "%s"
failed to load far end voice mix graph text
file "%s" does not exist
loading far end voice mix AU strip "%s"
failed to load far end voice mix AU strip
loading far end voice mix property strip "%s"
failed to load far end voice mix property strip
vp_enable_far_end_voice_dnn_vad
SetupDownlinkFarEndVoiceDNNVADGraph
loading far end voice DNN VAD graph "%s"
failed to load far end voice DNN VAD graph text
loading far end voice DNN VAD AU strip "%s"
failed to load far end voice DNN VAD AU strip
loading far end voice DNN VAD property strip "%s"
failed to load far end voice DNN VAD property strip
|Processor #
initializeSpatializer
HOASourceExtentIRCustomURL
unique_lock::unlock: not locked
HandsetNoiseEQCore.h
hopsize > 0
numFreqBins > 0
inMics == 2
Pframe
Min Gain
Max Gain
Voice Noise Threshold
Speech Prob Threshold
Gain TC in Noise
Gain TC in Voice
Power Spectrum TC
Frequency Smooth
createHOADecoders
AUNeuralNetVAD.cpp
Binary VAD mask
Utterance VAD mask
Soft VAD mask
Von Mises
Watson
Complement Von Mises
Complement Watson
Uniform
Product combination
Bayesian combination
Spatial SPP combination
NNVAD: Number of DNN layers
NNVAD: Number of frames for context window
NNVAD: Forgetting factor (time constant)
NNVAD: Binary VAD
NNVAD: EndPoint VAD
NNVAD: Utt VAD
NNVAD: Soft VAD
NNVAD: threshold
NNVAD: wait time
NNVAD: transition prob. a01
NNVAD: transition prob. a10
NNVAD: Output mask mode
NNVAD: Use directional mode
NNVAD: Target azimuth, when using the directional mode
NNVAD: Target elevation, when using the directional mode
NNVAD: Model type, when using the directional mode
NNVAD: Model shape parameter, when using the directional mode
NNVAD: Conditional target prior, when using the directional mode
NNVAD: Combined probability mode, when using the directional mode
NNVAD: Current azimuth (input), when using the directional mode
NNVAD: Current elevation (input), when using the directional mode
NNVAD: Spatial SPP upper cutoff in Hz, when using the directional mode
NNVAD: Send VAD output mask, selected by output mask mode, through audio output.
process: not ok to process?!
process: tryer acquire failed
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpProcessing/vpProcessUplink_v2.cpp
vpProcessUplink_v2.cpp
mic sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
mic sample time jumped backwards
RunUplinkEchoDSP
mNewOutRingBuff has encountered an overrun: tried to write %u but only had space for %u samples
UL %f %f %f
UL ERROR, processing slower than RT - %f
UL ERROR, not being called in a timely manner - %f
Bailed UL %f %f %f
LoadMatchingReferenceForMicSignalAndFillTsMic
warning: tsref ring buffer: <slightly ahead> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly ahead> couldn't read required samples
tsref ring buffer: <slightly ahead> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly ahead> the calculated samples range issue
warning: tsref ring buffer: <slightly behind> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly behind> couldn't read required
tsref ring buffer: <slightly behind> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
tsref ring buffer: <slightly behind> the calculated samples in range issue
process: ERROR output buffer has encountered an underrun
HandleUplinkOutputTimeStamps
process: ERROR output buffer has encountered an underrun, need %d, have %d samples
CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESS - ioOutData buffer (%d bytes) smaller than what VP is configured to output (%d bytes)!
preflight uplink: not ok to process?!
preflight uplink: tryer acquire failed
Invoked the muted talker detection callback, event = %u
vpInitializeDownlink.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpInitializeDownlink.cpp
initializedlp: call num %u
mix %s (blksz %u), voice %s
initializedlp:   mix asbd = %s
initializedlp: voice asbd = %s
initializedlp: mix blk sz = %d
DL Fade data size = %u
InitializeSpeakerTelemetryInput
initspkrtel: asbd = %s, blksz = %d
InitializeDLP
InitializeDLP: hwref and dlmix formats were mismatched -- calling Initialize again
Begin self-reinit (UpdateReferenceSignalFormat)
End self-reinit (UpdateReferenceSignalFormat)
initializedlp: [iphone/ipad simulator] disabling all downlink processing
initializedlp: ul-dl config out of sync
initializedlp: ul-dl config no longer out of sync
vp_disable_oaugain
Re-set mix gain range to [%f, %f]dB
CalcDLIoBlkSz
+++ dl io blk size = %u, num dl io cycles = %u
AUMultiChanEchoCanceler::ProcessMultipleBufferLists error - wrong (%d) block size expected (%d)
Fast Adapt: 0=off, 1=init conv, 2=init+re conv 3= init+re conv + init rate cal
Multi-chan EC mode: 0-LinearEC, 1-PolyEC, 2-MultiChanEC, 3- MultiChan+PolyEC
Order to do for Poly EC
Num of ref channels to use for multi-chan EC
(I) 10*log10(syy/see)
(I) Echo leakage
Enable Ref Channel 0
Enable Ref Channel 1
Enable Ref Channel 2
Enable Ref Channel 3
Enable Ref Channel 4
Enable Ref Channel 5
Enable Ref Channel 6
Enable Ref Channel 7
Enable Ref Channel 8
Regularization constant for NLMS Normalization
SumRows
LiteMatrix.cpp
outputMatrix.NumRows()==1
outputMatrix.NumCols()==inputMatrix.NumCols()
ScaleCols
inputVector.size()==NumCols()
SetWithOther
inputMatrix.NumCols()==NumCols()
inputMatrix.NumRows()==NumRows()
Diag
outputMatrix.NumRows()==inputMatrix.NumCols()
InputAndOutputFormatMismatch
vois_report_type
InitializeBaseFailed
CreateProcessingGraphsFailed
InitializationSuccessful
ParametersUpdated
vois_error_code
vois_input_format
vois_output_format
vois_initialization_duration_miliseconds
vois_parameter_wetdrymixpercent
vois_parameter_soundtoisolate
vois_parameter_usetuningmode
vois_parameter_selectedtuningmode
vois_parameter_updatedtuningmode
Wind Probability
No Wind Threshold
No Wind Low Frequency
No Wind High Frequency
Wind Threshold
Wind Low Frequency
Wind High Frequency
Voice Noise Probability Threshold
Min Probability In Noise
Min Probability In Voice
Voice Time Out
Min Between Voice And Noise
Mic Switch decided in NoiseSelector
Threshold for MagDiffVAD
aunsel
ComputeCoefFromTC
MagDiffVAD.h
blockFs > 0
SetAudiogram
PrescriptiveAmplification.cpp
loss_dBHL.size()==mNumSubbands
GetSplSteps
numSpl >= kPrescriptiveAmplification_NumElmSpls
GetGainTargets
numActiveSubbands <= mNumSubbands
SetSensitivityOffset
FrequencyDomainCompressor.cpp
offsets_dB.size() >= mNumSubbands
subbandPower.size() >= mNumSubbands
subbandGain_dB.size() >= mNumSubbands
channel_map
num_input_channels
num_output_channels
AUChannelSelector
x_write
x == 0
i < m_buf.size() - 2
written_bytes > 0
static_cast<size_t>(written_bytes) < m_buf.size()
(i + 2) < m_buf.size()
m_buf[i - 1] != '\0'
m_buf[i + 2] == '\0'
cannot use operator[] with 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v8/vpProcessUplink_v8.cpp
vpProcessUplink_v8.cpp
std::string_view vp::reflect_type_name() [T = vp::Service_Provider]
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Hardware]
std::string_view vp::reflect_type_name() [T = vp::services::Control_Center]
std::string_view vp::reflect_type_name() [T = vp::services::Control_Center_Impl]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Standard]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Wide_Spectrum]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Voice_Isolation]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)3]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)4]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)5]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)6]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)7]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)8]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)9]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)10]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)11]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)12]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)13]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)14]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)15]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)16]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)17]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)18]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)19]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)20]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)21]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)22]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)23]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)24]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)25]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)26]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)27]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)28]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)29]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)30]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)31]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)32]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)33]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)34]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)35]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)36]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)37]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)38]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)39]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)40]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)41]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)42]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)43]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)44]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)45]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)46]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)47]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)48]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)49]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)50]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)51]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)52]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)53]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)54]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)55]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)56]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)57]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)58]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)59]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)60]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)61]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)62]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)63]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)64]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)65]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)66]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)67]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)68]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)69]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)70]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)71]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)72]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)73]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)74]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)75]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)76]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)77]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)78]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)79]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)80]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)81]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)82]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)83]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)84]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)85]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)86]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)87]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)88]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)89]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)90]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)91]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)92]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)93]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)94]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)95]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)96]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)97]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)98]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)99]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)100]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)101]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)102]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)103]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)104]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)105]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)106]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)107]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)108]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)109]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)110]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)111]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)112]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)113]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)114]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)115]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)116]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)117]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)118]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)119]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)120]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)121]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)122]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)123]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)124]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)125]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)126]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)127]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)128]
std::string_view vp::reflect_type_name() [T = vp::services::Mobile_Gestalt]
jxx29Cq5bGHDnkcha4y/Rw
meicxSe0OZJaae1hEiOV5Q
std::string_view vp::reflect_type_name() [T = vp::services::User_Defaults]
numChannelsIn
numChannelsOut
matrix
ProcessFilter
AUFIREngineKernel.cpp
!filter.mIRBlockFFTs.empty()
GetPastInputBlock
block < blockCount
CommitChanges
!IsFading()
axisPanner
CartesianPanner.cpp
inSpeakerCoords.size() == outGains.size()
lowCoordIt != inSpeakerCoords.end()
highCoordIt != inSpeakerCoords.end()
VibeAnalyzer.cpp
Some algorithm tuning parameters out of range
Mass_g
IMONScale
VMONScale
BandPassLowerCorner
BandPassUpperCorner
TargetVelocityRatioHigh
TargetVelocityRatioLow
PeakWindowNumber
GainIncrement
GainDecrement
MomentumWindowDelay_ms
VelocityMeasuredRangeMin
VelocityMeasuredRangeMax
AmplifierGain
MeasuredToExpectedPowerRatio
PowerLimit
vana_datalog_level
vibeana_RCalvlog
vibeana_RCalilog
vibeana_EMFlog
vibeana_EMFVlog
vibeana_EMFIlog
vibeana_actionlog
BandPassOrder
MaxIVHistorySize_Sec
PeakWindowLength_Sec
RCalIPwrThres
RCalVPwrThres
RCalFrequency
RCalRangeMin
RCalRangeMax
SineFrequency
Kmotor
Inductance_uH
DCResistance
TargetVibeVelocity
MaxIVHistorySize_sec key missing from dict
RCalFrequency key missing from dict
RCalRangeMin key missing from dict
RCalRangeMax key missing from dict
RCalVPwrThres key missing from dict
RCalIPwrThres key missing from dict
IV data is unsupported type
vana
Min. Media Gain (dB)
Max. Media Gain (dB)
Min. Voice Gain (dB)
Max. Voice Gain (dB)
Scale factor for volume matching
Current Scalar Volume
AGC media target (dB)
AGC max media gain (dB)
Hold time for switching AGC parameters (frames)
Threshold for media presence detection (dB)
AUExpanseController
vpEchoGateV3.cpp
vpechogate3
AUDereverb.cpp
mclp_log_period_in_seconds
LMS.
RLS.
LSL.
LSL with auto order selection.
audrev
MCLP mode
Delay for MCLP
MCLP order
Backward prediction error energy threshold
Filter echo estimates?
Stop adaptation during echo?
Sxx threshold to stop adaptation
Eclee threshold to stop adaptation
Apply conversion factor?
Min frequency for backward prediction energy
Max frequency for backward prediction energy
Selected MCLP order
Weighted error regularization energy threshold
P-norm
Place holder
EC Delta EIR
EC IR Delay
EC Adapted flag
EC Time aligned ref signal energy
EC Mic-Eclee cross correlation
sampleRate
numIns
numOuts
blockSize
graphName "
Default Matrix Patcher (No graph specified)"
in input
out output
box MatrixPatcher (aufx pchr appl) 1 1
wire input MatrixPatcher ([sampleRate] [numIns])
wire MatrixPatcher output ([sampleRate] [numOuts])
MatrixPatcher
AUName
GetParameterInfo
AUDSPGraph.cpp
cfStr
isAU
componentType
componentSubType
componentManufacturer
audioComponentDescription
AUSpecific
BoxSpecific
cfobject
BoxName
Preset
/tmp/AudioCapture/AUDSPGraph
AUDSPGraph
enable_audspg_dsp_captures
InternalBuild
enable_audspg_details
ABHelperIsABTestModeOn
ABHelperWriteJSONFileFromDescription
ABHelperCreateDescriptionFromAudioUnit
ABHelperCreateDescriptionFromDSPGraphBox
ABHelperCreateDescriptionFromASBD
ABHelperCreateDescriptionFromDSPGraph
ComputeSubspaceLikelihoodHelper.cpp
invalid output num cols
invalid output num rows
invalid PhiMatrix num cols
zeta shape mismatch
dimension mismatch
Psi must be square
mismatch in OmegaInv size
invalid YSegmentLength
Mis-matched vector sizes!
outClickLogLik stores the no click probability too!
AUSignalCombiner.cpp
Channel Selections
Specially Handled Input Buses (if any)
Combining Related Parameters
Guided Minimum Magnitude
Always Track Default Channel
Always Track External Channel
Only Track External Channel During Occlusion
Occlusion Flag
Default Channel Selection
External Channel Selection
Main Mics Bus?
ECLee Bus?
Wind Suppressed Bus?
Echo Suppressed Bus?
Default Phase Bus
Selected Phase Bus
Low Frequency For Combining
High Frequency For Combining
ECLee Energy
ECLee Threshold
Default Channel Override
Channel Selection Rule
Combine?
Passthrough Output Bus?
Selected Channel
Combine Override
AUAUSignalCombiner
PassThroughSpatializer.cpp
!isnan(inGain)
PassThroughSpatializer
DecodeFromConvergence
MixViterbiProd.cpp
!mNeverConverged
DecodeFromConvergence_Post
eventAbsoluteTime
eventType
CLMClickEventMonitor.mm
%@ time %llu type %li
B24@?0@"CLMClickEvent"8@"NSDictionary"16
HIDEventMonitor.h
Reserved
InChannels
OutChannels
AudioChannelLabel
AudioChannelFlags
Coordinates
AudioChannelLayoutTag
AudioChannelBitmap
NumberChannelDescriptions
AudioChannelDescriptions
ComponentManufacturer
ComponentSubType
ComponentType
ComponentFlags
ComponentFlagsMask
AudioFormatID
AudioFormatFlags
BytesPerPacket
FramesPerPacket
BytesPerFrame
ChannelsPerFrame
BitsPerChannel
Magnitude
ThresholdMultiplier
ThresholdMultiplierPower
NumLUTPoints
ThresholdMultiplierLUTx
ThresholdMultiplierLUTy
TailTime
SupportsMPE
StreamFormat
ElementCount
BypassEffect
RenderQuality
OfflineRender
LastRenderError
ContextName
AudioChannelLayout
InPlaceProcessing
ShouldAllocateBuffer
FrequencyResponse
SupportedNumChannels
DspLibExcludeChannelMask
SupportedChannelLayoutTags
NumberOfBands
MaxNumberOfBands
UseVideoMode
UseV1Mode
VADModeThresholdParams
DeesserMode
AllowLookAhead
TransformSize
AuxVectorEnable
ReverseMicChannelFlag
ReportedLatency
NoiseSpectrumEstimate
ShadingMode
GainsDB
ForThermalProtection
ForNonCLTMHaptics
AttenuationActiveState
ConfigPlist
FIRMatrices
SetParameters
IOChannelNames
BQPlist
NeuralNetSPPMask
NeuralNetSPPPostMask
ParameterChangeTimeConstant
DspLibPeakPowerGuardAdmittanceFilterCoefficients
AlgoOrder
SpksInRows
SpksOffset
BeamComp
BeamFIR
ModalFIR
EQBiQuad
DriverBQ
CongifPlistVersion
BeamDescriptions
ChannelSplitMode
ChannelMap
TransducerCalibration
VPMode
EnableClosedLoop
SpeakerInputDataSourceOrder
IgnoreChannelTelemetry
ThermalStateOverride
MaxNumBands
CrossoverOrder
PrioritizeLatency
AllowLookahead
InitialGainDB
StateInformation
VolumeMap
NickName
EnableDetailedLogging
LogSamplingThreshold
NonFiniteProtectionBox
SampleRateConverterComplexity
RefIndex
SpacedOmniLeftIndex
SpacedOmniRightIndex
LinearSpatialFirstIndex
ParameterChangeSmoothingTime
GainBox
NumPropVectors
PropVector%u
VectorGainBox
MaxDelayFrames
DelayBox
EitherNoSubtypePropertiesElseNeedsToBeAdded
SubtypeSpecificPropertiesUnavailable
SubTypeSpecific
EitherNoPropertiesElseNeedsToBeAdded
BoxSpecificPropertiesUnavailable
spatialization algorithm
rendering flags
source mode
distance parameters
attenuation curve
point source in-head mode
enable propagation delay
custom source directivity IR
enable reverb send decorrelation filters
enable upmixing for LRC channels
enable exclusion zones
sound stage size
sound stage transition time (secs)
exclusion zone preset
enable parametric processing FOA
binaural compatibility mode
 CFURL
 CString
setData
[empty]
ReferenceDistance = 
, MaxDistance = 
, MaxAttenuation = 
|InputElement #
AUSpatialMixerV2InputElement.cpp
mChannelParameters.size() == mChannelProcessors.size()
PropertyChanged
InitializeParametricProcessor
UpdateSpatializationAlgorithm
UpdateOutputType
UpdateOrientation
InitializeChannelProcessors
UpdateChannelLayout
UpdateBypassMatrix
SetStreamFormat
SetAudioChannelLayoutPrivate
CopyFromBufferList
dst.mNumberChannels == src.mNumberChannels
PrintLoadedHRIRLog
AUBeamNF.cpp
diffr
mic_spacing
Front Beam Settings
Back Beam Settings
Front Beam
Back Beam
length
posteq
tuningdata
beam2_random_input
beam2_dump_diffr
beam2_dump_eq
beam2_custom_diffr_path
beam2_custom_eq_path
beamnf
Beam Index
Mic Programmable Gain
Flag to say there is high far-end (echo) activity
Front-end Calibration Enable
Fixed Beamformer Enable
Adaptive Beamformer Enable
Use Standard Adaptive Beamformer
Electronic Wind Screen Enable
Long-Term Noise Suppression Enable
Long-Term Noise Suppression Min Gain
Spatial Noise Suppression Active
Spatial Noise Suppression Max Attenuation
White Noise Gain
Adaptation End Frequency
Front End Calibration Gain
Mic Status Name
Nominal Mic Programmable Gain
Bad Mic Hysteresis
Index for desired EWIND deflection coefficient
Time-constant in s for log-spectrum estimation
Threshold for discriminating wind noise and occlusion
High-frequency threshold for discriminating wind noise and occlusion
Threshold for difference noise envelopes during occlusion detection
Threshold for difference noise envelopes during wind detection
Lower bound for spectral estimators
Difference threshold between microphones
Maximum absolute level allowed for inactive (failed) microphone
R-statistic threshold relative full scale in Q8
Difference threshold beam microphone and beam power
Frequency for detection statistic of probability of occlusion
Frequency for detection statistic of probability of failed microphone
Frequency for detection statistic of probability of occluded noisy microphone
Default mic for ewind/occlusion
Ewind cross-fade coefficient
Ewind cross-fade start frequency
Ewind cross-fade high thd
Ewind cross-fade low thd
Beta switch frequency
High-frequency beta
Mic choice above adaptation end frequency
Frequency EQ Enable
vpProcessDownlink_v4.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v4/vpProcessDownlink_v4.cpp
**** compressedVoiceABL->mNumberBuffers != theOutputData.mNumberBuffers in process %d != %d ****
Mic 1 EC LEE
Mic 4 EC LEE
Mic 1
Mic 4
Omni
+X beam
-X beam
AUMixSwitchNF
Ramp Time
Initial Level (dB)
AUECSUMO.cpp
ecsumo_log_period_in_seconds
wolalatency
window
auecso
Covariance thresholding
Initialization for covariance matices
Error PSD norm
Forgetting factor
Channels to be expanded: bitmap
Expansion order
Wola overlap
Number of crossbands
Gain applied to micRef
Flag to determine if we are in button press mode
Flag to see if the EC is adapting
Flag to bypass spatial probability
Number of microphones to process
Energy threshold for detecting non AOP channels (in dB).
Energy delta between AOP and non-AOP channels (in dB).
Set 1 for micRef, Set 0 for trueRef.
Flag to bypass beamformer
Flag to take complex conjugate of Kalman gain
0 for conventional, 1 for fast
Total filt len for NFD
Flag to see if we want to change forgetting factor
Forgetting factor during CFF
Expansion order during CFF
ScottySTFTUpmixer
ScottySTFTUpmixer.cpp
indexAndCoeff.first < decorrelationLength
AUBeamIt.cpp
Off.
Fixed.
SubbandDOA.
Ranged.
No EQ.
EQ designed for selection.
SRP.
SRP-PHAT.
LSDD.
Bypass mode mic index.
Beam selection mode.
EQ for beam selection.
Beam selection algorithm.
Select beams from (Auto)/Beam choice (Fixed).
Select beams to.
Energy smoothing time constant.
Energy threshold (dBFS)
Mean Normalize Selection Beams.
Use mic power averaging.
Selected beam.
Selected beam distance (m).
Selected beam azimuth (deg) (X->Y).
Selected beam elevation (deg) (Z->XY).
Mix EC Parameters?
Switch beams in echo?
Best beam in echo.
Echo-to-local voice threshold.
Local voice level threshold.
Echo active flag.
Limit wind boost?
Reference mic index.
Cutoff frequency for wind boost limiting.
Wind boost detection threshold (dB).
Max wind boost allowed (dB).
Current Crossover Frequency (MAX).
Scale Cutoff.
Raw Scale Smoothing.
Omni Blend Scale Thres.
Crossover Max Frequency.
Crossover Index Attack.
Crossover Index Release.
Crossover Index Hold.
Crossover Index Smoothing.
Min Omni Blend Crossover Frequency.
Min Omni Blend Abs. Energy Trigger.
Wind / Scratch Detect Trigger Attack.
Wind / Scratch Detect Trigger Release.
Cross Fade Length Ramp Slope.
Use beam crossfade for the uplink beam.
Enable beam switching for Auto mode (e.g., external VAD).
AUECMicRef.cpp
ecmicref_log_period_in_seconds
auecmr
Flag to turn on eclee enhancement
Energy threshold for detecting non-AOP channels (in dB).
AUSoundIsolation.mm
Voice
Voice v0: Independent channel processing
Voice v0: Joint channel processing
BlockSize
NumberOfInputChannels
NumberOfOutputChannels
LookaheadSize
/aufx-vois-appl-nnet-vi-v0.plist
/aufx-vois-appl-nnet.aupreset
/aufx-vois-appl-drev.aupreset
/aufx-vois-appl-dnos.aupreset
auvois_show_internal_params
CAUI_createCustomViewForAudioUnit
Wet/Dry Mix
Sound to Isolate
Use Tuning Mode
Tuning Mode
what
code
category
os_status
mixer
DREV
inputDelayForMWF
bypassDelay
SIMULATOR_ROOT
/System/Library/Audio/Tunings
/System/Library/Audio/Tunings/Generic/AU
The CFDictionary object is invalid.
SpectralProfile.cpp
Sample rate is not present in the dictionary.
Profile vector is not present in the dictionary.
Channel Combination Mode
Peak of All Input Channels
Average of All Input Channels
Low Pass
High Pass
Parametric
frequency
bandwidth
Clipping threshold
Clipping flag
Clipping headroom (dB)
AUClipDetector
AUEndpointVAD.cpp
number of VAD results
latest VAD status
latest VAD sample time
VAD status changed
AUMeisterStueck_ViewFactory
band 0: bypass
band 0: makeup gain
band 0: release
band 0: meter decay time
band 0: downwards compressor threshold
band 0: hybrid modulator
band 0: solo
band 0: peak window size
band 0: raised cosine filter time const
band 0: downwards compressor gain range
band 0: downwards compressor ratio
band 0: meter peak hold time
band 0: upwards compressor threshold
band 0: upwards compressor ratio
band 0: upwards compressor gain range
band 0: modulator Xover frequency
band 0: detector SRC factor
band 0: Xfader start
band 0: mute
band 0: sidechain gain
band 0: expander threshold
band 0: expander ratio
band 0: enable
band 0: input gain
band 0: enable analytical signal
band 1: bypass
band 1: makeup gain
band 1: release
band 1: meter decay time
band 1: downwards compressor threshold
band 1: hybrid modulator
band 1: solo
band 1: peak window size
band 1: raised cosine filter time const
band 1: downwards compressor gain range
band 1: downwards compressor ratio
band 1: meter peak hold time
band 1: upwards compressor threshold
band 1: upwards compressor ratio
band 1: upwards compressor gain range
band 1: modulator Xover frequency
band 1: detector SRC factor
band 1: Xfader start
band 1: mute
band 1: sidechain gain
band 1: expander threshold
band 1: expander ratio
band 1: enable
band 1: input gain
band 1: enable analytical signal
band 2: bypass
band 2: makeup gain
band 2: release
band 2: meter decay time
band 2: downwards compressor threshold
band 2: hybrid modulator
band 2: solo
band 2: peak window size
band 2: raised cosine filter time const
band 2: downwards compressor gain range
band 2: downwards compressor ratio
band 2: meter peak hold time
band 2: upwards compressor threshold
band 2: upwards compressor ratio
band 2: upwards compressor gain range
band 2: modulator Xover frequency
band 2: detector SRC factor
band 2: Xfader start
band 2: mute
band 2: sidechain gain
band 2: expander threshold
band 2: expander ratio
band 2: enable
band 2: input gain
band 2: enable analytical signal
band 3: bypass
band 3: makeup gain
band 3: release
band 3: meter decay time
band 3: downwards compressor threshold
band 3: hybrid modulator
band 3: solo
band 3: peak window size
band 3: raised cosine filter time const
band 3: downwards compressor gain range
band 3: downwards compressor ratio
band 3: meter peak hold time
band 3: upwards compressor threshold
band 3: upwards compressor ratio
band 3: upwards compressor gain range
band 3: modulator Xover frequency
band 3: detector SRC factor
band 3: Xfader start
band 3: mute
band 3: sidechain gain
band 3: expander threshold
band 3: expander ratio
band 3: enable
band 3: input gain
band 3: enable analytical signal
Xover 0: frequency
Xover 0: order
Xover 1: frequency
Xover 1: order
Xover 2: frequency
Xover 2: order
band 0: gain
band 1: gain
band 2: gain
band 3: gain
write log file to /tmp
detector SRC factor
bandwidth compensation
RMS time constant
peak hold time constant
peak decay time constant
alising damping
release
DSP render quality
enable overshoot compensation
Filterbank
Band 0
Band 1
Band 2
Band 3
additional parameters
input gain per band
additional parameters 2
auloud
loudnesswarrior_verbose
AULoudnessWarrior
AULoudnessWarrior.cpp
Filter Index
Meter 1
Meter 2
Meter 3
LKFS
A-Weighted RMS
C-Weighted RMS
Zero-weighted RMS
Band-pass RMS
Low-pass RMS
High-pass RMS
Correct Bass
Correct Treble
Correct Both
inBuffer.mNumberBuffers == outBuffer.mNumberBuffers
biquads_%.0f
BassBiquads
TrebleBiquads
ProcessMeters
numFrames <= mMeterOutputBuffers[i].size()
Output Sensitivity
Content Hint
Bass Metric Correction
Bass Effective Gain
Treble Metric Correction
Treble Effective Gain
Meter 1 Enable
Meter 1 Type
Meter 1 Attack Time
Meter 1 Release Time
Meter 1 Frequency
Meter 1 Q
Meter 1 Metric
Meter 1 Threshold
Meter 1 Weight
Meter 1 Offset
Meter 1 Correction Select
Meter 2 Enable
Meter 2 Type
Meter 2 Attack Time
Meter 2 Release Time
Meter 2 Frequency
Meter 2 Q
Meter 2 Metric
Meter 2 Threshold
Meter 2 Weight
Meter 2 Offset
Meter 2 Correction Select
Meter 3 Enable
Meter 3 Type
Meter 3 Attack Time
Meter 3 Release Time
Meter 3 Frequency
Meter 3 Q
Meter 3 Metric
Meter 3 Threshold
Meter 3 Weight
Meter 3 Offset
Meter 3 Correction Select
75 Hz LP Bass Offset Preset
ConvoyDisplacementController
ConvoyDispController.cpp
DOAConditioner.cpp
SetXYZFromPolarDOA
SubbandXYZ.hpp
polarDOA.GetNumBands() == GetNumBands()
SubbandDOA.h
bandIdx < GetNumBands()
HIDEventMonitor.mm
com.apple.coreaudio.hideventmonitor
PrimaryUsagePage
PrimaryUsage
Processing Mode
Noise Floor Gain
Noise PSD Multiplier
Signal PSD Smoothing Time 
Gains Smoothing Time
Time Filter Minimum Size
Filter Cross Fade Time
Use External Gains
Learn Noise Profile
PSD Estimator
Enable Artifact Mitigation
Post Filter SPP Threshold
Post Filter Scaling Factor
Post Filter Minimum Length
Agressive Artifact Mitigation
AUMicSense.cpp
Minimum Phase 0ms
Quasi Linear Phase 0.25ms
Quasi Linear Phase 0.50ms
Quasi Linear Phase 1.00ms
Linear Phase 2.00ms
Linear Phase 4.00ms
Frequency Domain 10.00ms
inFramesToProcess % mBlockSize == 0
Failed to retrieve block size used from input dictionary.
NumberOfChannels
Failed to retrieve number of channels from input dictionary.
Failed to retrieve noise profile from input dictionary.
NeuralNetVAD.cpp
threshold
HangA01
HangA10
DeltaFeature
InputScale
UseDirectionalMode
DirectionalTargetElevation
DirectionalTargetAzimuth
DirectionalModelType
DirectionalModelShapeParamer
DirectionalModelConditionalTargetPrior
CombinedProbabilityMode
SpatialSPPCutOff
VADinAudioOutputMode
OutputMaskMode
FaceTime
FacePlant
TwoMic
noise supp mode
(I) speech probability
occlusion mode
(I) occ_2ndMic confd
(I) ns_auto_mode
auto_blend_alpha
(I) noise SPL (one mic)
(I) 1mic vad
(I) 2mic vad
auto NS level
hb minus lb_sep
P_OCCL_based_alpha
lb_sep
Test_Switch
DL Speech Prob
Inv 2mic vad
tmv - itmv
reverb room type
render quality
offline rendering mode
uses internal reverb
output type
LFE lowpass frequency
BluetoothFeatures
CustomHRTFSupport
personal HRIR type
personal HRTF mode
HRTF type
listen to personal HRIR user choice
personal HRIR dictionary
enable old reverb behavior
spatializer orientation
head orientation quaternion
RM head orientation quaternion
listener position
Listener Position Radius Limit
only frequency domain filtering
orientation listener mode
custom HRIR
custom XTCIR
custom room IR
custom early reflection IR
custom late reverb IR
custom near-field IR
parameter smoothing
global DRR
spatializer property dictionary
enable dynamics processing
output dynamics processing flags
ControlFreak preset CString
LoudnessNormalizer preset CString
enable head tracking
head tracking mode
listen to head tracking user choice
hosted in HAL
custom HOA source extent IR
custom binaural source extent IR
custom XTC source extent IR
parametric processor dictionary
immersive renderer data
room configuration dictionary
early reflection biquad dictionary
late reverb biquad dictionary
setProperty
X = 
, Y = 
, Z = 
, W = 
ByteArray, size: 
Alpha used in half-wave rectifier
Half Wave Rec Option for Ref0. =0 no processing;  =1 do + option; =2 do - option
Half Wave Rec Option for Ref1. =0 no processing;  =1 do + option; =2 do - option
AUDenoise.cpp
pmwf_log_period_in_seconds
Blind PMWF: Multichannel speech presence probability with fixed speech absence probability
Blind PMWF: Multichannel speech presence probability with multichannel voice activity detection
Informed PMWF (iPMWF): Known steering vector
Guided MWF: echo bus is used for target covariance estimation
iPMWF: Covariance Subtraction
iPMWF: A Known Steering Vector
iPMWF: Probabilistic (Soft) Recursive Update
iPMWF: IVA Recursive Update
iPMWF: VAD Recursive Update
EchoBus
Magnitude from EchoBus and phase from MicBus
MicBus multiplied with InputMaskEstimate
Full inverse
HRLS
Gram-Schmidt
PMWF mode
Smoothing time constant for mic PSD
Smoothing time constant for noise PSD
Smoothing time constant for SPP
Parameter for Wiener filter
Initial noise PSD
A priori SPP
Max SPP
Max GLR
Depricated
Number of frames for MVAD tracker
Speech to noise level threshold
Noise reduction amount
Max a priori SAP
Sxx threshold to stop adaptation.
Eclee threshold to stop adaptation.
Min a priori SAP
Number of additional SPP iterations
Use full rank Wiener filter?
Number of frames to initialize noise cov.
Average SPP per frame
Gram-Schmidt regularization energy threshold
Steering type for iPMWF
Use external SPP for iPMWF?
Type of recursive update of statistics for iPMWF
Minimum frequency for IVA VAD calculator for iPMWF
Maximum frequency for IVA VAD calculator for iPMWF
Distribution prior for IVA VAD calculator for iPMWF
Energy threshold for IVA VAD calculator for iPMWF
External input VAD for iPMWF
Maximum signal gain for iPMWF
Target beam index from input plist for iPMWF.
Use updated iPMWF filter on current frame
Guidance mode for GuidedMWF
Covariance inverse calculation mode for GuidedMWF
aucircarray
circarray_verbose
CircArray
AUCircArray.mm
mActiveKernel.get()
Beam Angle %u
Beam Type %u
Gain %u
Delay %u
Blend Time
Angle Offset
Default (Passthrough)
Version
SpeakersInRows
FirstDriverAngles
BeamCompositions
Cardioid
BeamFIRs
ModalFIRs
LatencySamples
GetBeamArrays
firstBeamComp.GetNumberItems() == algoOrder + 1 || firstBeamComp.GetNumberItems() == algoOrder * 2 + 1
Plist doesn't contain speakers in rows array
Plist doesn't contain speakers offsets array
Plist doesn't contain beam compositions array
Plist doesn't contain beam FIR array
Plist doesn't contain modal FIR array
Speakers in row array does not have same number of speakers as AU output channels
Speakers in rows array size doesn't match speaker offsets array size
Number of beam compositions and beam FIRs does not match
Number of modal filters doesn't match what's expected from beam compositions
Beam compositions size doesn't match expected from algo order
EQBQ array length not a multiple of 5, invalid
DriverBQs
Driver BQ array does not have the same number of drivers as spksInRing
DriverMasks
Driver masks array does not have the same number of drivers as spksInRing
Single Unit 5.1
processPolyphase
DelayLine.cpp
phaseIndex < mFractionalPhases
inNumFramesToProcess + padOffset <= mDelayLine.size()
isPowerOfTwo(mFractionalPhases)
setDelay
inTapIdx < mNumTaps
getLatestDelay
inInputData
inNumFramesToProcess <= delayLineLen - padOffset
numSamplesRemaining > 0
inNumFramesToProcess < delayLineLen - padOffset
SetNoiseEstimate
HearingLossCompensator_Core.cpp
numBins == mNumBins
input.size() == mNumChannels
output.size() == mNumChannels
numFrames == mBlockSize
mIsFrequencyDomain ? (input[0].size() >= 2 * numFrames) : (input[0].size() >= numFrames)
AddMultiplyRVectorRScalarMultiplyRVectorRScalar
SmoothedNoiseEstimator.h
setCoefficients
MicSenseDynamicFIR.hpp
newFilterLength <= mMaxNumFrames
Initializing EC
AUParameterLogger.cpp
NULL audio unit pointer
%m-%d-%Y_%I-%M-%S
%s_%s.bin
IRSpatializer.cpp
inMaxFramesPerSlice > 0
inSampleRate > 0
IRSpatializer
NeuralNetImpl.cpp
neuralnetutility_detailed_logging
NeuralNetImpl.hpp
InputOutputStates
NumStates
InputOutputState_
METAL
ANE_RUNTIME_DIRECT
CPU_ALT
CPU_V8
REMOTE
HX_SIM
HX_CVA
METAL_TEXARRAY
METAL_V9
METAL_MPS_BUFFERS
ANE_COMPILER
ANE_SIM
QUANT_SIM
ANE_SIM_FANTASY
plan.h
status == ESPRESSO_STATUS_SUCCESS
AUMicIssueDetector.cpp
Status Indicators
Modes
Gains
Smoothing Constants
Thresholds
Best Mic
Weighted Sum
AlgorithmCoreType
WindProbBandLowFreq
WindProbBandHighFreq
WindLvlBandLowFreq
WindLvlBandMidFreq
WindLvlBandHighFreq
WindLvlBandEnThr
WindLvlToGainFlr
WindLvlToGainSlope
WindLvlToGainMean
WindLvlGainAttackTC
WindLvlGainReleaseTC
WindLvlGainHoldTime
EnRatioBandLowFreq
EnRatioBandHighFreq
EnRatioBandCohrThr
EnRatioToGainFlr
EnRatioToGainSlope
EnRatioToGainMean
EnRatioGainAttackTC
EnRatioGainReleaseTC
EnRatioGainHoldTime
EnRatioGainInEnThr
EnRatioGainOutEnFloor
GainLowFreq
GainCrossoverFreq
GainHighFreq
CohrToGainSigmoidSlope
CohrtoGainSigmoidMean
GainThreshold
PreferredMic
MicSwitchGainThr
BlockedMicDecisionTC
BlockedMicNumBands
BlockedMicProfile
Blocked Mic Flag
Aggregate Omni Mode
Input Pre-Processing Gain
Suppression Gain Floor
Time Constant for PSD Est.
Time Constant for Energy Smoothing
Time Constant for Raw Ps Energy Smoothing
Hysteresis Time for Wind/BlockeMic/BestMic Flags
Hysteresis Time for Wind/BlockeMic Flags offset
Threshold on Wind Probability
Threshold on Blocked Mic Probability
Blocked Mic Probability
Wind Level
Mic Gain Linear
AUMicIssueDetector
Breakpoints
ParameterTransformBox.mm
!isnan(y)
f12@?0f8
UndoLogTransformationOfXValues_block_invoke
isfinite(y)
setParameter
ParameterTransformBox.h
!isnan(mVal)
vpBaseAspen.mm
dft_v5.cpp
Failed to initialize input and output buffer sizes.
Failed to read highpass filter cutoff from plist.
Failed to read noise dithering option from plist.
NoiseFloorDB
Failed to read noise floor from plist.
Noise dithering option must be 0 or 1.
AudioLongAnalysisSizeSamples
Failed to read long analysis window size from plist.
ASAFeaturesDSPChain.cpp
(numOverlap + 1)*mAudioBufferSize == mAudioAnalysisSize
(numLongOverlap + 1)*mAudioBufferSize == mLongAudioAnalysisSize
ASAFrontEndParams
ASAFeatureParams
ASAFilteringPriors
numMFCCFilters
Failed to read num MFCC filters from plist.
numMFCCCoefficients
Failed to read num MFCC coeffs from plist.
minMFCCFreqHz
Failed to read min MFCC freq from plist.
maxMFCCFreqHz
Failed to read max MFCC freq from plist.
lifterAmount
Failed to read lifter amount from plist.
SpeechCenterFreqHz
Failed to read speech center freq from plist.
SpeechWidthPow2
SpeechEmphAmount
MinWindowSizeSec
Failed to read min window size seconds from plist.
MaxWindowSizeSec
Failed to read max window size seconds from plist.
ChromaNumSemitones
Failed to read num semitones from plist.
ChromaFMinHz
Failed to read fmin from plist.
ChromaMinBandpassBin
Failed to read min bin from plist.
ChromaMaxBandpassBin
Failed to read max bin from plist.
RMSNominalRMSDB
Failed to read nominal RMS from plist.
RMSDCBlockingTimeConstSec
Failed to read DC blocking time const from plist.
RMSLowpassTimeConstSec
Failed to read lowpass time const from plist.
BeatsV2MinBPM
Failed to read min BPM from plist.
BeatsV2MaxBPM
Failed to read max BPM from plist.
BeatsV2MelBandSmoothRadius
Failed to read mel band smoothing radius from plist.
BeatsV2NumSmooMelBands
Failed to read num mel smoo bands from plist.
BeatsV2SparsityExponent
Failed to read sparsity exponent from plist.
BeatsV2ZeropadAmt
Failed to read zeropad amt from plist.
BeatsV2MinWinSizeSec
Failed to read beats min win size from plist.
BeatsV2MaxWinSizeSec
Failed to read beats max win size from plist.
BeatsV2Config8NumHarmonics
Failed to read config8 num harmonics from plist.
BeatsV2Config8BPMMultiplier
Failed to read config8 BPM multiplier from plist.
BeatsV2Config8SparsityAlpha
Failed to read config8 sparsity alpha from plist.
BeatsV2Config16NumHarmonics
Failed to read config16 num harmonics from plist.
BeatsV2Config16BPMMultiplier
Failed to read config16 BPM multiplier from plist.
BeatsV2Config16SparsityAlpha
Failed to read config16 sparsity alpha from plist.
ModEnergy1CenterFreqHz
Failed to read center freq from plist.
ModEnergy2CenterFreqHz
ModEnergyLookaheadSec
Failed to read lookahead from plist.
ModEnergySimLookaheadSec
Failed to read sim lookahead from plist.
ModEnergyNumSpectralCycles
Failed to read num spectral cycles from plist.
ModEnergySig1Center
Failed to read sig1 center from plist.
ModEnergySig1Slope
Failed to read sig1 slope from plist.
ModEnergySig2Center
Failed to read sig2 center from plist.
ModEnergySig2Slope
Failed to read sig2 slope from plist.
HarmConsistencyFreqBPAvgPitchHz
Failed to read freq BP avg pitch from plist.
HarmConsistencyTimeLPPoleRadius
Failed to read LP pole radius from plist.
HarmConsistencyLookaheadSec
HarmConsistencySimLookaheadSec
HarmConsistencySig1Center
HarmConsistencySig1Slope
LowEnergyThreshold
Failed to read low energy threshold from plist.
SpecRolloffFrac
Failed to read spec rolloff frac from plist.
CepstralVarianceCepBoostPower
Failed to read cep boost power from plist.
AvgPitchDensityAPDBeginQuefSec
Failed to read begin quef sec from plist.
AvgPitchDensityAPDEndQuefSec
Failed to read end quef sec from plist.
AvgTonalityPowerTonalityPeakThresh
Failed to read tonality peak thresh from plist.
AvgTonalityPowerMeanRMSShrinkage
Failed to read mean RMS shrinkage from plist.
ChromaPriorValue
BeatLogActPriorVec
BeatInitialLogActArray
LogMelSpecPriorVec
HarmConsistencyFilterPriorVec
RMSDbPrior
ModEnergy2PriorValue
TonalityMarkerPriorValue
TonalityGatedRMSPriorValue
ModEnergyPriorValue
SpecRolloffPriorValue
SpecCentroidPriorValue
SpecFluxPriorValue
SpecReconDiffPriorValue
CepSparsityPriorValue
CepVariancePriorValue
PitchDensityPriorValue
FeatureSelectionDataBlob
ComputeAllFeaturesFromAudio
numAudioSamples == mAudioBufferSize
AUEndpointVAD2.cpp
CommonParameters
ULDATParameters
ASAParameters
ViterbiParameters
AULoudnessNormalizer_ViewFactory
total momentary gain
pause
max CPU saving
save CPU
standard quality
superior quality
reset: by host
reset: ignore host
reset: now, by host
reset: now, ignore host
reset: by host, after silence
reset: ignore host, after silence
reset: now, by host, after silence
reset: now, ignore host, after silence
reset: by host, use manual loudness
reset: ignore host, use manual loudness
reset: now, by host, use manual loudness
reset: now, ignore host, use manual loudness
reset: by host, after silence, use manual loudness
reset: ignore host, after silence, use manual loudness
reset: now, by host, after silence, use manual loudness
reset: now, ignore host, after silence, use manual loudness
custom
MPEG default
MPEG late night
K-Weighting
A-Weighting
system volume
downward compression range
target loudness
enable AGC
enable compressor
expected loudness after reset
reset timeout
loudness meter state input
loudness meter state output
upwards compression range
enable side-chain high pass
side-chain high pass frequency
reset mode
transient response for algorithm version 1
enable automation
point 0: volume
point 0: upwardsCompressionRange
point 0: maxGain
point 1: volume
point 1: upwardsCompressionRange
point 1: maxGain
point 0: downwardsCompressionRange
point 0: downwardsCompressionRatio
point 1: downwardsCompressionRange
point 1: downwardsCompressionRatio
gain curve
shaping filter
voice activity
enable voice activity input
weighting filter
use downward compressor ratio
downward compressor ratio
enable side-chain low pass
hold adaptation
side-chain low pass frequency
output ceiling
enable output ceiling
peak level offset
integrated loudness release time VAD mode
automation upward compression
automation downward compression
MPEG Compression
Le_order
Le_order not found in inConfig
Bl_order
Bl_order not found in inConfig
Km_order
Km_order not found in inConfig
Rm_order
Rm_order not found in inConfig
Mms not found in inConfig
Reb not found in inConfig
Le_x
Bl_x
Km_x
Rm_u
Re0 not found in inConfig
mu_Re
mu_Re not found in inConfig
mu_epsilon
epsilon_mu not found in inConfig
mu_Le
mu_Bl
mu_Km
mu_Rm
Reb_min
Reb_min not found in inConfig
Le0_min
Le0_min not found in inConfig
Bl0_min
Bl0_min not found in inConfig
Km0_min
Km0_min not found in inConfig
Rm0_min
Rm0_min not found in inConfig
Reb_max
Reb_max not found in inConfig
Le0_max
Le0_max not found in inConfig
Bl0_max
Bl0_max not found in inConfig
Km0_max
Km0_max not found in inConfig
Rm0_max
Rm0_max not found in inConfig
alpha not found in inConfig
En_frame_Th
Threshold for frame energy not found in inConfig
En_Th
Threshold for energy not found in inConfig
Timer
Timer not found in inConfig
snrv_Th
snrx_Th
Key does not have proper length in inConfig: %s
Key not found in inConfig: %s
(I) noise SPL (1-mic)
hard clip level dB
soft clip level dB
DirectionalVAD.cpp
nnvad
Effective zoom amount
Camera field of view
Manual zoom amount
UpdateChannelLayoutTag
AUHOAZoom.mm
ChannelLayoutTagIsSupportedHOA(tag)
DominanceValues
GetParameter
!isnan(outValue)
Suppression RMS Level
Low Suppression Band Start Frequency
Low Suppression Band End Frequency
High Suppression Band End Frequency
Threshold Ratio (RMS)
Measured Threshold Ratio (RMS)
S Band Compression
Monitor S Detection
Threshold Smoothing Time (ms)
Suppression Attack Time (ms)
Suppression Release Time (ms)
Crossovers
Low Band
High Band
ChannelData
AnalogGain
ThieleSmall
MmsFrontPort
RmsFrontPort
KmsFrontPort
PressureResponse
TweeterGain
TweeterResponse
AULowFlow_ViewFactory
LinkChannelEnergies
Model (Deprecated)
SystemVolume
GlobalSpare05
GlobalSpare06
GlobalSpare07
EnableMitigationBottom
MuteBottom
MaskBandMinBottom
MaskBandMaxBottom
MinVelocityLimitBottom
MinMaskEnergyBottom
MidVelocityLimitBottom
MidMaskEnergyBottom
HighVelocityLimitBottom
HighMaskEnergyBottom
MaxMaskEnergyBottom
MaskAttackBottom
MaskReleaseBottom
MaxAttenuationBottom
ReleaseTimeBottom
MinFrequencyBottom
MaxFrequencyBottom
MidAttenuationBottom
MidLevelBottom
Spare19Bottom
Spare20Bottom
Spare21Bottom
Spare22Bottom
Spare23Bottom
EnableMitigationTop
MuteTop
MaskBandMinTop
MaskBandMaxTop
MinVelocityLimitTop
MinMaskEnergyTop
MidVelocityLimitTop
MidMaskEnergyTop
HighVelocityLimitTop
HighMaskEnergyTop
MaxMaskEnergyTop
MaskAttackTop
MaskReleaseTop
MaxAttenuationTop
ReleaseTimeTop
MinFrequencyTop
MaxFrequencyTop
MidAttenuationTop
MidLevelTop
Spare19Top
Spare20Top
Spare21Top
Spare22Top
Spare23Top
Acoustic ID: %@
None.
Internal.
External Beam2.
External MicSel.
Wind flag.
Suggested highpass cutoff frequency (Hz).
Threshold for wind detection.
Minimum gain (dB).
Start frequency, Probability (Hz).
End frequency, Probability (Hz).
PSD smoothing time constant (seconds).
Mean for sigmoid (coherence -> gain).
Slope for sigmoid (coherence -> gain).
Low cutoff frequency.
Crossover frequency.
High cutoff frequency.
Threshold on gain.
Hysteresis time for wind flag (seconds).
Method used for detecting mic issues.
Mic status (WARN: Interpretation depends on method).
Low frequency energy ratio (dB).
High frequency energy ratio (dB).
Energy from Mid freq to End freq for Ch1 (dB).
Energy from Mid freq to End Freq for Ch2 (dB).
Start frequency, Energy ratio (Hz).
Mid frequency, Energy ratio (Hz).
End frequency, Energy ratio (Hz).
Energy smoothing time constant (seconds).
Threshold on Energy ratio (dB).
Absolute threshold on mic energy (dBFS).
Dead mic detection threshold (dBFS).
Hysteresis time for mic status (seconds).
Aggregate omni gain - Channel 1 (linear).
Aggregate omni gain - Channel 2 (linear).
New Wind Suppression ?
Sigmoid Gain Floor Slope.
Gain Apply Attack Time
Gain Apply Hold Time
Gain Apply Release Time.
Gain Smoothing Time.
Energy Refinement Low Threshold.
Energy Refinement High Threshold.
Smoothing Time for Agg Omni Weights.
(T)   Time length for the filter coefficients read-out.
(out) Delta IR
(out) IR delay
(out) Aligned reference signal power
(out) Actual time length for the filter coefficients read-out.
(T)   Constant to smooth denom in deltaIR when IR is increasing.
(T)   Constant to smooth denom in deltaIR when IR is decreasing.
(out) DeltaIRCorr: cos(alpha) between two deltaWs
(T)   Attack smoothing factor for cos(alpha) between two deltaWs
(T)   Decay smoothing factor for cos(alpha) between two deltaWs
(T)   Threshold for deltaIRCorr
(T)   Enable/disable using deltaIRCorr for the gate
(out) Combined deltaIR, deltaIRCorr, long term deltaIR output
(T)   Using this factor to map the correlation value [0, 1] to larger scale, i.e., [0, 100]
(T)   Activity threshold for IR difference energy. When the energy is below this threshold, deltaIRCorr will be set to 0
1/48
1/24
1/12
Back
Front
Camera Direction
LandscapeLeft (home button right)
LandscapeRight (home button left)
Target UI Orientation
Active UI Orientation
Beam gain (front camera)
Default beam gain (back camera)
Zoom in beam gain (back camera)
Zoom out beam gain (back camera)
Zoom out -> default fade
Default + zoom out -> zoom in fade
Override FOV control of beam fading
Override Zoom out -> default fade
Override default + zoom out -> zoom in fade
Limit wind boost
Cutoff frequency for wind boost limiting
Wind boost detection threshold (dB)
Max wind boost allowed (dB)
Current Crossover Frequency (MAX)
Scale Cutoff
Raw Scale Smoothing
Omni Blend Scale Thres
Crossover Max Frequency
Crossover Index Attack
Crossover Index Release
Crossover Index Hold
Crossover Index Smoothing
Min Omni Blend Crossover Frequency
Min Omni Blend Abs. Energy Trigger
Wind / Scratch Detect Trigger Attack
Wind / Scratch Detect Trigger Release
Cross Fade Length Ramp Slope
Enable DOA smoothing
DOA time smoothing
DOA frequency smoothing
DOA smoothing bias
Override measured DOA
Override azimuth
Override elevation
Coefficient smoothing
Enable Parametric timbre filter
Mono
Low signal select
Spaced omni
High signal select
Min Parameteric Frequency
Max Parameteric Frequency
Parameteric filter transition width
Max Calculated Parameteric Frequency
Low gain
High gain
DRR multiplier
DRR mix regularization
DRR filter smoothing
Render mode (doesn't control MCLP)
Depreciated
ZoomableLinear
renderModes
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/AUSpatialCapture/SpatialCapture.mm
GetSpatialCaptureDSPGraphSource
bad sample rate
numMics
bad number of mics
bad number of outputs
numSDLSBeams
bad number of linear spatial beams
nFFT
bad block size
enable_spatial_capture_recording
    ; Defines                                    
    [def procRate 
]                  
    [def numMics 
]                     
    [def numOutputs 
]                     
    [def numLinBeams 
]                     
    [def fftBlockSize 
     ; Output
     out finalOut
     
                                      in refInTd
                                      box refIn fft 1 1
                                      wire refInTd refIn ([procRate] [numMics] [fftBlockSize])
                                      
            in refIn
                                      
                                  ;
                                  ; Mic selection
                                  ;
                                  box micSelectCoordinator scmicselect 0 0
                                  
                                  ; Linear spatial (full signal)
                                  box linFullSignal (aufx bmfd appl) 1 3
                                  box linDead0 dead 1 0
                                  box linDead1 dead 1 0
                                  box linPatcher chansel 1 1
                                  
                                  wire refIn                                 linFullSignal                       (freq [procRate] [numMics] [fftBlockSize])
                                  wire (linFullSignal 0)                     linDead0                            (freq [procRate] 1 [fftBlockSize])
                                  wire (linFullSignal 1)                     linDead1                            (freq [procRate] 1 [fftBlockSize])
                                  wire (linFullSignal 2)                     linPatcher                          (freq [procRate] [numLinBeams] [fftBlockSize])
                                  
                                  box linFullSignalFTT fft 1 1
                                  
wireProperty (micSelectCoordinator 
) (linPatcher 
) true
wireParam (micSelectCoordinator 
 0 0) (linFullSignal 
param 
wireGraphParam 
 (micSelectCoordinator 
 0 0)
 0.0
 0.0 out
 (linFullSignal 
         box postGain (aufx dbgn abox) 1 1
         ;
         ; Linear spatial (full signal)
         ;
         
             wire linPatcher                            linFullSignalFTT                    (freq [procRate] [numOutputs] [fftBlockSize])
             wire linFullSignalFTT                      postGain                            ([procRate] [numOutputs] [fftBlockSize])
             wire postGain                              finalOut                            ([procRate] [numOutputs] [fftBlockSize])
             
             wire linPatcher                            postGain                            (freq [procRate] [numOutputs] [fftBlockSize])
             wire postGain                              finalOut                            (freq [procRate] [numOutputs] [fftBlockSize])
             
        param 1000 -3.0
        wireGraphParam 1000 (postGain 0 0 0)
        
SpatialCapture.mm
            record "
ref-in-sc.wav"     refIn 
            record "
linFullSignal-sc.wav"     (linFullSignal 2) 
            record "
linPatcher-sc.wav"     linPatcher 
            
                           box focused (aufx bmfd appl) 1 3
                           box focusedDead dead 2 0
                           box focusedPatcher chansel 1 1
                           box focusedVsSpatialMix scmx 2 1
                           
                           box wide (aufx bmfd appl) 1 3
                           box wideDead dead 2 0
                           box widePatcher chansel 1 1
                           box wideVsSpatialMix scmx 2 1
                           
                           box focusedFOVToBeamMix paramtx 0 0
                           box wideFOVToBeamMix    paramtx 0 0
                           
                           box focusedBeamMixOverrideSwitch paramsw 0 0
                           box wideBeamMixOverrideSwitch    paramsw 0 0
                           
                           box defaultBeamGainCamDirSwitch paramsw 0 0
                           box focusedBeamGainCamDirSwitch paramsw 0 0
                           box wideBeamGainCamDirSwitch paramsw 0 0
                           wire refIn                           focused                       (freq [procRate] [numMics] [fftBlockSize])
                           wire (focused 0)                     (focusedDead 0)               (freq [procRate] 1 [fftBlockSize])
                           wire (focused 1)                     (focusedDead 1)               (freq [procRate] 1 [fftBlockSize])
                           wire (focused 2)                     focusedPatcher                (freq [procRate] [numLinBeams] [fftBlockSize])
                           wire refIn                           wide                       (freq [procRate] [numMics] [fftBlockSize])
                           wire (wide 0)                        (wideDead 0)               (freq [procRate] 1 [fftBlockSize])
                           wire (wide 1)                        (wideDead 1)               (freq [procRate] 1 [fftBlockSize])
                           wire (wide 2)                        widePatcher                (freq [procRate] [numLinBeams] [fftBlockSize])
                           wire widePatcher                     (wideVsSpatialMix 0)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire linPatcher                      (wideVsSpatialMix 1)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire focusedPatcher                  (focusedVsSpatialMix 1)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire wideVsSpatialMix                (focusedVsSpatialMix 0)       (freq [procRate] [numOutputs] [fftBlockSize])
                           
             wire focusedVsSpatialMix             linFullSignalFTT              (freq [procRate] [numOutputs] [fftBlockSize])
             wire linFullSignalFTT                finalOut                      ([procRate] [numOutputs] [fftBlockSize])
             
             wire focusedVsSpatialMix             finalOut                      (freq [procRate] [numOutputs] [fftBlockSize])
                          
focused
wide
FOVToBeamMix
 0 0 0)
wireParam (
 0 0 0) (
BeamMixOverrideSwitch 1 0 0) true
BeamMixOverrideSwitch 0 0 0) (
VsSpatialMix 
 0 0) true
BeamGainCamDirSwitch 0 0 0)
BeamGainCamDirSwitch 1 0 0)
Patcher 
 0 0) (
BeamMixOverrideSwitch 2 0 0)
BeamMixOverrideSwitch 0 0 0)
 (defaultBeamGainCamDirSwitch 0 0 0)
 (defaultBeamGainCamDirSwitch 1 0 0)
BeamGainCamDirSwitch 2 0 0)
 (defaultBeamGainCamDirSwitch 2 0 0)
BeamGainCamDirSwitch 0 0 0) (
defaultBeamGainCamDirSwitch 0 0 0) (
linPatcher-sc.wav"     linPatcher 
            record "
focusedPatcher-sc.wav"     focusedPatcher 
            record "
focused-sc.wav"     (focused 2) 
            
debug_spatial_capture_graph
scmicselect
GetSpatialCaptureBoxRegistry_block_invoke
numInputs == 0 && numOutputs == 0 && "Bad number of ins or outs"
^v16@?0I8I12
chansel
GetSpatialCaptureBoxRegistry_block_invoke_2
numInputs == 1 && numOutputs == 1 && "Bad number of ins or outs"
scmx
GetSpatialCaptureBoxRegistry_block_invoke_3
numInputs == 2 && numOutputs == 1 && "Bad number of ins or outs"
paramsw
GetSpatialCaptureBoxRegistry_block_invoke_4
paramtx
GetSpatialCaptureBoxRegistry_block_invoke_5
auspatialcapture.dspg
spcp
outputChannelLayout
dft_v4.cpp
AUEchoCancelerV5::ProcessMultipleBufferLists error - wrong (%d) block size expected (%d)
disable search for IR peak
(I) IR peak delay in msec 1st ref chan
Fast Adapt: 0=off, 1=init conv, 2=init+re conv 3= init+re conv + init rate cal, 4=2+resettable
Run multiple iteration on Fast EC
Calculate posterior error
Enable Poly EC speedup option
Leakage threshold for poly EC speedup
Delta IR threshold for poly EC speedup
syy2sdd ratio threshold for Poly EC speedup
ir Ratio threshold for poly EC speedup
split eclee parts for poly EC
Only use odd order terms in poly EC reference
De-emphasized Echo to local voice threshold
De-emphasized Echo Flag
(I)De-emphasized 10*log10(syy/see)
(I)Eclee engergy in dB
Eclee engergy thresh low in dB
eclee active flag based on low thresh
---- UNUSED ----
Filter Length Management
Multi Channel Management
EC Health Telemetry (Read Only)
Performance/CPU Tuning
Double talk handling
Expert Mode
vpProcessDownlink_v9.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v9/vpProcessDownlink_v9.cpp
BeamformerTD.cpp
nMicsUsed
nBeams
BFFilterLength
Failed to retrieve beamforming filter length from input dictionary.
EQFilterLength
Failed to retrieve EQ filter length from input dictionary.
Description
NonZeroMics
EQSelectionFilter
BFFilter
aubmtd
VoiceProcessor.mInitLock
VoiceProcessor.mVolumeLock
VoiceProcessor.mProcessCountLock
VoiceProcessor_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/VoiceProcessor_v2.cpp
VoiceProcessorV2
Starting ... 
vp debug features are %s
vp_disable_downlink
VP Uplink
VP Downlink
Constructed!
~VoiceProcessorV2
VoiceProcessorV2 destroyed!
DeviceSupportsAdvancedVoiceProcessorChatFlavor
SetMode
Begin self-reinit (SetMode)
End self-reinit (SetMode)
operation mode = %i
SetDownLinkVolume
setdownlinkvolume failed because mSignaler can't be acquired within %u microseconds
setdownlinkvolume called with: user volume = %f
setdownlinkvolume: no need to change volume = %f
appspkrtel: ring buffer write error %d
appspkrtel: received %d samples, expected = %d
appspkrtel: tryer failed to acquire lock
appendreferencesignal: not OK to process
%s reference signal was not expected!
appendreferencesignal: failed to acquire uplink reader lock
FrontEndBlockSizeCheck
append signal (%s): <silence optimization, generating zeroes> num frames received = %u.
 hwio buff size = %u
 process callcount = %lu
append signal (%s): <block size mismatch>
CoreAudio: ***** VP BLOCK WARNING: TRANSIENT INCORRECT BLOCK CONFIG
warning: append signal (%s): <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG for over %.6f seconds *****
append signal (%s): <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
append signal (%s): <block size no longer mismatched>
append signal (%s): <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
FrontEndRefTimeStampHandler
ref sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
ref sample time jumped backwards
frontendreftshandler: ERROR: Ring Buffer error! %d
GetHardwareSafetyOffsets
error %d getting input safety offset
error %d getting output safety offset
Input safety offset of the aggregate device is %u
Output safety offset of the aggregate device is %u
GetHardwarePresentationLatency
error %d getting IOCycleUsage
error %d getting input latency
error %d getting output latency
Input latency of the aggregate device is %u
Output latency of the aggregate device is %u
input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, tap stream latency=%u, safety offset=%u, tap stream input safety offset=%u}
input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, safety offset=%u}
iocycleusage = %f
UpdateHWPresentationLatencyAndRefToMicDelay
negative mCorrectedPresentationDelay (%d) clamped to zero
realworld correction=%f, corrected latency=%d
after adjusting for ref-mic delay=%d samples (%f msec), corrected latency=%d, additional mic delay(@hwmic rate)=%u
srcandappendtoringbuff: overflow?!
InstantiateAU
InstantiateAU: couldn't instantiate 'aufx'|%s AU
InstantiateAU: couldn't find component 'aufx'|%s AU
ResetTimestampsAndInitializeVP
called initialize
called initializedlp
UpdateReferenceSignalFormat
Updating hwRef to match dlMix format:
 was: %s
 now: %s
Updating hwRef to match extHwRef format:
 was:%s
 now:%s
vp_enable_ramstad_src
GetAUStreamFormats
_vp<WARNING>: The DLNS isn't configured at an fft-friendly blocksize (%d vs %d), disabling it for now
PopulateAUPropsAndParamsLists
InstantiateAndConfigureEffectAU
Error in setting proerty ID %u to AU %s error %d
_vp<SERIOUS ERROR>: (%d) error setting property %d on %s, attenuating the dl final gain by 20dB
Error in setting parameter ID %u to AU %s error %d
_vp<SERIOUS ERROR>: (%d) error setting parameter %d on %s, attenuating the dl final gain by 20dB
instantiateandconfigureeffectau: error (%d) loading FIR coefficients!!! Setting FIR to passthrough
Unable to set not to allocate internal AU buffers with error (%d)
Error in initializing AU %s error %d
_vp<SERIOUS ERROR>: (%d) error initializing %s, attenuating the dl final gain by 20dB
instantiateandconfigureeffectau (%s): warning %d due to non-FFT friendly blocksize
instantiateandconfigureeffectau (%s): error %d
InstantiateAndConfigureAuxAU
InstantiateAndConfigureAuxAU: %s aux au failed to set property
ShouldUseOptimizedBlockSizeForFacePlant
use optimized block size for face plant =  %s
DumpState
VoiceProcessorV2::DumpToFile() - Dump file is not available
VoiceProcessor version = %u 
VP Disabled = %s.  
HW has vp = %s.  
Product: %s
Primary audio vocoder type = %s(%d) 
Driver-prescribed postprocessing input gain  = %f dB.  
Beam direction = %d 
HW Format REF: %s 
HW Format MIC: %s 
HW Block Size REF: %d 
HW Block Size MIC: %d 
    HW Trim Gain MIC(ch-%lu): %f dB 
    HW Trim Gain REF(ch-%lu): %f dB 
VP Output Format: %s 
REF Channel BitMap: %x, OUT Channel BitMap: %x 
HW MIC Channels: %s, BitMap: %x 
EP MIC Channels: %s, BitMap: %x 
Primary epmic index: %d 
SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max) 
Hw real-world correction: %f samples 
Ref-Mic Delay: %f msec 
    Pre-echo-processing Digital Input Gain: %f dB 
Post-echo-processing Digital Input Gain: %f dB 
Downlink Mix Gain: %f dB 
Downlink Final Gain Chn 0: %f dB 
Downlink Final Gain Chn 1: %f dB 
DL Format FEV: %s 
DL Format FEV Process: %s 
DL Format MIX: %s 
DL Block Size MIX: %d 
calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu 
calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu 
calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu 
HW preslatency & ref to mic delay: input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, latency=%u, safety offset=%u} 
Num Ref Ports = %u, Num Mic Ports = %u 
      : Ref Port #%lu=%s 
      : Mic Port #%lu=%s 
mono
_far_end_voice_mix_
gen_far_end_voice_nnvad.dspg
gen_far_end_voice_nnvad.austrip
gen_far_end_voice_nnvad.propstrip
nnvad.dspg
nnvad.austrip
nnvad.propstrip
echo_processing.dspg
emptyAcousticID
echo_processing_
kHz.austrip
kHz.propstrip
primary mic only
internal
SpectralProcessingHelpers.cpp
currently supported values are outputCount < inputCount < 2*outputCount
invalid input lengths
olaStack wrong size
ola wrong size
bad audio position
bad input length
bad output size
bad internal state size
mis-matched output sizes
processdl: tryer failed to acquire lock
processdl: not ok to process?!
vpProcessDownlink_v8.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v8/vpProcessDownlink_v8.cpp
bad mic-speaker delay: expected sample time diff: %.1lf, actual sample time diff: %.1lf
bad relative mic-ref TS
sprk sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
sprk sample time jumped backwards
processdl: <block size mismatch>
CoreAudio: ***** VP BLOCK WARNING: PROCESSDLAUDIO TRANSIENT INCORRECT BLOCK CONFIG
warning: processdownlinkaudio: <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 dl mix buff size = %u
dlmix asbd = %s
process dl callcount = %u
processdownlinkaudio: <block size mismatch>
CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESSDLAUDIO BAD BLOCK CONFIG for over %.6f seconds *****
processdownlinkaudio: <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
dl mix blk size = %u
dl mix asbd = %s
 process dl callcount = %u
processdownlinkaudio: SERIOUS ERROR: ioOutputData->mBuffers[0].mDataByteSize = %u, expected = %u
processdownlinkaudio: <block size no longer mismatched>
CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
processdownlinkaudio: <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
CoreAudio: ***** VP BLOCK WARNING: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
DL %f %f %f
DL ERROR, processing slower than RT - %f
DL ERROR, not being called in a timely manner - %f
ClickRemovalCore.mm
ClickRemovalLatencyHelper.h
ClickRemovalRecorder.h
unique_lock::try_lock: references null mutex
unique_lock::try_lock: already locked
CLSPKernel_v5.cpp
[Channel 
Sample rate: 
VP mode: on
VP mode: off
ElecModel
DispModel
CLTModule
DispCtlr
ThermCtlr
DelayLine
ClipBuffer.size = 
scratch buffer.size = 
vDelayLine
iDelayLine
SpeakerPowerModel
SpeakerPowerMeas
DSPBlocks.h
preGain = 
postGain = 
lr buffer size = 
ng buffer size = 
ptg buffer size = 
mr_elecModel
postProcess
analyzeTargetGain
getTemperature
ag = 
, Rshunt = 
, Rampout = 
mc_ageff = 
, invRt = 
, invThermalPeriod = 
Reb = 
, phi = 
, mt = 
, ct = 
, kt = 
a_t_inv = 
, TlimErrDecayTime = 
, TlimAdjCap = 
, pilotAmplHi = 
, pilotAmplLo = 
pilotAmplUpperThres = 
, pilotAmplLowerThres = 
, pilotDecayTime = 
, pilotDecayTimeStage2 = 
, pilotEnableThres = 
, RebRef = 
RebRefTemp = 
, mc_gain = 
PilotTempSensor:
PilotGen:
TLimErrSmoother:
pilotToneGain:
ptInterp1:
ptInterp2:
thermalLimit = 
HardLimitHeadroom = 
AmbientTemp = 
FFSpeedupFactor = 
safeLimit = 
safeLimitTimeMin = 
safeLimitOffset = 
m_vc:
m_vg:
m_vcff:
thermalPeriod = 
thermalGainTimerInitVal = 
safeLimitTimerInitVal = 
vcFilt:
mgFilt:
vcffFilt:
thermalGain:
sThermalGain1:
sThermalGain2:
sPowerCtrlGain1:
sPowerCtrlGain2:
b0 = 
b1 = 
T_sett = 
tau = 
DelayTime = 
DelaySamples = 
delayBuffer.size = 
delayedInput.size = 
pwrAvgWinSec = 
relativeSpkPwrPeriod = 
invRelSpkPwrPeriod = 
spkPwrPeriod = 
AUFTSpatialAC
RenderAllNeutral
LinearMapByPercent
LinearMapByGeometry
1/2 wave
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
FaceUp
FaceDown
Set via input param 213 (UI)
Set via input param 200 (meta)
Fixed to Unknown
Fixed to Portrait
Fixed to PortraitUpsideDown
Fixed to LandscapeLeft
Fixed to LandscapeRight
Fixed to FaceUp
Fixed to FaceDown
Do not use prominence, use InCanvas
AND <=prom limit with InCanvas
OR <=prom limit with InCanvas
Use <=prom limit only
Center if Cx=Cy=0
Center if X=0 or Y=0
Center if Cx=Cy=0||X=0||Y==0
AUFTSpatialACEnableRealTimeLogs
:%03lld
OrientationParams
WindowParams
InStreamParams.
OutStreamParams.
(GW) Mode AU is using the drive spatialization
(GW) (TEST ONLY, false for ship) Inject fake meta data
(GW) (TEST ONLY) num of users to inject fake meta data
(GW) Go to neutral az and el if only one active input stream
(GW) Go to neutral az and el if only one active output stream
(GW) Max number of streams assigned to main canvas
(GW) Max number of streams assigned to list/roster
(GW) Enable pan to adapt to FT window aspect ratio
(GW) Enable Azimuth panning when in portrait
(GW) Enable Elevation panning when in landscape
(GW) Minimum azimuth for pan when in portrait
(GW) Maximum azimuth for pan when in portrait
(GW) Minimum azimuth for pan when in landscape
(GW) Maximum azimuth for pan when in landscape
(GW) Minimum elevation for pan when in portrait
(GW) Maximum elevation for pan when in portrait
(GW) Minimum elevation for pan when in landscape
(GW) Maximum elevation for pan when in landscape
(GW) Desired render distance (m)
(GW) Desired reverb-blend (shared with all users)
(GW) Exponent for energy values for (X,Y) weighting
(GW) Enable(true)/disable(false) single-user decorrelation, left channel
(GW) Enable(true)/disable(false) single-user decorrelation, right channel
(GW) Enable(true)/disable(false) multi-user decorrelation, left channel
(GW) Enable(true)/disable(false) multi-user decorrelation, right channel
(GW) Playback output orientation control (-1==use param 200, -2==use param 213)
(GW) (true) Enable switching off 2nd EC ref in 1:1 FaceTime
(GW) (true) Enable switching off 3rd EC ref in 1:1 FaceTime
(GW) Fake portrait panning with landscape (some iPhones)
(GW) Screen orientation value used for panning control (-1==use param 200, -2==use param 213)
(GW) Use prominence in canvas/grid assignments (0=no, 1=AND InCanvas, 2=OR InCanvas, 3=OnlyProm 
(GW) Max prominence value for a stream to be assigned to canvas/grid
(GW) Center client on missing meta:0:ignore, 1:Cx=Cy=0, 2=XorY=0, 3:Cx=Cy=0||(X==0)||(Y==0).
(GW) Use U+1 specific tuning values for gain, reverb and distance
(GW) Use U+1 specific tuning only if Cx=Cy=0
(GW) If using U+1 tuning, interpolate U++/U+1 in transitions
(GW) Interpolation time in transitons (sec)
(GW) U+1 specific render distance (m)
(GW) U+1 reverb-blend
(GW) U+1 specific gain (dB)
(GW) U++ specific gain (dB)
(GW) Assumed orientation of device 
(GW) Geo model screen width in cm landscape (cm)
(GW) Geo model screen height in cm in landscape (cm)
(GW) Geo model user viewing distance from screen (cm)
(GW) Rel az of eye->screen plane to speaker 0 deg az(deg)
(GW) Rel el of eye->screen plane to speaker 0 deg el(deg)
(GW) Device screen width in points 
(GW) Device screen height in points 
(GW) FT window x-position in points (from top left corner)
(GW) FT window y-position in points  (from top left corner)
(GW) FT window width in points 
(GW) FT window height in points 
(G) Voice activity
(GW) Assumed orientation of user interface 
(GR) Control output for decorrelator, left channel
(GR) Control output for decorrelator, right channel
(GR) Monitor of internal screen orientation within controller
(GR) Numer of active streams detected
(GR) Enable(true)/disable(false) the 2nd EC ref
(GR) Enable(true)/disable(false) the 3rd EC ref
(GR) Monitor of internal audio render orientation within controller
(IR) Output stream assignment
(IRW) ID attached to user by AVC
(IRW) Is stream active in call
(IRW) Is stream's video on main grid
(IRW) Is stream's video currently visible
(IRW) Prominence level of a stream
(IRW) User tile x-position within FT window in points
(IRW) User tile y-position within FT window in points
(IRW) User tile z-position within FT window 
(OR) User audio render azimuth (degrees: -180:180)
(OR) User audio render elevation (degrees: -90:90)
(OR) User audio render distance (meters: 0:10000)
(OR) User audio render gain (dB: -120:20)
(OR) User rate scalar (fracton: 0.5:2.0)
(OR) Bus Enable (0 or 1)
(OR) Minimum input gain constraint (0:10)
(OR) Maximim input gain constraint (0:10)
(OR) Dry/Wet equal-power reverb blend (0:100)
(OR) Global reverb gain (-40:40)
(OR) Occl LP filter atten at 5KHz (dB: -100:0)
(OR) Obst LP filter atten at 5KHz (dB: -100:0)
log.
.csv
AUSpeakerProtectionV3.cpp
SpeakerCalibrationProperty Ch 
SpeakerDefaultName
index < numSpeakers
Speaker settings
Left Speaker Settings
Right Speaker Settings
Speaker 
clsp_logging_level
___AUID_
_(closedloop_
_(openloop_
AUSP_CPMS
Audio input bus channel-count (
) is greater than the number of channels configured by the plist (
). Cannot initialize.
Telemetry input bus channel-count (
) does not match the telemetry order set via the property (
 elements).
sppv3_channel_count
sppv3_sample_rate
sppv3_closed_loop_enabled
sppv3_voice_processor_mode
sppv3_max_frames_per_slice
sppv3_uses_fixed_block_size
sppv3_uses_closed_loop
clsp_log_input_stream
clsp_log_output_stream
audioIn.caf
telemetryIn.caf
audioOut.caf
clsp_srdc
clsp_caltemp
clsp_srdc_r
clsp_caltemp_r
exception '
. Deleting kernels. '
SetClosedLoopEnabled
SafeTlim
SafeTlimTimeMin
SafeTlimOffset
LookaheadDelay_ms
spk pwr averaging window time
modeled speaker power
measured speaker power
None   
Pilot Tone
LP MLS
Open Loop
Convoy Limit
Convoy Adaptive
Adaptive
Convoy Limit v2
Tcal
Coffset
Cmin
Cmax
clsp_enable_closed_loop
SpeakerCalibrationProperty:
SpeakerCalibrationProperty Ch = 
ChannelID
CLParams
NumChannels
ConvoyDataSourceOverride
ChannelSpecificParams
AmpEfficiencyCoefs
PowerSmootherTimeCoefs
PowerGainAttackReleaseCoefs
PowerSmoothingStrategy
BeforeAmpEfficiencyModel
AfterAmpEfficiencyModel
PowerGainLimit_dB
was not
%s failed
%s ('%s') failed
 DCR = 
  SpeakerCalibration
 CalTemp = 
 Q = 
 (Hz)
 [DisplacementCalibration not present]
 [ConvoyCalibration not present]
 Kms = 
 (N/m)  
  DisplacementCalibration
 Le = 
 Bl = 
 (N/A)
 Mms = 
 (g)
 Rms = 
 (kg/s)
 (pF)  
  ConvoyCalibration
 Coffset = 
 (pF)
 Cmin = 
 Cmax = 
 voltage
 current
 PDM
Telemetry.h
Yes, 
No, 
CAExtAudioFile.h
couldn't convert path to CFURLRef
ExtAudioFileCreateWithURL
ExtAudioFileSetProperty
ExtAudioFileWriteAsync
ExtAudioFileClose
clsp_allow_restore
thermal protection enabled
CPMS power control enabled
CPMS power control closed loop
displacement protection enabled
thermal/power control gain attack time
thermal/power control gain release time
ambient temperature
peak attack time
peak decay time
feedback integration time
thermal gain
power control gain
displacement gain
temperature limit
hard temp limit headroom
temperature
OL temperature
pilot tone enabled
CL thermal feedback enabled
a_t_inv
LPMLS pre clip level
mu mechanical (PU)
Max relative displacement
abs(Min relative displacement)
Convoy Dirty Buffer Sticky Flag
Convoy Block Flag
Convoy X Limit Relative (%)
Convoy Norm Factor
Convoy PeakFinder Threshold Upper
Convoy PeakFinder Threshold Lower
Convoy Peak Detector Attack Time
Convoy Peak Detector Release Time
Convoy Norm Factor Cap Upper
Convoy Norm Factor Cap Lower
Convoy Norm Factor Attack
Convoy Norm Factor Release
Convoy Peak Ratio Positive Block Threshold
Convoy Peak Ratio Negative Block Threshold
Convoy Min Excursion
Convoy Max Excursion
Convoy Relative X Limit Upper
Convoy Relative X Limit Lower
Convoy Peak Ratios InWindow Count Threshold
Convoy Norm Factor Threshold in %
Convoy Buffer Dirty Count Threshold
CLSPBlocks.h
auversion
thiele_small_kms
thiele_small_le
thiele_small_bi
thiele_small_mms
thiele_small_rms
thiele_small_crest
thiele_small_coffset
thiele_small_cmin
thiele_small_cmax
thiele_small_re
thiele_small_t
thiele_small_qts
thiele_small_fs
thiele_small_data_source_id
Speaker calibration data is missing '
' key
mu_LeUni
mu_Mechanical
AmbientTemp
ThermalGainAttackTime
ThermalGainReleaseTime
PeakDispAttackTime
PeakDispDecayTime
DispFBIntegrationTime
TempSenseWindowTime
TempSenseSmoothingTau
TlimErrDecayTime
PilotAmplHi_dB
PilotAmplLo_dB
PilotUpperThres
PilotLowerThres
PilotDecayTime
PilotFreq
LPMLSPreGain
LPMLSPostGain
LPMLSLowerCorner
ThermalMeasurementMethod
DisplacementProtectionType
ConvoyMinExcursion
ConvoyMaxExcursion
ConvoyPeakFinderThresholdUpper
ConvoyPeakFinderThresholdLower
ConvoyNormFactorCapUpper
ConvoyNormFactorCapLower
ConvoyPeakRatioPosBlockThreshold
ConvoyPeakRatioNegBlockThreshold
ConvoyRelXLimUpper
ConvoyRelXLimLower
ConvoyNormFactorAttack
ConvoyNormFactorRelease
ConvoyPeakDetectorAtkTime
ConvoyPeakDetectorRelTime
ConvoyPeakRatiosInWindowCountThreshold
ConvoyNormFactorThreshold
ConvoyBufferDirtyCountThreshold_ms
ParamStructWrappers.h
PilotDecayTimeStage2
PilotEnableThres
ExtAudioFileWrite
updateThermalState
mr_CLTModule
/usr/lib/libAudioStatistics.dylib
CreateSharedCAReportingClient
CAReportingClientCreateReporterID
CAReportingClientCreateReporterIDFromSessionID
CAReportingClientCreatePerformanceReporterID
CAReportingClientStartReporter
CAReportingClientStopReporter
CAReportingClientSetAudioServiceType
CAReportingClientGetAudioServiceType
CAReportingClientSetConfiguration
CAReportingClientCopyConfiguration
CAReportingClientSendMessage
CAReportingClientSendSingleMessage
CAReportingClientDestroyReporterID
clsp_resetThermalState
v12@?0B8
Thermal_LookaheadDelay_ms
Thermal_SafeTlim
Thermal_SafeTlimTimeMin
Thermal_SafeTlimOffset
Thermal_AmbientTemp
Thermal_GainAttackTime_s
Thermal_GainReleaseTime_s
Disp_PeakAttackTime_s
Disp_PeakDecayTime_s
Disp_FBIntegrationTime_s
OL_thermal
Rshunt
Reb_ref
Rampout
T_sett_vc
tau_Tvc
T_sett_mg
tau_Tmg
ThermalFFSpeedupFactor
HardTempLimitHeadroom
TemperatureLimit
OL_disp
x_lim
g_bw
SpeakerName
SpeakerGroup
IgnoreTelemetry
100ms_TC=
1000ms_TC=
Thermal_TC=
InstanteneousAttack
InstanteneousRelease
100msAttack
100msRelease
1000msAttack
1000msRelease
ThermalAttack
ThermalRelease
inst_A=
inst_R=
100ms_A=
100ms_R=
1000ms_A=
1000ms_R=
thermal_A=
thermal_R=
EnableDisplacementControl
EnableThermalControl
EnableCPMSControl
EnableCPMSClosedLoopControl
AUControlFreak_ViewFactory
Output gain function
Lookahead
FastGainReleaseTime
Threshold
Spare05
Spare06
EnvelopeAveragingTime
TruePeak
Spare09
Spare10
Spare11
Spare12
OutputGain
SlowGainReleaseTimeMinimum
AudioActivityWindowSize
SlowGainReleaseTimeMaximum
Spare18
AudioActivityHoldTime
ParameterRampTime
MinFastGain
Music
Movie
Speech
MovieWithMozartSurroundMovieLateNight
MovieWithMozartSurroundMovieLateNight_Extreme
AUADAMSink.cpp
AUADAMSink
AllPassComb.cpp
!mDelayBuf.empty()
mScratchBuf.size() == mDelayBuf.size()
mCircularIndex < mDelayBuf.size()
HlcSuppressor.cpp
x.size() >= result.size()
vpDebug_DefaultsOverride.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_DefaultsOverride.cpp
ReadAndApplyDefaultsOverride
DEFAULTS OVERRIDE (%s): %s -> %s
DEFAULTS OVERRIDE (%s): %d -> %d
DEFAULTS OVERRIDE (%s): %i -> %i
DEFAULTS OVERRIDE (%s): %f -> %f
AUThermalSpeakerProtection_ViewFactory
Moving Average Time
Gain smoothing filter frequency
speakerType A: Amplifier sensitivity [V/Fs]
speakerType A: VoiceCoil: DC resistance [Ohms]
speakerType A: VoiceCoil: thermal resistance [C/Watt]
speakerType A: Magnet: thermal resistance  [C/Watt]
speakerType A: Voice Coil: thermal time constant [s]
speakerType A: Magnet: thermal time constant [s]
speakerType A: Ambient temperature, [C]
speakerType A: Temperature limit [C]
speakerType A: Attack time
speakerType A: Release time
speakerType A: Temperature hard limit headroom [C]
speakerType A: Gain link
speakerType A: Audio channel assignment
speakerType B: Amplifier sensitivity [V/Fs]
speakerType B: VoiceCoil: DC resistance [Ohms]
speakerType B: VoiceCoil: thermal resistance [C/Watt]
speakerType B: Magnet: thermal resistance  [C/Watt]
speakerType B: Voice Coil: thermal time constant [s]
speakerType B: Magnet: thermal time constant [s]
speakerType B: Ambient temperature, [C]
speakerType B: Temperature limit [C]
speakerType B: Attack time
speakerType B: Release time
speakerType B: Temperature hard limit headroom [C]
speakerType B: Gain link
speakerType B: Audio channel assignment
speakerType C: Amplifier sensitivity [V/Fs]
speakerType C: VoiceCoil: DC resistance [Ohms]
speakerType C: VoiceCoil: thermal resistance [C/Watt]
speakerType C: Magnet: thermal resistance  [C/Watt]
speakerType C: Voice Coil: thermal time constant [s]
speakerType C: Magnet: thermal time constant [s]
speakerType C: Ambient temperature, [C]
speakerType C: Temperature limit [C]
speakerType C: Attack time
speakerType C: Release time
speakerType C: Temperature hard limit headroom [C]
speakerType C: Gain link
speakerType C: Audio channel assignment
Gain link all audio channels
General
Speaker type A
Speaker type B
Speaker type C
microphone
reference
VoiceProcessor_v7.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v7/VoiceProcessor_v7.cpp
couldn't load %s trim gains from MobileGestalt
couldn't parse %s trim gains - CF data is not invalid
couldn't parse %s trim gains - raw data is NULL
couldn't parse %s trim gains - raw data size is not valid
loaded %s trim gains header from MobileGestalt: {version=%d, size=%d, count=%d}
couldn't parse %s trim gains - data structure version %d is not supported
couldn't parse %s trim gains - data structure size is not valid
loaded %s trim gains from MobileGestalt: {%s}
NoiseProfile
AUOneChannelNS.cpp
NonstationaryNoiseEstimator.cpp
index calculation error
invalid output size
intermediate is too small!
APACMetadataTrace
onAPACMetadataAvailable
AUVirtualBass_ViewFactory
Automatic Level Control
Monitor
Low End Band Pass Lower Frequency
High Pass Filter Corner Frequency
Harmonics Band Pass Upper Frequency
Low End Band Pass Lower Order
Low End Band Pass Upper Order 
Harmonics Band Pass Lower Order
Harmonics Band Pass Upper Order
High Pass Filter Order
Harmonic Gain
Low End Blend In Gain
Peak Follower Lower Limit
Peak Follower Attack Time
Peak Follower Release Time
Activate Harmonics Compressor
Harmonics Compressor Threshold
Harmonics Compressor Ratio
Harmonics Compressor Make Up Gain
Harmonics Compressor Knee Width
Harmonics Compressor Attack Time
Harmonics Compressor Release Time
Non Linear Device Type
Soft Clipper Amplitude
Soft Clipper Slope
Soft Clipper Offset
Aggressive Clipper Amplitude
Aggressive Clipper Slope
Aggressive Clipper Offset
Exponential Base
Exponential Amplitude
Polynomial Coeffcient A0
Polynomial Coeffcient A1
Polynomial Coeffcient A2
Polynomial Coeffcient A3
Polynomial Coeffcient A4
Polynomial Coeffcient A5
Polynomial Coeffcient A6
Polynomial Coeffcient A7
Polynomial Coeffcient A8
Polynomial Coeffcient A9
Peak Follower Hold Time
Peak Follower Smoothing Time
Harmonics Compressor Hold Time
Harmonics Compressor Smoothing Time
Butterworth Low Pass
Butterworth High Pass
Resonant Low Pass
Resonant High Pass
Band Pass
Band Stop
Low Shelf
High Shelf
Resonant Low Shelf
Resonant High Shelf
Max Gain for EQ1
Max Gain for EQ2
Max Gain for EQ3
Max Gain for EQ4
Current Gain
PreGain (dB)
Noise SPL
global gain
csdelay
Desired delay in millisecond
AUToneMeister_ViewFactory
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary)
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error: AU has %d channels, uninitialized?
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error : data
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) detected binary plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) detected text plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error: unknown plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) successfully imported parameters!
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error : importer : %s
GroupBypassSwitches
GroupLockSwitches
CrossFadeDuration
MaxAllowedFilterOrder
RTAchannels
ChannelLinesDrawingOffset
RTAdecayTime
PhaseFlipChannels
GroupVisibleSwitches
ChannelMuteSwitches
State
Frequency 0
Frequency 1 or Quality
Frequency 2 or Order
Frequency 3 or Phase
Filter Channel Mask
Phase Channel Mask
System Volume Range Start
System Volume Range Stop
automated filter
automated filter state
set point A
set point B
set point B gain
set point B frequency
set point M enable
set point M
set point M gain
set point M frequency
Filter 00
Filter 01
Filter 02
Filter 03
Filter 04
Filter 05
Filter 06
Filter 07
Filter 08
Filter 09 
Filter 10
Filter 11
Filter 12
Filter 13
Filter 14
Filter 15
Filter 16
Filter 17
Filter 18
Filter 19 
Filter 20
Filter 21
Filter 22
Filter 23
Filter 24
Filter 25
Filter 26
Filter 27
Filter 28
Filter 29 
Filter 30
Filter 31
Filter 32
Filter 33
Filter 34
Filter 35
Filter 36
Filter 37
Filter 38
Filter 39 
Filter 40
Filter 41
Filter 42
Filter 43
Filter 44
Filter 45
Filter 46
Filter 47
Filter 48
Filter 49 
VariableEQ general
variable filter 0
variable filter 1
variable filter 2
variable filter 3
variable filter 4
variable filter 5
variable filter 6
variable filter 7
variable filter 8
variable filter 9
AUToneMeister messenger
Band-Shelve
Bell
Low-High-Shelve
Low-Pass
High-Pass
Band-Pass
Notch
Tone-Tilt
Allpass
Phase-Equalizer
Low-Shelve with Q
High-Shelve with Q
Low-Pass with Q
High-Pass with Q
active
active + enabled
selected + enabled
selected + active
selected + active + enabled
SNREstimator.h
PilotTempSensor.cpp
PTSamplePeriod = 
PTPeriodNormFactor = 
Gsmooth = 
AnalysisFreq = 
Goertzv:
Goertzi:
a1 = 
, s1 = 
, s2 = 
DesiredWindowTime = 
DesiredAnalysisFreq = 
SmoothingTau = 
Reb_20C = 
RebScale = 
maxBlockSize = 
noiseSampleRate = 
noiseBandLowerCorner = 
SamplePeriod = 
PeriodNormFactor = 
DCBlkV = 
DCBlkI = 
CLSPKernel_v3 CalcCoeffs physical params Ch %u: fs=%f; Reb=%f; Rampout=%f; mt=%f; ct=%f; kt=%f; ag=%f; g_bw=%f; mQ_d=%f; phi=%f; x_lim=%f; ageff=%f; Q_cd=%f; Q_cn=%f; w_d=%f; LookaheadDelay=%f; 
CLSPKernel_v3 CalcCoeffs thermal params Ch %u: Fs_th=%f; Tc_vc=%f; Tc_mg=%f; T_sett_vc=%f; T_sett_mg=%f; FFfactor=%f; 
CLSPKernel_v3 coeffs Ch %u:
 ff_ac1=%f;
 ff_bc0=%f;
 ff_bc1=%f;
 TGainTimerInit=%d;
 mHardAttack=%f;
 DelaySamples=%d;
Element: %d
AudioComponentDescription
AUProperties
AUParameters
MeanNonspeechRegionSec
MeanSpeechRegionSec
ObservationModelParams
array::at
SphericalHeadSpatializer
matrixNumCols
matrixNumRows
matrixData
preclip gain dB
user gain dB
volume smooth time
volume decay smooth time
ceiling dB
softclip level dB
look ahead
All Pass
speex noise supp mode
speex noise supp level
speex speech probability
speex occlusion mode
speex occ_2ndMic confd
speex ns_auto_mode
speex auto_blend_alpha
speex 1mic vad
speex 2mic vad
speex auto NS level
loadAUPreset
loadFactoryPreset
/aufx-
-appl-headphone.aupreset
personalized-
aumx-3dem-appl-headphone-general-
multichannel-delta.aupreset
aumx-3dem-appl-headphone-movie-
Built-In Speaker Media Playback
Headphone Media Playback Default
Headphone Media Playback Movie
aumx-3dem-appl-headphone-general-multichannel.aupreset
aumx-3dem-appl-headphone-movie-multichannel.aupreset
%s -> %s
In %d -> Out %d
Inputs
Outputs
Diagonal
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v6/vpProcessUplink_v6.cpp
vpProcessUplink_v6.cpp
suppressor_classV4.cpp
default audio channel layout tag
afSTFTWrapper.cpp
fltbAnalysisSerializedVector
inVectorSize == mnHops * mhopSize * mnInputs
fltbAnalysisMatrix
inMatrix.NumRows()==mnInputs
inMatrix.NumCols()==mnHops*mhopSize
outputMatrix.size()==mnumBands
outputMatrix[0].NumRows()==mnOutputs
outputMatrix[0].NumCols()==mnHops
fltbSynthesisVector
ioTD.size() >= mnOutputs
AULoudnessInNoise.cpp
HearingThreshold
Failed to retrieve Microphone Sensitivity/Hearing Threshold from input dictionary !
nRefLevs
Failed to retrieve number of Levels from input dictionary.
Too many Reference Spectrums.
RefLevels
DecisionThresholds
spreadingMatrixSmall
spread_left_UInt32
spreadingMatrixSmall_Lengths_UInt32
Mic2ErpTx
FreqWeight
RefSpecAtRefMic
RefSpecSpreadAtErp
DecisionThresholdsMixed
auloudnessinnoise
RawLoudness
NormLoudness
LoudnessPercentile
Audibility
Levels
Operating mode: 0-Assess current lev, 1-Estimate all levs
Matching criterion to find current loudness (0=closest exceeding 1=closest)
Index of the noise spectrum in Q used to normalize loudness
Loudness Percentile Interval [sec]
Percentile to use (0-100%)
0-Ignore VAD, 1-Use Extern VAD with Thresh, 2-Threshold CV, 3-Threshold Echo/Play, 4=1or2, 5=1or3, 6=1or2or3
(input) Threshold on Soft VAD
(input) Threshold on Clean Voice for a VAD (dBfs)
(input) Threshold on Echo/Play for a VAD (dBfs)
(input) Minimum frequency used for sensing (Hz) 
(input) Maximum frequency used for sensing (Hz) 
(input) Power law p used in loudness 
(input) Power law Q used in loudness 
(input dyn) Current Level
(input dyn) External Soft VAD value
(output) Normalized Loudness for current frame
(output) Raw Loudness for current frame
(output) Percentile loudness 
(output) Audible Level: -1-Not Calculated 0-InAudible, 1-Maybe Audible, 2 Audible
(output) Used Level from array of available Levels in plist
(output) Index which increments (wraps at 32,000) when Audibility/Percentiles are updated
(output) Mean Power of estimated noise spectrum (dB) 
LimitWindBoost.cpp
numChans > 0
blockSize > 0
sampleRate > 0.0f
mInitialized
propagateParameterChanges
getParameter
index <= mParameter.size()
refMicEnergy.size() >= mFcBinLimitWindBoost
beam.size() >= mFcBinLimitWindBoost
isSensorNoise
getSmoothedCrossoverIndex
MicSense_Core.cpp
psdburg
psd.size() >= mCplxVectorSize
arburg
length > 0
mTmpVector5.size() >= length
mTmpVector2.size() >= length
mTmpVector3.size() >= length
mTmpVector1D.size() >= 2 * (order + 1)
numChannels == output.size()
input[0].size() >= numFrames
mTelephonyMicDSPSettingsDict != nullptr
InvalidPropertyValue
mTelephonyRefDSPSettingsDict != nullptr
mPowerBudget != nullptr
muted_talker_detection
inDataSize >= sizeof(UInt32)
BadPropertySize
inDataSize == sizeof(UInt32)
inDataSize == sizeof(Float32)
inDataSize >= (mMicTrimGainsDB.size() * sizeof(Float32))
inDataSize == sizeof(CFArrayRef)
inDataSize >= (mRefTrimGainsDB.size() * sizeof(Float32))
inDataSize == sizeof(CFDictionaryRef)
inDataSize >= (mNumMetricsReporterIDs * sizeof(CAReporterID))
inDataSize >= sizeof(Float64)
inDataSize >= sizeof(CFDictionaryRef)
inDataSize >= (mNumSpeakerInputDataSource * sizeof(UInt32))
inDataSize >= sizeof(SpatialHeadTrackingConfiguration)
inDataSize >= sizeof(Float32)
vpProperties.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpProperties.cpp
setproperty: thermal budget on AU (%d); count = %u
setproperty: AU (%d) enabled = %d, null = %d
setproperty: thermal budget dict is empty
setproperty: spatial metadata = "%s"
setproperty: spatial metadata
setproperty: media chat old volume:[%f], new volume:[%f]
setproperty: bypass =%d
setproperty: mute uplink output =%d
vp_mute_output
setproperty: mute downlink voice =%d
vp_mute_downlink_voice
setproperty: enableagc=%d (currently: enableagcdefault=%d, clientsetenableagc=%d, agc=%p).
vp_enable_agc
Expanse
setproperty: current state of media chat = [%s], new state of media chat = [%s]
Begin self-reinit (kVPProperty_EnableMediaChat)
End self-reinit (kVPProperty_EnableMediaChat)
setproperty: feature was not enabled
setproperty: media chat for vp version = %u is not supported
setproperty: current state of spatial chat = [%s], new state of spatial chat = [%s]
Begin self-reinit (kVPProperty_EnableSpatialChat)
End self-reinit (kVPProperty_EnableSpatialChat)
setproperty: spatial chat for vp version = %u is not supported
inDataSize == sizeof(SpatialHeadTrackingConfiguration)
setproperty: spatial head tracking configuration with mode %u and head tracking %s
Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s])
End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s ]
Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s])
End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s ]
setproperty: current state of media playback on external device = [%s], new state of media playback on external device = [%s]
setproperty: chat flavor value changed to = [%s]
Begin self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
End self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
Voice isolation not supported, ignoring incoming property
disableVP <= 1
vp_disable_vp
Begin self-reinit (kVPParameter_DisableVP)
End self-reinit (kVPParameter_DisableVP)
TRUE
FALSE
setproperty: disable vp = %s.  
setproperty: HwHasVP got invalid data
vp_hw_has_vp
Begin self-reinit (kVPParameter_HwHasVP)
End self-reinit (kVPParameter_HwHasVP)
setproperty: hw has vp = %s.  
(inDataSize % sizeof(Float32)) == 0
micTrimGainsCF.is_valid()
micTrimGainsCF->get_size() != 0
trim_gain_data_source_id
value->has_key(kVirtualAudioPortPropertyTrimGainsCFDataSourceIDKey)
value->has_key(kVirtualAudioPortPropertyTrimGainsCFGainDBKey)
failed to set microphone trim gains property due to exception
refTrimGainsCF.is_valid()
refTrimGainsCF->get_size() != 0
failed to set reference trim gains property due to exception
Begin self-reinit (kVPProperty_SpeakerCalibrationDataCF)
End self-reinit (kVPProperty_SpeakerCalibrationDataCF)
vp_vocoder_type_int
Begin self-reinit (kVPProperty_PrimaryCodecType)
End self-reinit (kVPProperty_PrimaryCodecType)
setproperty: primary audio vocoder type = %s(%d) 
inDataSize == sizeof(Float64)
vp_vocoder_sample_rate
Begin self-reinit (kVPProperty_PrimaryCodecSampleRate)
End self-reinit (kVPProperty_PrimaryCodecSampleRate)
setproperty: re-initializing speech enhancer; old ul blk sz = %u; new ul blk size = %u; old ul sr = %lf; new ul sr = %lf
setproperty: primary vocoder sample rate = %f 
Begin self-reinit (kVPProperty_TelephonyMicDSPSettings)
End self-reinit (kVPProperty_TelephonyMicDSPSettings)
setproperty: mic custom dsp settings
Begin self-reinit (kVPProperty_TelephonyRefDSPSettings)
End self-reinit (kVPProperty_TelephonyRefDSPSettings)
setproperty: ref custom dsp settings
(beamDirection == kAUBeam2BeamIndex_Front) || (beamDirection == kAUBeam2BeamIndex_Back)
vp_beam_direction
top front mic
top back mic
setproperty: beam former direction = %s
setproperty: chat flavor = %u
setproperty: hardware volume =%f dB
AU HLC exists in the VP chain applying HW vol =>%f
[VolumeLimit] AUSPLMeter exists in the VP chain; applying HW vol =>%f
[VolumeLimit] SPLTarget update %f
[VolumeLimit] Setting target LKFS on LDNM to %f
[VolumeLimit] Failed to et LKFS from AUSPLMeter. Error = %d
setproperty: is tap stream enabled  = %d
vp_speech_activity_listener_for_mtd
MutedSpeechActivityEventListener is registered with VP
True
False
Begin self-reinit (kVPProperty_MixStereoToMono [%s])
End self-reinit (kVPProperty_MixStereoToMono [%s]
Begin self-reinit (kVPProperty_ContinuityCaptureMode
End self-reinit (kVPProperty_ContinuityCaptureMode
gSpatialMetadataSPI
EndpointVAD
EndpointVAD2
EndpointVAD3
CLSPKernel_v4.cpp
CalTempRangeMax
CalTempRangeMin
RebRangeMax
RebRangeMin
a_t_20C
a_t_35C
RdcScale
TlimAdjCap
VPwrThres
IPwrThres
CapScale
ConvoyDelay_ms
ConvoyPeakFinderWindowTime_ms
ConvoyXLimIncrement_dB
ConvoyLimAttack
ConvoyLimRelease
ConvoyFilterCoeffs
ParameterUpdaterConfig
VMONScale = 
IMONScale = 
RdcScale = 
TempCo20 = 
TempCo35 = 
RebMin = 
RebMax = 
CalTempMin = 
CalTempMax = 
TlimAdjCap = 
VPwrThres = 
IPwrThres = 
ParameterUpdaterConfig present = 
capScale = 
minExcursion = 
maxExcursion = 
delay ms = 
peakFinderWindowTime ms = 
posPeakFinderThreshold = 
xLimIncrement_dB = 
normFactorAtk = 
normFactorRel = 
dft_v2.cpp
AUAGCV2.cpp
Modified RMS
Periodicity
Sparsity
Both
Either
agc2
Total gain
Averaging method
A weighting
Exp. window length (99%)
Dead zone width
Gain increase slew rate/sec
Gain decrease slew rate/sec
Max gain
Min gain
Min data for gain change
Optimum data for gain change
Peak thd (relative)
Dead zone centering
Centering gain
Centering exp. window length (99%)
Centering slew rate/sec
Noise SPL based gain limiting
Noise SPL estimate (from NS)
Gain limit relative to max
Gain limiting thd SPL
Gain limiting slope
Gain limiting hysteresis
Gain limiting slew rate/sec
Gain leak during silence
Gain leak pre delay
Gain leak slew rate/sec
Post gain (between AGC & limiter)
Limiter thd
Limiter exp. window length (99%)
Limiter attack slew rate/sec
Limiter release slew rate/sec
Level-based VAD
VAD window length (rectangular)
Absolute silence thd
Ext. speech prob estimate (from NS)
Ext. speech prob thd
Minimum tracking level
Minimum tracking length
Minimum tracking VAD thd
Soft clipping
Calibration mode (turns AGC off)
Calibration
Calibration/AGC target level
Non-level-based VAD
VAD state: 1=periodicity; 2=sparsity; 3=both
LPC block size
LPC order
LPC bandwidth expansion
Autocorrelation length
Min pitch frequency
Max pitch frequency
Periodicity smoothing TC
Periodicity background smoothing TC
Periodicity thd above background
Current residual periodicity above smoothed background
Sparsity blocksize
Sparsity smoothing TC
Sparsity background smothing TC
Sparsity thd above background
Current residual sparsity above smoothed background
Noise Dither Enabled
Pre gain
Limiter
ConvoyDisplacementControllerV2
ConvoyDispControllerV2.cpp
inDispModel
mc_xMax > 0.
mc_xMin < 0.
mc_posPeakFinderThreshold > 0.
mc_negPeakFinderThreshold < 0.
g_bw = 
x_lim = 
Q_d = 
peakAttackTime = 
peakDecayTime = 
flvSmoothingTime = 
peakFinderWindowTime_ms = 
ms_x_lim = 
invxlim = 
ptp_x_flv = 
ptp:
flv:
convoyModel:
relative posPeakFinderThreshold = 
relative negPeakFinderThreshold = 
peakFinderWindowSize = 
posPeakFinderthreshold = 
negPeakFinderThreshold = 
xLimInc = 
xMin = 
xMax = 
xLimUpper = 
xLimUpperReal = 
xLimLower = 
xLimInit = 
invxLimInit = 
MaxNormFactor = 
MinNormFactor = 
PeakRatioPosBlockThreshold = 
PeakRationNegBlockThreshold = 
PeakRatiosInWindowCountThreshold = 
normFactorThreshold = 
mp_ConvoyBufferDirtyCountThreshold = 
mc_ConvoyBufferDirtyCountThreshold = 
ptpAtkRel:
flvTime:
flvSmoother:
lfsn:
modelNormFactor:
calcCoeffs
mr_dispModel
calcCoeffsSyncDisp
HOASpatializer
initializeSourceExtentProcessor
rotateAccumulating
boost
max gain dB
attack time
noise attack time
noise release time
boost threshold dB
noise threshold dB
clip enable
_vpio_res: check 1 failed!
_vpio_res: check 2 failed!
_vpio_res: check 3 failed!
(Out) Flag to say EC and IR should be in a good converged state
(Out) Flag to say EC and IR should be in a partially converged state
(Out) Warning flag of invalid signals into the EC
(Out) Average coupling between Ref and EC input(s)
(T) Set to 1 if it's known the EC will diverge. Puts checks in decision.
(T) Number of mics (<=6)
(T) Number of bands (<=6)
(T) LowBand cutoff (Hz)
(T) HighBand cutoff (Hz)
(T) Short Time Interval (sec)
(T) Long (Full) convergence Time Interval (sec)
(T) Partial convergence Time Interval (sec)
(T) Time Interval to pause for possible divergence (sec)
(T) Time Interval for averaging in coupling calculation (sec)
(T) Ref  energy: % of short-frames in a long interval that must pass
(T) ECin energy: % of short-frames in a long interval that must pass
(T) Suppression: % of short-frames in a long interval that must pass
(T) For divergence monitoring: Minimum reference energy (dB)
(T) For divergence monitoring: Maximum reference energy (dB)
(T) For divergence monitoring: Minimum ref2mic coupling (dB)
(T) For divergence monitoring: Maximum ref2mic coupling (dB)
(T) For convergence monitoring: Minimum reference energy per band (dB)
(T) For convergence monitoring: Minimum EC inut energy per band (dB)
(T) For convergence monitoring: Minimum suppression per band (dB)
(T) For convergence monitoring: Minimum partial convergence suppression per band (dB)
(T) Partial Suppression: % of short-frames in a long interval that must pass
(T) Lower band index for partial suppression (1<= <=Nbands
(T) Upper band index for partial suppression (1<= <=Nbands
(T) Enable/disable peakiness analysis
(T) FFT Size used for peakiness analysis
(T) Low band cutoff for peakiness measure (Hz)
(T) Mid band cutoff for peakiness measure (Hz)
(T) High band cutoff for peakiness measure (Hz)
(T) Exponential smoothing for spectrum estimation for peakiness 0<a<=1
(T) Peakiness Threshold2 that is for max peakiness over bands 
(T) Peakiness Threshold1 that is for max peakiness over bands 
(T) Peakiness Threshold that is for peakiness of full band 
(Out) The measured max peakiness over bands
(Out) The measured peakiness of the full band 
(Out) Sticky version of ConvergenceOk flag
(Out) Sticky version of Partial Convergence flag
(T) Enable/disable DTD check
(Out) DTD statistic EcleeMicXcorr 
AudioGapFillerFactory.mm
TrainingLengthDilationFactor
WLSP_eta
AROrderSingleBand
winCoeff
TrainingRegionHeuristics
BlowupDetectionEnergyRatioThreshold
basicZeroCrossing
ARGapFiller.h
bad window size
ring buffer too small
input buffer too small
non-finite detected
input too small
training region will extend past the end of x
bad backwards training region length
buffer is too small
region is too small
index error
AUEndpointVAD3.cpp
ConfigurationParameters
Left/Mono Speaker Settings
Speaker Settings
T_Coil
T_Coil_r
clsp_syslog_level
Ch %d; T_CL=%6.2f; T_OL=%6.2f; DGain=%5.2f; TGain=%6.4f; tgtgain=%4.2f, hlimgain=%f, fbhlgain=%f
RenderTime %d, RenderTimeDelta %f, HostTime %f
Thermal kI
thermal gain attack time
thermal gain release time
Reb20C
Tc_vc
Tc_mg
Reb_20C
ThermalState.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v9/vpProcessUplink_v9.cpp
vpProcessUplink_v9.cpp
CrossCorrelator.cpp
output.size() >= (input.size() + mFilter.size() - 1)
vpStrategyManager.mm
*uninitialized*
*initialized*
*initializing*
 OR 
*invalid*
B12@?0I8
DoSetProperty
GetPropertyInfo
AppendSpeakerTelemetryData
stateMutex
vpLock
vp data
vpPropertyItem.h
vpStrategyManager.h
vpPropertyQueue.h
CommitVolume
replaced
audstn
AUDistance.cpp
Number of context frames for NeuralNet
Forgetting factor for input PSD estimation (time constant in seconds)
Wait time between restarting the estimate smoothing (in frames)
VAD for the input signal at the current frame
Distance estimated at the current frame
Mean of the distance estimate
Standard deviation of the distance estimate
Kalman filter process standard deviation
Kalman filter observation standard deviation
At least one settings dictionary is null. You must load all settings before initializing.
Failed to read Viterbi settings from plist.
EndpointVAD3.cpp
mViterbiFullStatePrior.get()->size() == Dt*Dm
mViterbiFullStateTransMx.get()->size() == Dt*Dm * Dt*Dm
mViterbiObsPriorTopLayer.get()->size() == mObservationDim*Dt
mViterbiObsTransMxTopLayer.get()->size() == mObservationDim*mObservationDim * Dt
DoneProcessingAudio() should not be called with real time operation mode or on the real time thread.
Error in ULDAT ProcessAudio()
Error in ASA ProcessAudio()
CategoryNames
CategoryDataMaxes
TimingModelOrders
CategoryValueNames
ULDATFeatureNames
ULDATFeatureDataMaxes
ASASuperFeatureNames
ASASuperFeatureDataMaxes
ViterbiRingBufferSizeSeconds
FeatureTimeSeries.h
ElementAt
index < mArray.size()
vpInitializeUplink.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpInitializeUplink.cpp
call num %u
VPV%u REF %s %s (blksz %lu) MIC %s %s (blksz %lu)
ref audiodeviceid = %lu      mic audiodeviceid = %lu
inRefASBD passed in = %s
inMicASBD passed in = %s
hw io blocksizes passed in REF = %lu MIC = %lu
vp_allow_multi_ch_ref
failed to initialize - no reference ports
failed to initialize - no microphone ports
ul-dl config out of sync mHwRefASBD = %s, %d
 inMicASBD = %s %d
ul-dl config no longer out of sync
ul-dl config still out of sync ?!
fs mismatched! REF=%fHz, MIC=%fHz
ioOutASBD passed in = %s
ERROR: Initialize output called before Initialize hw input was called!
UL fade data size = %u
initialize output: ioOutASBD passed OUT = %s
GetMaxOutputPacketInfo
GetMaxOutputPacketInfo : InitializeOutput hasn't been called yet!
vp_epio_blksz
vp_epio_blksz_ms
vp_epio_samplerate
CalcEpIoSampleRate
preferredClientSampleRate: %g
CalcBlkSzs
calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu
calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu
calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu
CalcASBDs
calcasbds: mEpRefASBD format: %s
calcasbds: mEpMicASBD (ignore the # of channels) format: %s
calcasbds: mEpOutASBD format: %s
calcasbds: mUsOutASBD format: %s
CalcInternalProcessingLatency
calcinternalprocessinglatency: %f sec
CalcSRCLatencySamples
calcsrclatencysamples: ref src ltnc = %d samples(@%f Hz), mic src ltnc = %d samples(@%f Hz), out src ltnc = %d samples(@%f Hz)
CalcBufferingLatencySamples
calcbufferinglatencysamples: %d samples(@%f Hz)
InitRefMicRingBuffers
initrefmicringbuffers : delaying mic by %.2f ms (%d samples)
initrefmicringbuffers : mic buffer src ltnc padding %d samples
initrefmicringbuffers : ref buffer src ltnc padding %d samples
initialize: error initializing sample rate converters
initialize: mOutASBD computed = %s
initialize: [iphone/ipad simulator] disabling all uplink processing
Error %d from applying beam direction
ecout
media
AudioIssueDetectorCreate
AudioIssueDetectorInitialize
AudioIssueDetectorDispose
AudioIssueDetectorSetNodeFormat
AudioIssueDetectorSetNodeFormatWithDirection
AudioIssueDetectorReset
AudioIssueDetectorAnalyzeBuffer
AudioIssueDetectorUpdateReportingSessions
AudioIssueDetectorRemoveNode
AudioIssueDetectorSetUplinkMute
AudioIssueDetectorSetDownlinkVolume
AudioIssueDetectorSetRouteSpecificDownlinkGainAdjustment
AudioIssueDetectorSetSmartCaseMicMute
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
RegisterAudioUnits_Analyzer
vp_inject_files
vp_add_files
vpDebug_FileInjection.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_FileInjection.cpp
OpenSignalInjectionFiles
opening route-specific injection file %s
error opening injection file %s
opening generic injection file %s
opening injection file %s
injection file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
error reading file %s [err=%d, frames to read=%lld, num frames read=%d]
error %d getting length of injection file %s, length %d
error %d opening injection file %s, will use original (not injected) signal
aaaa.000.
opening addition file %s
addition file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
error-%d opening addition file %s, will use original (not added) signal
badinjectionfile
AUFIREngine_
firengine_verbose
AUFIREngine.mm
Matrix outputs to AU output format validation
Matrix inputs to AU input format validation
matrixFIRs.size()
FIR_Matrices
inNumberInputBufferLists == 1 && inNumberOutputBufferLists == 1
Mute: In %u Out %u
Bypass: In %u Out %u
Gain: In %u Out %u
FIR Matrix
Global Gain
FIR_NamedMatrices
FIR_Table
CLMClickMitigator.mm
/Library/Audio/Tunings/%@/AU/aufx-clr2-appl.plist
/Library/Audio/Tunings/Generic/AU/gen-aufx-clr2-appl.plist
logic error
ClickRemovalRecordMode
ClickRemovalParams.h
ClickRemovalDisable
ClickRemovalDisableHIDMonitor
ClickRemovalAcceptAnyFormat
GapFillerType
ParametricProcessor
AUPeakPowerGuard_ViewFactory
Modulator low pass frequency
Woofer Amplifier Sensitivity
Woofer Temperature Celcius
Woofer Amplifier Efficiency
48 Volt Quiescent Power
output gain function
Moving average main time constant
48Volt power limit TC
48Volt power limit TC / 2
48Volt power limit TC / 4
48Volt power limit TC / 8
12Volt power limit TC
12Volt power limit TC / 2
12Volt power limit TC / 4
12Volt power limit TC / 8
48 to 12 Volt Converter Dynamic Efficiency
Woofer Gain Minimum
Woofer Gain Release Time
Tweeter Gain Minimum
Tweeter Gain Release Time
Tweeter Amplifier Sensitivity
Tweeter Resistance
Tweeter Amplifier Efficiency
12Volt Quiescent Power
enable 48Volt power limit TC
enable 48Volt power limit TC / 2
enable 48Volt power limit TC / 4
enable 48Volt power limit TC / 8
enable 12Volt power limit TC
enable 12Volt power limit TC / 2
enable 12Volt power limit TC / 4
enable 12Volt power limit TC / 8
Lookahead Time
SystemPower 48 Volts
SystemPower 12 Volts
SystemPower MLB
System Vmin 48 Volts
System Vmin 12 Volts
Tweeter Parameters
Woofer Parameters
System Measurements
Testing and debugging
EndpointDecisionLayer.cpp
DspLibXTC_customFilterDictionary
CoefficientsLandscape
CoefficientsPortrait
W11real
W11imag
W21real
W21imag
W12real
W12imag
W22real
W22imag
WDataIsCompressed
AUXTC_ViewFactory
com.apple.AUXTC_FilterDesignerQueue
AUXTC.mm
Setup_%d
BypassMode
Bypass Crossover
Bypass FIR optimizer
Low Pass Stop Frequency
Low Pass Order
High Pass Start Frequency
High Pass Order
Mute Effect
Mute Direct
SwapCrossTerms
SwapLeftRight
FIR Filter Length
Tukey Window Coefficient
FIR Filter Group Delay In Percent Of Filter Length
Test Noise Generator
System Volume
Wet Dry Taper Point 0 - Volume
Wet Dry Taper Point 0 - Effect Mixer In Percent
Wet Dry Taper Point 1 - Volume
Wet Dry Taper Point 1 - Effect Mixer In Percent
Gain Trim
CrossfadeDuration
Setup For Device Orientation 'Ambiguous'
Setup For Device Orientation 'Portrait'
Setup For Device Orientation 'Portrait Upside Down'
Setup For Device Orientation 'Landscpae Left'
Setup For Device Orientation 'Landscape Right'
Setup For Device Orientation 'Face Up'
Setup For Device Orientation 'Face Down'
Bypass Mixer
Loudspeaker Spacing in cm
Listening Distance in cm
Sound Stage Opening Angle in degrees
Sound Stage Rotation
Dont Set W21 to zero
Setup 0
Setup 1
deferred_deletion_queue.h
drain_trash
trashObject
Ambiguous
Face Up
Face Down
Hold
XTC is turned off
XTC is bypassed
XTC is running
Prior XTC
Post XTC
AUXTC
ioObject
pendingObject
trash queue exceeded capacity, object memory leaked
iPMWF_HRLS_vDSP.cpp
nCoefficients
RealCoefficients
ImagCoefficients
AudioBufferList buffer overwrite or overread has occurred
AudioBufferList view is malformed
AudioBuffer overread has occurred during AudioBufferList copy
AudioBuffer overwrite has occurred during AudioBufferList copy
^{VoiceProcessorBase=^^?}20@?0I8r^v12
voice_processor_spi
/Library/Audio/Tunings
/tmp/AudioCapture/VP/
/usr/local/lib/
failed to put VoiceProcessor into AudioDSPManager mode
call_name
call_signature
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetVersion, ArgTypeList = <>]
GetVersion
topology is not supported
topology
node_configurations
microphone_port_type
microphone_hardware_sample_rate
microphone_hardware_input_latency
microphone_hardware_input_safety_offset
reference_port_type
reference_hardware_sample_rate
reference_hardware_input_latency
reference_hardware_input_safety_offset
reference_hardware_output_latency
reference_hardware_output_safety_offset
client_io_block_size
reference_is_hardware_tap_stream
io_block_size
input_types
input_formats
output_types
output_formats
sample_rate
format_id
foramt_flags
bytes_per_packet
frames_per_packet
bytes_per_frame
channels_per_frame
bits_per_channel
reserved
'AllOfUplinkDSP' node has wrong number of inputs
'AllOfUplinkDSP' node has no microphone input
'AllOfUplinkDSP' node has no reference input
'AllOfUplinkDSP' node microphone and reference input sample rates are not equal
'AllOfUplinkDSP' node has wrong number of outputs
'AllOfUplinkDSP' node has no uplink output
'AllOfUplinkDSP' node microphone input and uplink output sample rates are not equal
'HardwareDSP' node has wrong number of inputs
'HardwareDSP' node has no microphone input
'HardwareDSP' node has no reference input
'HardwareDSP' node input sample rates are not equal
'HardwareDSP' node has wrong number of outputs
'HardwareDSP' node has no microphone output
'HardwareDSP' node has no microphone clip data output
'HardwareDSP' node has no reference output
'HardwareDSP' node output sample rates are not equal
'HardwareDSP' node I/O sample rates are not equal
'HardwareDSP' node doesn't support variable I/O block size
'EchoDSP' node has wrong number of inputs
'EchoDSP' node has no microphone input
'EchoDSP' node has no microphone clip data input
'EchoDSP' node has no reference input
'EchoDSP' node input sample rates are not equal
'EchoDSP' node has wrong number of outputs
'EchoDSP' node has no voice data output
'EchoDSP' node I/O sample rates are not equal
'EchoDSP' node doesn't support variable I/O block size
'DynamicsDSP' node has wrong number of inputs
'DynamicsDSP' node has no voice data input
'DynamicsDSP' node has wrong number of outputs
'DynamicsDSP' node has no voice data output
'DynamicsDSP' node I/O sample rates are not equal
'DynamicsDSP' node doesn't support variable I/O block size
failed to find node configuration with requested type
failed to find input ASBD with requested type
failed to find output ASBD with requested type
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeHWInput, ArgTypeList = <const AudioStreamBasicDescription &, std::nullptr_t, unsigned int &, int, int, const unsigned int *, const AudioStreamBasicDescription &, std::nullptr_t, unsigned int &, int, int, const unsigned int *>]
call_status
InitializeHWInput
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeOutput, ArgTypeList = <CA::StreamDescription &, std::nullptr_t, unsigned int &, unsigned int &, unsigned int &>]
InitializeOutput
i32@?0^{AudioBufferList=I[1{AudioBuffer=II^v}]}8^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16^I24
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has wrong number of inputs
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has no far-end-voice input
'AllOfDownlinkDSPWithFarEndVoiceOnly' node far-end-voice and telemetry input sample rates are not equal
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has wrong number of outputs
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has no downlink output
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeDownlinkProcessing, ArgTypeList = <const AudioStreamBasicDescription &, unsigned int &, const AudioStreamBasicDescription &, int (^__strong &)(AudioBufferList *, AudioTimeStamp *, unsigned int *)>]
InitializeDownlinkProcessing
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::PreflightUplink, ArgTypeList = <unsigned int, unsigned int *>]
PreflightUplink
I/O rate mismatch has occurred
couldn't find input terminal index of requested type
failed to find output terminal index with requested type
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::AppendReferenceSignal, ArgTypeList = <AudioBufferList &, CA::TimeStamp &>]
AppendReferenceSignal
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::Process, ArgTypeList = <AudioBufferList &, CA::TimeStamp &, AudioBufferList &, AudioTimeStamp &, unsigned int &, std::nullptr_t, std::nullptr_t, std::nullptr_t>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::AppendReferenceSignal, ArgTypeList = <AudioBufferList &, AudioTimeStamp &>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkHardwareDSP, ArgTypeList = <AudioBufferList *&, AudioTimeStamp *&>]
RunUplinkHardwareDSP
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::ReadBuffer, ArgTypeList = <vp::BufferID, AudioBufferList *&>]
ReadBuffer
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::WriteBuffer, ArgTypeList = <vp::BufferID, AudioBufferList *&>]
WriteBuffer
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkEchoDSP, ArgTypeList = <AudioTimeStamp *&>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkDynamicsDSP, ArgTypeList = <AudioBufferList *&, AudioTimeStamp *&, unsigned int &>]
RunUplinkDynamicsDSP
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::PreflightDownlink, ArgTypeList = <unsigned int, unsigned int *, unsigned int *>]
PreflightDownlink
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::ProcessDownlinkAudio, ArgTypeList = <std::nullptr_t, std::nullptr_t, std::nullptr_t, vp::Audio_Buffer &, const unsigned int &, AudioTimeStamp &>]
ProcessDownlinkAudio
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetProperty, ArgTypeList = <unsigned int &, float *&, unsigned int &, unsigned int *>]
GetProperty
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::SetProperty, ArgTypeList = <unsigned int &, float *, const unsigned int &>]
SetProperty
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetProperty, ArgTypeList = <unsigned int &, void *&, unsigned int &, unsigned int *&>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::SetProperty, ArgTypeList = <unsigned int &, const void *&, unsigned int &>]
%s%s_%04d%02d%02d_%02d%02d%02d_%s
com.apple.coreaudio.
/tmp/CLSPLogs/
com.apple.coreaudio.syslog
spp3
clsp_trace_iothread
vp_loopback
vpDebug_Loopback.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_Loopback.cpp
LoopBackInitialize
loopbackinitialize SRC=%s, usOut#chan=%d, dlMix#chan=%d
LoopBackWrite
loopbackwrite: ERROR can't write %d frames to loopbackABL ABL=%p, capacity=%d
loopbackwrite ERROR wrote %d (requested %d) frames
LoopBackRead
loopbackread ERROR read %d (requested %d) frames
loopbackread filled %d zeros in outABL channel %d
WhiteningSubspaceAdapter.cpp
not enough working memory
bad internal value
output is too small
invalid arCoefficients size
size mismatch
bad working size
invalid input ar order
AUCPMSVolumeV1.cpp
AUCPMSVolumeV1
Instantaneous: 
mW; 
100ms: 
1000ms: 
thermal: 
Amp system:
-[Amplifier efficiency expression: 
-[TargetGainRangeDB: [
] dB
 LUT entries]
  Volume level 
/16: 
BiquadInterpolator.cpp
No anchor points
Anchor points must be paired with an anchor biquad
Anchor points must monotonically ascend
Anchor filters must be the same size
GetCoefficientsAtPosition
!mAnchorBiquads.empty()
!mAnchorPoints.empty()
outCoeffs.size() == mAnchorBiquads.front().size()
PredDisp_Data_ch
PredDispMore_Data_ch
Reb_Data_ch
Err_Data_ch
CLDisp_Data_ch
CoeffLog_ch
T_Coil_ch
I_Data_ch
V_Data_ch
Convoy_Data_ch
Convoy_CapData_ch
Convoy_DataFiltered_ch
AUHapticsProtection.cpp
mHTL
happ_file_saving
/tmp/%d%02d%02d.%02d%02d%02d.happ_in.caf
/tmp/%d%02d%02d.%02d%02d%02d.happ_out.caf
AUHapticsProtection
None
Minimal
Invalid
attackBufferLength
slidingWindowMaxWidth
xlim
plim
rcoil
vlimDerateVibe
xlimDerateVibe
vlimDerateTap
xlimDerateTap
activityDetectorThreshold
activityDetectorCount
inputLPFTap_b0
inputLPFTap_b1
inputLPFTap_b2
inputLPFTap_a1
inputLPFTap_a2
inputLPFVibe_b0
inputLPFVibe_b1
inputLPFVibe_b2
inputLPFVibe_a1
inputLPFVibe_a2
compressorLPF1_b0
compressorLPF1_b1
compressorLPF1_b2
compressorLPF1_a1
compressorLPF1_a2
compressorLPF2_b0
compressorLPF2_b1
compressorLPF2_b2
compressorLPF2_a1
compressorLPF2_a2
plantTap_f0
plantTap_Q
plantTap_m
plantTap_Km
plantTap_Rcoil
plantLow_f0
plantLow_Q
plantLow_m
plantLow_Km
plantLow_Rcoil
plantHigh_f0
plantHigh_Q
plantHigh_m
plantHigh_Km
plantHigh_Rcoil
htl.hpp
nFrames <= _allocator.getChunkSize()
allocateChunk
(_dataSize - _current) >= _chunkSize
freeChunk
_current >= _chunkSize
chunkBegin == &_data[_current]
update
n <= _maxInputSize
n <= _maxInputLength
push
allocateAligned
ret == 0
alignedMemory != nullptr
ActivityDetector
_threshold > 0
_timeout > 0
SlidingWindowMax
_windowSize
vp_console_msgs
vpts
vp_save_timestamps
AUBassQueenViewFactory
hold update
ThieleSmall: Closed Box
S-domain: Xd/V, Xr/V
S-domain: Xd/V, Xr/Xd
input high pass filter
mitigation paramters
loudspeaker model parameters
ARGapFiller.mm
bad argument value
espresso
Success
Generic error
IO error
Parsing error
Memory allocation error
Context or plan is in an invalid state
One or more of the arguments passed was invalid
Mismatched blob shapes
Blob name not found
Feature not implemented
The call was aborted.
The call was aborted due to HW overflow
Unknown error
Mic calibration constant
Noise-estimate smoothing time-constant
Noise level (dBA)
Noise level (dBC)
SPLMeter.h
a.size() == mWeightCurve.size()
Uplink Threshold
Downlink Threshold
Echo Gain
Uplink Attack Time
Uplink Hold Time
Uplink Release Time
Downlink Attack Time
Downlink ReleaseTime
Downlink Hold Time
SoundStageManager
AUSMSoundStageManager.cpp
soundStageChannelLabels.size() == mSoundStages[*smallIndex].parameters.size()
soundStageChannelLabels.size() == mSoundStages[*mediumIndex].parameters.size()
soundStageChannelLabels.size() == mSoundStages[*largeIndex].parameters.size()
InitializeSoundStage
mSoundStages[i].parameters.size() == mSoundStages[0].parameters.size()
mSoundStages[*largeIndex].nonLFEParameters.size() == mSoundStages[*mediumIndex].nonLFEParameters.size()
mSoundStages[*largeIndex].nonLFEParameters.size() == mSoundStages[*smallIndex].nonLFEParameters.size()
!realSpeakersConnected.empty()
AUSMSoundStageLargeParameters
AUSMSoundStageMediumParameters
AUSMSoundStageSmallParameters
ChannelLabel
Azimuth
Elevation
Distance
DRRAdjustment
Delay
mSoundStageBasisDistances.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisGains.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisDRRs.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisDelays.size() == mSoundStageBasisVertices.size()/3
Type
Frequency
Quality
Gain
setParametricFilters
speex speech prob
vpGenCppUtils.cpp
%d.%d
@%.0f/%X
:%s%d
,%d%s
small
large
00. Product
01. File Name Prefix
02. AppendRefSignal Call Count
03. Process Call Count
04. HW REF Format
05. HW REF Block Size
06. Ref Port #0
07. HW MIC Format
08. HW MIC Block Size
09. Mic Port #0
10. HW REF Hw-Only Presentation Latency
11. HW MIC Presentation Latency
12. HW REF Safety Offset
13. HW MIC Safety Offset
14. VP Output Format
15. VP Quality
16. Enable AGC
17. ProcessDL Call Count
18. DL MIX Format
19. DL MIX Block Size
20. DL FEV Format
21. DL Volume
22. VP Mode
24. Preprocessing input gain
26. HW MIC Trim Gains
27. HW REF Trim Gains
28. Telephony Vocoder Type
29. Telephony Mic DSP Settings
30. Telephony REF DSP Settings
31. Disable VP
32. Voice Over Enabled
33. Beam Direction
34. SPKR TEL Format
35. SPKR TEL Block Size
36. HW Has VP
37. Ref Port #0 Subtype
38. VP Chat Mode
39. HW Layout ID
40. Device Orientation
41. IO Cycle Usage
42. Telephony Vocoder Sample Rate
42. Ref Port #0 EndpointType
45. HW REF Input Latency
46. HW REF Input Safety Offset
47. HW REF Tap Stream Enabled
48. HW MIC Device Sample Rate
49. HW REF Device Sample Rate
50. DL FEV Gain
00. REF Overload
01. MIC Overload
02. DLP Overload
03. REF Ring Buffer Ran Dry Log
04. SPKR TEL Overload
51. Machine HW Layout ID
52. CA Orientation
53. MaxNumOutPkts
54. MaxOutPktByteSize
55. Speaker Input Data Source
56. Smart Cover Is Attached
57. HW Ref Physical Device Sample Rate
58. Mute Output
59. Mute Downlink Voice
60. Power Budget settings
61. Speaker Calibration Data
62. Acoustic ID
63. HLC settings
64. Hardware Volume
65. Enable Media Chat
66. Enable Spatial Chat
67. Chat Flavor
68. Spatial Metadata
69. Media Chat Volume
70. Spatial Head Tracking Configuration
71. Media Playback on External Device
72. Continuity Capture Mode
vpgencpputil
SCOrientationManager
SCOrientationManager.cpp
aujbase
AUJBase.cpp
Disabled
Original
Velvet Single
Velvet Double
AP Comb Single
AP Comb Double
Low latency mode
Enhanced Center Extraction (ECE)
ECE Center Ratio
Center channel gain
Number of center channels
Surround channel gain
Number of surround channels
Low crossover order
Low crossover frequency
High crossover order
High crossover frequency
Use LFE with STFT 5.1 output
Subwoofer/LFE Gain
Surround EQ amount
Surround 7 kHz high shelf gain
STFT smoothing bandwidth oct
STFT xcorr time constant
STFT xcorr min time constant
STFT ambience leak to direct upmix
STFT ambience extraction amount
STFT ambience crosstalk control
STFT back allpass filters
STFT direct upmix LF time constant
STFT direct upmix HF time constant
STFT direct upmix LF limit
STFT direct upmix HF
STFT center energy norm
STFT center width
STFT center width exponent
STFT center phase angle width
STFT center minimum gain
FBC surround amount
Low crossover freq index (deprecated)
High crossover freq index (deprecated)
ScottyUpmixer
ScottyUpmixer.cpp
sampleRate > 0.
commonParameters != nullptr
*** Invalid parameter ***
nativeFrameSize >= mInputStagingBufferOffset
(inFramesToProcess-inFramesPending+inFramesToCopy) <= inFramesToProcess
(mInputStagingBufferOffset+inFramesToCopy) <= nativeFrameSize
(outFramesCompleted+outFramesToCopy) <= inFramesToProcess
(mOutputStagingBufferOffset+outFramesToCopy) <= mOutputBufSize
AUBuzzKill_ViewFactory
log2(FFT Length)
overlap, percent
window: 1=hann, 0=rect
mode: 1=continuous, 0=hop
PlotStartFrequency
PlotStopFrequency
max operation frequency
Algorithm Version
Filter Tolerance
min operation frequency
Filter Release Time
numNotchFilters
filterbank mode
lowShelve Frequency
display Release Time
Filter available Threshold
High Frequency Buzz Kill
FilterQuality
QualityMode
FilterOffThreshold
GainSmoothingTimeConstant
FrequencySmoothingTimeConst
FrequencyTrackingTimeConst
LowShelving Filter Num Stages
LowShelving Filter Quality
0 kill
1 kill
2 kill
3 kill
4 kill
5 kill
6 kill
7 kill
8 kill
9 kill
2.5 kHz
3 kHz
4 kHz
6 kHz
20 kHz
VAD3Configuration.cpp
AULoudspeakerManager_ViewFactory
SpVA
GuidedMWF.cpp
audnos
Layer
NeuralNetLoader.cpp
InputVectorDescriptor
Size
DataType
int8
Sint8
int16
SInt16
int32
Sint32
float32
DataScale
DataBias
OutputVectorDescriptor
LayerDescriptor
FullyConnected
Dense
LSTM
Weights
SInt8
SInt32
Bias
Activation
Function
Identity
Linear
RectifiedLinear
ReLU
LeakyRectifiedLinear
LeakyReLU
Sigmoid
Tanh
ScaledTanh
LoadClickRemovalTuning.mm
ParamsForButtonAndClickType
RemovalParams
detection_input_to_removal_input_latency
SubspaceDetector.h
invalid padding amount
MultiClassDetectorContainer.h
invalid input size
Invalid input size or padding length
WhiteningSubspaceAdapter.h
invalid outCoeffs size
dist
regularization_amount
mean
PriorProbNoClick
ClickDetectionPrior.mm
lognormal
lognorm
norm
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v5/vpProcessUplink_v5.cpp
vpProcessUplink_v5.cpp
WasSoundDetected
DetectionThreshold
DetectionConfidence
DetectedSampleIndex
Channel
ProcessBufferLists
AUCrossCorrelator.cpp
mAudioRingBuffer->Store(&inBufferList, inFramesToProcess, mAudioRingBufferWriteIdx) == kAudioRingBufferError_OK
mAudioRingBuffer->Fetch(&readABL, mCrossCorrelationInputSize, mAudioRingBufferReadIdx) == kAudioRingBufferError_OK
CopyBufferList
srcBufferList.mNumberBuffers == dstBufferList.mNumberBuffers
voice_isolation
VoiceProcessor_v6.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v6/VoiceProcessor_v6.cpp
InitializeV6Specifics
NOTICE: AUNeuralNet latency is %f ms, which is %d samples
LoadTuningsPlists
Unknown MainChatCategory: %s
NEW TUNING LOGIC <SERIOUS ERROR>: no tuning plists found. Using default paramters!!! Use case %s-%s-%s
SetChatFlavor
VP chat flavor set to %u
Forcing bypass to false due to chat flavor
Begin self-reinit (SetChatFlavor)
End self-reinit (SetChatFlavor)
com.apple.coreaudio.chatflavorupdated_
RegisterChatFlavorNotificationListener
ChatFlavor notification name is %s
ChatFlavor updated notification received
SubspaceDetector.cpp
invalid clickLoc
FeatureSelection.cpp
parseFeatureEnableBitMask
static_cast<Float32>(featureEnableBitMask) == tempMask
AudioDSP
apac
AUNeuralNetSPP.cpp
nnspp
NS: Number of DNN layers
NS: Number of frames for context window
NS: Forgetting factor (time constant)
NS: Noise suppression amount
NS: Noise suppression amount as post mask
RES: Number of DNN layers
RES: Number of frames for context window
RES: Forgetting factor (time constant)
RES: Echo suppression amount
RES: Echo suppression amount as post mask
Use energy threshold for channel averaging? Only channels with mean subband energy larger than the threshold will be used.
Energy threshold for channel averaging (in dB).
vpTimeFreqConverter.cpp
Meter.cpp
numFrames <= mWeightingFilterOutputBuffers[0].size()
AUScotty
LegacyHRTFSpatializer
Failed to Instantiate AU's
Failed to Set Up AU's
Failed to Initialize AU's
NoiseSuppress
V1Mode
ThresholdPower
ThresholdMultiplierLUT
EndpointVADDSPChain.cpp
MatrixDecompositions.cpp
U.NumRows()==Cx.NumRows()
U.NumCols()==Cx.NumRows()
VH.NumRows()==Cx.NumCols()
VH.NumCols()==Cx.NumCols()
singularValueDecompositionOnlyU
Cx.NumRows()==Cx.NumCols()
singularValueDecompositionOnlyUandS
singularValueDecompositionOnlyUandVH
suppressor_classV3.cpp
abtest_mode
Error: %@
.json
DominanceZoom.cpp
HOAZoomCurve
HOAZoomInDominanceCurve
HOAZoomOutDominanceCurve
Process
inBuffer->mNumberBuffers == mNumChannels
outBuffer->mNumberBuffers == mNumChannels
numSamples == mBlockSize * 2
hoaz
DominanceCurveCoordinator
DominanceZoom.hpp
sampleRate > 0.0
FixedIntegerDelay.cpp
!mPrimaryDelayBuf.empty()
!mSecondaryDelayBuf.empty()
AULimitWindBoost.cpp
mLimitWindBoost.isInitiazlied()
beamsABL->mBuffers[i].mDataByteSize >= mTemp.size() * sizeof(Float32)
outputABL->mBuffers[i].mDataByteSize >= mTemp.size() * sizeof(Float32)
aulwb
res_classV3.cpp
DictionaryBlobReader.cpp
Coefficients
RowIndices
ColumnIndices
DictionaryBlobReader.hpp
AUSeparate.cpp
AUXIVA using HRLS for covariance matrix inversion
AUXIVA direct covariance matrix inversion
auauss
IVA mode
Parameter for source prior model
Speech RMS floor
Signal pre-emphasis factor
Initial condition factor for covariance matrices
Use uniform diagonal elements to initilize covariance matrices
Covariance diagonal loading factor for direct inverse approach
Minimum frequency to calculate speech RMS
Maximum frequency to calculate speech RMS
Initial wait time before starting unmixing matrix update
Maximum output signal gain
Gain floor of separation filter
Regularization factor of lower triangular matrix in Cholesky factorization
Regularization factor in HRLS-based covariance inverse
MicSelections
SCMicSelectionBox.mm
SpacedOmni
SCMicSelectionBox
topLevelDict
numSDLSBeams > 0
SDLSChannelSelections
GetIndex
OrientationAndCameraDirectionDependentBox.hpp
index < mInfoPerCameraDirectionAndOrientation.size()
AUDynamicDuckerLog
Primary Ducking Level (dB)
Game Audio Ducking Level (dB)
Other Audio Ducking Level (dB)
System Sound Ducking Threshold (dB)
Primary Ducking Threshold (dB)
Primary Ducking Min Level (dB)
Game Audio Ducking Min Level (dB)
Other Audio Ducking Min Level (dB)
Other Audio RMS Limit (dB)
System Sound Gain (dB)
Game Audio Gain (dB)
Other Audio Gain (dB)
FEV Audio RMS
Ducking Ramp Time (s)
History Accumulation Time (s)
UnDucking Ramp Time (s)
Release Hold Time (s)
Threshold for ducking for local voice
Local voice probability
0 --> Off, 1 --> ON
Other Audio RMS
Other Audio Ducking Gain
Other Audio LongTerm RMS
AUBeam2.cpp
SpatialVectorReal1
SpatialVectorImag1
SpatialVectorReal2
SpatialVectorImag2
FreqCompVector1
OmniEQVector1
FreqCompVector2
OmniEQVector2
FreqEQVector1
FreqEQVector2
/tmp/aubeam2-%s-diffr-%dHz-%02d%02d%02d.txt
%.8f %.8f %.8f %.8f %.8f %.8f %.8f %.8f
/tmp/aubeam2-%s-eq-%dHz-%02d%02d%02d.txt
%.8f %.8f
beam2
Pass 1 Gain floor (dB)
Pass 2 Gain floor (dB)
Reverb tail gain (dB)
InpFrameNode
OutFrameNode
pass1GainFloor(dB)
pass2GainFloor(dB)
reverbTailGain(dB)
pass1GainFloor(dB)_i
pass2GainFloor(dB)_i
reverbTailGain(dB)_i
internalBypass_pref
internalBypass_fail
internalBypass_noTail
internalBypass
ReverbSuppressor_disable
ReverbSuppressor_pass1GainFloor
ReverbSuppressor_pass2GainFloor
ReverbSuppressor_reverbTailGain
AUReverbSuppressor.cpp
dereverb
ReverbTails
ProcessMultipleBufferLists
inFramesToProcess == mInputBlockVector.size()
inFramesToProcess == mInputFrameVector.size()
size
VectorUtils.h
mRealVector.size() == mImagVector.size()
AutoValue.h
delay <= _C
WARNING: Calling Get() on an AutoValue ('
') without initializing first. Initializing now.
_isInitialized == true
WARNING: Calling GetRevision() on a Trackable ('
GetRevision
_newArgRevisions >= _oldArgRevisions
operator[]
index < _C
theIndex < _C
IncrementCirc
this->m_holder.m_size > n
DecrementCirc
index <= _C
AUReverbSuppressor.h
UsesFixedBlockSize
MaximumFramesPerSlice
CFPrefHelper.h
map::at:  key not found
operator=
&x != this
priv_move_assign
this != &x
_gain2SmoothingCoef
_reverbTailGain
_psBeta_TC
_psBeta
_inpPs
_inpPs_brk
_inpPs_prev
_inpPs_prev_brk
_pass1Output
_reverbEst2Ps
_reverbEst2Ps_brk
_postSNR2_lin
_postSNR2_brk
_priorSNR2_lin
_priorSNR2_brk
_gainVPv3
ComputeMagnitude
SpectralMagnitude.h
result.size() == input.size()
SquareMagFreqVector
result.size() == a.size()
filterLeftTimesPS
filterRightTimesPS
DivideScalarVector
result.size() == theVector.size()
ComputeFilterLeftTimesPS_curry
BarkFilterbank.h
result.size() == ps.size()
MultiplyVectorVector
result.size() == b.size()
ComputeFilterRightTimesPS_curry
SquareVector
a.size() == result.size()
AddMultiplyVectorScalarMultiplyVectorScalar
result.size() == A.size()
result.size() == C.size()
&theAutoValue != this
_convolver
_inputMagnitude
MultiplyVectorScalar
Convolve
Convolver.h
result.size() == H[a].size()
result.size() == X.size()
AddMultiplyVectorVectorVector
result.size() == c.size()
tempTransformer
_blockSize
_fftSize
_zeroPad
_windowType
_overlapX
_numOutputFrames
_numOutputSamples
_xExtended
Transform
Transformer.h
result.size() == numFrames
tempInputBlock
_transformBuffer
FFT object failed to initialize.
FFT_Forward
result.size() == (input.size() / 2)
setup.size() == input.size()
MultiplyCVectorRScalar
LayFlat_curry
(result.size() == numItems * itemSize) || (result.size() == numItems * itemSize * 2)
ExtendWithZeros
x.size() <= newLength
result.size() == newLength
CopyVector
result.size() >= input.size()
_noiseReg
DivideVectorVector
result.size() == theDivisor.size()
AddVectorScalar
NegateVector
theVector.size() == result.size()
MaxVectorScalar
_gamma
_postClipped
AddMultiplyVectorScalarScalar
AddMultiplyVectorVectorMultiplyVectorVector
AddVectorVector
_gain2_bark
_gain_lin
_gain_bark
_GainNoClip
_GainSqrt
_gain2_raw
_bark2lin_gain_bark
_bark2lin_gain2_bark
_gainFloor_lin
SmoothVector
&result != &input
_zetaBark_maxPart
_zetaBark_minPart
_zetaBark
_snr
_Pframe
_QRatio
_expTheta_bark
Compute_gain
GainRule_VPv3.h
expTheta.size() == prior.size()
expTheta.size() == QRatio.size()
expTheta.size() == result.size()
AddMultiplyVectorScalarVector
result.size() == theAddand.size()
ComputeZetaBark
result.size() == prior_bark.size()
result.size() == zetaBark_maxPart.size()
result.size() == zetaBark_minPart.size()
ComputeP1
result.size() == zetaBark.size()
ComputeQ
result.size() == P1.size()
ComputeQRatio
result.size() == Q.size()
ComputeExpTheta
result.size() == theta.size()
_theta
_priorRatio
ComputeEMGain
MM.size() == priorRatio.size()
MM.size() == result.size()
ComputeTheta
priorRatio.size() == post.size()
priorRatio.size() == result.size()
ComputeHypergeometricGain
x.size() == result.size()
ComputePriorRatio
prior.size() == result.size()
MinVectorVector
ComputeLinear_curry
result.size() == frameSize
barkIn.size() == 24
MultiplyCVectorRVector
de-serialization data size mismatch
ERROR : opening 3D files...
AUMozartCompressorSingleBand_ViewFactory
UpwardCompressorReleaseThreshold
UpwardCompressorRatio
Hysteresis
CompressorAttackTime
CompressorReleaseTime
CompressorDetectorRMSTime
DownwardCompressorReleaseThreshold
MakeupGain
Bypass Gain
LimiterReleaseTime
ExpanderThreshold
ExpanderRatio
ResetGainMinMaxReading
AttackTime
LookaheadTime
CompressorOnOff
LimiterOnOff
Spare19
Idle Gain
LimiterDetectorRMSTime
DownwardCompressorRatio
DownwardCompressorKnee
DownwardCompressorAttackThreshold
Spare25
LimiterAutoThresholdSlope
LimiterAutoThresholdOffset
LkFsDetectorPrefilterOnOff
LkFsDetectorOutputGated
LkFsDetectorUseMovingAverageFilter
LkFsDetectorLowerThresholdTimeConstant
LkFsDetectorSmoothingTimeConstant
LkFsDetectorNoiseGateLevel
LkFsDetectorUpperAndLowerThresholdOffset
LimiterHysteresis
LkFsDetectorUpperThresholdTimeConstant
LimiterUseLogReleaseBehavior
Spare38
LkFsDetectorHighPassFrequency
AudioActivityDetectorHoldTime
UpwardCompressorAttackCurveThreshold
AudioActivityDetectorWindowWidth
printLogMessages
InternalDownsamplingFactor
AudioActivityDetectorMode
HighShelveRollOffFrequency
HighShelveRollOffGain
Spare49
Spare50
Spare51
Spare52
Movie: Stereo Airplane 12073.5
Movie: Stereo LateNight 12075.5
Movie: 5.1 LateNight 12096.5
Movie: 5.1 LateNight Extreme 12084.9
AddProcessingSection
SoundIsolationGraphAdapter.cpp
internalBlockSize != 1 && "block size must be set for freq format"
_input_ANALYSIS
_eclee_ZERO
constant
_1_deadEnd
dead
_processed_synthesis
inputSplitter
split
processingAU_
outputJoiner
join
delay
_guidance_ANALYSIS
AUSoundIsolation_processing
AUSoundIsolation_blending
input_
delay_
inputInterleaver_
srlconverter
outputInterleaver
AUSoundIsolation_bypass
AUSoundIsolation
inputDeinterleaver
inputSRC
reblocker
inputReblocker
outputSRC
outputReblocker
mbdp_max_bands
mbdp_allow_lookahead
Gain before C/L
Speaker Trim
DL Gain Target
Crossover 1
Crossover 2
Crossover 3
Allow Speaker Protection
Enable Speaker Protection
Tone detected
Higher Order Crossover Enabled
Band LookAhead (ms)
Combiner LookAhead (ms)
Combiner RMS Limit
RMS Limit
Combiner Max Noise Rel Gain
Max Noise Rel Gain
Combiner Max Noise Abs Gain
Max Noise Abs Gain
Combiner Max Noise Thresh
Max Noise Thresh
Combiner Max Noise Thresh (Scaled)
Max Noise Thresh (Scaled)
Combiner Min Sound Thresh
Min Sound Thresh
Combiner Min Sound Thresh (Scaled)
Min Sound Thresh (Scaled)
Combiner Release Time (ms)
Release Time (ms)
Combiner Attack Time (ms)
Attack Time (ms)
Combiner Upwards Threshold
Upwards Threshold
Combiner Downwards Threshold
Downwards Threshold
Combiner Upwards Ratio
Upwards Ratio
Combiner Downwards Ratio
Downwards Ratio
Max Volume
Combiner Max Volume
Combiner Min Volume
Min Volume
Combiner Low  Volume Knee X
Low  Volume Knee X
Combiner High Volume Knee X
High Volume Knee X
Combiner Low  Volume Knee Y
Low  Volume Knee Y
Combiner High Volume Knee Y
High Volume Knee Y
Combiner Sound Gain
Sound Gain
Combiner Smooth Win (ms)
Smooth Win (ms)
Combiner BlockSize (ms)
BlockSize (ms)
Combiner Short Win Enabled
Short Win Enabled
Combiner Short Win PeakDetector
Short Win PeakDetector
Combiner Short Win (ms)
Short Win (ms)
Combiner Short Win Attack (ms)
Short Win Attack (ms)
Combiner Short Win Release (ms)
Short Win Release (ms)
Combiner Short Win Max dBRMS
Short Win Max dBRMS
Combiner Short Win Max dbFS
Short Win Max dBFs
Combiner Long Win Enabled
Long Win Enabled
Combiner Long Win Sec
Long Win Sec
Combiner Long Win Attack (ms)
Long Win Attack (ms)
Combiner Long Win Release (ms)
Long Win Release (ms)
Combiner Long Win Max dBRMS
Long Win Max dBRMS
Make Up Gain
Monitor Band
Bypass Band Comp
Combiner Compression Amount
Combiner Input Amplitude
Combiner Output Amplitude
Crossover Frequencies
Combiner Compressor
Band 4
Band 5
ResampleAndRebufferAudio
FeatureAudioAdaptor.cpp
ConvertToResampledBlockSize(inputNumSamples) == mOutputBlockSize
gainsToLinearPhaseFilter
MicSenseGainsToFIR.cpp
gains.size() == mCplxVectorSize
gainsToMinimumPhaseFilter
EndpointVADSegmentHeuristics.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v7/vpProcessUplink_v7.cpp
vpProcessUplink_v7.cpp
ProcessDSPChain_Uplink
ERROR: mPrimaryEpMicIndex is %d, but epmic only has %d channels
/usr/lib/libAudioIssueDetector.dylib
/usr/local/lib/libAudioIssueDetector.dylib
AudioDataAnalysisManagerCreate
AudioDataAnalysisManagerDispose
AudioDataAnalysisManagerReset
AudioDataAnalysisManagerUpdateReportingSessions
AudioDataAnalysisManagerCreateNodePCM
AudioDataAnalysisManagerCreateNodeSPL
AudioDataAnalysisManagerRemoveNode
AudioDataAnalysisManagerInitialize
AudioDataAnalysisManagerIsSessionInitialized
AudioDataAnalysisManagerProcessAudio
AudioDataAnalysisManagerProcessSPL
AudioDataAnalysisManagerCreateNodeEnvSPL
AudioDataAnalysisManagerProcessEnvSPL
AudioDataAnalysisManagerSetDeviceInfo
AudioDataAnalysisManagerStartServices
AudioDataAnalysisManagerConnectedWiredDeviceIsHeadphone
SVBasedProbability.cpp
Unknown selected model!
BeamformerFD.cpp
Failed to retrieve sample rate from input dictionary.
Failed to retrieve number of mics used from input dictionary.
Failed to retrieve number of beams from input dictionary.
Too many beams.
Failed to retrieve number of coefficients from input dictionary.
Beam
Failed to retrieve the beam description from input dictionary.
Failed to retrieve beam distance from input dictionary.
Failed to retrieve beam azimuth from input dictionary.
Failed to retrieve beam elevation from input dictionary.
EQSelection
aubmfd
vpRouteSetup_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpRouteSetup/vpRouteSetup_v2.cpp
DispatchVPRouteSetup
Unknown Route Type: %d
!"Unknown Route Type!"
gate curr dl gain (I)
gate dl gain target (I)
gate speech prob (I)
gate speex speech prob (I)
gate delta EIR disable
gate delta EIR (I)
gate LvActiveThresh
gate EchoLoudThresh
gate EchoSoftThresh
gate LvmeoOpengateThresh
gate LvmeoOpengateSoftechoThresh
gate LvmeoDbltkgateThresh(D)(I)
gate LvmeoBargeinThresh
gate RefLoudThresh
gate RefSoftThresh(D)(I)
gate DeltaIRThresh
gate MinDLGainTarget 
IR main lobe delay (I)
gate OverrideInitalDeltaIRThresh
gate Soften gate closed decision
gate consider high freq energy
Type1
Type2
Type3
Type4
Type5
Type6
Type7
Type8
Type9
Type10
PreProcessingGain
PostProcessingGain
ECRefMicDelayMilliSec
Echo Latency Correction 8000Hz
Echo Latency Correction 11025Hz
Echo Latency Correction 12000Hz
Echo Latency Correction 16000Hz
Echo Latency Correction 22050Hz
Echo Latency Correction 24000Hz
Echo Latency Correction 32000Hz
Echo Latency Correction 44100Hz
Echo Latency Correction 48000Hz
Echo Centroid Offset
HW Ref Block Size
HW Mic Block Size
Echo Processing Block Size
UpSampling Output Block Size
To enable or disable clip detection, disable==0
AudioDSPMatrixUtility
AUSilenceNonFiniteAnalyzer.cpp
silence
Consecutive Silent Samples (All channels)
Consecutive Silent Samples (Any channel)
Leading Silent Samples
MidStream Silent Samples
NaN Frames Present
Inf Frames Present
MidStream Silence Sample Time
EqualPowerPanningSpatializer
processAccumulating
find_subtriangle_containment
Resampler2 bad sample rate(s) : %11.2f %11.2f
Someone is deleting a Resampler while it is in use.
VBAP
changeSpeakerLocations
initialize
triangleLookup
calculateVBAPGains
delaunayTriangulation
failed to create vDSP biquads
createEncoder
createALLRAD
createALLRAD2
createDecoder
createTDesignDecoder
createRotationMatrix
RamstadSRC::processMono, wrong channel count
RamstadSRC::processStereo, wrong channel count
RamstadSRC::processStereoFrac preflight prediction failed.
RamstadSRC process called without preflight and arguments don't match preflight.
RamstadSRC process called for different number of output samples than preflight.
RamstadSRC process called for number of input samples than outside range of preflight.
AU (%p): 
Untitled
render-quality
element-name
AudioBuffers::Allocate: Too many buffers
AllocatedBuffer::Prepare(): too many buffers
AllocatedBuffer::Prepare(): insufficient capacity
AllocatedBuffer::PrepareNull(): too many buffers
CAException
CA_NoVector
CA_NoVector set; Vector unit optimized routines will be bypassed
hw.optional.avx512f
hw.optional.avx2_0
hw.optional.avx1_0
hw.optional.sse4_2
hw.optional.sse4_1
hw.optional.sse3
hw.optional.sse2
AUOutputBL.cpp
.aupreset
.plist
@@ Strips Aug 11 2022 21:41:32
displayname
Error loading plist file 
*** done.
[%u]
'%s' | <unknown type id: %d)>
'%s' | String{%d} | "%s"
'%s' | Number(float){%d} | %f
'%s' | Number(SInt8){%d} | 0x%02x
'%s' | Number(SInt16){%d} | 0x%04x
'%s' | Number(SInt32){%d} | %-6d 0x%08x %c%c%c%c
'%s' | Dictionary{%d} | %d key/value pairs
aupreset
'%s' | Array{%d} | %d ordered objects
'%s' | %sData{%d} | %d bytes
AUPreset
AudioComponentDescription: %s - 
%s - 
, 0x%X, 0x%X
sysctl
hw.model
home
result = kAudioUnitErr_FailedInitialization
result = mUnit.Uninitialize()
result = mUnit.SetFormat (kAudioUnitScope_Input, 0, inInputFormat)
result = mUnit.SetFormat (kAudioUnitScope_Output, 0, inOutputFormat)
result = SetMaxFramesPerRender (inMaxFrames)
result = mUnit.Initialize()
result = SetInputCallback (mUnit, mUserCallback)
IsUIBuild
%c%d%c
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/CoreAudioUtility/Source/Utility/CALegacyLog.cpp
RegisterScope
ERROR: subscope bits are set in scope: 0x%lx
%.2d:%.2d:%.2d.%.3d 
[%p] 
[%s] 
>%s> 
<%s> 
%d: 
%s: 
error
warning
note
notice
info
details
minutiae
spew
  ERROR:    
WARNING:  
 notice:   
 info:     
 details:  
 minutiae: 
           
tfbsd
TFileBSD.cpp
TFileBSD
~TFileBSD
Initialize
Exists
Create
Create::fopen failed
Create::fclose failed
DeleteFile
Open
Open - file open invalid file permission
Open: Permission denied
Open::fopen failed
Close
Close::fclose failed
Seek
Seek - file not open
Seek::fseeko failed
SeekAsync
GetPosition
Skip
Skip - file not open
Skip::fseeko failed
GetLength
GetLength - file not open
GetLength::fstat failed
Read
Read - file not open
Read::fread
Write
Write - file not open
Write::fwrite
ReadAsync
Clear
CAAudioUnit.cpp
%s%sevaluate condition
%s%scondition evaluated to 'true'
%s%sevaluate decision
%s%sfound no decision to evaluate
%s%sevaluate next...
%s%scondition evaluated to 'false'
%s%sevaluate decision alternative
%s%sfound no decision alternative to evaluate
%s%sevaluate next alternative...
%s%sfailed to create '%s' condition parser
%s%sfailed to create '%s' constraint parser
%s%sfailed to create '%s' decision parser
%s%sfailed to inject data for input %lu
%s%sfailed to inject data for output %lu
%s%sinject audio from "%s" for node %u %s terminal %u
%s%sfailed to set %s audio issue detector client's initial reporter IDs
%s%sfailed to initialize %s audio issue detector client
%s%sfailed to set %s audio issue detector client's reporter IDs
assertion failure: "ExtAudioFileDispose(m_ref) == noErr" -> %lld
%s%sfailed to get property %u status %u
%s%sfailed to read with status %u
%s%screated
VoiceProcessor
Begin REF_ASBD:%s REF_FRAME_SIZE:%u REF_DEVICE_ID:%u REF_PORT_TYPE:%s MIC_ASBD:%s MIC_FRAME_SIZE:%u MIC_DEVICE_ID:%u MIC_PORT_TYPE:%s
InitializeHWInput
Begin OUTPUT_ASBD:%s
InitializeOutput
Begin HW_MIX_ASBD:%s HW_MIX_FRAME_SIZE:%u FEV_ASBD:%s
InitializeDownlinkProcessing
Begin SPEAKER_TELEMETRY_ASBD:%s SPEAKER_TELEMETRY_FRAME_SIZE:%u
InitializeSpeakerTelemetryInput
Begin
End PROPERTY_ID:%u PROPERTY_NAME:%s PROPERTY_VALUE:%s
GetProperty
Begin PROPERTY_ID:%u PROPERTY_NAME:%s PROPERTY_VALUE:%s
SetProperty
GetMaxOutputPacketInfo
%s%sinitialize uplink inputs
assertion failure: "m_data != nullptr" -> %lld
assertion failure: "m_size != 0" -> %lld
%s%sinitialize uplink output
assertion failure: "m_vp->get_property(property_id, property_value).has_value()" -> %lld
assertion failure: "m_capacity != 0" -> %lld
%s%sinitialize downlink inputs and outputs
%s%sinitialize downlink speaker telemetry input
%s%s%s (%s)
assertion failure: "m_audio_buffer_list != nullptr" -> %lld
%s%sgetting maximum number of output frames
%s%sfile handle is null
%s%sfailed to set audio issue detector client's "%s" node format
assertion failure: "!m_graph->sliceDurationCanVary()" -> %lld
assertion failure: "m_graph->sliceDurationCanVary()" -> %lld
%s%sload "%s" file
%s%sfailed to load "%s" file due to exception - %s
assertion failure: "m_type_id" -> %lld
assertion failure: "m_audio_statistics != nullptr" -> %lld
ABTestInitHWInput
ABTestInitOutput
ABTestSaveAUChain
ABTestInitDownlinkProcessing
ABTestInitSpeakerTelemetry
ABTestSaveVPState
assertion failure: "reporter_id_byte_size == reporter_id_count * sizeof(services::AB_Helper::Reporter_ID)" -> %lld
%s%sapplication bundle ID is %s
%s%svoice processing %s bypassed
%s%smedia handoff enabled: %s
%s%ssupported chat flavors are %s
assertion failure: "m_vp != nullptr" -> %lld
%s%spersonal audio notification(s) fired
%s%spersonal audio is %s
%s%spersonal audio preset is %s
assertion failure: "out_abl != nullptr" -> %lld
assertion failure: "out_abl->mBuffers[n].mData != nullptr" -> %lld
assertion failure: "in_abl != nullptr" -> %lld
assertion failure: "in_abl->mBuffers[n].mData != nullptr" -> %lld
assertion failure: "storage_tr.encompasses(client_tr)" -> %lld
%s%sconfigure
%s%sbegin configuration changes
%s%send configuration changes
%s%screated with volume limit target %.2f dBA
%s%svolume limit is %s
%s%svolume limit threshold is %.2f dBA
%s%swill load "%s" file
%s%sopened "%s" file
%s%sparsed "%s" file
%s%sfailed to open "%s" file
%s%sfailed to parse "%s" file due to exception - %s
%s%sdid load "%s" file
%s%strying to %s with cached decision state
%s%strying to %s with new decision state
%s%strying to evaluate new configuration context - %s
%s%swill %s
%s%sdid %s
%s%sfailed to compile graph file - %s
%s%sfailed to compile graph text - %s
%s%sbegin state change
%s%send state change
%s%stear down property list writers
%s%ssaving "props.bin" file to "%s"
%s%sfailed to save "props.bin" file
%s%ssaving "times.bin" file to "%s"
%s%sfailed to save "times.bin" file
assertion failure: audio buffer storage size %u is less than requested frame count %u
assertion failure: failed to query format of %s terminal %u
assertion failure: "for_each_buffer(make_ref(audio_buffer), fill, 0.0f, audio_buffer.get_size().value_or(0u))" -> %lld
assertion failure: "m_backboard != nullptr" -> %lld
%s%sdestroyed
%s%sphone is %s to ear
%s%snew Darwin notification "%s"
assertion failure: "AudioConverterDispose(m_ref) == noErr" -> %lld
assertion failure: "output_audio_buffer_list != nullptr" -> %lld
assertion failure: "callback != nullptr" -> %lld
assertion failure: "m_audio_buffer != nullptr" -> %lld
%s%s%s speech activity event listener block
%s%sspeech activity event started
%s%sspeech activity event ended
%s%swill create port
%s%screating %s %s port with %s block size %u and stream format %s
%s%sdid create port
assertion failure: "server.is_valid()" -> %lld
%s%sbuilding new "%s" graph
%s%sstart creating nodes
%s%sfailed to create new node %u
%s%sstop creating nodes
%s%sstart creating ports
%s%sfailed to create new port %u
%s%sstop creating ports
%s%sstart creating wires
%s%sfailed to create new wire %u
%s%sstop creating wires
assertion failure: "m_value != std::numeric_limits<std::uint32_t>::max()" -> %lld
%s%sadjust "%s" to "%s"
%s%sfailed to adjust "%s"
%s%swill create node
%s%sdid create node
%s%swill create wire
%s%ssetting audio converter SRC algorithm to %u
%s%ssetting audio converter SRC quality to %u
%s%sdid create wire
%s%sunexpected error at line %u column %u in "%s" - %s
%s%sfailed to capture data for input %lu
%s%sfailed to capture data for output %lu
%s%scapture audio to "%s" for node %u %s terminal %u
%s%sfailed to register device orientation listener
%s%sfailed to register UI orientation listener
%s%sfailed to unregister device orientation listener
%s%sfailed to unregister UI orientation listener
create VoiceProcessorV%u
VoiceProcessorV%u is not supported
failed to create VoiceProcessorV%u due to uncaught exception
%s%scompiling file "%s"
%s%scompiling text
%s%scompiling line %2lu - %.*s
%s%sfailed to build DSP graph - graph file path and graph text are missing
%s%sfailed to build DSP graph - compilation error
%s%sfailed to build DSP graph - all input bus sample rates must be equal
%s%sfailed to build DSP graph - all output bus sample rates must be equal
%s%sfailed to build DSP graph - I/O bus sample rates of fixed block size graphs must be equal
%s%ssetting fixed slice duration using block size %u and sample rate %u
%s%ssetting variable slice duration using block size %u and ouptut sample rate %u
%s%ssetting variable slice duration using block size %u and input sample rate %u
%s%sfailed to build DSP graph - block size information is missing
%s%ssetting "%s" resources path
%s%ssetting sample rate conversion algorithm to %u
%s%senabling minium phase sample rate conversion
%s%ssetting sample rate conversion quality to %u
%s%sconnecting to AUPB
%s%sconnecting to RPB
%s%sfailed to %s - %s
assertion failure: "user_info_key.is_valid()" -> %lld
assertion failure: "user_info_value.is_valid()" -> %lld
%s%sfailed to create audio capture directory /%s/
%s%ssetting "%s"
%s%ssetting property %s to %s
%s%ssetting property %s to %u
%s%ssetting property %s to %llu
%s%ssetting property %s to %f
assertion failure: "for_each_buffer(make_ref(m_audio_buffer), fill, 0.0f, frame_count)" -> %lld
assertion failure: "map_state_id == state_id" -> %lld
%s%ssetting parameter %s to %f
%s%swill create new "mic-ref-sync" node
%s%screating "mic-ref-sync" node with time delta of %d samples
%s%sdid create new "mic-ref-sync" node
%s%sbegin uplink initialization
%s%sfailed to begin uplink initialization
%s%send uplink initialization
%s%sfailed to end uplink initialization
%s%sbegin downlink initialization
%s%sfailed to begin downlink initialization
%s%send downlink initialization
%s%sfailed to end downlink initialization
%s%sfailed to %s due to '%s' error at line %u column %u in "%s"
%s%sfailed to %s due to '%s' error at line %u column %u in "%s" - %s
%s%sfailed to write uplink %s input - %s
%s%sfailed to write downlink %s input - %s
%s%sfailed to read downlink hardware DSP output - %s
%s%sinternal re-configuration is required
%s%sinternal re-configuration is not required
%s%sbegin configuration change
%s%sfailed to build uplink DSP
%s%sfailed to build downlink DSP
%s%send configuration change
%s%screated audio data analysis client with session ID %llu
%s%sfailed to create audio data analysis client
%s%sfailed to initialize audio data analysis client
%s%sfailed to build uplink I/O graph - %s
%s%scannot run uplink DSP with uninitialized VoiceProcessor
%s%sfailed to process uplink due to exception - %s
%s%sfailed to reset uplink due to exception - %s
%s%sspeaker telemetry input port is enabled!
%s%sfailed to build downlink I/O graph with '%s' error code at line %u column %u in "%s"
%s%sfailed to build downlink I/O graph with '%s' error code at line %u column %u in "%s" - %s
%s%scannot run downlink DSP with uninitialized VoiceProcessor
%s%sfailed to process downlink due to exception - %s
%s%sfailed to reset downlink due to exception - %s
%s%sfailed to %s with exception - %s
assertion failure: "mControlBlock == nullptr" -> %lld
%s%sfailed to handle configuration changes
%s%sfailed to get global configuration
%s%sfailed to get uplink configuration
%s%sfailed to get configuration for uplink %s DSP node
%s%sfailed to get configuration options for uplink %s DSP node
%s%sfailed to get downlink configuration
%s%sfailed to get configuration for downlink %s DSP node
%s%sfailed to get configuration options for downlink %s DSP node
%s%sget property %u '%.*s'
%s%sfailed to get property %u '%.*s' - %s
%s%sget property %u '%.*s' info
%s%sfailed to get property %u '%.*s' info - %s
%s%sset property %u '%.*s'
%s%svalue of property %u '%.*s' is %s
%s%sfailed to set property %u '%.*s' - %s
assertion failure: "tvalue != nullptr" -> %lld
assertion failure: "in_size <= m_capacity" -> %lld
%s%svalue of property %u '%.*s' for device ID %u is %s
%s%sfailed to get value of property %u '%.*s' for device ID %u with status %u
%s%svalue of property %u '%.*s' for device ID %u, port type %s is %s
%s%sfailed to get value of property %u '%.*s' for device ID %u, port type %s with status %u
assertion failure: "m_service_provider != nullptr" -> %lld
assertion failure: failed to create %s port factory
assertion failure: "!m_data.empty()" -> %lld
%s%smicrophone and reference sample rates must be equal
%s%smicrophone and reference block sizes must be equal
%s%ssetting property %s
%s%sdetected %s configuration state changes
%s%s(%cL) %s
%s%sdetected no %s configuration state changes
%s%sfailed to update audio data analysis client reporter IDs
%s%sRPB server started running
%s%sRPB server stopped running
%s%sregister "%s"
%s%sfailed to send audio statistics message due to exception - %s
%s%sfailed to send audio statistics message to reporter %lld due to exception - %s
%s%sfailed to get audio service type for reporter %lld due to exception - %s
%s%sfailed to copy configuration for reporter %lld due to exception - %s
%25s:%-5d CircularModels: Target elevation not set to (%f), it remains at the current value (%f). Elevation should be in range [-90, 90].
%25s:%-5d CircularModels: Target distance not set to (%f), it remains at the current value (%f). Distance must be nonnegative.
%25s:%-5d CircularModels: Kappa not set. Input length (%lu) and internal length (%u) do not match.
%25s:%-5d CircularModels: TargetSV not set. Input length (%lu) and internal length (%lu) do not match.
%25s:%-5d 
%25s:%-5d invalid HID event dropped
%25s:%-5d HID event copy dropped. event at %f
%25s:%-5d New Button HID event: type %li ts %f block size %lli, absolute time samples %lli
%25s:%-5d ISSUE: sample time jumped by %lli samples
throwing %d
 key 'DSPchain' not found
 could not load DSPchain
 could not get processorSubType string
 could not get processorSubType
 could not create processor
%25s:%-5d LPCore::UpdateLPC: Arguments cannot be null
%25s:%-5d Update index size is too small.
%25s:%-5d _vp: gate: err %d initializing res fft to %d
[%p] initialize
[%p] failed to initialize - cannot operate in variable block size mode
[%p] failed to initialize - sample rates of FrontMic input bus and main output bus must be equal
[%p] failed to initialize - sample rates of BackMic input bus and main output bus must be equal
[%p] failed to initialize - parameter mix frequency must be positive
[%p] failed to initialize - parameter mix frequency must not exceed Nyquist frequency
[%p] cannot process %u frames (maximum frame size is %u)
[%p] cannot process %u input busses (expected input bus count is %u)
[%p] cannot process %u output busses (expected output bus count is %u)
%25s:%-5d notify_cancel() failed
%25s:%-5d notify_register_dispatch failed
%25s:%-5d notify_get_state() failed
%25s:%-5d Unknown exceptiton caught
%25s:%-5d Standard library exception caught: %s
%s: Snap Coordinates initialized with ACL tag %u
%s: Could not locate an IR file at %s
%s: Could not initialize bypassable IR processor
%s: Uninitialized
%25s:%-5d  >vp> ERROR: mPrimaryEpMicIndex is %d, but epmic only has %d channels
%25s:%-5d ASSERTION FAILURE [(mBufferCapacity == 0 || other.mBuffers[i].mDataByteSize <= mBufferCapacity) != 0 is false]: 
dlerror : libAudioIssueDetector ADAM: %s
%25s:%-5d  >vp> Chat flavor not supported in this vp version
%25s:%-5d MultiRadixRealFFT_Create() returned an error. Invalid block size?
%25s:%-5d VoiceProcessorV2::VPAUProcessingBlock::InsertAUIntoProcessingBlock index proposed=%d, current=%d !?
%25s:%-5d Invalid orientation %u
%25s:%-5d Invalid camera direction %u
%25s:%-5d Assertion failed: gap length too small compared to window length
%25s:%-5d Assertion failed: error in filter coeff calc
%25s:%-5d Assertion failed: size mismatch
%25s:%-5d Assertion failed: invalid input length
%25s:%-5d Assertion failed: invalid input size
%25s:%-5d Assertion failed: non-finite detected
%25s:%-5d Assertion failed: bad input size
%25s:%-5d Assertion failed: x is empty
%25s:%-5d Assertion failed: input size mismatch
%25s:%-5d invalid algorithm value '%@'
%25s:%-5d At least one invalid value: PhiOption %i,  SMeanOption %i SCovOption %i
%25s:%-5d At least one invalid value
%25s:%-5d Assertion failed: invalid mask size
 subscript out of bounds
 invalid length
 detection region length is not a power of two!
 covariance matrix must be square
 wrong covariance size
 wrong Phi size
 covariance matrix must be symmetric
%25s:%-5d  >vp> bad mic-speaker delay: expected sample time diff: %.1lf, actual sample time diff: %.1lf
%25s:%-5d  >vp> sprk sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: PROCESSDLAUDIO TRANSIENT INCORRECT BLOCK CONFIG
%25s:%-5d  >vp> warning: processdownlinkaudio: <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 dl mix buff size = %u
dlmix asbd = %s
process dl callcount = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESSDLAUDIO BAD BLOCK CONFIG for over %.6f seconds *****
%25s:%-5d  >vp> processdownlinkaudio: <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
dl mix blk size = %u
dl mix asbd = %s
 process dl callcount = %u
%25s:%-5d  >vp> processdownlinkaudio: SERIOUS ERROR: ioOutputData->mBuffers[0].mDataByteSize = %u, expected = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
%25s:%-5d  >vp> processdownlinkaudio: <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
 STACK_ABL: invalid number of buffers
%25s:%-5d The CFDictionaryRef passed to SetProperty is null.
%25s:%-5d BeamSystemNoiseProfile found in plist.
%25s:%-5d Failed to set BeamSystemNoiseProfile data to SpectralProfile object. Invalid dictionary entry?
%25s:%-5d BeamSystemNoiseProfile dictionary not present in plist.
%25s:%-5d BeamFarfieldEQ found in plist.
%25s:%-5d Failed to set BeamFarfieldEQ data to SpectralProfile object. Invalid dictionary entry?
%25s:%-5d BeamFarfieldEQ dictionary not present in plist.
[%s|%s] Number of channels in AudioChannelLayout = %u does not match number of channels in stream format = %u. Reverting to default layout.
[%s|%s] Setting output stream format: %s
[%s|%s] Number of channels in stream format changed
[%s|%s] Setting default audio channel layout tag = %s for %u channels
[%s|%s] Unsupported number of channels %u in audio channel layout %s: must be two or more
[%s|%s] Number of channels in requested audio channel layout is different than in the stream format. Default audio channel layout %s from preset is ignored. Current audio channel layout tag = %s
[%s|%s] Number of channels %u in requested audio channel layout %s is different than in the stream format. Current audio channel layout tag = %s
[%s|%s] Current output audio channel layout tag = %s
%s: Unsupported input channel count %u
%s: Unsupported output channel count %u
ScottyKernel:%s:%d: This method should not be called, AUScotty should be calling ProcessMultiBuffers!
%25s:%-5d ERROR: Failed accessing strings in GetParameterValueStrings.
[%p] destroyed
[%p] AUReferenceSignal's property list has no "Configurations" key
[%p] AUReferenceSignal's property list has invalid "Configurations" value
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Name" key
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid "Name" value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Gains" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Input" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Input"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Output" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Output"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Gain" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Gain"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Orientations" key
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid "Gains" value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Orientations"][%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Orientations"][%u] has unsupported value
[%p] AUReferenceSignal's property list maps orientation "%s" to multiple configurations: %s
%25s:%-5d NeuralNetRES: Loading SampleRate from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve sample rate."
%25s:%-5d Successfully retrieved sample rate (%g Hz).
%25s:%-5d NeuralNetRES: Loading BlockSize from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve BlockSize."
%25s:%-5d Successfully retrieved BlockSize (%u).
%25s:%-5d NeuralNetRES: Loading NumContextFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve NumContextFrames."
%25s:%-5d Successfully retrieved NumContextFrames (%u).
%25s:%-5d NeuralNetRES: Loading forgetting factor Lambda_TC from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve forgetting factor Lambda_TC."
%25s:%-5d Successfully retrieved forgetting factor Lambda_TC (%g sec.).
%25s:%-5d Internally set the forgetting factor as (%g).
%25s:%-5d NeuralNetRES: Loading ECoutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve ECoutScale."
%25s:%-5d Successfully retrieved ECoutScale (%g).
%25s:%-5d NeuralNetRES: Loading ECleeScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve ECleeScale."
%25s:%-5d Successfully retrieved ECleeScale (%g).
%25s:%-5d NeuralNetRES: Loading FFT2Mel matrix from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "FFT2Mel matrix not loaded."
%25s:%-5d EXCEPTION (%d) [mOutputSize != mNumFFTBins is false]: "NeuralNet output size (%u) is not matching the number of FFT bins (%u)."
%s: Unsupported Sample Rate %f
%25s:%-5d ERROR: Failed to uninitialized internal AU.
%25s:%-5d ERROR: Failed to dispose of internal AU.
%25s:%-5d  <vp> loading DNN VAD graph "%s"
%25s:%-5d  >vp> failed to load DNN VAD graph text
%25s:%-5d  >vp> failed to load DNN VAD graph text with exception: %s
%25s:%-5d  >vp> failed to set DNN VAD graph name
%25s:%-5d  >vp> failed to set DNN VAD graph name with exception: %s
%25s:%-5d  <vp> loading DNN VAD AU strip "%s"
%25s:%-5d  >vp> failed to load DNN VAD AU strip
%25s:%-5d  >vp> failed to load DNN VAD AU strip with exception: %s
%25s:%-5d  <vp> loading DNN VAD property strip "%s"
%25s:%-5d  >vp> file "%s" does not exist
%25s:%-5d  >vp> failed to load DNN VAD property strip
%25s:%-5d  >vp> failed to load DNN VAD property with exception: %s
%25s:%-5d  >vp> Not able to enable DNNVAD
%25s:%-5d  >vp> skip reference mixer setup because reference channel count is 0
%25s:%-5d  >vp> skip reference mixer setup because reference block size is 0
%25s:%-5d  >vp> unknown exception while setting ref signal mixer...
%25s:%-5d  >vp> standard exception while setting ref signal mixer [%s]
%25s:%-5d  <vp> loading echo processing graph "%s"
%25s:%-5d  >vp> failed to load echo processing graph text with unknown exception
%25s:%-5d  >vp> failed to load echo processing graph text with exception : %s
%25s:%-5d  <vp> loading echo processing AU strip "%s"
%25s:%-5d  >vp> failed to load echo processing AU strip with unknown exception
%25s:%-5d  >vp> failed to load echo processing AU strip with exception : %s
%25s:%-5d  <vp> loading echo processing property strip "%s"
%25s:%-5d  >vp> failed to load echo processing property strip with unknown exception
%25s:%-5d  >vp> failed to load echo processing property strip with exception : %s
%25s:%-5d PilotAmplLo limited to %f
%25s:%-5d PilotAmplHi limited to %f
%25s:%-5d Parameter PilotLowerThres greater than PilotUpperThres. Set PilotLowerThres = %f
%25s:%-5d Acting on invalid ThermalMeasurementType
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup. Invalid block size?
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup_Long. Invalid block size?
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup_Cepstrum. Invalid block size?
%25s:%-5d about to throw %s: %s
[%p] will construct
[%p] disposed mTimeFreqConverterInputDelayed
[%p] disposed mTimeFreqConvertersOutput[%d]
[%p] destructed
[%p] block size %u
[%p] check input format before initialization
[%p] input format: %s
[%p] input format is not valid
[%p] input format has %d channels, which is more than the max number of (%d)
[%p] check output format before initialization
[%p] output format for bus %u: %s
[%p] output format is not valid
[%p] output format has %d channels, which is more than the max number of (%d)
[%p] I/O formats are not compatible.
[%p] output GainVector format has %d channels, which is more than the max number of (%d)
[%p] will try to initialize
[%p] Creating NeuralNet model (%d)
[%p] Could not load metadata using the plist, unknown exception.
[%p] Could not load metadata using the plist, exception (%d)
[%p] Could not create NeuralNet model using the plist, exception (%d)
[%p] NeuralNet0 blockSize (%u) and NeuralNet(%u) blockSize (%u) do not match
[%p] NeuralNet0 lookaheadSize (%u) and NeuralNet%u lookaheadSize (%u) do not match
[%p] Defaulting to NeuralNet model (%u) for processing.
[%p] Successfully loaded NeuralNet plist.
[%p] mNeuralNet input size: %lu
[%p] mNeuralNet output size: %lu
[%p] AU's block size (%d) not matching the NeuralNet's block size (%u). Will use a reblocker
[%p] Using legacy block processor with delay = %d samples.
[%p] Using low delay block processor with delay = %d samples.
[%p] No NeuralNets were loaded from plist.
[%p] initialize mask related variables
[%p] Latency for model: %s is %f
[%p] did initialize
[%p] Has ModelNetPathBaseOverride to apply
[%p] NeuralNet initialization using plist in AUNeuralNet failed with an unknown exception.
[%p] NeuralNet initialization using plist in AUNeuralNet failed with %s error %d: %s
[%p] NeuralNet initialization using plist in AUNeuralNet failed with CAException %d: %s.
[%p] Loading embedding mode from plist.
[%p] Failed to retrieve embedding mode
[%p] Successfully retrieved embedding mode (%g).
[%p] Loading default embedding mode from plist.
[%p] Failed to retrieve default embedding mode
[%p] Successfully default retrieved embedding mode (%g).
[%p] Loading embedding size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve embedding size."
[%p] Successfully retrieved embedding size (%g).
[%p] Loading sample rate from plist.
[%p] Successfully retrieved sample rate (%g Hz).
[%p] Loading number of input channels from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve number of input channels."
[%p] Successfully retrieved number of input channels (%u).
[%p] Loading number of output channels from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve number of output channels."
[%p] Successfully retrieved number of output channels (%u).
[%p] Loading lookahead size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve lookahead size."
[%p] Successfully retrieved lookahead size (%u).
[%p] Loading block size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve block size."
[%p] Successfully retrieved block size (%u).
[%p] Loading task ID.
[%p] TaskID read from the plist.
[%p] TaskID not available in the plist.
[%p] TaskID set to (%s).
[%p] NeuralNet input size (%zu) not matching configured number of input channels (%u) times block size (%u).
[%p] NeuralNet output size (%zu) not matching configured number of output channels (%u) times block size (%u).
[%p] Current input sample rate (%g Hz) not matching NeuralNet sample rate (%g).
[%p] NeuralNet's number of input channels (%u) not matching AU's number of input channels (%u).
[%p] NeuralNet's number of output channels (%u) not matching AU's number of output channels (%u).
[%p] NeuralNet is initialized with %u input channels, %u output channels and block size %u.
[%p] cleanup
[%p] Tried to select a mask indexed at (%u), but only (%u) masks are available
[%p] Tried to select a VP mask indexed at (%u), but only (%u) masks are available
[%p] Tried to select a postmask indexed at (%u), but only (%u) masks are available
[%p] Input size of EmbeddingVector  (%lu) is not equal to the the expected size  (%lu).
[%p] Input size of EmbeddingVector (%lu) is not equal to the the expected size  (%lu) or (%lu) is not equal to (%lu).
[%p] ModelNetPathBase is overriden to %s
[%p] ModelNetPathBaseOverride is set to null and thus removed
[%p] The NeuralNetPlist passed to SetProperty is not CFDictionaryRef type or it's null.
[%p] Searching plist for model named (%s)...
[%p] Found model named (%s)...
[%p] Did not find model named (%s)...
[%p] Assuming 1 un-named model exists in the plist
[%p] Finished finding models. Found (%u) models
[%p] Cannot change the BlockProcessor once AU is initialized
[%p] Bad Property Size or value for BlockProcessor selection
[%p] Parameter ID: %d is a read-only and should not be overwritten
[%p] Tried to select a model indexed at (%u), but only (%u) models are available. A new model will not be selected and the previous selection will be used.
[%p] Tried to select a model indexed at (%u), but only (%u) models are available. A new model will not be selected and AUNeuralNet will run as if bypassed (until a new model is selected).
[%p] input not connected
[%p] input format not supported
[%p] processed output format not supported
[%p] gain vector format not supported
[%p] NeuralNet expects input block size %u, and we received %d.
[%p] Setting Embedding failed (%d)
%25s:%-5d Failed to retrieve %s.
%25s:%-5d Successfully retrieved %s (%g).
%s: Filters Updated to IR Data object
%s: ERROR: Filters NOT Updated to IR Data object
%s: Filters can not be generated if the number of drivers is < 2
%s: Filter matrix size inconsistent with user-defined filter length; IR file may not render
%s: WARNING: AUXTC file not found at %s; will proceed without it
%s: AUXTC file found: %s
%s: WARNING: AUXTC file found at %s but is invalid; will proceed without it
%s: Crossover can not be applied if the number of drivers is < 2
%25s:%-5d Invalid featureWindowLengthSeconds!
%25s:%-5d Invalid heuristic name %s
%25s:%-5d Assertion failed: too short
%25s:%-5d Assertion failed: value error
%25s:%-5d  <vp> audio recordings available in %s
%25s:%-5d  >vp> file saving turned OFF! recording directory %s cannot be created
%25s:%-5d  <vp> magic file exists, enabling file saving level %d
%25s:%-5d  <vp> Simulator override file saving level: %d
%25s:%-5d  <vp> master default exists, enabling file saving level %d
%25s:%-5d  <vp> writing properties plist file: %s ...
%25s:%-5d  <vp> writing time stamps plist file: %s ...
%25s:%-5d  <vp> writing error log file: %s  ... 
%25s:%-5d  <vp> writing gating control data file: %s ... 
%25s:%-5d  <vp> writing dlp control data file: %s ... 
%25s:%-5d  >vp> couldn't open file to write: %s  ... 
%25s:%-5d  <vp> File-Saving switch turned on
%25s:%-5d  <vp> File-Saving switch turned off
%25s:%-5d  <vp> vp debug features (HUP) are %s
%25s:%-5d  <vp> master default does not exist, disabling file saving level
%25s:%-5d  >vp> "%s" audio capture not created because file format is empty
%25s:%-5d  <vp> created "%s" audio capture
%25s:%-5d  >vp> failed to create "%s" audio capture
%s: Invalid format: %s
%s: Invalid wave file path: %s
%25s:%-5d  <vp> ____________loguplinkchain:begin___________
%25s:%-5d  <vp> ____________loguplinkchain:end___________
%25s:%-5d  <vp> ____________logdownlinkchain:begin___________
%25s:%-5d  <vp>     %s: %s %s (%p)
%25s:%-5d  <vp>          param %s: %f
%25s:%-5d  <vp>     %s: ON (%p)
%25s:%-5d  <vp> ____________logdownlinkchain:end___________
%25s:%-5d  >vp> %s
%25s:%-5d  <vp> ____________logparams:begin___________
%25s:%-5d  <vp>     PRODUCT: %{private}s
%25s:%-5d  <vp>     Num Ref Ports = %lu, Num Mic Ports = %lu 
%25s:%-5d  <vp>       : Ref Port #%lu=%s
%25s:%-5d  <vp>       : Mic Port #%lu=%s
%25s:%-5d  <vp>     Acoustic ID: %d
%25s:%-5d  <vp>     This product does not have a valid Acoustic ID
%25s:%-5d  <vp>     HW Format REF: %s
%25s:%-5d  <vp>     HW Format MIC: %s
%25s:%-5d  <vp>     HW Block Size REF: %d
%25s:%-5d  <vp>     HW Block Size MIC: %d
%25s:%-5d  <vp>     REF Signal: %s, Hw tap stream: %s
%25s:%-5d  <vp>     HW Format EXT REF: %s
%25s:%-5d  <vp>     HW Trim Gain MIC(ch-%d): %f dB
%25s:%-5d  <vp>     HW Trim Gain REF(ch-%d): %f dB
%25s:%-5d  <vp>     VP Output Format: %s
%25s:%-5d  <vp>     REF Channel BitMap: %x, OUT Channel BitMap: %x
%25s:%-5d  <vp>     HW MIC Channels: %s, BitMap: %x
%25s:%-5d  <vp>     EP MIC Channels: %s, BitMap: %x
%25s:%-5d  <vp>     Primary epmic index: %d
%25s:%-5d  <vp>     SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max)
%25s:%-5d  <vp>     Hw real-world correction: %f samples
%25s:%-5d  <vp>     Ref-Mic Delay: %f msec
%25s:%-5d  <vp>     Pre-echo-processing Digital Input Gain: %f dB
%25s:%-5d  <vp>     Post-echo-processing Digital Input Gain: %f dB
%25s:%-5d  <vp>     Downlink Mix Gain: %f dB
%25s:%-5d  <vp>     Downlink Final Gain Chn 0: %f dB
%25s:%-5d  <vp>     Downlink Final Gain Chn 1: %f dB
%25s:%-5d  <vp>     DL Format FEV: %s
%25s:%-5d  <vp>     DL Format FEV Process: %s
%25s:%-5d  <vp>     DL Format MIX: %s
%25s:%-5d  <vp>     DL Block Size MIX: %d
%25s:%-5d  <vp> ____________logparams:end___________
[%s|%s] cannot change bus count for scope = %u
[%s|%s] Setting input bus count = %u
[%s|%s] Too large max frames per slice: %u
[%s|%s] Initializing with max frames per slice = %u
[%s|%s] Creating %s orientation observer
[%s|%s] AUSMHeadTracker: Setting head tracking = %u based on defaults.
[%s|%s] AUSM_HRIR: Process %s does not support personal HRTF.
[%s|%s] AUSM_HRIR: Setting personal HRTF type = %u based on defaults.
[%s|%s] Personalized HRTF is not supported.
[%s|%s] Using defaults write %@
[%s|%s] Creating a timer to check defaults writes while running
[%s|%s] Applied defaults write %@ %u
[%s|%s] Initializing auto mode reverb
[%s|%s] Error setting early reflection biquads
[%s|%s] Error setting late reverb biquads
[%s|%s] error %d setting stream formats on %s; disabling processing
[%s|%s] error %d setting preset on %s
[%s|%s] error %d initalizing %s; processing disabled
[%s|%s] Cleaning up
[%s|%s] Resetting scope = %u, element = %u
[%s|%s] Invalid input scope element %u
[%s|%s] auto mode reverb not active
[%s|%s] auto mode reverb not initialized
[%s|%s] dispatching update for InputElement #%d:
[%s|%s] dispatching update for all InputElements
[%s|%s] found early length: %f seconds
[%s|%s] could not get the early length, defaulting to %f seconds
[%s|%s] Could not reconfigure auto mode late reverb for input #%u: error %d
[%s|%s] dispatched update for dynamic XTC filter generation:
[%s|%s] updating dynamic XTC filters:
[%s|%s] Replacing custom XTC IR using CFURL %@
[%s|%s] Setting CounteractRotationShader = %s
[%s|%s] Unknown output type %d
[%s|%s] Switching from ProcessMultiple to Render without reinitializing
[%s|%s] PMBLSP return an error %d
[%s|%s] Trying to render while initialization or clean-up is in process
[%s|%s] Trying to render while uninitialized
[%s|%s] Switching from Render to ProcessMultiple without reinitializing
[%s|%s] Cannot render with ProcessMultiple since the samplerate of the input element %u is %f whereas the output samplerate is %f
[%s|%s] ConvertOutputData ERROR: result = %d
[%s|%s] Error %d while fetching the parameter info canRamp: param = %u, scope = %u, element = %u
[%s|%s] Error %d while processing multiple buffer lists
[%s|%s] Error: null input or output buffer lists
[%s|%s] Can't fetch the current parameter value
[%s|%s] Parameter event type unknown (%u)
[%s|%s] First time cue should have been specified at 0!
[%s|%s] Error %d while processing a 0-length time slice
[%s|%s] SetParameter failed, err = %d
[%s|%s] Error %d while processing a time slice
[%s|%s] The number of output buffer lists is not 1 (%u)
[%s|%s] AUSMTrackedHeadPose: User has disabled head-tracking.
[%s|%s] AUSMTrackedHeadPose: Y: %.2f, P: %.2f, R: %.2f, Quat: (%.4f, %.4f, %.4f, %.4f)
[%s|%s] AUSMTrackedHeadPose: Error %d in getting head-pose.
[%s|%s] invalid input scope element = %u (property = %u)
[%s|%s] invalid output scope element = %u (property = %u)
[%s|%s] invalid scope = %u for property = %u
[%s|%s] invalid element = %u for input scope property = %u
[%s|%s] invalid scope = %u for global scope property = %u
[%s|%s] invalid scope = %u for input scope property = %u
[%s|%s] Resetting auto mode reverb
[%s|%s] Resetting FDN
[%s|%s] Resetting HRTFHQ reverb
[%s|%s] Updating HRTFHQ reverb
[%s|%s] can't find dynamics processor %s (%u).
[%s|%s] inData == nullptr
[%s|%s] (scope=%u, element=%u): invalid element (property = %u)
[%s|%s] Setting reverb send decorr filter lengths on Input Element %u to %u:
[%s|%s] Setting reverb send decorr filter lengths on Channel %u to %u:
[%s|%s] Setting reverb send decorr filter coeffs on Input Element %u to %u:
[%s|%s] Setting reverb send decorr filter coeffs on Channel %u to %u:
[%s|%s] SetExclusionZones from dictionary failed with error %d
[%s|%s] probably corrupted binary blob for exclusion zones
[%s|%s] failed to fully parse zone data
[%s|%s] Setting %u exclusion zones on Input Element %u
[%s|%s] SetExclusionZones from array failed with error %d
[%s|%s] invalid data size = %u for property = %u, expected %u
[%s|%s] error %d setting kAudioUnitProperty_MaximumFramesPerSlice on %s
[%s|%s] error %d setting input scope property %u on %s
[%s|%s] error %d setting output scope property %u on %s
[%s|%s] (scope=%u, element=%u): invalid property ID %u
[%s|%s] No factory preset was set.
[%s|%s] error %d setting preset while toggling personalized HRTF choice.
[%s|%s] Clearing personal HRIR dictionary.
[%s|%s] dispatched update for dynamic XTC filter generation #:
[%s|%s] updating dynamic XTC filters
[%s|%s] update dropped
[%s|%s] Early reflections IR is HOA: updating late reverb to use same IR file
[%s|%s] Clearing late reverb HOA IR
[%s|%s] Late IR is HOA: updating early reflections to use same IR file
[%s|%s] Clearing early reflections HOA IR
[%s|%s] invalid element %d (input scope)
[%s|%s] the PlaybackRate parameter value can only be 1.0 with ProcessMultiple as the render method
[%s|%s] invalid parameter id %d (input scope)
[%s|%s] invalid parameter id %d (global scope)
[%s|%s] Warning: scheduling parameters while the parameter smoothing is not set to scheduled parameters.
[%s|%s] Error scheduling unsupported parameter (immediate) #%u: param = %u, scope = %u, element = %u
[%s|%s] Error scheduling unsupported parameter (ramped) #%u: param = %u, scope = %u, element = %u
[%s|%s] Error scheduling unsupported parameter (ramped custom) #%u: param = %u, scope = %u, element = %u
[%s|%s] Save state
[%s|%s] Restore state
[%s|%s] Setting input properties
[%s|%s] Setting channel overrides
[%s|%s] Invalid channel label in the preset, some channel parameters probably being ignored.
[%s|%s] Set SoundStage Parameters
[%s|%s] Found SoundStages in Dictionary, but failed to set parameters on SoundStageManager
[%s|%s] setting factory preset #%u
[%s|%s] invalid output element %u
[%s|%s] Setting output audio channel layout tag = %s
[%s|%s] Can't set output audio channel layout: null layout pointer
[%s|%s] invalid input element %u
[%s|%s] Setting input %u audio channel layout tag = %s
[%s|%s] Can't set input element %u audio channel layout: null layout pointer
[%s|%s] invalid scope %u
Unregistering UI orientation observer %s
Unregistering device orientation observer %s
Orientation handler callback %s
Setting orientation %u on AUSpatialMixerV2_%lu
Registering UI orientation observer %s
Registering device orientation observer %s
%s: error %d setting input stream format %s for %s
%s: error %d setting output stream format %s for %s
%s: error %d uninitializing %s
%s: error %d setting input audio channel layout for %s
%s: error %d setting the maximum frames per slice = %u for %s
%s: error initializing %s
%s: error %d getting input stream format of %s
%s: initialized %s
%s: error %d resetting %s
%s: Can't insert a new track: not enough capacity
%s: Can't insert a new control point: not enough capacity
%s: Can't find a parameter value for parameter = %u, element = %u
%s: Unexpected situation
%s: Can't compute an intermediate parameter value for parameter = %u, element = %u
%s: Unexpected failure for parameter = %u, element = %u
%s: error %d uninitalizing %s
%s: error %d setting preset on %s
%s: error %d initalizing %s; processing disabled
%s: null dictionary ref for %s
%s %s: could not find aufx %s appl
%s %s: could not instantiate aufx %s appl
%s %s: aufx %s appl created; using BaseProcess
%s %s: aufx %s appl created; using ProcessMultiple
%s %s: aufx %s appl only supports render method; processing will be bypassed
%s: disposing of %s
%25s:%-5d Initialize DOAConditioner with time smoothing (%f) and frequency smoothing (%f).
%25s:%-5d Adapt orientation set to %i
%25s:%-5d Target elevation not set to (%f), it remains at the current value (%f). Elevation must be in range [-90, 90].
%25s:%-5d Target distance not set to (%f), it remains at the current value (%f). Distance must be nonnegative.
%25s:%-5d SubbandDOA not set. Input size (%u) and internal size (%lu) do not match.
%25s:%-5d Creating log Hann matrix mNumFreqBins=%u frequencySmoothing=%f
%25s:%-5d Failed to create frequency smoothing matrix!
%25s:%-5d Logging DoA to files -- this is not real-time safe! Use only for debugging
%25s:%-5d Done
 Unable to instantiate VarEQ AU
%25s:%-5d Embedded VarEQ fails with error %u
%25s:%-5d LoudnessCompensationEQEnable defaults-preferences is enabled: %s
 Invalid value for kAUSPLMeterProperty_VolumeMap
%25s:%-5d Volume Input/Mapped: %f, %f
%25s:%-5d Output Sensitivity: %f
 Input volume curve cannot be null
 Output volume curve cannot be null
 Volume curve steps must match
 Not enough volume map points. Mapping requires 2 or more points. Only found %d.
 Input volume curve is not monotonic. %s
 Output volume curve is not monotonic. %s
%25s:%-5d Volume Map component is not in increasing order: %s. Reversing the order.
%25s:%-5d Volume Input Map: %s
%25s:%-5d Volume Output Map: %s
%25s:%-5d Failed to instantiate internal audio units.
%25s:%-5d Failed to set up internal audio units.
%25s:%-5d Failed to initialize internal audio units.
%25s:%-5d Failed to read ULDAT highpass filter cutoff frequency from plist.
%25s:%-5d Error reading AbsoluteSilenceThdDb from AGC plist dictionary.
%25s:%-5d Noise suppressor failed to process.
%25s:%-5d AGC failed to process.
%25s:%-5d Loading SampleRate from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "SampleRate not loaded"
%25s:%-5d Successfully retrieved sample rate (%g Hz).
%25s:%-5d Loading BlockSize from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "BlockSize not loaded."
%25s:%-5d Successfully retrieved sample rate (%u).
%25s:%-5d Loading NumInputChannels from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "NumInputChannels not loaded."
%25s:%-5d Successfully retrieved number of input channels (%u).
%25s:%-5d Loading NumContextFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "NumContextFrames not loaded."
%25s:%-5d Successfully retrieved number of context frames (%u).
%25s:%-5d Loading MCLPOutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "MCLPOutScale not loaded."
%25s:%-5d Successfully retrieved MCLPOutScale (%g).
%25s:%-5d Loading ECOutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "ECOutScale not loaded."
%25s:%-5d Successfully retrieved ECOutScale (%g).
%25s:%-5d Loading LambdaPSD_TC from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "LambdaPSD_TC not loaded."
%25s:%-5d Successfully retrieved the time constant for PSD (%g).
%25s:%-5d Internally set the forgetting factor for PSD as (%g).
%25s:%-5d Loading KalmanProcessStd from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "KalmanProcessStd not loaded."
%25s:%-5d Successfully retrieved Kalman process std (%g).
%25s:%-5d Internally set the Kalman process variance as (%g).
%25s:%-5d Loading KalmanObservationStd from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "KalmanObservationStd not loaded."
%25s:%-5d Successfully retrieved Kalman observation std (%g).
%25s:%-5d Internally set the Kalman observation variance as (%g).
%25s:%-5d Loading WaitFrames from topLevelDict
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "WaitFrames not loaded."
%25s:%-5d Successfully retrieved waitFrames (%u).
%25s:%-5d Loading FFT2Mel matrix from topLevelDict
%25s:%-5d Successfully retreived FFT2Mel.
%25s:%-5d EXCEPTION (%d) [mInputSize != featureVectorSize is false]: "mInputSize of NeuralNet (%u) is not matching the feature vector size (%u)."
%25s:%-5d Retrieved info for property %u (%s)
%25s:%-5d Info for unsupported property (%u) requested.
%25s:%-5d Retrieved property data for property %u (%s)
%25s:%-5d Retrieved (unset) property data for property %u (%s)
%25s:%-5d Property data for unsupported property (%u) requested.
%25s:%-5d Clearing the value of property %u (%s)
%25s:%-5d Attempting to set data for property %u (%s)
%25s:%-5d Failed to set data for property %u (%s)
%25s:%-5d Successfully set data for property %u (%s)
%25s:%-5d Attempting to set an unsupported property: %u
%25s:%-5d Parameter info for unsupported parameter (%u) requested
%s: Initialize failed, status = %d
%s: (InputSignals) is NOT finite: (%d)
%s: (OutputSignals) is NOT finite: (%d)
%s: ERROR: could not initialize the cartesian panner #%i with channel layout tag %u: err=%d
%s: ERROR: not initialized
%s: ERROR: could not compute the panning gains, err=%d
%25s:%-5d DSPEngine configuration file claimed to have tree %s, but it was not found
%25s:%-5d DSPEngine configuration file claimed to have tree %s, but it was an a valid tree
%25s:%-5d Couldn't get DSPEngine configuration tree %s
%25s:%-5d Unknown or unsupported device!!
%25s:%-5d Couldn't find the VP version in the DSPEngine configuration file!
%25s:%-5d Preparing a NeuralNet from topLevelDict.
%25s:%-5d Successfully retrieved implementation type (%s).
%25s:%-5d EXCEPTION (%d): "Unknown implementation type (%s)."
%25s:%-5d Missing dictionary NeuralNetImplementationType, set mImplType to default value.
%25s:%-5d mImplType set to value (%u).
%25s:%-5d Preparing BNNS NeuralNet implementation.
%25s:%-5d Loading NumLayers from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve NumLayers."
%25s:%-5d Successfully retrieved Quantization (%u).
%25s:%-5d Quantization not found, using default (%u) bit.
%25s:%-5d Preparing Espresso NeuralNet implementation.
%25s:%-5d ModelNetPathBase is provided - retriving base path and relative path of the model.
%25s:%-5d EXCEPTION (%d) [modelNetPathBase_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPathBase."
%25s:%-5d EXCEPTION (%d) [modelNetPathRelative_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPath."
%25s:%-5d EXCEPTION (%d) [modelNetPath_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPath."
%25s:%-5d Successfully retrieved model .net path (%s).
%25s:%-5d EXCEPTION (%d) [inputName_ref.get_cf() == nullptr is false]: "Failed to retrieve InputName."
%25s:%-5d Successfully retrieved input name (%s).
%25s:%-5d Embedding name not found, using empty.
%25s:%-5d Embedding name set to (%s).
%25s:%-5d EXCEPTION (%d) [outputName_ref.get_cf() == nullptr is false]: "Failed to retrieve OutputName."
%25s:%-5d Successfully retrieved output name (%s).
%25s:%-5d ComputeEngineName not found, using default.
%25s:%-5d Compute engine name set to (%s).
%25s:%-5d Loading StreamingMode.
%25s:%-5d StreamingMode not found, using default.
%25s:%-5d StreamingMode set to (%d).
%25s:%-5d EXCEPTION (%d) [streamingMode_int >= static_cast<UInt32>(StreamingMode::NumModes) is false]: "StreamingMode (%u) is out of range, a value smaller than (%d) is expected."
%25s:%-5d Run processing once to prewarm the filters.
%25s:%-5d EXCEPTION (%d): "Unknown value for mType (%u)."
%25s:%-5d EXCEPTION (%d) [pNeuralNetImpl == nullptr is false]: "NeuralNet implementation not initialized."
[%s|%s] GetProperty (scope=%u, element=%u): %s called with nullptr for output data
[%s|%s] GetProperty (scope=%u, element=%u): %s internal error: getter not implemented
[%s|%s] SetProperty (scope=%u, element=%u): spatial mixer property dictionary: invalid size %u, expected %u
[%s|%s] SetProperty (scope=%u, element=%u): %s = %s
[%s|%s] SetProperty (scope=%u, element=%u): %s = %s (not changed)
[%s|%s] SetProperty (scope=%u, element=%u): %s value out of range
[%s|%s] SetProperty (scope=%u, element=%u): %s: invalid size %u, expected %u
[%s|%s] SetProperty (scope=%u, element=%u): %s not writable
[%s|%s] SetProperty (scope=%u, element=%u): %s not writable after the AU is initialized
[%s|%s] SetProperty (scope=%u, element=%u): %s: file not found
[%s|%s] SetProperty (scope=%u, element=%u): %s internal error: setter not implemented
[%s|%s] SetPropertyDictionary (scope=%u, element=%u)
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): unsupported number type for dictionary entry %u
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): unsupported data type for dictionary entry %u
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): invalid property ID %u
%25s:%-5d Error initializing EndpointVAD2: %s
%25s:%-5d Error in PushAudioSamples: %s
%25s:%-5d Incorrect number of incoming samples for %d-dimensional EnsembleTimeSeriesBuffer
%25s:%-5d The number of input and output indices must match.
%25s:%-5d Input sample numbers cannot go backward in time!
%25s:%-5d Gap detected in the input time series. Filling in zeros.
%25s:%-5d Number of processed samples exceeds allocated buffer size.
%25s:%-5d The FixedArray object cannot be re-allocated to a different length.
%25s:%-5d mNominalVectorNumber should be the minimum of the time-series counters!
%25s:%-5d Synchronization failure! One time series has outpaced the others: timeSeriesNo %i, synchSampleTime %u, GetSampleTime(eventNo, timeSeriesNo) = %u
%s: Custom Bypass Matrix found in IR file
%s: Custom Bypass Matrix gain vector was not found for input channel label = %u
%s: Custom Bypass Matrix was not found for input channel label = %u
%s: Custom Bypass Matrix was not loaded; invalid dictionary
%s: error %d while initializing source extent processor
%s: ERROR: cannot process with %d output channels
Entering %s
[Loading HRTFs]
[Post-processing HRTFs]
[Calculating AMBI2BIN filters]
[Loading XTCIRs]
[Calculating AMBI2BIS filters]
[Calculating AMBI2LS filters]
[Parameters set to (%f, %f, %f)]
Initializing Grid %s
Initializing Grid and ambisonic encoder %s
%25s:%-5d Initialize called without setting setting plist! Loading plist from path given by a defaults write
%25s:%-5d Plist path given as %s by defaults write value
%25s:%-5d Setting graph slice timing: max slice duration %u, fs %u
%25s:%-5d Configuring graph
%25s:%-5d Initializing graph
%25s:%-5d Graph is null
%25s:%-5d Loaded output channel layout %s (%u) from tuning plist 
%25s:%-5d Supported render modes:
%25s:%-5d ---
%25s:%-5d Tuning name '%s'
%25s:%-5d Input format is %s
%25s:%-5d Output format is %s
%25s:%-5d Updating parameters
%25s:%-5d Updating stream formats
%25s:%-5d Unknown exception!
%25s:%-5d DSP graph exception: %s %s, thrown at %s:%i
%25s:%-5d Done initializing result = %i
%25s:%-5d Setting up beamformers
%25s:%-5d Setting up box %s
%25s:%-5d Bad ref mic for limit wind boost %i
%25s:%-5d Limit wind boost ref is channel %i
%25s:%-5d Failed to set beamformer coefficients, setPropertyError = %i
%25s:%-5d Latency will be reported as %fs
%25s:%-5d Failed to set reported latency, setPropertyError = %i
%25s:%-5d Reported latency not supplied for box %s
%25s:%-5d Failed to find beamformer box or coefficients dictionary!
%25s:%-5d ----
%25s:%-5d Restoring plist from AU preset
%25s:%-5d Error %i while restoring state
%25s:%-5d Saving plist and properties to AU preset
%25s:%-5d AUBase::SaveState didn't produce valid dictionary?
%25s:%-5d Latency is %f
%25s:%-5d The host requested latency before the real value is available!
%25s:%-5d scope %u element %u: incoming (invalid) format %s. required fmt %s
%25s:%-5d Format check for scope %i element %i: %s. Valid: %i
%25s:%-5d Zoom curve loaded from %s
%25s:%-5d %s does not have zoom curve
%25s:%-5d Write-only property LockOrientation was read?
%25s:%-5d Write-only property UnlockOrientation was read?
%25s:%-5d Last orientation / camera direction update mach absolute time was %llu
%25s:%-5d Directory does not exist %s
%25s:%-5d The CFStringRef passed to SetProperty is null.
%25s:%-5d Locking orientation at %s (%i)
%25s:%-5d Orientation locked timed out! Is IO running?
%25s:%-5d Orientation locked after waiting for IO thread
%25s:%-5d Orientation locked without waiting for IO thread
%25s:%-5d Unlocking orientation
%25s:%-5d param %i not found in graph
%25s:%-5d !mGraph
%25s:%-5d %s camera direction (%u): %s (%f)
%25s:%-5d %s TargetUI orientation (%u): %s (%f)
%25s:%-5d %s camera FOV (%u): %f
%25s:%-5d %s param %u: val=%f
%25s:%-5d Ignoring orientation update with unsupported value %u
%25s:%-5d wrong number of buffer lists!
%25s:%-5d preflight gave invalid number of frames to process!
%25s:%-5d exception!
%25s:%-5d Process called without a graph!
%25s:%-5d MultiRadixRealFFT_RealInPlaceTransform() returned an error.
%25s:%-5d ASSERTION FAILURE [(!(fftSize > 1024 * 4)) != 0 is false]: 
%25s:%-5d ASSERTION FAILURE [(!(nDftBuffers > 64)) != 0 is false]: 
%25s:%-5d required key missing '%s'
%25s:%-5d Loading plist file for %s from %s
%25s:%-5d Dictionary file not present on disk!
%25s:%-5d Bad object for key '%s'
%25s:%-5d Bad beam direction string: '%s'
%25s:%-5d Bad orientation string: '%s'
%25s:%-5d AUNeuralNetRES: Initialize.
%25s:%-5d Initialize called without setting setting NeuralNetRESLayers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size is not supported! Setting AU in Bypass mode.
%25s:%-5d AUNeuralNetRES: Successfully Initialized.
%25s:%-5d AUNeuralNetRES: Cleanup().
%25s:%-5d AUNeuralNetRES: Reset.
%25s:%-5d The CFDictionaryRef passed to SetProperty is null.
%25s:%-5d Could not load NeuralNetRES plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetRES plist.
%25s:%-5d Setting the stream format for the second input bus to match the format of the first bus.
%25s:%-5d InputSignals cannot be NULL. It is a required input
%25s:%-5d EchoEstimates cannot be NULL when Beam selection is not Off.
%25s:%-5d AUNeuralNetRES: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUNeuralNetRES: (OutputSignals) is NOT finite: (%u)
%25s:%-5d Initialize
%25s:%-5d Check input format
%25s:%-5d Number of channel in the input stream (%u) not equal to the expected number of channels (%u).
%25s:%-5d Check output form
%25s:%-5d Number of channel in the output stream (%u) not equal to the expected number of channels (%u).
%25s:%-5d Successfully initialized.
%25s:%-5d Cleanup.
%25s:%-5d Reset.
%25s:%-5d Input size of SpatialProbabilityInputSourceProbability is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSourceProbability_CF is not equal to the expected size (prop id: %u).
%25s:%-5d ExternalSourceProbability is not used in the current mode: (%d, %d)
%25s:%-5d Input size of SpatialProbabilityInputSubbandDOA is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSubbandDOA_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Subband DOA is only used for the DOA mode. Current mode is (%d)
%25s:%-5d Input size of SpatialProbabilityInputSteeringVector is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSteeringVector_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Steering vector is not used in the current mode. Current mode is (%d)
%25s:%-5d Steering vector loaded from plist will be overwritten in the current mode. Current mode is (%d)
%25s:%-5d Steering vector to be loaded from a plist.
%25s:%-5d Loading SteeringVectorDictionary was not successful.
%25s:%-5d Input size of SpatialProbabilityInputCDR is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputCDR_CF is not equal to the expected size (prop id: %u).
%25s:%-5d External CDR is not used in the current mode. Current mode is (%d)
%25s:%-5d Input size of SpatialProbabilityInputPostMask is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputPostMask_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Pointer size of SpatialProbabilityInputShapeParameterPerFrequency_CF is not equal to the expected size (prop id: %u).
%25s:%-5d InputSignals cannot be NULL. It is a required input.
%25s:%-5d Number of channels on the input bus in not matching the expected number of channels (%u).
%25s:%-5d Number of channels on the output bus in not matching the expected number of channels (%u).
%25s:%-5d (InputSignals) is NOT finite: (%u)
%25s:%-5d (OutputSignals) is NOT finite: (%u)
%25s:%-5d Initialize Spatial Probability Classes.
%25s:%-5d Create DOA-based estimator
%25s:%-5d Create SV-based estimator (SV dictionary)
%25s:%-5d Sampling rate in the plist (%g Hz) does not match the actual sample rate (%g Hz). Setting the AU in bypass mode.
%25s:%-5d Number of microphones in the plist (%d) does not match the actual number of microphones (%d). Setting the AU in bypass mode.
%25s:%-5d Number of subbbands in the plist (%d) does not match the actual number of subbands (%d). Setting the AU in bypass mode.
%25s:%-5d Number of subbbands in the externalShapeParameterPerFrequency (%d) does not match the actual number of subbands (%d). Setting the AU in bypass mode.
%25s:%-5d External Shape Parameter Per Frequency property was set, but it is not used in the current mode. Current mode is (%d)
%25s:%-5d Create SV-based estimator (external SV)
%25s:%-5d Invalid number (%u) of input buses requested. We only support 1
3 buses.
%25s:%-5d Invalid number (%u) of output buses requested. We only support 1
3 buses.
%25s:%-5d Successfully retrieved sample rate (%iHz).
%25s:%-5d Sample rate is not present in the dictionary.
%25s:%-5d Successfully retrieved profile vector (length %i).
%25s:%-5d Profile vector is not present in the dictionary.
%25s:%-5d Setting up files at %s and %s; sample rate %f
%25s:%-5d HDT: In ClickEventLogger::Finish()
%25s:%-5d HDT: In ClickEventLogger::Finish, writing notification log to file
%25s:%-5d HDT: In ClickEventLogger::Finish, closing the files and cleaning up
%25s:%-5d log zero time not initialized yet, dropping log event
%25s:%-5d Assertion failed: failed to get event
%25s:%-5d Assertion failed: failed to store event
%25s:%-5d ERROR: Unexpected input argument. Must be 1,2,or 3
%25s:%-5d Huge value:removalTime = %llu
%25s:%-5d negative removalTime!? %lli
 unsupported
%25s:%-5d Fatal error: %s
%25s:%-5d AUHearingLossCompensator::Initialize()
%25s:%-5d mSampleRate: %f
%25s:%-5d GetMaxFramesPerSlice(): %u
%25s:%-5d mNumberOfChannels: %u
%25s:%-5d mUsingBlockProcessor: %u
%25s:%-5d mBlockSize: %u
%25s:%-5d mFrequencyDomainInput: %u
%25s:%-5d mBypass: %u
%25s:%-5d mFadeTime_ms: %f
%25s:%-5d mNumFadeFrames: %u
%25s:%-5d mProcessWasCalled: %u
%25s:%-5d Cross-fade Triggered: mBypassCounter: %u
%25s:%-5d Created CircArray Kernel with %u ins, %u outs, SR: %0.0f, %u order algorithm, %lu beam patterns %u frameSize
%25s:%-5d AUECMIMO: Initialize.
%25s:%-5d AUECMIMO: filter (readout) length is set to %u (%u) samples.
%25s:%-5d AUECMIMO: IQRD mode delay is set to %u samples.
%25s:%-5d AUECMIMO: Using logPeriod of (%g)s as specified in defaults write ecmimo_log_period_in_seconds.
%25s:%-5d AUECMIMO: Successfully initialized.
%25s:%-5d AUECMIMO: Cleanup.
%25s:%-5d AUECMIMO: Set iQRD mode.
%25s:%-5d AUECMIMO: Set classic mode.
%25s:%-5d AUECMIMO: Reset.
%25s:%-5d AUECMIMO::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECMIMO: ********* Reset begins *********
AUECMIMO: state variables have finite values (1 if True): %u
AUECMIMO: ref-signal buffers have finite values (1 if True): %u
AUECMIMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMIMO: ********* Reset ends *********
%25s:%-5d AUECMIMO: ********* Logging begins *********
AUECMIMO: logging (period, timestamp): (%f, %f) (s)
AUECMIMO: state variables have finite values (1 if True): %u
AUECMIMO: ref-signal buffers have finite values (1 if True): %u
AUECMIMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMIMO: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECMIMO: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECMIMO: ********* Logging ends *********
%s: Source extent processor is loaded with incorrect configuration. Spatializer will ignore source size.
%s: Unsupported normalization in the source extent IR file, Spatializer will ignore source size.
%s: Could not initialize source extent processor, Spatializer will ignore source size.
%25s:%-5d saving click removal audio file %f %i %s %s
%25s:%-5d file %s created successfully 
%25s:%-5d file creation failed
%s: error %d while initializing the NF processor
%s: error %d while initializing the source extent processor
%s: error %d while initializing the HRIR processor with fileURL=%s
%s: ERROR: wrong number of output channels %d
DSPGraph assertion failure: DSPGraph ABI runtime/compile-time mismatch
MetadataDNNVAD:%s:%d: couldn't initialize due to exception: %s
MetadataDNNVAD:%s:%d: couldn't initialize due to DSPG exception %s: %s
MetadataDNNVAD:%s:%d: unknown exception
MetadataDNNVAD:%s:%d: couldn't uninitialize due to exception: %s
MetadataDNNVAD:%s:%d: couldn't uninitialize due to DSPG exception %s: %s
%25s:%-5d  >vp> snprintf error
%25s:%-5d  <vp> Trying to load tuning %{private}s%s
%25s:%-5d  <vp> Couldn't load tuning strip
%25s:%-5d  <vp> Succesfully loaded tuning strip %{private}s%s
%25s:%-5d  <vp> Tunings loaded successfully for %s-%s-%s! '%{private}s/%{private}s/%{private}s/%{private}s'
%25s:%-5d  <vp> No vocoder tuning fallback could be found for vocoder type %s
%25s:%-5d  >vp> no custom tuning plists found for headphone, headset or endpoint-specific device %s-%s; trying to find tunings for the original ref & mic port types...
%25s:%-5d  >vp> NEW TUNING LOGIC <SERIOUS ERROR>: no tuning plists found. Using default paramters!!! Use case %s-%s-%s
%25s:%-5d  <vp> No tuning plists found due to unknown vocoder type. This could be transient. Using default paramters.
%25s:%-5d setting use case override to %s
%25s:%-5d  <vp> initializevpparams: VAD-BuiltInMicDataSource = %i
%25s:%-5d  <vp> initializevpparams: VAD-BuiltInMicSelection = 0x%x
%25s:%-5d  <vp> dl mix fmt & hw ref fmt were out-of-sync..re-setting while using external ref
%25s:%-5d  >vp> Hey I just met you, and this is crazy, but here's my component 'Audio - DSP Software', so file a radar maybe.
%25s:%-5d  <vp> Tuning loading is bypassed for this device
%25s:%-5d Could not setup TweakaLeak parameter logger
%25s:%-5d Invalid EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid EQ sizes: BQ vectors must be same length
%25s:%-5d Read in %lu biquad/anchor pairs, %lu BQ coeffs each
%25s:%-5d End Initialize()
%25s:%-5d GetPropertyInfo ID=%d scope=%d bus=%d
%25s:%-5d GetProperty ID=%d scope=%d bus=%d
%25s:%-5d SetProperty ID=%d scope=%d bus=%d
%25s:%-5d Too many frames to process: Was told max would be %lu, being asked to process %d
%25s:%-5d wireless charging mat is attached
%25s:%-5d wireless charging mat is not attached
%25s:%-5d wireless charging mat state changed
%25s:%-5d  >vp> mic sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
set up logs in "%s"
set up logs with time stamp "%s"
failed to set up logs due to exception
failed to delete empty logs due to exception
%25s:%-5d Input kappaMin must be lower than kappaMax. Skipping updating model with Prior weighted frequency dependent shape parameter.
%25s:%-5d Input kappaMin must be lower than kappaMax. Skipping updating model with CDR-based frequency dependent shape parameter.
%25s:%-5d Maximum frequency for frequency dependent shape decay must be lower than maximumfrequency. Using fixed shape parameter instead of frequency depedent one.
%25s:%-5d SpatialProbabilityBase: Shape parameter max not set to (%f), it remains at the current value (%f). KappaMax should be >= (%f).
%25s:%-5d SpatialProbabilityBase: Shape parameter min not set to (%f), it remains at the current value (%f). KappaMin should be in range [0, %f].
%25s:%-5d SpatialProbabilityBase: Prior probabilities not set. Source prior (%f) should be in range [0, 1].
%25s:%-5d SpatialProbabilityBase: Prior probabilities not set. Conditional target prior (%f) should be in range [0, 1].
%25s:%-5d  <vp> loading far end voice mix graph "%s"
%25s:%-5d  >vp> failed to load far end voice mix graph text
%25s:%-5d  <vp> loading far end voice mix AU strip "%s"
%25s:%-5d  >vp> failed to load far end voice mix AU strip
%25s:%-5d  <vp> loading far end voice mix property strip "%s"
%25s:%-5d  >vp> failed to load far end voice mix property strip
%25s:%-5d  <vp> loading far end voice DNN VAD graph "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD graph text
%25s:%-5d  <vp> loading far end voice DNN VAD AU strip "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD AU strip
%25s:%-5d  <vp> loading far end voice DNN VAD property strip "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD property strip
[%s|%s] ChannelProcessor: Spatial audio over built-in speakers not available on this hardware; reverting to amplitude panning
[%s|%s] ChannelProcessor: Invalid output type %u when trying to initialize with kSpatializationAlgorithm_UseOutputType
[%s|%s] ChannelProcessor: Invalid spatialization algorithm %u
[%s|%s] ChannelProcessor: Parametric processing is enabled with bypass source mode. Input is set to zero.
[%s|%s] ChannelProcessor: Channel processing dropped because the spatializer is locked
InputElement #%u: Invalid output layout is defined for MatrixMix, resetting output layout = input layout
InputElement #%u: Creating HOA decoders
InputElement #%u: Failed creating HOA decoders: arrays sizes don't match
InputElement #%u: Exception caught in %s when creating the HOA decoders
%s: Invalid MatrixMix Output Type.
%25s:%-5d AUNeuralNetVAD: Start Initialization.
%25s:%-5d Initialize called without setting setting NeuralNetVADLayers plist! Setting AU in Bypass mode.
%25s:%-5d Block Size for DFT must be divisable by 2**4! Setting AU in Bypass mode.
%25s:%-5d Initializing the directional model: azimuth (%f), elev (%f), model type (%d), shape parameter (%f).
%25s:%-5d AUNeuralNetVAD: Successfully Initialized.
%25s:%-5d AUNeuralNetVAD: Resetting state variables. Cleanup() started.
%25s:%-5d Input size of PriorSPP  (%lu) is not equal to the the expected size  (%lu) (prop id: %u).
%25s:%-5d Input size of Prior_SPP  (%lu) is not equal to the the expected size  (%lu) or (%lu) is not equal to (%lu) (prop id: %u).
%25s:%-5d Could not load NeuralNetVAD plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetVAD plist.
%25s:%-5d InputSignal cannot be NULL. It is a required input
%25s:%-5d AUNeuralNetVAD: (InputSignals) is NOT finite: (%u)
%25s:%-5d AUNeuralNetVAD: (OutputSignals) is NOT finite: (%u)
%25s:%-5d  >vp> mNewOutRingBuff has encountered an overrun: tried to write %u but only had space for %u samples
%25s:%-5d  >vp> warning: tsref ring buffer: <slightly ahead> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> tsref ring buffer: <slightly ahead> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> warning: tsref ring buffer: <slightly behind> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> tsref ring buffer: <slightly behind> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> process: ERROR output buffer has encountered an underrun, need %d, have %d samples
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESS - ioOutData buffer (%d bytes) smaller than what VP is configured to output (%d bytes)!
%25s:%-5d  <vp> Invoked the muted talker detection callback, event = %u
%25s:%-5d  <vp> initializedlp: call num %u
%25s:%-5d  <vp> mix %s (blksz %u), voice %s
%25s:%-5d  <vp> initializedlp:   mix asbd = %s
%25s:%-5d  <vp> initializedlp: voice asbd = %s
%25s:%-5d  <vp> initializedlp: mix blk sz = %d
%25s:%-5d  <vp> DL Fade data size = %u
%25s:%-5d  <vp> initspkrtel: asbd = %s, blksz = %d
%25s:%-5d  <vp> InitializeDLP: hwref and dlmix formats were mismatched -- calling Initialize again
%25s:%-5d  <vp> Begin self-reinit (UpdateReferenceSignalFormat)
%25s:%-5d  <vp> End self-reinit (UpdateReferenceSignalFormat)
%25s:%-5d  <vp> initializedlp: [iphone/ipad simulator] disabling all downlink processing
%25s:%-5d  <vp> initializedlp: ul-dl config out of sync
%25s:%-5d  <vp> initializedlp: ul-dl config no longer out of sync
%25s:%-5d  <vp> Re-set mix gain range to [%f, %f]dB
%25s:%-5d  <vp> +++ dl io blk size = %u, num dl io cycles = %u
 matrix size mismatch
 NumRows of input matrix does not match the nCols of output matrix
 NumCols of input matrix does not match the nRows of output matrix
 only good for square matrices
 pivot not large enough
 workspace not large enough
 matrix dim mismatch
 vector size mismatch
 matrix size inconsistency
[%p] constructed
[%p] I/O formats are not compatible
[%p] will initialize with configuration: %s
[%p] channel map is not set (AU will use default channel map instead)
[%p] failed to initialize - channel map size is not equal to number of output channels
[%p] failed to initialize - channel map element %d is larger than number of input channels
%s%sinitializing listeners for bundle ID "%s"
%s%sfailed to initialize due to exception - %s
%s%sgetting preferred chat flavor for bundle ID "%s"
%s%shandling unknown chat flavor %u
%s%sfailed to preferred chat flavor due to exception - %s
%s%ssetting active chat flavor for bundle ID "%s" to "%s"
%s%sfailed to set active chat flavor due to exception - %s
%s%sremoving active chat flavor for bundle ID "%s"
%s%ssetting bypass for bundle ID "%s" to %s
%s%sfailed to set bypass due to exception - %s
%s%ssetting supported chat flavors for bundle ID "%s" to [%s]
%s%sfailed to set supported chat flavors due to exception - %s
%25s:%-5d %s=%f out of range (%f,%f)
%25s:%-5d %s not in param dictionary
%25s:%-5d mass = %f
%25s:%-5d IMONScale = %f
%25s:%-5d VMONScale = %f
%25s:%-5d BandPassLowerCorner = %f
%25s:%-5d BandPassUpperCorner = %f
%25s:%-5d TargetVelocityRatioHigh = %f
%25s:%-5d TargetVelocityRatioLow = %f
%25s:%-5d PeakWindowNumber = %u
%25s:%-5d GainIncrement = %f
%25s:%-5d GainDecrement = %f
%25s:%-5d MomentumWindowDelay_ms = %f
%25s:%-5d VelocityMeasuredRangeMin = %f
%25s:%-5d VelocityMeasuredRangeMax = %f
%25s:%-5d PowerLimit = %f
%25s:%-5d AmpliferGain = %f
%25s:%-5d MeasureToExpectedPowerRatio = %f
%25s:%-5d Creating logs
%25s:%-5d Inductance = %f
%25s:%-5d SineFrequency = %f
%25s:%-5d Kmotor = %f
%25s:%-5d DCResistance (syscfg) = %f
%25s:%-5d TargetVibeVelocity = %f
%25s:%-5d ivBufferSize = %lu
%25s:%-5d %@ = %f
%25s:%-5d momentumWindowDelay_ms: %f, momentumWindowDelay_samples:%u
%25s:%-5d calibrationDelay_samples: %u
%25s:%-5d analysisWindowTime: %f
%25s:%-5d State::Idle->Calibration
%25s:%-5d State::Idle->ComputingMomentum
%25s:%-5d State::Idle->BufferingMomentum
%25s:%-5d State::Idle
%25s:%-5d State::BufferingRcal->Idle:%f
%25s:%-5d State::BufferingRcal->ComputingMomentum:%f
%25s:%-5d Rcal attempted but not successful
%25s:%-5d State::BufferingRcal->BufferingMomentum:%f
%25s:%-5d State::ComputingRCal:%f
%25s:%-5d State::ComputingMomentum->Idle
%25s:%-5d State::ComputingMomentum->BufferingRcal
%25s:%-5d State::ComputingMomentum
%25s:%-5d RCal: %f
%25s:%-5d Found zeros at beginning of Rcal window. New offset %lu
%25s:%-5d Found zeros at beginning of Rcal window. New offset %lu. No Rcal signal found.
%25s:%-5d PilotTempSensor not instantiated before use.
%25s:%-5d abs(vel@%.1f Hz): %f, TargetVelocity Range: (%f, %f), vibePwr: %f, PwrThreshold: %f,  GainFactor: %f
%25s:%-5d Previous sine amplitude %f gives power %f above power limit %f. Override adjustment, decrement gain by %f
%25s:%-5d IV Gain factor is Power limited: %f > %f. Override adjustment, no gain change.
%25s:%-5d VibeAnalyzer not configured or has insufficient data. No gain change.
%25s:%-5d desiredwin=%f, thermalsampleperiod=%d, cnt=%d, f_a_des=%f, f_a=%f, fs=%f
%25s:%-5d in_pwr=%f, mag=%f, fr=%d
[%p] failed to set bypass property; size error; inDataSize[%u]
[%p] failed to initialize - input sample rate[%lf] and output sample rate[%lf] mismatched
[%p] num of buffers in input ABL[%u] greater than num of buffers in output ABL[%u]
[%p] AU has no input busses
[%p] Error[%d] pulling input from bus 0
[%p] Error[%d] pulling input from bus 1
%25s:%-5d AUDereverb: Initialize.
%25s:%-5d AUDereverb: Using logPeriod of (%g)s as specified in defaults write mclp_log_period_in_seconds.
%25s:%-5d AUDereverb: Successfully initialized.
%25s:%-5d AUDereverb: Cleanup.
%25s:%-5d AUDereverb: parameters changed after Initialize, which will allocate memory on the realtime audio thread - only SetParameter before Initialize.
%25s:%-5d AUDereverb: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUDereverb: (OutputSignals, MCLPLeeOut) is NOT finite: (%u, %u)
%25s:%-5d AUDereverb: Initialize MCLP Classes.
%25s:%-5d Fmin must be < (samplingRate/2). Setting Fmin = samplingRate/2.
%25s:%-5d Fmax must be < (samplingRate/2). Setting Fmax = samplingRate/2.
%25s:%-5d Fmin must be <= Fmax. Setting Fmin = Fmax.
%25s:%-5d AUDereverb: ********* Logging begins *********
AUDereverb: logging (period, timestamp): (%f, %f) (s)
%25s:%-5d AUDereverb: DRR measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUDereverb: ********* Logging ends *********
[%s|%p] constructed
[%s|%p] destructed
[%s|%p] will initialize
[%p] will initialize
[%s|%p] compiling graph text
[%p] compiling graph text
[%s|%p] [%2lu]: %.*s
[%p] [%2lu]: %.*s
[%s|%p] compiling graph file: '%s'
[%p] compiling graph file: '%s'
[%s|%p] patcher mode is enabled
[%p] patcher mode is enabled
[%s|%p] setting I/O channel names on MatrixPatcher box
[%p] setting I/O channel names on MatrixPatcher box
[%s|%p] failed to create DSPGraph instance
[%p] failed to create DSPGraph instance
[%s|%p] setting .propstrip on DSPGraph
[%p] setting .propstrip on DSPGraph
[%s|%p] setting .austrip on DSPGraph
[%p] setting .austrip on DSPGraph
[%s|%p] Failed to get format and block size for named format '%s'
[%p] Failed to get format and block size for named format '%s'
[%s|%p] failed to update output format "%s"
[%p] failed to update output format "%s"
[%s|%p] setting fixed slice duration with block size: %d
[%p] setting fixed slice duration with block size: %d
[%s|%p] setting variable slice duration with block size: %d
[%p] setting variable slice duration with block size: %d
[%s|%p] configuring DSPGraph
[%p] configuring DSPGraph
[%s|%p] setting graph property %d
[%p] setting graph property %d
[%s|%p] failed to set graph property %d. Error code: %d
[%p] failed to set graph property %d. Error code: %d
[%s|%p] setting box property %d on %s
[%p] setting box property %d on %s
[%s|%p] failed to set box property %d on %s
[%p] failed to set box property %d on %s
[%s|%p] failed to find %s box inside DSPGraph
[%p] failed to find %s box inside DSPGraph
[%s|%p] failed to set parameter %d on the graph: unspecified error
[%p] failed to set parameter %d on the graph: unspecified error
[%s|%p] failed to set parameter %d on the graph: %s
[%p] failed to set parameter %d on the graph: %s
[%s|%p] initializing DSPGraph
[%p] initializing DSPGraph
[%s|%p] caught unknown exception
[%p] caught unknown exception
[%s|%p] caught std::exception: %s
[%p] caught std::exception: %s
[%s|%p] caught std::system_error: %s
[%p] caught std::system_error: %s
[%s|%p] caught DSPGraph::Exception: %s
[%p] caught DSPGraph::Exception: %s
[%s|%p] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%p] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%s|%p] [WARNING] AudioUnit and DSPGraph formats for input bus %d don't match
[%p] [WARNING] AudioUnit and DSPGraph formats for input bus %d don't match
[%s|%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%s|%p] [WARNING] AudioUnit and DSPGraph formats for output bus %d don't match
[%p] [WARNING] AudioUnit and DSPGraph formats for output bus %d don't match
[%s|%p] [WARNING] AudioUnit format: %s
[%p] [WARNING] AudioUnit format: %s
[%s|%p] [WARNING]  DSPGraph format: %s
[%p] [WARNING]  DSPGraph format: %s
[%s|%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%s|%p] total graph latency : %f, sample rate %u
[%p] total graph latency : %f, sample rate %u
[%s|%p] latency for box %s : %f
[%p] latency for box %s : %f
[%s|%p] did initialize
[%s|%p] failed to initialize with error %d
[%p] failed to initialize with error %d
[%s|%p] will uninitialize
[%p] will uninitialize
[%s|%p] did uninitialize
[%p] did uninitialize
[%s|%p] failed to query property info for property %s (error %d)
[%p] failed to query property info for property %s (error %d)
[%s|%p] unknown exception while getting property %s
[%p] unknown exception while getting property %s
[%s|%p] DSPGraph exception while getting property %s
[%p] DSPGraph exception while getting property %s
[%s|%p] setting graph property %d with CF object: %s
[%p] setting graph property %d with CF object: %s
[%s|%p] Failed to set property on DSP graph: %s %s
[%p] Failed to set property on DSP graph: %s %s
[%s|%p] unknown exception while setting property %s
[%p] unknown exception while setting property %s
[%s|%p] DSPGraph exception while setting property %s
[%p] DSPGraph exception while setting property %s
[%s|%p] failed to set preset on %s box
[%p] failed to set preset on %s box
[%s|%p] failed to process because DSPGraph is null
[%p] failed to process because DSPGraph is null
[%s|%p] [FATAL] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%p] [FATAL] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%s|%p] [FATAL] AudioUnit and DSPGraph formats for input bus %d don't match
[%p] [FATAL] AudioUnit and DSPGraph formats for input bus %d don't match
[%s|%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%s|%p] [FATAL] AudioUnit and DSPGraph formats for output bus %d don't match
[%p] [FATAL] AudioUnit and DSPGraph formats for output bus %d don't match
[%s|%p] [FATAL] AudioUnit format: %s
[%p] [FATAL] AudioUnit format: %s
[%s|%p] [FATAL]  DSPGraph format: %s
[%p] [FATAL]  DSPGraph format: %s
[%s|%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%s|%p] [FATAL] AudioUnit (%d -> %d) and runtime (%d -> %d) I/O bus counts don't match
[%p] [FATAL] AudioUnit (%d -> %d) and runtime (%d -> %d) I/O bus counts don't match
[%s|%p] caught CAXException
[%p] caught CAXException
[%s|%p] Captures folder created : %s
[%p] Captures folder created : %s
%25s:%-5d Assertion failed: invalid output num cols
%25s:%-5d Assertion failed: invalid output num rows
%25s:%-5d Assertion failed: invalid PhiMatrix num cols
%25s:%-5d Assertion failed: zeta shape mismatch
%25s:%-5d Assertion failed: dimension mismatch
%25s:%-5d Assertion failed: Psi must be square
%25s:%-5d Assertion failed: mismatch in OmegaInv size
%25s:%-5d Assertion failed: invalid YSegmentLength
%25s:%-5d Assertion failed: Mis-matched vector sizes!
%25s:%-5d Assertion failed: outClickLogLik stores the no click probability too!
%s:%-5d Invalid number (%u) of input buses requested. We only support 1 bus.
%s:%-5d Invalid number (%u) of output buses requested. We only support 1
2 buses.
%25s:%-5d bad event type %i
%25s:%-5d Waiting on any pending HID queue callbacks
CFProperty::%s: file %s not found
Exception caught in CFURLPropertyCStringInterface::%s
CFURLPropertyCStringInterface::%s: file %s not found
[%s|%s] Number of channels = %u in AudioChannelLayout does not match number of channels = %u in stream format.
[%s|%s] Could not toggle parametric processing as reinitialization of channel processors failed: err = %d
[%s|%s] Creating upmixer with FFT size %u
[%s|%s] ERROR, Upmixer did not initialize properly
[%s|%s] Deleting upmixer
[%s|%s] Parametric Processor is in Headphone Rendering Mode
[%s|%s] Parametric Processor is in BuiltInSpeakers Rendering Mode
[%s|%s] Parametric Processor is in External Speakers Rendering Mode
[%s|%s] Could not initialize Parametric Processor.
[%s|%s] unexpected invalid output layout
[%s|%s] could not initialize the channel processors with output type %u
[%s|%s] could not set the spatialization algorithm with output type %u
[%s|%s] orientation %d set, using previous orientation %d
[%s|%s] using symmetry, flip azimuth = %d, flip channels = %d
[%s|%s] Initialize channel processors called before the input element is initialized
[%s|%s] Initializing channel processors
[%s|%s] Invalid output channel layout, unable to initialize channel processors
[%s|%s] Initializing %u channel processors
[%s|%s] Updating audio channel layout tag = %u (%s)
[%s|%s] Could not update the channel layout as creating MatrixMix failed: err = %d
[%s|%s] invalid input channel layout %d in %s
[%s|%s] Setting HOA bypass matrix for W passthrough
[%s|%s] Standard bypass matrix not available; reverting to a diagonal matrix
[%s|%s] Setting stream format: %s
[%s|%s] Could not set the stream format: invalid samplerate %f
[%s|%s] Could not initialize channel processors after number of channels in a stream changed to %u: error = %d
[%s|%s] Could not set default channel layout after number of channels in a stream changed to %u: error = %d
[%s|%s] Number of channels in requested audio channel layout is different than in stream format. Default audio channel layout %s from preset is ignored. Current audio channel layout tag = %s
[%s|%s] Failed to set audio channel layout %s. Current audio channel layout tag = %s
[%s|%s] Invalid audio channel layout: AudioFormatGetProperty returned error %d
[%s|%s] Current audio channel layout tag = %s
[%s|%s] AUSM_HRIR: Generic HRIR is loaded from %s.
[%s|%s] AUSM_HRIR: Personal HRIR type %u is loaded.
%25s:%-5d Component info: %s %s %s
%25s:%-5d AUBeamNF: Error: Initialized
%25s:%-5d 
AUBeamNF: input stream format: %s
%25s:%-5d 
AUBeamNF: output stream 0 format: %s
%25s:%-5d 
AUBeamNF: output stream 1 format: %s
%25s:%-5d AUBeamNF Error: Converting mic spacing from tuning file
%25s:%-5d AUBeamNF Error: Invalid mic spacing %d
%25s:%-5d Initialize Beam object with: sample rate = %f, optimal frame size = %d, number of beams = %d
%25s:%-5d AUBeamNF: Error: Failed initializing BeamNF object
%25s:%-5d AUBeamNF: Error: AUBeamNFN should have property kAudioUnitProperty_UsesFixedBlockSize set to 1 before initialize
%25s:%-5d Initialize BeamNFN object with: sample rate = %f, transform size = %d, frame size = %d, number of beams = %d
%25s:%-5d AUBeamNF: Error: Failed initializing Beam2N object
%25s:%-5d AUBeamNF: Error: Failed setting diffraction filter and post EQ
%25s:%-5d AUBeamNF: Error loading diffraction filter file at %s
%25s:%-5d AUBeamNF Error: Converting diffraction filter vectors length from tuning file
%25s:%-5d AUBeamNF Error: Invalid diffraction filter data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeamNF: Error no diffraction filter data
%25s:%-5d AUBeamNF: Error loading post EQ file at %s
%25s:%-5d AUBeamNF Error: Converting eq vectors length from tuning file
%25s:%-5d AUBeamNF Error: Invalid post eq data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeamNF: Error no post EQ data
%25s:%-5d AUBeamNF: Error: inFramesToProcess != GetMaxFramesPerSlice(), inFramesToProcess = %d, GetMaxFramesPerSlice() = %d
%25s:%-5d AUBeamNF: Error: Beam object not initialized, won't dump diffraction filter
%25s:%-5d AUBeamNF: Error: Number of unique bands is zero, won't dump diffraction filter
%25s:%-5d AUBeamNF: Error: Beam object not initialized, won't dump post EQ
%25s:%-5d AUBeamNF: Error: Number of unique bands is zero, won't dump post EQ
%25s:%-5d AUBeamNF: Error: Could not open diffraction filter file %s
%25s:%-5d AUBeamNF: Error: Could not read diffraction filter file %s
%25s:%-5d AUBeamNF: Error: Could not open post EQ file %s
%25s:%-5d AUBeamNF: Error: Could not read post EQ file %s
[%p] created
[%p] failed to initialize - sample rates of M1 input bus and main output bus must be equal
[%p] failed to initialize - sample rates of M4 input bus and main output bus must be equal
[%p] will construct with M=%u, K=%u, delta=%f
[%p] successfully constructed
%25s:%-5d AUECSUMO: Initialize.
%25s:%-5d AUECSUMO: Using logPeriod of (%g)s as specified in defaults write ecsumo_log_period_in_seconds.
%25s:%-5d AUECSUMO: Successfully initialized.
%25s:%-5d AUECSUMO: Cleanup.
%25s:%-5d AUECSUMO: ********* Using the initialized window *********
%25s:%-5d AUECSUMO: ********* Window not initialized: returning error *********
%25s:%-5d AUECSUMO: Reset.
%25s:%-5d AUECSUMO: ********* Window Initialized *********
%25s:%-5d AUECSUMO::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECSUMO: ********* Reset begins *********
AUECSUMO: state variables have finite values (1 if True): %u
AUECSUMO: ref-signal buffers have finite values (1 if True): %u
AUECSUMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECSUMO: ********* Reset ends *********
%25s:%-5d AUECSUMO: ********* Logging begins *********
AUECSUMO: logging (period, timestamp): (%f, %f) (s)
AUECSUMO: state variables have finite values (1 if True): %u
AUECSUMO: ref-signal buffers have finite values (1 if True): %u
AUECSUMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECSUMO: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECSUMO: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECSUMO: ********* Logging ends *********
%25s:%-5d AUECSUMO: AOPMode detected (non-realtime logging).
%s: sample rate = %f, frame size = %u
%s: sample rate is zero
%s: invalid FFT size %u
%s: frame size %u is not half of FFT size %u
%25s:%-5d AUBeamIt: Initialize.
%25s:%-5d Initialize called without setting setting BeamFormerCoeffs plist! Setting AU in Bypass mode.
%25s:%-5d Initialize called with properly set BeamFormerCoeffs plist.
%25s:%-5d The number of channels in the input format (%u) is not equal to the number of mics the beamformer expects (%u).
%25s:%-5d The number of channels in the output format (%u) not equal to 1.
%25s:%-5d The number of channels in the output format (%u) is larger than the number of uplink/selection beams (%u).
%25s:%-5d AUBeamIt: Successfully initialized.
%25s:%-5d AUBeamIt: Cleanup.
%25s:%-5d Getting property info for SubbandDOA failed (prop id: %d).
%25s:%-5d Getting property info for SubbandDOA_CF failed (prop id: %d).
%25s:%-5d Getting property EnableSubbandDOACalculation failed (prop id: %d).
%25s:%-5d Getting property SubbandDOA failed (prop id: %d).
%25s:%-5d Getting property SubbandDOA_CF failed (prop id: %d).
%25s:%-5d Setting property BeamformerCoeffs (prop id: %d).
%25s:%-5d BeamformerCoeffs successfully set.
%25s:%-5d Setting property EnableSubbandDOACalculation failed (prop id: %d). *inData should be UInt32. Provided inDataSize = %u.
%25s:%-5d Setting property EnableSubbandDOACalculation to %d (prop id: %d).
%25s:%-5d Setting property EnableSubbandDOACalculation failed (prop id: %d).
%25s:%-5d AUBeamItTD: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUBeamItFD: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUBeamItTD: (BFMicOut, BFLeeOut, AllUplinkBeams, AllSelectionBeams) is NOT finite: (%u, %u, %u, %u)
%25s:%-5d AUBeamItFD: (BFMicOut, BFLeeOut, AllUplinkBeams, AllSelectionBeams) is NOT finite: (%u, %u, %u, %u)
%25s:%-5d AUECMicRef: Initialize.
%25s:%-5d AUECMicRef: Using logPeriod of (%g)s as specified in defaults write ecmicref_log_period_in_seconds.
%25s:%-5d AUECMicRef: Successfully initialize.
%25s:%-5d AUECMicRef: Cleanup.
%25s:%-5d AUECMicRef: Reset.
%25s:%-5d AUECMicRef::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECMicRef: ********* Reset begins *********
AUECMicRef: state variables have finite values (1 if True): %u
AUECMicRef: ref-signal buffers have finite values (1 if True): %u
AUECMicRef: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMicRef: ********* Reset ends *********
%25s:%-5d AUECMicRef: ********* Logging begins *********
AUECMicRef: logging (period, timestamp): (%f, %f) (s)
AUECMicRef: state variables have finite values (1 if True): %u
AUECMicRef: ref-signal buffers have finite values (1 if True): %u
AUECMicRef: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMicRef: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECMicRef: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECMicRef: ********* Logging ends *********
%25s:%-5d AUECMicRef: AOPMode detected (non-realtime logging).
%s:%i will try to construct
%s:%i set the default ioFormat
%s:%i show internal params set to %u
%s:%i constructed
%s:%i cleanup
%s:%i will try to initialize
%s:%i check input and output formats
%s:%i input and output formats must match
%s:%i initialize base
%s:%i update local parameter state before creating the processing graph
%s:%i initialize processing graphs
%s:%i InitializeProcessingGraphs failed
%s:%i allocate temporary ABL
%s:%i update local parameter state after initializing the processing graph
%s:%i initialized
%s:%i initialization duration %lld ms
%s:%i processing latency is %f seconds (%u samples)
%s:%i total latency is %f seconds
%s:%i The host requested latency before the real value is available!
%s:%i AU latency is equal to the processing graph latency
%s:%i Use processing graph latency as an estimate of the tail time
%s:%i set CoreAudio reporter IDs - %s
%s:%i set CoreAudio reporter time period - %f
%s:%i error %i while restoring state
%s:%i tuning mode set to %u
%s:%i processing graphs already created and tuning mode changed from %u to %u
%s:%i processing graphs need to be re-created
%s:%i a single input ABL and a single output ABL is expected, receiver (%u, %u)!
%s:%i bypass graph not initialized
%s:%i bypass preflight gave invalid number of frames to process!
%s:%i processing failed, caught unknown exception
%s:%i processing failed, caught std::exception: %s
%s:%i processing failed, caught std::system_error: %s
%s:%i processing failed, caught CAXException
%s:%i processing failed, caught DSPGraph::Exception: %s
%s:%i processing graph not initialized
%s:%i blending graph not initialized
%s:%i processing preflight gave invalid number of frames to process!
%s:%i blending preflight gave invalid number of frames to process!
%s:%i failed to load nnet plist
%s:%i Number of input channels in the plist (%u) is different from the expected number of input channels (%u)
%s:%i Number of output channels in the plist (%u) is different from the expected number of output channels (%u)
%s:%i create processing graph
%s:%i processing graph was not created
%s:%i setup processing graph
%s:%i setting graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i setup dereverb box
%s:%i drev preset is empty, will set %s to bypass
%s:%i failed to load nnet preset
%s:%i setup processing boxes
%s:%i set modelNetPathBase override on box (%s) to (%s)
%s:%i couldn't find processing box (%s)
%s:%i configure & initialize processing graph
%s:%i setup MWF box
%s:%i couldn't find delay box %s
%s:%i failed to load dnos preset
%s:%i couldn't find box (%s)
%s:%i Delay box %s latency: %f seconds (%u ticks)
%s:%i Processing box %s latency: %f seconds (%u ticks)
%s:%i Delay is not matching processing box latency!
%s:%i processing graph setup failed, caught unknown exception
%s:%i processing graph setup failed, caught std::exception: %s
%s:%i processing graph setup failed, caught std::system_error: %s
%s:%i processing graph setup failed, caught CAXException
%s:%i processing graph setup failed, caught DSPGraph::Exception: %s
%s:%i create blending graph for input/processed mix
%s:%i blending graph was not created
%s:%i setup blending graph
%s:%i setting blending graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i configure blending graph
%s:%i initialize blending graph
%s:%i set the blending parameter
%s:%i blending graph setup failed, caught unknown exception
%s:%i blending graph setup failed, caught std::exception: %s
%s:%i blending graph setup failed, caught std::system_error: %s
%s:%i blending graph setup failed, caught CAXException
%s:%i blending graph setup failed, caught DSPGraph::Exception: %s
%s:%i create bypass with latency graph for input/processed mix
%s:%i bypass with latency graph was not created
%s:%i setup bypass with latency graph
%s:%i setting bypass with latency graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i configure bypass graph
%s:%i processing graph latency is %u samples
%s:%i initialize bypass with latency graph
%s:%i bypass graph setup failed, caught unknown exception
%s:%i bypass graph setup failed, caught std::exception: %s
%s:%i bypass graph setup failed, caught std::system_error: %s
%s:%i bypass graph setup failed, caught CAXException
%s:%i bypass graph setup failed, caught DSPGraph::Exception: %s
%s:%i tuning dir path: %s
%s:%i failed to flush logs due to exception
%s:%i internal CAReporterID is already set to %llu
%s:%i will setup internal CAReporterID
%s:%i interal CAReporterID successfully initialized
%s:%i will teardown the internal CAReporterID
%s:%i internal CAReporterID destroyed
%s:%i will create metrics reporter
%s:%i set CoreAudio reporter IDs to internal reporter - %s
%s:%i metrics reporter created
%s:%i will try to register internal AUs
%s:%i registration successful
%s:%i AUNeuralNet registration failed
%s:%i AUDenoise registration failed
%s:%i AUDereverb registration failed
%s:%i SIMULATOR_ROOT is empty
%s:%i SIMULATOR_ROOT: %s
%s:%i load dictionary from %s
%s:%i loading from %s failed, caught unknown exception
%s:%i loading from %s failed, caught std::exception: %s
%s:%i loading from %s failed, caught std::system_error %d: %s
%s:%i loading from %s failed
%25s:%-5d Successfully retrieved sample rate (%iHz).
%25s:%-5d Sample rate retrieved ambiguously (%iHz).
%25s:%-5d Sample rate is not present in the dictionary.
%25s:%-5d Profile vector is not present in the dictionary.
%25s:%-5d Successfully retrieved profile vector (length %i).
[%p] failed to initialize - I/O sample rates must be equal
[%p] failed to initialize - I/O channel counts must be equal
[%p] cannot process %u input channel streams (expected channel stream count is %u)
[%p] cannot process %u output channel streams (expected channel stream count is %u)
%25s:%-5d AUEndpointVAD: The model dictionary property is unset (required).
%25s:%-5d Initialization failed. Setting the AU to bypass mode.
%25s:%-5d AULoudnessWarrior construction starting
%25s:%-5d Starting Initializing with %d ins, %d outs
%25s:%-5d Could not initilize kernel
%25s:%-5d Changed config plist successfully
%25s:%-5d Could not queue staged kernel!
%25s:%-5d Could not create staged kernel!
%25s:%-5d No valid .plist file set, going to passthrough mode and bypassing LoudnessWarrior
%25s:%-5d No anchor gains defined!
%25s:%-5d No entry in biquad .plist for sample rate of %.0f!
%25s:%-5d Bass or treble BQs not defined correctly for sample rate of %.0f!
%25s:%-5d Invalid bass EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid treble EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid bass EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid bass EQ sizes: BQ vectors must be same length
%25s:%-5d Invalid treble EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid treble EQ sizes: BQ vectors must be same length
%25s:%-5d Time-frequency smoothing update failed
%25s:%-5d HID eventType %li mach time hid_ts=%llu; callback_ts=%llu; latency_ns=%llu; diff=%llu; diff_ns=%llu
%25s:%-5d hid_us=%f; callback_us=%f; latency_us=%f;
%25s:%-5d started
%25s:%-5d setup failed!
%25s:%-5d stopping
%25s:%-5d Invalid number (%u) of input buses requested. We only support 1 bus.
%25s:%-5d Invalid number (%u) of output buses requested. We only support 1
2 buses.
%25s:%-5d Start reading NeuralNetVAD parameters.
%25s:%-5d NeuralNetVAD: Loading SampleRate from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading threshold from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve threshold."
%25s:%-5d Successfully retrieved threshold (%g).
%25s:%-5d NeuralNetVAD: Loading HangA01 from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve HangA01."
%25s:%-5d Successfully retrieved mHangA01 (%g).
%25s:%-5d NeuralNetVAD: Loading HangA10 from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve HangA10."
%25s:%-5d Successfully retrieved HangA10 (%g).
%25s:%-5d NeuralNetVAD: Loading WaitFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve WaitFrames."
%25s:%-5d Successfully retrieved WaitFrames (%u).
%25s:%-5d NeuralNetVAD: Loading NumLayers from topLevelDict.
%25s:%-5d Successfully retrieved NumLayers (%u).
%25s:%-5d NeuralNetVAD: Loading BlockSize from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading NumContextFrames from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading DeltaFeature from topLevelDict.
%25s:%-5d DeltaFeature not found, being set to (%u).
%25s:%-5d Successfully retrieved DeltaFeature (%u).
%25s:%-5d NeuralNetVAD: Loading InputScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve InputScale."
%25s:%-5d Successfully retrieved InputScale (%g).
%25s:%-5d NeuralNetVAD: Loading forgetting factor Lambda_TC from topLevelDict.
%25s:%-5d forgetting factor Lambda_TC not found, being set to (%g).
%25s:%-5d NeuralNetVAD: Loading UseDirectionalMode from topLevelDict.
%25s:%-5d UseDirectionalMode not found, being set to (%g).
%25s:%-5d Successfully retrieved UseDirectionalMode (%g sec.).
%25s:%-5d NeuralNetVAD: Loading DirectionalTargetElevation from topLevelDict.
%25s:%-5d DirectionalTargetElevation not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalTargetElevation (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalTargetAzimuth from topLevelDict.
%25s:%-5d DirectionalTargetAzimuth not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalTargetAzimuth (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalModelType from topLevelDict.
%25s:%-5d DirectionalModelType not found, being set to (%d).
%25s:%-5d Successfully retrieved DirectionalModelType (%d).
%25s:%-5d NeuralNetVAD: Loading Directional Model Shape Parameter from topLevelDict.
%25s:%-5d DirectionalModelShapeParamer not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalModelShapeParamer (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalModelConditionalTargetPrior from topLevelDict.
%25s:%-5d DirectionalModelConditionalTargetPrior not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalModelConditionalTargetPrior (%g).
%25s:%-5d NeuralNetVAD: Loading CombinedProbabilityMode from topLevelDict.
%25s:%-5d CombinedProbabilityMode not found, being set to (%g).
%25s:%-5d Successfully retrieved CombinedProbabilityMode (%g sec.).
%25s:%-5d NeuralNetVAD: Loading SpatialSPPCutOff from topLevelDict.
%25s:%-5d SpatialSPPCutOff not found, being set to (%g).
%25s:%-5d Successfully retrieved SpatialSPPCutOff (%g).
%25s:%-5d NeuralNetVAD: Loading VADinAudioOutputMode from topLevelDict.
%25s:%-5d mVADinAudioOutputMode not found, being set to (%u).
%25s:%-5d Successfully retrieved mVADinAudioOutputMode (%u).
%25s:%-5d NeuralNetVAD: Loading OutputMaskMode from topLevelDict.
%25s:%-5d mOutputMaskMode not found, being set to (%u).
%25s:%-5d Successfully retrieved mOutputMaskMode (%u).
%25s:%-5d NeuralNetVAD: Loading FFT2Mel matrix from topLevelDict.
%25s:%-5d EXCEPTION (%d) [(mInputSize != mNumMelBands*2) is false]: "mInputSize is wrong."
%25s:%-5d EXCEPTION (%d) [(mInputSize != mNumMelBands*mNumContextFrames*(1+mDeltaFeature)) is false]: "mInputSize is wrong."
%25s:%-5d Finish reading NeuralNetVAD parameters: SampleRate=(%d); Threshold=(%4.2f); NumLayers=(%d); WaitFrames=(%d); BlockSize=(%d); Context=(%d); FeatSize=(%d)
[%s|%s] SetProperty (scope=0, element=0): head tracking property (%u) not writable
%25s:%-5d AUDenoise: Initialize.
%25s:%-5d AUDenoise: Using logPeriod of (%g)s as specified in defaults write pmwf_log_period_in_seconds.
%25s:%-5d AUDenoise: Successfully initialized.
%25s:%-5d AUDenoise: Cleanup.
%25s:%-5d Input size of DenoiseInputMaskEstimate is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoiseInputMaskEstimate_CF is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoisePostMaskEstimate is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoisePostMaskEstimate_CF is not equal to the the expected size (prop id: %u).
%25s:%-5d AUDenoise: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUDenoise: (OutputSignals, PMWFLeeOut) is NOT finite: (%u, %u)
%25s:%-5d AUDenoise: Initialize PMWF Classes.
%25s:%-5d AUDenoise: ********* Logging begins *********
AUDenoise: logging (period, timestamp): (%f, %f) (s)
%25s:%-5d AUDenoise: SNR measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUDenoise: ********* Logging ends *********
%25s:%-5d Unknown error thrown
%25s:%-5d Unknown status thrown: %d
%25s:%-5d CircArray Exception: %s (error = %d)
%25s:%-5d Failed to set new config plist: %s (%d)
%25s:%-5d Failed to queue staged kernel
%25s:%-5d Failed to create new kernel: %s (%d)
%25s:%-5d AUCircArray: (InputSignals) is NOT finite
%25s:%-5d AUCircArray: (OutputSignals) is NOT finite
[%p] will construct with M=%u, K=%u
%25s:%-5d Detailed logging set to %d.
%25s:%-5d EXCEPTION (%d) [layer.mWeightsQuantized.size() != weightsNumberOfCoefficients is false]: "NeuralNetBNNS: Layer (%u), number of weights (%lu) is not matching the required number of weights (%lu)."
%25s:%-5d EXCEPTION (%d) [layer.mBiasVector.size() != weightsSizeOutput is false]: "NeuralNetBNNS: Layer (%u), bias size (%lu) is not matching the weight output vector size (%lu)."
%25s:%-5d EXCEPTION (%d) [mDNNLayer[layerIdx].mFilter == nullptr is false]: "NeuralNetBNNS: Layer (%u), filter not created."
%25s:%-5d NeuralNetBNNS: Embeddings not supported in BNNS mode
%25s:%-5d Construct NeuralNetEspresso.
%25s:%-5d Streaming mode None: no initialization required.
%25s:%-5d Streaming mode CopyOutStateToInState: bind input and output states.
%25s:%-5d EXCEPTION (%d) [ioStates_ref.get_cf() == nullptr is false]: "Failed to retrieve InputOutputStates."
%25s:%-5d EXCEPTION (%d) [numStates_ref.get_cf() == nullptr is false]: "Failed to retrieve NumStates from InputOutputStates."
%25s:%-5d Successfully retrieved number of states (%d).
%25s:%-5d Read input and output state names.
%25s:%-5d EXCEPTION (%d) [state_ref.get_cf() == nullptr is false]: "Missing dictionary (%s)."
%25s:%-5d Found the dictionary (%s).
%25s:%-5d EXCEPTION (%d) [inputName_ref.get_cf() == nullptr is false]: "Failed to retrieve InputName from (%s)."
%25s:%-5d Successfully retrieved input state name (%s).
%25s:%-5d EXCEPTION (%d) [outputName_ref.get_cf() == nullptr is false]: "Failed to retrieve OutputName from (%s)."
%25s:%-5d Successfully retrieved output state name (%s).
%25s:%-5d Bind buffers for input and output states.
%25s:%-5d Binding buffer for input state %s
%25s:%-5d Binding buffer for output state %s
%25s:%-5d EXCEPTION (%d) [inState.size() != outState.size() is false]: "Input state %s size (%zu) not matching the output state size %s (%zu)."
%25s:%-5d Max state size %u
%25s:%-5d EXCEPTION (%d): "Unknown streaming mode (%d)."
%25s:%-5d NeuralNetEspresso constructed.
%25s:%-5d Destructing.
%25s:%-5d Compute engine name (%s) not understood. Defaulting to CPU.
%25s:%-5d Trying to set embedding vector, but embedding buffer is not available.
%25s:%-5d Trying to set embedding value, but embedding buffer is not available.
%25s:%-5d EXCEPTION (%d): "Input size (%u) and the actual NN input size (%u) not maching!"
%25s:%-5d EXCEPTION (%d): "Only Float32 inputs supported."
%s:%-5d Number of Input Elements provided is less than the Minimum required.
%s:%-5d Number of Input Elements provided is greather than the Maximum supported.
%s:%-5d Number of Output Elements provided is less than the Minimum required.
%s:%-5d Number of Output Elements provided is greather than the Maximum supported.
%s:%-5d Input Format is Invalid.
%s:%-5d Format for Output Element %u is Invalid.
%s:%-5d Successfully retrieved Algorithm Core Type MicIssueDetectorCorev1 
%s:%-5d Unsupported Algorithm Core Type Provided
%s:%-5d Failed to retrieve blocked mic profile data.
%s:%-5d Failed to retrieve %s.
%s:%-5d Failed to retrieve %s, using default value.
%25s:%-5d _vp: [iphone/ipad simulator] Hardware unknown.  Using default configuration!
%25s:%-5d Hey I just met you, and this is crazy, but here's my component 'Audio - DSP', so file a radar maybe.
%25s:%-5d ASSERTION FAILURE [(!(fftSize > 2048 * 4)) != 0 is false]: 
%25s:%-5d ASSERTION FAILURE [(!(nDftBuffers > 256)) != 0 is false]: 
%25s:%-5d Error initializing ASA features DSP chain: %s
%25s:%-5d Audio sampling rate must be 8000 Hz or higher.
%25s:%-5d AUEndpointVAD2: The top-level plist property is unset. Setting the AU to bypass mode (no VAD outputs).
%25s:%-5d The top-level parameter data structure is not saved internally! Instead, you should query specific AU properties individually.
%25s:%-5d kAUEndpointVAD2Property_EventHandler is write-only.
%25s:%-5d kAUEndpointVAD2Property_DoneProcessingAudioForNonRealTimeDecode is write-only.
%25s:%-5d kAUEndpointVAD2Property_RecurrentVADSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_RecurrentVADNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_EndpointerSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_EndpointerNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d Incorrect number of input samples! Received %d, but expected %d.
%25s:%-5d Current elevation not set to (%f), it remains at the current value (%f). Elevation must be in range [-90, 90].
%25s:%-5d Shape parameter not set to (%f), it remains at the current value (%f). Valid range is >= 0.
%25s:%-5d Conditional target prior not set to (%f), it remains at the current value (%f). Valid range is [0, 1].
%25s:%-5d nnSoftVAD has value (%f). Valid range is [0, 1]. Skipping update.
%25s:%-5d Invalid value for combined probability mode (%u).
%s:%i ---
%s:%i mFOVWasSetLast = %i
%s:%i Setting FOV %f on mDominanceZoom
%s:%i Setting zoom amount %f on mDominanceZoom
%s:%i Done initializing result = %i
%s:%i ----
%s:%i Error %i while restoring state
%s:%i AUBase::SaveState didn't produce valid dictionary?
%s:%i Read param %i val %f from mDominanceZoom
%s:%i param ID %i outValue %f
%s:%i Setting manual zoom amount %f on mDominanceZoom
%25s:%-5d Enabling recording
%25s:%-5d Plist has a bad render mode selectino
%25s:%-5d Compiling graph
%25s:%-5d Plist has unknown outputChannelLayout. Using Binaural by default
%25s:%-5d Orientation %u is smaller than the minimum allowed value (%u)
%25s:%-5d Orientation %u is larger than the maximum allowed value (%u)
%25s:%-5d Camera direction %u is larger than the maximum allowed value (%u)
%25s:%-5d Initialization failed, top level plist is not set.
%25s:%-5d AUBeamItTD: in BeamformerTD::MakePHATBeam. Not sure what to do here. For now just run the same thing as SRP mode.
%25s:%-5d AUBeamItTD: in BeamformerTD::MakeLSDDBeam. Not sure what to do here. For now just run the same thing as SRP mode.
%25s:%-5d  <vp> Starting ... 
%25s:%-5d  <vp> vp debug features are %s
%25s:%-5d  <vp> Constructed!
%25s:%-5d  <vp> VoiceProcessorV2 destroyed!
%25s:%-5d  <vp> Begin self-reinit (SetMode)
%25s:%-5d  <vp> End self-reinit (SetMode)
%25s:%-5d  <vp> operation mode = %i
%25s:%-5d  >vp> setdownlinkvolume failed because mSignaler can't be acquired within %u microseconds
%25s:%-5d  <vp> setdownlinkvolume called with: user volume = %f
%25s:%-5d  <vp> setdownlinkvolume: no need to change volume = %f
%25s:%-5d  >vp> %s reference signal was not expected!
%25s:%-5d  <vp> append signal (%s): <silence optimization, generating zeroes> num frames received = %u.
 hwio buff size = %u
 process callcount = %lu
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: TRANSIENT INCORRECT BLOCK CONFIG
%25s:%-5d  >vp> warning: append signal (%s): <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG for over %.6f seconds *****
%25s:%-5d  >vp> append signal (%s): <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
%25s:%-5d  >vp> append signal (%s): <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
%25s:%-5d invalid format
%25s:%-5d frontendformatconverter : error dst channel index (%d) goes beyond number of channels in out ABL (%d)
 appendsignal: ERROR too many interleaved channels?! data disagrees with ASBD set during InitializeHWInput
%25s:%-5d failed to downmix %u reference signals
%25s:%-5d  >vp> ref sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
%25s:%-5d  >vp> error %d getting input safety offset
%25s:%-5d  >vp> error %d getting output safety offset
%25s:%-5d  <vp> Input safety offset of the aggregate device is %u
%25s:%-5d  <vp> Output safety offset of the aggregate device is %u
%25s:%-5d  >vp> error %d getting IOCycleUsage
%25s:%-5d  >vp> error %d getting input latency
%25s:%-5d  >vp> error %d getting output latency
%25s:%-5d  <vp> Input latency of the aggregate device is %u
%25s:%-5d  <vp> Output latency of the aggregate device is %u
%25s:%-5d  <vp> input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, tap stream latency=%u, safety offset=%u, tap stream input safety offset=%u}
%25s:%-5d  <vp> input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, safety offset=%u}
%25s:%-5d  <vp> iocycleusage = %f
%25s:%-5d  >vp> negative mCorrectedPresentationDelay (%d) clamped to zero
%25s:%-5d  <vp> realworld correction=%f, corrected latency=%d
%25s:%-5d  <vp> after adjusting for ref-mic delay=%d samples (%f msec), corrected latency=%d, additional mic delay(@hwmic rate)=%u
%25s:%-5d  <vp> InstantiateAU: couldn't instantiate 'aufx'|%s AU
%25s:%-5d  >vp> InstantiateAU: couldn't instantiate 'aufx'|%s AU
%25s:%-5d  <vp> InstantiateAU: couldn't find component 'aufx'|%s AU
%25s:%-5d  >vp> InstantiateAU: couldn't find component 'aufx'|%s AU
%25s:%-5d  <vp> called initialize
%25s:%-5d  <vp> called initializedlp
%25s:%-5d  <vp> Updating hwRef to match dlMix format:
 was: %s
 now: %s
%25s:%-5d  <vp> Updating hwRef to match extHwRef format:
 was:%s
 now:%s
%25s:%-5d  <vp> _vp<WARNING>: The DLNS isn't configured at an fft-friendly blocksize (%d vs %d), disabling it for now
%25s:%-5d  >vp> Error in setting proerty ID %u to AU %s error %d
%25s:%-5d  >vp> Error in setting parameter ID %u to AU %s error %d
%25s:%-5d  >vp> instantiateandconfigureeffectau: error (%d) loading FIR coefficients!!! Setting FIR to passthrough
%25s:%-5d  >vp> Unable to set not to allocate internal AU buffers with error (%d)
%25s:%-5d  >vp> Error in initializing AU %s error %d
%25s:%-5d  <vp> instantiateandconfigureeffectau (%s): warning %d due to non-FFT friendly blocksize
%25s:%-5d  <vp> InstantiateAndConfigureAuxAU: %s aux au failed to set property
%25s:%-5d  <vp> use optimized block size for face plant =  %s
%25s:%-5d  >vp> VoiceProcessorV2::DumpToFile() - Dump file is not available
%25s:%-5d Assertion failed: currently supported values are outputCount < inputCount < 2*outputCount
%25s:%-5d Assertion failed: invalid input lengths
%25s:%-5d Assertion failed: olaStack wrong size
%25s:%-5d Assertion failed: ola wrong size
%25s:%-5d Assertion failed: bad audio position
%25s:%-5d Assertion failed: bad window size
%25s:%-5d Assertion failed: bad input length
%25s:%-5d Assertion failed: bad internal state size
%25s:%-5d Assertion failed: bad output size
%25s:%-5d Assertion failed: mis-matched output sizes
%25s:%-5d max block size %lli
%25s:%-5d incoming defaults is nullptr; ignoring
%25s:%-5d Tuning sample rate %f, detection input to removal input latency %f
%25s:%-5d Overriding plist value for detection input to removal input latency %f to %f
%25s:%-5d Loaded tuning with ID '%s'
%25s:%-5d Latency is %lli samples / %f seconds
%25s:%-5d Ring buffer size is %lli samples / %f seconds
%25s:%-5d Huge value:ringBufferSizeSInt64 = %llu
%25s:%-5d started successfully
%25s:%-5d CR: Failed to load plist! Bypass operation
%25s:%-5d CR: disabled by defaults write
%25s:%-5d Record mode is %i
%25s:%-5d creating recorders...
%25s:%-5d recorders %u
%25s:%-5d HID event queue full!
 inFramesToProcess is too big
 need valid ring buffers
%25s:%-5d Huge value:inNumFrames = %llu
 invalid ring buffer index
%25s:%-5d Huge value:osClickTimeSamples = %llu
%25s:%-5d huge eventTimeSamples! %llu
 click must be detected in time for the removal to complete without writing behind the read head.
%25s:%-5d mitigating click of type %li at %lli
 Experimental assertion: if the plist is incorrect then it's possible for the gap filler to 'write behind the read head' and erroneously fill in two non-continugous regions. this assertion hopes to check for this condition.
%25s:%-5d gap filler blowup detected; leaving click in
%25s:%-5d latestSample           %lli
%25s:%-5d earliestSampleToModify %lli
%25s:%-5d earliestSampleToStore  %lli
%25s:%-5d mBlockSize             %lli
 error in ring buffer size calculation
 error in latency calculation
%25s:%-5d click type %li: required detection input: earliest start %lli; latest end %lli
%25s:%-5d click type %li: training region start %lli; end %lli
%25s:%-5d click type %li: required removal input: earliest start %lli; latest end %lli
%25s:%-5d click type %li: possible detection range %lli to %lli
%25s:%-5d click type %li: removalInputRegion %lli to %lli
%25s:%-5d click type %li: possible removal range %lli to %lli
%25s:%-5d %p
Reconfiguring non-existent SharedIRBus channel
%25s:%-5d CLSPKernel_v5::CLSPKernel_v5
%25s:%-5d Ch %d, Parameter updater could not be created. %s. defaulting to Open Loop
%25s:%-5d Ch %d, ConvoyAdaptiveDisplacement requested but configuration missing, defaulting to Open Loop
%25s:%-5d Ch %d, IV only AdaptiveDisplacement not supported, defaulting to Open Loop
%25s:%-5d Ch %d, Convoy calibration parameters within range
%25s:%-5d Ch %d, Convoy calibration parameters out of range or not Coff < CMin < CMax. Defaulting to Open loop displacement. CMax=%f, CMin=%f, Coff=%f
%25s:%-5d Ch %d, Convoy calibration parameters not present
%25s:%-5d Ch %d, Set up for ConvoyAdaptiveDisplacement
%25s:%-5d Ch %d, Set up for OpenLoopDisplacement
%25s:%-5d CLSPKernel_v5::CalcCoeffs
%25s:%-5d CLSPKernel_v5::CalcCoeffsSyncDisp
%25s:%-5d CLSPKernel_v5::Reset
%25s:%-5d System not configured properly for Convoy input stream, clParams=%p, convoyParams=%p, cal=%p, ConvoyCal=%p
%25s:%-5d Using synchronized worst case displacement controller values w_0=%f, x_ul_norm=%f, Q_d=%f, G_bw=%f
%25s:%-5d Analysis period %f is not integer multiple of sine period
%25s:%-5d Safe limit offset = %f, should be negative. Setting to 0.
%25s:%-5d Safe limit %f > thermal limit %f. Setting Safe limit = thermal limit.
%25s:%-5d Delay %f ms at fs=%f is bigger than delay buffer of %u samples
%25s:%-5d Size of delay line %d
created
destroyed
failed to set spatial metadata with status %u
The inData passed to SetProperty is null.
failed to set spatial metadata with status %d
set CoreAudio reporter IDs - %s
set CoreAudio reporter time period - %f
At least one input bus, bus1, is need. It is a required input
Input bus must be mono
At least one output bus, bus1, is need. It is a required output
Output bus must be mono
failed to flush logs due to exception
failed to flush "%s"
%25s:%-5d AUSpeakerProtectionV3::AUSpeakerProtectionV3
%25s:%-5d AUSpeakerProtectionV3::~AUSpeakerProtectionV3
%25s:%-5d AUSpeakerProtectionV3::Initialize
%25s:%-5d sample rate of input buses doesn't match
%25s:%-5d Fmt1: %s
%25s:%-5d Fmt2: %s
%25s:%-5d Input and output audio formats don't match.
%25s:%-5d Using defaults write logging level: %d
%25s:%-5d Logging level set to: %d
%25s:%-5d CPMS file logging enabled.
%25s:%-5d Speaker telemetry data order not provided from property; assuming the default layout.
%25s:%-5d kConvoyExpect5Streams is signalled; adding the Convoy PDM signal to the layout.
%25s:%-5d Telemetry bus layout: [ %s ]
%25s:%-5d Using speaker gain-link grouping from the plist: [ %s ]
%25s:%-5d Speaker gain-link grouping not set; using default (all in group 0).
%25s:%-5d We are all-open loop, or this device does not use SpTS for speaker calibration. MG not queried.
%25s:%-5d This instance is ideally closed-loop; setting up the closed-loop ThermalStateVector_v3.
%25s:%-5d This instance is ideally open-loop; setting up the open-loop ThermalStateVector_v3.
%25s:%-5d CPMS power control (parameter) is enabled.
%25s:%-5d CPMS power control (parameter) is closed loop.
%25s:%-5d Initializing AU with amplifier model: [ %s ]
%25s:%-5d Initializing AU with dummy amplifier model.
%25s:%-5d Ignoring telemetry, as: [ %s ]
%25s:%-5d Could not create kernels, because no plist has been successfully applied. (You must set a plist and re-initialize, or we will apply 20dB of attenuation during processing.)
%25s:%-5d Creating audio logs failed: %s
%25s:%-5d Override SpCl Property with defaults clsp_srdc %f
%25s:%-5d Override missing SpCl Property with defaults clsp_srdc %f
%25s:%-5d Override SpCl Property with defaults clsp_caltemp %f
%25s:%-5d Override SpCl Property with defaults clsp_srdc_r %f
%25s:%-5d Override missing SpCl Property with defaults clsp_srdc_r %f
%25s:%-5d Override SpCl Property with defaults clsp_caltemp_r %f
%25s:%-5d Closed loop checks Ch %d passed: mCLParams.size=%d, nKern=%d, SpClProps.size=%d
%25s:%-5d Closed loop checks failed: mCLParams.size=%d, nKern=%d, SpClProps.size=%d
%25s:%-5d Ch %d, SpClProps:
%25s:%-5d Ch %d, Using closed loop parameters refTemp=%f, invTempCo=%f, RebRef=%f
%25s:%-5d Using SpTS calibration: Requested displacement controller type (%u) for Ch %u is overridden to kOpenLoopDisplacement.
%25s:%-5d Using SpTS calibration: Requested displacement controller for Ch %u was already kOpenLoopDisplacement, as needed.
%25s:%-5d Repair flag is true. Disable closed loop.
%25s:%-5d Ch %d, Using open loop kernel
%25s:%-5d AUSpeakerProtectionV3::Cleanup
%25s:%-5d AUSpeakerProtectionV3::Reset
%25s:%-5d Enable CL -> CLThermalEnabled, PilotToneEnabled: %s
%25s:%-5d Flushing a log.
%25s:%-5d AUSpeakerProtectionV3::SetDefaultFormats
%25s:%-5d AUSpeakerProtectionV3::GetParameterInfo
%25s:%-5d AUSpeakerProtectionV3::SetParameter(%d): %f -> %f
%25s:%-5d Part AUSpeakerProtectionV3::SetParameter(%d): %f -> %f
%25s:%-5d Part AUSpeakerProtectionV3::SetParameter(%d): partElement is null
%25s:%-5d AUSpeakerProtectionV3::SetParamDefaults
%25s:%-5d AUSpeakerProtectionV3::ApplyParameters(): Params up to date. paramSeed=%d; mParamsUpdated=%d
%25s:%-5d Preset does not match AU version. Skipping RestoreState
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Bypass %s->%s
%25s:%-5d Set TransducerCalibration property
%25s:%-5d Set SpeakerCalibration property: Applying calibration data on top of SpTS. Not as intended.
%25s:%-5d Set TransducerCalibrationCF property
%25s:%-5d AUSpeakerProtectionV3::SetProperty - VP Mode %s->%s
%25s:%-5d clsp_enable_closed_loop default exists. Ignoring set property for EnableClosedLoop
%25s:%-5d AUSpeakerProtectionV3::SetProperty - EnableClosedLoop %s->%s
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Telemetry data order. Set as: [ %s ]
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Telemetry data order. Could not be fully parsed (invalid data?).
%25s:%-5d AUSpeakerProtectionV3::SetProperty - IgnoreTelemetry. Set as: [ %s ].
%25s:%-5d AUSpeakerProtectionV3::SetProperty - IgnoreTelemetry. Could not be fully parsed (invalid data?).
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Thermal State Override %u->%u
%25s:%-5d AUSpeakerProtectionV3::SetProperty - CPMSPowerBudget. Could not be fully parsed (invalid data?).
%25s:%-5d SpCl property size %d less than expected SpCl header size %d
%25s:%-5d SpCl property data is null
%25s:%-5d %s
%25s:%-5d inDataSize %d < expected size %d
%25s:%-5d inDataSize %d does not match expected size %d
%25s:%-5d SpCl version not recognized in SpCl header: 0x%x
%25s:%-5d Failed to parse speaker calibration data
%25s:%-5d Cannot get HWParam key: %s
%25s:%-5d scope is null
%25s:%-5d Number of channels key does not match plist number channels
%25s:%-5d ChannelID key does not match channel order
%25s:%-5d Could not read CLParams for ch %zul
%25s:%-5d InitCLParamsFromPlistV7
%25s:%-5d Cannot get CLParams Key
%25s:%-5d InitCLParamsFromPlistV8
%25s:%-5d Ch %d, CLParams:
%25s:%-5d SPP plist version %d is not supported.
%25s:%-5d Failed to get Version key.
%25s:%-5d Cannot get NumChannels Key
%25s:%-5d Cannot get value of NumChannels from the plist.
%25s:%-5d Successfully parsed the system plist params.
%25s:%-5d Successfully parsed all the per-speaker OL thermal params.
%25s:%-5d Successfully parsed all the per-speaker OL displacement params.
%25s:%-5d Applying system params:%s
%25s:%-5d Applying OL thermal params to channel %i:%s
%25s:%-5d Applying OL displacement params to channel %i:%s
%25s:%-5d Could not fully parse all essential plist params.
%25s:%-5d Successfully parsed all %lu the per-speaker CL params.
%25s:%-5d Successfully parsed all %lu ClosedLoopParameters structures.
%25s:%-5d Applying CL params to channel %i:%s
%25s:%-5d Successfully parsed all %lu speaker name params.
%25s:%-5d Could not fully parse speaker name information. Speakers will use their default names.
%25s:%-5d Successfully parsed all %lu gain-link group params.
%25s:%-5d Could not fully parse gain-link group information. All speakers will be in group 0.
%25s:%-5d Successfully parsed all %lu ignore-telemetry params.
%25s:%-5d Could not fully parse ignore-telemetry information. All speakers will honor telemetry.
%25s:%-5d Successfully parsed the power amp efficiency model: [ %s ]
%25s:%-5d Could not fully parse the power amplifier efficiency model. Will use the Dummy model.
%25s:%-5d Successfully parsed the power smoothing time constants: [ %s ]
%25s:%-5d Could not fully parse the power smoothing time constants. Will use the default
%25s:%-5d Successfully parsed the power gain attack release constants: [ %s ]
%25s:%-5d Could not fully parse the power gain attack release constants. Will use the default
%25s:%-5d Successfully parsed the smoothing strategy: [ %s ]
%25s:%-5d Could not fully parse the power smoothing strategy. Will use the default
%25s:%-5d Successfully parsed the power gain limit: %f
%25s:%-5d Could not fully parse the power gain limit. Will use the default
%25s:%-5d Successfully parsed the EnableDisplacementControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableDisplacementControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableThermalControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableThermalControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableCPMSControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableCPMSControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableCPMSClosedLoopControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableCPMSClosedLoopControl param. Will use the default.
%25s:%-5d NumInputElements not consistent with inNumberInputBufferLists
%25s:%-5d IV input format not SInt16 or Float32 - unsupported
%25s:%-5d Telemetry provided, but CheckBuffer() failed: telemetry numBuffers=%u, numCh=%u, dataBytes=%u, inFramesToProcess=%u. Closed loop disabled.
%25s:%-5d No Closed Loop inputs: numberInputBufferLists=%u, inputBufferList[1]=%p
%25s:%-5d mSimpleMeters failed to process; applying 20dB attenuation to this frame. (plist %s successfully applied | AU %s initialized)
%25s:%-5d AUSpeakerProtectionV3 bypassed!
%25s:%-5d Essential plist parsing did not succeed before initialization; applying 20dB attenuation until *successfully* reinitialized. (AU %s initialized)
%25s:%-5d We were initialized with %lu kernels (and for %u channels), but are receiving %u channels of audio. These should all have matched; applying 20dB attenuation to this frame.
%25s:%-5d IV data format not supported. But this should have been caught earlier
%25s:%-5d Closed loop thermals enabled but IV buffer missing or not correct. Disabling CL thermals.
%25s:%-5d Ch %d; T_CL=%6.2f; T_OL=%6.2f; TlimAdj=%6.2f; DGain=%5.2f; TGain=%6.4f; tgtgain=%4.2f, hlimgain=%f, sReb=%f
%25s:%-5d RenderTime %d, RenderTimeDelta %f, HostTime %f
%25s:%-5d IgnoreTelemetry property length (%lu) doesn't match channel count (%u). Ignoring telemetry.
%25s:%-5d AUSpeakerProtectionV3:: Found additional pilot tone params %s, applying to scope
%25s:%-5d Preference '%s %s' retrieved as %s
%25s:%-5d Failed to get Preference: '%s %s'. It exists, but is it the right type?
%25s:%-5d Preference: '%s %s' does not exist.
%25s:%-5d Failed to get Preference: '%s %s'. An exception was caught.
%25s:%-5d Found the %s plist entry for channel %i.
%25s:%-5d Successfully parsed the %s plist entry for channel %i.
%25s:%-5d Failed to fully parse the %s plist entry for channel %i.
%25s:%-5d i %d >= GetNumChannels() %zu
%s:%-5d created
%s:%-5d destroyed
%s:%-5d input and output formats do not match
%s:%-5d Session ID set by user : %llu
%s:%-5d Signal index set by user : %u
%s:%-5d Signal name set by user : %s
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %s -> %s
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %d -> %d
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %i -> %i
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %f -> %f
%25s:%-5d  >vp> couldn't load %s trim gains from MobileGestalt
%25s:%-5d  >vp> couldn't parse %s trim gains - CF data is not invalid
%25s:%-5d  >vp> couldn't parse %s trim gains - raw data is NULL
%25s:%-5d  <vp> loaded %s trim gains header from MobileGestalt: {version=%d, size=%d, count=%d}
%25s:%-5d  >vp> couldn't parse %s trim gains - data structure version %d is not supported
%25s:%-5d  >vp> couldn't parse %s trim gains - raw data size is not valid
%25s:%-5d  >vp> couldn't parse %s trim gains - data structure size is not valid
%25s:%-5d  <vp> loaded %s trim gains from MobileGestalt: {%s}
%25s:%-5d Assertion failed: index calculation error
%25s:%-5d Assertion failed: invalid output size
%25s:%-5d Assertion failed: intermediate is too small!
Magic cookie not supported on this platform
APAC metadata parsing exception: %s
APAC metadata parsing: applying the config
APAC metadata parsing: config applied
MD not supported on this platform
%s: applying
%s: applied
Metadata not supported on this platform
%25s:%-5d SetVideoMode was set on an SNR estimator that does not support it.
%25s:%-5d rebv=%f, reb20=%f desiredwin=%f, thermalsampleperiod=%d, tau=%f, cnt=%d, f_a_des=%f, f_a=%f, fs=%f
%s: ERROR: cannot process with %d output channels != 2
%s: ERROR: cannot process with %d output channels != %d
 FATAL - mFilterList size does not match inABL size!
%s: loaded preset %s
%s: could not load preset %s
%s: factory preset #%d not defined
%s: %s for factory preset #%d not found
Invalid/unset factory preset, no adjustment of tuning parameter has been made.
Invalid preset file path, no adjustment of tuning parameter has been made..
Could not load built-in speaker preset file: invalid model/product name!
%25s:%-5d Error processing lp noise estimate post-processor, possibly bypassed.
%25s:%-5d Failed to load noise estimate post-processor. Most likely wrong sample rate:%d. Will be bypassed
%25s:%-5d SetNoiseEstimator() failed.
%25s:%-5d SetSNREstimator() failed.
%25s:%-5d Unspecified error in SetNoiseEstimator().
%25s:%-5d Error in SetNoiseEstimator(): %s (%s)
%25s:%-5d Unspecified error in SetSNREstimator().
%25s:%-5d Error in SetSNREstimator(): %s (%s)
%25s:%-5d AULoudnessInNoise: Initialize
%25s:%-5d Setting property DATA (prop id: %d).
%25s:%-5d Linn Data successfully set.
 ca_require: %s %s
%25s:%-5d  <vp> setproperty: thermal budget on AU (%d); count = %u
%25s:%-5d  <vp> setproperty: AU (%d) enabled = %d, null = %d
%25s:%-5d  <vp> setproperty: thermal budget dict is empty
%25s:%-5d  <vp> setproperty: spatial metadata = "%s"
%25s:%-5d  <vp> setproperty: spatial metadata
%25s:%-5d  <vp> setproperty: media chat old volume:[%f], new volume:[%f]
%25s:%-5d  <vp> Forcing bypass to false due to chat flavor
%25s:%-5d  <vp> setproperty: bypass =%d
%25s:%-5d  <vp> setproperty: mute uplink output =%d
%25s:%-5d  <vp> setproperty: mute downlink voice =%d
%25s:%-5d  <vp> setproperty: enableagc=%d (currently: enableagcdefault=%d, clientsetenableagc=%d, agc=%p).
%25s:%-5d  <vp> setproperty: current state of media chat = [%s], new state of media chat = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_EnableMediaChat)
%25s:%-5d  <vp> End self-reinit (kVPProperty_EnableMediaChat)
%25s:%-5d  >vp> setproperty: feature was not enabled
%25s:%-5d  >vp> setproperty: media chat for vp version = %u is not supported
%25s:%-5d  <vp> setproperty: current state of spatial chat = [%s], new state of spatial chat = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_EnableSpatialChat)
%25s:%-5d  <vp> End self-reinit (kVPProperty_EnableSpatialChat)
%25s:%-5d  >vp> setproperty: spatial chat for vp version = %u is not supported
%25s:%-5d  <vp> setproperty: spatial head tracking configuration with mode %u and head tracking %s
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s ]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s ]
%25s:%-5d  <vp> setproperty: current state of media playback on external device = [%s], new state of media playback on external device = [%s]
%25s:%-5d  <vp> setproperty: chat flavor value changed to = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
%25s:%-5d  <vp> End self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
%25s:%-5d  <vp> Voice isolation not supported, ignoring incoming property
%25s:%-5d  <vp> Begin self-reinit (kVPParameter_DisableVP)
%25s:%-5d  <vp> End self-reinit (kVPParameter_DisableVP)
%25s:%-5d  <vp> setproperty: disable vp = %s.  
%25s:%-5d  >vp> setproperty: HwHasVP got invalid data
%25s:%-5d  <vp> Begin self-reinit (kVPParameter_HwHasVP)
%25s:%-5d  <vp> End self-reinit (kVPParameter_HwHasVP)
%25s:%-5d  <vp> setproperty: hw has vp = %s.  
%25s:%-5d  >vp> failed to set microphone trim gains property due to exception
%25s:%-5d  >vp> failed to set reference trim gains property due to exception
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpeakerCalibrationDataCF)
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpeakerCalibrationDataCF)
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_PrimaryCodecType)
%25s:%-5d  <vp> End self-reinit (kVPProperty_PrimaryCodecType)
%25s:%-5d  <vp> setproperty: primary audio vocoder type = %s(%d) 
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_PrimaryCodecSampleRate)
%25s:%-5d  <vp> End self-reinit (kVPProperty_PrimaryCodecSampleRate)
%25s:%-5d  <vp> setproperty: re-initializing speech enhancer; old ul blk sz = %u; new ul blk size = %u; old ul sr = %lf; new ul sr = %lf
%25s:%-5d  <vp> setproperty: primary vocoder sample rate = %f 
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_TelephonyMicDSPSettings)
%25s:%-5d  <vp> End self-reinit (kVPProperty_TelephonyMicDSPSettings)
%25s:%-5d  <vp> setproperty: mic custom dsp settings
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_TelephonyRefDSPSettings)
%25s:%-5d  <vp> End self-reinit (kVPProperty_TelephonyRefDSPSettings)
%25s:%-5d  <vp> setproperty: ref custom dsp settings
%25s:%-5d  <vp> setproperty: beam former direction = %s
%25s:%-5d  >vp> Error %d from applying beam direction
%25s:%-5d  <vp> setproperty: chat flavor = %u
%25s:%-5d  <vp> setproperty: hardware volume =%f dB
%25s:%-5d  <vp> AU HLC exists in the VP chain applying HW vol =>%f
%25s:%-5d  <vp> [VolumeLimit] AUSPLMeter exists in the VP chain; applying HW vol =>%f
%25s:%-5d  <vp> [VolumeLimit] SPLTarget update %f
%25s:%-5d  <vp> [VolumeLimit] Setting target LKFS on LDNM to %f
%25s:%-5d  >vp> [VolumeLimit] Failed to et LKFS from AUSPLMeter. Error = %d
%25s:%-5d  <vp> setproperty: is tap stream enabled  = %d
%25s:%-5d  <vp> MutedSpeechActivityEventListener is registered with VP
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_MixStereoToMono [%s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_MixStereoToMono [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_ContinuityCaptureMode
%25s:%-5d  <vp> End self-reinit (kVPProperty_ContinuityCaptureMode
%25s:%-5d Read plist key: %s = %f
%25s:%-5d Cannot read plist key: %s
%25s:%-5d Read plist key: %s
%25s:%-5d Requested ConvoyAdaptiveDisplacement but ParameterUpdaterConfig is not valid
%25s:%-5d Requested ConvoyAdaptiveDisplacement but ParameterUpdaterConfig key is missing from spp3 plist
%25s:%-5d VAD LPC block size %f ms is larger than %f.
%25s:%-5d VAD LPC block size is %d.
%25s:%-5d VAD LPC order %d is larger than %d.
%25s:%-5d VAD LPC order is %d.
%25s:%-5d VAD autocorrelation length %f ms is larger than %f.
%25s:%-5d VAD autocorrelation block size is %d.
%25s:%-5d VAD min periodicity tracking frequency %f Hz is less than %f.
%25s:%-5d VAD max periodicity tracking frequency %f Hz is greater than %f.
%25s:%-5d VAD sparsity length %f ms is larger than %f.
%25s:%-5d VAD sparsity block size is %d.
%25s:%-5d AGC VAD ERROR: received too many samples: %d; fs in = %f, fs internal = %f, maxBlockSize = %d
%25s:%-5d AUAGCV2 calibration meter: %2.1f dB
%25s:%-5d Trying to set peakFinderWindowTime_ms past max capacity
HOASpatializer: Number of outputs does not match with desired HOA order; reducing order, only %u channels will be active (others muted)
%s: SourceExtentProcessor is not available, HOASpatializer will ignore source extent
%25s:%-5d overriding gap filler type in tuning plist (%s) with type %s
%25s:%-5d Invalid key set for AR gap filler tuning: %s; expected keys %s
%25s:%-5d Loading bypassing gap filler. Type = '%s'
%25s:%-5d Assertion failed: ring buffer too small
%25s:%-5d Assertion failed: input buffer too small
%25s:%-5d Assertion failed: input too small
%25s:%-5d Assertion failed: training region will extend past the end of x
%25s:%-5d Assertion failed: bad backwards training region length
%25s:%-5d Assertion failed: buffer is too small
%25s:%-5d Assertion failed: region is too small
%25s:%-5d Assertion failed: index error
%25s:%-5d AUEndpointVAD3: The top-level plist property is unset. Setting the AU to bypass mode (no VAD outputs).
%25s:%-5d kAUEndpointVAD3Property_EventHandler is write-only.
%25s:%-5d kAUEndpointVAD3Property_DoneProcessingAudioForNonRealTimeDecode is write-only.
%25s:%-5d kAUEndpointVAD3Property_RecurrentVADSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_RecurrentVADNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_EndpointerSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_EndpointerNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d created VPStrategyManager
%25s:%-5d destroyed VPStrategyManager
%25s:%-5d this vp version does not support property 0x%x
%25s:%-5d setting property 0x%x
%25s:%-5d vpLock must be held!
%25s:%-5d null pointer for property!
%25s:%-5d ref port type %s, mic port type %s
%25s:%-5d Switching from VoiceProcessorV%u to VoiceProcessorV%u
%25s:%-5d Found a previously cached VoiceProcessorV%u!
%25s:%-5d Creating a new VoiceProcessorV%u
%25s:%-5d Created a new VoiceProcessorV%u
%25s:%-5d Error code %i reported at %s
%25s:%-5d Finished initializing the VP using cached data
%25s:%-5d updating volume
%25s:%-5d stateMutex must be held!
%25s:%-5d state lock acquired without contention
%25s:%-5d state lock not acquired; deferring
%25s:%-5d waiting for locks asynchronously
%25s:%-5d locks acquired
%25s:%-5d vpsm already destroyed
%25s:%-5d Actually the VoiceProcessorInterface* owned by VPStrategyManager the is a nullptr, so we can only report that this VP's version is 0!
%25s:%-5d Getting property info with ID: %u
%25s:%-5d Getting property with ID: %u
%25s:%-5d Setting property with ID: %u
%25s:%-5d set on vp
%25s:%-5d bad prop data = %p, size = %u
%25s:%-5d released %p
%25s:%-5d vp is nullptr!
%25s:%-5d setOnVP set to %d. %d items flipped (size=%lu)
%25s:%-5d Invalid state: %s! At this point, we require state: %s
%25s:%-5d removed property 0x%x %s (size=%lu)
%25s:%-5d copied %p
%25s:%-5d got %lu unset properties (size=%lu)
%25s:%-5d vp is nullptr
%25s:%-5d %s property 0x%x %s, setOnVP=%d (size=%lu)
%25s:%-5d Constructed.
%25s:%-5d Destructed.
%25s:%-5d Initializing.
%25s:%-5d The number of input channels not equal to the number of expected channels (%u).
%25s:%-5d Initialize called without setting the layers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size is not supported! Setting AU in Bypass mode.
%25s:%-5d Number of microphones is not supported! Setting AU in Bypass mode.
%25s:%-5d Successfully Initialized.
%25s:%-5d Cleanup.
%25s:%-5d Resetting the AU.
%25s:%-5d Setting the property PropertyIDs::DistanceEstimatorNeuralNet
%25s:%-5d Could not load DistanceEstimator plist, exception (%d).
%25s:%-5d Successfully loaded DistanceEstimator plist.
%25s:%-5d Setting the default parameter values.
%25s:%-5d Setting the format defaults.
%25s:%-5d Setting the stream format for the second input bus to match the format of the first bus.
%25s:%-5d Pull failed on input (%u)
%25s:%-5d MCLPOutSignals cannot be NULL. It is a required input.
%25s:%-5d Input MCLPOutSignals buffer expected with (%u) channels.
%25s:%-5d ECOutSignals cannot be NULL. It is a required input.
%25s:%-5d Input ECOutSignals buffer expected with (%u) channels.
%25s:%-5d Output OutputSignals buffer expected with (%u) channels.
%25s:%-5d AUDistance: (MCLPOutSignals, ECOutSignals) is NOT finite: (%d, %d)
%25s:%-5d AUDistance: (OutputSignals) is NOT finite: (%d)
%25s:%-5d Reseting the distance estimator.
%25s:%-5d Error initializing EndpointVAD3: %s
%25s:%-5d Viterbi ring buffer size (in seconds) not found in plist. Resorting to using legacy default value.
%25s:%-5d  <vp> call num %u
%25s:%-5d  <vp> VPV%u REF %s %s (blksz %lu) MIC %s %s (blksz %lu)
%25s:%-5d  <vp> ref audiodeviceid = %lu      mic audiodeviceid = %lu
%25s:%-5d  <vp> inRefASBD passed in = %s
%25s:%-5d  <vp> inMicASBD passed in = %s
%25s:%-5d  <vp> hw io blocksizes passed in REF = %lu MIC = %lu
 unsupported stream format
 unsupported Ref sample rate
 unsupported Mic sample rate
%25s:%-5d  >vp> failed to initialize - no reference ports
%25s:%-5d  >vp> failed to initialize - no microphone ports
%25s:%-5d  <vp> ul-dl config out of sync mHwRefASBD = %s, %d
 inMicASBD = %s %d
%25s:%-5d  <vp> ul-dl config no longer out of sync
%25s:%-5d  >vp> ul-dl config still out of sync ?!
%25s:%-5d  >vp> fs mismatched! REF=%fHz, MIC=%fHz
%25s:%-5d  <vp> ioOutASBD passed in = %s
 unsupported Out sample rate
 unsupported out format
 number of channels mismatches
 could not initialize EC/ES
%25s:%-5d  >vp> ERROR: Initialize output called before Initialize hw input was called!
 Initialize output called before init hw was called
%25s:%-5d  <vp> UL fade data size = %u
%25s:%-5d  <vp> initialize output: ioOutASBD passed OUT = %s
%25s:%-5d  <vp> GetMaxOutputPacketInfo : InitializeOutput hasn't been called yet!
%25s:%-5d  <vp> preferredClientSampleRate: %g
%25s:%-5d  <vp> calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu
%25s:%-5d  <vp> calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu
%25s:%-5d  <vp> calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu
%25s:%-5d  <vp> calcasbds: mEpRefASBD format: %s
%25s:%-5d  <vp> calcasbds: mEpMicASBD (ignore the # of channels) format: %s
%25s:%-5d  <vp> calcasbds: mEpOutASBD format: %s
%25s:%-5d  <vp> calcasbds: mUsOutASBD format: %s
%25s:%-5d  <vp> calcinternalprocessinglatency: %f sec
%25s:%-5d  <vp> calcsrclatencysamples: ref src ltnc = %d samples(@%f Hz), mic src ltnc = %d samples(@%f Hz), out src ltnc = %d samples(@%f Hz)
%25s:%-5d  <vp> calcbufferinglatencysamples: %d samples(@%f Hz)
 ERROR: can't create ref src
 ERROR: can't create mic src
 ERROR: can't create mic clip src
 ERROR: can't create output src
%25s:%-5d  <vp> initrefmicringbuffers : delaying mic by %.2f ms (%d samples)
%25s:%-5d  >vp> initrefmicringbuffers : mic buffer src ltnc padding %d samples
%25s:%-5d  >vp> initrefmicringbuffers : ref buffer src ltnc padding %d samples
%25s:%-5d  >vp> initialize: error initializing sample rate converters
%25s:%-5d  <vp> initialize: mOutASBD computed = %s
%25s:%-5d  <vp> initialize: [iphone/ipad simulator] disabling all uplink processing
%25s:%-5d  <vp> opening route-specific injection file %s
%25s:%-5d  <vp> opening generic injection file %s
%25s:%-5d  <vp> opening injection file %s
%25s:%-5d  <vp> error opening injection file %s
%25s:%-5d  <vp> injection file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
%25s:%-5d  <vp> error %d getting length of injection file %s, length %d
%25s:%-5d  >vp> error %d opening injection file %s, will use original (not injected) signal
%25s:%-5d  <vp> opening addition file %s
%25s:%-5d  <vp> addition file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
%25s:%-5d  >vp> error reading file %s [err=%d, frames to read=%lld, num frames read=%d]
%25s:%-5d  >vp> error-%d opening addition file %s, will use original (not added) signal
 bytesPerFrame must be > 0 in BytesToFrames
%25s:%-5d Threw an unknown exception
%25s:%-5d FIREngine Exception: %s (Err=%d)
%25s:%-5d AUJBase init failed: %d
%25s:%-5d Setting property FIRMatrices
%25s:%-5d Failed to set new FIR matrix on active kernel: %s (err=%d)
%25s:%-5d Setting property ConfigPlist
%25s:%-5d Setting new FIR matrix
%25s:%-5d Failed to create new kernel at runtime: %s (err=%d)
%25s:%-5d Setting property SetParameters
%25s:%-5d invalid channel count: %u. only mono is supported
%25s:%-5d audio format ID must be linear PCM
%25s:%-5d device specific tuning is %@
%25s:%-5d device specific tuning not found; falling back to generic tuning
%25s:%-5d tuning path resolved to %@
%25s:%-5d Reading audio failed, bailing
%25s:%-5d Failed to read the right number of samples: frameLength != numSamples, bailing
%25s:%-5d Audio format of PCM buffer does not agree with the format passed to init, bailing
%25s:%-5d Input audio conversion failed, bailing. Error: %@
%25s:%-5d bad processing format flags, bailing
%25s:%-5d bad processing format ID, bailing
%25s:%-5d bad channel count in processing format, bailing
%25s:%-5d Assertion failed: logic error
%25s:%-5d Output audio conversion failed, final audio may be corrupt! Error: %@
%25s:%-5d Click mitigation failed: internal exception while processing
%25s:%-5d record enabled at %i
creating 'Resampler2' sample rate converter Q%u, %u ch, %.2fHz to %.2fHz
creating 'Ramstad' sample rate converter Q%u, %u ch, %.2fHz to %.2fHz
%25s:%-5d Invalid state value!
%25s:%-5d Internal decision history buffers must have the same size
%25s:%-5d Error encountered while creating deep copy of filter dictionary
%25s:%-5d iPMWF: successful initialization.
%25s:%-5d iPMWF: successful clean-up.
%25s:%-5d iPMWF: successful reset.
creating
VoiceProcessor_Create BadArgument (outVoiceProcessor)
VoiceProcessor_Create BadArgument (inConfiguration)
failed to create voice processor due to unknown exception
destroying
failed to destroy voice processor due to bad reference
failed to get version due to bad reference
failed to initialize uplink due to bad reference
VoiceProcessor_InitializeUplink BadArgument (inConfiguration)
failed to initialize downlink due to bad reference
VoiceProcessor_InitializeDownlink BadArgument (inConfiguration)
failed to get parameter due to bad reference
VoiceProcessor_GetParameter BadArgument (outParameterValue)
failed to set parameter due to bad reference
VoiceProcessor_SetParameter BadParameterID (%d)
failed to get uplink parameter list due to bad reference
VoiceProcessor_GetUplinkParameterList BadArgument (outParameterList)
VoiceProcessor_GetUplinkParameterList BadArgument (ioParameterCount)
failed to get downlink parameter list due to bad reference
VoiceProcessor_GetDownlinkParameterList BadArgument (outParameterList)
VoiceProcessor_GetDownlinkParameterList BadArgument (ioParameterCount)
failed to get property info due to bad reference
VoiceProcessor_GetPropertyInfo BadArgument (outPropertySize)
VoiceProcessor_GetPropertyInfo BadArgument (outPropertyIsWritable)
failed to get property due to bad reference
VoiceProcessor_GetProperty BadArgument (outPropertyData)
VoiceProcessor_GetProperty BadArgument (outPropertySize)
failed to set property due to bad reference
VoiceProcessor_SetProperty BadArgument (inPropertyData)
VoiceProcessor_SetProperty BadPropertyID (%d)
failed to get uplink property list due to bad reference
VoiceProcessor_GetUplinkPropertyList BadArgument (outPropertyList)
VoiceProcessor_GetUplinkPropertyList BadArgument (ioPropertyCount)
failed to get downlink property list due to bad reference
VoiceProcessor_GetDownlinkPropertyList BadArgument (outPropertyList)
VoiceProcessor_GetDownlinkPropertyList BadArgument (ioPropertyCount)
failed to preflight uplink due to bad reference
VoiceProcessor_PreflightUplink BadArgument (outNumRequiredUplinkInputSamples)
failed to process uplink due to bad reference
VoiceProcessor_ProcessUplink BadArgument (ioData)
failed to preflight downlink due to bad reference
VoiceProcessor_PreflightDownlink BadArgument (outNumConsumedDownlinkInputSamples)
VoiceProcessor_PreflightDownlink BadArgument (outNumProducesDownlinkOutputSamples)
failed to process downlink due to bad reference
VoiceProcessor_ProcessDownlink BadArgument (ioData)
VoiceProcessor_GetBaseFactory_Private BadArgument (outFactory)
legacy call failed due to unknown exception: %s
initializing uplink with configuration: %s
failed to initialize uplink due to bad configuration
failed to initialize uplink - voice processor did not accept requested output format
failed to initialize uplink - voice processor must output float data
initialized uplink
uplink configuration is not valid - 'AllOfUplinkDSP' node configuration not found
uplink configuration is not valid - wrong number of node configurations
uplink configuration is not valid - 'HardwareDSP' node configuration not found
uplink configuration is not valid - 'EchoDSP' node configuration not found
uplink configuration is not valid - 'DynamicsDSP' node configuration not found
uplink configuration is not valid - topology is not supported
uplink configuration is not valid - microphone trim gains count is out of bounds
uplink configuration is not valid - reference trim gains count is out of bounds
uplink configuration is not valid - client I/O block size can't be 0
uplink configuration is valid!
uplink configuration is not valid - %s
initializing downlink with configuration: %s
failed to initialize downlink due to bad configuration
initialized downlink
downlink configuration is not valid - wrong number of node configurations
downlink configuration is not valid - 'AllOfDownlinkDSPWithFarEndVoiceOnly' node configuration not found
downlink configuration is not valid - topology is not supported
downlink configuration is not valid - speaker telemetry input data sources count is out of bounds
downlink configuration is not valid - client I/O block size can't be 0
downlink configuration is valid!
downlink configuration is not valid - %s
PreflightUplink BadState
legacy call failed: %s
ProcessUplink BadArgument
ProcessUplink BadLock
ProcessUplink BadState (uplink)
ProcessUplink BadState (downlink)
ProcessUplink BadIOData
ProcessUplink BadState preflight
ProcessUplink BadArgument (nodeType)
I/O rate mismatch has occurred on I/O cycle %u out of %d
PreflightDownlink BadLock
PreflightDownlink BadState (uplink)
PreflightDownlink BadState (downlink)
ProcessDownlink BadLock
ProcessDownlink BadState (uplink)
ProcessDownlink BadState (downlink)
ProcessDownlink BadIOData
ProcessDownlink BadState (preflight)
ProcessDownlink BadArgument (nodeType)
%25s:%-5d  <vp> loopbackinitialize SRC=%s, usOut#chan=%d, dlMix#chan=%d
%25s:%-5d  >vp> loopbackwrite: ERROR can't write %d frames to loopbackABL ABL=%p, capacity=%d
%25s:%-5d  >vp> loopbackwrite ERROR wrote %d (requested %d) frames
%25s:%-5d  >vp> loopbackread ERROR read %d (requested %d) frames
%25s:%-5d  <vp> loopbackread filled %d zeros in outABL channel %d
%25s:%-5d Assertion failed: not enough working memory
%25s:%-5d Assertion failed: bad internal value
%25s:%-5d Assertion failed: output is too small
%25s:%-5d Assertion failed: invalid arCoefficients size
%25s:%-5d Assertion failed: bad working size
%25s:%-5d Assertion failed: invalid input ar order
%25s:%-5d Starting initialization.
%25s:%-5d ERROR: Input and output formats need to be equivalent, but we have:
[Input:  %s], and
[Output: %s]
%25s:%-5d ERROR: We have not been configured with a LUT system; we cannot initialize properly and will process in soft bypass.
%25s:%-5d Initializing with PowerBudget: [ %s ]
%25s:%-5d Initializing with LUTSystem:
%25s:%-5d Initializing with Volume level: %s
%25s:%-5d Initializing with Smoother attack TC: %s
%25s:%-5d Initializing with Smoother release TC: %s
%25s:%-5d Kernel created successfully.
%25s:%-5d ERROR: We have not been configured fully; we could not initialize the kernel and will process in soft bypass.
%25s:%-5d Ending initialization.
%25s:%-5d ERROR: Input bus (%u-ch) and output bus (%u-ch) have different channel counts.
%25s:%-5d ERROR: (For ch-%i) input buffers hold %u bytes, output buffers hold %u bytes, but %u was expected.
Setting bypass to %u
Setting ProtectionLevel to %s
%25s:%-5d Assertion failed: bad argument value
%s: Biquad dictionary invalid
%s: Biquad Stage %u error; replacing with bypass filter
%25s:%-5d _vp: plist write to file: err-%d writing plist
%25s:%-5d GetNextFFTFriendlyBlkSz: input block size %d is too %s !!!
 PackednessIsSignificant only applies for PCM
%25s:%-5d Lock requested while already locked?!
%25s:%-5d Unlock requested while already unlocked?!
%25s:%-5d Format not supported, input bus %u (format is: %s)
%25s:%-5d Format not supported, output bus %u (format: %s)
%s Target latency %u is too small (upmixer latency=%u, native blocksize=%u)
%s: Target latency %u is not a multiple of native blocksize (upmixer latency=%u, native blocksize=%u)
%25s:%-5d In VAD3Configuration::Initialize, Forcing reinitialization of VAD3Configuration.
%25s:%-5d will try to initialize
%25s:%-5d initialized
%25s:%-5d successful clean-up.
%25s:%-5d successful reset.
%25s:%-5d EXCEPTION (%d) [topLevelDict_ref.get_cf() == nullptr is false]: "Missing dictionary: %s"
%25s:%-5d EXCEPTION (%d) [inputDescDict_ref.get_cf() == nullptr is false]: "Missing dictionary InputVectorDescriptor."
%25s:%-5d Found the dictionary InputVectorDescriptor.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Size from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [inputDataType_ref.get_cf() == nullptr is false]: "Missing dictionary DataType."
%25s:%-5d Successfully retrieved input data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported input data quantization type for Quantization (%u)."
%25s:%-5d Loading from inputDescDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [outputDescDict_ref.get_cf() == nullptr is false]: "Missing dictionary OutputVectorDescriptor."
%25s:%-5d Found the dictionary OutputVectorDescriptor.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Size from dictionary OutputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [outputDataType_ref.get_cf() == nullptr is false]: "Failed to retrieve output data type (DataType) from dictionary OutputVectorDescriptor."
%25s:%-5d Successfully retrieved output data type (%s) for Layer %u.
%25s:%-5d EXCEPTION (%d): "Unsupported output data type."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary OutputVectorDescriptor."
%25s:%-5d Loading from outputDescDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary OutputVectorDescriptor."
%25s:%-5d LayerDescriptor for layer %zu not found, using default fully connected layer.
%25s:%-5d Found the dictionary LayerDescriptor.
%25s:%-5d EXCEPTION (%d) [layerType_ref.get_cf() == nullptr is false]: "Failed to retrieve layer type (Type) from dictionary LayerDescriptor."
%25s:%-5d Successfully retrieved Type (%s) for LayerDescriptor %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported LayerType."
%25s:%-5d EXCEPTION (%d) [weightsDict_ref.get_cf() == nullptr is false]: "Missing dictionary Weights."
%25s:%-5d Found the dictionary Weights.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing vector Data from dictionary Weights."
%25s:%-5d EXCEPTION (%d) [nnLayers[i].mWeightsQuantized.size() != weightsNumberOfCoefficients is false]: "Number of weights in Data (%lu) does not match the required number of weights (%lu)."
%25s:%-5d Successfully retrieved weights data (%i) at index (%zu).
%25s:%-5d Successfully retrieved weights data (%g) at index (%zu).
%25s:%-5d EXCEPTION (%d): "Unknown quantization type (%u)."
%25s:%-5d EXCEPTION (%d) [weightsDataType_ref.get_cf() == nullptr is false]: "Missing DataType from dictionary Weights."
%25s:%-5d Successfully retrieved weights data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported weights data quantization type for Quantization (%u)."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary Weights."
%25s:%-5d Loading from weightsDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary Weights."
%25s:%-5d EXCEPTION (%d) [biasDict_ref.get_cf() == nullptr is false]: "Missing dictionary Bias from dictionary Weights."
%25s:%-5d Found the dictionary Bias.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing vector Data from dictionary Bias."
%25s:%-5d Successfully retrieved bias data (%g) at index (%zu).
%25s:%-5d EXCEPTION (%d) [biasDataType_ref.get_cf() == nullptr is false]: "Missing dictionary DataType from dictionary Weights."
%25s:%-5d Successfully retrieved bias data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported bias data type."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary Bias."
%25s:%-5d Loading from biasDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary Bias."
%25s:%-5d EXCEPTION (%d) [activationDict_ref.get_cf() == nullptr is false]: "Missing dictionary Activation."
%25s:%-5d Found the dictionary Activation.
%25s:%-5d EXCEPTION (%d) [activationFunction_ref.get_cf() == nullptr is false]: "Failed to retrieve activation function (Function) from dictionary Activation."
%25s:%-5d Successfully retrieved activation function (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported activation function."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Alpha from dictionary Activation."
%25s:%-5d Loading from activationDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Beta from dictionary Activation."
%25s:%-5d The current architecture is limited to having all detector algorithms match! commonAlgorithm = %s, algo = %s
%25s:%-5d Unsupported algorithm type: %s
%25s:%-5d Invalid sample rate %f; reverting to default %f
%25s:%-5d Assertion failed: invalid padding amount
%25s:%-5d click type %i is unsupportd
 buffer too small
 ring buffer too small
%25s:%-5d Assertion failed: Invalid input size or padding length
%25s:%-5d Assertion failed: invalid outCoeffs size
%25s:%-5d Invalid keys!
 unsupported distribution!
 non finites not welcome here
 invalid value
 invalid probability value
%25s:%-5d  <vp> NOTICE: AUNeuralNet latency is %f ms, which is %d samples
%25s:%-5d  >vp> Unknown MainChatCategory: %s
%25s:%-5d  <vp> VP chat flavor set to %u
%25s:%-5d  <vp> Begin self-reinit (SetChatFlavor)
%25s:%-5d  <vp> End self-reinit (SetChatFlavor)
%25s:%-5d  <vp> ChatFlavor notification name is %s
%25s:%-5d  <vp> ChatFlavor updated notification received
%25s:%-5d Assertion failed: invalid clickLoc
%25s:%-5d Non-binary threshold is unsupported.
%25s:%-5d AUNeuralNetSPP: Initialize.
%25s:%-5d Initialize called without setting setting NeuralNetNSLayers or NeuralNetRESLayers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate for NNNS is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size for NNNS is not supported! Setting AU in Bypass mode.
%25s:%-5d Sample rate for NNRES is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size for NNRES is not supported! Setting AU in Bypass mode.
%25s:%-5d AUNeuralNetSPP: Successfully Initialized.
%25s:%-5d AUNeuralNetSPP: Cleanup().
%25s:%-5d Could not load NeuralNetNS plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetNS plist.
%25s:%-5d MCLPoutSignals cannot be NULL. It is a required input
%25s:%-5d ECleeSignals cannot be NULL. It is a required input
%25s:%-5d ECoutSignals cannot be NULL. It is a required input
%25s:%-5d AUNeuralNetSPP: (MCLPoutSignals, ECleeSignals, ECoutSignals) is NOT finite: (%u, %u, %u)
%25s:%-5d AUNeuralNetSPP: (OutputSignals) is NOT finite: (%u)
%25s:%-5d _vp: vptimefreqconverter::analyze: not configured for conversion
%25s:%-5d _vp: vptimefreqconverter::analyze: not configured for analysis
%25s:%-5d _vp: vptimefreqconverter::synthesize: not configured for conversion
%25s:%-5d _vp: vptimefreqconverter::synthesize: not configured for synthesis
%25s:%-5d EndpointVADDSPChain: Incorrect threshold multiplier LUT format in the Plist.
 bad argument size
%s:%i illegal dominance parameter value: %f
%s:%i only first order is supported now
%s:%i bad outMatrix num cols
%s:%i bad outMatrix num rows
%s:%i unsupported normalization %i
%s:%i invalid zoom curve value for dominance zoom
%s:%i bad dominanceValues size
%s:%i locked
%s:%i --
%25s:%-5d -
%25s:%-5d Missing dictionary %s.
%25s:%-5d Found the dictionary %s.
%25s:%-5d NumDictColumns does not match NumColumns we use.
%25s:%-5d Loading from matrixDict.
%25s:%-5d Missing scalar %s.
%25s:%-5d Missing vector Coefficients.
%25s:%-5d Successfully retrieved coefficients data (%g) at index (%u).
%25s:%-5d Missing vector RowIndices
%25s:%-5d Successfully retrieved row index data (%lld) at index (%u).
%25s:%-5d Missing vector ColumnIndices.
%25s:%-5d Successfully retrieved column index data (%lld) at index (%u).
%25s:%-5d Successfully called sparse_matrix_vector_product_dense_float for %s.
%25s:%-5d Failed sparse_matrix_vector_product_dense_float for %s.
%25s:%-5d Successfully computed SparseMatrix * Ones data (%g) at index (%u).
%25s:%-5d AUSeparate: Initialize.
%25s:%-5d AUSeparate: Successfully initialized.
%25s:%-5d AUSeparate: Cleanup.
%25s:%-5d parameters changed after Initialize, which will allocate memory on the realtime audio thread - only SetParameter before Initialize
%25s:%-5d AUSeparate: (InputSignals) is NOT finite: (%u)
%25s:%-5d AUSeparate: (OutputSignals) is NOT finite: (%u)
%25s:%-5d AUSeparate: Initialize IVA Classes.
%25s:%-5d Ref mic is %i for beam direction %s (%i)
%25s:%-5d Negative mic number!
%25s:%-5d Spaced omni is mics %i (L) and %i (R) for camera direction %s (%i) and orientation %s (%i)
%25s:%-5d Mic selections array is too short!
%25s:%-5d Bad channel selection array! count = %u
%25s:%-5d Bad channel selection %i
%25s:%-5d The ranged beam selection optimization requires that the channels are in order, but vLast = %i and vSecondLast = %i
media chat other audio ducking level %.2f, db: %.2f
history window blocks to average: %u
Media Chat: setting other audio ducking level %.2f
Media Chat: setting ducking ramp time %.2fs
Media Chat: setting unducking ramp time %.2fs
Media Chat: setting dynamic ducking accumulation time %.2fs
%25s:%-5d AUBeam2: Error: Initialized
%25s:%-5d 
AUBeam2: input stream format: %s
%25s:%-5d 
AUBeam2: output stream format: %s
%25s:%-5d AUBeam2 Error: Converting mic spacing from tuning file
%25s:%-5d AUBeam2 Error: Invalid mic spacing %d
%25s:%-5d AUBeam2: Error: Failed initializing Beam2 object
%25s:%-5d AUBeam2: Error: AUBeam2N should have property kAudioUnitProperty_UsesFixedBlockSize set to 1 before initialize
%25s:%-5d Initialize Beam2N object with: sample rate = %f, transform size = %d, frame size = %d, number of beams = %d
%25s:%-5d AUBeam2: Error: Failed initializing Beam2N object
%25s:%-5d AUBeam2: Error: Failed setting diffraction filter and post EQ
%25s:%-5d AUBeam2: Error loading diffraction filter file at %s
%25s:%-5d AUBeam2 Error: Converting diffraction filter vectors length from tuning file
%25s:%-5d AUBeam2 Error: Invalid diffraction filter data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeam2: Error no diffraction filter data
%25s:%-5d AUBeam2: Error loading post EQ file at %s
%25s:%-5d AUBeam2 Error: Converting eq vectors length from tuning file
%25s:%-5d AUBeam2 Error: Invalid post eq data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeam2: Error no post EQ data
%25s:%-5d AUBeam2::ReverseMicChannelFlag is set to 1 (AU input mic order {front/side,back}, will not flip mic order for BF kernel ) 
%25s:%-5d AUBeam2::ReverseMicChannelFlag is set to 0 (AU input mic order {back,front/side}, will flip mic order for BF kernel )
%25s:%-5d AUBeam2: Error: inFramesToProcess != GetMaxFramesPerSlice(), inFramesToProcess = %d, GetMaxFramesPerSlice() = %d
%25s:%-5d AUBeam2: Error: Could not open diffraction filter file %s
%25s:%-5d AUBeam2: Error: Could not read diffraction filter file %s
%25s:%-5d AUBeam2: Error: Could not open post EQ file %s
%25s:%-5d AUBeam2: Error: Could not read post EQ file %s
%25s:%-5d AUBeam2: Error: Beam object not initialized, won't dump diffraction filter
%25s:%-5d AUBeam2: Error: Number of unique bands is zero, won't dump diffraction filter
%25s:%-5d AUBeam2: Error: Beam object not initialized, won't dump post EQ
%25s:%-5d AUBeam2: Error: Number of unique bands is zero, won't dump post EQ
%25s:%-5d No reverb tail has been specified for this sample rate (%gHz). AU going into soft bypass mode.
%25s:%-5d ReverbSuppressor object failed to instantiate; AU going into soft bypass mode.
%25s:%-5d 'ReverbTails' dictionary is not present in Plist.
%25s:%-5d 'ReverbTails' dictionary found in Plist.
%25s:%-5d Found a %zu-element (%gms) reverb tail for the %gHz sample-rate.
%25s:%-5d Failed to extract reverb tail vector from the dictionary entry keyed: '%s'
%25s:%-5d AudioUnitSetProperty failed for %s
%25s:%-5d AudioUnitGetProperty failed for %s
%25s:%-5d FFT object failed to Initialize() with block-size %u.
%s:%i set up GuidedMWF
%s:%i processing section output: %s
%s:%i create graph
%s:%i prepare input section
%s:%i prepare processing section
%s:%i prepare output section
%s:%i graph created
%s:%i create blending graph
%s:%i blending graph created
%s:%i create bypass graph
%s:%i graph name set to (%s)
%s:%i bypass graph created
%s:%i input section output: %s
%s:%i output section output: %s
%25s:%-5d EndpointVADSegmentHeuristics: Input VAD sequence exceeded the internal history size.
%25s:%-5d EndpointVADSegmentHeuristics: Transition state value not found in the history buffer!
%25s:%-5d Loading sampleRate from topLevelDict.
%25s:%-5d Failed to load the sampling rate from the plist.
%25s:%-5d Loading nMicsUsed from topLevelDict.
%25s:%-5d Failed to load the number of mics from the plist.
%25s:%-5d Loading nCoefficients from topLevelDict.
%25s:%-5d Failed to load the number of filter coefficients from the plist.
%25s:%-5d Missing dictionary: %s
%25s:%-5d Found the dictionary: %s
%25s:%-5d Missing dictionary RealCoefficients.
%25s:%-5d Found the dictionary RealCoefficients.
%25s:%-5d Error loading RealCoefficients.
%25s:%-5d Missing dictionary ImagCoefficients.
%25s:%-5d Found the dictionary ImagCoefficients.
%25s:%-5d Error loading ImagCoefficients.
%25s:%-5d BorrowSubbandDOA failed, subband DOA calculator is not initialized.
%25s:%-5d SetSubbandDOACalcuationEnabled failed, subband DOA calculator is already initialized and this value cannot be changed.
%25s:%-5d  >vp> Unknown Route Type: %d
%25s:%-5d Can't handle different in/out formats
%s: cannot initialize with inNumOutputChannels = %d
%s: ERROR, cannot process with %d output channels
%s: ERROR, not intialized
CADSPUtility:%s:%d: subtriangle still not found in computing rank with relaxed test!
CADSPUtility:%s:%d: VBAP Initialization Error; Check for duplicate vertices
CADSPUtility:%s:%d: VBAP Initialization Error; Empty or inconsistent vertex set
CADSPUtility:%s:%d: VBAP Error; Unable to change speaker locations, azimuth and elevation have different sizes
CADSPUtility:%s:%d: VBAP Error; Unable to change speaker locations
CADSPUtility:%s:%d: VBAP Error; Duplicate vertices were found
CADSPUtility:%s:%d: VBAP error, Delaunay triangulation issue
CADSPUtility:%s:%d: VBAP error; Delaunay triangulation issue
CADSPUtility:%s:%d: VBAP Error; VBAP object not initialized
CADSPUtility:%s:%d: VBAP Error; Triangle lookup error
CADSPUtility:%s:%d: VBAP Error; Can not calculate gain if the VBAP object is not initialized
CADSPUtility:%s:%d: VBAP Error; Can not calculate gain for a source location [0, 0, 0]
CADSPUtility:%s:%d: VBAP Error; Triangle lookup failed
CADSPUtility:%s:%d: Delaunay Triangulation Error: Convex hull could not be created. Check for overlapping speakers. 
CADSPUtility:%s:%d: HOA Error; Incorrect channel count (i.e. not consistent with HOA order definition Channels = (order+1)^2)
CADSPUtility:%s:%d: HOA Error; This is not SN3D/N3D/FuMa: unsupported
CADSPUtility:%s:%d: HOA Error; HOA object was not initialized
CADSPUtility:%s:%d: HOA Error; Inconsistent vector size
CADSPUtility:%s:%d: HOA Error; Inconsistent azimuth/elevation size
CADSPUtility:%s:%d: HOA Error; VBAP calculation error
CADSPUtility:%s:%d: HOA Error; Empty azimuth/elevation
CADSPUtility:%s:%d: HOA Error; VBAP object was not initialized
CADSPUtility:%s:%d: HOA Error; Inconsistent rotation matrix size
 failed assertion: kernelSize <= kMaxKernelSize
Warning: %s SetParameter for undefined param ID %u while initialized. Ignoring.
Warning: %s was passed a ramped parameter event but does not implement them. Ignoring.
AudioUnitGetProperty: null size pointer
AudioUnitGetProperty: *ioDataSize == 0 on entry
AudioUnitSetProperty: inData == NULL
AudioUnitSetProperty: inDataSize == 0
kAudioUnitErr_TooManyFramesToProcess : inFramesToProcess=%u, mMaxFramesPerSlice=%u
ioData.mNumberBuffers=%u, ASBD::NumberChannelStreams(output.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; ioData.mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
ioData.mNumberBuffers=%u, ASBD::NumberChannelStreams(input->GetStreamFormat())=%u; kAudio_ParamError
inInputBufferLists[%u]->mNumberBuffers=%u, ASBD::NumberChannelStreams(input.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; inInputBufferLists[%u].mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
ioOutputBufferLists[%u]->mNumberBuffers=%u, ASBD::NumberChannelStreams(output.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; ioOutputBufferLists[%u]->mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
  from %s, render err: %d
  from %s, process err: %d
  from %s, processmultiple err: %d
AUBuffer throwing bad_alloc
%25s:%-5d EXCEPTION (%d) [(nBytes * mNumberBuffers) > AllocatedBytes() is false]: ""
 ca_require_noerr: [%s, %d] (goto %s;)
 CAMutex::CAMutex: Could not init the mutex
 CAMutex::Lock: Could not lock the mutex
 CAMutex::Unlock: Could not unlock the mutex
 CAMutex::Unlock: A thread is attempting to unlock a Mutex it doesn't own
 CAMutex::Try: call to pthread_mutex_trylock failed, Error: %d (%s)
%25s:%-5d <-%s %p
%25s:%-5d <-%s %p: Swallowed exception from Close()
%25s:%-5d ->%s %p
%25s:%-5d ASSERTION FAILURE [(IsOpen()) != 0 is false]: 
%25s:%-5d EXCEPTION (%d) [error != noErr is false]: ""
 CAGuard::CAGuard: Could not init the cond var
 CAGuard::Wait: A thread has to have locked a guard before it can wait
 CAGuard::Wait: Could not wait for a signal
 CAGuard::WaitFor: A thread has to have locked a guard be for it can wait
 CAGuard::WaitFor: Wait got an error
 CAGuard::Notify: failed
 CAGuard::NotifyAll: failed
 failed assertion: goodToCopy
softlink:r:path:/System/Library/Frameworks/CoreAudioKit.framework/CoreAudioKit
RPBHost_Delegate
RPBHostDelegate
RPBParameterControlDelegate
RPBPropertyControlDelegate
RPBElementDiscoveryDelegate
RPBItem_Delegate
RPBItemDelegate
RPBServer_Listener
RPBServerListener
NSObject
AUToneMeisterParameterExporter
AUToneMeisterParameterImporter
CLMClickEvent
NSSecureCoding
NSCoding
CLMClickEventMonitor
MicroDiff
CLMClickMitigator
initWithSource:terminal:andDestination:terminal:
getRemoteProcessingBlockParameterInfo:forScope:object:withError:
getRemoteProcessingBlockParameter:forID:scope:element:object:withError:
setRemoteProcessingBlockParameter:forID:scope:element:object:withError:
getRemoteProcessingBlockPropertyInfo:forScope:object:withError:
getRemoteProcessingBlockProperty:forID:scope:element:object:withError:
setRemoteProcessingBlockProperty:forID:scope:element:object:withError:
getRemoteProcessingBlockPropertyInfo:forID:scope:element:object:withError:
getRemoteProcessingBlockElementInfo:forScope:object:withError:
get_parameter_info_callback
get_parameter_callback
set_parameter_callback
get_property_info_callback
get_property_callback
set_property_callback
initWithName:
initWithName:inputs:outputs:
inputs
outputs
items
addItem:
removeItem:
itemForName:
wires
addWire:
removeWire:
countByEnumeratingWithState:objects:count:
name
addWireFrom:parameter:scope:element:to:parameter:scope:element:
removeWireFrom:parameter:scope:element:to:parameter:scope:element:
addWireFromHostParameter:scope:element:to:parameter:scope:element:
removeWireFromHostParameter:scope:element:to:parameter:scope:element:
addWireFrom:parameter:scope:element:toHostParameter:scope:element:
removeWireFrom:parameter:scope:element:toHostParameter:scope:element:
delegate
addWireFrom:property:scope:element:to:property:scope:element:
removeWireFrom:property:scope:element:to:property:scope:element:
addWireFromHostProperty:scope:element:to:property:scope:element:
removeWireFromHostProperty:scope:element:to:property:scope:element:
addWireFrom:property:scope:element:toHostProperty:scope:element:
removeWireFrom:property:scope:element:toHostProperty:scope:element:
setDelegate:
createWithParameterID:
setName:
setDescription:
setReadable:
setWritable:
copy
addObject:
createWithPropertyID:
subHost
initWithAudioUnit:
UUID
getUUIDBytes:
UUIDString
initWithUUIDBytes:
findByUUID:
userInfo
mutableCopy
dictionary
setObject:forKey:
setUserInfo:error:
array
count
objectAtIndexedSubscript:
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
initWithFormat:
init
addListener:
removeListener:
dealloc
remoteProcessingBlockServerWillStartRunning:
remoteProcessingBlockServerDidStartRunning:
remoteProcessingBlockServerWillStopRunning:
remoteProcessingBlockServerDidStopRunning:
respondsToSelector:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithServer:
.cxx_destruct
.cxx_construct
_server
will_start_running_callback
did_start_running_callback
will_stop_running_callback
did_stop_running_callback
sharedInstance
isRunning
addHost:
addHost:toItem:
removeHost:
objectForKeyedSubscript:
length
isEqualToString:
UTF8String
floatValue
unsignedIntegerValue
setToneMeister:
exportTimeStamp
exportInputGain
exportChannelMuteAndPhaseFlipParameters
exportParametersOfAllFilters:
toneMeister
exportParametersOfFilter:
exportStateOfFilter:
exportTypeOfFilter:
exportChannelAllocationOfFilter:
dictionaryWithDictionary:
exportFrequencyOfFilter:
exportGainOfFilter:
exportQualtiyOfFilter:
exportOrderOfFilter:
exportPhaseOfFilter:
exportAutomationOfFilter:
numberWithBool:
numberWithFloat:
stringWithFormat:
stringWithCString:encoding:
setDateFormat:
date
stringFromDate:
initWithToneMeister:
exportWithOptions:
_toneMeister
T^v,V_toneMeister
stringWithUTF8String:
numberWithUnsignedInt:
objectForKey:
numberWithInt:
setNumberOfChannels:
dictionaryIsValid:withOptions:message:
availableFilterGroup
availableFilters
importInputGainParameterFromDictionary:
importChannelMuteParameterFromDictionary:
importChannelPhaseFlipParameterFromDictionary:
boolValue
integerValue
intValue
setValue:forParameter:ofFilter:
importFilterStateFromDictionary:andAssignToFilter:
importFilterTypeFromDictionary:andAssignToFilter:
importFilterQualityFromDictionary:andAssignToFilter:
importFilterGainFromDictionary:andAssignToFilter:
importFilterOrderFromDictionary:andAssignToFilter:
importFilterFrequencyFromDictionary:andAssignToFilter:
importPhaseEqualizerFromDictionary:andAssignToFilter:
importChannelAllocationFromDictionary:andAssignToFilter:
importFilterAutomationFromDictionary:andAssignToFilter:
stringByAppendingString:
setValue:forParameter:
substringFromIndex:
filterTypeStrings
indexOfObject:
setValue:forAutomationParameter:ofFilter:
numberOfChannelsForGlobalParametersIsValid:message:
filterTypeIsValid:message:
filterFrequencyIsValid:message:
filterGainIsValid:message:
filterOrderIsValid:message:
filterQualityIsValid:message:
filterChannelAllocationIsValid:message:
numberOfChannels
containsObject:
objectAtIndex:
bandShelveFrequenciesAreValid:message:
lowHighShelveFrequenciesAreValid:message:
parametricFilterFrequencyIsValid:message:
numberWithInteger:
filterTypeString:
initWithToneMeister:andNumberOfChannels:
import:withOptions:andMessage:
dictionaryWouldChangeInputGainParameter:
dictionaryWouldChangeChannelPhaseFlipParameter:message:
dictionaryWouldChangeChannelMuteParameter:message:
_numberOfChannels
TI,V_numberOfChannels
mainBundle
bundleIdentifier
dataWithBytes:length:
getBytes:length:
setObject:forKeyedSubscript:
subpathsOfDirectoryAtPath:error:
compare:
sortedArrayUsingSelector:
pathExtension
capitalizedString
arrayWithObjects:count:
removeObjectForKey:
allKeys
dictionaryWithContentsOfFile:
unsignedIntValue
addEntriesFromDictionary:
fileExistsAtPath:isDirectory:
initWithCapacity:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
valueForKey:
doubleValue
decodeInt64ForKey:
decodeIntegerForKey:
encodeInt64:forKey:
eventType
encodeInteger:forKey:
absoluteTime
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
setAbsoluteTime:
setEventType:
_absoluteTime
_eventType
TQ,V_absoluteTime
Tq,V_eventType
initWithHIDDispatchQueueQOSClass:relativePriority:
arrayWithCapacity:
setEvents:
setHidEventMonitor:
events
hidEventMonitor
predicateWithBlock:
filteredArrayUsingPredicate:
newClickEvent:
eventsForMovieStartingAtMachAbsoluteTime:endingAt:
_events
_hidEventMonitor
T@"NSMutableArray",&,V_events
T{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}},N,V_hidEventMonitor
numberWithShort:
numberWithDouble:
numberWithUnsignedLongLong:
numberWithLongLong:
null
arrayWithObject:
arrayWithObjects:
dictionaryWithObjectsAndKeys:
setValue:forKey:
cStringUsingEncoding:
numberWithUnsignedLong:
setObject:atIndex:
componentsSeparatedByString:
addObjectsFromArray:
LCSLength::
diff::
bytes
channelCount
streamDescription
setExternalFormat:
externalFormat
sampleRate
initStandardFormatWithSampleRate:channels:
setProcessingFormat:
processingFormat
initFromFormat:toFormat:
setInputConverter:
setOutputConverter:
setUpstreamLatency:
defaultManager
fileExistsAtPath:
tuningPath
frameLength
format
initWithPCMFormat:frameCapacity:
frameCapacity
setFrameLength:
inputConverter
convertToBuffer:fromBuffer:error:
getCore
upstreamLatency
floatChannelData
outputConverter
initWithFormat:upstreamLatency:
mitigateClicks:machAbsoluteTimeOfFirstSample:numSamples:audioReader:audioRewriter:
setTuningPath:
_tuningPath
_upstreamLatency
_externalFormat
_processingFormat
_inputConverter
_outputConverter
T@"AVAudioFormat",&,N,V_externalFormat
T@"AVAudioFormat",&,N,V_processingFormat
T@"AVAudioConverter",&,N,V_inputConverter
T@"AVAudioConverter",&,N,V_outputConverter
TI,N,V_upstreamLatency
T@"NSString",&,N,V_tuningPath
compressedDataUsingAlgorithm:error:
setWithObjects:
decompressedDataUsingAlgorithm:error:
setObject:atIndexedSubscript:
persistentDomainForName:
dataWithJSONObject:options:error:
appendString:
initWithData:encoding:
stringWithString:
writeToFile:atomically:encoding:error:
v44@0:8@16I24@28^@36
v52@0:8^f16I24I28I32@36^@44
v48@0:8f16I20I24I28@32^@40
v44@0:8@"NSMutableArray"16I24@"RPBObject"28^@36
v52@0:8^f16I24I28I32@"RPBObject"36^@44
v48@0:8f16I20I24I28@"RPBObject"32^@40
v52@0:8^@16I24I28I32@36^@44
v52@0:8@16I24I28I32@36^@44
v52@0:8^@16I24I28I32@"RPBObject"36^@44
v52@0:8@16I24I28I32@"RPBObject"36^@44
{function<vp::Expected<std::vector<vp::rpb::Parameter_Info, vp::Allocator<vp::rpb::Parameter_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__f_"{__value_func<vp::Expected<std::vector<vp::rpb::Parameter_Info, vp::Allocator<vp::rpb::Parameter_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
{function<vp::Expected<float, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__f_"{__value_func<vp::Expected<float, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
{function<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, float)>="__f_"{__value_func<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, float)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
{function<vp::Expected<std::vector<vp::rpb::Property_Info, vp::Allocator<vp::rpb::Property_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__f_"{__value_func<vp::Expected<std::vector<vp::rpb::Property_Info, vp::Allocator<vp::rpb::Property_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
{function<vp::Expected<applesauce::CF::TypeRef, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__f_"{__value_func<vp::Expected<applesauce::CF::TypeRef, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
{function<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, applesauce::CF::TypeRef)>="__f_"{__value_func<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, applesauce::CF::TypeRef)>="__buf_"{type="__lx"[32C]}"__f_"^v}}
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"RPBServer"16
@24@0:8@16
v16@0:8
@"RPBServer"
{function<void ()>="__f_"{__value_func<void ()>="__buf_"{type="__lx"[32C]}"__f_"^v}}
@24@0:8^v16
@20@0:8i16
@20@0:8B16
@20@0:8I16
^v16@0:8
v24@0:8^v16
@28@0:8^v16I24
B36@0:8@16i24^@28
v28@0:8@16I24
B32@0:8@16^@24
B32@0:8@16@24
v24@0:8f16I20
v28@0:8f16I20I24
B28@0:8f16I20I24
I16@0:8
v20@0:8I16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
q16@0:8
v24@0:8q16
@24@0:8I16i20
@32@0:8Q16Q24
{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}}16
@"NSMutableArray"
{shared_ptr<HIDEventMonitor>="__ptr_"^{HIDEventMonitor}"__cntrl_"^{__shared_weak_count}}
@32@0:8@16@24
@28@0:8@16I24
{shared_ptr<ClickRemovalCore>=^{ClickRemovalCore}^{__shared_weak_count}}16@0:8
v52@0:8@16Q24I32@?36@?44
@"NSString"
@"AVAudioFormat"
@"AVAudioConverter"
ffacEVAW
333@
Q8^*
 A.+
 A=+
 AL+
 A\+
 Al+
 A|+
 A,,
 A>,
 AP,
#<r,
 A~,
zD ?
zD0?
zD@?
zDP?
zD`?
zDp?
fff?
333@
 A'B
HCdB
 A)C
 A/F
HB'G
HB7G
@@33s@
L>333?33
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwUAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQTAAAAAAAAhBkAAAAAAACQAAAAAAAAAKQNmZmgAA
AAtACKPXAAAADMGjMzMAAAANwooAAAAAAA5CSAAAAAAAD0UowAAAAAAQQSAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMEAAAAAAAAZvczMzQAAABoAAAAAAAAAG0CgAAAAAAAcPwAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>ATV-stereo-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwXAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQKAAAAAAAAhBkAAAAAAACQAAAAAAAAAKQNmZmgAA
AAtACKPXAAAADMGjMzMAAAANwooAAAAAAA5CSAAAAAAAD0UowAAAAAAQQSAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMEgAAAAAAAZvczMzQAAABoAAAAAAAAAG0CgAAAAAAAcAAAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>ATV+MAC-surround-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwUAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQMAAAAAAAAg/imaAAAAACQAAAAAAAAAKQcAAAAAA
AAtAAa20AAAADMHAAAAAAAANwn9hHwAAAA5CSAAAAAAAD0T6AAAAAAAQQEAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMDAAAAAAAAZAAAAAAAAABpBIAAAAAAAGz+AAAAAAAAcAAAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>MAC-stereo-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
hwref
hwmic
tsref
tsmic
epref
epmic
mmic1
mmic2
mmic3
mmic4
beam1
beam2
ecout
ec2ot
ec3ot
ec4ot
plyot
ply2o
eco1f
eco2f
eco3f
eco4f
ocnes
polyf
ply2f
bnfo1
bnfo2
bnfs1
bnfs2
fsout
esout
rsout
rs2ot
rs3ot
mmout
eclee
ec2le
ec3le
ec4le
plyle
ply2e
nfnso
res1g
res2g
res3g
rvspg
epout
pgout
eqout
agout
ldsout
usout
scout
ulout
uldat
dloau
dlfev
dlagc
dlmxo
dlveq
dlvol
dlwns
dlcnq
dlcng
dlsci
dlcfl
dlcflhf
dlcfllf
cpm1
dldec
dlheq
dlfceq
dlspp
dlspphf
dlspplf
dlout
sptel
times
props
errlg
gtlog
gtctl
dlctl
mclip
mfir1
mfir2
mfir3
mfir4
dlsso
dlvio
dlpeq
dlvbs
dlfds
dlspe
dlduk
dlmus
syslg
timlg
snsou
snsga
nrsou
supin
nsel0
nsel1
bss1_1
bss1_2
bss2
bssa
hneq
bemto
bemfo
bemfe
bemfs
bemfu
bemfb
dervb
derec
denos
denec
windk
windg
talin
talir
talou
rotd
rotc
msens
ldnm
splm
nnvi
ecres
ec2re
msout
ms2ot
mslee
msres
dldecmc
dlcnqmc
@@33s@
L>333?33
dlfev
dloau
dlout
hwref
hwmic
tsref
tsmic
epref
epmic
ulout
dlsso
dlvio
N2vp2vx8database2v118Load_Property_ListE
N2vp2vx8database2v18DecisionE
N2vp2vx8database2v115Replace_StringsE
N2vp2vx8database2v130Replace_String_From_Legacy_4CCE
N2vp2vx8database2v15MatchE
N2vp2vx8database2v19ConditionE
N2vp2vx8database2v19Match_AllE
N2vp2vx8database2v19Match_AnyE
N2vp2vx8database2v14WhenE
N2vp2vx8database2v18When_NotE
N2vp2vx8database2v14ThenE
N2vp2vx8database2v122Override_Property_ListE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF10BooleanRefEEE
N2vp2vx8database2v120Constraint_EvaluatorE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF9NumberRefEEE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF9StringRefEEE
N2vp2vx8database2v122Constraint_Evaluator_TIN10applesauce2CF7TypeRefEEE
N2vp2vx8database2v125Four_CC_Constraint_ParserE
N2vp2vx8database2v117Constraint_ParserE
N2vp2vx8database2v125Boolean_Constraint_ParserE
N2vp2vx8database2v124Number_Constraint_ParserE
N2vp2vx8database2v124String_Constraint_ParserE
N2vp2vx8database2v112Match_ParserE
N2vp2vx8database2v116Condition_ParserE
N2vp2vx8database2v116Match_All_ParserE
N2vp2vx8database2v116Match_Any_ParserE
N2vp2vx8database2v111When_ParserE
N2vp2vx8database2v115When_Not_ParserE
N2vp2vx8database2v111Then_ParserE
N2vp2vx8database2v115Decision_ParserE
N2vp2vx8database2v129Override_Property_List_ParserE
N2vp2vx8database2v122Replace_Strings_ParserE
N2vp2vx8database2v137Replace_String_From_Legacy_4CC_ParserE
N2vp2vx8database2v115Database_ParserE
N2vp2vx8database2v124Condition_Parser_FactoryE
N2vp2vx8database2v125Constraint_Parser_FactoryE
N2vp2vx8database2v123Decision_Parser_FactoryE
N2vp2vx8database2v125Load_Property_List_ParserE
N2vp2vx8database2v125Load_Configuration_ParserE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v116Condition_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v116Condition_ParserEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v117Constraint_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v117Constraint_ParserEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v115Decision_ParserENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v115Decision_ParserEEE
NSt3__120__shared_ptr_emplaceIN2vp2vx8database2v14RuleENS_9allocatorIS5_EEEE
N2vp2vx8database2v14RuleE
N2vp2vx8database2v16ObjectE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v19ConditionENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v19ConditionEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v18DecisionENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v18DecisionEEE
N2vp2vx8database2v118Load_ConfigurationE
N2vp2vx22IO_Node_Audio_InjectorE
N2vp2vx30IO_Node_Audio_Injector_FactoryE
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory33set_should_enable_audio_injectorsENS3_9data_flow5StateIbEEE3$_0NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory33set_should_enable_audio_injectorsENS0_9data_flow5StateIbEEE3$_0
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_15Input_Port_TypeEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_15Input_Port_TypeEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory17set_mic_port_typeENS3_9data_flow5StateINS3_15Input_Port_TypeEEEE3$_1NS_9allocatorIS9_EEFvjRKS7_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx15Input_Port_TypeEEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory17set_mic_port_typeENS0_9data_flow5StateINS0_15Input_Port_TypeEEEE3$_1
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_16Output_Port_TypeEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_16Output_Port_TypeEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Injector_Factory17set_ref_port_typeENS3_9data_flow5StateINS3_16Output_Port_TypeEEEE3$_2NS_9allocatorIS9_EEFvjRKS7_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx16Output_Port_TypeEEEE
ZN2vp2vx30IO_Node_Audio_Injector_Factory17set_ref_port_typeENS0_9data_flow5StateINS0_16Output_Port_TypeEEEE3$_2
NSt3__120__shared_ptr_pointerIPdN2vp16Allocator_DeleteIdEENS_9allocatorIdEEEE
N2vp16Allocator_DeleteIdEE
NSt3__110__function6__funcIZZN2vp2vx22create_voice_processorERKNS2_7ContextERKNS_10shared_ptrINS2_16Service_ProviderEEENS2_9AllocatorISt4byteEEENK3$_0clEvEUlT_T0_T1_E_NS_9allocatorISJ_EEFNS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISN_EEEEjjRKNS_4__fs10filesystem4pathEEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx22Configuration_DatabaseENS_14default_deleteIS5_EEEEjjRKNS_4__fs10filesystem4pathEEEE
ZZN2vp2vx22create_voice_processorERKNS_7ContextERKNSt3__110shared_ptrINS_16Service_ProviderEEENS_9AllocatorISt4byteEEENK3$_0clEvEUlT_T0_T1_E_
NSt3__120__shared_ptr_pointerIPN5caulk10concurrent9messengerEN2vp16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteIN5caulk10concurrent9messengerEEE
sdiadrbbsdcssdcw
xfuaqebn
####!
N2vp2vx2io28Property_Controller_DelegateE
N2vp2vx2io12Node_CommandE
N2vp2vx2io27Property_Controller_CommandE
N2vp2vx10components20Audio_Issue_DetectorE
NSt3__120__shared_ptr_pointerIPN2vp8services27Audio_Issue_Detector_ClientENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp8services27Audio_Issue_Detector_ClientEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIxNS_9allocatorIxEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIxNS3_9allocatorIxEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_0NS_9allocatorIS6_EEFvRKNS_6vectorIxNS7_IxEEEEEEE
NSt3__110__function6__baseIFvRKNS_6vectorIxNS_9allocatorIxEEEEEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_0
NSt3__120__shared_ptr_pointerIPN2vp2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryENS1_16Allocator_DeleteIS5_EENS_9allocatorIS5_EEEE
N2vp16Allocator_DeleteINS_2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryEEE
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_1NS_9allocatorIS6_EEFvRKbEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_1
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIfE17register_listenerENS_8functionIFvRKfEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIfE17register_listenerENSt3__18functionIFvRKfEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_2NS_9allocatorIS6_EEFvRKfEEE
NSt3__110__function6__baseIFvRKfEEE
ZN2vp2vx10components20Audio_Issue_Detector9configureEvE3$_2
ibmpiwmptbmpielpittpisupitsp
uolpwphpbphpBphpcerpcahpkpspottposupoelppsdpmdhpspapwpapotsp
rsmvlimvoimv
rsrvlirvoirvlorvoorvsprveprvtbrv
rvlf
tcvtrcvtsriaucrvrovdroiudmpschpscapscdemcmvsadddldaostrdstrueasmm2smdepm
tfdh09xhtfdH63aH51bHf06bg06b891b013b203bfedwpfhad2aa
nupephpehvpepspettpe
$).N2vp10decorators17Xcode_InstrumentsE
N2vp10decorators12_GLOBAL__N_131Boolean_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_123Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_fEE
N2vp10decorators12_GLOBAL__N_131Base_64_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIjEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_jEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIfEE
N2vp10decorators12_GLOBAL__N_134CF_Literal_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_126CF_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIdEE
N2vp10decorators12_GLOBAL__N_133To_String_Property_Pretty_PrinterIA_xEE
N2vp10decorators12_GLOBAL__N_138Operation_Mode_Property_Pretty_PrinterE
N2vp10decorators12_GLOBAL__N_135Chat_Flavor_Property_Pretty_PrinterE
mcpl)
AN2vp2vx33Voice_Processor_Interface_AdapterE
18VoiceProcessorBase
23VoiceProcessorInterface
grabmarf?ohwlav!lav!psd!gfc!o/i!tatslpmipsnunknuNSt3__120__shared_ptr_emplaceIN2vp2cf19Notification_CenterENS1_9AllocatorISt4byteEEEE
N2vp2vx2io29Parameter_Controller_DelegateE
N2vp2vx2io28Parameter_Controller_CommandE
Yuuu4Y
NSt3__111__end_stateIcEE
NSt3__16__nodeIcEE
NSt3__120__shared_ptr_pointerIPNS_13__empty_stateIcEENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrINS_13__empty_stateIcEEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteINS_13__empty_stateIcEEEE
NSt3__113__empty_stateIcEE
NSt3__116__owns_one_stateIcEE
NSt3__115__has_one_stateIcEE
NSt3__120__l_anchor_multilineIcEE
NSt3__120__r_anchor_multilineIcEE
NSt3__115__word_boundaryIcNS_12regex_traitsIcEEEE
NSt3__111__lookaheadIcNS_12regex_traitsIcEEEE
NSt3__123__match_any_but_newlineIcEE
NSt3__118__match_char_icaseIcNS_12regex_traitsIcEEEE
NSt3__120__match_char_collateIcNS_12regex_traitsIcEEEE
NSt3__112__match_charIcEE
NSt3__116__back_ref_icaseIcNS_12regex_traitsIcEEEE
NSt3__118__back_ref_collateIcNS_12regex_traitsIcEEEE
NSt3__110__back_refIcEE
NSt3__120__bracket_expressionIcNS_12regex_traitsIcEEEE
NSt3__128__begin_marked_subexpressionIcEE
NSt3__126__end_marked_subexpressionIcEE
NSt3__16__loopIcEE
NSt3__117__owns_two_statesIcEE
NSt3__117__repeat_one_loopIcEE
NSt3__111__alternateIcEE
NSt3__121__empty_non_own_stateIcEE
NSt3__111__match_anyIcEE
N2vp2vx10components20Audio_Issue_Detector14Node_DecoratorE
N2vp2vx10components20Audio_Issue_Detector22Node_Decorator_FactoryE
N2vp2vx2io22Node_Decorator_FactoryE
,92N2vp2vx2io20Parameter_ControllerE
N2vp2vx2io19Property_ControllerE
N2vp2vx3dsp5GraphE
N2vp2vx3dsp26Fixed_Slice_Duration_GraphE
N2vp2vx3dsp34Variable_Slice_Duration_Pull_GraphE
N2vp2vx3dsp34Variable_Slice_Duration_Push_GraphE
NSt3__120__shared_ptr_pointerIPN8DSPGraph5GraphENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8DSPGraph5GraphEEE
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_E_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_14Parameter_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_T0_T1_E_NS_9allocatorISI_EEFNS5_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_T0_T1_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_E0_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_13Property_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSC_EUlSC_T0_T1_E0_NS_9allocatorISI_EEFNS5_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS6_EEDaSA_EUlSA_T0_T1_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_E_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_14Parameter_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_T0_T1_E_NS_9allocatorISI_EEFNS5_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_T0_T1_E_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_E0_NS_9allocatorISG_EEFNS5_8ExpectedINS_6vectorINS6_13Property_InfoENS5_9AllocatorISL_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_E0_
NSt3__110__function6__funcIZZN8DSPGraph8GraphRPB22add_delegate_callbacksENS_7variantIJN2vp3rpb4Host8DelegateENS6_4Item8DelegateEEEEENKUlT_E_clISA_EEDaSC_EUlSC_T0_T1_E0_NS_9allocatorISI_EEFNS5_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZZN8DSPGraph8GraphRPB22add_delegate_callbacksENSt3__17variantIJN2vp3rpb4Host8DelegateENS4_4Item8DelegateEEEEENKUlT_E_clIS8_EEDaSA_EUlSA_T0_T1_E0_
N2vp2vx8database2v112File_ManagerE
N2vp2vx8database2v121Database_File_ManagerE
N2vp18Virtual_DestructorE
NSt3__117bad_function_callE
N2vp2vx10components16Audio_StatisticsE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_0JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_0JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_1JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_1JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_2JNS3_13Port_Sub_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_13Port_Sub_TypeEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_2JNS0_13Port_Sub_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_3JNS3_18Port_Endpoint_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_3JNS0_18Port_Endpoint_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_4JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_4JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_5JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_5JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_6JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_6JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_7JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_7JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS9_IS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESK_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE3$_9JNS3_14Operation_ModeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE3$_9JNS0_14Operation_ModeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components16Audio_Statistics9configureEvE4$_10JNS3_11Chat_FlavorEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSD_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_11Chat_FlavorEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components16Audio_Statistics9configureEvE4$_10JNS0_11Chat_FlavorEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSA_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
N2vp2vx10components16Audio_Statistics17Payload_Key_StateE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE17register_listenerENS_8functionIFvRKSB_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS9_ISM_EEFvjSL_EEE
ZN2vp2vx9data_flow5StateINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE17register_listenerENS3_8functionIFvRKS9_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSN_7TypeRefENS_4hashISO_EENS_8equal_toISO_EENS2_9AllocatorINS_4pairIKSO_SP_EEEEEEEUlRKSC_E_NSA_IS13_EEFvS12_EEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS4_13unordered_mapIN10applesauce2CF9StringRefENSL_7TypeRefENS4_4hashISM_EENS4_8equal_toISM_EENS_9AllocatorINS4_4pairIKSM_SN_EEEEEEEUlRKSA_E_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKjE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKjEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIjEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKjE_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKbE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKbEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIbEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKbE_
ZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS0_9data_flow5StateIT_EEE19Payload_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvRKdEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvRKdEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS3_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNS_13unordered_mapIN10applesauce2CF9StringRefENSH_7TypeRefENS_4hashISI_EENS_8equal_toISI_EENS2_9AllocatorINS_4pairIKSI_SJ_EEEEEEEUlRKdE_NS_9allocatorISX_EEFvSW_EEE
NSt3__110__function6__baseIFvRKdEEE
ZZN2vp2vx10components16Audio_Statistics21add_payload_key_stateIdEEvPK10__CFStringNS0_9data_flow5StateIT_EEEN19Payload_Key_State_T17register_listenerEPNSt3__113unordered_mapIN10applesauce2CF9StringRefENSF_7TypeRefENSC_4hashISG_EENSC_8equal_toISG_EENS_9AllocatorINSC_4pairIKSG_SH_EEEEEEEUlRKdE_
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIxNS4_9allocatorIxEEEEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_35Spatial_Head_Tracking_ConfigurationEEE
]xEc
N2vp10decorators9AB_HelperE
shba
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlT_E_JS9_EEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS4_13State_ManagerESH_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlT_E_JS7_EEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_EEERNS1_13State_ManagerESF_SO_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlT_E_JN10applesauce2CF9StringRefEEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSE_5StateIT0_EEEUlRKNS_5tupleIJSC_EEEE_NS_9allocatorISQ_EEFvSP_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEEEEEEE
NSt3__110__function6__funcIZN2vp2vx27Control_Center_Manager_Impl20update_app_bundle_idEN10applesauce2CF9StringRefEEUlRT_E_NS_9allocatorISA_EEFvRNS2_6darwin18Notification_ProxyEEEE
ZN2vp2vx27Control_Center_Manager_Impl20update_app_bundle_idEN10applesauce2CF9StringRefEEUlRT_E_
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlT_E_JN10applesauce2CF9StringRefEEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSB_5StateIT0_EEEUlRKNSt3__15tupleIJS9_EEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEjEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlT_T0_E_JS9_jEEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_jEEERNS4_13State_ManagerESH_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlT_T0_E_JS7_jEEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_jEEERNS1_13State_ManagerESF_SP_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEjEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEjEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlT_T0_E_JN10applesauce2CF9StringRefEjEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSF_5StateIT0_EEEUlRKNS_5tupleIJSD_jEEEE_NS_9allocatorISR_EEFvSQ_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEjEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlT_T0_E_JN10applesauce2CF9StringRefEjEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSC_5StateIT0_EEEUlRKNSt3__15tupleIJSA_jEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISA_NS_9allocatorISA_EEEEbEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSI_EUlRKT_RKT0_RKT1_RKT2_E_JS9_SA_SE_bEEEvOSM_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SA_SE_bEEERNS4_13State_ManagerESM_S16_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1F_E_NSC_IS1K_EEFvS1I_S1J_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS4_6vectorIS9_NS4_9allocatorIS9_EEEEbEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS3_6vectorIS8_NS3_9allocatorIS8_EEEEbEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSG_EUlRKT_RKT0_RKT1_RKT2_E_JS7_S8_SC_bEEEvOSK_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_S8_SC_bEEERNS1_13State_ManagerESK_S14_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1D_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISA_NS_9allocatorISA_EEEEbEEEE17register_listenerENS_8functionIFvRKSF_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NSC_ISQ_EEFvjSP_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefENS0_11Chat_FlavorENS3_6vectorIS8_NS3_9allocatorIS8_EEEEbEEEE17register_listenerENS3_8functionIFvRKSD_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_RKT0_RKT1_RKT2_E_JN10applesauce2CF9StringRefENS3_11Chat_FlavorENS_6vectorISO_NS_9allocatorISO_EEEEbEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSU_5StateIT0_EEEUlRKNS_5tupleIJSN_SO_SS_bEEEE_NSQ_IS16_EEFvS15_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEN2vp2vx11Chat_FlavorENS_6vectorIS8_NS_9allocatorIS8_EEEEbEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_RKT0_RKT1_RKT2_E_JN10applesauce2CF9StringRefENS0_11Chat_FlavorENSt3__16vectorISL_NSM_9allocatorISL_EEEEbEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSS_5StateIT0_EEEUlRKNSM_5tupleIJSK_SL_SQ_bEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefEbEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSD_EUlRKT_bE_JS9_bEEEvOSH_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_bEEERNS4_13State_ManagerESH_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSB_EUlRKT_bE_JS7_bEEEvOSF_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_bEEERNS1_13State_ManagerESF_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefEbEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefEbEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_bE_JN10applesauce2CF9StringRefEbEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSG_5StateIT0_EEEUlRKNS_5tupleIJSE_bEEEE_NS_9allocatorISS_EEFvSR_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefEbEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_bE_JN10applesauce2CF9StringRefEbEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSD_5StateIT0_EEEUlRKNSt3__15tupleIJSB_bEEEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_5tupleIJN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISB_EEEEEEEEC1IZNS3_29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERSI_EUlRKT_RKT0_E_JS9_SE_EEEvOSM_NS4_16Call_ImmediatelyEDpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SE_EEERNS4_13State_ManagerESM_S10_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NSC_IS1E_EEFvS1C_S1D_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__15tupleIJN10applesauce2CF9StringRefENS4_6vectorINS0_11Chat_FlavorENS4_9allocatorISA_EEEEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__15tupleIJN10applesauce2CF9StringRefENS3_6vectorINS0_11Chat_FlavorENS3_9allocatorIS9_EEEEEEEEC1IZNS0_29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERSG_EUlRKT_RKT0_E_JS7_SC_EEEvOSK_NS1_16Call_ImmediatelyEDpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SC_EEERNS1_13State_ManagerESK_SY_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_5tupleIJN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISB_EEEEEEEE17register_listenerENS_8functionIFvRKSF_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NSC_ISQ_EEFvjSP_EEE
ZN2vp2vx9data_flow5StateINSt3__15tupleIJN10applesauce2CF9StringRefENS3_6vectorINS0_11Chat_FlavorENS3_9allocatorIS9_EEEEEEEE17register_listenerENS3_8functionIFvRKSD_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS3_27Control_Center_Manager_Impl9configureERS4_EUlRKT_RKT0_E_JN10applesauce2CF9StringRefENS_6vectorINS3_11Chat_FlavorENS_9allocatorISJ_EEEEEEEvOS8_NS3_9data_flow16Call_ImmediatelyEDpRKNSO_5StateIT0_EEEUlRKNS_5tupleIJSH_SM_EEEE_NSK_IS10_EEFvSZ_EEE
NSt3__110__function6__baseIFvRKNS_5tupleIJN10applesauce2CF9StringRefENS_6vectorIN2vp2vx11Chat_FlavorENS_9allocatorIS9_EEEEEEEEEE
ZN2vp2vx29Voice_Processor_State_Manager21create_state_listenerIZNS0_27Control_Center_Manager_Impl9configureERS1_EUlRKT_RKT0_E_JN10applesauce2CF9StringRefENSt3__16vectorINS0_11Chat_FlavorENSF_9allocatorISH_EEEEEEEvOS5_NS0_9data_flow16Call_ImmediatelyEDpRKNSM_5StateIT0_EEEUlRKNSF_5tupleIJSE_SK_EEEE_
NSt3__120__shared_ptr_emplaceIN2vp2vx27Control_Center_Manager_ImplENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF9StringRefEE17register_listenerENS_8functionIFvRKS8_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF9StringRefEE17register_listenerENSt3__18functionIFvRKS5_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager17set_app_bundle_idENS3_9data_flow5StateIN10applesauce2CF9StringRefEEEE3$_0NS_9allocatorISB_EEFvRKS9_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF9StringRefEEEE
ZN2vp2vx22Control_Center_Manager17set_app_bundle_idENS0_9data_flow5StateIN10applesauce2CF9StringRefEEEE3$_0
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager10set_bypassENS3_9data_flow5StateIbEEE3$_1NS_9allocatorIS8_EEFvRKbEEE
ZN2vp2vx22Control_Center_Manager10set_bypassENS0_9data_flow5StateIbEEE3$_1
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager17set_media_handoffENS3_9data_flow5StateIbEEE3$_2NS_9allocatorIS8_EEFvRKbEEE
ZN2vp2vx22Control_Center_Manager17set_media_handoffENS0_9data_flow5StateIbEEE3$_2
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS7_EEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS8_ISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorINS0_11Chat_FlavorENS3_9allocatorIS5_EEEEE17register_listenerENS3_8functionIFvRKS8_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx22Control_Center_Manager26set_supported_chat_flavorsENS3_9data_flow5StateINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS8_EEEEEEE3$_3NS9_ISD_EEFvRKSB_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIN2vp2vx11Chat_FlavorENS_9allocatorIS5_EEEEEEE
0001020304050607080910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091929394959697989900010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899ZN2vp2vx22Control_Center_Manager26set_supported_chat_flavorsENS0_9data_flow5StateINSt3__16vectorINS0_11Chat_FlavorENS4_9allocatorIS6_EEEEEEE3$_3
N2vp2vx10components20Smart_Cover_DetectorE
N2vp2vx2io6ObjectE
N2vp9DecoratorE
N2vp2vx35IO_Property_Setter_Delegate_FactoryE
bhapphap@
N2vp2vx25IO_Personal_Audio_CommandE
N2vp2vx2io20Node_Command_FactoryE
N2vp2vx33IO_Personal_Audio_Command_FactoryE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_26IO_Personal_Audio_SettingsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_33IO_Personal_Audio_Command_FactoryC1ERS9_NS_10shared_ptrINS2_8services14Personal_AudioEEEE3$_0JNS4_12Time_StampedIyEESJ_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_SJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_26IO_Personal_Audio_SettingsEEE
ZN2vp2vx9data_flow14State_FunctionINS0_26IO_Personal_Audio_SettingsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_33IO_Personal_Audio_Command_FactoryC1ERS6_NSt3__110shared_ptrINS_8services14Personal_AudioEEEE3$_0JNS1_12Time_StampedIyEESH_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_SH_EEERNS1_13State_ManagerESJ_SQ_EUlNSA_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_26IO_Personal_Audio_SettingsEE17register_listenerENS_8functionIFvRKS6_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateINS0_26IO_Personal_Audio_SettingsEE17register_listenerENSt3__18functionIFvRKS3_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx25IO_Personal_Audio_Command8set_nodeENS_10shared_ptrINS3_2io4NodeEEEE3$_1NS_9allocatorIS9_EEFvRKNS3_26IO_Personal_Audio_SettingsEEEE
NSt3__110__function6__baseIFvRKN2vp2vx26IO_Personal_Audio_SettingsEEEE
ZN2vp2vx25IO_Personal_Audio_Command8set_nodeENSt3__110shared_ptrINS0_2io4NodeEEEE3$_1
NSt3__120__shared_ptr_pointerIP7_xmlDocN10applesauce4raii2v16detail23opaque_deletion_functorIS2_XadL_Z10xmlFreeDocEEEENS_9allocatorIS1_EEEE
N10applesauce4raii2v16detail23opaque_deletion_functorIP7_xmlDocXadL_Z10xmlFreeDocEEEE
N2vp2vx10components14Audio_CapturerE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_0JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_0JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_1JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS9_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_1JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components14Audio_Capturer9configureEvE3$_2JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS9_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_16Output_Port_TypeEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components14Audio_Capturer9configureEvE3$_2JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
vhldglvdN2vp2vx24IO_Volume_Limit_DelegateE
N2vp2vx32IO_Volume_Limit_Delegate_FactoryE
cHcccccccccM
*$-
%N2vp2vx8database2v18DatabaseE
N2vp2vx22Configuration_DatabaseE
N2vp15No_Copy_No_MoveE
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA15_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v117Constraint_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA15_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA12_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA12_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA16_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA16_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24String_Constraint_ParserEJRA17_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24String_Constraint_ParserEJRA17_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA28_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA28_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA39_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA39_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA24_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA24_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA32_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA32_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA22_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA22_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA45_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA45_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA30_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA30_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA29_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA29_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Boolean_Constraint_ParserEJRA37_KcbEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Boolean_Constraint_ParserEJRA37_KcbEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA33_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA32_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA32_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA31_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA31_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA34_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA34_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_24Number_Constraint_ParserEJRA20_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_24Number_Constraint_ParserEJRA20_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Four_CC_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_17Constraint_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Four_CC_Constraint_ParserEJRA13_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_12Match_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v116Condition_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_12Match_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_16Match_All_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_16Match_All_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_16Match_Any_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_16Match_Any_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_11When_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_11When_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_15When_Not_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_16Condition_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_15When_Not_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_11Then_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
NSt3__110__function6__baseIFNS_10unique_ptrIN2vp2vx8database2v115Decision_ParserENS_14default_deleteIS7_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_11Then_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Property_List_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEEEEEDaDpOT0_EUlvE_NS_9allocatorISG_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISK_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Property_List_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEEEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA1_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA1_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA7_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA7_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_25Load_Configuration_ParserEJRNS_10shared_ptrINS5_21Database_File_ManagerEEERA9_KcEEEDaDpOT0_EUlvE_NS_9allocatorISJ_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISN_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_25Load_Configuration_ParserEJRNSt3__110shared_ptrINS2_21Database_File_ManagerEEERA9_KcEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_29Override_Property_List_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_29Override_Property_List_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_22Replace_Strings_ParserEJEEEDaDpOT0_EUlvE_NS_9allocatorISC_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISG_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_22Replace_Strings_ParserEJEEEDaDpOT0_EUlvE_
NSt3__110__function6__funcIZN2vp2vx8database2v112make_factoryINS5_37Replace_String_From_Legacy_4CC_ParserEJN10applesauce2CF9StringRefEEEEDaDpOT0_EUlvE_NS_9allocatorISF_EEFNS_10unique_ptrINS5_15Decision_ParserENS_14default_deleteISJ_EEEEvEEE
ZN2vp2vx8database2v112make_factoryINS2_37Replace_String_From_Legacy_4CC_ParserEJN10applesauce2CF9StringRefEEEEDaDpOT0_EUlvE_
N8nlohmann6detail10type_errorE
NSt3__120__shared_ptr_pointerIPN2vp2vx8database2v121Database_File_ManagerENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN2vp2vx8database2v121Database_File_ManagerEEE
NSt3__110__function6__funcIZN2vp2vx8database2v18Database4loadEjRKNS_4__fs10filesystem4pathEE3$_0NS_9allocatorISC_EEFvNS_10shared_ptrINS5_4RuleEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN2vp2vx8database2v14RuleEEEEEE
ZN2vp2vx8database2v18Database4loadEjRKNSt3__14__fs10filesystem4pathEE3$_0
N8nlohmann6detail11other_errorE
false
N8nlohmann6detail12out_of_rangeE
N8nlohmann6detail16invalid_iteratorE
N8nlohmann6detail11parse_errorE
N2vp2vx2io14Node_DecoratorE
N2vp2vx2io4NodeE
N2vp2vx20IO_Node_CPU_ProfilerE
N2vp2vx28IO_Node_CPU_Profiler_FactoryE
N2vp2vx9data_flow5Value14Type_ID_EraserIbEE
NSt3__110__function6__funcIZN2vp2vx28IO_Node_CPU_Profiler_Factory31set_should_enable_cpu_profilersENS3_9data_flow5StateIbEEE3$_3NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx28IO_Node_CPU_Profiler_Factory31set_should_enable_cpu_profilersENS0_9data_flow5StateIbEEE3$_3
N2vp2vx10components20Property_List_WriterE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer9configureEvE3$_0JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer9configureEvE3$_0JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIjNS_9allocatorIjEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_1JNS3_16Output_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESN_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS7_IS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIjNS3_9allocatorIjEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_1JNS0_16Output_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESL_SS_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_2JNS3_13Port_Sub_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_2JNS0_13Port_Sub_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_3JNS3_18Port_Endpoint_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_3JNS0_18Port_Endpoint_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIfNS_9allocatorIfEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_4JS9_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS7_IS1A_EEFvS18_S19_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIfNS4_9allocatorIfEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIfNS3_9allocatorIfEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_4JS7_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SL_EEERNS1_13State_ManagerESN_SU_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIjNS_9allocatorIjEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_5JNS3_15Input_Port_TypeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESN_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS7_IS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIjNS3_9allocatorIjEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_5JNS0_15Input_Port_TypeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESL_SS_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorIfNS_9allocatorIfEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSC_RKNS3_27Voice_Processor_State_OwnerEE3$_6JS9_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS9_SN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS7_IS1A_EEFvS18_S19_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorIfNS3_9allocatorIfEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERSA_RKNS0_27Voice_Processor_State_OwnerEE3$_6JS7_N10applesauce2CF8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS7_SL_EEERNS1_13State_ManagerESN_SU_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_7JN2CA17StreamDescriptionEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_jEEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_7JN2CA17StreamDescriptionEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_jEEERNS1_13State_ManagerESH_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_8JN2CA17StreamDescriptionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESH_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE3$_9JNS3_14Operation_ModeEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE3$_9JNS0_14Operation_ModeEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE4$_10JNS3_14Beam_DirectionEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_14Beam_DirectionEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE4$_10JNS0_14Beam_DirectionEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS3_27Voice_Processor_State_OwnerEE4$_11JNS3_11Chat_FlavorEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS5_RKNS0_27Voice_Processor_State_OwnerEE4$_11JNS0_11Chat_FlavorEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7DataRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSB_RKNS3_27Voice_Processor_State_OwnerEE4$_12JNS_6vectorIhNS_9allocatorIhEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESP_SW_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NSL_IS1A_EEFvS18_S19_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIhNS4_9allocatorIhEEEEEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF7DataRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7DataRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS0_27Voice_Processor_State_OwnerEE4$_12JNSt3__16vectorIhNSH_9allocatorIhEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS1_13State_ManagerESN_SU_EUlNSH_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components20Property_List_Writer26set_up_key_state_listenersERSB_RKNS3_27Voice_Processor_State_OwnerEE4$_13JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS4_13State_ManagerESM_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF13DictionaryRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components20Property_List_Writer26set_up_key_state_listenersERS8_RKNS0_27Voice_Processor_State_OwnerEE4$_13JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS1_13State_ManagerESJ_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx14observe_globalIbEEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EEEUljRKbE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx14observe_globalIbEEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EEEUljRKbE_
N2vp3sim9ExceptionE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE1EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE1EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE0EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE0EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE3EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE3EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details15rt_message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE2EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
N5caulk10concurrent7details12message_callIRZN2vp2vx10components20Property_List_Writer6reportILNS3_3sim9Times_KeyE2EEEvRKNS8_7utility24Audio_Time_Stamp_Tracker5EventEEUlSE_E_JSE_EEE
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
N2vp2vx10components20Property_List_Writer13Sim_Key_StateE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENS_8functionIFvRKS7_EEEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENSt3__18functionIFvRKS4_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
NSt3__110__function6__baseIFvRKN2CA17StreamDescriptionEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE7EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE8EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvRKjEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvRKjEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE8EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE8EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE10ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIjNS_9allocatorIjEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIjNS3_9allocatorIjEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE10ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIjNS_9allocatorIjEEEEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE10ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE11EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE11EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE11EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE12EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE12EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE12EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE13ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIfNS_9allocatorIfEEEEE17register_listenerENS_8functionIFvRKS9_EEEEUljRKNS4_5ValueEE_NS7_ISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIfNS3_9allocatorIfEEEEE17register_listenerENS3_8functionIFvRKS7_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE13ENS_6vectorIfNS_9allocatorIfEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIfNS_9allocatorIfEEEEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE13ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE14EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE15EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvRKdEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvRKdEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE15EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE15EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE16EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE17EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE17EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE17EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE19ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE19ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE19ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE20ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE20ENS_6vectorIfNS_9allocatorIfEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE20ENSt3__16vectorIfNS6_9allocatorIfEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE21EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE22EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE22EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE22EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE23EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE23EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE23EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE24EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE24EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE24EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE25EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE25EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE25EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE26EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE26EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE26EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE27EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE27EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE27EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE28EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE28EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE28EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE29EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE30EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE30EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE30EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE31EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE31EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE31EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE32EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvRKbEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvRKbEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE32EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE32EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE33EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE34EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE34EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE34EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE35EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE36EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIfE17register_listenerENS_8functionIFvRKfEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIfE17register_listenerENSt3__18functionIFvRKfEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE36EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE36EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE37EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE37EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE37EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE38EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE38EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE38EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE39EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE39EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE39EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE40EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE40EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE40EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE41EdEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE41EdEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKdE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE41EdEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKdE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE42EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE42EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE42EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE43EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE43EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE43EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE44EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE44EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE44EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSA_E_NS_9allocatorISL_EEFvSK_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE45EN2CA17StreamDescriptionEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS7_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE46EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE46EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE46EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE47ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE47ENS_6vectorIjNS_9allocatorIjEEEEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSC_E_NSA_ISN_EEFvSM_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE47ENSt3__16vectorIjNS6_9allocatorIjEEEEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS6_10shared_ptrINS4_20Property_List_WriterEEEEUlRKSA_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE48EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE48EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE48EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE49E13CAOrientationEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENS_8functionIFvRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserI13CAOrientationEE
ZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENSt3__18functionIFvRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE49E13CAOrientationEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKS9_E_NS_9allocatorISK_EEFvSJ_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE49E13CAOrientationEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS6_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE50E13CAOrientationEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE50E13CAOrientationEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKS9_E_NS_9allocatorISK_EEFvSJ_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE50E13CAOrientationEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS6_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE51EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE51EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE51EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE52EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE52EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE52EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE55EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE55EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE55EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE56EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE56EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE56EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE57EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF8ArrayRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF8ArrayRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF8ArrayRefEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE58EN10applesauce2CF8ArrayRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE60EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE60EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE60EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE61EbEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE61EbEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKbE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE61EbEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKbE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE62EjEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE62EjEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKjE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE62EjEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKjE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF7DataRefEE17register_listenerENS_8functionIFvRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF7DataRefEE17register_listenerENSt3__18functionIFvRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF7DataRefEEEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE63EN10applesauce2CF7DataRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE64EfEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE64EfEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKfE_NS_9allocatorISJ_EEFvSI_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE64EfEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKfE_
ZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEE15Sim_Key_State_T
NSt3__110__function6__funcIZZN2vp2vx10components20Property_List_Writer6set_upILNS2_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS3_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENS_10shared_ptrINS7_20Property_List_WriterEEEEUlRKSB_E_NS_9allocatorISM_EEFvSL_EEE
ZZN2vp2vx10components20Property_List_Writer6set_upILNS_3sim3KeyE65EN10applesauce2CF13DictionaryRefEEEvNS0_9data_flow5StateIT0_EEEN15Sim_Key_State_T17register_listenerENSt3__110shared_ptrINS4_20Property_List_WriterEEEEUlRKS8_E_
NSt3__120__shared_ptr_pointerIPN2vp3sim20Property_List_WriterENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_3sim20Property_List_WriterEEE
N5caulk19bad_expected_accessIN2vp3rpb5ErrorEEE
N2vp2vx10components24Phone_Proximity_DetectorE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS8_36create_state_for_darwin_notificationIZNS3_10components24Phone_Proximity_Detector9configureEvE3$_0EEDaOT_PKcEUlyE_JNS4_12Time_StampedIyEEEEESE_SG_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESF_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS1_12Time_StampedIyEEEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS5_36create_state_for_darwin_notificationIZNS0_10components24Phone_Proximity_Detector9configureEvE3$_0EEDaOT_PKcEUlyE_JNS1_12Time_StampedIyEEEEESB_SD_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESC_SO_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcEUlRT_E_NS_9allocatorIS9_EEFvRNS2_6darwin18Notification_ProxyEEEE
NSt3__110__function6__baseIFvRN2vp6darwin18Notification_ProxyEEEE
ZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcEUlRT_E_
NSt3__120__shared_ptr_pointerIPN2vp6darwin21Notification_ListenerEZZNS1_2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcENKUlT_E_clIS3_EEDaS9_EUlS4_E_NS_9allocatorIS3_EEEE
ZZN2vp2vx29Voice_Processor_State_Manager36create_state_for_darwin_notificationEPKcENKUlT_E_clINS_6darwin21Notification_ListenerEEEDaS4_EUlPS8_E_
N5caulk19bad_expected_accessIN2vp6darwin18Notification_ErrorEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS4_12Time_StampedIyEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNSA_36create_state_for_darwin_notificationEPKcEUlT_E0_JS7_EEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_EEERNS4_13State_ManagerESE_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionINS1_12Time_StampedIyEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS7_36create_state_for_darwin_notificationEPKcEUlT_E0_JS4_EEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_EEERNS1_13State_ManagerESB_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
N2vp2vx2io5nodes23Far_End_Voice_Proc_NodeE
N2vp2vx10components30Speech_Activity_Event_ListenerE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_10components30Speech_Activity_Event_Listener9configureEvE3$_0JbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_10components30Speech_Activity_Event_Listener9configureEvE3$_0JbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__120__shared_ptr_pointerIPN2vp6darwin12NotificationENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_6darwin12NotificationEEE
NSt3__120__shared_ptr_emplaceIN2vp6darwin19Notification_CenterENS1_9AllocatorISt4byteEEEE
"(9DJPV^djq
N2vp2vx8database2v112Data_ManagerE
N2vp2vx8database2v121Database_Data_ManagerE
N2vp2vx2io5ports28Audio_Ring_Buffer_Input_PortE
N2vp2vx2io5ports29Audio_Ring_Buffer_Output_PortE
trsntpnitrsnptuocntltpnicntlptuotfastpnitfasptuonwopbolgcycnbolgesodbolgcvodbolgscadptuotalsptuobuspptuopcadbolgpytpbolgtpepptuoN2vp2vx2io5wires20Audio_Converter_Wire15Source_TerminalE
N2vp2vx2io5wires20Audio_Converter_Wire20Destination_TerminalE
N2vp2vx2io4WireE
N2vp2vx2io5wires20Audio_Converter_WireE
N2vp2vx9ComponentE
N2vp7utility19Property_List_StoreE
N2vp7utility25Property_List_Parser_CoreE
NSt3__120__shared_ptr_pointerIPN2vp7utility19Property_List_StoreENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp7utility19Property_List_StoreEEE
N2vp7utility31Property_List_String_Key_LookupE
NSt3__120__shared_ptr_pointerIPN2vp7utility31Property_List_String_Key_LookupENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp7utility31Property_List_String_Key_LookupEEE
mvlubpsudpsurpsuN2vp2vx33IO_Speech_Activity_Event_ListenerE
N2vp2vx41IO_Speech_Activity_Event_Listener_FactoryE
N5caulk10concurrent7details15rt_message_callIZN2vp2vx33IO_Speech_Activity_Event_Listener7processENS4_2io6MomentERNS6_4NodeEE3$_3J28AUVoiceIOSpeechActivityEventEEE
N5caulk10concurrent7details12message_callIZN2vp2vx33IO_Speech_Activity_Event_Listener7processENS4_2io6MomentERNS6_4NodeEE3$_3J28AUVoiceIOSpeechActivityEventEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS2_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEE17register_listenerENS_8functionIFvRKSA_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEE17register_listenerENSt3__18functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx33IO_Speech_Activity_Event_Listener38register_event_listener_block_listenerEvE3$_0NS_9allocatorIS5_EEFvRKNS2_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEEE
NSt3__110__function6__baseIFvRKN2vp5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEEE
ZN2vp2vx33IO_Speech_Activity_Event_Listener38register_event_listener_block_listenerEvE3$_0
NSt3__110__function6__funcIZN2vp2vx41IO_Speech_Activity_Event_Listener_Factory38set_should_disable_and_reset_on_unmuteENS3_9data_flow5StateIbEEE3$_4NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx41IO_Speech_Activity_Event_Listener_Factory38set_should_disable_and_reset_on_unmuteENS0_9data_flow5StateIbEEE3$_4
?N2vp2vx28Uplink_Configuration_ManagerE
N2vp2vx29Uplink_Configuration_DelegateE
N2vp2vx30Downlink_Configuration_ManagerE
N2vp2vx31Downlink_Configuration_DelegateE
N2vp2vx24IO_Port_Factory_ProviderE
N2vp2vx2io12Port_FactoryE
N2vp2vx15IO_Port_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_15IO_Port_Factory14set_is_enabledENS3_9data_flow5StateIbEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_15IO_Port_Factory14set_is_enabledENS0_9data_flow5StateIbEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_15IO_Port_Factory14set_is_enabledENS3_9data_flow5StateIbEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_15IO_Port_Factory14set_is_enabledENS0_9data_flow5StateIbEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvjRKjEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvjRKjEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Port_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Port_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Port_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Port_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
ZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENSt3__18functionIFvjRKS4_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_15IO_Port_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
NSt3__110__function6__baseIFvjRKN2CA17StreamDescriptionEEEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_15IO_Port_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_15IO_Port_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_15IO_Port_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZNK2vp2vx2io6Object11Log_Context15get_descriptionERNS_13basic_ostreamIcNS_11char_traitsIcEEEEE3$_5NS_9allocatorISC_EEFvRKS6_EEE
NSt3__110__function6__baseIFvRKN2vp2vx2io6Object11Log_ContextEEEE
ZNK2vp2vx2io6Object11Log_Context15get_descriptionERNSt3__113basic_ostreamIcNS4_11char_traitsIcEEEEE3$_5
N5boost6detail17basic_unlockedbufINSt3__115basic_stringbufIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEcEE
N5boost6detail16basic_pointerbufIcNSt3__115basic_stringbufIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N5boost16exception_detail19error_info_injectorINS_16bad_lexical_castEEE
N5boost16bad_lexical_castE
N5boost16exception_detail10clone_baseE
N2vp2vx2io4PortE
N2vp2vx2io13Node_TerminalE
N2vp2vx2io10Input_PortE
N2vp2vx2io11Output_PortE
N2vp2vx10components12CPU_ProfilerE
,.BN2vp2vx2io5GraphE
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE4$_14NS_9allocatorIS8_EEFNS2_8ExpectedINS_6vectorINS6_14Parameter_InfoENS2_9AllocatorISD_EEEENS6_5ErrorEEENS6_5ScopeEEEE
NSt3__110__function6__baseIFN2vp8ExpectedINS_6vectorINS2_3rpb14Parameter_InfoENS2_9AllocatorIS6_EEEENS5_5ErrorEEENS5_5ScopeEEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE4$_14
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE3$_0NS_9allocatorIS8_EEFNS2_8ExpectedIfNS6_5ErrorEEEjNS6_5ScopeEjEEE
NSt3__110__function6__baseIFN2vp8ExpectedIfNS2_3rpb5ErrorEEEjNS4_5ScopeEjEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE3$_0
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE4$_15NS_9allocatorIS8_EEFNS2_8ExpectedINS_6vectorINS6_13Property_InfoENS2_9AllocatorISD_EEEENS6_5ErrorEEENS6_5ScopeEEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE4$_15
NSt3__110__function6__funcIZN2vp2vx2io5Graph7connectENS2_3rpb4ItemEE3$_1NS_9allocatorIS8_EEFNS2_8ExpectedIN10applesauce2CF7TypeRefENS6_5ErrorEEEjNS6_5ScopeEjEEE
ZN2vp2vx2io5Graph7connectENS_3rpb4ItemEE3$_1
NSt3__120__shared_ptr_pointerIPN2vp2vx2io13Node_DelegateENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io13Node_DelegateEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io12Node_CommandENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io12Node_CommandEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4NodeENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4NodeEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4PortENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4PortEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx2io4WireENS1_16Allocator_DeleteIS4_EENS_9allocatorIS4_EEEE
N2vp16Allocator_DeleteINS_2vx2io4WireEEE
N2vp2vx10components26Wireless_Charging_DetectorE
elcaegmaff
ffF@tmceelcaegmafhcegtcegmceedrmbpsdtmceelcaegmafhcegtcegmceedrmbpsdN2vp2vx2io13Node_DelegateE
N2vp2vx39IO_ExpanseAGC_Adaptive_Control_DelegateE
N2vp2vx47IO_ExpanseAGC_Adaptive_Control_Delegate_FactoryE
NSt3__120__shared_ptr_emplaceIN2vp2vx2io6Object11Log_ContextENS_9allocatorIS5_EEEE
"(/7?EKRX^f
N2vp2vx25DSP_Node_Factory_ProviderE
N2vp2vx2io12Node_FactoryE
N2vp2vx16DSP_Node_FactoryE
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E_NS_9allocatorISH_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENSI_IcEEEERKN2CA17StreamDescriptionEEEE
NSt3__110__function6__baseIFvRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKN2CA17StreamDescriptionEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E0_NS_9allocatorISH_EEFvRKNS_12basic_stringIcNS_11char_traitsIcEENSI_IcEEEERKN2CA17StreamDescriptionEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlRKT_RKT0_E0_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E_NS_9allocatorISD_EEFvNS3_18Graph_Parameter_IDEN10applesauce2CF9NumberRefEEEE
NSt3__110__function6__baseIFvN2vp2vx18Graph_Parameter_IDEN10applesauce2CF9NumberRefEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E_
NSt3__110__function6__funcIZZN2vp2vx16DSP_Node_Factory8new_nodeENS3_2io5ModelENS2_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E0_NS_9allocatorISD_EEFvNS3_17Graph_Property_IDEN10applesauce2CF13DictionaryRefEEEE
NSt3__110__function6__baseIFvN2vp2vx17Graph_Property_IDEN10applesauce2CF13DictionaryRefEEEE
ZZN2vp2vx16DSP_Node_Factory8new_nodeENS0_2io5ModelENS_9AllocatorISt4byteEEENK4$_23clEvEUlT_T0_E0_
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_22DSP_Node_ConfigurationEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS3_22DSP_Node_ConfigurationEE17register_listenerENS_8functionIFvjRKS6_EEEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateINS0_22DSP_Node_ConfigurationEE17register_listenerENSt3__18functionIFvjRKS3_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS3_22DSP_Node_ConfigurationEZNS3_16DSP_Node_Factory17set_configurationENS3_9data_flow5StateIS5_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS5_E_NS_9allocatorISK_EEFvjSJ_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx22DSP_Node_ConfigurationEEEE
N8nlohmann6detail23output_adapter_protocolIcEE
ZN2vp2vx14observe_uplinkINS0_22DSP_Node_ConfigurationEZNS0_16DSP_Node_Factory17set_configurationENS0_9data_flow5StateIS2_EEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS5_IT_EET0_EUljRKS2_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS3_22DSP_Node_ConfigurationEZNS3_16DSP_Node_Factory17set_configurationENS3_9data_flow5StateIS5_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS5_E_NS_9allocatorISK_EEFvjSJ_EEE
ZN2vp2vx16observe_downlinkINS0_22DSP_Node_ConfigurationEZNS0_16DSP_Node_Factory17set_configurationENS0_9data_flow5StateIS2_EEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS5_IT_EET0_EUljRKS2_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKjEEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_4EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_4EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory23set_block_size_is_fixedENS3_9data_flow5StateIbEEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory23set_block_size_is_fixedENS0_9data_flow5StateIbEEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory23set_block_size_is_fixedENS3_9data_flow5StateIbEEE3$_5EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory23set_block_size_is_fixedENS0_9data_flow5StateIbEEE3$_5EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory18set_fft_block_sizeENS3_9data_flow5StateIjEEE3$_6EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory18set_fft_block_sizeENS0_9data_flow5StateIjEEE3$_6EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory18set_fft_block_sizeENS3_9data_flow5StateIjEEE3$_6EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory18set_fft_block_sizeENS0_9data_flow5StateIjEEE3$_6EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIdE17register_listenerENS_8functionIFvjRKdEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIdE17register_listenerENSt3__18functionIFvjRKdEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIdZNS3_16DSP_Node_Factory15set_sample_rateENS3_9data_flow5StateIdEEE3$_7EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKdE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKdEEE
ZN2vp2vx14observe_uplinkIdZNS0_16DSP_Node_Factory15set_sample_rateENS0_9data_flow5StateIdEEE3$_7EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKdE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIdZNS3_16DSP_Node_Factory15set_sample_rateENS3_9data_flow5StateIdEEE3$_7EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKdE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIdZNS0_16DSP_Node_Factory15set_sample_rateENS0_9data_flow5StateIdEEE3$_7EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKdE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN2CA17StreamDescriptionEE17register_listenerENS_8functionIFvjRKS7_EEEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory16set_input_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE3$_9EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory16set_input_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE3$_9EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory16set_input_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE3$_9EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory16set_input_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE3$_9EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory17set_output_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE4$_11EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory17set_output_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE4$_11EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_16DSP_Node_Factory17set_output_formatERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS3_9data_flow5StateIS6_EEE4$_11EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSH_IT_EET0_EUljRKS6_E_NSB_IST_EEFvjSS_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_16DSP_Node_Factory17set_output_formatERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS0_9data_flow5StateIS3_EEE4$_11EEvNS5_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSF_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF9NumberRefEE17register_listenerENS_8functionIFvjRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF9NumberRefEE17register_listenerENSt3__18functionIFvjRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN10applesauce2CF9NumberRefEZNS3_16DSP_Node_Factory22set_parameter_overrideENS3_18Graph_Parameter_IDENS3_9data_flow5StateIS7_EEE4$_14EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
NSt3__110__function6__baseIFvjRKN10applesauce2CF9NumberRefEEEE
ZN2vp2vx14observe_uplinkIN10applesauce2CF9NumberRefEZNS0_16DSP_Node_Factory22set_parameter_overrideENS0_18Graph_Parameter_IDENS0_9data_flow5StateIS4_EEE4$_14EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN10applesauce2CF9NumberRefEZNS3_16DSP_Node_Factory22set_parameter_overrideENS3_18Graph_Parameter_IDENS3_9data_flow5StateIS7_EEE4$_14EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
ZN2vp2vx16observe_downlinkIN10applesauce2CF9NumberRefEZNS0_16DSP_Node_Factory22set_parameter_overrideENS0_18Graph_Parameter_IDENS0_9data_flow5StateIS4_EEE4$_14EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvjRKS8_EEEEUljRKNS4_5ValueEE_NS_9allocatorISI_EEFvjSH_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvjRKS5_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN10applesauce2CF13DictionaryRefEZNS3_16DSP_Node_Factory21set_property_overrideENS3_17Graph_Property_IDENS3_9data_flow5StateIS7_EEE4$_17EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
NSt3__110__function6__baseIFvjRKN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx14observe_uplinkIN10applesauce2CF13DictionaryRefEZNS0_16DSP_Node_Factory21set_property_overrideENS0_17Graph_Property_IDENS0_9data_flow5StateIS4_EEE4$_17EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN10applesauce2CF13DictionaryRefEZNS3_16DSP_Node_Factory21set_property_overrideENS3_17Graph_Property_IDENS3_9data_flow5StateIS7_EEE4$_17EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSB_IT_EET0_EUljRKS7_E_NS_9allocatorISN_EEFvjSM_EEE
ZN2vp2vx16observe_downlinkIN10applesauce2CF13DictionaryRefEZNS0_16DSP_Node_Factory21set_property_overrideENS0_17Graph_Property_IDENS0_9data_flow5StateIS4_EEE4$_17EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS8_IT_EET0_EUljRKS4_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory33set_should_enable_audio_recordersENS3_9data_flow5StateIbEEE4$_18EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory33set_should_enable_audio_recordersENS0_9data_flow5StateIbEEE4$_18EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory33set_should_enable_audio_recordersENS3_9data_flow5StateIbEEE4$_18EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory33set_should_enable_audio_recordersENS0_9data_flow5StateIbEEE4$_18EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory26set_should_connect_to_AUPBENS3_9data_flow5StateIbEEE4$_19EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory26set_should_connect_to_AUPBENS0_9data_flow5StateIbEEE4$_19EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory26set_should_connect_to_AUPBENS3_9data_flow5StateIbEEE4$_19EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory26set_should_connect_to_AUPBENS0_9data_flow5StateIbEEE4$_19EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZNS3_16DSP_Node_Factory25set_should_connect_to_RPBENS3_9data_flow5StateIbEEE4$_20EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIbZNS0_16DSP_Node_Factory25set_should_connect_to_RPBENS0_9data_flow5StateIbEEE4$_20EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIbZNS3_16DSP_Node_Factory25set_should_connect_to_RPBENS3_9data_flow5StateIbEEE4$_20EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIbZNS0_16DSP_Node_Factory25set_should_connect_to_RPBENS0_9data_flow5StateIbEEE4$_20EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE4$_21EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE4$_21EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE4$_21EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE4$_21EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE4$_22EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE4$_22EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE4$_22EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_16DSP_Node_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE4$_22EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
N2vp2vx43IO_Far_End_Voice_Proc_Node_Factory_ProviderE
N2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS2_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEE17register_listenerENS_8functionIFvjRKSE_EEEEUljRKNS4_5ValueEE_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx9data_flow5StateINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEE17register_listenerENSt3__18functionIFvjRKSB_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS2_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEZNS3_34IO_Far_End_Voice_Proc_Node_Factory15set_input_blockENS3_9data_flow5StateISD_EEE3$_0EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSG_IT_EET0_EUljRKSD_E_NS_9allocatorISS_EEFvjSR_EEE
NSt3__110__function6__baseIFvjRKN2vp5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEEE
ZN2vp2vx16observe_downlinkINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEZNS0_34IO_Far_End_Voice_Proc_Node_Factory15set_input_blockENS0_9data_flow5StateISA_EEE3$_0EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSD_IT_EET0_EUljRKSA_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_34IO_Far_End_Voice_Proc_Node_Factory18set_max_block_sizeENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_34IO_Far_End_Voice_Proc_Node_Factory18set_max_block_sizeENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS3_34IO_Far_End_Voice_Proc_Node_Factory10set_formatENS3_9data_flow5StateIS6_EEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx16observe_downlinkIN2CA17StreamDescriptionEZNS0_34IO_Far_End_Voice_Proc_Node_Factory10set_formatENS0_9data_flow5StateIS3_EEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
N2vp2vx2io5nodes17Mic_Ref_Sync_NodeE
N2vp2vx10components14Audio_InjectorE
N2vp2vx24IO_Wire_Factory_ProviderE
N2vp2vx2io12Wire_FactoryE
N2vp2vx15IO_Wire_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS3_9data_flow5StateIjEEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Wire_Factory36set_sample_rate_conversion_algorithmENS0_9data_flow5StateIjEEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkIjZNS3_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS3_9data_flow5StateIjEEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx16observe_downlinkIjZNS0_15IO_Wire_Factory34set_sample_rate_conversion_qualityENS0_9data_flow5StateIjEEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEE17register_listenerENS_8functionIFvjRKSA_EEEEUljRKNS4_5ValueEE_NS_9allocatorISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEE17register_listenerENS3_8functionIFvjRKS8_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_15IO_Wire_Factory20set_storage_capacityENS3_9data_flow5StateIS9_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
NSt3__110__function6__baseIFvjRKNS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEEE
ZN2vp2vx14observe_uplinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_15IO_Wire_Factory20set_storage_capacityENS0_9data_flow5StateIS7_EEE3$_3EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
NSt3__110__function6__funcIZN2vp2vx16observe_downlinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_15IO_Wire_Factory20set_storage_capacityENS3_9data_flow5StateIS9_EEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx16observe_downlinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_15IO_Wire_Factory20set_storage_capacityENS0_9data_flow5StateIS7_EEE3$_3EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
psmspdms
N2vp2vx21IO_Power_Log_DelegateE
N2vp2vx2io21Node_Delegate_FactoryE
N2vp2vx29IO_Power_Log_Delegate_FactoryE
N5caulk19bad_expected_accessIN2vp2vx2io5ErrorEEE
N5caulk10concurrent7details15rt_message_callIZZN2vp2vx21IO_Power_Log_Delegate14log_power_dataEvENK3$_2clEvEUlRKNSt3__110shared_ptrINS3_8services9Power_LogEEEE_JRSB_EEE
N5caulk10concurrent7details12message_callIZZN2vp2vx21IO_Power_Log_Delegate14log_power_dataEvENK3$_2clEvEUlRKNSt3__110shared_ptrINS3_8services9Power_LogEEEE_JRSB_EEE
N2vp2vx22IO_Node_Audio_CapturerE
N2vp2vx30IO_Node_Audio_Capturer_FactoryE
NSt3__110__function6__funcIZN2vp2vx30IO_Node_Audio_Capturer_Factory33set_should_enable_audio_capturersENS3_9data_flow5StateIbEEE3$_0NS_9allocatorIS8_EEFvjRKbEEE
ZN2vp2vx30IO_Node_Audio_Capturer_Factory33set_should_enable_audio_capturersENS0_9data_flow5StateIbEEE3$_0
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE17register_listenerENS_8functionIFvjRKSB_EEEEUljRKNS4_5ValueEE_NS9_ISL_EEFvjSK_EEE
ZN2vp2vx9data_flow5StateINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEE17register_listenerENS3_8functionIFvjRKS9_EEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_globalINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EEEUljRKSA_E_NS8_ISL_EEFvjSK_EEE
NSt3__110__function6__baseIFvjRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEE
ZN2vp2vx14observe_globalINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EEEUljRKS8_E_
N2vp2vx32IO_Smart_Cover_Detector_DelegateE
N2vp2vx40IO_Smart_Cover_Detector_Delegate_FactoryE
 N2vp2vx34IO_Property_Setter_Command_FactoryE
"(7AMSYciox
"(1:DJPZ`fy
NSt3__110__function6__funcIPFiP7__sFILEENS_9allocatorIS5_EES4_EE
NSt3__110__function6__baseIFiP7__sFILEEEE
PFiP7__sFILEE
FiP7__sFILEE
N2vp2vx2io5ports23Audio_Buffer_Input_PortE
N2vp2vx2io5ports24Audio_Buffer_Output_PortE
N2vp2vx38IO_Wireless_Charging_Detector_DelegateE
N2vp2vx46IO_Wireless_Charging_Detector_Delegate_FactoryE
N8nlohmann6detail21output_string_adapterIcNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N2vp2vx28IO_Parameter_Setter_DelegateE
N2vp2vx36IO_Parameter_Setter_Delegate_FactoryE
NSt3__110__function6__funcIZN2vp2vx28IO_Parameter_Setter_Delegate6notifyENS3_2io5EventERNS5_4NodeEE3$_1NS_9allocatorIS9_EEFvRKfEEE
ZN2vp2vx28IO_Parameter_Setter_Delegate6notifyENS0_2io5EventERNS2_4NodeEE3$_1
N2vp2vx27IO_Parameter_Setter_CommandE
N2vp2vx35IO_Parameter_Setter_Command_FactoryE
NSt3__110__function6__funcIZN2vp2vx27IO_Parameter_Setter_Command24set_parameter_controllerENS_8weak_ptrINS3_2io20Parameter_ControllerEEEE3$_1NS_9allocatorIS9_EEFvRKfEEE
ZN2vp2vx27IO_Parameter_Setter_Command24set_parameter_controllerENSt3__18weak_ptrINS0_2io20Parameter_ControllerEEEE3$_1
N2vp2vx37IO_Mic_Ref_Sync_Node_Factory_ProviderE
N2vp2vx28IO_Mic_Ref_Sync_Node_FactoryE
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIjZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_block_sizeENS3_9data_flow5StateIjEEE3$_0EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKjE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_uplinkIjZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_block_sizeENS0_9data_flow5StateIjEEE3$_0EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKjE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_mic_formatENS3_9data_flow5StateIS6_EEE3$_1EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_mic_formatENS0_9data_flow5StateIS3_EEE3$_1EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS3_28IO_Mic_Ref_Sync_Node_Factory14set_ref_formatENS3_9data_flow5StateIS6_EEE3$_2EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS9_IT_EET0_EUljRKS6_E_NS_9allocatorISL_EEFvjSK_EEE
ZN2vp2vx14observe_uplinkIN2CA17StreamDescriptionEZNS0_28IO_Mic_Ref_Sync_Node_Factory14set_ref_formatENS0_9data_flow5StateIS3_EEE3$_2EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS6_IT_EET0_EUljRKS3_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIiE17register_listenerENS_8functionIFvjRKiEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
ZN2vp2vx9data_flow5StateIiE17register_listenerENSt3__18functionIFvjRKiEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIiZNS3_28IO_Mic_Ref_Sync_Node_Factory22set_mic_ref_time_deltaENS3_9data_flow5StateIiEEE3$_3EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS7_IT_EET0_EUljRKiE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKiEEE
ZN2vp2vx14observe_uplinkIiZNS0_28IO_Mic_Ref_Sync_Node_Factory22set_mic_ref_time_deltaENS0_9data_flow5StateIiEEE3$_3EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS4_IT_EET0_EUljRKiE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEZNS3_28IO_Mic_Ref_Sync_Node_Factory34set_ref_audio_ring_buffer_capacityENS3_9data_flow5StateIS9_EEE3$_4EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNSC_IT_EET0_EUljRKS9_E_NS_9allocatorISO_EEFvjSN_EEE
ZN2vp2vx14observe_uplinkINSt3__16chrono8durationIxNS2_5ratioILl1ELl1000EEEEEZNS0_28IO_Mic_Ref_Sync_Node_Factory34set_ref_audio_ring_buffer_capacityENS0_9data_flow5StateIS7_EEE3$_4EEvNS2_8weak_ptrINS0_30Voice_Processor_State_ObserverEEERNSA_IT_EET0_EUljRKS7_E_
NSt3__120__shared_ptr_emplaceIN2vp2vx9data_flow6EngineENS1_9AllocatorIS4_EEEE
TWIZ]
"(9DJPV^djq
FLSN2vp2vx15Voice_ProcessorE
N2vp2vx25Voice_Processor_InterfaceE
N2vp2vx27Voice_Processor_State_OwnerE
N2vp2vx29Voice_Processor_State_ManagerE
N2vp2vx9data_flow14State_ObserverE
N2vp2vx30Voice_Processor_State_ObserverE
N2vp2vx25DSP_Node_Factory_DelegateE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEEN2vp24Real_Time_Safe_AllocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEEN2vp24Real_Time_Safe_AllocatorIcEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_21Configuration_ContextEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_12_GLOBAL__N_123make_constructor_lambdaIS6_EEDavEUlDpRKT_E_JNS3_14Operation_ModeENS3_11Chat_FlavorENS3_15Input_Port_TypeENS3_16Output_Port_TypeENS3_13Port_Sub_TypeENS3_18Port_Endpoint_TypeEbbbbbbbbjjjjjjjdbbEEESD_OT0_DpRKNS4_5StateIT1_EEEUlSH_E_JSJ_SK_SL_SM_SN_SO_bbbbbbbbjjjjjjjdbbEEERNS4_13State_ManagerET_DpRKNSR_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS17_E_NS_9allocatorIS1C_EEFvS1A_S1B_EEE
NSt3__110__function6__baseIFvNS_4spanIPKN2vp2vx9data_flow5ValueELm18446744073709551615EEEPS6_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_14Operation_ModeEEE
N2vp2vx9data_flow5Value7Type_IDE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_15Input_Port_TypeEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_18Port_Endpoint_TypeEEE
N2vp2vx9data_flow5Value14Type_ID_EraserIjEE
N2vp2vx9data_flow5Value14Type_ID_EraserIdEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_21Configuration_ContextEEE
ZN2vp2vx9data_flow14State_FunctionINS0_21Configuration_ContextEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_12_GLOBAL__N_123make_constructor_lambdaIS3_EEDavEUlDpRKT_E_JNS0_14Operation_ModeENS0_11Chat_FlavorENS0_15Input_Port_TypeENS0_16Output_Port_TypeENS0_13Port_Sub_TypeENS0_18Port_Endpoint_TypeEbbbbbbbbjjjjjjjdbbEEESA_OT0_DpRKNS1_5StateIT1_EEEUlSE_E_JSG_SH_SI_SJ_SK_SL_bbbbbbbbjjjjjjjdbbEEERNS1_13State_ManagerET_DpRKNSO_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS15_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E_JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESC_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E_JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSB_EEERNS1_13State_ManagerES9_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E0_JNS3_35Spatial_Head_Tracking_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESC_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_contextEvENK4$_34clEvEUlT_E0_JNS0_35Spatial_Head_Tracking_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSB_EEERNS1_13State_ManagerES9_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS_9allocatorIS18_EEFvS16_S17_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN2CA17StreamDescriptionEEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_SR_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_20Global_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_global_configurationEvENK4$_35clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_20Global_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_20Global_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_global_configurationEvENK4$_35clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_20Uplink_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_uplink_configurationEvENK4$_36clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_20Uplink_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_20Uplink_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_uplink_configurationEvENK4$_36clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22DSP_Node_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor17get_configurationENS3_18Uplink_DSP_Node_IDEENK4$_37clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_22DSP_Node_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor17get_configurationENS0_18Uplink_DSP_Node_IDEENK4$_37clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_30DSP_Node_Configuration_OptionsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_optionsENS3_18Uplink_DSP_Node_IDEENK4$_38clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_30DSP_Node_Configuration_OptionsEEE
ZN2vp2vx9data_flow14State_FunctionINS0_30DSP_Node_Configuration_OptionsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_optionsENS0_18Uplink_DSP_Node_IDEENK4$_38clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_uplink_SRC_algorithmEvENK4$_39clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_uplink_SRC_algorithmEvENK4$_39clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor22get_uplink_SRC_qualityEvENK4$_40clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor22get_uplink_SRC_qualityEvENK4$_40clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32get_uplink_wire_storage_capacityEvENK4$_41clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16chrono8durationIxNS4_5ratioILl1ELl1000EEEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32get_uplink_wire_storage_capacityEvENK4$_41clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NS_9allocatorIS18_EEFvS16_S17_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_SR_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIiEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor36get_uplink_mic_ref_sample_time_deltaEvENK4$_42clEvEUlDpRKT_E_JNS3_20Uplink_ConfigurationEddjjddjjjjjjjjjEEEDaOT_DpRKNS4_5StateIT0_EEEUlSF_E_JSH_ddjjddjjjjjjjjjEEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIiEE
ZN2vp2vx9data_flow14State_FunctionIiEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor36get_uplink_mic_ref_sample_time_deltaEvENK4$_42clEvEUlDpRKT_E_JNS0_20Uplink_ConfigurationEddjjddjjjjjjjjjEEEDaOT_DpRKNS1_5StateIT0_EEEUlSC_E_JSE_ddjjddjjjjjjjjjEEERNS1_13State_ManagerESG_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor37get_uplink_mic_ref_delay_millisecondsEvENK4$_43clEvEUlT_T0_E_JiN2CA17StreamDescriptionEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JiSG_EEERNS4_13State_ManagerESC_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIfEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor37get_uplink_mic_ref_delay_millisecondsEvENK4$_43clEvEUlT_T0_E_JiN2CA17StreamDescriptionEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JiSD_EEERNS1_13State_ManagerES9_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor41get_uplink_ref_audio_ring_buffer_capacityEvENK4$_44clEvEUlRKT_E_JNS3_20Uplink_ConfigurationEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor41get_uplink_ref_audio_ring_buffer_capacityEvENK4$_44clEvEUlRKT_E_JNS0_20Uplink_ConfigurationEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22Downlink_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_downlink_configurationEvENK4$_45clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESD_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS0_22Downlink_ConfigurationEEE
ZN2vp2vx9data_flow14State_FunctionINS0_22Downlink_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_downlink_configurationEvENK4$_45clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_EEERNS1_13State_ManagerESA_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_22DSP_Node_ConfigurationEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor17get_configurationENS3_20Downlink_DSP_Node_IDEENK4$_46clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_22DSP_Node_ConfigurationEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor17get_configurationENS0_20Downlink_DSP_Node_IDEENK4$_46clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_30DSP_Node_Configuration_OptionsEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_configuration_optionsENS3_20Downlink_DSP_Node_IDEENK4$_47clEvEUlRKT_E_JNS3_21Configuration_ContextEEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESE_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_30DSP_Node_Configuration_OptionsEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_configuration_optionsENS0_20Downlink_DSP_Node_IDEENK4$_47clEvEUlRKT_E_JNS0_21Configuration_ContextEEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESB_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_downlink_SRC_algorithmEvENK4$_48clEvEUlRKNS3_22Downlink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_downlink_SRC_algorithmEvENK4$_48clEvEUlRKNS0_22Downlink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor24get_downlink_SRC_qualityEvENK4$_49clEvEUlRKNS3_22Downlink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor24get_downlink_SRC_qualityEvENK4$_49clEvEUlRKNS0_22Downlink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6chrono8durationIxNS_5ratioILl1ELl1000EEEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor34get_downlink_wire_storage_capacityEvENK4$_50clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSH_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjSL_EEERNS4_13State_ManagerESH_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16chrono8durationIxNS3_5ratioILl1ELl1000EEEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor34get_downlink_wire_storage_capacityEvENK4$_50clEvEUlT_T0_E_JjN2CA17StreamDescriptionEEEEDaOSF_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjSJ_EEERNS1_13State_ManagerESF_SR_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor40get_downlink_software_volume_pre_gain_dBEvENK4$_51clEvEUlRKNS3_22Downlink_ConfigurationEfE_JSC_fEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_fEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor40get_downlink_software_volume_pre_gain_dBEvENK4$_51clEvEUlRKNS0_22Downlink_ConfigurationEfE_JS9_fEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_fEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor30get_spatial_head_tracking_modeEvENK4$_52clEvEUlNS3_14Operation_ModeENS3_35Spatial_Head_Tracking_ConfigurationEE_JSC_SD_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_SD_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor30get_spatial_head_tracking_modeEvENK4$_52clEvEUlNS0_14Operation_ModeENS0_35Spatial_Head_Tracking_ConfigurationEE_JS9_SA_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_SA_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor33get_spatial_head_tracking_enabledEvENK4$_53clEvEUlNS3_35Spatial_Head_Tracking_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESF_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor33get_spatial_head_tracking_enabledEvENK4$_53clEvEUlNS0_35Spatial_Head_Tracking_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESC_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlRKNS3_20Uplink_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlRKNS0_20Uplink_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvjRKbEEEEUljRKNS4_5ValueEE_NS_9allocatorISF_EEFvjSE_EEE
NSt3__110__function6__baseIFvjRKN2vp2vx9data_flow5ValueEEEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvjRKbEEEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx14observe_uplinkIbZZNS3_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlbE_EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
NSt3__110__function6__baseIFvjRKbEEE
ZN2vp2vx14observe_uplinkIbZZNS0_15Voice_Processor33get_should_use_internal_referenceEvENK4$_54clEvEUlbE_EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor39get_should_enable_graph_audio_recordersEvENK4$_55clEvEUlbE_JbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor39get_should_enable_graph_audio_recordersEvENK4$_55clEvEUlbE_JbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor26get_should_connect_to_AUPBEvENK4$_56clEvEUlbbE_JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor26get_should_connect_to_AUPBEvENK4$_56clEvEUlbbE_JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor25get_should_connect_to_RPBEvENK4$_57clEvEUlbbE_JbbEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbbEEERNS4_13State_ManagerESE_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor25get_should_connect_to_RPBEvENK4$_57clEvEUlbbE_JbbEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbbEEERNS1_13State_ManagerESB_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlRKNS3_20Global_ConfigurationEE_JSC_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlRKNS0_20Global_ConfigurationEE_JS9_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx14observe_globalIbZZNS3_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlbE_EEvNS_8weak_ptrINS3_30Voice_Processor_State_ObserverEEERNS3_9data_flow5StateIT_EET0_EUljRKbE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx14observe_globalIbZZNS0_15Voice_Processor29get_should_fade_audio_buffersEvENK4$_58clEvEUlbE_EEvNSt3__18weak_ptrINS0_30Voice_Processor_State_ObserverEEERNS0_9data_flow5StateIT_EET0_EUljRKbE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_mic_trim_gains_dsp_property_override_stateEvE4$_59JNS3_15Input_Port_TypeEN2CA17StreamDescriptionENS_6vectorIfNS_9allocatorIfEEEENS7_8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SH_SL_SM_EEERNS4_13State_ManagerESO_SV_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS14_E_NSJ_IS19_EEFvS17_S18_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF8ArrayRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_mic_trim_gains_dsp_property_override_stateEvE4$_59JNS0_15Input_Port_TypeEN2CA17StreamDescriptionENSt3__16vectorIfNSF_9allocatorIfEEEENS4_8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SE_SJ_SK_EEERNS1_13State_ManagerESM_ST_EUlNSF_4spanIPKNS1_5ValueELm18446744073709551615EEEPS12_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor63create_mic_noise_suppression_level_dsp_parameter_override_stateEvE4$_60JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF9NumberRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor63create_mic_noise_suppression_level_dsp_parameter_override_stateEvE4$_60JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_mic_post_gain_dsp_parameter_override_stateEvE4$_61JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_mic_post_gain_dsp_parameter_override_stateEvE4$_61JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor58create_mic_bluetooth_eq_preset_dsp_property_override_stateEvE4$_62JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor58create_mic_bluetooth_eq_preset_dsp_property_override_stateEvE4$_62JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor70create_mic_Uplink_Noise_Suppression_Bypass_dsp_property_override_stateEvE4$_63JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor70create_mic_Uplink_Noise_Suppression_Bypass_dsp_property_override_stateEvE4$_63JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor59create_speaker_calibration_data_dsp_property_override_stateEvE4$_64JNS3_16Output_Port_TypeES8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_S8_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor59create_speaker_calibration_data_dsp_property_override_stateEvE4$_64JNS0_16Output_Port_TypeES5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_S5_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor49create_ref_post_gain_dsp_parameter_override_stateEvE4$_65JNS7_13DictionaryRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor49create_ref_post_gain_dsp_parameter_override_stateEvE4$_65JNS4_13DictionaryRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor52create_ref_port_sensitivity_parameter_override_stateEvE4$_66JNS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_jEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor52create_ref_port_sensitivity_parameter_override_stateEvE4$_66JNS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_jEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor58create_ref_bluetooth_eq_preset_dsp_property_override_stateEvE4$_67JS8_EEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS8_EEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor58create_ref_bluetooth_eq_preset_dsp_property_override_stateEvE4$_67JS5_EEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS5_EEERNS1_13State_ManagerESD_SK_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor62create_ref_port_volume_limit_curve_dsp_property_override_stateEvE4$_68JNS3_16Output_Port_TypeENS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_jEEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor62create_ref_port_volume_limit_curve_dsp_property_override_stateEvE4$_68JNS0_16Output_Port_TypeENS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_jEEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor61create_speaker_iv_data_source_ids_dsp_property_override_stateEvE4$_69JNS3_16Output_Port_TypeENS_6vectorIjNS_9allocatorIjEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SJ_EEERNS4_13State_ManagerESL_SS_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NSH_IS16_EEFvS14_S15_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorIjNS4_9allocatorIjEEEEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor61create_speaker_iv_data_source_ids_dsp_property_override_stateEvE4$_69JNS0_16Output_Port_TypeENSt3__16vectorIjNSD_9allocatorIjEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SH_EEERNS1_13State_ManagerESJ_SQ_EUlNSD_4spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor62create_speaker_calibration_data_cf_dsp_property_override_stateEvE4$_70JNS3_16Output_Port_TypeENS7_8ArrayRefEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_EEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor62create_speaker_calibration_data_cf_dsp_property_override_stateEvE4$_70JNS0_16Output_Port_TypeENS4_8ArrayRefEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_EEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
N2vp2vx9data_flow5Value14Type_ID_EraserINS1_12Time_StampedIN10applesauce2CF13DictionaryRefEEEEE
NSt3__110__function6__funcIZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS3_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS9_E_NS_9allocatorISE_EEFvNSC_13DictionaryRefEEEE
NSt3__110__function6__baseIFvN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS6_E_
NSt3__120__shared_ptr_pointerIPN2vp2cf21Notification_ListenerEZNS1_2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS5_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlS4_E_NS_9allocatorIS3_EEEE
ZN2vp2vx29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlPNS_2cf21Notification_ListenerEE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS3_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlSD_E0_JNS4_12Time_StampedINSG_13DictionaryRefEEEEEERNS4_13State_ManagerESD_DpRKNS4_5StateIT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager32create_state_for_cf_notificationIZNS0_15Voice_Processor48create_camera_noise_mitigation_is_required_stateEvE4$_71EEDaOT_N10applesauce2CF9StringRefEEUlSA_E0_JNS1_12Time_StampedINSD_13DictionaryRefEEEEEERNS1_13State_ManagerESA_DpRKNS1_5StateIT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor61create_personal_audio_HLC_product_id_parameter_override_stateEvE4$_72JNS3_16Output_Port_TypeENS3_13Port_Sub_TypeEjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_SG_jEEERNS4_13State_ManagerESI_SP_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSY_E_NS_9allocatorIS13_EEFvS11_S12_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9NumberRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor61create_personal_audio_HLC_product_id_parameter_override_stateEvE4$_72JNS0_16Output_Port_TypeENS0_13Port_Sub_TypeEjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_SD_jEEERNS1_13State_ManagerESF_SM_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSW_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor54create_metric_reporter_ids_dsp_property_override_stateEvE4$_73JNS_6vectorIxNS_9allocatorIxEEEEEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESK_SR_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NSG_IS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor54create_metric_reporter_ids_dsp_property_override_stateEvE4$_73JNSt3__16vectorIxNSC_9allocatorIxEEEEEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerESI_SP_EUlNSC_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
N5caulk19bad_expected_accessIN2vp2vx10Error_CodeEEE
NSt3__120__shared_ptr_emplaceIN8nlohmann6detail21output_string_adapterIcNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS7_ISA_EEEE
N8nlohmann6detail9exceptionE
NSt3__120__shared_ptr_emplaceIN5caulk7details19lifetime_guard_baseIN2vp2vx15Voice_ProcessorEE13control_blockENS_9allocatorIS8_EEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx22Configuration_DatabaseENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx22Configuration_DatabaseEEE
NSt3__110__function6__funcIZN2vp2vx15Voice_ProcessorC1ERKNS2_7ContextENS_10shared_ptrINS2_16Service_ProviderEEENS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISC_EEEEE4$_83NS_9allocatorISG_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
ZN2vp2vx15Voice_ProcessorC1ERKNS_7ContextENSt3__110shared_ptrINS_16Service_ProviderEEENS5_10unique_ptrINS0_22Configuration_DatabaseENS5_14default_deleteISA_EEEEE4$_83
NSt3__110__function6__funcIZN2vp2vx15Voice_ProcessorC1ERKNS2_7ContextENS_10shared_ptrINS2_16Service_ProviderEEENS_10unique_ptrINS3_22Configuration_DatabaseENS_14default_deleteISC_EEEEE4$_84NS_9allocatorISG_EEFvvEEE
ZN2vp2vx15Voice_ProcessorC1ERKNS_7ContextENSt3__110shared_ptrINS_16Service_ProviderEEENS5_10unique_ptrINS0_22Configuration_DatabaseENS5_14default_deleteISA_EEEEE4$_84
NSt3__120__shared_ptr_pointerIPN2vp2vx9ComponentENS1_16Allocator_DeleteIS3_EENS_9allocatorIS3_EEEE
N2vp16Allocator_DeleteINS_2vx9ComponentEEE
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor9configureEvE4$_85NS_9allocatorIS5_EEFvRS4_EEE
NSt3__110__function6__baseIFvRN2vp2vx15Voice_ProcessorEEEE
ZN2vp2vx15Voice_Processor9configureEvE4$_85
NSt3__110__function6__funcIZNK2vp2vx15Voice_Processor12get_propertyENS3_11Property_IDERNS2_12Mutable_BlobEE3$_2NS_9allocatorIS8_EEFvRKS4_EEE
NSt3__110__function6__baseIFvRKN2vp2vx15Voice_ProcessorEEEE
ZNK2vp2vx15Voice_Processor12get_propertyENS0_11Property_IDERNS_12Mutable_BlobEE3$_2
NSt3__110__function6__funcIZNK2vp2vx15Voice_Processor17get_property_infoENS3_11Property_IDEE3$_3NS_9allocatorIS6_EEFvRKS4_EEE
ZNK2vp2vx15Voice_Processor17get_property_infoENS0_11Property_IDEE3$_3
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor12set_propertyENS3_11Property_IDERKNS2_4BlobEE3$_4NS_9allocatorIS9_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor12set_propertyENS0_11Property_IDERKNS_4BlobEE3$_4
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor27begin_uplink_initializationEvE4$_86NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor27begin_uplink_initializationEvE4$_86
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor25end_uplink_initializationEvE4$_87NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor25end_uplink_initializationEvE4$_87
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor29begin_downlink_initializationEvE4$_88NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor29begin_downlink_initializationEvE4$_88
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor27end_downlink_initializationEvE4$_89NS_9allocatorIS5_EEFvRS4_EEE
ZN2vp2vx15Voice_Processor27end_downlink_initializationEvE4$_89
cltctnroN2vp2vx15Voice_Processor14Type_ConverterIbEE
N2vp2vx8Property14Type_ConverterIbEE
N2vp2vx8Property9ConverterE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIbEE
N2vp2vx8Property19Blob_Type_ConverterIbEE
N2vp2vx8Property14Blob_ConverterE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIbEE
N2vp2vx8Property28Property_List_Type_ConverterIbEE
N2vp2vx8Property23Property_List_ConverterE
N2vp2vx15Voice_Processor21String_Type_ConverterIbEE
N2vp2vx8Property21String_Type_ConverterIbEE
N2vp2vx8Property16String_ConverterE
N2vp2vx15Voice_Processor14Type_ConverterIfEE
N2vp2vx8Property14Type_ConverterIfEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIfEE
N2vp2vx8Property19Blob_Type_ConverterIfEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIfEE
N2vp2vx8Property28Property_List_Type_ConverterIfEE
N2vp2vx15Voice_Processor21String_Type_ConverterIfEE
N2vp2vx8Property21String_Type_ConverterIfEE
N2vp2vx15Voice_Processor14Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property14Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property19Blob_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property28Property_List_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx8Property21String_Type_ConverterIN2CA17StreamDescriptionEEE
N2vp2vx15Voice_Processor14Type_ConverterIjEE
N2vp2vx8Property14Type_ConverterIjEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIjEE
N2vp2vx8Property19Blob_Type_ConverterIjEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIjEE
N2vp2vx8Property28Property_List_Type_ConverterIjEE
N2vp2vx15Voice_Processor21String_Type_ConverterIjEE
N2vp2vx8Property21String_Type_ConverterIjEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_15Input_Port_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_15Input_Port_TypeEEE
NSt3__120__shared_ptr_emplaceIN8nlohmann6detail21output_stream_adapterIcEENS_9allocatorIS4_EEEE
N8nlohmann6detail21output_stream_adapterIcEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE12EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE12EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterIdEE
N2vp2vx8Property14Type_ConverterIdEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIdEE
N2vp2vx8Property19Blob_Type_ConverterIdEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIdEE
N2vp2vx8Property28Property_List_Type_ConverterIdEE
N2vp2vx15Voice_Processor21String_Type_ConverterIdEE
N2vp2vx8Property21String_Type_ConverterIdEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE13EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE13EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE14EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE14EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE15EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE15EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIfZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE58EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIfZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE58EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIfNS3_9allocatorIfEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property14Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property19Blob_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property28Property_List_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx8Property21String_Type_ConverterIN10applesauce2CF8ArrayRefEEE
N2vp2vx15Voice_Processor14Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property14Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property19Blob_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property28Property_List_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor21String_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx8Property21String_Type_ConverterIN10applesauce2CF13DictionaryRefEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_16Output_Port_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_16Output_Port_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE23EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE23EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
N2vp2vx15Voice_Processor14Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_13Port_Sub_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_13Port_Sub_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_13Port_Sub_TypeEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE32ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISI_iEERKNS2_8services14Audio_HardwareEjjERKNSF_IjEERKNSF_IT0_EESI_EUlT_SV_DpT1_E_JjSE_jjEEEDaOSV_DpRKNSF_IS10_EEEUlDpRKT_E_JjSE_jjEEERNS4_13State_ManagerESZ_DpRKNSF_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1M_E_NS_9allocatorIS1R_EEFvS1P_S1Q_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_13Port_Sub_TypeEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE32ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISF_iEERKNS_8services14Audio_HardwareEjjERKNSC_IjEERKNSC_IT0_EESF_EUlT_SS_DpT1_E_JjSB_jjEEEDaOSS_DpRKNSC_ISX_EEEUlDpRKT_E_JjSB_jjEEERNS1_13State_ManagerESW_DpRKNSC_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1K_E_
N2vp2vx15Voice_Processor14Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property14Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_18Port_Endpoint_TypeEEE
N2vp2vx8Property21String_Type_ConverterINS0_18Port_Endpoint_TypeEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS3_18Port_Endpoint_TypeEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS6_ZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE33ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISI_iEERKNS2_8services14Audio_HardwareEjjERKNSF_IjEERKNSF_IT0_EESI_EUlT_SV_DpT1_E_JjSE_jjEEEDaOSV_DpRKNSF_IS10_EEEUlDpRKT_E_JjSE_jjEEERNS4_13State_ManagerESZ_DpRKNSF_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1M_E_NS_9allocatorIS1R_EEFvS1P_S1Q_EEE
ZN2vp2vx9data_flow14State_FunctionINS0_18Port_Endpoint_TypeEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS3_ZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE33ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISF_iEERKNS_8services14Audio_HardwareEjjERKNSC_IjEERKNSC_IT0_EESF_EUlT_SS_DpT1_E_JjSB_jjEEEDaOSS_DpRKNSC_ISX_EEEUlDpRKT_E_JjSB_jjEEERNS1_13State_ManagerESW_DpRKNSC_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1K_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIbZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE34EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIbZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE34EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE24EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE24EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE25EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE25EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE26EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE26EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE27EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE27EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE28EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE28EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE29EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE29EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE30EEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISG_iEERKNS2_8services14Audio_HardwareEjERKNSD_IjEESG_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSD_IT1_EEEUlDpRKT_E_JjjjEEERNS4_13State_ManagerEST_DpRKNSD_ISU_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1H_E_NS_9allocatorIS1M_EEFvS1K_S1L_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE30EEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISD_iEERKNS_8services14Audio_HardwareEjERKNSA_IjEESD_EUlT_DpT0_E_JjjjEEEDaOT0_DpRKNSA_IT1_EEEUlDpRKT_E_JjjjEEERNS1_13State_ManagerESQ_DpRKNSA_ISR_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1F_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_15Voice_Processor21create_property_stateILNS3_11Property_IDE31ENS3_16Output_Port_TypeEEENS4_5StateINS3_18Property_ID_TraitsIXT_EE4TypeEEEPFNS2_8ExpectedISH_iEERKNS2_8services14Audio_HardwareEjjERKNSE_IjEERKNSE_IT0_EESH_EUlT_SU_DpT1_E_JjSD_jjEEEDaOSU_DpRKNSE_ISZ_EEEUlDpRKT_E_JjSD_jjEEERNS4_13State_ManagerESY_DpRKNSE_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1L_E_NS_9allocatorIS1Q_EEFvS1O_S1P_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_15Voice_Processor21create_property_stateILNS0_11Property_IDE31ENS0_16Output_Port_TypeEEENS1_5StateINS0_18Property_ID_TraitsIXT_EE4TypeEEEPFNS_8ExpectedISE_iEERKNS_8services14Audio_HardwareEjjERKNSB_IjEERKNSB_IT0_EESE_EUlT_SR_DpT1_E_JjSA_jjEEEDaOSR_DpRKNSB_ISW_EEEUlDpRKT_E_JjSA_jjEEERNS1_13State_ManagerESV_DpRKNSB_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS1J_E_
N2vp2vx9data_flow5Value14Type_ID_EraserINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property14Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property19Blob_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx8Property21String_Type_ConverterINS_5BlockIU13block_pointerFiP15AudioBufferListP14AudioTimeStampPjEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property14Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx8Property21String_Type_ConverterINS0_14Beam_DirectionEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property14Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property28Property_List_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx8Property21String_Type_ConverterINS0_14Operation_ModeEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property14Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property28Property_List_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx8Property21String_Type_ConverterINS0_11Chat_FlavorEEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIjNS3_9allocatorIjEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIxNS3_9allocatorIxEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterI13CAOrientationEE
N2vp2vx8Property14Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterI13CAOrientationEE
N2vp2vx8Property19Blob_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterI13CAOrientationEE
N2vp2vx8Property28Property_List_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor21String_Type_ConverterI13CAOrientationEE
N2vp2vx8Property21String_Type_ConverterI13CAOrientationEE
N2vp2vx15Voice_Processor14Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property14Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property19Blob_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor28Property_List_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property28Property_List_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx8Property21String_Type_ConverterINSt3__16vectorIhNS3_9allocatorIhEEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property14Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property19Blob_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx8Property21String_Type_ConverterINS0_35Spatial_Head_Tracking_ConfigurationEEE
N2vp2vx9data_flow5Value14Type_ID_EraserINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor14Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property14Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor19Blob_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property19Blob_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx15Voice_Processor21String_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
N2vp2vx8Property21String_Type_ConverterINS_5BlockIU13block_pointerFv28AUVoiceIOSpeechActivityEventEEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE0EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF7TypeRefEEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE0EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
sdsuNSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7TypeRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateIS8_PKcEENS4_5StateIT_EEOT0_EUlSI_E_JjEEEDaOSI_DpRKNSH_IT0_EEEUlDpRKT_E_JjEEERNS4_13State_ManagerESI_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF7TypeRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateIS5_PKcEENS1_5StateIT_EEOT0_EUlSF_E_JjEEEDaOSF_DpRKNSE_IT0_EEEUlDpRKT_E_JjEEERNS1_13State_ManagerESF_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE1EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE1EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE2EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE2EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE3EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE3EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE4EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE4EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE5EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE5EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_15Voice_Processor26create_user_defaults_stateILNS3_17User_Defaults_KeyE6EEENS4_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSI_EEEDaOT_DpRKNSD_IT0_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerESN_ST_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_15Voice_Processor26create_user_defaults_stateILNS0_17User_Defaults_KeyE6EEENS1_5StateIDTclsr24User_Defaults_Key_TraitsIXT_EEE9get_valueEEEEvEUlRKN10applesauce2CF7TypeRefEE_JSF_EEEDaOT_DpRKNSA_IT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESK_SQ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_8optionalIdEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_ZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_20Global_ConfigurationES7_EEDaMT_T0_EUlRKSE_E_JSE_EEESF_OSH_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESG_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__18optionalIdEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__18optionalIdEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS5_ZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_20Global_ConfigurationES5_EEDaMT_T0_EUlRKSC_E_JSC_EEESD_OSF_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_DpRKNSL_IT0_EEEUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_DpRKNSP_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS18_E_NS_9allocatorIS1D_EEFvS1B_S1C_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_DpRKNSM_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS16_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSN_EEERNS4_13State_ManagerESE_DpRKNSP_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS18_E_NS_9allocatorIS1D_EEFvS1B_S1C_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptionjEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESB_DpRKNSM_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS16_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljjE_JjjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JjjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljjE_JjjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JjjEEERNS1_13State_ManagerET_DpRKNSD_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlddE_JddEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JddEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlddE_JddEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JddEEERNS1_13State_ManagerET_DpRKNSD_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__120__shared_ptr_pointerIPN2vp2vx16DSP_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx16DSP_Node_FactoryEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_RDoFS7_djEJdjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjEEERNS4_13State_ManagerET_DpRKNSH_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS4_RDoFS4_djEJdjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_8optionalIdEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_ZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_30DSP_Node_Configuration_OptionsES7_EEDaMT_T0_EUlRKSE_E_JSE_EEESF_OSH_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSE_EEERNS4_13State_ManagerESG_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionINSt3__18optionalIdEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS5_ZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_30DSP_Node_Configuration_OptionsES5_EEDaMT_T0_EUlRKSC_E_JSC_EEESD_OSF_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESE_DpRKNSL_IT0_EEEUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIdJbdjRKNS3_30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFSC_SE_EEUlbdjS8_ddSA_E_NS_9allocatorISK_EEFdbdjS8_ddSA_EEE
NSt3__110__function6__baseIFdbdjRKN2vp2vx30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIdJbdjRKNS0_30DSP_Node_Configuration_OptionsEddNSt3__18optionalIdEEEEENS6_8functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFSA_SC_EEUlbdjS5_ddS8_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_122make_bind_front_lambdaIRKNS_8functionIFdbdjRKNS3_30DSP_Node_Configuration_OptionsEddNS_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JdjSD_ddSH_EEESM_SO_DpRKNS4_5StateISP_EEEUlDpRKST_E_JdjSD_ddSH_EEERNS4_13State_ManagerESN_S11_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NS_9allocatorIS1E_EEFvS1C_S1D_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_122make_bind_front_lambdaIRKNSt3__18functionIFdbdjRKNS0_30DSP_Node_Configuration_OptionsEddNS9_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JdjSB_ddSF_EEESK_SM_DpRKNS1_5StateISN_EEEUlDpRKSR_E_JdjSB_ddSF_EEERNS1_13State_ManagerESL_SZ_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUldE_JdEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JdEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUldE_JdEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JdEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFSF_SH_EEUlS8_dSD_E_NS_9allocatorISN_EEFjS8_dSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFSD_SF_EEUlS5_dSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_dEEESP_SR_DpRKNS4_5StateISS_EEEUlDpRKSW_E_JSD_dEEERNS4_13State_ManagerESQ_S14_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1C_E_NS_9allocatorIS1H_EEFvS1F_S1G_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_dEEESN_SP_DpRKNS1_5StateISQ_EEEUlDpRKSU_E_JSB_dEEERNS1_13State_ManagerESO_S12_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1A_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljE_JjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JjEEERNS4_13State_ManagerESH_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF13DictionaryRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUljE_JjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JjEEERNS1_13State_ManagerESE_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIS7_RDoFS7_dEJdEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdEEERNS4_13State_ManagerET_DpRKNSH_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS11_E_NS_9allocatorIS16_EEFvS14_S15_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIS4_RDoFS4_dEJdEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSZ_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJdjdEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFS7_S9_EEUldjdE_NS_9allocatorISF_EEFjdjdEEE
NSt3__110__function6__baseIFjdjdEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJdjdEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFS5_S7_EEUldjdE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKNS_8functionIFjdjdEEEJdjdEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjdEEERNS4_13State_ManagerET_DpRKNSI_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS12_E_NS_9allocatorIS17_EEFvS15_S16_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKNSt3__18functionIFjdjdEEEJdjdEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjdEEERNS1_13State_ManagerET_DpRKNSG_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPS10_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjNS_8functionIFjdjdjjEEEJdjdjjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JdjdjjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjNSt3__18functionIFjdjdjjEEEJdjdjjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JdjdjjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJdjdjjEEENS_8functionIFT_DpT0_EEEMNS3_29Uplink_Configuration_DelegateEKDoFS7_S9_EEUldjdjjE_NS_9allocatorISF_EEFjdjdjjEEE
NSt3__110__function6__baseIFjdjdjjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJdjdjjEEENSt3__18functionIFT_DpT0_EEEMNS0_29Uplink_Configuration_DelegateEKDoFS5_S7_EEUldjdjjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_147make_input_channel_count_override_getter_lambdaENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE4$_13JNS3_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerET_DpRKNSM_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NSE_IS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_147make_input_channel_count_override_getter_lambdaENSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEjE4$_13JNS0_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerET_DpRKNSK_IT0_EEEUlNS8_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_RKT0_E_JNS3_16Output_Port_TypeENS3_22Downlink_ConfigurationEEEEDaOSC_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_SI_EEERNS4_13State_ManagerESC_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_RKT0_E_JNS0_16Output_Port_TypeENS0_22Downlink_ConfigurationEEEEDaOS9_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSE_SF_EEERNS1_13State_ManagerES9_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlS8_djE_NS_9allocatorISI_EEFjS8_djEEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS8_SA_EEUlS5_djE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdjEEEJSB_djEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSB_djEEERNS4_13State_ManagerET_DpRKNSL_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS15_E_NS_9allocatorIS1A_EEFvS18_S19_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdjEEEJS9_djEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JS9_djEEERNS1_13State_ManagerET_DpRKNSJ_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPS13_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_148make_output_channel_count_override_getter_lambdaENS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEjE4$_14JNS3_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS4_13State_ManagerET_DpRKNSM_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NSE_IS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_148make_output_channel_count_override_getter_lambdaENSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEEjE4$_14JNS0_30DSP_Node_Configuration_OptionsEEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSG_EEERNS1_13State_ManagerET_DpRKNSK_IT0_EEEUlNS8_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E_JS7_dEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_dEEERNS4_13State_ManagerESE_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E_JS4_dEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_dEEERNS1_13State_ManagerESB_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E0_JS7_dEEEDaOSE_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JS7_dEEERNS4_13State_ManagerESE_SO_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSX_E_NS_9allocatorIS12_EEFvS10_S11_EEE
ZN2vp2vx9data_flow14State_FunctionIN2CA17StreamDescriptionEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor27create_configuration_statesEvENK4$_12clEvEUlT_T0_E0_JS4_dEEEDaOSB_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS4_dEEERNS1_13State_ManagerESB_SL_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSV_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIdJbRKNS3_30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSC_SE_EEUlbS8_dddSA_E_NS_9allocatorISK_EEFdbS8_dddSA_EEE
NSt3__110__function6__baseIFdbRKN2vp2vx30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIdJbRKNS0_30DSP_Node_Configuration_OptionsEdddNSt3__18optionalIdEEEEENS6_8functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlbS5_dddS8_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_122make_bind_front_lambdaIRKNS_8functionIFdbRKNS3_30DSP_Node_Configuration_OptionsEdddNS_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JSD_dddSH_EEESM_SO_DpRKNS4_5StateISP_EEEUlDpRKST_E_JSD_dddSH_EEERNS4_13State_ManagerESN_S11_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS19_E_NS_9allocatorIS1E_EEFvS1C_S1D_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_122make_bind_front_lambdaIRKNSt3__18functionIFdbRKNS0_30DSP_Node_Configuration_OptionsEdddNS9_8optionalIdEEEEEJbEEEDaOT_DpRKT0_EUlDpOT_E_JSB_dddSF_EEESK_SM_DpRKNS1_5StateISN_EEEUlDpRKSR_E_JSB_dddSF_EEERNS1_13State_ManagerESL_SZ_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS17_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSF_SH_EEUlS8_ddjSD_E_NS_9allocatorISN_EEFjS8_ddjSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEddjRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSD_SF_EEUlS5_ddjSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEddjRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_ddjEEESP_SR_DpRKNS4_5StateISS_EEEUlDpRKSW_E_JSD_ddjEEERNS4_13State_ManagerESQ_S14_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1C_E_NS_9allocatorIS1H_EEFvS1F_S1G_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEddjRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_ddjEEESN_SP_DpRKNS1_5StateISQ_EEEUlDpRKSU_E_JSB_ddjEEERNS1_13State_ManagerESO_S12_EUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1A_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIbJRKNS3_30DSP_Node_Configuration_OptionsEddjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSA_SC_EEUlS8_ddjE_NS_9allocatorISI_EEFbS8_ddjEEE
NSt3__110__function6__baseIFbRKN2vp2vx30DSP_Node_Configuration_OptionsEddjEEE
ZN2vp2vx15Voice_Processor15create_callbackIbJRKNS0_30DSP_Node_Configuration_OptionsEddjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS8_SA_EEUlS5_ddjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIbEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKNS_8functionIFbRKNS3_30DSP_Node_Configuration_OptionsEddjEEEJSB_ddjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSB_ddjEEERNS4_13State_ManagerESJ_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIbEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKNSt3__18functionIFbRKNS0_30DSP_Node_Configuration_OptionsEddjEEEJS9_ddjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JS9_ddjEEERNS1_13State_ManagerESH_SO_EUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJRKNS3_30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFSF_SH_EEUlS8_djSD_E_NS_9allocatorISN_EEFjS8_djSD_EEE
NSt3__110__function6__baseIFjRKN2vp2vx30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJRKNS0_30DSP_Node_Configuration_OptionsEdjRKNS_7utility18Quantization_TableIjEEEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFSD_SF_EEUlS5_djSA_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjZNS3_12_GLOBAL__N_121make_bind_back_lambdaIRKNS_8functionIFjRKNS3_30DSP_Node_Configuration_OptionsEdjRKNS2_7utility18Quantization_TableIjEEEEEJSI_EEEDaOT_DpRKT0_EUlDpOT_E_JSD_djEEESP_OT0_DpRKNS4_5StateIT1_EEEUlDpRKSW_E_JSD_djEEERNS4_13State_ManagerESQ_DpRKNS12_ISS_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS1J_E_NS_9allocatorIS1O_EEFvS1M_S1N_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjZNS0_12_GLOBAL__N_121make_bind_back_lambdaIRKNSt3__18functionIFjRKNS0_30DSP_Node_Configuration_OptionsEdjRKNS_7utility18Quantization_TableIjEEEEEJSG_EEEDaOT_DpRKT0_EUlDpOT_E_JSB_djEEESN_OT0_DpRKNS1_5StateIT1_EEEUlDpRKSU_E_JSB_djEEERNS1_13State_ManagerESO_DpRKNS10_ISQ_EEEUlNS9_4spanIPKNS1_5ValueELm18446744073709551615EEEPS1H_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIdEC1IZNS3_29Voice_Processor_State_Manager12create_stateIdZNS3_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKSC_E_JN2CA17StreamDescriptionEEEESD_OSF_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JSL_EEERNS4_13State_ManagerESE_DpRKNSN_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS_9allocatorIS1B_EEFvS19_S1A_EEE
ZN2vp2vx9data_flow14State_FunctionIdEC1IZNS0_29Voice_Processor_State_Manager12create_stateIdZNS0_12_GLOBAL__N_125make_member_getter_lambdaI27AudioStreamBasicDescriptiondEEDaMT_T0_EUlRKS9_E_JN2CA17StreamDescriptionEEEESA_OSC_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JSI_EEERNS1_13State_ManagerESB_DpRKNSK_IT0_EEEUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor15create_callbackIjJddjbdjEEENS_8functionIFT_DpT0_EEEMNS3_31Downlink_Configuration_DelegateEKDoFS7_S9_EEUlddjbdjE_NS_9allocatorISF_EEFjddjbdjEEE
NSt3__110__function6__baseIFjddjbdjEEE
ZN2vp2vx15Voice_Processor15create_callbackIjJddjbdjEEENSt3__18functionIFT_DpT0_EEEMNS0_31Downlink_Configuration_DelegateEKDoFS5_S7_EEUlddjbdjE_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIRKNS_8functionIFjddjbdjEEEJddjbdjEEEDaOT_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JddjbdjEEERNS4_13State_ManagerESG_SN_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSW_E_NS_9allocatorIS11_EEFvSZ_S10_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIRKNSt3__18functionIFjddjbdjEEEJddjbdjEEEDaOT_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JddjbdjEEERNS1_13State_ManagerESE_SL_EUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSU_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIjEC1IZNS3_29Voice_Processor_State_Manager12create_stateIjNS_8functionIFjddjbdjEEEJddjbdjEEEDaOT0_DpRKNS4_5StateIT1_EEEUlDpRKT_E_JddjbdjEEERNS4_13State_ManagerET_DpRKNSG_IT0_EEEUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS10_E_NS_9allocatorIS15_EEFvS13_S14_EEE
ZN2vp2vx9data_flow14State_FunctionIjEC1IZNS0_29Voice_Processor_State_Manager12create_stateIjNSt3__18functionIFjddjbdjEEEJddjbdjEEEDaOT0_DpRKNS1_5StateIT1_EEEUlDpRKT_E_JddjbdjEEERNS1_13State_ManagerET_DpRKNSE_IT0_EEEUlNS7_4spanIPKNS1_5ValueELm18446744073709551615EEEPSY_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JNS3_14Beam_DirectionEEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESD_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JNS0_14Beam_DirectionEEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESA_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JfEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JfEEERNS4_13State_ManagerESD_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JfEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JfEEERNS1_13State_ManagerESA_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JbEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JbEEERNS4_13State_ManagerESD_SL_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSU_E_NS_9allocatorISZ_EEFvSX_SY_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_JbEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JbEEERNS1_13State_ManagerESA_SI_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSS_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIfEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_J13CAOrientationEEESC_OSD_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS4_13State_ManagerESD_SM_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSV_E_NS_9allocatorIS10_EEFvSY_SZ_EEE
ZN2vp2vx9data_flow14State_FunctionIfEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_123make_static_cast_lambdaIfEEDavEUlT_E_J13CAOrientationEEES9_OSA_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSC_EEERNS1_13State_ManagerESA_SJ_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPST_E_
N2vp2vx26IO_Property_Setter_CommandIjEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIjE17register_listenerENS_8functionIFvRKjEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIjE17register_listenerENSt3__18functionIFvRKjEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIjE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKjE_NS_9allocatorISC_EEFvSB_EEE
ZN2vp2vx26IO_Property_Setter_CommandIjE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKjE_
N2vp2vx26IO_Property_Setter_CommandIbEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIbE17register_listenerENS_8functionIFvRKbEEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISG_EEFvjSF_EEE
ZN2vp2vx9data_flow5StateIbE17register_listenerENSt3__18functionIFvRKbEEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIbE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKbE_NS_9allocatorISC_EEFvSB_EEE
ZN2vp2vx26IO_Property_Setter_CommandIbE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKbE_
N2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENS_8functionIFvRKS8_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISJ_EEFvjSI_EEE
ZN2vp2vx9data_flow5StateIN10applesauce2CF13DictionaryRefEE17register_listenerENSt3__18functionIFvRKS5_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEE23set_property_controllerENS_8weak_ptrINS3_2io19Property_ControllerEEEEUlRKS7_E_NS_9allocatorISF_EEFvSE_EEE
NSt3__110__function6__baseIFvRKN10applesauce2CF13DictionaryRefEEEE
ZN2vp2vx26IO_Property_Setter_CommandIN10applesauce2CF13DictionaryRefEE23set_property_controllerENSt3__18weak_ptrINS0_2io19Property_ControllerEEEEUlRKS4_E_
N2vp2vx27IO_Property_Setter_DelegateINSt3__16vectorIhNS2_9allocatorIhEEEEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIhNS_9allocatorIhEEEEE17register_listenerENS_8functionIFvRKS9_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS7_ISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIhNS3_9allocatorIhEEEEE17register_listenerENS3_8functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx27IO_Property_Setter_DelegateINS_6vectorIhNS_9allocatorIhEEEEE6notifyENS3_2io5EventERNSA_4NodeEEUlRKS8_E_NS6_ISG_EEFvSF_EEE
NSt3__110__function6__baseIFvRKNS_6vectorIhNS_9allocatorIhEEEEEEE
ZN2vp2vx27IO_Property_Setter_DelegateINSt3__16vectorIhNS2_9allocatorIhEEEEE6notifyENS0_2io5EventERNS8_4NodeEEUlRKS6_E_
N2vp2vx27IO_Property_Setter_DelegateI13CAOrientationEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENS_8functionIFvRKS6_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS_9allocatorISH_EEFvjSG_EEE
ZN2vp2vx9data_flow5StateI13CAOrientationE17register_listenerENSt3__18functionIFvRKS3_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx27IO_Property_Setter_DelegateI13CAOrientationE6notifyENS3_2io5EventERNS7_4NodeEEUlRKS5_E_NS_9allocatorISD_EEFvSC_EEE
NSt3__110__function6__baseIFvRK13CAOrientationEEE
ZN2vp2vx27IO_Property_Setter_DelegateI13CAOrientationE6notifyENS0_2io5EventERNS4_4NodeEEUlRKS2_E_
sglpsmdaNSt3__120__shared_ptr_pointerIPN2vp8services19Audio_Data_Analysis16Settings_ManagerENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIN2vp8services19Audio_Data_Analysis16Settings_ManagerEEE
uaepNSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlRKT_E_JNS_6vectorIxNS_9allocatorIxEEEEEEEDaOSF_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSM_EEERNS4_13State_ManagerESF_SU_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS13_E_NSK_IS18_EEFvS16_S17_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserIN10applesauce2CF9StringRefEEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlRKT_E_JNSt3__16vectorIxNSG_9allocatorIxEEEEEEEDaOSC_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSK_EEERNS1_13State_ManagerESC_SS_EUlNSG_4spanIPKNS1_5ValueELm18446744073709551615EEEPS11_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZZNS3_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlT_T0_E_JNS3_14Operation_ModeES8_EEEDaOSF_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSI_S8_EEERNS4_13State_ManagerESF_SQ_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPSZ_E_NS_9allocatorIS14_EEFvS12_S13_EEE
ZN2vp2vx9data_flow14State_FunctionIN10applesauce2CF9StringRefEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZZNS0_15Voice_Processor32configure_control_center_managerEvENK4$_33clEvEUlT_T0_E_JNS0_14Operation_ModeES5_EEEDaOSC_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_S5_EEERNS1_13State_ManagerESC_SN_EUlNSt3__14spanIPKNS1_5ValueELm18446744073709551615EEEPSX_E_
NSt3__110__function6__funcIZN2vp2vx9data_flow14State_FunctionINS_6vectorINS3_11Chat_FlavorENS_9allocatorIS7_EEEEEC1IZNS3_29Voice_Processor_State_Manager12create_stateIZNS3_12_GLOBAL__N_125make_member_getter_lambdaINS3_20Global_ConfigurationESA_EEDaMT_NS_8optionalIT0_EESL_EUlRKSH_E_JSH_EEESI_OSJ_DpRKNS4_5StateIT0_EEEUlDpRKT_E_JSH_EEERNS4_13State_ManagerESJ_SX_EUlNS_4spanIPKNS4_5ValueELm18446744073709551615EEEPS16_E_NS8_IS1B_EEFvS19_S1A_EEE
N2vp2vx9data_flow5Value14Type_ID_EraserINSt3__16vectorINS0_11Chat_FlavorENS4_9allocatorIS6_EEEEEE
ZN2vp2vx9data_flow14State_FunctionINSt3__16vectorINS0_11Chat_FlavorENS3_9allocatorIS5_EEEEEC1IZNS0_29Voice_Processor_State_Manager12create_stateIZNS0_12_GLOBAL__N_125make_member_getter_lambdaINS0_20Global_ConfigurationES8_EEDaMT_NS3_8optionalIT0_EESJ_EUlRKSF_E_JSF_EEESG_OSH_DpRKNS1_5StateIT0_EEEUlDpRKT_E_JSF_EEERNS1_13State_ManagerESH_SV_EUlNS3_4spanIPKNS1_5ValueELm18446744073709551615EEEPS14_E_
NSt3__120__shared_ptr_pointerIPN2vp8services19Audio_Data_Analysis6ClientENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIN2vp8services19Audio_Data_Analysis6ClientEEE
NSt3__110__function6__funcIZN2vp2vx9data_flow5StateINS_6vectorIxNS_9allocatorIxEEEEE17register_listenerENS_8functionIFvRKS9_EEENS4_16Call_ImmediatelyEEUljRKNS4_5ValueEE_NS7_ISK_EEFvjSJ_EEE
ZN2vp2vx9data_flow5StateINSt3__16vectorIxNS3_9allocatorIxEEEEE17register_listenerENS3_8functionIFvRKS7_EEENS1_16Call_ImmediatelyEEUljRKNS1_5ValueEE_
NSt3__110__function6__funcIZN2vp2vx15Voice_Processor36configure_audio_data_analysis_clientEvE4$_90NS_9allocatorIS5_EEFvRKNS_6vectorIxNS6_IxEEEEEEE
ZN2vp2vx15Voice_Processor36configure_audio_data_analysis_clientEvE4$_90
tsgm
smrcNSt3__120__shared_ptr_pointerIPN2vp2vx15IO_Port_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx15IO_Port_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx15IO_Wire_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx15IO_Wire_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx28IO_Mic_Ref_Sync_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx28IO_Mic_Ref_Sync_Node_FactoryEEE
NSt3__120__shared_ptr_pointerIPN2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN2vp2vx34IO_Far_End_Voice_Proc_Node_FactoryEEE
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvEUlvE_NS_9allocatorIS8_EEFvvEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvENKUlvE_clEvEUlRS4_E_NS_9allocatorISA_EEFvS9_EEE
ZZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvENKUlvE_clEvEUlRS1_E_
ZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvEUlvE_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvEUlvE0_NS_9allocatorIS8_EEFvvEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor17register_listenerENS2_3rpb6ServerEENK4$_74clEvENKUlvE0_clEvEUlRS4_E_NS_9allocatorISA_EEFvS9_EEE
ZZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvENKUlvE0_clEvEUlRS1_E_
ZZN2vp2vx15Voice_Processor17register_listenerENS_3rpb6ServerEENK4$_74clEvEUlvE0_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvEUlT_E_NS_9allocatorIS9_EEFNS2_8ExpectedINS_6vectorINS5_13Property_InfoENS2_9AllocatorISE_EEEENS5_5ErrorEEENS5_5ScopeEEEE
NSt3__110__function6__baseIFN2vp8ExpectedINS_6vectorINS2_3rpb13Property_InfoENS2_9AllocatorIS6_EEEENS5_5ErrorEEENS5_5ScopeEEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvENKUlT_E_clINS5_5ScopeEEEDaS8_EUlRKS4_E_NS_9allocatorISF_EEFvRS4_EEE
ZZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvENKUlT_E_clINS2_5ScopeEEEDaS5_EUlRKS1_E_
ZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvEUlT_E_
NSt3__110__function6__funcIZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvEUlT_T0_T1_E_NS_9allocatorISB_EEFNS2_8ExpectedIN10applesauce2CF7TypeRefENS5_5ErrorEEEjNS5_5ScopeEjEEE
NSt3__110__function6__baseIFN2vp8ExpectedIN10applesauce2CF7TypeRefENS2_3rpb5ErrorEEEjNS7_5ScopeEjEEE
NSt3__110__function6__funcIZZZN2vp2vx15Voice_Processor7connectENS2_3rpb6ServerEENK4$_76clEvENKUlT_T0_T1_E_clIjNS5_5ScopeEjEEDaS8_S9_SA_EUlRKS4_E_NS_9allocatorISH_EEFvRS4_EEE
ZZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvENKUlT_T0_T1_E_clIjNS2_5ScopeEjEEDaS5_S6_S7_EUlRKS1_E_
ZZN2vp2vx15Voice_Processor7connectENS_3rpb6ServerEENK4$_76clEvEUlT_T0_T1_E_
(*359`a
&!&!*!+!.!.!
>DFHJMUV
 *0/0
fo
01050
XX +.147:=@CFIT
 !"#$%
'()*+,-./0123456789:;
=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\
^_`abcdefghijklmnopqrstuvwxyz{|}~
F/258;
text
textnoenc
comment
8%M)
JMMccc
cccc
:AQQK
pppszy
!$'*-0369<?BEHKNQTWZ]`cfiloru|x
W*W-W0W3
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz{\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 * . ` c j o 
 * . ` c j o 
(*359`a
q q 
!$!$!&!&!(!(!*!-!/!1!3!9!=!?!E!I!
01050;0<0A0
1,111
q q 
!/!/!4!4!9!9!=!=!F!I!
01050;0;0
(*359`a
5!8!
0<0<0A0
1,111
!$!$!&!&!(!(!*!-!0!1!3!3!>!?!E!E!!
>DFHJMUV
 *0/0
AD
>@FHJMUV
 *0/0
fo
p p t y 
0!0)080:0
1 2)2Q2_2
fo
p p t y 
 S!_!`$
1 2)2Q2_2
 ' 0 C E Q S T W W } ~ 
 )#*#
#h'u'
00000=0=0
00000
F F ~ ~ 
 *#*#
#i'i'k'k'm'm'o'o'q'q's's'u'u'
   ' 0 8 ; > A C G Q S S W W 
0=0=00
 E E } } 
 )#)#
#h'h'j'j'l'l'n'n'p'p'r'r't't'
000
D D R R z | 
!#!%!%!'!'!)!)!.!.!2!2!:!;!@!D!J!K!
!(#+#
$&$@$J$
'''')'K'M'M'O'R'V'V'X'^'a'g'
0 0 06070>0?0
2*2C2P2P2`2}2
D D R R z | 
 @!D!K!K!
# #!#|#|#
%o&o&
!#!%!%!'!'!)!)!.!.!2!2!:!;!J!J!
#"#(#+#{#}#
$&$@$J$
&n&p&}&
'''')'K'M'M'O'R'V'V'X'^'a'g'
0 0 06070>0?0
2*2C2P2P2`2}2
 ( ) / / _ _ 
N6DspLib10PowerGuard9AlgorithmE
N6DspLib10PowerGuard17PowerAnalyzerBaseE
?333@N6DspLib18LoudspeakerManager9AlgorithmE
?NSt3__110__function6__funcIZN12DspLibBufferpLERKS2_E3$_0NS_9allocatorIS5_EEFvPfS8_S8_mEEE
NSt3__110__function6__baseIFvPfS2_S2_mEEE
ZN12DspLibBufferpLERKS_E3$_0
NSt3__110__function6__funcIZN12DspLibBuffermIERKS2_E3$_1NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBuffermIERKS_E3$_1
NSt3__110__function6__funcIZN12DspLibBuffermLERKS2_E3$_2NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBuffermLERKS_E3$_2
NSt3__110__function6__funcIZN12DspLibBufferdVERKS2_E3$_3NS_9allocatorIS5_EEFvPfS8_S8_mEEE
ZN12DspLibBufferdVERKS_E3$_3
NSt3__110__function6__funcIZN12DspLibBuffer3maxERKS2_S4_RS2_E3$_6NS_9allocatorIS6_EEFvPfS9_S9_mEEE
ZN12DspLibBuffer3maxERKS_S1_RS_E3$_6
N6DspLib13ToneGeneratorE
 BN6DspLib10AudioMeter9AlgorithmE
?N6DspLib19LoudspeakerSystemID9AlgorithmE
?`u}?
es-8R
@lwh
E)f?J
?333?
MbP?
15DspLibBassQueen
_CN6DspLib15NotchFilterBank10FilterBankE
?N6DspLib19SampleRateConverterE
=|^
=sG^A`B
5?N6DspLib13MeisterStueck6Kernel9AlgorithmE
N6DspLib3XTC9AlgorithmE
es-8R
HCN6DspLib14PeakPowerGuard9AlgorithmE
22DspLibLoudspeakerModel
?N6DspLib3RMSE
?N6DspLib3FFT10FilterbankE
AUUUUUU
4:{
:D<T
:D<{
9l]t9am
9U@#:
HB8F
:U<t
uE=8
>e6=>'
J>e6=>B
HB8m
:U@#:
8l]t9
8ncW8
P>:X
FT=/Vw=
=/Vw=
^{<h
#4;X
8ncW8
2:o$s:
5;),;;s
%:;D[3;"
 =$E#=
$=9!%=
$=$E#=
);D[3;
=;),;;g
$;5R
:o$s:]
7$[*8
>3;8$;;Q[7;
?Kv-?
%M?k
9?Kv-?
O>vH
)#;Q[7;8$;;
8$[*8
N6DspLib10BassKoenig9AlgorithmE
WC33
( A`
:19DspLibLoudnessMeter
NSt3__110__function6__funcIZN19DspLibLoudnessMeter10initializeEjdE3$_0NS_9allocatorIS3_EEFvRfjjEEE
NSt3__110__function6__baseIFvRfjjEEE
ZN19DspLibLoudnessMeter10initializeEjdE3$_0
(knN
30DspLibThermalSpeakerProtection
?N6DspLib6Biquad6FilterE
@333333
K=87v=
>8/!>
RE?y)N?
1v?.
V?y)N?
h8>8/!>
=87v=
D,Go
?N6DspLib8BuzzKill9AlgorithmE
?Rrb%
5$1$
N6DspLib11ToneMeister9AlgorithmE
$tIfff?
UZr?
+P=@
u?O>)>
O>)>
cM?R
i}z?
>Q_\
fo?I
3}?q
nw=\
Km}?
1x?eN
?zs?gK
?17DspLibVirtualBass
MbP?
p}?A
?18DspLibControlFreak
?iRr?\ 
iRr?`
=!vV
?!vV
>>by?4
>by?
o?N6DspLib27AnalyticSignalTransformBaseE
N6DspLib29AnalyticSignalTransformBiquadE
N6DspLib30AnalyticSignalTransformAllpassE
N6DspLib32AnalyticSignalTransformPolyPhaseE
G!?:Fq?|
u?d;
Qx?H
?24DspLibLoudnessNormalizer
zDN6DspLib15NonLinearDevice9AlgorithmE
@@33s@
L>333?33
33cA
@33S@
N6DspLib13AlgorithmBaseE
N6DspLib26AlgorithmBaseNewParametersE
Rll?
22DspLibMozartCompressor
N6DspLib3FIRE
>ff&?
AN6DspLib7LowFlow9AlgorithmE
PCF33
 Bff&?
N6DspLib13MeisterStueck9AlgorithmE
@NSt3__110__function6__funcIZN6DspLib18forAllParametersOfERKNS2_26SystemParametersDefinitionENS_8functionIFvNS2_22SystemParameterAddressENS2_19ParameterDefinitionEEEEE3$_0NS_9allocatorISB_EEFvNS2_25AlgorithmParameterAddressES8_EEE
NSt3__110__function6__baseIFvN6DspLib25AlgorithmParameterAddressENS2_19ParameterDefinitionEEEE
ZN6DspLib18forAllParametersOfERKNS_26SystemParametersDefinitionENSt3__18functionIFvNS_22SystemParameterAddressENS_19ParameterDefinitionEEEEE3$_0
NSt3__110__function6__funcIZN6DspLib18forAllParametersOfERKNS2_29AlgorithmParametersDefinitionENS_8functionIFvNS2_25AlgorithmParameterAddressENS2_19ParameterDefinitionEEEEE3$_1NS_9allocatorISB_EEFvjS8_EEE
NSt3__110__function6__baseIFvjN6DspLib19ParameterDefinitionEEEE
ZN6DspLib18forAllParametersOfERKNS_29AlgorithmParametersDefinitionENSt3__18functionIFvNS_25AlgorithmParameterAddressENS_19ParameterDefinitionEEEEE3$_1
?N6DspLib10PowerGuard19WooferPowerAnalyzerE
N6DspLib10PowerGuard20TweeterPowerAnalyzerE
fff?
zt?{
Fffffff
333333
@333333
?333333
?lppa
?xfuasncoxfua2cga
ffffff
=xfua2clv
mcpl)
W?xfuadqbpxfuadvpexfua2vpexfua3vpexfuailcbxfualcfsxfuailovxfua2ppsxfua3ppsxfua2mebxfuan2mbxfuafnmbxfuasmebxfuasfnbxfuatwsmxfuafnsmxfuafrifxfuaverdxfuasondxfuasrnnxfuapsnnxfuatennxfuasiovxfuaavnnxfuassuaxfuaorpsxfuantsdxfuadfmbxfuadtmbxfuasnfnxfuakdnwxfuacatfxfuannilxfuapuslxfuangncxauauvxaxauadvxaxfua1mpcxfua2celxfua3celxfuacecmxfua5celxfuaomcexfuaoscexfuarmcexfuaeyttxfuacemsxfua2snsxfua4snoxfuaencoxfua2serxfua3serxfua4serxfua5serxfua2tgexfua3tgexfuaseedxfua2lsmxfua2snmxfuasndmxfua4snmxfua1ssbxfua2ssbxfuaqenhxfualesnxfuabvrdxfua2pdmxfuakdydxfua2qrvxfuaqebmxfuaxmsrxfuahsorxfuagulpxfuabccdxfuakeelxfuariklxfuarcedxfuagpsdxfuarhcpxfuaerifxfuatracxfuadnalxfuaytcsxfuaacrcxfuaduolxfuappahxfuangxfxfuayldcxfuapcpsxfuazaohxfuasnesxfuacgamxfualslcxfuaisimxfuanepsxfuaraehxfuaobwlxfuatdlcxfuatcxexfuamcisxfuadsimxfuakrfcxfuakzubxfuanebvxfuagnkbxfuanqsbxfuawolfxfuaktsmxfuatsmtxfuaszomxfuamnllxfuagppaxfuapstaxfuactxaxfuamndlxfuagmslxfuaalisxfuactlgxfuaoccexfuahmcexfuamlpsxfuarocxxfuaksma
333?
@433333
~?-C
?33333
yE>ffffff
>ffffff5@
Mbp?
@8ffffff
{h9333?0
L>9]L
ff&?
Ao?.
UUUUUU
2+d4
zt?333?
>bdop
2das
333?333?
Dmcpl
Mb`?
/~?
?GR:
6*?1
1dmr2dmr
333333
mron
?a8W:
$f?9>O;
k>ap
tjiA
Ga=ff
Y?B`e<
!33s?)\
PPEo
(\?q=J?K
PCE\
F}?5?>
.eB_
Iff&
+2ff&?
>ff&@
p=>3\
(\>G
=gff>3\
P}G;
>F}K@+^
."N=j
<eva=
4>4<@
@d|G
}1>Z
(L%>.b
=$>P
AM>mVe@"
(P:=
Z>#n
n?)\
9&t=
3>l+R
>Y2z
OB=p
->1^4
K@F+,
]P=F
I?ff
!X94=
@33s
(EJ
2=VU
@q=J
?xz%>,e)?R
}?p{
!!!!!
#)/59<BFLU[l
#)/59<BFLU[l
#)/59<BFLU[l}
^;M"s
zRf.
',>PdN
")19AH
SUY]_G
CCCCCG
----t
CCCCCC
"1@N\m|
<AFKePt[
,<Oc
JJJJJ<
!$7I\n
$).3:?
+<KZn~
 "0>@BDMP\
;;(9
#:]u|n
/=NQ`n
#;?ELU
*OU
8?HQ
"%7JMPSVYjmp
',16;E
4B 1B
).<AOg
).<AOg
).<AOg
).<AOg
('21=<HGSR`_lk
Y$YY-C
%eee%Yeo
#Hbf
@CRUcq
!$8J]o
!(/6=Jah
&.6>FQdlt
"%7JMPSVYjm
%6KNQgz
!$8J]o
)<Lav
"%7JMPSVYjmp
%7GZl
!9=CJSfj
 369<KN]`cr
xaua
2qrv
qebn
mndl
mndl+
mlps/
2sns
snco
neps
kdyd
2cga
rced
ngnc
qebn
ngnc
qebn
2qrv
2pdm
2pdm
ctxa
ktsm
ktsm
ngnc
qebn
seed
seed
qebn
lcfs!
qebm"
qebm%
hsor#
hsor$
hsor&
krfc,
krfc-
krfc.
1mpc0
rced1
qebm2
yldc3
2qrv4
3pps5
3pps6
3pps7
2pps8
kzub)
raeh*
lcfs:
keel'
rikl(
tsmt
tsmt
tsmt 
nebv
zFff
fB33cB
pB33qB
lBffxBffxB
rB33cB
BBff@B33;Bff6B
2B331B
-B33%B
j<=(~=
<X94<
WC33
y@33s@
l@fff@
K@ffF@
B@d;?@
,@L7)@ff&@
(@H
?20SpatialMetadataError
Ov#;
K+_<
K+_<
Ov#;
#Y>^
8<F!.<
:nl7
w:WM
Z}*=4
Z}*=
w:nl7
%*=h4
'<1w
Dfile:///tmp/AUSM_Virtual_Surround_Device_Reference.ir
file:///tmp/AUSM_Virtual_Surround_Tuning.ir
file:///tmp/AUXTC_Tuning.wav
file:///tmp/AUSM_Virtual_Surround_Tuning.ir
CDDR
SharpeningLimit
DecorrelationLimit
AnalysisType
FrameSize
HopSize
xfua2qrvlppa
?|*#?
>(?-'-?
B?=EF?
L?g|O?C
Q?;4T?
V?;4T?C
Q?g|O?
I?=EF?\
1?-'-?
>(?|*#?
N4>v
?e=P
tC>f
!?>u$?*
&?g~)?
+?S[.?
3?{K5?
cE?d G?h
H?QgJ?
K?shM?%
N?}!P?9bQ?6
X?BAY?
Y?W$Z?
wZ?=
wZ?W$Z?
Y?BAY?
SW?M
R?9bQ?}!P?%
N?shM?
K?QgJ?h
H?d G?
cE?J
7?{K5?5
0?S[.?
+?g~)?*
&?>u$?L
&X>f
N=pa]=
}{=Ql
TP>3
]e>t
p>lyu>
;!?'
%?x^&?
*?OW+?
.?h"0?
M??IH@?
>A?b1B?
G?_bH?
4I?y
OL?R
M?huN?
#O?F
O?KrP?
Q?NER?
S?PqT?A
T?HjU?e
V?-!W?o
6X?@
Y?t`Y?R
Z??9Z?
bZ??9Z?
Y?t`Y?z
W?-!W?
OV?e
U?HjU?A
T?PqT?
R?NER?O
Q?KrP?F
#O?huN?
OL?6
4I?_bH?e
 C?b1B?
>A?IH@?
M1?h"0?(
,?OW+?C
'?x^&?
?)\
z>lyu>#
#>"8
Ul=pa]=w
6<Dn
"";^
.=d=5=
j<=/
J=\>R=
w=5B
&>$))>
?>^.B>
Q>:<T>8
V>OxY>
^>kba>
^i> l>w
y>|D|>
l?!"
?5A ?
5"?/
$$?G
$?Uk%?
P'?0
)?Ll*?S
+?5A,?
,?6v-?
.?-@/?M
m0?C
1?#,2?U
Q3?m
3?2t4?.
!6?%
7?aR8?w
9?6u:?
A?YmB?
ZC?J
D? *E?_
gI?J
3J?g
J?1^K?b
~L?w
L?C9M?
N?#NO?
O?#IP?x
9Q?r
T?YPT?
3V?fjV?
W?m9W?
jW?p
sX?t
-Z?xCZ?.XZ?
kZ?.XZ?xCZ?
-Z?@
.Y?R
 X?w
jW?m9W?
V?fjV?
3V?r
T?YPT?|
P?#IP?
O?#NO?'
HN?c
M?C9M?w
K?1^K?
3J?J
E? *E?
DD?J
B?YmB?
{A?m
:?6u:?
e9?w
8?aR8?
;7?%
!6?`
5?2t4?m
Q3?U
2?#,2?
m0?M
/?-@/?D
.?6v-?
,?5A,?
+?Ll*?
&?Uk%?G
$$?4
5"?q
 ?5A ?=
~>|D|>
lq>w
n> l>
^i>5
d>kba>
\>OxY>8
V>:<T>U
D>^.B>3
+>$))>
!>'l
Y=\>R=t
j<=d=5=
}H<;
a<tm<U
=Zc
l3=;
:={/>=S
A=QlE=s
L=5`P=
W=vq[=
_j=)#n=
y=;R}=
;!>Cr">m
&>TR'>
+>\<,>>x->
n7>K
4;>dx<>#
E@>P
_E>i
G>"9I>
GR>>
 Z>2q[>P
^>bf_>
`>Jb>
f> ^g>
go>j
r>*ss>1
:z>l
P~>6
 ?Yk ?
e!?0
!?J"?B_"?
#?.W#?~
B%?)
%?~6&?]
y'?G
(?@i(?
,?#h,?
5.?A
/?IH0?B
s1?@
2?M-3?Ov3?
4?'P4?_
5?,E6?
/8?u8?
8?lC9?
<?#-=?
o>?W
>?8.??Dm??
)@?'g@?
 A?-]A?
B?DOB?*
C?l=C?WxC?
'D?taD?
FE? 
E?k'F?
^F?O
GH?t|H?%
MI?8
LJ?=
EK?qvK?
L??7L?
!M?"PM?
}M?~
N?n2N?
8O?NcO?
P?n4P?d]P?
2R?2WR?
R?gS?
?T?g`T?
U?X<U?
ZU?pxU?
V?c%V?
,W?|EW?
TX?/iX?p}X?\
Y?F%Y?P6Y?
gY?dwY?
Y?dwY?
GY?P6Y?F%Y?
X?p}X?/iX?
]W?|EW?
AV?c%V?W
U?pxU?
ZU?X<U?
T?g`T?
/S?gS?
|R?2WR?
%Q?H
P?d]P?n4P?$
O?NcO?
^N?n2N?
}M?"PM?
fL??7L?y
K?qvK?
EK?f
LJ?r
H?t|H?
GH?I
:G?6
^F?k'F?
D?taD?
'D?c
C?WxC?l=C??
B?DOB?
A?-]A?
@?'g@?
??Dm??8.??
/>?R
n=?#-=?
`;??
9?lC9?
8?u8?
/8?`
6?,E6?3
(5?T
4?'P4?
3?Ov3?M-3?
Q2?O
0?IH0?
f/?]
5.?l
,?#h,?z
0+?3
E*?#
(?@i(?]
&?~6&?m
B%?=
#?.W#?
"?B_"?J"?0
 ?Yk ?v
??2
P~>V
:z>+
'v>1
t>*ss>
h> ^g>
`c>Jb>
`>bf_>
\>2q[>
1V>7
J>"9I>$
_E>P
=>dx<>
4;>4
-6>p
01>^
.>>x->\<,>
(>TR'>T
#>Cr">
;!>K
=;R}=
q=)#n=
(_=vq[=
T=5`P=
I=QlE=S
A={/>=
@%=+
y<tm<Y
 r;q3
,>B$A>p
V>L%m>l
0?zl6?y
;?PAA?
IK?c
fT?N
`?_rc?
1i?X
do?Y
zf?_rc?
|\?N
fT?c
`F?PAA?y
;?zl6?s
>L%m>p
V>B$A>
Mv=[
 r;d:
6e;i{l;gHt;
=XV)=
f=bp
'>Jt1>
?Ql ?Ov#?
s)?qf,?
P/??02?u
H=?!
xL?`
NS?*uU?
[?*g]?
7_?h
e?w)g?!
l?N%m?
q?'
\r?#
\r? 
pp?r
n?N%m?
h?w)g?
7_?*g]?
W?*uU?
xL?=
5??02?
P/?qf,?
y&?Ov#?Ql ?
;>Jt1>
G=XV)=
|;gHt;i{l;
c;WMg;
{n;WEr;H0v;
[~;[L
 ?;.L.;
<p0J<<
r"=hh1=
/>7@4>
N>omT>$
e>l
j>UQp>[
?e3!?3
"?8;$?c
4*?&
z1?C
2?,S4?~
5?'!7?
1C?}yD?
_O?>
Y?"
0b?T
f?`{g?
h??ui?
Yl?I
l?/\m?
n?&"o?!
=p?N
'q?d
o?&"o?
m?/\m?I
j??ui?
)h?`{g?
Te?c
Za?$
Y?_
8N?b
E?}yD?
1C?
G??T
A;?=
8?'!7?~
5?,S4?C
$-?&
;'?c
%?8;$?3
"?e3!?
v>UQp>l
x_>$
Y>omT>
9>7@4>
`o=0
@=hh1=
r"=R
<p0J<
;.L.;
NO;o
7z;H0v;WEr;
j;WMg;
m;!ao;g8q;
Op;I
g(;@
zz:z
RKN:
;VEz;
Js<j
L=/JT=
#>C$&>
E>FSH>
M>1vP>
1S>p
5l>e
mz>mL}>
,?-
-?8=.?
/?mh0?M 1?
2?;D3?
4?pb5?
D@?R
A?x9B?
lE?6
H?2&I?$
I?0]J?S
(L?:
VM?(
8P?<
Q?SuR?
*U?2
8V?4
W?FHX?}
FZ?y
Z?9?[?
[?a3\?
#]?-
^?@f_?
 a?i
a?0`b?I
b?-/c?
~e?O
e?f:f?>
f?,Jg?@
Gi?
l?97m?Oum?
'n?C`n?
go?;
vp?+
tq?[
Cr?4Wr?jir?9zr?
r?9zr?jir?4Wr?
.r?4
!p?Y
5o?X
n?C`n?
'n?x
m?Oum?97m?
5j?3
g?,Jg?
f?f:f?O
~e?h
\d?T
c?-/c?I
b?0`b?
_?@f_?
\?a3\?
[?9?[?y
IY?}
X?FHX?
BW?4
8V?2
S?SuR?
XQ?<
VM?:
J?0]J?$
I?2&I?[
'D?`
B?x9B?L
6?pb5?Z
3?;D3?6
1?M 1?mh0?
.?8=.?
P+?n
[(?N
^%?&
>mL}>
mz>U
1S>1vP>W
K>FSH>
G@>G
S8>\
(>C$&>X
\=/JT=U
;VEz;
;RKN:
oa;I
Op;0
s;g8q;!ao;
bh;`
f;_hh;
Ui;O
ek;P
0n;7
vp;yuq;
.r;KTs;
~w;D
|;p2};<\~;
$|;!
u;1dq;
h6;5
-;/u);Z
T:q&?:
:):_
9E j9
vQ8:
!F<RBS<\r`<
N!=;
:C=m
 v=k"z=B(~=-
,>iP->R
/>#61>
eF>N
I>rqJ>
O>o<Q>
S>VWU>
wY>:
Z>N;\>
d`>p
a>f.c>
e>+ag>j
@q>o
?KD ?
+"? 
$?00%?J
%?)P&?
o'?k
J)?g
*?~f*?
,?fU-?
l.?}
.?$&/?
/?<;0?L
2?Ta2?y
3?Fr3?
3?q'4?
C6?k
N7?w
g:?8
;?6m;?
r=?Z
@?Gn@?"
A?DiA?
B?rbB?
C?OOD?
F?s$G?
sG?9
H?PLI?A
I?{5J?
K?6iK?
ML?B
N?PZN?R
P?T[P?
{Q?m
R?WPR?
R?S#S?"iS?
}T?i
JU?y
V?9XV?
aW?+
fX? 
X?~'Y?DgY?
\?!O\?N
]?)>]?1y]?
b^?&
_?GG_?
_?a'`?
na??
Cb?^wb?e
e?;4e?
ce?v
f?0Nf?
5h?W`h?w
/i?LXi?
k?r%k?
mk?h
>l?v`l?
1n?CNn?Bjn?
$o?<>o?6Wo?
oo?$
(p?8>p?qSp?Qhp?
|p?
q?2&q?G7q?
Hq?lXq?}hq?0xq?
/r?,:r?RDr?
`r?oir?
qr?oir?
Nr?RDr?,:r?
q?0xq?}hq?lXq?
Hq?G7q?2&q?
|p?Qhp?qSp?8>p?
oo?6Wo?<>o?
$o?E
n?Bjn?CNn?
1n?4
l?v`l?
Ik?r%k?
i?LXi?
h?W`h?
5h?#
|f?0Nf?
ce?;4e?'
@d?(
b?^wb?
Cb?h
^`?a'`?
_?GG_?
(^?o
]?1y]?)>]?
\?!O\?
Y?DgY?~'Y?r
V?9XV?=
S?"iS?S#S?;
R?WPR?
P?T[P?
N?PZN?
K?6iK?
J?{5J?
I?PLI?"
aH?K
sG?s$G?
4F?K
D?OOD?
B?rbB?
A?DiA?
@?Gn@?8
p<?v
;?6m;?R
X8?#
4?q'4?
3?Fr3?p
2?Ta2?
N1?4
0?<;0?
/?$&/?}
-?fU-?
<,?
*?~f*?
-(?k
&?)P&?G
%?00%?
o$?#
h!?W
 ?KD ?
a?d
kn>1
0j>j
h>+ag>:
d>f.c>p
d`>+
]>N;\>:
V>VWU>
R>o<Q>]
K>rqJ>
2>#61>
.>iP->P
=B(~=k"z=
g?=L
},=i
m<\r`<RBS<
9E j9{
:):q&?:
%;/u);
m;1dq;T
;<\~;p2};
s;KTs;
.r;yuq;
vp;7
0n;L
4h;_hh;
:9[#;tG^;
 ?<n
<=guK=
0z=pb
/4>}
:>1ZA>
&+? &-?
a>?9+@?b
C?s_E?Q
SJ?!
K?p}M?
R?({S?
T?*OV?~
V_?4
um?uGn?
p?NPq?
t?}.u?"
u?zLv?
x?F,y?
y?5\z?
e{?:
I|?x
}?QG}?<~}?
~?E;~?hc~?
~?hc~?E;~?d
}?<~}?QG}?
I|?k
z?5\z?^
y?F,y?
v?zLv?"
u?}.u?r
r?NPq?
o?uGn?
um?8
W?*OV?
T?({S?t
O?p}M?!
G?s_E?w
A?9+@?
"/? &-?
H>1ZA>}
"!>^
Z=guK=
T!=aS
!~<n
;tG^;9[#;
8xfuasiovlppa
m@p|
>Q?
2 ;>
8>p%
?I.TA
<>~S
vN?"l-
?Aad?A
0/8@
,H3@
l!J@,H
MgG@d
]Z?xEN@
A!\A
$(5AW
`">ND/>]
_:>)\
@[B9
%'?e
lw>It
U@F_
o_>T
>F@%
|@Ul
:u_@-[
Uh<?$E
<@S`|=
a?a8
_?sG
1/v=&
r@)
@AVa=
5@CuS
>n|7=u
8?Vb
2UaA}P
V5A"
SAI.>A
-?*Ry?
1cAi
?a0$<
=!V??
?erB
?"5u?#
X\W=
[u?E
XY;=
Q.M>
&A~:
w0?7
O@`A
8$?YQ!@
N*?Z
y?kd
,?DlL
K@#2h
>[D@?
,z?}\'
?J{`AU
z?cE-
2L>]
V?}y
O?k+#
C_?Z
_{@x
K!>[
)\9A+
?bi0
WAZ/
eN@}
j/b>
@><k
-|)?jM
@jhW
6\$==*N>
1g?!
=><k
PE>4
@aT.@
;p>/
jA~
@vO-A;
Px@r
??RJ@,
q=E/!@
 @Eoi;M
zpK@
@#eK? 
->q
>||.
2@v#=q
Z=cb
x>[_
Z?DL
9=|G
1yw?
F=od
}^q?
bdASVQB+0(@>
[@jj
?g}J
U0zA
y@4.0?
%1=k
>(,!
A=($
@aUQ?
5F'?
?k-@
@|)l>*t
#D>d
>C@"
3z@7qr
&g=5
UAAB
sLAo+u
[3A{1
m99@
]8=k
]3q@
0=9S
=lBm
8cA3.!
pq>
{DBr3.
A<NSA
?IyW
\6?re
Y@T7K
/s?7
=sh{A'1
=;pn
?[uB=
@"Rw
<lJ?
L=)\
?anpf80pfa6pfawpfa9pfa6pfaopfawpfawpf61pfenpf80pfe6pfewpfe9pfe6pfeopfewpfewpf61pf42pf42ovbntr42pfbwtr42pf@
#=q=J?
#=q=J?
#=q=J?
?fff?fff?
l?33s?33s?
?fff?fff?
l?33s?33s?33s?33s?
swha
stsa
N3gsl15narrowing_errorE
?fff?
?fff?333?
?333?
??WK?7
5M=S
<;pN<
?CDDR
SharpeningLimit
DecorrelationLimit
AnalysisType
FrameSize
HopSize
@qerf 
5?92
~?`5
h~?n]~?
?ti|?
'~?M
{?8b}?n
<~?LN~?Kq~?
y~?o
{?*F{?M
s{?xS{?
|?-~|?R)|?
|?+$|?
}?j:}?B@}?
~?n%~?,E~?
z?1ku?
!{?`
X{?~ {?
z?sF{?#1{?
|?<L|?'x|?4
|?e*}?{M}?
.u?.fu?}
#y?b6y?
~y?cXy?U
y?n'z?G`z?"
U{?^
|?JZ|?z
Qt?+
%u?m
Vw?T#w?
s?'>t?
2t?[
?t?"vt?
pt?C[t??pt?
t?Q~t?
av?:
y|?4
1}?F
~?^_~?
~?6&
Js?M4s?
s?wVs?
o?$0p?
-q?v
^u?k
y?# z?
"{?I
|?&S}?{
~?{H~?y
?61q?
Pi?
i?Q+m?
/m?M-m?
Sm?}
m?&#o?3.o?>go?
"p?*xp?
Ao?#
p?Csp?
Cr?1^r?
y?0)z?
:~?=
g?Vph?
dl?jjl?+
j?VWl?
l?bym?\]l?
m?{hm?
o??eo?M
o?""p?=
s?;ut?4Au?
y?Dqz?>
{?#(|?:
}~?r
kf?SMf?b#f?_
=g?u
i?R4g?
|h?N
i?-:j?
zi?=
j?Lik?e
Ml?D
~?j#
e?A]e?):e?B"e?V
(e?#Se?+
e?CKe?U
De?i e?
'e?;
e?6re?
vf?C0g?
tg?,Lh?
5i?'
6m?C.n?
p?#Uq?JVr?
zu?3
mx?,By?9
|?.-}?
}?=Q~?+
~?7)
vc?{
_?:e_?fj_?
(`?*
m?O^o?z
p?Ewq?
u?R>v?
8w??>x?~6y?u&z?
}Z?9
Z?Jj[?
^?MZ_?H
b?Yfc?Vod?"
l?S9n?^
Dw?m<x?
Dy?I.z?
X|?y
}?_"~?Yx~?
zX?p
qX?}
g[?A2[?
?c?&
:g?70i?
k?^om?
fp?t
os?h
v?CMw?Qsx?
[z?`"{?
{?.v|?
Y?7mY?
SQ?<
DT?=
[?/~]?>}^?
Ha?FCc?
i?||k?
l?own?8Vp?m
vz?5e{?
|?9>}?
 ~?ef~?
?VBS?
ZQ?J
N?,UL?+RP?
@R?j
iT?`
W?*tY?g
-\?hJ^?
_?sha?
bc?~
n?m9p?
-u?ckv?
[|?`
F~?{
K?>vM?
N?sGP?
X?jSZ?
\?6;^?w
_?C@b?
{h?c
~p?@=r?
v?ulx?bny?
Tz?Z2{?.
$~?6H~?
~?G$
K?H=K?
D?^KC?b
#C?B@F?N
~G?d
9Q?x|R?
V?6iX?H
r?cht?
%v?>Sw?.nx?P
{?Fp|?8
|?Tt}?
}?^+~?
H=?U
@?V>@?$
@?aC?3<C?
H?<YJ?
Y?%L\?
6a?[
Vs?1/u?
v?W8x?Y(y?
w0?H/1?
`0?*
3?s<<?
7?Wq8?
Pi?o
,t?~
Iw?a
{?2||?
Y}?(
@,?:
3?{H4?
D?d9G?
TR?a
pX?/
i?Onl?
s?P0u?
x?NVy?*iz?X{?
P}?#
~?1-
(?V()?
f*?>
-?5z.?y
5?k37?
4t?^
]w?E
x?D+z?
|?(+}?
(~?,
?(O$?
-?IQ/?
F?Z[J?L
+c?v
1s?q
v?$Qx?
{?I^|?4
}?7~?xF~?8
~?;$
l8?:&;?S
>?sRB?|
`?v9d?
hg?d
y?Iz?
}?jD~?
=#?3
L*?{x,?"
3?TN6?
E?K&I?ZsM?
Y}?4
~?De~?
c!?#
p'?I
w-?J
W?% \?D
c?j2g?
k?~jm?
@p?H
~?nc~?
L8?j
T?o,Y?|
e?B.i?
ro?`
$t?}
|?]x}?f)~?
U&?<
.?"?4?b@8?[
Q?+4W??K[?
y?"2{?
|?!W}?e
~?Az~?
?9~ ?
&?m=*?
&.?O
C?<jI?:KN?j
i?IHm?
4p?&
+?U
?<I$?x6)?
.?6s4?
Q`?g
kl?=ko?
E{?d
J<?i
N?7_T?
c?/]g?
2n?0Yq?GYs?
n}?U
8~?n
~?[A
M]?`
v?'!x?
 {?f
!}?=
[~?l
?S-&?
/B?J*H?
Z?Sg`?
d?A)i?
et?i
v? :w?
&|?l
}?40~?H
?&X!?
kk?`
|?j;}?
a{>?
KW?"
u?f.w?%Wx?
w{?k*|?e
?(='?
XN?H
i?Q9l?
t?<zv?7
9z?o6{?Y
]}?s
}?TD~?
~?g1
X>I+W>
~>yJ
s"?xs*?
Y?6<_?Oxd?
?j?t6m?O
{?zh|?
?>t(;>
G>29J>
7Z>y
_/?>
1X?^
k?nZn?
y?>oz?lb{?
P}?L
}?]M~?u
>7d+>
$>5/ >r
'>(]%>
R>hR_>\
u?{Ow?
7~?f
 >ZW.>
>>GPF>
s>!Y
W;?moD?
lh?i
p?.$s?GAu?
Dx?6
{?Ho|?l
}?dd~?
*>sh3>
3A>%?S>
__>}#w>
?5o#?
[?l3_?F|c?
Nr?WHt?
w?a^y?
>?}_H?_
`?HBe?
x?E#z?
}?}%~?i
{h>#
=>^%Y>e
<?m`F?
MV?*
Z?D3_?=sc?lCg?<
yu?[
v?$4x?
8~?J}~?D
{h>#
S?!QX?
w?kny?
f|?0
~?Lt~?}
~?1.
{h>#
k?{|n?
x?_z?Z[{?^3|?l
{h>#
_s>%\
'?+e4?-
qf?a
>u?E=w?]
!z?&3{?
{h>#
V`>'
~>st
7?}~>?
v?]qx?s
{h>#
q?8Et?
{h>#
/?sI6?(w=?
cb?3
 v?X
{h>#
+2?Y
9s?2ju?
{h>#
>IGH>
&?;%.?
6?lT>?
{h>#
#\>a
?q*!?
J?KmQ?
o?G[r?
)u?t
{h>#
G?PnO?
*W?4)\?n
{h>#
->`!]>
c3?1
rD?;
"f?J
h?b~k?Pcn?1
{h>#
R?gqY?
d?6pg?F
{h>#
+?.87?<
P?O#X?
2i?b
t?)Nv?
{h>#
T\>/e
<?$|F?
$n?#
q?SYt?P
Q}?p
{h>#
?v@$?
U?^iX?
s?e@v?
y?4Gx?<wv?
{h>#
1M?4^T?
0]?*
m?Mlq?
7t?<wv?4Gx?
~?6^
}?R)}?
{h>#
= >+
sy?A
|?R)}?
~?Yi~?Y
X|?R
rz?@'y?
{h>#
>SmV>
?E>$?
Y?bYa?%eg?
w?@'y?
rz?R
~?Yi~?
}?d4}?|
+v?=
{h>#
_:?o
6c?J
h?]_m?
+v?y
|?d4}?
}?;h|?
Dy?6
{h>#
Ps?K
{?;h|?a
p~?$
~?a_~?
Vw?gMu?
{h>#
E5?B_7?
r?gMu?
}?a_~?
2}?X
{h>#
@Z>.
?1r%?
H7?3
#c?M
h?iSm?b
%v?{
p~?e
i|??
z?9Gy?^
{h>#
?[:"?A
3?l\D?
Us?5
w?9Gy?
i|?y
F|?fi{?
y?Ocw?
{h>#
 ?9Z0?C
\u?Ocw?
Wz?fi{?
F|?V
a~?j
}?=u}?v
|?{$|?
>{?i#z?
{h>#
e.>OF
)??x
x?i#z?
>{?{$|?v
|?=u}?
R~?T
~?=&~?
{h>#
!v?j
}?=&~?-
s~?5
u?Pos?
{h>#
r>F)
D?|:Q?
Z?_/b?
rp?Pos?
p|?D
s~? 
c~?~
K|?so{?Z_z?
ju?W
{h>#
y?Z_z?so{?
K|?O
c~?#
}?S}}?o
0|?!N{?.6z?
So?ERk?
{h>#
Lf?ERk?
x?.6z?!N{?
0|?o
|?S}}?
|?z-{?
{h>#
bM>|I
z?z-{?V
L~?\
2~?E
C}?@
y?<6x?5bv?
{h>#
s>V)f>2
R9?UtH?
t?5bv?<6x?#
C}?E
&~?+
}?82}?
x?7$v?
p?gPm?
{h>#
E<>A
!?2;7?
h?gPm?
s?7$v?9
|?82}?+
!}?iw|?P
z?Iay?
{h>#
78>e
>Z>&
8C>#
M>qM
bE?R
=h?g
w?Iay?
{?iw|?
v~?z
n~?9
<y?|
u?;@s?(8p?
{h>#
O>\_E>
A3?@
C?K|P?
*Z?9
ol?(8p?;@s?
~?{(
~?'f~?i
}?@Q|?5v{?
gz?T
zu?
l?&1g?
{h>#
, >[
?~g1?
a?&1g?
{w?T
gz?5v{?@Q|?
~?'f~?
~?8$
^~?J
|?%@|?
Sw?.Iu?r
{h>#
&>8t&>
h>;y
BA?VuN?A
r?.Iu?
a{?%@|?
^~?
~?A 
|?L0|?
M{?q5z?+
.w?<
{h>#
Qo?T
.w?+
x?q5z?
M{?L0|?
W~?{
6{?*
t?{Dr?\
{h>#
>@9B>
xD>@
K_?e
n?{Dr?y
j}?R
t?3"r?
{h>u;
!+?O
n?3"r?
*{?D
n?\oj?
.e?\oj?
}?g[}?
kn?d/j?
d?d/j?
zx?m
|?g[}?
~?c=~?.
T}?f
gx?N
v?tit?4
=n?7
[;? 
I?G$U?Z
=n?4
q?tit?N
T}?.
}?c=~?
~?J>~?K
y?xkx?.
q?KGn?
J?U<U?%
j?KGn?
ot?.
v?xkx?(
V}?K
}?J>~?
:~?5
]x??
v??Yt?
i?and?
]?and?
q??Yt??
]x?v
Q}?5
E<Ak9<
Z=p^@=t7>=
7=}'3=Ye\=S7L=
UE=lG?=
@9=?
a#=D
I<G`9<
#<F^
Ho=2>v=
Yz=rDt=i!l=h
h=aFa=
?=b:9=
z<F.i<]2J<K
^e<EbX<
=<PM2<
>JJ
`<=r
X<6l@<$
>Y=
SZ<0
)>O5->
)P=$
vY>TGX>
:9>2
$=>r[@>5
@>NgA>
>>]i6>f
*0>B
%>q5!>+
%m=W
6<fX6<
#<dJ^>
]>m<_>5
^>yt]>
R]>r
%^>W
]>W&]>94P>
P>'xQ>v
L>Z)F>
6>5J1>
[->]
*=vS
X<cP4<fa.<
|h>wyg>
(~>59}>
[r>Y,p>
Q>0*N>
'>,+ >
u0=`H
>`#t>
j>cDj>
L`>=
6>0`0>II(>a
Q=t'>=
#<0j
p->i
y=1Hb=
Z(=m-
>2>w>cDp>
aj>x
F>9<<>`3>
v=_Z^=
<cUa<
z>]ar>h"i>
^U>)
"@>}
<p27<Y
#<V'
y>M?o>;
M>pBC>t
=7ri=5
Q=+/==_40=(
_<|^a<
>0Xs>
yf>m
X+>2l
\=Z4Q=f
N>?[B>
F5>\
J3>n
)N=d$7=
[#=V
2<: 1<I
4b<h
8<\$9<!i9<
9<?g
>%:s>Q
U>`<F>9
5>dA)>_
d<0`<
qT<g
&a<Q
y:<#I:<68:<=3:<
5>f!#>el
f=dDR=
Q$=9
c<Pn:<,1:<
(y>)
EX>4
= &u=?
|d<:
#=ey
FK>g.9>
"u>l
<Vgd<
V:<~l9<
8==~.=
[t>u
Ws=Z
?pX?8
Nz>B
2>@
@F=U
=<-j7<
>a/p>
[>C:I>
j'>@
Z=# F=
WP>(
z=}Xg=i?S=
/<j
{?;
nY>i(B>
WA=q%4=
g?R
Y>xrK>G
+?U
`>BkN>
=NK{=
U=-&@=
{<b%
yi>
Q>Y+;>
3>$-,>W
-6=m4/=q
Vp>/
73>*
EL>q!B>{
R$=oo
H=b}?=3
a{>?
:P>#
C>`G5>D
=u%m=
X>I+W>
~>yJ
?@E?
H{>;9h>
Y[>ynJ>]y;>
t`=`V9=
+= w/=3
?>t(;>
G>29J>
7Z>y
b>cbT>
C>t02>P
5V=+
=7d+>
$>5/ >r
'>(]%>
R>hR_>\
$N> 
<>eR,>
aU=v
*=}@'=
 >ZW.>
>>GPF>
s>!Y
>f&~>!
]c=G
f=*oo=
*>sh3>
3A>%?S>
__>}#w>
>p4r>
q+>/
=(;r=
'I=a
C=i_Q=
eT>\9?>
n=8zJ=
{ =0j
/<fAw<
=,3'=KJ[=
=>^%Y>e
i=L>c=w
==M6+="\
<tT$=
W=eB
,>L8
#<$Z
G=H}
=Vs{=W
#<3'
_s>%\
&>",
=-=Z0
V`>'
~>st
a?n
UP>F
;>eW)>]
ZC=7 0=<
lD<~
'=kZ
p=<aX=
>-o>
5u=Z
><ft>
y!>W
+e=9
G:=:
'=si
>IGH>
= ?$!
= n}=?|d=
p'=q
#\>a
+?p))?
O=$p;=
0?gs0?+
=&&g=
;=Ed)=
->`!]>
"0?T
T^>\rH>
<g=5zP=
5?AZ9?7w;?
9;?Z
4?DX/?
?s+?V;
N>M@:>/
?Z@!?
P@?I
3?Z2+?
D&>5
=wt
T\>/e
=?)E8?PW0?i
>x>[
Q=>5==
<?3U5?
+?VL ?-
>iW|>
&>mO
T@=Yf-=
]8?/
?>=D
= >+
rQ?f
E?GE=?
3?e,"?
>J*f>
m/==)
#<b%
>SmV>
?&>'?&,H?
%?Go
>x=k>
Z?C&]?|
]?k>[?
>&Z}><jd>
9>Zc'>
a?/b?
_?(uZ?a
S?o8J?
^$?-1
Hi>yRR>
7E=1
d?5*_?%
W?{dN?
{.>#O
B_=AII=Jy5=
@Z>.
.?CnK?
vi?`
2?Y"!?
d>7.N>
pV=oUA=
#<iX@={8
g?RIm?
Mh?K"`?
.6?8@$?v
i>$+R>[{=>
>9rm>
e.>OF
Yh?@{Q?
E*?]
mD>>
W{=Z
b=uLL=
08=i
qw?|Cz?(!y?
\?zbF?
d>.UN>
n.=yC
r>F)
r3?B
w?GD_?sJI?^z5?
>-6h>
c?eMM?;
&?Ys
->lz
CP?*Pj?
>d)p>
K=&7=
{R>w"
R?!3>?
> _s>
E>BY2>D
M=w~9=m<'=r
E>"s
q?'HY?!
S=d?=e>,=<J
R?>Gl?
[?aLF?
.!?bQ
d>2>N>T
V=ldA=][.=
78>I>
>_]g>~
W0=A
8>i$
j?>D
fy?k
>>,a+>
=(;s=EJ[=
(l>8
cT?u
n_=%pI=Z
;?9B)?G
X>JBC>2
#<K(
<Mo6>
?/}:?
U?y(l?2I
?a"i?
>{yr>
=b0|=
&=-8
#<'b
d.>&
<j?W.S?e>?
9=Qh'=
@@>"
?Y!;?M
U?,
e=v&O=
?8H<?
Qm?m-
"^>1EH>
g=;KP=
^;?0EV?
s.?NG
7_><?I>Ap5>h
==)h=KOQ=&
<=""*='c
%I<<S8>
gV?OMA?
F.?+
>SWw>
#<>K#
m?K4
>h?x>
5==2
N8DSPGraph9ExceptionE
xfuatennlppa
?33s@
?fff
333?
l@ff
?fff?33
33s@33s@
?33s
zE333?333?333?
PCF33
 Bff&?
PCF33
 Bff&?
333?
 C33s?
?33s?33s?)\
main
qebn(UL-)MicDCFilter
frif(UL-)Mic1FIR
frif(UL-)MiC2FIR
frif(UL-)Mic3FIR
frif(UL-)Mic4FIR
qebn(UL-)Mic1EQ
qebn(UL-)Mic2EQ
qebn(UL-)Mic3EQ
qebn(UL-)Mic4EQ
2cel(UL-)Mic1LECV2
2cel(UL-)Mic2LECV2
3cel(UL-)Mic1LECV3
3cel(UL-)Mic2LECV3
cecm(UL-)Mic1LECV4
cecm(UL-)Mic2LECV4
cecm(UL-)Mic3LECV4
cecm(UL-)Mic4LECV4
cecm(UL-)PolyEC
5cel(UL-)Mic1LECV5
5cel(UL-)Mic2LECV5
5cel(UL-)Mic3LECV5
5cel(UL-)Mic4LECV5
5cel(UL-)PolyEC1V5
5cel(UL-)PolyEC2V5
gpsd(UL-)EchoProcessingGraph
enco(UL-)OCNE
2lsm(UL-)MicSelV2
snes(UL-)MicSense
n2mb(UL-)BF
fnmb(UL-)BeamNF
sfnb(UL-)BeamNFSelector
tenn(UL-)NeuralNet
tenn(UL-)NeuralNet2
2ser(UL-)RES1V2
2ser(UL-)RES2V2
3ser(UL-)RES1V3
3ser(UL-)RES2V3
4ser(UL-)RES1V4
4ser(UL-)RES2V4
5ser(UL-)RES1V5
5ser(UL-)RES2V5
5ser(UL-)RES3V5
snes(UL-)MicSense2
2sns(UL-)NSV2
snco(UL-)FixedOCNS
snco(UL-)OCNS
4sno(UL-)OCNSV4
1ssb(UL-)BSS1
2snm(UL-)MMNSV2
sndm(UL-)MagDiffNS
4snm(UL-)MagDiffNSV4
2ssb(UL-)BSS2
2ssb(UL-)BSS2_4In
lesn(UL-)NoiseSelector
qenh(UL-)HandsetNoiseEQ
bvrd(UL-)ReverbSuppressor
2tge(UL-)GateV2
3tge(UL-)GateV3
gpsd(UL-)DNNVADGraph
(UL)-PostGain
qebn(UL-)EQ
2cga(UL-)AGCV2
pusl(UL-)LevelDrivenSuppressor
seed(UL-)Deesser
2qrv(UL-)WirelessChargerEQ
lcfs(UL-)SC
3cel(UL-)Mic3LECV3
3cel(UL-)Mic4LECV3
verd(UL-)Dereverb
sond(UL-)Denoise
dfmb(UL-)BeamItFD
dtmb(UL-)BeamItTD
dtmb(UL-)NFN
kdnw(UL-)WindKill
snfn(UL-)NFNSwitch
eytt(UL-)TTYEchoSuppressor
pusk(UL-)KeystrokeSuppressor
gpsd(DL-)FEVMixDSPGraph
gpsd(DL-)FEVDNNVADGraph
qebn(DL-)PreEQ
tsmt(DL-)PreTM
mndl(DL-)LDNM
nebv(DL-)VirtualBass
2sns(DL-)NSV2
snco(DL-)OCNS
neps(DL-)SpeechEnh
2qrv(DL-)VarEQV2
seed(DL-)FEVDeesser
seed(DL-)Deesser
2cga(DL-)AGCV2
kdyd(DL-)DynDucker
rced(DL-)Decorrelator_MediaChat
ngnc(DL-)CNG_MediaChat_Left
qebn(DL-)CngEQ_MediaChat_Left
ngnc(DL-)CNG_MediaChat_Right
qebn(DL-)CngEQ_MediaChat_Right
2pdm(DL-)MBDPV2
2pdm(DL-)MBDPV2_2
2qrv(DL-)VarEQV2Vol
ctxa(DL-)XTC
ktsm(DL-)Meister
ktsm(DL-)MeisterU
(DL-)OauGain
(DL-)FevOauGain
(DL-)MixFevOau
ngnc(DL-)CNG
qebn(DL-)CngEQ
qebn(DL-)HwEQ
tsmt(DL-)TM
tsmt(DL-)MultiTM
keel(DL-)Tweak
rikl(DL-)TweakIR
lcfs(DL-)SCi
qebm(DL-)HwMNBandEQ
hsor(DL-)Rotator
hsor(DL-)StereoRotator
qebm(DL-)CrossOverHwMNBandEQ
hsor(DL-)CrossOverRotator
mndl(DL-)LDNM_VolumeLimit
krfc(DL-)CF
krfc(DL-)CF_HF
krfc(DL-)CF_LF
mlps(DL-)SPLMeter
1mpc(DL-)CPMSVolume1
rced(DL-)Decorrelator
qebm(DL-)PostDecEQ
yldc(DL-)PerChanDelay
2qrv(DL-)FrontCameraNoiseEQ
3pps(DL-)SpkrProtV3
3pps(DL-)SpkrProtV3_HF
3pps(DL-)SpkrProtV3_LF
2pps(DL-)SpkrProtV2
(DL-)FinalGain
kzub(DL-)BuzzKill
raeh(DL-)HLC
lcfs(DL-)SC
(DL-)StereoUpmix
St18bad_variant_access
:NSt3__18ios_base7failureE
#9)V*9
H9}?O9
qs9@
$#:MH%:
s':s
4.:R0:
;=:(
D:oBF:
V:D6Y:
.`:^
e:%5g:fci:
Q(;{
?.;s
b1;A
3;wX4;e'5;w
n>;@%?;
@;:lA;t=B;
F;VmG;.CH;M"I;B
J;<OK;
R;&\S;[1T;1
Y;OaZ;
r];f(^; 
_;vz`;
Sl;0)m;
o;~Sp;
cs;a=t;
 u;s
u;%~v;
jz;$R{;.
{;>~y;
w;EYv;}
p;=7o;L{m;{
b;$:a;U
M;y@K;sCI;#TG;qqE;
;zf
qm:#
c:D{Z:
9N*=:b
}*;(BC;
\;tOv;r
1<s68<`
e=3/
w&=Qy(=
9=Wg;=
'A=*$C=/,E=
>G=X"I=
>(J
T(>u
e*>s
->3V.>
z4>H
5>"S6>3
7>:[8>
;>of<>2
B>9HC>f
HL>3
M>AcN>;(O>N
FS>&
W><7X>l
F[>e
7]>G
a>TLb>
_d>k"e>
f>agg>C
=m>Z
q>Sor>
{w>YWx>
|>ab}>^?~>:
<?{
^ ?H
*#?Kg#?
$?x;$?
N%?9
&?:&?mp&?
(?[N(?
)?@J)?
)?p.*?qu*?
+?GM+?
4,?|Y,?*
,?'$-?5f-?+
L.?K
/?dG/?
h/?H
T0?r
J1?jy1?
1?B,2?
3?JA3?
4?4$4?vG4?
o4? 
O5?X
"7?yA7?
c7?U
7?0(8?[i8?
B9?Wv9?
7:?-U:?
;?5#<?ZO<?N
<?+B=?
^=?k
>>?Q
Q??i
]@?2}@?W
GB?2yB?
B?+6C?
PC?coC?
C?>)D?
hD?V
7F?\UF?
F?$G?KG?6
H?I@H?
wH?'
I?/I?~QI?
zI? 
I?)!J?
dJ?g|J?
GK?T
L?U,M?
BM?Z]M?
FN?U
O?~0O?
P?i4P?
ZP?r
P?X<Q?0QQ?
PR?Y
.S?gcS?
T?Q*T?
T?[.U?
AU?7XU?\uU?
U?!4V?
V?W?
zW??
<Y?6`Y?
Y?G8Z?nHZ?
Z?(/[?Cn[?
}[?l
[?(,\?fe\??
]??*]?A[]?
.^? X^?U
C`?2\`?h|`?
`?`a?
Ua?gfa?
}a?d
(b?Reb?
"d?JXd?
5e?nke?
@f?Ouf?
g?fJg?
~g?0
h?rKh?
~h?s
Ki?x~i?
8k?Kkk?
k?P&l?
zm?!~m?
_n?`gn?
=o?v?o?
Fo?wTo?|jo?
+p?^Ap?X`p?
"r?[Pr?
Es?3Ds?3Hs?
Ss?Cgs?
t?8#t?
=t?Oat?
u?E v?t
5v?bOv?
=w?Elw?
ew?~ew?
x?.-x?
y?z6y?
-y?G:y?
Gz?x[z?
3{?S={?
k{?k
z|?*z|?x
}?8+}?
R}?5B}?i8}?p6}?A=}?%M}?
e}?7
I~?|7~?
5~?TK~?
z~?Pm~?hh~?Ul~?^y~?*
~?^y~?Ul~?hh~?Pm~?
i~?TK~?
*~?|7~?
e}?%M}?A=}?p6}?i8}?5B}?
R}?8+}?
|?*z|?
*|?g
O{?S={?
xz?x[z?
Oy?G:y?
-y?z6y?*
Lx?.-x?
x?F
lw?~ew?
ew?Elw?
=w?M
qv?bOv?
$v?a
v?E v?
Cu?o
t?Oat?
=t?8#t?H
s?Cgs?
Ss?3Hs?3Ds?
r?[Pr?
"r?o
p?X`p?^Ap?
o?|jo?wTo?
Fo?v?o?
vn?`gn?
m?!~m?
Cm?O
Wl?P&l?
k?Kkk?
i?x~i?
~h?rKh?
~g?fJg?A
f?Ouf?
e?nke?
d?JXd?
Dc?e
pb?Reb?
(b?G
}a?gfa?
Ia?`a?
`?h|`?2\`?
$`?-
7_?T
^? X^?
.^?x
]?A[]??*]?<
\?fe\?(,\?
}[?Cn[?(/[?
]Z?nHZ?G8Z?
Y?6`Y?
?W?W?
tV?!4V?>
U?\uU?7XU?
AU?[.U?:
OT?Q*T?
S?gcS?
jQ?0QQ?X<Q?<
ZP?i4P?
fO?~0O?
}M?Z]M?
BM?U,M?C
J?g|J?
dJ?)!J?
zI?~QI?/I?a
wH?I@H?
G?KG?$G?
xF?\UF?
7F?G
2E?C
hD?>)D?Q
C?coC?
PC?+6C?^
B?2yB?
9A?s
@?2}@?
^=?+B=?
<?ZO<?5#<?C
8;?M
v:?-U:?
9?Wv9?
8?[i8?0(8?9
c7?yA7?
,6?F
O5?^
o4?vG4?4$4?
|3?JA3?
3?s
r2?B,2?t
1?jy1?
h/?dG/?
-?5f-?'$-?!
,?|Y,?
+?GM+?-
*?qu*?p.*?D
z)?@J)?
(?[N(?
6'?i
&?mp&?:&?
N%?u
f$?x;$?
#?Kg#?
L"?v
N!??
^ ?o
~>^?~>ab}>
x>YWx>
jt>9
s>Sor>*
Co>_
h>agg>2
e>k"e>
b>TLb>
7]>w
X><7X>,
8Q>J
O>;(O>AcN>S
cJ>W
pE>U
D>9HC>
W?>s
=>of<>
y:>W
9>:[8>7
6>"S6>c
N0>[
/>3V.>
e*>g
K=X"I=
>G=/,E=*$C=
K==Wg;=
R*=Qy(=
w`<-
jE<`
><s68<
}$<G
;tOv;
\;(BC;
:N*=:
P:D{Z:#
C;qqE;#TG;sCI;y@K;
_;$:a;
k;L{m;=7o;H
t;EYv;
w;>~y;]
|;$R{;
4w;%~v;s
 u;a=t;
cs;Y
q;~Sp;
n;0)m;
Ta;vz`;
^;f(^;
r];N
7[;OaZ;=
U;[1T;&\S;i
L;<OK;K
I;M"I;.CH;VmG;
C;t=B;:lA;
?;@%?;
W;;H
I8;~
5;e'5;wX4;
b1;H
?.;R
q%;+
^t:@
k:fci:%5g:w
.`:.
[:D6Y:
H:oBF:
k2:R0:
s':MH%:
qs9-
nV9}?O9N
19)V*9
o6MX
6{}99
5:Jdc:
X;aue;
<cA#<
&<:L*<
-<6g1<
8<gI<<
R<.iV<
]<Zna<
"=<8$=
N)=K
c7=X
M;=r
==z^?=
zC= 
F=+fG=
J=:YK=
cO=F
)R=D
U=ZxV=n
\=6b]=
b=?Jd=
e=[%g=>
n==p=vq=
r=UJt=
z=rz{=
>\Z >
%>!2&>
)>N**>
>->v
->Zs.>f
$0>t
0>UI1>
5>F(6>I
39>s
\:>/
^=>u
JA>Y
A>"xB>I
D>\uE>
F>LTG>
J>QYK>+
^N>m
.R>q
U>V@V>
V>@{W>
\>3M]>
`>0ha>
b>jMc>
f>fGg>
h>Oji>
&j>s
n>Pko>
uq>U)r>V
Wt>L
w>ivx>q
vz>U%{>
|>zB}>-
7 ?[g ?
-!?+a!?
?"?P{"?m
5$?g$?
%?@#&?
'?K?'?yn'?s
*?NG*?
+??1+?
+?a7,?
p,?L
%-?e-?
$/?wY/?
?0?Q}0?U
(1?sU1?
B2?!v2?
4?^K4?
5?^*6?.b6?
Q7?m
8?O@8?Nn8?
9?<49?
:?'Q:?
:?N";?
6<?0j<?
=?|H=?K
}>?t
b??e
7@?5q@?p
'A?7OA?
wA?u
$B?%SB?>
C?=UC?4
D?.BD?hiD?7
E?j:E?
hE?k
/F?~fF?
H?UCH?)pH?
jI? 
QJ?'wJ?
jK?"
EM?-iM?
VN?1
O?XHO?D~O?
O?W)P?VLP?
oP?z
Q?_3Q?
UR?Z
S?hBS?
eS?L
W?q?W?
>X?!vX?
Y?TAY?
FZ?'xZ?
R\?`}\?
_?%$`?
x`?%
 a?zGa?lpa?_
c?(9c?
!d?GOd?
fe?t
;f?Tff?
f?q!g?
8g?_Pg?Iig?
 h?@Eh?slh?
Ki?:ai?
j?v=j?Faj?$
k?r1k?
$l?mDl?
fl?^
m?@0m?>]m?
n?n4n?uUn?
o?{Co?TTo?
,p?/Np?
qp?~
q?/!q?H1q?
Bq?2Uq?wiq?
xr?x
,s?uBs?
Zs?_us?
t?l>t?
qt?K~t?I
9v?/Mv?tbv?
yv?S
w?O0w?cTw?
\w?Afw?
x?l#x?fAx?#ax?d
-y?yEy?
_y?D|y?c
z?Oz?
*z?v=z?
){?A8{?
I{?\{?"q{?B
|?/*|?Q9|?
^|?os|?
}?#/}?
6~?&O~?
G~?CF~?#F~?
G~?kK~?
n~?&}~?e
~?,w~?
\~?zR~?
C~?jG~?
7}?&#}?<
{|?uc|?
M|?:|?x(|?
y?(xy?
jw?BZw?
)w?f w?
wv?F[v?
xt?Qdt?^Rt?
Bt?#3t?j%t?
s?A_s?
?s?,"s?
zr?&lr?{Br?
q?jjq?YMq?V2q?K
p?Ayp?&Op?
o?Cxo?
n?2hn?
=n?x
hm?kLm?
l?Lfl?
:l?u
|k?\k?
i?4{i?
6i?q
h?lxh?
?e?}
d?4~d?D]d?
 d?r
ec?4c?B
2b?Z
a?<pa?
`?`V`?
_?jc_?
A_?# _?b
"^?0
]?Hd]?
[?7x[?}D[?
Z?n^Z?
6Z?G
Y?r`Y?
DW?+
U?[xU?
EU?m
lS?'2S?#
'R?1
P?UqP?
N?6kN?
@N?K
wG?pNG?
F?iWF?
D?@aD?
5D?3
0B?/
A?NkA?)=A?
}??.D??8??
>?bn>?
<>?o>?2
R<?w
k;?a6;?d
:?"n:?
\9?R
d8?:+8?<
7?cT7?
6?@a6?w
5?$Z5?@
e3?r43?
1?(N1?
j0?z50?V
,.?{
-?t-?
*,?V
*?`D*?8
)?KU)?6
G(?;
'?FV'?
%?If%?
.%?@
%$?$
!?zm!?N6!?
&v>mBu>a`t>
.n>q7m>
Cl>.Sk>-fj>z|i>
~b>T
.[> KZ> jY>h
U>gET>
M>U/L>_QK>
uJ>}
:>V:9>
e8>S
"3>PC2>
f1>*
s&>y
wl=
'^=zD[=
}J=v
E=!HB=
:=SF7=ph4=}
}&=R
Os<C
%;Q5
9.._9
GX:Nbh:
Nx:a
0;pQ4;_
j;j]m;
z;I4};
X<=
<C/
"<de"<
"<V/#<
g#<B
I$<-
2%<Fo%<
i&<.
,(<z_(<
G+<As+<
+<.,,<
-<j--<
N-<|p-<6
'.<~O.<
x.<s
{/<]
10<zS0<
v0<P
1<X/1<
E1<:]1<
u1<d
D2</S2<~b2<
r2<b
$3<_-3<
i3<Rx3<x
m3<dc3<
R3<sL3<@G3<9C3<?@3<0>3<
<3<-<3<6(3<
2<'{2<
51<d
\0<A>0<0!0<!
/<&w/<1d/<~R/<
$/<C
q.<4V.<
$.<;
-<Vm-<
*-<Q
@,<N,,<y
I+<]++<+
g*<[S*<0@*<%
r(<NK(<
$(<n
'<Sw'<
;'<@ '<
h&<SA&<
$<Cw$<
z"<.Q"<{)"<
:!<|
P<i3<
~;3$~;
tw;F
Rv;E
9u;N
)t;T
"s;w
q;0$q;9
p;\(p;
m;\Cm;Y
+l;<
f;0]f;+
3e;W
b;2tb;W
ga;p
^;_;^;
[;qQ[;'
T;|.T;
;P;g
M;wlL;
K;b5K;
J;^sI;
G;27G;
?;y5?;
<;mq<;
8;DV8;
'7;l
5;?n5;*
*;'k*;_
+(; 
#;'K#;
 ;An ;
+;L
n:x!l:
d:^xa:
W:9~T:
Q: dO:
=:^q;:
?2:c
}+:n;):
P":~
9VV~9
1l9L
P9WIG9
y07:
G7ho^7
.8Q;38
t8$^y8
~8id
.94
Y%8;
0123456789abcdef
/Library/Audio/Tunings/Generic/AU
%NSt3__112bad_weak_ptrE
:St19bad_optional_access
tcvtN5caulk19bad_expected_accessIiEE
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
U1(\Q
mSx@
b}$l
~)p$w
11eU%
z^KD
N5caulk19bad_expected_accessIvEE
L>33
@^y7
?PQ 
?m^e
?Qt
?DFB
?Ht2
%^Nx
?n;\
?O0q
EZY.
?N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_16bad_lexical_castEEEEE
St8bad_cast
iRR?
}&@<
d_>"
>7Rv
>7o|
K:DO
:Ps:?M
tS?Uw
\?^t
j?G"
x(n?
.q?:Z
t??
<\qq
D5}?R
M7$=
M7$=
D5}?R
<\qq
t??
.q?:Z
x(n?
j?G"
\?^t
tS?Uw
:Ps:?M
>7o|
>7Rv
d_>"
P\';%m
;rQy
;RIq
;-Bi
<;7Y
6~<<
Q<741
2GE<
.<IK
U>?|_
7>f37>
>5a[>
=%E?</
U>v2
=2GE
L^>}
e>ml
741?
4l>W>
19?nmq>
r=6~<
;7Y?4
yx>{
-Bi?M
RIq?
rQy?
e<.b
m;>a
/>CN
=P\'
xfuaverdlppa
xfuasondlppa
mk?R
LQ?f
>St16invalid_argument
main
.?+L+?|
T>ocC>
0 >^
=F^V=A
=F^V=<
1>ocC>
Yf>g
'?+L+?l
4A?v
I?XsL?
;T?%
Y?Lo[?
r?yxs?h
Fw?Rex?Ppy?
K{?a
gz?Ppy?Rex?
Fw?D
t?yxs?
[m?7
]?Lo[?
O?XsL?
Q>fZ]>3
@ ?Q
A?DeG?
VM?+]S?
zY?\
gz?Mex??
v?qxs?
&8?!
1?$L+?
w>W 
$?%L+?"
>>?~
p?qxs??
v?Mex?
gz?\
~?\`
gz?Mex??
v?pxs?
&8?!
1?#L+?
%/1A[_amsw
 ' ) - 3 G M Q _ c e i w } 
!5!A!I!O!Y![!_!s!}!
"!"%"+"1"9"K"O"c"g"s"u"
#'#)#/#3#5#E#Q#S#Y#c#k#
$)$=$A$C$M$_$g$k$y$}$
%'%1%=%C%K%O%s%
&'&)&5&;&?&K&S&Y&e&i&o&{&
'5'7'M'S'U'_'k'm's'w'
(!(1(=(?(I(Q([(](a(g(u(
)!)#)?)G)])e)i)o)u)
*%*/*O*U*_*e*k*m*s*
+'+1+3+=+?+K+O+U+i+m+o+{+
,#,/,5,9,A,W,Y,i,w,
-;-C-I-M-a-e-q-
.%.-.3.7.9.?.W.[.o.y.
/'/)/A/E/K/M/Q/W/o/u/}/
0#0)070;0U0Y0[0g0q0y0}0
1!1'1-191C1E1K1]1a1g1m1s1
2)252Y2]2c2k2o2u2w2{2
3%3+3/353A3G3[3_3g3k3s3y3
474E4U4W4c4i4m4
5-535;5A5Q5e5o5q5w5{5}5
6#6165676;6M6O6S6Y6a6k6m6
7?7E7I7O7]7a7u7
8!83858A8G8K8S8W8_8e8o8q8}8
9#9%9)9/9=9A9M9[9k9y9}9
:':+:1:K:Q:[:c:g:m:y:
;!;#;-;9;E;S;Y;_;q;{;
<)<5<C<O<S<[<e<k<q<
=!=-=3=7=?=C=o=s=u=y={=
>#>)>/>3>A>W>c>e>w>
?7?;?=?A?Y?_?e?g?y?}?
@!@%@+@1@?@C@E@]@a@g@m@
A!A3A5A;A?AYAeAkAwA{A
B#B)B/BCBSBUB[BaBsB}B
C%C'C3C7C9COCWCiC
D#D)D;D?DEDKDQDSDYDeDoD
E+E1EAEIESEUEaEwE}E
F%F'F3F9F=FCFEF]FyF{F
G#G)G/G5G9GKGMGQG]GoGqG}G
H1H=HGHUHYH[HkHmHyH
I+I7I=IEIUIcIiImIsI
J#J9JAJEJWJ]JkJ}J
K%K1K;KCKIKYKeKmKwK
L!L-L3LKLULWLaLgLsLyL
M'M)M/M3MAMQMYMeMkM
N+N5N7N=NONSN_NgNyN
O%O-O?OIOcOgOmOuO{O
P)P5P?PEPGPSPqPwP
Q#Q%Q5QGQIQqQyQ
R'RCRERKRaRmRsR
S#SASESGSKS]ScS
T5T7T;TATITSTUT_TaTkTmTqT
U'U+U9U=UOUQU[UcUgUoUyU
V#V/V3V9V?VKVMV]V_VkVqVuV
W#WGWMW_WaWmWwW}W
X'X+X-XUX[X]XmXoXsX{X
Y!YEYKYMYWY]YuY{Y
Z)Z/Z;ZMZ[ZgZwZ
[%[+[=[I[K[g[y[
\)\/\3\9\G\K\M\Q\o\u\w\}\
]1]=]A]G]O]U][]e]g]m]y]
^!^'^+^-^1^9^E^I^W^i^s^u^
_'_3_5_;_G_W_]_c_e_w_{_
`#`/`7`S`_`e`k`s`y`
a-a9aKaUaWa[aoaya
b!b'b;bAbKbQbSb_beb
c/cAcCcOc_cgcmcqcwc}c
d!d'd+d9dCdIdOd]dgdud
e!e/e9e?eKeMeSeWe_eqe}e
f)f1f;fAfGfMf[fafsf}f
g'g1g7g?gEgQg[gogyg
h-h9h;h?hEhKhMhWhYh]hchihkhqh
i)i/iCiGiIiOieikiqi
j+j7j=jKjgjijuj{j
k#k'k-k9kAkWkYk_kuk
l)l+l1l5lUlYl[l_lelglslwl}l
m%m'm+m1m9m?mOm]mamsm{m
n)n3n;nEnunwn{n
o/o=oMoSoaoeoyo}o
p'p3p9pOpQpWpcpupyp
q!q3qQqYq]q_qcqiq
r%r/r;rCrUrgrqrwr
s!s+s=sWs[sas
t-t9t?tAt]tkt{t
u%u;u=uMu_ukuwu
v!v-v3v=v?vUvcvivovsv
w!w-w5wAwKwYw]w_wqw
x%x+x5x=xSxYxaxmxwxyx
y%y+y9y?yKyWy]ygyiysy
z#z'z-zKzWzYz_zeziz}z
{+{5{7{;{O{U{_{q{w{
|1|7|I|g|i|s|
}3}9};}?}E}M}S}Y}c}u}w}
~)~+~/~5~A~C~G~U~a~g~k~q~s~y~}~
tFBn
i9Bc
}BG\
i9Bn
.e'OhbBj7)A
UA-f
[#`A
AnA/
Bg}\B
2gMB
\-Cd
ElB0@
Ak!C
@C>IB,
XBTf
(RA)
9'Ab?.Bm
BeM,
XA'r
@;O@BXk1BL_E
&w5B
C6c1C
|AMn
^ByD
 hW@p
a.ZB(r
/By 
@nm/B
fVCBZ
-C|t
BB_.?
MSB3
!B^@
G%AnntBO
mB!-
(Bxq
B3L_
C#j&C
KM%C
AM4BR
? Cj
3OB)
%9BB
,B'o
B1O6A
@k6B
B{O|B
+A:I
.FB,SX@-yRB
phARpo@
QcBDP
"BNR
yA#^ B['%B
B[Up
;Bk3
i=1BV#
,Cic
vB9h<A
1C\s
12'A
j(C/
:BAy
Bdw0
l`BBO
@Cr0
mB1HD
;B/?aB
3BCT
t&|@
:HA!
OB:,Y
}">A
tBJ"[@
e:Ao8;B
FAbT
g>9s
B-R C
ukBqh
MB=l
V}ArF
wBl_
Kf$C
C":/
.CBSN
0 CL
ih0C
}}AD
B^j4Bx
B/OzB1
2CVB
Cj.'
>ZA_
%fI{
]A<D
{AB>r
>@7P
A+60B
N_B$
B\Y6
]chB
@M[GAIt
E_@u
K\B
#Ako
A*o
,3B?
? BI
sBB4
TBF2PB
FOBl
B*miB^
#C:#
%*Chg
_-C+
e1CF
b(Ca63C
hA&N
BE,
BO:+B+
SB*UoBc
LeBG
rEAQ
@5azA
dUB0
#B<7
hY@[L
 BMkRBV
$B(\QB5
vB85zBNumB
=B$=&B
,:A`
A!AdA(
@2SCA3
%AA]-
;<BJ
tBC]vB@
kB.'eB
[dBX
=Bu.vB9w
8%Cj
_-C|
P$-C4
Cj[(C
_@(C
3C8k'
A+!7A
"B:`
|B_~WB
y?[z.A
4BQ$^B
@H\TA
;Bg^
wB$,{B
MLB6g*B
lRAV
#\)ACB
WsAyp
Bp0'B
g*B9
+B{T8B@
QBhaMB
(_.A?}
M;BE
tNBF
CsQ+C
81C6[!C
P1C?
"C'*,CV
}.CL
'C#;1C
)AEg
B6x"B% /B
OIA{
&ABB
UB4$OB
B*O=B
qXBx<lB
A^:=A
B*a?BW[hB
G8B 
A;m BU
AcL$B
:A3Q
Bo"XB
_BRk4B
BW>.B
nKB_
%?8JJA
-A?S
eCA[
Az8.Ap
59AqA
tkA@
+@~
B)'%B
X>B}
%7BXV
#gB(
nB<}fB
KqBd
~ZBF
_uB,
&CaD3C
Cg&!C
1Cg&'C
$C!3.C
~ CO
.Cl-'C
)$A.
@5J^
@zxXAs
@GLzA;|
cXAD?c@
z?FC0AcM
0BQ-
AEBf
1}B!
GB]%$B
Ak0WA4
GB}y#B
p7@L}\A#8
J<BU
)B~<
RAnq9@
 %BN
2hBV
J:BO1HBZ
7B+Q B&
Q#Bi@
2ASK
Am7DA
oA7Db@
y+Bk
<Bzt9B
U9BVa=Br
m@B1;TB}
^B:eeB(
^BR?bB^F[B}BDB
R5oAu
wBA=
~BSI
~UB|l@B
,1Br
'B;OgB
.C3e
C/K,C
0C1+!C
x/C-d-
s#C8
CL8'C
/CbQ&C
CE~#CwI-C
K3,C(
6m/C
Ye@@
Q&AQ
\ADV
B3B3
<B,.=B
3BSd B&D
cBu]_B
RAhr
@m}r
+B*
BA}sB/
\B7s:B
AadB
m/BoaSB
KwB{5
BLP^B
y;BG
fBGbBB{*!B
eKAdC{@
@.QjA
BNx(B#
=xAY;
,B%\RBI6vBH`
>B%8
BOAU
DBK\cB
wBI+
g"Br
t^B$BMBDB3B
]4BCu6B
L&8?.
At#\A
AN<#A
|@+E
A g3A
9A}.*
A0UdA-
B'W B]
TBHHVB
3#B9
SBM|\B
dB_{oB
ExBB
{B=<
TlB}
oBE}
$CXx
D/C7
C7E$C
-Cq`%C3*
/Cek0
R.C'
A&3NAF
Byg(Bb
tfA`
8KBdmaB
tBw]aB
?A}}
.uB=
|Ay$
BaS2B
$A"t
v!B;3DB
`~B<
GkB"
kBQ)NB
h/B2U
@FdVA[r
\4BI
,?BH
c/AY
`JAN
`8AP
@pF!A
a\Ag
@,(|An0
2Qx@X
,BA@5Bdh6B;
*B;X
ta?e /
.BnJ8B
VBiPXB
>B|JOB
"xBZ
N}Bc
tBkX_B
-B,O
B.(YB
U:B5Y
C\|/CO
`+C.
F/CG
*C(B C4
C_9'C>
+CBY#C~7
~&CS+/CaY0
 C=r$C
:E2CVI)CY(C8^+C'
3Cv~0
 se@
(Y@ 
WsAm
Q@vC
Z!Bx
,Ban>B
tA.:
SB9geB
BMV%B"
BB}5]B
0B_,
/4Bd
RB@MsB
iwBn
WBHi8B
f\ARt
BY~%Bi
B'p`B
BB"\%B1@
@3>mA
@@v_A
BEu>B
Q^Be/vB
zVB!\9Bpk
:B3RJB
\^Aq
@H}gA&
?A=t
Aib^AX
DA)B
2Av-IA
@?nC>w
TcA
AX["?
*Br'3B
49B i>B
>"B[
GAj$
ssBS
B&[sB
#(CVR
\r0C&/%C
V!C0
pV0C.M)C
"C8s
"C"T)C
h1CH
}?2C#;+C(
32C4
?@=,
!RA-m
p?A~d
d;/?
8!BVM
w@AF
BhG%BC
MBY@
_B=GtB
_yB/
t%BS`
5BrkPBW
|B:G
SBux:B
aB J}Bd
bBf
5BUh
$4B
B,ReBb
&B'L
D7@n
GAV
1B+CSB6
QBmlB
fmB|
9@6B)A
!\Bk
g(BC;
A}vWAH
nAjY
B I!BS
?:A=$
8@cS{
m@2"
'@5zJA
0B/.5B
@<B!
61Bb
HB8,OBU
ZZB7
Bt!4B
hdBd
c~B&*zB
kgB*lzB
A1[j
x/An
0Cv2"
3Cy0'
-Cpq"C
P?/C
%Ciz
+C%#$C;
["Ci
!^-C
CW(!C
mP.C
Cfv!C 
$C&-+CY
AEv]A
Ar{ZA
TBJD
$BYn1B
4B2e&B
QB#GDBD
`]AO
T1B
BcF-B3HFB
]BD%rB
eBXILB
A3gDA
6B9Z
1Bx3LB6GgB
t2BCX
2Bf4
2B'FMBmahBrB
OBBU
$B>s
BA[j
@0#CA^
fTB?
SSB0X:B
?}Ae
qB;<\B
JBO(8B
s@t".Al
HgB`
LBeh<Bl
A4HAuu
DBc_IBL
fB1c
4(Bt[(B
qAn/
@tK;A
R~?8
gA-'
s~A=
XAH<
+B";-B
H"B8
<B}^FB
LHB|
AB7Z7B
?Rd\A
ueB#pcB5
A0V B
JB\AZB
|yBkPsB
'oB=
1M/A\
/B\rQB
{B,^
BtDsB
CP$!C=
C4q#C
G6,C
a+C-
C\~C
HCo_
\&CT
L,C^X$CjX
-1CIo.
( Cda#C0X)C
y+CY
GP.C^2,C
AOfoA
!A_.
-%B~P6B
.GBI
OfAmj
T1B#
.WBlxdB
w_B,
.Bcx
@VeGA
\Bl%qB
!ANmh@
C{Bq
X{BE@fB
5NBS~5Bp!
m9BMbTB
qhBC
NBNJ6BqG
zBAI"
gB`cNBi
BTs2B
kBLw
G8Bnl
:AWc
A~`lA
>vBO
7Bz OBT@fB
 1B4
~eBC
YBmfGB
GBAu
cTBy[QB
5B9j4B
{mAix
Aur/@6Gh
*An+_A
(lAy
i#*@
A6EiA
 Ae|
@&BA
;BVu1B
B%L#BN
iYBe
g\Bl
c7B?
*7AA
]!B@FAB
~Ba%
RbBv
`jB2
PA/{h
Pa*C
C']2
!+Cq/
3C`2 C
Cf6$C
$C!}.C
%C|"
+CJQ3
N,Cz%&C
C-5%CR
&/CT
4L2C
aAg/
(@yF
-kAK
@LsFA
AHr-A
h,O?
3!B>
8BOX8Bor6B
@=n6?
9BG[IB
?SB\
.9B#
@Hn>A
UBAdeB
^A2j
+B/BBe
<oBC
[BA-CB
@%$ZA
B[H7B
nB.gTB~M<B
$B"lB
-BGGIB-
eB";
A-LzA=
A8uA
B\Y#B}
nUBc#;B
BUH2B
0L@r
cB`Z{B
AB1ZAO
7BCNOB2
|B/~
4B'l
~A+c
>IAQG
$AVO
 B3e0Bv
QEBO
SA{+
MBw
A-4HA
2c}@cf
?~A4
~z;W
?A9J\A(NMA'
Sj+@
@RS3A
A|rB9
A0@ZAl
k2B1K4B1
AX78A
<Be6$B%
:YBR
cBY~eBo
^B/KOBk
>![Ay
BRA,B
/yBh
bB$jHB
9Aa0
/Bm~MB/
rB82
nB|cWB
cBB]
AeN0B
^B,`|B
C?W'C
23C,=%C
#CM#,C
4-C4%$C
BG1C
CO_CY
dy/CbC*C
(Cn).C
'CP2!C
R*CoN0CD82
Z|w@
F?e?
]A?*
@lXGA
1}A@j
|6B1F4B
(B{q
M@BZfLBL
NB%1HB
AX$yA{
z?B^
8bBw
UBtyDB
q1BXQ
<W@<
}A0V
Q[B!
BX~B
PB3,6B
A'nuA
M@](
BR`sB
Bak)B-
\B]MwB_
BQEoB
UB^/=Br
tA`k
*B![CB
|*Ae
BCAmBX2SB
9B_[
A`[kA)
[An&
AkLbA
KA@l
JcB>ZyB
dB(eNB1':B.
!B%k
;{BuA
oBCbeB
BMg*B
;B0uMB&VXB
J4A6
KA<k
Nc@qxb
{AZ|`A,
|]J@E
<N5boost9exceptionE
St12domain_error
?/';
 9j*
!H"H
VrH-
GRty
]kK"
Z?Lq
NSt3__112system_errorE
St12out_of_range
N5ausdk11AUExceptionE
12CAXException
St12length_error
St11logic_error
11CAException
St14overflow_error
St13runtime_error
3$_0
St9bad_alloc
St9exception
D333333
?ffffff
>xfuamsvfxoba
mcpl
mcpl,
33s?33s?33
33s?
 Afff?
qerf)
mcpl
 C333?
@fff?
mcpl
?xmuamed3lppa
xfuasiovlppa
xfuamndllppa
xfuaalislppa
xfuactlglppa
xfuamlpslppa
xfuarocxlppa
xfuasiovlppa
xfuasmpsxoba
xfualescxoba
xfuaxmcsxoba
xfuawsapxoba
xfuaxtapxoba
mcpl)
@-&*@
@@5a
OKKYj
Ro T
yDr9t?_
 Afff?
xfuatennlppa
xfuasondlppa
xfuaverdlppa
42ovciov
?fff?
xfuaavnnlppa
q=J?
0t
!(h
!(h
<\
(h
0X
0X
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Rule]
CASuperBowl
failed to convert "
" to four character code
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Database_Parser]
allocator<const T>::allocate(size_t n) 'n' exceeds maximum supported size
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_Audio_Injector_Factory.cpp
/tmp/
v%u.%s
vp.inject.
iiii.000.
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Injector]
I/O node audio injectors are enabled
I/O node audio injectors are disabled
microphone port type for audio injectors is %s (%s)
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Wired]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Microphone_Bluetooth_HFP]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Bluetooth_LE_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::TTY_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::USB_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Input_Port_Type::Car_Play_Main_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Input_Port_Type)128]
reference port type for audio injectors is %s (%s)
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Line_Out]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headphones_Wired]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headset_Bluetooth_HFP]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Headphones_Bluetooth_A2DP]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Receiver_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::HAC_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Speaker_Built_In]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::TTY_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::USB_Audio_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Bluetooth_LE_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Display_Port]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::HDMI]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Air_Play_Screen]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Air_Play_Music]
std::string_view vp::reflect_value_name() [V = vp::vx::Output_Port_Type::Car_Play_Main_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Output_Port_Type)128]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Injector_Factory]
com.apple.coreaudio.VoiceProcessor (messenger)
Carrier
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
operator()
base64_from_binary.hpp
t < 64
false
AUNBandEQ_FilterType
AUNBandEQ_FilterFrequency
AUNBandEQ_FilterGain
AUNBandEQ_FilterBandwidth
DSP_Settings_EQ_Override
gain
noise suppression
speaker calibration
IO_SAMPLE_RATE
IO_BLOCK_SIZE
_INPUT
_SAMPLE_RATE
_CHANNEL_COUNT
_OUTPUT
FFT_BLOCK_SIZE
com.apple.coreaudio
VoiceProcessor
type
message
file
function
line
status
std::string_view vp::reflect_type_name() [T = std::exception]
std::string_view vp::reflect_type_name() [T = DSPGraph::Exception]
assert_invariant
json.hpp
m_type != value_t::object or m_value.object != nullptr
m_type != value_t::array or m_value.array != nullptr
m_type != value_t::string or m_value.string != nullptr
m_type != value_t::binary or m_value.binary != nullptr
[json.exception.
cannot use operator[] with a string argument with 
type_error
null
object
array
string
boolean
binary
discarded
number
uplink
downlink
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Issue_Detector]
std::string_view vp::reflect_type_name() [T = vp::Audio_File]
Could not construct
version
subtype
manufacturer
data
????
Float32
Int16
Fixed8.24
Float64
Int32
, interleaved
, deinterleaved
%2u ch, %6.0f Hz, %s%s
%2u ch, %6.0f Hz, 'freq'
%2u ch, %6.0f Hz
%2u ch, %6.0f Hz, %s (0x%08X) 
 big-endian
 little-endian
 signed
 unsigned
integer
float
%spacked in %u bytes
 high-aligned
 low-aligned
%u.%u
%s-bit%s%s %s%s%s%s%s
from %u-bit source, 
from UNKNOWN source bit depth, 
%u frames/packet
%u bits/channel, %u bytes/packet, %u frames/packet, %u bytes/frame
Bypass
Enable Acoustic Gain Control
Request Metadata
Mute Uplink Output
Disable
Microphone Trim Gains
Reference Trim Gains
Micriphone DSP Settings
Reference DSP Settings
Beam Direction
Hardware Has Voice Processor
Driver Processing Mode
Enable Tap Stream
Mute Downlink Voice Input
Max Far End Voice Frames
Speaker Input Data Source IDs
Hardware Volume (dB)
Thermal Budget
Speaker Calibration Data
Codec Type
Codec Sample Rate
Reporter IDs
A/B Helper Uplink Chain State
A/B Helper Downlink Chain State
Spatial Metadata
Spatial Head Tracking Configuration
Enable Media Chat
Enable Spatial Chat
Enable Media Playback on External Device
Muted Activity Event Listener
Mix Stereo To Mono
Unknown
Operation Mode
Generic Call
Baseband Call
FaceTime Video Call
GameChat Call
FaceTime Audio Call
Continuity Call
WiFi Call
HomeKit Call
Half-Duplex Call
Uknown Call
Chat Flavor
Default Mode
Music Mode
Voice Isolation Mode
Uknown
std::string_view vp::reflect_type_name() [T = vp::decorators::Xcode_Instruments]
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor_Interface_Adapter]
~shared_spin_lock
shared_spin_lock.h
m_state == state_t{}
unlock
result == true
microphone input sample rate %f is not supported
microphone input channel count is zero
microphone input block size is zero
microphone input port types array is null
microphone input port types array is empty
reference input sample rate %f is not supported
reference input channel count is zero
reference input block size is zero
reference input port types array is null
reference input port types array is empty
failed to begin uplink initialization
failed to set microphone stream format
failed to set microphone block size
failed to set microphone port type
failed to set microphone device ID
failed to set reference stream format
failed to set reference block size
failed to set reference port type
failed to set reference device ID
bad argument
bad frame count
bad property ID
bad property read
bad property
DSP error
configuration fault
I/O fault
state fault
not implemented
not supported
unknown
exception filter caught unexpected exception
output sample rate %f is not supported
output channel count is zero
failed to set uplink client near end voice output stream format
failed to end uplink initialization
hardware mix output sample rate %f is not supported
hardware mix output block size is zero
far end voice input callback is null
failed to begin downlink initialization
failed to set hardware mix output stream format
failed to set hardware mix output block size
failed to set client far end voice input stream format
failed to set client far end voice input block
failed to end downlink initialization
speaker telemetry input sample rate %f is not supported
speaker telemetry input channel count is zero
speaker telemetry input block size is zero
failed to set downlink speaker telemetry input stream format
failed to set downlink speaker telemetry input block size
unlock_shared
expected_state.m_reader_count > 0
expected_state.m_writer_count == 0
uplink microphone input audio buffer list is null
uplink client output audio buffer list is null
failed to write uplink microphone input signal
failed to run uplink DSP
failed to read uplink client output signal
downlink hardware output audio buffer list is null
failed to write downlink default audio input signal
failed to write downlink system audio input signal
failed to write downlink other audio input signal
failed to run downlink DSP
failed to read downlink hardware output signal
failed to write uplink hardware DSP reference input signal
uplink reference input audio buffer list is null
audio buffer list is null
microphone audio buffer list is null
microphone audio time stamp is null
frame count is zero
vector.hpp
this->m_holder.m_size >= n
insert
this->priv_in_range_or_end(pos)
priv_forward_range_insert
this->m_holder.capacity() >= this->m_holder.m_size
get_next_capacity, allocator's max_size reached
flat_map::at key not found
database.v([1-9][0-9]*).([0-9]+).([a-z]+)
assertion failure: audio issue detector service must be nonnull
assertion failure: audio issue detector service client must be nonnull
assertion failure: input node index is out of range
assertion failure: output node index is out of range
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Downlink_Far_End_Voice_Input]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Downlink_Output]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Uplink_Hardware_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::services::Audio_Issue_Detector_Node_ID::Uplink_Output]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::services::Audio_Issue_Detector_Node_ID)128]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Issue_Detector::Node_Decorator_Factory]
get DSP parameter
set DSP parameter
get DSP property info
get DSP property
set DSP property
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/dsp/Graph.cpp
get required input frame count
get expected output frame count
process
reset
connect
disconnect
failed to %s due to unknown exception
failed to %s due to DSPGraph exception
VPTRPBAudioUnitType
VPTRPBAudioUnitSubType
VPTRPBAudioUnitManufacturer
DSPGraph Configuration
unknown exception
DSPGraph exception
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::File_Manager]
vp_ref_stream_format
vp_ref_block_size
vp_ref_port_type
vp_ref_port_sub_type
vp_ref_port_endpoint_type
vp_ref_port_is_Apple_bluetooth_product
vp_mic_stream_format
vp_mic_block_size
vp_mic_port_type
vp_mic_uplink_output_stream_format
vp_enable_acoustic_gain_control
vp_hardware_mix_output_stream_format
vp_hardware_mix_output_block_size
vp_mic_downlink_input_stream_format
vp_operation_mode
vp_codec_type
vp_codec_sample_rate
vp_bypass
vp_disable
vp_hardware_has_vp
vp_tap_stream_enabled
vp_media_chat_enabled
vp_spatial_chat_enabled
vp_chat_flavor
vp_stereo_to_mono_mix_enabled
vp_media_playback_on_external_device_enabled
vp_config_operation_mode
vp_config_input_port
vp_config_output_port
vp_config_ref_subport
vp_config_primary_vocoder
vp_config_primary_vocoderFs
vp_mix_stereo_to_mono
vp_spatial_head_tracking_enabled
vp_spatial_head_tracking_mode
vp_route_duration_ms
vp_route_change_duration_ms
default
voice isolation
music
deallocate
cpp_allocator.h
len <= max_size()
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Statistics]
caulk::pmr::polymorphic_allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
std::string_view vp::reflect_type_name() [T = vp::decorators::AB_Helper]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Property_Exchange.cpp
property exchange failed to allocate property 
property exchange does not support property 
assertion failure: application bundle ID state must be set
assertion failure: bypass state must be set
assertion failure: media handoff state must be set
assertion failure: supported chat flavors state must be set
assertion failure: control center service is null
assertion failure: preferred chat flavor is invalid
std::string_view vp::reflect_type_name() [T = vp::vx::Control_Center_Manager]
is not
cannot create object from initializer list
cannot use operator[] with a numeric argument with 
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Standard]
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Wide_Spectrum]
std::string_view vp::reflect_value_name() [V = vp::vx::Chat_Flavor::Voice_Isolation]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Chat_Flavor)128]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Smart_Cover_Detector]
valid
invalid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Personal_Audio_Command]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Personal_Audio_Command_Factory]
assertion failure: audio ring buffer storage is null
assertion failure: audio ring buffer storage offset underflow occurred
assertion failure: audio ring buffer storage offset overflow occurred
hwmic
hwref
epmic
epref
epout
tsmic
tsref
ulout
dlfev
dloau
dlsso
dlvio
sptel
dlout
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Capturer]
invalid data structure header
invalid data structure size
struct parser read overflow
trim_gain_db
assertion failure: volume limit dBA target must be strictly positive
assertion failure: I/O node must support real-time property control
assertion failure: settings manager must be non-null
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Volume_Limit_Delegate]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Volume_Limit_Delegate_Factory]
{%s}
find global configuration
find uplink configuration
find downlink configuration
find uplink DSP node configuration
find uplink DSP node configuration options
find downlink DSP node configuration
find downlink DSP node configuration options
operation_mode
chat_flavor
input_port_type
output_port_type
output_port_sub_type_4cc
output_port_sub_type_legacy
output_port_endpoint_type_4cc
output_port_endpoint_type_legacy
output_port_is_apple_bluetooth_product
output_port_is_not_apple_bluetooth_product
spatial_chat_is_enabled
spatial_chat_is_not_enabled
spatial_headtracking_is_enabled
spatial_headtracking_is_not_enabled
media_chat_is_enabled
media_chat_is_not_enabled
media_playback_on_external_device_is_enabled
media_playback_on_external_device_is_not_enabled
stereo_to_mono_mix_is_enabled
stereo_to_mono_mix_is_not_enabled
voice_processing_is_bypassed
voice_processing_is_not_bypassed
voice_processing_is_disabled
voice_processing_is_not_disabled
voice_processing_is_done_in_hardware
voice_processing_is_not_done_in_hardware
spatial_mode
hardware_mic_input_channel_count
hardware_ref_input_channel_count
client_nev_output_channel_count
client_fev_input_channel_count
hardware_mix_output_channel_count
vocoder_sample_rate
vocoder_type
tap_stream_is_enabled
tap_stream_is_not_enabled
match
match_all
match_any
when
when_not
then
else
load_plist
load
load_global
Global
load_uplink
load_downlink
override_plist
replace_strings
replace_input_port_type_4cc
input_port_type_legacy
replace_output_port_type_4cc
output_port_type_legacy
replace_output_sub_type_4cc
replace_output_endpoint_type_4cc
" : 
DictionaryRef_iterator iterator out of range.
Error, not a json style CFDictionary
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Database]
get_decimal_point
lexer.hpp
loc != nullptr
invalid BOM; must be 0xEF 0xBB 0xBF if given
invalid literal
unget
not token_string.empty()
scan_literal
std::char_traits<char_type>::to_char_type(current) == literal_text[0]
scan_string
current == '\"'
invalid string: missing closing quote
invalid string: '\u' must be followed by 4 hex digits
invalid string: surrogate U+D800..U+DBFF must be followed by U+DC00..U+DFFF
invalid string: surrogate U+DC00..U+DFFF must follow U+D800..U+DBFF
0x00 <= codepoint and codepoint <= 0x10FFFF
invalid string: forbidden character after backslash
invalid string: control character U+0000 (NUL) must be escaped to \u0000
invalid string: control character U+0001 (SOH) must be escaped to \u0001
invalid string: control character U+0002 (STX) must be escaped to \u0002
invalid string: control character U+0003 (ETX) must be escaped to \u0003
invalid string: control character U+0004 (EOT) must be escaped to \u0004
invalid string: control character U+0005 (ENQ) must be escaped to \u0005
invalid string: control character U+0006 (ACK) must be escaped to \u0006
invalid string: control character U+0007 (BEL) must be escaped to \u0007
invalid string: control character U+0008 (BS) must be escaped to \u0008 or \b
invalid string: control character U+0009 (HT) must be escaped to \u0009 or \t
invalid string: control character U+000A (LF) must be escaped to \u000A or \n
invalid string: control character U+000B (VT) must be escaped to \u000B
invalid string: control character U+000C (FF) must be escaped to \u000C or \f
invalid string: control character U+000D (CR) must be escaped to \u000D or \r
invalid string: control character U+000E (SO) must be escaped to \u000E
invalid string: control character U+000F (SI) must be escaped to \u000F
invalid string: control character U+0010 (DLE) must be escaped to \u0010
invalid string: control character U+0011 (DC1) must be escaped to \u0011
invalid string: control character U+0012 (DC2) must be escaped to \u0012
invalid string: control character U+0013 (DC3) must be escaped to \u0013
invalid string: control character U+0014 (DC4) must be escaped to \u0014
invalid string: control character U+0015 (NAK) must be escaped to \u0015
invalid string: control character U+0016 (SYN) must be escaped to \u0016
invalid string: control character U+0017 (ETB) must be escaped to \u0017
invalid string: control character U+0018 (CAN) must be escaped to \u0018
invalid string: control character U+0019 (EM) must be escaped to \u0019
invalid string: control character U+001A (SUB) must be escaped to \u001A
invalid string: control character U+001B (ESC) must be escaped to \u001B
invalid string: control character U+001C (FS) must be escaped to \u001C
invalid string: control character U+001D (GS) must be escaped to \u001D
invalid string: control character U+001E (RS) must be escaped to \u001E
invalid string: control character U+001F (US) must be escaped to \u001F
invalid string: ill-formed UTF-8 byte
get_codepoint
current == 'u'
0x0000 <= codepoint and codepoint <= 0xFFFF
next_byte_in_range
ranges.size() == 2 or ranges.size() == 4 or ranges.size() == 6
scan_number
invalid number; expected digit after '-'
invalid number; expected digit after '.'
invalid number; expected '+', '-', or digit after exponent
invalid number; expected digit after exponent sign
endptr == token_buffer.data() + token_buffer.size()
value
object key
object separator
number overflow parsing '
sax_parse_internal
parser.hpp
not states.empty()
excessive object size: 
handle_value
json_sax.hpp
not keep_stack.empty()
ref_stack.back()->is_array() or ref_stack.back()->is_object()
not key_keep_stack.empty()
object_element
end_object
not ref_stack.empty()
iter_impl
iter_impl.hpp
m_object != nullptr
set_begin
cannot compare iterators of different containers
operator==
invalid_iterator
set_end
operator->
m_it.object_iterator != m_object->m_value.object->end()
m_it.array_iterator != m_object->m_value.array->end()
cannot get value
iterator does not fit current value
iterator out of range
cannot use erase() with 
operator++
excessive array size: 
end_array
out_of_range
parse_error
<U+%.4X>
parse error
 at line 
, column 
syntax error 
while parsing 
; last read: '
unexpected 
; expected 
<uninitialized>
true literal
false literal
null literal
string literal
number literal
<parse error>
end of input
'[', '{', or a literal
unknown token
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Node.cpp
audio buffer list pointer is null
audio time stamp pointer is null
, and 
audio frame count is zero
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_CPU_Profiler_Factory.cpp
%Y%m%d.%H%M%S
.CPUProfile.json
CPUCycleCount
CPUInstructionCount
Mean
Count
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_CPU_Profiler]
I/O node CPU profilers are enabled
I/O node CPU profilers are disabled
file_text
std::string_view vp::reflect_type_name() [T = vp::vx::dsp::Graph_Compiler]
vp.%Y%m%d.%H%M%S
.%03u
vp.%Y%m%d.%H%M%S.xxx.props.bin
vp.%Y%m%d.%H%M%S.xxx.times.bin
SpatialMode
HeadTracking
std::string_view vp::reflect_type_name() [T = vp::vx::components::Property_List_Writer]
File Name Prefix
failed to write %s to property list
file name prefix
Process Call Count
'Process' call count
AppendRefSignal Call Count
'AppendReferenceSignal' call count
ProcessDL Call Count
'ProcessDownlinkAudio' call count
%f, %f, %llu
MIC Overload
uplink microphone overload message
REF Overload
uplink reference overload message
SPKR TEL Overload
downlink speaker telemetry overload message
DLP Overload
downlink overload message
HW REF Format
uplink reference input format
HW REF Block Size
uplink reference input block size
Ref Port Types
uplink reference port types
Ref Port #0 Subtype
reference port sub-type
Ref Port #0 EndpointType
reference port endpoint type
HW REF Trim Gains
uplink reference trim gains
Telephony REF DSP Settings
custom reference DSP settings
HW REF Device Sample Rate
reference device sample rate (Hz)
HW MIC Format
uplink microphone input format
HW MIC Block Size
uplink microphone input block size
Mic Port Types
uplink microphone port types
HW MIC Trim Gains
uplink microphone trim gains
Telephony Mic DSP Settings
custom microphone DSP settings
HW MIC Device Sample Rate
microphone device sample rate (Hz)
HW MIC Presentation Latency
microphone input latency
HW MIC Safety Offset
microphone input safety offset
HW REF Input Latency
reference input latency
HW REF Input Safety Offset
reference input safety offset
HW REF Presentation Latency
reference output latency
HW REF Safety Offset
reference output safety offset
VP Output Format
uplink client output format
MaxNumOutPkts
maximum number of uplink client output packets
MaxOutPktByteSize
maximum byte size of uplink client output packets
Enable AGC
DL MIX Format
downlink mix output format
DL MIX Block Size
downlink mix output block size
DL FEV Format
downlink far-end-voice input format
DL Volume
downlink volume
Hardware Volume
hardware volume (dB)
Preprocessing input gain
pre-processing input gain
VP Mode
VoiceProcessor operation mode
Telephony Vocoder Type
codec type
Telephony Vocoder Sample Rate
codec sample rate
Bypass VP
Disable VP
beam direction
SPKR TEL Format
downlink speaker telemetry input format
SPKR TEL Block Size
downlink speaker telemetry input block size
Speaker Input Data Source
speaker telemetry input data source IDs
HW Has VP
Device Orientation
device orientation
CA Orientation
UI orientation
IO Cycle Usage
I/O cycle usage
HW REF Tap Stream Enabled
Mute Output
Mute Downlink Voice
Power Budget settings
CPMS budget
speaker calibration data
chat flavor
FaceTime spatial metadata
Media Chat Volume
media chat volume
spatial head-tracking configuration
Product
product
Acoustic ID
acoustic ID
HW Layout ID
hardware layout ID
assertion failure: audio buffer mixer must have non-zero input buffer count
assertion failure: audio buffer mixer must have non-zero output buffer count
assertion failure: audio buffer mixer must have non-zero maximum block size
assertion failure: audio buffer storage is null
assertion failure: node must be non-null
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Node_Socket.cpp
failed to allocate audio buffer for 
 with 
 format 
 and size 
 terminal index 
 must be less than 
I/O frame count must be nonzero
cannot construct frame count with sample time diff of 
 samples
close
not close
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor_State_Manager]
std::string_view vp::reflect_type_name() [T = vp::vx::components::Phone_Proximity_Detector]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/nodes/Far_End_Voice_Proc_Node.cpp
far end voice callback failed with status 
std::string_view vp::reflect_type_name() [T = vp::vx::components::Speech_Activity_Event_Listener]
v12@?0i8
std::string_view vp::reflect_type_name() [T = vp::vx::database::v1::Data_Manager]
Settings
ClientIOSampleRatePreference
SupportedChatFlavors
AudioBufferFadingIsEnabled
Standard
Voice_Isolation
Wide_Spectrum
expected "Standard", "Voice_Isolation", or "Wide_Spectrum" at "%s"
ReferenceSourceType
MicHardwareInputLatencyCompensationIsEnabled
MicHardwareInputSafetyOffsetCompensationIsEnabled
RefHardwareInputLatencyCompensationIsEnabled
RefHardwareInputSafetyOffsetCompensationIsEnabled
RefHardwareOutputLatencyCompensationIsEnabled
RefHardwareOutputLatencyCorrectionIsEnabled
RefHardwareOutputSafetyOffsetCompensationIsEnabled
RefHardwareOutputSafetyOffsetCorrectionIsEnabled
RefPhyiscalStreamLatencyIsEnabled
RefAudioRingBufferCapacityMilliseconds
MicRefTimeDelayMilliseconds
MicRefTimeDelayMillisecondsMin
MicRefTimeDelayMillisecondsMax
MicRefLatencyCompensationSamplesLUT
SampleRateConversionAlgorithm
SampleRateConversionQuality
Default
External
Internal
expected "Default", "External", or "Internal" at "%s"
Latency
SampleRate
HardwareDSPNodeHasIVDataInput
VolumeRange_dB
Nodes
DSPGraphFilePath
DSPGraphMacros
DSPGraphPropertyStripFilePath
DSPGraphPropertyStripFilePaths
DSPGraphAUStripFilePath
DSPGraphAUStripFilePaths
DSPGraphPropertyStripOverrideFilePath
DSPGraphPropertyStripOverrideFilePaths
DSPGraphParameterValues
DSPGraphPropertyValues
ShouldEnableLatencyCompensation
PreferredSampleRateHz
MinBlockDurationSeconds
MaxBlockDurationSeconds
PreferredBlockDurationSeconds
MinFFTBlockDurationSeconds
MaxFFTBlockDurationSeconds
DSPGraphInputChannelCounts
DSPGraphOutputChannelCounts
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Generic]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Baseband_Call]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Face_Time_Video]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Game_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Face_Time_Audio]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Call_Continuity]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Wifi_Call]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Home_Kit]
std::string_view vp::reflect_value_name() [V = vp::vx::Operation_Mode::Half_Duplex]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Operation_Mode)128]
assertion failure: failed to allocate input port's audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/ports/Audio_Ring_Buffer_Port.cpp
failed to write into audio ring buffer
requested data is ahead of available audio time range
requested data is behind of available audio time range
failed to read from audio ring buffer
Could not find item
assertion failure: failed to allocate audio converter
assertion failure: failed to allocate source audio buffer
assertion failure: failed to allocate destination audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/wires/Audio_Converter_Wire.cpp
failed to write into destination audio ring buffer
 because audio converter failed to render with status 
failed to write into source audio buffer
failed to read from destination audio ring buffer
assertion failure: failed to calculate required number of input frames
assertion failure: failed to calculate expected number of output frames
failed to set audio converter SRC complexity to 
 with status 
failed to set audio converter SRC quality to 
audio converter failed pre-flight operation with status 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Parameter_Exchange.cpp
parameter exchange failed to allocate parameter 
parameter exchange does not support parameter 
missing object at '%s'
expected dictionary at '%s'
assertion failure: block state must be valid
added
removed
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Speech_Activity_Event_Listener]
speech activity detection %s disabled and reset on unmute
should be
should not be
echo DSP mic input
echo DSP ref input
echo DSP mic clip data input
content DSP mic input
hardware DSP mic output
hardware DSP ref output
hardware DSP mic clip data output
echo DSP mic output
content DSP client output
hardware DSP output
fixed
variable
input
output
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Port_Factory]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Hardware_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Hardware_DSP_Ref_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Ref_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Echo_DSP_Mic_Clip_Data_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Input_Port_ID::Content_DSP_Mic_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Input_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_Default_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_System_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Dynamics_DSP_Other_Audio_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Input_Port_ID::Hardware_DSP_Speaker_Telemetry_Input]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Input_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Mic_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Ref_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Hardware_DSP_Mic_Clip_Data_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Echo_DSP_Mic_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_Output_Port_ID::Content_DSP_Client_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_Output_Port_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_Output_Port_ID::Hardware_DSP_Output]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)1]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)2]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_Output_Port_ID)128]
%s port is %s
enabled
disabled
%s port I/O block size is %u
%s port I/O format is %s
non-PCM audio formats are not supported
fixed-point audio formats are not supported
F%u@%.0f/%X,%u%s
%02u. %s
%.*g
bad lexical cast: source type value could not be interpreted as target
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Port.cpp
assertion failure: state manager must be non-null
assertion failure: state observer must be non-null
assertion failure: state owner must be non-null
std::string_view vp::reflect_type_name() [T = vp::vx::components::CPU_Profiler]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/Graph.cpp
assertion failure: node factory object must be nonnull
assertion failure: node decorator factory object must be nonnull
assertion failure: node delegate factory object must be nonnull
assertion failure: node command factory object must be nonnull
assertion failure: port factory object must be nonnull
assertion failure: port decorator factory object must be nonnull
assertion failure: wire factory object must be nonnull
assertion failure: wire decorator factory object must be nonnull
v16@?0Q8
assertion failure: decorator factory cannot return null I/O node instances!
]=>T[
]=>P[
 terminal 
 of node 
 has format 
 while node has format 
 is not connected
parameter 
 has 
 conflicting producers
property 
priv_insert
this->priv_in_range_or_end(p)
uninitialized_copy_n_and_update
advanced_insert_int.hpp
n == 1
copy_n_and_update
std::string_view vp::reflect_type_name() [T = vp::vx::io::Graph]
insert_unique
flat_tree.hpp
this->priv_in_range_or_end(hint)
std::string_view vp::reflect_type_name() [T = vp::vx::io::Graph_Builder]
priv_destroy_last_n
n <= this->m_holder.m_size
std::string_view vp::reflect_type_name() [T = vp::vx::components::Wireless_Charging_Detector]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_ExpanseAGC_Adaptive_Control_Delegate]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Hardware]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Echo]
std::string_view vp::reflect_value_name() [V = vp::vx::Uplink_DSP_Node_ID::Content]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)3]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Uplink_DSP_Node_ID)128]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Voice_Mix]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Voice]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Dynamics]
std::string_view vp::reflect_value_name() [V = vp::vx::Downlink_DSP_Node_ID::Hardware]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)4]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)5]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)6]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)7]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)8]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)9]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)10]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)11]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)12]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)13]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Downlink_DSP_Node_ID)128]
std::string_view vp::reflect_type_name() [T = vp::vx::DSP_Node_Factory]
.dspg
.propstrip
.austrip
.propstrip (override)
%s configuration is %s
cannot use push_back() with 
%s I/O block size is %u
%s I/O block size is %s
%s FFT block size is %u
%s I/O sample rate is %f
%s input '%s' format is %s
%s output '%s' format is %s
%s parameter %s override is %s
%s property %s override is %s
%s audio recorders are %s
%s AUPB is %s
connected
disconnected
%s RPB is %s
%s sample rate conversion algorithm is %u
%s sample rate conversion quality is %u
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Far_End_Voice_Proc_Node_Factory]
far-end-voice "proc" I/O block is %p
far-end-voice "proc" max I/O block size is %u
far-end-voice "proc" I/O format is %s
assertion failure: failed to allocate microphone signal audio ring buffer
assertion failure: failed to allocate reference signal audio ring buffer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/nodes/Mic_Ref_Sync_Node.cpp
frame count 
 is larger than 
maximum allowed block size
input data size 
 does not match 
expected data size 
output data size 
microphone input sample time is not valid
reference input sample time is not valid
unknown I/O error has occurred
std::string_view vp::reflect_type_name() [T = vp::vx::components::Audio_Injector]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Wire_Factory]
std::string_view vp::reflect_value_name() [V = vp::Domain::Uplink]
std::string_view vp::reflect_value_name() [V = vp::Domain::Downlink]
std::string_view vp::reflect_value_name() [V = (vp::Domain)2]
std::string_view vp::reflect_value_name() [V = (vp::Domain)3]
std::string_view vp::reflect_value_name() [V = (vp::Domain)4]
std::string_view vp::reflect_value_name() [V = (vp::Domain)5]
std::string_view vp::reflect_value_name() [V = (vp::Domain)6]
std::string_view vp::reflect_value_name() [V = (vp::Domain)7]
std::string_view vp::reflect_value_name() [V = (vp::Domain)8]
std::string_view vp::reflect_value_name() [V = (vp::Domain)9]
std::string_view vp::reflect_value_name() [V = (vp::Domain)10]
std::string_view vp::reflect_value_name() [V = (vp::Domain)11]
std::string_view vp::reflect_value_name() [V = (vp::Domain)12]
std::string_view vp::reflect_value_name() [V = (vp::Domain)13]
std::string_view vp::reflect_value_name() [V = (vp::Domain)14]
std::string_view vp::reflect_value_name() [V = (vp::Domain)15]
std::string_view vp::reflect_value_name() [V = (vp::Domain)16]
std::string_view vp::reflect_value_name() [V = (vp::Domain)17]
std::string_view vp::reflect_value_name() [V = (vp::Domain)18]
std::string_view vp::reflect_value_name() [V = (vp::Domain)19]
std::string_view vp::reflect_value_name() [V = (vp::Domain)20]
std::string_view vp::reflect_value_name() [V = (vp::Domain)21]
std::string_view vp::reflect_value_name() [V = (vp::Domain)22]
std::string_view vp::reflect_value_name() [V = (vp::Domain)23]
std::string_view vp::reflect_value_name() [V = (vp::Domain)24]
std::string_view vp::reflect_value_name() [V = (vp::Domain)25]
std::string_view vp::reflect_value_name() [V = (vp::Domain)26]
std::string_view vp::reflect_value_name() [V = (vp::Domain)27]
std::string_view vp::reflect_value_name() [V = (vp::Domain)28]
std::string_view vp::reflect_value_name() [V = (vp::Domain)29]
std::string_view vp::reflect_value_name() [V = (vp::Domain)30]
std::string_view vp::reflect_value_name() [V = (vp::Domain)31]
std::string_view vp::reflect_value_name() [V = (vp::Domain)32]
std::string_view vp::reflect_value_name() [V = (vp::Domain)33]
std::string_view vp::reflect_value_name() [V = (vp::Domain)34]
std::string_view vp::reflect_value_name() [V = (vp::Domain)35]
std::string_view vp::reflect_value_name() [V = (vp::Domain)36]
std::string_view vp::reflect_value_name() [V = (vp::Domain)37]
std::string_view vp::reflect_value_name() [V = (vp::Domain)38]
std::string_view vp::reflect_value_name() [V = (vp::Domain)39]
std::string_view vp::reflect_value_name() [V = (vp::Domain)40]
std::string_view vp::reflect_value_name() [V = (vp::Domain)41]
std::string_view vp::reflect_value_name() [V = (vp::Domain)42]
std::string_view vp::reflect_value_name() [V = (vp::Domain)43]
std::string_view vp::reflect_value_name() [V = (vp::Domain)44]
std::string_view vp::reflect_value_name() [V = (vp::Domain)45]
std::string_view vp::reflect_value_name() [V = (vp::Domain)46]
std::string_view vp::reflect_value_name() [V = (vp::Domain)47]
std::string_view vp::reflect_value_name() [V = (vp::Domain)48]
std::string_view vp::reflect_value_name() [V = (vp::Domain)49]
std::string_view vp::reflect_value_name() [V = (vp::Domain)50]
std::string_view vp::reflect_value_name() [V = (vp::Domain)51]
std::string_view vp::reflect_value_name() [V = (vp::Domain)52]
std::string_view vp::reflect_value_name() [V = (vp::Domain)53]
std::string_view vp::reflect_value_name() [V = (vp::Domain)54]
std::string_view vp::reflect_value_name() [V = (vp::Domain)55]
std::string_view vp::reflect_value_name() [V = (vp::Domain)56]
std::string_view vp::reflect_value_name() [V = (vp::Domain)57]
std::string_view vp::reflect_value_name() [V = (vp::Domain)58]
std::string_view vp::reflect_value_name() [V = (vp::Domain)59]
std::string_view vp::reflect_value_name() [V = (vp::Domain)60]
std::string_view vp::reflect_value_name() [V = (vp::Domain)61]
std::string_view vp::reflect_value_name() [V = (vp::Domain)62]
std::string_view vp::reflect_value_name() [V = (vp::Domain)63]
std::string_view vp::reflect_value_name() [V = (vp::Domain)64]
std::string_view vp::reflect_value_name() [V = (vp::Domain)65]
std::string_view vp::reflect_value_name() [V = (vp::Domain)66]
std::string_view vp::reflect_value_name() [V = (vp::Domain)67]
std::string_view vp::reflect_value_name() [V = (vp::Domain)68]
std::string_view vp::reflect_value_name() [V = (vp::Domain)69]
std::string_view vp::reflect_value_name() [V = (vp::Domain)70]
std::string_view vp::reflect_value_name() [V = (vp::Domain)71]
std::string_view vp::reflect_value_name() [V = (vp::Domain)72]
std::string_view vp::reflect_value_name() [V = (vp::Domain)73]
std::string_view vp::reflect_value_name() [V = (vp::Domain)74]
std::string_view vp::reflect_value_name() [V = (vp::Domain)75]
std::string_view vp::reflect_value_name() [V = (vp::Domain)76]
std::string_view vp::reflect_value_name() [V = (vp::Domain)77]
std::string_view vp::reflect_value_name() [V = (vp::Domain)78]
std::string_view vp::reflect_value_name() [V = (vp::Domain)79]
std::string_view vp::reflect_value_name() [V = (vp::Domain)80]
std::string_view vp::reflect_value_name() [V = (vp::Domain)81]
std::string_view vp::reflect_value_name() [V = (vp::Domain)82]
std::string_view vp::reflect_value_name() [V = (vp::Domain)83]
std::string_view vp::reflect_value_name() [V = (vp::Domain)84]
std::string_view vp::reflect_value_name() [V = (vp::Domain)85]
std::string_view vp::reflect_value_name() [V = (vp::Domain)86]
std::string_view vp::reflect_value_name() [V = (vp::Domain)87]
std::string_view vp::reflect_value_name() [V = (vp::Domain)88]
std::string_view vp::reflect_value_name() [V = (vp::Domain)89]
std::string_view vp::reflect_value_name() [V = (vp::Domain)90]
std::string_view vp::reflect_value_name() [V = (vp::Domain)91]
std::string_view vp::reflect_value_name() [V = (vp::Domain)92]
std::string_view vp::reflect_value_name() [V = (vp::Domain)93]
std::string_view vp::reflect_value_name() [V = (vp::Domain)94]
std::string_view vp::reflect_value_name() [V = (vp::Domain)95]
std::string_view vp::reflect_value_name() [V = (vp::Domain)96]
std::string_view vp::reflect_value_name() [V = (vp::Domain)97]
std::string_view vp::reflect_value_name() [V = (vp::Domain)98]
std::string_view vp::reflect_value_name() [V = (vp::Domain)99]
std::string_view vp::reflect_value_name() [V = (vp::Domain)100]
std::string_view vp::reflect_value_name() [V = (vp::Domain)101]
std::string_view vp::reflect_value_name() [V = (vp::Domain)102]
std::string_view vp::reflect_value_name() [V = (vp::Domain)103]
std::string_view vp::reflect_value_name() [V = (vp::Domain)104]
std::string_view vp::reflect_value_name() [V = (vp::Domain)105]
std::string_view vp::reflect_value_name() [V = (vp::Domain)106]
std::string_view vp::reflect_value_name() [V = (vp::Domain)107]
std::string_view vp::reflect_value_name() [V = (vp::Domain)108]
std::string_view vp::reflect_value_name() [V = (vp::Domain)109]
std::string_view vp::reflect_value_name() [V = (vp::Domain)110]
std::string_view vp::reflect_value_name() [V = (vp::Domain)111]
std::string_view vp::reflect_value_name() [V = (vp::Domain)112]
std::string_view vp::reflect_value_name() [V = (vp::Domain)113]
std::string_view vp::reflect_value_name() [V = (vp::Domain)114]
std::string_view vp::reflect_value_name() [V = (vp::Domain)115]
std::string_view vp::reflect_value_name() [V = (vp::Domain)116]
std::string_view vp::reflect_value_name() [V = (vp::Domain)117]
std::string_view vp::reflect_value_name() [V = (vp::Domain)118]
std::string_view vp::reflect_value_name() [V = (vp::Domain)119]
std::string_view vp::reflect_value_name() [V = (vp::Domain)120]
std::string_view vp::reflect_value_name() [V = (vp::Domain)121]
std::string_view vp::reflect_value_name() [V = (vp::Domain)122]
std::string_view vp::reflect_value_name() [V = (vp::Domain)123]
std::string_view vp::reflect_value_name() [V = (vp::Domain)124]
std::string_view vp::reflect_value_name() [V = (vp::Domain)125]
std::string_view vp::reflect_value_name() [V = (vp::Domain)126]
std::string_view vp::reflect_value_name() [V = (vp::Domain)127]
std::string_view vp::reflect_value_name() [V = (vp::Domain)128]
I/O wire sample rate conversion algorithm is %u
I/O wire sample rate conversion quality is %u
I/O wire storage capacity is %lld milliseconds
assertion failure: messenger must be non-null
assertion failure: service must be non-null
assertion failure: period must be positive
assertion failure: I/O node must support real-time parameter control
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Power_Log_Delegate]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/IO_Node_Audio_Capturer_Factory.cpp
%03u
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Capturer]
I/O node audio captures are enabled
I/O node audio captures are disabled
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Node_Audio_Capturer_Factory]
assertion failure: orientation service is null
std::string_view vp::reflect_type_name() [T = vp::vx::Orientation_Manager]
enable DSP graph audio recorders
configure DSP graph
set property strip on DSP graph
file_path
set AU strip on DSP graph
set property strip override on DSP graph
set DSP graph parameter
parameter
set DSP graph property
property
initialize DSP graph
Tuning Resources Path
Absolute '.dspg' File Path
Literal '.dspg' Text
Absolute '.austrip' File Paths
Absolute '.propstrip' File Paths
Block Size
Block Size Policy
Fixed
Variable
Variable (Pull)
Variable (Push)
Parameters
Properties
SRC Algorithm
SRC Quality
Enable Audio Recorders
Enable Latency Compensation
Connect AUPB
Connect RPB
context
exception
/AppleInternal/Library/BuildRoots/63e787c1-19d2-11ed-9ec1-96898e02b808/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.0.Internal.sdk/System/Library/PrivateFrameworks/AudioToolboxCore.framework/PrivateHeaders/DSPGraph_Box.h
Box::out inIndex out of range! box %s has %zu outputs but input %u was requested
Box::in inIndex out of range! box %s has %zu inputs but input %u was requested
std::string_view vp::reflect_type_name() [T = vp::vx::dsp::Graph_Builder]
%Y%m%d.%H%M%S.
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/vp/vx/io/ports/Audio_Buffer_Port.cpp
input data frame count 
 is larger than input port's audio buffer capacity 
audio time stamp does not have valid sample time
failed to copy input data
failed to zero-out audio buffer list
process frame count 
requested read time range [
 is ahead of available time range [
 is behind of available time range [
audio buffer lists buffer counts don't match
audio buffer list channel counts don't match
output data frame count 
 is larger than output port's audio buffer capacity 
failed to copy output data
create state
find and retain state
retain state
release state
auto-release state
get state value
set state value
create state transaction
release state transaction
register listener
unregister listener
register state observer
unregister state observer
std::string_view vp::reflect_type_name() [T = vp::vx::data_flow::Engine]
commit state transaction
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Parameter_Setter_Delegate]
assertion failure: parameter state must be valid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Parameter_Setter_Command]
Mic_Ref_Sync
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Mic_Ref_Sync_Node_Factory]
"mic-ref-sync" I/O block size is %u
"mic-ref-sync" microphone I/O format is %s
"mic-ref-sync" reference I/O format is %s
"mic-ref-sync" time delta is %d samples
"mic-ref-sync" reference audio ring buffer capacity is %lld milliseconds
std::string_view vp::reflect_type_name() [T = vp::vx::data_flow::State_Manager]
.caf
.wav
v8@?0
/usr/local/lib/libAudioDiagnostics.dylib
NewAudioCapturerImpl
assertion failure: component must be non-null
set messenger
write uplink 
 input
write downlink 
assertion failure: failed to get buffered uplink content DSP output frame count
read uplink content DSP client output
create initialization counts
create control center manager
create orientation manager
create property states
create user defaults states
create configuration states
create tuning resource directory paths
create uplink I/O parameter setter commands
create I/O parameter setter delegates
create I/O property setter commands
create I/O property setter delegates
create I/O PowerLog.framework delegate
create I/O volume limit delegate
create I/O adaptive agc delegate
create I/O personal audio command
log configuration changes
update initialization counters
configure control center manager
UInt64
get buffered input frame count for uplink mic-ref "sync" node
process uplink "mic-ref-sync" DSP
get buffered input frame count for uplink hardware DSP node
process uplink hardware DSP
get buffered input frame count for uplink echo DSP node
get uplink echo DSP I/O block size
process uplink echo DSP
get buffered input frame count for uplink content DSP node
process uplink content DSP
reset uplink DSP
get downlink hardware DSP I/O block size
get buffered input frame count for downlink hardware DSP
get required input frame count for downlink hardware DSP
get buffered output frame count for downlink dynamics DSP
get required input frame count for downlink dynamics DSP
get buffered input frame count for downlink dynamics DSP
get frame deficit for downlink dynamics DSP
get buffered output frame count for downlink voice DSP
get required input frame count for downlink voice DSP
get buffered input frame count for downlink voice DSP
get frame count deficit for downlink voice DSP
get buffered output frame count for downlink voice mix DSP
get required input frame count for downlink voice mix DSP
get buffered input frame count for downlink voice mix DSP
get frame count deficit for downlink voice mix DSP
get buffered output frame count for downlink voice proc
process downlink voice proc
process downlink voice mix DSP
process downlink voice DSP
process downlink dynamics DSP
process downlink hardware DSP
reset downlink DSP
configuration context
global configuration
uplink configuration
uplink %s DSP configuration
uplink %s DSP configuration options
uplink SRC algorithm
uplink SRC quality
uplink wire storage capacity (milliseconds)
uplink mic-ref sample time delta
uplink mic-ref delay (milliseconds)
uplink ref audio ring buffer capacity (milliseconds)
downlink configuration
downlink %s DSP configuration
downlink %s DSP configuration options
downlink SRC algorithm
downlink SRC quality
downlink wire storage capacity (milliseconds)
downlink software volume pre-gain (dB)
spatial head-tracking mode
spatial head-tracking enabled
should use internal reference
enable graph audio recorders
connect to AUPB
connect to RPB
should fade audio buffers
register RPB server listener
unregister RPB server listener
connect RPB server
disconnect RPB server
com.apple.coreaudio.VoiceProcessor
hardware DSP mic input
hardware DSP ref input
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Unknown]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Allocation]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Frame_Count]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Data]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Direction]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Sample_Time]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Node_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Port_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Wire_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Terminal_Index]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Parameter_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Bad_Property_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Operation_Not_Implemented]
std::string_view vp::reflect_value_name() [V = vp::vx::io::Error_Code::Operation_Not_Supported]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)14]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)15]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)16]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)17]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)18]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)19]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)20]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)21]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)22]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)23]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)24]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)25]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)26]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)27]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)28]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)29]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)30]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)31]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)32]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)33]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)34]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)35]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)36]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)37]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)38]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)39]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)40]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)41]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)42]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)43]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)44]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)45]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)46]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)47]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)48]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)49]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)50]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)51]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)52]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)53]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)54]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)55]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)56]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)57]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)58]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)59]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)60]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)61]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)62]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)63]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)64]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)65]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)66]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)67]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)68]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)69]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)70]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)71]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)72]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::io::Error_Code)128]
string_view::substr
dynamics DSP default audio input
dynamics DSP system audio input
dynamics DSP other audio input
hardware DSP speaker telemetry input
hardware
echo
content
voice mix
voice
dynamics
%s use internal reference
should
should not
%s fade audio buffers
Data
Value
UInt32
InputMap
OutputMap
unordered_map::at: key not found
dump
serializer.hpp
i != val.m_value.object->cend()
std::next(i) == val.m_value.object->cend()
not val.m_value.array->empty()
"bytes": [
"subtype": 
{"bytes":[
],"subtype":
null}
true
<discarded>
\u%04x
\u%04x\u%04x
%.2X
invalid UTF-8 byte at index 
: 0x
dump_escaped
incomplete UTF-8 string; last byte: 0x
\ufffd
decode
index < 400
dump_integer
n_chars < number_buffer.size() - 1
to_chars
to_chars.hpp
std::isfinite(value)
last - first >= std::numeric_limits<FloatType>::max_digits10
len <= std::numeric_limits<FloatType>::max_digits10
last - first >= 2 + (-kMinExp - 1) + std::numeric_limits<FloatType>::max_digits10
last - first >= std::numeric_limits<FloatType>::max_digits10 + 6
grisu2
value > 0
compute_boundaries
normalize
x.f != 0
normalize_to
delta >= 0
((x.f << delta) >> delta) == x.f
m_plus.e == m_minus.e
m_plus.e == v.e
get_cached_power_for_binary_exponent
e >= -1500
e <= 1500
index >= 0
static_cast<std::size_t>(index) < kCachedPowers.size()
kAlpha <= cached.e + e + 64
kGamma >= cached.e + e + 64
grisu2_digit_gen
M_plus.e >= kAlpha
M_plus.e <= kGamma
p1 > 0
d <= 9
p2 > delta
p2 <= (std::numeric_limits<std::uint64_t>::max)() / 10
x.e == y.e
x.f >= y.f
grisu2_round
len >= 1
dist <= delta
rest <= delta
ten_k > 0
buf[len - 1] != '0'
format_buffer
min_exp < 0
max_exp > 0
k > n
append_exponent
e > -1000
e < 1000
std::string_view vp::reflect_type_name() [T = vp::vx::Voice_Processor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Bypass_Voice_Processing]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Disable_Voice_Processing]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Acoustic_Gain_Control]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mute_Uplink_Near_End_Voice_Output]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mute_Downlink_Far_End_Voice_Input]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Maximum_Number_Of_Uplink_Output_Frames]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Maximum_Number_Of_Far_End_Voice_Input_Frames]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Pre_Processing_Input_Gain_dB]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Port_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Physical_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Physical_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Input_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Hardware_Input_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Trim_Gains]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_Trim_Gains_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Mic_DSP_Settings]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Physical_Device_ID]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Input_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Input_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Output_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Output_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Output_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Hardware_Physical_Output_Safety_Offset]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Virtual_Audio_Stream_Physical_Stream_Latency]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Sub_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Endpoint_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Port_Is_Apple_Made_Bluetooth_Product]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Trim_Gains]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_Trim_Gains_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Ref_DSP_Settings]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Near_End_Voice_Output_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Far_End_Voice_Input_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Client_Far_End_Voice_Input_Block]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Mix_Output_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Mix_Output_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Beam_Direction]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Operation_Mode]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Chat_Flavor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Hardware_Has_Voice_Processor]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Tap_Stream_Enabled]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Downlink_Software_Volume]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Downlink_Hardware_Volume_dB]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Stream_Format]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Block_Size]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Telemetry_Input_Data_Source_IDs]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speaker_Calibration_Data_CF]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Codec_Type]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Codec_Sample_Rate]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::CPMS_Budget]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Metrics_Reporter_IDs]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::IO_Cycle_Usage]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Device_Orientation]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::UI_Orientation]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Spatial_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Spatial_Chat_Metadata]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Spatial_Chat_Head_Tracking_Configuration]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Media_Chat]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Software_Volume]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Action]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Level]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Ducking_Ramp_Time_In_Seconds]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Media_Chat_Unducking_Ramp_Time_In_Seconds]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Speech_Activity_Event_Listener_Block]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Stereo_To_Mono_Mix]
std::string_view vp::reflect_value_name() [V = vp::vx::Property_ID::Enable_Media_Playback_On_External_Device]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)73]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)74]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)75]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)76]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)77]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)78]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)79]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)80]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)81]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)82]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)83]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)84]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)85]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)86]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)87]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)88]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)89]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)90]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)91]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)92]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)93]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)94]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)95]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)96]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)97]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)98]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)99]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)100]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)101]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)102]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)103]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)104]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)105]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)106]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)107]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)108]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)109]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)110]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)111]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)112]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)113]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)114]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)115]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)116]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)117]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)118]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)119]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)120]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)121]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)122]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)123]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)124]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)125]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)126]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)127]
std::string_view vp::reflect_value_name() [V = (vp::vx::Property_ID)128]
bitset set argument out of range
(null)
Could not convert
vp_enable_debug_features
vp_enable_graph_audio_recorders
EnableTelephonyMonitor
EnableVPTelephonyMonitor
vp_enable_io_node_cpu_profilers
vp_disable_AUPB
vp_disable_RPB
assertion failure: failed to create uplink hardware DSP microphone input port factory
assertion failure: failed to create uplink hardware DSP reference input port factory
assertion failure: failed to create uplink mic-ref "sync" node factory
assertion failure: failed to create uplink hardware DSP node factory
mic_clip_data
assertion failure: failed to create uplink echo DSP node factory
assertion failure: failed to create uplink content DSP node factory
client
assertion failure: failed to create uplink content DSP client output port factory
assertion failure: failed to create downlink hardware DSP speaker telemetry input port
assertion failure: failed to create downlink hardware DSP node factory
iv_data
assertion failure: failed to create downlink hardware DSP output port
assertion failure: failed to create downlink dynamics DSP node factory
default_audio
system_audio
other_audio
assertion failure: failed to create downlink voice DSP node factory
assertion failure: failed to create downlink voice mix DSP node factory
assertion failure: failed to create downlink far end voice proc node factory
Generic
VPVX
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<unsigned int>]
assertion failure: property state must be valid
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<bool>]
std::string_view vp::reflect_type_name() [T = vp::vx::IO_Property_Setter_Command<applesauce::CF::DictionaryRef>]
HostApplicationDisplayID
com.apple.FaceTime
com.apple.facetime
bitset test argument out of range
Operating System
Operating System Release Type
AppleInternal Build
UI Build
Tuning Directory Path
Temporary Directory Path
Secret Directory Path
Hardware Model
Hardware Layout ID
Product Type
Audio Client
Hardware Microphone Input
Hardware Reference Input
Hardware Mix Output
Uplink
Downlink
Default Audio Output
System Audio Output
Other Audio Output
RGBRPBTerminalSubHostPeerUUIDString
Voice_Proc
RGBRPBTerminalSubHostPeerIndex
watchOS
tvOS
macOS
buffer error: text too long
growing buffer past SIZE_MAX
Resolve: pubID %s sysID %s
Resolve: pubID %s
Resolve: sysID %s
Resolve URI %s
XML_DEBUG_CATALOG
XML_CATALOG_FILES
file:///etc/xml/catalog
Adding document catalog %s
Local Resolve: pubID %s sysID %s
Local Resolve: pubID %s
Local Resolve: sysID %s
Free catalog entry %s
Free catalog entry
allocating catalog
allocating catalog entry
urn:publicid:
Public URN ID %s expanded to NULL
Public URN ID expanded to %s
System URN ID %s expanded to NULL
System URN ID expanded to %s
Found %s in file hash
%s not found in file hash
%s added to file hash
Failed to parse catalog %s
%d Parsing catalog %s
urn:oasis:names:tc:entity:xmlns:xml:catalog
prefer
system
public
Invalid value for prefer: '%s'
File %s is not an XML Catalog
group
publicId
systemId
rewriteSystem
systemIdStartString
rewritePrefix
delegatePublic
publicIdStartString
delegateSystem
rewriteURI
uriStartString
delegateURI
nextCatalog
%s entry lacks '%s'
Found %s: '%s' '%s'
Found %s: '%s'
%s entry '%s' broken ?: %s
Detected recursion in catalog %s
Found system match %s, using %s
Using rewriting rule %s
Trying system delegate %s
Found public match %s
Trying public delegate %s
URN ID %s expanded to NULL
URN ID expanded to %s
Found URI match %s
Trying URI delegate %s
ISO-10646-UCS-2
UCS-2
ISO-10646-UCS-4
ISO-8859-1
ISO-8859-2
ISO-8859-3
ISO-8859-4
ISO-8859-5
ISO-8859-6
ISO-8859-7
ISO-8859-8
ISO-8859-9
SHIFT_JIS
Shift-JIS
xmlNewCharEncodingHandler : no name !
xmlNewCharEncodingHandler : out of memory !
xmlInitCharEncodingHandlers : out of memory !
ASCII
US-ASCII
xmlRegisterCharEncodingHandler: NULL handler !
xmlRegisterCharEncodingHandler: Too many handler registered, see %s
MAX_ENCODING_HANDLERS
ebcdic
EBCDIC-US
IBM-037
SHIFT-JIS
ICU converter : problems with filters for '%s'
input conversion failed due to input error, bytes %s
xmlCharEncOutFunc: no output function !
&#%d;
output conversion failed due to conv error, bytes %s
xmlAddDtdEntity: document is NULL
xmlAddDtdEntity: document without external subset
xmlAddDocEntity: document is NULL
xmlAddDocEntity: document without internal subset
0123456789ABCDEF
xmlAddEntity: invalid redeclaration of predefined entity
xmlCreateEntity: malloc failed
xmlEncodeEntities: malloc failed
xmlEncodeEntities: input not UTF-8
xmlEncodeEntities: char out of range
&#x%X;
xmlEncodeEntities: realloc failed
xmlCopyEntity:: malloc failed
%s:%d: 
Entity: line %d: 
No error message provided
error: 
warning: 
validity error: 
validity warning: 
element %s: 
parser 
namespace 
validity 
HTML parser 
memory 
output 
I/O 
XInclude 
XPath 
regexp 
module 
Schemas validity 
Schemas parser 
Relax-NG parser 
Relax-NG validity 
Catalog 
C14N 
XSLT 
encoding 
schematron 
internal buffer 
URI 
warning : 
error : 
out of memory error
%s:%d: 
Entity: line %d: 
20913
HTML document creation failed
0x%02X 0x%02X 0x%02X 0x%02X
charset=
out of memory
nohref
compact
noresize
noshade
ismap
checked
readonly
declare
selected
defer
multiple
nowrap
quot
quotation mark = APL quote, U+0022 ISOnum
ampersand, U+0026 ISOnum
apos
single quote
less-than sign, U+003C ISOnum
greater-than sign, U+003E ISOnum
nbsp
no-break space = non-breaking space, U+00A0 ISOnum
iexcl
inverted exclamation mark, U+00A1 ISOnum
cent
cent sign, U+00A2 ISOnum
pound
pound sign, U+00A3 ISOnum
curren
currency sign, U+00A4 ISOnum
yen sign = yuan sign, U+00A5 ISOnum
brvbar
broken bar = broken vertical bar, U+00A6 ISOnum
sect
section sign, U+00A7 ISOnum
diaeresis = spacing diaeresis, U+00A8 ISOdia
copy
copyright sign, U+00A9 ISOnum
ordf
feminine ordinal indicator, U+00AA ISOnum
laquo
left-pointing double angle quotation mark = left pointing guillemet, U+00AB ISOnum
not sign, U+00AC ISOnum
soft hyphen = discretionary hyphen, U+00AD ISOnum
registered sign = registered trade mark sign, U+00AE ISOnum
macr
macron = spacing macron = overline = APL overbar, U+00AF ISOdia
degree sign, U+00B0 ISOnum
plusmn
plus-minus sign = plus-or-minus sign, U+00B1 ISOnum
sup2
superscript two = superscript digit two = squared, U+00B2 ISOnum
sup3
superscript three = superscript digit three = cubed, U+00B3 ISOnum
acute
acute accent = spacing acute, U+00B4 ISOdia
micro
micro sign, U+00B5 ISOnum
para
pilcrow sign = paragraph sign, U+00B6 ISOnum
middot
middle dot = Georgian comma Greek middle dot, U+00B7 ISOnum
cedil
cedilla = spacing cedilla, U+00B8 ISOdia
sup1
superscript one = superscript digit one, U+00B9 ISOnum
ordm
masculine ordinal indicator, U+00BA ISOnum
raquo
right-pointing double angle quotation mark right pointing guillemet, U+00BB ISOnum
frac14
vulgar fraction one quarter = fraction one quarter, U+00BC ISOnum
frac12
vulgar fraction one half = fraction one half, U+00BD ISOnum
frac34
vulgar fraction three quarters = fraction three quarters, U+00BE ISOnum
iquest
inverted question mark = turned question mark, U+00BF ISOnum
Agrave
latin capital letter A with grave = latin capital letter A grave, U+00C0 ISOlat1
Aacute
latin capital letter A with acute, U+00C1 ISOlat1
Acirc
latin capital letter A with circumflex, U+00C2 ISOlat1
Atilde
latin capital letter A with tilde, U+00C3 ISOlat1
Auml
latin capital letter A with diaeresis, U+00C4 ISOlat1
Aring
latin capital letter A with ring above = latin capital letter A ring, U+00C5 ISOlat1
AElig
latin capital letter AE = latin capital ligature AE, U+00C6 ISOlat1
Ccedil
latin capital letter C with cedilla, U+00C7 ISOlat1
Egrave
latin capital letter E with grave, U+00C8 ISOlat1
Eacute
latin capital letter E with acute, U+00C9 ISOlat1
Ecirc
latin capital letter E with circumflex, U+00CA ISOlat1
Euml
latin capital letter E with diaeresis, U+00CB ISOlat1
Igrave
latin capital letter I with grave, U+00CC ISOlat1
Iacute
latin capital letter I with acute, U+00CD ISOlat1
Icirc
latin capital letter I with circumflex, U+00CE ISOlat1
Iuml
latin capital letter I with diaeresis, U+00CF ISOlat1
latin capital letter ETH, U+00D0 ISOlat1
Ntilde
latin capital letter N with tilde, U+00D1 ISOlat1
Ograve
latin capital letter O with grave, U+00D2 ISOlat1
Oacute
latin capital letter O with acute, U+00D3 ISOlat1
Ocirc
latin capital letter O with circumflex, U+00D4 ISOlat1
Otilde
latin capital letter O with tilde, U+00D5 ISOlat1
Ouml
latin capital letter O with diaeresis, U+00D6 ISOlat1
times
multiplication sign, U+00D7 ISOnum
Oslash
latin capital letter O with stroke latin capital letter O slash, U+00D8 ISOlat1
Ugrave
latin capital letter U with grave, U+00D9 ISOlat1
Uacute
latin capital letter U with acute, U+00DA ISOlat1
Ucirc
latin capital letter U with circumflex, U+00DB ISOlat1
Uuml
latin capital letter U with diaeresis, U+00DC ISOlat1
Yacute
latin capital letter Y with acute, U+00DD ISOlat1
THORN
latin capital letter THORN, U+00DE ISOlat1
szlig
latin small letter sharp s = ess-zed, U+00DF ISOlat1
agrave
latin small letter a with grave = latin small letter a grave, U+00E0 ISOlat1
aacute
latin small letter a with acute, U+00E1 ISOlat1
acirc
latin small letter a with circumflex, U+00E2 ISOlat1
atilde
latin small letter a with tilde, U+00E3 ISOlat1
auml
latin small letter a with diaeresis, U+00E4 ISOlat1
aring
latin small letter a with ring above = latin small letter a ring, U+00E5 ISOlat1
aelig
latin small letter ae = latin small ligature ae, U+00E6 ISOlat1
ccedil
latin small letter c with cedilla, U+00E7 ISOlat1
egrave
latin small letter e with grave, U+00E8 ISOlat1
eacute
latin small letter e with acute, U+00E9 ISOlat1
ecirc
latin small letter e with circumflex, U+00EA ISOlat1
euml
latin small letter e with diaeresis, U+00EB ISOlat1
igrave
latin small letter i with grave, U+00EC ISOlat1
iacute
latin small letter i with acute, U+00ED ISOlat1
icirc
latin small letter i with circumflex, U+00EE ISOlat1
iuml
latin small letter i with diaeresis, U+00EF ISOlat1
latin small letter eth, U+00F0 ISOlat1
ntilde
latin small letter n with tilde, U+00F1 ISOlat1
ograve
latin small letter o with grave, U+00F2 ISOlat1
oacute
latin small letter o with acute, U+00F3 ISOlat1
ocirc
latin small letter o with circumflex, U+00F4 ISOlat1
otilde
latin small letter o with tilde, U+00F5 ISOlat1
ouml
latin small letter o with diaeresis, U+00F6 ISOlat1
divide
division sign, U+00F7 ISOnum
oslash
latin small letter o with stroke, = latin small letter o slash, U+00F8 ISOlat1
ugrave
latin small letter u with grave, U+00F9 ISOlat1
uacute
latin small letter u with acute, U+00FA ISOlat1
ucirc
latin small letter u with circumflex, U+00FB ISOlat1
uuml
latin small letter u with diaeresis, U+00FC ISOlat1
yacute
latin small letter y with acute, U+00FD ISOlat1
thorn
latin small letter thorn with, U+00FE ISOlat1
yuml
latin small letter y with diaeresis, U+00FF ISOlat1
OElig
latin capital ligature OE, U+0152 ISOlat2
oelig
latin small ligature oe, U+0153 ISOlat2
Scaron
latin capital letter S with caron, U+0160 ISOlat2
scaron
latin small letter s with caron, U+0161 ISOlat2
Yuml
latin capital letter Y with diaeresis, U+0178 ISOlat2
fnof
latin small f with hook = function = florin, U+0192 ISOtech
circ
modifier letter circumflex accent, U+02C6 ISOpub
tilde
small tilde, U+02DC ISOdia
Alpha
greek capital letter alpha, U+0391
Beta
greek capital letter beta, U+0392
Gamma
greek capital letter gamma, U+0393 ISOgrk3
Delta
greek capital letter delta, U+0394 ISOgrk3
Epsilon
greek capital letter epsilon, U+0395
Zeta
greek capital letter zeta, U+0396
greek capital letter eta, U+0397
Theta
greek capital letter theta, U+0398 ISOgrk3
Iota
greek capital letter iota, U+0399
Kappa
greek capital letter kappa, U+039A
Lambda
greek capital letter lambda, U+039B ISOgrk3
greek capital letter mu, U+039C
greek capital letter nu, U+039D
greek capital letter xi, U+039E ISOgrk3
Omicron
greek capital letter omicron, U+039F
greek capital letter pi, U+03A0 ISOgrk3
greek capital letter rho, U+03A1
Sigma
greek capital letter sigma, U+03A3 ISOgrk3
greek capital letter tau, U+03A4
Upsilon
greek capital letter upsilon, U+03A5 ISOgrk3
greek capital letter phi, U+03A6 ISOgrk3
greek capital letter chi, U+03A7
greek capital letter psi, U+03A8 ISOgrk3
Omega
greek capital letter omega, U+03A9 ISOgrk3
alpha
greek small letter alpha, U+03B1 ISOgrk3
beta
greek small letter beta, U+03B2 ISOgrk3
gamma
greek small letter gamma, U+03B3 ISOgrk3
delta
greek small letter delta, U+03B4 ISOgrk3
epsilon
greek small letter epsilon, U+03B5 ISOgrk3
zeta
greek small letter zeta, U+03B6 ISOgrk3
greek small letter eta, U+03B7 ISOgrk3
theta
greek small letter theta, U+03B8 ISOgrk3
iota
greek small letter iota, U+03B9 ISOgrk3
kappa
greek small letter kappa, U+03BA ISOgrk3
lambda
greek small letter lambda, U+03BB ISOgrk3
greek small letter mu, U+03BC ISOgrk3
greek small letter nu, U+03BD ISOgrk3
greek small letter xi, U+03BE ISOgrk3
omicron
greek small letter omicron, U+03BF NEW
greek small letter pi, U+03C0 ISOgrk3
greek small letter rho, U+03C1 ISOgrk3
sigmaf
greek small letter final sigma, U+03C2 ISOgrk3
sigma
greek small letter sigma, U+03C3 ISOgrk3
greek small letter tau, U+03C4 ISOgrk3
upsilon
greek small letter upsilon, U+03C5 ISOgrk3
greek small letter phi, U+03C6 ISOgrk3
greek small letter chi, U+03C7 ISOgrk3
greek small letter psi, U+03C8 ISOgrk3
omega
greek small letter omega, U+03C9 ISOgrk3
thetasym
greek small letter theta symbol, U+03D1 NEW
upsih
greek upsilon with hook symbol, U+03D2 NEW
greek pi symbol, U+03D6 ISOgrk3
ensp
en space, U+2002 ISOpub
emsp
em space, U+2003 ISOpub
thinsp
thin space, U+2009 ISOpub
zwnj
zero width non-joiner, U+200C NEW RFC 2070
zero width joiner, U+200D NEW RFC 2070
left-to-right mark, U+200E NEW RFC 2070
right-to-left mark, U+200F NEW RFC 2070
ndash
en dash, U+2013 ISOpub
mdash
em dash, U+2014 ISOpub
lsquo
left single quotation mark, U+2018 ISOnum
rsquo
right single quotation mark, U+2019 ISOnum
sbquo
single low-9 quotation mark, U+201A NEW
ldquo
left double quotation mark, U+201C ISOnum
rdquo
right double quotation mark, U+201D ISOnum
bdquo
double low-9 quotation mark, U+201E NEW
dagger
dagger, U+2020 ISOpub
Dagger
double dagger, U+2021 ISOpub
bull
bullet = black small circle, U+2022 ISOpub
hellip
horizontal ellipsis = three dot leader, U+2026 ISOpub
permil
per mille sign, U+2030 ISOtech
prime
prime = minutes = feet, U+2032 ISOtech
Prime
double prime = seconds = inches, U+2033 ISOtech
lsaquo
single left-pointing angle quotation mark, U+2039 ISO proposed
rsaquo
single right-pointing angle quotation mark, U+203A ISO proposed
oline
overline = spacing overscore, U+203E NEW
frasl
fraction slash, U+2044 NEW
euro
euro sign, U+20AC NEW
image
blackletter capital I = imaginary part, U+2111 ISOamso
weierp
script capital P = power set = Weierstrass p, U+2118 ISOamso
real
blackletter capital R = real part symbol, U+211C ISOamso
trade
trade mark sign, U+2122 ISOnum
alefsym
alef symbol = first transfinite cardinal, U+2135 NEW
larr
leftwards arrow, U+2190 ISOnum
uarr
upwards arrow, U+2191 ISOnum
rarr
rightwards arrow, U+2192 ISOnum
darr
downwards arrow, U+2193 ISOnum
harr
left right arrow, U+2194 ISOamsa
crarr
downwards arrow with corner leftwards = carriage return, U+21B5 NEW
lArr
leftwards double arrow, U+21D0 ISOtech
uArr
upwards double arrow, U+21D1 ISOamsa
rArr
rightwards double arrow, U+21D2 ISOtech
dArr
downwards double arrow, U+21D3 ISOamsa
hArr
left right double arrow, U+21D4 ISOamsa
forall
for all, U+2200 ISOtech
part
partial differential, U+2202 ISOtech
exist
there exists, U+2203 ISOtech
empty
empty set = null set = diameter, U+2205 ISOamso
nabla
nabla = backward difference, U+2207 ISOtech
isin
element of, U+2208 ISOtech
notin
not an element of, U+2209 ISOtech
contains as member, U+220B ISOtech
prod
n-ary product = product sign, U+220F ISOamsb
n-ary summation, U+2211 ISOamsb
minus
minus sign, U+2212 ISOtech
lowast
asterisk operator, U+2217 ISOtech
radic
square root = radical sign, U+221A ISOtech
prop
proportional to, U+221D ISOtech
infin
infinity, U+221E ISOtech
angle, U+2220 ISOamso
logical and = wedge, U+2227 ISOtech
logical or = vee, U+2228 ISOtech
intersection = cap, U+2229 ISOtech
union = cup, U+222A ISOtech
integral, U+222B ISOtech
there4
therefore, U+2234 ISOtech
tilde operator = varies with = similar to, U+223C ISOtech
cong
approximately equal to, U+2245 ISOtech
asymp
almost equal to = asymptotic to, U+2248 ISOamsr
not equal to, U+2260 ISOtech
equiv
identical to, U+2261 ISOtech
less-than or equal to, U+2264 ISOtech
greater-than or equal to, U+2265 ISOtech
subset of, U+2282 ISOtech
superset of, U+2283 ISOtech
nsub
not a subset of, U+2284 ISOamsn
sube
subset of or equal to, U+2286 ISOtech
supe
superset of or equal to, U+2287 ISOtech
oplus
circled plus = direct sum, U+2295 ISOamsb
otimes
circled times = vector product, U+2297 ISOamsb
perp
up tack = orthogonal to = perpendicular, U+22A5 ISOtech
sdot
dot operator, U+22C5 ISOamsb
lceil
left ceiling = apl upstile, U+2308 ISOamsc
rceil
right ceiling, U+2309 ISOamsc
lfloor
left floor = apl downstile, U+230A ISOamsc
rfloor
right floor, U+230B ISOamsc
left-pointing angle bracket = bra, U+2329 ISOtech
rang
right-pointing angle bracket = ket, U+232A ISOtech
lozenge, U+25CA ISOpub
spades
black spade suit, U+2660 ISOpub
clubs
black club suit = shamrock, U+2663 ISOpub
hearts
black heart suit = valentine, U+2665 ISOpub
diams
black diamond suit, U+2666 ISOpub
Cannot initialize memory for list
Cannot initialize memory for sentinel
Cannot initialize memory for new link
no_proxy
ftp_proxy
FTP_PROXY
ftp_proxy_user
ftp_proxy_password
Syntax Error
allocating FTP context
send failed
getaddrinfo failed
gethostbyname address mismatch
gethostbyname failed
socket failed
Failed to create a connection
USER %s
PASS %s
PASS anonymous@
SITE %s
USER anonymous@%s
USER %s@%s
FTP server asking for ACCNT on anonymous
Invalid answer to EPSV
%u,%u,%u,%u,%u,%u
Invalid answer to PASV
Failed to create a data connection
bind failed
listen failed
EPRT |2|%s|%s|
PORT %d,%d,%d,%d,%d,%d
TYPE I
RETR %s
recv failed
USER anonymous
http_proxy
HTTP_PROXY
http
Not a valid HTTP URI
Failed to identify host in URI
allocating header buffer
%s http://%s:%d%s
%s http://%s%s
%s %s
 HTTP/1.0
Host: %s
 HTTP/1.0
Host: %s:%d
Accept-Encoding: gzip
Content-Type: %s
Content-Length: %d
allocating input
allocating input buffer
recv failed
allocating context
getaddrinfo failed
address size mismatch
Failed to resolve host
socket failed
error setting non-blocking IO
error connecting to HTTP server
Connect attempt timed out
Connect failed
getsockopt failed
Error connecting to remote host
select failed
send failed
HTTP/
Content-Type:
ContentType:
Location:
WWW-Authenticate:
Proxy-Authenticate:
Content-Encoding:
gzip
Content-Length:
Excessive depth in document: %d use XML_PARSE_HUGE option
Popping input %d
Unfinished entity outside the DTD
%s(%d): 
Pushing input %d : %.30s
xmlParseCharRef: character reference out of bounds
xmlParseCharRef: invalid xmlChar value %d
String decoding Entity Reference: %.30s
predefined entity has no content
String decoding PE Reference: %.30s
not validating will not read content for PE entity %s
Name %s is not XML Namespace compliant
Name
NmToken
EntityValue: '%c' forbidden except for entities references
SystemLiteral
Public ID
Space required after 'SYSTEM'
Space required after 'PUBLIC'
Space required after the Public Identifier
Comment too big found
comment doesn't start and stop in the same entity
Double hyphen within comment: <!--%.50s
Double hyphen within comment
XML declaration allowed only at the start of the document
xmlParsePITarget: invalid name prefix 'xml'
colons are forbidden from PI names '%s'
PI declaration doesn't start and stop in the same entity
ParsePI: PI %s space expected
PI %s too big found
ParsePI: PI %s never end ...
oasis-xml-catalog
Space required after '<!NOTATION'
colons are forbidden from notation names '%s'
Space required after the NOTATION name'
Notation declaration doesn't start and stop in the same entity
Space required after '<!ENTITY'
Space required after '%%'
xmlParseEntityDecl: no name
colons are forbidden from entities names '%s'
Space required after the entity name
Invalid URI: %s
SAX compatibility mode document
New Doc failed
fake
Space required before 'NDATA'
Space required after 'NDATA'
xmlParseEntityDecl: entity %s not terminated
Entity declaration doesn't start and stop in the same entity
Space required after '#FIXED'
Attribute default value declaration error
Name expected in NOTATION declaration
standalone: attribute notation value token %s duplicated
standalone: attribute enumeration value token %s duplicated
Space required after 'NOTATION'
Space required after '<!ATTLIST'
ATTLIST: no name for Element
ATTLIST: no name for Attribute
Space required after the attribute name
Space required after the attribute type
Space required after the attribute default value
Attribute list declaration doesn't start and stop in the same entity
Element content declaration doesn't start and stop in the same entity
xmlParseElementMixedContentDecl : Name expected
xmlParseElementContentDecl : %s '(' expected
Space required after 'ELEMENT'
xmlParseElementDecl: no name for Element
Space required after the element name
PEReference: forbidden within markup decl in internal subset
xmlParseElementDecl: 'EMPTY', 'ANY' or '(' expected
Element declaration doesn't start and stop in the same entity
Space needed after '<?xml'
Space needed here
Missing encoding in text declaration
#x%X
invalid entity type found
Entity '%s' failed to parse
nbktext
xmlParseEntityRef: no name
Entity '%s' not defined
Entity reference to unparsed entity %s
Attribute references external entity '%s'
'<' in entity '%s' is not allowed in attributes values
Attempt to reference the parameter entity '%s'
PEReference: no name
PEReference: %s
PEReference: %%%s; not found
Internal: %%%s; is not a parameter entity
xmlParseDocTypeDecl : no DOCTYPE name !
error parsing attribute name
Specification mandates value for attribute %s
xml:lang
Malformed value for xml:lang : %s
xml:space
preserve
Invalid value "%s" for xml:space : "default" or "preserve" expected
xmlParseStartTag: invalid element name
attributes construct error
xmlParseStartTag: problem parsing attributes
CData section too big found
CData section not finished
%.50s
Premature end of data in tag %s line %d
UTF-16
UTF16
Document labelled UTF-16 but has UTF-8 content
UTF-8
UTF8
Unsupported encoding %s
Blank needed after '<?xml'
Unsupported version '%s'
Blank needed here
Start tag expected, '<' not found
UCS-4
UCS4
Huge input lookup
xmlns
http://www.w3.org/XML/1998/namespace
pseudoroot
CharRef: invalid hexadecimal value
CharRef: invalid decimal value
CharRef: invalid value
internal error
PEReference at end of document
PEReference in prolog
PEReference in epilog
PEReference: no name
PEReference: expecting ';'
Detected an entity reference loop
EntityValue: " or ' expected
PEReferences forbidden in internal subset
AttValue: " or ' expected
Unescaped '<' not allowed in attributes values
SystemLiteral " or ' expected
Unfinished System or Public ID " or ' expected
Sequence ']]>' not allowed in content
SYSTEM or PUBLIC, the URI is missing
PUBLIC, the Public Identifier is missing
Comment must not contain '--' (double-hyphen)
xmlParsePI : no target name
Invalid PI name
NOTATION: Name expected here
'>' required to close NOTATION declaration
Entity value required
Fragment not allowed
'(' required to start ATTLIST enumeration
NmToken expected in ATTLIST enumeration
')' required to finish ATTLIST enumeration
MixedContentDecl : '|' or ')*' expected
MixedContentDecl : '#PCDATA' expected
ContentDecl : Name or '(' expected
ContentDecl : ',' '|' or ')' expected
PEReference: forbidden within markup decl in internal subset
expected '>'
XML conditional section '[' expected
Content error in the external subset
conditional section INCLUDE or IGNORE keyword expected
XML conditional section not closed
Text declaration '<?xml' required
parsing XML declaration: '?>' expected
external parsed entities cannot be standalone
EntityRef: expecting ';'
DOCTYPE improperly terminated
EndTag: '</' not found
expected '='
String not closed expecting " or '
String not started expecting ' or "
Invalid XML encoding name
standalone accepts only 'yes' or 'no'
Document is empty
Extra content at the end of the document
chunk is not well balanced
extra content at the end of well balanced chunk
Malformed declaration expecting version
Name too long use XML_PARSE_HUGE option
Unregistered error message
cur index out of bound
xmlParseStringCharRef: character reference out of bounds
xmlParseStringCharRef: invalid xmlChar value %d
unexpected change of input buffer
NCName
PCDATA invalid Char value %d
xmlParseComment: invalid xmlChar value %d
Comment not terminated 
<!--%.50s
Comment doesn't start and stop in the same entity
Comment not terminated
xml-stylesheet
xml-model
catalog
Catalog PI syntax error: %s
external
xmlParseElementChildrenContentDecl : depth %d too deep, use XML_PARSE_HUGE
xmlParseElementChildrenContentDecl : '%c' expected
All markup of the conditional section is not in the same entity
xmlParseStringEntityRef: no name
xmlLoadEntityContent parameter error
Reading %s entity content input
xmlLoadEntityContent input error
xmlLoadEntityContent: invalid char value %d
xmlParseStringPEReference: no name
%%%s; is not a parameter entity
Attribute %s redefined
Attribute %s:%s redefined
xmlParseEndTag: '</' not found
unparsable
Opening and ending tag mismatch: %s line %d and %s
AttValue length too long
invalid character in attribute value
AttValue: ' expected
detected an error in element content
Couldn't find end of Start Tag %s line %d
StartTag: invalid element name
dictionary allocation failure
xmlns: '%s' is not a valid URI
xmlns: URI %s is not absolute
xml namespace URI cannot be the default namespace
http://www.w3.org/2000/xmlns/
reuse of the xmlns namespace name is forbidden
xml namespace prefix mapped to wrong URI
xml namespace URI mapped to wrong prefix
redefinition of the xmlns prefix is forbidden
xmlns:%s: Empty XML namespace is not allowed
xmlns:%s: '%s' is not a valid URI
xmlns:%s: URI %s is not absolute
Unexpected change of input
standalone: attribute %s on %s defaulted from external subset
Namespace prefix %s for %s on %s is not defined
Namespaced Attribute %s in '%s' redefined
Namespace prefix %s on %s is not defined
Failed to parse QName '%s'
Failed to parse QName '%s:'
Failed to parse QName '%s:%s:'
lang
space
xmlParseInternalSubset: error detected in Markup declaration
Bytes: 0x%02X 0x%02X 0x%02X 0x%02X
Input is not proper UTF-8, indicate encoding !
Version mismatch between document and entity
Pbm popping %d NS
Memory allocation failed : %s
Memory allocation failed
Parser input data memory error
Char 0x%X out of allowed range
Input is not proper UTF-8, indicate encoding !
Char 0x0 out of allowed range
Internal error, xmlCopyCharMultiByte 0x%X out of bound
encoding unknown
encoding not supported %s
USC4 little endian
USC4 big endian
EBCDIC
UCS4 2143
UCS4 3412
UCS2
ISO-2022-JP
Shift_JIS
EUC-JP
couldn't allocate a new input stream
xmlNewEntityInputStream entity = NULL
new input from entity: %s
Cannot parse entity %s
Internal entity %s without content !
Internal parameter entity %s without content !
Predefined entity %s without content !
new input from file: %s
failed to load external entity: NULL filename 
failed to load external entity "%s"
Got NULL parser context
cannot initialize parser context
cannot allocate parser context
failed to allocate buffer
UTF-16LE
UTF-16BE
switching encoding: encoder error
switching encoding : no input
xmlSwitchToEncoding : no input
xmlSAX2InternalSubset
xmlSAX2ExternalSubset
Entity(%s) document marked standalone but requires external subset
Entity(%s) already defined in the internal subset
Entity(%s) already defined in the external subset
SAX.xmlSAX2EntityDecl(%s) called while not in subset
xml:id
xml:id : attribute type should be ID
SAX.xmlSAX2AttributeDecl(%s) called while not in subset
SAX.xmlSAX2ElementDecl(%s) called while not in subset
SAX.xmlSAX2NotationDecl(%s) externalID or PublicID missing
SAX.xmlSAX2NotationDecl(%s) called while not in subset
SAX.xmlSAX2UnparsedEntityDecl(%s) called while not in subset
xmlSAX2StartDocument
Validation failed: no DTD found !
xmlSAX2StartElement
Namespace prefix %s is not defined
xmlSAX2StartElementNs
Namespace prefix %s was not found
Namespace default prefix was not found
invalid namespace declaration '%s'
Avoid attribute ending with ':' like '%s'
xmlns: %s not a valid URI
Empty namespace name for prefix %s
xmlns:%s: %s not a valid URI
Namespace prefix %s of attribute %s is not defined
Attribute %s in %s redefined
xml:id : attribute value %s is not an NCName
Microsoft Document Connection
xmlSAX2AttributeNs
xmlSAX2Characters
xmlSAX2TextNode
xmlSAX2Characters: xmlStrdup returned NULL
xmlSAX2Characters: huge text node
xmlSAX2Characters overflow prevented
xmlGetGlobalState: out of memory
building QName
QName split
building namespace
building DTD
building internal subset
building doc
building attribute
building PI
building node
building text
building character reference
building reference
building comment
building CDATA
base
html
head
href
http://
ftp://
urn:
getting namespace list
searching namespace
creating buffer
growing buffer past UINT_MAX
growing buffer
invalid hexadecimal character value
invalid decimal character value
unterminated entity reference %15s
copying node
allocating the XML namespace
%.20s
default%d
%.20s%d
creating URI structure
saving URI
unescaping URI value
escaping URI value
resolving URI against base
:/?_.#&;=
reaching arbitrary MAX_URI_LENGTH limit
Cannot create automata for element %s
Content model of %s is not determinist: %s
malloc failed
xmlNewElementContent : name == NULL !
xmlNewElementContent : name != NULL !
Internal: ELEMENT content corrupted invalid type
#PCDATA
xmlAddElementDecl: content != NULL for EMPTY
xmlAddElementDecl: content != NULL for ANY
xmlAddElementDecl: content == NULL for MIXED
xmlAddElementDecl: content == NULL for ELEMENT
Internal: ELEMENT decl corrupted invalid type
xmlAddElementDecl: Table creation failed!
Redefinition of element %s
Internal: ATTRIBUTE struct corrupted invalid type
Attribute %s of %s: invalid default value
xmlAddAttributeDecl: Table creation failed!
Attribute %s of element %s: already defined
Element %s has too may ID attributes defined : %s
xmlAddNotationDecl: Table creation failed!
xmlAddNotationDecl: %s already defined
xmlAddID: Table creation failed!
ID %s already defined
xmlAddRef: Table creation failed!
xmlAddRef: Reference list creation failed!
xmlAddRef: Reference list insertion failed!
NOTATION %s is not declared
standalone: %s on %s value had to be normalized based on external subset declaration
Syntax of default value for attribute %s of %s is not valid
ID attribute %s of %s is not valid must be #IMPLIED or #REQUIRED
Element %s has %d ID attribute defined in the internal subset : %s
Element %s has %d ID attribute defined in the external subset : %s
Element %s has ID attributes defined in the internal and external subset : %s
Default value "%s" for attribute %s of %s is not among the enumerated set
Definition of %s has duplicate references of %s
Definition of %s has duplicate references of %s:%s
Definition of %s has duplicate references to %s
Definition of %s has duplicate references to %s:%s
No declaration for attribute %s of element %s
Syntax of value for attribute %s of %s is not valid
Value for attribute %s of %s is different from default "%s"
Value "%s" for attribute %s of %s is not a declared Notation
Value "%s" for attribute %s of %s is not among the enumerated notations
Value "%s" for attribute %s of %s is not among the enumerated set
Value for attribute %s of %s must be "%s"
Validating namespace
No declaration for attribute xmlns:%s of element %s
No declaration for attribute xmlns of element %s
Syntax of value for attribute xmlns:%s of %s is not valid
Syntax of value for attribute xmlns of %s is not valid
Value for attribute xmlns:%s of %s is different from default "%s"
Value for attribute xmlns of %s is different from default "%s"
Value "%s" for attribute xmlns:%s of %s is not a declared Notation
Value "%s" for attribute xmlns of %s is not a declared Notation
Value "%s" for attribute xmlns:%s of %s is not among the enumerated notations
Value "%s" for attribute xmlns of %s is not among the enumerated notations
Value "%s" for attribute xmlns:%s of %s is not among the enumerated set
Value "%s" for attribute xmlns of %s is not among the enumerated set
Value for attribute xmlns:%s of %s must be "%s"
Value for attribute xmlns of %s must be "%s"
Element %s was declared EMPTY this one has content
Element %s was declared #PCDATA but contains non text nodes
Element %s is not declared in %s list of possible children
Attribute element not expected
Text element has children !
Text element has namespace !
Text element has no content !
Entity element not expected
Notation element not expected
Document element not expected
HTML Document not expected
unknown element type
No declaration for element %s
Internal: MIXED struct corrupted
standalone: %s declared in the external subset contains white spaces nodes
Element %s does not carry attribute %s
Element %s does not carry attribute %s:%s
Element %s required attribute %s:%s has no prefix
Element %s required attribute %s:%s has different prefix
Element %s namespace name for default namespace does not match the DTD
Element %s namespace name for %s does not match the DTD
no root element
HTML
root and DTD name do not match '%s' and '%s'
xmlValidateDocumentFinal: doc == NULL
Found NULL content in content model of %s
Found PCDATA in content model of %s
Building content model
ContentModel broken for element %s
 ...
Element %s has too many ID attributes defined : %s
element table allocation failed
ENTITY attribute %s reference an unknown entity "%s"
ENTITY attribute %s reference an entity "%s" of wrong type
ENTITIES attribute %s reference an unknown entity "%s"
ENTITIES attribute %s reference an entity "%s" of wrong type
NOTATION attribute %s reference an unknown notation "%s"
realloc failed
Element %s content does not follow the DTD, expecting %s, got %s
Element content does not follow the DTD, expecting %s, got %s
CDATA
attribute %s line %d references an unknown ID "%s"
IDREF attribute %s references an unknown ID "%s"
IDREFS split
IDREFS attribute %s references an unknown ID "%s"
xmlValidateAttributeCallback(%s): internal error
attribute %s: could not find decl for element %s
NOTATION attribute %s declared for EMPTY element %s
fread()
fflush()
fclose()
creating HTTP output context
copying URI
creating input buffer
creating output buffer
growing input buffer
failed to load HTTP resource "%s"
failed to load HTTP resource
/xml
+xml
Unknown encoding %s
building canonical path
Unknown IO error
Permission denied
Resource temporarily unavailable
Bad file descriptor
Bad message
Resource busy
Operation canceled
No child processes
Resource deadlock avoided
Domain error
File exists
Bad address
File too large
Operation in progress
Interrupted function call
Invalid argument
Input/output error
Is a directory
Too many open files
Too many links
Inappropriate message buffer length
Filename too long
Too many open files in system
No such device
No such file or directory
Exec format error
No locks available
Not enough space
No space left on device
Function not implemented
Not a directory
Directory not empty
Not supported
Inappropriate I/O control operation
No such device or address
Operation not permitted
Broken pipe
Result too large
Read-only file system
Invalid seek
No such process
Operation timed out
Improper link
Attempt to load network entity %s
encoder error
flush error
write error
no input
buffer full
loading error
not a socket
already connected
connection refused
unreachable network
address in use
already in use
unknown address family
file://localhost/
file:///
file:/
creating buffer context
1.2.11
xmlCreateZMemBuff:  %s %d
Error initializing compression context.  ZLIB error:
%c%c%c%c%c%c%c%c%c%c
gzread()
gzclose()
fwrite()
xmlIOHTTPWrite:  %s
%s '%s'.
Error appending to internal buffer.
Error sending document to URI
xmlZMemBuffAppend:  %s %d %s - %d
Compression error while appending
bytes to buffer.  ZLIB error
xmlZMemBuffExtend:  %s %lu bytes.
Allocation failure extending output buffer to
text/xml
Content-Encoding: gzip
xmlIOHTTPCloseWrite:  %s '%s' %s '%s'.
Error retrieving content.
Unable to
data to URI
xmlIOHTTPCloseWrite: HTTP '%s' of %d %s
'%s' %s %d
bytes to URI
failed.  HTTP return code:
xmlZMemBuffGetContent:  %s - %d
Error flushing zlib buffers.  Error code
NULL
XML_MEM_BREAKPOINT
XML_MEM_TRACE
creating execution context
epsilon transition left at runtime
pushing input string
saving regexp
exec save: allocation failed
allocating state
adding state
allocating range
failed to compile: %s
compiling regexp
allocating atom
generate transition: atom == NULL
copying atom
allocating counter
add state: state is NULL
add state: target is NULL
adding transition
atom push: atom is NULL
pushing atom
TODO: XML_REGEXP_STRING
AegeanNumbers
AlphabeticPresentationForms
Arabic
ArabicPresentationForms-A
ArabicPresentationForms-B
Armenian
Arrows
BasicLatin
Bengali
BlockElements
Bopomofo
BopomofoExtended
BoxDrawing
BraillePatterns
Buhid
ByzantineMusicalSymbols
CJKCompatibility
CJKCompatibilityForms
CJKCompatibilityIdeographs
CJKCompatibilityIdeographsSupplement
CJKRadicalsSupplement
CJKSymbolsandPunctuation
CJKUnifiedIdeographs
CJKUnifiedIdeographsExtensionA
CJKUnifiedIdeographsExtensionB
Cherokee
CombiningDiacriticalMarks
CombiningDiacriticalMarksforSymbols
CombiningHalfMarks
CombiningMarksforSymbols
ControlPictures
CurrencySymbols
CypriotSyllabary
Cyrillic
CyrillicSupplement
Deseret
Devanagari
Dingbats
EnclosedAlphanumerics
EnclosedCJKLettersandMonths
Ethiopic
GeneralPunctuation
GeometricShapes
Georgian
Gothic
Greek
GreekExtended
GreekandCoptic
Gujarati
Gurmukhi
HalfwidthandFullwidthForms
HangulCompatibilityJamo
HangulJamo
HangulSyllables
Hanunoo
Hebrew
HighPrivateUseSurrogates
HighSurrogates
Hiragana
IPAExtensions
IdeographicDescriptionCharacters
Kanbun
KangxiRadicals
Kannada
Katakana
KatakanaPhoneticExtensions
Khmer
KhmerSymbols
Latin-1Supplement
LatinExtended-A
LatinExtended-B
LatinExtendedAdditional
LetterlikeSymbols
Limbu
LinearBIdeograms
LinearBSyllabary
LowSurrogates
Malayalam
MathematicalAlphanumericSymbols
MathematicalOperators
MiscellaneousMathematicalSymbols-A
MiscellaneousMathematicalSymbols-B
MiscellaneousSymbols
MiscellaneousSymbolsandArrows
MiscellaneousTechnical
Mongolian
MusicalSymbols
Myanmar
NumberForms
Ogham
OldItalic
OpticalCharacterRecognition
Oriya
Osmanya
PhoneticExtensions
PrivateUse
PrivateUseArea
Runic
Shavian
Sinhala
SmallFormVariants
SpacingModifierLetters
Specials
SuperscriptsandSubscripts
SupplementalArrows-A
SupplementalArrows-B
SupplementalMathematicalOperators
SupplementaryPrivateUseArea-A
SupplementaryPrivateUseArea-B
Syriac
Tagalog
Tagbanwa
Tags
TaiLe
TaiXuanJingSymbols
Tamil
Telugu
Thaana
Thai
Tibetan
Ugaritic
UnifiedCanadianAboriginalSyllabics
VariationSelectors
VariationSelectorsSupplement
YiRadicals
YiSyllables
YijingHexagramSymbols
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC_HRIRdatabase.cpp
LoudspeakerManager
DisableModelUpdates
ColdStart
ColdResistance
DSP Sound assertion in %s at line %d
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibBuffer.cpp
%e, 
[==== DspLibBuffer::print( printStyle: %d ) - this: %p =======================================================================>
      channels: %d, samplerate: %5.3f Hz, capacity: %lu frames, maxNumFrames: %lu, numFrames: %lu, frameOffset: %lu, memory usage: %lu bytes, %lu total, 
uses stack, 
external resources, 
internal resources, 
      silent: %s, valid: %s, min: %1.8e, max: %1.8e, maxmag: %1.8e (%3.1f dB) at frame index %d
      mean: %1.8e, rms: %1.8e (%3.1f dB), median: %1.8e
      checksum: %1.8e, checksumMS: %1.8e, aligned by %lu floats: %s.
      address of channel %d: 0x%lx, 
      channel_%d = [ 
      channel_%d = { 
                    
%ef, 
                    
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
      numFrames() == 0. Buffer is empty.
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ToneGenerator/dsp/DspLibToneGenerator.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/AudioMeter/dsp/DspLibAudioMeter.cpp
presets
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PeakPowerGuard/dsp/DspLibPeakPowerGuardAdmittanceFilterCoeffSet.cpp
name
samplerateInHz
FIRarray
temperatureInDegreeCelcius
numberOfCoefficients
FIRcoefficients
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemID.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDTestToneGenerator.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Biquad/dsp/DspLibBiquadDesigns.cpp
a1 = %f and a2 =%f, create a biquad filter which is not stable
ERROR: prototypeForPhaseCompensation not available for this filter type.
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassQueen/dsp/DspLibBassQueen.cpp
Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassQueen/dsp/DspLibMitigationAdaptation.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/NotchFilterBank/dsp/DspLibNotchFilterBank.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/SampleRateConverter/dsp/DspLibSampleRateConverter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueckOSCFilter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LowFlow/dsp/DspLibLowFlowAnalysisPath.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueckKernel.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PeakPowerGuard/dsp/DspLibPeakPowerGuard.cpp
%#.9g 
%#.9g + %#.9gi   
%#.9g - %#.9gi   
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerModel/dsp/DspLibLoudspeakerModel.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/RMS/dsp/DspLibRMS.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BuzzKill/dsp/DspLibBuzzKillClasses.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FFT/dsp/DspLibFFT.cpp
Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FFT/dsp/DspLibFFT.h
DefaultAudioChannelLayout
SelectedAudioChannelLayout
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BassKoenig/dsp/DspLibBassKoenig.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDImpedanceMeasurement.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudnessMeter/dsp/DspLibLoudnessMeter.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ThermalSpeakerProtection/dsp/DspLibThermalSpeakerProtection.cpp
bypass
algorithm version
input gain
max input level
window size
lookahead delay
filterbank channel spacing
filterbank mitigation quality
filterbank analysis quality
filterbank weight decay
high pass filter enable
high pass filter frequency
high pass filter order
adaptation target tolerance
adaptation creep threshold
adaptation minimu gain
enable inverse pressure filter
enable excursion control
output gain
release time
enable filter update crossfade
input high pass order
excursion limit, percent of xmax ch 0
excursion limit, percent of xmax ch 1
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Biquad/dsp/DspLibBiquad.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibMath.cpp
ERROR DspLibUtility::isEqual(): a = %.17g, b = %.17g, error = %.17g %%
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FFT/dsp/DspLibFFT.h
ERROR: could not load: 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDPilotTone.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/BuzzKill/dsp/DspLibBuzzKill.cpp
Error at section %lu: 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ToneMeister/dsp/DspLibToneMeister.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDModelFit.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FourBandRandomOrderLrFilterBank/dsp/DspLibFourBandRandomOrderLrFilterBank.cpp
%s: %s
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/VirtualBass/dsp/DspLibVirtualBass.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/ControlFreak/dsp/DspLibControlFreak.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/HilbertTransform/dsp/DspLibHilbertTransform.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudnessNormalizer/dsp/DspLibLoudnessNormalizer.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/VirtualBass/dsp/DspLibNonLinearDevice.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerSystemID/dsp/DspLibLoudspeakerSystemIDImpedanceModels.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/Utilities/DspLibBase.cpp
PowerGuard
LookAhead
MaxAttenuation
PowerTimeScale1
PowerTimeScale2
PowerTimeScale3
PowerTimeScale4
PowerHardLimit1
PowerHardLimit2
PowerHardLimit3
PowerHardLimit4
PowerSoftLimit1
PowerSoftLimit2
PowerSoftLimit3
PowerSoftLimit4
WooferAmpVoltsFullScale
TweeterAmpVoltsFullScale
WooferAmpEfficiency
TweeterAmpEfficiency
WooferMinPowerModelRatio
PowerSmoothingTime
TweeterResistance
WooferReleaseTime
TweeterReleaseTime
LoudspeakerSystemID
general
Reset
NvmTimeBetweenUpdatesBeforeDecayInSeconds
NvmDecayTimeConstantInSeconds
TestTone
TestToneEnable
TestToneFrequencyHz
TestToneAmplitudeDecibel
ImpedanceEstimation
CurrentSenseCalibrationAmperesPerFullScale
VoltageSenseCalibrationVoltsPerFullScale
ImpedanceEstimateSmoothTimeConstantSeconds
ImpedanceEstimateUpdateRateSeconds
ImpedanceInvertPhase
RDCEstimation
RdcEstimateSmoothTimeConstantSeconds
EnableRdcAdaptation
RdcCoherenceThreshold
RdcDefaultOhms
RdcMinOhms
RdcMaxOhms
VoiceCoilCalibrationTemperatureCelcius
VoiceCoilResistanceAtCalibrationTemperatureOhms
VoiceCoilTemperatureCoefficient
RdcErrorThreshold
PilotTone
PilotToneDesiredFrequencyHz
PilotToneAmplitudeDecibel
PilotToneFadingTimeConstantSeconds
PilotToneFadeOutUpperThresholdDecibels
PilotToneFadeOutLowerThresholdDecibels
LR2InductanceModel
Zlr2LeDefaultHenry
Zlr2Le2DefaultHenry
Zlr2RLe2DefaultOhms
EnableZlr2Adaptation
Zlr2NumOfIterations
Zlr2MinFreqHz
Zlr2MaxFreqHz
Zlr2AdaptationSmoothTimeConstantSeconds
LeMinHenry
LeMaxHenry
Le2MinHenry
Le2MaxHenry
RLe2MinOhms
RLe2MaxOhms
Zlr2SetCoherenceToZeroThresholdDecibel
Zlr2SparcityThresholdPercent
Zlr2L1NormThresholdDecibel
Zlr2FreqStride
Zlr2AdaptationSmoothSlowTimeConstantSeconds
Zlr2SlowAdaptationThresholdDecibel
Zlr2ErrorThreshold
ResonanceModel_1st
EnableZmsAdaptation_1st
EnableMmsAdaptation_1st
BlDefaultTeslaMeter_1st
MmsDefaultGrams_1st
RmsDefaultKiloGramsPerSeconds_1st
KmsDefaultNewtonPerMeter_1st
ZmsMinFreqHz_1st
ZmsMaxFreqHz_1st
ZmsNumOfIterations_1st
ZmsAdaptationSmoothTimeConstantSeconds_1st
ZmsL1NormThresholdDecibel_1st
ZmsSetCoherenceToZeroThresholdDecibel_1st
ZmsSparcityThresholdPercent_1st
ZmsAdaptationSmoothSlowTimeConstantSeconds_1st
ZmsSlowAdaptationThresholdDecibel_1st
MmsMinGrams_1st
MmsMaxGrams_1st
RmsMinKiloGramsPerSeconds_1st
RmsMaxKiloGramsPerSeconds_1st
KmsMinNewtonPerMeter_1st
KmsMaxNewtonPerMeter_1st
BlMinTeslaMeter_1st
BlMaxTeslaMeter_1st
EnableBlAdaptation_1st
ZmsErrorThreshold_1st
ResonanceModel_2nd
ResonanceModel_3rd
EnableZmsAdaptation_Spare
EnableMmsAdaptation_Spare
BlDefaultTeslaMeter_Spare
MmsDefaultGrams_Spare
RmsDefaultKiloGramsPerSeconds_Spare
KmsDefaultNewtonPerMeter_Spare
ZmsMinFreqHz_Spare
ZmsMaxFreqHz_Spare
ZmsNumOfIterations_Spare
ZmsAdaptationSmoothTimeConstantSeconds_Spare
ZmsL1NormThresholdDecibel_Spare
ZmsSetCoherenceToZeroThresholdDecibel_Spare
ZmsSparcityThresholdPercent_Spare
ZmsAdaptationSmoothSlowTimeConstantSeconds_Spare
ZmsSlowAdaptationThresholdDecibel_Spare
MmsMinGrams_Spare
MmsMaxGrams_Spare
RmsMinKiloGramsPerSeconds_Spare
RmsMaxKiloGramsPerSeconds_Spare
KmsMinNewtonPerMeter_Spare
KmsMaxNewtonPerMeter_Spare
BlMinTeslaMeter_Spare
BlMaxTeslaMeter_Spare
EnableBlAdaptation_Spare
ZmsErrorThreshold_Spare
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MozartCompressor/dsp/DspLibMozartCompressor.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/FIR/dsp/DspLibFIR.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/MeisterStueck/dsp/DspLibMeisterStueck.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/LoudspeakerModel/dsp/DspLibLoudspeakerModelParameters.cpp
mode
inv p cutoff [Hz]
inv p cutoff order
Re [Ohms]
Le [Henry]
Mms [kg]
Rms [kg/s]
Cms [m/N]
Phi [N/A]
Vab [m^3]
Sd [m^2]
amp sensitivity [V/Fs]
excursion limit [m]
driver_gainLin
driver_p0_real
driver_p0_imag
driver_p1_real
driver_p1_imag
driver_p2_real
driver_p2_imag
driver_p3_real
driver_p3_imag
driver_z0_real
driver_z0_imag
driver_z1_real
driver_z1_imag
driver_z2_real
driver_z2_imag
driver_z3_real
driver_z3_imag
radiator_gainLin
radiator_p0_real
radiator_p0_imag
radiator_p1_real
radiator_p1_imag
radiator_p2_real
radiator_p2_imag
radiator_p3_real
radiator_p3_imag
radiator_z0_real
radiator_z0_imag
radiator_z1_real
radiator_z1_imag
radiator_z2_real
radiator_z2_imag
radiator_z3_real
radiator_z3_imag
number of radiators
Sd active driver [m^2]
Sd passivc radiator [m^2]
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/XTC/dsp/DspLibXTC_FIRMatrix.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/DspLib/PowerGuard/dsp/DspLibPowerGuardClasses.cpp
ReleaseType
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Statistics]
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Statistics_Impl]
std::string_view vp::reflect_type_name() [T = vp::services::AB_Helper]
Unknown input parameter!
CircularModels.cpp
ClickEventTimingHelper.mm
clickEventLog_
.dat
clickEventSim_
/tmp/ClickRemoval/
OSStatus 
PresetV
PresetA
Gain Offset
RotationUtilities.cpp
yawPitchRoll2RotationMatrixFOA
R.NumRows()==4
R.NumCols()==4
Processor_%d
'mozs'
Input Gain
Output Gain
DSPchain
ATV: mono
ATV: stereo
ATV: 5.1
ATV: 7.1
ATV: Atmos
MAC: mono
MAC: stereo
MAC: 5.1
MAC: 7.1
MAC: Atmos
LPCore.cpp
algoUpmixPISteered
AULando_LRCLsRs.cpp
N1 > 0
ComplexMat
fbComplexMat.h
mNumRows * mNumCols <= mCapacity
operator*
lhs.mNumCols == rhs.mNumRows
inversed
mNumRows == mNumCols
mNumRows == 2
det != Complexf{0.f}
vpEchoGateV2.cpp
vpechogate2
Front mic EC LEE
Back mic EC LEE
EC LEE Output
Front Mic
Back Mic
Beam Mics
EC delta EIR
EC main lobe delay
EC adaptation state
EC time aligned ref signal energy
EC mic LEE signal cross-correlation
AUMixSwitch
NotificationHandler.cpp
SnapCoordinates
arithmetic multiplication overflow
arithmetic addition overflow
SCTwoInputMixer.cpp
inOneABL->mNumberBuffers == channelCount
out(0).wire()->buffer()->byteCapacity() >= n * sizeof(Float32)
SCTwoInputMixer
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/AUSpatialCapture/SCTwoInputMixer.hpp
all formats must be either freq or time domains.
BypassableIRProcessor
initializeFadingParameters
updateFadingParameters
crossFade
(I) gate curr downlink gain
(I) gate downlink gain target
(I) Output from gate speech prob
(I) Input to gate speex speech prob
(Expert) Allow reset of InitialDeltaIR thresh on scenario change
(I) deltaIR input from EC
(Tuning) Near-End is Active Threshold
(Expert) Echo is Loud and non-linear thresh
(Tuning) Echo is Soft Threshold
(Tuning) Near-end to Echo OpengateThresh
(Tuning) Near-end to Echo OpengateSoftThresh
(I) gate Current Gate Scale Factor
(Tuning) Near-end to Echo Closed/Bargein Thresh
(Expert) Ref is Loud making non-linear echo thresh
(I) Some indication of downlink playback scenario
(Tuning) DeltaIRThresh
(I) MinDLGainTarget 
(I) Input to gate: AGC dynamic gain
(I) Input to gate: AGC post gain
(I) Input to gate: IR main lobe delay
(Tuning) Time scale to override DeltaIR by InitialDeltaIR thresh: 0==none, >0 scales
(Expert) gate Soften gate closed decision
(Expert) gate consider high freq energy
(Expert) gate Flag to enable perceptual gate
(Expert) gate Smooth level considered a tone
(Expert) gate Assumed masking offset for pure tone
(Expert) gate Assumed masking offset for noise
(Tuning) Level above which excess coupling is declared
(Tuning) Disable/Enable detection of high coupling
(Tuning) Mic to use for IR energy
(Tuning) Near-end to Echo OpengateThresh for excess coupling scenarios
(Tuning) Near-end to Echo OpengateSoftThresh for excess coupling scenarios
(Tuning) Near-end to Echo Closed/Bargein Thresh for excess coupling scenarios
(Expert) Upper limit for delta IR Energy in dB
(Expert) Power to be applied to the relative delta IR Energy to update gate thresholds
(I) Input to gate: Echo to local voice ratio from linear EC
(Tuning) Bit pattern for improving choppiness caused by Gating
(I) Input to gate: OCNS/OCNE Noise SPL Estimate
(Tuning) Adjustment to the amplitude of the fill
(Tuning) Combined RES and Gate suppression threshold that triggers CNI
(Tuning) Smoothing constant for noise estimate used for fill
(Tuning) Time constant for holding in fill state and slow gate release
(DebugOnly) Noise Fill SPL/Energy
(Tuning) Level above which CNI is disabled
(Tuning) Level below which CNI is disabled
(Tuning) Noise fill level is maintained constant above this
(Tuning) Probability above which NE speech is considered present
TypeDefault
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v3/vpProcessUplink_v3.cpp
vpProcessUplink_v3.cpp
CABufferList.h
_vpio_res: check 4 failed!
_vpio_res: check 6 failed!
denoise
Basic target echo supp level
Basic target echo supp active
Speech prob (I)
(I) AGC dynamic gain
(I) AGC post gain
(I) EC adaptation state
(I) EC time aligned ref signal energy
Apply RES gain internally (3 modes)
(Expert) EnableAdjustResidual
(Expert)  Max leakage level
(Expert) High leakage level
(Expert) Low leakage level
(I) EC Mic Eclee Xcorr
(Expert) HighMicEcleeXcorr, used4 EnableAdjustResidual=1
(Expert) LowMicEcleeXcorr, used4 EnableAdjustResidual=1
ScaleUp factor0, used4 EnableAdjustResidual=1
ScaleUp factor1, used4 EnableAdjustResidual=1
ScaleUp factor2, used4 EnableAdjustResidual=1
ScaleDown factor1, used4 EnableAdjustResidual=1
ScaleDown factor2, used4 EnableAdjustResidual=1
(Expert) Enable Noise Floor
(Expert) NoiseFloorBias for single talk
(Expert) NoiseFloorBias for double talk
Use NS gains
Limit Low frequency scale factors
Gainfloor HF CutoffFreq
Gainfloor HF Echo Suppress level
Gainfloor HF Echo Suppress Active
Mode: 0==RESonly,1==RES/NS,2=NSonly+removeRE, 3=NSonly
Noise suppression target
Tuning balance between RES and NS suppression
(I) speech prob
SPL Time Constant
SPL Meter Calibration
(I) noise SPL (gated PS)
Use external noise estimation
Enable Poly EC eclee & ecout
Has NFN Switch in the chain
NFN Switch Decision 0-no NFN, 1-use NFN
minimum dB poly EC better than linear EC
Echo2Lv LinearEC
Echo2Lv PolyEC
Enable Eclee3 for residual echo estimation
Apply NS gains on RES inputs for leakage calculation
Scale factor for poly EC echo proxy in dB
Use Echo2Lv from ECs in single-mic chain
Recaluate Echo2Lv values in RES for multi-mic use case
FactoryDiagsMode
channel %d
21:48:01
channelSplitMode
buffer
statusCounter
audioBlockSize
numFramesForStatus
percentCPUAverage
percentCPUPeak
megaCyclesPerSecondAverage
megaCyclesPerSecondPeak
latencyInMilliseconds
megaInstructionsPerSecondAverage
megaInstructionsPerSecondPeak
queueSize
numAudioChannels
audioSampleRate
arrayOfDictionaries
speex denoise
speex echo supp level
speex echo supp active
speex speech prob (I)
AGC dynamic gain (I)
AGC post gain (I)
EC adaptation state (I)
EC time aligned ref signal energy (I)
Apply RES gain internally
ParamRamper.cpp
outParamValues.size() >= inNumFrames
vp_use_vareq
VoiceProcessor_v2.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/VoiceProcessor_v2.h
Chat flavor not supported in this vp version
AULevelDrivenSuppressor.cpp
%4d %s %s 
21:47:52
aulsup
Operating mode: 0-mild (default) 1-moderate 2-aggressive
Nominal level of signal above which to preserve (dBfs)
Suppression offset from nominal (dB). Net=Nominal value param1 + this offset
Nominal level of signal below which to gate more (dBfs)
Mask limits on supression (enable=1, disable=0)
vpDebug_TuningSupport.cpp
%s%d%02d%02d.%02d%02d%02d.%03u
%s%lu
, %f
, %d
CreateLogHannMat
SubbandXYZ.cpp
fabs(wSum) > 1e-12
val.size() == indx.size()
val.size() == jndx.size()
SetPolarDOAFromXYZ
fabsf(z) <= 1.0
isfinite(el)
isfinite(az)
elevation >= -90.0 && elevation <= 90.0
ARGapFillerTrainingRegionHeuristics.mm
gap length too small compared to window length
error in filter coeff calc
invalid input length
bad input size
x is empty
input size mismatch
xEnvdB: 
fluxPerRegion: 
centroidPerRegion: 
Power
Spectral
Base
filter Length in Milli Secs
Kalman matrix configuration
fftSize
hopSize
Enable Dual LMS
Enable Dual KF
Enable eclee log for channel 1
For RES: ECMicEcleeXcorr
Flag for RES: Adapted
For RES: ECSxxTimeAligned energy
Adapt Kalman after N frames
M Channel EC
Number for bands to use
Stereo
StereoHeadphones
MatrixStereo
MidSide
Binaural
Ambisonic_B_Format
Quadraphonic
Pentagonal
Hexagonal
Octagonal
Cube
MPEG_1_0
MPEG_2_0
MPEG_3_0_A
MPEG_3_0_B
MPEG_4_0_A
MPEG_4_0_B
MPEG_5_0_A
MPEG_5_0_B
MPEG_5_0_C
MPEG_5_0_D
MPEG_5_1_A
MPEG_5_1_B
MPEG_5_1_C
MPEG_5_1_D
MPEG_6_1_A
MPEG_7_1_A
MPEG_7_1_B
MPEG_7_1_C
Emagic_Default_7_1
SMPTE_DTV
ITU_1_0
ITU_2_0
ITU_2_1
ITU_2_2
ITU_3_0
ITU_3_1
ITU_3_2
ITU_3_2_1
ITU_3_4_1
DVD_0
DVD_1
DVD_2
DVD_3
DVD_4
DVD_5
DVD_6
DVD_7
DVD_8
DVD_9
DVD_10
DVD_11
DVD_12
DVD_13
DVD_14
DVD_15
DVD_16
DVD_17
DVD_18
DVD_19
DVD_20
AudioUnit_4
AudioUnit_5
AudioUnit_6
AudioUnit_8
AudioUnit_5_0
AudioUnit_6_0
AudioUnit_7_0
AudioUnit_7_0_Front
AudioUnit_5_1
AudioUnit_6_1
AudioUnit_7_1
AudioUnit_7_1_Front
AAC_3_0
AAC_Quadraphonic
AAC_4_0
AAC_5_0
AAC_5_1
AAC_6_0
AAC_6_1
AAC_7_0
AAC_7_1
AAC_7_1_B
AAC_7_1_C
AAC_Octagonal
TMH_10_2_std
TMH_10_2_full
AC3_1_0_1
AC3_3_0
AC3_3_1
AC3_3_0_1
AC3_2_1_1
AC3_3_1_1
EAC_6_0_A
EAC_7_0_A
EAC3_6_1_A
EAC3_6_1_B
EAC3_6_1_C
EAC3_7_1_A
EAC3_7_1_B
EAC3_7_1_C
EAC3_7_1_D
EAC3_7_1_E
EAC3_7_1_F
EAC3_7_1_G
EAC3_7_1_H
DTS_3_1
DTS_4_1
DTS_6_0_A
DTS_6_0_B
DTS_6_0_C
DTS_6_1_A
DTS_6_1_B
DTS_6_1_C
DTS_7_0
DTS_7_1
DTS_8_0_A
DTS_8_0_B
DTS_8_1_A
DTS_8_1_B
DTS_6_1_D
WAVE_2_1
WAVE_3_0
WAVE_4_0_A
WAVE_4_0_B
WAVE_5_0_A
WAVE_5_0_B
WAVE_5_1_A
WAVE_5_1_B
WAVE_6_1
WAVE_7_1
Atmos_5_1_2
Atmos_5_1_4
Atmos_7_1_2
Atmos_7_1_4
Atmos_9_1_6
Logic_Mono
Logic_Stereo
Logic_Quadraphonic
Logic_4_0_A
Logic_4_0_B
Logic_4_0_C
Logic_5_0_A
Logic_5_0_B
Logic_5_0_C
Logic_5_0_D
Logic_5_1_A
Logic_5_1_B
Logic_5_1_C
Logic_5_1_D
Logic_6_0_A
Logic_6_0_B
Logic_6_0_C
Logic_6_1_A
Logic_6_1_B
Logic_6_1_C
Logic_6_1_D
Logic_7_1_A
Logic_7_1_B
Logic_7_1_C
Logic_7_1_SDDS_A
Logic_7_1_SDDS_B
Logic_7_1_SDDS_C
Logic_Atmos_5_1_2
Logic_Atmos_5_1_4
Logic_Atmos_7_1_2
Logic_Atmos_7_1_4_A
Logic_Atmos_7_1_4_B
Logic_Atmos_7_1_6
CICP_1
CICP_2
CICP_3
CICP_4
CICP_5
CICP_6
CICP_7
CICP_9
CICP_10
CICP_11
CICP_12
CICP_13
CICP_14
CICP_15
CICP_16
CICP_17
CICP_18
CICP_19
CICP_20
BeginReserved
EndReserved
HOA_ACN_SN3D
HOA_ACN_N3D
DiscreteInOrder
UseChannelDescriptions
UseChannelBitmap
GetNumberChannelDescriptions
CoreAudioBaseTypes.hpp
GetAudioChannelLayout().mNumberChannelDescriptions == (mStorage.size() - kHeaderSize) / sizeof(AudioChannelDescription)
algorithm
clickTypes
subspace
DetectionParams.mm
SMean
SCovMx
SubspaceMethod
regionBeginSeconds
regionEndSeconds
padSeconds
PrimaryParams
SubspaceParams
CostParams
Miss
FalseAlarm
PriorParams
NoiseParams
innerMaskRadiusSec
outerMaskRadiusSec
NonstationaryNoiseEstimator.h
invalid mask size
ch%u
yyyy-MM-dd'T'HH:mm:ss
vpProcessDownlink_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpProcessing/vpProcessDownlink_v2.cpp
preflight downlink: not ok to process?!
preflight downlink: tryer acquire failed
SampleRateChangedCallback
AUBeamNFSelector.cpp
(inID == kAudioUnitProperty_SampleRate) || (inID == kAudioUnitProperty_StreamFormat)
newSampleRateSize <= sizeof(newSampleRate)
tempASBDSize <= sizeof(tempASBD)
BlockSizeChangedCallback
inID == kAudioUnitProperty_MaximumFramesPerSlice
newBlockSizeSize <= sizeof(newBlockSize)
Input(i).GetStreamFormat().mSampleRate == mSampleRate
Output(i).GetStreamFormat().mSampleRate == mSampleRate
BeamSystemNoiseProfile
BeamFarfieldEQ
Auto.
Force left.
Force center.
Force right.
Left.
Center.
Right.
Aggregate omni.
+X beam.
-X beam.
Mode 0.
Mode 1.
Mode 2.
Force fixed value.
mSampleRate == Input(i).GetStreamFormat().mSampleRate
mSampleRate == Output(i).GetStreamFormat().mSampleRate
beamnfselector
Position detection mode.
Detected phone position.
Current beam.
Output mode.
Update threshold mode.
Update threshold.
Update threshold at Noise level 1.
Update threshold at Noise level 2.
Noise level 1.
Noise level 2.
Current noise level.
Wind detection probability.
Wind detection threshold.
Threshold left.
Threshold right.
Start frequency (Fmin).
End frequency (Fmax).
Update threshold crossed.
M1 Separation.
+X Separation.
M4 Separation.
-X Separation.
MaxSep: max([M1],[M4],[+X],[-X]).
PSD smoothing time constant.
Separation Difference smoothing time constant.
Downlink speech presence probabiility
Mic Status.
|OutputElement
ResetOutputChannelLayout
SetFullLayout
aucr
GetGains
WindDetectorAndSuppressor.cpp
GetParameterList
AUSpeechEnhancer.cpp
outNumParameters == mParameterInfoTable.size()
Rectangular
Gamma Tone
Nearest Neighbor
setupCore
mMaxFrameSize > 0
Bypass Algorithm
Wind Flag
Downlink SPP Threshold
Filter Bank Type
Interpolation Type
Loud Speaker Calibration
Signal Power Smoothing Time
Noise Power Attack Time
Noise Power Release Time
Environmental Noise Power (dBA)
Auto Volume Low Noise
Auto Volume High Noise
Auto Volume Low Slope
Auto Volume High Slope
Total Volume Max Gain
Pre Auto Volume SNR (dBA)
Current Auto Volume Gain
Bypass Auto EQ
EQ Bandwidth
Regularization High SNR
EQ Min Gain (low freq)
EQ Max Gain (low freq)
Pre EQ Signal Power (dBA)
Num Iterations to Converge EQ
Use Tabulated Speech PSD
Enable EQ Display (expert mode)
Current User Volume Gain
Current Total Volume Gain
EQ Min Gain (high freq)
EQ Max Gain (high freq)
EQ Frequency Boundary
EQ Low Noise
Change in Environment
0.20 kHz
0.40 kHz
0.80 kHz
1.25 kHz
1.60 kHz
2.00 kHz
2.50 kHz
3.15 kHz
4.00 kHz
5.00 kHz
6.30 kHz
8.00 kHz
10.00 kHz
12.50 kHz
16.00 kHz
20.00 kHz
EQ Slew Rate (dB/s)
Noise Slew Rate (dB/s)
Auto Volume Slew Rate (dB/s)
Near-End Speech Presence
Near-End SPP Threshold
populateParameterInfoTable
SpeechEnhancerParameters.h
paramInfo.size() == kNumberOfParams
getAverageSpeechSpectrum
SpeechEnhancerCore.h
DFTFrequenciesSize > 1
resampleSpectrum
DFTFrequenciesSizeIn > 1
DFTFrequenciesSizeOut > 1
setParameterLight
index >= 0 && index < mParameterInfoTable.size()
parameterValue
input.size() == mNumInputChannels
output.size() == mNumInputChannels
isFrequencyDomain ? (input[0].size() >= 2 * numFrames) : (input[0].size() >= numFrames)
SpeechEnhancerFilterBank
SpeechEnhancerFilterBank.h
mDFTfrequencies.size() > 1
BassKoenig_ViewFactory
InputGain
InputLowPassFilterFreq
InputLowPassFilterOnOff
NumXchannels
HighPassFilterStartFreq
HighPassFilterStopFreq
DownsamplingFactor
LookaheadDelay
ExcursionLimit
AmplifierCalibrationFactor
Use4thOrderHpf
SelectFrequencyResponseGraph
ExcursionLimiterOnOff
InverseBoxFilterOnOff
GlobalBypass
HighPassFilterQuality
kThieleSmallParameter_ReOhms
kThieleSmallParameter_LemH
kThieleSmallParameter_MmGrams
kThieleSmallParameter_RmKilogramsPerSecond
kThieleSmallParameter_CmMillimetersPerNewton
kThieleSmallParameter_BlNewtonsPerAmpere
kThieleSmallParameter_VabCubicMeters
kThieleSmallParameter_SdCentimetersSquared
EQ0 - on
EQ0 - Frequency
EQ0 - Gain
EQ0 - Quality
EQ1 - on
EQ1 - Frequency
EQ1 - Gain
EQ1 - Quality
EQ2 - on
EQ2 - Frequency
EQ2 - Gain
EQ2 - Quality
EQ3 - on
EQ3 - Frequency
EQ3 - Gain
EQ3 - Quality
EQ4 - on
EQ4 - Frequency
EQ4 - Gain
EQ4 - Quality
HighpassFilterAttack
HighpassFilterRelease
DisplayRelease
Trim Channel 0
Trim Channel 1
Flip audio signal phase
TemperatureProtection 0
safe temperature, Celcius 0
critical temperature, Celcius 0
TemperatureProtection 1
safe temperature, Celcius 1
critical temperature, Celcius 1
TemperatureProtection 2
safe temperature, Celcius 2
critical temperature, Celcius 2
TemperatureSensor 0
TemperatureSensor 1
TemperatureSensor 2
Rail Voltage
RailVoltage Protection
safe voltage
critical voltage
inverse box filter gain
inverse box filter low cutoff
ScottyKernel
Adapt BSS Filters
Covariance Alpha TC
Mixture Phase
Energy Regularization
Covariance Regularization
Weighted Covariance Regularization
Unmixing Regularization
Scale Mode
Source Prior Beta
White Noise Gain Max
Optimization Mode
Minimum Energy Threshold
Start Up Wait
Covariance Diagonal Initialization
Energy Low Frequency
Energy High Frequency
Mixing Mode
Num of Echo Chan
Adaptive Prior Probability
Prior Strength
AUBSS2.cpp
Multiple Reference MDP
Speed 
GetParameterValueStrings
std::get<3>(param) == 1
BSS Phase
No Mixing
BSS-RES
Others
aubss2
Tensor3Lib.h
tDSP_zmeye
N == X.cols
tDSP_copy_freq_abl_to_ztensor
XInput.rows >= numBuffs
tDSP_zmzvmult
A.len == b.len && (A.len == c.len)
A.cols == b.rows
b.cols == 1
c.cols == 1
tDSP_ztvztvhmultupper
a.rows == b.rows
a.cols == b.cols
C.rows == a.rows
C.cols == a.rows
a.len == C.len
b.len == C.len
tDSP_zmsreg
Nm == A.cols
reg >= 0
UpdateVj
IVALib.h
rk > 0
covAlpha >= 0
weightedCovReg >= 0
Nv == Vj.len
Nv == temp1x1xNf.len
temp1x1xNf.rows >= 1 && temp1x1xNf.cols >= 1
xxt.cols == Nm
Vj.rows == Nm
Vj.cols == Nm
tDSP_ztsymmetric
A.rows == A.cols
tDSP_zmzmuppermult
A.cols == B.rows && C.rows >= A.cols
A.len == B.len && (A.len == C.len)
tDSP_zmlu
lu.cols == n
tempNx1xNf.rows >= n
temp1x1xNf.rows >= 1
Nv <= pivotNx1xNf.len && Nv <= tempNx1xNf.len && Nv <= temp1x1xNf.len
n > 1
tDSP_zmsolvelu
n >= lu.cols
b.rows >= n
Nv <= pivotNx1xNf.len && Nv <= b.len && Nv <= x.len && Nv <= temp1x1xNf.len
UpdateWScale
Nf == Vj.len
Nf == Wout.len
Nf == tempNx1xNf.len
Nf == temp1x1xNf.len
j < Nm
Wout.rows == Nm
Wout.cols == Nm
Win.cols == Nm
tDSP_ztmov
rows == lhs.rows
cols == lhs.cols
Nv == lhs.len
tDSP_zminverse_from_lu
lu.cols >= n
inv.rows >= n
inv.cols >= n
lu.len == inv.len && lu.len == pivotNx1xNf.len && lu.len == tempNx1xNf.len && lu.len == temp1x1xNf.len && lu.len == inv.len
FixWNG
Nf == YOutput.len
Nf == YMag2.len
Nf == temp1xNf.len
XMag2.rows >= Nm
YMag2.rows >= Nm
temp1xNf.rows >= 1
MixturePhase
Nf == XMag2.len
Nm == XMag2.rows
Nm == YOutput.rows
Nm == YMag2.rows
tDSP_zmeyef
X.rows == X.cols
UpdatePrior
AUXIVALU.h
index <= priors.size()
UpdateUmixing
AUXIVACramer23.h
UpdateWProject23
Nm == 2 || Nm == 3
tDSP_inversecolt2x2
MIn.rows == 2
MIn.cols == MIn.rows
MOut.rows == MIn.rows
MOut.cols == MIn.rows
MIn.len == MOut.len
jSource < MIn.rows
tDSP_inversecolt3x3
MIn.rows == 3
MIn.cols == 3
jSource < 3
tDSP_inverse2x2
MatIn.rows == 2
tDSP_inverse3x3
tDSP_zvtzmzvmult
a.rows == B.rows
a.rows == B.cols
1 == c.rows
1 == c.cols
Ba.rows == a.rows
Ba.cols == 1
a.len == B.len && a.len == Ba.len && a.len == c.len
tDSP_zvhzvmult
a.len == b.len && a.len == c.len
a.cols == b.cols && a.cols == 1
tDSP_zmzmekmulth
A.len == B.len && A.len == C.len
BcolInd < A.cols
tDSP_zvtzmmult
a.len == B.len && a.len == c.len
arows == bcols
a.rows == c.rows
&a != &c
AUXIVARLS.h
Configuration
Input
Output
Orientations
Portrait upside down
Landscape left
Landscape right
Face up
Face down
Orientation
AUReferenceSignalMixer
NeuralNetRES.cpp
NumContextFrames
Lambda_TC
ECoutScale
ECleeScale
FFT2Mel
NumMelBands
NumFFTBins
EndpointDecisionLayerVAD3.cpp
SetDelaySamples
CircularDelay.cpp
numSamples <= mMaxDelaySamps
numFrames <= mMaxFrames
Active
ChannelA
ChannelB
Channels
ExportDate
Filter
Filters
Mute
Order
Phase
PhaseCompensate
PhaseFlip
QVersion
automation
state
setPointBGain
setPointBFrequency
systemVolumeSetPointA
systemVolumeSetPointB
systemVolumeSetPointM
systemVolumeSetPointM_enable
systemVolumeSetPointM_gain
systemVolumeSetPointM_frequency
counterSetPropertyDspLibDictionary
Servo
bss_bypass
AUBSS1.cpp
Directional + Positional Robustness
Positional Robustness.
aubss1
Bypass BSS
Run MDNS (Test only)
Scaling
+X Separation
-X Separation
Update Threshold
Noise SPL Estimate
Separation Mode
TopVolumeButtonPress
TopVolumeButtonRelease
BottomVolumeButtonPress
BottomVolumeButtonRelease
Group
Part
Note
LayerItem
Element: %u
Scope : %@
-inf
Scope: %@
AUState
BoxProperties
BoxParameters
LRLsRs
LRCLsRs
Algorithm
Phase Shift
Downmix C
Front-Back Bias
Steering
Steering Moderator
Decay
Low Crossover Frequency
High Crossover Frequency
Inverted Rs Polarity
Soft Bypass
Bypass (no latency)
Bypass (aligned latency)
Extract LsRs (PI)
Upmix PseudoInverse
Upmix PseudoInverse Steered
sampleRate = 
CLSPBlocksAdaptive.cpp
fcc:
csigma = 
a2 = 
b2 = 
ca10 = 
ca11 = 
ca12 = 
ca20 = 
ca21 = 
ca22 = 
xUpperLimit = 
decayTime = 
a1 = 
attackTime = 
releaseTime = 
a1_atk = 
a1_rel = 
vpSetupUplinkDSPChain.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDSPChains/vpSetupUplinkDSPChain.cpp
SetupDNNVADGraph
loading DNN VAD graph "%s"
failed to load DNN VAD graph text
failed to load DNN VAD graph text with exception: %s
failed to set DNN VAD graph name
failed to set DNN VAD graph name with exception: %s
loading DNN VAD AU strip "%s"
failed to load DNN VAD AU strip
failed to load DNN VAD AU strip with exception: %s
loading DNN VAD property strip "%s"
failed to load DNN VAD property strip
failed to load DNN VAD property with exception: %s
Not able to enable DNNVAD
SetupReferenceSignalMixer
skip reference mixer setup because reference channel count is 0
skip reference mixer setup because reference block size is 0
unknown exception while setting ref signal mixer...
standard exception while setting ref signal mixer [%s]
SetupUplinkEchoProcessingGraph
loading echo processing graph "%s"
failed to load echo processing graph text with unknown exception
failed to load echo processing graph text with exception : %s
loading echo processing AU strip "%s"
failed to load echo processing AU strip with unknown exception
failed to load echo processing AU strip with exception : %s
loading echo processing property strip "%s"
failed to load echo processing property strip with unknown exception
failed to load echo processing property strip with exception : %s
CLSPBlocks.cpp
mc_x_lim = 
ASAFrontEnd.cpp
Crossover2f
Crossover2f.cpp
maxFramesPerSlice > 0
invalid or unhandled filter type
invalid sample rate
invalid filter order
invalid or unhandled filter order
must only be called on the audio I/O thread
SetLowCrossover
success
SetHighCrossover
mismatch in LP and HP coefficient array sizes
invalid coefficient array size
unstaged a null low crossover
unstaged a null high crossover
must be primed on audio I/O thread before every process call
ModelNetPathBase
EmbeddingMode
DefaultEmbeddingMode
EmbeddingSize
AUNeuralNet.cpp
TaskID
Model_
Legacy
LowDelay
Parameter Name Unimplemented
AUNeuralNet
NeuralNet is ready
Processing gain adjustment
Silence threshold
Input level
Output level [ch0]
Model selector
Model selector override
Max suppression gain
Embedding Mode
Use Default embedding when embedding not available
Lower bound for the calculated mask [dB]
Upper bound for the calculated mask [dB]
Lower bound for the calculated postmask [dB]
Upper bound for the calculated postmask [dB]
Latency added by NN processing for each frame [samples]
Will the next block be processed? [Low Delay Block Processor Only]
Was the current block processed?
Which Block Processor is being used?
Block size of NN processing [samples]
SpeakerPositions
AUSpatialMixerV2DynamicXTCFilter
updateFilters
XTCModelingDelay
XTCSpeakerSpan
XTCRegularization
XTCConstraint
XTCPostTimbralFrequency
XTCPostTimbralBlend
XTCPostGain
XTCCrossover
Generated Using the AUSM - Virtual Surround Tuning Tool
 - Magic Unicorn
 - Measured Device Reference
writeIRFile
readAUXTCFilter
SaveXTCFile
applyCrossover
featureWindowLengthSeconds
ARGapFillerTrainingRegionHeuristicFactory.mm
heuristics
power
windowOverlap
interpolationThreshold
trainingThreshold
spectral
fftLog2N
overlapFactor
fluxInterpolationThreshold
fluxTrainingThreshold
centroidInterpolationThreshold
centroidTrainingThreshold
ARGapFillerTrainingRegionHeuristics.h
too short
SpectralProcessingHelpers.h
value error
Error: No group available for filter import. Please free up one group.
Error: Not a single filter is available for import. Please free up filters.
Successfully imported %lu filters and assigned them to group %d. 
%d filters were not imported.
Missing key: %@
Error for filter %d: %@
attempting to assign a global parameter to channel %ld but AU was created with only %u channels
could not find key :%@
Unknown filter type: %@
Frequency 0 of %f less than minimum (%f)
Frequency 0 of %f greater than maximum (%f)
Frequency 1 of %f less than minimum (%f)
Frequency 1 of %f greater than maximum (%f)
Frequency 2 of %f less than minimum (%f)
Frequency 2 of %f greater than maximum (%f)
Frequency 3 of %f less than minimum (%f)
Frequency 3 of %f greater than maximum (%f)
Frequency array has %lu elements, should have 4
Frequency array has %lu elements but should have 2
missing key: %@
Frequency of %f less than minimum (%f)
Frequency of %f greater than maximum (%f)
Gain of %f less than minimum (%f)
Gain of %f greater than maximum (%f)
Order of %f less than minimum (%f)
Order of %f greater than maximum (%f)
Quality of %f is less than minimum (%f)
Quality of %f is greater than maximum (%f)
missing key %@
channel number = 0, but channel enumeration starts with channel 1
attempting to assing a filter to channel: %ld, but only %d channels are available
channel %ld phase flip: import would change value from %d to %d
channel %ld mute: import would change value from %d to %d
vpDebug_FileSaving.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_FileSaving.cpp
vp_save_files_dir
SetSaveFilesDirectory
audio recordings available in %s
file saving turned OFF! recording directory %s cannot be created
SaveFilesPrepare
magic file exists, enabling file saving level %d
Simulator override file saving level: %d
master default exists, enabling file saving level %d
SaveFilesCleanup
writing properties plist file: %s ...
writing time stamps plist file: %s ...
writing error log file: %s  ... 
%.4f
no errors occurred on the I/O thread.
couldn't open file to write: %s  ... 
writing gating control data file: %s ... 
writing dlp control data file: %s ... 
RereadSaveFilesDefaults
File-Saving switch turned on
File-Saving switch turned off
vp debug features (HUP) are %s
master default does not exist, disabling file saving level
%d%02d%02d.%02d%02d%02d.%03u
CreateSignalSaveFiles
"%s" audio capture not created because file format is empty
created "%s" audio capture
failed to create "%s" audio capture
err-%d writing %s
%d%02d%02d.%02d%02d%02d
.xxx.
0x%x
badsavefile
WaveFileReader
vpDebug_Logging.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_Logging.cpp
LogVPUplinkChain
____________loguplinkchain:begin___________
(bypassed)
    %s: %s %s (%p)
         param %s: %f
(UL)-AUXVP
    %s: ON (%p)
____________loguplinkchain:end___________
LogVPDownlinkChain
____________logdownlinkchain:begin___________
(DL)-AUXVP
____________logdownlinkchain:end___________
LogNonTransientErrors
LogVPParams
____________logparams:begin___________
    PRODUCT: %{private}s
    Num Ref Ports = %lu, Num Mic Ports = %lu 
      : Ref Port #%lu=%s
      : Mic Port #%lu=%s
    Acoustic ID: %d
    This product does not have a valid Acoustic ID
    HW Format REF: %s
    HW Format MIC: %s
    HW Block Size REF: %d
    HW Block Size MIC: %d
    REF Signal: %s, Hw tap stream: %s
    HW Format EXT REF: %s
    HW Trim Gain MIC(ch-%d): %f dB
    HW Trim Gain REF(ch-%d): %f dB
    VP Output Format: %s
    REF Channel BitMap: %x, OUT Channel BitMap: %x
    HW MIC Channels: %s, BitMap: %x
    EP MIC Channels: %s, BitMap: %x
    Primary epmic index: %d
    SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max)
    Hw real-world correction: %f samples
    Ref-Mic Delay: %f msec
    Pre-echo-processing Digital Input Gain: %f dB
    Post-echo-processing Digital Input Gain: %f dB
    Downlink Mix Gain: %f dB
    Downlink Final Gain Chn 0: %f dB
    Downlink Final Gain Chn 1: %f dB
    DL Format FEV: %s
    DL Format FEV Process: %s
    DL Format MIX: %s
    DL Block Size MIX: %d
____________logparams:end___________
com.apple.coreaudio.ausm
min gain
max gain
azimuth
elevation
distance
enable
rate
global reverb gain
reverb blend
occlusion attenuation
obstruction attenuation
filter frequency
filter bandwidth
filter gain
head yaw
head pitch
head roll
source directivity yaw
source directivity pitch
source directivity roll
source width
source height
source depth
source divergence
source divergence azimuth range
source divergence position range
head locked
speaker snap
diffuse
absolute distance
listener position X
listener position Y
listener position Z
SetBusCount
device
com.apple.mediaserverd
Initialize_block_invoke
AULoudnessNormalizer
AUControlFreak
InitializeDynamicsProcessing
Cleanup
UpdateAutoModeReverb
UpdateAutoModeReverb_block_invoke
EarlyLateSplit
UpdateAutoModeReverbBlock
InitializeDynamicXTC_block_invoke
SpeakerSpan
Regularization
Constraint
PostTimbralFrequency
PostTimbralBlend
Crossover
PostGain
FilterLength
MagicUnicorn
ReferenceData
UpdateCounteractRotationShader
ConfigureHOADecoder
Render
ParameterCanRamp
ProcessMultipleBufferListsSlicingPrivate
ProcessMultipleBufferListsPrivate
AUSpatialMixerV2.mm
ioOutputBufferLists
ioOutputBufferLists[0]
numMixBuffers == mSharedBuffers.mixBufferPtrs.numChannels()
PresetLoaded
Initialized
Reinitialized
ChannelLayoutChanged
PositionParametersChanged
HeadOrientationQuaternion
ListenerPosition
AllParameters
UpdateReverbIfNecessary
FindDynamicProcessor
ToggleTuningBasedOnPersonalizedHRTFMode
PropertyChanged_block_invoke
Tuning_Mode_HRTFXTC_Reference_Data
SetParameter
ScheduleParameter
SaveState
AUSMChannelOverrides
InputProperties
OutputProperties
GlobalProperties
SoundStages
RestoreState
ElementNumber
NewFactoryPresetSet
SetAudioChannelLayout
??? (null layout pointer)
XTCIRFullPath
HRIRFullPath
XTCIRFile%@
NumXTCIRFiles
IRFile%@
NumIRFiles
AUScopeDynamic NRT lock
AUSpatialMixerV2_
ausm_default_head_tracking_mode
ausm_print_rm_head_pose
ausm_personal_hrtf_type
ausm_enable_debug_features
ausm_source_mode_override
setInputAndOutputStreamFormat
uninitialize
setInputAndOutputAudioChannelLayout
insertUnique
lastKnownValueForParameter
compileTrackInfo
computeIntermediateParameterValueAndAdvance
coordinatesType
minElevation
maxElevation
minAzimuth
maxAzimuth
minX
maxX
minY
maxY
minZ
maxZ
ExclusionZones
cfrk
ldnm
loadPreset
filter type
filter enable
AUFXWrapper
~AUFXWrapper
AcousticID
DiffuseFieldPowerRMS
DOABasedProbability.cpp
DOAConditioner.h
DOABasedProbability.hpp
DOAConditioner
mFrequencySmoothingSelection < mFrequencySmoothingMatrixOptions.size()
log_spatial_capture_doa
auspatialcapture-raw-doa-log.txt
auspatialcapture-conditioned-doa-log.txt
AUSPLMeter.cpp
auspl_lc_menu
com.apple.MobileBluetooth.debug
A2DP
LoudnessCompensationEQEnable
splmeter
Volume (dB)
OutputSensitivity
Meter Enable (dBA)
SPL (dBA)
Meter Enable (dBC)
SPL (dBC)
Meter Enable (LKFS)
LKFS (dB)
Duration
Spare 1
Mapped Volume (dB)
SPL Gain (dB)
Scalar Volume
ExtendedAudioBufferList_CreateWithFormat failed
ExtendedAudioBufferList_Prepare failed
ULDATFeaturesChain.cpp
AUOneChannelNSProperties
AUAGCV2Properties
HighpassFilterCutoffHz
NoiseSuppressFloorDB
UseVADMode
AbsoluteSilenceThdDb
UseNoiseDithering
AudioSampleRateHz
AudioBufferSizeSamples
AudioAnalysisSizeSamples
PointerAt
DistanceEstimator.cpp
NumInputChannels
MCLPOutScale
ECOutScale
LambdaPSD_TC
KalmanProcessStd
KalmanObservationStd
WaitFrames
Apple: AUBoostClip
Apple: AUSoftClip
Apple: AUVolume
Apple: AUSpeakerProtectionV2
Apple: AUSpeakerProtectionV3
Apple: AUBeam2
Apple: AUBeam2N
Apple: AUBeamNF
Apple: AUBeamSelector
Apple: AUBeamNFSelector
Apple: AUMixSwitch
Apple: AUMixSwitchNF
Apple: AUFIRFilter
Apple: AUDereverb
Apple: AUDenoise
Apple: AUNeuralNetRES
Apple: AUNeuralNetSPP
Apple: AUNeuralNet
Apple: AUSoundIsolation
Apple: AUNeuralNetVAD
Apple: AUSeparate
Apple: AUSpatialProbability
Apple: AUDistance
Apple: AUBeamItFD
Apple: AUBeamItTD
Apple: AUNFNSwitch
Apple: AUWindKill
Apple: AUFTSpatialAC
Apple: AULoudnessInNoise
Apple: AULevelDrivenSuppressor
Apple: AUCNG
Apple: AUAuxVPUplink
Apple: AUAuxVPDownlink
Apple: AUCPMSVolumeV1
Apple: AUAGCV2
Apple: AULinearEchoCancelerV2
Apple: AULinearEchoCancelerV3
Apple: AUMultiChanEchoCanceler
Apple: AUEchoCancelerV5
Apple: AUECMIMO
Apple: AUECSUMO
Apple: AUECMicRef
Apple: AUTTYEchoSuppressor
Apple: AUSubBandMultEchoCanceler
Apple: AUSpeexNSV2
Apple: AUOneChannelNS
Apple: AUOneChannelNSV4
Apple: AUOneChannelNoiseEstimator
Apple: AUResidualEchoSuppressorV2
Apple: AUResidualEchoSuppressorV3
Apple: AUResidualEchoSuppressorV4
Apple: AUResidualEchoSuppressorV5
Apple: AUEchoGateV2
Apple: AUEchoGateV3
Apple: AUVolumeCompressorV2
Apple: AUDeesser
Apple: AUMicSelectorV2
Apple: AUMultiMicNoiseSuppressorV2
Apple: AUMagnitudeDifferenceNoiseSuppressor
Apple: AUMagnitudeDifferenceNoiseSuppressorV4
Apple: AUBSS1
Apple: AUBSS2
Apple: AUHandsetNoiseEQ
Apple: AUNoiseSelector
Apple: AUReverbSuppressor
Apple: AUMultiBandDynamicsProcessorV2
Apple: AUDynamicDucker
Apple: AUVariableEQV2
Apple: AUMNBandEQ
Apple: AUReferenceSignalMixer
Apple: AURotationShading
Apple: AUEarPlug
Apple: AUDCBlocker
Apple: AUTweakaLeak
Apple: AUTweakaLeakIR
Apple: AUDecorrelator
Apple: AUDSPGraph
Apple: AUMatrixPatcher
Apple: AUFIREngine
Apple: AUCarter
Apple: AULando
Apple: AUScotty
Apple: AUCircArray
Apple: AULoudnessWarrior
Apple: AUHapticsProtection
Apple: AUFixedGain
Apple: AUChannelSpecificDelay
Apple: AUSpatialCapture
Apple: AUHOAZoom
Apple: AUMicSense
Apple: AUMultiChannelAGC
Apple: AUChannelSelector
Apple: AUMidSide
Apple: AUSpeechEnhancer
Apple: AUHearingLossCompensator
Apple: AULimitWindBoost
Apple: AUClipDetector
Apple: AUExpanseController
Apple: AUSignalCombiner
Apple: AUMicIssueDetector
Apple: AUControlFreak
Apple: AUBuzzKill
Apple: AUVirtualBass
Apple: AUBassKoenig
Apple: AUBassQueen
Apple: AULowFlow
Apple: AUMeisterStueck
Apple: AUToneMeister
Apple: AUMozartCompressorSingleBand
Apple: AULittleLateNightMode
Apple: AUPeakPowerGuard
Apple: AUThermalSpeakerProtection
Apple: AUXTC
Apple: AULoudnessNormalizer
Apple: AULoudspeakerManager
Apple: AUSilenceNonFiniteAnalyzer
Apple: AUGlitchDetectionAnalyzer
Apple: AUEcConvergenceOversight
Apple: AUECMIMOHelper
Apple: AUSPLMeter
Apple: AUCrossCorrelator
Apple: AUADAMSink
Apple: AUBiquad
Apple: AUEndpointVAD
Apple: AUEndpointVAD2
Apple: AUEndpointVAD3
Apple: AUSpatialMixer
AllAUsPublic
AUTemplateBase.h
Characterized amplifier system
Power budget
PowerLUT
TargetGainLimitDB
Measurements
VolumeLevel
power_inst
power_100ms
power_1000ms
power_thermal
cpms_ts_i
cpms_ts_100
cpms_ts_1000
cpms_ts_thermal
PODProp constructor: inDataPtr was nullptr; cannot create anything.
PODProp constructor: inDataSize did not match the given type.
AmpModelType
QuadraticModel
QuadraticBoostModel
LogModel
Dummy
No valid AmpModelType entry found in plist.
coefs
rangeMin_W
rangeMax_W
QuadraticModel needs a positive x^2 coefficient.
Polynomial needs 
 coefficients
, for x in [
 * x^
high_power_coefs
low_power_coefs
boost_coefs
high_power_threshold
power_multiplier
 * ln(x - 
) + 
Dummy amplifier (100% efficiency).
Gain smoothing attack TC
Gain smoothing release TC
Volume level
Output gain (dB)
ftac_invalid_window_x
ftac_invalid_window_y
ftac_invalid_aspect_ratio_in_portrait_orientation
ftac_invalid_aspect_ratio_in_landscape_orientation
ftac_invalid_client_cx_bitset
ftac_invalid_client_cy_bitset
ftac_invalid_client_all_zero_bitset
AUScotty.cpp
inData
numIn>0 && numIn<=kScotty_MaxNumIn
numOut>0 && numOut<=kScotty_MaxNumOut
Low-latency
CartesianSpatializer
DeviceNameAsString
vpDSPEngineConfiguration.mm
lowerCaseName != NULL
VP configuration info
ref port subtype
vp version
unknown device
tree index
CreateVPVersionLookUpKeys
!"Unexpected Family Type: %d"
ref port
mic port
ref port endpoint type
mic port subtype
mic port endpoint type
vp_force_version
VPvX_iPhone
NeuralNet.cpp
NeuralNetImplementationType
BNNS
Espresso
NumLayers
Quantization
ModelNetPath
InputName
EmbeddingName
OutputName
ComputeEngineName
StreamingMode
iPhone
iPad
FrontMic
BackMic
BeamMics
Output Mode (to Beam)
Auto/Manual
Signal time constant sec
Active time constant sec
Inactive time constant sec
HF min level diff thd
HF level diff ceiling
HF normal level diff
Deprecated
HF self noise floor
LF min level diff thd
LF level diff ceiling
LF normal level diff
LF min level
Echo min level diff thd
Echo level diff ceiling
Echo normal level diff
Echo high gain thd
Echo low gain thd
Echo hardware bias
Normal X-corr coeff lim
Noise floor det length sec
Noise floor thd mic
Noise floor thd echo
Switch to front thd
Switch to back thd
Return to normal thd
Return to normal ceiling
Beam direction (set by VP)
Occlusion state
Front VAD
Back VAD
Echo VAD
Front/back ratio
LF front/back ratio
HF front/back ratio
Echo front/back ratio
Max echo gain
X-corr
Occlusion bias detector
Return to normal detector
Front input level
Back input level
HF bottom input level
HF front input level
HF back input level
VP pre gain (set by VP)
HF max el. noise level (3-mic)
HF level where el. noise masked (3-mic)
Dead mic thd
HF level cov time constant
HF min level cov f/b diff
HF level cov f/b diff ceiling
HF normal level cov f/b diff
HF level cov f/b diff
Device orientation
Echo canceler converged
getProperty
setPropertyDictionary
LFELowPassFrequency
VADMode
Failed to read VAD mode from plist.
EndpointVAD2.cpp
TopLayerStateProductDimensions
MidLayerStateProductDimensions
FullStatePrior
FullStateTransMx
TopLayerObservationDimension
TopLayerObservationPrior
TopLayerObservationTransMx
FeaturesDSPWrapper.h
CounteractRotationShader
BypassMatrix
HRTFXTCSpatializer
XTCSourceExtentIRCustomURL
InitializeGrids
InitializeGridsAndAmbisonicEncoder
LoadHRIRs
ParametricProcessor.cpp
mInputData.HRIRs[0].NumCols()>=filterLength
LoadXTCIRs
mInputData.XTCIRs[0].NumCols()>=filterLength
/dev/urandom
<plist path not set>
AUSpatialCapture.mm
<no tuning loaded>
auspatialcaptureplistpath
auspatialcapture-graph-printout.txt
auspatialcapture-graph-decompile.txt
auspatialcapture.dot
AUSpatialCapture
tuningName
<anoynmous tuning>
doaBeamit
panner
linFullSignal
SDLSPlistFD
focusedBeams
wideBeams
LimitWindBoostRefChannel
latency
AU preset
DebugDirectory
SaveZoomCurveInPreset
SavePlistAndPropertiesInPreset
PlistPath
plist
spatialTimbreFilter
wideVsSpatialMix
focusedVsSpatialMix
suppressor_class.cpp
dft_v3.cpp
Echo level threshold.
M4/M1 energy ratio threshold.
M1/NFN energy ratio high threshold.
M1/NFN energy ratio low threshold.
Low freq - Echo Level calculation.
High freq - Echo Level calculation.
Low freq - M4/M1 energy calculation.
High freq - M4/M1 energy calculation.
Low freq - M1/NFN energy calculation.
High freq - M1/NFN energy calculation.
Smoothing TC - Echo Level calculation.
Smoothing TC - M4/M1 energy calculation.
Smoothing TC - M1/NFN energy calculation.
Echo Level (dB).
M4/M1 energy ratio (dB).
M1/NFN energy ratio (dB).
NE distortion possible flag
M4 status. 0 (ok). 1 (occ/scratch).
System state. 0 (NE only). 1 (FE only/DT)
Selected path. 0 (M1). 1 (NFN).
EC M1 Delta EIR.
EC M1 IR Delay.
EC M1 Adapted flag.
EC M1 Time aligned ref signal energy.
EC M1 Mic-Eclee Xcorr.
EC NFN Delta EIR.
EC NFN IR Delay.
EC NFN Adapted flag.
EC NFN Time aligned ref signal energy.
EC NFN Mic-Eclee Xcorr.
vpProcessDownlink_v3.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v3/vpProcessDownlink_v3.cpp
LoadSpatialCaptureTuning.mm
Problem detected (All channels)
Number of glitches detected (All channels)
(T) Sensitivity Setting (0=manual, 1=Default, 2=Less sensitive)
Problem detected
(I) Glitches detected
(I) Glitch level
(I) Wideband Detection level
(I) Glitches detected during interval
(T) Detector cutoff (only in manual=0 sensitivity setting)
(T) Wideband variance threshold
(T) Activity threshold
(T) Interval for counting detection
(T) Glitch count to raise problem flag
(T) Activity Q parameter
(T) Detector mode
(T) Active band cutoff frequency
(T) Subband deviation threshold
(T) Wideband level slope
(T) Wideband level intercept
(T) Activity level threshold
WindSuppressorCore.cpp
mAggregateOmniMicWeight.size() == mNumInputChannels + 1
mWindTracker.size() == mNumInputChannels
mGainApplicationCutoffIndex.size() == mNumInputChannels
mSmoothSuppressionGains.size() == mNumInputChannels
mSmoothSuppressionGains[0].size() == mCplxVectorSize
mRampedGainFloor.size() >= mCplxVectorSize
setFrequencySmoothingFilter
psd1.size() >= mNumBinsToProcess
psd2.size() >= mNumBinsToProcess
coherence.size() >= mNumBinsToProcess
updateAggregateOmni
mAggregateOmniMicWeight.size() >= 2
computeWindSuppressionGain
psd.size() >= mNumBinsToProcess
gain.size() >= mNumBinsToProcess
refineGainsBasedOnEnergy
applyFrequencySmoothingWindow
input.size() >= inputSize
mTmpVector1.size() >= inputSize + mFilterSize
smoothGainsInTime
createGreterThanMask
vecIn.size() >= numElements
vecOut.size() >= numElements
createSmallerThanMask
generateFrequencySmoothingWindow
window.size() >= N
generateHighPassCutoffIndex
AUNeuralNetRES.cpp
nnres
Number of DNN layers
Number of frames for context window
Forgetting factor (time constant)
Echo suppression amount
Use gain floor?
EC Delta EIR.
EC IR Delay.
EC Adapted flag.
EC Time aligned ref signal energy.
EC Mic-Eclee cross correlation.
FreqDomainConvolver.cpp
Filter length must be even
Filter length must be less than or equal to block size
AUSpatialProbability.cpp
Steering vector dictionary
External steering vector
Von Mises (DOA)
Watson (DOA)
Complement Von Mises (DOA)
Complement Watson (DOA)
Uniform (DOA)
Steerig Vector-based Watson
Steerig Vector-based Complement Watson
Steerig Vector-based Mixture of Watson
Steerig Vector-based Uniform
Steerig Vector-based Gaussian-like
Steerig Vector-based Mixture of Gaussian-like
Weighted with external probability
Fixed (to shapeParameterMax)
Weighted with external probability (between kappaMin and kappaMax)
Weighted with external CDR (between kappaMin and kappaMax)
Weighted with Frequency (between kappaMin and kappaMax)
Set externally per frequency
Not used
Target presence probability
One minus interferer presence probability
Target definition mode. Used to define the centroid for the target model.
Target azimuth, used for DOA mode.
Target elevation, used for DOA mode.
Target distance, used for DOA mode.
DOA-based target source model (used for TargetDefinitionMode: DOA).
Steering vector-based target source model (used for TargetDefinitionMode: SteeringVectorDictionary and ExternalSteeringVector).
Steering vector-based interfering source model (used for TargetDefinitionMode: SteeringVectorDictionary and ExternalSteeringVector).
Shape parameter for the target model (fixed or frequency weighted).
Maximum value of the shape parameter for the target model.
Minimum value of the shape parameter for the target model.
Prior probability mode for the target and interferer (fixed or weighted).
Prior probability of a source (either target or interfererer).
Conditional prior probability of the target source.
Smooth subband DOA estimates? (used for TargetDefinitionMode: DOA)
Temporal smoothing of the subband DOA estimates (time constant, in seconds).
Frequency smoothing of the subband DOA estimates (bandwith, in octaves).
Post-mask definition mode. Used to define computation of the real-vaued gain.
Minimum gain for the post-mask (in dB).
Scaling parameter for sigmoid mapping from CDR to shape parameter.
Offset parameter for sigmoid mapping from CDR to shape parameter (in dB).
Average presence probability of the target source for the current frame (averaged across subbands).
Average presence probability of an interfering source for the current frame (averaged across subbands).
Average presence probability of the background noise component for the current frame (averaged across subbands).
Bypass with external probability as the target probability estimate?
Lower bound for the estimated target probability (in dB).
Cutoff frequency to start decaying concentration parameter (in Hz).
Target beam index for steering vector-based models.
Minimum gain for the post-mask in noise (in dB).
Apply extra suppression if average SPP is lower than this threshold (constant probability).
Hangover time of the decision of identifying a speech frame based on the SPP value (time constant, in seconds)
SetKappaSubband
SpatialProbabilityBase.hpp
mKappaSubband.size() == (inDataByteSize / sizeof(Float32))
AUOneChannelNSV4.cpp
LPC Bypass
LPC All
LPC VAD Only
LPC FREQ Only
LPC Noise
NoiseUpperBound
NoiseLowerBound
noise supp level
speech prob
noise SPL (gated PS)
noise SPL (one mic)
AGC dynamic gain
AGC post gain
LPC Mode
LPC VAD Clip Threshold
Noise Estimator
Notification type = 
, Notification Time (samples) = 
Detection
Removal
TSJump
, Event Type = 
, Notification RecvTime (samples) = 
, AudioBufBegin (samples) = 
, AudioBufEnd (samples) = 
, jump = 
, Click Type = 
, Detection Time (samples) = 
, Click Found = 
 BLOWUP DETECTED!!
, Removal WinBegin (samples) = 
, Removal WinEnd (samples) = 
, Input Energy 
, Output Energy 
, Energy Ratio 
ClickEventLogger.mm
%04d%02d%02d.%02d%02d%02d_%d%d%d
ClickEventLogger.h
failed to get event
failed to store event
BasicZeroCrossingGapFiller.mm
%s%s
ParamX
Invalid VAD mode
VAD2StateLabels.cpp
Loss at 250 Hz
Loss at 500 Hz
Loss at 1 kHz
Loss at 2 kHz
Loss at 3 kHz
Loss at 4 kHz
Loss at 6 kHz
Loss at 10 kHz
Maximum compression gain
Minimum compression gain
Attack time
Release time
Power Spectrum smoothing time
Fine-tuning gain bias
Fine-tuning brightness adjustment
Fine-tuning ratio adjustment
Fine-tuning SPL bias
Enable Noise Suppression
Noise estimate smoothing time
Noise estimate bias
Noise suppression time constant
Noise suppression floor
Minimum combined comp+supp gain
Filtering mode
Output sensitivity
Gain downstream of Audio Unit
Processing mode
Headphone Type
Expander Ratio
Expander Threshold
Linked Mode
AUHearingLossCompensator.cpp
hearc
CircArrayKernel.mm
Number of input channels is larger than supported
Max frames per slice isn't a power of 2
Order determined from beam compositions doesn't match expected
Number of beam FIRs and beam compositions doesn't match
Driver masks vector size doesn't match number of output channels
Mismatch of speakers in rows between speakers in rows vec and modal FIRs vec
Number of beam FIRs doesn't match current number
New beam filters differ in size from previous ones
Could not queue staged beam filters
Mismatch between algorithm order and modal FIR coeffs inner size
Modal FIRs not power of 2 length
pFilterCoeffs is NULL
MaxFramesPerSlice is 0
Coeffs outer size is 0
Coeffs inner size is 0
AUECMIMO.cpp
ecmimo_log_period_in_seconds
auecmo
Total modelled filt len
Initial threshold on prior state-error covariance
Secondary threshold on prior state-error covariance
Error PSD gain
Error PSD Regularization
Step size
Initialization for state error covariance
Iterate between LB Expectation (E) & Maximization (M)
Smoothing constant for leakage based posterior
Smoothing constant for ref PSD
Smoothing constant for error PSD
Leakage amplification
Reference signal excitation threshold
Total filt len when reading out
Time period after which debug metrics are logged
Update filter every X input block
QRD mode (iQRD=1, RMGS=2), param IDs: 0,4,5,9,10,12,17,18,19
Delay of QRD (output smoothing, only if filtLen > blockSize)
QRD whether to skip mixed norm calculation or not
P-Norm
findNearestPoint
ActiveIntensityAnalysis.cpp
grid.size() == 3 * N
SourceExtentProcessor
setHOAParams
SourceExtentFilterDelay
SourceExtentSizeWeight
updateExtentParameters
pseudoInverse
MoorePenrose.cpp
A.NumRows()==Aplus.NumCols()
A.NumCols()==Aplus.NumRows()
ClickRemovalRecorder.mm
detector_input
removal_input
delayed_detector_input
delayed_removal_input
removal_output
markings
accelerometer
HRTFNFSpatializer
RadiusNearFieldMin
RadiusMonoPanned
RadiusInHead
InHeadGain
processAccumulatingStereo
BinauralSourceExtentIRCustomURL
CLSPKernel CalcCoeffs atk/rel params Ch %u: ThermalGainAtkTime=%f; ThermalGainRelTime=%f; PeakDispAtkTime=%f; PeakDispDecayTime=%f; FeedbackIntTime=%f; 
ClosedLoopSpeakerProtectionKernel coeffs Ch %u:
 at1C=%f;
 at2C=%f;
 csigma=%f;
 bt0C=%f;
 bt1C=%f;
 bt2C=%f;
 ca10=%f;
 ca11=%f;
 ca12=%f;
 ca20=%f;
 ca21=%f;
 ca22=%f;
 xUL=%f;
 sze0=%f;
 at1A=%f;
 at2A=%f;
 szc0=%f;
 at1B=%f;
 at2B=%f;
 ptp.ap1=%f;
 ptp.ap1a=%f;
 ptp.xlim=%f;
 flvavg=%f;
Thermal Coeffs:
 AmbTemp=%f;
 th_ag=%f;
 invRt=%f;
 thermAtk=%f;
 thermRel=%f;
 th_ac1=%f;
 th_bc0=%f;
 th_bc1=%f;
 th_am1=%f;
 th_bm0=%f;
 th_bm1=%f;
 ThermalPeriod=%u;
 invThermalPeriod=%f;
 ThermalLim=%f;
 HardTempLimHR=%f;
 Thermal_kI=%f;
PredDisp_Data
PredDisp_Data_r
PredDispMore_Data
PredDispMore_Data_r
Reb_Data
Err_Data
A1_Data
A2_Data
Phi_Data
EAMS_Data
CPScale_Data
Reb_Data_r
Err_Data_r
A1_Data_r
A2_Data_r
Phi_Data_r
EAMS_Data_r
CPScale_Data_r
CoeffLog
CoeffLog_r
inputSampleRate
Uninitialize
DSPGraph
/Library/Audio/Tunings/Generic/VAD/nnvad.dspg
/Library/Audio/Tunings/Generic/VAD/nnvad.propstrip
/Library/Audio/Tunings/Generic/VAD/nnvad.austrip
%s-%s-%s-%s
%s-%s-%s-%s-%s
vpAspen_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpAspen_v2.cpp
TryLoadingTuningPlists_block_invoke
snprintf error
Trying to load tuning %{private}s%s
Couldn't load tuning strip
Succesfully loaded tuning strip %{private}s%s
i24@?0*8r*16
ulnk
dlnk
TryLoadingTuningPlists
Tunings loaded successfully for %s-%s-%s! '%{private}s/%{private}s/%{private}s/%{private}s'
No vocoder tuning fallback could be found for vocoder type %s
no custom tuning plists found for headphone, headset or endpoint-specific device %s-%s; trying to find tunings for the original ref & mic port types...
No tuning plists found due to unknown vocoder type. This could be transient. Using default paramters.
BuiltInMicDataSource
com.apple.audio.virtualaudio
InitializeVPParams
initializevpparams: VAD-BuiltInMicDataSource = %i
BuiltInMicSelection
initializevpparams: VAD-BuiltInMicSelection = 0x%x
dl mix fmt & hw ref fmt were out-of-sync..re-setting while using external ref
Hey I just met you, and this is crazy, but here's my component 'Audio - DSP Software', so file a radar maybe.
VPV3
Tuning loading is bypassed for this device
(UL)-AuxVP
(DL)-AuxVP
AUTweakaLeak
tweakaleak_verbose
Analysis
Smoothing
Adaptation
Monitoring
Monitoring - Left
Monitoring - Right
/tmp/TLParamLog
/tmp/TLParamNamesToLog.txt
AUTweakaLeak.cpp
Biquads_%u
Anchors
Biquads
Butterworth Bandpass
8th Order Bandpass
System Latency
LP Cutoff: Correlation
HP Cutoff: Correlation
LP Cutoff: LF Power
HP Cutoff: LF Power
LP Cutoff: HF Power
HP Cutoff: HF Power
Correlation Frame Width
Correlation Stride
Correlation Att/Rel
LF Power Attack
LF Power Release
HF Power Attack
HF Power Release
LF Power Ratio Attack
LF Power Ratio Release
DL Power Attack
DL Power Release
Force Freeze
Normalize Corrective Gain
Bypass Gain Offset
Gain Offset (w/o norm)
Gain Offset (w/ norm)
Max Corrective Gain
Min Corrective Gain
Speaker LF Power Threshold
Speaker HF Power Threshold
Mic LF Power Threshold
Remove DC For Correlation
Bypass Correlation
Correlation Threshold
Corrective Boost Cutoff
Corrective Cut Cutoff
SPL Overload Threshold
SPL Overload Ramp Time
DL Gate Lower SPL
DL Gate Upper SPL
DL Gate Lower DL Level
DL Gate Upper DL Level
Is On Ear
SPL Overload Hysteresis
Corrective Filter Q
Reference Trim Gain
LF Analysis Filter Type
Correlation
LF Power Ratio (mic/spk)
HF Power Ratio (mic/spk)
Applied Gain
Adaptation Frozen
Mic LF Power
Speaker LF Power
Mic HF Power
Speaker HF Power
DL Gate Threshold
Total Speaker Power
Cutoff Freq
Ramp Time (ms)
Gain (dB)
Final Gain Channel 0
Final Gain Channel 1
DL Mix Block Size
Min Mix Gain
Max Mix Gain
Noise Threshold for Vol Boost
Min Boosting Level
Boost Amount
Max Non Boosting Level
FEV Gain at Min. Volume
FEV Gain at Max Volume
DL AGC Target in Music
DL AGC Max Gain in Music
Hold time for switching DL AGC params
Threshold for music presence detection
Scaling for volume matching
vpWirelessChargingNotificationQueue
StartVPWirelessChargingMatStateListener
vpWirelessCharging.mm
gNotifyDispatchQueue != nil
B8@?0
IsWireless
com.apple.system.powersources.source
Portrait Upside Down
Landscape Left
Landscape Right
Shading Enabled
Left Cutoff
Right Cutoff
total modelled filt len
(I) actual filt sz
delta EIR disable
(I) delta EIR
(I) Freeze adaptation option
(I) EC Ref-Mic Delay MilliSec
(I) EC main lobe delay
Allow LMS filter scale down for rapid h changes
EC init convergence options
(D) DualEC
DualEC DualEcStatDur
DualEC MinBackupOverAdapt
DualEC MinCopyAdaptToBackup
DualEC MaxCopyAdaptToBackup
DualEC ResetTime
DualEC EPS_EC_ERROR_MIN
DualEC MIN_ADAPT_DOING_OK
DualEC MIN_ADAPT_OVER_BACKUP
DualEC MIN_ADAPT_IN_SINGLETALK
DualEC MIN_ECHO_LEVEL_TO_CHECK
DualEC MIN_HANG_TIME
FastInitConverge MaxAdaptRate
FastInitConverge MinAdaptRate
FastInitConverge HighXCorr
FastInitConverge LowXCorr
FastInitConverge TimeConstForRunningAv
FastInitConverge EnableSubSampForDelayEst
FastInitConverge LeakThresh
(D) RER floor on/off
RER floor LeakThresh
RER floor MicEchoEstXcorrThresh
Threshold on echo to local voice energy for beam
(I) Echo flag to beam2
(I) Mic Eclee Xcorr
Fast Adapt: 0=off, 1=init conv, 2=init+re conv
Crop: Enable crop for long total filter lens
Crop: Pre-lobe delay for long total filter lens
Crop: Copped filter length for long total filter lens
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v4/vpProcessUplink_v4.cpp
vpProcessUplink_v4.cpp
echosuppressor
Mid gain
Side gain
LowBand
HighBand
Cadenza7_Experimental
Cylo3_Experimental
Compression Amount
Input Amplitude
Output Amplitude
SoundGaindB
SoundGaindB Offset
MaxOutputPower
MaxNoiseRelGain
MaxNoiseAbsGain
MinSoundThresh
MaxNoiseThresh
UpSlewRate
DownSlewRate
SmoothWinMs
WinMs
MaxVolume
MinVolume
Volume
Number of volume knees
Number of compression knees
UpwardsCompRatio
A-Weighting Enabled
Lookahead (ms)
ShortWin Enabled
ShortWinMs
ShortWin Peak
ShortWin Attack
ShortWin Decay
ShortWin Max dBRMS
ShortWin Max dBFS
LongWin Enabled
LongWinSec
LongWin Attack
LongWin Decay
LongWin MaxOutputPower
VolumeKneeX1
VolumeKneeX2
VolumeKneeX3
VolumeKneeX4
VolumeKneeX5
VolumeKneeY
CompKneeX
CompKneeRatio
AUTweakaLeakIR
AUTweakIRInternalLogs
TalIRInternals
(Tun) Run AU but bypass the gain internally
(Tun) One forces the AU to calc BQ filter coeff internally
(Tun-only startup) Size of FFT used for analysis (will be doubled for robust mode)
(Tun-only startup) Number of active samples of IR (<=BlockSize)
(Tun) Start freqency used for analysis (Hz)
(Tun) End freqency used for analysis (Hz)
(Tun) Nominal target gain for the analysis (dB)
(Tun) Target gain when in Bypass (dB)
(Tun) Upperbound limit on applied-gain (dB)
(Tun) Lowerbound limit on applied-gain (dB)
(Tun) Upperrail of measured IR-gain rel2 nom target (dB)
(Tun) Lowerrail of measured IR-gain rel2 nom target (dB)
(Tun) Protect lower rail of IR-gain rel to Target (dB)
(Tun) Alpha smoothing value when gain is increasing
(Tun) Alpha smoothing value when gain is decreasing
(Tun) Q for corrective filter
(Tun) Corrective Boost Cutoff
(Tun) Corrective Cut Cutoff
(Tun) Overload threshold on SPL (dB)
(Tun) Overload threshold on SPL hysteresis (dB)
(Tun) When in overload, this is the alpha used 
(Dyn Int) Force adaptation to freeze in case of external isses
(Dyn Int) Set externally to say device is on ear
(Dyn Int) Set externally from NS to give SPL (dB)
(Dyn RO) Instanenous raw gain before oversight (dB)
(Dyn RO) Instanenous raw smoothed gain (dB)
(Dyn RO) Instanenous dynamic gain actually selected (dB)
(Tun) Num of Biquads to use in compute when there is no table
(Tun) A multiplicative bias to dB gain when using calculated coeffs
(Tun) 0=Old operation, 1=Double IR for EC alignment robustness
panWithSize
BypassedStereoPanner.cpp
numSurroundingPoints == 16
isCloseTo
AUSpatialMixerV2
CalculateSubbandDOA
SubbandDOACalculator.cpp
beamsFrom < mNumBeams
beamsTo < mNumBeams
auspro
SpatialProbabilityBase.cpp
ChannelSelectorBox.cpp
out(0).wire()->buffer()->byteCapacity() >= size
static_cast<int>(inABL->mNumberBuffers) > channelSelection
inABL->mBuffers[channelSelection].mDataByteSize >= size
ChannelSelectorBox
req filt len
actual filt sz (I)
delta EIR (I)
tsmic clipping (I)
EC Ref-Mic Delay MilliSec (I)
EC main lobe delay (I)
EC filter type
Dual EC
Dual EC DualEcStatDur
Dual EC MinBackupOverAdapt
Dual EC MinCopyAdaptToBackup
Dual EC MaxCopyAdaptToBackup
Dual EC ResetTime
Dual EC EPS_EC_ERROR_MIN
Dual EC MIN_ADAPT_DOING_OK
Dual EC MIN_ADAPT_OVER_BACKUP
Dual EC MIN_ADAPT_IN_SINGLETALK
Dual EC MIN_ECHO_LEVEL_TO_CHECK
Dual EC MIN_HANG_TIME
FastInitConvergence MaxAdaptationRate
FastInitConvergence MinAdaptationRate
FastInitConvergence HighXCorr
FastInitConvergence LowXCorr
FastInitConvergence TimeConstForRunningAverage
FastInitConvergence EnableSubSampingForDelayEst
FastInitConvergence LeakThresh
RER floor on/off
Echo flag to beam2 (I)
AU_Disable_NonFinite_Handling
offset
ConstantDetectorParams.mm
SmartFIR.mm
Filter length must be power of 2
Block size must be power of 2
FFT initialization failed
Trying to initialize channel out of bounds
vpSetupDownlinkDSPChain.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDSPChains/vpSetupDownlinkDSPChain.cpp
SetupDownlinkFarEndVoiceMixGraph
loading far end voice mix graph "%s"
failed to load far end voice mix graph text
file "%s" does not exist
loading far end voice mix AU strip "%s"
failed to load far end voice mix AU strip
loading far end voice mix property strip "%s"
failed to load far end voice mix property strip
vp_enable_far_end_voice_dnn_vad
SetupDownlinkFarEndVoiceDNNVADGraph
loading far end voice DNN VAD graph "%s"
failed to load far end voice DNN VAD graph text
loading far end voice DNN VAD AU strip "%s"
failed to load far end voice DNN VAD AU strip
loading far end voice DNN VAD property strip "%s"
failed to load far end voice DNN VAD property strip
|Processor #
initializeSpatializer
HOASourceExtentIRCustomURL
unique_lock::unlock: not locked
HandsetNoiseEQCore.h
hopsize > 0
numFreqBins > 0
inMics == 2
Pframe
Min Gain
Max Gain
Voice Noise Threshold
Speech Prob Threshold
Gain TC in Noise
Gain TC in Voice
Power Spectrum TC
Frequency Smooth
createHOADecoders
AUNeuralNetVAD.cpp
Binary VAD mask
Utterance VAD mask
Soft VAD mask
Von Mises
Watson
Complement Von Mises
Complement Watson
Uniform
Product combination
Bayesian combination
Spatial SPP combination
NNVAD: Number of DNN layers
NNVAD: Number of frames for context window
NNVAD: Forgetting factor (time constant)
NNVAD: Binary VAD
NNVAD: EndPoint VAD
NNVAD: Utt VAD
NNVAD: Soft VAD
NNVAD: threshold
NNVAD: wait time
NNVAD: transition prob. a01
NNVAD: transition prob. a10
NNVAD: Output mask mode
NNVAD: Use directional mode
NNVAD: Target azimuth, when using the directional mode
NNVAD: Target elevation, when using the directional mode
NNVAD: Model type, when using the directional mode
NNVAD: Model shape parameter, when using the directional mode
NNVAD: Conditional target prior, when using the directional mode
NNVAD: Combined probability mode, when using the directional mode
NNVAD: Current azimuth (input), when using the directional mode
NNVAD: Current elevation (input), when using the directional mode
NNVAD: Spatial SPP upper cutoff in Hz, when using the directional mode
NNVAD: Send VAD output mask, selected by output mask mode, through audio output.
process: not ok to process?!
process: tryer acquire failed
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpProcessing/vpProcessUplink_v2.cpp
vpProcessUplink_v2.cpp
mic sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
mic sample time jumped backwards
RunUplinkEchoDSP
mNewOutRingBuff has encountered an overrun: tried to write %u but only had space for %u samples
UL %f %f %f
UL ERROR, processing slower than RT - %f
UL ERROR, not being called in a timely manner - %f
Bailed UL %f %f %f
LoadMatchingReferenceForMicSignalAndFillTsMic
warning: tsref ring buffer: <slightly ahead> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly ahead> couldn't read required samples
tsref ring buffer: <slightly ahead> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly ahead> the calculated samples range issue
warning: tsref ring buffer: <slightly behind> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
warning: tsref ring buffer: <slightly behind> couldn't read required
tsref ring buffer: <slightly behind> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
tsref ring buffer: <slightly behind> the calculated samples in range issue
process: ERROR output buffer has encountered an underrun
HandleUplinkOutputTimeStamps
process: ERROR output buffer has encountered an underrun, need %d, have %d samples
CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESS - ioOutData buffer (%d bytes) smaller than what VP is configured to output (%d bytes)!
preflight uplink: not ok to process?!
preflight uplink: tryer acquire failed
Invoked the muted talker detection callback, event = %u
vpInitializeDownlink.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpInitializeDownlink.cpp
initializedlp: call num %u
mix %s (blksz %u), voice %s
initializedlp:   mix asbd = %s
initializedlp: voice asbd = %s
initializedlp: mix blk sz = %d
DL Fade data size = %u
InitializeSpeakerTelemetryInput
initspkrtel: asbd = %s, blksz = %d
InitializeDLP
InitializeDLP: hwref and dlmix formats were mismatched -- calling Initialize again
Begin self-reinit (UpdateReferenceSignalFormat)
End self-reinit (UpdateReferenceSignalFormat)
initializedlp: [iphone/ipad simulator] disabling all downlink processing
initializedlp: ul-dl config out of sync
initializedlp: ul-dl config no longer out of sync
vp_disable_oaugain
Re-set mix gain range to [%f, %f]dB
CalcDLIoBlkSz
+++ dl io blk size = %u, num dl io cycles = %u
AUMultiChanEchoCanceler::ProcessMultipleBufferLists error - wrong (%d) block size expected (%d)
Fast Adapt: 0=off, 1=init conv, 2=init+re conv 3= init+re conv + init rate cal
Multi-chan EC mode: 0-LinearEC, 1-PolyEC, 2-MultiChanEC, 3- MultiChan+PolyEC
Order to do for Poly EC
Num of ref channels to use for multi-chan EC
(I) 10*log10(syy/see)
(I) Echo leakage
Enable Ref Channel 0
Enable Ref Channel 1
Enable Ref Channel 2
Enable Ref Channel 3
Enable Ref Channel 4
Enable Ref Channel 5
Enable Ref Channel 6
Enable Ref Channel 7
Enable Ref Channel 8
Regularization constant for NLMS Normalization
SumRows
LiteMatrix.cpp
outputMatrix.NumRows()==1
outputMatrix.NumCols()==inputMatrix.NumCols()
ScaleCols
inputVector.size()==NumCols()
SetWithOther
inputMatrix.NumCols()==NumCols()
inputMatrix.NumRows()==NumRows()
Diag
outputMatrix.NumRows()==inputMatrix.NumCols()
InputAndOutputFormatMismatch
vois_report_type
InitializeBaseFailed
CreateProcessingGraphsFailed
InitializationSuccessful
ParametersUpdated
vois_error_code
vois_input_format
vois_output_format
vois_initialization_duration_miliseconds
vois_parameter_wetdrymixpercent
vois_parameter_soundtoisolate
vois_parameter_usetuningmode
vois_parameter_selectedtuningmode
vois_parameter_updatedtuningmode
Wind Probability
No Wind Threshold
No Wind Low Frequency
No Wind High Frequency
Wind Threshold
Wind Low Frequency
Wind High Frequency
Voice Noise Probability Threshold
Min Probability In Noise
Min Probability In Voice
Voice Time Out
Min Between Voice And Noise
Mic Switch decided in NoiseSelector
Threshold for MagDiffVAD
aunsel
ComputeCoefFromTC
MagDiffVAD.h
blockFs > 0
SetAudiogram
PrescriptiveAmplification.cpp
loss_dBHL.size()==mNumSubbands
GetSplSteps
numSpl >= kPrescriptiveAmplification_NumElmSpls
GetGainTargets
numActiveSubbands <= mNumSubbands
SetSensitivityOffset
FrequencyDomainCompressor.cpp
offsets_dB.size() >= mNumSubbands
subbandPower.size() >= mNumSubbands
subbandGain_dB.size() >= mNumSubbands
channel_map
num_input_channels
num_output_channels
AUChannelSelector
x_write
x == 0
i < m_buf.size() - 2
written_bytes > 0
static_cast<size_t>(written_bytes) < m_buf.size()
(i + 2) < m_buf.size()
m_buf[i - 1] != '\0'
m_buf[i + 2] == '\0'
cannot use operator[] with 
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v8/vpProcessUplink_v8.cpp
vpProcessUplink_v8.cpp
std::string_view vp::reflect_type_name() [T = vp::Service_Provider]
std::string_view vp::reflect_type_name() [T = vp::services::Audio_Hardware]
std::string_view vp::reflect_type_name() [T = vp::services::Control_Center]
std::string_view vp::reflect_type_name() [T = vp::services::Control_Center_Impl]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Standard]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Wide_Spectrum]
std::string_view vp::reflect_value_name() [V = vp::services::Control_Center::Chat_Flavor::Voice_Isolation]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)3]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)4]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)5]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)6]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)7]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)8]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)9]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)10]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)11]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)12]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)13]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)14]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)15]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)16]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)17]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)18]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)19]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)20]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)21]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)22]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)23]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)24]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)25]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)26]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)27]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)28]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)29]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)30]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)31]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)32]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)33]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)34]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)35]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)36]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)37]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)38]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)39]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)40]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)41]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)42]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)43]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)44]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)45]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)46]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)47]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)48]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)49]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)50]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)51]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)52]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)53]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)54]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)55]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)56]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)57]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)58]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)59]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)60]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)61]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)62]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)63]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)64]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)65]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)66]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)67]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)68]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)69]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)70]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)71]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)72]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)73]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)74]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)75]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)76]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)77]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)78]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)79]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)80]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)81]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)82]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)83]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)84]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)85]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)86]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)87]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)88]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)89]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)90]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)91]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)92]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)93]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)94]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)95]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)96]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)97]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)98]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)99]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)100]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)101]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)102]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)103]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)104]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)105]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)106]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)107]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)108]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)109]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)110]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)111]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)112]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)113]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)114]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)115]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)116]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)117]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)118]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)119]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)120]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)121]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)122]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)123]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)124]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)125]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)126]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)127]
std::string_view vp::reflect_value_name() [V = (vp::services::Control_Center::Chat_Flavor)128]
std::string_view vp::reflect_type_name() [T = vp::services::Mobile_Gestalt]
jxx29Cq5bGHDnkcha4y/Rw
meicxSe0OZJaae1hEiOV5Q
std::string_view vp::reflect_type_name() [T = vp::services::User_Defaults]
numChannelsIn
numChannelsOut
matrix
ProcessFilter
AUFIREngineKernel.cpp
!filter.mIRBlockFFTs.empty()
GetPastInputBlock
block < blockCount
CommitChanges
!IsFading()
axisPanner
CartesianPanner.cpp
inSpeakerCoords.size() == outGains.size()
lowCoordIt != inSpeakerCoords.end()
highCoordIt != inSpeakerCoords.end()
VibeAnalyzer.cpp
Some algorithm tuning parameters out of range
Mass_g
IMONScale
VMONScale
BandPassLowerCorner
BandPassUpperCorner
TargetVelocityRatioHigh
TargetVelocityRatioLow
PeakWindowNumber
GainIncrement
GainDecrement
MomentumWindowDelay_ms
VelocityMeasuredRangeMin
VelocityMeasuredRangeMax
AmplifierGain
MeasuredToExpectedPowerRatio
PowerLimit
vana_datalog_level
vibeana_RCalvlog
vibeana_RCalilog
vibeana_EMFlog
vibeana_EMFVlog
vibeana_EMFIlog
vibeana_actionlog
BandPassOrder
MaxIVHistorySize_Sec
PeakWindowLength_Sec
RCalIPwrThres
RCalVPwrThres
RCalFrequency
RCalRangeMin
RCalRangeMax
SineFrequency
Kmotor
Inductance_uH
DCResistance
TargetVibeVelocity
MaxIVHistorySize_sec key missing from dict
RCalFrequency key missing from dict
RCalRangeMin key missing from dict
RCalRangeMax key missing from dict
RCalVPwrThres key missing from dict
RCalIPwrThres key missing from dict
IV data is unsupported type
vana
Min. Media Gain (dB)
Max. Media Gain (dB)
Min. Voice Gain (dB)
Max. Voice Gain (dB)
Scale factor for volume matching
Current Scalar Volume
AGC media target (dB)
AGC max media gain (dB)
Hold time for switching AGC parameters (frames)
Threshold for media presence detection (dB)
AUExpanseController
vpEchoGateV3.cpp
vpechogate3
AUDereverb.cpp
mclp_log_period_in_seconds
LMS.
RLS.
LSL.
LSL with auto order selection.
audrev
MCLP mode
Delay for MCLP
MCLP order
Backward prediction error energy threshold
Filter echo estimates?
Stop adaptation during echo?
Sxx threshold to stop adaptation
Eclee threshold to stop adaptation
Apply conversion factor?
Min frequency for backward prediction energy
Max frequency for backward prediction energy
Selected MCLP order
Weighted error regularization energy threshold
P-norm
Place holder
EC Delta EIR
EC IR Delay
EC Adapted flag
EC Time aligned ref signal energy
EC Mic-Eclee cross correlation
sampleRate
numIns
numOuts
blockSize
graphName "
Default Matrix Patcher (No graph specified)"
in input
out output
box MatrixPatcher (aufx pchr appl) 1 1
wire input MatrixPatcher ([sampleRate] [numIns])
wire MatrixPatcher output ([sampleRate] [numOuts])
MatrixPatcher
AUName
GetParameterInfo
AUDSPGraph.cpp
cfStr
isAU
componentType
componentSubType
componentManufacturer
audioComponentDescription
AUSpecific
BoxSpecific
cfobject
BoxName
Preset
/tmp/AudioCapture/AUDSPGraph
AUDSPGraph
enable_audspg_dsp_captures
InternalBuild
enable_audspg_details
ABHelperIsABTestModeOn
ABHelperWriteJSONFileFromDescription
ABHelperCreateDescriptionFromAudioUnit
ABHelperCreateDescriptionFromDSPGraphBox
ABHelperCreateDescriptionFromASBD
ABHelperCreateDescriptionFromDSPGraph
ComputeSubspaceLikelihoodHelper.cpp
invalid output num cols
invalid output num rows
invalid PhiMatrix num cols
zeta shape mismatch
dimension mismatch
Psi must be square
mismatch in OmegaInv size
invalid YSegmentLength
Mis-matched vector sizes!
outClickLogLik stores the no click probability too!
AUSignalCombiner.cpp
Channel Selections
Specially Handled Input Buses (if any)
Combining Related Parameters
Guided Minimum Magnitude
Always Track Default Channel
Always Track External Channel
Only Track External Channel During Occlusion
Occlusion Flag
Default Channel Selection
External Channel Selection
Main Mics Bus?
ECLee Bus?
Wind Suppressed Bus?
Echo Suppressed Bus?
Default Phase Bus
Selected Phase Bus
Low Frequency For Combining
High Frequency For Combining
ECLee Energy
ECLee Threshold
Default Channel Override
Channel Selection Rule
Combine?
Passthrough Output Bus?
Selected Channel
Combine Override
AUAUSignalCombiner
PassThroughSpatializer.cpp
!isnan(inGain)
PassThroughSpatializer
DecodeFromConvergence
MixViterbiProd.cpp
!mNeverConverged
DecodeFromConvergence_Post
eventAbsoluteTime
eventType
CLMClickEventMonitor.mm
%@ time %llu type %li
B24@?0@"CLMClickEvent"8@"NSDictionary"16
HIDEventMonitor.h
Reserved
InChannels
OutChannels
AudioChannelLabel
AudioChannelFlags
Coordinates
AudioChannelLayoutTag
AudioChannelBitmap
NumberChannelDescriptions
AudioChannelDescriptions
ComponentManufacturer
ComponentSubType
ComponentType
ComponentFlags
ComponentFlagsMask
AudioFormatID
AudioFormatFlags
BytesPerPacket
FramesPerPacket
BytesPerFrame
ChannelsPerFrame
BitsPerChannel
Magnitude
ThresholdMultiplier
ThresholdMultiplierPower
NumLUTPoints
ThresholdMultiplierLUTx
ThresholdMultiplierLUTy
TailTime
SupportsMPE
StreamFormat
ElementCount
BypassEffect
RenderQuality
OfflineRender
LastRenderError
ContextName
AudioChannelLayout
InPlaceProcessing
ShouldAllocateBuffer
FrequencyResponse
SupportedNumChannels
DspLibExcludeChannelMask
SupportedChannelLayoutTags
NumberOfBands
MaxNumberOfBands
UseVideoMode
UseV1Mode
VADModeThresholdParams
DeesserMode
AllowLookAhead
TransformSize
AuxVectorEnable
ReverseMicChannelFlag
ReportedLatency
NoiseSpectrumEstimate
ShadingMode
GainsDB
ForThermalProtection
ForNonCLTMHaptics
AttenuationActiveState
ConfigPlist
FIRMatrices
SetParameters
IOChannelNames
BQPlist
NeuralNetSPPMask
NeuralNetSPPPostMask
ParameterChangeTimeConstant
DspLibPeakPowerGuardAdmittanceFilterCoefficients
AlgoOrder
SpksInRows
SpksOffset
BeamComp
BeamFIR
ModalFIR
EQBiQuad
DriverBQ
CongifPlistVersion
BeamDescriptions
ChannelSplitMode
ChannelMap
TransducerCalibration
VPMode
EnableClosedLoop
SpeakerInputDataSourceOrder
IgnoreChannelTelemetry
ThermalStateOverride
MaxNumBands
CrossoverOrder
PrioritizeLatency
AllowLookahead
InitialGainDB
StateInformation
VolumeMap
NickName
EnableDetailedLogging
LogSamplingThreshold
NonFiniteProtectionBox
SampleRateConverterComplexity
RefIndex
SpacedOmniLeftIndex
SpacedOmniRightIndex
LinearSpatialFirstIndex
ParameterChangeSmoothingTime
GainBox
NumPropVectors
PropVector%u
VectorGainBox
MaxDelayFrames
DelayBox
EitherNoSubtypePropertiesElseNeedsToBeAdded
SubtypeSpecificPropertiesUnavailable
SubTypeSpecific
EitherNoPropertiesElseNeedsToBeAdded
BoxSpecificPropertiesUnavailable
spatialization algorithm
rendering flags
source mode
distance parameters
attenuation curve
point source in-head mode
enable propagation delay
custom source directivity IR
enable reverb send decorrelation filters
enable upmixing for LRC channels
enable exclusion zones
sound stage size
sound stage transition time (secs)
exclusion zone preset
enable parametric processing FOA
binaural compatibility mode
 CFURL
 CString
setData
[empty]
ReferenceDistance = 
, MaxDistance = 
, MaxAttenuation = 
|InputElement #
AUSpatialMixerV2InputElement.cpp
mChannelParameters.size() == mChannelProcessors.size()
PropertyChanged
InitializeParametricProcessor
UpdateSpatializationAlgorithm
UpdateOutputType
UpdateOrientation
InitializeChannelProcessors
UpdateChannelLayout
UpdateBypassMatrix
SetStreamFormat
SetAudioChannelLayoutPrivate
CopyFromBufferList
dst.mNumberChannels == src.mNumberChannels
PrintLoadedHRIRLog
AUBeamNF.cpp
diffr
mic_spacing
Front Beam Settings
Back Beam Settings
Front Beam
Back Beam
length
posteq
tuningdata
beam2_random_input
beam2_dump_diffr
beam2_dump_eq
beam2_custom_diffr_path
beam2_custom_eq_path
beamnf
Beam Index
Mic Programmable Gain
Flag to say there is high far-end (echo) activity
Front-end Calibration Enable
Fixed Beamformer Enable
Adaptive Beamformer Enable
Use Standard Adaptive Beamformer
Electronic Wind Screen Enable
Long-Term Noise Suppression Enable
Long-Term Noise Suppression Min Gain
Spatial Noise Suppression Active
Spatial Noise Suppression Max Attenuation
White Noise Gain
Adaptation End Frequency
Front End Calibration Gain
Mic Status Name
Nominal Mic Programmable Gain
Bad Mic Hysteresis
Index for desired EWIND deflection coefficient
Time-constant in s for log-spectrum estimation
Threshold for discriminating wind noise and occlusion
High-frequency threshold for discriminating wind noise and occlusion
Threshold for difference noise envelopes during occlusion detection
Threshold for difference noise envelopes during wind detection
Lower bound for spectral estimators
Difference threshold between microphones
Maximum absolute level allowed for inactive (failed) microphone
R-statistic threshold relative full scale in Q8
Difference threshold beam microphone and beam power
Frequency for detection statistic of probability of occlusion
Frequency for detection statistic of probability of failed microphone
Frequency for detection statistic of probability of occluded noisy microphone
Default mic for ewind/occlusion
Ewind cross-fade coefficient
Ewind cross-fade start frequency
Ewind cross-fade high thd
Ewind cross-fade low thd
Beta switch frequency
High-frequency beta
Mic choice above adaptation end frequency
Frequency EQ Enable
vpProcessDownlink_v4.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v4/vpProcessDownlink_v4.cpp
**** compressedVoiceABL->mNumberBuffers != theOutputData.mNumberBuffers in process %d != %d ****
Mic 1 EC LEE
Mic 4 EC LEE
Mic 1
Mic 4
Omni
+X beam
-X beam
AUMixSwitchNF
Ramp Time
Initial Level (dB)
AUECSUMO.cpp
ecsumo_log_period_in_seconds
wolalatency
window
auecso
Covariance thresholding
Initialization for covariance matices
Error PSD norm
Forgetting factor
Channels to be expanded: bitmap
Expansion order
Wola overlap
Number of crossbands
Gain applied to micRef
Flag to determine if we are in button press mode
Flag to see if the EC is adapting
Flag to bypass spatial probability
Number of microphones to process
Energy threshold for detecting non AOP channels (in dB).
Energy delta between AOP and non-AOP channels (in dB).
Set 1 for micRef, Set 0 for trueRef.
Flag to bypass beamformer
Flag to take complex conjugate of Kalman gain
0 for conventional, 1 for fast
Total filt len for NFD
Flag to see if we want to change forgetting factor
Forgetting factor during CFF
Expansion order during CFF
ScottySTFTUpmixer
ScottySTFTUpmixer.cpp
indexAndCoeff.first < decorrelationLength
AUBeamIt.cpp
Off.
Fixed.
SubbandDOA.
Ranged.
No EQ.
EQ designed for selection.
SRP.
SRP-PHAT.
LSDD.
Bypass mode mic index.
Beam selection mode.
EQ for beam selection.
Beam selection algorithm.
Select beams from (Auto)/Beam choice (Fixed).
Select beams to.
Energy smoothing time constant.
Energy threshold (dBFS)
Mean Normalize Selection Beams.
Use mic power averaging.
Selected beam.
Selected beam distance (m).
Selected beam azimuth (deg) (X->Y).
Selected beam elevation (deg) (Z->XY).
Mix EC Parameters?
Switch beams in echo?
Best beam in echo.
Echo-to-local voice threshold.
Local voice level threshold.
Echo active flag.
Limit wind boost?
Reference mic index.
Cutoff frequency for wind boost limiting.
Wind boost detection threshold (dB).
Max wind boost allowed (dB).
Current Crossover Frequency (MAX).
Scale Cutoff.
Raw Scale Smoothing.
Omni Blend Scale Thres.
Crossover Max Frequency.
Crossover Index Attack.
Crossover Index Release.
Crossover Index Hold.
Crossover Index Smoothing.
Min Omni Blend Crossover Frequency.
Min Omni Blend Abs. Energy Trigger.
Wind / Scratch Detect Trigger Attack.
Wind / Scratch Detect Trigger Release.
Cross Fade Length Ramp Slope.
Use beam crossfade for the uplink beam.
Enable beam switching for Auto mode (e.g., external VAD).
AUECMicRef.cpp
ecmicref_log_period_in_seconds
auecmr
Flag to turn on eclee enhancement
Energy threshold for detecting non-AOP channels (in dB).
AUSoundIsolation.mm
Voice
Voice v0: Independent channel processing
Voice v0: Joint channel processing
BlockSize
NumberOfInputChannels
NumberOfOutputChannels
LookaheadSize
/aufx-vois-appl-nnet-vi-v0.plist
/aufx-vois-appl-nnet.aupreset
/aufx-vois-appl-drev.aupreset
/aufx-vois-appl-dnos.aupreset
auvois_show_internal_params
CAUI_createCustomViewForAudioUnit
Wet/Dry Mix
Sound to Isolate
Use Tuning Mode
Tuning Mode
what
code
category
os_status
mixer
DREV
inputDelayForMWF
bypassDelay
SIMULATOR_ROOT
/System/Library/Audio/Tunings
/System/Library/Audio/Tunings/Generic/AU
The CFDictionary object is invalid.
SpectralProfile.cpp
Sample rate is not present in the dictionary.
Profile vector is not present in the dictionary.
Channel Combination Mode
Peak of All Input Channels
Average of All Input Channels
Low Pass
High Pass
Parametric
frequency
bandwidth
Clipping threshold
Clipping flag
Clipping headroom (dB)
AUClipDetector
AUEndpointVAD.cpp
number of VAD results
latest VAD status
latest VAD sample time
VAD status changed
AUMeisterStueck_ViewFactory
band 0: bypass
band 0: makeup gain
band 0: release
band 0: meter decay time
band 0: downwards compressor threshold
band 0: hybrid modulator
band 0: solo
band 0: peak window size
band 0: raised cosine filter time const
band 0: downwards compressor gain range
band 0: downwards compressor ratio
band 0: meter peak hold time
band 0: upwards compressor threshold
band 0: upwards compressor ratio
band 0: upwards compressor gain range
band 0: modulator Xover frequency
band 0: detector SRC factor
band 0: Xfader start
band 0: mute
band 0: sidechain gain
band 0: expander threshold
band 0: expander ratio
band 0: enable
band 0: input gain
band 0: enable analytical signal
band 1: bypass
band 1: makeup gain
band 1: release
band 1: meter decay time
band 1: downwards compressor threshold
band 1: hybrid modulator
band 1: solo
band 1: peak window size
band 1: raised cosine filter time const
band 1: downwards compressor gain range
band 1: downwards compressor ratio
band 1: meter peak hold time
band 1: upwards compressor threshold
band 1: upwards compressor ratio
band 1: upwards compressor gain range
band 1: modulator Xover frequency
band 1: detector SRC factor
band 1: Xfader start
band 1: mute
band 1: sidechain gain
band 1: expander threshold
band 1: expander ratio
band 1: enable
band 1: input gain
band 1: enable analytical signal
band 2: bypass
band 2: makeup gain
band 2: release
band 2: meter decay time
band 2: downwards compressor threshold
band 2: hybrid modulator
band 2: solo
band 2: peak window size
band 2: raised cosine filter time const
band 2: downwards compressor gain range
band 2: downwards compressor ratio
band 2: meter peak hold time
band 2: upwards compressor threshold
band 2: upwards compressor ratio
band 2: upwards compressor gain range
band 2: modulator Xover frequency
band 2: detector SRC factor
band 2: Xfader start
band 2: mute
band 2: sidechain gain
band 2: expander threshold
band 2: expander ratio
band 2: enable
band 2: input gain
band 2: enable analytical signal
band 3: bypass
band 3: makeup gain
band 3: release
band 3: meter decay time
band 3: downwards compressor threshold
band 3: hybrid modulator
band 3: solo
band 3: peak window size
band 3: raised cosine filter time const
band 3: downwards compressor gain range
band 3: downwards compressor ratio
band 3: meter peak hold time
band 3: upwards compressor threshold
band 3: upwards compressor ratio
band 3: upwards compressor gain range
band 3: modulator Xover frequency
band 3: detector SRC factor
band 3: Xfader start
band 3: mute
band 3: sidechain gain
band 3: expander threshold
band 3: expander ratio
band 3: enable
band 3: input gain
band 3: enable analytical signal
Xover 0: frequency
Xover 0: order
Xover 1: frequency
Xover 1: order
Xover 2: frequency
Xover 2: order
band 0: gain
band 1: gain
band 2: gain
band 3: gain
write log file to /tmp
detector SRC factor
bandwidth compensation
RMS time constant
peak hold time constant
peak decay time constant
alising damping
release
DSP render quality
enable overshoot compensation
Filterbank
Band 0
Band 1
Band 2
Band 3
additional parameters
input gain per band
additional parameters 2
auloud
loudnesswarrior_verbose
AULoudnessWarrior
AULoudnessWarrior.cpp
Filter Index
Meter 1
Meter 2
Meter 3
LKFS
A-Weighted RMS
C-Weighted RMS
Zero-weighted RMS
Band-pass RMS
Low-pass RMS
High-pass RMS
Correct Bass
Correct Treble
Correct Both
inBuffer.mNumberBuffers == outBuffer.mNumberBuffers
biquads_%.0f
BassBiquads
TrebleBiquads
ProcessMeters
numFrames <= mMeterOutputBuffers[i].size()
Output Sensitivity
Content Hint
Bass Metric Correction
Bass Effective Gain
Treble Metric Correction
Treble Effective Gain
Meter 1 Enable
Meter 1 Type
Meter 1 Attack Time
Meter 1 Release Time
Meter 1 Frequency
Meter 1 Q
Meter 1 Metric
Meter 1 Threshold
Meter 1 Weight
Meter 1 Offset
Meter 1 Correction Select
Meter 2 Enable
Meter 2 Type
Meter 2 Attack Time
Meter 2 Release Time
Meter 2 Frequency
Meter 2 Q
Meter 2 Metric
Meter 2 Threshold
Meter 2 Weight
Meter 2 Offset
Meter 2 Correction Select
Meter 3 Enable
Meter 3 Type
Meter 3 Attack Time
Meter 3 Release Time
Meter 3 Frequency
Meter 3 Q
Meter 3 Metric
Meter 3 Threshold
Meter 3 Weight
Meter 3 Offset
Meter 3 Correction Select
75 Hz LP Bass Offset Preset
ConvoyDisplacementController
ConvoyDispController.cpp
DOAConditioner.cpp
SetXYZFromPolarDOA
SubbandXYZ.hpp
polarDOA.GetNumBands() == GetNumBands()
SubbandDOA.h
bandIdx < GetNumBands()
HIDEventMonitor.mm
com.apple.coreaudio.hideventmonitor
PrimaryUsagePage
PrimaryUsage
Processing Mode
Noise Floor Gain
Noise PSD Multiplier
Signal PSD Smoothing Time 
Gains Smoothing Time
Time Filter Minimum Size
Filter Cross Fade Time
Use External Gains
Learn Noise Profile
PSD Estimator
Enable Artifact Mitigation
Post Filter SPP Threshold
Post Filter Scaling Factor
Post Filter Minimum Length
Agressive Artifact Mitigation
AUMicSense.cpp
Aug 11 2022
21:47:49
Minimum Phase 0ms
Quasi Linear Phase 0.25ms
Quasi Linear Phase 0.50ms
Quasi Linear Phase 1.00ms
Linear Phase 2.00ms
Linear Phase 4.00ms
Frequency Domain 10.00ms
inFramesToProcess % mBlockSize == 0
Failed to retrieve block size used from input dictionary.
NumberOfChannels
Failed to retrieve number of channels from input dictionary.
Failed to retrieve noise profile from input dictionary.
NeuralNetVAD.cpp
threshold
HangA01
HangA10
DeltaFeature
InputScale
UseDirectionalMode
DirectionalTargetElevation
DirectionalTargetAzimuth
DirectionalModelType
DirectionalModelShapeParamer
DirectionalModelConditionalTargetPrior
CombinedProbabilityMode
SpatialSPPCutOff
VADinAudioOutputMode
OutputMaskMode
FaceTime
FacePlant
TwoMic
noise supp mode
(I) speech probability
occlusion mode
(I) occ_2ndMic confd
(I) ns_auto_mode
auto_blend_alpha
(I) noise SPL (one mic)
(I) 1mic vad
(I) 2mic vad
auto NS level
hb minus lb_sep
P_OCCL_based_alpha
lb_sep
Test_Switch
DL Speech Prob
Inv 2mic vad
tmv - itmv
reverb room type
render quality
offline rendering mode
uses internal reverb
output type
LFE lowpass frequency
BluetoothFeatures
CustomHRTFSupport
personal HRIR type
personal HRTF mode
HRTF type
listen to personal HRIR user choice
personal HRIR dictionary
enable old reverb behavior
spatializer orientation
head orientation quaternion
RM head orientation quaternion
listener position
Listener Position Radius Limit
only frequency domain filtering
orientation listener mode
custom HRIR
custom XTCIR
custom room IR
custom early reflection IR
custom late reverb IR
custom near-field IR
parameter smoothing
global DRR
spatializer property dictionary
enable dynamics processing
output dynamics processing flags
ControlFreak preset CString
LoudnessNormalizer preset CString
enable head tracking
head tracking mode
listen to head tracking user choice
hosted in HAL
custom HOA source extent IR
custom binaural source extent IR
custom XTC source extent IR
parametric processor dictionary
immersive renderer data
room configuration dictionary
early reflection biquad dictionary
late reverb biquad dictionary
setProperty
X = 
, Y = 
, Z = 
, W = 
ByteArray, size: 
Alpha used in half-wave rectifier
Half Wave Rec Option for Ref0. =0 no processing;  =1 do + option; =2 do - option
Half Wave Rec Option for Ref1. =0 no processing;  =1 do + option; =2 do - option
AUDenoise.cpp
pmwf_log_period_in_seconds
Blind PMWF: Multichannel speech presence probability with fixed speech absence probability
Blind PMWF: Multichannel speech presence probability with multichannel voice activity detection
Informed PMWF (iPMWF): Known steering vector
Guided MWF: echo bus is used for target covariance estimation
iPMWF: Covariance Subtraction
iPMWF: A Known Steering Vector
iPMWF: Probabilistic (Soft) Recursive Update
iPMWF: IVA Recursive Update
iPMWF: VAD Recursive Update
EchoBus
Magnitude from EchoBus and phase from MicBus
MicBus multiplied with InputMaskEstimate
Full inverse
HRLS
Gram-Schmidt
PMWF mode
Smoothing time constant for mic PSD
Smoothing time constant for noise PSD
Smoothing time constant for SPP
Parameter for Wiener filter
Initial noise PSD
A priori SPP
Max SPP
Max GLR
Depricated
Number of frames for MVAD tracker
Speech to noise level threshold
Noise reduction amount
Max a priori SAP
Sxx threshold to stop adaptation.
Eclee threshold to stop adaptation.
Min a priori SAP
Number of additional SPP iterations
Use full rank Wiener filter?
Number of frames to initialize noise cov.
Average SPP per frame
Gram-Schmidt regularization energy threshold
Steering type for iPMWF
Use external SPP for iPMWF?
Type of recursive update of statistics for iPMWF
Minimum frequency for IVA VAD calculator for iPMWF
Maximum frequency for IVA VAD calculator for iPMWF
Distribution prior for IVA VAD calculator for iPMWF
Energy threshold for IVA VAD calculator for iPMWF
External input VAD for iPMWF
Maximum signal gain for iPMWF
Target beam index from input plist for iPMWF.
Use updated iPMWF filter on current frame
Guidance mode for GuidedMWF
Covariance inverse calculation mode for GuidedMWF
aucircarray
circarray_verbose
CircArray
AUCircArray.mm
mActiveKernel.get()
Beam Angle %u
Beam Type %u
Gain %u
Delay %u
Blend Time
Angle Offset
Default (Passthrough)
Version
SpeakersInRows
FirstDriverAngles
BeamCompositions
Cardioid
BeamFIRs
ModalFIRs
LatencySamples
GetBeamArrays
firstBeamComp.GetNumberItems() == algoOrder + 1 || firstBeamComp.GetNumberItems() == algoOrder * 2 + 1
Plist doesn't contain speakers in rows array
Plist doesn't contain speakers offsets array
Plist doesn't contain beam compositions array
Plist doesn't contain beam FIR array
Plist doesn't contain modal FIR array
Speakers in row array does not have same number of speakers as AU output channels
Speakers in rows array size doesn't match speaker offsets array size
Number of beam compositions and beam FIRs does not match
Number of modal filters doesn't match what's expected from beam compositions
Beam compositions size doesn't match expected from algo order
EQBQ array length not a multiple of 5, invalid
DriverBQs
Driver BQ array does not have the same number of drivers as spksInRing
DriverMasks
Driver masks array does not have the same number of drivers as spksInRing
Single Unit 5.1
processPolyphase
DelayLine.cpp
phaseIndex < mFractionalPhases
inNumFramesToProcess + padOffset <= mDelayLine.size()
isPowerOfTwo(mFractionalPhases)
setDelay
inTapIdx < mNumTaps
getLatestDelay
inInputData
inNumFramesToProcess <= delayLineLen - padOffset
numSamplesRemaining > 0
inNumFramesToProcess < delayLineLen - padOffset
SetNoiseEstimate
HearingLossCompensator_Core.cpp
numBins == mNumBins
input.size() == mNumChannels
output.size() == mNumChannels
numFrames == mBlockSize
mIsFrequencyDomain ? (input[0].size() >= 2 * numFrames) : (input[0].size() >= numFrames)
AddMultiplyRVectorRScalarMultiplyRVectorRScalar
SmoothedNoiseEstimator.h
setCoefficients
MicSenseDynamicFIR.hpp
newFilterLength <= mMaxNumFrames
Initializing EC
AUParameterLogger.cpp
NULL audio unit pointer
%m-%d-%Y_%I-%M-%S
%s_%s.bin
IRSpatializer.cpp
inMaxFramesPerSlice > 0
inSampleRate > 0
IRSpatializer
NeuralNetImpl.cpp
neuralnetutility_detailed_logging
NeuralNetImpl.hpp
InputOutputStates
NumStates
InputOutputState_
METAL
ANE_RUNTIME_DIRECT
CPU_ALT
CPU_V8
REMOTE
HX_SIM
HX_CVA
METAL_TEXARRAY
METAL_V9
METAL_MPS_BUFFERS
ANE_COMPILER
ANE_SIM
QUANT_SIM
ANE_SIM_FANTASY
plan.h
status == ESPRESSO_STATUS_SUCCESS
AUMicIssueDetector.cpp
Status Indicators
Modes
Gains
Smoothing Constants
Thresholds
Best Mic
Weighted Sum
AlgorithmCoreType
WindProbBandLowFreq
WindProbBandHighFreq
WindLvlBandLowFreq
WindLvlBandMidFreq
WindLvlBandHighFreq
WindLvlBandEnThr
WindLvlToGainFlr
WindLvlToGainSlope
WindLvlToGainMean
WindLvlGainAttackTC
WindLvlGainReleaseTC
WindLvlGainHoldTime
EnRatioBandLowFreq
EnRatioBandHighFreq
EnRatioBandCohrThr
EnRatioToGainFlr
EnRatioToGainSlope
EnRatioToGainMean
EnRatioGainAttackTC
EnRatioGainReleaseTC
EnRatioGainHoldTime
EnRatioGainInEnThr
EnRatioGainOutEnFloor
GainLowFreq
GainCrossoverFreq
GainHighFreq
CohrToGainSigmoidSlope
CohrtoGainSigmoidMean
GainThreshold
PreferredMic
MicSwitchGainThr
BlockedMicDecisionTC
BlockedMicNumBands
BlockedMicProfile
Blocked Mic Flag
Aggregate Omni Mode
Input Pre-Processing Gain
Suppression Gain Floor
Time Constant for PSD Est.
Time Constant for Energy Smoothing
Time Constant for Raw Ps Energy Smoothing
Hysteresis Time for Wind/BlockeMic/BestMic Flags
Hysteresis Time for Wind/BlockeMic Flags offset
Threshold on Wind Probability
Threshold on Blocked Mic Probability
Blocked Mic Probability
Wind Level
Mic Gain Linear
AUMicIssueDetector
Breakpoints
ParameterTransformBox.mm
!isnan(y)
f12@?0f8
UndoLogTransformationOfXValues_block_invoke
isfinite(y)
setParameter
ParameterTransformBox.h
!isnan(mVal)
vpBaseAspen.mm
dft_v5.cpp
Failed to initialize input and output buffer sizes.
Failed to read highpass filter cutoff from plist.
Failed to read noise dithering option from plist.
NoiseFloorDB
Failed to read noise floor from plist.
Noise dithering option must be 0 or 1.
AudioLongAnalysisSizeSamples
Failed to read long analysis window size from plist.
ASAFeaturesDSPChain.cpp
(numOverlap + 1)*mAudioBufferSize == mAudioAnalysisSize
(numLongOverlap + 1)*mAudioBufferSize == mLongAudioAnalysisSize
ASAFrontEndParams
ASAFeatureParams
ASAFilteringPriors
numMFCCFilters
Failed to read num MFCC filters from plist.
numMFCCCoefficients
Failed to read num MFCC coeffs from plist.
minMFCCFreqHz
Failed to read min MFCC freq from plist.
maxMFCCFreqHz
Failed to read max MFCC freq from plist.
lifterAmount
Failed to read lifter amount from plist.
SpeechCenterFreqHz
Failed to read speech center freq from plist.
SpeechWidthPow2
SpeechEmphAmount
MinWindowSizeSec
Failed to read min window size seconds from plist.
MaxWindowSizeSec
Failed to read max window size seconds from plist.
ChromaNumSemitones
Failed to read num semitones from plist.
ChromaFMinHz
Failed to read fmin from plist.
ChromaMinBandpassBin
Failed to read min bin from plist.
ChromaMaxBandpassBin
Failed to read max bin from plist.
RMSNominalRMSDB
Failed to read nominal RMS from plist.
RMSDCBlockingTimeConstSec
Failed to read DC blocking time const from plist.
RMSLowpassTimeConstSec
Failed to read lowpass time const from plist.
BeatsV2MinBPM
Failed to read min BPM from plist.
BeatsV2MaxBPM
Failed to read max BPM from plist.
BeatsV2MelBandSmoothRadius
Failed to read mel band smoothing radius from plist.
BeatsV2NumSmooMelBands
Failed to read num mel smoo bands from plist.
BeatsV2SparsityExponent
Failed to read sparsity exponent from plist.
BeatsV2ZeropadAmt
Failed to read zeropad amt from plist.
BeatsV2MinWinSizeSec
Failed to read beats min win size from plist.
BeatsV2MaxWinSizeSec
Failed to read beats max win size from plist.
BeatsV2Config8NumHarmonics
Failed to read config8 num harmonics from plist.
BeatsV2Config8BPMMultiplier
Failed to read config8 BPM multiplier from plist.
BeatsV2Config8SparsityAlpha
Failed to read config8 sparsity alpha from plist.
BeatsV2Config16NumHarmonics
Failed to read config16 num harmonics from plist.
BeatsV2Config16BPMMultiplier
Failed to read config16 BPM multiplier from plist.
BeatsV2Config16SparsityAlpha
Failed to read config16 sparsity alpha from plist.
ModEnergy1CenterFreqHz
Failed to read center freq from plist.
ModEnergy2CenterFreqHz
ModEnergyLookaheadSec
Failed to read lookahead from plist.
ModEnergySimLookaheadSec
Failed to read sim lookahead from plist.
ModEnergyNumSpectralCycles
Failed to read num spectral cycles from plist.
ModEnergySig1Center
Failed to read sig1 center from plist.
ModEnergySig1Slope
Failed to read sig1 slope from plist.
ModEnergySig2Center
Failed to read sig2 center from plist.
ModEnergySig2Slope
Failed to read sig2 slope from plist.
HarmConsistencyFreqBPAvgPitchHz
Failed to read freq BP avg pitch from plist.
HarmConsistencyTimeLPPoleRadius
Failed to read LP pole radius from plist.
HarmConsistencyLookaheadSec
HarmConsistencySimLookaheadSec
HarmConsistencySig1Center
HarmConsistencySig1Slope
LowEnergyThreshold
Failed to read low energy threshold from plist.
SpecRolloffFrac
Failed to read spec rolloff frac from plist.
CepstralVarianceCepBoostPower
Failed to read cep boost power from plist.
AvgPitchDensityAPDBeginQuefSec
Failed to read begin quef sec from plist.
AvgPitchDensityAPDEndQuefSec
Failed to read end quef sec from plist.
AvgTonalityPowerTonalityPeakThresh
Failed to read tonality peak thresh from plist.
AvgTonalityPowerMeanRMSShrinkage
Failed to read mean RMS shrinkage from plist.
ChromaPriorValue
BeatLogActPriorVec
BeatInitialLogActArray
LogMelSpecPriorVec
HarmConsistencyFilterPriorVec
RMSDbPrior
ModEnergy2PriorValue
TonalityMarkerPriorValue
TonalityGatedRMSPriorValue
ModEnergyPriorValue
SpecRolloffPriorValue
SpecCentroidPriorValue
SpecFluxPriorValue
SpecReconDiffPriorValue
CepSparsityPriorValue
CepVariancePriorValue
PitchDensityPriorValue
FeatureSelectionDataBlob
ComputeAllFeaturesFromAudio
numAudioSamples == mAudioBufferSize
AUEndpointVAD2.cpp
CommonParameters
ULDATParameters
ASAParameters
ViterbiParameters
AULoudnessNormalizer_ViewFactory
total momentary gain
pause
max CPU saving
save CPU
standard quality
superior quality
reset: by host
reset: ignore host
reset: now, by host
reset: now, ignore host
reset: by host, after silence
reset: ignore host, after silence
reset: now, by host, after silence
reset: now, ignore host, after silence
reset: by host, use manual loudness
reset: ignore host, use manual loudness
reset: now, by host, use manual loudness
reset: now, ignore host, use manual loudness
reset: by host, after silence, use manual loudness
reset: ignore host, after silence, use manual loudness
reset: now, by host, after silence, use manual loudness
reset: now, ignore host, after silence, use manual loudness
custom
MPEG default
MPEG late night
K-Weighting
A-Weighting
system volume
downward compression range
target loudness
enable AGC
enable compressor
expected loudness after reset
reset timeout
loudness meter state input
loudness meter state output
upwards compression range
enable side-chain high pass
side-chain high pass frequency
reset mode
transient response for algorithm version 1
enable automation
point 0: volume
point 0: upwardsCompressionRange
point 0: maxGain
point 1: volume
point 1: upwardsCompressionRange
point 1: maxGain
point 0: downwardsCompressionRange
point 0: downwardsCompressionRatio
point 1: downwardsCompressionRange
point 1: downwardsCompressionRatio
gain curve
shaping filter
voice activity
enable voice activity input
weighting filter
use downward compressor ratio
downward compressor ratio
enable side-chain low pass
hold adaptation
side-chain low pass frequency
output ceiling
enable output ceiling
peak level offset
integrated loudness release time VAD mode
automation upward compression
automation downward compression
MPEG Compression
Le_order
Le_order not found in inConfig
Bl_order
Bl_order not found in inConfig
Km_order
Km_order not found in inConfig
Rm_order
Rm_order not found in inConfig
Mms not found in inConfig
Reb not found in inConfig
Le_x
Bl_x
Km_x
Rm_u
Re0 not found in inConfig
mu_Re
mu_Re not found in inConfig
mu_epsilon
epsilon_mu not found in inConfig
mu_Le
mu_Bl
mu_Km
mu_Rm
Reb_min
Reb_min not found in inConfig
Le0_min
Le0_min not found in inConfig
Bl0_min
Bl0_min not found in inConfig
Km0_min
Km0_min not found in inConfig
Rm0_min
Rm0_min not found in inConfig
Reb_max
Reb_max not found in inConfig
Le0_max
Le0_max not found in inConfig
Bl0_max
Bl0_max not found in inConfig
Km0_max
Km0_max not found in inConfig
Rm0_max
Rm0_max not found in inConfig
alpha not found in inConfig
En_frame_Th
Threshold for frame energy not found in inConfig
En_Th
Threshold for energy not found in inConfig
Timer
Timer not found in inConfig
snrv_Th
snrx_Th
Key does not have proper length in inConfig: %s
Key not found in inConfig: %s
(I) noise SPL (1-mic)
hard clip level dB
soft clip level dB
DirectionalVAD.cpp
nnvad
Effective zoom amount
Camera field of view
Manual zoom amount
UpdateChannelLayoutTag
AUHOAZoom.mm
ChannelLayoutTagIsSupportedHOA(tag)
DominanceValues
GetParameter
!isnan(outValue)
Suppression RMS Level
Low Suppression Band Start Frequency
Low Suppression Band End Frequency
High Suppression Band End Frequency
Threshold Ratio (RMS)
Measured Threshold Ratio (RMS)
S Band Compression
Monitor S Detection
Threshold Smoothing Time (ms)
Suppression Attack Time (ms)
Suppression Release Time (ms)
Crossovers
Low Band
High Band
ChannelData
AnalogGain
ThieleSmall
MmsFrontPort
RmsFrontPort
KmsFrontPort
PressureResponse
TweeterGain
TweeterResponse
AULowFlow_ViewFactory
LinkChannelEnergies
Model (Deprecated)
SystemVolume
GlobalSpare05
GlobalSpare06
GlobalSpare07
EnableMitigationBottom
MuteBottom
MaskBandMinBottom
MaskBandMaxBottom
MinVelocityLimitBottom
MinMaskEnergyBottom
MidVelocityLimitBottom
MidMaskEnergyBottom
HighVelocityLimitBottom
HighMaskEnergyBottom
MaxMaskEnergyBottom
MaskAttackBottom
MaskReleaseBottom
MaxAttenuationBottom
ReleaseTimeBottom
MinFrequencyBottom
MaxFrequencyBottom
MidAttenuationBottom
MidLevelBottom
Spare19Bottom
Spare20Bottom
Spare21Bottom
Spare22Bottom
Spare23Bottom
EnableMitigationTop
MuteTop
MaskBandMinTop
MaskBandMaxTop
MinVelocityLimitTop
MinMaskEnergyTop
MidVelocityLimitTop
MidMaskEnergyTop
HighVelocityLimitTop
HighMaskEnergyTop
MaxMaskEnergyTop
MaskAttackTop
MaskReleaseTop
MaxAttenuationTop
ReleaseTimeTop
MinFrequencyTop
MaxFrequencyTop
MidAttenuationTop
MidLevelTop
Spare19Top
Spare20Top
Spare21Top
Spare22Top
Spare23Top
Acoustic ID: %@
None.
Internal.
External Beam2.
External MicSel.
Wind flag.
Suggested highpass cutoff frequency (Hz).
Threshold for wind detection.
Minimum gain (dB).
Start frequency, Probability (Hz).
End frequency, Probability (Hz).
PSD smoothing time constant (seconds).
Mean for sigmoid (coherence -> gain).
Slope for sigmoid (coherence -> gain).
Low cutoff frequency.
Crossover frequency.
High cutoff frequency.
Threshold on gain.
Hysteresis time for wind flag (seconds).
Method used for detecting mic issues.
Mic status (WARN: Interpretation depends on method).
Low frequency energy ratio (dB).
High frequency energy ratio (dB).
Energy from Mid freq to End freq for Ch1 (dB).
Energy from Mid freq to End Freq for Ch2 (dB).
Start frequency, Energy ratio (Hz).
Mid frequency, Energy ratio (Hz).
End frequency, Energy ratio (Hz).
Energy smoothing time constant (seconds).
Threshold on Energy ratio (dB).
Absolute threshold on mic energy (dBFS).
Dead mic detection threshold (dBFS).
Hysteresis time for mic status (seconds).
Aggregate omni gain - Channel 1 (linear).
Aggregate omni gain - Channel 2 (linear).
New Wind Suppression ?
Sigmoid Gain Floor Slope.
Gain Apply Attack Time
Gain Apply Hold Time
Gain Apply Release Time.
Gain Smoothing Time.
Energy Refinement Low Threshold.
Energy Refinement High Threshold.
Smoothing Time for Agg Omni Weights.
(T)   Time length for the filter coefficients read-out.
(out) Delta IR
(out) IR delay
(out) Aligned reference signal power
(out) Actual time length for the filter coefficients read-out.
(T)   Constant to smooth denom in deltaIR when IR is increasing.
(T)   Constant to smooth denom in deltaIR when IR is decreasing.
(out) DeltaIRCorr: cos(alpha) between two deltaWs
(T)   Attack smoothing factor for cos(alpha) between two deltaWs
(T)   Decay smoothing factor for cos(alpha) between two deltaWs
(T)   Threshold for deltaIRCorr
(T)   Enable/disable using deltaIRCorr for the gate
(out) Combined deltaIR, deltaIRCorr, long term deltaIR output
(T)   Using this factor to map the correlation value [0, 1] to larger scale, i.e., [0, 100]
(T)   Activity threshold for IR difference energy. When the energy is below this threshold, deltaIRCorr will be set to 0
1/48
1/24
1/12
Back
Front
Camera Direction
LandscapeLeft (home button right)
LandscapeRight (home button left)
Target UI Orientation
Active UI Orientation
Beam gain (front camera)
Default beam gain (back camera)
Zoom in beam gain (back camera)
Zoom out beam gain (back camera)
Zoom out -> default fade
Default + zoom out -> zoom in fade
Override FOV control of beam fading
Override Zoom out -> default fade
Override default + zoom out -> zoom in fade
Limit wind boost
Cutoff frequency for wind boost limiting
Wind boost detection threshold (dB)
Max wind boost allowed (dB)
Current Crossover Frequency (MAX)
Scale Cutoff
Raw Scale Smoothing
Omni Blend Scale Thres
Crossover Max Frequency
Crossover Index Attack
Crossover Index Release
Crossover Index Hold
Crossover Index Smoothing
Min Omni Blend Crossover Frequency
Min Omni Blend Abs. Energy Trigger
Wind / Scratch Detect Trigger Attack
Wind / Scratch Detect Trigger Release
Cross Fade Length Ramp Slope
Enable DOA smoothing
DOA time smoothing
DOA frequency smoothing
DOA smoothing bias
Override measured DOA
Override azimuth
Override elevation
Coefficient smoothing
Enable Parametric timbre filter
Mono
Low signal select
Spaced omni
High signal select
Min Parameteric Frequency
Max Parameteric Frequency
Parameteric filter transition width
Max Calculated Parameteric Frequency
Low gain
High gain
DRR multiplier
DRR mix regularization
DRR filter smoothing
Render mode (doesn't control MCLP)
Depreciated
ZoomableLinear
renderModes
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/InternalAudioUnits/Effects/AUSpatialCapture/SpatialCapture.mm
GetSpatialCaptureDSPGraphSource
bad sample rate
numMics
bad number of mics
bad number of outputs
numSDLSBeams
bad number of linear spatial beams
nFFT
bad block size
enable_spatial_capture_recording
    ; Defines                                    
    [def procRate 
]                  
    [def numMics 
]                     
    [def numOutputs 
]                     
    [def numLinBeams 
]                     
    [def fftBlockSize 
     ; Output
     out finalOut
     
                                      in refInTd
                                      box refIn fft 1 1
                                      wire refInTd refIn ([procRate] [numMics] [fftBlockSize])
                                      
            in refIn
                                      
                                  ;
                                  ; Mic selection
                                  ;
                                  box micSelectCoordinator scmicselect 0 0
                                  
                                  ; Linear spatial (full signal)
                                  box linFullSignal (aufx bmfd appl) 1 3
                                  box linDead0 dead 1 0
                                  box linDead1 dead 1 0
                                  box linPatcher chansel 1 1
                                  
                                  wire refIn                                 linFullSignal                       (freq [procRate] [numMics] [fftBlockSize])
                                  wire (linFullSignal 0)                     linDead0                            (freq [procRate] 1 [fftBlockSize])
                                  wire (linFullSignal 1)                     linDead1                            (freq [procRate] 1 [fftBlockSize])
                                  wire (linFullSignal 2)                     linPatcher                          (freq [procRate] [numLinBeams] [fftBlockSize])
                                  
                                  box linFullSignalFTT fft 1 1
                                  
wireProperty (micSelectCoordinator 
) (linPatcher 
) true
wireParam (micSelectCoordinator 
 0 0) (linFullSignal 
param 
wireGraphParam 
 (micSelectCoordinator 
 0 0)
 0.0
 0.0 out
 (linFullSignal 
         box postGain (aufx dbgn abox) 1 1
         ;
         ; Linear spatial (full signal)
         ;
         
             wire linPatcher                            linFullSignalFTT                    (freq [procRate] [numOutputs] [fftBlockSize])
             wire linFullSignalFTT                      postGain                            ([procRate] [numOutputs] [fftBlockSize])
             wire postGain                              finalOut                            ([procRate] [numOutputs] [fftBlockSize])
             
             wire linPatcher                            postGain                            (freq [procRate] [numOutputs] [fftBlockSize])
             wire postGain                              finalOut                            (freq [procRate] [numOutputs] [fftBlockSize])
             
        param 1000 -3.0
        wireGraphParam 1000 (postGain 0 0 0)
        
SpatialCapture.mm
            record "
ref-in-sc.wav"     refIn 
            record "
linFullSignal-sc.wav"     (linFullSignal 2) 
            record "
linPatcher-sc.wav"     linPatcher 
            
                           box focused (aufx bmfd appl) 1 3
                           box focusedDead dead 2 0
                           box focusedPatcher chansel 1 1
                           box focusedVsSpatialMix scmx 2 1
                           
                           box wide (aufx bmfd appl) 1 3
                           box wideDead dead 2 0
                           box widePatcher chansel 1 1
                           box wideVsSpatialMix scmx 2 1
                           
                           box focusedFOVToBeamMix paramtx 0 0
                           box wideFOVToBeamMix    paramtx 0 0
                           
                           box focusedBeamMixOverrideSwitch paramsw 0 0
                           box wideBeamMixOverrideSwitch    paramsw 0 0
                           
                           box defaultBeamGainCamDirSwitch paramsw 0 0
                           box focusedBeamGainCamDirSwitch paramsw 0 0
                           box wideBeamGainCamDirSwitch paramsw 0 0
                           wire refIn                           focused                       (freq [procRate] [numMics] [fftBlockSize])
                           wire (focused 0)                     (focusedDead 0)               (freq [procRate] 1 [fftBlockSize])
                           wire (focused 1)                     (focusedDead 1)               (freq [procRate] 1 [fftBlockSize])
                           wire (focused 2)                     focusedPatcher                (freq [procRate] [numLinBeams] [fftBlockSize])
                           wire refIn                           wide                       (freq [procRate] [numMics] [fftBlockSize])
                           wire (wide 0)                        (wideDead 0)               (freq [procRate] 1 [fftBlockSize])
                           wire (wide 1)                        (wideDead 1)               (freq [procRate] 1 [fftBlockSize])
                           wire (wide 2)                        widePatcher                (freq [procRate] [numLinBeams] [fftBlockSize])
                           wire widePatcher                     (wideVsSpatialMix 0)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire linPatcher                      (wideVsSpatialMix 1)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire focusedPatcher                  (focusedVsSpatialMix 1)       (freq [procRate] [numOutputs] [fftBlockSize])
                           wire wideVsSpatialMix                (focusedVsSpatialMix 0)       (freq [procRate] [numOutputs] [fftBlockSize])
                           
             wire focusedVsSpatialMix             linFullSignalFTT              (freq [procRate] [numOutputs] [fftBlockSize])
             wire linFullSignalFTT                finalOut                      ([procRate] [numOutputs] [fftBlockSize])
             
             wire focusedVsSpatialMix             finalOut                      (freq [procRate] [numOutputs] [fftBlockSize])
                          
focused
wide
FOVToBeamMix
 0 0 0)
wireParam (
 0 0 0) (
BeamMixOverrideSwitch 1 0 0) true
BeamMixOverrideSwitch 0 0 0) (
VsSpatialMix 
 0 0) true
BeamGainCamDirSwitch 0 0 0)
BeamGainCamDirSwitch 1 0 0)
Patcher 
 0 0) (
BeamMixOverrideSwitch 2 0 0)
BeamMixOverrideSwitch 0 0 0)
 (defaultBeamGainCamDirSwitch 0 0 0)
 (defaultBeamGainCamDirSwitch 1 0 0)
BeamGainCamDirSwitch 2 0 0)
 (defaultBeamGainCamDirSwitch 2 0 0)
BeamGainCamDirSwitch 0 0 0) (
defaultBeamGainCamDirSwitch 0 0 0) (
linPatcher-sc.wav"     linPatcher 
            record "
focusedPatcher-sc.wav"     focusedPatcher 
            record "
focused-sc.wav"     (focused 2) 
            
debug_spatial_capture_graph
scmicselect
GetSpatialCaptureBoxRegistry_block_invoke
numInputs == 0 && numOutputs == 0 && "Bad number of ins or outs"
^v16@?0I8I12
chansel
GetSpatialCaptureBoxRegistry_block_invoke_2
numInputs == 1 && numOutputs == 1 && "Bad number of ins or outs"
scmx
GetSpatialCaptureBoxRegistry_block_invoke_3
numInputs == 2 && numOutputs == 1 && "Bad number of ins or outs"
paramsw
GetSpatialCaptureBoxRegistry_block_invoke_4
paramtx
GetSpatialCaptureBoxRegistry_block_invoke_5
auspatialcapture.dspg
spcp
outputChannelLayout
dft_v4.cpp
AUEchoCancelerV5::ProcessMultipleBufferLists error - wrong (%d) block size expected (%d)
disable search for IR peak
(I) IR peak delay in msec 1st ref chan
Fast Adapt: 0=off, 1=init conv, 2=init+re conv 3= init+re conv + init rate cal, 4=2+resettable
Run multiple iteration on Fast EC
Calculate posterior error
Enable Poly EC speedup option
Leakage threshold for poly EC speedup
Delta IR threshold for poly EC speedup
syy2sdd ratio threshold for Poly EC speedup
ir Ratio threshold for poly EC speedup
split eclee parts for poly EC
Only use odd order terms in poly EC reference
De-emphasized Echo to local voice threshold
De-emphasized Echo Flag
(I)De-emphasized 10*log10(syy/see)
(I)Eclee engergy in dB
Eclee engergy thresh low in dB
eclee active flag based on low thresh
---- UNUSED ----
Filter Length Management
Multi Channel Management
EC Health Telemetry (Read Only)
Performance/CPU Tuning
Double talk handling
Expert Mode
vpProcessDownlink_v9.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v9/vpProcessDownlink_v9.cpp
BeamformerTD.cpp
nMicsUsed
nBeams
BFFilterLength
Failed to retrieve beamforming filter length from input dictionary.
EQFilterLength
Failed to retrieve EQ filter length from input dictionary.
Description
NonZeroMics
EQSelectionFilter
BFFilter
aubmtd
VoiceProcessor.mInitLock
VoiceProcessor.mVolumeLock
VoiceProcessor.mProcessCountLock
VoiceProcessor_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/VoiceProcessor_v2.cpp
VoiceProcessorV2
Starting ... 
vp debug features are %s
vp_disable_downlink
VP Uplink
VP Downlink
Constructed!
~VoiceProcessorV2
VoiceProcessorV2 destroyed!
DeviceSupportsAdvancedVoiceProcessorChatFlavor
SetMode
Begin self-reinit (SetMode)
End self-reinit (SetMode)
operation mode = %i
SetDownLinkVolume
setdownlinkvolume failed because mSignaler can't be acquired within %u microseconds
setdownlinkvolume called with: user volume = %f
setdownlinkvolume: no need to change volume = %f
appspkrtel: ring buffer write error %d
appspkrtel: received %d samples, expected = %d
appspkrtel: tryer failed to acquire lock
appendreferencesignal: not OK to process
%s reference signal was not expected!
appendreferencesignal: failed to acquire uplink reader lock
FrontEndBlockSizeCheck
append signal (%s): <silence optimization, generating zeroes> num frames received = %u.
 hwio buff size = %u
 process callcount = %lu
append signal (%s): <block size mismatch>
CoreAudio: ***** VP BLOCK WARNING: TRANSIENT INCORRECT BLOCK CONFIG
warning: append signal (%s): <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG for over %.6f seconds *****
append signal (%s): <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
append signal (%s): <block size no longer mismatched>
append signal (%s): <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
FrontEndRefTimeStampHandler
ref sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
ref sample time jumped backwards
frontendreftshandler: ERROR: Ring Buffer error! %d
GetHardwareSafetyOffsets
error %d getting input safety offset
error %d getting output safety offset
Input safety offset of the aggregate device is %u
Output safety offset of the aggregate device is %u
GetHardwarePresentationLatency
error %d getting IOCycleUsage
error %d getting input latency
error %d getting output latency
Input latency of the aggregate device is %u
Output latency of the aggregate device is %u
input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, tap stream latency=%u, safety offset=%u, tap stream input safety offset=%u}
input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, safety offset=%u}
iocycleusage = %f
UpdateHWPresentationLatencyAndRefToMicDelay
negative mCorrectedPresentationDelay (%d) clamped to zero
realworld correction=%f, corrected latency=%d
after adjusting for ref-mic delay=%d samples (%f msec), corrected latency=%d, additional mic delay(@hwmic rate)=%u
srcandappendtoringbuff: overflow?!
InstantiateAU
InstantiateAU: couldn't instantiate 'aufx'|%s AU
InstantiateAU: couldn't find component 'aufx'|%s AU
ResetTimestampsAndInitializeVP
called initialize
called initializedlp
UpdateReferenceSignalFormat
Updating hwRef to match dlMix format:
 was: %s
 now: %s
Updating hwRef to match extHwRef format:
 was:%s
 now:%s
vp_enable_ramstad_src
GetAUStreamFormats
_vp<WARNING>: The DLNS isn't configured at an fft-friendly blocksize (%d vs %d), disabling it for now
PopulateAUPropsAndParamsLists
InstantiateAndConfigureEffectAU
Error in setting proerty ID %u to AU %s error %d
_vp<SERIOUS ERROR>: (%d) error setting property %d on %s, attenuating the dl final gain by 20dB
Error in setting parameter ID %u to AU %s error %d
_vp<SERIOUS ERROR>: (%d) error setting parameter %d on %s, attenuating the dl final gain by 20dB
instantiateandconfigureeffectau: error (%d) loading FIR coefficients!!! Setting FIR to passthrough
Unable to set not to allocate internal AU buffers with error (%d)
Error in initializing AU %s error %d
_vp<SERIOUS ERROR>: (%d) error initializing %s, attenuating the dl final gain by 20dB
instantiateandconfigureeffectau (%s): warning %d due to non-FFT friendly blocksize
instantiateandconfigureeffectau (%s): error %d
InstantiateAndConfigureAuxAU
InstantiateAndConfigureAuxAU: %s aux au failed to set property
ShouldUseOptimizedBlockSizeForFacePlant
use optimized block size for face plant =  %s
DumpState
VoiceProcessorV2::DumpToFile() - Dump file is not available
VoiceProcessor version = %u 
VP Disabled = %s.  
HW has vp = %s.  
Product: %s
Primary audio vocoder type = %s(%d) 
Driver-prescribed postprocessing input gain  = %f dB.  
Beam direction = %d 
HW Format REF: %s 
HW Format MIC: %s 
HW Block Size REF: %d 
HW Block Size MIC: %d 
    HW Trim Gain MIC(ch-%lu): %f dB 
    HW Trim Gain REF(ch-%lu): %f dB 
VP Output Format: %s 
REF Channel BitMap: %x, OUT Channel BitMap: %x 
HW MIC Channels: %s, BitMap: %x 
EP MIC Channels: %s, BitMap: %x 
Primary epmic index: %d 
SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max) 
Hw real-world correction: %f samples 
Ref-Mic Delay: %f msec 
    Pre-echo-processing Digital Input Gain: %f dB 
Post-echo-processing Digital Input Gain: %f dB 
Downlink Mix Gain: %f dB 
Downlink Final Gain Chn 0: %f dB 
Downlink Final Gain Chn 1: %f dB 
DL Format FEV: %s 
DL Format FEV Process: %s 
DL Format MIX: %s 
DL Block Size MIX: %d 
calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu 
calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu 
calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu 
HW preslatency & ref to mic delay: input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, latency=%u, safety offset=%u} 
Num Ref Ports = %u, Num Mic Ports = %u 
      : Ref Port #%lu=%s 
      : Mic Port #%lu=%s 
mono
_far_end_voice_mix_
gen_far_end_voice_nnvad.dspg
gen_far_end_voice_nnvad.austrip
gen_far_end_voice_nnvad.propstrip
nnvad.dspg
nnvad.austrip
nnvad.propstrip
echo_processing.dspg
emptyAcousticID
echo_processing_
kHz.austrip
kHz.propstrip
primary mic only
internal
SpectralProcessingHelpers.cpp
currently supported values are outputCount < inputCount < 2*outputCount
invalid input lengths
olaStack wrong size
ola wrong size
bad audio position
bad input length
bad output size
bad internal state size
mis-matched output sizes
processdl: tryer failed to acquire lock
processdl: not ok to process?!
vpProcessDownlink_v8.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v8/vpProcessDownlink_v8.cpp
bad mic-speaker delay: expected sample time diff: %.1lf, actual sample time diff: %.1lf
bad relative mic-ref TS
sprk sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
sprk sample time jumped backwards
processdl: <block size mismatch>
CoreAudio: ***** VP BLOCK WARNING: PROCESSDLAUDIO TRANSIENT INCORRECT BLOCK CONFIG
warning: processdownlinkaudio: <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 dl mix buff size = %u
dlmix asbd = %s
process dl callcount = %u
processdownlinkaudio: <block size mismatch>
CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESSDLAUDIO BAD BLOCK CONFIG for over %.6f seconds *****
processdownlinkaudio: <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
dl mix blk size = %u
dl mix asbd = %s
 process dl callcount = %u
processdownlinkaudio: SERIOUS ERROR: ioOutputData->mBuffers[0].mDataByteSize = %u, expected = %u
processdownlinkaudio: <block size no longer mismatched>
CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
processdownlinkaudio: <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
CoreAudio: ***** VP BLOCK WARNING: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
DL %f %f %f
DL ERROR, processing slower than RT - %f
DL ERROR, not being called in a timely manner - %f
ClickRemovalCore.mm
ClickRemovalLatencyHelper.h
ClickRemovalRecorder.h
unique_lock::try_lock: references null mutex
unique_lock::try_lock: already locked
CLSPKernel_v5.cpp
[Channel 
Sample rate: 
VP mode: on
VP mode: off
ElecModel
DispModel
CLTModule
DispCtlr
ThermCtlr
DelayLine
ClipBuffer.size = 
scratch buffer.size = 
vDelayLine
iDelayLine
SpeakerPowerModel
SpeakerPowerMeas
DSPBlocks.h
preGain = 
postGain = 
lr buffer size = 
ng buffer size = 
ptg buffer size = 
mr_elecModel
postProcess
analyzeTargetGain
getTemperature
ag = 
, Rshunt = 
, Rampout = 
mc_ageff = 
, invRt = 
, invThermalPeriod = 
Reb = 
, phi = 
, mt = 
, ct = 
, kt = 
a_t_inv = 
, TlimErrDecayTime = 
, TlimAdjCap = 
, pilotAmplHi = 
, pilotAmplLo = 
pilotAmplUpperThres = 
, pilotAmplLowerThres = 
, pilotDecayTime = 
, pilotDecayTimeStage2 = 
, pilotEnableThres = 
, RebRef = 
RebRefTemp = 
, mc_gain = 
PilotTempSensor:
PilotGen:
TLimErrSmoother:
pilotToneGain:
ptInterp1:
ptInterp2:
thermalLimit = 
HardLimitHeadroom = 
AmbientTemp = 
FFSpeedupFactor = 
safeLimit = 
safeLimitTimeMin = 
safeLimitOffset = 
m_vc:
m_vg:
m_vcff:
thermalPeriod = 
thermalGainTimerInitVal = 
safeLimitTimerInitVal = 
vcFilt:
mgFilt:
vcffFilt:
thermalGain:
sThermalGain1:
sThermalGain2:
sPowerCtrlGain1:
sPowerCtrlGain2:
b0 = 
b1 = 
T_sett = 
tau = 
DelayTime = 
DelaySamples = 
delayBuffer.size = 
delayedInput.size = 
pwrAvgWinSec = 
relativeSpkPwrPeriod = 
invRelSpkPwrPeriod = 
spkPwrPeriod = 
AUFTSpatialAC
RenderAllNeutral
LinearMapByPercent
LinearMapByGeometry
1/2 wave
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
FaceUp
FaceDown
Set via input param 213 (UI)
Set via input param 200 (meta)
Fixed to Unknown
Fixed to Portrait
Fixed to PortraitUpsideDown
Fixed to LandscapeLeft
Fixed to LandscapeRight
Fixed to FaceUp
Fixed to FaceDown
Do not use prominence, use InCanvas
AND <=prom limit with InCanvas
OR <=prom limit with InCanvas
Use <=prom limit only
Center if Cx=Cy=0
Center if X=0 or Y=0
Center if Cx=Cy=0||X=0||Y==0
AUFTSpatialACEnableRealTimeLogs
:%03lld
OrientationParams
WindowParams
InStreamParams.
OutStreamParams.
(GW) Mode AU is using the drive spatialization
(GW) (TEST ONLY, false for ship) Inject fake meta data
(GW) (TEST ONLY) num of users to inject fake meta data
(GW) Go to neutral az and el if only one active input stream
(GW) Go to neutral az and el if only one active output stream
(GW) Max number of streams assigned to main canvas
(GW) Max number of streams assigned to list/roster
(GW) Enable pan to adapt to FT window aspect ratio
(GW) Enable Azimuth panning when in portrait
(GW) Enable Elevation panning when in landscape
(GW) Minimum azimuth for pan when in portrait
(GW) Maximum azimuth for pan when in portrait
(GW) Minimum azimuth for pan when in landscape
(GW) Maximum azimuth for pan when in landscape
(GW) Minimum elevation for pan when in portrait
(GW) Maximum elevation for pan when in portrait
(GW) Minimum elevation for pan when in landscape
(GW) Maximum elevation for pan when in landscape
(GW) Desired render distance (m)
(GW) Desired reverb-blend (shared with all users)
(GW) Exponent for energy values for (X,Y) weighting
(GW) Enable(true)/disable(false) single-user decorrelation, left channel
(GW) Enable(true)/disable(false) single-user decorrelation, right channel
(GW) Enable(true)/disable(false) multi-user decorrelation, left channel
(GW) Enable(true)/disable(false) multi-user decorrelation, right channel
(GW) Playback output orientation control (-1==use param 200, -2==use param 213)
(GW) (true) Enable switching off 2nd EC ref in 1:1 FaceTime
(GW) (true) Enable switching off 3rd EC ref in 1:1 FaceTime
(GW) Fake portrait panning with landscape (some iPhones)
(GW) Screen orientation value used for panning control (-1==use param 200, -2==use param 213)
(GW) Use prominence in canvas/grid assignments (0=no, 1=AND InCanvas, 2=OR InCanvas, 3=OnlyProm 
(GW) Max prominence value for a stream to be assigned to canvas/grid
(GW) Center client on missing meta:0:ignore, 1:Cx=Cy=0, 2=XorY=0, 3:Cx=Cy=0||(X==0)||(Y==0).
(GW) Use U+1 specific tuning values for gain, reverb and distance
(GW) Use U+1 specific tuning only if Cx=Cy=0
(GW) If using U+1 tuning, interpolate U++/U+1 in transitions
(GW) Interpolation time in transitons (sec)
(GW) U+1 specific render distance (m)
(GW) U+1 reverb-blend
(GW) U+1 specific gain (dB)
(GW) U++ specific gain (dB)
(GW) Assumed orientation of device 
(GW) Geo model screen width in cm landscape (cm)
(GW) Geo model screen height in cm in landscape (cm)
(GW) Geo model user viewing distance from screen (cm)
(GW) Rel az of eye->screen plane to speaker 0 deg az(deg)
(GW) Rel el of eye->screen plane to speaker 0 deg el(deg)
(GW) Device screen width in points 
(GW) Device screen height in points 
(GW) FT window x-position in points (from top left corner)
(GW) FT window y-position in points  (from top left corner)
(GW) FT window width in points 
(GW) FT window height in points 
(G) Voice activity
(GW) Assumed orientation of user interface 
(GR) Control output for decorrelator, left channel
(GR) Control output for decorrelator, right channel
(GR) Monitor of internal screen orientation within controller
(GR) Numer of active streams detected
(GR) Enable(true)/disable(false) the 2nd EC ref
(GR) Enable(true)/disable(false) the 3rd EC ref
(GR) Monitor of internal audio render orientation within controller
(IR) Output stream assignment
(IRW) ID attached to user by AVC
(IRW) Is stream active in call
(IRW) Is stream's video on main grid
(IRW) Is stream's video currently visible
(IRW) Prominence level of a stream
(IRW) User tile x-position within FT window in points
(IRW) User tile y-position within FT window in points
(IRW) User tile z-position within FT window 
(OR) User audio render azimuth (degrees: -180:180)
(OR) User audio render elevation (degrees: -90:90)
(OR) User audio render distance (meters: 0:10000)
(OR) User audio render gain (dB: -120:20)
(OR) User rate scalar (fracton: 0.5:2.0)
(OR) Bus Enable (0 or 1)
(OR) Minimum input gain constraint (0:10)
(OR) Maximim input gain constraint (0:10)
(OR) Dry/Wet equal-power reverb blend (0:100)
(OR) Global reverb gain (-40:40)
(OR) Occl LP filter atten at 5KHz (dB: -100:0)
(OR) Obst LP filter atten at 5KHz (dB: -100:0)
log.
.csv
AUSpeakerProtectionV3.cpp
SpeakerCalibrationProperty Ch 
SpeakerDefaultName
index < numSpeakers
Speaker settings
Left Speaker Settings
Right Speaker Settings
Speaker 
clsp_logging_level
___AUID_
_(closedloop_
_(openloop_
AUSP_CPMS
Audio input bus channel-count (
) is greater than the number of channels configured by the plist (
). Cannot initialize.
Telemetry input bus channel-count (
) does not match the telemetry order set via the property (
 elements).
sppv3_channel_count
sppv3_sample_rate
sppv3_closed_loop_enabled
sppv3_voice_processor_mode
sppv3_max_frames_per_slice
sppv3_uses_fixed_block_size
sppv3_uses_closed_loop
clsp_log_input_stream
clsp_log_output_stream
audioIn.caf
telemetryIn.caf
audioOut.caf
clsp_srdc
clsp_caltemp
clsp_srdc_r
clsp_caltemp_r
exception '
. Deleting kernels. '
SetClosedLoopEnabled
SafeTlim
SafeTlimTimeMin
SafeTlimOffset
LookaheadDelay_ms
spk pwr averaging window time
modeled speaker power
measured speaker power
None   
Pilot Tone
LP MLS
Open Loop
Convoy Limit
Convoy Adaptive
Adaptive
Convoy Limit v2
Tcal
Coffset
Cmin
Cmax
clsp_enable_closed_loop
SpeakerCalibrationProperty:
SpeakerCalibrationProperty Ch = 
ChannelID
CLParams
NumChannels
ConvoyDataSourceOverride
ChannelSpecificParams
AmpEfficiencyCoefs
PowerSmootherTimeCoefs
PowerGainAttackReleaseCoefs
PowerSmoothingStrategy
BeforeAmpEfficiencyModel
AfterAmpEfficiencyModel
PowerGainLimit_dB
was not
%s failed
%s ('%s') failed
 DCR = 
  SpeakerCalibration
 CalTemp = 
 Q = 
 (Hz)
 [DisplacementCalibration not present]
 [ConvoyCalibration not present]
 Kms = 
 (N/m)  
  DisplacementCalibration
 Le = 
 Bl = 
 (N/A)
 Mms = 
 (g)
 Rms = 
 (kg/s)
 (pF)  
  ConvoyCalibration
 Coffset = 
 (pF)
 Cmin = 
 Cmax = 
 voltage
 current
 PDM
Telemetry.h
Yes, 
No, 
CAExtAudioFile.h
couldn't convert path to CFURLRef
ExtAudioFileCreateWithURL
ExtAudioFileSetProperty
ExtAudioFileWriteAsync
ExtAudioFileClose
clsp_allow_restore
thermal protection enabled
CPMS power control enabled
CPMS power control closed loop
displacement protection enabled
thermal/power control gain attack time
thermal/power control gain release time
ambient temperature
peak attack time
peak decay time
feedback integration time
thermal gain
power control gain
displacement gain
temperature limit
hard temp limit headroom
temperature
OL temperature
pilot tone enabled
CL thermal feedback enabled
a_t_inv
LPMLS pre clip level
mu mechanical (PU)
Max relative displacement
abs(Min relative displacement)
Convoy Dirty Buffer Sticky Flag
Convoy Block Flag
Convoy X Limit Relative (%)
Convoy Norm Factor
Convoy PeakFinder Threshold Upper
Convoy PeakFinder Threshold Lower
Convoy Peak Detector Attack Time
Convoy Peak Detector Release Time
Convoy Norm Factor Cap Upper
Convoy Norm Factor Cap Lower
Convoy Norm Factor Attack
Convoy Norm Factor Release
Convoy Peak Ratio Positive Block Threshold
Convoy Peak Ratio Negative Block Threshold
Convoy Min Excursion
Convoy Max Excursion
Convoy Relative X Limit Upper
Convoy Relative X Limit Lower
Convoy Peak Ratios InWindow Count Threshold
Convoy Norm Factor Threshold in %
Convoy Buffer Dirty Count Threshold
CLSPBlocks.h
auversion
thiele_small_kms
thiele_small_le
thiele_small_bi
thiele_small_mms
thiele_small_rms
thiele_small_crest
thiele_small_coffset
thiele_small_cmin
thiele_small_cmax
thiele_small_re
thiele_small_t
thiele_small_qts
thiele_small_fs
thiele_small_data_source_id
Speaker calibration data is missing '
' key
mu_LeUni
mu_Mechanical
AmbientTemp
ThermalGainAttackTime
ThermalGainReleaseTime
PeakDispAttackTime
PeakDispDecayTime
DispFBIntegrationTime
TempSenseWindowTime
TempSenseSmoothingTau
TlimErrDecayTime
PilotAmplHi_dB
PilotAmplLo_dB
PilotUpperThres
PilotLowerThres
PilotDecayTime
PilotFreq
LPMLSPreGain
LPMLSPostGain
LPMLSLowerCorner
ThermalMeasurementMethod
DisplacementProtectionType
ConvoyMinExcursion
ConvoyMaxExcursion
ConvoyPeakFinderThresholdUpper
ConvoyPeakFinderThresholdLower
ConvoyNormFactorCapUpper
ConvoyNormFactorCapLower
ConvoyPeakRatioPosBlockThreshold
ConvoyPeakRatioNegBlockThreshold
ConvoyRelXLimUpper
ConvoyRelXLimLower
ConvoyNormFactorAttack
ConvoyNormFactorRelease
ConvoyPeakDetectorAtkTime
ConvoyPeakDetectorRelTime
ConvoyPeakRatiosInWindowCountThreshold
ConvoyNormFactorThreshold
ConvoyBufferDirtyCountThreshold_ms
ParamStructWrappers.h
PilotDecayTimeStage2
PilotEnableThres
ExtAudioFileWrite
updateThermalState
mr_CLTModule
/usr/lib/libAudioStatistics.dylib
CreateSharedCAReportingClient
CAReportingClientCreateReporterID
CAReportingClientCreateReporterIDFromSessionID
CAReportingClientCreatePerformanceReporterID
CAReportingClientStartReporter
CAReportingClientStopReporter
CAReportingClientSetAudioServiceType
CAReportingClientGetAudioServiceType
CAReportingClientSetConfiguration
CAReportingClientCopyConfiguration
CAReportingClientSendMessage
CAReportingClientSendSingleMessage
CAReportingClientDestroyReporterID
clsp_resetThermalState
v12@?0B8
Thermal_LookaheadDelay_ms
Thermal_SafeTlim
Thermal_SafeTlimTimeMin
Thermal_SafeTlimOffset
Thermal_AmbientTemp
Thermal_GainAttackTime_s
Thermal_GainReleaseTime_s
Disp_PeakAttackTime_s
Disp_PeakDecayTime_s
Disp_FBIntegrationTime_s
OL_thermal
Rshunt
Reb_ref
Rampout
T_sett_vc
tau_Tvc
T_sett_mg
tau_Tmg
ThermalFFSpeedupFactor
HardTempLimitHeadroom
TemperatureLimit
OL_disp
x_lim
g_bw
SpeakerName
SpeakerGroup
IgnoreTelemetry
100ms_TC=
1000ms_TC=
Thermal_TC=
InstanteneousAttack
InstanteneousRelease
100msAttack
100msRelease
1000msAttack
1000msRelease
ThermalAttack
ThermalRelease
inst_A=
inst_R=
100ms_A=
100ms_R=
1000ms_A=
1000ms_R=
thermal_A=
thermal_R=
EnableDisplacementControl
EnableThermalControl
EnableCPMSControl
EnableCPMSClosedLoopControl
AUControlFreak_ViewFactory
Output gain function
Lookahead
FastGainReleaseTime
Threshold
Spare05
Spare06
EnvelopeAveragingTime
TruePeak
Spare09
Spare10
Spare11
Spare12
OutputGain
SlowGainReleaseTimeMinimum
AudioActivityWindowSize
SlowGainReleaseTimeMaximum
Spare18
AudioActivityHoldTime
ParameterRampTime
MinFastGain
Music
Movie
Speech
MovieWithMozartSurroundMovieLateNight
MovieWithMozartSurroundMovieLateNight_Extreme
AUADAMSink.cpp
AUADAMSink
AllPassComb.cpp
!mDelayBuf.empty()
mScratchBuf.size() == mDelayBuf.size()
mCircularIndex < mDelayBuf.size()
HlcSuppressor.cpp
x.size() >= result.size()
vpDebug_DefaultsOverride.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_DefaultsOverride.cpp
ReadAndApplyDefaultsOverride
DEFAULTS OVERRIDE (%s): %s -> %s
DEFAULTS OVERRIDE (%s): %d -> %d
DEFAULTS OVERRIDE (%s): %i -> %i
DEFAULTS OVERRIDE (%s): %f -> %f
AUThermalSpeakerProtection_ViewFactory
Moving Average Time
Gain smoothing filter frequency
speakerType A: Amplifier sensitivity [V/Fs]
speakerType A: VoiceCoil: DC resistance [Ohms]
speakerType A: VoiceCoil: thermal resistance [C/Watt]
speakerType A: Magnet: thermal resistance  [C/Watt]
speakerType A: Voice Coil: thermal time constant [s]
speakerType A: Magnet: thermal time constant [s]
speakerType A: Ambient temperature, [C]
speakerType A: Temperature limit [C]
speakerType A: Attack time
speakerType A: Release time
speakerType A: Temperature hard limit headroom [C]
speakerType A: Gain link
speakerType A: Audio channel assignment
speakerType B: Amplifier sensitivity [V/Fs]
speakerType B: VoiceCoil: DC resistance [Ohms]
speakerType B: VoiceCoil: thermal resistance [C/Watt]
speakerType B: Magnet: thermal resistance  [C/Watt]
speakerType B: Voice Coil: thermal time constant [s]
speakerType B: Magnet: thermal time constant [s]
speakerType B: Ambient temperature, [C]
speakerType B: Temperature limit [C]
speakerType B: Attack time
speakerType B: Release time
speakerType B: Temperature hard limit headroom [C]
speakerType B: Gain link
speakerType B: Audio channel assignment
speakerType C: Amplifier sensitivity [V/Fs]
speakerType C: VoiceCoil: DC resistance [Ohms]
speakerType C: VoiceCoil: thermal resistance [C/Watt]
speakerType C: Magnet: thermal resistance  [C/Watt]
speakerType C: Voice Coil: thermal time constant [s]
speakerType C: Magnet: thermal time constant [s]
speakerType C: Ambient temperature, [C]
speakerType C: Temperature limit [C]
speakerType C: Attack time
speakerType C: Release time
speakerType C: Temperature hard limit headroom [C]
speakerType C: Gain link
speakerType C: Audio channel assignment
Gain link all audio channels
General
Speaker type A
Speaker type B
Speaker type C
microphone
reference
VoiceProcessor_v7.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v7/VoiceProcessor_v7.cpp
couldn't load %s trim gains from MobileGestalt
couldn't parse %s trim gains - CF data is not invalid
couldn't parse %s trim gains - raw data is NULL
couldn't parse %s trim gains - raw data size is not valid
loaded %s trim gains header from MobileGestalt: {version=%d, size=%d, count=%d}
couldn't parse %s trim gains - data structure version %d is not supported
couldn't parse %s trim gains - data structure size is not valid
loaded %s trim gains from MobileGestalt: {%s}
NoiseProfile
AUOneChannelNS.cpp
NonstationaryNoiseEstimator.cpp
index calculation error
invalid output size
intermediate is too small!
APACMetadataTrace
onAPACMetadataAvailable
AUVirtualBass_ViewFactory
Automatic Level Control
Monitor
Low End Band Pass Lower Frequency
High Pass Filter Corner Frequency
Harmonics Band Pass Upper Frequency
Low End Band Pass Lower Order
Low End Band Pass Upper Order 
Harmonics Band Pass Lower Order
Harmonics Band Pass Upper Order
High Pass Filter Order
Harmonic Gain
Low End Blend In Gain
Peak Follower Lower Limit
Peak Follower Attack Time
Peak Follower Release Time
Activate Harmonics Compressor
Harmonics Compressor Threshold
Harmonics Compressor Ratio
Harmonics Compressor Make Up Gain
Harmonics Compressor Knee Width
Harmonics Compressor Attack Time
Harmonics Compressor Release Time
Non Linear Device Type
Soft Clipper Amplitude
Soft Clipper Slope
Soft Clipper Offset
Aggressive Clipper Amplitude
Aggressive Clipper Slope
Aggressive Clipper Offset
Exponential Base
Exponential Amplitude
Polynomial Coeffcient A0
Polynomial Coeffcient A1
Polynomial Coeffcient A2
Polynomial Coeffcient A3
Polynomial Coeffcient A4
Polynomial Coeffcient A5
Polynomial Coeffcient A6
Polynomial Coeffcient A7
Polynomial Coeffcient A8
Polynomial Coeffcient A9
Peak Follower Hold Time
Peak Follower Smoothing Time
Harmonics Compressor Hold Time
Harmonics Compressor Smoothing Time
Butterworth Low Pass
Butterworth High Pass
Resonant Low Pass
Resonant High Pass
Band Pass
Band Stop
Low Shelf
High Shelf
Resonant Low Shelf
Resonant High Shelf
Max Gain for EQ1
Max Gain for EQ2
Max Gain for EQ3
Max Gain for EQ4
Current Gain
PreGain (dB)
Noise SPL
global gain
csdelay
Desired delay in millisecond
AUToneMeister_ViewFactory
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary)
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error: AU has %d channels, uninitialized?
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error : data
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) detected binary plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) detected text plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error: unknown plist format
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) successfully imported parameters!
AUToneMeister::SetProperty(kAudioUnitProperty_DspLibDictionary) Error : importer : %s
GroupBypassSwitches
GroupLockSwitches
CrossFadeDuration
MaxAllowedFilterOrder
RTAchannels
ChannelLinesDrawingOffset
RTAdecayTime
PhaseFlipChannels
GroupVisibleSwitches
ChannelMuteSwitches
State
Frequency 0
Frequency 1 or Quality
Frequency 2 or Order
Frequency 3 or Phase
Filter Channel Mask
Phase Channel Mask
System Volume Range Start
System Volume Range Stop
automated filter
automated filter state
set point A
set point B
set point B gain
set point B frequency
set point M enable
set point M
set point M gain
set point M frequency
Filter 00
Filter 01
Filter 02
Filter 03
Filter 04
Filter 05
Filter 06
Filter 07
Filter 08
Filter 09 
Filter 10
Filter 11
Filter 12
Filter 13
Filter 14
Filter 15
Filter 16
Filter 17
Filter 18
Filter 19 
Filter 20
Filter 21
Filter 22
Filter 23
Filter 24
Filter 25
Filter 26
Filter 27
Filter 28
Filter 29 
Filter 30
Filter 31
Filter 32
Filter 33
Filter 34
Filter 35
Filter 36
Filter 37
Filter 38
Filter 39 
Filter 40
Filter 41
Filter 42
Filter 43
Filter 44
Filter 45
Filter 46
Filter 47
Filter 48
Filter 49 
VariableEQ general
variable filter 0
variable filter 1
variable filter 2
variable filter 3
variable filter 4
variable filter 5
variable filter 6
variable filter 7
variable filter 8
variable filter 9
AUToneMeister messenger
Band-Shelve
Bell
Low-High-Shelve
Low-Pass
High-Pass
Band-Pass
Notch
Tone-Tilt
Allpass
Phase-Equalizer
Low-Shelve with Q
High-Shelve with Q
Low-Pass with Q
High-Pass with Q
active
active + enabled
selected + enabled
selected + active
selected + active + enabled
SNREstimator.h
PilotTempSensor.cpp
PTSamplePeriod = 
PTPeriodNormFactor = 
Gsmooth = 
AnalysisFreq = 
Goertzv:
Goertzi:
a1 = 
, s1 = 
, s2 = 
DesiredWindowTime = 
DesiredAnalysisFreq = 
SmoothingTau = 
Reb_20C = 
RebScale = 
maxBlockSize = 
noiseSampleRate = 
noiseBandLowerCorner = 
SamplePeriod = 
PeriodNormFactor = 
DCBlkV = 
DCBlkI = 
CLSPKernel_v3 CalcCoeffs physical params Ch %u: fs=%f; Reb=%f; Rampout=%f; mt=%f; ct=%f; kt=%f; ag=%f; g_bw=%f; mQ_d=%f; phi=%f; x_lim=%f; ageff=%f; Q_cd=%f; Q_cn=%f; w_d=%f; LookaheadDelay=%f; 
CLSPKernel_v3 CalcCoeffs thermal params Ch %u: Fs_th=%f; Tc_vc=%f; Tc_mg=%f; T_sett_vc=%f; T_sett_mg=%f; FFfactor=%f; 
CLSPKernel_v3 coeffs Ch %u:
 ff_ac1=%f;
 ff_bc0=%f;
 ff_bc1=%f;
 TGainTimerInit=%d;
 mHardAttack=%f;
 DelaySamples=%d;
Element: %d
AudioComponentDescription
AUProperties
AUParameters
MeanNonspeechRegionSec
MeanSpeechRegionSec
ObservationModelParams
array::at
SphericalHeadSpatializer
matrixNumCols
matrixNumRows
matrixData
preclip gain dB
user gain dB
volume smooth time
volume decay smooth time
ceiling dB
softclip level dB
look ahead
All Pass
speex noise supp mode
speex noise supp level
speex speech probability
speex occlusion mode
speex occ_2ndMic confd
speex ns_auto_mode
speex auto_blend_alpha
speex 1mic vad
speex 2mic vad
speex auto NS level
loadAUPreset
loadFactoryPreset
/aufx-
-appl-headphone.aupreset
personalized-
aumx-3dem-appl-headphone-general-
multichannel-delta.aupreset
aumx-3dem-appl-headphone-movie-
Built-In Speaker Media Playback
Headphone Media Playback Default
Headphone Media Playback Movie
aumx-3dem-appl-headphone-general-multichannel.aupreset
aumx-3dem-appl-headphone-movie-multichannel.aupreset
%s -> %s
In %d -> Out %d
Inputs
Outputs
Diagonal
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v6/vpProcessUplink_v6.cpp
vpProcessUplink_v6.cpp
suppressor_classV4.cpp
default audio channel layout tag
afSTFTWrapper.cpp
fltbAnalysisSerializedVector
inVectorSize == mnHops * mhopSize * mnInputs
fltbAnalysisMatrix
inMatrix.NumRows()==mnInputs
inMatrix.NumCols()==mnHops*mhopSize
outputMatrix.size()==mnumBands
outputMatrix[0].NumRows()==mnOutputs
outputMatrix[0].NumCols()==mnHops
fltbSynthesisVector
ioTD.size() >= mnOutputs
AULoudnessInNoise.cpp
HearingThreshold
Failed to retrieve Microphone Sensitivity/Hearing Threshold from input dictionary !
nRefLevs
Failed to retrieve number of Levels from input dictionary.
Too many Reference Spectrums.
RefLevels
DecisionThresholds
spreadingMatrixSmall
spread_left_UInt32
spreadingMatrixSmall_Lengths_UInt32
Mic2ErpTx
FreqWeight
RefSpecAtRefMic
RefSpecSpreadAtErp
DecisionThresholdsMixed
auloudnessinnoise
RawLoudness
NormLoudness
LoudnessPercentile
Audibility
Levels
Operating mode: 0-Assess current lev, 1-Estimate all levs
Matching criterion to find current loudness (0=closest exceeding 1=closest)
Index of the noise spectrum in Q used to normalize loudness
Loudness Percentile Interval [sec]
Percentile to use (0-100%)
0-Ignore VAD, 1-Use Extern VAD with Thresh, 2-Threshold CV, 3-Threshold Echo/Play, 4=1or2, 5=1or3, 6=1or2or3
(input) Threshold on Soft VAD
(input) Threshold on Clean Voice for a VAD (dBfs)
(input) Threshold on Echo/Play for a VAD (dBfs)
(input) Minimum frequency used for sensing (Hz) 
(input) Maximum frequency used for sensing (Hz) 
(input) Power law p used in loudness 
(input) Power law Q used in loudness 
(input dyn) Current Level
(input dyn) External Soft VAD value
(output) Normalized Loudness for current frame
(output) Raw Loudness for current frame
(output) Percentile loudness 
(output) Audible Level: -1-Not Calculated 0-InAudible, 1-Maybe Audible, 2 Audible
(output) Used Level from array of available Levels in plist
(output) Index which increments (wraps at 32,000) when Audibility/Percentiles are updated
(output) Mean Power of estimated noise spectrum (dB) 
LimitWindBoost.cpp
numChans > 0
blockSize > 0
sampleRate > 0.0f
mInitialized
propagateParameterChanges
getParameter
index <= mParameter.size()
refMicEnergy.size() >= mFcBinLimitWindBoost
beam.size() >= mFcBinLimitWindBoost
isSensorNoise
getSmoothedCrossoverIndex
MicSense_Core.cpp
psdburg
psd.size() >= mCplxVectorSize
arburg
length > 0
mTmpVector5.size() >= length
mTmpVector2.size() >= length
mTmpVector3.size() >= length
mTmpVector1D.size() >= 2 * (order + 1)
numChannels == output.size()
input[0].size() >= numFrames
mTelephonyMicDSPSettingsDict != nullptr
InvalidPropertyValue
mTelephonyRefDSPSettingsDict != nullptr
mPowerBudget != nullptr
muted_talker_detection
inDataSize >= sizeof(UInt32)
BadPropertySize
inDataSize == sizeof(UInt32)
inDataSize == sizeof(Float32)
inDataSize >= (mMicTrimGainsDB.size() * sizeof(Float32))
inDataSize == sizeof(CFArrayRef)
inDataSize >= (mRefTrimGainsDB.size() * sizeof(Float32))
inDataSize == sizeof(CFDictionaryRef)
inDataSize >= (mNumMetricsReporterIDs * sizeof(CAReporterID))
inDataSize >= sizeof(Float64)
inDataSize >= sizeof(CFDictionaryRef)
inDataSize >= (mNumSpeakerInputDataSource * sizeof(UInt32))
inDataSize >= sizeof(SpatialHeadTrackingConfiguration)
inDataSize >= sizeof(Float32)
vpProperties.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpProperties.cpp
setproperty: thermal budget on AU (%d); count = %u
setproperty: AU (%d) enabled = %d, null = %d
setproperty: thermal budget dict is empty
setproperty: spatial metadata = "%s"
setproperty: spatial metadata
setproperty: media chat old volume:[%f], new volume:[%f]
setproperty: bypass =%d
setproperty: mute uplink output =%d
vp_mute_output
setproperty: mute downlink voice =%d
vp_mute_downlink_voice
setproperty: enableagc=%d (currently: enableagcdefault=%d, clientsetenableagc=%d, agc=%p).
vp_enable_agc
Expanse
setproperty: current state of media chat = [%s], new state of media chat = [%s]
Begin self-reinit (kVPProperty_EnableMediaChat)
End self-reinit (kVPProperty_EnableMediaChat)
setproperty: feature was not enabled
setproperty: media chat for vp version = %u is not supported
setproperty: current state of spatial chat = [%s], new state of spatial chat = [%s]
Begin self-reinit (kVPProperty_EnableSpatialChat)
End self-reinit (kVPProperty_EnableSpatialChat)
setproperty: spatial chat for vp version = %u is not supported
inDataSize == sizeof(SpatialHeadTrackingConfiguration)
setproperty: spatial head tracking configuration with mode %u and head tracking %s
Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s])
End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s ]
Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s])
End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s ]
setproperty: current state of media playback on external device = [%s], new state of media playback on external device = [%s]
setproperty: chat flavor value changed to = [%s]
Begin self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
End self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
Voice isolation not supported, ignoring incoming property
disableVP <= 1
vp_disable_vp
Begin self-reinit (kVPParameter_DisableVP)
End self-reinit (kVPParameter_DisableVP)
TRUE
FALSE
setproperty: disable vp = %s.  
setproperty: HwHasVP got invalid data
vp_hw_has_vp
Begin self-reinit (kVPParameter_HwHasVP)
End self-reinit (kVPParameter_HwHasVP)
setproperty: hw has vp = %s.  
(inDataSize % sizeof(Float32)) == 0
micTrimGainsCF.is_valid()
micTrimGainsCF->get_size() != 0
trim_gain_data_source_id
value->has_key(kVirtualAudioPortPropertyTrimGainsCFDataSourceIDKey)
value->has_key(kVirtualAudioPortPropertyTrimGainsCFGainDBKey)
failed to set microphone trim gains property due to exception
refTrimGainsCF.is_valid()
refTrimGainsCF->get_size() != 0
failed to set reference trim gains property due to exception
Begin self-reinit (kVPProperty_SpeakerCalibrationDataCF)
End self-reinit (kVPProperty_SpeakerCalibrationDataCF)
vp_vocoder_type_int
Begin self-reinit (kVPProperty_PrimaryCodecType)
End self-reinit (kVPProperty_PrimaryCodecType)
setproperty: primary audio vocoder type = %s(%d) 
inDataSize == sizeof(Float64)
vp_vocoder_sample_rate
Begin self-reinit (kVPProperty_PrimaryCodecSampleRate)
End self-reinit (kVPProperty_PrimaryCodecSampleRate)
setproperty: re-initializing speech enhancer; old ul blk sz = %u; new ul blk size = %u; old ul sr = %lf; new ul sr = %lf
setproperty: primary vocoder sample rate = %f 
Begin self-reinit (kVPProperty_TelephonyMicDSPSettings)
End self-reinit (kVPProperty_TelephonyMicDSPSettings)
setproperty: mic custom dsp settings
Begin self-reinit (kVPProperty_TelephonyRefDSPSettings)
End self-reinit (kVPProperty_TelephonyRefDSPSettings)
setproperty: ref custom dsp settings
(beamDirection == kAUBeam2BeamIndex_Front) || (beamDirection == kAUBeam2BeamIndex_Back)
vp_beam_direction
top front mic
top back mic
setproperty: beam former direction = %s
setproperty: chat flavor = %u
setproperty: hardware volume =%f dB
AU HLC exists in the VP chain applying HW vol =>%f
[VolumeLimit] AUSPLMeter exists in the VP chain; applying HW vol =>%f
[VolumeLimit] SPLTarget update %f
[VolumeLimit] Setting target LKFS on LDNM to %f
[VolumeLimit] Failed to et LKFS from AUSPLMeter. Error = %d
setproperty: is tap stream enabled  = %d
vp_speech_activity_listener_for_mtd
MutedSpeechActivityEventListener is registered with VP
True
False
Begin self-reinit (kVPProperty_MixStereoToMono [%s])
End self-reinit (kVPProperty_MixStereoToMono [%s]
Begin self-reinit (kVPProperty_ContinuityCaptureMode
End self-reinit (kVPProperty_ContinuityCaptureMode
gSpatialMetadataSPI
EndpointVAD
EndpointVAD2
EndpointVAD3
CLSPKernel_v4.cpp
CalTempRangeMax
CalTempRangeMin
RebRangeMax
RebRangeMin
a_t_20C
a_t_35C
RdcScale
TlimAdjCap
VPwrThres
IPwrThres
CapScale
ConvoyDelay_ms
ConvoyPeakFinderWindowTime_ms
ConvoyXLimIncrement_dB
ConvoyLimAttack
ConvoyLimRelease
ConvoyFilterCoeffs
ParameterUpdaterConfig
VMONScale = 
IMONScale = 
RdcScale = 
TempCo20 = 
TempCo35 = 
RebMin = 
RebMax = 
CalTempMin = 
CalTempMax = 
TlimAdjCap = 
VPwrThres = 
IPwrThres = 
ParameterUpdaterConfig present = 
capScale = 
minExcursion = 
maxExcursion = 
delay ms = 
peakFinderWindowTime ms = 
posPeakFinderThreshold = 
xLimIncrement_dB = 
normFactorAtk = 
normFactorRel = 
dft_v2.cpp
AUAGCV2.cpp
Modified RMS
Periodicity
Sparsity
Both
Either
agc2
Total gain
Averaging method
A weighting
Exp. window length (99%)
Dead zone width
Gain increase slew rate/sec
Gain decrease slew rate/sec
Max gain
Min gain
Min data for gain change
Optimum data for gain change
Peak thd (relative)
Dead zone centering
Centering gain
Centering exp. window length (99%)
Centering slew rate/sec
Noise SPL based gain limiting
Noise SPL estimate (from NS)
Gain limit relative to max
Gain limiting thd SPL
Gain limiting slope
Gain limiting hysteresis
Gain limiting slew rate/sec
Gain leak during silence
Gain leak pre delay
Gain leak slew rate/sec
Post gain (between AGC & limiter)
Limiter thd
Limiter exp. window length (99%)
Limiter attack slew rate/sec
Limiter release slew rate/sec
Level-based VAD
VAD window length (rectangular)
Absolute silence thd
Ext. speech prob estimate (from NS)
Ext. speech prob thd
Minimum tracking level
Minimum tracking length
Minimum tracking VAD thd
Soft clipping
Calibration mode (turns AGC off)
Calibration
Calibration/AGC target level
Non-level-based VAD
VAD state: 1=periodicity; 2=sparsity; 3=both
LPC block size
LPC order
LPC bandwidth expansion
Autocorrelation length
Min pitch frequency
Max pitch frequency
Periodicity smoothing TC
Periodicity background smoothing TC
Periodicity thd above background
Current residual periodicity above smoothed background
Sparsity blocksize
Sparsity smoothing TC
Sparsity background smothing TC
Sparsity thd above background
Current residual sparsity above smoothed background
Noise Dither Enabled
Pre gain
Limiter
ConvoyDisplacementControllerV2
ConvoyDispControllerV2.cpp
inDispModel
mc_xMax > 0.
mc_xMin < 0.
mc_posPeakFinderThreshold > 0.
mc_negPeakFinderThreshold < 0.
g_bw = 
x_lim = 
Q_d = 
peakAttackTime = 
peakDecayTime = 
flvSmoothingTime = 
peakFinderWindowTime_ms = 
ms_x_lim = 
invxlim = 
ptp_x_flv = 
ptp:
flv:
convoyModel:
relative posPeakFinderThreshold = 
relative negPeakFinderThreshold = 
peakFinderWindowSize = 
posPeakFinderthreshold = 
negPeakFinderThreshold = 
xLimInc = 
xMin = 
xMax = 
xLimUpper = 
xLimUpperReal = 
xLimLower = 
xLimInit = 
invxLimInit = 
MaxNormFactor = 
MinNormFactor = 
PeakRatioPosBlockThreshold = 
PeakRationNegBlockThreshold = 
PeakRatiosInWindowCountThreshold = 
normFactorThreshold = 
mp_ConvoyBufferDirtyCountThreshold = 
mc_ConvoyBufferDirtyCountThreshold = 
ptpAtkRel:
flvTime:
flvSmoother:
lfsn:
modelNormFactor:
calcCoeffs
mr_dispModel
calcCoeffsSyncDisp
HOASpatializer
initializeSourceExtentProcessor
rotateAccumulating
boost
max gain dB
attack time
noise attack time
noise release time
boost threshold dB
noise threshold dB
clip enable
_vpio_res: check 1 failed!
_vpio_res: check 2 failed!
_vpio_res: check 3 failed!
(Out) Flag to say EC and IR should be in a good converged state
(Out) Flag to say EC and IR should be in a partially converged state
(Out) Warning flag of invalid signals into the EC
(Out) Average coupling between Ref and EC input(s)
(T) Set to 1 if it's known the EC will diverge. Puts checks in decision.
(T) Number of mics (<=6)
(T) Number of bands (<=6)
(T) LowBand cutoff (Hz)
(T) HighBand cutoff (Hz)
(T) Short Time Interval (sec)
(T) Long (Full) convergence Time Interval (sec)
(T) Partial convergence Time Interval (sec)
(T) Time Interval to pause for possible divergence (sec)
(T) Time Interval for averaging in coupling calculation (sec)
(T) Ref  energy: % of short-frames in a long interval that must pass
(T) ECin energy: % of short-frames in a long interval that must pass
(T) Suppression: % of short-frames in a long interval that must pass
(T) For divergence monitoring: Minimum reference energy (dB)
(T) For divergence monitoring: Maximum reference energy (dB)
(T) For divergence monitoring: Minimum ref2mic coupling (dB)
(T) For divergence monitoring: Maximum ref2mic coupling (dB)
(T) For convergence monitoring: Minimum reference energy per band (dB)
(T) For convergence monitoring: Minimum EC inut energy per band (dB)
(T) For convergence monitoring: Minimum suppression per band (dB)
(T) For convergence monitoring: Minimum partial convergence suppression per band (dB)
(T) Partial Suppression: % of short-frames in a long interval that must pass
(T) Lower band index for partial suppression (1<= <=Nbands
(T) Upper band index for partial suppression (1<= <=Nbands
(T) Enable/disable peakiness analysis
(T) FFT Size used for peakiness analysis
(T) Low band cutoff for peakiness measure (Hz)
(T) Mid band cutoff for peakiness measure (Hz)
(T) High band cutoff for peakiness measure (Hz)
(T) Exponential smoothing for spectrum estimation for peakiness 0<a<=1
(T) Peakiness Threshold2 that is for max peakiness over bands 
(T) Peakiness Threshold1 that is for max peakiness over bands 
(T) Peakiness Threshold that is for peakiness of full band 
(Out) The measured max peakiness over bands
(Out) The measured peakiness of the full band 
(Out) Sticky version of ConvergenceOk flag
(Out) Sticky version of Partial Convergence flag
(T) Enable/disable DTD check
(Out) DTD statistic EcleeMicXcorr 
AudioGapFillerFactory.mm
TrainingLengthDilationFactor
WLSP_eta
AROrderSingleBand
winCoeff
TrainingRegionHeuristics
BlowupDetectionEnergyRatioThreshold
basicZeroCrossing
ARGapFiller.h
bad window size
ring buffer too small
input buffer too small
non-finite detected
input too small
training region will extend past the end of x
bad backwards training region length
buffer is too small
region is too small
index error
AUEndpointVAD3.cpp
ConfigurationParameters
Left/Mono Speaker Settings
Speaker Settings
T_Coil
T_Coil_r
clsp_syslog_level
Ch %d; T_CL=%6.2f; T_OL=%6.2f; DGain=%5.2f; TGain=%6.4f; tgtgain=%4.2f, hlimgain=%f, fbhlgain=%f
RenderTime %d, RenderTimeDelta %f, HostTime %f
Thermal kI
thermal gain attack time
thermal gain release time
Reb20C
Tc_vc
Tc_mg
Reb_20C
ThermalState.h
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v9/vpProcessUplink_v9.cpp
vpProcessUplink_v9.cpp
CrossCorrelator.cpp
output.size() >= (input.size() + mFilter.size() - 1)
vpStrategyManager.mm
*uninitialized*
*initialized*
*initializing*
 OR 
*invalid*
B12@?0I8
DoSetProperty
GetPropertyInfo
AppendSpeakerTelemetryData
stateMutex
vpLock
vp data
vpPropertyItem.h
vpStrategyManager.h
vpPropertyQueue.h
CommitVolume
replaced
audstn
AUDistance.cpp
Number of context frames for NeuralNet
Forgetting factor for input PSD estimation (time constant in seconds)
Wait time between restarting the estimate smoothing (in frames)
VAD for the input signal at the current frame
Distance estimated at the current frame
Mean of the distance estimate
Standard deviation of the distance estimate
Kalman filter process standard deviation
Kalman filter observation standard deviation
At least one settings dictionary is null. You must load all settings before initializing.
Failed to read Viterbi settings from plist.
EndpointVAD3.cpp
mViterbiFullStatePrior.get()->size() == Dt*Dm
mViterbiFullStateTransMx.get()->size() == Dt*Dm * Dt*Dm
mViterbiObsPriorTopLayer.get()->size() == mObservationDim*Dt
mViterbiObsTransMxTopLayer.get()->size() == mObservationDim*mObservationDim * Dt
DoneProcessingAudio() should not be called with real time operation mode or on the real time thread.
Error in ULDAT ProcessAudio()
Error in ASA ProcessAudio()
CategoryNames
CategoryDataMaxes
TimingModelOrders
CategoryValueNames
ULDATFeatureNames
ULDATFeatureDataMaxes
ASASuperFeatureNames
ASASuperFeatureDataMaxes
ViterbiRingBufferSizeSeconds
FeatureTimeSeries.h
ElementAt
index < mArray.size()
vpInitializeUplink.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpInitialize/vpInitializeUplink.cpp
call num %u
VPV%u REF %s %s (blksz %lu) MIC %s %s (blksz %lu)
ref audiodeviceid = %lu      mic audiodeviceid = %lu
inRefASBD passed in = %s
inMicASBD passed in = %s
hw io blocksizes passed in REF = %lu MIC = %lu
vp_allow_multi_ch_ref
failed to initialize - no reference ports
failed to initialize - no microphone ports
ul-dl config out of sync mHwRefASBD = %s, %d
 inMicASBD = %s %d
ul-dl config no longer out of sync
ul-dl config still out of sync ?!
fs mismatched! REF=%fHz, MIC=%fHz
ioOutASBD passed in = %s
ERROR: Initialize output called before Initialize hw input was called!
UL fade data size = %u
initialize output: ioOutASBD passed OUT = %s
GetMaxOutputPacketInfo
GetMaxOutputPacketInfo : InitializeOutput hasn't been called yet!
vp_epio_blksz
vp_epio_blksz_ms
vp_epio_samplerate
CalcEpIoSampleRate
preferredClientSampleRate: %g
CalcBlkSzs
calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu
calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu
calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu
CalcASBDs
calcasbds: mEpRefASBD format: %s
calcasbds: mEpMicASBD (ignore the # of channels) format: %s
calcasbds: mEpOutASBD format: %s
calcasbds: mUsOutASBD format: %s
CalcInternalProcessingLatency
calcinternalprocessinglatency: %f sec
CalcSRCLatencySamples
calcsrclatencysamples: ref src ltnc = %d samples(@%f Hz), mic src ltnc = %d samples(@%f Hz), out src ltnc = %d samples(@%f Hz)
CalcBufferingLatencySamples
calcbufferinglatencysamples: %d samples(@%f Hz)
InitRefMicRingBuffers
initrefmicringbuffers : delaying mic by %.2f ms (%d samples)
initrefmicringbuffers : mic buffer src ltnc padding %d samples
initrefmicringbuffers : ref buffer src ltnc padding %d samples
initialize: error initializing sample rate converters
initialize: mOutASBD computed = %s
initialize: [iphone/ipad simulator] disabling all uplink processing
Error %d from applying beam direction
ecout
media
AudioIssueDetectorCreate
AudioIssueDetectorInitialize
AudioIssueDetectorDispose
AudioIssueDetectorSetNodeFormat
AudioIssueDetectorSetNodeFormatWithDirection
AudioIssueDetectorReset
AudioIssueDetectorAnalyzeBuffer
AudioIssueDetectorUpdateReportingSessions
AudioIssueDetectorRemoveNode
AudioIssueDetectorSetUplinkMute
AudioIssueDetectorSetDownlinkVolume
AudioIssueDetectorSetRouteSpecificDownlinkGainAdjustment
AudioIssueDetectorSetSmartCaseMicMute
/System/Library/Frameworks/AudioToolbox.framework/libAudioDSP.dylib
RegisterAudioUnits_Analyzer
vp_inject_files
vp_add_files
vpDebug_FileInjection.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_FileInjection.cpp
OpenSignalInjectionFiles
opening route-specific injection file %s
error opening injection file %s
opening generic injection file %s
opening injection file %s
injection file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
error reading file %s [err=%d, frames to read=%lld, num frames read=%d]
error %d getting length of injection file %s, length %d
error %d opening injection file %s, will use original (not injected) signal
aaaa.000.
opening addition file %s
addition file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
error-%d opening addition file %s, will use original (not added) signal
badinjectionfile
AUFIREngine_
firengine_verbose
AUFIREngine.mm
Matrix outputs to AU output format validation
Matrix inputs to AU input format validation
matrixFIRs.size()
FIR_Matrices
inNumberInputBufferLists == 1 && inNumberOutputBufferLists == 1
Mute: In %u Out %u
Bypass: In %u Out %u
Gain: In %u Out %u
FIR Matrix
Global Gain
FIR_NamedMatrices
FIR_Table
CLMClickMitigator.mm
/Library/Audio/Tunings/%@/AU/aufx-clr2-appl.plist
/Library/Audio/Tunings/Generic/AU/gen-aufx-clr2-appl.plist
logic error
ClickRemovalRecordMode
ClickRemovalParams.h
ClickRemovalDisable
ClickRemovalDisableHIDMonitor
ClickRemovalAcceptAnyFormat
GapFillerType
ParametricProcessor
AUPeakPowerGuard_ViewFactory
Modulator low pass frequency
Woofer Amplifier Sensitivity
Woofer Temperature Celcius
Woofer Amplifier Efficiency
48 Volt Quiescent Power
output gain function
Moving average main time constant
48Volt power limit TC
48Volt power limit TC / 2
48Volt power limit TC / 4
48Volt power limit TC / 8
12Volt power limit TC
12Volt power limit TC / 2
12Volt power limit TC / 4
12Volt power limit TC / 8
48 to 12 Volt Converter Dynamic Efficiency
Woofer Gain Minimum
Woofer Gain Release Time
Tweeter Gain Minimum
Tweeter Gain Release Time
Tweeter Amplifier Sensitivity
Tweeter Resistance
Tweeter Amplifier Efficiency
12Volt Quiescent Power
enable 48Volt power limit TC
enable 48Volt power limit TC / 2
enable 48Volt power limit TC / 4
enable 48Volt power limit TC / 8
enable 12Volt power limit TC
enable 12Volt power limit TC / 2
enable 12Volt power limit TC / 4
enable 12Volt power limit TC / 8
Lookahead Time
SystemPower 48 Volts
SystemPower 12 Volts
SystemPower MLB
System Vmin 48 Volts
System Vmin 12 Volts
Tweeter Parameters
Woofer Parameters
System Measurements
Testing and debugging
EndpointDecisionLayer.cpp
DspLibXTC_customFilterDictionary
CoefficientsLandscape
CoefficientsPortrait
W11real
W11imag
W21real
W21imag
W12real
W12imag
W22real
W22imag
WDataIsCompressed
AUXTC_ViewFactory
com.apple.AUXTC_FilterDesignerQueue
AUXTC.mm
Setup_%d
BypassMode
Bypass Crossover
Bypass FIR optimizer
Low Pass Stop Frequency
Low Pass Order
High Pass Start Frequency
High Pass Order
Mute Effect
Mute Direct
SwapCrossTerms
SwapLeftRight
FIR Filter Length
Tukey Window Coefficient
FIR Filter Group Delay In Percent Of Filter Length
Test Noise Generator
System Volume
Wet Dry Taper Point 0 - Volume
Wet Dry Taper Point 0 - Effect Mixer In Percent
Wet Dry Taper Point 1 - Volume
Wet Dry Taper Point 1 - Effect Mixer In Percent
Gain Trim
CrossfadeDuration
Setup For Device Orientation 'Ambiguous'
Setup For Device Orientation 'Portrait'
Setup For Device Orientation 'Portrait Upside Down'
Setup For Device Orientation 'Landscpae Left'
Setup For Device Orientation 'Landscape Right'
Setup For Device Orientation 'Face Up'
Setup For Device Orientation 'Face Down'
Bypass Mixer
Loudspeaker Spacing in cm
Listening Distance in cm
Sound Stage Opening Angle in degrees
Sound Stage Rotation
Dont Set W21 to zero
Setup 0
Setup 1
deferred_deletion_queue.h
drain_trash
trashObject
Ambiguous
Face Up
Face Down
Hold
XTC is turned off
XTC is bypassed
XTC is running
Prior XTC
Post XTC
AUXTC
ioObject
pendingObject
trash queue exceeded capacity, object memory leaked
iPMWF_HRLS_vDSP.cpp
nCoefficients
RealCoefficients
ImagCoefficients
AudioBufferList buffer overwrite or overread has occurred
AudioBufferList view is malformed
AudioBuffer overread has occurred during AudioBufferList copy
AudioBuffer overwrite has occurred during AudioBufferList copy
^{VoiceProcessorBase=^^?}20@?0I8r^v12
voice_processor_spi
/Library/Audio/Tunings
/tmp/AudioCapture/VP/
/usr/local/lib/
failed to put VoiceProcessor into AudioDSPManager mode
call_name
call_signature
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetVersion, ArgTypeList = <>]
GetVersion
topology is not supported
topology
node_configurations
microphone_port_type
microphone_hardware_sample_rate
microphone_hardware_input_latency
microphone_hardware_input_safety_offset
reference_port_type
reference_hardware_sample_rate
reference_hardware_input_latency
reference_hardware_input_safety_offset
reference_hardware_output_latency
reference_hardware_output_safety_offset
client_io_block_size
reference_is_hardware_tap_stream
io_block_size
input_types
input_formats
output_types
output_formats
sample_rate
format_id
foramt_flags
bytes_per_packet
frames_per_packet
bytes_per_frame
channels_per_frame
bits_per_channel
reserved
'AllOfUplinkDSP' node has wrong number of inputs
'AllOfUplinkDSP' node has no microphone input
'AllOfUplinkDSP' node has no reference input
'AllOfUplinkDSP' node microphone and reference input sample rates are not equal
'AllOfUplinkDSP' node has wrong number of outputs
'AllOfUplinkDSP' node has no uplink output
'AllOfUplinkDSP' node microphone input and uplink output sample rates are not equal
'HardwareDSP' node has wrong number of inputs
'HardwareDSP' node has no microphone input
'HardwareDSP' node has no reference input
'HardwareDSP' node input sample rates are not equal
'HardwareDSP' node has wrong number of outputs
'HardwareDSP' node has no microphone output
'HardwareDSP' node has no microphone clip data output
'HardwareDSP' node has no reference output
'HardwareDSP' node output sample rates are not equal
'HardwareDSP' node I/O sample rates are not equal
'HardwareDSP' node doesn't support variable I/O block size
'EchoDSP' node has wrong number of inputs
'EchoDSP' node has no microphone input
'EchoDSP' node has no microphone clip data input
'EchoDSP' node has no reference input
'EchoDSP' node input sample rates are not equal
'EchoDSP' node has wrong number of outputs
'EchoDSP' node has no voice data output
'EchoDSP' node I/O sample rates are not equal
'EchoDSP' node doesn't support variable I/O block size
'DynamicsDSP' node has wrong number of inputs
'DynamicsDSP' node has no voice data input
'DynamicsDSP' node has wrong number of outputs
'DynamicsDSP' node has no voice data output
'DynamicsDSP' node I/O sample rates are not equal
'DynamicsDSP' node doesn't support variable I/O block size
failed to find node configuration with requested type
failed to find input ASBD with requested type
failed to find output ASBD with requested type
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeHWInput, ArgTypeList = <const AudioStreamBasicDescription &, std::nullptr_t, unsigned int &, int, int, const unsigned int *, const AudioStreamBasicDescription &, std::nullptr_t, unsigned int &, int, int, const unsigned int *>]
call_status
InitializeHWInput
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeOutput, ArgTypeList = <CA::StreamDescription &, std::nullptr_t, unsigned int &, unsigned int &, unsigned int &>]
InitializeOutput
i32@?0^{AudioBufferList=I[1{AudioBuffer=II^v}]}8^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}16^I24
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has wrong number of inputs
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has no far-end-voice input
'AllOfDownlinkDSPWithFarEndVoiceOnly' node far-end-voice and telemetry input sample rates are not equal
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has wrong number of outputs
'AllOfDownlinkDSPWithFarEndVoiceOnly' node has no downlink output
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::InitializeDownlinkProcessing, ArgTypeList = <const AudioStreamBasicDescription &, unsigned int &, const AudioStreamBasicDescription &, int (^__strong &)(AudioBufferList *, AudioTimeStamp *, unsigned int *)>]
InitializeDownlinkProcessing
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::PreflightUplink, ArgTypeList = <unsigned int, unsigned int *>]
PreflightUplink
I/O rate mismatch has occurred
couldn't find input terminal index of requested type
failed to find output terminal index with requested type
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::AppendReferenceSignal, ArgTypeList = <AudioBufferList &, CA::TimeStamp &>]
AppendReferenceSignal
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::Process, ArgTypeList = <AudioBufferList &, CA::TimeStamp &, AudioBufferList &, AudioTimeStamp &, unsigned int &, std::nullptr_t, std::nullptr_t, std::nullptr_t>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::AppendReferenceSignal, ArgTypeList = <AudioBufferList &, AudioTimeStamp &>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkHardwareDSP, ArgTypeList = <AudioBufferList *&, AudioTimeStamp *&>]
RunUplinkHardwareDSP
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::ReadBuffer, ArgTypeList = <vp::BufferID, AudioBufferList *&>]
ReadBuffer
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::WriteBuffer, ArgTypeList = <vp::BufferID, AudioBufferList *&>]
WriteBuffer
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkEchoDSP, ArgTypeList = <AudioTimeStamp *&>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::RunUplinkDynamicsDSP, ArgTypeList = <AudioBufferList *&, AudioTimeStamp *&, unsigned int &>]
RunUplinkDynamicsDSP
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::PreflightDownlink, ArgTypeList = <unsigned int, unsigned int *, unsigned int *>]
PreflightDownlink
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::ProcessDownlinkAudio, ArgTypeList = <std::nullptr_t, std::nullptr_t, std::nullptr_t, vp::Audio_Buffer &, const unsigned int &, AudioTimeStamp &>]
ProcessDownlinkAudio
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetProperty, ArgTypeList = <unsigned int &, float *&, unsigned int &, unsigned int *>]
GetProperty
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::SetProperty, ArgTypeList = <unsigned int &, float *, const unsigned int &>]
SetProperty
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::GetProperty, ArgTypeList = <unsigned int &, void *&, unsigned int &, unsigned int *&>]
expected_call_result_t<CallType, T, ArgTypeList...> vp::call_synchronizer<VoiceProcessorBase>::call(ArgTypeList &&...) [T = VoiceProcessorBase, CallType = vp::call_type::SetProperty, ArgTypeList = <unsigned int &, const void *&, unsigned int &>]
%s%s_%04d%02d%02d_%02d%02d%02d_%s
com.apple.coreaudio.
/tmp/CLSPLogs/
com.apple.coreaudio.syslog
spp3
clsp_trace_iothread
vp_loopback
vpDebug_Loopback.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpDebugFeatures/vpDebug_Loopback.cpp
LoopBackInitialize
loopbackinitialize SRC=%s, usOut#chan=%d, dlMix#chan=%d
LoopBackWrite
loopbackwrite: ERROR can't write %d frames to loopbackABL ABL=%p, capacity=%d
loopbackwrite ERROR wrote %d (requested %d) frames
LoopBackRead
loopbackread ERROR read %d (requested %d) frames
loopbackread filled %d zeros in outABL channel %d
WhiteningSubspaceAdapter.cpp
not enough working memory
bad internal value
output is too small
invalid arCoefficients size
size mismatch
bad working size
invalid input ar order
AUCPMSVolumeV1.cpp
AUCPMSVolumeV1
Instantaneous: 
mW; 
100ms: 
1000ms: 
thermal: 
Amp system:
-[Amplifier efficiency expression: 
-[TargetGainRangeDB: [
] dB
 LUT entries]
  Volume level 
/16: 
BiquadInterpolator.cpp
No anchor points
Anchor points must be paired with an anchor biquad
Anchor points must monotonically ascend
Anchor filters must be the same size
GetCoefficientsAtPosition
!mAnchorBiquads.empty()
!mAnchorPoints.empty()
outCoeffs.size() == mAnchorBiquads.front().size()
PredDisp_Data_ch
PredDispMore_Data_ch
Reb_Data_ch
Err_Data_ch
CLDisp_Data_ch
CoeffLog_ch
T_Coil_ch
I_Data_ch
V_Data_ch
Convoy_Data_ch
Convoy_CapData_ch
Convoy_DataFiltered_ch
AUHapticsProtection.cpp
mHTL
happ_file_saving
/tmp/%d%02d%02d.%02d%02d%02d.happ_in.caf
/tmp/%d%02d%02d.%02d%02d%02d.happ_out.caf
AUHapticsProtection
None
Minimal
Invalid
attackBufferLength
slidingWindowMaxWidth
xlim
plim
rcoil
vlimDerateVibe
xlimDerateVibe
vlimDerateTap
xlimDerateTap
activityDetectorThreshold
activityDetectorCount
inputLPFTap_b0
inputLPFTap_b1
inputLPFTap_b2
inputLPFTap_a1
inputLPFTap_a2
inputLPFVibe_b0
inputLPFVibe_b1
inputLPFVibe_b2
inputLPFVibe_a1
inputLPFVibe_a2
compressorLPF1_b0
compressorLPF1_b1
compressorLPF1_b2
compressorLPF1_a1
compressorLPF1_a2
compressorLPF2_b0
compressorLPF2_b1
compressorLPF2_b2
compressorLPF2_a1
compressorLPF2_a2
plantTap_f0
plantTap_Q
plantTap_m
plantTap_Km
plantTap_Rcoil
plantLow_f0
plantLow_Q
plantLow_m
plantLow_Km
plantLow_Rcoil
plantHigh_f0
plantHigh_Q
plantHigh_m
plantHigh_Km
plantHigh_Rcoil
htl.hpp
nFrames <= _allocator.getChunkSize()
allocateChunk
(_dataSize - _current) >= _chunkSize
freeChunk
_current >= _chunkSize
chunkBegin == &_data[_current]
update
n <= _maxInputSize
n <= _maxInputLength
push
allocateAligned
ret == 0
alignedMemory != nullptr
ActivityDetector
_threshold > 0
_timeout > 0
SlidingWindowMax
_windowSize
vp_console_msgs
vpts
vp_save_timestamps
AUBassQueenViewFactory
hold update
ThieleSmall: Closed Box
S-domain: Xd/V, Xr/V
S-domain: Xd/V, Xr/Xd
input high pass filter
mitigation paramters
loudspeaker model parameters
ARGapFiller.mm
bad argument value
espresso
Success
Generic error
IO error
Parsing error
Memory allocation error
Context or plan is in an invalid state
One or more of the arguments passed was invalid
Mismatched blob shapes
Blob name not found
Feature not implemented
The call was aborted.
The call was aborted due to HW overflow
Unknown error
Mic calibration constant
Noise-estimate smoothing time-constant
Noise level (dBA)
Noise level (dBC)
SPLMeter.h
a.size() == mWeightCurve.size()
Uplink Threshold
Downlink Threshold
Echo Gain
Uplink Attack Time
Uplink Hold Time
Uplink Release Time
Downlink Attack Time
Downlink ReleaseTime
Downlink Hold Time
SoundStageManager
AUSMSoundStageManager.cpp
soundStageChannelLabels.size() == mSoundStages[*smallIndex].parameters.size()
soundStageChannelLabels.size() == mSoundStages[*mediumIndex].parameters.size()
soundStageChannelLabels.size() == mSoundStages[*largeIndex].parameters.size()
InitializeSoundStage
mSoundStages[i].parameters.size() == mSoundStages[0].parameters.size()
mSoundStages[*largeIndex].nonLFEParameters.size() == mSoundStages[*mediumIndex].nonLFEParameters.size()
mSoundStages[*largeIndex].nonLFEParameters.size() == mSoundStages[*smallIndex].nonLFEParameters.size()
!realSpeakersConnected.empty()
AUSMSoundStageLargeParameters
AUSMSoundStageMediumParameters
AUSMSoundStageSmallParameters
ChannelLabel
Azimuth
Elevation
Distance
DRRAdjustment
Delay
mSoundStageBasisDistances.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisGains.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisDRRs.size() == mSoundStageBasisVertices.size()/3
mSoundStageBasisDelays.size() == mSoundStageBasisVertices.size()/3
Type
Frequency
Quality
Gain
setParametricFilters
speex speech prob
vpGenCppUtils.cpp
%d.%d
@%.0f/%X
:%s%d
,%d%s
small
large
00. Product
01. File Name Prefix
02. AppendRefSignal Call Count
03. Process Call Count
04. HW REF Format
05. HW REF Block Size
06. Ref Port #0
07. HW MIC Format
08. HW MIC Block Size
09. Mic Port #0
10. HW REF Hw-Only Presentation Latency
11. HW MIC Presentation Latency
12. HW REF Safety Offset
13. HW MIC Safety Offset
14. VP Output Format
15. VP Quality
16. Enable AGC
17. ProcessDL Call Count
18. DL MIX Format
19. DL MIX Block Size
20. DL FEV Format
21. DL Volume
22. VP Mode
24. Preprocessing input gain
26. HW MIC Trim Gains
27. HW REF Trim Gains
28. Telephony Vocoder Type
29. Telephony Mic DSP Settings
30. Telephony REF DSP Settings
31. Disable VP
32. Voice Over Enabled
33. Beam Direction
34. SPKR TEL Format
35. SPKR TEL Block Size
36. HW Has VP
37. Ref Port #0 Subtype
38. VP Chat Mode
39. HW Layout ID
40. Device Orientation
41. IO Cycle Usage
42. Telephony Vocoder Sample Rate
42. Ref Port #0 EndpointType
45. HW REF Input Latency
46. HW REF Input Safety Offset
47. HW REF Tap Stream Enabled
48. HW MIC Device Sample Rate
49. HW REF Device Sample Rate
50. DL FEV Gain
00. REF Overload
01. MIC Overload
02. DLP Overload
03. REF Ring Buffer Ran Dry Log
04. SPKR TEL Overload
51. Machine HW Layout ID
52. CA Orientation
53. MaxNumOutPkts
54. MaxOutPktByteSize
55. Speaker Input Data Source
56. Smart Cover Is Attached
57. HW Ref Physical Device Sample Rate
58. Mute Output
59. Mute Downlink Voice
60. Power Budget settings
61. Speaker Calibration Data
62. Acoustic ID
63. HLC settings
64. Hardware Volume
65. Enable Media Chat
66. Enable Spatial Chat
67. Chat Flavor
68. Spatial Metadata
69. Media Chat Volume
70. Spatial Head Tracking Configuration
71. Media Playback on External Device
72. Continuity Capture Mode
vpgencpputil
SCOrientationManager
SCOrientationManager.cpp
aujbase
AUJBase.cpp
Disabled
Original
Velvet Single
Velvet Double
AP Comb Single
AP Comb Double
Low latency mode
Enhanced Center Extraction (ECE)
ECE Center Ratio
Center channel gain
Number of center channels
Surround channel gain
Number of surround channels
Low crossover order
Low crossover frequency
High crossover order
High crossover frequency
Use LFE with STFT 5.1 output
Subwoofer/LFE Gain
Surround EQ amount
Surround 7 kHz high shelf gain
STFT smoothing bandwidth oct
STFT xcorr time constant
STFT xcorr min time constant
STFT ambience leak to direct upmix
STFT ambience extraction amount
STFT ambience crosstalk control
STFT back allpass filters
STFT direct upmix LF time constant
STFT direct upmix HF time constant
STFT direct upmix LF limit
STFT direct upmix HF
STFT center energy norm
STFT center width
STFT center width exponent
STFT center phase angle width
STFT center minimum gain
FBC surround amount
Low crossover freq index (deprecated)
High crossover freq index (deprecated)
ScottyUpmixer
ScottyUpmixer.cpp
sampleRate > 0.
commonParameters != nullptr
*** Invalid parameter ***
nativeFrameSize >= mInputStagingBufferOffset
(inFramesToProcess-inFramesPending+inFramesToCopy) <= inFramesToProcess
(mInputStagingBufferOffset+inFramesToCopy) <= nativeFrameSize
(outFramesCompleted+outFramesToCopy) <= inFramesToProcess
(mOutputStagingBufferOffset+outFramesToCopy) <= mOutputBufSize
AUBuzzKill_ViewFactory
log2(FFT Length)
overlap, percent
window: 1=hann, 0=rect
mode: 1=continuous, 0=hop
PlotStartFrequency
PlotStopFrequency
max operation frequency
Algorithm Version
Filter Tolerance
min operation frequency
Filter Release Time
numNotchFilters
filterbank mode
lowShelve Frequency
display Release Time
Filter available Threshold
High Frequency Buzz Kill
FilterQuality
QualityMode
FilterOffThreshold
GainSmoothingTimeConstant
FrequencySmoothingTimeConst
FrequencyTrackingTimeConst
LowShelving Filter Num Stages
LowShelving Filter Quality
0 kill
1 kill
2 kill
3 kill
4 kill
5 kill
6 kill
7 kill
8 kill
9 kill
2.5 kHz
3 kHz
4 kHz
6 kHz
20 kHz
VAD3Configuration.cpp
AULoudspeakerManager_ViewFactory
SpVA
GuidedMWF.cpp
audnos
Layer
NeuralNetLoader.cpp
InputVectorDescriptor
Size
DataType
int8
Sint8
int16
SInt16
int32
Sint32
float32
DataScale
DataBias
OutputVectorDescriptor
LayerDescriptor
FullyConnected
Dense
LSTM
Weights
SInt8
SInt32
Bias
Activation
Function
Identity
Linear
RectifiedLinear
ReLU
LeakyRectifiedLinear
LeakyReLU
Sigmoid
Tanh
ScaledTanh
LoadClickRemovalTuning.mm
ParamsForButtonAndClickType
RemovalParams
detection_input_to_removal_input_latency
SubspaceDetector.h
invalid padding amount
MultiClassDetectorContainer.h
invalid input size
Invalid input size or padding length
WhiteningSubspaceAdapter.h
invalid outCoeffs size
dist
regularization_amount
mean
PriorProbNoClick
ClickDetectionPrior.mm
lognormal
lognorm
norm
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v5/vpProcessUplink_v5.cpp
vpProcessUplink_v5.cpp
WasSoundDetected
DetectionThreshold
DetectionConfidence
DetectedSampleIndex
Channel
ProcessBufferLists
AUCrossCorrelator.cpp
mAudioRingBuffer->Store(&inBufferList, inFramesToProcess, mAudioRingBufferWriteIdx) == kAudioRingBufferError_OK
mAudioRingBuffer->Fetch(&readABL, mCrossCorrelationInputSize, mAudioRingBufferReadIdx) == kAudioRingBufferError_OK
CopyBufferList
srcBufferList.mNumberBuffers == dstBufferList.mNumberBuffers
voice_isolation
VoiceProcessor_v6.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v6/VoiceProcessor_v6.cpp
InitializeV6Specifics
NOTICE: AUNeuralNet latency is %f ms, which is %d samples
LoadTuningsPlists
Unknown MainChatCategory: %s
NEW TUNING LOGIC <SERIOUS ERROR>: no tuning plists found. Using default paramters!!! Use case %s-%s-%s
SetChatFlavor
VP chat flavor set to %u
Forcing bypass to false due to chat flavor
Begin self-reinit (SetChatFlavor)
End self-reinit (SetChatFlavor)
com.apple.coreaudio.chatflavorupdated_
RegisterChatFlavorNotificationListener
ChatFlavor notification name is %s
ChatFlavor updated notification received
SubspaceDetector.cpp
invalid clickLoc
FeatureSelection.cpp
parseFeatureEnableBitMask
static_cast<Float32>(featureEnableBitMask) == tempMask
AudioDSP
apac
VBAPSpatializer
AUNeuralNetSPP.cpp
nnspp
NS: Number of DNN layers
NS: Number of frames for context window
NS: Forgetting factor (time constant)
NS: Noise suppression amount
NS: Noise suppression amount as post mask
RES: Number of DNN layers
RES: Number of frames for context window
RES: Forgetting factor (time constant)
RES: Echo suppression amount
RES: Echo suppression amount as post mask
Use energy threshold for channel averaging? Only channels with mean subband energy larger than the threshold will be used.
Energy threshold for channel averaging (in dB).
vpTimeFreqConverter.cpp
Meter.cpp
numFrames <= mWeightingFilterOutputBuffers[0].size()
AUScotty
LegacyHRTFSpatializer
Failed to Instantiate AU's
Failed to Set Up AU's
Failed to Initialize AU's
NoiseSuppress
V1Mode
ThresholdPower
ThresholdMultiplierLUT
EndpointVADDSPChain.cpp
MatrixDecompositions.cpp
U.NumRows()==Cx.NumRows()
U.NumCols()==Cx.NumRows()
VH.NumRows()==Cx.NumCols()
VH.NumCols()==Cx.NumCols()
singularValueDecompositionOnlyU
Cx.NumRows()==Cx.NumCols()
singularValueDecompositionOnlyUandS
singularValueDecompositionOnlyUandVH
suppressor_classV3.cpp
abtest_mode
Error: %@
.json
DominanceZoom.cpp
HOAZoomCurve
HOAZoomInDominanceCurve
HOAZoomOutDominanceCurve
Process
inBuffer->mNumberBuffers == mNumChannels
outBuffer->mNumberBuffers == mNumChannels
numSamples == mBlockSize * 2
hoaz
DominanceCurveCoordinator
DominanceZoom.hpp
sampleRate > 0.0
FixedIntegerDelay.cpp
!mPrimaryDelayBuf.empty()
!mSecondaryDelayBuf.empty()
AULimitWindBoost.cpp
mLimitWindBoost.isInitiazlied()
beamsABL->mBuffers[i].mDataByteSize >= mTemp.size() * sizeof(Float32)
outputABL->mBuffers[i].mDataByteSize >= mTemp.size() * sizeof(Float32)
aulwb
res_classV3.cpp
DictionaryBlobReader.cpp
Coefficients
RowIndices
ColumnIndices
DictionaryBlobReader.hpp
AUSeparate.cpp
AUXIVA using HRLS for covariance matrix inversion
AUXIVA direct covariance matrix inversion
auauss
IVA mode
Parameter for source prior model
Speech RMS floor
Signal pre-emphasis factor
Initial condition factor for covariance matrices
Use uniform diagonal elements to initilize covariance matrices
Covariance diagonal loading factor for direct inverse approach
Minimum frequency to calculate speech RMS
Maximum frequency to calculate speech RMS
Initial wait time before starting unmixing matrix update
Maximum output signal gain
Gain floor of separation filter
Regularization factor of lower triangular matrix in Cholesky factorization
Regularization factor in HRLS-based covariance inverse
MicSelections
SCMicSelectionBox.mm
SpacedOmni
SCMicSelectionBox
topLevelDict
numSDLSBeams > 0
SDLSChannelSelections
GetIndex
OrientationAndCameraDirectionDependentBox.hpp
index < mInfoPerCameraDirectionAndOrientation.size()
AUDynamicDuckerLog
Primary Ducking Level (dB)
Game Audio Ducking Level (dB)
Other Audio Ducking Level (dB)
System Sound Ducking Threshold (dB)
Primary Ducking Threshold (dB)
Primary Ducking Min Level (dB)
Game Audio Ducking Min Level (dB)
Other Audio Ducking Min Level (dB)
Other Audio RMS Limit (dB)
System Sound Gain (dB)
Game Audio Gain (dB)
Other Audio Gain (dB)
FEV Audio RMS
Ducking Ramp Time (s)
History Accumulation Time (s)
UnDucking Ramp Time (s)
Release Hold Time (s)
Threshold for ducking for local voice
Local voice probability
0 --> Off, 1 --> ON
Other Audio RMS
Other Audio Ducking Gain
Other Audio LongTerm RMS
AUBeam2.cpp
SpatialVectorReal1
SpatialVectorImag1
SpatialVectorReal2
SpatialVectorImag2
FreqCompVector1
OmniEQVector1
FreqCompVector2
OmniEQVector2
FreqEQVector1
FreqEQVector2
/tmp/aubeam2-%s-diffr-%dHz-%02d%02d%02d.txt
%.8f %.8f %.8f %.8f %.8f %.8f %.8f %.8f
/tmp/aubeam2-%s-eq-%dHz-%02d%02d%02d.txt
%.8f %.8f
beam2
Pass 1 Gain floor (dB)
Pass 2 Gain floor (dB)
Reverb tail gain (dB)
InpFrameNode
OutFrameNode
pass1GainFloor(dB)
pass2GainFloor(dB)
reverbTailGain(dB)
pass1GainFloor(dB)_i
pass2GainFloor(dB)_i
reverbTailGain(dB)_i
internalBypass_pref
internalBypass_fail
internalBypass_noTail
internalBypass
ReverbSuppressor_disable
ReverbSuppressor_pass1GainFloor
ReverbSuppressor_pass2GainFloor
ReverbSuppressor_reverbTailGain
AUReverbSuppressor.cpp
dereverb
ReverbTails
ProcessMultipleBufferLists
inFramesToProcess == mInputBlockVector.size()
inFramesToProcess == mInputFrameVector.size()
size
VectorUtils.h
mRealVector.size() == mImagVector.size()
AutoValue.h
delay <= _C
WARNING: Calling Get() on an AutoValue ('
') without initializing first. Initializing now.
_isInitialized == true
WARNING: Calling GetRevision() on a Trackable ('
GetRevision
_newArgRevisions >= _oldArgRevisions
operator[]
index < _C
theIndex < _C
IncrementCirc
this->m_holder.m_size > n
DecrementCirc
index <= _C
AUReverbSuppressor.h
UsesFixedBlockSize
MaximumFramesPerSlice
CFPrefHelper.h
map::at:  key not found
operator=
&x != this
priv_move_assign
this != &x
_gain2SmoothingCoef
_reverbTailGain
_psBeta_TC
_psBeta
_inpPs
_inpPs_brk
_inpPs_prev
_inpPs_prev_brk
_pass1Output
_reverbEst2Ps
_reverbEst2Ps_brk
_postSNR2_lin
_postSNR2_brk
_priorSNR2_lin
_priorSNR2_brk
_gainVPv3
ComputeMagnitude
SpectralMagnitude.h
result.size() == input.size()
SquareMagFreqVector
result.size() == a.size()
filterLeftTimesPS
filterRightTimesPS
DivideScalarVector
result.size() == theVector.size()
ComputeFilterLeftTimesPS_curry
BarkFilterbank.h
result.size() == ps.size()
MultiplyVectorVector
result.size() == b.size()
ComputeFilterRightTimesPS_curry
SquareVector
a.size() == result.size()
AddMultiplyVectorScalarMultiplyVectorScalar
result.size() == A.size()
result.size() == C.size()
&theAutoValue != this
_convolver
_inputMagnitude
MultiplyVectorScalar
Convolve
Convolver.h
result.size() == H[a].size()
result.size() == X.size()
AddMultiplyVectorVectorVector
result.size() == c.size()
tempTransformer
_blockSize
_fftSize
_zeroPad
_windowType
_overlapX
_numOutputFrames
_numOutputSamples
_xExtended
Transform
Transformer.h
result.size() == numFrames
tempInputBlock
_transformBuffer
FFT object failed to initialize.
FFT_Forward
result.size() == (input.size() / 2)
setup.size() == input.size()
MultiplyCVectorRScalar
LayFlat_curry
(result.size() == numItems * itemSize) || (result.size() == numItems * itemSize * 2)
ExtendWithZeros
x.size() <= newLength
result.size() == newLength
CopyVector
result.size() >= input.size()
_noiseReg
DivideVectorVector
result.size() == theDivisor.size()
AddVectorScalar
NegateVector
theVector.size() == result.size()
MaxVectorScalar
_gamma
_postClipped
AddMultiplyVectorScalarScalar
AddMultiplyVectorVectorMultiplyVectorVector
AddVectorVector
_gain2_bark
_gain_lin
_gain_bark
_GainNoClip
_GainSqrt
_gain2_raw
_bark2lin_gain_bark
_bark2lin_gain2_bark
_gainFloor_lin
SmoothVector
&result != &input
_zetaBark_maxPart
_zetaBark_minPart
_zetaBark
_snr
_Pframe
_QRatio
_expTheta_bark
Compute_gain
GainRule_VPv3.h
expTheta.size() == prior.size()
expTheta.size() == QRatio.size()
expTheta.size() == result.size()
AddMultiplyVectorScalarVector
result.size() == theAddand.size()
ComputeZetaBark
result.size() == prior_bark.size()
result.size() == zetaBark_maxPart.size()
result.size() == zetaBark_minPart.size()
ComputeP1
result.size() == zetaBark.size()
ComputeQ
result.size() == P1.size()
ComputeQRatio
result.size() == Q.size()
ComputeExpTheta
result.size() == theta.size()
_theta
_priorRatio
ComputeEMGain
MM.size() == priorRatio.size()
MM.size() == result.size()
ComputeTheta
priorRatio.size() == post.size()
priorRatio.size() == result.size()
ComputeHypergeometricGain
x.size() == result.size()
ComputePriorRatio
prior.size() == result.size()
MinVectorVector
ComputeLinear_curry
result.size() == frameSize
barkIn.size() == 24
MultiplyCVectorRVector
de-serialization data size mismatch
ERROR : opening 3D files...
AUMozartCompressorSingleBand_ViewFactory
UpwardCompressorReleaseThreshold
UpwardCompressorRatio
Hysteresis
CompressorAttackTime
CompressorReleaseTime
CompressorDetectorRMSTime
DownwardCompressorReleaseThreshold
MakeupGain
Bypass Gain
LimiterReleaseTime
ExpanderThreshold
ExpanderRatio
ResetGainMinMaxReading
AttackTime
LookaheadTime
CompressorOnOff
LimiterOnOff
Spare19
Idle Gain
LimiterDetectorRMSTime
DownwardCompressorRatio
DownwardCompressorKnee
DownwardCompressorAttackThreshold
Spare25
LimiterAutoThresholdSlope
LimiterAutoThresholdOffset
LkFsDetectorPrefilterOnOff
LkFsDetectorOutputGated
LkFsDetectorUseMovingAverageFilter
LkFsDetectorLowerThresholdTimeConstant
LkFsDetectorSmoothingTimeConstant
LkFsDetectorNoiseGateLevel
LkFsDetectorUpperAndLowerThresholdOffset
LimiterHysteresis
LkFsDetectorUpperThresholdTimeConstant
LimiterUseLogReleaseBehavior
Spare38
LkFsDetectorHighPassFrequency
AudioActivityDetectorHoldTime
UpwardCompressorAttackCurveThreshold
AudioActivityDetectorWindowWidth
printLogMessages
InternalDownsamplingFactor
AudioActivityDetectorMode
HighShelveRollOffFrequency
HighShelveRollOffGain
Spare49
Spare50
Spare51
Spare52
Movie: Stereo Airplane 12073.5
Movie: Stereo LateNight 12075.5
Movie: 5.1 LateNight 12096.5
Movie: 5.1 LateNight Extreme 12084.9
AddProcessingSection
SoundIsolationGraphAdapter.cpp
internalBlockSize != 1 && "block size must be set for freq format"
_input_ANALYSIS
_eclee_ZERO
constant
_1_deadEnd
dead
_processed_synthesis
inputSplitter
split
processingAU_
outputJoiner
join
delay
_guidance_ANALYSIS
CreateProcessingGraph
internalFormat.GetNumberChannelStreams() == 1 && "internal format must be one channel"
!internalFormat.IsInterleaved() && "internal format must be de-interleaved"
AUSoundIsolation_processing
AUSoundIsolation_blending
input_
delay_
inputInterleaver_
srlconverter
outputInterleaver
AUSoundIsolation_bypass
AUSoundIsolation
AddInputSection
numInternalChannels == 1 && "expecting internal format with 1 channel"
inputDeinterleaver
inputSRC
reblocker
inputReblocker
AddOutputSection
outputSRC
outputReblocker
mbdp_max_bands
mbdp_allow_lookahead
Gain before C/L
Speaker Trim
DL Gain Target
Crossover 1
Crossover 2
Crossover 3
Allow Speaker Protection
Enable Speaker Protection
Tone detected
Higher Order Crossover Enabled
Band LookAhead (ms)
Combiner LookAhead (ms)
Combiner RMS Limit
RMS Limit
Combiner Max Noise Rel Gain
Max Noise Rel Gain
Combiner Max Noise Abs Gain
Max Noise Abs Gain
Combiner Max Noise Thresh
Max Noise Thresh
Combiner Max Noise Thresh (Scaled)
Max Noise Thresh (Scaled)
Combiner Min Sound Thresh
Min Sound Thresh
Combiner Min Sound Thresh (Scaled)
Min Sound Thresh (Scaled)
Combiner Release Time (ms)
Release Time (ms)
Combiner Attack Time (ms)
Attack Time (ms)
Combiner Upwards Threshold
Upwards Threshold
Combiner Downwards Threshold
Downwards Threshold
Combiner Upwards Ratio
Upwards Ratio
Combiner Downwards Ratio
Downwards Ratio
Max Volume
Combiner Max Volume
Combiner Min Volume
Min Volume
Combiner Low  Volume Knee X
Low  Volume Knee X
Combiner High Volume Knee X
High Volume Knee X
Combiner Low  Volume Knee Y
Low  Volume Knee Y
Combiner High Volume Knee Y
High Volume Knee Y
Combiner Sound Gain
Sound Gain
Combiner Smooth Win (ms)
Smooth Win (ms)
Combiner BlockSize (ms)
BlockSize (ms)
Combiner Short Win Enabled
Short Win Enabled
Combiner Short Win PeakDetector
Short Win PeakDetector
Combiner Short Win (ms)
Short Win (ms)
Combiner Short Win Attack (ms)
Short Win Attack (ms)
Combiner Short Win Release (ms)
Short Win Release (ms)
Combiner Short Win Max dBRMS
Short Win Max dBRMS
Combiner Short Win Max dbFS
Short Win Max dBFs
Combiner Long Win Enabled
Long Win Enabled
Combiner Long Win Sec
Long Win Sec
Combiner Long Win Attack (ms)
Long Win Attack (ms)
Combiner Long Win Release (ms)
Long Win Release (ms)
Combiner Long Win Max dBRMS
Long Win Max dBRMS
Make Up Gain
Monitor Band
Bypass Band Comp
Combiner Compression Amount
Combiner Input Amplitude
Combiner Output Amplitude
Crossover Frequencies
Combiner Compressor
Band 4
Band 5
ResampleAndRebufferAudio
FeatureAudioAdaptor.cpp
ConvertToResampledBlockSize(inputNumSamples) == mOutputBlockSize
gainsToLinearPhaseFilter
MicSenseGainsToFIR.cpp
gains.size() == mCplxVectorSize
gainsToMinimumPhaseFilter
EndpointVADSegmentHeuristics.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v7/vpProcessUplink_v7.cpp
vpProcessUplink_v7.cpp
ProcessDSPChain_Uplink
ERROR: mPrimaryEpMicIndex is %d, but epmic only has %d channels
/usr/lib/libAudioIssueDetector.dylib
/usr/local/lib/libAudioIssueDetector.dylib
AudioDataAnalysisManagerCreate
AudioDataAnalysisManagerDispose
AudioDataAnalysisManagerReset
AudioDataAnalysisManagerUpdateReportingSessions
AudioDataAnalysisManagerCreateNodePCM
AudioDataAnalysisManagerCreateNodeSPL
AudioDataAnalysisManagerRemoveNode
AudioDataAnalysisManagerInitialize
AudioDataAnalysisManagerIsSessionInitialized
AudioDataAnalysisManagerProcessAudio
AudioDataAnalysisManagerProcessSPL
AudioDataAnalysisManagerCreateNodeEnvSPL
AudioDataAnalysisManagerProcessEnvSPL
AudioDataAnalysisManagerSetDeviceInfo
AudioDataAnalysisManagerStartServices
AudioDataAnalysisManagerConnectedWiredDeviceIsHeadphone
SVBasedProbability.cpp
Unknown selected model!
BeamformerFD.cpp
Failed to retrieve sample rate from input dictionary.
Failed to retrieve number of mics used from input dictionary.
Failed to retrieve number of beams from input dictionary.
Too many beams.
Failed to retrieve number of coefficients from input dictionary.
Beam
Failed to retrieve the beam description from input dictionary.
Failed to retrieve beam distance from input dictionary.
Failed to retrieve beam azimuth from input dictionary.
Failed to retrieve beam elevation from input dictionary.
EQSelection
aubmfd
vpRouteSetup_v2.cpp
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/Source/AudioDSP/VoiceProcessor/VoiceProcessor_v2/vpRouteSetup/vpRouteSetup_v2.cpp
DispatchVPRouteSetup
Unknown Route Type: %d
!"Unknown Route Type!"
gate curr dl gain (I)
gate dl gain target (I)
gate speech prob (I)
gate speex speech prob (I)
gate delta EIR disable
gate delta EIR (I)
gate LvActiveThresh
gate EchoLoudThresh
gate EchoSoftThresh
gate LvmeoOpengateThresh
gate LvmeoOpengateSoftechoThresh
gate LvmeoDbltkgateThresh(D)(I)
gate LvmeoBargeinThresh
gate RefLoudThresh
gate RefSoftThresh(D)(I)
gate DeltaIRThresh
gate MinDLGainTarget 
IR main lobe delay (I)
gate OverrideInitalDeltaIRThresh
gate Soften gate closed decision
gate consider high freq energy
Type1
Type2
Type3
Type4
Type5
Type6
Type7
Type8
Type9
Type10
PreProcessingGain
PostProcessingGain
ECRefMicDelayMilliSec
Echo Latency Correction 8000Hz
Echo Latency Correction 11025Hz
Echo Latency Correction 12000Hz
Echo Latency Correction 16000Hz
Echo Latency Correction 22050Hz
Echo Latency Correction 24000Hz
Echo Latency Correction 32000Hz
Echo Latency Correction 44100Hz
Echo Latency Correction 48000Hz
Echo Centroid Offset
HW Ref Block Size
HW Mic Block Size
Echo Processing Block Size
UpSampling Output Block Size
To enable or disable clip detection, disable==0
AudioDSPMatrixUtility
AUSilenceNonFiniteAnalyzer.cpp
silence
Consecutive Silent Samples (All channels)
Consecutive Silent Samples (Any channel)
Leading Silent Samples
MidStream Silent Samples
NaN Frames Present
Inf Frames Present
MidStream Silence Sample Time
EqualPowerPanningSpatializer
processAccumulating
find_subtriangle_containment
Resampler2 bad sample rate(s) : %11.2f %11.2f
Someone is deleting a Resampler while it is in use.
ConvertSIMD_SmallIntegerRatio
VBAP
changeSpeakerLocations
initialize
triangleLookup
calculateVBAPGains
delaunayTriangulation
failed to create vDSP biquads
createEncoder
createALLRAD
createALLRAD2
createDecoder
createTDesignDecoder
createRotationMatrix
RamstadSRC::processMono, wrong channel count
RamstadSRC::processStereo, wrong channel count
RamstadSRC::processStereoFrac preflight prediction failed.
RamstadSRC process called without preflight and arguments don't match preflight.
RamstadSRC process called for different number of output samples than preflight.
RamstadSRC process called for number of input samples than outside range of preflight.
AU (%p): 
Untitled
render-quality
element-name
AudioBuffers::Allocate: Too many buffers
AllocatedBuffer::Prepare(): too many buffers
AllocatedBuffer::Prepare(): insufficient capacity
AllocatedBuffer::PrepareNull(): too many buffers
CAException
CA_NoVector
CA_NoVector set; Vector unit optimized routines will be bypassed
AUOutputBL.cpp
.aupreset
.plist
@@ Strips Aug 11 2022 21:41:36
displayname
Error loading plist file 
*** done.
[%u]
'%s' | <unknown type id: %d)>
'%s' | String{%d} | "%s"
'%s' | Number(float){%d} | %f
'%s' | Number(SInt8){%d} | 0x%02x
'%s' | Number(SInt16){%d} | 0x%04x
'%s' | Number(SInt32){%d} | %-6d 0x%08x %c%c%c%c
'%s' | Dictionary{%d} | %d key/value pairs
aupreset
'%s' | Array{%d} | %d ordered objects
'%s' | %sData{%d} | %d bytes
AUPreset
AudioComponentDescription: %s - 
%s - 
, 0x%X, 0x%X
sysctl
hw.model
home
result = kAudioUnitErr_FailedInitialization
result = mUnit.Uninitialize()
result = mUnit.SetFormat (kAudioUnitScope_Input, 0, inInputFormat)
result = mUnit.SetFormat (kAudioUnitScope_Output, 0, inOutputFormat)
result = SetMaxFramesPerRender (inMaxFrames)
result = mUnit.Initialize()
result = SetInputCallback (mUnit, mUserCallback)
IsUIBuild
%c%d%c
/Library/Caches/com.apple.xbs/Sources/AudioDSP_Sim/CoreAudioUtility/Source/Utility/CALegacyLog.cpp
RegisterScope
ERROR: subscope bits are set in scope: 0x%lx
%.2d:%.2d:%.2d.%.3d 
[%p] 
[%s] 
>%s> 
<%s> 
%d: 
%s: 
error
warning
note
notice
info
details
minutiae
spew
  ERROR:    
WARNING:  
 notice:   
 info:     
 details:  
 minutiae: 
           
tfbsd
TFileBSD.cpp
TFileBSD
~TFileBSD
Initialize
Exists
Create
Create::fopen failed
Create::fclose failed
DeleteFile
Open
Open - file open invalid file permission
Open: Permission denied
Open::fopen failed
Close
Close::fclose failed
Seek
Seek - file not open
Seek::fseeko failed
SeekAsync
GetPosition
Skip
Skip - file not open
Skip::fseeko failed
GetLength
GetLength - file not open
GetLength::fstat failed
Read
Read - file not open
Read::fread
Write
Write - file not open
Write::fwrite
ReadAsync
Clear
CAAudioUnit.cpp
%s%sevaluate condition
%s%scondition evaluated to 'true'
%s%sevaluate decision
%s%sfound no decision to evaluate
%s%sevaluate next...
%s%scondition evaluated to 'false'
%s%sevaluate decision alternative
%s%sfound no decision alternative to evaluate
%s%sevaluate next alternative...
%s%sfailed to create '%s' condition parser
%s%sfailed to create '%s' constraint parser
%s%sfailed to create '%s' decision parser
%s%sfailed to inject data for input %lu
%s%sfailed to inject data for output %lu
%s%sinject audio from "%s" for node %u %s terminal %u
%s%sfailed to set %s audio issue detector client's initial reporter IDs
%s%sfailed to initialize %s audio issue detector client
%s%sfailed to set %s audio issue detector client's reporter IDs
assertion failure: "ExtAudioFileDispose(m_ref) == noErr" -> %lld
%s%sfailed to get property %u status %u
%s%sfailed to read with status %u
%s%screated
Begin
VoiceProcessor
%s%sdestroyed
Begin REF_ASBD:%s REF_FRAME_SIZE:%u REF_DEVICE_ID:%u REF_PORT_TYPE:%s MIC_ASBD:%s MIC_FRAME_SIZE:%u MIC_DEVICE_ID:%u MIC_PORT_TYPE:%s
InitializeHWInput
Begin OUTPUT_ASBD:%s
InitializeOutput
Begin HW_MIX_ASBD:%s HW_MIX_FRAME_SIZE:%u FEV_ASBD:%s
InitializeDownlinkProcessing
Begin SPEAKER_TELEMETRY_ASBD:%s SPEAKER_TELEMETRY_FRAME_SIZE:%u
InitializeSpeakerTelemetryInput
End PROPERTY_ID:%u PROPERTY_NAME:%s PROPERTY_VALUE:%s
GetProperty
Begin PROPERTY_ID:%u PROPERTY_NAME:%s PROPERTY_VALUE:%s
SetProperty
GetMaxOutputPacketInfo
%s%sinitialize uplink inputs
%s%s%s (%s)
assertion failure: "m_data != nullptr" -> %lld
assertion failure: "m_size != 0" -> %lld
%s%sinitialize uplink output
assertion failure: "m_vp->get_property(property_id, property_value).has_value()" -> %lld
assertion failure: "m_capacity != 0" -> %lld
%s%sinitialize downlink inputs and outputs
%s%sinitialize downlink speaker telemetry input
assertion failure: "m_audio_buffer_list != nullptr" -> %lld
%s%sgetting maximum number of output frames
%s%sfile handle is null
%s%sfailed to set audio issue detector client's "%s" node format
assertion failure: "!m_graph->sliceDurationCanVary()" -> %lld
assertion failure: "m_graph->sliceDurationCanVary()" -> %lld
%s%sload "%s" file
%s%sfailed to load "%s" file due to exception - %s
assertion failure: "m_type_id" -> %lld
assertion failure: "m_audio_statistics != nullptr" -> %lld
ABTestInitHWInput
ABTestInitOutput
ABTestSaveAUChain
ABTestInitDownlinkProcessing
ABTestInitSpeakerTelemetry
ABTestSaveVPState
assertion failure: "reporter_id_byte_size == reporter_id_count * sizeof(services::AB_Helper::Reporter_ID)" -> %lld
%s%sapplication bundle ID is %s
%s%svoice processing %s bypassed
%s%smedia handoff enabled: %s
%s%ssupported chat flavors are %s
assertion failure: "m_vp != nullptr" -> %lld
%s%spersonal audio notification(s) fired
%s%spersonal audio is %s
%s%spersonal audio preset is %s
assertion failure: "out_abl != nullptr" -> %lld
assertion failure: "out_abl->mBuffers[n].mData != nullptr" -> %lld
assertion failure: "in_abl != nullptr" -> %lld
assertion failure: "in_abl->mBuffers[n].mData != nullptr" -> %lld
assertion failure: "storage_tr.encompasses(client_tr)" -> %lld
%s%sbegin configuration changes
%s%send configuration changes
%s%screated with volume limit target %.2f dBA
%s%svolume limit is %s
%s%svolume limit threshold is %.2f dBA
%s%swill load "%s" file
%s%sopened "%s" file
%s%sparsed "%s" file
%s%sfailed to open "%s" file
%s%sfailed to parse "%s" file due to exception - %s
%s%sdid load "%s" file
%s%strying to %s with cached decision state
%s%strying to %s with new decision state
%s%strying to evaluate new configuration context - %s
%s%swill %s
%s%sdid %s
%s%sfailed to compile graph file - %s
%s%sfailed to compile graph text - %s
%s%sbegin state change
%s%send state change
%s%stear down property list writers
%s%ssaving "props.bin" file to "%s"
%s%sfailed to save "props.bin" file
%s%ssaving "times.bin" file to "%s"
%s%sfailed to save "times.bin" file
assertion failure: audio buffer storage size %u is less than requested frame count %u
assertion failure: failed to query format of %s terminal %u
assertion failure: "for_each_buffer(make_ref(audio_buffer), fill, 0.0f, audio_buffer.get_size().value_or(0u))" -> %lld
assertion failure: "m_backboard != nullptr" -> %lld
%s%sphone is %s to ear
%s%snew Darwin notification "%s"
assertion failure: "AudioConverterDispose(m_ref) == noErr" -> %lld
assertion failure: "output_audio_buffer_list != nullptr" -> %lld
assertion failure: "callback != nullptr" -> %lld
assertion failure: "m_audio_buffer != nullptr" -> %lld
%s%s%s speech activity event listener block
%s%sspeech activity event started
%s%sspeech activity event ended
%s%swill create port
%s%screating %s %s port with %s block size %u and stream format %s
%s%sdid create port
%s%sconfigure
assertion failure: "server.is_valid()" -> %lld
%s%sbuilding new "%s" graph
%s%sstart creating nodes
%s%sfailed to create new node %u
%s%sstop creating nodes
%s%sstart creating ports
%s%sfailed to create new port %u
%s%sstop creating ports
%s%sstart creating wires
%s%sfailed to create new wire %u
%s%sstop creating wires
assertion failure: "m_value != std::numeric_limits<std::uint32_t>::max()" -> %lld
%s%sadjust "%s" to "%s"
%s%sfailed to adjust "%s"
%s%swill create node
%s%sdid create node
%s%swill create wire
%s%ssetting audio converter SRC algorithm to %u
%s%ssetting audio converter SRC quality to %u
%s%sdid create wire
%s%sunexpected error at line %u column %u in "%s" - %s
%s%sfailed to capture data for input %lu
%s%sfailed to capture data for output %lu
%s%scapture audio to "%s" for node %u %s terminal %u
%s%sfailed to register device orientation listener
%s%sfailed to register UI orientation listener
%s%sfailed to unregister device orientation listener
%s%sfailed to unregister UI orientation listener
create VoiceProcessorV%u
VoiceProcessorV%u is not supported
failed to create VoiceProcessorV%u due to uncaught exception
%s%scompiling file "%s"
%s%scompiling text
%s%scompiling line %2lu - %.*s
%s%sfailed to build DSP graph - graph file path and graph text are missing
%s%sfailed to build DSP graph - compilation error
%s%sfailed to build DSP graph - all input bus sample rates must be equal
%s%sfailed to build DSP graph - all output bus sample rates must be equal
%s%sfailed to build DSP graph - I/O bus sample rates of fixed block size graphs must be equal
%s%ssetting fixed slice duration using block size %u and sample rate %u
%s%ssetting variable slice duration using block size %u and ouptut sample rate %u
%s%ssetting variable slice duration using block size %u and input sample rate %u
%s%sfailed to build DSP graph - block size information is missing
%s%ssetting "%s" resources path
%s%ssetting sample rate conversion algorithm to %u
%s%senabling minium phase sample rate conversion
%s%ssetting sample rate conversion quality to %u
%s%sconnecting to AUPB
%s%sconnecting to RPB
%s%sfailed to %s - %s
assertion failure: "user_info_key.is_valid()" -> %lld
assertion failure: "user_info_value.is_valid()" -> %lld
%s%sfailed to create audio capture directory /%s/
%s%ssetting "%s"
%s%ssetting property %s to %s
%s%ssetting property %s to %u
%s%ssetting property %s to %llu
%s%ssetting property %s to %f
assertion failure: "for_each_buffer(make_ref(m_audio_buffer), fill, 0.0f, frame_count)" -> %lld
assertion failure: "map_state_id == state_id" -> %lld
%s%ssetting parameter %s to %f
%s%swill create new "mic-ref-sync" node
%s%screating "mic-ref-sync" node with time delta of %d samples
%s%sdid create new "mic-ref-sync" node
%s%sbegin uplink initialization
%s%sfailed to begin uplink initialization
%s%send uplink initialization
%s%sfailed to end uplink initialization
%s%sbegin downlink initialization
%s%sfailed to begin downlink initialization
%s%send downlink initialization
%s%sfailed to end downlink initialization
%s%sfailed to %s due to '%s' error at line %u column %u in "%s"
%s%sfailed to %s due to '%s' error at line %u column %u in "%s" - %s
%s%sfailed to write uplink %s input - %s
%s%sfailed to write downlink %s input - %s
%s%sfailed to read downlink hardware DSP output - %s
%s%sinternal re-configuration is required
%s%sinternal re-configuration is not required
%s%sbegin configuration change
%s%sfailed to build uplink DSP
%s%sfailed to build downlink DSP
%s%send configuration change
%s%screated audio data analysis client with session ID %llu
%s%sfailed to create audio data analysis client
%s%sfailed to initialize audio data analysis client
%s%sfailed to build uplink I/O graph - %s
%s%scannot run uplink DSP with uninitialized VoiceProcessor
%s%sfailed to process uplink due to exception - %s
%s%sfailed to reset uplink due to exception - %s
%s%sspeaker telemetry input port is enabled!
%s%sfailed to build downlink I/O graph with '%s' error code at line %u column %u in "%s"
%s%sfailed to build downlink I/O graph with '%s' error code at line %u column %u in "%s" - %s
%s%scannot run downlink DSP with uninitialized VoiceProcessor
%s%sfailed to process downlink due to exception - %s
%s%sfailed to reset downlink due to exception - %s
%s%sfailed to %s with exception - %s
assertion failure: "mControlBlock == nullptr" -> %lld
%s%sfailed to handle configuration changes
%s%sfailed to get global configuration
%s%sfailed to get uplink configuration
%s%sfailed to get configuration for uplink %s DSP node
%s%sfailed to get configuration options for uplink %s DSP node
%s%sfailed to get downlink configuration
%s%sfailed to get configuration for downlink %s DSP node
%s%sfailed to get configuration options for downlink %s DSP node
%s%sget property %u '%.*s'
%s%sfailed to get property %u '%.*s' - %s
%s%sget property %u '%.*s' info
%s%sfailed to get property %u '%.*s' info - %s
%s%sset property %u '%.*s'
%s%svalue of property %u '%.*s' is %s
%s%sfailed to set property %u '%.*s' - %s
assertion failure: "tvalue != nullptr" -> %lld
assertion failure: "in_size <= m_capacity" -> %lld
%s%svalue of property %u '%.*s' for device ID %u is %s
%s%sfailed to get value of property %u '%.*s' for device ID %u with status %u
%s%svalue of property %u '%.*s' for device ID %u, port type %s is %s
%s%sfailed to get value of property %u '%.*s' for device ID %u, port type %s with status %u
assertion failure: "m_service_provider != nullptr" -> %lld
assertion failure: failed to create %s port factory
assertion failure: "!m_data.empty()" -> %lld
%s%smicrophone and reference sample rates must be equal
%s%smicrophone and reference block sizes must be equal
%s%ssetting property %s
%s%sdetected %s configuration state changes
%s%s(%cL) %s
%s%sdetected no %s configuration state changes
%s%sfailed to update audio data analysis client reporter IDs
%s%sRPB server started running
%s%sRPB server stopped running
%s%sregister "%s"
%s%sfailed to send audio statistics message due to exception - %s
%s%sfailed to send audio statistics message to reporter %lld due to exception - %s
%s%sfailed to get audio service type for reporter %lld due to exception - %s
%s%sfailed to copy configuration for reporter %lld due to exception - %s
%25s:%-5d CircularModels: Target elevation not set to (%f), it remains at the current value (%f). Elevation should be in range [-90, 90].
%25s:%-5d CircularModels: Target distance not set to (%f), it remains at the current value (%f). Distance must be nonnegative.
%25s:%-5d CircularModels: Kappa not set. Input length (%lu) and internal length (%u) do not match.
%25s:%-5d CircularModels: TargetSV not set. Input length (%lu) and internal length (%lu) do not match.
%25s:%-5d 
%25s:%-5d invalid HID event dropped
%25s:%-5d HID event copy dropped. event at %f
%25s:%-5d New Button HID event: type %li ts %f block size %lli, absolute time samples %lli
%25s:%-5d ISSUE: sample time jumped by %lli samples
 key 'DSPchain' not found
 could not load DSPchain
 could not get processorSubType string
 could not get processorSubType
 could not create processor
%25s:%-5d LPCore::UpdateLPC: Arguments cannot be null
%25s:%-5d Update index size is too small.
%25s:%-5d _vp: gate: err %d initializing res fft to %d
[%p] destroyed
[%p] initialize
[%p] failed to initialize - cannot operate in variable block size mode
[%p] failed to initialize - sample rates of FrontMic input bus and main output bus must be equal
[%p] failed to initialize - sample rates of BackMic input bus and main output bus must be equal
[%p] failed to initialize - parameter mix frequency must be positive
[%p] failed to initialize - parameter mix frequency must not exceed Nyquist frequency
[%p] cannot process %u frames (maximum frame size is %u)
[%p] cannot process %u input busses (expected input bus count is %u)
[%p] cannot process %u output busses (expected output bus count is %u)
%25s:%-5d notify_cancel() failed
%25s:%-5d notify_register_dispatch failed
%25s:%-5d notify_get_state() failed
%25s:%-5d Unknown exceptiton caught
%25s:%-5d Standard library exception caught: %s
%s: Snap Coordinates initialized with ACL tag %u
%s: Could not locate an IR file at %s
%s: Could not initialize bypassable IR processor
%s: Uninitialized
throwing %d
%25s:%-5d  >vp> ERROR: mPrimaryEpMicIndex is %d, but epmic only has %d channels
%25s:%-5d ASSERTION FAILURE [(mBufferCapacity == 0 || other.mBuffers[i].mDataByteSize <= mBufferCapacity) != 0 is false]: 
dlerror : libAudioIssueDetector ADAM: %s
%25s:%-5d  >vp> Chat flavor not supported in this vp version
%25s:%-5d MultiRadixRealFFT_Create() returned an error. Invalid block size?
%25s:%-5d VoiceProcessorV2::VPAUProcessingBlock::InsertAUIntoProcessingBlock index proposed=%d, current=%d !?
%25s:%-5d Invalid orientation %u
%25s:%-5d Invalid camera direction %u
%25s:%-5d Assertion failed: gap length too small compared to window length
%25s:%-5d Assertion failed: error in filter coeff calc
%25s:%-5d Assertion failed: size mismatch
%25s:%-5d Assertion failed: invalid input length
%25s:%-5d Assertion failed: invalid input size
%25s:%-5d Assertion failed: non-finite detected
%25s:%-5d Assertion failed: bad input size
%25s:%-5d Assertion failed: x is empty
%25s:%-5d Assertion failed: input size mismatch
%25s:%-5d invalid algorithm value '%@'
%25s:%-5d At least one invalid value: PhiOption %i,  SMeanOption %i SCovOption %i
%25s:%-5d At least one invalid value
%25s:%-5d Assertion failed: invalid mask size
 subscript out of bounds
 invalid length
 detection region length is not a power of two!
 covariance matrix must be square
 wrong covariance size
 wrong Phi size
 covariance matrix must be symmetric
%25s:%-5d  >vp> bad mic-speaker delay: expected sample time diff: %.1lf, actual sample time diff: %.1lf
%25s:%-5d  >vp> sprk sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: PROCESSDLAUDIO TRANSIENT INCORRECT BLOCK CONFIG
%25s:%-5d  >vp> warning: processdownlinkaudio: <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 dl mix buff size = %u
dlmix asbd = %s
process dl callcount = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESSDLAUDIO BAD BLOCK CONFIG for over %.6f seconds *****
%25s:%-5d  >vp> processdownlinkaudio: <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
dl mix blk size = %u
dl mix asbd = %s
 process dl callcount = %u
%25s:%-5d  >vp> processdownlinkaudio: SERIOUS ERROR: ioOutputData->mBuffers[0].mDataByteSize = %u, expected = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: BAD BLOCK CONFIG CORRECTED after %.6f seconds *****
%25s:%-5d  >vp> processdownlinkaudio: <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
 STACK_ABL: invalid number of buffers
%25s:%-5d The CFDictionaryRef passed to SetProperty is null.
%25s:%-5d BeamSystemNoiseProfile found in plist.
%25s:%-5d Failed to set BeamSystemNoiseProfile data to SpectralProfile object. Invalid dictionary entry?
%25s:%-5d BeamSystemNoiseProfile dictionary not present in plist.
%25s:%-5d BeamFarfieldEQ found in plist.
%25s:%-5d Failed to set BeamFarfieldEQ data to SpectralProfile object. Invalid dictionary entry?
%25s:%-5d BeamFarfieldEQ dictionary not present in plist.
[%s|%s] Number of channels in AudioChannelLayout = %u does not match number of channels in stream format = %u. Reverting to default layout.
[%s|%s] Setting output stream format: %s
[%s|%s] Number of channels in stream format changed
[%s|%s] Setting default audio channel layout tag = %s for %u channels
[%s|%s] Unsupported number of channels %u in audio channel layout %s: must be two or more
[%s|%s] Number of channels in requested audio channel layout is different than in the stream format. Default audio channel layout %s from preset is ignored. Current audio channel layout tag = %s
[%s|%s] Number of channels %u in requested audio channel layout %s is different than in the stream format. Current audio channel layout tag = %s
[%s|%s] Current output audio channel layout tag = %s
%s: Unsupported input channel count %u
%s: Unsupported output channel count %u
ScottyKernel:%s:%d: This method should not be called, AUScotty should be calling ProcessMultiBuffers!
%25s:%-5d ERROR: Failed accessing strings in GetParameterValueStrings.
[%p] AUReferenceSignal's property list has no "Configurations" key
[%p] AUReferenceSignal's property list has invalid "Configurations" value
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Name" key
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid "Name" value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Gains" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Input" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Input"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Output" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Output"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u] has no "Gain" key
[%p] AUReferenceSignal's property list "Configurations"[%u]["Gains"][%u]["Gain"] has invlid value
[%p] AUReferenceSignal's property list "Configurations"[%u] has no "Orientations" key
[%p] AUReferenceSignal's property list "Configurations"[%u] has invalid "Gains" value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Orientations"][%u] has invalid value
[%p] AUReferenceSignal's property list "Configurations"[%u]["Orientations"][%u] has unsupported value
[%p] AUReferenceSignal's property list maps orientation "%s" to multiple configurations: %s
%25s:%-5d NeuralNetRES: Loading SampleRate from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve sample rate."
%25s:%-5d Successfully retrieved sample rate (%g Hz).
%25s:%-5d NeuralNetRES: Loading BlockSize from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve BlockSize."
%25s:%-5d Successfully retrieved BlockSize (%u).
%25s:%-5d NeuralNetRES: Loading NumContextFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve NumContextFrames."
%25s:%-5d Successfully retrieved NumContextFrames (%u).
%25s:%-5d NeuralNetRES: Loading forgetting factor Lambda_TC from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve forgetting factor Lambda_TC."
%25s:%-5d Successfully retrieved forgetting factor Lambda_TC (%g sec.).
%25s:%-5d Internally set the forgetting factor as (%g).
%25s:%-5d NeuralNetRES: Loading ECoutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve ECoutScale."
%25s:%-5d Successfully retrieved ECoutScale (%g).
%25s:%-5d NeuralNetRES: Loading ECleeScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve ECleeScale."
%25s:%-5d Successfully retrieved ECleeScale (%g).
%25s:%-5d NeuralNetRES: Loading FFT2Mel matrix from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "FFT2Mel matrix not loaded."
%25s:%-5d EXCEPTION (%d) [mOutputSize != mNumFFTBins is false]: "NeuralNet output size (%u) is not matching the number of FFT bins (%u)."
%s: Unsupported Sample Rate %f
%25s:%-5d ERROR: Failed to uninitialized internal AU.
%25s:%-5d ERROR: Failed to dispose of internal AU.
%25s:%-5d  <vp> loading DNN VAD graph "%s"
%25s:%-5d  >vp> failed to load DNN VAD graph text
%25s:%-5d  >vp> failed to load DNN VAD graph text with exception: %s
%25s:%-5d  >vp> failed to set DNN VAD graph name
%25s:%-5d  >vp> failed to set DNN VAD graph name with exception: %s
%25s:%-5d  <vp> loading DNN VAD AU strip "%s"
%25s:%-5d  >vp> failed to load DNN VAD AU strip
%25s:%-5d  >vp> failed to load DNN VAD AU strip with exception: %s
%25s:%-5d  <vp> loading DNN VAD property strip "%s"
%25s:%-5d  >vp> file "%s" does not exist
%25s:%-5d  >vp> failed to load DNN VAD property strip
%25s:%-5d  >vp> failed to load DNN VAD property with exception: %s
%25s:%-5d  >vp> Not able to enable DNNVAD
%25s:%-5d  >vp> skip reference mixer setup because reference channel count is 0
%25s:%-5d  >vp> skip reference mixer setup because reference block size is 0
%25s:%-5d  >vp> unknown exception while setting ref signal mixer...
%25s:%-5d  >vp> standard exception while setting ref signal mixer [%s]
%25s:%-5d  <vp> loading echo processing graph "%s"
%25s:%-5d  >vp> failed to load echo processing graph text with unknown exception
%25s:%-5d  >vp> failed to load echo processing graph text with exception : %s
%25s:%-5d  <vp> loading echo processing AU strip "%s"
%25s:%-5d  >vp> failed to load echo processing AU strip with unknown exception
%25s:%-5d  >vp> failed to load echo processing AU strip with exception : %s
%25s:%-5d  <vp> loading echo processing property strip "%s"
%25s:%-5d  >vp> failed to load echo processing property strip with unknown exception
%25s:%-5d  >vp> failed to load echo processing property strip with exception : %s
%25s:%-5d PilotAmplLo limited to %f
%25s:%-5d PilotAmplHi limited to %f
%25s:%-5d Parameter PilotLowerThres greater than PilotUpperThres. Set PilotLowerThres = %f
%25s:%-5d Acting on invalid ThermalMeasurementType
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup. Invalid block size?
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup_Long. Invalid block size?
%25s:%-5d MultiRadixFFT_Create() returned an error attempting to create mCplxFFTSetup_Cepstrum. Invalid block size?
%25s:%-5d about to throw %s: %s
[%p] will construct
[%p] disposed mTimeFreqConverterInputDelayed
[%p] disposed mTimeFreqConvertersOutput[%d]
[%p] destructed
[%p] block size %u
[%p] check input format before initialization
[%p] input format: %s
[%p] input format is not valid
[%p] input format has %d channels, which is more than the max number of (%d)
[%p] check output format before initialization
[%p] output format for bus %u: %s
[%p] output format is not valid
[%p] output format has %d channels, which is more than the max number of (%d)
[%p] I/O formats are not compatible.
[%p] output GainVector format has %d channels, which is more than the max number of (%d)
[%p] will try to initialize
[%p] Creating NeuralNet model (%d)
[%p] Could not load metadata using the plist, unknown exception.
[%p] Could not load metadata using the plist, exception (%d)
[%p] Could not create NeuralNet model using the plist, exception (%d)
[%p] NeuralNet0 blockSize (%u) and NeuralNet(%u) blockSize (%u) do not match
[%p] NeuralNet0 lookaheadSize (%u) and NeuralNet%u lookaheadSize (%u) do not match
[%p] Defaulting to NeuralNet model (%u) for processing.
[%p] Successfully loaded NeuralNet plist.
[%p] mNeuralNet input size: %lu
[%p] mNeuralNet output size: %lu
[%p] AU's block size (%d) not matching the NeuralNet's block size (%u). Will use a reblocker
[%p] Using legacy block processor with delay = %d samples.
[%p] Using low delay block processor with delay = %d samples.
[%p] No NeuralNets were loaded from plist.
[%p] initialize mask related variables
[%p] Latency for model: %s is %f
[%p] did initialize
[%p] Has ModelNetPathBaseOverride to apply
[%p] NeuralNet initialization using plist in AUNeuralNet failed with an unknown exception.
[%p] NeuralNet initialization using plist in AUNeuralNet failed with %s error %d: %s
[%p] NeuralNet initialization using plist in AUNeuralNet failed with CAException %d: %s.
[%p] Loading embedding mode from plist.
[%p] Failed to retrieve embedding mode
[%p] Successfully retrieved embedding mode (%g).
[%p] Loading default embedding mode from plist.
[%p] Failed to retrieve default embedding mode
[%p] Successfully default retrieved embedding mode (%g).
[%p] Loading embedding size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve embedding size."
[%p] Successfully retrieved embedding size (%g).
[%p] Loading sample rate from plist.
[%p] Successfully retrieved sample rate (%g Hz).
[%p] Loading number of input channels from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve number of input channels."
[%p] Successfully retrieved number of input channels (%u).
[%p] Loading number of output channels from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve number of output channels."
[%p] Successfully retrieved number of output channels (%u).
[%p] Loading lookahead size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve lookahead size."
[%p] Successfully retrieved lookahead size (%u).
[%p] Loading block size from plist.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve block size."
[%p] Successfully retrieved block size (%u).
[%p] Loading task ID.
[%p] TaskID read from the plist.
[%p] TaskID not available in the plist.
[%p] TaskID set to (%s).
[%p] NeuralNet input size (%zu) not matching configured number of input channels (%u) times block size (%u).
[%p] NeuralNet output size (%zu) not matching configured number of output channels (%u) times block size (%u).
[%p] Current input sample rate (%g Hz) not matching NeuralNet sample rate (%g).
[%p] NeuralNet's number of input channels (%u) not matching AU's number of input channels (%u).
[%p] NeuralNet's number of output channels (%u) not matching AU's number of output channels (%u).
[%p] NeuralNet is initialized with %u input channels, %u output channels and block size %u.
[%p] cleanup
[%p] Tried to select a mask indexed at (%u), but only (%u) masks are available
[%p] Tried to select a VP mask indexed at (%u), but only (%u) masks are available
[%p] Tried to select a postmask indexed at (%u), but only (%u) masks are available
[%p] Input size of EmbeddingVector  (%lu) is not equal to the the expected size  (%lu).
[%p] Input size of EmbeddingVector (%lu) is not equal to the the expected size  (%lu) or (%lu) is not equal to (%lu).
[%p] ModelNetPathBase is overriden to %s
[%p] ModelNetPathBaseOverride is set to null and thus removed
[%p] The NeuralNetPlist passed to SetProperty is not CFDictionaryRef type or it's null.
[%p] Searching plist for model named (%s)...
[%p] Found model named (%s)...
[%p] Did not find model named (%s)...
[%p] Assuming 1 un-named model exists in the plist
[%p] Finished finding models. Found (%u) models
[%p] Cannot change the BlockProcessor once AU is initialized
[%p] Bad Property Size or value for BlockProcessor selection
[%p] Parameter ID: %d is a read-only and should not be overwritten
[%p] Tried to select a model indexed at (%u), but only (%u) models are available. A new model will not be selected and the previous selection will be used.
[%p] Tried to select a model indexed at (%u), but only (%u) models are available. A new model will not be selected and AUNeuralNet will run as if bypassed (until a new model is selected).
[%p] input not connected
[%p] input format not supported
[%p] processed output format not supported
[%p] gain vector format not supported
[%p] NeuralNet expects input block size %u, and we received %d.
[%p] Setting Embedding failed (%d)
%25s:%-5d Failed to retrieve %s.
%25s:%-5d Successfully retrieved %s (%g).
%s: Filters Updated to IR Data object
%s: ERROR: Filters NOT Updated to IR Data object
%s: Filters can not be generated if the number of drivers is < 2
%s: Filter matrix size inconsistent with user-defined filter length; IR file may not render
%s: WARNING: AUXTC file not found at %s; will proceed without it
%s: AUXTC file found: %s
%s: WARNING: AUXTC file found at %s but is invalid; will proceed without it
%s: Crossover can not be applied if the number of drivers is < 2
%25s:%-5d Invalid featureWindowLengthSeconds!
%25s:%-5d Invalid heuristic name %s
%25s:%-5d Assertion failed: too short
%25s:%-5d Assertion failed: value error
%25s:%-5d  <vp> audio recordings available in %s
%25s:%-5d  >vp> file saving turned OFF! recording directory %s cannot be created
%25s:%-5d  <vp> magic file exists, enabling file saving level %d
%25s:%-5d  <vp> Simulator override file saving level: %d
%25s:%-5d  <vp> master default exists, enabling file saving level %d
%25s:%-5d  <vp> writing properties plist file: %s ...
%25s:%-5d  <vp> writing time stamps plist file: %s ...
%25s:%-5d  <vp> writing error log file: %s  ... 
%25s:%-5d  <vp> writing gating control data file: %s ... 
%25s:%-5d  <vp> writing dlp control data file: %s ... 
%25s:%-5d  >vp> couldn't open file to write: %s  ... 
%25s:%-5d  <vp> File-Saving switch turned on
%25s:%-5d  <vp> File-Saving switch turned off
%25s:%-5d  <vp> vp debug features (HUP) are %s
%25s:%-5d  <vp> master default does not exist, disabling file saving level
%25s:%-5d  >vp> "%s" audio capture not created because file format is empty
%25s:%-5d  <vp> created "%s" audio capture
%25s:%-5d  >vp> failed to create "%s" audio capture
%s: Invalid format: %s
%s: Invalid wave file path: %s
%25s:%-5d  <vp> ____________loguplinkchain:begin___________
%25s:%-5d  <vp> ____________loguplinkchain:end___________
%25s:%-5d  <vp> ____________logdownlinkchain:begin___________
%25s:%-5d  <vp>     %s: %s %s (%p)
%25s:%-5d  <vp>          param %s: %f
%25s:%-5d  <vp>     %s: ON (%p)
%25s:%-5d  <vp> ____________logdownlinkchain:end___________
%25s:%-5d  >vp> %s
%25s:%-5d  <vp> ____________logparams:begin___________
%25s:%-5d  <vp>     PRODUCT: %{private}s
%25s:%-5d  <vp>     Num Ref Ports = %lu, Num Mic Ports = %lu 
%25s:%-5d  <vp>       : Ref Port #%lu=%s
%25s:%-5d  <vp>       : Mic Port #%lu=%s
%25s:%-5d  <vp>     Acoustic ID: %d
%25s:%-5d  <vp>     This product does not have a valid Acoustic ID
%25s:%-5d  <vp>     HW Format REF: %s
%25s:%-5d  <vp>     HW Format MIC: %s
%25s:%-5d  <vp>     HW Block Size REF: %d
%25s:%-5d  <vp>     HW Block Size MIC: %d
%25s:%-5d  <vp>     REF Signal: %s, Hw tap stream: %s
%25s:%-5d  <vp>     HW Format EXT REF: %s
%25s:%-5d  <vp>     HW Trim Gain MIC(ch-%d): %f dB
%25s:%-5d  <vp>     HW Trim Gain REF(ch-%d): %f dB
%25s:%-5d  <vp>     VP Output Format: %s
%25s:%-5d  <vp>     REF Channel BitMap: %x, OUT Channel BitMap: %x
%25s:%-5d  <vp>     HW MIC Channels: %s, BitMap: %x
%25s:%-5d  <vp>     EP MIC Channels: %s, BitMap: %x
%25s:%-5d  <vp>     Primary epmic index: %d
%25s:%-5d  <vp>     SRC Quality: 0x%x (0:min, 0x20:low, 0x40:med, 0x60:hig, 0x7f:max)
%25s:%-5d  <vp>     Hw real-world correction: %f samples
%25s:%-5d  <vp>     Ref-Mic Delay: %f msec
%25s:%-5d  <vp>     Pre-echo-processing Digital Input Gain: %f dB
%25s:%-5d  <vp>     Post-echo-processing Digital Input Gain: %f dB
%25s:%-5d  <vp>     Downlink Mix Gain: %f dB
%25s:%-5d  <vp>     Downlink Final Gain Chn 0: %f dB
%25s:%-5d  <vp>     Downlink Final Gain Chn 1: %f dB
%25s:%-5d  <vp>     DL Format FEV: %s
%25s:%-5d  <vp>     DL Format FEV Process: %s
%25s:%-5d  <vp>     DL Format MIX: %s
%25s:%-5d  <vp>     DL Block Size MIX: %d
%25s:%-5d  <vp> ____________logparams:end___________
[%s|%s] cannot change bus count for scope = %u
[%s|%s] Setting input bus count = %u
[%s|%s] Too large max frames per slice: %u
[%s|%s] Initializing with max frames per slice = %u
[%s|%s] Creating %s orientation observer
[%s|%s] AUSMHeadTracker: Setting head tracking = %u based on defaults.
[%s|%s] AUSM_HRIR: Process %s does not support personal HRTF.
[%s|%s] AUSM_HRIR: Setting personal HRTF type = %u based on defaults.
[%s|%s] Personalized HRTF is not supported.
[%s|%s] Using defaults write %@
[%s|%s] Creating a timer to check defaults writes while running
[%s|%s] Applied defaults write %@ %u
[%s|%s] Initializing auto mode reverb
[%s|%s] Error setting early reflection biquads
[%s|%s] Error setting late reverb biquads
[%s|%s] error %d setting stream formats on %s; disabling processing
[%s|%s] error %d setting preset on %s
[%s|%s] error %d initalizing %s; processing disabled
[%s|%s] Cleaning up
[%s|%s] Resetting scope = %u, element = %u
[%s|%s] Invalid input scope element %u
[%s|%s] auto mode reverb not active
[%s|%s] auto mode reverb not initialized
[%s|%s] dispatching update for InputElement #%d:
[%s|%s] dispatching update for all InputElements
[%s|%s] found early length: %f seconds
[%s|%s] could not get the early length, defaulting to %f seconds
[%s|%s] Could not reconfigure auto mode late reverb for input #%u: error %d
[%s|%s] dispatched update for dynamic XTC filter generation:
[%s|%s] updating dynamic XTC filters:
[%s|%s] Replacing custom XTC IR using CFURL %@
[%s|%s] Setting CounteractRotationShader = %s
[%s|%s] Unknown output type %d
[%s|%s] Switching from ProcessMultiple to Render without reinitializing
[%s|%s] PMBLSP return an error %d
[%s|%s] Trying to render while initialization or clean-up is in process
[%s|%s] Trying to render while uninitialized
[%s|%s] Switching from Render to ProcessMultiple without reinitializing
[%s|%s] Cannot render with ProcessMultiple since the samplerate of the input element %u is %f whereas the output samplerate is %f
[%s|%s] ConvertOutputData ERROR: result = %d
[%s|%s] Error %d while fetching the parameter info canRamp: param = %u, scope = %u, element = %u
[%s|%s] Error %d while processing multiple buffer lists
[%s|%s] Error: null input or output buffer lists
[%s|%s] Can't fetch the current parameter value
[%s|%s] Parameter event type unknown (%u)
[%s|%s] First time cue should have been specified at 0!
[%s|%s] Error %d while processing a 0-length time slice
[%s|%s] SetParameter failed, err = %d
[%s|%s] Error %d while processing a time slice
[%s|%s] The number of output buffer lists is not 1 (%u)
[%s|%s] AUSMTrackedHeadPose: User has disabled head-tracking.
[%s|%s] AUSMTrackedHeadPose: Y: %.2f, P: %.2f, R: %.2f, Quat: (%.4f, %.4f, %.4f, %.4f)
[%s|%s] AUSMTrackedHeadPose: Error %d in getting head-pose.
[%s|%s] invalid input scope element = %u (property = %u)
[%s|%s] invalid output scope element = %u (property = %u)
[%s|%s] invalid scope = %u for global scope property = %u
[%s|%s] invalid scope = %u for property = %u
[%s|%s] invalid element = %u for input scope property = %u
[%s|%s] invalid scope = %u for input scope property = %u
[%s|%s] Resetting auto mode reverb
[%s|%s] Resetting FDN
[%s|%s] Resetting HRTFHQ reverb
[%s|%s] Updating HRTFHQ reverb
[%s|%s] can't find dynamics processor %s (%u).
[%s|%s] inData == nullptr
[%s|%s] (scope=%u, element=%u): invalid element (property = %u)
[%s|%s] Setting reverb send decorr filter lengths on Input Element %u to %u:
[%s|%s] Setting reverb send decorr filter lengths on Channel %u to %u:
[%s|%s] Setting reverb send decorr filter coeffs on Input Element %u to %u:
[%s|%s] Setting reverb send decorr filter coeffs on Channel %u to %u:
[%s|%s] Setting %u exclusion zones on Input Element %u
[%s|%s] SetExclusionZones from dictionary failed with error %d
[%s|%s] probably corrupted binary blob for exclusion zones
[%s|%s] failed to fully parse zone data
[%s|%s] SetExclusionZones from array failed with error %d
[%s|%s] invalid data size = %u for property = %u, expected %u
[%s|%s] error %d setting kAudioUnitProperty_MaximumFramesPerSlice on %s
[%s|%s] error %d setting input scope property %u on %s
[%s|%s] error %d setting output scope property %u on %s
[%s|%s] (scope=%u, element=%u): invalid property ID %u
[%s|%s] No factory preset was set.
[%s|%s] error %d setting preset while toggling personalized HRTF choice.
[%s|%s] Clearing personal HRIR dictionary.
[%s|%s] dispatched update for dynamic XTC filter generation #:
[%s|%s] updating dynamic XTC filters
[%s|%s] update dropped
[%s|%s] Early reflections IR is HOA: updating late reverb to use same IR file
[%s|%s] Clearing late reverb HOA IR
[%s|%s] Late IR is HOA: updating early reflections to use same IR file
[%s|%s] Clearing early reflections HOA IR
[%s|%s] invalid element %d (input scope)
[%s|%s] the PlaybackRate parameter value can only be 1.0 with ProcessMultiple as the render method
[%s|%s] invalid parameter id %d (input scope)
[%s|%s] invalid parameter id %d (global scope)
[%s|%s] Warning: scheduling parameters while the parameter smoothing is not set to scheduled parameters.
[%s|%s] Error scheduling unsupported parameter (immediate) #%u: param = %u, scope = %u, element = %u
[%s|%s] Error scheduling unsupported parameter (ramped) #%u: param = %u, scope = %u, element = %u
[%s|%s] Error scheduling unsupported parameter (ramped custom) #%u: param = %u, scope = %u, element = %u
[%s|%s] Save state
[%s|%s] Restore state
[%s|%s] Setting input properties
[%s|%s] Setting channel overrides
[%s|%s] Invalid channel label in the preset, some channel parameters probably being ignored.
[%s|%s] Set SoundStage Parameters
[%s|%s] Found SoundStages in Dictionary, but failed to set parameters on SoundStageManager
[%s|%s] setting factory preset #%u
[%s|%s] invalid output element %u
[%s|%s] Setting output audio channel layout tag = %s
[%s|%s] Can't set output audio channel layout: null layout pointer
[%s|%s] invalid input element %u
[%s|%s] Setting input %u audio channel layout tag = %s
[%s|%s] Can't set input element %u audio channel layout: null layout pointer
[%s|%s] invalid scope %u
Unregistering UI orientation observer %s
Unregistering device orientation observer %s
Orientation handler callback %s
Setting orientation %u on AUSpatialMixerV2_%lu
Registering UI orientation observer %s
Registering device orientation observer %s
%s: error %d setting input stream format %s for %s
%s: error %d setting output stream format %s for %s
%s: error %d uninitializing %s
%s: error %d setting input audio channel layout for %s
%s: error %d setting the maximum frames per slice = %u for %s
%s: error initializing %s
%s: error %d getting input stream format of %s
%s: initialized %s
%s: error %d resetting %s
%s: Can't insert a new track: not enough capacity
%s: Can't insert a new control point: not enough capacity
%s: Can't find a parameter value for parameter = %u, element = %u
%s: Unexpected situation
%s: Can't compute an intermediate parameter value for parameter = %u, element = %u
%s: Unexpected failure for parameter = %u, element = %u
%s: error %d uninitalizing %s
%s: error %d setting preset on %s
%s: error %d initalizing %s; processing disabled
%s: null dictionary ref for %s
%s %s: could not find aufx %s appl
%s %s: could not instantiate aufx %s appl
%s %s: aufx %s appl created; using BaseProcess
%s %s: aufx %s appl created; using ProcessMultiple
%s %s: aufx %s appl only supports render method; processing will be bypassed
%s: disposing of %s
%25s:%-5d Initialize DOAConditioner with time smoothing (%f) and frequency smoothing (%f).
%25s:%-5d Adapt orientation set to %i
%25s:%-5d Target elevation not set to (%f), it remains at the current value (%f). Elevation must be in range [-90, 90].
%25s:%-5d Target distance not set to (%f), it remains at the current value (%f). Distance must be nonnegative.
%25s:%-5d SubbandDOA not set. Input size (%u) and internal size (%lu) do not match.
%25s:%-5d Creating log Hann matrix mNumFreqBins=%u frequencySmoothing=%f
%25s:%-5d Failed to create frequency smoothing matrix!
%25s:%-5d Logging DoA to files -- this is not real-time safe! Use only for debugging
%25s:%-5d Done
 Unable to instantiate VarEQ AU
%25s:%-5d Embedded VarEQ fails with error %u
%25s:%-5d LoudnessCompensationEQEnable defaults-preferences is enabled: %s
 Invalid value for kAUSPLMeterProperty_VolumeMap
%25s:%-5d Volume Input/Mapped: %f, %f
%25s:%-5d Output Sensitivity: %f
 Input volume curve cannot be null
 Output volume curve cannot be null
 Volume curve steps must match
 Not enough volume map points. Mapping requires 2 or more points. Only found %d.
 Input volume curve is not monotonic. %s
 Output volume curve is not monotonic. %s
%25s:%-5d Volume Map component is not in increasing order: %s. Reversing the order.
%25s:%-5d Volume Input Map: %s
%25s:%-5d Volume Output Map: %s
%25s:%-5d Failed to instantiate internal audio units.
%25s:%-5d Failed to set up internal audio units.
%25s:%-5d Failed to initialize internal audio units.
%25s:%-5d Failed to read ULDAT highpass filter cutoff frequency from plist.
%25s:%-5d Error reading AbsoluteSilenceThdDb from AGC plist dictionary.
%25s:%-5d Noise suppressor failed to process.
%25s:%-5d AGC failed to process.
%25s:%-5d Loading SampleRate from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "SampleRate not loaded"
%25s:%-5d Successfully retrieved sample rate (%g Hz).
%25s:%-5d Loading BlockSize from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "BlockSize not loaded."
%25s:%-5d Successfully retrieved sample rate (%u).
%25s:%-5d Loading NumInputChannels from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "NumInputChannels not loaded."
%25s:%-5d Successfully retrieved number of input channels (%u).
%25s:%-5d Loading NumContextFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "NumContextFrames not loaded."
%25s:%-5d Successfully retrieved number of context frames (%u).
%25s:%-5d Loading MCLPOutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "MCLPOutScale not loaded."
%25s:%-5d Successfully retrieved MCLPOutScale (%g).
%25s:%-5d Loading ECOutScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "ECOutScale not loaded."
%25s:%-5d Successfully retrieved ECOutScale (%g).
%25s:%-5d Loading LambdaPSD_TC from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "LambdaPSD_TC not loaded."
%25s:%-5d Successfully retrieved the time constant for PSD (%g).
%25s:%-5d Internally set the forgetting factor for PSD as (%g).
%25s:%-5d Loading KalmanProcessStd from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "KalmanProcessStd not loaded."
%25s:%-5d Successfully retrieved Kalman process std (%g).
%25s:%-5d Internally set the Kalman process variance as (%g).
%25s:%-5d Loading KalmanObservationStd from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "KalmanObservationStd not loaded."
%25s:%-5d Successfully retrieved Kalman observation std (%g).
%25s:%-5d Internally set the Kalman observation variance as (%g).
%25s:%-5d Loading WaitFrames from topLevelDict
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "WaitFrames not loaded."
%25s:%-5d Successfully retrieved waitFrames (%u).
%25s:%-5d Loading FFT2Mel matrix from topLevelDict
%25s:%-5d Successfully retreived FFT2Mel.
%25s:%-5d EXCEPTION (%d) [mInputSize != featureVectorSize is false]: "mInputSize of NeuralNet (%u) is not matching the feature vector size (%u)."
%25s:%-5d Retrieved info for property %u (%s)
%25s:%-5d Info for unsupported property (%u) requested.
%25s:%-5d Retrieved property data for property %u (%s)
%25s:%-5d Retrieved (unset) property data for property %u (%s)
%25s:%-5d Property data for unsupported property (%u) requested.
%25s:%-5d Clearing the value of property %u (%s)
%25s:%-5d Attempting to set data for property %u (%s)
%25s:%-5d Failed to set data for property %u (%s)
%25s:%-5d Successfully set data for property %u (%s)
%25s:%-5d Attempting to set an unsupported property: %u
%25s:%-5d Parameter info for unsupported parameter (%u) requested
%s: Initialize failed, status = %d
%s: (InputSignals) is NOT finite: (%d)
%s: (OutputSignals) is NOT finite: (%d)
%s: ERROR: could not initialize the cartesian panner #%i with channel layout tag %u: err=%d
%s: ERROR: not initialized
%s: ERROR: could not compute the panning gains, err=%d
%25s:%-5d DSPEngine configuration file claimed to have tree %s, but it was not found
%25s:%-5d DSPEngine configuration file claimed to have tree %s, but it was an a valid tree
%25s:%-5d Couldn't get DSPEngine configuration tree %s
%25s:%-5d Unknown or unsupported device!!
%25s:%-5d Couldn't find the VP version in the DSPEngine configuration file!
%25s:%-5d Preparing a NeuralNet from topLevelDict.
%25s:%-5d Successfully retrieved implementation type (%s).
%25s:%-5d EXCEPTION (%d): "Unknown implementation type (%s)."
%25s:%-5d Missing dictionary NeuralNetImplementationType, set mImplType to default value.
%25s:%-5d mImplType set to value (%u).
%25s:%-5d Preparing BNNS NeuralNet implementation.
%25s:%-5d Loading NumLayers from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve NumLayers."
%25s:%-5d Successfully retrieved Quantization (%u).
%25s:%-5d Quantization not found, using default (%u) bit.
%25s:%-5d Preparing Espresso NeuralNet implementation.
%25s:%-5d ModelNetPathBase is provided - retriving base path and relative path of the model.
%25s:%-5d EXCEPTION (%d) [modelNetPathBase_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPathBase."
%25s:%-5d EXCEPTION (%d) [modelNetPathRelative_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPath."
%25s:%-5d EXCEPTION (%d) [modelNetPath_ref.get_cf() == nullptr is false]: "Failed to retrieve ModelNetPath."
%25s:%-5d Successfully retrieved model .net path (%s).
%25s:%-5d EXCEPTION (%d) [inputName_ref.get_cf() == nullptr is false]: "Failed to retrieve InputName."
%25s:%-5d Successfully retrieved input name (%s).
%25s:%-5d Embedding name not found, using empty.
%25s:%-5d Embedding name set to (%s).
%25s:%-5d EXCEPTION (%d) [outputName_ref.get_cf() == nullptr is false]: "Failed to retrieve OutputName."
%25s:%-5d Successfully retrieved output name (%s).
%25s:%-5d ComputeEngineName not found, using default.
%25s:%-5d Compute engine name set to (%s).
%25s:%-5d Loading StreamingMode.
%25s:%-5d StreamingMode not found, using default.
%25s:%-5d StreamingMode set to (%d).
%25s:%-5d EXCEPTION (%d) [streamingMode_int >= static_cast<UInt32>(StreamingMode::NumModes) is false]: "StreamingMode (%u) is out of range, a value smaller than (%d) is expected."
%25s:%-5d Run processing once to prewarm the filters.
%25s:%-5d EXCEPTION (%d): "Unknown value for mType (%u)."
%25s:%-5d EXCEPTION (%d) [pNeuralNetImpl == nullptr is false]: "NeuralNet implementation not initialized."
[%s|%s] GetProperty (scope=%u, element=%u): %s called with nullptr for output data
[%s|%s] GetProperty (scope=%u, element=%u): %s internal error: getter not implemented
[%s|%s] SetProperty (scope=%u, element=%u): spatial mixer property dictionary: invalid size %u, expected %u
[%s|%s] SetProperty (scope=%u, element=%u): %s = %s
[%s|%s] SetProperty (scope=%u, element=%u): %s = %s (not changed)
[%s|%s] SetProperty (scope=%u, element=%u): %s value out of range
[%s|%s] SetProperty (scope=%u, element=%u): %s: invalid size %u, expected %u
[%s|%s] SetProperty (scope=%u, element=%u): %s not writable
[%s|%s] SetProperty (scope=%u, element=%u): %s not writable after the AU is initialized
[%s|%s] SetProperty (scope=%u, element=%u): %s: file not found
[%s|%s] SetProperty (scope=%u, element=%u): %s internal error: setter not implemented
[%s|%s] SetPropertyDictionary (scope=%u, element=%u)
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): unsupported number type for dictionary entry %u
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): unsupported data type for dictionary entry %u
[%s|%s] SetPropertyDictionary (scope=%u, element=%u): invalid property ID %u
%25s:%-5d Error initializing EndpointVAD2: %s
%25s:%-5d Error in PushAudioSamples: %s
%25s:%-5d Incorrect number of incoming samples for %d-dimensional EnsembleTimeSeriesBuffer
%25s:%-5d The number of input and output indices must match.
%25s:%-5d Input sample numbers cannot go backward in time!
%25s:%-5d Gap detected in the input time series. Filling in zeros.
%25s:%-5d Number of processed samples exceeds allocated buffer size.
%25s:%-5d The FixedArray object cannot be re-allocated to a different length.
%25s:%-5d mNominalVectorNumber should be the minimum of the time-series counters!
%25s:%-5d Synchronization failure! One time series has outpaced the others: timeSeriesNo %i, synchSampleTime %u, GetSampleTime(eventNo, timeSeriesNo) = %u
%s: Custom Bypass Matrix found in IR file
%s: Custom Bypass Matrix gain vector was not found for input channel label = %u
%s: Custom Bypass Matrix was not found for input channel label = %u
%s: Custom Bypass Matrix was not loaded; invalid dictionary
%s: error %d while initializing source extent processor
%s: ERROR: cannot process with %d output channels
Entering %s
[Loading HRTFs]
[Post-processing HRTFs]
[Calculating AMBI2BIN filters]
[Loading XTCIRs]
[Calculating AMBI2BIS filters]
[Calculating AMBI2LS filters]
[Parameters set to (%f, %f, %f)]
Initializing Grid %s
Initializing Grid and ambisonic encoder %s
%25s:%-5d Initialize called without setting setting plist! Loading plist from path given by a defaults write
%25s:%-5d Plist path given as %s by defaults write value
%25s:%-5d Setting graph slice timing: max slice duration %u, fs %u
%25s:%-5d Configuring graph
%25s:%-5d Initializing graph
%25s:%-5d Graph is null
%25s:%-5d Loaded output channel layout %s (%u) from tuning plist 
%25s:%-5d Supported render modes:
%25s:%-5d %s
%25s:%-5d ---
%25s:%-5d Tuning name '%s'
%25s:%-5d Input format is %s
%25s:%-5d Output format is %s
%25s:%-5d Updating parameters
%25s:%-5d Updating stream formats
%25s:%-5d Unknown exception!
%25s:%-5d DSP graph exception: %s %s, thrown at %s:%i
%25s:%-5d Done initializing result = %i
%25s:%-5d Setting up beamformers
%25s:%-5d Setting up box %s
%25s:%-5d Bad ref mic for limit wind boost %i
%25s:%-5d Limit wind boost ref is channel %i
%25s:%-5d Failed to set beamformer coefficients, setPropertyError = %i
%25s:%-5d Latency will be reported as %fs
%25s:%-5d Failed to set reported latency, setPropertyError = %i
%25s:%-5d Reported latency not supplied for box %s
%25s:%-5d Failed to find beamformer box or coefficients dictionary!
%25s:%-5d ----
%25s:%-5d Restoring plist from AU preset
%25s:%-5d Error %i while restoring state
%25s:%-5d Saving plist and properties to AU preset
%25s:%-5d AUBase::SaveState didn't produce valid dictionary?
%25s:%-5d Latency is %f
%25s:%-5d The host requested latency before the real value is available!
%25s:%-5d scope %u element %u: incoming (invalid) format %s. required fmt %s
%25s:%-5d Format check for scope %i element %i: %s. Valid: %i
%25s:%-5d Zoom curve loaded from %s
%25s:%-5d %s does not have zoom curve
%25s:%-5d Write-only property LockOrientation was read?
%25s:%-5d Write-only property UnlockOrientation was read?
%25s:%-5d Last orientation / camera direction update mach absolute time was %llu
%25s:%-5d Directory does not exist %s
%25s:%-5d The CFStringRef passed to SetProperty is null.
%25s:%-5d Locking orientation at %s (%i)
%25s:%-5d Orientation locked timed out! Is IO running?
%25s:%-5d Orientation locked after waiting for IO thread
%25s:%-5d Orientation locked without waiting for IO thread
%25s:%-5d Unlocking orientation
%25s:%-5d param %i not found in graph
%25s:%-5d !mGraph
%25s:%-5d %s camera direction (%u): %s (%f)
%25s:%-5d %s TargetUI orientation (%u): %s (%f)
%25s:%-5d %s camera FOV (%u): %f
%25s:%-5d %s param %u: val=%f
%25s:%-5d Ignoring orientation update with unsupported value %u
%25s:%-5d wrong number of buffer lists!
%25s:%-5d preflight gave invalid number of frames to process!
%25s:%-5d exception!
%25s:%-5d Process called without a graph!
%25s:%-5d MultiRadixRealFFT_RealInPlaceTransform() returned an error.
%25s:%-5d ASSERTION FAILURE [(!(fftSize > 1024 * 4)) != 0 is false]: 
%25s:%-5d ASSERTION FAILURE [(!(nDftBuffers > 64)) != 0 is false]: 
%25s:%-5d required key missing '%s'
%25s:%-5d Loading plist file for %s from %s
%25s:%-5d Dictionary file not present on disk!
%25s:%-5d Bad object for key '%s'
%25s:%-5d Bad beam direction string: '%s'
%25s:%-5d Bad orientation string: '%s'
%25s:%-5d AUNeuralNetRES: Initialize.
%25s:%-5d Initialize called without setting setting NeuralNetRESLayers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size is not supported! Setting AU in Bypass mode.
%25s:%-5d AUNeuralNetRES: Successfully Initialized.
%25s:%-5d AUNeuralNetRES: Cleanup().
%25s:%-5d AUNeuralNetRES: Reset.
%25s:%-5d The CFDictionaryRef passed to SetProperty is null.
%25s:%-5d Could not load NeuralNetRES plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetRES plist.
%25s:%-5d Setting the stream format for the second input bus to match the format of the first bus.
%25s:%-5d InputSignals cannot be NULL. It is a required input
%25s:%-5d EchoEstimates cannot be NULL when Beam selection is not Off.
%25s:%-5d AUNeuralNetRES: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUNeuralNetRES: (OutputSignals) is NOT finite: (%u)
%25s:%-5d Initialize
%25s:%-5d Check input format
%25s:%-5d Number of channel in the input stream (%u) not equal to the expected number of channels (%u).
%25s:%-5d Check output form
%25s:%-5d Number of channel in the output stream (%u) not equal to the expected number of channels (%u).
%25s:%-5d Successfully initialized.
%25s:%-5d Cleanup.
%25s:%-5d Reset.
%25s:%-5d Input size of SpatialProbabilityInputSourceProbability is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSourceProbability_CF is not equal to the expected size (prop id: %u).
%25s:%-5d ExternalSourceProbability is not used in the current mode: (%d, %d)
%25s:%-5d Input size of SpatialProbabilityInputSubbandDOA is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSubbandDOA_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Subband DOA is only used for the DOA mode. Current mode is (%d)
%25s:%-5d Input size of SpatialProbabilityInputSteeringVector is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputSteeringVector_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Steering vector is not used in the current mode. Current mode is (%d)
%25s:%-5d Steering vector loaded from plist will be overwritten in the current mode. Current mode is (%d)
%25s:%-5d Steering vector to be loaded from a plist.
%25s:%-5d Loading SteeringVectorDictionary was not successful.
%25s:%-5d Input size of SpatialProbabilityInputCDR is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputCDR_CF is not equal to the expected size (prop id: %u).
%25s:%-5d External CDR is not used in the current mode. Current mode is (%d)
%25s:%-5d Input size of SpatialProbabilityInputPostMask is not equal to the expected size (prop id: %u).
%25s:%-5d Input size of SpatialProbabilityInputPostMask_CF is not equal to the expected size (prop id: %u).
%25s:%-5d Pointer size of SpatialProbabilityInputShapeParameterPerFrequency_CF is not equal to the expected size (prop id: %u).
%25s:%-5d InputSignals cannot be NULL. It is a required input.
%25s:%-5d Number of channels on the input bus in not matching the expected number of channels (%u).
%25s:%-5d Number of channels on the output bus in not matching the expected number of channels (%u).
%25s:%-5d (InputSignals) is NOT finite: (%u)
%25s:%-5d (OutputSignals) is NOT finite: (%u)
%25s:%-5d Initialize Spatial Probability Classes.
%25s:%-5d Create DOA-based estimator
%25s:%-5d Create SV-based estimator (SV dictionary)
%25s:%-5d Sampling rate in the plist (%g Hz) does not match the actual sample rate (%g Hz). Setting the AU in bypass mode.
%25s:%-5d Number of microphones in the plist (%d) does not match the actual number of microphones (%d). Setting the AU in bypass mode.
%25s:%-5d Number of subbbands in the plist (%d) does not match the actual number of subbands (%d). Setting the AU in bypass mode.
%25s:%-5d Number of subbbands in the externalShapeParameterPerFrequency (%d) does not match the actual number of subbands (%d). Setting the AU in bypass mode.
%25s:%-5d External Shape Parameter Per Frequency property was set, but it is not used in the current mode. Current mode is (%d)
%25s:%-5d Create SV-based estimator (external SV)
%25s:%-5d Invalid number (%u) of input buses requested. We only support 1
3 buses.
%25s:%-5d Invalid number (%u) of output buses requested. We only support 1
3 buses.
%25s:%-5d Successfully retrieved sample rate (%iHz).
%25s:%-5d Sample rate is not present in the dictionary.
%25s:%-5d Successfully retrieved profile vector (length %i).
%25s:%-5d Profile vector is not present in the dictionary.
%25s:%-5d Setting up files at %s and %s; sample rate %f
%25s:%-5d HDT: In ClickEventLogger::Finish()
%25s:%-5d HDT: In ClickEventLogger::Finish, writing notification log to file
%25s:%-5d HDT: In ClickEventLogger::Finish, closing the files and cleaning up
%25s:%-5d log zero time not initialized yet, dropping log event
%25s:%-5d Assertion failed: failed to get event
%25s:%-5d Assertion failed: failed to store event
%25s:%-5d ERROR: Unexpected input argument. Must be 1,2,or 3
%25s:%-5d Huge value:removalTime = %llu
%25s:%-5d negative removalTime!? %lli
 unsupported
%25s:%-5d Fatal error: %s
%25s:%-5d AUHearingLossCompensator::Initialize()
%25s:%-5d mSampleRate: %f
%25s:%-5d GetMaxFramesPerSlice(): %u
%25s:%-5d mNumberOfChannels: %u
%25s:%-5d mUsingBlockProcessor: %u
%25s:%-5d mBlockSize: %u
%25s:%-5d mFrequencyDomainInput: %u
%25s:%-5d mBypass: %u
%25s:%-5d mFadeTime_ms: %f
%25s:%-5d mNumFadeFrames: %u
%25s:%-5d mProcessWasCalled: %u
%25s:%-5d Cross-fade Triggered: mBypassCounter: %u
%25s:%-5d Created CircArray Kernel with %u ins, %u outs, SR: %0.0f, %u order algorithm, %lu beam patterns %u frameSize
%25s:%-5d AUECMIMO: Initialize.
%25s:%-5d AUECMIMO: filter (readout) length is set to %u (%u) samples.
%25s:%-5d AUECMIMO: IQRD mode delay is set to %u samples.
%25s:%-5d AUECMIMO: Using logPeriod of (%g)s as specified in defaults write ecmimo_log_period_in_seconds.
%25s:%-5d AUECMIMO: Successfully initialized.
%25s:%-5d AUECMIMO: Cleanup.
%25s:%-5d AUECMIMO: Set iQRD mode.
%25s:%-5d AUECMIMO: Set classic mode.
%25s:%-5d AUECMIMO: Reset.
%25s:%-5d AUECMIMO::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECMIMO: ********* Reset begins *********
AUECMIMO: state variables have finite values (1 if True): %u
AUECMIMO: ref-signal buffers have finite values (1 if True): %u
AUECMIMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMIMO: ********* Reset ends *********
%25s:%-5d AUECMIMO: ********* Logging begins *********
AUECMIMO: logging (period, timestamp): (%f, %f) (s)
AUECMIMO: state variables have finite values (1 if True): %u
AUECMIMO: ref-signal buffers have finite values (1 if True): %u
AUECMIMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMIMO: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECMIMO: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECMIMO: ********* Logging ends *********
%s: Source extent processor is loaded with incorrect configuration. Spatializer will ignore source size.
%s: Unsupported normalization in the source extent IR file, Spatializer will ignore source size.
%s: Could not initialize source extent processor, Spatializer will ignore source size.
%25s:%-5d saving click removal audio file %f %i %s %s
%25s:%-5d file %s created successfully 
%25s:%-5d file creation failed
%s: error %d while initializing the NF processor
%s: error %d while initializing the source extent processor
%s: error %d while initializing the HRIR processor with fileURL=%s
%s: ERROR: wrong number of output channels %d
DSPGraph assertion failure: DSPGraph ABI runtime/compile-time mismatch
MetadataDNNVAD:%s:%d: couldn't initialize due to exception: %s
MetadataDNNVAD:%s:%d: couldn't initialize due to DSPG exception %s: %s
MetadataDNNVAD:%s:%d: unknown exception
MetadataDNNVAD:%s:%d: couldn't uninitialize due to exception: %s
MetadataDNNVAD:%s:%d: couldn't uninitialize due to DSPG exception %s: %s
%25s:%-5d  >vp> snprintf error
%25s:%-5d  <vp> Trying to load tuning %{private}s%s
%25s:%-5d  <vp> Couldn't load tuning strip
%25s:%-5d  <vp> Succesfully loaded tuning strip %{private}s%s
%25s:%-5d  <vp> Tunings loaded successfully for %s-%s-%s! '%{private}s/%{private}s/%{private}s/%{private}s'
%25s:%-5d  <vp> No vocoder tuning fallback could be found for vocoder type %s
%25s:%-5d  >vp> no custom tuning plists found for headphone, headset or endpoint-specific device %s-%s; trying to find tunings for the original ref & mic port types...
%25s:%-5d  >vp> NEW TUNING LOGIC <SERIOUS ERROR>: no tuning plists found. Using default paramters!!! Use case %s-%s-%s
%25s:%-5d  <vp> No tuning plists found due to unknown vocoder type. This could be transient. Using default paramters.
%25s:%-5d setting use case override to %s
%25s:%-5d  <vp> initializevpparams: VAD-BuiltInMicDataSource = %i
%25s:%-5d  <vp> initializevpparams: VAD-BuiltInMicSelection = 0x%x
%25s:%-5d  <vp> dl mix fmt & hw ref fmt were out-of-sync..re-setting while using external ref
%25s:%-5d  >vp> Hey I just met you, and this is crazy, but here's my component 'Audio - DSP Software', so file a radar maybe.
%25s:%-5d  <vp> Tuning loading is bypassed for this device
%25s:%-5d Could not setup TweakaLeak parameter logger
%25s:%-5d Invalid EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid EQ sizes: BQ vectors must be same length
%25s:%-5d Read in %lu biquad/anchor pairs, %lu BQ coeffs each
%25s:%-5d End Initialize()
%25s:%-5d GetPropertyInfo ID=%d scope=%d bus=%d
%25s:%-5d GetProperty ID=%d scope=%d bus=%d
%25s:%-5d SetProperty ID=%d scope=%d bus=%d
%25s:%-5d Too many frames to process: Was told max would be %lu, being asked to process %d
%25s:%-5d wireless charging mat is attached
%25s:%-5d wireless charging mat is not attached
%25s:%-5d wireless charging mat state changed
%25s:%-5d  >vp> mic sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
set up logs in "%s"
set up logs with time stamp "%s"
failed to set up logs due to exception
failed to delete empty logs due to exception
%25s:%-5d Input kappaMin must be lower than kappaMax. Skipping updating model with Prior weighted frequency dependent shape parameter.
%25s:%-5d Input kappaMin must be lower than kappaMax. Skipping updating model with CDR-based frequency dependent shape parameter.
%25s:%-5d Maximum frequency for frequency dependent shape decay must be lower than maximumfrequency. Using fixed shape parameter instead of frequency depedent one.
%25s:%-5d SpatialProbabilityBase: Shape parameter max not set to (%f), it remains at the current value (%f). KappaMax should be >= (%f).
%25s:%-5d SpatialProbabilityBase: Shape parameter min not set to (%f), it remains at the current value (%f). KappaMin should be in range [0, %f].
%25s:%-5d SpatialProbabilityBase: Prior probabilities not set. Source prior (%f) should be in range [0, 1].
%25s:%-5d SpatialProbabilityBase: Prior probabilities not set. Conditional target prior (%f) should be in range [0, 1].
%25s:%-5d  <vp> loading far end voice mix graph "%s"
%25s:%-5d  >vp> failed to load far end voice mix graph text
%25s:%-5d  <vp> loading far end voice mix AU strip "%s"
%25s:%-5d  >vp> failed to load far end voice mix AU strip
%25s:%-5d  <vp> loading far end voice mix property strip "%s"
%25s:%-5d  >vp> failed to load far end voice mix property strip
%25s:%-5d  <vp> loading far end voice DNN VAD graph "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD graph text
%25s:%-5d  <vp> loading far end voice DNN VAD AU strip "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD AU strip
%25s:%-5d  <vp> loading far end voice DNN VAD property strip "%s"
%25s:%-5d  >vp> failed to load far end voice DNN VAD property strip
[%s|%s] ChannelProcessor: Spatial audio over built-in speakers not available on this hardware; reverting to amplitude panning
[%s|%s] ChannelProcessor: Invalid output type %u when trying to initialize with kSpatializationAlgorithm_UseOutputType
[%s|%s] ChannelProcessor: Invalid spatialization algorithm %u
[%s|%s] ChannelProcessor: Parametric processing is enabled with bypass source mode. Input is set to zero.
[%s|%s] ChannelProcessor: Channel processing dropped because the spatializer is locked
InputElement #%u: Invalid output layout is defined for MatrixMix, resetting output layout = input layout
InputElement #%u: Creating HOA decoders
InputElement #%u: Failed creating HOA decoders: arrays sizes don't match
InputElement #%u: Exception caught in %s when creating the HOA decoders
%s: Invalid MatrixMix Output Type.
%25s:%-5d AUNeuralNetVAD: Start Initialization.
%25s:%-5d Initialize called without setting setting NeuralNetVADLayers plist! Setting AU in Bypass mode.
%25s:%-5d Block Size for DFT must be divisable by 2**4! Setting AU in Bypass mode.
%25s:%-5d Initializing the directional model: azimuth (%f), elev (%f), model type (%d), shape parameter (%f).
%25s:%-5d AUNeuralNetVAD: Successfully Initialized.
%25s:%-5d AUNeuralNetVAD: Resetting state variables. Cleanup() started.
%25s:%-5d Input size of PriorSPP  (%lu) is not equal to the the expected size  (%lu) (prop id: %u).
%25s:%-5d Input size of Prior_SPP  (%lu) is not equal to the the expected size  (%lu) or (%lu) is not equal to (%lu) (prop id: %u).
%25s:%-5d Could not load NeuralNetVAD plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetVAD plist.
%25s:%-5d InputSignal cannot be NULL. It is a required input
%25s:%-5d AUNeuralNetVAD: (InputSignals) is NOT finite: (%u)
%25s:%-5d AUNeuralNetVAD: (OutputSignals) is NOT finite: (%u)
%25s:%-5d  >vp> mNewOutRingBuff has encountered an overrun: tried to write %u but only had space for %u samples
%25s:%-5d  >vp> warning: tsref ring buffer: <slightly ahead> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> tsref ring buffer: <slightly ahead> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> warning: tsref ring buffer: <slightly behind> couldn't read required %d samples, err %d, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> tsref ring buffer: <slightly behind> the calculated samples in range is %d?!, buf time bounds [%ld, %ld], required sample bounds [%.2lf, %.2lf]
%25s:%-5d  >vp> process: ERROR output buffer has encountered an underrun, need %d, have %d samples
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: PROCESS - ioOutData buffer (%d bytes) smaller than what VP is configured to output (%d bytes)!
%25s:%-5d  <vp> Invoked the muted talker detection callback, event = %u
%25s:%-5d  <vp> initializedlp: call num %u
%25s:%-5d  <vp> mix %s (blksz %u), voice %s
%25s:%-5d  <vp> initializedlp:   mix asbd = %s
%25s:%-5d  <vp> initializedlp: voice asbd = %s
%25s:%-5d  <vp> initializedlp: mix blk sz = %d
%25s:%-5d  <vp> DL Fade data size = %u
%25s:%-5d  <vp> initspkrtel: asbd = %s, blksz = %d
%25s:%-5d  <vp> InitializeDLP: hwref and dlmix formats were mismatched -- calling Initialize again
%25s:%-5d  <vp> Begin self-reinit (UpdateReferenceSignalFormat)
%25s:%-5d  <vp> End self-reinit (UpdateReferenceSignalFormat)
%25s:%-5d  <vp> initializedlp: [iphone/ipad simulator] disabling all downlink processing
%25s:%-5d  <vp> initializedlp: ul-dl config out of sync
%25s:%-5d  <vp> initializedlp: ul-dl config no longer out of sync
%25s:%-5d  <vp> Re-set mix gain range to [%f, %f]dB
%25s:%-5d  <vp> +++ dl io blk size = %u, num dl io cycles = %u
 matrix size mismatch
 NumRows of input matrix does not match the nCols of output matrix
 NumCols of input matrix does not match the nRows of output matrix
 only good for square matrices
 pivot not large enough
 workspace not large enough
 matrix dim mismatch
 vector size mismatch
 matrix size inconsistency
[%p] constructed
[%p] I/O formats are not compatible
[%p] will initialize with configuration: %s
[%p] channel map is not set (AU will use default channel map instead)
[%p] failed to initialize - channel map size is not equal to number of output channels
[%p] failed to initialize - channel map element %d is larger than number of input channels
%s%sinitializing listeners for bundle ID "%s"
%s%sfailed to initialize due to exception - %s
%s%sgetting preferred chat flavor for bundle ID "%s"
%s%shandling unknown chat flavor %u
%s%sfailed to preferred chat flavor due to exception - %s
%s%ssetting active chat flavor for bundle ID "%s" to "%s"
%s%sfailed to set active chat flavor due to exception - %s
%s%sremoving active chat flavor for bundle ID "%s"
%s%ssetting bypass for bundle ID "%s" to %s
%s%sfailed to set bypass due to exception - %s
%s%ssetting supported chat flavors for bundle ID "%s" to [%s]
%s%sfailed to set supported chat flavors due to exception - %s
%25s:%-5d %s=%f out of range (%f,%f)
%25s:%-5d %s not in param dictionary
%25s:%-5d mass = %f
%25s:%-5d IMONScale = %f
%25s:%-5d VMONScale = %f
%25s:%-5d BandPassLowerCorner = %f
%25s:%-5d BandPassUpperCorner = %f
%25s:%-5d TargetVelocityRatioHigh = %f
%25s:%-5d TargetVelocityRatioLow = %f
%25s:%-5d PeakWindowNumber = %u
%25s:%-5d GainIncrement = %f
%25s:%-5d GainDecrement = %f
%25s:%-5d MomentumWindowDelay_ms = %f
%25s:%-5d VelocityMeasuredRangeMin = %f
%25s:%-5d VelocityMeasuredRangeMax = %f
%25s:%-5d PowerLimit = %f
%25s:%-5d AmpliferGain = %f
%25s:%-5d MeasureToExpectedPowerRatio = %f
%25s:%-5d Creating logs
%25s:%-5d Inductance = %f
%25s:%-5d SineFrequency = %f
%25s:%-5d Kmotor = %f
%25s:%-5d DCResistance (syscfg) = %f
%25s:%-5d TargetVibeVelocity = %f
%25s:%-5d ivBufferSize = %lu
%25s:%-5d %@ = %f
%25s:%-5d momentumWindowDelay_ms: %f, momentumWindowDelay_samples:%u
%25s:%-5d calibrationDelay_samples: %u
%25s:%-5d analysisWindowTime: %f
%25s:%-5d State::Idle->Calibration
%25s:%-5d State::Idle->ComputingMomentum
%25s:%-5d State::Idle->BufferingMomentum
%25s:%-5d State::Idle
%25s:%-5d State::BufferingRcal->Idle:%f
%25s:%-5d State::BufferingRcal->ComputingMomentum:%f
%25s:%-5d Rcal attempted but not successful
%25s:%-5d State::BufferingRcal->BufferingMomentum:%f
%25s:%-5d State::ComputingRCal:%f
%25s:%-5d State::ComputingMomentum->Idle
%25s:%-5d State::ComputingMomentum->BufferingRcal
%25s:%-5d State::ComputingMomentum
%25s:%-5d RCal: %f
%25s:%-5d Found zeros at beginning of Rcal window. New offset %lu
%25s:%-5d Found zeros at beginning of Rcal window. New offset %lu. No Rcal signal found.
%25s:%-5d PilotTempSensor not instantiated before use.
%25s:%-5d abs(vel@%.1f Hz): %f, TargetVelocity Range: (%f, %f), vibePwr: %f, PwrThreshold: %f,  GainFactor: %f
%25s:%-5d Previous sine amplitude %f gives power %f above power limit %f. Override adjustment, decrement gain by %f
%25s:%-5d IV Gain factor is Power limited: %f > %f. Override adjustment, no gain change.
%25s:%-5d VibeAnalyzer not configured or has insufficient data. No gain change.
%25s:%-5d desiredwin=%f, thermalsampleperiod=%d, cnt=%d, f_a_des=%f, f_a=%f, fs=%f
%25s:%-5d in_pwr=%f, mag=%f, fr=%d
[%p] created
[%p] failed to set bypass property; size error; inDataSize[%u]
[%p] failed to initialize - input sample rate[%lf] and output sample rate[%lf] mismatched
[%p] num of buffers in input ABL[%u] greater than num of buffers in output ABL[%u]
[%p] AU has no input busses
[%p] Error[%d] pulling input from bus 0
[%p] Error[%d] pulling input from bus 1
%25s:%-5d AUDereverb: Initialize.
%25s:%-5d AUDereverb: Using logPeriod of (%g)s as specified in defaults write mclp_log_period_in_seconds.
%25s:%-5d AUDereverb: Successfully initialized.
%25s:%-5d AUDereverb: Cleanup.
%25s:%-5d AUDereverb: parameters changed after Initialize, which will allocate memory on the realtime audio thread - only SetParameter before Initialize.
%25s:%-5d AUDereverb: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUDereverb: (OutputSignals, MCLPLeeOut) is NOT finite: (%u, %u)
%25s:%-5d AUDereverb: Initialize MCLP Classes.
%25s:%-5d Fmin must be < (samplingRate/2). Setting Fmin = samplingRate/2.
%25s:%-5d Fmax must be < (samplingRate/2). Setting Fmax = samplingRate/2.
%25s:%-5d Fmin must be <= Fmax. Setting Fmin = Fmax.
%25s:%-5d AUDereverb: ********* Logging begins *********
AUDereverb: logging (period, timestamp): (%f, %f) (s)
%25s:%-5d AUDereverb: DRR measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUDereverb: ********* Logging ends *********
[%s|%p] constructed
[%s|%p] destructed
[%s|%p] will initialize
[%p] will initialize
[%s|%p] compiling graph text
[%p] compiling graph text
[%s|%p] [%2lu]: %.*s
[%p] [%2lu]: %.*s
[%s|%p] compiling graph file: '%s'
[%p] compiling graph file: '%s'
[%s|%p] patcher mode is enabled
[%p] patcher mode is enabled
[%s|%p] setting I/O channel names on MatrixPatcher box
[%p] setting I/O channel names on MatrixPatcher box
[%s|%p] failed to create DSPGraph instance
[%p] failed to create DSPGraph instance
[%s|%p] setting .propstrip on DSPGraph
[%p] setting .propstrip on DSPGraph
[%s|%p] setting .austrip on DSPGraph
[%p] setting .austrip on DSPGraph
[%s|%p] Failed to get format and block size for named format '%s'
[%p] Failed to get format and block size for named format '%s'
[%s|%p] failed to update output format "%s"
[%p] failed to update output format "%s"
[%s|%p] setting fixed slice duration with block size: %d
[%p] setting fixed slice duration with block size: %d
[%s|%p] setting variable slice duration with block size: %d
[%p] setting variable slice duration with block size: %d
[%s|%p] configuring DSPGraph
[%p] configuring DSPGraph
[%s|%p] setting graph property %d
[%p] setting graph property %d
[%s|%p] failed to set graph property %d. Error code: %d
[%p] failed to set graph property %d. Error code: %d
[%s|%p] setting box property %d on %s
[%p] setting box property %d on %s
[%s|%p] failed to set box property %d on %s
[%p] failed to set box property %d on %s
[%s|%p] failed to find %s box inside DSPGraph
[%p] failed to find %s box inside DSPGraph
[%s|%p] failed to set parameter %d on the graph: unspecified error
[%p] failed to set parameter %d on the graph: unspecified error
[%s|%p] failed to set parameter %d on the graph: %s
[%p] failed to set parameter %d on the graph: %s
[%s|%p] initializing DSPGraph
[%p] initializing DSPGraph
[%s|%p] caught unknown exception
[%p] caught unknown exception
[%s|%p] caught std::exception: %s
[%p] caught std::exception: %s
[%s|%p] caught std::system_error: %s
[%p] caught std::system_error: %s
[%s|%p] caught DSPGraph::Exception: %s
[%p] caught DSPGraph::Exception: %s
[%s|%p] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%p] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%s|%p] [WARNING] AudioUnit and DSPGraph formats for input bus %d don't match
[%p] [WARNING] AudioUnit and DSPGraph formats for input bus %d don't match
[%s|%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%s|%p] [WARNING] AudioUnit and DSPGraph formats for output bus %d don't match
[%p] [WARNING] AudioUnit and DSPGraph formats for output bus %d don't match
[%s|%p] [WARNING] AudioUnit format: %s
[%p] [WARNING] AudioUnit format: %s
[%s|%p] [WARNING]  DSPGraph format: %s
[%p] [WARNING]  DSPGraph format: %s
[%s|%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%p] [WARNING] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%s|%p] total graph latency : %f, sample rate %u
[%p] total graph latency : %f, sample rate %u
[%s|%p] latency for box %s : %f
[%p] latency for box %s : %f
[%s|%p] did initialize
[%s|%p] failed to initialize with error %d
[%p] failed to initialize with error %d
[%s|%p] will uninitialize
[%p] will uninitialize
[%s|%p] did uninitialize
[%p] did uninitialize
[%s|%p] failed to query property info for property %s (error %d)
[%p] failed to query property info for property %s (error %d)
[%s|%p] unknown exception while getting property %s
[%p] unknown exception while getting property %s
[%s|%p] DSPGraph exception while getting property %s
[%p] DSPGraph exception while getting property %s
[%s|%p] setting graph property %d with CF object: %s
[%p] setting graph property %d with CF object: %s
[%s|%p] Failed to set property on DSP graph: %s %s
[%p] Failed to set property on DSP graph: %s %s
[%s|%p] unknown exception while setting property %s
[%p] unknown exception while setting property %s
[%s|%p] DSPGraph exception while setting property %s
[%p] DSPGraph exception while setting property %s
[%s|%p] failed to set preset on %s box
[%p] failed to set preset on %s box
[%s|%p] failed to process because DSPGraph is null
[%p] failed to process because DSPGraph is null
[%s|%p] [FATAL] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%p] [FATAL] AudioUnit (%d -> %d) and DSPGraph (%d -> %d) I/O bus counts don't match
[%s|%p] [FATAL] AudioUnit and DSPGraph formats for input bus %d don't match
[%p] [FATAL] AudioUnit and DSPGraph formats for input bus %d don't match
[%s|%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on input bus %d
[%s|%p] [FATAL] AudioUnit and DSPGraph formats for output bus %d don't match
[%p] [FATAL] AudioUnit and DSPGraph formats for output bus %d don't match
[%s|%p] [FATAL] AudioUnit format: %s
[%p] [FATAL] AudioUnit format: %s
[%s|%p] [FATAL]  DSPGraph format: %s
[%p] [FATAL]  DSPGraph format: %s
[%s|%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%p] [FATAL] AudioUnit host may have incorrectly set kAudioUnitProperty_StreamFormat on output bus %d
[%s|%p] [FATAL] AudioUnit (%d -> %d) and runtime (%d -> %d) I/O bus counts don't match
[%p] [FATAL] AudioUnit (%d -> %d) and runtime (%d -> %d) I/O bus counts don't match
[%s|%p] caught CAXException
[%p] caught CAXException
[%s|%p] Captures folder created : %s
[%p] Captures folder created : %s
%25s:%-5d Assertion failed: invalid output num cols
%25s:%-5d Assertion failed: invalid output num rows
%25s:%-5d Assertion failed: invalid PhiMatrix num cols
%25s:%-5d Assertion failed: zeta shape mismatch
%25s:%-5d Assertion failed: dimension mismatch
%25s:%-5d Assertion failed: Psi must be square
%25s:%-5d Assertion failed: mismatch in OmegaInv size
%25s:%-5d Assertion failed: invalid YSegmentLength
%25s:%-5d Assertion failed: Mis-matched vector sizes!
%25s:%-5d Assertion failed: outClickLogLik stores the no click probability too!
%s:%-5d Invalid number (%u) of input buses requested. We only support 1 bus.
%s:%-5d Invalid number (%u) of output buses requested. We only support 1
2 buses.
%25s:%-5d bad event type %i
%25s:%-5d Waiting on any pending HID queue callbacks
CFProperty::%s: file %s not found
Exception caught in CFURLPropertyCStringInterface::%s
CFURLPropertyCStringInterface::%s: file %s not found
[%s|%s] Number of channels = %u in AudioChannelLayout does not match number of channels = %u in stream format.
[%s|%s] Could not toggle parametric processing as reinitialization of channel processors failed: err = %d
[%s|%s] Creating upmixer with FFT size %u
[%s|%s] ERROR, Upmixer did not initialize properly
[%s|%s] Deleting upmixer
[%s|%s] Parametric Processor is in Headphone Rendering Mode
[%s|%s] Parametric Processor is in BuiltInSpeakers Rendering Mode
[%s|%s] Parametric Processor is in External Speakers Rendering Mode
[%s|%s] Could not initialize Parametric Processor.
[%s|%s] unexpected invalid output layout
[%s|%s] could not initialize the channel processors with output type %u
[%s|%s] could not set the spatialization algorithm with output type %u
[%s|%s] orientation %d set, using previous orientation %d
[%s|%s] using symmetry, flip azimuth = %d, flip channels = %d
[%s|%s] Initialize channel processors called before the input element is initialized
[%s|%s] Initializing channel processors
[%s|%s] Invalid output channel layout, unable to initialize channel processors
[%s|%s] Initializing %u channel processors
[%s|%s] Updating audio channel layout tag = %u (%s)
[%s|%s] Could not update the channel layout as creating MatrixMix failed: err = %d
[%s|%s] invalid input channel layout %d in %s
[%s|%s] Setting HOA bypass matrix for W passthrough
[%s|%s] Standard bypass matrix not available; reverting to a diagonal matrix
[%s|%s] Setting stream format: %s
[%s|%s] Could not set the stream format: invalid samplerate %f
[%s|%s] Could not initialize channel processors after number of channels in a stream changed to %u: error = %d
[%s|%s] Could not set default channel layout after number of channels in a stream changed to %u: error = %d
[%s|%s] Number of channels in requested audio channel layout is different than in stream format. Default audio channel layout %s from preset is ignored. Current audio channel layout tag = %s
[%s|%s] Failed to set audio channel layout %s. Current audio channel layout tag = %s
[%s|%s] Invalid audio channel layout: AudioFormatGetProperty returned error %d
[%s|%s] Current audio channel layout tag = %s
[%s|%s] AUSM_HRIR: Generic HRIR is loaded from %s.
[%s|%s] AUSM_HRIR: Personal HRIR type %u is loaded.
%25s:%-5d Component info: %s %s %s
%25s:%-5d AUBeamNF: Error: Initialized
%25s:%-5d 
AUBeamNF: input stream format: %s
%25s:%-5d 
AUBeamNF: output stream 0 format: %s
%25s:%-5d 
AUBeamNF: output stream 1 format: %s
%25s:%-5d AUBeamNF Error: Converting mic spacing from tuning file
%25s:%-5d AUBeamNF Error: Invalid mic spacing %d
%25s:%-5d Initialize Beam object with: sample rate = %f, optimal frame size = %d, number of beams = %d
%25s:%-5d AUBeamNF: Error: Failed initializing BeamNF object
%25s:%-5d AUBeamNF: Error: AUBeamNFN should have property kAudioUnitProperty_UsesFixedBlockSize set to 1 before initialize
%25s:%-5d Initialize BeamNFN object with: sample rate = %f, transform size = %d, frame size = %d, number of beams = %d
%25s:%-5d AUBeamNF: Error: Failed initializing Beam2N object
%25s:%-5d AUBeamNF: Error: Failed setting diffraction filter and post EQ
%25s:%-5d AUBeamNF: Error loading diffraction filter file at %s
%25s:%-5d AUBeamNF Error: Converting diffraction filter vectors length from tuning file
%25s:%-5d AUBeamNF Error: Invalid diffraction filter data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeamNF: Error no diffraction filter data
%25s:%-5d AUBeamNF: Error loading post EQ file at %s
%25s:%-5d AUBeamNF Error: Converting eq vectors length from tuning file
%25s:%-5d AUBeamNF Error: Invalid post eq data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeamNF: Error no post EQ data
%25s:%-5d AUBeamNF: Error: inFramesToProcess != GetMaxFramesPerSlice(), inFramesToProcess = %d, GetMaxFramesPerSlice() = %d
%25s:%-5d AUBeamNF: Error: Beam object not initialized, won't dump diffraction filter
%25s:%-5d AUBeamNF: Error: Number of unique bands is zero, won't dump diffraction filter
%25s:%-5d AUBeamNF: Error: Beam object not initialized, won't dump post EQ
%25s:%-5d AUBeamNF: Error: Number of unique bands is zero, won't dump post EQ
%25s:%-5d AUBeamNF: Error: Could not open diffraction filter file %s
%25s:%-5d AUBeamNF: Error: Could not read diffraction filter file %s
%25s:%-5d AUBeamNF: Error: Could not open post EQ file %s
%25s:%-5d AUBeamNF: Error: Could not read post EQ file %s
[%p] failed to initialize - sample rates of M1 input bus and main output bus must be equal
[%p] failed to initialize - sample rates of M4 input bus and main output bus must be equal
[%p] will construct with M=%u, K=%u, delta=%f
[%p] successfully constructed
%25s:%-5d AUECSUMO: Initialize.
%25s:%-5d AUECSUMO: Using logPeriod of (%g)s as specified in defaults write ecsumo_log_period_in_seconds.
%25s:%-5d AUECSUMO: Successfully initialized.
%25s:%-5d AUECSUMO: Cleanup.
%25s:%-5d AUECSUMO: ********* Using the initialized window *********
%25s:%-5d AUECSUMO: ********* Window not initialized: returning error *********
%25s:%-5d AUECSUMO: Reset.
%25s:%-5d AUECSUMO: ********* Window Initialized *********
%25s:%-5d AUECSUMO::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECSUMO: ********* Reset begins *********
AUECSUMO: state variables have finite values (1 if True): %u
AUECSUMO: ref-signal buffers have finite values (1 if True): %u
AUECSUMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECSUMO: ********* Reset ends *********
%25s:%-5d AUECSUMO: ********* Logging begins *********
AUECSUMO: logging (period, timestamp): (%f, %f) (s)
AUECSUMO: state variables have finite values (1 if True): %u
AUECSUMO: ref-signal buffers have finite values (1 if True): %u
AUECSUMO: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECSUMO: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECSUMO: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECSUMO: ********* Logging ends *********
%25s:%-5d AUECSUMO: AOPMode detected (non-realtime logging).
%s: sample rate = %f, frame size = %u
%s: sample rate is zero
%s: invalid FFT size %u
%s: frame size %u is not half of FFT size %u
%25s:%-5d AUBeamIt: Initialize.
%25s:%-5d Initialize called without setting setting BeamFormerCoeffs plist! Setting AU in Bypass mode.
%25s:%-5d Initialize called with properly set BeamFormerCoeffs plist.
%25s:%-5d The number of channels in the input format (%u) is not equal to the number of mics the beamformer expects (%u).
%25s:%-5d The number of channels in the output format (%u) not equal to 1.
%25s:%-5d The number of channels in the output format (%u) is larger than the number of uplink/selection beams (%u).
%25s:%-5d AUBeamIt: Successfully initialized.
%25s:%-5d AUBeamIt: Cleanup.
%25s:%-5d Getting property info for SubbandDOA failed (prop id: %d).
%25s:%-5d Getting property info for SubbandDOA_CF failed (prop id: %d).
%25s:%-5d Getting property EnableSubbandDOACalculation failed (prop id: %d).
%25s:%-5d Getting property SubbandDOA failed (prop id: %d).
%25s:%-5d Getting property SubbandDOA_CF failed (prop id: %d).
%25s:%-5d Setting property BeamformerCoeffs (prop id: %d).
%25s:%-5d BeamformerCoeffs successfully set.
%25s:%-5d Setting property EnableSubbandDOACalculation failed (prop id: %d). *inData should be UInt32. Provided inDataSize = %u.
%25s:%-5d Setting property EnableSubbandDOACalculation to %d (prop id: %d).
%25s:%-5d Setting property EnableSubbandDOACalculation failed (prop id: %d).
%25s:%-5d AUBeamItTD: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUBeamItFD: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUBeamItTD: (BFMicOut, BFLeeOut, AllUplinkBeams, AllSelectionBeams) is NOT finite: (%u, %u, %u, %u)
%25s:%-5d AUBeamItFD: (BFMicOut, BFLeeOut, AllUplinkBeams, AllSelectionBeams) is NOT finite: (%u, %u, %u, %u)
%25s:%-5d AUECMicRef: Initialize.
%25s:%-5d AUECMicRef: Using logPeriod of (%g)s as specified in defaults write ecmicref_log_period_in_seconds.
%25s:%-5d AUECMicRef: Successfully initialize.
%25s:%-5d AUECMicRef: Cleanup.
%25s:%-5d AUECMicRef: Reset.
%25s:%-5d AUECMicRef::ProcessMultipleBufferLists error - wrong (%u) block size expected (%u)
%25s:%-5d AUECMicRef: ********* Reset begins *********
AUECMicRef: state variables have finite values (1 if True): %u
AUECMicRef: ref-signal buffers have finite values (1 if True): %u
AUECMicRef: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMicRef: ********* Reset ends *********
%25s:%-5d AUECMicRef: ********* Logging begins *********
AUECMicRef: logging (period, timestamp): (%f, %f) (s)
AUECMicRef: state variables have finite values (1 if True): %u
AUECMicRef: ref-signal buffers have finite values (1 if True): %u
AUECMicRef: EC output buffers have valid values (1 if True): %u
%25s:%-5d AUECMicRef: ERLE measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUECMicRef: energy measure in [dB] for ref-channel %u : %f
%25s:%-5d AUECMicRef: ********* Logging ends *********
%25s:%-5d AUECMicRef: AOPMode detected (non-realtime logging).
%s:%i will try to construct
%s:%i set the default ioFormat
%s:%i show internal params set to %u
%s:%i constructed
%s:%i cleanup
%s:%i will try to initialize
%s:%i check input and output formats
%s:%i input and output formats must match
%s:%i initialize base
%s:%i update local parameter state before creating the processing graph
%s:%i initialize processing graphs
%s:%i InitializeProcessingGraphs failed
%s:%i allocate temporary ABL
%s:%i update local parameter state after initializing the processing graph
%s:%i initialized
%s:%i initialization duration %lld ms
%s:%i processing latency is %f seconds (%u samples)
%s:%i total latency is %f seconds
%s:%i The host requested latency before the real value is available!
%s:%i AU latency is equal to the processing graph latency
%s:%i Use processing graph latency as an estimate of the tail time
%s:%i set CoreAudio reporter IDs - %s
%s:%i set CoreAudio reporter time period - %f
%s:%i error %i while restoring state
%s:%i tuning mode set to %u
%s:%i processing graphs already created and tuning mode changed from %u to %u
%s:%i processing graphs need to be re-created
%s:%i a single input ABL and a single output ABL is expected, receiver (%u, %u)!
%s:%i bypass graph not initialized
%s:%i bypass preflight gave invalid number of frames to process!
%s:%i processing failed, caught unknown exception
%s:%i processing failed, caught std::exception: %s
%s:%i processing failed, caught std::system_error: %s
%s:%i processing failed, caught CAXException
%s:%i processing failed, caught DSPGraph::Exception: %s
%s:%i processing graph not initialized
%s:%i blending graph not initialized
%s:%i processing preflight gave invalid number of frames to process!
%s:%i blending preflight gave invalid number of frames to process!
%s:%i failed to load nnet plist
%s:%i Number of input channels in the plist (%u) is different from the expected number of input channels (%u)
%s:%i Number of output channels in the plist (%u) is different from the expected number of output channels (%u)
%s:%i create processing graph
%s:%i processing graph was not created
%s:%i setup processing graph
%s:%i setting graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i setup dereverb box
%s:%i drev preset is empty, will set %s to bypass
%s:%i failed to load nnet preset
%s:%i setup processing boxes
%s:%i set modelNetPathBase override on box (%s) to (%s)
%s:%i couldn't find processing box (%s)
%s:%i configure & initialize processing graph
%s:%i setup MWF box
%s:%i couldn't find delay box %s
%s:%i failed to load dnos preset
%s:%i couldn't find box (%s)
%s:%i Delay box %s latency: %f seconds (%u ticks)
%s:%i Processing box %s latency: %f seconds (%u ticks)
%s:%i Delay is not matching processing box latency!
%s:%i processing graph setup failed, caught unknown exception
%s:%i processing graph setup failed, caught std::exception: %s
%s:%i processing graph setup failed, caught std::system_error: %s
%s:%i processing graph setup failed, caught CAXException
%s:%i processing graph setup failed, caught DSPGraph::Exception: %s
%s:%i create blending graph for input/processed mix
%s:%i blending graph was not created
%s:%i setup blending graph
%s:%i setting blending graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i configure blending graph
%s:%i initialize blending graph
%s:%i set the blending parameter
%s:%i blending graph setup failed, caught unknown exception
%s:%i blending graph setup failed, caught std::exception: %s
%s:%i blending graph setup failed, caught std::system_error: %s
%s:%i blending graph setup failed, caught CAXException
%s:%i blending graph setup failed, caught DSPGraph::Exception: %s
%s:%i create bypass with latency graph for input/processed mix
%s:%i bypass with latency graph was not created
%s:%i setup bypass with latency graph
%s:%i setting bypass with latency graph slice timing with max slice duration (%u), sample rate (%u)
%s:%i configure bypass graph
%s:%i processing graph latency is %u samples
%s:%i initialize bypass with latency graph
%s:%i bypass graph setup failed, caught unknown exception
%s:%i bypass graph setup failed, caught std::exception: %s
%s:%i bypass graph setup failed, caught std::system_error: %s
%s:%i bypass graph setup failed, caught CAXException
%s:%i bypass graph setup failed, caught DSPGraph::Exception: %s
%s:%i tuning dir path: %s
%s:%i failed to flush logs due to exception
%s:%i internal CAReporterID is already set to %llu
%s:%i will setup internal CAReporterID
%s:%i interal CAReporterID successfully initialized
%s:%i will teardown the internal CAReporterID
%s:%i internal CAReporterID destroyed
%s:%i will create metrics reporter
%s:%i set CoreAudio reporter IDs to internal reporter - %s
%s:%i metrics reporter created
%s:%i will try to register internal AUs
%s:%i registration successful
%s:%i AUNeuralNet registration failed
%s:%i AUDenoise registration failed
%s:%i AUDereverb registration failed
%s:%i SIMULATOR_ROOT is empty
%s:%i SIMULATOR_ROOT: %s
%s:%i load dictionary from %s
%s:%i loading from %s failed, caught unknown exception
%s:%i loading from %s failed, caught std::exception: %s
%s:%i loading from %s failed, caught std::system_error %d: %s
%s:%i loading from %s failed
%25s:%-5d Successfully retrieved sample rate (%iHz).
%25s:%-5d Sample rate retrieved ambiguously (%iHz).
%25s:%-5d Sample rate is not present in the dictionary.
%25s:%-5d Profile vector is not present in the dictionary.
%25s:%-5d Successfully retrieved profile vector (length %i).
[%p] failed to initialize - I/O sample rates must be equal
[%p] failed to initialize - I/O channel counts must be equal
[%p] cannot process %u input channel streams (expected channel stream count is %u)
[%p] cannot process %u output channel streams (expected channel stream count is %u)
%25s:%-5d AUEndpointVAD: The model dictionary property is unset (required).
%25s:%-5d Initialization failed. Setting the AU to bypass mode.
%25s:%-5d AULoudnessWarrior construction starting
%25s:%-5d Starting Initializing with %d ins, %d outs
%25s:%-5d Could not initilize kernel
%25s:%-5d Changed config plist successfully
%25s:%-5d Could not queue staged kernel!
%25s:%-5d Could not create staged kernel!
%25s:%-5d No valid .plist file set, going to passthrough mode and bypassing LoudnessWarrior
%25s:%-5d No anchor gains defined!
%25s:%-5d No entry in biquad .plist for sample rate of %.0f!
%25s:%-5d Bass or treble BQs not defined correctly for sample rate of %.0f!
%25s:%-5d Invalid bass EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid treble EQ sizes: Anchor gains size = %lu, # BQs = %lu
%25s:%-5d Invalid bass EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid bass EQ sizes: BQ vectors must be same length
%25s:%-5d Invalid treble EQ sizes: BQ vector has %lu coefficients
%25s:%-5d Invalid treble EQ sizes: BQ vectors must be same length
%25s:%-5d Time-frequency smoothing update failed
%25s:%-5d HID eventType %li mach time hid_ts=%llu; callback_ts=%llu; latency_ns=%llu; diff=%llu; diff_ns=%llu
%25s:%-5d hid_us=%f; callback_us=%f; latency_us=%f;
%25s:%-5d started
%25s:%-5d setup failed!
%25s:%-5d stopping
%25s:%-5d Invalid number (%u) of input buses requested. We only support 1 bus.
%25s:%-5d Invalid number (%u) of output buses requested. We only support 1
2 buses.
%25s:%-5d Start reading NeuralNetVAD parameters.
%25s:%-5d NeuralNetVAD: Loading SampleRate from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading threshold from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve threshold."
%25s:%-5d Successfully retrieved threshold (%g).
%25s:%-5d NeuralNetVAD: Loading HangA01 from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve HangA01."
%25s:%-5d Successfully retrieved mHangA01 (%g).
%25s:%-5d NeuralNetVAD: Loading HangA10 from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve HangA10."
%25s:%-5d Successfully retrieved HangA10 (%g).
%25s:%-5d NeuralNetVAD: Loading WaitFrames from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve WaitFrames."
%25s:%-5d Successfully retrieved WaitFrames (%u).
%25s:%-5d NeuralNetVAD: Loading NumLayers from topLevelDict.
%25s:%-5d Successfully retrieved NumLayers (%u).
%25s:%-5d NeuralNetVAD: Loading BlockSize from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading NumContextFrames from topLevelDict.
%25s:%-5d NeuralNetVAD: Loading DeltaFeature from topLevelDict.
%25s:%-5d DeltaFeature not found, being set to (%u).
%25s:%-5d Successfully retrieved DeltaFeature (%u).
%25s:%-5d NeuralNetVAD: Loading InputScale from topLevelDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Failed to retrieve InputScale."
%25s:%-5d Successfully retrieved InputScale (%g).
%25s:%-5d NeuralNetVAD: Loading forgetting factor Lambda_TC from topLevelDict.
%25s:%-5d forgetting factor Lambda_TC not found, being set to (%g).
%25s:%-5d NeuralNetVAD: Loading UseDirectionalMode from topLevelDict.
%25s:%-5d UseDirectionalMode not found, being set to (%g).
%25s:%-5d Successfully retrieved UseDirectionalMode (%g sec.).
%25s:%-5d NeuralNetVAD: Loading DirectionalTargetElevation from topLevelDict.
%25s:%-5d DirectionalTargetElevation not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalTargetElevation (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalTargetAzimuth from topLevelDict.
%25s:%-5d DirectionalTargetAzimuth not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalTargetAzimuth (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalModelType from topLevelDict.
%25s:%-5d DirectionalModelType not found, being set to (%d).
%25s:%-5d Successfully retrieved DirectionalModelType (%d).
%25s:%-5d NeuralNetVAD: Loading Directional Model Shape Parameter from topLevelDict.
%25s:%-5d DirectionalModelShapeParamer not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalModelShapeParamer (%g).
%25s:%-5d NeuralNetVAD: Loading DirectionalModelConditionalTargetPrior from topLevelDict.
%25s:%-5d DirectionalModelConditionalTargetPrior not found, being set to (%g).
%25s:%-5d Successfully retrieved DirectionalModelConditionalTargetPrior (%g).
%25s:%-5d NeuralNetVAD: Loading CombinedProbabilityMode from topLevelDict.
%25s:%-5d CombinedProbabilityMode not found, being set to (%g).
%25s:%-5d Successfully retrieved CombinedProbabilityMode (%g sec.).
%25s:%-5d NeuralNetVAD: Loading SpatialSPPCutOff from topLevelDict.
%25s:%-5d SpatialSPPCutOff not found, being set to (%g).
%25s:%-5d Successfully retrieved SpatialSPPCutOff (%g).
%25s:%-5d NeuralNetVAD: Loading VADinAudioOutputMode from topLevelDict.
%25s:%-5d mVADinAudioOutputMode not found, being set to (%u).
%25s:%-5d Successfully retrieved mVADinAudioOutputMode (%u).
%25s:%-5d NeuralNetVAD: Loading OutputMaskMode from topLevelDict.
%25s:%-5d mOutputMaskMode not found, being set to (%u).
%25s:%-5d Successfully retrieved mOutputMaskMode (%u).
%25s:%-5d NeuralNetVAD: Loading FFT2Mel matrix from topLevelDict.
%25s:%-5d EXCEPTION (%d) [(mInputSize != mNumMelBands*2) is false]: "mInputSize is wrong."
%25s:%-5d EXCEPTION (%d) [(mInputSize != mNumMelBands*mNumContextFrames*(1+mDeltaFeature)) is false]: "mInputSize is wrong."
%25s:%-5d Finish reading NeuralNetVAD parameters: SampleRate=(%d); Threshold=(%4.2f); NumLayers=(%d); WaitFrames=(%d); BlockSize=(%d); Context=(%d); FeatSize=(%d)
[%s|%s] SetProperty (scope=0, element=0): head tracking property (%u) not writable
%25s:%-5d AUDenoise: Initialize.
%25s:%-5d AUDenoise: Using logPeriod of (%g)s as specified in defaults write pmwf_log_period_in_seconds.
%25s:%-5d AUDenoise: Successfully initialized.
%25s:%-5d AUDenoise: Cleanup.
%25s:%-5d Input size of DenoiseInputMaskEstimate is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoiseInputMaskEstimate_CF is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoisePostMaskEstimate is not equal to the the expected size (prop id: %u).
%25s:%-5d Input size of DenoisePostMaskEstimate_CF is not equal to the the expected size (prop id: %u).
%25s:%-5d AUDenoise: (InputSignals, EchoEstimates) is NOT finite: (%u, %u)
%25s:%-5d AUDenoise: (OutputSignals, PMWFLeeOut) is NOT finite: (%u, %u)
%25s:%-5d AUDenoise: Initialize PMWF Classes.
%25s:%-5d AUDenoise: ********* Logging begins *********
AUDenoise: logging (period, timestamp): (%f, %f) (s)
%25s:%-5d AUDenoise: SNR measure in [dB] for mic-channel %u , internal: %f (dB), external: %f (dB)
%25s:%-5d AUDenoise: ********* Logging ends *********
%25s:%-5d Unknown error thrown
%25s:%-5d Unknown status thrown: %d
%25s:%-5d CircArray Exception: %s (error = %d)
%25s:%-5d Failed to set new config plist: %s (%d)
%25s:%-5d Failed to queue staged kernel
%25s:%-5d Failed to create new kernel: %s (%d)
%25s:%-5d AUCircArray: (InputSignals) is NOT finite
%25s:%-5d AUCircArray: (OutputSignals) is NOT finite
[%p] will construct with M=%u, K=%u
%25s:%-5d Detailed logging set to %d.
%25s:%-5d EXCEPTION (%d) [layer.mWeightsQuantized.size() != weightsNumberOfCoefficients is false]: "NeuralNetBNNS: Layer (%u), number of weights (%lu) is not matching the required number of weights (%lu)."
%25s:%-5d EXCEPTION (%d) [layer.mBiasVector.size() != weightsSizeOutput is false]: "NeuralNetBNNS: Layer (%u), bias size (%lu) is not matching the weight output vector size (%lu)."
%25s:%-5d EXCEPTION (%d) [mDNNLayer[layerIdx].mFilter == nullptr is false]: "NeuralNetBNNS: Layer (%u), filter not created."
%25s:%-5d NeuralNetBNNS: Embeddings not supported in BNNS mode
%25s:%-5d Construct NeuralNetEspresso.
%25s:%-5d Streaming mode None: no initialization required.
%25s:%-5d Streaming mode CopyOutStateToInState: bind input and output states.
%25s:%-5d EXCEPTION (%d) [ioStates_ref.get_cf() == nullptr is false]: "Failed to retrieve InputOutputStates."
%25s:%-5d EXCEPTION (%d) [numStates_ref.get_cf() == nullptr is false]: "Failed to retrieve NumStates from InputOutputStates."
%25s:%-5d Successfully retrieved number of states (%d).
%25s:%-5d Read input and output state names.
%25s:%-5d EXCEPTION (%d) [state_ref.get_cf() == nullptr is false]: "Missing dictionary (%s)."
%25s:%-5d Found the dictionary (%s).
%25s:%-5d EXCEPTION (%d) [inputName_ref.get_cf() == nullptr is false]: "Failed to retrieve InputName from (%s)."
%25s:%-5d Successfully retrieved input state name (%s).
%25s:%-5d EXCEPTION (%d) [outputName_ref.get_cf() == nullptr is false]: "Failed to retrieve OutputName from (%s)."
%25s:%-5d Successfully retrieved output state name (%s).
%25s:%-5d Bind buffers for input and output states.
%25s:%-5d Binding buffer for input state %s
%25s:%-5d Binding buffer for output state %s
%25s:%-5d EXCEPTION (%d) [inState.size() != outState.size() is false]: "Input state %s size (%zu) not matching the output state size %s (%zu)."
%25s:%-5d Max state size %u
%25s:%-5d EXCEPTION (%d): "Unknown streaming mode (%d)."
%25s:%-5d NeuralNetEspresso constructed.
%25s:%-5d Destructing.
%25s:%-5d Compute engine name (%s) not understood. Defaulting to CPU.
%25s:%-5d Trying to set embedding vector, but embedding buffer is not available.
%25s:%-5d Trying to set embedding value, but embedding buffer is not available.
%25s:%-5d EXCEPTION (%d): "Input size (%u) and the actual NN input size (%u) not maching!"
%25s:%-5d EXCEPTION (%d): "Only Float32 inputs supported."
%s:%-5d Number of Input Elements provided is less than the Minimum required.
%s:%-5d Number of Input Elements provided is greather than the Maximum supported.
%s:%-5d Number of Output Elements provided is less than the Minimum required.
%s:%-5d Number of Output Elements provided is greather than the Maximum supported.
%s:%-5d Input Format is Invalid.
%s:%-5d Format for Output Element %u is Invalid.
%s:%-5d Successfully retrieved Algorithm Core Type MicIssueDetectorCorev1 
%s:%-5d Unsupported Algorithm Core Type Provided
%s:%-5d Failed to retrieve blocked mic profile data.
%s:%-5d Failed to retrieve %s.
%s:%-5d Failed to retrieve %s, using default value.
%25s:%-5d _vp: [iphone/ipad simulator] Hardware unknown.  Using default configuration!
%25s:%-5d Hey I just met you, and this is crazy, but here's my component 'Audio - DSP', so file a radar maybe.
%25s:%-5d ASSERTION FAILURE [(!(fftSize > 2048 * 4)) != 0 is false]: 
%25s:%-5d ASSERTION FAILURE [(!(nDftBuffers > 256)) != 0 is false]: 
%25s:%-5d Error initializing ASA features DSP chain: %s
%25s:%-5d Audio sampling rate must be 8000 Hz or higher.
%25s:%-5d AUEndpointVAD2: The top-level plist property is unset. Setting the AU to bypass mode (no VAD outputs).
%25s:%-5d The top-level parameter data structure is not saved internally! Instead, you should query specific AU properties individually.
%25s:%-5d kAUEndpointVAD2Property_EventHandler is write-only.
%25s:%-5d kAUEndpointVAD2Property_DoneProcessingAudioForNonRealTimeDecode is write-only.
%25s:%-5d kAUEndpointVAD2Property_RecurrentVADSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_RecurrentVADNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_EndpointerSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD2Property_EndpointerNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d Incorrect number of input samples! Received %d, but expected %d.
%25s:%-5d Current elevation not set to (%f), it remains at the current value (%f). Elevation must be in range [-90, 90].
%25s:%-5d Shape parameter not set to (%f), it remains at the current value (%f). Valid range is >= 0.
%25s:%-5d Conditional target prior not set to (%f), it remains at the current value (%f). Valid range is [0, 1].
%25s:%-5d nnSoftVAD has value (%f). Valid range is [0, 1]. Skipping update.
%25s:%-5d Invalid value for combined probability mode (%u).
%s:%i ---
%s:%i mFOVWasSetLast = %i
%s:%i Setting FOV %f on mDominanceZoom
%s:%i Setting zoom amount %f on mDominanceZoom
%s:%i Done initializing result = %i
%s:%i ----
%s:%i Error %i while restoring state
%s:%i AUBase::SaveState didn't produce valid dictionary?
%s:%i Read param %i val %f from mDominanceZoom
%s:%i param ID %i outValue %f
%s:%i Setting manual zoom amount %f on mDominanceZoom
%25s:%-5d Enabling recording
%25s:%-5d Plist has a bad render mode selectino
%25s:%-5d Compiling graph
%25s:%-5d Plist has unknown outputChannelLayout. Using Binaural by default
%25s:%-5d Orientation %u is smaller than the minimum allowed value (%u)
%25s:%-5d Orientation %u is larger than the maximum allowed value (%u)
%25s:%-5d Camera direction %u is larger than the maximum allowed value (%u)
%25s:%-5d Initialization failed, top level plist is not set.
%25s:%-5d AUBeamItTD: in BeamformerTD::MakePHATBeam. Not sure what to do here. For now just run the same thing as SRP mode.
%25s:%-5d AUBeamItTD: in BeamformerTD::MakeLSDDBeam. Not sure what to do here. For now just run the same thing as SRP mode.
%25s:%-5d  <vp> Starting ... 
%25s:%-5d  <vp> vp debug features are %s
%25s:%-5d  <vp> Constructed!
%25s:%-5d  <vp> VoiceProcessorV2 destroyed!
%25s:%-5d  <vp> Begin self-reinit (SetMode)
%25s:%-5d  <vp> End self-reinit (SetMode)
%25s:%-5d  <vp> operation mode = %i
%25s:%-5d  >vp> setdownlinkvolume failed because mSignaler can't be acquired within %u microseconds
%25s:%-5d  <vp> setdownlinkvolume called with: user volume = %f
%25s:%-5d  <vp> setdownlinkvolume: no need to change volume = %f
%25s:%-5d  >vp> %s reference signal was not expected!
%25s:%-5d  <vp> append signal (%s): <silence optimization, generating zeroes> num frames received = %u.
 hwio buff size = %u
 process callcount = %lu
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK WARNING: TRANSIENT INCORRECT BLOCK CONFIG
%25s:%-5d  >vp> warning: append signal (%s): <transient block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
%25s:%-5d  >vp> CoreAudio: ***** VP BLOCK SERIOUS ERROR: BAD BLOCK CONFIG for over %.6f seconds *****
%25s:%-5d  >vp> append signal (%s): <block size mismatch btwn expected and actual> num frames received  = %u (data byte size = %u).
 hwio buff size = %u
hwio ref buff size  = %u.
 hwio mic buff size = %u
mic asbd = %s, ref asbd = %s
 process callcount = %u
%25s:%-5d  >vp> append signal (%s): <block size no longer mismatched between expected and actual> num frames received = %u. hwio buff size = %u
%25s:%-5d invalid format
%25s:%-5d frontendformatconverter : error dst channel index (%d) goes beyond number of channels in out ABL (%d)
 appendsignal: ERROR too many interleaved channels?! data disagrees with ASBD set during InitializeHWInput
%25s:%-5d failed to downmix %u reference signals
%25s:%-5d  >vp> ref sample time jumped backwards, expected sample time: %.2lf, input sample time: %.2lf, input host time: %lld, input rate scalar: %.2lf, input flag: %d
%25s:%-5d  >vp> error %d getting input safety offset
%25s:%-5d  >vp> error %d getting output safety offset
%25s:%-5d  <vp> Input safety offset of the aggregate device is %u
%25s:%-5d  <vp> Output safety offset of the aggregate device is %u
%25s:%-5d  >vp> error %d getting IOCycleUsage
%25s:%-5d  >vp> error %d getting input latency
%25s:%-5d  >vp> error %d getting output latency
%25s:%-5d  <vp> Input latency of the aggregate device is %u
%25s:%-5d  <vp> Output latency of the aggregate device is %u
%25s:%-5d  <vp> input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, tap stream latency=%u, safety offset=%u, tap stream input safety offset=%u}
%25s:%-5d  <vp> input {deviceID=%d, latency=%u, safety offset=%u}, output {deviceID=%d, output latency=%u, safety offset=%u}
%25s:%-5d  <vp> iocycleusage = %f
%25s:%-5d  >vp> negative mCorrectedPresentationDelay (%d) clamped to zero
%25s:%-5d  <vp> realworld correction=%f, corrected latency=%d
%25s:%-5d  <vp> after adjusting for ref-mic delay=%d samples (%f msec), corrected latency=%d, additional mic delay(@hwmic rate)=%u
%25s:%-5d  <vp> InstantiateAU: couldn't instantiate 'aufx'|%s AU
%25s:%-5d  >vp> InstantiateAU: couldn't instantiate 'aufx'|%s AU
%25s:%-5d  <vp> InstantiateAU: couldn't find component 'aufx'|%s AU
%25s:%-5d  >vp> InstantiateAU: couldn't find component 'aufx'|%s AU
%25s:%-5d  <vp> called initialize
%25s:%-5d  <vp> called initializedlp
%25s:%-5d  <vp> Updating hwRef to match dlMix format:
 was: %s
 now: %s
%25s:%-5d  <vp> Updating hwRef to match extHwRef format:
 was:%s
 now:%s
%25s:%-5d  <vp> _vp<WARNING>: The DLNS isn't configured at an fft-friendly blocksize (%d vs %d), disabling it for now
%25s:%-5d  >vp> Error in setting proerty ID %u to AU %s error %d
%25s:%-5d  >vp> Error in setting parameter ID %u to AU %s error %d
%25s:%-5d  >vp> instantiateandconfigureeffectau: error (%d) loading FIR coefficients!!! Setting FIR to passthrough
%25s:%-5d  >vp> Unable to set not to allocate internal AU buffers with error (%d)
%25s:%-5d  >vp> Error in initializing AU %s error %d
%25s:%-5d  <vp> instantiateandconfigureeffectau (%s): warning %d due to non-FFT friendly blocksize
%25s:%-5d  <vp> InstantiateAndConfigureAuxAU: %s aux au failed to set property
%25s:%-5d  <vp> use optimized block size for face plant =  %s
%25s:%-5d  >vp> VoiceProcessorV2::DumpToFile() - Dump file is not available
%25s:%-5d Assertion failed: currently supported values are outputCount < inputCount < 2*outputCount
%25s:%-5d Assertion failed: invalid input lengths
%25s:%-5d Assertion failed: olaStack wrong size
%25s:%-5d Assertion failed: ola wrong size
%25s:%-5d Assertion failed: bad audio position
%25s:%-5d Assertion failed: bad window size
%25s:%-5d Assertion failed: bad input length
%25s:%-5d Assertion failed: bad internal state size
%25s:%-5d Assertion failed: bad output size
%25s:%-5d Assertion failed: mis-matched output sizes
%25s:%-5d max block size %lli
%25s:%-5d incoming defaults is nullptr; ignoring
%25s:%-5d Tuning sample rate %f, detection input to removal input latency %f
%25s:%-5d Overriding plist value for detection input to removal input latency %f to %f
%25s:%-5d Loaded tuning with ID '%s'
%25s:%-5d Latency is %lli samples / %f seconds
%25s:%-5d Ring buffer size is %lli samples / %f seconds
%25s:%-5d Huge value:ringBufferSizeSInt64 = %llu
%25s:%-5d started successfully
%25s:%-5d CR: Failed to load plist! Bypass operation
%25s:%-5d CR: disabled by defaults write
%25s:%-5d Record mode is %i
%25s:%-5d creating recorders...
%25s:%-5d recorders %u
%25s:%-5d HID event queue full!
 inFramesToProcess is too big
 need valid ring buffers
%25s:%-5d Huge value:inNumFrames = %llu
 invalid ring buffer index
%25s:%-5d Huge value:osClickTimeSamples = %llu
%25s:%-5d huge eventTimeSamples! %llu
 click must be detected in time for the removal to complete without writing behind the read head.
%25s:%-5d mitigating click of type %li at %lli
 Experimental assertion: if the plist is incorrect then it's possible for the gap filler to 'write behind the read head' and erroneously fill in two non-continugous regions. this assertion hopes to check for this condition.
%25s:%-5d gap filler blowup detected; leaving click in
%25s:%-5d latestSample           %lli
%25s:%-5d earliestSampleToModify %lli
%25s:%-5d earliestSampleToStore  %lli
%25s:%-5d mBlockSize             %lli
 error in ring buffer size calculation
 error in latency calculation
%25s:%-5d click type %li: required detection input: earliest start %lli; latest end %lli
%25s:%-5d click type %li: training region start %lli; end %lli
%25s:%-5d click type %li: required removal input: earliest start %lli; latest end %lli
%25s:%-5d click type %li: possible detection range %lli to %lli
%25s:%-5d click type %li: removalInputRegion %lli to %lli
%25s:%-5d click type %li: possible removal range %lli to %lli
%25s:%-5d %p
Reconfiguring non-existent SharedIRBus channel
%25s:%-5d CLSPKernel_v5::CLSPKernel_v5
%25s:%-5d Ch %d, Parameter updater could not be created. %s. defaulting to Open Loop
%25s:%-5d Ch %d, ConvoyAdaptiveDisplacement requested but configuration missing, defaulting to Open Loop
%25s:%-5d Ch %d, IV only AdaptiveDisplacement not supported, defaulting to Open Loop
%25s:%-5d Ch %d, Convoy calibration parameters within range
%25s:%-5d Ch %d, Convoy calibration parameters out of range or not Coff < CMin < CMax. Defaulting to Open loop displacement. CMax=%f, CMin=%f, Coff=%f
%25s:%-5d Ch %d, Convoy calibration parameters not present
%25s:%-5d Ch %d, Set up for ConvoyAdaptiveDisplacement
%25s:%-5d Ch %d, Set up for OpenLoopDisplacement
%25s:%-5d CLSPKernel_v5::CalcCoeffs
%25s:%-5d CLSPKernel_v5::CalcCoeffsSyncDisp
%25s:%-5d CLSPKernel_v5::Reset
%25s:%-5d System not configured properly for Convoy input stream, clParams=%p, convoyParams=%p, cal=%p, ConvoyCal=%p
%25s:%-5d Using synchronized worst case displacement controller values w_0=%f, x_ul_norm=%f, Q_d=%f, G_bw=%f
%25s:%-5d Analysis period %f is not integer multiple of sine period
%25s:%-5d Safe limit offset = %f, should be negative. Setting to 0.
%25s:%-5d Safe limit %f > thermal limit %f. Setting Safe limit = thermal limit.
%25s:%-5d Delay %f ms at fs=%f is bigger than delay buffer of %u samples
%25s:%-5d Size of delay line %d
created
destroyed
failed to set spatial metadata with status %u
The inData passed to SetProperty is null.
failed to set spatial metadata with status %d
set CoreAudio reporter IDs - %s
set CoreAudio reporter time period - %f
At least one input bus, bus1, is need. It is a required input
Input bus must be mono
At least one output bus, bus1, is need. It is a required output
Output bus must be mono
failed to flush logs due to exception
failed to flush "%s"
%25s:%-5d AUSpeakerProtectionV3::AUSpeakerProtectionV3
%25s:%-5d AUSpeakerProtectionV3::~AUSpeakerProtectionV3
%25s:%-5d AUSpeakerProtectionV3::Initialize
%25s:%-5d sample rate of input buses doesn't match
%25s:%-5d Fmt1: %s
%25s:%-5d Fmt2: %s
%25s:%-5d Input and output audio formats don't match.
%25s:%-5d Using defaults write logging level: %d
%25s:%-5d Logging level set to: %d
%25s:%-5d CPMS file logging enabled.
%25s:%-5d Speaker telemetry data order not provided from property; assuming the default layout.
%25s:%-5d kConvoyExpect5Streams is signalled; adding the Convoy PDM signal to the layout.
%25s:%-5d Telemetry bus layout: [ %s ]
%25s:%-5d Using speaker gain-link grouping from the plist: [ %s ]
%25s:%-5d Speaker gain-link grouping not set; using default (all in group 0).
%25s:%-5d We are all-open loop, or this device does not use SpTS for speaker calibration. MG not queried.
%25s:%-5d This instance is ideally closed-loop; setting up the closed-loop ThermalStateVector_v3.
%25s:%-5d This instance is ideally open-loop; setting up the open-loop ThermalStateVector_v3.
%25s:%-5d CPMS power control (parameter) is enabled.
%25s:%-5d CPMS power control (parameter) is closed loop.
%25s:%-5d Initializing AU with amplifier model: [ %s ]
%25s:%-5d Initializing AU with dummy amplifier model.
%25s:%-5d Ignoring telemetry, as: [ %s ]
%25s:%-5d Could not create kernels, because no plist has been successfully applied. (You must set a plist and re-initialize, or we will apply 20dB of attenuation during processing.)
%25s:%-5d Creating audio logs failed: %s
%25s:%-5d Override SpCl Property with defaults clsp_srdc %f
%25s:%-5d Override missing SpCl Property with defaults clsp_srdc %f
%25s:%-5d Override SpCl Property with defaults clsp_caltemp %f
%25s:%-5d Override SpCl Property with defaults clsp_srdc_r %f
%25s:%-5d Override missing SpCl Property with defaults clsp_srdc_r %f
%25s:%-5d Override SpCl Property with defaults clsp_caltemp_r %f
%25s:%-5d Closed loop checks Ch %d passed: mCLParams.size=%d, nKern=%d, SpClProps.size=%d
%25s:%-5d Closed loop checks failed: mCLParams.size=%d, nKern=%d, SpClProps.size=%d
%25s:%-5d Ch %d, SpClProps:
%25s:%-5d Ch %d, Using closed loop parameters refTemp=%f, invTempCo=%f, RebRef=%f
%25s:%-5d Using SpTS calibration: Requested displacement controller type (%u) for Ch %u is overridden to kOpenLoopDisplacement.
%25s:%-5d Using SpTS calibration: Requested displacement controller for Ch %u was already kOpenLoopDisplacement, as needed.
%25s:%-5d Repair flag is true. Disable closed loop.
%25s:%-5d Ch %d, Using open loop kernel
%25s:%-5d AUSpeakerProtectionV3::Cleanup
%25s:%-5d AUSpeakerProtectionV3::Reset
%25s:%-5d Enable CL -> CLThermalEnabled, PilotToneEnabled: %s
%25s:%-5d Flushing a log.
%25s:%-5d AUSpeakerProtectionV3::SetDefaultFormats
%25s:%-5d AUSpeakerProtectionV3::GetParameterInfo
%25s:%-5d AUSpeakerProtectionV3::SetParameter(%d): %f -> %f
%25s:%-5d Part AUSpeakerProtectionV3::SetParameter(%d): %f -> %f
%25s:%-5d Part AUSpeakerProtectionV3::SetParameter(%d): partElement is null
%25s:%-5d AUSpeakerProtectionV3::SetParamDefaults
%25s:%-5d AUSpeakerProtectionV3::ApplyParameters(): Params up to date. paramSeed=%d; mParamsUpdated=%d
%25s:%-5d Preset does not match AU version. Skipping RestoreState
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Bypass %s->%s
%25s:%-5d Set TransducerCalibration property
%25s:%-5d Set SpeakerCalibration property: Applying calibration data on top of SpTS. Not as intended.
%25s:%-5d Set TransducerCalibrationCF property
%25s:%-5d AUSpeakerProtectionV3::SetProperty - VP Mode %s->%s
%25s:%-5d clsp_enable_closed_loop default exists. Ignoring set property for EnableClosedLoop
%25s:%-5d AUSpeakerProtectionV3::SetProperty - EnableClosedLoop %s->%s
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Telemetry data order. Set as: [ %s ]
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Telemetry data order. Could not be fully parsed (invalid data?).
%25s:%-5d AUSpeakerProtectionV3::SetProperty - IgnoreTelemetry. Set as: [ %s ].
%25s:%-5d AUSpeakerProtectionV3::SetProperty - IgnoreTelemetry. Could not be fully parsed (invalid data?).
%25s:%-5d AUSpeakerProtectionV3::SetProperty - Thermal State Override %u->%u
%25s:%-5d AUSpeakerProtectionV3::SetProperty - CPMSPowerBudget. Could not be fully parsed (invalid data?).
%25s:%-5d SpCl property size %d less than expected SpCl header size %d
%25s:%-5d SpCl property data is null
%25s:%-5d inDataSize %d < expected size %d
%25s:%-5d inDataSize %d does not match expected size %d
%25s:%-5d SpCl version not recognized in SpCl header: 0x%x
%25s:%-5d Failed to parse speaker calibration data
%25s:%-5d Cannot get HWParam key: %s
%25s:%-5d scope is null
%25s:%-5d Number of channels key does not match plist number channels
%25s:%-5d ChannelID key does not match channel order
%25s:%-5d Could not read CLParams for ch %zul
%25s:%-5d InitCLParamsFromPlistV7
%25s:%-5d Cannot get CLParams Key
%25s:%-5d Ch %d, CLParams:
%25s:%-5d InitCLParamsFromPlistV8
%25s:%-5d SPP plist version %d is not supported.
%25s:%-5d Failed to get Version key.
%25s:%-5d Cannot get NumChannels Key
%25s:%-5d Cannot get value of NumChannels from the plist.
%25s:%-5d Successfully parsed the system plist params.
%25s:%-5d Successfully parsed all the per-speaker OL thermal params.
%25s:%-5d Successfully parsed all the per-speaker OL displacement params.
%25s:%-5d Applying system params:%s
%25s:%-5d Applying OL thermal params to channel %i:%s
%25s:%-5d Applying OL displacement params to channel %i:%s
%25s:%-5d Could not fully parse all essential plist params.
%25s:%-5d Successfully parsed all %lu the per-speaker CL params.
%25s:%-5d Successfully parsed all %lu ClosedLoopParameters structures.
%25s:%-5d Applying CL params to channel %i:%s
%25s:%-5d Successfully parsed all %lu speaker name params.
%25s:%-5d Could not fully parse speaker name information. Speakers will use their default names.
%25s:%-5d Successfully parsed all %lu gain-link group params.
%25s:%-5d Could not fully parse gain-link group information. All speakers will be in group 0.
%25s:%-5d Successfully parsed all %lu ignore-telemetry params.
%25s:%-5d Could not fully parse ignore-telemetry information. All speakers will honor telemetry.
%25s:%-5d Successfully parsed the power amp efficiency model: [ %s ]
%25s:%-5d Could not fully parse the power amplifier efficiency model. Will use the Dummy model.
%25s:%-5d Successfully parsed the power smoothing time constants: [ %s ]
%25s:%-5d Could not fully parse the power smoothing time constants. Will use the default
%25s:%-5d Successfully parsed the power gain attack release constants: [ %s ]
%25s:%-5d Could not fully parse the power gain attack release constants. Will use the default
%25s:%-5d Successfully parsed the smoothing strategy: [ %s ]
%25s:%-5d Could not fully parse the power smoothing strategy. Will use the default
%25s:%-5d Successfully parsed the power gain limit: %f
%25s:%-5d Could not fully parse the power gain limit. Will use the default
%25s:%-5d Successfully parsed the EnableDisplacementControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableDisplacementControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableThermalControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableThermalControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableCPMSControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableCPMSControl param. Will use the default.
%25s:%-5d Successfully parsed the EnableCPMSClosedLoopControl param: [ %s ]
%25s:%-5d Could not fully parse the EnableCPMSClosedLoopControl param. Will use the default.
%25s:%-5d NumInputElements not consistent with inNumberInputBufferLists
%25s:%-5d IV input format not SInt16 or Float32 - unsupported
%25s:%-5d Telemetry provided, but CheckBuffer() failed: telemetry numBuffers=%u, numCh=%u, dataBytes=%u, inFramesToProcess=%u. Closed loop disabled.
%25s:%-5d No Closed Loop inputs: numberInputBufferLists=%u, inputBufferList[1]=%p
%25s:%-5d mSimpleMeters failed to process; applying 20dB attenuation to this frame. (plist %s successfully applied | AU %s initialized)
%25s:%-5d AUSpeakerProtectionV3 bypassed!
%25s:%-5d Essential plist parsing did not succeed before initialization; applying 20dB attenuation until *successfully* reinitialized. (AU %s initialized)
%25s:%-5d We were initialized with %lu kernels (and for %u channels), but are receiving %u channels of audio. These should all have matched; applying 20dB attenuation to this frame.
%25s:%-5d IV data format not supported. But this should have been caught earlier
%25s:%-5d Closed loop thermals enabled but IV buffer missing or not correct. Disabling CL thermals.
%25s:%-5d Ch %d; T_CL=%6.2f; T_OL=%6.2f; TlimAdj=%6.2f; DGain=%5.2f; TGain=%6.4f; tgtgain=%4.2f, hlimgain=%f, sReb=%f
%25s:%-5d RenderTime %d, RenderTimeDelta %f, HostTime %f
%25s:%-5d IgnoreTelemetry property length (%lu) doesn't match channel count (%u). Ignoring telemetry.
%25s:%-5d AUSpeakerProtectionV3:: Found additional pilot tone params %s, applying to scope
%25s:%-5d Preference '%s %s' retrieved as %s
%25s:%-5d Failed to get Preference: '%s %s'. It exists, but is it the right type?
%25s:%-5d Preference: '%s %s' does not exist.
%25s:%-5d Failed to get Preference: '%s %s'. An exception was caught.
%25s:%-5d Found the %s plist entry for channel %i.
%25s:%-5d Successfully parsed the %s plist entry for channel %i.
%25s:%-5d Failed to fully parse the %s plist entry for channel %i.
%25s:%-5d i %d >= GetNumChannels() %zu
%s:%-5d created
%s:%-5d destroyed
%s:%-5d input and output formats do not match
%s:%-5d Session ID set by user : %llu
%s:%-5d Signal index set by user : %u
%s:%-5d Signal name set by user : %s
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %s -> %s
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %d -> %d
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %i -> %i
%25s:%-5d  <vp> DEFAULTS OVERRIDE (%s): %f -> %f
%25s:%-5d  >vp> couldn't load %s trim gains from MobileGestalt
%25s:%-5d  >vp> couldn't parse %s trim gains - CF data is not invalid
%25s:%-5d  >vp> couldn't parse %s trim gains - raw data is NULL
%25s:%-5d  <vp> loaded %s trim gains header from MobileGestalt: {version=%d, size=%d, count=%d}
%25s:%-5d  >vp> couldn't parse %s trim gains - data structure version %d is not supported
%25s:%-5d  >vp> couldn't parse %s trim gains - raw data size is not valid
%25s:%-5d  >vp> couldn't parse %s trim gains - data structure size is not valid
%25s:%-5d  <vp> loaded %s trim gains from MobileGestalt: {%s}
%25s:%-5d Assertion failed: index calculation error
%25s:%-5d Assertion failed: invalid output size
%25s:%-5d Assertion failed: intermediate is too small!
Magic cookie not supported on this platform
APAC metadata parsing exception: %s
APAC metadata parsing: applying the config
APAC metadata parsing: config applied
MD not supported on this platform
%s: applying
%s: applied
Metadata not supported on this platform
%25s:%-5d SetVideoMode was set on an SNR estimator that does not support it.
%25s:%-5d rebv=%f, reb20=%f desiredwin=%f, thermalsampleperiod=%d, tau=%f, cnt=%d, f_a_des=%f, f_a=%f, fs=%f
%s: ERROR: cannot process with %d output channels != 2
%s: ERROR: cannot process with %d output channels != %d
 FATAL - mFilterList size does not match inABL size!
%s: loaded preset %s
%s: could not load preset %s
%s: factory preset #%d not defined
%s: %s for factory preset #%d not found
Invalid/unset factory preset, no adjustment of tuning parameter has been made.
Invalid preset file path, no adjustment of tuning parameter has been made..
Could not load built-in speaker preset file: invalid model/product name!
%25s:%-5d Error processing lp noise estimate post-processor, possibly bypassed.
%25s:%-5d Failed to load noise estimate post-processor. Most likely wrong sample rate:%d. Will be bypassed
%25s:%-5d SetNoiseEstimator() failed.
%25s:%-5d SetSNREstimator() failed.
%25s:%-5d Unspecified error in SetNoiseEstimator().
%25s:%-5d Error in SetNoiseEstimator(): %s (%s)
%25s:%-5d Unspecified error in SetSNREstimator().
%25s:%-5d Error in SetSNREstimator(): %s (%s)
%25s:%-5d AULoudnessInNoise: Initialize
%25s:%-5d Setting property DATA (prop id: %d).
%25s:%-5d Linn Data successfully set.
 ca_require: %s %s
%25s:%-5d  <vp> setproperty: thermal budget on AU (%d); count = %u
%25s:%-5d  <vp> setproperty: AU (%d) enabled = %d, null = %d
%25s:%-5d  <vp> setproperty: thermal budget dict is empty
%25s:%-5d  <vp> setproperty: spatial metadata = "%s"
%25s:%-5d  <vp> setproperty: spatial metadata
%25s:%-5d  <vp> setproperty: media chat old volume:[%f], new volume:[%f]
%25s:%-5d  <vp> Forcing bypass to false due to chat flavor
%25s:%-5d  <vp> setproperty: bypass =%d
%25s:%-5d  <vp> setproperty: mute uplink output =%d
%25s:%-5d  <vp> setproperty: mute downlink voice =%d
%25s:%-5d  <vp> setproperty: enableagc=%d (currently: enableagcdefault=%d, clientsetenableagc=%d, agc=%p).
%25s:%-5d  <vp> setproperty: current state of media chat = [%s], new state of media chat = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_EnableMediaChat)
%25s:%-5d  <vp> End self-reinit (kVPProperty_EnableMediaChat)
%25s:%-5d  >vp> setproperty: feature was not enabled
%25s:%-5d  >vp> setproperty: media chat for vp version = %u is not supported
%25s:%-5d  <vp> setproperty: current state of spatial chat = [%s], new state of spatial chat = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_EnableSpatialChat)
%25s:%-5d  <vp> End self-reinit (kVPProperty_EnableSpatialChat)
%25s:%-5d  >vp> setproperty: spatial chat for vp version = %u is not supported
%25s:%-5d  <vp> setproperty: spatial head tracking configuration with mode %u and head tracking %s
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [SpatialMode %s => %s ]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpatialHeadTrackingConfiguration [Headtracking %s => %s ]
%25s:%-5d  <vp> setproperty: current state of media playback on external device = [%s], new state of media playback on external device = [%s]
%25s:%-5d  <vp> setproperty: chat flavor value changed to = [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
%25s:%-5d  <vp> End self-reinit (kVPProperty_MediaPlaybackOnExternalDevice)
%25s:%-5d  <vp> Voice isolation not supported, ignoring incoming property
%25s:%-5d  <vp> Begin self-reinit (kVPParameter_DisableVP)
%25s:%-5d  <vp> End self-reinit (kVPParameter_DisableVP)
%25s:%-5d  <vp> setproperty: disable vp = %s.  
%25s:%-5d  >vp> setproperty: HwHasVP got invalid data
%25s:%-5d  <vp> Begin self-reinit (kVPParameter_HwHasVP)
%25s:%-5d  <vp> End self-reinit (kVPParameter_HwHasVP)
%25s:%-5d  <vp> setproperty: hw has vp = %s.  
%25s:%-5d  >vp> failed to set microphone trim gains property due to exception
%25s:%-5d  >vp> failed to set reference trim gains property due to exception
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_SpeakerCalibrationDataCF)
%25s:%-5d  <vp> End self-reinit (kVPProperty_SpeakerCalibrationDataCF)
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_PrimaryCodecType)
%25s:%-5d  <vp> End self-reinit (kVPProperty_PrimaryCodecType)
%25s:%-5d  <vp> setproperty: primary audio vocoder type = %s(%d) 
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_PrimaryCodecSampleRate)
%25s:%-5d  <vp> End self-reinit (kVPProperty_PrimaryCodecSampleRate)
%25s:%-5d  <vp> setproperty: re-initializing speech enhancer; old ul blk sz = %u; new ul blk size = %u; old ul sr = %lf; new ul sr = %lf
%25s:%-5d  <vp> setproperty: primary vocoder sample rate = %f 
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_TelephonyMicDSPSettings)
%25s:%-5d  <vp> End self-reinit (kVPProperty_TelephonyMicDSPSettings)
%25s:%-5d  <vp> setproperty: mic custom dsp settings
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_TelephonyRefDSPSettings)
%25s:%-5d  <vp> End self-reinit (kVPProperty_TelephonyRefDSPSettings)
%25s:%-5d  <vp> setproperty: ref custom dsp settings
%25s:%-5d  <vp> setproperty: beam former direction = %s
%25s:%-5d  >vp> Error %d from applying beam direction
%25s:%-5d  <vp> setproperty: chat flavor = %u
%25s:%-5d  <vp> setproperty: hardware volume =%f dB
%25s:%-5d  <vp> AU HLC exists in the VP chain applying HW vol =>%f
%25s:%-5d  <vp> [VolumeLimit] AUSPLMeter exists in the VP chain; applying HW vol =>%f
%25s:%-5d  <vp> [VolumeLimit] SPLTarget update %f
%25s:%-5d  <vp> [VolumeLimit] Setting target LKFS on LDNM to %f
%25s:%-5d  >vp> [VolumeLimit] Failed to et LKFS from AUSPLMeter. Error = %d
%25s:%-5d  <vp> setproperty: is tap stream enabled  = %d
%25s:%-5d  <vp> MutedSpeechActivityEventListener is registered with VP
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_MixStereoToMono [%s])
%25s:%-5d  <vp> End self-reinit (kVPProperty_MixStereoToMono [%s]
%25s:%-5d  <vp> Begin self-reinit (kVPProperty_ContinuityCaptureMode
%25s:%-5d  <vp> End self-reinit (kVPProperty_ContinuityCaptureMode
%25s:%-5d Read plist key: %s = %f
%25s:%-5d Cannot read plist key: %s
%25s:%-5d Read plist key: %s
%25s:%-5d Requested ConvoyAdaptiveDisplacement but ParameterUpdaterConfig is not valid
%25s:%-5d Requested ConvoyAdaptiveDisplacement but ParameterUpdaterConfig key is missing from spp3 plist
%25s:%-5d VAD LPC block size %f ms is larger than %f.
%25s:%-5d VAD LPC block size is %d.
%25s:%-5d VAD LPC order %d is larger than %d.
%25s:%-5d VAD LPC order is %d.
%25s:%-5d VAD autocorrelation length %f ms is larger than %f.
%25s:%-5d VAD autocorrelation block size is %d.
%25s:%-5d VAD min periodicity tracking frequency %f Hz is less than %f.
%25s:%-5d VAD max periodicity tracking frequency %f Hz is greater than %f.
%25s:%-5d VAD sparsity length %f ms is larger than %f.
%25s:%-5d VAD sparsity block size is %d.
%25s:%-5d AGC VAD ERROR: received too many samples: %d; fs in = %f, fs internal = %f, maxBlockSize = %d
%25s:%-5d AUAGCV2 calibration meter: %2.1f dB
%25s:%-5d Trying to set peakFinderWindowTime_ms past max capacity
HOASpatializer: Number of outputs does not match with desired HOA order; reducing order, only %u channels will be active (others muted)
%s: SourceExtentProcessor is not available, HOASpatializer will ignore source extent
%25s:%-5d overriding gap filler type in tuning plist (%s) with type %s
%25s:%-5d Invalid key set for AR gap filler tuning: %s; expected keys %s
%25s:%-5d Loading bypassing gap filler. Type = '%s'
%25s:%-5d Assertion failed: ring buffer too small
%25s:%-5d Assertion failed: input buffer too small
%25s:%-5d Assertion failed: input too small
%25s:%-5d Assertion failed: training region will extend past the end of x
%25s:%-5d Assertion failed: bad backwards training region length
%25s:%-5d Assertion failed: buffer is too small
%25s:%-5d Assertion failed: region is too small
%25s:%-5d Assertion failed: index error
%25s:%-5d AUEndpointVAD3: The top-level plist property is unset. Setting the AU to bypass mode (no VAD outputs).
%25s:%-5d kAUEndpointVAD3Property_EventHandler is write-only.
%25s:%-5d kAUEndpointVAD3Property_DoneProcessingAudioForNonRealTimeDecode is write-only.
%25s:%-5d kAUEndpointVAD3Property_RecurrentVADSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_RecurrentVADNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_EndpointerSpeechDetectionEvent cannot be directly accessed.
%25s:%-5d kAUEndpointVAD3Property_EndpointerNonspeechDetectionEvent cannot be directly accessed.
%25s:%-5d created VPStrategyManager
%25s:%-5d destroyed VPStrategyManager
%25s:%-5d this vp version does not support property 0x%x
%25s:%-5d setting property 0x%x
%25s:%-5d vpLock must be held!
%25s:%-5d null pointer for property!
%25s:%-5d ref port type %s, mic port type %s
%25s:%-5d Switching from VoiceProcessorV%u to VoiceProcessorV%u
%25s:%-5d Found a previously cached VoiceProcessorV%u!
%25s:%-5d Creating a new VoiceProcessorV%u
%25s:%-5d Created a new VoiceProcessorV%u
%25s:%-5d Error code %i reported at %s
%25s:%-5d Finished initializing the VP using cached data
%25s:%-5d updating volume
%25s:%-5d stateMutex must be held!
%25s:%-5d state lock acquired without contention
%25s:%-5d state lock not acquired; deferring
%25s:%-5d waiting for locks asynchronously
%25s:%-5d locks acquired
%25s:%-5d vpsm already destroyed
%25s:%-5d Actually the VoiceProcessorInterface* owned by VPStrategyManager the is a nullptr, so we can only report that this VP's version is 0!
%25s:%-5d Getting property info with ID: %u
%25s:%-5d Getting property with ID: %u
%25s:%-5d Setting property with ID: %u
%25s:%-5d set on vp
%25s:%-5d bad prop data = %p, size = %u
%25s:%-5d released %p
%25s:%-5d vp is nullptr!
%25s:%-5d setOnVP set to %d. %d items flipped (size=%lu)
%25s:%-5d Invalid state: %s! At this point, we require state: %s
%25s:%-5d removed property 0x%x %s (size=%lu)
%25s:%-5d copied %p
%25s:%-5d got %lu unset properties (size=%lu)
%25s:%-5d vp is nullptr
%25s:%-5d %s property 0x%x %s, setOnVP=%d (size=%lu)
%25s:%-5d Constructed.
%25s:%-5d Destructed.
%25s:%-5d Initializing.
%25s:%-5d The number of input channels not equal to the number of expected channels (%u).
%25s:%-5d Initialize called without setting the layers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size is not supported! Setting AU in Bypass mode.
%25s:%-5d Number of microphones is not supported! Setting AU in Bypass mode.
%25s:%-5d Successfully Initialized.
%25s:%-5d Cleanup.
%25s:%-5d Resetting the AU.
%25s:%-5d Setting the property PropertyIDs::DistanceEstimatorNeuralNet
%25s:%-5d Could not load DistanceEstimator plist, exception (%d).
%25s:%-5d Successfully loaded DistanceEstimator plist.
%25s:%-5d Setting the default parameter values.
%25s:%-5d Setting the format defaults.
%25s:%-5d Setting the stream format for the second input bus to match the format of the first bus.
%25s:%-5d Pull failed on input (%u)
%25s:%-5d MCLPOutSignals cannot be NULL. It is a required input.
%25s:%-5d Input MCLPOutSignals buffer expected with (%u) channels.
%25s:%-5d ECOutSignals cannot be NULL. It is a required input.
%25s:%-5d Input ECOutSignals buffer expected with (%u) channels.
%25s:%-5d Output OutputSignals buffer expected with (%u) channels.
%25s:%-5d AUDistance: (MCLPOutSignals, ECOutSignals) is NOT finite: (%d, %d)
%25s:%-5d AUDistance: (OutputSignals) is NOT finite: (%d)
%25s:%-5d Reseting the distance estimator.
%25s:%-5d Error initializing EndpointVAD3: %s
%25s:%-5d Viterbi ring buffer size (in seconds) not found in plist. Resorting to using legacy default value.
%25s:%-5d  <vp> call num %u
%25s:%-5d  <vp> VPV%u REF %s %s (blksz %lu) MIC %s %s (blksz %lu)
%25s:%-5d  <vp> ref audiodeviceid = %lu      mic audiodeviceid = %lu
%25s:%-5d  <vp> inRefASBD passed in = %s
%25s:%-5d  <vp> inMicASBD passed in = %s
%25s:%-5d  <vp> hw io blocksizes passed in REF = %lu MIC = %lu
 unsupported stream format
 unsupported Ref sample rate
 unsupported Mic sample rate
%25s:%-5d  >vp> failed to initialize - no reference ports
%25s:%-5d  >vp> failed to initialize - no microphone ports
%25s:%-5d  <vp> ul-dl config out of sync mHwRefASBD = %s, %d
 inMicASBD = %s %d
%25s:%-5d  <vp> ul-dl config no longer out of sync
%25s:%-5d  >vp> ul-dl config still out of sync ?!
%25s:%-5d  >vp> fs mismatched! REF=%fHz, MIC=%fHz
%25s:%-5d  <vp> ioOutASBD passed in = %s
 unsupported Out sample rate
 unsupported out format
 number of channels mismatches
 could not initialize EC/ES
%25s:%-5d  >vp> ERROR: Initialize output called before Initialize hw input was called!
 Initialize output called before init hw was called
%25s:%-5d  <vp> UL fade data size = %u
%25s:%-5d  <vp> initialize output: ioOutASBD passed OUT = %s
%25s:%-5d  <vp> GetMaxOutputPacketInfo : InitializeOutput hasn't been called yet!
%25s:%-5d  <vp> preferredClientSampleRate: %g
%25s:%-5d  <vp> calcblkzsizes: mHwRefBlkSz = %lu, mHwMicBlkSz = %lu
%25s:%-5d  <vp> calcblkzsizes: mDsRefBlkSz = %lu, mDsMicBlkSz = %lu
%25s:%-5d  <vp> calcblkzsizes: mEpIoBlkSz  = %lu, mUsOutBlkSz = %lu
%25s:%-5d  <vp> calcasbds: mEpRefASBD format: %s
%25s:%-5d  <vp> calcasbds: mEpMicASBD (ignore the # of channels) format: %s
%25s:%-5d  <vp> calcasbds: mEpOutASBD format: %s
%25s:%-5d  <vp> calcasbds: mUsOutASBD format: %s
%25s:%-5d  <vp> calcinternalprocessinglatency: %f sec
%25s:%-5d  <vp> calcsrclatencysamples: ref src ltnc = %d samples(@%f Hz), mic src ltnc = %d samples(@%f Hz), out src ltnc = %d samples(@%f Hz)
%25s:%-5d  <vp> calcbufferinglatencysamples: %d samples(@%f Hz)
 ERROR: can't create ref src
 ERROR: can't create mic src
 ERROR: can't create mic clip src
 ERROR: can't create output src
%25s:%-5d  <vp> initrefmicringbuffers : delaying mic by %.2f ms (%d samples)
%25s:%-5d  >vp> initrefmicringbuffers : mic buffer src ltnc padding %d samples
%25s:%-5d  >vp> initrefmicringbuffers : ref buffer src ltnc padding %d samples
%25s:%-5d  >vp> initialize: error initializing sample rate converters
%25s:%-5d  <vp> initialize: mOutASBD computed = %s
%25s:%-5d  <vp> initialize: [iphone/ipad simulator] disabling all uplink processing
%25s:%-5d  <vp> opening route-specific injection file %s
%25s:%-5d  <vp> opening generic injection file %s
%25s:%-5d  <vp> opening injection file %s
%25s:%-5d  <vp> error opening injection file %s
%25s:%-5d  <vp> injection file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
%25s:%-5d  <vp> error %d getting length of injection file %s, length %d
%25s:%-5d  >vp> error %d opening injection file %s, will use original (not injected) signal
%25s:%-5d  <vp> opening addition file %s
%25s:%-5d  <vp> addition file %s format (%.0f Hz) is not as expected (%.0f Hz), will use SRC!
%25s:%-5d  >vp> error reading file %s [err=%d, frames to read=%lld, num frames read=%d]
%25s:%-5d  >vp> error-%d opening addition file %s, will use original (not added) signal
 bytesPerFrame must be > 0 in BytesToFrames
%25s:%-5d Threw an unknown exception
%25s:%-5d FIREngine Exception: %s (Err=%d)
%25s:%-5d AUJBase init failed: %d
%25s:%-5d Setting property FIRMatrices
%25s:%-5d Failed to set new FIR matrix on active kernel: %s (err=%d)
%25s:%-5d Setting property ConfigPlist
%25s:%-5d Setting new FIR matrix
%25s:%-5d Failed to create new kernel at runtime: %s (err=%d)
%25s:%-5d Setting property SetParameters
%25s:%-5d invalid channel count: %u. only mono is supported
%25s:%-5d audio format ID must be linear PCM
%25s:%-5d device specific tuning is %@
%25s:%-5d device specific tuning not found; falling back to generic tuning
%25s:%-5d tuning path resolved to %@
%25s:%-5d Reading audio failed, bailing
%25s:%-5d Failed to read the right number of samples: frameLength != numSamples, bailing
%25s:%-5d Audio format of PCM buffer does not agree with the format passed to init, bailing
%25s:%-5d Input audio conversion failed, bailing. Error: %@
%25s:%-5d bad processing format flags, bailing
%25s:%-5d bad processing format ID, bailing
%25s:%-5d bad channel count in processing format, bailing
%25s:%-5d Assertion failed: logic error
%25s:%-5d Output audio conversion failed, final audio may be corrupt! Error: %@
%25s:%-5d Click mitigation failed: internal exception while processing
%25s:%-5d record enabled at %i
creating 'Resampler2' sample rate converter Q%u, %u ch, %.2fHz to %.2fHz
creating 'Ramstad' sample rate converter Q%u, %u ch, %.2fHz to %.2fHz
%25s:%-5d Invalid state value!
%25s:%-5d Internal decision history buffers must have the same size
%25s:%-5d Error encountered while creating deep copy of filter dictionary
%25s:%-5d iPMWF: successful initialization.
%25s:%-5d iPMWF: successful clean-up.
%25s:%-5d iPMWF: successful reset.
creating
VoiceProcessor_Create BadArgument (outVoiceProcessor)
VoiceProcessor_Create BadArgument (inConfiguration)
failed to create voice processor due to unknown exception
destroying
failed to destroy voice processor due to bad reference
failed to get version due to bad reference
failed to initialize uplink due to bad reference
VoiceProcessor_InitializeUplink BadArgument (inConfiguration)
failed to initialize downlink due to bad reference
VoiceProcessor_InitializeDownlink BadArgument (inConfiguration)
failed to get parameter due to bad reference
VoiceProcessor_GetParameter BadArgument (outParameterValue)
failed to set parameter due to bad reference
VoiceProcessor_SetParameter BadParameterID (%d)
failed to get uplink parameter list due to bad reference
VoiceProcessor_GetUplinkParameterList BadArgument (outParameterList)
VoiceProcessor_GetUplinkParameterList BadArgument (ioParameterCount)
failed to get downlink parameter list due to bad reference
VoiceProcessor_GetDownlinkParameterList BadArgument (outParameterList)
VoiceProcessor_GetDownlinkParameterList BadArgument (ioParameterCount)
failed to get property info due to bad reference
VoiceProcessor_GetPropertyInfo BadArgument (outPropertySize)
VoiceProcessor_GetPropertyInfo BadArgument (outPropertyIsWritable)
failed to get property due to bad reference
VoiceProcessor_GetProperty BadArgument (outPropertyData)
VoiceProcessor_GetProperty BadArgument (outPropertySize)
failed to set property due to bad reference
VoiceProcessor_SetProperty BadArgument (inPropertyData)
VoiceProcessor_SetProperty BadPropertyID (%d)
failed to get uplink property list due to bad reference
VoiceProcessor_GetUplinkPropertyList BadArgument (outPropertyList)
VoiceProcessor_GetUplinkPropertyList BadArgument (ioPropertyCount)
failed to get downlink property list due to bad reference
VoiceProcessor_GetDownlinkPropertyList BadArgument (outPropertyList)
VoiceProcessor_GetDownlinkPropertyList BadArgument (ioPropertyCount)
failed to preflight uplink due to bad reference
VoiceProcessor_PreflightUplink BadArgument (outNumRequiredUplinkInputSamples)
failed to process uplink due to bad reference
VoiceProcessor_ProcessUplink BadArgument (ioData)
failed to preflight downlink due to bad reference
VoiceProcessor_PreflightDownlink BadArgument (outNumConsumedDownlinkInputSamples)
VoiceProcessor_PreflightDownlink BadArgument (outNumProducesDownlinkOutputSamples)
failed to process downlink due to bad reference
VoiceProcessor_ProcessDownlink BadArgument (ioData)
VoiceProcessor_GetBaseFactory_Private BadArgument (outFactory)
legacy call failed due to unknown exception: %s
initializing uplink with configuration: %s
failed to initialize uplink due to bad configuration
failed to initialize uplink - voice processor did not accept requested output format
failed to initialize uplink - voice processor must output float data
initialized uplink
uplink configuration is not valid - 'AllOfUplinkDSP' node configuration not found
uplink configuration is not valid - wrong number of node configurations
uplink configuration is not valid - 'HardwareDSP' node configuration not found
uplink configuration is not valid - 'EchoDSP' node configuration not found
uplink configuration is not valid - 'DynamicsDSP' node configuration not found
uplink configuration is not valid - topology is not supported
uplink configuration is not valid - microphone trim gains count is out of bounds
uplink configuration is not valid - reference trim gains count is out of bounds
uplink configuration is not valid - client I/O block size can't be 0
uplink configuration is valid!
uplink configuration is not valid - %s
legacy call failed: %s
initializing downlink with configuration: %s
failed to initialize downlink due to bad configuration
initialized downlink
downlink configuration is not valid - wrong number of node configurations
downlink configuration is not valid - 'AllOfDownlinkDSPWithFarEndVoiceOnly' node configuration not found
downlink configuration is not valid - topology is not supported
downlink configuration is not valid - speaker telemetry input data sources count is out of bounds
downlink configuration is not valid - client I/O block size can't be 0
downlink configuration is valid!
downlink configuration is not valid - %s
PreflightUplink BadState
ProcessUplink BadArgument
ProcessUplink BadLock
ProcessUplink BadState (uplink)
ProcessUplink BadState (downlink)
ProcessUplink BadIOData
ProcessUplink BadState preflight
ProcessUplink BadArgument (nodeType)
I/O rate mismatch has occurred on I/O cycle %u out of %d
PreflightDownlink BadLock
PreflightDownlink BadState (uplink)
PreflightDownlink BadState (downlink)
ProcessDownlink BadLock
ProcessDownlink BadState (uplink)
ProcessDownlink BadState (downlink)
ProcessDownlink BadIOData
ProcessDownlink BadState (preflight)
ProcessDownlink BadArgument (nodeType)
%25s:%-5d  <vp> loopbackinitialize SRC=%s, usOut#chan=%d, dlMix#chan=%d
%25s:%-5d  >vp> loopbackwrite: ERROR can't write %d frames to loopbackABL ABL=%p, capacity=%d
%25s:%-5d  >vp> loopbackwrite ERROR wrote %d (requested %d) frames
%25s:%-5d  >vp> loopbackread ERROR read %d (requested %d) frames
%25s:%-5d  <vp> loopbackread filled %d zeros in outABL channel %d
%25s:%-5d Assertion failed: not enough working memory
%25s:%-5d Assertion failed: bad internal value
%25s:%-5d Assertion failed: output is too small
%25s:%-5d Assertion failed: invalid arCoefficients size
%25s:%-5d Assertion failed: bad working size
%25s:%-5d Assertion failed: invalid input ar order
%25s:%-5d Starting initialization.
%25s:%-5d ERROR: Input and output formats need to be equivalent, but we have:
[Input:  %s], and
[Output: %s]
%25s:%-5d ERROR: We have not been configured with a LUT system; we cannot initialize properly and will process in soft bypass.
%25s:%-5d Initializing with PowerBudget: [ %s ]
%25s:%-5d Initializing with LUTSystem:
%25s:%-5d Initializing with Volume level: %s
%25s:%-5d Initializing with Smoother attack TC: %s
%25s:%-5d Initializing with Smoother release TC: %s
%25s:%-5d Kernel created successfully.
%25s:%-5d ERROR: We have not been configured fully; we could not initialize the kernel and will process in soft bypass.
%25s:%-5d Ending initialization.
%25s:%-5d ERROR: Input bus (%u-ch) and output bus (%u-ch) have different channel counts.
%25s:%-5d ERROR: (For ch-%i) input buffers hold %u bytes, output buffers hold %u bytes, but %u was expected.
Setting bypass to %u
Setting ProtectionLevel to %s
%25s:%-5d Assertion failed: bad argument value
%s: Biquad dictionary invalid
%s: Biquad Stage %u error; replacing with bypass filter
%25s:%-5d _vp: plist write to file: err-%d writing plist
%25s:%-5d GetNextFFTFriendlyBlkSz: input block size %d is too %s !!!
 PackednessIsSignificant only applies for PCM
%25s:%-5d Lock requested while already locked?!
%25s:%-5d Unlock requested while already unlocked?!
%25s:%-5d Format not supported, input bus %u (format is: %s)
%25s:%-5d Format not supported, output bus %u (format: %s)
%s Target latency %u is too small (upmixer latency=%u, native blocksize=%u)
%s: Target latency %u is not a multiple of native blocksize (upmixer latency=%u, native blocksize=%u)
%25s:%-5d In VAD3Configuration::Initialize, Forcing reinitialization of VAD3Configuration.
%25s:%-5d will try to initialize
%25s:%-5d initialized
%25s:%-5d successful clean-up.
%25s:%-5d successful reset.
%25s:%-5d EXCEPTION (%d) [topLevelDict_ref.get_cf() == nullptr is false]: "Missing dictionary: %s"
%25s:%-5d EXCEPTION (%d) [inputDescDict_ref.get_cf() == nullptr is false]: "Missing dictionary InputVectorDescriptor."
%25s:%-5d Found the dictionary InputVectorDescriptor.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Size from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [inputDataType_ref.get_cf() == nullptr is false]: "Missing dictionary DataType."
%25s:%-5d Successfully retrieved input data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported input data quantization type for Quantization (%u)."
%25s:%-5d Loading from inputDescDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary InputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [outputDescDict_ref.get_cf() == nullptr is false]: "Missing dictionary OutputVectorDescriptor."
%25s:%-5d Found the dictionary OutputVectorDescriptor.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Size from dictionary OutputVectorDescriptor."
%25s:%-5d EXCEPTION (%d) [outputDataType_ref.get_cf() == nullptr is false]: "Failed to retrieve output data type (DataType) from dictionary OutputVectorDescriptor."
%25s:%-5d Successfully retrieved output data type (%s) for Layer %u.
%25s:%-5d EXCEPTION (%d): "Unsupported output data type."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary OutputVectorDescriptor."
%25s:%-5d Loading from outputDescDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary OutputVectorDescriptor."
%25s:%-5d LayerDescriptor for layer %zu not found, using default fully connected layer.
%25s:%-5d Found the dictionary LayerDescriptor.
%25s:%-5d EXCEPTION (%d) [layerType_ref.get_cf() == nullptr is false]: "Failed to retrieve layer type (Type) from dictionary LayerDescriptor."
%25s:%-5d Successfully retrieved Type (%s) for LayerDescriptor %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported LayerType."
%25s:%-5d EXCEPTION (%d) [weightsDict_ref.get_cf() == nullptr is false]: "Missing dictionary Weights."
%25s:%-5d Found the dictionary Weights.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing vector Data from dictionary Weights."
%25s:%-5d EXCEPTION (%d) [nnLayers[i].mWeightsQuantized.size() != weightsNumberOfCoefficients is false]: "Number of weights in Data (%lu) does not match the required number of weights (%lu)."
%25s:%-5d Successfully retrieved weights data (%i) at index (%zu).
%25s:%-5d Successfully retrieved weights data (%g) at index (%zu).
%25s:%-5d EXCEPTION (%d): "Unknown quantization type (%u)."
%25s:%-5d EXCEPTION (%d) [weightsDataType_ref.get_cf() == nullptr is false]: "Missing DataType from dictionary Weights."
%25s:%-5d Successfully retrieved weights data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported weights data quantization type for Quantization (%u)."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary Weights."
%25s:%-5d Loading from weightsDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary Weights."
%25s:%-5d EXCEPTION (%d) [biasDict_ref.get_cf() == nullptr is false]: "Missing dictionary Bias from dictionary Weights."
%25s:%-5d Found the dictionary Bias.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing vector Data from dictionary Bias."
%25s:%-5d Successfully retrieved bias data (%g) at index (%zu).
%25s:%-5d EXCEPTION (%d) [biasDataType_ref.get_cf() == nullptr is false]: "Missing dictionary DataType from dictionary Weights."
%25s:%-5d Successfully retrieved bias data type (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported bias data type."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataScale from dictionary Bias."
%25s:%-5d Loading from biasDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar DataBias from dictionary Bias."
%25s:%-5d EXCEPTION (%d) [activationDict_ref.get_cf() == nullptr is false]: "Missing dictionary Activation."
%25s:%-5d Found the dictionary Activation.
%25s:%-5d EXCEPTION (%d) [activationFunction_ref.get_cf() == nullptr is false]: "Failed to retrieve activation function (Function) from dictionary Activation."
%25s:%-5d Successfully retrieved activation function (%s) for Layer %zu.
%25s:%-5d EXCEPTION (%d): "Unsupported activation function."
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Alpha from dictionary Activation."
%25s:%-5d Loading from activationDict.
%25s:%-5d EXCEPTION (%d) [err != noErr is false]: "Missing scalar Beta from dictionary Activation."
%25s:%-5d The current architecture is limited to having all detector algorithms match! commonAlgorithm = %s, algo = %s
%25s:%-5d Unsupported algorithm type: %s
%25s:%-5d Invalid sample rate %f; reverting to default %f
%25s:%-5d Assertion failed: invalid padding amount
%25s:%-5d click type %i is unsupportd
 buffer too small
 ring buffer too small
%25s:%-5d Assertion failed: Invalid input size or padding length
%25s:%-5d Assertion failed: invalid outCoeffs size
%25s:%-5d Invalid keys!
 unsupported distribution!
 non finites not welcome here
 invalid value
 invalid probability value
%25s:%-5d  <vp> NOTICE: AUNeuralNet latency is %f ms, which is %d samples
%25s:%-5d  >vp> Unknown MainChatCategory: %s
%25s:%-5d  <vp> VP chat flavor set to %u
%25s:%-5d  <vp> Begin self-reinit (SetChatFlavor)
%25s:%-5d  <vp> End self-reinit (SetChatFlavor)
%25s:%-5d  <vp> ChatFlavor notification name is %s
%25s:%-5d  <vp> ChatFlavor updated notification received
%25s:%-5d Assertion failed: invalid clickLoc
%25s:%-5d Non-binary threshold is unsupported.
%25s:%-5d AUNeuralNetSPP: Initialize.
%25s:%-5d Initialize called without setting setting NeuralNetNSLayers or NeuralNetRESLayers plist! Setting AU in Bypass mode.
%25s:%-5d Sample rate for NNNS is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size for NNNS is not supported! Setting AU in Bypass mode.
%25s:%-5d Sample rate for NNRES is not supported! Setting AU in Bypass mode.
%25s:%-5d Block size for NNRES is not supported! Setting AU in Bypass mode.
%25s:%-5d AUNeuralNetSPP: Successfully Initialized.
%25s:%-5d AUNeuralNetSPP: Cleanup().
%25s:%-5d Could not load NeuralNetNS plist, exception (%d).
%25s:%-5d Successfully loaded NeuralNetNS plist.
%25s:%-5d MCLPoutSignals cannot be NULL. It is a required input
%25s:%-5d ECleeSignals cannot be NULL. It is a required input
%25s:%-5d ECoutSignals cannot be NULL. It is a required input
%25s:%-5d AUNeuralNetSPP: (MCLPoutSignals, ECleeSignals, ECoutSignals) is NOT finite: (%u, %u, %u)
%25s:%-5d AUNeuralNetSPP: (OutputSignals) is NOT finite: (%u)
%25s:%-5d _vp: vptimefreqconverter::analyze: not configured for conversion
%25s:%-5d _vp: vptimefreqconverter::analyze: not configured for analysis
%25s:%-5d _vp: vptimefreqconverter::synthesize: not configured for conversion
%25s:%-5d _vp: vptimefreqconverter::synthesize: not configured for synthesis
%25s:%-5d EndpointVADDSPChain: Incorrect threshold multiplier LUT format in the Plist.
 bad argument size
%s:%i illegal dominance parameter value: %f
%s:%i only first order is supported now
%s:%i bad outMatrix num cols
%s:%i bad outMatrix num rows
%s:%i unsupported normalization %i
%s:%i invalid zoom curve value for dominance zoom
%s:%i bad dominanceValues size
%s:%i --
%s:%i locked
%25s:%-5d -
%25s:%-5d Missing dictionary %s.
%25s:%-5d Found the dictionary %s.
%25s:%-5d NumDictColumns does not match NumColumns we use.
%25s:%-5d Loading from matrixDict.
%25s:%-5d Missing scalar %s.
%25s:%-5d Missing vector Coefficients.
%25s:%-5d Successfully retrieved coefficients data (%g) at index (%u).
%25s:%-5d Missing vector RowIndices
%25s:%-5d Successfully retrieved row index data (%lld) at index (%u).
%25s:%-5d Missing vector ColumnIndices.
%25s:%-5d Successfully retrieved column index data (%lld) at index (%u).
%25s:%-5d Successfully called sparse_matrix_vector_product_dense_float for %s.
%25s:%-5d Failed sparse_matrix_vector_product_dense_float for %s.
%25s:%-5d Successfully computed SparseMatrix * Ones data (%g) at index (%u).
%25s:%-5d AUSeparate: Initialize.
%25s:%-5d AUSeparate: Successfully initialized.
%25s:%-5d AUSeparate: Cleanup.
%25s:%-5d parameters changed after Initialize, which will allocate memory on the realtime audio thread - only SetParameter before Initialize
%25s:%-5d AUSeparate: (InputSignals) is NOT finite: (%u)
%25s:%-5d AUSeparate: (OutputSignals) is NOT finite: (%u)
%25s:%-5d AUSeparate: Initialize IVA Classes.
%25s:%-5d Ref mic is %i for beam direction %s (%i)
%25s:%-5d Negative mic number!
%25s:%-5d Spaced omni is mics %i (L) and %i (R) for camera direction %s (%i) and orientation %s (%i)
%25s:%-5d Mic selections array is too short!
%25s:%-5d Bad channel selection array! count = %u
%25s:%-5d Bad channel selection %i
%25s:%-5d The ranged beam selection optimization requires that the channels are in order, but vLast = %i and vSecondLast = %i
media chat other audio ducking level %.2f, db: %.2f
history window blocks to average: %u
Media Chat: setting other audio ducking level %.2f
Media Chat: setting ducking ramp time %.2fs
Media Chat: setting unducking ramp time %.2fs
Media Chat: setting dynamic ducking accumulation time %.2fs
%25s:%-5d AUBeam2: Error: Initialized
%25s:%-5d 
AUBeam2: input stream format: %s
%25s:%-5d 
AUBeam2: output stream format: %s
%25s:%-5d AUBeam2 Error: Converting mic spacing from tuning file
%25s:%-5d AUBeam2 Error: Invalid mic spacing %d
%25s:%-5d AUBeam2: Error: Failed initializing Beam2 object
%25s:%-5d AUBeam2: Error: AUBeam2N should have property kAudioUnitProperty_UsesFixedBlockSize set to 1 before initialize
%25s:%-5d Initialize Beam2N object with: sample rate = %f, transform size = %d, frame size = %d, number of beams = %d
%25s:%-5d AUBeam2: Error: Failed initializing Beam2N object
%25s:%-5d AUBeam2: Error: Failed setting diffraction filter and post EQ
%25s:%-5d AUBeam2: Error loading diffraction filter file at %s
%25s:%-5d AUBeam2 Error: Converting diffraction filter vectors length from tuning file
%25s:%-5d AUBeam2 Error: Invalid diffraction filter data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeam2: Error no diffraction filter data
%25s:%-5d AUBeam2: Error loading post EQ file at %s
%25s:%-5d AUBeam2 Error: Converting eq vectors length from tuning file
%25s:%-5d AUBeam2 Error: Invalid post eq data vector length from tuning file (expected %d bytes, actual %d bytes)
%25s:%-5d AUBeam2: Error no post EQ data
%25s:%-5d AUBeam2::ReverseMicChannelFlag is set to 1 (AU input mic order {front/side,back}, will not flip mic order for BF kernel ) 
%25s:%-5d AUBeam2::ReverseMicChannelFlag is set to 0 (AU input mic order {back,front/side}, will flip mic order for BF kernel )
%25s:%-5d AUBeam2: Error: inFramesToProcess != GetMaxFramesPerSlice(), inFramesToProcess = %d, GetMaxFramesPerSlice() = %d
%25s:%-5d AUBeam2: Error: Could not open diffraction filter file %s
%25s:%-5d AUBeam2: Error: Could not read diffraction filter file %s
%25s:%-5d AUBeam2: Error: Could not open post EQ file %s
%25s:%-5d AUBeam2: Error: Could not read post EQ file %s
%25s:%-5d AUBeam2: Error: Beam object not initialized, won't dump diffraction filter
%25s:%-5d AUBeam2: Error: Number of unique bands is zero, won't dump diffraction filter
%25s:%-5d AUBeam2: Error: Beam object not initialized, won't dump post EQ
%25s:%-5d AUBeam2: Error: Number of unique bands is zero, won't dump post EQ
%25s:%-5d No reverb tail has been specified for this sample rate (%gHz). AU going into soft bypass mode.
%25s:%-5d ReverbSuppressor object failed to instantiate; AU going into soft bypass mode.
%25s:%-5d 'ReverbTails' dictionary is not present in Plist.
%25s:%-5d 'ReverbTails' dictionary found in Plist.
%25s:%-5d Found a %zu-element (%gms) reverb tail for the %gHz sample-rate.
%25s:%-5d Failed to extract reverb tail vector from the dictionary entry keyed: '%s'
%25s:%-5d AudioUnitSetProperty failed for %s
%25s:%-5d AudioUnitGetProperty failed for %s
%25s:%-5d FFT object failed to Initialize() with block-size %u.
%s:%i set up GuidedMWF
%s:%i processing section output: %s
%s:%i create graph
%s:%i prepare input section
%s:%i prepare processing section
%s:%i prepare output section
%s:%i graph created
%s:%i create blending graph
%s:%i blending graph created
%s:%i create bypass graph
%s:%i graph name set to (%s)
%s:%i bypass graph created
%s:%i input section output: %s
%s:%i output section output: %s
%25s:%-5d EndpointVADSegmentHeuristics: Input VAD sequence exceeded the internal history size.
%25s:%-5d EndpointVADSegmentHeuristics: Transition state value not found in the history buffer!
%25s:%-5d Loading sampleRate from topLevelDict.
%25s:%-5d Failed to load the sampling rate from the plist.
%25s:%-5d Loading nMicsUsed from topLevelDict.
%25s:%-5d Failed to load the number of mics from the plist.
%25s:%-5d Loading nCoefficients from topLevelDict.
%25s:%-5d Failed to load the number of filter coefficients from the plist.
%25s:%-5d Missing dictionary: %s
%25s:%-5d Found the dictionary: %s
%25s:%-5d Missing dictionary RealCoefficients.
%25s:%-5d Found the dictionary RealCoefficients.
%25s:%-5d Error loading RealCoefficients.
%25s:%-5d Missing dictionary ImagCoefficients.
%25s:%-5d Found the dictionary ImagCoefficients.
%25s:%-5d Error loading ImagCoefficients.
%25s:%-5d BorrowSubbandDOA failed, subband DOA calculator is not initialized.
%25s:%-5d SetSubbandDOACalcuationEnabled failed, subband DOA calculator is already initialized and this value cannot be changed.
%25s:%-5d  >vp> Unknown Route Type: %d
%25s:%-5d Can't handle different in/out formats
%s: cannot initialize with inNumOutputChannels = %d
%s: ERROR, cannot process with %d output channels
%s: ERROR, not intialized
CADSPUtility:%s:%d: subtriangle still not found in computing rank with relaxed test!
CADSPUtility:%s:%d: input buffer ticks %u but would read from %u to %u (tick rate %u, offsets %u)!
CADSPUtility:%s:%d: VBAP Initialization Error; Check for duplicate vertices
CADSPUtility:%s:%d: VBAP Initialization Error; Empty or inconsistent vertex set
CADSPUtility:%s:%d: VBAP Error; Unable to change speaker locations, azimuth and elevation have different sizes
CADSPUtility:%s:%d: VBAP Error; Unable to change speaker locations
CADSPUtility:%s:%d: VBAP Error; Duplicate vertices were found
CADSPUtility:%s:%d: VBAP error, Delaunay triangulation issue
CADSPUtility:%s:%d: VBAP error; Delaunay triangulation issue
CADSPUtility:%s:%d: VBAP Error; VBAP object not initialized
CADSPUtility:%s:%d: VBAP Error; Triangle lookup error
CADSPUtility:%s:%d: VBAP Error; Can not calculate gain if the VBAP object is not initialized
CADSPUtility:%s:%d: VBAP Error; Can not calculate gain for a source location [0, 0, 0]
CADSPUtility:%s:%d: VBAP Error; Triangle lookup failed
CADSPUtility:%s:%d: Delaunay Triangulation Error: Convex hull could not be created. Check for overlapping speakers. 
CADSPUtility:%s:%d: HOA Error; Incorrect channel count (i.e. not consistent with HOA order definition Channels = (order+1)^2)
CADSPUtility:%s:%d: HOA Error; This is not SN3D/N3D/FuMa: unsupported
CADSPUtility:%s:%d: HOA Error; HOA object was not initialized
CADSPUtility:%s:%d: HOA Error; Inconsistent vector size
CADSPUtility:%s:%d: HOA Error; Inconsistent azimuth/elevation size
CADSPUtility:%s:%d: HOA Error; VBAP calculation error
CADSPUtility:%s:%d: HOA Error; Empty azimuth/elevation
CADSPUtility:%s:%d: HOA Error; VBAP object was not initialized
CADSPUtility:%s:%d: HOA Error; Inconsistent rotation matrix size
 failed assertion: kernelSize <= kMaxKernelSize
Warning: %s SetParameter for undefined param ID %u while initialized. Ignoring.
Warning: %s was passed a ramped parameter event but does not implement them. Ignoring.
AudioUnitGetProperty: null size pointer
AudioUnitGetProperty: *ioDataSize == 0 on entry
AudioUnitSetProperty: inData == NULL
AudioUnitSetProperty: inDataSize == 0
kAudioUnitErr_TooManyFramesToProcess : inFramesToProcess=%u, mMaxFramesPerSlice=%u
ioData.mNumberBuffers=%u, ASBD::NumberChannelStreams(output.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; ioData.mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
ioData.mNumberBuffers=%u, ASBD::NumberChannelStreams(input->GetStreamFormat())=%u; kAudio_ParamError
inInputBufferLists[%u]->mNumberBuffers=%u, ASBD::NumberChannelStreams(input.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; inInputBufferLists[%u].mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
ioOutputBufferLists[%u]->mNumberBuffers=%u, ASBD::NumberChannelStreams(output.GetStreamFormat())=%u; kAudio_ParamError
%u frames, %u bytes/frame, expected %u-byte buffer; ioOutputBufferLists[%u]->mBuffers[%u].mDataByteSize=%u; kAudio_ParamError
  from %s, render err: %d
  from %s, process err: %d
  from %s, processmultiple err: %d
AUBuffer throwing bad_alloc
%25s:%-5d EXCEPTION (%d) [(nBytes * mNumberBuffers) > AllocatedBytes() is false]: ""
 ca_require_noerr: [%s, %d] (goto %s;)
 CAMutex::CAMutex: Could not init the mutex
 CAMutex::Lock: Could not lock the mutex
 CAMutex::Unlock: Could not unlock the mutex
 CAMutex::Unlock: A thread is attempting to unlock a Mutex it doesn't own
 CAMutex::Try: call to pthread_mutex_trylock failed, Error: %d (%s)
%25s:%-5d <-%s %p
%25s:%-5d <-%s %p: Swallowed exception from Close()
%25s:%-5d ->%s %p
%25s:%-5d ASSERTION FAILURE [(IsOpen()) != 0 is false]: 
%25s:%-5d EXCEPTION (%d) [error != noErr is false]: ""
 CAGuard::CAGuard: Could not init the cond var
 CAGuard::Wait: A thread has to have locked a guard before it can wait
 CAGuard::Wait: Could not wait for a signal
 CAGuard::WaitFor: A thread has to have locked a guard be for it can wait
 CAGuard::WaitFor: Wait got an error
 CAGuard::Notify: failed
 CAGuard::NotifyAll: failed
 failed assertion: goodToCopy
softlink:r:path:/System/Library/Frameworks/CoreAudioKit.framework/CoreAudioKit
RPBHost_Delegate
RPBHostDelegate
RPBParameterControlDelegate
RPBPropertyControlDelegate
RPBElementDiscoveryDelegate
RPBItem_Delegate
RPBItemDelegate
RPBServer_Listener
RPBServerListener
NSObject
AUToneMeisterParameterExporter
AUToneMeisterParameterImporter
CLMClickEvent
NSSecureCoding
NSCoding
CLMClickEventMonitor
MicroDiff
CLMClickMitigator
floatChannelData
addWireFrom:property:scope:element:to:property:scope:element:
sampleRate
addHost:toItem:
initWithFormat:
substringFromIndex:
addWire:
objectAtIndexedSubscript:
removeObjectForKey:
bytes
componentsSeparatedByString:
indexOfObject:
subpathsOfDirectoryAtPath:error:
numberWithBool:
integerValue
name
setObject:atIndex:
dictionaryWithObjectsAndKeys:
initWithAudioUnit:
addWireFrom:parameter:scope:element:to:parameter:scope:element:
wires
date
addObjectsFromArray:
filteredArrayUsingPredicate:
channelCount
objectAtIndex:
dictionaryWithObjects:forKeys:count:
addWireFrom:parameter:scope:element:toHostParameter:scope:element:
intValue
userInfo
UUIDString
propertyListWithData:options:format:error:
dataWithJSONObject:options:error:
stringWithUTF8String:
setValue:forKey:
capitalizedString
addEntriesFromDictionary:
outputs
arrayWithObjects:
numberWithDouble:
doubleValue
fileExistsAtPath:
setObject:atIndexedSubscript:
setDelegate:
addWireFrom:property:scope:element:toHostProperty:scope:element:
objectForKey:
fileExistsAtPath:isDirectory:
initWithName:
floatValue
initFromFormat:toFormat:
isEqualToString:
itemForName:
dictionaryWithDictionary:
subHost
dataWithContentsOfFile:
stringWithString:
array
null
numberWithUnsignedLong:
dictionaryWithContentsOfFile:
predicateWithBlock:
isRunning
addListener:
writeToFile:atomically:encoding:error:
allKeys
dataWithBytes:length:
errorWithDomain:code:userInfo:
stringWithFormat:
sharedInstance
addItem:
numberWithUnsignedInt:
setFrameLength:
persistentDomainForName:
arrayWithCapacity:
initWithPCMFormat:frameCapacity:
valueForKey:
inputs
stringWithCString:encoding:
countByEnumeratingWithState:objects:count:
delegate
setWritable:
cStringUsingEncoding:
numberWithShort:
mutableCopy
dictionary
getBytes:length:
pathExtension
stringFromDate:
setUserInfo:error:
createWithPropertyID:
count
bundleIdentifier
boolValue
numberWithLongLong:
frameLength
UTF8String
defaultManager
setReadable:
mainBundle
unsignedIntegerValue
initWithSource:terminal:andDestination:terminal:
copy
addObject:
stringByAppendingString:
initWithData:encoding:
createWithParameterID:
numberWithInteger:
decompressedDataUsingAlgorithm:error:
removeListener:
frameCapacity
convertToBuffer:fromBuffer:error:
unsignedIntValue
arrayWithObject:
streamDescription
initWithCapacity:
appendString:
addWireFromHostProperty:scope:element:to:property:scope:element:
setName:
encodeInteger:forKey:
arrayWithObjects:count:
format
initStandardFormatWithSampleRate:channels:
setObject:forKeyedSubscript:
numberWithInt:
sortedArrayUsingSelector:
length
decodeIntegerForKey:
containsObject:
setDateFormat:
initWithName:inputs:outputs:
addHost:
objectForKeyedSubscript:
UUID
addWireFromHostParameter:scope:element:to:parameter:scope:element:
setDescription:
encodeInt64:forKey:
setWithObjects:
numberWithFloat:
setObject:forKey:
removeHost:
compressedDataUsingAlgorithm:error:
decodeInt64ForKey:
getRemoteProcessingBlockParameterInfo:forScope:object:withError:
getRemoteProcessingBlockParameter:forID:scope:element:object:withError:
setRemoteProcessingBlockParameter:forID:scope:element:object:withError:
getRemoteProcessingBlockPropertyInfo:forScope:object:withError:
getRemoteProcessingBlockProperty:forID:scope:element:object:withError:
setRemoteProcessingBlockProperty:forID:scope:element:object:withError:
getRemoteProcessingBlockPropertyInfo:forID:scope:element:object:withError:
getRemoteProcessingBlockElementInfo:forScope:object:withError:
get_parameter_info_callback
get_parameter_callback
set_parameter_callback
get_property_info_callback
get_property_callback
set_property_callback
init
dealloc
remoteProcessingBlockServerWillStartRunning:
remoteProcessingBlockServerDidStartRunning:
remoteProcessingBlockServerWillStopRunning:
remoteProcessingBlockServerDidStopRunning:
respondsToSelector:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithServer:
.cxx_destruct
.cxx_construct
_server
will_start_running_callback
did_start_running_callback
will_stop_running_callback
did_stop_running_callback
initWithToneMeister:
exportWithOptions:
exportParametersOfAllFilters:
exportParametersOfFilter:
exportTypeOfFilter:
exportStateOfFilter:
exportGainOfFilter:
exportPhaseOfFilter:
exportOrderOfFilter:
exportQualtiyOfFilter:
exportFrequencyOfFilter:
exportChannelAllocationOfFilter:
exportAutomationOfFilter:
exportTimeStamp
exportInputGain
exportChannelMuteAndPhaseFlipParameters
toneMeister
setToneMeister:
_toneMeister
T^v,V_toneMeister
initWithToneMeister:andNumberOfChannels:
import:withOptions:andMessage:
importInputGainParameterFromDictionary:
importChannelMuteParameterFromDictionary:
importChannelPhaseFlipParameterFromDictionary:
importFilterStateFromDictionary:andAssignToFilter:
importFilterTypeFromDictionary:andAssignToFilter:
importFilterQualityFromDictionary:andAssignToFilter:
importFilterGainFromDictionary:andAssignToFilter:
importFilterOrderFromDictionary:andAssignToFilter:
importFilterFrequencyFromDictionary:andAssignToFilter:
importPhaseEqualizerFromDictionary:andAssignToFilter:
importChannelAllocationFromDictionary:andAssignToFilter:
importFilterAutomationFromDictionary:andAssignToFilter:
dictionaryIsValid:withOptions:message:
numberOfChannelsForGlobalParametersIsValid:message:
filterTypeIsValid:message:
bandShelveFrequenciesAreValid:message:
lowHighShelveFrequenciesAreValid:message:
parametricFilterFrequencyIsValid:message:
filterFrequencyIsValid:message:
filterGainIsValid:message:
filterOrderIsValid:message:
filterQualityIsValid:message:
filterChannelAllocationIsValid:message:
dictionaryWouldChangeInputGainParameter:
dictionaryWouldChangeChannelPhaseFlipParameter:message:
dictionaryWouldChangeChannelMuteParameter:message:
availableFilters
availableFilterGroup
filterTypeString:
filterTypeStrings
setValue:forParameter:
setValue:forParameter:ofFilter:
setValue:forAutomationParameter:ofFilter:
numberOfChannels
setNumberOfChannels:
_numberOfChannels
TI,V_numberOfChannels
compare:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
absoluteTime
setAbsoluteTime:
eventType
setEventType:
_absoluteTime
_eventType
TQ,V_absoluteTime
Tq,V_eventType
initWithHIDDispatchQueueQOSClass:relativePriority:
newClickEvent:
eventsForMovieStartingAtMachAbsoluteTime:endingAt:
events
setEvents:
hidEventMonitor
setHidEventMonitor:
_events
_hidEventMonitor
T@"NSMutableArray",&,V_events
T{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}},N,V_hidEventMonitor
LCSLength::
diff::
initWithFormat:upstreamLatency:
tuningPath
getCore
mitigateClicks:machAbsoluteTimeOfFirstSample:numSamples:audioReader:audioRewriter:
setTuningPath:
externalFormat
setExternalFormat:
processingFormat
setProcessingFormat:
inputConverter
setInputConverter:
outputConverter
setOutputConverter:
upstreamLatency
setUpstreamLatency:
_tuningPath
_upstreamLatency
_externalFormat
_processingFormat
_inputConverter
_outputConverter
T@"AVAudioFormat",&,N,V_externalFormat
T@"AVAudioFormat",&,N,V_processingFormat
T@"AVAudioConverter",&,N,V_inputConverter
T@"AVAudioConverter",&,N,V_outputConverter
TI,N,V_upstreamLatency
T@"NSString",&,N,V_tuningPath
v44@0:8@16I24@28^@36
v52@0:8^f16I24I28I32@36^@44
v48@0:8f16I20I24I28@32^@40
v44@0:8@"NSMutableArray"16I24@"RPBObject"28^@36
v52@0:8^f16I24I28I32@"RPBObject"36^@44
v48@0:8f16I20I24I28@"RPBObject"32^@40
v52@0:8^@16I24I28I32@36^@44
v52@0:8@16I24I28I32@36^@44
v52@0:8^@16I24I28I32@"RPBObject"36^@44
v52@0:8@16I24I28I32@"RPBObject"36^@44
{function<vp::Expected<std::vector<vp::rpb::Parameter_Info, vp::Allocator<vp::rpb::Parameter_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__f_"{__value_func<vp::Expected<std::vector<vp::rpb::Parameter_Info, vp::Allocator<vp::rpb::Parameter_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
{function<vp::Expected<float, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__f_"{__value_func<vp::Expected<float, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
{function<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, float)>="__f_"{__value_func<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, float)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
{function<vp::Expected<std::vector<vp::rpb::Property_Info, vp::Allocator<vp::rpb::Property_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__f_"{__value_func<vp::Expected<std::vector<vp::rpb::Property_Info, vp::Allocator<vp::rpb::Property_Info>>, vp::rpb::Error> (vp::rpb::Scope)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
{function<vp::Expected<applesauce::CF::TypeRef, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__f_"{__value_func<vp::Expected<applesauce::CF::TypeRef, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
{function<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, applesauce::CF::TypeRef)>="__f_"{__value_func<vp::Expected<void, vp::rpb::Error> (unsigned int, vp::rpb::Scope, unsigned int, applesauce::CF::TypeRef)>="__buf_"{type="__lx"[24C]}"__f_"^v}}
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"RPBServer"16
@24@0:8@16
v16@0:8
@"RPBServer"
{function<void ()>="__f_"{__value_func<void ()>="__buf_"{type="__lx"[24C]}"__f_"^v}}
@24@0:8^v16
@20@0:8i16
@20@0:8B16
@20@0:8I16
^v16@0:8
v24@0:8^v16
@28@0:8^v16I24
B36@0:8@16i24^@28
v28@0:8@16I24
B32@0:8@16^@24
B32@0:8@16@24
v24@0:8f16I20
v28@0:8f16I20I24
B28@0:8f16I20I24
I16@0:8
v20@0:8I16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8Q16
q16@0:8
v24@0:8q16
@24@0:8I16i20
@32@0:8Q16Q24
{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<HIDEventMonitor>=^{HIDEventMonitor}^{__shared_weak_count}}16
@"NSMutableArray"
{shared_ptr<HIDEventMonitor>="__ptr_"^{HIDEventMonitor}"__cntrl_"^{__shared_weak_count}}
@32@0:8@16@24
@28@0:8@16I24
{shared_ptr<ClickRemovalCore>=^{ClickRemovalCore}^{__shared_weak_count}}16@0:8
v52@0:8@16Q24I32@?36@?44
@"NSString"
@"AVAudioFormat"
@"AVAudioConverter"
ffacEVAW
333@
@"0{
zD20{
zDB0{
zDR0{
zDb0{
zDr0{
D(1{
hS:1{
FL1{
?{1{
CQ2{
Cz2{
?$3{
fff?
?:3{
333@
 AI3{
AT3{
A_3{
 AK4{
F,5{
BT5{
?_5{
?j5{
?v5{
B46{
BW6{
`jF)7{
F:7{
 AQ7{
B|7{
C98{
HBI8{
HBY8{
Bw8{
@@33s@
L>333?33
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwUAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQTAAAAAAAAhBkAAAAAAACQAAAAAAAAAKQNmZmgAA
AAtACKPXAAAADMGjMzMAAAANwooAAAAAAA5CSAAAAAAAD0UowAAAAAAQQSAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMEAAAAAAAAZvczMzQAAABoAAAAAAAAAG0CgAAAAAAAcPwAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>ATV-stereo-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwXAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQKAAAAAAAAhBkAAAAAAACQAAAAAAAAAKQNmZmgAA
AAtACKPXAAAADMGjMzMAAAANwooAAAAAAA5CSAAAAAAAD0UowAAAAAAQQSAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMEgAAAAAAAZvczMzQAAABoAAAAAAAAAG0CgAAAAAAAcAAAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>ATV+MAC-surround-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DSPchain</key>
<dict>
<key>Processor_0</key>
<string>'lshf'</string>
<key>Processor_1</key>
<string>'mozs'</string>
<key>Processor_2</key>
<string>'cfrk'</string>
</dict>
<key>data</key>
<data>
AAAAAAAAAAAAAAAeAAAAAAAAAAAAAAABwUAAAAAAAAJBIAAAAAAAAwAAAAAAAAAEAAAA
AAAAAAUAAAAAAAAABj+AAAAAAAAHQMAAAAAAAAg/imaAAAAACQAAAAAAAAAKQcAAAAAA
AAtAAa20AAAADMHAAAAAAAANwn9hHwAAAA5CSAAAAAAAD0T6AAAAAAAQQEAAAAAAABEA
AAAAAAAAEkAAAAAAAAATQEAAAAAAABRCoAAAAAAAFQAAAAAAAAAWAAAAAAAAABcAAAAA
AAAAGMDAAAAAAAAZAAAAAAAAABpBIAAAAAAAGz+AAAAAAAAcAAAAAAAAAB0/AAAA
</data>
<key>manufacturer</key>
<integer>1634758764</integer>
<key>name</key>
<string>MAC-stereo-2017-05-22</string>
<key>subtype</key>
<integer>1819045485</integer>
<key>type</key>
<integer>1635083896</integer>
<key>version</key>
<integer>0</integer>
</dict>
</plist>
hwref
hwmic
tsref
tsmic
epref
epmic
mmic1
mmic2
mmic3
mmic4
beam1
beam2
ecout
ec2ot
ec3ot
ec4ot
plyot
ply2o
eco1f
eco2f
eco3f
eco4f
ocnes
polyf
ply2f
bnfo1
bnfo2
bnfs1
bnfs2
fsout
esout
rsout
rs2ot
rs3ot
mmout
eclee
ec2le
ec3le
ec4le
plyle
ply2e
nfnso
res1g
res2g
res3g
rvspg
epout
pgout
eqout
agout
ldsout
usout
scout
ulout
uldat
dloau
dlfev
dlagc
dlmxo
dlveq
dlvol
dlwns
dlcnq
dlcng
dlsci
dlcfl
dlcflhf
dlcfllf
cpm1
dldec
dlheq
dlfceq
dlspp
dlspphf
dlspplf
dlout
sptel
times
props
errlg
gtlog
gtctl
dlctl
mclip
mfir1
mfir2
mfir3
mfir4
dlsso
dlvio
dlpeq
dlvbs
dlfds
dlspe
dlduk
dlmus
syslg
timlg
snsou
snsga
nrsou
supin
nsel0
nsel1
bss1_1
bss1_2
bss2
bssa
hneq
bemto
bemfo
bemfe
bemfs
bemfu
bemfb
dervb
derec
denos
denec
windk
windg
talin
talir
talou
rotd
rotc
msens
ldnm
splm
nnvi
ecres
ec2re
msout
ms2ot
mslee
msres
dldecmc
dlcnqmc
@@33s@
L>333?33
dlfev
dloau
dlout
hwref
hwmic
tsref
tsmic
epref
epmic
ulout
dlsso
dlvio
