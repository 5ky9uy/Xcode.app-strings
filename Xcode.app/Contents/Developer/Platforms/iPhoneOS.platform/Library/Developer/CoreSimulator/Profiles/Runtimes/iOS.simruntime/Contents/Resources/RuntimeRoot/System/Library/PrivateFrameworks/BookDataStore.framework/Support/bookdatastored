Process launch.
Process exit.
Daemon initializing.
TMP DIR ERROR: _set_user_dir_suffix Failed: %s
Daemon shutting down.
Daemon starting up.
Starting up bookdatastored daemon
Some error happened in pre-listener startup: %@
bookdatastored received sigterm signal
Daemon finished starting up.
Setting up listeners.
BDSBookWidgetReadingHistoryManager - current: %@
BDSBookWidgetReadingHistoryManager - detected changes:
    old = %@
    new = %@
BDSBookWidgetReadingHistoryManager - no changes
Failed to create directory for saving widget reading history data: %@
BDSUbiquityStatusMonitor CloudKit=%{public}@ optedIn=%{public}@
BDSUbiquityStatusMonitor: iCloud identity changed. {Refreshing with optedIn: %{public}@}
BDSUbiquityStatusMonitor: dq_isCloudKitEnabled: signedIn = %@, globalICloudDrive = %@, cloudKit = %@, self.optedIn = %@
BDSUbiquityStatusMonitor: dq_isICloudDriveEnabled: isICloudDriveSyncOptedIn = %@, isICloudDriveEnabled = %@
BDSUbiquityStatusMonitor: isCloudKitEnabled = %@
BDSUbiquityStatusMonitor: restartObserving was called
BDSUbiquityStatusMonitor: restartObserving cloudDriveOptedIn:%@
BDSUbiquityStatusMonitor: Books / iCloud Drive switch was %@
BDSUbiquityStatusMonitor: notifying observers of a token change
BDSUbiquityStatusMonitor: tokens match ... so we are not notifying anyone
BDSUbiquityStatusMonitor: iCloud identity changed. {iCloudEnabled: %@}
iCloud identity changed. {iCloudEnabled: %@}
BDSUbiquityStatusMonitor: iCloud identity changed. Notifying newToken:%@ oldToken:%@
BDSUbiquityStatusMonitor: iCloud identity changed. Notifying coordinating observer newToken:%@ oldToken:%@
BDSUbiquityStatusMonitor: dq_refreshUbiquityAvailabilityStatus container:%@ current::%@ oldToken:%@
BDSUbiquityStatusMonitor: Container URL set to: %{mask.hash}@
BDSUbiquityStatusMonitor: Error deleting the folder:[%@] : Error: {%@}
BDSUbiquityStatusMonitor: dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %{mask.hash}@}
BDSUbiquityStatusMonitor: Container URL set to: <nil>
BDSUbiquityDocumentsObserver: Have ubiquity URL: %{mask.hash}@
BDSUbiquityDocumentsObserver: No ubiquity URL
BDSUbiquityDocumentsObserver: No ubiquity identity
BDSUbiquityDocumentsObserver: iCloud identity changed. {iCloudEnabled: %d}
BDSUbiquityDocumentsObserver: restarting metadata query...
BDSUbiquityDocumentsObserver: stopping metadata query...
BDSUbiquityDocumentsObserver: Starting new metadata query
BDSUbiquityDocumentsObserver: Starting new metadata query: %@
Observing URL: %{mask.hash}@
Setting up query
BDSUbiquityDocumentsObserver: Starting metadata query: %@
Tearing down query
BDSUbiquityDocumentsObserver: Metadata query did start
BDSUbiquityDocumentsObserver: Metadata query did finish
Found %@ downloaded items
Created nosync directory
Failed to create nosync directory: %{mask.hash}@, %@
Found existing nosync directory
Failed to create subpath: %{mask.hash}@, %@
Handled Exception {%@}
BDSUbiquityManager: setEnableUbiquityObserving: %@
BDSUbiquityManager: ubiquityStatusChangedToAvailableWithNewIdentity: %{public}@ oldIdentity: %{public}@
BDSUbiquityManager: ubiquityStatusChangedToAvailableWithNewIdentity: Removing assets. count: %lu
BDSUbiquityManager: didLoadWithItems: count: %lu
BDSUbiquityManager: Initial gather complete
BDSUbiquityManager: itemsDidBecomeAvailable: count: %lu
BDSUbiquityManager: itemsDidBecomeUnavailable: count: %lu
BDSUbiquityManager: itemsDidChange: count: %lu
BDSUbiquityManager: mq_itemsDidChange: count: %lu
BDSUbiquityManager: updating cache for %lu items
BDSUbiquityManager: Could not determine file extension for %@
BDSUbiquityManager: extendedAttributeNamed: getxattr failed. xattr: %@ errno: %d url: %{mask.hash}@
BDSUbiquityManager: extendedAttributeNamed: xattr_name_with_flags failed. xattr: %@ errno: %d url: %{mask.hash}@
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
Updating current widget data to %ld with: %@
Initial fetch of widget info complete.
Error creating FRC for BookWidgetInfo: %@
No changes at startup, not notifying widget.
WidgetDataUpdater: explicitContentRestricted %{BOOL}d predicate:%@
Will notify widget of changes
Starting with %lu widget datas read from disk: %@
Error unarchiving currentWidgetData: %@
Didn't find current widget data file, starting fresh.
Successfully updated current widget data file.
Failed to write out current widget data: %@
Tried to remove current widget data file after failing to update it and failed with: %@
Calculating reading percent for %@ with bookmarkTime %f. Duration %@
Could not calculate reading progress for audiobook %@ with duration %@. AssetDetail: %@
Started monitoring reading progress for assetIDs %@
Error starting FRC to monitor reading progress: %@
Recieved callback from FRC that reading progress has changed.
Received callback from FRC that WidgetInfo list has changed.
Error fetching updated list of WidgetInfos: %@
No changes as result of FRC, not notifying widget.
Failed to create directory for saving widget data: %@
Received explicit content change:%{BOOL}d. Refreshing book widget info
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
acknowledgeiCloudIdentity
Done acknowledge iCloud identity: %{mask.hash}@
BDSSyncUserDefaults: isICloudDriveSyncOptedIn isPrimaryAccountManagedAppleID = %@ isBCSyncICloudDriveUserDefaults = %@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
BCCloudKitController - registerForSecureNotifications
BCCloudKitController - CKAccountStatusCouldNotDetermine: %@
BCCloudKitConttoller - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available
BCCloudKitConttoller - Error connecting user to database error=%{public}@
BCCloudKitConttoller - connectUserToConteinr subscription completed.
BCCloudKitController - CKAccountStatusRestricted
BCCloudKitController - CKAccountStatusNoAccount
BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable
BCCloudKitController (%{public}@) _coalescedAttachment
did not call completion after 10s in %{public}@
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %{public}@ serviceMode:%{public}@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed for %{public}@
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
Account Restricted.  Not syncing anything.  Account status error=%{public}@
Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
_coalescedArchive (%@)
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container: %@
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%@
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
BCCloudKitDatabaseController/attachToZones-cloud
BCCloudKitDatabaseController/attachToZones-secureData
[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@
[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@
BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation (%{public}@) failed: %{public}@
CKModifySubscriptionsOperation Success for: (%{public}@)
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes %@
[BCCloudKitDatabaseController (%@)] 2. p_createRecordZones:%@ database:%{public}@
3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]
5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@
CKModifyRecordZonesOperation success saving: %{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@
BCCloudKitDatabaseController - No PCS Identity available
BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@
CKFetchRecordZonesOperation failed: %{public}@
CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@
BCCloudKitDatabaseController - calling saveResultsBlock
CKFetchRecordZonesOperation Wanted:%@ Received:%@
(%{public}@) Establishing record salt
(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion
(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover
(%{public}@) Will save record salt
(%{public}@) Saving record salt....
(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)
(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@
(%{public}@) *** Got record salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@)- No record zone changes to fetch
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges Adding fetchRecordZoneChangesOperation=%@
BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@
%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP
p_informObserversOfSaltVersionIdentifierChanged DONE
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%{public}lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@
BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
Successfully saved widget reading history data.
Failed to write widget reading history data: %@
Tried to remove widget reading history data file after failing to save it and failed with: %@
Starting with widget reading history data read from disk: %@
Error unarchiving widget reading history data: %@
Didn't find widget reading history data file, starting fresh.
[Service]: Could not setup jalisco client
BDSService Paused=%{public}@ SignedIn=%{public}@ GlobalICloudDrive=%{public}@ CloudKit=%{public}@ LastRunVersion=%d isCloudKitEnabled=%{public}@
BDSService enabling assetSync: %{public}@ readingNow Sync: %{public}@
setCloudSyncPaused: %@
Unable to update jalisco - bookdatastored is missing a jalisco client
Unable to update jalisco family- bookdatastored is missing a jalisco client
Unable to hide jalisco items- bookdatastored is missing a jalisco client
Unable to hide jalisco items with store ids - bookdatastored is missing a jalisco client
Unable to reset purchased tokens- bookdatastored is missing a jalisco client
Unable to resetStaleJaliscoDatabase - bookdatastored is missing a jalisco client
Unable to update jalisco after sign in - bookdatastored is missing a jalisco client
Unable to update jalisco after sign out - bookdatastored is missing a jalisco client
Returning widget data: %@
Returning widget infos: %@
hasSaltChangedWithCompletion should not be called
_coalescedNotification in %@ did not call notification within 10s.
Found changes between %@ and %@:
[BDSJaliscoDAAPClient] Unable to initialize BDSJaliscoDAAPClient
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
[BCCloudKitTransactionManager] Creating syncToCKTransaction %@
[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@
[BCCloudKitTransactionManager] Transaction completed %@
Calling block %@ for transaction %@ 
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
AutomaticPinningList startUpdate
About to enable sync
Doing nothing because alreadyRunning is %{public}@
BDSAutomaticPinningListUpdater ReceviedFetchedRecordsChanged %lu
Was cancelled before fetching records finished. currentObserver:%lu
At least one manager wanted to continue, so updating the pinning lists.
Updating wantToReadAndReadingNow completed and we were not cancelled.
Updating wantToReadAndReadingNow completed but we were already cancelled.
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Cannot determine valid salt establishedSalt:%{BOOL}d systemFields:%{BOOL}d for record %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
BDSWidgetCenterManager - reload timeline
Unable to create persistent stores on the coordinator:%@
Error %{public}@: %{public}@ %d
Unable to migrate legacy database since file does not exist at URL %@
Unable to create cloud data source persistent store. Attempting to remove files and start over
Unable to recreate cloud data source persistent store. Giving up
Migrating legacy cloud data source from %@ to %@
Destroying legacy cloud data source at %@
Adding cloud data source persistent store for %@
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
BCCloudDataManager Incremented cloudSyncVersion to %lld
No managed object context!
BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ data:%@
Compraring local to cloudData for %@. isEqualExceptForDate:%{BOOL}d
Data diff! %@ hasChanges:%{BOOL}d
BCCloudDataManager: %@ Batch save to storeID:%@ with error:%@
BCCloudDataManager: %@ Save to storeID:%@ error:%@
BCCloudDataManager: %@ setCloudData fail, no moc
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@
Did not find %{public}@ to update sync gen from cloudData:%@
BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager resolveConflictsForRecords:%{public}@ did not find existing record.  Creating new from %@
BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@
BCCloudDataManager #recordChange failedRecordIDs:%{public}@
BCCloudDataManager %@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ #dissociateCloudData
BCCloudDataManager %@ #hasSaltChangedWithCompletion
No managed object context! #hasSaltChangedWithCompletion
BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Total success saving %lu records and deleting %lu records OperationID: %{public}@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %{public}@.  Operation ID: %{public}@
We want to update the bitrate so fetching master playlist for mediaItem: %@
Updating wantToRead:%d, readingNow:%d, manuallyPinned:%d jaliscoUpdateSuccessful:%d
found readingNow member for assetID: %@
found readingNow member with assetID "%@" that has no MediaItem.
returning mostRecentAudiobook with assetID: %@
updating bitrate for item with adamID %@
Error updating bitrate for item with adamID %@
Updated bitrate for item with adadmID: %@
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@
<%@ BCCloudChangeTokenController - No change yet we tried updating %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
SERVICE Creating %@
SERVICE Skip creating widgetInfoManager
Dealloc BCCloudAssetManager
BCCloudAssetManager - Service build - #enableCloudSync setEnableCloudSync %@ enableReadingNowSync %@
BCCloudAssetManager hasSaltChangedWithCompletion with managers:%@
BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion - Service mode - non watch
Initializing BCCloudAssetManager - Service mode
Trying to remove without IDs
Fetching assetDetailForAssetID on assetID:%@
Completed fetch of assetDetailForAssetID on assetID:%@ with error:%@
BDSNotificationConnection isWithinConnectionDateRange:%@
BDSNotificationConnection lastConnectionDate read as:%@
[Notification] Registering for notifications for container %@, pushEnv: %@
BDSNotificationConnection updated lastConnectionDate to:%@
[Notification] Received Public Token.
[Notification] Received APS Message with userInfo %@
Ignoring cloud notifications - Application has not been launched recently.
Processed Notifications - Application has been launched recently.
Ignored APSConnection message - not our connection, or no userInfo.
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail configured: %@ %@ from readingNowDetail:%@
BCReadingNowDetail compare %@ to self:%@ SAME:%{BOOL}d
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
Assuming cloudAssetType %@ Resolving: from record: %@ %@
BCReadingNowDetail %@ Resolving: Adopted properties from record: %@ %@
BCReadingNowDetail %@ Resolving: Identical properties from record: %@ %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCReadingNowDetail configuredRecordFromAttributes setting cloudAssetType:%@ for %@
BCReadingNowDetail BDSReadingNowSchemaContentAssetType disabled.
ReadingNowDetailDataSource did not have a valid moc.  That is unexpected.
Found %lu WidgetInfos with missing relationships while setting ReadingNowDetails
Error trying to find WidgetInfos that need relationships updated: %@
Updated WidgetInfo relationship while creating ReadingNowDetail.
[Widget] getRecentBooksExcludingAssetIDs:%@ predicate %@ 
needsReadingNowAssetTypePopulation:(%{BOOL}d) predicate %@ results %@
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
BDSMediaLibraryUtils No daap item found for %@
BDSMediaLibraryUtils No collections for %@
BDSMediaLibraryUtils Could not find audiobookQuery.
Registering event handlers
Received notification event with invalid name
Posting notification: %@
Received notification event with invalid type
Registered handler for notification events
BCSecureUserDatum configureFromCloudData wrong class passed in.
BCSecureUserDatum %@ Mismatch key from record key %@
BCSecureUserDatum %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCSecureUserDatum %@ No Record supplied
BCMutableSecureUserDatum init with no key supplied
BCMutableSecureUserDatum init with no record supplied
Need to create these details:%@
Got existing:%@
WidgetInfoManager unable to find widgetInfo error:%@
WidgetInfoManager getInfosWithLimit success with %lu items
WidgetInfoManager getInfosWithLimit failed error:%@
WidgetInfoManager unable to find widgetInfo matching %@ error:%@
setBookWidgetInfoWithStoreInfo %@
widgetInfos populated with storeInfo:%@
setBookWidgetInfo %@
BDSBookWidgetInfoMO readingNowDetails %@
Error looking up ReadingNowDetails for WidgetInfos: %@
BDSBookWidgetInfoMO %@ has NO readingNowDetail
BDSBookWidgetInfoMO %@ linked to %@
Creation/Update of %lu WidgetInfos succeeded.
Error creating WidgetInfos: %@
Unexpected cloudAssetType: %@ for assetID: %@
Failed to fetch store assets with, audiobookAssetIDs: %@, bookAssetIDs: %@, error: %@
Failed to fetch store assets with, assetIDs: %@, error: %@
Removing BDSBookWidgetInfoMO: %@
Could not delete BookWidgetInfo's with assetIDs: %@. Error: %@
didInsertNewRecords %@
didInsertNewRecords NOTHING TO DO
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
BDSNBController init.
BDSNBController fetch latest completed.
BDSNBController Initial fetch completed.
BDSNBController error: %@
BDSNBController fetchLatest
Error trying to write updated assetDetail for assetID: %@ error: %@
Failed to write updated assetDetail for assetID %@ with no error reported.
Updated assetDetail for assetID %@
BDSNBController attempting to update bookmark time from assetDetail %@
BDSNBController Setting bookmark time %f for media item assetDetail %@
BDSNBController media item has a newer date. Updating asset:%@. from mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController media item has the same date, not updating asset:%@. mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController No media items for %@
BDSNBController fetching changes since cloudSyncVersions: %@
BDSNBController Updating from assetDetails: updated (%lu) removed (%lu)
BDSNBController skipping non-store audiobook assetID: %@
BDSNBController skipping assetDetail without datePlaybackTimeUpdated for assetID: %@
BDSNBController fetching again while updating assetDetails.
BDSNBController done fetching while updating assetDetails.
Initializing service delegate.
Service delegate released.
Received incomming connection request.
Refusing connection to pid %d. (appIdentifier: %@)
Accepted connection to %d.
Instantiating BDSService.
Checking if an account change happened, necessitating our process going away.
User logged out. Shutting down.
Checking if cloud data should get deleted.
User logged out from iCloud.  Deleting local copies of cloud data.
Deleted local copies of cloud data in response to logout.
Deleting cloud data.
Completed deleting cloud data
BDSMediaLibraryManager: SyncValidity is the same. Last: %@, Lib: %@
BDSMediaLibraryManager: SyncValidity changed. Last: %@, Lib: %@. Setting anchor to: %@. Recording new syncValidity and anchor
BDSMediaLibraryManager: Performing intial fetch...
BDSMediaLibraryManager: Recieved MPMediaLibraryEntitiesAddedOrRemovedNotification
Could not get collection from entity: %@
No assetID found for item: %@. MPMediaEntity: %@. MPMediaItemCollection %@
Could not get assetID from item: %@. Entity: %@
No assetID found for item: %@. collection: %@
BDSMediaLibraryManager: Finished initial gather
DEBUG: gathered MediaLibrary items: %@
BDSMediaLibraryManager: Could not create audiobookQuery
BDSMediaLibraryManager: Failed to generate assetID for media item %@.
BDSMediaLibraryManager: No storeID for media item %@. isPurchaseHistoryItem: %@
[BDSSaltVersionIdentifierManager] init with %@ %@. Adding to zone:(%@)
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ ---1. %@  
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.
[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError 
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing
Initializing BCCloudCollectionsManager - Service mode
BCCloudCollectionsManager SERVICE #enableCloudSync setEnableCloudSync:completion %@
BCCloudCollectionsManager collectionDetailManagerInstancecompleted enableCloudSync %{BOOL}d
BCCloudCollectionsManager collectionMemberManagerInstance completed enableCloudSync %{BOOL}d
BCCloudCollectionsManager - SERVICE setEnableCloudSync:completion DONE
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCloudCollectionsManager hasSaltChangedWithCompletion %@
BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
Error adding storeItem for storeID: %@
Error <BCCloudCollectionMemberManager setCollectionMember:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchCollectionMembersIncludingDeleted:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchMaxSortOrderInCollectionID:> {%@}
daemon
start
mainRunLoop
init
dealloc
listenersReadyQueue
lrq_setupListeners
setSigterm_source:
sigterm_source
startupQueue
sq_finishedStartingUp
lrq_setupBeforeListenersWithCompletion:
notificationConnection
didAcceptConnection:
initWithServiceConnectionClient:
setServiceDelegate:
initWithMachServiceName:
setServiceListener:
serviceDelegate
serviceListener
setDelegate:
resume
setNotificationConnection:
startListeningForNotifications
makeOSStateHandler
setSyncUserDefaultsStateHandler:
serviceDelegate:didAcceptConnection:
setListenersReadyQueue:
setStartupQueue:
syncUserDefaultsStateHandler
.cxx_destruct
_serviceDelegate
_listenersReadyQueue
_startupQueue
_serviceListener
_syncUserDefaultsStateHandler
_notificationConnection
_sigterm_source
T@"BDSServiceDelegate",&,N,V_serviceDelegate
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
T@"NSXPCListener",&,N,V_serviceListener
T@"BUOSStateHandler",&,N,V_syncUserDefaultsStateHandler
T@"BDSNotificationConnection",&,N,V_notificationConnection
T@"NSObject<OS_dispatch_source>",&,N,V_sigterm_source
setWidgetCenterManager:
_dataURL
load:
lastState
stateInfo
_processViewStateChange:
books
userDefaults
boolForKey:
initWithStateInfo:readingGoalsEnabled:
isEqual:
save:
widgetCenterManager
reloadWidgetTimelines
containerURL
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathComponent:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
handleReadingHistoryViewStateChange:
currentViewStateInfo
T@"BDSReadingHistoryStateInfo",R,N
initWithWidgetCenterManager:
setLastState:
_accessLock
_saveQueue
_lastState
_widgetCenterManager
T@"BDSWidgetCenterManager",&,N,V_widgetCenterManager
T@"BDSBookWidgetReadingHistoryData",&,N,V_lastState
bundleForClass:
bundleURL
count
pointerAtIndex:
errorWithDomain:code:userInfo:
methodForSelector:
removePointerAtIndex:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
countByEnumeratingWithState:objects:count:
valueForKey:
copyWithZone:
setObject:forKeyedSubscript:
copy
objectAtIndex:
null
addObject:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
subarrayWithRange:
initWithOptions:
addPointer:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNulls
bds_traverseBatchesOfSize:block:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:
initWithCapacity:
objectForKeyedSubscript:
bds_subDictionaryWithKeys:
hashTableWithOptions:
isPrimaryAccountManagedAppleID
standardUserDefaults
isICloudDriveSyncOptedIn
dq_refreshUbiquityAvailabilityStatus
defaultCenter
p_ubiquityIdentityDidChange:
addObserver:selector:name:object:
isCloudKitEnabled
optedInKnown
setOptedIn:
refreshUbiquityTokensAndUpdateWithOptedIn:
optedIn
dispatchQueue
dq_archiveCurrentUbiquityIdentityToken
removeObserver:
lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
lastArchivedNonNilUbiquityIdentityToken
currentUbiquityIdentityToken
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
dq_isCloudKitEnabled
dq_isICloudDriveEnabled
observers
containsObject:
removeObject:
setCoordinatingObserver:
lastArchivedUbiquityIdentityToken
archivedCloudDriveOptedIn
setArchivedCloudDriveOptedIn:
_notifyObserversWithCurrentToken:lastToken:
token
setObject:forKey:
synchronize
ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:
notifyQueue
coordinatingObserver
tokenForCurrentIdentityIfICloudDriveEnabled
initFromArchive:
containerIdentifier
containerQueue
URLForUbiquityContainerIdentifier:
setContainerURL:
setDocumentsURL:
path
contentsOfDirectoryAtPath:error:
rangeOfString:
removeItemAtURL:error:
coordinateWritingItemAtURL:options:error:byAccessor:
ubiquityDocumentsURLChanged:
isICloudDriveEnabled
documentsURL
stringWithFormat:
updateWithOptedIn:
userIdentityPreviouslyRecordedOnThisDevice
ubiquityIdentityToken
addObserver:
registerCoordinatingObserver:
restartObserving
description
setLastArchivedUbiquityIdentityToken:
setLastArchivedNonNilUbiquityIdentityToken:
setCurrentUbiquityIdentityToken:
setContainerIdentifier:
setOptedInKnown:
setLastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch:
setDispatchQueue:
setContainerQueue:
setNotifyQueue:
setObservers:
_optedIn
_archivedCloudDriveOptedIn
_optedInKnown
_lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
_lastArchivedUbiquityIdentityToken
_lastArchivedNonNilUbiquityIdentityToken
_currentUbiquityIdentityToken
_containerIdentifier
_containerURL
_documentsURL
_dispatchQueue
_containerQueue
_notifyQueue
_observers
_coordinatingObserver
T@"BDSICloudIdentityToken",C,N,V_lastArchivedUbiquityIdentityToken
T@"BDSICloudIdentityToken",C,N,V_lastArchivedNonNilUbiquityIdentityToken
T@"BDSICloudIdentityToken",C,N,V_currentUbiquityIdentityToken
T@"NSString",C,N,V_containerIdentifier
T@"NSURL",C,N,V_containerURL
T@"NSURL",C,N,V_documentsURL
TB,N,V_archivedCloudDriveOptedIn
TB,N,V_optedIn
TB,N,V_optedInKnown
TB,N,V_lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"NSHashTable",&,N,V_observers
T@"<BDSUbiquityStatusChangeObserving>",W,N,V_coordinatingObserver
T@"BDSICloudIdentityToken",R,C,N
TB,R,N
setValue:forKey:
setDifferentValue:forKey:klass:
dictionary
setDifferentObject:forKey:
setDifferentString:forKey:
setDifferentNumber:forKey:
setDifferentDate:forKey:
propertiesForKeys:
stopNotifier
UTF8String
reachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
sharedReachabilityForInternetConnection
currentReachabilityStatus
reachabilityForInternetConnection
reachabilityWithHostName:
reachabilityForLocalWiFi
_updateIsOffline
isOffline
startNotifier
connectionRequired
localWiFiRef
reachabilityRef
postNotificationName:object:
isLocal
numberWithBool:
isNotLocal
isUploading
isUploaded
isDownloading
downloadingPercent
uploadingPercent
uploadingError
unresolvedConflict
contentChangedDate
contentCreationDate
contentFileSize
setUrl:
setIsLocal:
setIsNotLocal:
setIsUploading:
setIsUploaded:
setIsDownloading:
setDownloadingPercent:
setUploadingPercent:
setUploadingError:
setUnresolvedConflict:
setContentChangedDate:
setContentCreationDate:
setContentFileSize:
_isLocal
_isNotLocal
_isUploading
_isUploaded
_isDownloading
_url
_downloadingPercent
_uploadingPercent
_uploadingError
_unresolvedConflict
_contentChangedDate
_contentCreationDate
_contentFileSize
T@"NSURL",C,N,V_url
TB,N,V_isLocal
TB,N,V_isNotLocal
TB,N,V_isUploading
TB,N,V_isUploaded
TB,N,V_isDownloading
T@"NSNumber",C,N,V_downloadingPercent
T@"NSNumber",C,N,V_uploadingPercent
T@"NSError",C,N,V_uploadingError
T@"NSNumber",C,N,V_unresolvedConflict
T@"NSDate",C,N,V_contentChangedDate
T@"NSDate",C,N,V_contentCreationDate
T@"NSNumber",C,N,V_contentFileSize
setIdentity:
ubiquityStatusMonitor
setPostLoadBlocks:
identity
q_createSubpathDirectories
restartQuery
queue
tearDownQuery
setOperationQueue:
operationQueue
setMaxConcurrentOperationCount:
predicateWithFormat:
setPredicate:
arrayWithObjects:count:
setSearchScopes:
metadataQueryQueue
mq_setupQuery:
documentsURL:
setLoaded:
mq_tearDownQuery
_identityData
_noSyncURL
isLoaded
postLoadBlocks
setQuery:
mq_queryDidStart:
mq_queryDidFinish:
mq_queryDidUpdate:
enableUpdates
startQuery
query
stopQuery
removeObserver:name:object:
disableUpdates
_replacementObjectForResultObject:
enumerateResultsUsingBlock:
numberWithUnsignedInteger:
delegate
ubiquityDocumentsObserver:didLoadWithItems:
removeAllObjects
userInfo
_itemsForMetadataItems:
ubiquityDocumentsObserver:itemsDidBecomeAvailable:
ubiquityDocumentsObserver:itemsDidBecomeUnavailable:
ubiquityDocumentsObserver:itemsDidChange:
archivedDataWithRootObject:requiringSecureCoding:error:
directoriesSubpath
fileExistsAtPath:
array
enumerateObjectsUsingBlock:
valueForAttribute:
isEqualToString:
boolValue
noSyncURL
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithDelegate:ubquityStatusMonitor:directoriesSubpath:
identityData:
containerURL:
dataURL:
noSyncURL:
identityAndURLs:
evaluateBlockWhenLoaded:
setDirectoriesSubpath:
setUbiquityStatusMonitor:
setQueue:
setMetadataQueryQueue:
setNoSyncURL:
_loaded
_delegate
_directoriesSubpath
_ubiquityStatusMonitor
_queue
_metadataQueryQueue
_query
_identity
_postLoadBlocks
T@"<BDSUbiquityDocumentsObserverDelegate>",W,N,V_delegate
T@"BDSUbiquityStatusMonitor",W,N,V_ubiquityStatusMonitor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_metadataQueryQueue
T@"NSMetadataQuery",&,N,V_query
T@"BDSICloudIdentityToken",&,N,V_identity
T@"NSURL",&,N,V_containerURL
T@"NSURL",&,V_noSyncURL
T@"NSMutableArray",&,N,V_postLoadBlocks
loaded
TB,N,GisLoaded,V_loaded
T@"NSString",&,N,V_directoriesSubpath
initWithObjects:
andPredicateWithSubpredicates:
entityForName:inManagedObjectContext:
setEntity:
countForFetchRequest:error:
logRecursively
setResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
arrayWithObject:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
lastObject
insertNewObjectForEntityForName:inManagedObjectContext:
setIncludesPropertyValues:
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
setFetchLimit:
setFetchBatchSize:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
im_pushSafeAccessState
name
im_popSafeAccessState
countEntity:withPredicate:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
deleteObject:
batchDeleteEntity:matching:prefetchRelationships:
persistentStores
setWithArray:
intersectsSet:
hasStoreInCommonWith:
bds_addObjectIfNotNil:
ivarQueue
ubiquityObservingEnabled
setUbiquityObservingEnabled:
iq_setupUbiquityObservers
iq_teardownUbiquityObservers
iq_urlFromAssetID
observerCallbackQueue
observer
ubiquityManagerDidFinishInitialGather:
allKeys
_ubiquityMetadataForURL:
iq_clearCachesForAssetIDs:notify:
allValues
setWithSet:
minusSet:
intersectSet:
indexesOfObjectsPassingTest:
objectsAtIndexes:
mq_itemsDidBecomeAvailable:block:notify:
mq_itemsDidChange:block:notify:
allObjects
mq_itemsDidBecomeUnavailable:block:notify:
mq_batchOfItemsDidBecomeAvailable:block:notify:
iq_updateCachesForItems:notify:
mq_batchOfItemsDidBecomeUnAvailable:block:notify:
iq_clearCachesForURLs:notify:
mq_batchOfItemsDidChange:block:notify:
objectForKey:
ubiquityManager:addedItemWithAssetID:metadata:
ubiquityManager:updatedItemWithAssetID:metadata:
ubiquityManager:removedItemWithAssetID:
_buildUbiquityMetadataDict:
coordinateReadingItemAtURL:options:error:byAccessor:
_fileExtensionForUrl:
_setValueInMutableDictionary:forKey:withValueForExtendedAttributeNamed:fromUrl:
absoluteString
componentsSeparatedByString:
objectAtIndexedSubscript:
_extendedAttributeNamed:iCloudSyncable:url:
initWithCString:encoding:
setEnableUbiquityObserving:
allAssetIDs
ubiquityMetadataForAssetID:
setObserver:
setObserverCallbackQueue:
setIvarQueue:
processMetadataQueryQueue
setProcessMetadataQueryQueue:
setIq_urlFromAssetID:
ubiquityDocumentsObserver
setUbiquityDocumentsObserver:
_ubiquityObservingEnabled
_observer
_observerCallbackQueue
_ivarQueue
_processMetadataQueryQueue
_iq_urlFromAssetID
_ubiquityDocumentsObserver
T@"NSObject<OS_dispatch_queue>",&,N,V_ivarQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processMetadataQueryQueue
TB,N,V_ubiquityObservingEnabled
T@"NSMutableDictionary",&,N,V_iq_urlFromAssetID
T@"BDSUbiquityDocumentsObserver",&,N,V_ubiquityDocumentsObserver
T@"BDSUbiquityStatusMonitor",&,N,V_ubiquityStatusMonitor
T@"<BDSUbiquityManagerObserver>",W,N,V_observer
T@"NSObject<OS_dispatch_queue>",&,N,V_observerCallbackQueue
currentStreak
longestStreak
today
readingHistory
isEqualToArray:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeInteger:forKey:
encodeObject:forKey:
setCurrentStreak:
setLongestStreak:
setToday:
setReadingHistory:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithCurrentStreak:longestStreak:today:readingHistory:
_currentStreak
_longestStreak
_today
_readingHistory
Tq,N,V_currentStreak
T@"BDSReadingHistoryStreakInfo",&,N,V_longestStreak
T@"BDSReadingHistoryDayInfo",&,N,V_today
T@"NSArray",&,N,V_readingHistory
bds_UUID
length
initWithFormat:arguments:
stringWithCString:encoding:
lastPathComponent
numberWithInt:
initWithTransactionName:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
localizedDescription
localizedFailureReason
localizedRecoverySuggestion
localizedRecoveryOptions
mainBundle
objectForInfoDictionaryKey:
appVersion
_initWithSuiteName:container:
syncedPreferenceKeys
objectFromGroupPreferencesForKey:
T@"NSArray",R,N
stringByAppendingString:
processInfo
environment
isUnitTesting
stringByAppendingPathComponent:
removeItemAtPath:error:
fileURLWithPath:
bu_booksGroupContainerURL
setUnitTesting:
unitTesting
TB,GisUnitTesting
T@"NSURL",R
setName:
setAutomaticallyMergesChangesFromParent:
setMergePolicy:
sharedInstance
_moc_updateAndMonitorBookWidgetInfo
assetID
setCurrentWidgetDatas:currentWidgetDatasByAssetID:
_readCurrentWidgetDatas
performBlock:
_startObserving
_stopObserving
_newWidgetInfoFetchRequest
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
setFetchedResultsController:
performFetch:
fetchedObjects
_moc_updateWidgetDataFromWidgetInfo:
_widgetDatasHaveChanged
currentCalendar
date
dateByAddingUnit:value:toDate:options:
startOfDayForDate:
fetchRequest
sortDescriptorWithKey:ascending:
isExplicitMaterialAllowed
predicateToExcludeLibraryAssetsWithExplicitContent
isExplicitContentAllowed
currentWidgetDatas
currentWidgetDatasByAssetID
title
pageProgressionDirection
coverURL
readingProgress
libraryContentAssetType
initWithAssetID:title:pageProgressionDirection:coverURL:readingProgress:libraryAssetType:
totalDuration
setTotalDuration:
hasSignificantDifferenceWith:
_moc_updateAndMonitorProgressForWidgetDatas:
_saveCurrentWidgetDatas
widgetDataURL
dataWithContentsOfURL:
unarchivedArrayOfObjectsOfClass:fromData:error:
setCurrentWidgetDatas:
initRequiringSecureCoding:
setOutputFormat:
encodedData
writeToURL:options:error:
isAudiobook
doubleValue
bookmarkTime
numberWithDouble:
isEqualToNumber:
setReadingProgress:
setProgressFetchedResultsController:
_moc_updateWidgetDatas:fromAssetDetails:
progressFetchedResultsController
fetchedResultsController
execute:
performBlockAndWait:
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
restrictionsForBookStoreAllowedChanged:
restrictionsForExplicitContentAllowedChanged:
restrictionsForAccountModificationAllowedChanged:
T@"NSURL",R,N
initWithWidgetCenterManager:managedObjectContext:
_dataLock
_currentWidgetDatas
_currentWidgetDatasByAssetID
_moc
_fetchedResultsController
_progressFetchedResultsController
T@"NSManagedObjectContext",R,N,V_moc
T@"NSFetchedResultsController",&,N,V_fetchedResultsController
T@"NSFetchedResultsController",&,N,V_progressFetchedResultsController
T@"NSDictionary",R,C,N,V_currentWidgetDatasByAssetID
T@"BDSWidgetCenterManager",R,N,V_widgetCenterManager
T@"NSArray",R,C,N,V_currentWidgetDatas
dictionaryWithContentsOfURL:
mutableCopy
trackLiverpool
tokenForCurrentIdentityIfCloudKitEnabled
initWithCurrentIdentity
setCurrentToken:
initWithToken:
currentToken
plistContents
removeObjectForKey:
plistURL
writeToURL:atomically:
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
setPlistContents:
setPlistURL:
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
T@"NSMutableDictionary",&,N,V_plistContents
T@"NSURL",&,N,V_plistURL
T@"BDSICloudIdentityToken",&,N,V_currentToken
TB,N,V_trackLiverpool
primaryAppleAccount
accountType
identifier
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
aa_altDSID
_stateForLog
initWithTitle:block:
_isBundleIdentifierInArray:
iCloudIdentity
dictionaryWithObjects:forKeys:count:
isUserSignedInToiCloud
_hashFor:
dataUsingEncoding:
bu_md5UpperCase
setToken:
_token
T@"NSString",C,N,V_token
setQueueIdentifier:
setAppZones:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
bdsAppBundleIdentifier
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",R,N
_requiresDeviceToDeviceEncryption
_queueIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
initWithConfiguration:
initWithCloudKitController:
setTransactionManager:
p_privateDatabaseArchiveURLForConfiguration:
initWithSubscriptionID:appBundleIdentifier:archiveURL:
hasSubscription
containerWithIdentifier:
setSourceApplicationBundleIdentifier:
registerForSecureNotifications
privateCloudDatabase
detach
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
accountStatusWithCompletionHandler:
setConfiguration:
p_accountChanged:
p_identityChanged:
serviceMode
willAttachToContainer:serviceMode:completion:
accessQueue
p_updateAttachment
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
setCoalescingDelay:
coalescedAttachment
signalWithCompletion:
privateCloudDatabaseController
gettingAccountInfo
enableCloudSync
p_getAccountInfo
setContainer:
container
transactionManager
signalFetchChangesTransaction:
getAttached:
databaseFolderURLForConfiguration:
secureSharedInstance
initFileURLWithPath:isDirectory:
p_createDatabaseArchiveDirectoryForConfiguration:
stringByAppendingPathExtension:
accountInfoWithCompletionHandler:
setGettingAccountInfo:
supportsDeviceToDeviceEncryption
attachToZones:completion:
p_getNecessaryAccountInfoFromContainer:completion:
notificationFromRemoteNotificationDictionary:
subscriptionID
detachWithError:completion:
deleteCloudDataWithCompletion:
T@"BCCloudKitController",R
setEnableCloudSync:serviceMode:
applicationDidBecomeActive
handleRemoteNotification:
setPrivateCloudDatabaseController:
didChangeContainer
setDidChangeContainer:
setAccessQueue:
setEnableCloudSync:
setServiceMode:
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_enableCloudSync
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_container
_accessQueue
_coalescedAttachment
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
T@"CKContainer",&,N,V_container
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
TB,N,V_gettingAccountInfo
TB,N,V_enableCloudSync
TB,N,V_serviceMode
TB,N,V_didChangeContainer
T@"<BCContainerConfiguration>",&,N,V_configuration
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
recordZone
initWithRecordZone:
_recordZone
T@"CKRecordZone",R,N,V_recordZone
strongToWeakObjectsMapTable
p_unarchive
p_internetReachabilityChanged:
p_archiveToData
database
attachedToContainer
fetchRecordZoneChangesSuccess
setAttachedToContainer:
p_informObserversOfAttachmentChange
p_fetchZoneChanges:
changedRecordZoneIDs
coalescedZoneFetch
p_fetchDatabaseChanges:
fetchRecordWithID:completionHandler:
p_unsubscribeToContainer:
setHasSubscription:
setServerChangeToken:
p_scheduleArchiveWithCompletion:
p_subscribeWithCompletion:
fetchUserRecordIDWithCompletionHandler:
containsString:
initWithZoneName:ownerName:
desiredRecordZoneIDs
fetchChangesWithCompletion:
p_createRecordIDSaltWithCompletion:
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableWithError:completion:
p_createRecordZones:completionHandler:
recordZones
recordIDSalt
bytes
dataWithBytes:length:
base64EncodedStringWithOptions:
saltedAndHashedIDFromLocalID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
bds_defaultConfiguration
setDatabase:
setModifySubscriptionsCompletionBlock:
addOperation:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
operationID
serverChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithRecordZoneIDs:
zoneID
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
arrayByAddingObjectsFromArray:
setModifyRecordZonesCompletionBlock:
code
isEqualToSet:
setFetchRecordZonesCompletionBlock:
initWithRecordName:
encryptedValuesByKey
setRecordIDSalt:
recordChangeTag
p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:
initWithRecordType:recordID:
domain
initWithName:reason:userInfo:
saveRecord:completionHandler:
serverFetchPostponed
tokenStores
cloudSyncEnabled
zoneName
p_informObserversOfCompletedFetchOfZone:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
serverChangeTokenWithCompletion:
setPreviousServerChangeToken:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
setBackOffInterval:
backOffInterval
initWithRecordZoneIDs:configurationsByRecordZoneID:
setQualityOfService:
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
recordID
recordType
p_informObserversOfRecordsChanged:forRecordType:
setRecordChangedBlock:
databaseController:recordWithIDWasDeleted:recordType:
setRecordWithIDWasDeletedBlock:
p_informObserversOfRecordsChanged:
storeServerChangeToken:completion:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setServerFetchPostponed:
p_updateRetryParametersFromFetchZoneChangesOperationError:
setFetchRecordZoneChangesSuccess:
setFetchRecordZoneChangesCompletionBlock:
databaseController:reachabilityChanged:
databaseController:attachmentChanged:
enumerateKeysAndObjectsUsingBlock:
zoneObservers
databaseController:saltVersionIdentifierChanged:completion:
initWithArray:copyItems:
databaseController:recordsChanged:
databaseController:fetchedAllRecordsInZone:
coalescedArchive
archiveURL
initWithContentsOfURL:
p_unarchiveFromData:
userRecordID
finishEncoding
initForReadingFromData:error:
setUserRecordID:
finishDecoding
encodeSystemFieldsWithCoder:
_deleteRecordZonesWithIDs:qualityOfService:completion:
removeObjectsAtIndexes:
encodeRecordSystemFields:
decodeRecordFromSystemFields:
startInternetConnectionReachabilityNotifier
establishedSalt
recordNameFromRecordType:identifier:
fetchRecordForRecordID:completion:
recordZoneWithName:completionHandler:
addObserver:recordType:
removeObserver:recordType:
addObserver:zoneID:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
setSubscriptionID:
setArchiveURL:
setDesiredRecordZoneIDs:
setChangedRecordZoneIDs:
setCoalescedArchive:
setRecordZones:
setZoneObservers:
setTokenStores:
setCoalescedZoneFetch:
_zoneObserversLock
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_zoneObservers
_tokenStores
_coalescedZoneFetch
_backOffInterval
T@"CKDatabase",&,N,V_database
T@"NSURL",C,N,V_archiveURL
T@"NSArray",C,N,V_desiredRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
T@"NSString",C,N,V_subscriptionID
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
T@"NSMutableDictionary",&,N,V_recordZones
T@"NSMutableDictionary",&,N,V_observers
T@"NSMapTable",&,N,V_zoneObservers
T@"NSMutableDictionary",&,N,V_tokenStores
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
TB,N,V_attachedToContainer
Td,N,V_backOffInterval
TB,N,V_serverFetchPostponed
TB,N,V_fetchRecordZoneChangesSuccess
TB,N,V_hasSubscription
componentsJoinedByString:
setAssetDetails:completion:
setClasses:forSelector:argumentIndex:ofReply:
getAssetDetailChangesSince:completion:
assetDetailsForAssetIDs:completion:
fetchAssetDetailsIncludingDeleted:completion:
fetchAssetDetailsForUnsyncedTastes:
setReadingNowDetails:completion:
getReadingNowDetailChangesSince:completion:
readingNowDetailsForAssetIDs:completion:
setAssetReviews:completion:
getAssetReviewChangesSince:completion:
assetReviewsForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
addStoreItems:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
setCollectionDetails:completion:
getCollectionDetailChangesSince:completion:
collectionDetailsForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
setCollectionMembers:completion:
getCollectionMemberChangesSince:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
setBookWidgetInfo:completion:
setUserDatum:completion:
setByAddingObjectsFromArray:
setUserData:completion:
fetchUserDataIncludingDeleted:completion:
getUserDataChangesSince:completion:
getBookWidgetDataWithLimit:completion:
getBookWidgetInfoWithLimit:completion:
configureInterface:
readingGoalsEnabled
decodeBoolForKey:
encodeBool:forKey:
setStateInfo:
setReadingGoalsEnabled:
unarchivedObjectOfClass:fromData:error:
_readingGoalsEnabled
_stateInfo
T@"BDSReadingHistoryStateInfo",&,N,V_stateInfo
TB,N,V_readingGoalsEnabled
fetchRequestWithEntityName:
initWithEntity:insertIntoManagedObjectContext:
initIntoManagedObjectContext:
localSaltVersionIdentifier
T@"NSString",&,D,N
serverSaltVersionIdentifier
prewarm
sharedService
sharedManager
assetDataSource
initWithCloudDataSource:
sharedClient
jaliscoDAAPService
initWithReadingGoalsService:viewStateChangeHandler:
tccAccessChanged:
enableSyncChanged:
_updateEnableSync
integerForKey:
paused
assetManager
setEnableCloudSync:enableReadingNowSync:
readingHistoryService
cloudCollectionsManager
secureUserDataManager
setEnableSecureUserDataCloudSync:
setPaused:
dissociateCloudDataFromSyncWithCompletion:
assetDetailManager
assetDetailForAssetID:completion:
resolvedAssetDetailForAssetID:completion:
currentAssetDetailCloudSyncVersions:
deleteAssetDetailForAssetID:completion:
setAssetDetail:completion:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
readingNowDetailManager
currentReadingNowDetailCloudSyncVersions:
deleteReadingNowDetailForAssetID:completion:
needsReadingNowAssetTypePopulation:
assetReviewManager
assetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
setAssetReview:completion:
storeAssetManager
addStoreItem:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
storeItemForStoreID:completion:
collectionDetailManager
collectionDetailForCollectionID:completion:
currentCollectionDetailCloudSyncVersions:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
setCollectionDetail:completion:
collectionMemberManager
collectionMemberForCollectionMemberID:completion:
currentCollectionMemberCloudSyncVersions:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
setCollectionMember:completion:
fetchMaxSortOrderInCollectionID:completion:
mostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
currentCloudSyncVersions:
deleteUserDatumForKey:completion:
userDatumForKey:completion:
userDatumIncludingDeleted:forKey:completion:
resolvedUserDataValueForKey:completion:
userDataValueForKey:completion:
setUserDataValue:forKey:completion:
audiobookStoreIsAvailable:
updatePolitely:reason:completionWithError:
updatePolitely:reason:completion:
updateFamilyPolitely:reason:completion:
updateFamilyPolitely:reason:completionWithError:
setItemHidden:forStoreID:completion:
hideItemsWithStoreIDs:completion:
resetPurchasedTokenForStoreIDs:completion:
deleteItemsWithStoreIDs:completion:
resetStaleJaliscoDatabaseWithCompletion:
updatePolitelyAfterSignIn:reason:completion:
updatePolitelyAfterSignOut:reason:completion:
widgetDataUpdater
widgetInfoManager
getInfosWithLimit:completionHandler:
readingGoalsService
changeBooksFinishedGoalTo:completionHandler:
changeDailyGoalTo:completionHandler:
clearDataWithCompletionHandler:
clearLocalCachedDataWithCompletionHandler:
stateInfoWithCompletionHandler:
clearDefaultsCachedDataWithCompletionHandler:
clearTodayWithCompletionHandler:
readingHistoryModelSnapshotInfoWithCurrentTime:completionHandler:
readingHistoryStateInfoWithRangeStart:rangeEnd:currentTime:completionHandler:
handleSyncFileChangeWithSyncVersionInfo:completionHandler:
incrementWithDate:by:completionHandler:
bookWidgetReadingHistoryStateInfoWithCompletionHandler:
addStoreID:toCollectionID:completion:
mergeMovedReadingHistoryDataWithCompletionHandler:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
hasSaltChangedWithCompletion:
setEnableCollectionSync:
setCloudSyncPaused:
fetchMostRecentAudiobookWithCompletion:
readingGoalsChangeBooksFinishedGoalTo:withCompletion:
readingGoalsChangeDailyGoalTo:withCompletion:
readingGoalsClearDataWithCompletion:
readingGoalsClearLocalCachedDataWithCompletion:
readingGoalsStateInfoWithCompletion:
readingHistoryClearDataWithCompletion:
readingHistoryClearDefaultsCachedDataWithCompletion:
readingHistoryClearTodayWithCompletion:
readingHistoryHandleSyncFileChangeWithSyncVersionInfo:completion:
readingHistoryIncrementWithDate:by:withCompletion:
readingHistoryReadingHistoryModelSnapshotInfoWithCurrentTime:withCompletion:
readingHistoryReadingHistoryStateInfoWithRangeStart:rangeEnd:currentTime:withCompletion:
bookWidgetReadingHistoryStateInfoWithCompletion:
audiobookStoreEnabledWithCompletion:
addStoreIDtoWantToReadList:withCompletion:
clientDetectedPredicateChange:
clientDetectedPurchaseServerClientExpired:
clientDetectedStoreChange:
clientDetectedStoreChangeAndAccountChange:
setAssetManager:
setCloudCollectionsManager:
setSecureUserDataManager:
nanoBooksController
setNanoBooksController:
setJaliscoDAAPService:
notificationForwarder
setNotificationForwarder:
setReadingGoalsService:
setReadingHistoryService:
_authenticatorsLock
_paused
_assetManager
_cloudCollectionsManager
_secureUserDataManager
_nanoBooksController
_jaliscoDAAPService
_notificationForwarder
_readingGoalsService
_readingHistoryService
TB,N,V_paused
T@"BCCloudAssetManager",W,N,V_assetManager
T@"BCCloudCollectionsManager",W,N,V_cloudCollectionsManager
T@"<BCCloudSecureUserDataManager>",W,N,V_secureUserDataManager
T@"BDSNBController",&,N,V_nanoBooksController
T@"BDSJaliscoDAAPServiceImpl",&,N,V_jaliscoDAAPService
T@"BDSNotificationForwarder",&,N,V_notificationForwarder
T@"BDSReadingGoalsService",&,N,V_readingGoalsService
T@"BDSReadingHistoryService",&,N,V_readingHistoryService
endDate
setEndDate:
setLength:
initWithEndDate:length:
_endDate
_length
T@"NSDate",&,N,V_endDate
Tq,N,V_length
transactionName
cStringUsingEncoding:
performWorkWithCompletion:
coalescingDelay
entityName
transactionNameForEntityName:
lifecycleAccessQueue
clientCount
setClientCount:
transactionLifetime
coalescedNotification
laq_scheduleTransactionLifetime
transactionCompleted:
setTransactionLifetime:
initWithEntityName:delegate:
transactionLifetimeTimout
clientConnected
signal
setEntityName:
setCoalescedNotification:
setLifecycleAccessQueue:
_entityName
_coalescedNotification
_lifecycleAccessQueue
_transactionLifetime
_clientCount
T@"NSString",C,N,V_entityName
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
T@"BDSOSTransaction",&,N,V_osTransaction
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
Tq,N,V_clientCount
libraryAssetType
setAssetID:
setTitle:
setPageProgressionDirection:
setCoverURL:
setLibraryAssetType:
_assetID
_title
_pageProgressionDirection
_coverURL
_readingProgress
_libraryAssetType
_totalDuration
T@"NSNumber",C,N,V_totalDuration
T@"NSString",C,N,V_assetID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_pageProgressionDirection
T@"NSString",C,N,V_coverURL
T@"NSNumber",C,N,V_readingProgress
T@"NSString",C,N,V_libraryAssetType
jaliscoClient
T@"BDSJaliscoDAAPServiceImpl",R,N
daapClientDelegate
setDaapClientDelegate:
updatePolitely:uiManager:reason:completion:
storeAuthenticationRequired
setJaliscoClient:
_storeAuthenticationRequired
_jaliscoClient
T@"BLJaliscoDAAPClient",&,N,V_jaliscoClient
T@"<BLJaliscoDAAPClientDelegate>",W,N
TB,R,N,V_storeAuthenticationRequired
initWithCloudData:
incrementEditGeneration
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
T@"NSDate",R,C,N
Tq,R,N
T@"CKRecord",R,C,N
T@"NSData",R,C,N
T@"<BCCloudDataPrivacyDelegate>",W,N
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
T@"NSString",R,C,N
Ts,R,N
Tf,R,N
Ti,R,N
Td,R,N
_configureFromAssetDetail:withMergers:
configureFromCloudData:withMergers:
numberWithShort:
timeIntervalSinceReferenceDate
numberWithFloat:
setDifferentBookmarkTime:
setBookmarkTime:
isEqualExceptForDate:
isEqualToDate:
resolveConflictsFromRecord:withResolvers:
localIdentifierFromRecord:
recordName
hasChanges
propertyIDKey
T@"NSString",C,D,N
TB,D,N
T@"NSDate",C,D,N
Ts,D,N
Tf,D,N
T@"NSData",C,D,N
Ti,D,N
Td,D,N
initWithRecord:
integerValue
floatValue
intValue
configuredRecordFromAttributes
encodeInt32:forKey:
encodeDouble:forKey:
localRecordID
decodeInt32ForKey:
decodeDoubleForKey:
initWithAssetID:
setReadingProgressHighWaterMark:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingProgressHighWaterMark
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
Tf,N,V_readingProgress
Tf,N,V_readingProgressHighWaterMark
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
transactionAccessQueue
transactions
initWithEntityName:notificationName:delegate:
signalSyncToCKTransactionForEntityName:syncManager:completion:
initWithEntityName:syncManager:delegate:
transactionCompletionCallbacks
cloudKitController
initWithCloudKitController:delegate:
signalDataChangeTransactionForEntityName:notificationName:
signalSyncToCKTransactionForEntityName:syncManager:
setCloudKitController:
setTransactionAccessQueue:
setTransactions:
setTransactionCompletionCallbacks:
_cloudKitController
_transactionAccessQueue
_transactions
_transactionCompletionCallbacks
T@"BCCloudKitController",W,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
T@"NSMutableDictionary",&,N,V_transactions
T@"NSMutableDictionary",&,N,V_transactionCompletionCallbacks
cloudAssetType
lastEngagedDate
isTrackedAsRecent
initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:lastEngagedDate:isTrackedAsRecent:
isExplicit
setIsExplicit:
getBookWidgetInfoObject
T@"NSNumber",C,D,N
T@"NSDate",R,C,D,N
TB,R,D,N
readingNowDetail
T@"BCReadingNowDetail",&,D,N
firstObject
initWithContext:
bl_setNonNilValue:value:
setCloudAssetType:
setLibraryContentAssetType:
insertMatchingManagedObjectIntoContext:
booksFinishedGoal
streakDayGoal
setBooksFinishedGoal:
setStreakDayGoal:
initWithBooksFinishedGoal:streakDayGoal:
_booksFinishedGoal
_streakDayGoal
T@"NSNumber",&,N,V_booksFinishedGoal
T@"NSNumber",&,N,V_streakDayGoal
syncManager
startSyncToCKWithCompletion:
setSyncManager:
_syncManager
T@"BCCloudDataSyncManager",&,N,V_syncManager
setDate:
setDay:
initWithDate:day:
_date
_day
T@"NSString",C,N,V_date
T@"BDSReadingHistoryDayInfo",&,N,V_day
notificationName
setNotificationName:
_notificationName
T@"NSString",C,N,V_notificationName
initWithCloudSyncVersions:
cloudVersion
setCloudVersion:
localVersion
setLocalVersion:
syncVersion
setSyncVersion:
historyToken
setHistoryToken:
historyTokenOffset
setHistoryTokenOffset:
setRawHistoryToken:
rawHistoryToken
dataType
T@"NSPersistentHistoryToken",R,C,N
configureFromSyncVersions:
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
encodeInt64:forKey:
setDataType:
decodeInt64ForKey:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
weakObjectsHashTable
setJaliscoUpdateSuccessful:
_updateCloudDataWithManager:
_l_cancelWithManagers:
managers
currentProgress
cancel
setCurrentProgress:
listUpdater:updateDidCompleteWithError:wasCancelled:
currentObserverIdentifier
setCurrentObserverIdentifier:
_receivedFetchedRecordsChangedFromObserver:
progressWithTotalUnitCount:
setCancellationHandler:
setEnableCloudSync:completion:
_l_finishedFetchingCollectionsWithManager
jaliscoUpdateSuccessful
startUpdateWithManager:jaliscoUpdateSuccessful:
cancelWithManager:
setManagers:
_stateLock
_jaliscoUpdateSuccessful
_currentProgress
_managers
_currentObserverIdentifier
T@"NSProgress",&,N,V_currentProgress
T@"NSHashTable",&,N,V_managers
T@?,C,N,V_observer
TQ,N,V_currentObserverIdentifier
TB,N,V_jaliscoUpdateSuccessful
nullPrivacyDelegate
setSystemFields:
setSaltedHashedID:
saltedHashedID
initWithRecordName:zoneID:
setCkSystemFields:
setEditGeneration:
hasValidSalt
_privacyDelegate
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
data
setDeletedFlag:
setSyncGeneration:
setModificationDate:
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
initWithExtensionBundleIdentifier:kind:
timelineController
reloadTimelineWithReason:
initWithNotifyBlock:blockDescription:
coalescingBlock
setCoalescingBlock:
setTimelineController:
_coalescingBlock
_timelineController
T@"BUCoalescingCallBlock",&,N,V_coalescingBlock
T@"CHSTimelineController",&,N,V_timelineController
initWithManagedObjectModel:
_persistentStoreOptions
addPersistentStoreWithType:configuration:URL:options:error:
_setupManagedObjectContext
_sharedRootDirectoryURL
_sharedLegacyRootDirectoryURL
initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_documentsDirectoryURL
_directoryExistsForStoreAtURL:
_createDirectoryForStoreAtURL:
_migrateAndDestroyStoreAtLegacyURL:toModernURL:
_addStoreAtURL:
_deleteDirectoryForStoreAtURL:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
_logIf:error:operation:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
destroyPersistentStoreAtURL:withType:options:error:
isReadOnly
removePersistentStore:error:
initWithManagedObjectModel:nameOnDisk:
managedObjectContext
setManagedObjectContext:
persistentStoreCoordinator
_managedObjectContext
_persistentStoreCoordinator
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
changes
changeType
changedObjectID
existingObjectWithID:error:
isDeleted
refreshObject:mergeChanges:
entity
tombstone
processPendingChanges
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
mq_cloudSyncVersions
responseQueue
initWithEntityName:
_logError:
syncCloudData:completion:
signalSyncToCK
signalDataChangedTransaction
numberWithInteger:
setCloudData:predicate:mergers:completion:
mq_incrementCloudVersion
monitor
dataManager:didInsertNewRecords:
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:propertyIDKey:mergers:completion:
dictionaryWithCapacity:
arrayWithCapacity:
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
dataMapper
cloudDataFromRecord:
mutableClass
resolveConflictsForRecords:withResolvers:completion:
resolveConflictsForRecords:withResolvers:mergers:completion:
immutableClass
removeObjectsInArray:
predicateWithValue:
cloudDatasWithPredicate:completion:
fetchHistoryAfterToken:
executeRequest:error:
result
addObjectsFromArray:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
setCloudData:predicate:completion:
setCloudData:predicate:propertyIDKey:completion:
removeCloudDataForPredicate:completion:
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
deleteCloudDataForPredicate:completion:
countWithPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
resolvedCloudDataForCloudData:predicate:completion:
resolveConflictsForRecords:completion:
failedRecordIDs:completion:
fetchCloudDataIncludingDeleted:completion:
getChangesSince:forEntityClass:completion:
setMonitor:
setMoc:
dataSource
setDataSource:
setResponseQueue:
setImmutableClass:
setMutableClass:
setSignalDataChangedTransaction:
setDataMapper:
_signalDataChangedTransaction
_monitor
_dataSource
_responseQueue
_immutableClass
_mutableClass
_dataMapper
T@"NSManagedObjectContext",W,N,V_moc
T@"BCCloudDataSource",&,N,V_dataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
T#,V_immutableClass
T#,V_mutableClass
TB,N,V_signalDataChangedTransaction
T@"<BCCloudDataMapper>",&,N,V_dataMapper
T@"<BDSCloudDataManagerMonitor>",W,N,V_monitor
initWithCloudKitController:dataMapper:
syncQueue
_syncQueueSyncForCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:removeCloudDataForIDs:completion:
syncManager:fetchedAllRecordsInZone:
serverPushPostponed
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
tooBigBatch
_maxCloudDataPerBatch
recordFromCloudData:
setTooBigBatch:
_leaveDispatchGroup:times:
syncManager:updateSyncGenerationFromCloudData:completion:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
syncManager:failedRecordIDs:completion:
setServerPushPostponed:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
setProcessingCloudData:
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:
setModifyRecordsCompletionBlock:
setSyncQueue:
processingCloudData
_processingCloudData
_serverPushPostponed
_syncQueue
_tooBigBatch
T@"BCCloudKitController",&,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
TB,N,V_processingCloudData
TQ,N,V_tooBigBatch
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
isBook
seriesName
sequenceNumber
sequenceDisplayLabel
artistName
contentRating
genre
buyParams
releaseDate
hasSupplementalContent
isSG
bookSampleDownloadURL
averageRating
ratingCount
standardNotes
standardDescription
priceFormatted
price
isPreorder
expectedReleaseDate
offer
fileSize
previewURL
artworkURL
width
height
seriesResource
T@"NSNumber",R,N
T@"NSDate",R,N
TQ,R,N
T@"NSDictionary",R,N
T@"<BFMSeries>",R,N
fetchResourcesWithAdamIDs:relationships:views:additionalParameters:batchSize:completionHandler:
fetchMixedAssetsWithBookIds:audiobookIds:relationships:views:additionalParameters:batchSize:completionHandler:
dictionaryWithDictionary:
fetchAssetWithAdamID:completionHandler:
fetchAssetWithAdamID:type:completionHandler:
fetchAssetsWithAdamIDs:completionHandler:
fetchMixedAssetsWithBookIds:audiobookIds:completionHandler:
initCanUseCellularData:powerRequired:bundleID:
bitrateForItem:
_prepareMediaItemForPinning:parentProgress:completion:
addChild:withPendingUnitCount:
setCompletedUnitCount:
updateWantToRead:updateReadingNow:updateManuallyPinned:jaliscoUpdateSuccessful:withCompletion:
isExplicitItem
sharedConnection
effectiveBoolValueForSetting:
setWithObject:
fetchItemsForStoreIDs:
readingNowDetailManagerInstance
representativeDAAPMediaItemsWithAssetId:
trackedRreadingNowDetailsInDescendingOrderMaximumResultCount:filter:completion:
stringValue
T@"BDSNBPinningManager",R,N
_prepareMediaItemForPinningIfNeeded:parentProgress:completion:
_shouldPinMediaItem:allowsExplicit:
_shouldPinJaliscoItem:allowsExplicit:
_isExplicitMaterialAllowed
_jaliscoAudiobookWithAssetId:
audiobookFetcher
setAudiobookFetcher:
_audiobookFetcher
T@"BLHLSAudiobookFetcher",&,N,V_audiobookFetcher
setLocalSaltVersionIdentifier:
setServerSaltVersionIdentifier:
initWithFetchRequest:
postNotificationName:object:userInfo:
initWithMOC:zoneName:cloudKitController:
zoneNeedsUpdate:completion:
updateSaltVersionIdentifier:completion:
setZoneName:
_zoneName
T@"NSString",C,N,V_zoneName
initService
objectModel
initWithZoneDataManager:tokenController:databaseController:
initWithCloudDataSource:cloudKitController:
initWithMOC:assetDetailManager:readingNowDetailManager:ubiquityManager:
setDataMonitor:
pathForResource:ofType:
fileURLWithPath:isDirectory:
storeAssetManagerInstance
assetDetailManagerInstance
assetReviewManagerInstance
changeTokenController
ubiquityManager
currentLiverpoolEnablement
setObjectModel:
setWidgetInfoManager:
setAssetDataSource:
setWidgetDataUpdater:
setAssetDetailManager:
setReadingNowDetailManager:
setAssetReviewManager:
setStoreAssetManager:
setChangeTokenController:
saltVersionIdentifierManager
setSaltVersionIdentifierManager:
setUbiquityManager:
_objectModel
_widgetInfoManager
_assetDataSource
_widgetDataUpdater
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
_changeTokenController
_saltVersionIdentifierManager
_ubiquityManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
T@"BDSSaltVersionIdentifierManager",&,N,V_saltVersionIdentifierManager
T@"NSManagedObjectModel",&,N,V_objectModel
T@"BDSBookWidgetInfoManager",&,N,V_widgetInfoManager
T@"BDSUbiquityManager",&,N,V_ubiquityManager
T@"BDSBookWidgetDataUpdater",&,N,V_widgetDataUpdater
T@"BCCloudDataSource",&,N,V_assetDataSource
secureUserDataSource
dataManager
removeUserDataForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
initWithKey:
value
setValue:
setSecureUserDataSource:
setDataManager:
_secureUserDataSource
_dataManager
T@"BCCloudDataSource",&,N,V_secureUserDataSource
T@"BCCloudDataManager",&,N,V_dataManager
removeAssetDetailForSaltedHashedRecordIDs:completion:
setYear:
setMonth:
systemTimeZone
setTimeZone:
dateFromComponents:
component:fromDate:
numberWithLong:
assetDetailDataSource
setAssetDetailDataSource:
_assetDetailDataSource
T@"BCCloudDataSource",&,N,V_assetDetailDataSource
connection
notificationQueue
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
setConnection:
serverPreferredPushEnvironmentWithCompletionHandler:
setLastConnectionDate:
lastConnectionDate
isWithinConnectionDateRange
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setNotificationQueue:
unfairLock
setUnfairLock:
_unfairLock
_connection
_notificationQueue
_lastConnectionDate
T@"APSConnection",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T{os_unfair_lock_s=I},N,V_unfairLock
T@"NSDate",&,N,V_lastConnectionDate
_configureFromReadingNowDetail:withMergers:
compare:
setIsTrackedAsRecent:
setLastEngagedDate:
_isTrackedAsRecent
_lastEngagedDate
_cloudAssetType
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
T@"NSString",C,N,V_cloudAssetType
readingHistoryFileURL
readingHistoryCRDTContextFileURL
booksFinishedUserDefaultsKey
streakDayUserDefaultsKey
dataHasBeenMovedUserDefaultsKey
removeReadingNowDetailForSaltedHashedRecordIDs:completion:
readingNowDetailDataSource
setReadingNowDetail:
getRecentBooksExcludingAssetIDs:completion:
setReadingNowDetailDataSource:
_readingNowDetailDataSource
T@"BCCloudDataSource",&,N,V_readingNowDetailDataSource
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
_configureFromAssetReview:withMergers:
userIDFromAssetReviewID:
setAssetReviewID:
setStarRating:
substringFromIndex:
substringToIndex:
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
setNormalizedStarRating:
userID
Td,N
encodeInt:forKey:
decodeIntForKey:
initWithAssetReviewID:
setReviewTitle:
setReviewBody:
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
audiobooksQuery
setIgnoreSystemFilterPredicates:
predicateWithValue:forProperty:
addFilterPredicate:
collections
_storeRepresentativeItem:
items
valueForProperty:
mediaType
longLongValue
_registerNotificationEventHandler
stringWithUTF8String:
lastSource
modelReadingDay
modelLongestStreak
remoteModelReadingDay
remoteModelLongestStreak
setLastSource:
setModelReadingDay:
setModelLongestStreak:
setRemoteModelReadingDay:
setRemoteModelLongestStreak:
initWithLoaded:lastSource:modelReadingDay:modelLongestStreak:remoteModelReadingDay:remoteModelLongestStreak:
_lastSource
_modelReadingDay
_modelLongestStreak
_remoteModelReadingDay
_remoteModelLongestStreak
Tq,N,V_loaded
Tq,N,V_lastSource
T@"BDSReadingHistoryDayInfo",&,N,V_modelReadingDay
T@"BDSReadingHistoryStreakInfo",&,N,V_modelLongestStreak
T@"BDSReadingHistoryDayInfo",&,N,V_remoteModelReadingDay
T@"BDSReadingHistoryStreakInfo",&,N,V_remoteModelLongestStreak
removeAssetReviewsForSaltedHashedRecordIDs:completion:
assetReviewDataSource
setAssetReviewDataSource:
_assetReviewDataSource
T@"BCCloudDataSource",&,N,V_assetReviewDataSource
_configureFromUserDatum:withMergers:
setKey:
_key
_value
T@"NSString",C,N,V_value
T@"NSString",R,C,N,V_key
setParentContext:
beginObserving
bookWidgetInfosThatNeedToBeCreatedWithCompletion:
fetchBookWidgetInfoIDsWithCompletion:
context
setBookWidgetInfoOnly:completion:
populateInfosWithStoreData:completionHandler:
numberFromString:
addEntriesFromDictionary:
bu_prettyDescription
removeBookWidgetInfosForAssetIDs:completion:
_bookWidgetInfoFromUbiquityMetadata:
fetchBookWidgetInfoIDsWithCloudAssetType:completion:
initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:
_setBookWidgetInfosForMediaLibraryItems:withTransactionName:
_bookWidgetInfoFromMediaLibraryItem:
_infoFromReadingNowDetail:
mediaLibraryManagerDidFinshInitialGather:withItems:
mediaLibraryManager:addedItems:
mediaLibraryManager:updatedItems:
mediaLibraryManager:removedItems:
updateBookWidgetInfo:
setContext:
mediaLibraryManager
setMediaLibraryManager:
_context
_mediaLibraryManager
T@"NSManagedObjectContext",&,V_context
T@"BCCloudReadingNowDetailManager",&,N,V_readingNowDetailManager
T@"BDSMediaLibraryManager",&,N,V_mediaLibraryManager
storeID
_configureFromStoreItem:withMergers:
setStoreID:
initWithStoreID:
_storeID
T@"NSString",C,N,V_storeID
caseInsensitiveCompare:
removeStoreItemWithSaltedHashedRecordIDs:completion:
storeAssetDataSource
setStoreAssetDataSource:
_storeAssetDataSource
T@"BCCloudDataSource",&,N,V_storeAssetDataSource
dictionaryRepresentation
numberWithUnsignedLongLong:
allocWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
location
setLocation:
_location
TQ,N,V_location
TQ,N,V_length
addAnnotation:
setAppVersion:
setAssetVersion:
annotationsCount
clearAnnotations
annotationAtIndex:
annotationType
hasAssetVersion
assetVersion
annotations
setAnnotations:
_annotations
_appVersion
_assetVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
T@"NSString",&,N,V_assetVersion
T@"NSMutableArray",&,N,V_annotations
readingTime
goal
isStreakDay
setReadingTime:
setGoal:
setIsStreakDay:
initWithReadingTime:goal:isStreakDay:
_isStreakDay
_readingTime
_goal
Tq,N,V_readingTime
Tq,N,V_goal
TB,N,V_isStreakDay
numberWithUnsignedInt:
setCreatorIdentifier:
setLocationCFIString:
setNote:
setRepresentativeText:
setSelectedText:
setUuid:
setPhysicalPageNumber:
setAnnotationVersion:
setAttachments:
setChapterTitle:
setSelectedTextRange:
setFutureProofing11:
setFutureProofing12:
setPlLocationStorageUUID:
setPlUserData:
setDeleted:
setHasDeleted:
hasDeleted
setIsUnderline:
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setStyle:
setHasStyle:
hasStyle
setType:
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAttachments
hasChapterTitle
setUserModificationDate:
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setSpineIndexUpdated:
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setPlAbsolutePhysicalLocation:
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setPlLocationRangeEnd:
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setPlLocationRangeStart:
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setLocationModificationDate:
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
setCreationDate:
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
TB,N
TB,N,V_deleted
TB,N,V_isUnderline
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
T@"NSString",&,N,V_note
T@"NSString",&,N,V_representativeText
T@"NSString",&,N,V_selectedText
TI,N,V_style
TI,N,V_type
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_physicalPageNumber
T@"NSString",&,N,V_annotationVersion
T@"NSString",&,N,V_attachments
T@"NSString",&,N,V_chapterTitle
Td,N,V_userModificationDate
T@"BCAnnotationRange",&,N,V_selectedTextRange
TB,N,V_spineIndexUpdated
T@"NSString",&,N,V_futureProofing11
T@"NSString",&,N,V_futureProofing12
Ti,N,V_plAbsolutePhysicalLocation
Ti,N,V_plLocationRangeEnd
Ti,N,V_plLocationRangeStart
T@"NSString",&,N,V_plLocationStorageUUID
T@"NSData",&,N,V_plUserData
Td,N,V_locationModificationDate
fetchLatestCompletion:
addObserverForName:object:queue:usingBlock:
_fetchCloudSyncVersions:completion:
fetchQueue
fetching
setFetching:
_fq_fetchSince:completion:
lastPlayedDate
hasBeenPlayed
setHasBeenPlayed:
setLastPlayedDate:
setValue:forProperty:withCompletionBlock:
_updateAssetDetail:fromMediaItem:
_updateBookmarkTimeFromAssetDetail:
_archiveCloudSyncVersions:completion:
setFetchQueue:
_fetching
_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@,&,N,V_observer
TB,N,V_fetching
_bdsService
_deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion:
_dieIfUnacknowledgediCloudLogoutOcccurred
setTccNotifyToken:
tccNotifyToken
valueForEntitlement:
processIdentifier
invalidate
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
serviceConnectionClient
iCloudIdentityTokenTracker
listener:shouldAcceptNewConnection:
setICloudIdentityTokenTracker:
setServiceConnectionClient:
networkReachability
setNetworkReachability:
_tccNotifyToken
_iCloudIdentityTokenTracker
_serviceConnectionClient
_networkReachability
T@"BDSICloudIdentityTokenTracker",&,N,V_iCloudIdentityTokenTracker
T@"<BDSServiceConnectionClient>",W,N,V_serviceConnectionClient
T@"BDSReachability",&,N,V_networkReachability
Ti,N,V_tccNotifyToken
_isExplicit
_libraryContentAssetType
T@"NSString",C,N,V_libraryContentAssetType
T@"NSDate",R,N,V_lastEngagedDate
TB,R,N,V_isTrackedAsRecent
TB,N,V_isExplicit
setIsSideloaded:
infoFromAssetID:isSideloaded:
isSideloaded
_isSideloaded
TB,N,V_isSideloaded
itemWithAssetID:title:coverURL:libraryContentAssetType:cloudAssetType:totalDuration:
T@"NSString",&,N,V_title
T@"NSURL",&,N,V_coverURL
T@"NSString",&,N,V_libraryContentAssetType
T@"NSString",&,N,V_cloudAssetType
T@"NSNumber",&,N,V_totalDuration
defaultMediaLibrary
addLibraryFilterPredicate:
setRunLoopForNotifications:
_mediaLibraryDidChange:
beginGeneratingLibraryChangeNotifications
_performInitialFetch
endGeneratingLibraryChangeNotifications
stringForKey:
_syncValidity
_syncAnchor
_recordSyncValidity:
_recordSyncAnchor:
aq_performInitialFetch
_medialibrarySyncAnchor
anchor
aq_BDSMediaLibraryItemFromCollection:
assetIDSet
deletionType
enumerateEntityChangesAfterSyncAnchor:usingBlock:
setAssetIDSet:
representativeItem
aq_assetInfoForMediaItem:
unsignedLongLongValue
bu_sha1
persistentID
endObserving
_assetIDSet
T@"NSMutableSet",&,N,V_assetIDSet
T@"<BDSMediaLibraryManagerObserver>",W,N,V_observer
zoneDataManager
tokenController
setZoneDataManager:
setTokenController:
_zoneDataManager
_tokenController
T@"NSObject<BDSCloudKitSupportZoneRecovery>",W,N,V_zoneDataManager
T@"BCCloudChangeTokenController",W,N,V_tokenController
collectionDetailManagerInstance
collectionMemberManagerInstance
collectionDataSource
setCollectionDataSource:
setCollectionDetailManager:
setCollectionMemberManager:
proxyMode
setProxyMode:
_proxyMode
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
T@"BCCloudDataSource",&,N,V_collectionDataSource
TB,N,V_proxyMode
removeCollectionDetailForSaltedHashedRecordIDs:completion:
collectionID
collectionDetailDataSource
setCollectionDetailDataSource:
_collectionDetailDataSource
T@"BCCloudDataSource",&,N,V_collectionDetailDataSource
removeCollectionMemberForCollectionSaltedHashedRecordIDs:completion:
collectionMemberID
sortOrder
fetchCollectionMembersInCollectionID:maximumResultCount:filter:completion:
collectionMemberDataSource
setCollectionMemberDataSource:
_collectionMemberDataSource
T@"BCCloudDataSource",&,N,V_collectionMemberDataSource
collectionDescription
hidden
sortMode
_configureFromCollectionDetail:withMergers:
setCollectionID:
initWithCollectionID:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
setData:
initWithData:
_data
T@"NSData",&,N,V_data
_configureFromCollectionMember:withMergers:
setCollectionMemberID:
collectionMemberIDWithCollectionID:assetID:
assetIDFromCollectionMemberID:
collectionIDFromCollectionMemberID:
initWithCollectionMemberID:
_collectionMemberID
T@"NSString",C,N,V_collectionMemberID
_nextSortOrderForCollectionMemberManager:collectionID:completion:
fetchIsAssetID:inCollectionID:completion:
_registerForSignificantTimeChangeNotification
_unregisterForSignificantTimeChangeNotification
resetSystemTimeZone
initWithFileURL:
bu_md5
fileURL
setInteger:forKey:
setDateFormat:
stringFromDate:
initWithInteger:
initWithDouble:
dictionaryForKey:
setDictionary:forKey:
defaultStore
modifiedByDevice
handleSignificantDateChange:
setBool:forKey:
initWithName:
initWithURL:
setShouldInferMappingModelAutomatically:
setShouldMigrateStoreAutomatically:
setUsesPersistentHistoryTracking:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
protoData
.cxx_construct
setProtoData:
initWithContentsOfURL:options:error:
handleCloudChangeNotification:
setFormatOptions:
com.apple.bookdatastored.xpc-listener-ready
com.apple.bookdatastored.startup-queue
com.apple.bookdatastored
v16@?0@"NSError"8
com.apple.iBooks.BookDataStoreService
Books
use_books_widget
BKReadingGoalsUserDefaultsKey
com.apple.iBooks.BDSBookWidgetReadingHistoryManager.saveQueue
BDSBookWidgetReadingHistoryManager._processViewStateChange
Library/Application Support/bookdatastored
currentWidgetReadingHistoryData.plist
BookDataStore.CloudKit
BookDataStore.CloudKitSync
BookDataStore.CloudKitAudiobook
BookDataStore.ServiceCenter
BookDataStore.Service
BookDataStore.Widget
BookDataStore.Ubiquity
BookDataStore.MediaLibrary
BDSArrayAdditionsErrorDomain
ubiquityIdentityToken
nonNilUbiquityIdentityToken
Documents
com.apple.iBooks.BDSUbiquityStatusMonitor.containerQueue
com.apple.iBooks.BDSUbiquityStatusMonitor.dispatchQueue
com.apple.iBooks.BDSUbiquityStatusMonitor.notifyQueue
enabled
disabled
.Trash
<%@(%p) CloudKit=%@ iCloudDrive=%@ optedIn=%@ containerURL='%@' documentsURL='%@'
kNetworkReachabilityChangedNotification
<%@(%p) 
 url : %@ 
 isLocal : %@ 
 isNotLocal : %@ 
 isUploading : %@ 
 isUploaded : %@ 
 isDownloading : %@ 
 downloadingPercent : %@ 
 uploadingPercent : %@ 
 uploadingError : %@ 
 unresolvedConflict : %@ 
 contentChangedDate : %@ 
 contentCreationDate : %@ 
 contentFileSize : %@ 
com.apple.iBooks.BDSUbiquityDocumentsObserver.queue
com.apple.iBooks.BDSUbiquityDocumentsObserver.metadataQueryQueue
%K BEGINSWITH %@
v32@?0@"NSMetadataItem"8Q16^B24
Data
metadata.nosync
kMDItemFSContentChangeDate
kMDItemFSCreationDate
kMDItemFSSize
<%@(%p) identity='%@' isLoaded=%@ containerURL='%@' noSyncURL='%@'>
ubiquityStatusMonitor = %@
objectID
com.apple.iBooks.title
com.apple.iBooks.assetID
com.apple.iBooks.url
com.apple.iBooks.cloudAssetType
com.apple.iBooks.libraryAssetType
com.apple.iBooks.isSupplementalContent
ubiquityManager-ivarQueue
BDSUbiquityManager-observerQueue
BDSUbiquityManager-processMetadataQueryQueue
B32@?0@"NSURL"8Q16^B24
icloud
currentStreak
longestStreak
today
readingHistory
<%@: %p currentStreak:%ld, longestStreak:%@, today:%@, readingHistory:%@>
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
CFBundleShortVersionString
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
XCTestConfigurationFilePath
BDSUnitTest
BDSBookWidgetDataUpdater MOC
BookWidgetDataUpdaterResume
BookWidgetDataUpdaterMonitorBookWidgetInfo
readingNowDetail.lastEngagedDate
title
readingNowDetail.isTrackedAsRecent == YES and readingNowDetail.lastEngagedDate >= %@
%K == NO OR %K == NULL
isExplicit
%K in %@
assetID
readingProgress
BookWidgetDataUpdaterFRC
Library/Application Support/bookdatastored/
/currentWidgetData.plist
BookWidgetDataUpdaterExplicitChange
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
BDSSyncUserDefaults
@"NSDictionary"8@?0
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentityExists
<%@=%p %@>
AssetZone
CollectionZone
ReadingStatistics
GlobalMetadata
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
BCCloudKit-BookDataStoreService
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
v24@?0q8@"NSError"16
v12@?0B8
_coalescedAttachment in BCCloudKitController
v16@?0@"NSString"8
v16@?0B8B12
v24@?0@"CKAccountInfo"8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
Account changed
hasUpdatedSubscription
serverChangeToken
containerIdentifier
userRecordID
recordIDSalt
salt
saltEncrypted
<%@: %p recordZone:%@>
com.apple.iBooks.CloudKitDatabaseController
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
cloudData
attachToZone
v32@?0@"NSString"8Q16^B24
%@.%@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
No Books Record Salt
Nil weak self after save record %@
Unable to generate random salt %@
No Books Salt
Nil weak self after fetch salt record %@
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
Unreadable keychain - cannot fetch record zones
Account temporarily unavailable - cannot fetch record zones
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
BDSErrorDomain
BDSCloudKitClientError
stateInfo
readingGoalsEnabled
<%@: %p stateInfo:%@, readingGoalsEnabled:%d>
BCSaltVersionIdentifier
BKUbiquitousLastAppVersion
BKUbiquitousFinishedOptInFlow
BDSTCCAccessChangedNotification
v44@?0@"NSSet"8@"NSSet"16@"BCMutableCloudSyncVersions"24@"NSError"32B40
updateBitrateForItemWithAdamID
BDSService has no jalisco client
endDate
length
{endDate:%@, length:%ld}
com.apple.iBooks.CloudKitTransaction.
_coalescedNotification in %@
BCCloudKitTransaction-
pageProgressionDirection
coverURL
libraryContentAssetType
[%@ '%@' %@ %@ (%.0f%%)%@]
 missing coverURL
assetDetail
isFinished
notFinished
taste
tasteSyncedToStore
dateFinished
lastOpenDate
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
the same
newer
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
SecureUserDataZone
com.apple.iBooks.SecureCloudKitController
com.apple.iBooks.secureData
BCCloudKit-BookDataStoreServiceSecure
BCPrivateDatabaseSecure
com.apple.iBooks.BCCloudKitSecure
com.apple.iBooks.CloudKitTransactionManager
BDSBookWidgetInfoMO
assetID == %@
totalDuration
booksFinishedGoal
<%@: %p booksFinishedGoal:%@, streakDayGoal:%@>
BCCloudKitSyncToCKTransaction-
date
{%@: %@}
BCCloudKitDataChangedTransaction-
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
iBooks
BCCloudKitFetchChangesTransaction-
localRecordID
localRecordIDEncrypted
systemFields
com.apple.iBooks.BooksWidget
BooksWidget
bookdatastored
BDSWidgetCenter Timeline Reload
com.apple.bookdatastored.BDSWidgetCenterManager.reloadWidgetTimelines
BCCloudData-BookDataStoreService
BCCloudAsset-BookDataStoreService
creating directory for store
deleting directory for store
[MIGRATE] migrate legacy store
[MIGRATE] destroy legacy store
removing read-only cloud data source persistent store
adding cloud data source persistent store
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
saltedHashedID IN %@
deletedFlag == NO
saltedHashedID
v32@?0@"NSArray"8{_NSRange=QQ}16
syncGeneration >= 1
%@-%@
v32@?0@"CKRecord"8Q16^B24
com.apple.iBooks.CloudDataSyncManager
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
Unsynced keychain - cannot modify records
BDSNBPinningManager notify queue
B16@?0@"<BCReadingNowDetail>"8
v32@?0@"NSSet"8@"BCMutableCloudSyncVersions"16@"NSError"24
BCServerChangeToken
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
momd
BCCloudSecureUserDataManagerChanged
BCCloudSecureUserDataManagerFetchedRecordsChanged
BCCloudSecureUserData
BCSecureUserDatum
key = %@
key IN %@
key = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"BCMutableSecureUserDatum"8@"NSError"16
BCAssetDetail
assetID = %@
assetID IN %@
assetID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
tasteSyncedToStore != NULL AND tasteSyncedToStore == %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
isFinished == YES AND (dateFinished >= %@ AND dateFinished < %@)
@16@?0@"<BCCloudData>"8
isFinished == YES AND dateFinished != NULL
com.apple.aps.bookdatastored
com.apple.icloud-container.com.apple.iBooks
BookDataStore.ConnectionDate
bookdatastored Notification Queue
v24@?0@"NSString"8@"NSError"16
readingNowDetail
isTrackedAsRecent
lastEngagedDate
cloudAssetType
v32@?0@"<NSCopying>"8@?<@@?@@@>16^B24
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@ , cloudAssetType:%@
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@, cloudAssetType: %@
booksFinishedUserDefaultsKey
streakDatUserDefaultsKey
readingHistoryDataHasBeenMovedDefaultsKey
BCCloudData-AppMigration
ReadingHistoryModelContext-AppMigration
<%@ readingHistoryFileURL=%@ readingHistoryCRDTContextFileURL=%@ booksFinishedUserDefaultsKey=%@ streakDayUserDefaultsKey=%@>
BCReadingNowDetail
assetID IN %@ and readingNowDetail == nil
@32@?0@8@16@24
WidgetInfoRelationshipUpdater
isTrackedAsRecent == YES
B16@?0@"<BCCloudData>"8
NOT (assetID IN %@)
(%K == NULL OR %K == %@)
starRating
reviewTitle
reviewBody
assetReview
userID
assetReviewID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
loaded
lastSource
modelReadingDay
modelLongestStreak
remoteModelReadingDay
remoteModelLongestStreak
<%@: %p loaded:%ld, lastSource:%ld, modelReadingDay:%@, modelLongestStreak:%@, remoteModelReadingDay:%@, remoteModelLongestStreak:%@>
BCAssetReview
assetReviewID = %@
assetReviewID IN %@
assetReviewID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetReviewID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
userID == %@
(deletedFlag == NULL OR deletedFlag == NO) AND userID == %@
SecureUserData
value
key: %@, value: %@
v16@?0@"NSSet"8
%K == %@
v16@?0@"NSArray"8
BookWidgetInfoManagerUbiquityInitialGather
BookWidgetInfoManagerUbiquityAddedItem
BookWidgetInfoManagerUbiquityUpdatedItem
BookWidgetInfoManagerUbiquityRemovedItem
BookWidgetInfoManagerMediaLibraryInitialGather
BookWidgetInfoManagerMediaLibraryAddedItem
BookWidgetInfoManagerMediaLibraryUpdatedItem
BookWidgetInfoManagerMediaLibraryRemovedItem
storeItem
storeID
storeID: %@, 
SideloadedLocal
SideloadedUbiquity
StoreEbook
StoreAudiobook
AssetTypeAudiobook
AssetTypeEbook
AssetTypePDF
LibraryContentAssetTypeUnknown
epub
ibooks
adts
aiff
aifc
BCStoreItem
storeID = %@
storeID IN %@
storeID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
%@ %@
location
appVersion
assetVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
readingTime
goal
isStreakDay
{readingTime:%ld, goal:%ld, isStreakDay:%d}
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
-[BCProtoAnnotation writeTo:]
BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
NBAssetDetailSyncVersions
dataStoreFetch
v16@?0@"NSNotification"8
v16@?0@"BCCloudSyncVersions"8
com.apple.tcc.access.changed
v12@?0i8
com.apple.iBooks.BDSService.private
application-identifier
com.apple.application-identifier
<%@:%p assetID=%@ title=%@ cloudAssetType=%@ lastEngagedDate=%@ isTrackedAsRecent=%d coverURL=%@ isExplicit=%@ pageProgressionDirection=%@ libraryContentAssetType=%@ duration=%@>
BDSMediaLibraryManager.SyncValidity
BDSMediaLibraryManager.SyncAnchor
<%@(%p) assetID='%@' title='%@' coverURL='%@' libraryAssetType='%@' cloudAssetType='%@' duration='%@'
BDSMediaLibraryManager-accessQueue
BDSMediaLibraryManager-observerQueue
v24@?0@"_MPMediaLibraryEntityChange"8^B16
sha1-%@
pid-%@
<%@:%p zoneName=%@ zoneDataManager=%@>
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
BCCollectionDetail
collectionID = %@
collectionID IN %@
collectionID
collectionID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
BCCollectionMember
collectionMemberID = %@
collectionMemberID IN %@
collectionMemberID
collectionMemberID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionMemberID BEGINSWITH[cd] %@ AND (deletedFlag == NULL OR deletedFlag == NO)
sortOrder
collectionDescription
hidden
sortMode
collectionDetail
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
data
collectionMember
collectionMemberID: %@, sortOrder:%d modificationDate:%@
v24@?0@"BCMutableCollectionMember"8@"NSError"16
v20@?0i8@"NSError"12
BDSNotificationForwarderSignificantTimeChangeNotification
SignificantTimeChangeNotification
CRDTModelSyncMapper unable to create CKAsset local cache at %@ error=%@
com.apple.iBooks.ReadingHistoryDataStore.model
com.apple.iBooks.ReadingHistoryDataStore.lastModelChange
com.apple.iBooks.BookDataStore
com.apple.iBooks.CRDTModelSyncManager.model
com.apple.iBooks.CRDTModelSyncManager.callback
com.apple.iBooks.CRDTModelSyncManager.observable
com.apple.bookdatastored.ReadingHistoryService.accessQueue
com.apple.bookdatastored.ReadingHistoryService.modelReady
com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersionTransaction
com.apple.iBooks.Observable.access
com.apple.iBooks.Observable.call
com.apple.iBooks.ObservableTransaction
com.apple.iBooks.CRDTModelFileSyncManager.model
com.apple.iBooks.CRDTModelFileSyncManager.observable
CRDTModelFileSync.
_TtC14bookdatastored19CRDTModelSyncMapper
CRDTModelSyncMapper unable to save protoData at %@ error=%@
CRDTModelSyncMapper: could not produce asset filename due to bad data
CRDTModelSyncMapper: error mapping CKRecord into BCMutableCloudData
CRDTModelSyncManagerAssetCache
v16@0:8
modificationDate
T@"NSDate",N,R
editGeneration
Tq,N,R
syncGeneration
T@"CKRecord",N,R
ckSystemFields
T@"NSData",N,R
privacyDelegate
T@"<BCCloudDataPrivacyDelegate>",N,W
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
@"NSString"16@0:8
BCCloudDataMapper
@"BCMutableCloudData"24@0:8@"CKRecord"16
@"CKRecord"24@0:8@"BCMutableCloudData"16
BDSReadingHistoryViewStateChangeHandler
currentViewStateInfo
T@"BDSReadingHistoryStateInfo",N,R
@"BDSReadingHistoryStateInfo"16@0:8
v24@0:8@"BDSReadingHistoryStateInfo"16
OS_os_transaction
CKRecordValue
NSObject
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
ReadingHistoryDataStore: Handle significant date change %@
ReadingHistory.LastStreakDate
ReadingHistory.CurrentStreak
_TtC14bookdatastored23ReadingHistoryDataStore
modelProvider
currentUserDefaults
currentDate
streakDayGoal
queue
clearOnInitialLoad
_state
lastModelChange
lastModelChangeObservableTransaction
Observer with oid=%@ is gone
Update reason: %@ - %@; loaded: %@, lastSource: %@
 New streak record: %d day streak on %@
Recalc: yesterday is already lastStreakDate, skipping.
Recalc: extending a day, lastStreakDate=%{public}@ currentStreak=%d
Recalc: today is no longer a streak day, clearing current streak
Recalc: today is no longer a streak day, reverting to yesterday
Recalc: today is already lastStreakDate, skipping.
Recalc: yesterday and today are both not streak day.
Recalc: lastStreakDate=%{public}@ currentStreak=%d
Merged with an object with multiple changed dates, recalc triggered.
Merged with an object that only changed today: %{public}@
handleGoalsStateEvent
 Removing streak record: %d day streak on %@
Error serializing readingHistoryModel: %{public}@
handleSignificantDateChange
ReadingHistoryDataStore: Handle significant date change - model is not ready, skipping 
ReadingGoalsService changeBooksFinishedGoal %ld
ReadingGoalsService changeDailyGoal %lf
ReadingGoalsService clearData
ReadingGoalsService clearLocalCachedData
ReadingGoalsService state
BDSReadingGoalsService
v32@0:8q16@?<v@?B>24
v32@0:8d16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"BDSReadingGoalsStateInfo"B>16
goalsDataStore
goalsController
ReadingGoalsService onRemoteChange
com.apple.BDSService.ReadingGoalsService.onRemoteChange
v24@?0@"<BCCloudData>"8@"NSError"16
v20@?0B8@"NSError"12
CRDTModelSyncManager dissociateCloudDataFromSyncWithCompletion for: %s
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
@16@0:8
logger
cloudDataSource
cloudSyncManager
localDataManager
tokenController
cloudKitController
saltVersionIdentifierManager
crdtContext
$__lazy_storage_$_conflictResolvers
_modelState
modelQueue
callbackQueue
observableTransaction
enableCloudSync
com.apple.ibooks.CRDTModelSyncManager.q_sync
CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s
v24@?0B8B12@"NSError"16
CRDTModelSyncManager q_sync: sending merged=%s as %ld bytes to BCCloudDataManager
CRDTModelSyncManager q_sync: incoming=%s and existing=%s
CRDTModelSyncManager q_sync: BCCloudDataManager is done: success=%ld hasChanges=%ld error=%s
CloudSyncConflictResolver: self=%s key=%s is not equal to recordType=%s
CloudSyncConflictResolver: no existing data
CloudSyncConflictResolver: failed to deserialize either existingModel from %s
CloudSyncConflictResolver: failed to deserialize either incomingModel from %s
CloudSyncConflictResolver: no delta on existing=%s from incoming=%s
CloudSyncConflictResolver: merged=%s
CloudSyncConflictResolver: merging existing=%s with incoming=%s
CloudSyncConflictResolver: no incoming data
bookdatastored.CRDTModelSyncManager
init()
CRDTModelSyncManager failedRecordIDs: failed records %s
v28@?0B8@"NSArray"12@"NSError"20
CRDTModelSyncManager resolveConflictsFor: resolving conflicts for record: %{public}@ id: %{public}@ created: %{public}s modified: %{public}s modifiedByDevice:%{private}s
CRDTModelSyncManager resolveConflictsFor: received changes for more than 1 record. This shouldn't be possible
CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data
CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s
CRDTModelSyncManager resolveConflictsFor: resolved model=%s
CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s
CRDTModelSyncManager updateSyncGenerationFromCloudData: updating sync generation for %s
CRDTModelSyncManager removeCloudDataFor: asked to remove cloud data: %s
CRDTModelSyncManager startSyncToCKWithCompletion: starting syncing to CK
CRDTModelSyncManager failed to dissociate data for: %s %@
CRDTModelSyncManager dissociateCloudDataFromSyncWithCompletion for: %s finish with success:%{bool}d error: %@
CRDTModelSyncManager Init: no existing data
CRDTModelSyncManager Init: loaded existing data with the wrong type
CRDTModelSyncManager Init: couldn't deserialize existing data
CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s
CRDTModelSyncManager Init: couldn't load existing data: %s
CRDTModelSyncManager updateWithSyncEnabled: disabled sync to CK
CRDTModelSyncManager updateWithSyncEnabled: enabled sync to CK
CRDTModelSync
BCCloudDataSyncManagerDelegate
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
BDSCloudKitSupportZoneRecovery
v24@0:8@?<v@?B@"NSError">16
q16@0:8
#16@0:8
@24@0:8:16
superclass
description
BDSCloudKitSupportSignOutDissociate
CRDTModelContextStore [bookdatastored] storeDirectory = %@
CRDTModelContextStore unable to create CRContext at %@ error=%@
CRDTModelContext
ReadingHistory.UserDefaults.SessionStartOffset
hasMigratedReadingHistoryData
Migration: Already done in daemon. Updated timestamp to now.
Migration: skipping reading history migration in daemon. last migrated:%s
ReadingHistoryService clearData
ReadingGoalsService clearDefaultsCachedData
ReadingHistoryService clearToday
Failed to deserialize sync version info
ReadingHistoryService handleSyncFileChange: %@
ReadingHistoryService increment (date: %@, by: %ld)
ReadingHistoryService readingHistoryStateInfo (range: (%@ -> %@), currentTime: %@)
ReadingHistoryService readingHistoryModelSnapshotInfo ( currentTime: %@)
ReadingHistoryService setEnableCloudSync: %d
ReadingHistoryService bookWidgetReadingHistoryStateInfo
ReadingHistoryService bookWidgetReadingHistoryStateInfo -- missing handler
ReadingHistoryService DONE bookWidgetReadingHistoryStateInfo: %@
bookdatastored.ReadingHistoryService
ReadingHistoryService mergeMovedReadingHistoryData
ReadingHistoryModel
waitForlocalModelSyncVersionTimeout
v16@?0@?<v@?>8
BDSReadingHistoryService
@32@0:8@16@24
v40@0:8@16q24@?32
v48@0:8@16@24@32@?40
v20@0:8B16
v24@0:8@16
v24@0:8@?<v@?@"BDSReadingHistoryStateInfo"B>16
goalsService
historyDefaults
historyDataStore
historyCloudSyncManager
historyCloudSyncController
isModelReady
accessQueue
modelReadyQueue
viewStateChangeHandler
localSyncManager
localModelSyncVersionTransaction
localModelSyncVersionTransactionQueue
waitForlocalModelSyncVersion
waitForlocalModelSyncVersionTimeoutBlock
ReadingHistoryService handleSignificantDateChange
com.apple.bookdatastored.ReadingHistoryService.handleSignificantDateChange
com.apple.bookdatastored.CRDTModelCloudSyncController.handleCloudModelEvent
handleCloudModelEvent - model not ready
handleCloudModelEvent - sync to local
handleLocalModelSyncVersionChange
checkLocalModelSyncVersion(%{bool}d): no delta; existing=%s; incoming=%s
com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersion
checkLocalModelSyncVersion(%{bool}d): has delta; existing=%s; incoming=%s
com.apple.bookdatastored.CRDTModelCloudSyncController.handleLocalModelEvent
handleLocalModelEvent - model not ready
handleLocalModelEvent - sync to cloud
handleLocalModelSyncVersionWaitTimeout: timed out
Migration: Merging reading history data in daemon
v16@?0@"NSURL"8
Migration done in daemon %s
Migration: Not needed in daemon. Updated timestamp to now.
Migration: Not needed in daemon. Last migrated at:%s
Migration: Starting migration
com.apple.bookdatastored.reading-history-migration
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Migration: Cleaning up
Error cleaning up after migration, %{public}@
Daemon migration reading history %{bool}d
Error loading persistent store: %{public}@
CRDTModelSyncEntity
Migration: Fetching
Failed to fetch CRDTModelSyncEntity of type ReadingHistoryModel with error: %{public}@
Failed to retreive protoData from CRDTModelSyncEntity
Migration: Creating ReadingHistoryModel from stored data
Failed to create ReadingHistoryModel with error: %{public}@
Failed to sync readingHistoryModel with error: %{public}@
readingHistoryModel was identical so nothing for us to do
Migration: Model loaded! let's merge: %s
Results for fetch CRDTModelSyncEntity with type ReadingHistoryModel were empty
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
ReadingHistoryService DONE readingHistoryModelSnapshotInfo (currentTime: %@), stateInfo: %@
ReadingHistoryService DONE readingHistoryStateInfo (range: (%@ -> %@), currentTime: %@), stateInfo: %@
ReadingHistoryService DONE increment (date: %@, by: %ld)
ReadingHistoryService DONE handleSyncFileChange: %@
ReadingHistoryService DONE clearToday
ReadingHistoryService DONE clearDefaultsCachedData
ReadingHistoryService DONE clearData
CRDTModelFileSync.ReadingHistoryModel
CRDTModelFileSync
ReadingHistoryModel-SyncInfo
CRDTModelFileSyncManager unable to create directory at %@ error=%@
CRDTModelFileSyncManager Init: modelFileURL: %s
q_handle, no delta
CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s
CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s
CRDTModelFileSyncManager sink: finished
CRDTModelFileSyncManager sink: error: %s
CRDTModelFileSyncContext
ReadingHistoryModel-SyncInfoContext.db
CRDTModelFileSyncContextStore storeDirectory = %@
CRDTModelFileSyncContextStore unable to create CRContext at %@ error=%@
migratedReadingHistoryDataTimestamp
ReadingHistoryService modelDidChange
com.apple.BDSService.ReadingHistoryService.modelDidChange
ReadingHistoryService model ready
ReadingHistoryService updateViewStateIfNeeded -- no handler configured
ReadingHistoryService updateViewStateIfNeeded: state: %@
ReadingHistoryService updateViewStateIfNeeded: model not ready yet
BCCloudData
B16@0:8
TB,N,R
v8@?0
_TtC14bookdatastored22ReadingGoalsController
dataSource
_stateChange
onRemoteChange
ReadingGoalsController - received onRemoteChange
CRDTModelSyncEntity configure(from:) wrong class passed in
CRDTModelSyncEntity incompatible type %s passed in. Expecting %s
CRDTModelSyncEntity Merging: merged data (%ld bytes)
CRDTModelSyncEntity Merging: Unknown error when merging %s %s, error=%s
CRDTModelSyncEntity Merging: Identical properties from cloudData: %s %s
CRDTModelSyncEntity Merging: Could not resolve from cloudData: %s %s
CRDTModelSyncEntity Merging: Adopted properties from cloudData: %s %s
CRDTModelSyncEntity Merging: existing data (%ld bytes) with incoming data (%ld bytes)
CRDTModelSyncEntity %@ Resolving: Asset file URL was nil for record %@
CRDTModelSyncEntity Resolving: Unknown error when merging %s %s error=%s
CRDTModelSyncEntity Resolving: Identical properties from record: %s %s
CRDTModelSyncEntity Resolving: Could not resolve from record: %s %s
CRDTModelSyncEntity Resolving: Adopted properties from record: %s %s
_TtC14bookdatastored19CRDTModelSyncEntity
v32@0:8@16@24
B24@0:8@16
$__lazy_storage_$_logger
type
T@"NSString",N,D,C
protoData
T@"NSData",N,D,C
_TtC14bookdatastored13CRDTModelSync
@24@0:8@16
bookdatastored.CRDTModelSync
init(record:)
bookdatastored/CRDTModelSync.swift
init(coder:) has not been implemented
com.apple.iBooks
deletedFlag
@32@0:8:16@24
ReadingGoals.BooksFinished
ReadingGoals.StreakDay
Fake a remote change
ReadingGoalsDataStore migrate: { %@: %@ }
_TtC14bookdatastored21ReadingGoalsDataStore
localStore
syncStore
registered
Goals cloud error: Change notification had invalid user info
Goals cloud change with reason %d
Goals cloud account change
Goals cloud error: Quota exceeded
Goals cloud error: Change notification had no keys
Goals cloud error: Local dict for key %@ existed with no date
Goals cloud error: Remote dict for key %@ existed with no date
ReadingGoalsDataStore ERROR: No onRemoteChange handler registered
Goals init: Got { %@: %@ }
from to 
_TtC14bookdatastored16ObservationToken
invalidation
callQueue
observations
internalValue
_TtC14bookdatastored21ObservableTransaction
name
observableTransactionQueue
[Transaction]: Ended transaction %s
[Transaction]: Created transaction %s
delegate
_modelSyncVersion
coherenceSyncManager
cancellables
modelCapsule
com.apple.ibooks.CRDTModelFileSyncManager.q_sync
CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{bool}d, incoming=%s and existing=%s
CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s
CRDTModelFileSyncManager q_sync: isRemote=%{bool}d, incoming=%s and existing=%s
CRDTModelFileSyncManager q_sync: finished
CRDTModelFileSyncManager: Model did sync %s
CRDTModelFileSyncManager q_updateState (%s) -- newState=%s
<ReadingHistoryModel empty>
<ReadingHistoryModel last-month=
<ReadingHistoryModel #months=
Streak Records=[
lastDayStreakOrdinal
lastDayStreakOrdinal=
BDSDaemon
BDSServiceConnectionClient
BDSBookWidgetReadingHistoryManager
BDSReadingHistoryViewStateChangeHandler
BookDataStoreBundleLookupClass
BDSAdditions
NSCopying
BDSUbiquityStatusMonitor
IMAdditions
BDSReachability
BDSUbiquityDocumentItem
BDSUbiquityDocumentsObserver
BDSUbiquityStatusChangeObserving
NSObject
BatchDelete
Common_Stores
BDSUbiquityManager
BDSUbiquityDocumentsObserverDelegate
BDSReadingHistoryStateInfo
NSSecureCoding
NSCoding
BDSOSTransaction
CoreDataExtras
BDSAppVersion
BDSUserPreferencesSync
BDSAppGroupContainer
BDSBookWidgetDataUpdater
NSFetchedResultsControllerDelegate
BURestrictionsObserving
BDSICloudIdentityTokenTracker
BDSSyncUserDefaults
BDSICloudIdentityToken
BCCloudKitConfiguration
BCContainerConfiguration
BCCloudKitController
BDSCloudKitSupportSignOutDeleteWithoutInstance
BCCloudKitRecordZone
BCCloudKitDatabaseController
BCCloudDataPrivacyDelegate
BDSServiceProtocolInterface
BDSBookWidgetReadingHistoryData
BCSaltVersionIdentifier
BDSService
MCProfileConnectionObserver
BDSDaemonProtocol
BDSServiceProtocol
BCCloudAssetDetailManager
BDSCloudKitSupportZoneRecovery
BDSCloudKitSupportSignOutDissociate
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSJaliscoDAAPClientService
BDSNBPinningManagerService
BDSReadingGoalsServiceProtocol
BDSReadingHistoryServiceProtocol
BDSBookWidgetInfoManagerService
BCCloudSecureUserDataManager
BDSReadingDataMigrationService
BDSBookWidgetDataService
BDSBookWidgetInfoService
BDSBookWidgetReadingHistoryServiceProtocol
BLNotificationServiceProtocol
BDSReadingHistoryStreakInfo
BCCloudKitTransaction
BDSAppBundleIdentifier
BDSBookWidgetData
BDSJaliscoDAAPServiceImpl
BCAssetDetail
BCCloudData
BCMutableAssetDetail
BCCloudKitSecureConfiguration
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
BDSBookWidgetInfoMO
ManagedObject
BDSReadingGoalsStateInfo
BCCloudKitSyncToCKTransaction
BDSReadingHistoryDayEntryInfo
BCCloudKitDataChangedTransaction
BCCloudSyncVersions
BCMutableCloudSyncVersions
BDSAutomaticPinningListUpdater
BCCloudKitFetchChangesTransaction
BCCloudDataNullPrivacyDelegate
BCMutableCloudData
BDSWidgetCenterManager
BCCloudDataSource
BCCloudManagerBatchSupport
BCCloudDataManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BFMAsset
BFMResource
BDSMediaAPIService
BDSNBPinningManager
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BDSCloudDataManagerMonitor
BCCloudAssetManager
BCCloudDataSyncManagerDelegate
BDSNotificationConnection
APSConnectionDelegate
BCReadingNowDetail
BCMutableReadingNowDetail
BDSReadingHistoryMigrationInfo
BCAssetReview
BCMutableAssetReview
BDSMediaLibraryUtils
BDSXPCEventRelay
BDSReadingHistoryModelSnapshotInfo
BCSecureUserDatum
BCMutableSecureUserDatum
BDSBookWidgetInfoManager
BDSUbiquityManagerObserver
BDSMediaLibraryManagerObserver
BCStoreItem
BCMutableStoreItem
BCAnnotationRange
BCAnnotationsProtoBook
BDSReadingHistoryDayInfo
BCProtoAnnotation
BDSNBController
BDSServiceDelegate
NSXPCListenerDelegate
BDSBookWidgetInfo
_BDSAudiobookAssetInfo
BDSMediaLibraryItem
BDSMediaLibraryManager
BDSSaltVersionIdentifierManager
BCCloudKitDatabaseZoneObserver
BCCloudCollectionsManager
BCCollectionDetail
BCMutableCollectionDetail
BDSCRDTModelSyncVersionInfo
BCCollectionMember
BCMutableCollectionMember
BDSServiceCenter
BDSNotificationForwarder
@16@0:8
v32@0:8@16@24
v32@0:8@"BDSServiceDelegate"16@"NSXPCConnection"24
v16@0:8
v24@0:8@?16
v24@0:8@16
@"BDSServiceDelegate"
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"BUOSStateHandler"
@"BDSNotificationConnection"
@"NSObject<OS_dispatch_source>"
v24@0:8@"BDSReadingHistoryStateInfo"16
@"BDSReadingHistoryStateInfo"16@0:8
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BDSBookWidgetReadingHistoryData"
@"BDSWidgetCenterManager"
v44@0:8:16B24@28@?36
@24@0:8^{_NSZone=}16
@24@0:8@?16
v32@0:8Q16@?24
v32@0:8:16@?24
v20@0:8B16
B16@0:8
@"BDSICloudIdentityToken"
@"NSString"
@"NSURL"
@"NSHashTable"
@"<BDSUbiquityStatusChangeObserving>"
B40@0:8@16@24#32
B32@0:8@16@24
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
i20@0:8I16
i16@0:8
^{__SCNetworkReachability=}
@"NSNumber"
@"NSError"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"BDSICloudIdentityToken"16@"BDSICloudIdentityToken"24
v24@0:8@"NSURL"16
@40@0:8@16@24@32
@"<BDSUbiquityDocumentsObserverDelegate>"
@"BDSUbiquityStatusMonitor"
@"NSMetadataQuery"
@"NSMutableArray"
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@24@0:8#16
@32@0:8@16@24
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
v32@0:8@"BDSUbiquityDocumentsObserver"16@"NSArray"24
v32@0:8@16B24B28
v28@0:8@16B24
v48@0:8@16@24@32@40
@36@0:8@16B24@28
@"<BDSUbiquityManagerObserver>"
@"NSMutableDictionary"
@"BDSUbiquityDocumentsObserver"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8q16@24@32@40
q16@0:8
v24@0:8q16
@"BDSReadingHistoryStreakInfo"
@"BDSReadingHistoryDayInfo"
@"NSArray"
@24@0:8r*16
@"NSObject<OS_os_transaction>"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
@"NSDictionary"
@"NSManagedObjectContext"
@"NSFetchedResultsController"
@28@0:8@16B24
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
v24@0:8@?<v@?B@"NSError">16
v24@0:8B16B20
v32@0:8@16@?24
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@"CKContainer"
@"BUCoalescingCallBlock"
@"CKRecordZone"
@"NSString"32@0:8@"NSString"16@"NSString"24
v36@0:8@16B24@?28
v52@0:8@16@24B32@?36@?44
v40@0:8@16@24@?32
v40@0:8@16q24@?32
d16@0:8
v24@0:8d16
@"CKDatabase"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSData"
@"NSMapTable"
@"BDSReadingHistoryStateInfo"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v24@0:8@"NSString"16
v36@0:8B16q20@?28
v36@0:8B16@20@?28
v36@0:8B16q20@?<v@?B>28
v36@0:8B16q20@?<v@?B@"NSError">28
v36@0:8B16@"NSString"20@?<v@?B>28
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
@28@0:8B16@?20
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSError">20
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v32@0:8d16@?24
v32@0:8q16@?<v@?B>24
v32@0:8d16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"BDSReadingGoalsStateInfo"B>16
v48@0:8@16@24@32@?40
v32@0:8@"BDSCRDTModelSyncVersionInfo"16@?<v@?B>24
v40@0:8@"NSDate"16q24@?<v@?B>32
v32@0:8@"NSDate"16@?<v@?@"BDSReadingHistoryModelSnapshotInfo"B>24
v48@0:8@"NSDate"16@"NSDate"24@"NSDate"32@?<v@?@"BDSReadingHistoryStateInfo"B>40
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"<BCSecureUserDatum>"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableSecureUserDatum"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"BCMutableSecureUserDatum"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"BDSReadingHistoryStateInfo"B>16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
@"BCCloudAssetManager"
@"BCCloudCollectionsManager"
@"<BCCloudSecureUserDataManager>"
@"BDSNBController"
@"BDSJaliscoDAAPServiceImpl"
@"BDSNotificationForwarder"
@"BDSReadingGoalsService"
@"BDSReadingHistoryService"
@32@0:8@16q24
@"BDSOSTransaction"
@"<BCCloudKitTransactionDelegate>"
@64@0:8@16@24@32@40@48@56
v44@0:8B16@20q28@?36
@"BLJaliscoDAAPClient"
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
s16@0:8
f16@0:8
B24@0:8d16
v20@0:8f16
v20@0:8s16
v20@0:8i16
v24@0:8@"BCCloudKitTransaction"16
@"BCCloudKitController"
@"BCCloudDataSyncManager"
@"NSPersistentHistoryToken"16@0:8
@"NSPersistentHistoryToken"
B28@0:8@16B24
v24@0:8Q16
@?16@0:8
@"NSProgress"
@"<BCCloudDataPrivacyDelegate>"
@"CKRecord"
@"CHSTimelineController"
@48@0:8@16@24@32@40
v36@0:8B16@20@28
B40@0:8@16@24@32
@"NSPersistentStoreCoordinator"
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
@"<BDSCloudDataManagerMonitor>"
@"BCCloudDataSource"
@"<BCCloudDataMapper>"
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?48@0:8@16@24Q32@40
@"<BCCloudDataSyncManagerDelegate>"
@"NSNumber"16@0:8
@"NSURL"16@0:8
@"NSDictionary"16@0:8
@"<BFMSeries>"16@0:8
v36@0:8@16i24@?28
@40@0:8B16B20B24B28@?32
@"BLHLSAudiobookFetcher"
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
v32@0:8@"BCCloudDataManager"16@"NSArray"24
@"NSManagedObjectModel"
@"BDSBookWidgetInfoManager"
@"BDSBookWidgetDataUpdater"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
@"BCCloudChangeTokenController"
@"BDSSaltVersionIdentifierManager"
@"BDSUbiquityManager"
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
@"BCCloudDataManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"APSConnection"
v40@0:8Q16@?24@?32
@64@0:8q16q24@32@40@48@56
v24@0:8@"BDSUbiquityManager"16
v40@0:8@"BDSUbiquityManager"16@"NSString"24@"NSDictionary"32
v32@0:8@"BDSUbiquityManager"16@"NSString"24
v32@0:8@"BDSMediaLibraryManager"16@"NSArray"24
@"BCCloudReadingNowDetailManager"
@"BDSMediaLibraryManager"
@24@0:8Q16
@36@0:8q16q24B32
v20@0:8I16
I16@0:8
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v32@0:8@?16@?24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BDSICloudIdentityTokenTracker"
@"<BDSServiceConnectionClient>"
@"BDSReachability"
@76@0:8@16@24@32@40@48@56@64B72
@"<BDSMediaLibraryManagerObserver>"
v40@0:8@"BCCloudKitDatabaseController"16@"NSString"24@?<v@?B>32
@"NSObject<BDSCloudKitSupportZoneRecovery>"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
v48@0:8@16Q24@?32@?40
MbP?
bookdatastored
CRDTModelSyncMapper
ReadingHistoryModelProvider
ReadingHistoryDataSource
ReadingHistoryDataStore
State
NSUbiquitousKeyValueStore
NSUserDefaults
ReadingGoalsService
CRDTModelSyncManager
SyncError
CRDTModelSyncVersion
CRDTModelContextStore
ReadingHistory
DayEntry
Streak
State
UserDefaults
Notification
AddFakeSession
ClearToday
CodingKeys
bookdatastored
ReadingHistoryService
CRDTModelCloudSyncController
ReadingGoals
State
Goal
StateChange
Source
ChangeOrigin
ReadingGoalsStateObserving
ReadingGoalsStateProvider
ReadingGoalsEventProcessor
ReadingGoalsDataSource
ReadingGoalsController
ModelState
LoadedState
Source
CRDTModelFileSyncContextStore
bookdatastored
CRDTModelSyncProtocol
CRDTModelSyncEntity
CRDTModelSync
MergerError
ReadingGoalDataStoreProtocol
ReadingGoalCloudDataStoreProtocol
ReadingGoalsDataStore
Constants
GoalDictKey
ModelSnapshot
ModelValues
ObservationToken
ObservableDelegate
Observable
Event
MutableObservable
ObservableTransaction
CRDTModelNameSupport
CRDTModelFileSyncManagerDelegate
CRDTModelFileSyncManagerConfig
CRDTModelFileSyncInfo
CRDTModelFileSyncManager
DefaultConfig
SyncError
ReadingHistoryDay
ReadingHistoryMonth
ReadingHistoryModel
DayKey
So13CKRecordValue_p
5start_AA3endt
$s14bookdatastored27ReadingHistoryModelProviderP
$s14bookdatastored24ReadingHistoryDataSourceP
So14NSUserDefaultsC
So17OS_dispatch_queueC
_GIegn_
GSgXw
yxGSgXwz_
_SQRzlXX
yXlSgXw
yXlSgXwz_Xx
ySOy
_GcG
_GIegn_
GSgXw
yxGSgXwz_
_SQRzlXX
4from_AA2tot
ySOy
_GcG
SgXw
SgXwz_Xx
ySSG
SaySSG
ySiG
_GIegc_
G4from_AC2tot
_GSg
SnySiG
ySSSo11BCCloudData_pG
G_Gc
ySOy
G_GcG
G_GIegn_
GGSgXw
yxGSgXwz_
G_SQRzlXX
ScPSg
SbIeyBy_
IeghH_
ytIeghHr_
So24BDSReadingGoalsStateInfoCSbIeyByy_
So8NSObjectC
SgXw
SgXwz_Xx
yxGSgXw
yxGSgXwz_x_
RzlXX
_pSgIegyg_
So7NSErrorCSgIeyByy_
_pSgIegyg_Sg
G0R2_
IeyB_
So11BCCloudData_p
So17BCCloudDataSourceC
So22BCCloudDataSyncManagerC
So18BCCloudDataManagerC
So28BCCloudChangeTokenControllerC
So20BCCloudKitControllerC
So31BDSSaltVersionIdentifierManagerCSg
ypSgyp_A2BtXBGSg
yxGG
ypSgyp_A2AtXB
So16BDSOSTransactionCSg
SSSg
GSgXw
yxGSgXwz_
RzlXX
_ypSgyp_A2CtXBtG
ypSg
ypSg_AAt
G0R3_
So8NSObjectCSg
G0R1_
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
_pSg
So11BCCloudData_pSg
_pSg
Sg_ABt
SgXw
SbIeghHr_
SbIegy_
IeyBy_
So26BDSReadingHistoryStateInfoCSbIeggy_
So26BDSReadingHistoryStateInfoC
IeyByy_
So34BDSReadingHistoryModelSnapshotInfoCSbIeggy_
So34BDSReadingHistoryModelSnapshotInfoC
IeyByy_
So26BDSReadingHistoryStateInfoCSgSbIeyByy_
SbSo7NSErrorCSgIeyByy_
yxGSgXw
yxGSgXwz_x_
RzlXX
So39BDSReadingHistoryViewStateChangeHandler_pSg
So21BUCoalescingCallBlockCSg
Ign_
So21NSPersistentContainerC
So17OS_os_transaction_pSgz_Xx
Sbz_Xx
So22NSManagedObjectContextC
ySo28NSPersistentStoreDescriptionCG
yyXlG
ySo29BDSReadingHistoryDayEntryInfoCG
GSgXw
GGSg
GSgXw
Igl_
$sSY
$ss12CaseIterableP
6origin_t
$s14bookdatastored26ReadingGoalsStateObservingP
$s14bookdatastored25ReadingGoalsStateProviderP
$s14bookdatastored26ReadingGoalsEventProcessorP
$s14bookdatastored22ReadingGoalsDataSourceP
yycSg
_G_ACt
yx_G
yx_G
x5model_t
$s14bookdatastored21CRDTModelSyncProtocolP
So11BCCloudDataC
So18BCMutableCloudDataC
SDySSypG
ySS_
$s14bookdatastored28ReadingGoalDataStoreProtocolP
$s14bookdatastored33ReadingGoalCloudDataStoreProtocolP
ySSG
ypSgyp_A2CtXBG
_yXlt
ySSypG
_pSg
xIgl_
yxGSgXw
yxGSgXwz_x_SQRzlXX
ySOc
$s14bookdatastored18ObservableDelegateP
SDySOy
yx_GcG
_pSgXw
x5value_t
x4from_x2tot
yx_GytIegnr_
yx_GIegn_
yx_G
yxGSgXw
yxGSgXwz_x_
RzlXX
$s9Coherence10CRStruct_1P
20ObservableDifference
QzSg5model_yt5extrat
$s9Coherence15CRStruct_Base_1P
14MutatingAction
yxGG
$s9Coherence4CRDTP
$s9Coherence6CRTypeP
$s14bookdatastored20CRDTModelNameSupportP
$s14bookdatastored32CRDTModelFileSyncManagerDelegateP
$s14bookdatastored30CRDTModelFileSyncManagerConfigP
SDySS
_pSgXw
yxGGG
yxGG
5model_t
So17OS_os_transaction_pSg
Igl_
GIgl_
G0R0_
Si3key_
G5valuetSg
Si3key_
G5valuet
Si3key_
5valuet
$s9Coherence10CRStruct_2P
SiSg11readingTime_
Sg0A4Goalt
$s9Coherence15CRStruct_Base_2P
ySi_GSgt
$s9Coherence10CRStruct_3P
G_GSg4days_
Sg9totalTimeAI20lastDayStreakOrdinalt
$s9Coherence15CRStruct_Base_3P
G_GSg_
ySi_GSgAIt
G_GSg6months_AAySi
_GSg13streakRecordst
G_GSg_AAySi
_GSgt
ySnySiGG
ySi3key_
5valuetG
ySi3key_
G5valuetG
Si3key_SiSg11readingTime_
Sg0B4Goalt5valuet
G_GSg
Si3key_
G_GSg4days_
Sg9totalTimeAJ20lastDayStreakOrdinalt5valuet
Si3key_
G5valuet
Si3key_
G5valuetSg
G_GSg
G_GSg6months_AAySi
_GSg13streakRecordstSg
Si3key_
5valuetSg
ySi3key_
G5valuetG
modelProvider
currentUserDefaults
currentDate
streakDayGoal
queue
clearOnInitialLoad
_state
lastModelChange
lastModelChangeObservableTransaction
model
currentStreak
today
longestStreak
goalsDataStore
goalsController
logger
cloudDataSource
cloudSyncManager
localDataManager
tokenController
cloudKitController
saltVersionIdentifierManager
crdtContext
$__lazy_storage_$_conflictResolvers
_modelState
modelQueue
callbackQueue
observableTransaction
enableCloudSync
identicalModel
mergedModelNotSerializable
context
version
readingTime
goal
isStreakDay
date
endDate
length
currentStreak
longestStreak
today
readingHistory
duration
goalsService
historyDefaults
historyDataStore
historyCloudSyncManager
historyCloudSyncController
isModelReady
accessQueue
modelReadyQueue
viewStateChangeHandler
localSyncManager
cloudSyncManager
localModelSyncVersionTransaction
localModelSyncVersionTransactionQueue
waitForlocalModelSyncVersion
waitForlocalModelSyncVersionTimeoutBlock
RawValue
AllCases
booksFinishedGoal
streakDayGoal
booksFinished
dailyReading
state
source
local
remote
clear
load
dataSource
_stateChange
onRemoteChange
model
loaded
lastSource
loading
ready
remote
local
stored
$__lazy_storage_$_logger
type
protoData
noResolvedValue
identical
localStore
syncStore
onRemoteChange
registered
loaded
lastSource
modelValues
remoteModelValues
readingDay
longestStreak
invalidation
accessQueue
callQueue
observations
internalValue
delegate
onObservation
change
name
observableTransaction
observableTransactionQueue
logger
ObservableDifference
Type_1
MutatingAction
Partial
model
additionalFields
delegate
_modelState
_modelSyncVersion
modelQueue
observableTransaction
enableCloudSync
coherenceSyncManager
crdtContext
cancellables
modelCapsule
logger
identicalModel
mergedModelNotSerializable
ObservableDifference
Type_1
Type_2
MutatingAction
Partial
Type_3
readingTime
readingGoal
additionalFields
days
totalTime
lastDayStreakOrdinal
months
streakRecords
yearMonth
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>bookdatastored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.bookdatastored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>764.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A6200i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2019 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>612006184</string>
<key>application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
<string>com.apple.iBooks.cloudData</string>
<string>com.apple.iBooks.secureData</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.iBooks</string>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.iBooks</string>
</dict>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.iBooks.secureData</key>
<string>iBooksSecureData</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.iBooks</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/HTTPStorages/com.apple.bookdatastored/</string>
<string>/Media/iTunes_Control/iTunes/</string>
<string>/Library/Caches/com.apple.bookdatastored/</string>
<string>/Library/Caches/com.apple.AppleMediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.adid</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.apsd</string>
<string>com.apple.medialibraryd.xpc</string>
<string>com.apple.cloudd</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.chronoservices</string>
<string>com.apple.kvsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.bookdatastored</string>
<string>group.com.apple.iBooks</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.nano-preference.read-write</key>
<array>
<string>com.apple.NanoMusicSync</string>
</array>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.bookdatastored</string>
<key>com.apple.security.ts.ubiquity</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>fairplay-client</key>
<string>1328318286</string>
</dict>
</plist>
goal
date
Process launch.
Process exit.
Daemon initializing.
TMP DIR ERROR: _set_user_dir_suffix Failed: %s
Daemon shutting down.
Daemon starting up.
Starting up bookdatastored daemon
Some error happened in pre-listener startup: %@
bookdatastored received sigterm signal
Daemon finished starting up.
Setting up listeners.
BDSBookWidgetReadingHistoryManager - current: %@
BDSBookWidgetReadingHistoryManager - detected changes:
    old = %@
    new = %@
BDSBookWidgetReadingHistoryManager - no changes
Failed to create directory for saving widget reading history data: %@
BDSUbiquityStatusMonitor CloudKit=%{public}@ optedIn=%{public}@
BDSUbiquityStatusMonitor: iCloud identity changed. {Refreshing with optedIn: %{public}@}
BDSUbiquityStatusMonitor: dq_isCloudKitEnabled: signedIn = %@, globalICloudDrive = %@, cloudKit = %@, self.optedIn = %@
BDSUbiquityStatusMonitor: dq_isICloudDriveEnabled: isICloudDriveSyncOptedIn = %@, isICloudDriveEnabled = %@
BDSUbiquityStatusMonitor: isCloudKitEnabled = %@
BDSUbiquityStatusMonitor: restartObserving was called
BDSUbiquityStatusMonitor: restartObserving cloudDriveOptedIn:%@
BDSUbiquityStatusMonitor: Books / iCloud Drive switch was %@
BDSUbiquityStatusMonitor: notifying observers of a token change
BDSUbiquityStatusMonitor: tokens match ... so we are not notifying anyone
BDSUbiquityStatusMonitor: iCloud identity changed. {iCloudEnabled: %@}
iCloud identity changed. {iCloudEnabled: %@}
BDSUbiquityStatusMonitor: iCloud identity changed. Notifying newToken:%@ oldToken:%@
BDSUbiquityStatusMonitor: iCloud identity changed. Notifying coordinating observer newToken:%@ oldToken:%@
BDSUbiquityStatusMonitor: dq_refreshUbiquityAvailabilityStatus container:%@ current::%@ oldToken:%@
BDSUbiquityStatusMonitor: Container URL set to: %{mask.hash}@
BDSUbiquityStatusMonitor: Error deleting the folder:[%@] : Error: {%@}
BDSUbiquityStatusMonitor: dq_refreshUbiquityAvailabilityStatus iCloud documentURL changed. {documentURL: %{mask.hash}@}
BDSUbiquityStatusMonitor: Container URL set to: <nil>
BDSUbiquityDocumentsObserver: Have ubiquity URL: %{mask.hash}@
BDSUbiquityDocumentsObserver: No ubiquity URL
BDSUbiquityDocumentsObserver: No ubiquity identity
BDSUbiquityDocumentsObserver: iCloud identity changed. {iCloudEnabled: %d}
BDSUbiquityDocumentsObserver: restarting metadata query...
BDSUbiquityDocumentsObserver: stopping metadata query...
BDSUbiquityDocumentsObserver: Starting new metadata query
BDSUbiquityDocumentsObserver: Starting new metadata query: %@
Observing URL: %{mask.hash}@
Setting up query
BDSUbiquityDocumentsObserver: Starting metadata query: %@
Tearing down query
BDSUbiquityDocumentsObserver: Metadata query did start
BDSUbiquityDocumentsObserver: Metadata query did finish
Found %@ downloaded items
Created nosync directory
Failed to create nosync directory: %{mask.hash}@, %@
Found existing nosync directory
Failed to create subpath: %{mask.hash}@, %@
Handled Exception {%@}
BDSUbiquityManager: setEnableUbiquityObserving: %@
BDSUbiquityManager: ubiquityStatusChangedToAvailableWithNewIdentity: %{public}@ oldIdentity: %{public}@
BDSUbiquityManager: ubiquityStatusChangedToAvailableWithNewIdentity: Removing assets. count: %lu
BDSUbiquityManager: didLoadWithItems: count: %lu
BDSUbiquityManager: Initial gather complete
BDSUbiquityManager: itemsDidBecomeAvailable: count: %lu
BDSUbiquityManager: itemsDidBecomeUnavailable: count: %lu
BDSUbiquityManager: itemsDidChange: count: %lu
BDSUbiquityManager: mq_itemsDidChange: count: %lu
BDSUbiquityManager: updating cache for %lu items
BDSUbiquityManager: Could not determine file extension for %@
BDSUbiquityManager: extendedAttributeNamed: getxattr failed. xattr: %@ errno: %d url: %{mask.hash}@
BDSUbiquityManager: extendedAttributeNamed: xattr_name_with_flags failed. xattr: %@ errno: %d url: %{mask.hash}@
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
Updating current widget data to %ld with: %@
Initial fetch of widget info complete.
Error creating FRC for BookWidgetInfo: %@
No changes at startup, not notifying widget.
WidgetDataUpdater: explicitContentRestricted %{BOOL}d predicate:%@
Will notify widget of changes
Starting with %lu widget datas read from disk: %@
Error unarchiving currentWidgetData: %@
Didn't find current widget data file, starting fresh.
Successfully updated current widget data file.
Failed to write out current widget data: %@
Tried to remove current widget data file after failing to update it and failed with: %@
Calculating reading percent for %@ with bookmarkTime %f. Duration %@
Could not calculate reading progress for audiobook %@ with duration %@. AssetDetail: %@
Started monitoring reading progress for assetIDs %@
Error starting FRC to monitor reading progress: %@
Recieved callback from FRC that reading progress has changed.
Received callback from FRC that WidgetInfo list has changed.
Error fetching updated list of WidgetInfos: %@
No changes as result of FRC, not notifying widget.
Failed to create directory for saving widget data: %@
Received explicit content change:%{BOOL}d. Refreshing book widget info
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
acknowledgeiCloudIdentity
Done acknowledge iCloud identity: %{mask.hash}@
BDSSyncUserDefaults: isICloudDriveSyncOptedIn isPrimaryAccountManagedAppleID = %@ isBCSyncICloudDriveUserDefaults = %@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
BCCloudKitController - registerForSecureNotifications
BCCloudKitController - CKAccountStatusCouldNotDetermine: %@
BCCloudKitConttoller - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available
BCCloudKitConttoller - Error connecting user to database error=%{public}@
BCCloudKitConttoller - connectUserToConteinr subscription completed.
BCCloudKitController - CKAccountStatusRestricted
BCCloudKitController - CKAccountStatusNoAccount
BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable
BCCloudKitController (%{public}@) _coalescedAttachment
did not call completion after 10s in %{public}@
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %{public}@ serviceMode:%{public}@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed for %{public}@
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
Account Restricted.  Not syncing anything.  Account status error=%{public}@
Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
_coalescedArchive (%@)
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container: %@
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%@
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
BCCloudKitDatabaseController/attachToZones-cloud
BCCloudKitDatabaseController/attachToZones-secureData
[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@
[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@
BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation (%{public}@) failed: %{public}@
CKModifySubscriptionsOperation Success for: (%{public}@)
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes %@
[BCCloudKitDatabaseController (%@)] 2. p_createRecordZones:%@ database:%{public}@
3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]
5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@
CKModifyRecordZonesOperation success saving: %{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@
BCCloudKitDatabaseController - No PCS Identity available
BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@
CKFetchRecordZonesOperation failed: %{public}@
CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@
BCCloudKitDatabaseController - calling saveResultsBlock
CKFetchRecordZonesOperation Wanted:%@ Received:%@
(%{public}@) Establishing record salt
(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion
(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover
(%{public}@) Will save record salt
(%{public}@) Saving record salt....
(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)
(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@
(%{public}@) *** Got record salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@)- No record zone changes to fetch
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges Adding fetchRecordZoneChangesOperation=%@
BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@
%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP
p_informObserversOfSaltVersionIdentifierChanged DONE
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%{public}lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@
BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
Successfully saved widget reading history data.
Failed to write widget reading history data: %@
Tried to remove widget reading history data file after failing to save it and failed with: %@
Starting with widget reading history data read from disk: %@
Error unarchiving widget reading history data: %@
Didn't find widget reading history data file, starting fresh.
[Service]: Could not setup jalisco client
BDSService Paused=%{public}@ SignedIn=%{public}@ GlobalICloudDrive=%{public}@ CloudKit=%{public}@ LastRunVersion=%d isCloudKitEnabled=%{public}@
BDSService enabling assetSync: %{public}@ readingNow Sync: %{public}@
setCloudSyncPaused: %@
Unable to update jalisco - bookdatastored is missing a jalisco client
Unable to update jalisco family- bookdatastored is missing a jalisco client
Unable to hide jalisco items- bookdatastored is missing a jalisco client
Unable to hide jalisco items with store ids - bookdatastored is missing a jalisco client
Unable to reset purchased tokens- bookdatastored is missing a jalisco client
Unable to resetStaleJaliscoDatabase - bookdatastored is missing a jalisco client
Unable to update jalisco after sign in - bookdatastored is missing a jalisco client
Unable to update jalisco after sign out - bookdatastored is missing a jalisco client
Returning widget data: %@
Returning widget infos: %@
hasSaltChangedWithCompletion should not be called
_coalescedNotification in %@ did not call notification within 10s.
Found changes between %@ and %@:
[BDSJaliscoDAAPClient] Unable to initialize BDSJaliscoDAAPClient
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
[BCCloudKitTransactionManager] Creating syncToCKTransaction %@
[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@
[BCCloudKitTransactionManager] Transaction completed %@
Calling block %@ for transaction %@ 
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
AutomaticPinningList startUpdate
About to enable sync
Doing nothing because alreadyRunning is %{public}@
BDSAutomaticPinningListUpdater ReceviedFetchedRecordsChanged %lu
Was cancelled before fetching records finished. currentObserver:%lu
At least one manager wanted to continue, so updating the pinning lists.
Updating wantToReadAndReadingNow completed and we were not cancelled.
Updating wantToReadAndReadingNow completed but we were already cancelled.
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Cannot determine valid salt establishedSalt:%{BOOL}d systemFields:%{BOOL}d for record %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
BDSWidgetCenterManager - reload timeline
Unable to create persistent stores on the coordinator:%@
Error %{public}@: %{public}@ %d
Unable to migrate legacy database since file does not exist at URL %@
Unable to create cloud data source persistent store. Attempting to remove files and start over
Unable to recreate cloud data source persistent store. Giving up
Migrating legacy cloud data source from %@ to %@
Destroying legacy cloud data source at %@
Adding cloud data source persistent store for %@
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
BCCloudDataManager Incremented cloudSyncVersion to %lld
No managed object context!
BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ data:%@
Compraring local to cloudData for %@. isEqualExceptForDate:%{BOOL}d
Data diff! %@ hasChanges:%{BOOL}d
BCCloudDataManager: %@ Batch save to storeID:%@ with error:%@
BCCloudDataManager: %@ Save to storeID:%@ error:%@
BCCloudDataManager: %@ setCloudData fail, no moc
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@
Did not find %{public}@ to update sync gen from cloudData:%@
BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager resolveConflictsForRecords:%{public}@ did not find existing record.  Creating new from %@
BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@
BCCloudDataManager #recordChange failedRecordIDs:%{public}@
BCCloudDataManager %@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ #dissociateCloudData
BCCloudDataManager %@ #hasSaltChangedWithCompletion
No managed object context! #hasSaltChangedWithCompletion
BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Total success saving %lu records and deleting %lu records OperationID: %{public}@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %{public}@.  Operation ID: %{public}@
We want to update the bitrate so fetching master playlist for mediaItem: %@
Updating wantToRead:%d, readingNow:%d, manuallyPinned:%d jaliscoUpdateSuccessful:%d
found readingNow member for assetID: %@
found readingNow member with assetID "%@" that has no MediaItem.
returning mostRecentAudiobook with assetID: %@
updating bitrate for item with adamID %@
Error updating bitrate for item with adamID %@
Updated bitrate for item with adadmID: %@
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@
<%@ BCCloudChangeTokenController - No change yet we tried updating %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
SERVICE Creating %@
SERVICE Skip creating widgetInfoManager
Dealloc BCCloudAssetManager
BCCloudAssetManager - Service build - #enableCloudSync setEnableCloudSync %@ enableReadingNowSync %@
BCCloudAssetManager hasSaltChangedWithCompletion with managers:%@
BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion - Service mode - non watch
Initializing BCCloudAssetManager - Service mode
Trying to remove without IDs
Fetching assetDetailForAssetID on assetID:%@
Completed fetch of assetDetailForAssetID on assetID:%@ with error:%@
BDSNotificationConnection isWithinConnectionDateRange:%@
BDSNotificationConnection lastConnectionDate read as:%@
[Notification] Registering for notifications for container %@, pushEnv: %@
BDSNotificationConnection updated lastConnectionDate to:%@
[Notification] Received Public Token.
[Notification] Received APS Message with userInfo %@
Ignoring cloud notifications - Application has not been launched recently.
Processed Notifications - Application has been launched recently.
Ignored APSConnection message - not our connection, or no userInfo.
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail configured: %@ %@ from readingNowDetail:%@
BCReadingNowDetail compare %@ to self:%@ SAME:%{BOOL}d
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
Assuming cloudAssetType %@ Resolving: from record: %@ %@
BCReadingNowDetail %@ Resolving: Adopted properties from record: %@ %@
BCReadingNowDetail %@ Resolving: Identical properties from record: %@ %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCReadingNowDetail configuredRecordFromAttributes setting cloudAssetType:%@ for %@
BCReadingNowDetail BDSReadingNowSchemaContentAssetType disabled.
ReadingNowDetailDataSource did not have a valid moc.  That is unexpected.
Found %lu WidgetInfos with missing relationships while setting ReadingNowDetails
Error trying to find WidgetInfos that need relationships updated: %@
Updated WidgetInfo relationship while creating ReadingNowDetail.
[Widget] getRecentBooksExcludingAssetIDs:%@ predicate %@ 
needsReadingNowAssetTypePopulation:(%{BOOL}d) predicate %@ results %@
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
BDSMediaLibraryUtils No daap item found for %@
BDSMediaLibraryUtils No collections for %@
BDSMediaLibraryUtils Could not find audiobookQuery.
Registering event handlers
Received notification event with invalid name
Posting notification: %@
Received notification event with invalid type
Registered handler for notification events
BCSecureUserDatum configureFromCloudData wrong class passed in.
BCSecureUserDatum %@ Mismatch key from record key %@
BCSecureUserDatum %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCSecureUserDatum %@ No Record supplied
BCMutableSecureUserDatum init with no key supplied
BCMutableSecureUserDatum init with no record supplied
Need to create these details:%@
Got existing:%@
WidgetInfoManager unable to find widgetInfo error:%@
WidgetInfoManager getInfosWithLimit success with %lu items
WidgetInfoManager getInfosWithLimit failed error:%@
WidgetInfoManager unable to find widgetInfo matching %@ error:%@
setBookWidgetInfoWithStoreInfo %@
widgetInfos populated with storeInfo:%@
setBookWidgetInfo %@
BDSBookWidgetInfoMO readingNowDetails %@
Error looking up ReadingNowDetails for WidgetInfos: %@
BDSBookWidgetInfoMO %@ has NO readingNowDetail
BDSBookWidgetInfoMO %@ linked to %@
Creation/Update of %lu WidgetInfos succeeded.
Error creating WidgetInfos: %@
Unexpected cloudAssetType: %@ for assetID: %@
Failed to fetch store assets with, audiobookAssetIDs: %@, bookAssetIDs: %@, error: %@
Failed to fetch store assets with, assetIDs: %@, error: %@
Removing BDSBookWidgetInfoMO: %@
Could not delete BookWidgetInfo's with assetIDs: %@. Error: %@
didInsertNewRecords %@
didInsertNewRecords NOTHING TO DO
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
BDSNBController init.
BDSNBController fetch latest completed.
BDSNBController Initial fetch completed.
BDSNBController error: %@
BDSNBController fetchLatest
Error trying to write updated assetDetail for assetID: %@ error: %@
Failed to write updated assetDetail for assetID %@ with no error reported.
Updated assetDetail for assetID %@
BDSNBController attempting to update bookmark time from assetDetail %@
BDSNBController Setting bookmark time %f for media item assetDetail %@
BDSNBController media item has a newer date. Updating asset:%@. from mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController media item has the same date, not updating asset:%@. mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController No media items for %@
BDSNBController fetching changes since cloudSyncVersions: %@
BDSNBController Updating from assetDetails: updated (%lu) removed (%lu)
BDSNBController skipping non-store audiobook assetID: %@
BDSNBController skipping assetDetail without datePlaybackTimeUpdated for assetID: %@
BDSNBController fetching again while updating assetDetails.
BDSNBController done fetching while updating assetDetails.
Initializing service delegate.
Service delegate released.
Received incomming connection request.
Refusing connection to pid %d. (appIdentifier: %@)
Accepted connection to %d.
Instantiating BDSService.
Checking if an account change happened, necessitating our process going away.
User logged out. Shutting down.
Checking if cloud data should get deleted.
User logged out from iCloud.  Deleting local copies of cloud data.
Deleted local copies of cloud data in response to logout.
Deleting cloud data.
Completed deleting cloud data
BDSMediaLibraryManager: SyncValidity is the same. Last: %@, Lib: %@
BDSMediaLibraryManager: SyncValidity changed. Last: %@, Lib: %@. Setting anchor to: %@. Recording new syncValidity and anchor
BDSMediaLibraryManager: Performing intial fetch...
BDSMediaLibraryManager: Recieved MPMediaLibraryEntitiesAddedOrRemovedNotification
Could not get collection from entity: %@
No assetID found for item: %@. MPMediaEntity: %@. MPMediaItemCollection %@
Could not get assetID from item: %@. Entity: %@
No assetID found for item: %@. collection: %@
BDSMediaLibraryManager: Finished initial gather
DEBUG: gathered MediaLibrary items: %@
BDSMediaLibraryManager: Could not create audiobookQuery
BDSMediaLibraryManager: Failed to generate assetID for media item %@.
BDSMediaLibraryManager: No storeID for media item %@. isPurchaseHistoryItem: %@
[BDSSaltVersionIdentifierManager] init with %@ %@. Adding to zone:(%@)
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ ---1. %@  
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.
[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError 
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing
Initializing BCCloudCollectionsManager - Service mode
BCCloudCollectionsManager SERVICE #enableCloudSync setEnableCloudSync:completion %@
BCCloudCollectionsManager collectionDetailManagerInstancecompleted enableCloudSync %{BOOL}d
BCCloudCollectionsManager collectionMemberManagerInstance completed enableCloudSync %{BOOL}d
BCCloudCollectionsManager - SERVICE setEnableCloudSync:completion DONE
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCloudCollectionsManager hasSaltChangedWithCompletion %@
BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
Error adding storeItem for storeID: %@
Error <BCCloudCollectionMemberManager setCollectionMember:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchCollectionMembersIncludingDeleted:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchMaxSortOrderInCollectionID:> {%@}
MbP?
bookdatastored
CRDTModelSyncMapper
ReadingHistoryModelProvider
ReadingHistoryDataSource
ReadingHistoryDataStore
State
NSUbiquitousKeyValueStore
NSUserDefaults
ReadingGoalsService
CRDTModelSyncManager
SyncError
CRDTModelSyncVersion
CRDTModelContextStore
ReadingHistory
DayEntry
Streak
State
UserDefaults
Notification
AddFakeSession
ClearToday
CodingKeys
bookdatastored
ReadingHistoryService
CRDTModelCloudSyncController
ReadingGoals
State
Goal
StateChange
Source
ChangeOrigin
ReadingGoalsStateObserving
ReadingGoalsStateProvider
ReadingGoalsEventProcessor
ReadingGoalsDataSource
ReadingGoalsController
ModelState
LoadedState
Source
CRDTModelFileSyncContextStore
bookdatastored
CRDTModelSyncProtocol
CRDTModelSyncEntity
CRDTModelSync
MergerError
ReadingGoalDataStoreProtocol
ReadingGoalCloudDataStoreProtocol
ReadingGoalsDataStore
Constants
GoalDictKey
ModelSnapshot
ModelValues
ObservationToken
ObservableDelegate
Observable
Event
MutableObservable
ObservableTransaction
CRDTModelNameSupport
CRDTModelFileSyncManagerDelegate
CRDTModelFileSyncManagerConfig
CRDTModelFileSyncInfo
CRDTModelFileSyncManager
DefaultConfig
SyncError
ReadingHistoryDay
ReadingHistoryMonth
ReadingHistoryModel
DayKey
com.apple.bookdatastored.xpc-listener-ready
com.apple.bookdatastored.startup-queue
com.apple.bookdatastored
v16@?0@"NSError"8
com.apple.iBooks.BookDataStoreService
Books
use_books_widget
BKReadingGoalsUserDefaultsKey
com.apple.iBooks.BDSBookWidgetReadingHistoryManager.saveQueue
BDSBookWidgetReadingHistoryManager._processViewStateChange
Library/Application Support/bookdatastored
currentWidgetReadingHistoryData.plist
BookDataStore.CloudKit
BookDataStore.CloudKitSync
BookDataStore.CloudKitAudiobook
BookDataStore.ServiceCenter
BookDataStore.Service
BookDataStore.Widget
BookDataStore.Ubiquity
BookDataStore.MediaLibrary
BDSArrayAdditionsErrorDomain
ubiquityIdentityToken
nonNilUbiquityIdentityToken
Documents
com.apple.iBooks.BDSUbiquityStatusMonitor.containerQueue
com.apple.iBooks.BDSUbiquityStatusMonitor.dispatchQueue
com.apple.iBooks.BDSUbiquityStatusMonitor.notifyQueue
enabled
disabled
.Trash
<%@(%p) CloudKit=%@ iCloudDrive=%@ optedIn=%@ containerURL='%@' documentsURL='%@'
kNetworkReachabilityChangedNotification
<%@(%p) 
 url : %@ 
 isLocal : %@ 
 isNotLocal : %@ 
 isUploading : %@ 
 isUploaded : %@ 
 isDownloading : %@ 
 downloadingPercent : %@ 
 uploadingPercent : %@ 
 uploadingError : %@ 
 unresolvedConflict : %@ 
 contentChangedDate : %@ 
 contentCreationDate : %@ 
 contentFileSize : %@ 
com.apple.iBooks.BDSUbiquityDocumentsObserver.queue
com.apple.iBooks.BDSUbiquityDocumentsObserver.metadataQueryQueue
%K BEGINSWITH %@
v32@?0@"NSMetadataItem"8Q16^B24
Data
metadata.nosync
kMDItemFSContentChangeDate
kMDItemFSCreationDate
kMDItemFSSize
<%@(%p) identity='%@' isLoaded=%@ containerURL='%@' noSyncURL='%@'>
ubiquityStatusMonitor = %@
objectID
com.apple.iBooks.title
com.apple.iBooks.assetID
com.apple.iBooks.url
com.apple.iBooks.cloudAssetType
com.apple.iBooks.libraryAssetType
com.apple.iBooks.isSupplementalContent
ubiquityManager-ivarQueue
BDSUbiquityManager-observerQueue
BDSUbiquityManager-processMetadataQueryQueue
B32@?0@"NSURL"8Q16^B24
icloud
currentStreak
longestStreak
today
readingHistory
<%@: %p currentStreak:%ld, longestStreak:%@, today:%@, readingHistory:%@>
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
CFBundleShortVersionString
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
XCTestConfigurationFilePath
BDSUnitTest
BDSBookWidgetDataUpdater MOC
BookWidgetDataUpdaterResume
BookWidgetDataUpdaterMonitorBookWidgetInfo
readingNowDetail.lastEngagedDate
title
readingNowDetail.isTrackedAsRecent == YES and readingNowDetail.lastEngagedDate >= %@
%K == NO OR %K == NULL
isExplicit
%K in %@
assetID
readingProgress
BookWidgetDataUpdaterFRC
Library/Application Support/bookdatastored/
/currentWidgetData.plist
BookWidgetDataUpdaterExplicitChange
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
BDSSyncUserDefaults
@"NSDictionary"8@?0
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentityExists
<%@=%p %@>
AssetZone
CollectionZone
ReadingStatistics
GlobalMetadata
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
BCCloudKit-BookDataStoreService
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
v24@?0q8@"NSError"16
v12@?0B8
_coalescedAttachment in BCCloudKitController
v16@?0@"NSString"8
v16@?0B8B12
v24@?0@"CKAccountInfo"8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
Account changed
hasUpdatedSubscription
serverChangeToken
containerIdentifier
userRecordID
recordIDSalt
salt
saltEncrypted
<%@: %p recordZone:%@>
com.apple.iBooks.CloudKitDatabaseController
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
cloudData
attachToZone
v32@?0@"NSString"8Q16^B24
%@.%@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
No Books Record Salt
Nil weak self after save record %@
Unable to generate random salt %@
No Books Salt
Nil weak self after fetch salt record %@
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
Unreadable keychain - cannot fetch record zones
Account temporarily unavailable - cannot fetch record zones
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
BDSErrorDomain
BDSCloudKitClientError
stateInfo
readingGoalsEnabled
<%@: %p stateInfo:%@, readingGoalsEnabled:%d>
BCSaltVersionIdentifier
BKUbiquitousLastAppVersion
BKUbiquitousFinishedOptInFlow
BDSTCCAccessChangedNotification
v44@?0@"NSSet"8@"NSSet"16@"BCMutableCloudSyncVersions"24@"NSError"32B40
updateBitrateForItemWithAdamID
BDSService has no jalisco client
endDate
length
{endDate:%@, length:%ld}
com.apple.iBooks.CloudKitTransaction.
_coalescedNotification in %@
BCCloudKitTransaction-
pageProgressionDirection
coverURL
libraryContentAssetType
[%@ '%@' %@ %@ (%.0f%%)%@]
 missing coverURL
assetDetail
isFinished
notFinished
taste
tasteSyncedToStore
dateFinished
lastOpenDate
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
the same
newer
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
SecureUserDataZone
com.apple.iBooks.SecureCloudKitController
com.apple.iBooks.secureData
BCCloudKit-BookDataStoreServiceSecure
BCPrivateDatabaseSecure
com.apple.iBooks.BCCloudKitSecure
com.apple.iBooks.CloudKitTransactionManager
BDSBookWidgetInfoMO
assetID == %@
totalDuration
booksFinishedGoal
<%@: %p booksFinishedGoal:%@, streakDayGoal:%@>
BCCloudKitSyncToCKTransaction-
date
{%@: %@}
BCCloudKitDataChangedTransaction-
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
iBooks
BCCloudKitFetchChangesTransaction-
localRecordID
localRecordIDEncrypted
systemFields
com.apple.iBooks.BooksWidget
BooksWidget
bookdatastored
BDSWidgetCenter Timeline Reload
com.apple.bookdatastored.BDSWidgetCenterManager.reloadWidgetTimelines
BCCloudData-BookDataStoreService
BCCloudAsset-BookDataStoreService
creating directory for store
deleting directory for store
[MIGRATE] migrate legacy store
[MIGRATE] destroy legacy store
removing read-only cloud data source persistent store
adding cloud data source persistent store
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
saltedHashedID IN %@
deletedFlag == NO
saltedHashedID
v32@?0@"NSArray"8{_NSRange=QQ}16
syncGeneration >= 1
%@-%@
v32@?0@"CKRecord"8Q16^B24
com.apple.iBooks.CloudDataSyncManager
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
Unsynced keychain - cannot modify records
BDSNBPinningManager notify queue
B16@?0@"<BCReadingNowDetail>"8
v32@?0@"NSSet"8@"BCMutableCloudSyncVersions"16@"NSError"24
BCServerChangeToken
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
momd
BCCloudSecureUserDataManagerChanged
BCCloudSecureUserDataManagerFetchedRecordsChanged
BCCloudSecureUserData
BCSecureUserDatum
key = %@
key IN %@
key = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"BCMutableSecureUserDatum"8@"NSError"16
BCAssetDetail
assetID = %@
assetID IN %@
assetID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
tasteSyncedToStore != NULL AND tasteSyncedToStore == %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
isFinished == YES AND (dateFinished >= %@ AND dateFinished < %@)
@16@?0@"<BCCloudData>"8
isFinished == YES AND dateFinished != NULL
com.apple.aps.bookdatastored
com.apple.icloud-container.com.apple.iBooks
BookDataStore.ConnectionDate
bookdatastored Notification Queue
v24@?0@"NSString"8@"NSError"16
readingNowDetail
isTrackedAsRecent
lastEngagedDate
cloudAssetType
v32@?0@"<NSCopying>"8@?<@@?@@@>16^B24
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@ , cloudAssetType:%@
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@, cloudAssetType: %@
booksFinishedUserDefaultsKey
streakDatUserDefaultsKey
readingHistoryDataHasBeenMovedDefaultsKey
BCCloudData-AppMigration
ReadingHistoryModelContext-AppMigration
<%@ readingHistoryFileURL=%@ readingHistoryCRDTContextFileURL=%@ booksFinishedUserDefaultsKey=%@ streakDayUserDefaultsKey=%@>
BCReadingNowDetail
assetID IN %@ and readingNowDetail == nil
@32@?0@8@16@24
WidgetInfoRelationshipUpdater
isTrackedAsRecent == YES
B16@?0@"<BCCloudData>"8
NOT (assetID IN %@)
(%K == NULL OR %K == %@)
starRating
reviewTitle
reviewBody
assetReview
userID
assetReviewID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.notifyd.matching
loaded
lastSource
modelReadingDay
modelLongestStreak
remoteModelReadingDay
remoteModelLongestStreak
<%@: %p loaded:%ld, lastSource:%ld, modelReadingDay:%@, modelLongestStreak:%@, remoteModelReadingDay:%@, remoteModelLongestStreak:%@>
BCAssetReview
assetReviewID = %@
assetReviewID IN %@
assetReviewID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetReviewID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
userID == %@
(deletedFlag == NULL OR deletedFlag == NO) AND userID == %@
SecureUserData
value
key: %@, value: %@
v16@?0@"NSSet"8
%K == %@
v16@?0@"NSArray"8
BookWidgetInfoManagerUbiquityInitialGather
BookWidgetInfoManagerUbiquityAddedItem
BookWidgetInfoManagerUbiquityUpdatedItem
BookWidgetInfoManagerUbiquityRemovedItem
BookWidgetInfoManagerMediaLibraryInitialGather
BookWidgetInfoManagerMediaLibraryAddedItem
BookWidgetInfoManagerMediaLibraryUpdatedItem
BookWidgetInfoManagerMediaLibraryRemovedItem
storeItem
storeID
storeID: %@, 
SideloadedLocal
SideloadedUbiquity
StoreEbook
StoreAudiobook
AssetTypeAudiobook
AssetTypeEbook
AssetTypePDF
LibraryContentAssetTypeUnknown
epub
ibooks
adts
aiff
aifc
BCStoreItem
storeID = %@
storeID IN %@
storeID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
%@ %@
location
appVersion
assetVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
readingTime
goal
isStreakDay
{readingTime:%ld, goal:%ld, isStreakDay:%d}
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
-[BCProtoAnnotation writeTo:]
BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
NBAssetDetailSyncVersions
dataStoreFetch
v16@?0@"NSNotification"8
v16@?0@"BCCloudSyncVersions"8
com.apple.tcc.access.changed
v12@?0i8
com.apple.iBooks.BDSService.private
application-identifier
com.apple.application-identifier
<%@:%p assetID=%@ title=%@ cloudAssetType=%@ lastEngagedDate=%@ isTrackedAsRecent=%d coverURL=%@ isExplicit=%@ pageProgressionDirection=%@ libraryContentAssetType=%@ duration=%@>
BDSMediaLibraryManager.SyncValidity
BDSMediaLibraryManager.SyncAnchor
<%@(%p) assetID='%@' title='%@' coverURL='%@' libraryAssetType='%@' cloudAssetType='%@' duration='%@'
BDSMediaLibraryManager-accessQueue
BDSMediaLibraryManager-observerQueue
v24@?0@"_MPMediaLibraryEntityChange"8^B16
sha1-%@
pid-%@
<%@:%p zoneName=%@ zoneDataManager=%@>
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
BCCollectionDetail
collectionID = %@
collectionID IN %@
collectionID
collectionID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
BCCollectionMember
collectionMemberID = %@
collectionMemberID IN %@
collectionMemberID
collectionMemberID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionMemberID BEGINSWITH[cd] %@ AND (deletedFlag == NULL OR deletedFlag == NO)
sortOrder
collectionDescription
hidden
sortMode
collectionDetail
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
data
collectionMember
collectionMemberID: %@, sortOrder:%d modificationDate:%@
v24@?0@"BCMutableCollectionMember"8@"NSError"16
v20@?0i8@"NSError"12
BDSNotificationForwarderSignificantTimeChangeNotification
SignificantTimeChangeNotification
CRDTModelSyncMapper unable to create CKAsset local cache at %@ error=%@
com.apple.iBooks.ReadingHistoryDataStore.model
com.apple.iBooks.ReadingHistoryDataStore.lastModelChange
com.apple.iBooks.BookDataStore
com.apple.iBooks.CRDTModelSyncManager.model
com.apple.iBooks.CRDTModelSyncManager.callback
com.apple.iBooks.CRDTModelSyncManager.observable
com.apple.bookdatastored.ReadingHistoryService.accessQueue
com.apple.bookdatastored.ReadingHistoryService.modelReady
com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersionTransaction
com.apple.iBooks.Observable.access
com.apple.iBooks.Observable.call
com.apple.iBooks.ObservableTransaction
com.apple.iBooks.CRDTModelFileSyncManager.model
com.apple.iBooks.CRDTModelFileSyncManager.observable
CRDTModelFileSync.
_TtC14bookdatastored19CRDTModelSyncMapper
CRDTModelSyncMapper unable to save protoData at %@ error=%@
CRDTModelSyncMapper: could not produce asset filename due to bad data
CRDTModelSyncMapper: error mapping CKRecord into BCMutableCloudData
CRDTModelSyncManagerAssetCache
v16@0:8
modificationDate
T@"NSDate",N,R
editGeneration
Tq,N,R
syncGeneration
T@"CKRecord",N,R
ckSystemFields
T@"NSData",N,R
privacyDelegate
T@"<BCCloudDataPrivacyDelegate>",N,W
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
@"NSString"16@0:8
BCCloudDataMapper
@"BCMutableCloudData"24@0:8@"CKRecord"16
@"CKRecord"24@0:8@"BCMutableCloudData"16
BDSReadingHistoryViewStateChangeHandler
currentViewStateInfo
T@"BDSReadingHistoryStateInfo",N,R
@"BDSReadingHistoryStateInfo"16@0:8
v24@0:8@"BDSReadingHistoryStateInfo"16
OS_os_transaction
CKRecordValue
NSObject
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
ReadingHistoryDataStore: Handle significant date change %@
ReadingHistory.LastStreakDate
ReadingHistory.CurrentStreak
_TtC14bookdatastored23ReadingHistoryDataStore
modelProvider
currentUserDefaults
currentDate
streakDayGoal
queue
clearOnInitialLoad
_state
lastModelChange
lastModelChangeObservableTransaction
Observer with oid=%@ is gone
Update reason: %@ - %@; loaded: %@, lastSource: %@
 New streak record: %d day streak on %@
Recalc: yesterday is already lastStreakDate, skipping.
Recalc: extending a day, lastStreakDate=%{public}@ currentStreak=%d
Recalc: today is no longer a streak day, clearing current streak
Recalc: today is no longer a streak day, reverting to yesterday
Recalc: today is already lastStreakDate, skipping.
Recalc: yesterday and today are both not streak day.
Recalc: lastStreakDate=%{public}@ currentStreak=%d
Merged with an object with multiple changed dates, recalc triggered.
Merged with an object that only changed today: %{public}@
handleGoalsStateEvent
 Removing streak record: %d day streak on %@
Error serializing readingHistoryModel: %{public}@
handleSignificantDateChange
ReadingHistoryDataStore: Handle significant date change - model is not ready, skipping 
ReadingGoalsService changeBooksFinishedGoal %ld
ReadingGoalsService changeDailyGoal %lf
ReadingGoalsService clearData
ReadingGoalsService clearLocalCachedData
ReadingGoalsService state
BDSReadingGoalsService
v32@0:8q16@?<v@?B>24
v32@0:8d16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"BDSReadingGoalsStateInfo"B>16
goalsDataStore
goalsController
ReadingGoalsService onRemoteChange
com.apple.BDSService.ReadingGoalsService.onRemoteChange
v24@?0@"<BCCloudData>"8@"NSError"16
v20@?0B8@"NSError"12
CRDTModelSyncManager dissociateCloudDataFromSyncWithCompletion for: %s
v24@0:8@?16
v32@0:8@16@?24
v40@0:8@16@24@?32
@16@0:8
logger
cloudDataSource
cloudSyncManager
localDataManager
tokenController
cloudKitController
saltVersionIdentifierManager
crdtContext
$__lazy_storage_$_conflictResolvers
_modelState
modelQueue
callbackQueue
observableTransaction
enableCloudSync
com.apple.ibooks.CRDTModelSyncManager.q_sync
CRDTModelSyncManager q_sync: couldn't serialize model to sync: %s
v24@?0B8B12@"NSError"16
CRDTModelSyncManager q_sync: sending merged=%s as %ld bytes to BCCloudDataManager
CRDTModelSyncManager q_sync: incoming=%s and existing=%s
CRDTModelSyncManager q_sync: BCCloudDataManager is done: success=%ld hasChanges=%ld error=%s
CloudSyncConflictResolver: self=%s key=%s is not equal to recordType=%s
CloudSyncConflictResolver: no existing data
CloudSyncConflictResolver: failed to deserialize either existingModel from %s
CloudSyncConflictResolver: failed to deserialize either incomingModel from %s
CloudSyncConflictResolver: no delta on existing=%s from incoming=%s
CloudSyncConflictResolver: merged=%s
CloudSyncConflictResolver: merging existing=%s with incoming=%s
CloudSyncConflictResolver: no incoming data
bookdatastored.CRDTModelSyncManager
init()
CRDTModelSyncManager failedRecordIDs: failed records %s
v28@?0B8@"NSArray"12@"NSError"20
CRDTModelSyncManager resolveConflictsFor: resolving conflicts for record: %{public}@ id: %{public}@ created: %{public}s modified: %{public}s modifiedByDevice:%{private}s
CRDTModelSyncManager resolveConflictsFor: received changes for more than 1 record. This shouldn't be possible
CRDTModelSyncManager resolveConflictsFor: couldn't deserialize resolved data
CRDTModelSyncManager resolveConflictsFor: incoming=%s has no delta from existing=%s
CRDTModelSyncManager resolveConflictsFor: resolved model=%s
CRDTModelSyncManager resolveConflictsFor: merging resolved model: incoming=%s vs existing=%s with delta=%s
CRDTModelSyncManager updateSyncGenerationFromCloudData: updating sync generation for %s
CRDTModelSyncManager removeCloudDataFor: asked to remove cloud data: %s
CRDTModelSyncManager startSyncToCKWithCompletion: starting syncing to CK
CRDTModelSyncManager failed to dissociate data for: %s %@
CRDTModelSyncManager dissociateCloudDataFromSyncWithCompletion for: %s finish with success:%{bool}d error: %@
CRDTModelSyncManager Init: no existing data
CRDTModelSyncManager Init: loaded existing data with the wrong type
CRDTModelSyncManager Init: couldn't deserialize existing data
CRDTModelSyncManager Init: loaded stored model=%s, merging into existing=%s
CRDTModelSyncManager Init: couldn't load existing data: %s
CRDTModelSyncManager updateWithSyncEnabled: disabled sync to CK
CRDTModelSyncManager updateWithSyncEnabled: enabled sync to CK
CRDTModelSync
BCCloudDataSyncManagerDelegate
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
BDSCloudKitSupportZoneRecovery
v24@0:8@?<v@?B@"NSError">16
q16@0:8
#16@0:8
@24@0:8:16
superclass
description
BDSCloudKitSupportSignOutDissociate
CRDTModelContextStore [bookdatastored] storeDirectory = %@
CRDTModelContextStore unable to create CRContext at %@ error=%@
CRDTModelContext
ReadingHistory.UserDefaults.SessionStartOffset
hasMigratedReadingHistoryData
Migration: Already done in daemon. Updated timestamp to now.
Migration: skipping reading history migration in daemon. last migrated:%s
ReadingHistoryService clearData
ReadingGoalsService clearDefaultsCachedData
ReadingHistoryService clearToday
Failed to deserialize sync version info
ReadingHistoryService handleSyncFileChange: %@
ReadingHistoryService increment (date: %@, by: %ld)
ReadingHistoryService readingHistoryStateInfo (range: (%@ -> %@), currentTime: %@)
ReadingHistoryService readingHistoryModelSnapshotInfo ( currentTime: %@)
ReadingHistoryService setEnableCloudSync: %d
ReadingHistoryService bookWidgetReadingHistoryStateInfo
ReadingHistoryService bookWidgetReadingHistoryStateInfo -- missing handler
ReadingHistoryService DONE bookWidgetReadingHistoryStateInfo: %@
bookdatastored.ReadingHistoryService
ReadingHistoryService mergeMovedReadingHistoryData
ReadingHistoryModel
waitForlocalModelSyncVersionTimeout
v16@?0@?<v@?>8
BDSReadingHistoryService
@32@0:8@16@24
v40@0:8@16q24@?32
v48@0:8@16@24@32@?40
v20@0:8B16
v24@0:8@16
v24@0:8@?<v@?@"BDSReadingHistoryStateInfo"B>16
goalsService
historyDefaults
historyDataStore
historyCloudSyncManager
historyCloudSyncController
isModelReady
accessQueue
modelReadyQueue
viewStateChangeHandler
localSyncManager
localModelSyncVersionTransaction
localModelSyncVersionTransactionQueue
waitForlocalModelSyncVersion
waitForlocalModelSyncVersionTimeoutBlock
ReadingHistoryService handleSignificantDateChange
com.apple.bookdatastored.ReadingHistoryService.handleSignificantDateChange
com.apple.bookdatastored.CRDTModelCloudSyncController.handleCloudModelEvent
handleCloudModelEvent - model not ready
handleCloudModelEvent - sync to local
handleLocalModelSyncVersionChange
checkLocalModelSyncVersion(%{bool}d): no delta; existing=%s; incoming=%s
com.apple.bookdatastored.CRDTModelCloudSyncController.localModelSyncVersion
checkLocalModelSyncVersion(%{bool}d): has delta; existing=%s; incoming=%s
com.apple.bookdatastored.CRDTModelCloudSyncController.handleLocalModelEvent
handleLocalModelEvent - model not ready
handleLocalModelEvent - sync to cloud
handleLocalModelSyncVersionWaitTimeout: timed out
Migration: Merging reading history data in daemon
v16@?0@"NSURL"8
Migration done in daemon %s
Migration: Not needed in daemon. Updated timestamp to now.
Migration: Not needed in daemon. Last migrated at:%s
Migration: Starting migration
com.apple.bookdatastored.reading-history-migration
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Migration: Cleaning up
Error cleaning up after migration, %{public}@
Daemon migration reading history %{bool}d
Error loading persistent store: %{public}@
CRDTModelSyncEntity
Migration: Fetching
Failed to fetch CRDTModelSyncEntity of type ReadingHistoryModel with error: %{public}@
Failed to retreive protoData from CRDTModelSyncEntity
Migration: Creating ReadingHistoryModel from stored data
Failed to create ReadingHistoryModel with error: %{public}@
Failed to sync readingHistoryModel with error: %{public}@
readingHistoryModel was identical so nothing for us to do
Migration: Model loaded! let's merge: %s
Results for fetch CRDTModelSyncEntity with type ReadingHistoryModel were empty
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
ReadingHistoryService DONE readingHistoryModelSnapshotInfo (currentTime: %@), stateInfo: %@
ReadingHistoryService DONE readingHistoryStateInfo (range: (%@ -> %@), currentTime: %@), stateInfo: %@
ReadingHistoryService DONE increment (date: %@, by: %ld)
ReadingHistoryService DONE handleSyncFileChange: %@
ReadingHistoryService DONE clearToday
ReadingHistoryService DONE clearDefaultsCachedData
ReadingHistoryService DONE clearData
CRDTModelFileSync.ReadingHistoryModel
CRDTModelFileSync
ReadingHistoryModel-SyncInfo
CRDTModelFileSyncManager unable to create directory at %@ error=%@
CRDTModelFileSyncManager Init: modelFileURL: %s
q_handle, no delta
CRDTModelFileSyncManager q_handle -- no delta, incoming=%s and existing=%s
CRDTModelFileSyncManager q_handle -- incoming=%s and existing=%s
CRDTModelFileSyncManager sink: finished
CRDTModelFileSyncManager sink: error: %s
CRDTModelFileSyncContext
ReadingHistoryModel-SyncInfoContext.db
CRDTModelFileSyncContextStore storeDirectory = %@
CRDTModelFileSyncContextStore unable to create CRContext at %@ error=%@
migratedReadingHistoryDataTimestamp
ReadingHistoryService modelDidChange
com.apple.BDSService.ReadingHistoryService.modelDidChange
ReadingHistoryService model ready
ReadingHistoryService updateViewStateIfNeeded -- no handler configured
ReadingHistoryService updateViewStateIfNeeded: state: %@
ReadingHistoryService updateViewStateIfNeeded: model not ready yet
BCCloudData
B16@0:8
TB,N,R
v8@?0
_TtC14bookdatastored22ReadingGoalsController
dataSource
_stateChange
onRemoteChange
ReadingGoalsController - received onRemoteChange
CRDTModelSyncEntity configure(from:) wrong class passed in
CRDTModelSyncEntity incompatible type %s passed in. Expecting %s
CRDTModelSyncEntity Merging: merged data (%ld bytes)
CRDTModelSyncEntity Merging: Unknown error when merging %s %s, error=%s
CRDTModelSyncEntity Merging: Identical properties from cloudData: %s %s
CRDTModelSyncEntity Merging: Could not resolve from cloudData: %s %s
CRDTModelSyncEntity Merging: Adopted properties from cloudData: %s %s
CRDTModelSyncEntity Merging: existing data (%ld bytes) with incoming data (%ld bytes)
CRDTModelSyncEntity %@ Resolving: Asset file URL was nil for record %@
CRDTModelSyncEntity Resolving: Unknown error when merging %s %s error=%s
CRDTModelSyncEntity Resolving: Identical properties from record: %s %s
CRDTModelSyncEntity Resolving: Could not resolve from record: %s %s
CRDTModelSyncEntity Resolving: Adopted properties from record: %s %s
_TtC14bookdatastored19CRDTModelSyncEntity
v32@0:8@16@24
B24@0:8@16
$__lazy_storage_$_logger
type
T@"NSString",N,D,C
protoData
T@"NSData",N,D,C
_TtC14bookdatastored13CRDTModelSync
@24@0:8@16
bookdatastored.CRDTModelSync
init(record:)
bookdatastored/CRDTModelSync.swift
init(coder:) has not been implemented
com.apple.iBooks
deletedFlag
@32@0:8:16@24
ReadingGoals.BooksFinished
ReadingGoals.StreakDay
Fake a remote change
ReadingGoalsDataStore migrate: { %@: %@ }
_TtC14bookdatastored21ReadingGoalsDataStore
localStore
syncStore
registered
Goals cloud error: Change notification had invalid user info
Goals cloud change with reason %d
Goals cloud account change
Goals cloud error: Quota exceeded
Goals cloud error: Change notification had no keys
Goals cloud error: Local dict for key %@ existed with no date
Goals cloud error: Remote dict for key %@ existed with no date
ReadingGoalsDataStore ERROR: No onRemoteChange handler registered
Goals init: Got { %@: %@ }
from to 
_TtC14bookdatastored16ObservationToken
invalidation
callQueue
observations
internalValue
_TtC14bookdatastored21ObservableTransaction
name
observableTransactionQueue
[Transaction]: Ended transaction %s
[Transaction]: Created transaction %s
delegate
_modelSyncVersion
coherenceSyncManager
cancellables
modelCapsule
com.apple.ibooks.CRDTModelFileSyncManager.q_sync
CRDTModelFileSyncManager q_sync -- no delta: isRemote=%{bool}d, incoming=%s and existing=%s
CRDTModelFileSyncManager q_sync: couldn't serialize model to sync: %s
CRDTModelFileSyncManager q_sync: isRemote=%{bool}d, incoming=%s and existing=%s
CRDTModelFileSyncManager q_sync: finished
CRDTModelFileSyncManager: Model did sync %s
CRDTModelFileSyncManager q_updateState (%s) -- newState=%s
<ReadingHistoryModel empty>
<ReadingHistoryModel last-month=
<ReadingHistoryModel #months=
Streak Records=[
lastDayStreakOrdinal
lastDayStreakOrdinal=
zoneID
URLForUbiquityContainerIdentifier:
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
UTF8String
_initWithSuiteName:container:
_setEnabledTopics:
aa_altDSID
absoluteString
accountInfoWithCompletionHandler:
accountStatusWithCompletionHandler:
accountType
addChild:withPendingUnitCount:
addEntriesFromDictionary:
addFilterPredicate:
addLibraryFilterPredicate:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addOperation:
addPersistentStoreWithType:configuration:URL:options:error:
addPointer:
allKeys
allObjects
allValues
allocWithZone:
anchor
andPredicateWithSubpredicates:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
audiobookStoreIsAvailable:
audiobooksQuery
base64EncodedStringWithOptions:
beginGeneratingLibraryChangeNotifications
bitrateForItem:
bl_setNonNilValue:value:
boolValue
bu_booksGroupContainerURL
bu_md5UpperCase
bu_prettyDescription
bu_sha1
bytes
cStringUsingEncoding:
cancel
caseInsensitiveCompare:
changeType
changedObjectID
changes
checkResourceIsReachableAndReturnError:
code
collections
compare:
component:fromDate:
componentsJoinedByString:
componentsSeparatedByString:
containerWithIdentifier:
containsObject:
containsString:
contentsOfDirectoryAtPath:error:
coordinateWritingItemAtURL:options:error:byAccessor:
copy
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
currentCalendar
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
dateByAddingUnit:value:toDate:options:
dateFromComponents:
decodeBoolForKey:
decodeDoubleForKey:
decodeInt32ForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultMediaLibrary
deleteObject:
deletionType
destroyPersistentStoreAtURL:withType:options:error:
dictionary
dictionaryWithCapacity:
dictionaryWithContentsOfURL:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
disableUpdates
domain
doubleValue
effectiveBoolValueForSetting:
enableUpdates
encodeBool:forKey:
encodeDouble:forKey:
encodeInt32:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeSystemFieldsWithCoder:
encodedData
endGeneratingLibraryChangeNotifications
entity
entityForName:inManagedObjectContext:
enumerateEntityChangesAfterSyncAnchor:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateResultsUsingBlock:
environment
errorWithDomain:code:userInfo:
execute:
executeFetchRequest:error:
executeRequest:error:
existingObjectWithID:error:
fetchHistoryAfterToken:
fetchItemsForStoreIDs:
fetchMixedAssetsWithBookIds:audiobookIds:relationships:views:additionalParameters:batchSize:completionHandler:
fetchRecordWithID:completionHandler:
fetchRequestWithEntityName:
fetchResourcesWithAdamIDs:relationships:views:additionalParameters:batchSize:completionHandler:
fetchUserRecordIDWithCompletionHandler:
fetchedObjects
fileExistsAtPath:
fileURLWithPath:
fileURLWithPath:isDirectory:
finishDecoding
finishEncoding
firstObject
floatValue
hasBeenPlayed
hasChanges
hashTableWithOptions:
indexesOfObjectsPassingTest:
initCanUseCellularData:powerRequired:bundleID:
initFileURLWithPath:isDirectory:
initForReadingFromData:error:
initRequiringSecureCoding:
initWithArray:copyItems:
initWithCString:encoding:
initWithCapacity:
initWithConcurrencyType:
initWithContext:
initWithEnvironmentName:namedDelegatePort:queue:
initWithExtensionBundleIdentifier:kind:
initWithFetchRequest:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
initWithKey:ascending:
initWithMachServiceName:
initWithName:reason:userInfo:
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
initWithObjects:
initWithOptions:
initWithPreviousServerChangeToken:
initWithRecordIDs:
initWithRecordName:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZoneIDs:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
initWithRecordsToSave:recordIDsToDelete:
initWithSubscriptionID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
initWithTitle:block:
initWithZoneID:
initWithZoneName:ownerName:
insertNewObjectForEntityForName:inManagedObjectContext:
intValue
integerValue
interfaceWithProtocol:
intersectSet:
intersectsSet:
invalidate
isDeleted
isEqualToArray:
isEqualToDate:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isExplicitContentAllowed
isExplicitItem
isPrimaryAccountManagedAppleID
isReadOnly
isUserSignedInToiCloud
items
lastObject
lastPathComponent
lastPlayedDate
listUpdater:updateDidCompleteWithError:wasCancelled:
localizedDescription
localizedFailureReason
localizedRecoveryOptions
localizedRecoverySuggestion
longLongValue
mainBundle
mainRunLoop
mediaType
methodForSelector:
minusSet:
notificationFromRemoteNotificationDictionary:
null
numberFromString:
numberWithBool:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLong:
numberWithShort:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
operationID
operationQueue
path
pathForResource:ofType:
performBlock:
performFetch:
persistentID
persistentStores
pointerAtIndex:
postNotificationName:object:userInfo:
predicateWithFormat:
predicateWithValue:
predicateWithValue:forProperty:
prewarm
primaryAppleAccount
privateCloudDatabase
processIdentifier
processInfo
processPendingChanges
progressWithTotalUnitCount:
rangeOfString:
recordChangeTag
refreshObject:mergeChanges:
reloadTimelineWithReason:
removeAllObjects
removeItemAtPath:error:
removeObject:
removeObjectsAtIndexes:
removeObjectsInArray:
removePersistentStore:error:
removePointerAtIndex:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
representativeItem
resetSystemTimeZone
result
saveRecord:completionHandler:
serverPreferredPushEnvironmentWithCompletionHandler:
setAutomaticallyMergesChangesFromParent:
setAutomaticallyRetryNetworkFailures:
setByAddingObjectsFromArray:
setCancellationHandler:
setChangeTokenUpdatedBlock:
setCkSystemFields:
setClasses:forSelector:argumentIndex:ofReply:
setCompletedUnitCount:
setDiscretionaryNetworkBehavior:
setEntity:
setExportedInterface:
setExportedObject:
setFetchAllChanges:
setFetchBatchSize:
setFetchDatabaseChangesCompletionBlock:
setFetchLimit:
setFetchRecordZoneChangesCompletionBlock:
setFetchRecordZonesCompletionBlock:
setFetchRecordsCompletionBlock:
setHasBeenPlayed:
setIgnoreSystemFilterPredicates:
setIncludesPropertyValues:
setKey:
setLastPlayedDate:
setLocalSaltVersionIdentifier:
setMaxConcurrentOperationCount:
setMergePolicy:
setModifyRecordZonesCompletionBlock:
setModifyRecordsCompletionBlock:
setModifySubscriptionsCompletionBlock:
setMonth:
setNotificationInfo:
setOperationQueue:
setOutputFormat:
setParentContext:
setPreviousServerChangeToken:
setPropertiesToFetch:
setQualityOfService:
setRawHistoryToken:
setReadingNowDetail:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRelationshipKeyPathsForPrefetching:
setResultType:
setReturnsDistinctResults:
setReturnsObjectsAsFaults:
setRunLoopForNotifications:
setSaltedHashedID:
setSavePolicy:
setSearchScopes:
setServerSaltVersionIdentifier:
setShouldSendContentAvailable:
setSortDescriptors:
setSourceApplicationBundleIdentifier:
setTimeZone:
setUndoManager:
setValue:forProperty:withCompletionBlock:
setWithArray:
setWithObject:
setWithObjects:
setWithSet:
setYear:
sharedConnection
sortDescriptorWithKey:ascending:
startOfDayForDate:
startQuery
stopQuery
stringByAppendingPathComponent:
stringByAppendingPathExtension:
stringByAppendingString:
stringForKey:
stringValue
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
subarrayWithRange:
substringFromIndex:
substringToIndex:
supportsDeviceToDeviceEncryption
systemTimeZone
timeIntervalSinceReferenceDate
tombstone
unarchivedArrayOfObjectsOfClass:fromData:error:
unarchivedObjectOfClass:fromData:error:
unsignedLongLongValue
userInfo
valueForAttribute:
valueForEntitlement:
valueForProperty:
weakObjectsHashTable
writeToURL:atomically:
writeToURL:options:error:
URLByAppendingPathComponent:isDirectory:
init
dealloc
daemon
serviceDelegate:didAcceptConnection:
start
lrq_setupBeforeListenersWithCompletion:
lrq_setupListeners
sq_finishedStartingUp
serviceDelegate
setServiceDelegate:
listenersReadyQueue
setListenersReadyQueue:
startupQueue
setStartupQueue:
serviceListener
setServiceListener:
syncUserDefaultsStateHandler
setSyncUserDefaultsStateHandler:
notificationConnection
setNotificationConnection:
sigterm_source
setSigterm_source:
.cxx_destruct
_serviceDelegate
_listenersReadyQueue
_startupQueue
_serviceListener
_syncUserDefaultsStateHandler
_notificationConnection
_sigterm_source
T@"BDSServiceDelegate",&,N,V_serviceDelegate
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
T@"NSXPCListener",&,N,V_serviceListener
T@"BUOSStateHandler",&,N,V_syncUserDefaultsStateHandler
T@"BDSNotificationConnection",&,N,V_notificationConnection
T@"NSObject<OS_dispatch_source>",&,N,V_sigterm_source
handleReadingHistoryViewStateChange:
currentViewStateInfo
T@"BDSReadingHistoryStateInfo",R,N
initWithWidgetCenterManager:
lastState
_processViewStateChange:
_dataURL
widgetCenterManager
setWidgetCenterManager:
setLastState:
_accessLock
_saveQueue
_lastState
_widgetCenterManager
T@"BDSWidgetCenterManager",&,N,V_widgetCenterManager
T@"BDSBookWidgetReadingHistoryData",&,N,V_lastState
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
copyWithZone:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
bds_arrayByRemovingNSNulls
bds_traverseBatchesOfSize:block:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:
bds_subDictionaryWithKeys:
p_ubiquityIdentityDidChange:
ubiquityStatusChangedToAvailableWithNewIdentity:oldIdentity:
ubiquityDocumentsURLChanged:
updateWithOptedIn:
refreshUbiquityTokensAndUpdateWithOptedIn:
userIdentityPreviouslyRecordedOnThisDevice
ubiquityIdentityToken
dq_isCloudKitEnabled
dq_isICloudDriveEnabled
isCloudKitEnabled
isICloudDriveEnabled
setOptedIn:
addObserver:
removeObserver:
registerCoordinatingObserver:
restartObserving
dq_archiveCurrentUbiquityIdentityToken
_notifyObserversWithCurrentToken:lastToken:
dq_refreshUbiquityAvailabilityStatus
containerURL
documentsURL
description
optedIn
lastArchivedUbiquityIdentityToken
setLastArchivedUbiquityIdentityToken:
lastArchivedNonNilUbiquityIdentityToken
setLastArchivedNonNilUbiquityIdentityToken:
currentUbiquityIdentityToken
setCurrentUbiquityIdentityToken:
containerIdentifier
setContainerIdentifier:
setContainerURL:
setDocumentsURL:
archivedCloudDriveOptedIn
setArchivedCloudDriveOptedIn:
optedInKnown
setOptedInKnown:
lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
setLastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch:
dispatchQueue
setDispatchQueue:
containerQueue
setContainerQueue:
notifyQueue
setNotifyQueue:
observers
setObservers:
coordinatingObserver
setCoordinatingObserver:
_optedIn
_archivedCloudDriveOptedIn
_optedInKnown
_lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
_lastArchivedUbiquityIdentityToken
_lastArchivedNonNilUbiquityIdentityToken
_currentUbiquityIdentityToken
_containerIdentifier
_containerURL
_documentsURL
_dispatchQueue
_containerQueue
_notifyQueue
_observers
_coordinatingObserver
T@"BDSICloudIdentityToken",C,N,V_lastArchivedUbiquityIdentityToken
T@"BDSICloudIdentityToken",C,N,V_lastArchivedNonNilUbiquityIdentityToken
T@"BDSICloudIdentityToken",C,N,V_currentUbiquityIdentityToken
T@"NSString",C,N,V_containerIdentifier
T@"NSURL",C,N,V_containerURL
T@"NSURL",C,N,V_documentsURL
TB,N,V_archivedCloudDriveOptedIn
TB,N,V_optedIn
TB,N,V_optedInKnown
TB,N,V_lastArchivedNonNilUbiquityIdentityTokenWasNonNilAtColdLaunch
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"NSHashTable",&,N,V_observers
T@"<BDSUbiquityStatusChangeObserving>",W,N,V_coordinatingObserver
T@"BDSICloudIdentityToken",R,C,N
TB,R,N
setDifferentValue:forKey:klass:
setDifferentObject:forKey:
setDifferentString:forKey:
setDifferentNumber:forKey:
setDifferentDate:forKey:
propertiesForKeys:
reachabilityWithHostName:
reachabilityWithAddress:
reachabilityForInternetConnection
reachabilityForLocalWiFi
_updateIsOffline
isOffline
sharedReachabilityForInternetConnection
startNotifier
stopNotifier
localWiFiStatusForFlags:
networkStatusForFlags:
connectionRequired
currentReachabilityStatus
localWiFiRef
reachabilityRef
setUrl:
isLocal
setIsLocal:
isNotLocal
setIsNotLocal:
isUploading
setIsUploading:
isUploaded
setIsUploaded:
isDownloading
setIsDownloading:
downloadingPercent
setDownloadingPercent:
uploadingPercent
setUploadingPercent:
uploadingError
setUploadingError:
unresolvedConflict
setUnresolvedConflict:
contentChangedDate
setContentChangedDate:
contentCreationDate
setContentCreationDate:
contentFileSize
setContentFileSize:
_isLocal
_isNotLocal
_isUploading
_isUploaded
_isDownloading
_url
_downloadingPercent
_uploadingPercent
_uploadingError
_unresolvedConflict
_contentChangedDate
_contentCreationDate
_contentFileSize
T@"NSURL",C,N,V_url
TB,N,V_isLocal
TB,N,V_isNotLocal
TB,N,V_isUploading
TB,N,V_isUploaded
TB,N,V_isDownloading
T@"NSNumber",C,N,V_downloadingPercent
T@"NSNumber",C,N,V_uploadingPercent
T@"NSError",C,N,V_uploadingError
T@"NSNumber",C,N,V_unresolvedConflict
T@"NSDate",C,N,V_contentChangedDate
T@"NSDate",C,N,V_contentCreationDate
T@"NSNumber",C,N,V_contentFileSize
mq_queryDidStart:
mq_queryDidFinish:
mq_queryDidUpdate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithDelegate:ubquityStatusMonitor:directoriesSubpath:
restartQuery
tearDownQuery
identity
identityData:
containerURL:
documentsURL:
dataURL:
noSyncURL:
identityAndURLs:
evaluateBlockWhenLoaded:
mq_setupQuery:
mq_tearDownQuery
_identityData
_noSyncURL
q_createSubpathDirectories
_itemsForMetadataItems:
_replacementObjectForResultObject:
delegate
setDelegate:
directoriesSubpath
setDirectoriesSubpath:
ubiquityStatusMonitor
setUbiquityStatusMonitor:
queue
setQueue:
metadataQueryQueue
setMetadataQueryQueue:
query
setQuery:
setIdentity:
noSyncURL
setNoSyncURL:
postLoadBlocks
setPostLoadBlocks:
isLoaded
setLoaded:
_loaded
_delegate
_directoriesSubpath
_ubiquityStatusMonitor
_queue
_metadataQueryQueue
_query
_identity
_postLoadBlocks
T@"<BDSUbiquityDocumentsObserverDelegate>",W,N,V_delegate
T@"BDSUbiquityStatusMonitor",W,N,V_ubiquityStatusMonitor
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_metadataQueryQueue
T@"NSMetadataQuery",&,N,V_query
T@"BDSICloudIdentityToken",&,N,V_identity
T@"NSURL",&,N,V_containerURL
T@"NSURL",&,V_noSyncURL
T@"NSMutableArray",&,N,V_postLoadBlocks
loaded
TB,N,GisLoaded,V_loaded
T@"NSString",&,N,V_directoriesSubpath
countEntity:withPredicate:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
entity:withPredicate:
im_pushSafeAccessState
im_popSafeAccessState
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
batchDeleteEntity:matching:prefetchRelationships:
hasStoreInCommonWith:
bds_addObjectIfNotNil:
ubiquityDocumentsObserver:didLoadWithItems:
ubiquityDocumentsObserver:itemsDidBecomeAvailable:
ubiquityDocumentsObserver:itemsDidBecomeUnavailable:
ubiquityDocumentsObserver:itemsDidChange:
setEnableUbiquityObserving:
allAssetIDs
ubiquityMetadataForAssetID:
iq_setupUbiquityObservers
iq_teardownUbiquityObservers
mq_itemsDidBecomeAvailable:block:notify:
mq_batchOfItemsDidBecomeAvailable:block:notify:
mq_itemsDidBecomeUnavailable:block:notify:
mq_batchOfItemsDidBecomeUnAvailable:block:notify:
mq_itemsDidChange:block:notify:
mq_batchOfItemsDidChange:block:notify:
iq_updateCachesForItems:notify:
iq_clearCachesForURLs:notify:
iq_clearCachesForAssetIDs:notify:
_ubiquityMetadataForURL:
_buildUbiquityMetadataDict:
_fileExtensionForUrl:
_setValueInMutableDictionary:forKey:withValueForExtendedAttributeNamed:fromUrl:
_extendedAttributeNamed:iCloudSyncable:url:
observer
setObserver:
observerCallbackQueue
setObserverCallbackQueue:
ivarQueue
setIvarQueue:
processMetadataQueryQueue
setProcessMetadataQueryQueue:
ubiquityObservingEnabled
setUbiquityObservingEnabled:
iq_urlFromAssetID
setIq_urlFromAssetID:
ubiquityDocumentsObserver
setUbiquityDocumentsObserver:
_ubiquityObservingEnabled
_observer
_observerCallbackQueue
_ivarQueue
_processMetadataQueryQueue
_iq_urlFromAssetID
_ubiquityDocumentsObserver
T@"NSObject<OS_dispatch_queue>",&,N,V_ivarQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processMetadataQueryQueue
TB,N,V_ubiquityObservingEnabled
T@"NSMutableDictionary",&,N,V_iq_urlFromAssetID
T@"BDSUbiquityDocumentsObserver",&,N,V_ubiquityDocumentsObserver
T@"BDSUbiquityStatusMonitor",&,N,V_ubiquityStatusMonitor
T@"<BDSUbiquityManagerObserver>",W,N,V_observer
T@"NSObject<OS_dispatch_queue>",&,N,V_observerCallbackQueue
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithCurrentStreak:longestStreak:today:readingHistory:
currentStreak
setCurrentStreak:
longestStreak
setLongestStreak:
today
setToday:
readingHistory
setReadingHistory:
_currentStreak
_longestStreak
_today
_readingHistory
Tq,N,V_currentStreak
T@"BDSReadingHistoryStreakInfo",&,N,V_longestStreak
T@"BDSReadingHistoryDayInfo",&,N,V_today
T@"NSArray",&,N,V_readingHistory
bds_UUID
initWithTransactionName:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
logRecursively
appVersion
syncedPreferenceKeys
objectFromGroupPreferencesForKey:
T@"NSArray",R,N
isUnitTesting
setUnitTesting:
unitTesting
TB,GisUnitTesting
T@"NSURL",R
_moc_updateAndMonitorBookWidgetInfo
predicateToExcludeLibraryAssetsWithExplicitContent
widgetDataURL
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
restrictionsForBookStoreAllowedChanged:
restrictionsForExplicitContentAllowedChanged:
restrictionsForAccountModificationAllowedChanged:
T@"NSURL",R,N
initWithWidgetCenterManager:managedObjectContext:
_startObserving
_stopObserving
currentWidgetDatas
currentWidgetDatasByAssetID
setCurrentWidgetDatas:
setCurrentWidgetDatas:currentWidgetDatasByAssetID:
resume
_newWidgetInfoFetchRequest
isExplicitMaterialAllowed
_moc_updateWidgetDataFromWidgetInfo:
_widgetDatasHaveChanged
_readCurrentWidgetDatas
_saveCurrentWidgetDatas
_moc_updateWidgetDatas:fromAssetDetails:
_moc_updateAndMonitorProgressForWidgetDatas:
fetchedResultsController
setFetchedResultsController:
progressFetchedResultsController
setProgressFetchedResultsController:
_dataLock
_currentWidgetDatas
_currentWidgetDatasByAssetID
_moc
_fetchedResultsController
_progressFetchedResultsController
T@"NSManagedObjectContext",R,N,V_moc
T@"NSFetchedResultsController",&,N,V_fetchedResultsController
T@"NSFetchedResultsController",&,N,V_progressFetchedResultsController
T@"NSDictionary",R,C,N,V_currentWidgetDatasByAssetID
T@"BDSWidgetCenterManager",R,N,V_widgetCenterManager
T@"NSArray",R,C,N,V_currentWidgetDatas
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
plistContents
setPlistContents:
plistURL
setPlistURL:
currentToken
setCurrentToken:
trackLiverpool
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
T@"NSMutableDictionary",&,N,V_plistContents
T@"NSURL",&,N,V_plistURL
T@"BDSICloudIdentityToken",&,N,V_currentToken
TB,N,V_trackLiverpool
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentity
makeOSStateHandler
isICloudDriveSyncOptedIn
_isBundleIdentifierInArray:
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
_stateForLog
tokenForCurrentIdentityIfCloudKitEnabled
tokenForCurrentIdentityIfICloudDriveEnabled
initWithToken:
initFromArchive:
initWithCurrentIdentity
_hashFor:
token
setToken:
_token
T@"NSString",C,N,V_token
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",R,N
setQueueIdentifier:
setAppZones:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
_requiresDeviceToDeviceEncryption
_queueIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
p_accountChanged:
p_identityChanged:
sharedInstance
secureSharedInstance
registerForSecureNotifications
deleteCloudDataWithCompletion:
databaseFolderURLForConfiguration:
p_createDatabaseArchiveDirectoryForConfiguration:
p_privateDatabaseArchiveURLForConfiguration:
T@"BCCloudKitController",R
initWithConfiguration:
setEnableCloudSync:serviceMode:
p_updateAttachment
p_getNecessaryAccountInfoFromContainer:completion:
p_getAccountInfo
applicationDidBecomeActive
handleRemoteNotification:
transactionManager
setTransactionManager:
privateCloudDatabaseController
setPrivateCloudDatabaseController:
didChangeContainer
setDidChangeContainer:
setConfiguration:
container
setContainer:
accessQueue
setAccessQueue:
gettingAccountInfo
setGettingAccountInfo:
enableCloudSync
setEnableCloudSync:
serviceMode
setServiceMode:
coalescedAttachment
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_enableCloudSync
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_container
_accessQueue
_coalescedAttachment
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
T@"CKContainer",&,N,V_container
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
TB,N,V_gettingAccountInfo
TB,N,V_enableCloudSync
TB,N,V_serviceMode
TB,N,V_didChangeContainer
T@"<BCContainerConfiguration>",&,N,V_configuration
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
initWithRecordZone:
recordZone
_recordZone
T@"CKRecordZone",R,N,V_recordZone
p_internetReachabilityChanged:
encodeRecordSystemFields:
decodeRecordFromSystemFields:
startInternetConnectionReachabilityNotifier
establishedSalt
recordNameFromRecordType:identifier:
initWithSubscriptionID:appBundleIdentifier:archiveURL:
fetchChangesWithCompletion:
fetchRecordForRecordID:completion:
willAttachToContainer:serviceMode:completion:
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
attachToZones:completion:
detach
detachWithError:completion:
getAttached:
recordZoneWithName:completionHandler:
saltedAndHashedIDFromLocalID:
p_unsubscribeToContainer:
p_subscribeWithCompletion:
p_fetchDatabaseChanges:
p_createRecordZones:completionHandler:
p_createRecordIDSaltWithCompletion:
p_fetchZoneChanges:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
p_updateRetryParametersFromFetchZoneChangesOperationError:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
p_informObserversOfAttachmentChange
p_informObserversOfRecordsChanged:
p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:
p_informObserversOfRecordsChanged:forRecordType:
p_informObserversOfCompletedFetchOfZone:
p_scheduleArchiveWithCompletion:
p_unarchive
p_archiveToData
p_unarchiveFromData:
_deleteRecordZonesWithIDs:qualityOfService:completion:
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableWithError:completion:
addObserver:recordType:
removeObserver:recordType:
addObserver:zoneID:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
database
setDatabase:
subscriptionID
setSubscriptionID:
hasSubscription
setHasSubscription:
archiveURL
setArchiveURL:
desiredRecordZoneIDs
setDesiredRecordZoneIDs:
changedRecordZoneIDs
setChangedRecordZoneIDs:
coalescedArchive
setCoalescedArchive:
userRecordID
setUserRecordID:
serverChangeToken
setServerChangeToken:
recordIDSalt
setRecordIDSalt:
recordZones
setRecordZones:
zoneObservers
setZoneObservers:
tokenStores
setTokenStores:
coalescedZoneFetch
setCoalescedZoneFetch:
attachedToContainer
setAttachedToContainer:
backOffInterval
setBackOffInterval:
serverFetchPostponed
setServerFetchPostponed:
fetchRecordZoneChangesSuccess
setFetchRecordZoneChangesSuccess:
_zoneObserversLock
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_zoneObservers
_tokenStores
_coalescedZoneFetch
_backOffInterval
T@"CKDatabase",&,N,V_database
T@"NSURL",C,N,V_archiveURL
T@"NSArray",C,N,V_desiredRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
T@"NSString",C,N,V_subscriptionID
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
T@"NSMutableDictionary",&,N,V_recordZones
T@"NSMutableDictionary",&,N,V_observers
T@"NSMapTable",&,N,V_zoneObservers
T@"NSMutableDictionary",&,N,V_tokenStores
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
TB,N,V_attachedToContainer
Td,N,V_backOffInterval
TB,N,V_serverFetchPostponed
TB,N,V_fetchRecordZoneChangesSuccess
TB,N,V_hasSubscription
setAssetDetails:completion:
getAssetDetailChangesSince:completion:
assetDetailsForAssetIDs:completion:
fetchAssetDetailsIncludingDeleted:completion:
fetchAssetDetailsForUnsyncedTastes:
setReadingNowDetails:completion:
getReadingNowDetailChangesSince:completion:
readingNowDetailsForAssetIDs:completion:
setAssetReviews:completion:
getAssetReviewChangesSince:completion:
assetReviewsForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
addStoreItems:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
setCollectionDetails:completion:
getCollectionDetailChangesSince:completion:
collectionDetailsForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
setCollectionMembers:completion:
getCollectionMemberChangesSince:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
setBookWidgetInfo:completion:
setUserDatum:completion:
setUserData:completion:
fetchUserDataIncludingDeleted:completion:
getUserDataChangesSince:completion:
getBookWidgetDataWithLimit:completion:
getBookWidgetInfoWithLimit:completion:
configureInterface:
load:
initWithStateInfo:readingGoalsEnabled:
save:
stateInfo
setStateInfo:
readingGoalsEnabled
setReadingGoalsEnabled:
_readingGoalsEnabled
_stateInfo
T@"BDSReadingHistoryStateInfo",&,N,V_stateInfo
TB,N,V_readingGoalsEnabled
initWithEntity:insertIntoManagedObjectContext:
fetchRequest
initIntoManagedObjectContext:
localSaltVersionIdentifier
T@"NSString",&,D,N
serverSaltVersionIdentifier
tccAccessChanged:
enableSyncChanged:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
dissociateCloudDataFromSyncWithCompletion:
hasSaltChangedWithCompletion:
currentAssetDetailCloudSyncVersions:
setAssetDetail:completion:
deleteAssetDetailForAssetID:completion:
assetDetailForAssetID:completion:
resolvedAssetDetailForAssetID:completion:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
currentReadingNowDetailCloudSyncVersions:
deleteReadingNowDetailForAssetID:completion:
needsReadingNowAssetTypePopulation:
setAssetReview:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
assetReviewForAssetReviewID:completion:
addStoreItem:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
storeItemForStoreID:completion:
currentCollectionDetailCloudSyncVersions:
setCollectionDetail:completion:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
collectionDetailForCollectionID:completion:
currentCollectionMemberCloudSyncVersions:
setCollectionMember:completion:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
collectionMemberForCollectionMemberID:completion:
fetchMaxSortOrderInCollectionID:completion:
setEnableCollectionSync:
setEnableCloudSync:enableReadingNowSync:
setEnableSecureUserDataCloudSync:
setCloudSyncPaused:
signalFetchChangesTransaction:
updatePolitely:reason:completion:
updatePolitely:reason:completionWithError:
updatePolitelyAfterSignOut:reason:completion:
updatePolitelyAfterSignIn:reason:completion:
updateFamilyPolitely:reason:completion:
updateFamilyPolitely:reason:completionWithError:
setItemHidden:forStoreID:completion:
hideItemsWithStoreIDs:completion:
resetPurchasedTokenForStoreIDs:completion:
deleteItemsWithStoreIDs:completion:
resetStaleJaliscoDatabaseWithCompletion:
fetchMostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
readingGoalsChangeBooksFinishedGoalTo:withCompletion:
readingGoalsChangeDailyGoalTo:withCompletion:
readingGoalsClearDataWithCompletion:
readingGoalsClearLocalCachedDataWithCompletion:
readingGoalsStateInfoWithCompletion:
readingHistoryClearDataWithCompletion:
readingHistoryClearDefaultsCachedDataWithCompletion:
readingHistoryClearTodayWithCompletion:
readingHistoryHandleSyncFileChangeWithSyncVersionInfo:completion:
readingHistoryIncrementWithDate:by:withCompletion:
readingHistoryReadingHistoryModelSnapshotInfoWithCurrentTime:withCompletion:
readingHistoryReadingHistoryStateInfoWithRangeStart:rangeEnd:currentTime:withCompletion:
currentCloudSyncVersions:
deleteUserDatumForKey:completion:
userDatumForKey:completion:
userDatumIncludingDeleted:forKey:completion:
resolvedUserDataValueForKey:completion:
userDataValueForKey:completion:
setUserDataValue:forKey:completion:
mergeMovedReadingHistoryDataWithCompletionHandler:
bookWidgetReadingHistoryStateInfoWithCompletion:
audiobookStoreEnabledWithCompletion:
addStoreIDtoWantToReadList:withCompletion:
_updateEnableSync
clientDetectedPredicateChange:
clientDetectedPurchaseServerClientExpired:
clientDetectedStoreChange:
clientDetectedStoreChangeAndAccountChange:
paused
setPaused:
assetManager
setAssetManager:
cloudCollectionsManager
setCloudCollectionsManager:
secureUserDataManager
setSecureUserDataManager:
nanoBooksController
setNanoBooksController:
jaliscoDAAPService
setJaliscoDAAPService:
notificationForwarder
setNotificationForwarder:
readingGoalsService
setReadingGoalsService:
readingHistoryService
setReadingHistoryService:
_authenticatorsLock
_paused
_assetManager
_cloudCollectionsManager
_secureUserDataManager
_nanoBooksController
_jaliscoDAAPService
_notificationForwarder
_readingGoalsService
_readingHistoryService
TB,N,V_paused
T@"BCCloudAssetManager",W,N,V_assetManager
T@"BCCloudCollectionsManager",W,N,V_cloudCollectionsManager
T@"<BCCloudSecureUserDataManager>",W,N,V_secureUserDataManager
T@"BDSNBController",&,N,V_nanoBooksController
T@"BDSJaliscoDAAPServiceImpl",&,N,V_jaliscoDAAPService
T@"BDSNotificationForwarder",&,N,V_notificationForwarder
T@"BDSReadingGoalsService",&,N,V_readingGoalsService
T@"BDSReadingHistoryService",&,N,V_readingHistoryService
initWithEndDate:length:
endDate
setEndDate:
length
setLength:
_endDate
_length
T@"NSDate",&,N,V_endDate
Tq,N,V_length
transactionNameForEntityName:
initWithEntityName:delegate:
transactionName
performWorkWithCompletion:
coalescingDelay
transactionLifetimeTimout
clientConnected
signal
laq_scheduleTransactionLifetime
entityName
setEntityName:
coalescedNotification
setCoalescedNotification:
lifecycleAccessQueue
setLifecycleAccessQueue:
transactionLifetime
setTransactionLifetime:
clientCount
setClientCount:
_entityName
_coalescedNotification
_lifecycleAccessQueue
_transactionLifetime
_clientCount
T@"NSString",C,N,V_entityName
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
T@"BDSOSTransaction",&,N,V_osTransaction
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
Tq,N,V_clientCount
bdsAppBundleIdentifier
initWithAssetID:title:pageProgressionDirection:coverURL:readingProgress:libraryAssetType:
hasSignificantDifferenceWith:
assetID
setAssetID:
title
setTitle:
pageProgressionDirection
setPageProgressionDirection:
coverURL
setCoverURL:
readingProgress
setReadingProgress:
libraryAssetType
setLibraryAssetType:
totalDuration
setTotalDuration:
_assetID
_title
_pageProgressionDirection
_coverURL
_readingProgress
_libraryAssetType
_totalDuration
T@"NSNumber",C,N,V_totalDuration
T@"NSString",C,N,V_assetID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_pageProgressionDirection
T@"NSString",C,N,V_coverURL
T@"NSNumber",C,N,V_readingProgress
T@"NSString",C,N,V_libraryAssetType
sharedClient
T@"BDSJaliscoDAAPServiceImpl",R,N
daapClientDelegate
setDaapClientDelegate:
updatePolitely:uiManager:reason:completion:
storeAuthenticationRequired
jaliscoClient
setJaliscoClient:
_storeAuthenticationRequired
_jaliscoClient
T@"BLJaliscoDAAPClient",&,N,V_jaliscoClient
T@"<BLJaliscoDAAPClientDelegate>",W,N
TB,R,N,V_storeAuthenticationRequired
incrementEditGeneration
recordType
identifier
zoneName
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
T@"NSDate",R,C,N
Tq,R,N
T@"CKRecord",R,C,N
T@"NSData",R,C,N
T@"<BCCloudDataPrivacyDelegate>",W,N
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
T@"NSString",R,C,N
Ts,R,N
Tf,R,N
Ti,R,N
Td,R,N
configureFromCloudData:withMergers:
isEqualExceptForDate:
resolveConflictsFromRecord:withResolvers:
propertyIDKey
mutableCopy
_configureFromAssetDetail:withMergers:
setDifferentBookmarkTime:
isAudiobook
T@"NSString",C,D,N
TB,D,N
T@"NSDate",C,D,N
Ts,D,N
Tf,D,N
T@"NSData",C,D,N
Ti,D,N
Td,D,N
initWithCloudData:
initWithRecord:
configuredRecordFromAttributes
initWithAssetID:
setReadingProgressHighWaterMark:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setBookmarkTime:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingProgressHighWaterMark
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
Tf,N,V_readingProgress
Tf,N,V_readingProgressHighWaterMark
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
transactionCompleted:
initWithCloudKitController:
signalDataChangeTransactionForEntityName:notificationName:
signalSyncToCKTransactionForEntityName:syncManager:
signalSyncToCKTransactionForEntityName:syncManager:completion:
cloudKitController
setCloudKitController:
transactionAccessQueue
setTransactionAccessQueue:
transactions
setTransactions:
transactionCompletionCallbacks
setTransactionCompletionCallbacks:
_cloudKitController
_transactionAccessQueue
_transactions
_transactionCompletionCallbacks
T@"BCCloudKitController",W,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
T@"NSMutableDictionary",&,N,V_transactions
T@"NSMutableDictionary",&,N,V_transactionCompletionCallbacks
getBookWidgetInfoObject
cloudAssetType
libraryContentAssetType
T@"NSNumber",C,D,N
lastEngagedDate
T@"NSDate",R,C,D,N
isTrackedAsRecent
TB,R,D,N
readingNowDetail
T@"BCReadingNowDetail",&,D,N
isExplicit
insertMatchingManagedObjectIntoContext:
initWithBooksFinishedGoal:streakDayGoal:
booksFinishedGoal
setBooksFinishedGoal:
streakDayGoal
setStreakDayGoal:
_booksFinishedGoal
_streakDayGoal
T@"NSNumber",&,N,V_booksFinishedGoal
T@"NSNumber",&,N,V_streakDayGoal
initWithEntityName:syncManager:delegate:
syncManager
setSyncManager:
_syncManager
T@"BCCloudDataSyncManager",&,N,V_syncManager
initWithDate:day:
date
setDate:
setDay:
_date
_day
T@"NSString",C,N,V_date
T@"BDSReadingHistoryDayInfo",&,N,V_day
initWithEntityName:notificationName:delegate:
notificationName
setNotificationName:
_notificationName
T@"NSString",C,N,V_notificationName
dataType
historyToken
historyTokenOffset
cloudVersion
localVersion
syncVersion
T@"NSPersistentHistoryToken",R,C,N
configureFromSyncVersions:
setHistoryToken:
rawHistoryToken
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
initWithCloudSyncVersions:
setDataType:
setCloudVersion:
setLocalVersion:
setSyncVersion:
setHistoryTokenOffset:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
startUpdateWithManager:jaliscoUpdateSuccessful:
cancelWithManager:
_l_cancelWithManagers:
_updateCloudDataWithManager:
_receivedFetchedRecordsChangedFromObserver:
_l_finishedFetchingCollectionsWithManager
currentProgress
setCurrentProgress:
managers
setManagers:
currentObserverIdentifier
setCurrentObserverIdentifier:
jaliscoUpdateSuccessful
setJaliscoUpdateSuccessful:
_stateLock
_jaliscoUpdateSuccessful
_currentProgress
_managers
_currentObserverIdentifier
T@"NSProgress",&,N,V_currentProgress
T@"NSHashTable",&,N,V_managers
T@?,C,N,V_observer
TQ,N,V_currentObserverIdentifier
TB,N,V_jaliscoUpdateSuccessful
initWithCloudKitController:delegate:
nullPrivacyDelegate
localIdentifierFromRecord:
hasValidSalt
setSystemFields:
_privacyDelegate
saltedHashedID
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
setDeletedFlag:
setEditGeneration:
setSyncGeneration:
setModificationDate:
localRecordID
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
reloadWidgetTimelines
coalescingBlock
setCoalescingBlock:
timelineController
setTimelineController:
_coalescingBlock
_timelineController
T@"BUCoalescingCallBlock",&,N,V_coalescingBlock
T@"CHSTimelineController",&,N,V_timelineController
_documentsDirectoryURL
_sharedRootDirectoryURL
_sharedLegacyRootDirectoryURL
initWithManagedObjectModel:
initWithManagedObjectModel:nameOnDisk:
initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_persistentStoreOptions
_logIf:error:operation:
_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_setupManagedObjectContext
_directoryExistsForStoreAtURL:
_createDirectoryForStoreAtURL:
_deleteDirectoryForStoreAtURL:
_migrateAndDestroyStoreAtLegacyURL:toModernURL:
_addStoreAtURL:
managedObjectContext
setManagedObjectContext:
persistentStoreCoordinator
setPersistentStoreCoordinator:
_managedObjectContext
_persistentStoreCoordinator
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
_logError:
mq_incrementCloudVersion
startSyncToCKWithCompletion:
mq_cloudSyncVersions
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:completion:
setCloudData:predicate:mergers:completion:
setCloudData:predicate:propertyIDKey:completion:
setCloudData:predicate:propertyIDKey:mergers:completion:
removeCloudDataForPredicate:completion:
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
deleteCloudDataForPredicate:completion:
countWithPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
cloudDatasWithPredicate:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
resolvedCloudDataForCloudData:predicate:completion:
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
resolveConflictsForRecords:completion:
resolveConflictsForRecords:withResolvers:completion:
resolveConflictsForRecords:withResolvers:mergers:completion:
failedRecordIDs:completion:
fetchCloudDataIncludingDeleted:completion:
getChangesSince:forEntityClass:completion:
monitor
setMonitor:
setMoc:
dataSource
setDataSource:
responseQueue
setResponseQueue:
immutableClass
setImmutableClass:
mutableClass
setMutableClass:
signalDataChangedTransaction
setSignalDataChangedTransaction:
dataMapper
setDataMapper:
_signalDataChangedTransaction
_monitor
_dataSource
_responseQueue
_immutableClass
_mutableClass
_dataMapper
T@"NSManagedObjectContext",W,N,V_moc
T@"BCCloudDataSource",&,N,V_dataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
T#,V_immutableClass
T#,V_mutableClass
TB,N,V_signalDataChangedTransaction
T@"<BCCloudDataMapper>",&,N,V_dataMapper
T@"<BDSCloudDataManagerMonitor>",W,N,V_monitor
syncManager:fetchedAllRecordsInZone:
databaseController:attachmentChanged:
databaseController:reachabilityChanged:
databaseController:recordsChanged:
databaseController:recordWithIDWasDeleted:recordType:
databaseController:fetchedAllRecordsInZone:
initWithCloudKitController:dataMapper:
syncCloudData:completion:
signalSyncToCK
_maxCloudDataPerBatch
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
_leaveDispatchGroup:times:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:
_syncQueueSyncForCloudData:completion:
syncQueue
setSyncQueue:
processingCloudData
setProcessingCloudData:
tooBigBatch
setTooBigBatch:
serverPushPostponed
setServerPushPostponed:
_processingCloudData
_serverPushPostponed
_syncQueue
_tooBigBatch
T@"BCCloudKitController",&,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
TB,N,V_processingCloudData
TQ,N,V_tooBigBatch
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
isBook
seriesName
sequenceNumber
sequenceDisplayLabel
name
artistName
contentRating
genre
buyParams
releaseDate
hasSupplementalContent
isSG
bookSampleDownloadURL
averageRating
ratingCount
standardNotes
standardDescription
priceFormatted
price
isPreorder
expectedReleaseDate
offer
fileSize
previewURL
artworkURL
width
height
seriesResource
T@"NSNumber",R,N
T@"NSDate",R,N
TQ,R,N
T@"NSDictionary",R,N
T@"<BFMSeries>",R,N
fetchAssetWithAdamID:completionHandler:
fetchAssetWithAdamID:type:completionHandler:
fetchAssetsWithAdamIDs:completionHandler:
fetchMixedAssetsWithBookIds:audiobookIds:completionHandler:
sharedManager
T@"BDSNBPinningManager",R,N
_prepareMediaItemForPinningIfNeeded:parentProgress:completion:
_prepareMediaItemForPinning:parentProgress:completion:
_shouldPinMediaItem:allowsExplicit:
_shouldPinJaliscoItem:allowsExplicit:
_isExplicitMaterialAllowed
_jaliscoAudiobookWithAssetId:
updateWantToRead:updateReadingNow:updateManuallyPinned:jaliscoUpdateSuccessful:withCompletion:
mostRecentAudiobookWithCompletion:
audiobookFetcher
setAudiobookFetcher:
_audiobookFetcher
T@"BLHLSAudiobookFetcher",&,N,V_audiobookFetcher
storeServerChangeToken:completion:
serverChangeTokenWithCompletion:
cloudSyncEnabled
initWithMOC:zoneName:cloudKitController:
zoneNeedsUpdate:completion:
updateSaltVersionIdentifier:completion:
setZoneName:
_zoneName
T@"NSString",C,N,V_zoneName
dataManager:didInsertNewRecords:
sharedService
initService
currentLiverpoolEnablement
objectModel
assetDetailManagerInstance
readingNowDetailManagerInstance
assetReviewManagerInstance
storeAssetManagerInstance
setObjectModel:
widgetInfoManager
setWidgetInfoManager:
assetDataSource
setAssetDataSource:
widgetDataUpdater
setWidgetDataUpdater:
assetDetailManager
setAssetDetailManager:
readingNowDetailManager
setReadingNowDetailManager:
assetReviewManager
setAssetReviewManager:
storeAssetManager
setStoreAssetManager:
changeTokenController
setChangeTokenController:
saltVersionIdentifierManager
setSaltVersionIdentifierManager:
ubiquityManager
setUbiquityManager:
_objectModel
_widgetInfoManager
_assetDataSource
_widgetDataUpdater
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
_changeTokenController
_saltVersionIdentifierManager
_ubiquityManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
T@"BDSSaltVersionIdentifierManager",&,N,V_saltVersionIdentifierManager
T@"NSManagedObjectModel",&,N,V_objectModel
T@"BDSBookWidgetInfoManager",&,N,V_widgetInfoManager
T@"BDSUbiquityManager",&,N,V_ubiquityManager
T@"BDSBookWidgetDataUpdater",&,N,V_widgetDataUpdater
T@"BCCloudDataSource",&,N,V_assetDataSource
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
syncManager:removeCloudDataForIDs:completion:
syncManager:updateSyncGenerationFromCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:failedRecordIDs:completion:
removeUserDataForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
secureUserDataSource
setSecureUserDataSource:
dataManager
setDataManager:
_secureUserDataSource
_dataManager
T@"BCCloudDataSource",&,N,V_secureUserDataSource
T@"BCCloudDataManager",&,N,V_dataManager
initWithCloudDataSource:cloudKitController:
removeAssetDetailForSaltedHashedRecordIDs:completion:
assetDetailDataSource
setAssetDetailDataSource:
_assetDetailDataSource
T@"BCCloudDataSource",&,N,V_assetDetailDataSource
isWithinConnectionDateRange
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveToken:forInfo:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
startListeningForNotifications
didAcceptConnection:
connection
setConnection:
notificationQueue
setNotificationQueue:
unfairLock
setUnfairLock:
lastConnectionDate
setLastConnectionDate:
_unfairLock
_connection
_notificationQueue
_lastConnectionDate
T@"APSConnection",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T{os_unfair_lock_s=I},N,V_unfairLock
T@"NSDate",&,N,V_lastConnectionDate
_configureFromReadingNowDetail:withMergers:
setIsTrackedAsRecent:
setLastEngagedDate:
setCloudAssetType:
_isTrackedAsRecent
_lastEngagedDate
_cloudAssetType
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
T@"NSString",C,N,V_cloudAssetType
readingHistoryFileURL
readingHistoryCRDTContextFileURL
booksFinishedUserDefaultsKey
streakDayUserDefaultsKey
dataHasBeenMovedUserDefaultsKey
setDataMonitor:
removeReadingNowDetailForSaltedHashedRecordIDs:completion:
trackedRreadingNowDetailsInDescendingOrderMaximumResultCount:filter:completion:
getRecentBooksExcludingAssetIDs:completion:
readingNowDetailDataSource
setReadingNowDetailDataSource:
_readingNowDetailDataSource
T@"BCCloudDataSource",&,N,V_readingNowDetailDataSource
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
userIDFromAssetReviewID:
_configureFromAssetReview:withMergers:
setNormalizedStarRating:
userID
Td,N
initWithAssetReviewID:
setAssetReviewID:
setStarRating:
setReviewTitle:
setReviewBody:
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
representativeDAAPMediaItemsWithAssetId:
_storeRepresentativeItem:
_registerNotificationEventHandler
initWithLoaded:lastSource:modelReadingDay:modelLongestStreak:remoteModelReadingDay:remoteModelLongestStreak:
lastSource
setLastSource:
modelReadingDay
setModelReadingDay:
modelLongestStreak
setModelLongestStreak:
remoteModelReadingDay
setRemoteModelReadingDay:
remoteModelLongestStreak
setRemoteModelLongestStreak:
_lastSource
_modelReadingDay
_modelLongestStreak
_remoteModelReadingDay
_remoteModelLongestStreak
Tq,N,V_loaded
Tq,N,V_lastSource
T@"BDSReadingHistoryDayInfo",&,N,V_modelReadingDay
T@"BDSReadingHistoryStreakInfo",&,N,V_modelLongestStreak
T@"BDSReadingHistoryDayInfo",&,N,V_remoteModelReadingDay
T@"BDSReadingHistoryStreakInfo",&,N,V_remoteModelLongestStreak
removeAssetReviewsForSaltedHashedRecordIDs:completion:
assetReviewDataSource
setAssetReviewDataSource:
_assetReviewDataSource
T@"BCCloudDataSource",&,N,V_assetReviewDataSource
value
_configureFromUserDatum:withMergers:
initWithKey:
setValue:
_key
_value
T@"NSString",C,N,V_value
T@"NSString",R,C,N,V_key
ubiquityManagerDidFinishInitialGather:
ubiquityManager:addedItemWithAssetID:metadata:
ubiquityManager:updatedItemWithAssetID:metadata:
ubiquityManager:removedItemWithAssetID:
mediaLibraryManagerDidFinshInitialGather:withItems:
mediaLibraryManager:addedItems:
mediaLibraryManager:updatedItems:
mediaLibraryManager:removedItems:
initWithMOC:assetDetailManager:readingNowDetailManager:ubiquityManager:
updateBookWidgetInfo:
bookWidgetInfosThatNeedToBeCreatedWithCompletion:
fetchBookWidgetInfoIDsWithCompletion:
getInfosWithLimit:completionHandler:
fetchBookWidgetInfoIDsWithCloudAssetType:completion:
setBookWidgetInfoOnly:completion:
populateInfosWithStoreData:completionHandler:
removeBookWidgetInfosForAssetIDs:completion:
_bookWidgetInfoFromUbiquityMetadata:
_bookWidgetInfoFromMediaLibraryItem:
_setBookWidgetInfosForMediaLibraryItems:withTransactionName:
_infoFromReadingNowDetail:
context
setContext:
mediaLibraryManager
setMediaLibraryManager:
_context
_mediaLibraryManager
T@"NSManagedObjectContext",&,V_context
T@"BCCloudReadingNowDetailManager",&,N,V_readingNowDetailManager
T@"BDSMediaLibraryManager",&,N,V_mediaLibraryManager
storeID
_configureFromStoreItem:withMergers:
initWithStoreID:
setStoreID:
_storeID
T@"NSString",C,N,V_storeID
removeStoreItemWithSaltedHashedRecordIDs:completion:
storeAssetDataSource
setStoreAssetDataSource:
_storeAssetDataSource
T@"BCCloudDataSource",&,N,V_storeAssetDataSource
bds_defaultConfiguration
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
location
setLocation:
_location
TQ,N,V_location
TQ,N,V_length
annotationType
hasAssetVersion
clearAnnotations
addAnnotation:
annotationsCount
annotationAtIndex:
setAppVersion:
assetVersion
setAssetVersion:
annotations
setAnnotations:
_annotations
_appVersion
_assetVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
T@"NSString",&,N,V_assetVersion
T@"NSMutableArray",&,N,V_annotations
initWithReadingTime:goal:isStreakDay:
readingTime
setReadingTime:
goal
setGoal:
isStreakDay
setIsStreakDay:
_isStreakDay
_readingTime
_goal
Tq,N,V_readingTime
Tq,N,V_goal
TB,N,V_isStreakDay
setDeleted:
setHasDeleted:
hasDeleted
setIsUnderline:
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setStyle:
setHasStyle:
hasStyle
setType:
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAttachments
hasChapterTitle
setUserModificationDate:
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setSpineIndexUpdated:
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setPlAbsolutePhysicalLocation:
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setPlLocationRangeEnd:
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setPlLocationRangeStart:
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setLocationModificationDate:
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
setCreationDate:
creatorIdentifier
setCreatorIdentifier:
deleted
isUnderline
locationCFIString
setLocationCFIString:
note
setNote:
representativeText
setRepresentativeText:
selectedText
setSelectedText:
style
type
uuid
setUuid:
physicalPageNumber
setPhysicalPageNumber:
annotationVersion
setAnnotationVersion:
attachments
setAttachments:
chapterTitle
setChapterTitle:
userModificationDate
selectedTextRange
setSelectedTextRange:
spineIndexUpdated
futureProofing11
setFutureProofing11:
futureProofing12
setFutureProofing12:
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
setPlLocationStorageUUID:
plUserData
setPlUserData:
locationModificationDate
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
TB,N
TB,N,V_deleted
TB,N,V_isUnderline
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
T@"NSString",&,N,V_note
T@"NSString",&,N,V_representativeText
T@"NSString",&,N,V_selectedText
TI,N,V_style
TI,N,V_type
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_physicalPageNumber
T@"NSString",&,N,V_annotationVersion
T@"NSString",&,N,V_attachments
T@"NSString",&,N,V_chapterTitle
Td,N,V_userModificationDate
T@"BCAnnotationRange",&,N,V_selectedTextRange
TB,N,V_spineIndexUpdated
T@"NSString",&,N,V_futureProofing11
T@"NSString",&,N,V_futureProofing12
Ti,N,V_plAbsolutePhysicalLocation
Ti,N,V_plLocationRangeEnd
Ti,N,V_plLocationRangeStart
T@"NSString",&,N,V_plLocationStorageUUID
T@"NSData",&,N,V_plUserData
Td,N,V_locationModificationDate
initWithCloudDataSource:
_fetchCloudSyncVersions:completion:
_archiveCloudSyncVersions:completion:
fetchLatestCompletion:
_updateAssetDetail:fromMediaItem:
_updateBookmarkTimeFromAssetDetail:
_fq_fetchSince:completion:
fetchQueue
setFetchQueue:
fetching
setFetching:
_fetching
_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@,&,N,V_observer
TB,N,V_fetching
listener:shouldAcceptNewConnection:
initWithServiceConnectionClient:
_bdsService
_dieIfUnacknowledgediCloudLogoutOcccurred
_deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion:
iCloudIdentityTokenTracker
setICloudIdentityTokenTracker:
serviceConnectionClient
setServiceConnectionClient:
networkReachability
setNetworkReachability:
tccNotifyToken
setTccNotifyToken:
_tccNotifyToken
_iCloudIdentityTokenTracker
_serviceConnectionClient
_networkReachability
T@"BDSICloudIdentityTokenTracker",&,N,V_iCloudIdentityTokenTracker
T@"<BDSServiceConnectionClient>",W,N,V_serviceConnectionClient
T@"BDSReachability",&,N,V_networkReachability
Ti,N,V_tccNotifyToken
initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:
initWithAssetID:title:coverURL:pageProgressionDirection:cloudAssetType:libraryContentAssetType:lastEngagedDate:isTrackedAsRecent:
setLibraryContentAssetType:
setIsExplicit:
_isExplicit
_libraryContentAssetType
T@"NSString",C,N,V_libraryContentAssetType
T@"NSDate",R,N,V_lastEngagedDate
TB,R,N,V_isTrackedAsRecent
TB,N,V_isExplicit
infoFromAssetID:isSideloaded:
isSideloaded
setIsSideloaded:
_isSideloaded
TB,N,V_isSideloaded
itemWithAssetID:title:coverURL:libraryContentAssetType:cloudAssetType:totalDuration:
T@"NSString",&,N,V_title
T@"NSURL",&,N,V_coverURL
T@"NSString",&,N,V_libraryContentAssetType
T@"NSString",&,N,V_cloudAssetType
T@"NSNumber",&,N,V_totalDuration
_mediaLibraryDidChange:
beginObserving
endObserving
_syncAnchor
_recordSyncAnchor:
_syncValidity
_recordSyncValidity:
_medialibrarySyncAnchor
_performInitialFetch
aq_performInitialFetch
aq_BDSMediaLibraryItemFromCollection:
aq_assetInfoForMediaItem:
assetIDSet
setAssetIDSet:
_assetIDSet
T@"NSMutableSet",&,N,V_assetIDSet
T@"<BDSMediaLibraryManagerObserver>",W,N,V_observer
databaseController:saltVersionIdentifierChanged:completion:
initWithZoneDataManager:tokenController:databaseController:
zoneDataManager
setZoneDataManager:
tokenController
setTokenController:
_zoneDataManager
_tokenController
T@"NSObject<BDSCloudKitSupportZoneRecovery>",W,N,V_zoneDataManager
T@"BCCloudChangeTokenController",W,N,V_tokenController
collectionDetailManagerInstance
collectionMemberManagerInstance
setEnableCloudSync:completion:
collectionDataSource
setCollectionDataSource:
collectionDetailManager
setCollectionDetailManager:
collectionMemberManager
setCollectionMemberManager:
proxyMode
setProxyMode:
_proxyMode
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
T@"BCCloudDataSource",&,N,V_collectionDataSource
TB,N,V_proxyMode
removeCollectionDetailForSaltedHashedRecordIDs:completion:
collectionDetailDataSource
setCollectionDetailDataSource:
_collectionDetailDataSource
T@"BCCloudDataSource",&,N,V_collectionDetailDataSource
removeCollectionMemberForCollectionSaltedHashedRecordIDs:completion:
fetchCollectionMembersInCollectionID:maximumResultCount:filter:completion:
collectionMemberDataSource
setCollectionMemberDataSource:
_collectionMemberDataSource
T@"BCCloudDataSource",&,N,V_collectionMemberDataSource
collectionID
collectionDescription
hidden
sortOrder
sortMode
_configureFromCollectionDetail:withMergers:
initWithCollectionID:
setCollectionID:
setName:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
initWithData:
data
setData:
_data
T@"NSData",&,N,V_data
collectionMemberID
collectionMemberIDWithCollectionID:assetID:
assetIDFromCollectionMemberID:
collectionIDFromCollectionMemberID:
_configureFromCollectionMember:withMergers:
initWithCollectionMemberID:
setCollectionMemberID:
_collectionMemberID
T@"NSString",C,N,V_collectionMemberID
addStoreID:toCollectionID:completion:
fetchIsAssetID:inCollectionID:completion:
_nextSortOrderForCollectionMemberManager:collectionID:completion:
_registerForSignificantTimeChangeNotification
_unregisterForSignificantTimeChangeNotification
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
standardUserDefaults
cloudDataFromRecord:
recordFromCloudData:
initWithFileURL:
encryptedValuesByKey
setObject:forKeyedSubscript:
bu_md5
fileURL
books
removeObjectForKey:
setInteger:forKey:
setDateFormat:
stringFromDate:
integerForKey:
initWithInteger:
initWithDouble:
setValue:forKey:
changeBooksFinishedGoalTo:completionHandler:
changeDailyGoalTo:completionHandler:
clearDataWithCompletionHandler:
clearLocalCachedDataWithCompletionHandler:
stateInfoWithCompletionHandler:
dictionaryForKey:
setDictionary:forKey:
synchronize
defaultCenter
postNotificationName:object:
defaultStore
recordID
modifiedByDevice
bundleForClass:
initWithContentsOfURL:
userDefaults
boolForKey:
handleSignificantDateChange:
addObserver:selector:name:object:
removeObserver:name:object:
initWithNotifyBlock:blockDescription:
setCoalescingDelay:
initWithReadingGoalsService:viewStateChangeHandler:
clearDefaultsCachedDataWithCompletionHandler:
clearTodayWithCompletionHandler:
handleSyncFileChangeWithSyncVersionInfo:completionHandler:
incrementWithDate:by:completionHandler:
readingHistoryStateInfoWithRangeStart:rangeEnd:currentTime:completionHandler:
readingHistoryModelSnapshotInfoWithCurrentTime:completionHandler:
bookWidgetReadingHistoryStateInfoWithCompletionHandler:
signalWithCompletion:
coordinateReadingItemAtURL:options:error:byAccessor:
setBool:forKey:
initWithName:
initWithURL:
setShouldInferMappingModelAutomatically:
setShouldMigrateStoreAutomatically:
setUsesPersistentHistoryTracking:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
removeItemAtURL:error:
newBackgroundContext
performBlockAndWait:
initWithEntityName:
setPredicate:
protoData
setObject:forKey:
valueForKey:
recordName
.cxx_construct
setProtoData:
initWithContentsOfURL:options:error:
handleCloudChangeNotification:
setFormatOptions:
BDSDaemon
BDSServiceConnectionClient
BDSBookWidgetReadingHistoryManager
BDSReadingHistoryViewStateChangeHandler
BookDataStoreBundleLookupClass
BDSAdditions
NSCopying
BDSUbiquityStatusMonitor
IMAdditions
BDSReachability
BDSUbiquityDocumentItem
BDSUbiquityDocumentsObserver
BDSUbiquityStatusChangeObserving
NSObject
BatchDelete
Common_Stores
BDSUbiquityManager
BDSUbiquityDocumentsObserverDelegate
BDSReadingHistoryStateInfo
NSSecureCoding
NSCoding
BDSOSTransaction
CoreDataExtras
BDSAppVersion
BDSUserPreferencesSync
BDSAppGroupContainer
BDSBookWidgetDataUpdater
NSFetchedResultsControllerDelegate
BURestrictionsObserving
BDSICloudIdentityTokenTracker
BDSSyncUserDefaults
BDSICloudIdentityToken
BCCloudKitConfiguration
BCContainerConfiguration
BCCloudKitController
BDSCloudKitSupportSignOutDeleteWithoutInstance
BCCloudKitRecordZone
BCCloudKitDatabaseController
BCCloudDataPrivacyDelegate
BDSServiceProtocolInterface
BDSBookWidgetReadingHistoryData
BCSaltVersionIdentifier
BDSService
MCProfileConnectionObserver
BDSDaemonProtocol
BDSServiceProtocol
BCCloudAssetDetailManager
BDSCloudKitSupportZoneRecovery
BDSCloudKitSupportSignOutDissociate
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSJaliscoDAAPClientService
BDSNBPinningManagerService
BDSReadingGoalsServiceProtocol
BDSReadingHistoryServiceProtocol
BDSBookWidgetInfoManagerService
BCCloudSecureUserDataManager
BDSReadingDataMigrationService
BDSBookWidgetDataService
BDSBookWidgetInfoService
BDSBookWidgetReadingHistoryServiceProtocol
BLNotificationServiceProtocol
BDSReadingHistoryStreakInfo
BCCloudKitTransaction
BDSAppBundleIdentifier
BDSBookWidgetData
BDSJaliscoDAAPServiceImpl
BCAssetDetail
BCCloudData
BCMutableAssetDetail
BCCloudKitSecureConfiguration
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
BDSBookWidgetInfoMO
ManagedObject
BDSReadingGoalsStateInfo
BCCloudKitSyncToCKTransaction
BDSReadingHistoryDayEntryInfo
BCCloudKitDataChangedTransaction
BCCloudSyncVersions
BCMutableCloudSyncVersions
BDSAutomaticPinningListUpdater
BCCloudKitFetchChangesTransaction
BCCloudDataNullPrivacyDelegate
BCMutableCloudData
BDSWidgetCenterManager
BCCloudDataSource
BCCloudManagerBatchSupport
BCCloudDataManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BFMAsset
BFMResource
BDSMediaAPIService
BDSNBPinningManager
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BDSCloudDataManagerMonitor
BCCloudAssetManager
BCCloudDataSyncManagerDelegate
BDSNotificationConnection
APSConnectionDelegate
BCReadingNowDetail
BCMutableReadingNowDetail
BDSReadingHistoryMigrationInfo
BCAssetReview
BCMutableAssetReview
BDSMediaLibraryUtils
BDSXPCEventRelay
BDSReadingHistoryModelSnapshotInfo
BCSecureUserDatum
BCMutableSecureUserDatum
BDSBookWidgetInfoManager
BDSUbiquityManagerObserver
BDSMediaLibraryManagerObserver
BCStoreItem
BCMutableStoreItem
BCAnnotationRange
BCAnnotationsProtoBook
BDSReadingHistoryDayInfo
BCProtoAnnotation
BDSNBController
BDSServiceDelegate
NSXPCListenerDelegate
BDSBookWidgetInfo
_BDSAudiobookAssetInfo
BDSMediaLibraryItem
BDSMediaLibraryManager
BDSSaltVersionIdentifierManager
BCCloudKitDatabaseZoneObserver
BCCloudCollectionsManager
BCCollectionDetail
BCMutableCollectionDetail
BDSCRDTModelSyncVersionInfo
BCCollectionMember
BCMutableCollectionMember
BDSServiceCenter
BDSNotificationForwarder
@16@0:8
v32@0:8@16@24
v32@0:8@"BDSServiceDelegate"16@"NSXPCConnection"24
v16@0:8
v24@0:8@?16
v24@0:8@16
@"BDSServiceDelegate"
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"BUOSStateHandler"
@"BDSNotificationConnection"
@"NSObject<OS_dispatch_source>"
v24@0:8@"BDSReadingHistoryStateInfo"16
@"BDSReadingHistoryStateInfo"16@0:8
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BDSBookWidgetReadingHistoryData"
@"BDSWidgetCenterManager"
v44@0:8:16B24@28@?36
@24@0:8^{_NSZone=}16
@24@0:8@?16
v32@0:8Q16@?24
v32@0:8:16@?24
v20@0:8B16
B16@0:8
@"BDSICloudIdentityToken"
@"NSString"
@"NSURL"
@"NSHashTable"
@"<BDSUbiquityStatusChangeObserving>"
B40@0:8@16@24#32
B32@0:8@16@24
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
i20@0:8I16
i16@0:8
^{__SCNetworkReachability=}
@"NSNumber"
@"NSError"
@"NSDate"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"BDSICloudIdentityToken"16@"BDSICloudIdentityToken"24
v24@0:8@"NSURL"16
@40@0:8@16@24@32
@"<BDSUbiquityDocumentsObserverDelegate>"
@"BDSUbiquityStatusMonitor"
@"NSMetadataQuery"
@"NSMutableArray"
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@24@0:8#16
@32@0:8@16@24
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
v32@0:8@"BDSUbiquityDocumentsObserver"16@"NSArray"24
v32@0:8@16B24B28
v28@0:8@16B24
v48@0:8@16@24@32@40
@36@0:8@16B24@28
@"<BDSUbiquityManagerObserver>"
@"NSMutableDictionary"
@"BDSUbiquityDocumentsObserver"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8q16@24@32@40
q16@0:8
v24@0:8q16
@"BDSReadingHistoryStreakInfo"
@"BDSReadingHistoryDayInfo"
@"NSArray"
@24@0:8r*16
@"NSObject<OS_os_transaction>"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
@"NSDictionary"
@"NSManagedObjectContext"
@"NSFetchedResultsController"
@28@0:8@16B24
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
v24@0:8@?<v@?B@"NSError">16
v24@0:8B16B20
v32@0:8@16@?24
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@"CKContainer"
@"BUCoalescingCallBlock"
@"CKRecordZone"
@"NSString"32@0:8@"NSString"16@"NSString"24
v36@0:8@16B24@?28
v52@0:8@16@24B32@?36@?44
v40@0:8@16@24@?32
v40@0:8@16q24@?32
d16@0:8
v24@0:8d16
@"CKDatabase"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSData"
@"NSMapTable"
@"BDSReadingHistoryStateInfo"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v24@0:8@"NSString"16
v36@0:8B16q20@?28
v36@0:8B16@20@?28
v36@0:8B16q20@?<v@?B>28
v36@0:8B16q20@?<v@?B@"NSError">28
v36@0:8B16@"NSString"20@?<v@?B>28
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
@28@0:8B16@?20
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSError">20
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v32@0:8d16@?24
v32@0:8q16@?<v@?B>24
v32@0:8d16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"BDSReadingGoalsStateInfo"B>16
v48@0:8@16@24@32@?40
v32@0:8@"BDSCRDTModelSyncVersionInfo"16@?<v@?B>24
v40@0:8@"NSDate"16q24@?<v@?B>32
v32@0:8@"NSDate"16@?<v@?@"BDSReadingHistoryModelSnapshotInfo"B>24
v48@0:8@"NSDate"16@"NSDate"24@"NSDate"32@?<v@?@"BDSReadingHistoryStateInfo"B>40
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"<BCSecureUserDatum>"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableSecureUserDatum"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"BCMutableSecureUserDatum"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"BDSReadingHistoryStateInfo"B>16
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v32@0:8@"NSString"16@?<v@?B>24
@"BCCloudAssetManager"
@"BCCloudCollectionsManager"
@"<BCCloudSecureUserDataManager>"
@"BDSNBController"
@"BDSJaliscoDAAPServiceImpl"
@"BDSNotificationForwarder"
@"BDSReadingGoalsService"
@"BDSReadingHistoryService"
@32@0:8@16q24
@"BDSOSTransaction"
@"<BCCloudKitTransactionDelegate>"
@64@0:8@16@24@32@40@48@56
v44@0:8B16@20q28@?36
@"BLJaliscoDAAPClient"
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
s16@0:8
f16@0:8
B24@0:8d16
v20@0:8f16
v20@0:8s16
v20@0:8i16
v24@0:8@"BCCloudKitTransaction"16
@"BCCloudKitController"
@"BCCloudDataSyncManager"
@"NSPersistentHistoryToken"16@0:8
@"NSPersistentHistoryToken"
B28@0:8@16B24
v24@0:8Q16
@?16@0:8
@"NSProgress"
@"<BCCloudDataPrivacyDelegate>"
@"CKRecord"
@"CHSTimelineController"
@48@0:8@16@24@32@40
v36@0:8B16@20@28
B40@0:8@16@24@32
@"NSPersistentStoreCoordinator"
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
@"<BDSCloudDataManagerMonitor>"
@"BCCloudDataSource"
@"<BCCloudDataMapper>"
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?48@0:8@16@24Q32@40
@"<BCCloudDataSyncManagerDelegate>"
@"NSNumber"16@0:8
@"NSURL"16@0:8
@"NSDictionary"16@0:8
@"<BFMSeries>"16@0:8
v36@0:8@16i24@?28
@40@0:8B16B20B24B28@?32
@"BLHLSAudiobookFetcher"
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
v32@0:8@"BCCloudDataManager"16@"NSArray"24
@"NSManagedObjectModel"
@"BDSBookWidgetInfoManager"
@"BDSBookWidgetDataUpdater"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
@"BCCloudChangeTokenController"
@"BDSSaltVersionIdentifierManager"
@"BDSUbiquityManager"
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
@"BCCloudDataManager"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"APSConnection"
v40@0:8Q16@?24@?32
@64@0:8q16q24@32@40@48@56
v24@0:8@"BDSUbiquityManager"16
v40@0:8@"BDSUbiquityManager"16@"NSString"24@"NSDictionary"32
v32@0:8@"BDSUbiquityManager"16@"NSString"24
v32@0:8@"BDSMediaLibraryManager"16@"NSArray"24
@"BCCloudReadingNowDetailManager"
@"BDSMediaLibraryManager"
@24@0:8Q16
@36@0:8q16q24B32
v20@0:8I16
I16@0:8
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v32@0:8@?16@?24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BDSICloudIdentityTokenTracker"
@"<BDSServiceConnectionClient>"
@"BDSReachability"
@76@0:8@16@24@32@40@48@56@64B72
@"<BDSMediaLibraryManagerObserver>"
v40@0:8@"BCCloudKitDatabaseController"16@"NSString"24@?<v@?B>32
@"NSObject<BDSCloudKitSupportZoneRecovery>"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
v48@0:8@16Q24@?32@?40
So13CKRecordValue_p
5start_AA3endt
$s14bookdatastored27ReadingHistoryModelProviderP
$s14bookdatastored24ReadingHistoryDataSourceP
So14NSUserDefaultsC
So17OS_dispatch_queueC
_GIegn_
GSgXw
yxGSgXwz_
_SQRzlXX
yXlSgXw
yXlSgXwz_Xx
ySOy
_GcG
_GIegn_
GSgXw
yxGSgXwz_
_SQRzlXX
4from_AA2tot
ySOy
_GcG
SgXw
SgXwz_Xx
ySSG
SaySSG
ySiG
_GIegc_
G4from_AC2tot
_GSg
SnySiG
ySSSo11BCCloudData_pG
G_Gc
ySOy
G_GcG
G_GIegn_
GGSgXw
yxGSgXwz_
G_SQRzlXX
ScPSg
SbIeyBy_
IeghH_
ytIeghHr_
So24BDSReadingGoalsStateInfoCSbIeyByy_
So8NSObjectC
SgXw
SgXwz_Xx
yxGSgXw
yxGSgXwz_x_
RzlXX
_pSgIegyg_
So7NSErrorCSgIeyByy_
_pSgIegyg_Sg
G0R2_
IeyB_
So11BCCloudData_p
So17BCCloudDataSourceC
So22BCCloudDataSyncManagerC
So18BCCloudDataManagerC
So28BCCloudChangeTokenControllerC
So20BCCloudKitControllerC
So31BDSSaltVersionIdentifierManagerCSg
ypSgyp_A2BtXBGSg
yxGG
ypSgyp_A2AtXB
So16BDSOSTransactionCSg
SSSg
GSgXw
yxGSgXwz_
RzlXX
_ypSgyp_A2CtXBtG
ypSg
ypSg_AAt
G0R3_
So8NSObjectCSg
G0R1_
GSpySo8NSObjectCSgGSgSpyypGSgytIeglllr_
_pSg
So11BCCloudData_pSg
_pSg
Sg_ABt
SgXw
SbIeghHr_
SbIegy_
IeyBy_
So26BDSReadingHistoryStateInfoCSbIeggy_
So26BDSReadingHistoryStateInfoC
IeyByy_
So34BDSReadingHistoryModelSnapshotInfoCSbIeggy_
So34BDSReadingHistoryModelSnapshotInfoC
IeyByy_
So26BDSReadingHistoryStateInfoCSgSbIeyByy_
SbSo7NSErrorCSgIeyByy_
yxGSgXw
yxGSgXwz_x_
RzlXX
So39BDSReadingHistoryViewStateChangeHandler_pSg
So21BUCoalescingCallBlockCSg
Ign_
So21NSPersistentContainerC
So17OS_os_transaction_pSgz_Xx
Sbz_Xx
So22NSManagedObjectContextC
ySo28NSPersistentStoreDescriptionCG
yyXlG
ySo29BDSReadingHistoryDayEntryInfoCG
GSgXw
GGSg
GSgXw
Igl_
$sSY
$ss12CaseIterableP
6origin_t
$s14bookdatastored26ReadingGoalsStateObservingP
$s14bookdatastored25ReadingGoalsStateProviderP
$s14bookdatastored26ReadingGoalsEventProcessorP
$s14bookdatastored22ReadingGoalsDataSourceP
yycSg
_G_ACt
yx_G
yx_G
x5model_t
$s14bookdatastored21CRDTModelSyncProtocolP
So11BCCloudDataC
So18BCMutableCloudDataC
SDySSypG
ySS_
$s14bookdatastored28ReadingGoalDataStoreProtocolP
$s14bookdatastored33ReadingGoalCloudDataStoreProtocolP
ySSG
ypSgyp_A2CtXBG
_yXlt
ySSypG
_pSg
xIgl_
yxGSgXw
yxGSgXwz_x_SQRzlXX
ySOc
$s14bookdatastored18ObservableDelegateP
SDySOy
yx_GcG
_pSgXw
x5value_t
x4from_x2tot
yx_GytIegnr_
yx_GIegn_
yx_G
yxGSgXw
yxGSgXwz_x_
RzlXX
$s9Coherence10CRStruct_1P
20ObservableDifference
QzSg5model_yt5extrat
$s9Coherence15CRStruct_Base_1P
14MutatingAction
yxGG
$s9Coherence4CRDTP
$s9Coherence6CRTypeP
$s14bookdatastored20CRDTModelNameSupportP
$s14bookdatastored32CRDTModelFileSyncManagerDelegateP
$s14bookdatastored30CRDTModelFileSyncManagerConfigP
SDySS
_pSgXw
yxGGG
yxGG
5model_t
So17OS_os_transaction_pSg
Igl_
GIgl_
G0R0_
Si3key_
G5valuetSg
Si3key_
G5valuet
Si3key_
5valuet
$s9Coherence10CRStruct_2P
SiSg11readingTime_
Sg0A4Goalt
$s9Coherence15CRStruct_Base_2P
ySi_GSgt
$s9Coherence10CRStruct_3P
G_GSg4days_
Sg9totalTimeAI20lastDayStreakOrdinalt
$s9Coherence15CRStruct_Base_3P
G_GSg_
ySi_GSgAIt
G_GSg6months_AAySi
_GSg13streakRecordst
G_GSg_AAySi
_GSgt
ySnySiGG
ySi3key_
5valuetG
ySi3key_
G5valuetG
Si3key_SiSg11readingTime_
Sg0B4Goalt5valuet
G_GSg
Si3key_
G_GSg4days_
Sg9totalTimeAJ20lastDayStreakOrdinalt5valuet
Si3key_
G5valuet
Si3key_
G5valuetSg
G_GSg
G_GSg6months_AAySi
_GSg13streakRecordstSg
Si3key_
5valuetSg
ySi3key_
G5valuetG
modelProvider
currentUserDefaults
currentDate
streakDayGoal
queue
clearOnInitialLoad
_state
lastModelChange
lastModelChangeObservableTransaction
model
currentStreak
today
longestStreak
goalsDataStore
goalsController
logger
cloudDataSource
cloudSyncManager
localDataManager
tokenController
cloudKitController
saltVersionIdentifierManager
crdtContext
$__lazy_storage_$_conflictResolvers
_modelState
modelQueue
callbackQueue
observableTransaction
enableCloudSync
identicalModel
mergedModelNotSerializable
context
version
readingTime
goal
isStreakDay
date
endDate
length
currentStreak
longestStreak
today
readingHistory
duration
goalsService
historyDefaults
historyDataStore
historyCloudSyncManager
historyCloudSyncController
isModelReady
accessQueue
modelReadyQueue
viewStateChangeHandler
localSyncManager
cloudSyncManager
localModelSyncVersionTransaction
localModelSyncVersionTransactionQueue
waitForlocalModelSyncVersion
waitForlocalModelSyncVersionTimeoutBlock
RawValue
AllCases
booksFinishedGoal
streakDayGoal
booksFinished
dailyReading
state
source
local
remote
clear
load
dataSource
_stateChange
onRemoteChange
model
loaded
lastSource
loading
ready
remote
local
stored
$__lazy_storage_$_logger
type
protoData
noResolvedValue
identical
localStore
syncStore
onRemoteChange
registered
loaded
lastSource
modelValues
remoteModelValues
readingDay
longestStreak
invalidation
accessQueue
callQueue
observations
internalValue
delegate
onObservation
change
name
observableTransaction
observableTransactionQueue
logger
ObservableDifference
Type_1
MutatingAction
Partial
model
additionalFields
delegate
_modelState
_modelSyncVersion
modelQueue
observableTransaction
enableCloudSync
coherenceSyncManager
crdtContext
cancellables
modelCapsule
logger
identicalModel
mergedModelNotSerializable
ObservableDifference
Type_1
Type_2
MutatingAction
Partial
Type_3
readingTime
readingGoal
additionalFields
days
totalTime
lastDayStreakOrdinal
months
streakRecords
yearMonth
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>bookdatastored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.bookdatastored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>764.1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14A6200i</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.0</string>
<key>DTSDKBuild</key>
<string>20A5283e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.0.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A6200i</string>
<key>MinimumOSVersion</key>
<string>16.0</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2019 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>612006184</string>
<key>application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.chronoservices</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
<string>com.apple.iBooks.cloudData</string>
<string>com.apple.iBooks.secureData</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.iBooks</string>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.iBooks</string>
</dict>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.iBooks.secureData</key>
<string>iBooksSecureData</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.media-asset-download.can-specify-destination-url</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.access.modify</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.manager.access.read</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceMediaLibrary</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.iBooks</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/HTTPStorages/com.apple.bookdatastored/</string>
<string>/Media/iTunes_Control/iTunes/</string>
<string>/Library/Caches/com.apple.bookdatastored/</string>
<string>/Library/Caches/com.apple.AppleMediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.adid</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.apsd</string>
<string>com.apple.medialibraryd.xpc</string>
<string>com.apple.cloudd</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.chronoservices</string>
<string>com.apple.kvsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
<string>com.apple.AppleMediaServices</string>
<string>com.apple.bookdatastored</string>
<string>group.com.apple.iBooks</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.nano-preference.read-write</key>
<array>
<string>com.apple.NanoMusicSync</string>
</array>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.bookdatastored</string>
<key>com.apple.security.ts.ubiquity</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>fairplay-client</key>
<string>1328318286</string>
</dict>
</plist>
goal
date
