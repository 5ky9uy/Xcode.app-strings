SiriPhone
FaceTimeNoFanOut
CRRFullRecommendation
CRRHandleRecommendation
FaceTimeInvitation
v8@?0
com.apple.TelephonyUtilities.PhoneIntentHandler.%@
B16@?0@"TUConversation"8
Voicemail search performed on a mock voicemail handler with no mock voicemails
B24@?0@"<SearchCallHistoryVoicemail>"8@"NSDictionary"16
Attempting to add a score for an entity not part of original entity set
Attempting to add a score reason for an entity not part of the original entity set
%ld: %@
Resolved %ld entities. Result = %@
%ld%@: %@
 (chosen)
Success
Confirm
Disambiguate
Unknown
B16@?0@"<SearchCallHistoryVoicemail>"8
B16@?0@"VMVoicemail"8
com.apple.siri.phone.IntentHandler.StartCall.ResolveContacts.SiriMatches
siriMatchesCount
matchesByIdCount
matchesByNameCount
siriLocale
@"NSDictionary"8@?0
-[AFSettingsConnection(IntentHandler) startAudioPlayback:completion:]
 enableTelemetry=YES 
v16@?0@"NSError"8
-[PlayVoicemailIntentHandler endPlayback]
-[PlayVoicemailIntentHandler handlePlayVoicemail:completion:]
-[PlayVoicemailIntentHandler handlePlayVoicemail:completion:]_block_invoke
v12@?0B8
-[PlayVoicemailIntentHandler _playVoicemail:completion:]
-[PlayVoicemailIntentHandler _playVoicemail:completion:]_block_invoke
v32@?0@"IntentHandlerAndIdentifier"8Q16^B24
com.apple.private.alloy.dropin.communication
answered = %d
originated = %d
duration = 0
duration > %f
date > %@
date < %@
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.normalizedValue == %@
ANY remoteParticipantHandles.normalizedValue IN %@
ANY remoteParticipantHandles.value == %@
ANY remoteParticipantHandles.value IN %@
ANY remoteParticipantHandles.value ==[c] %@
service_provider = %@
call_category == %@
read == %d
v16@?0@"INStringResolutionResult"8
NoLinkGenerated
LocalEmergency
NonLocalEmergency
None
Unset
1190
1191
1195
1515
1717
1777
1818
2020
9999
10111
Unexpected score based contact resolution result type.
contacts
@16@?0@"INScoredPerson"8
emergency contact
Persons matching resolved handle should not be nil.
Persons matching handle to confirm should not be nil.
Persons matching handle to disambiguate should not be nil.
Unexpected score based handle resolution result type.
Call Recency
Favorites entry for telephony call with this handle
Favorites entry for this contact
InCallService
/Applications/InCallService.app
B24@?0@"INPerson"8@"NSDictionary"16
v32@?0@"CNContact"8@"NSArray"16^B24
true
false
UseLegacyContactResolution
UseLegacyHandleResolution
SiriInference
native_flow_contact_resolution
found_in_app_contacts
v16@?0@"IMSPIChat"8
com.apple.messages.imcore.spi.qos-unspecified
Contacts map did not contain UUID of recommended contact.
v16@?0@"NSNotification"8
v24@?0@"TUConversationLink"8@"NSError"16
com.apple.calls.intenthandler
Default
SiriPhone/FaceTimeNoFanOut: %{public}@
SiriPhone/CRRFullRecommendation: %{public}@
SiriPhone/crrHandleRecommendation: %{public}@
SiriPhone/FaceTimeInvitation: %{public}@
sortMatchingContactsWithIdentifiers
Person contains %ld contact IDs. Person: %@
Looking up contact in the contact store matching identifiers: %@
Found %ld contacts matching siriMatches
Found contacts matching siriMatches
siriMatches contactIDs don't correspond to any contacts in address book.
Looking up contact in the contact store by names
Error performing contact search: %@
contactsMatchingIdentifiers
Error performing contact search by name: %@
Found %ld contacts in search by name
contactsMatchingName
Could not determine ISO Country Code from Mobile Country Code: %@
Could not determine mobile country code from Core Telephony Subscription Context. Error: %@
Could not determine Core Telephony Subscription Info. Error: %@
Resolved relevant ISO country codes: %@
[WARN] Cellular service is not available for SIM. Registration Status: %@ Subscription context: %@
Could not determine registration status from Core Telephony Subscription Context. Error: %@
[WARN] Determined cellular service is unavailable.
SimpleConversationFilter: matchesCallGroup=%@
SimpleConversationFilter: matchesParticipantCount=%@
handlesMatchingPerson
Looking up contact in the contact store matching handle: %@
Could not construct contact search predicate from handle: %@
No contacts match handle
[WARN] Multiple contacts match handle, using the first one arbitrarily
personMatchingHandle
App supports INStartCallIntent - prefer this over deprecated calling intents.
Error when fetching application record for appId: %@, error: %@
Got a SearchCallHistory intent: %@
Start Date  : %@
End Date    : %@
Recipient   : %@
Capabilities: %lx (audio: %d | video: %d)
PreferredCallProvider: %@
Types       : %lx
Unseen     : %@
Type indicates we should be searching for voicemail. Matching voicemails to this intent
Rejecting voicemail because it is deleted or trashed: %@
Rejecting voicemail because a recipient was specified, but this voicemail has no senderDestinationID: %@
Rejecting voicemail because senderDestinationID does not match requested recipient: %@
Rejecting voicemail because voicemail.date is before requested startDate: %@
Rejecting voicemail because voicemail.date is after requested endDate: %@
Rejecting voicemail because only unread voicemails were requested, but this one is marked as read: %@
Rejecting voicemail because only read voicemails were requested, but this one is marked as unread: %@
Truncated matching voicemails to %ld objects: %@
Voicemails (%@) -> callRecords (%@)
Visual Voicemail is not set up yet
Calling completion block with response: %@
resolveRecipientForSearchCallHistory: %@
No recipient specified, returning notRequired
Handle is present. Simply using the recipient to resolve with: %@
No contacts match the specified recipient, returning unsupported (a.k.a. notFound)
Recipient contains siriMatches, preserving those and returning success
Resolving with: %@
[WARN] Could not determine voicemail.senderDestinationID
[WARN] person in callRecord is nil
Performing call history lookup
Unhandled call record type options: %ld
Unhandled call capability: %ld
Using predicate: %@
Call history search results: %@
callRecords: %@
%s Retrieved voicemail data, attempting to play via assistantd
 enableTelemetry=YES 
voicemailPlaybackMinusDuration
%{public, signpost.description:end_time}llu, %s
%s Observed playback ended, e.g. user dismissed siri
%s handlePlayVoicemail: %@
%s VVM is online and subscribed.
%s Found voicemail with the given identifier (%@). Returning success
%s Voicemail completed playing. Calling completion block with success response: %@
%s [WARN] Screen time restricted playback of voicemail: %@
%s [WARN] Voicemail with the given identifier was not found
%s [WARN] VVM is not online and subscribed. Returing that configuration is required
%s Attempting to play voicemail: %@
%s Error playing voicemail: %@
%s Voicemail completed successfully
Handling INAddCallParticipantIntent: %@
Adding participant %@ to the conversation: %@
Adding participant to a 1:1 FT call with no backing TUConversation: %@
Resolving participants: %@
CRR chose 1 INPerson but contact has no handle.
Intent Extension initialized
registerForCallbacksForProvider did not complete before the %ld second timeout.
HangUpIntentHandlerWaitForProvider
No handler for intent: %@
[WARN] Intent does not have an identifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
[WARN] Attempting to update recently used intent handler cache for an intent with no intentIdentifier. Ignoring.
HangUpIntentHandlerRegisterForProvider
Registering for drop-in calls
Unable to register for drop-in calls: %{public}@
Registered for drop-in calls
Received Siri request to identify incoming caller: %@
An incoming call exists with handle %@
Incoming call is from person: %@
Incoming caller is a private number
No incoming call exists. Looking up last missed call...
Last missed call is: %@
Inferring outgoing callStatus requirement from the presence of redial destination type and unspecified recordTypeForRedialing.
Unexpected callTypes received, ignoring value.
No preferredCallProvider specified and thirdParty redial is enabled, not filtering by provider
No preferredCallProvider specified and thirdParty redial is not enabled. Filtering for 1P calls.
Unrecognized PreferredCallProvider enum value, skipping provider predicate.
ThirdParty redial is enabled, using redial predicate that includes search for non-normalized handle values.
ThirdParty redial is not enabled, using normal recent call predicate that includes search for non-normalized handle values.
Facetime No Fan Out is true
Handling start call intent: %@
FaceTimeInvitation Enabled for faceTime link: %@
Configuring invitation preferences on FaceTime join request.
Calling completion block with response: %@ user activity: %@
handleStartCall
found a FaceTimeable personHandle: %@
found a non-FaceTimeable personHandle: %@
Extracting Handles From Intent: %@
Skipping IDS query lookup as all handles have been resolved.
Determining response for dial request: %@
Redial/callback to 3P call history entry.
useDeprecatedCallingIntents: %@
Dial request was restricted due to screen time policy.
Dial request was restricted due to downtime policy.
The call is initiated on a HomePod but the companion device already has a call ringing.
The call is initiated on a HomePod but the companion device already has a call in progress.
Dial request was for FaceTime provider and video but FaceTime video is not enabled. Returning reponse that app configuration is required
Dial request was for FaceTime provider and audio but FaceTime audio is not enabled. Returning reponse that app configuration is required
User activity was nil. Returning failure.
Dial Request invalid: %@
Emergency call requested, will always try to place the call, skipping provider and cellular service availability checks.
Call requested from Watch, will always try to place the call, skipping provider and cellular service availability checks.
Dial Request was for Telephony, but supportsTelephonyCalls was not true
Dial request was for telephony provider but airplane mode is enabled
Dial request was for telephony provider but no cellular service was available
responseForDialRequest
Determining response for join request: %@
Join request was restricted due to some restrictions from all members.
Join request was for FaceTime provider and video but FaceTime video is not enabled. Returning reponse that app configuration is required
Join request was for FaceTime provider and audio but FaceTime audio is not enabled. Returning reponse that app configuration is required
responseForJoinRequest
Confirm start audio call: %@
Join request was restricted due to some restrictions with some members (but not all).
Even though destinationType is normal, user specifically asked for a emergency number
Contact to redial/call back is an emergency number. Requiring intent confirmation.
Contact to redial/call back is NOT an emergency number.
Making an emergency call, sending UserConfirmationRequired with emergency flag = YES
confirmStartCall
Resolving callRecordToCallBack for start call: %@
Calling completion block with result: %@
resolveCallRecordToCallBack
Resolve destination type for start call: %@
%@ is an emergency handle. Resolving to an emergency call
%@ is not an emergency handle. Do not need special resolving.
Could not determine if handle to dial is an emergency handle because handle has not yet been resolved
resolveDestinationType
Intent's contact has no display name. Looking up the list of emergency handles available on this device
There are more than one number that could be dialed. Prompting to disambiguate between them using these people: %@
Only a single emergency number to call. Resolving to that number.
[WARN] User asked to call emergency services. Emergency provider does not have multiple handles, and call can be completed without specifying one. Returning not required.
Resolving contacts for start call intent: %@
[WARN] Intent includes an emergency person and a non-emergency person. Returning success for non-emergency person so emergency person can be properly resolved. Person: %@
Detected foreign emergency label, calling completion block early: %@
Resolution not required for voicemail destination
Resolution for emergency destination
Intent's contact has a personHandle.value set on an emergency call. Resolving to that value.
Resolution for redial
recentCall for group facetime: %@
Converted INCallRecord has no caller. Returning unsupported
Calling completion block with resolution results: %@
resolveContacts
Resolving call capability for start call intent: %@
Returning call capability resolution result: %@
resolveCallCapability
[WARN] Unable to infer callCapability from call to redial because the recent call was nil
Inferring audio call capability from call to redial
Inferring video call capability from call to redial
[WARN] Unable to infer callCapability from call to redial because media type of that call was unknown.
Call capability is already set, no inferring needed
Inferring audio callCapability because provider is Telephony.
Inferring video callCapability because provider is FaceTime and video is supported.
Inferring audio callCapability because provider is FaceTime and audio is supported
[WARN] Unable to infer callCapability. Provider is Facetime, but neither facetime audio nor video calling are supported.
Changing callCapability from video to audio because the current idiom only supports audio
Returning call Capability %ld
Facetime Video calling is unavailable, returning call capability unsupported reason video call unsupported.
deviceIdiom %ld is an audio only device idiom.
This Mac has no attached camera.
deviceIdiom %ld supports video calling.
Call capabilities do not support FaceTime video calls
Devices primary display is disabled, e.g. user is on carDND mode. 
GroupFaceTime is disabled for China SKU devices
Resolving faceTimeLink for start call intent: %@
resolveFaceTimeLink
Returning empty string as this is a telephony call or featureflag is disabled or destinations was empty
No non-FaceTime handles found. Returning nil.
This is watchOS or tvOS. Sending a placeholder string for returning unsupported dialog
Link generation failed and nil was returned. Setting empty string.
Returning FaceTimeLink resolution result: %@
Resolving call provider for start call intent: %@
The call provider %@ for redial or call back is not supported
Telephony call was requested from a watch or for an emergency call and telephony is not supported. isWatch: %d, isEmergencyCall: %d
Telephony call was requested, but supportsTelephonyCalls was false
FaceTime provider is turned off in the Settings App
FaceTime provider is blocked in settings or by managed configuration
FaceTime is not supported by this device's hardware or carrier configuration
FaceTime audio calling service is not available, likely because user is not signed in
FaceTime audio call was requested, but supportsFaceTimeAudioCalls was false, and the request passed checks for FT settings-based restrictions and FT provider availability.
FaceTime video calling service is not available, likely because user is not signed in
FaceTime video call was requested, but supportsFaceTimeVideoCalls was false, and the request passed checks for FT settings-based restrictions and FT provider availability.
Group FaceTime video calls are not supported by this device's hardware or carrier configuration
Returning call provider resolution result: %@
resolvePreferredCallProvider
Looking up recentCallRecordToRedial
Using previously-resolved INCallRecord from callRecordToCallBack
Looking up recentCall by constructing query from callRecordFilter
Looking up recentCall by constructing query from intent
recentCallToRedial
Expected to map CHRecentCall to INCallRecord 1:1
predicate for recentCall: %@
callHistoryDBCallToRedial
Found recentCall: %@
Resolution needs a value for zero contacts
Attempting to resolve more than one call participant. Returning multiple contacts unsupported for each recipient.
Handle has the LocalEmergency flag. Resolving success. %@ with type: %@
Handle %@ is in the global emergency numbers list. EmergencyType is %@
It's unclear if the user literally wanted this number, or if they meant to call emergency services. Disambiguate between local and nonlocal emergency services.
Returning _INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation with alternative items: %@
Number is on the global emergency numbers list, but INPersonHandle already has the emergencyType set: %@
Number is not on the global emergency numbers list
Requested handle type is unknown, but preferredCallProvider is phone. Inferring handle type of phone number.
PreferredCallProvider is faceTime. Inferring handle type of unknown to present both phone number and email address.
Native flow contact resolver enabled.
Confident match found by NCR, uuid %@
Low-confidence (needsConfirmation) match found by NCR, uuid %@
NCR recommended needsDisambiguation for contacts, but some have the same name. Proceeding to handle disambiguation.
needsDisambiguation recommended by NCR, uuids %@
NCR found no matches for person: %@
Only one matching contact for requested handle -- proceeding to handle disambiguation: %@
Only one matching contact (regardless of requested handle): %@
Using legacy contact resolution
Resolved to %ld contacts, asking the user to disambiguate among persons: %@
ScoreBasedResolutionResult is Disambiguate, but some contacts have the same name. Proceeding to handle disambiguation.
No valid matching handle is found for the resolved contacts and this handle has been requested: %@. will attempt additional matching handles from siri matches.
Resolved to %ld matching contacts with %ld additional matching handles. Contact: %@ Handles: %@
%@ was requested but the contact doesn't an exact match. Using the only alternative instead: %@
Resolved to %ld matching contacts with %ld matching handles. Contact: %@ Handles: %@
None of the resolved contacts have a valid matching handle. Offering all handles as alternatives
Offering all handles as alternatives
Using CRR based recommendation results: %@
No resolution result resolved, adding an unsupported result
Resolved to one CRR recommended handle: %@
Resolved to more than one CRR recommended handle: %@
Resolved to one handle: %@
Resolved contacts all share a handle: treating them as the same person. Contacts: %@
Facetime call contact resolved to multiple handles. Using score based resolution model to resolve handles: %@
Facetime call resolved to multiple handles for a distinct person, preserving ambiguity. Will ring all handles. Person: %@
Facetime call resolved to multiple contacts with the same name, none of which share a handle. Disambiguating between handles.
Resolved to multiple handles, using score based resolution model to resolve handles: %@
Found no matching contact from siriMatches or name search, returning unsupported. Person: %@
Updated contact in intent: %@
resolutionResults: %@
relaying CRR recommendations
No candidates from CRR. Returning unsupported. Person: %@
Found 1 candidate with a no handle; returning unsupported. Person: %@
Found 1 candidate with no matching handle; offering other handles as alternatives
Found 1 candidate with an invalid handle type; returning unsupported. Person: %@
Found 1 candidate with unsupported MMI or USSD handle %@
Found 1 high-confidence candidate; returning success: %@
Found 1 low-confidence candidate; returning confirm: %@
Found %ld candidates; returning disambiguate
Emergency contacts detected. Inserting personHandles.
Either a mobile handle or an iPhone label was requested without any matching handle. Checking if an alternative for mobile or iPhone handles exists.
Handle %@ is MMI or USSD which is unsupported. Returning error for person: %@
The user requested a potentially invalid phone number or email, returning confirmationRequired.
There is a handle on the single contact. Format the person handle and return success with that person.
Returning confirmationRequired with person: %@
Returning confirmationRequired with person (as upstream contact resolver recommended): %@
Returning success with person: %@
Using legacy handle resolution.
Beginning score based handle resolution.
Completed score based handle resolution.
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, resolving to the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, confirming just the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). Including those multiples in the disambiguation list. %@
scoreBasedHandleResolution
Beginning call recency for handles check.
Handle %@ was a partipant in recent call %@ with country code %@.
Completed call recency for handles check.
recentCallsMatchingHandles
Beginning favorites for handles check.
No favorites entry for handle %@. No score adjustment.
Completed favorites for handles check.
favoritesAmongHandles
Beginning score based contact resolution.
Completed score based contact resolution.
scoreBasedContactResolution
Beginning call recency for contacts check.
Contact %@ was a partipant in recent call %@ with isoCountryCode %@.
Completed call recency for contacts check.
contactCallRecency
Searching call history for one call matching predicate: %@
callHistoryDBFirstRecencyCheck
Completed initial call history search with result: %@
Calculated oldest relevant date of %@ based on most recent matching call %.0f seconds ago
Searching call history for up to %ld calls matching predicate: %@
callHistoryDBSecondRecencyCheck
Completed second call history search with result: %@
No matching call history for any of the requested handles. No score adjustment.
recentCallsWithHandles
Beginning favorites for contacts check.
No favorites entry for contact %@. No score adjustment.
Completed favorites for contacts check.
favoritesAmongContacts
Found %ld alternatives when dropping label constraint.
Not dropping handle type constraint because the user requested a telephony call.
Found %ld alternatives when dropping handle and label constraint.
Handle is an emergency number, %@ is in the prioritizedSenderIdentities list
Handle is an emergency number, %@ is in the emergencyLabeledHandles list
Handle is an emergency number, %@ is in the unlabeled emergencyHandles list
Handle is not an emergency number: %@
Not applying an implicit handle type filter to an intent with an explicit handle type specified
Not applying an implicit handle type filter to an intent with an explicit call provider specified
Not applying an implicit handle type = phone number filter on a device that doesn't support telephone calls
Not applying an implicit handle type filter because there is already only one matching handle
Multiple handles match call request. Attempting to filter to just phone numbers to resolve ambiguity.
Filtered the results to only phone numbers. Remaining matches: %@
Filtering results to only phone numbers would have produced no results, not filtering.
Have previously confirmed recipient with handle %@
Have previously confirmed recipient with contactIdentifier: %@
Not requiring invalid number confirmation because recipient has already been confirmed.
Not requiring invalid number confirmation because recipient has a nonlocal emergency handle type and has already been confirmed.
Not requiring invalid number confirmation because handle is valid for country code %@
[WARN] Requested handle %@ is not valid for any of the following country codes: %@
Examining call history to determine if there is existing call history with the invalid number.
callHistoryDBForInvalidNumber
Not requiring invalid number confirmation because there are %ld recents call with %@
Did not find any matching calls with: %@
[WARN] Returning YES for shouldRequireInvalidNumberConfirmationForRecipient.
shouldRequireInvalidNumberConfirmation
Not requiring unknown recipient confirmation because recipient has already been confirmed.
Not requiring unknown recipient confirmation because requested recipient was a relation: %@
Not requiring unknown recipient confirmation because requested recipient was a manually dictated handle: %@
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients full displayName: "%@"
Not requiring unknown recipient confirmation because requested displayName "%@" matches resolved recipients displayName: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because resolved contact is a favorite. Contact: %@
Searching for recent calls using predicate: %@
callHistoryDBForUnknownRecipient
Not requiring unknown recipient confirmation because there is a recent call with one of the following handles: %@
Did not find a recent calls with any of the following handles: %@
Returning %{public}@ for shouldRequireUnknownRecipientConfirmationForRequestedRecipient.
shouldRequireUnknownRecipientConfirmation
group facetime message callGroups for intent: %@
fetching handles from spiChat: %@
updated contacts: %@
Found a favorites entry matching handle: %@
[WARN] Ignoring favorite for telephony call with an empty phone number: %@
[WARN] Ignoring favorite for telephony call without a phone number: %@
Checking if there is any call ringing currently
is there any call ringing currently? %@
Checking if there is any call in progress.
is there any call in progress? %@
SiriInference/native_flow_contact_resolution: %@
SiriInference/found_in_app_contacts: %@
spiChat person handles: %@
ConversationContactPool: Searching for %@ in caller ContactPool: %@
ConversationContactPool: Searching for %@ in participants ContactPool: %@
ConversationPersonFilter: matchesCaller=%@
ConversationPersonFilter: matchesParticipants=%@
Handling join call intent: %@
Searching for conversationId: %@ among active conversations.
Found matching conversation %@
No matching conversation. Returning failure.
Attaching TUJoinConversationRequest to UserActivity
UserActivity was nil
Confirming join call intent: %@
Resolving join call intent: %@
INCallGroupConversation already resolved.
Searching among active conversations for a matching call.
doesConversationMatch = %@ for TUConversation: %@
Found more than one matching conversation.
Found one matching conversation.
Found no matching conversations.
Calling completion on resolution result: %@
Confirming Siri request to hang up: %@
No calls exist. Returning failure.
Call exists, proceeding to handle HangUp intent.
Handling Siri request to hang up: %@
An incoming call exists. Declining it and returning success: %@
At least one call exists. Hanging up and returning success
No calls exist. Since call was hung up between confirm and handle, return success.
starting dispatch semaphore for TUIDSLookupManagerStatusChangedNotification
ending dispatch semaphore for TUIDSLookupManagerStatusChangedNotification
canonical address: %@
Failed to generate FaceTime link with error %@
Successfully generated FaceTime link: %@
Received Siri request to answer incoming call: %@
Requested to answer specific call but UUID did not match identifier of requested call
Requested identifier: %@, actual identifier: %@
An incoming call exists. Answering it and returning success
Setting endpointIDSDestination: %@
Intent contains an originatingDeviceRapportMediaSystemIdentifier: %@
Intent contains an originatingDeviceRapportEffectiveIdentifier: %@
No incoming call exists. Returning no incoming call. Recent Missed Calls: %@
Before deduping: %ld, After deduping: %ld
All persons have equivalent handle values
Converting CHRecentCall %@ to INCallRecord.
Converted this CHRecentCall previously, using cached converted INCallRecord.
[WARN] Caller ID is blocked
[WARN] Found an entry of unknown type in handleToPerson cache
person added to particpants in callrecord: %@
[WARN] Could not determine remoteParticipantHandle for CHRecentCall
serviceProvider is not FT or telephony - must be a 3P provider.
No serviceProvider found on CHRecentCall - setting preferredCallProvider to unknown.
Unrecognized INScoredPersonRecommendation
SiriInference recommended resolution result: %@
IntentHandlerFeatureFlags
NSObject
StartCallIntentHandlerUtilities
ContactResolver
DefaultCoreTelephonyDataSource
CoreTelephonyClientSubscriberDelegate
CoreTelephonyDataSource
SimpleConversationFilter
ConversationFilter
TUIntentHandler
MockVoicemailDataSource
SearchCallHistoryVoicemailDataSource
MockVoicemail
SearchCallHistoryVoicemail
ScoreBasedResolver
ScoreBasedResolutionResult
ContactPool
TelephonyUtilities
AppResolver
AppResolving
SearchCallHistoryIntentHandler
INSearchCallHistoryIntentHandling
SearchCallHistoryIntentHandlerDataSource
SiriMatchRecommendation
IntentHandlerCoreAnalyticsLogger
IntentHandlerCoreAnalyticsLogging
IntentHandler
SiriAudioPlaybackService
PlayVoicemailIntentHandler
INPlayVoicemailIntentHandling
AddCallParticipantIntentHandler
INAddCallParticipantIntentHandling
IntentRouter
IntentHandlerAndIdentifier
AndConversationFilter
ConversationFilterFactory
IdentifyIncomingCallerIntentHandler
INIdentifyIncomingCallerIntentHandling
IdentifyIncomingCallerIntentHandlerDefaultDataSource
IdentifyIncomingCallerIntentHandlerDataSource
CallHistoryDataSourcePredicate
RecentCallQuery
StartCallIntentHandler
INStartCallIntentHandling
StartCallDefaultFavoritesDataSource
FavoritesDataSource
StartCallIntentHandlerDataSource
ConversationContactPool
ConversationPersonFilter
JoinCallIntentHandler
INJoinCallIntentHandling
HangUpCallIntentHandler
INHangUpCallIntentHandling
ContactSlotResolutionHelper
FaceTimeUtilities
AnswerCallIntentHandler
INAnswerCallIntentHandling
AnswerCallIntentHandlerDefaultDataSource
AnswerCallIntentHandlerDataSource
INPersonWrapper
INPersonDeduplicator
CallRecordConverter
CRRRecommendation
T@"<CallHistoryDataSource>",R,N
T#,R
T@"NSArray",R,C,N,V_allContacts
T@"<AppResolving>",&,N,V_appResolver
Td,N,V_duration
T@"<CoreTelephonyDataSource>",R,N
_callCapability
T@"<FavoritesDataSource>",R,N,V_favoritesDataSource
_online
T@"<IntentHandlerCoreAnalyticsLogging>",&,N,V_coreAnalyticsLogger
_subscriberCountryCodeDidChange
T@"<SearchCallHistoryVoicemailDataSource>",R,N
address
T@"<StartCallIntentHandlerDataSource>",&,N,V_dataSource
bundleWithPath:
T@"<TUContactsDataSource>",R,N,V_contactsDataSource
callsInProgress
T@"CNFavorites",R,N,V_favoritesController
contactProperty
T@"ContactPool",&,N,V_participantsPool
dataURL
T@"CoreTelephonyClient",R,N,V_coreTelephonyClient
destinationType
T@"IDSSignInController",R,N,V_signInController
faceTimeBlocked
T@"INPerson",R,N,V_inPerson
groupId
T@"IntentHandlerFeatureFlags",&,N,V_featureFlags
handler
T@"NSArray",C,N,V_entities
hasCurrentCalls
T@"NSArray",C,N,V_resolutionSummary
initWithPerson:
T@"NSArray",R,C,N
isFaceTimeable:
T@"NSArray",R,C,N,V_contactIdentifiers
isValid
T@"NSArray",R,N,V_filters
lowercaseString
T@"NSCache",&,N,V_handleToPersonCache
T@"NSCache",R,N,V_identifierToContactCache
persons
T@"NSDate",R,N
providerManager
T@"NSMutableArray",&,N,V_recentIntentHandlersAndIdentifiers
removeObserver:
T@"NSMutableDictionary",&,N,V_scoreReasonsByEntity
T@"NSMutableOrderedSet",&,N,V_handlesConfirmed
setCallRecords:
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
setPhonemeData:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
trashed
T@"NSString",C,N,V_senderDestinationID
.cxx_destruct
T@"<SearchCallHistoryIntentHandlerDataSource>",R,N,V_dataSource
T@"<AnswerCallIntentHandlerDataSource>",&,N,V_dataSource
TB,N,GisSubscribed,V_subscribed
T@"<CallHistoryDataSource>",R,N,V_callHistoryDataSource
T@"<FavoritesDataSource>",R,N
_caller
T@"<IdentifyIncomingCallerIntentHandlerDataSource>",&,N,V_dataSource
_originatingDeviceIDSIdentifier
T@"<IntentHandlerCoreAnalyticsLogging>",R,N,V_coreAnalyticsLogger
_unread
T@"<SiriAudioPlaybackService>",&,N,V_audioPlaybackService
allKeys
T@"<TUContactsDataSource>",R,N
callFilterStatusForDialRequest:
T@"CNContactStore",R,N,V_contactStore
canonicalAddressesForAddresses:
T@"ContactPool",&,N,V_callerPool
containsObject:
T@"ContactPool",R,N,V_availableContacts
deleted
T@"FaceTimeUtilities",&,N,V_faceTimeUtilities
entries
T@"INPerson",R,N,V_caller
filters
T@"INPerson",R,N,V_unresolvedPerson
handlePlayVoicemail:completion:
T@"NSArray",C,N,V_allMockVoicemails
handles
T@"NSArray",C,N,V_participants
initWithHandle:
T@"NSArray",C,N,V_resolvedEntities
initWithPersonResolutionResult:
T@"NSArray",R,C,N,V_allRelevantISOCountryCodes
isProxy
T@"NSArray",R,C,N,V_persons
isVideo
T@"NSArray",R,N,V_participants
normalizedValue
T@"NSCache",&,N,V_recentCallIdToCallRecordCache
numberWithBool:
T@"NSDate",&,N,V_date
predicateForCallsWithNoDuration
T@"NSDictionary",R,C,N,V_contactByIdCache
release
T@"NSMutableDictionary",&,N,V_scoreByEntity
serviceProvider
T@"NSMutableOrderedSet",&,N,V_contactIdentifiersConfirmed
setAppResolver:
T@"NSObject<OS_dispatch_queue>",&,N
setContactIdentifiersConfirmed:
T@"NSObject<OS_dispatch_queue>",R,N,V_coreTelephonyClientQueue
subscriberCountryCodeDidChange:
T@"NSString",C,N,V_intentIdentifier
updateScoreBasedContactResolver:forRecentCallsMatchingContacts:
T@"NSString",R,C
T@"NSString",R,C,N
T@"RadiosPreferences",R,N,V_radiosPreferences
T@"ScoreBasedResolutionResult",&,N,V_cachedResult
T@"ScoreBasedResolutionResult",R,N
T@"TUCallCenter",&,N,V_callCenter
T@"TUCallCenter",R,N
T@"TUCallCenter",R,N,V_callCenter
T@"TUCallProviderManager",R,N
T@"TUCallProviderManager",R,N,V_providerManager
T@"TUHandle",R,N
T@"TUHandle",R,N,V_tuHandle
T@"TUSenderIdentityClient",R,N
T@"TUSenderIdentityClient",R,N,V_senderIdentityClient
T@"VMVoicemailManager",&,N,V_voicemailManager
T@,&,N,V_handler
T@?,C,N,V_predicate
TB,N,GisDeleted,V_deleted
TB,N,GisOnline,V_online
TB,N,GisTrashed,V_trashed
TB,N,GisUnread,V_unread
TB,N,V_confirmationEnabled
TB,N,V_includeAllEntitiesInDisambiguation
TB,N,V_includeThirdPartyCalls
TB,N,V_subscriberCountryCodeDidChange
TB,R,N
TB,R,N,GisAirplaneModeEnabled
TB,R,N,GisDeleted
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisFaceTimeAudioBlocked
TB,R,N,GisFaceTimeVideoBlocked
TB,R,N,GisOnline
TB,R,N,GisSubscribed
TB,R,N,GisTrashed
TB,R,N,GisUnread
TQ,N,V_callTypes
TQ,N,V_identifier
TQ,N,V_resolutionResultType
TQ,R
TQ,R,N
Td,R,N
Tq,N,V_callCapability
Tq,N,V_confirmationMargin
Tq,N,V_destinationType
Tq,N,V_preferredCallProvider
Tq,N,V_successfulResolutionMargin
Tq,R,N,V_recommendationType
Tq,R,N,V_type
URLWithString:
UTF8String
UUID
UUIDString
_allContacts
_allMockVoicemails
_allRelevantISOCountryCodes
_appResolver
_appearsToBeEmail
_appearsToBePhoneNumber
_applyImpliedFilterToPhoneNumberOnlyMatchesIfApplicableForPersonsByContact:requestedHandleType:preferredCallProvider:
_audioPlaybackService
_availableContacts
_cachedResult
_cachedSiriLanguageCode
_callCenter
_callHistoryDataSource
_callTypes
_callerPool
_confirmationEnabled
_confirmationMargin
_contactByIdCache
_contactIdentifiers
_contactIdentifiersConfirmed
_contactPoolForConversation:
_contactStore
_contactsDataSource
_contactsMatchingIdentifiers:
_contactsMatchingNamesForPerson:
_conversationProviderManager
_coreAnalyticsLogger
_coreTelephonyClient
_coreTelephonyClientQueue
_dataSource
_date
_deleted
_destinationType
_dispatchQueue
_duration
_entities
_faceTimeUtilities
_favoritesController
_favoritesDataSource
_featureFlags
_filters
_group
_handleToPersonCache
_handler
_handlesConfirmed
_identifier
_identifierToContactCache
_identifiersForRecommendedPerson:
_idiom
_inPerson
_inPersonsFromContact:withRequestedType:requestedLabel:isoCountryCodes:
_includeAllEntitiesInDisambiguation
_includeThirdPartyCalls
_initWithIntent:
_intentIdentifier
_isOwnedByCurrentUser
_isPrimaryDisplayDisabled
_lookup:
_matchesCallerFilter:
_matchesParticipantsFilter:
_originatingDeviceRapportEffectiveIdentifier
_originatingDeviceRapportMediaSystemIdentifier
_participants
_participantsPool
_persons
_playVoicemail:completion:
_predicate
_preferredCallProvider
_providerManager
_queue
_radiosPreferences
_recentCallIdToCallRecordCache
_recentIntentHandlersAndIdentifiers
_recommendationType
_resolutionResultType
_resolutionSummary
_resolvedEntities
_responseForMatchingConversation:intent:
_scoreByEntity
_scoreReasonsByEntity
_sendSiriMatchAnalyticsEventForIdentifiers:contactsMatchingId:contactsMatchingName:
_senderDestinationID
_senderIdentityClient
_signInController
_subscribed
_successfulResolutionMargin
_trashed
_tuHandle
_type
_unresolvedPerson
_userInput
_voicemailManager
absoluteString
actionType
activeConversationForCall:
activeConversations
addCallParticipant:toCall:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addRemoteMembers:otherInvitedHandles:toConversation:
addScore:forEntities:reason:
addScore:forEntity:reason:
airplaneMode
airplaneModeEnabled
allContactIds
allContacts
allCountryCodesRelevantToCall:
allMockVoicemails
allObjects
allRelevantISOCountryCodes
allTUHandles
allValues
alternatives
andPredicateWithSubpredicates:
answerWithRequest:
anyContactsHaveSameName:
appResolver
appSupportsDeprecatedCallingIntents:
array
arrayWithCapacity:
arrayWithObjects:count:
audioPlaybackService
audioRoute
authTokenChanged:
autorelease
availableContacts
beginQueryWithDestinations:
boolForKey:
boolValue
buildConfirmationResultForContact:withReason:
buildDisambiguationResultForContacts:
bundleIdentifier
cachedResult
callCapabilities
callCapability
callCapabilityFromRecentCall:
callCapabilityPredicate
callCenter
callCenterWithQueue:
callCountWithPredicate:
callFilterController
callGroup
callGroups
callHistoryDataSource
callIdentifier
callRecordFilter
callRecordForRecentCall:
callRecordForRecentCall:withContactsDataSource:withCallProviderManager:withCurrentISOCountryCodes:
callRecordIdentifier
callRecordToCallBack
callRecordTypePredicates
callRecordsForRecentCalls:withContactsDataSource:withCallProviderManager:
callRecordsForRecentCalls:withContactsDataSource:withCallProviderManager:withCurrentISOCountryCodes:
callRecordsForRecentCallsWithRecordTypeOptions:startDate:endDate:recipient:capabilities:preferredProvider:maximumRecordCount:unseen:
callRecordsForVoicemails:
callRinging
callStatus
callTypes
callUUID
caller
callerIdIsBlocked
callerPool
callerPoolContainsOneOf:
callingBlocked
callsWithPredicate:limit:offset:batchSize:
canAttemptEmergencyCallsWithoutCellularConnection
canAttemptTelephonyCallsWithoutCellularConnection
caseInsensitiveCompare:
class
coalescedCallsWithPredicate:limit:offset:batchSize:
code
compare:
compatibilityObject
componentsForContact:
confirmAddCallParticipant:completion:
confirmAnswerCall:completion:
confirmHangUpCall:completion:
confirmIdentifyIncomingCaller:completion:
confirmJoinCall:completion:
confirmPlayVoicemail:completion:
confirmSearchCallHistory:completion:
confirmStartCall:completion:
confirmationEnabled
confirmationMargin
confirmationRequiredWithPersonToConfirm:
confirmationRequiredWithPersonToConfirm:forReason:
conformsToProtocol:
contactByIdCache
contactForIdentifier:keysToFetch:
contactIdentifier
contactIdentifiers
contactIdentifiersConfirmed
contactStore
contactWithId:
contactWithMostHandles:
contacts
contactsAvailableInPool:
contactsDataSource
contactsShareHandleValue:
contactsWithIds:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:
conversationId
conversationLink
conversationLinkForURL:
conversationManager
copy
copyMobileCountryCode:error:
copyRegistrationStatus:error:
coreAnalyticsLogger
coreTelephonyClient
coreTelephonyClientQueue
coreTelephonyDataSource
count
countByEnumeratingWithState:objects:count:
crrFullRecommendation
crrHandleRecommendation
customIdentifier
dataSource
dataWithContentsOfURL:
date
dateByAddingTimeInterval:
dateCreated
dateWithTimeIntervalSinceNow:
debugDescription
dedupeINPersons:
defaultCenter
description
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
destinationWithURI:
dialType
dictionaryWithObjects:forKeys:count:
didDetectSimDeactivation:info:
directFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
disambiguationItems
disambiguationWithPeopleToDisambiguate:
disconnectCall:withReason:
disconnectCurrentCallAndActivateHeld
dispatchQueue
displayName
duration
emailAddresses
emergencyHandles
emergencyLabeledHandles
emergencyProvider
emergencyType
emergencyTypeToString:
endDateComponents
endPlayback
endpointRapportEffectiveIdentifier
endpointRapportMediaSystemIdentifier
entities
entriesForContact:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
exceptionWithName:reason:userInfo:
existingHandlerForIntentIdentifier:
expectFoundInAppsContacts
expectUpstreamContactRecommendation
extractHandlesFromIntent:faceTimeMemberHandles:nonFaceTimeMemberHandles:
extractRecommendation
faceTimeAudioBlocked
faceTimeInvitationEnabled
faceTimeLink
faceTimeNoFanOutEnabled
faceTimeType
faceTimeUtilities
faceTimeVideoBlocked
favoritesController
favoritesDataSource
featureFlags
fetchSPIHandlesForGroupID:
filterForCallGroup:
filterForParticipantCount:
filteredArrayUsingPredicate:
firstObject
floatValue
frontmostAudioOrVideoCall
generateAdditionalMatchingHandles:resolvedContacts:requestedHandleType:requestedHandleLabel:
generateFaceTimeLink:
generateLinkWithInvitedMemberHandles:completionHandler:
getAlternativesForContact:forRequestedHandleType:forCallProvider:
getSubscriptionInfoWithError:
globalEmergencyNumbers
groupConversation
groupConversationFilter
groupName
handle
handleAddCallParticipant:completion:
handleAnswerCall:completion:
handleHangUpCall:completion:
handleIdentifyIncomingCaller:completion:
handleJoinCall:completion:
handleSearchCallHistory:completion:
handleStartCall:completion:
handleToPersonCache
handleWithDestinationID:
handleWithPerson:
handlerForIntent:
handlesConfirmed
hasCamera
hasFavoritesEntryForContact:
hasFavoritesEntryForTelephonyCallWithPhoneNumber:isoCountryCodes:
hash
haveAlreadyConfirmedRecipient:
identifier
identifierToContactCache
image
inPerson
inPersonFromContact:handleValue:handleType:handleLabel:
includeAllEntitiesInDisambiguation
includeThirdPartyCalls
incomingCall
incomingVideoCall
inferCallCapabilityForPreferredCallProvider:recentCall:initialCallCapability:idiom:isDisplayDisabled:
init
initForActiveVoicemailAccountWithVoicemails:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCall:
initWithCallCenter:
initWithCallCenter:contactsDataSource:
initWithCaller:participants:dataSource:
initWithCapacity:
initWithCode:userActivity:
initWithContactStore:
initWithContacts:
initWithConversation:
initWithConversationId:caller:otherParticipants:callGroup:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithDataSource:
initWithDataSource:logger:
initWithDeferredFormat:fromTable:bundle:arguments:
initWithDialIntent:providerManager:contactsDataSource:senderIdentityClient:
initWithDispatchQueue:
initWithEntities:
initWithFeatureFlags:
initWithFeatureFlags:faceTimeUtilities:
initWithFilters:
initWithFullyResolvedPerson:
initWithHandleType:notificationStyles:
initWithHandler:intentIdentifier:
initWithHandles:
initWithINPerson:
initWithIdentifier:dateCreated:callRecordType:callCapability:callDuration:unseen:participants:numberOfCalls:isCallerIdBlocked:
initWithIdentifier:dateCreated:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:participants:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
initWithParticipants:destinationType:callTypes:callCapability:preferredCallProvider:
initWithParticipants:destinationType:callTypes:callCapability:preferredCallProvider:includeThirdPartyCalls:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:
initWithPredicate:
initWithQueue:
initWithRecommendationType:persons:
initWithRemoteMembers:otherInvitedHandles:
initWithSet:
initWithSiriInferencePerson:
initWithType:contactIdentifiers:
initWithType:resolvedEntities:resolutionSummary:
initWithType:value:
initWithUnresolvedPerson:availableContacts:
initWithUserActivity:
initWithValue:type:label:
initWithValue:type:label:emergencyType:
initiator
inputDevices
insertObject:atIndex:
integerValue
intentHasUnresolvedLocalEmergencyContact:
intentIdentifier
interpretContactResolutionRecommendation:participant:
intersectSet:
intersectsSet:
isAirplaneModeEnabled
isBlocked
isCanonicallyEqualToHandle:isoCountryCode:
isCellularServiceAvailable
isChinaSKUDevice
isConversation
isDeleted
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
isEmergencyHandle:
isEmergencyNumberForDigits:senderIdentityUUID:
isEqual:
isEqualToIgnoringCase:
isEqualToString:
isFaceTimeAudioAvailableForAnyDestinationInDestinations:
isFaceTimeAudioBlocked
isFaceTimeEnabled
isFaceTimeEnabledInSettings
isFaceTimeInvitationEnabled
isFaceTimeMultiwayAvailableForAnyDestinationInDestinations:
isFaceTimeNoFanOutEnabled
isFaceTimeProvider
isFaceTimeVideoAvailableForAnyDestinationInDestinations:
isFaceTimeVideoBlocked
isFoundInAppsSuggestion
isGFTDisabledForChinaSKU:
isGreenTea
isGroupCall
isKindOfClass:
isMMIOrUSSDNumber:
isMe
isMemberOfClass:
isOnline
isRestrictedMessage:
isSendingVideo
isSubscribed
isSubsetOfSet:
isSuggested
isTelephonyProvider
isTrashed
isUnread
isUnresolvedLocalEmergencyContact:
isValidForISOCountryCode:
isVideoEnabled
isoCountryCode
itemToConfirm
joinConversationWithConversationRequest:
keysToFetch
label
length
localizeForLanguage:
localizedEmergencyString:
localizedStringForLabel:
localizedStringFromPersonNameComponents:style:options:
logOutgoingCallToHandle:
logSiriMatchEvent:matchesByIdCount:matchesByNameCount:siriLocale:
longLongValue
mainQueue
makeActivityWithIntent:dialRequestAttachment:
makeActivityWithIntent:joinRequestAttachment:
makeFilterForINCallGroupConversationFilter:contactsDataSource:
markVoicemailAsRead:
matchCallerAndParticipantsExactly
matches:
matchingContactsForPerson:
maximumRecordCountForCallRecordTypeOptions:
mediaType
messagesGroupName
nameComponents
nameForResolutionResultType:
needsValue
normalizedDestination
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notRequired
null
numberOfOccurrences
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
online
orPredicateWithSubpredicates:
parseEmergencyContacts:usingExistingResult:
participants
participantsPool
participantsPoolContainsOneOf:
participantsPredicatesWithContactsDataSource:contactIdentifierCache:coreTelephonyDataSource:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personHandle
personResolutionResultsForIntent:
phoneNumberWithStringValue:
phoneNumbers
phonemeData
plugInKitPlugins
populatePersonsByTUHandleFrom:personsByTUHandle:tuHandleOrderedSet:
predicate
predicateForAudioCalls
predicateForCallToCallBackWithAnyOfTheseRemoteParticipantHandles:isoCountryCodes:
predicateForCallsAfterDate:beforeDate:
predicateForCallsThatAreRead:
predicateForCallsThatWereAnswered:
predicateForCallsThatWereOriginated:
predicateForCallsWithAnyOfTheseRemoteParticipantHandles:isoCountryCodes:
predicateForCallsWithCallCategory:
predicateForCallsWithDurationGreaterThan:
predicateForCallsWithDurationLongerThanImmediateHangUp
predicateForCallsWithNumberOfRemoteParticipants:
predicateForCallsWithServiceProvider:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingName:options:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateForFaceTimeCalls
predicateForMissedCallsSinceDate:
predicateForRecentCallWithContactsDataSource:contactIdentifierCache:coreTelephonyDataSource:
predicateForRemoteParticipantsWithNormalizedValues:
predicateForRemoteParticipantsWithValues:
predicateForRemoteParticipantsWithValues:caseInsensitiveValues:normalizedValues:
predicateForRemoteParticipantsWithValuesCaseInsensitive:
predicateForTelephonyCalls
predicateForTelephonyOrFaceTimeCalls
predicateForVideoCalls
predicateWithBlock:
predicateWithFormat:
predicateWithValue:
preferredCallProvider
preferredCallProviderFor:
preferredCallProviderFromRecentCall:
preferredCallProviderPredicate
prioritizedSenderIdentities
prlVersionDidChange:version:
provider
providerForRecentCall:
providerId
queue
radiosPreferences
raise
read
recentCallIdToCallRecordCache
recentCallRecordToRedialForIntent:
recentCallToRedialForQuery:
recentCallsWithHandles:telephonyOnly:
recentIntentHandlersAndIdentifiers
recipient
recommendation
recommendationType
recommendedResult
recordTypeForRedialing
registerForCallbacksForProvider:completionHandler:
registerForProvider
relationship
relayCRRRecommendationForPerson:intent:
remoteMembers
remoteParticipantHandles
removeLastObject
removeObjectAtIndex:
requireScoreBasedResolutionForGFT:numberOfContactsCount:
resolutionResultCode
resolutionResultDisambiguationWithItemsToDisambiguate:
resolutionResultForCallCapability:idiom:withDisplayDisabled:
resolutionResultForEmergency
resolutionResultForPersonWithResolvedContactName:resolvedPerson:resolvedContact:contactIdentifiersRequiringConfirmation:
resolutionResultForPersonWithResolvedHandleValue:
resolutionResultType
resolutionResultUnsupportedWithReason:alternativeItems:
resolutionSummary
resolveCallCapabilityForStartCall:withCompletion:
resolveCallRecordToCallBackForStartCall:withCompletion:
resolveCallTypeForSearchCallHistory:withCompletion:
resolveCallTypesForSearchCallHistory:withCompletion:
resolveContactsForStartCall:withCompletion:
resolveContactsFromCallGroups:
resolveDateCreatedForSearchCallHistory:withCompletion:
resolveDestinationTypeForStartCall:withCompletion:
resolveFaceTimeLinkForStartCall:withCompletion:
resolveGroupConversationForJoinCall:withCompletion:
resolveParticipantsForAddCallParticipant:withCompletion:
resolvePreferredCallProviderForStartCall:withCompletion:
resolvePreferredContactFromContacts:
resolvePreferredHandleFromHandles:contactIdentifiersRequiringConfirmation:telephonyOnly:
resolveRecipientForSearchCallHistory:withCompletion:
resolveUnseenForSearchCallHistory:withCompletion:
resolvedEntities
resolvedValue
respondsToSelector:
responseForDialRequest:intent:
responseForJoinRequest:intent:callProvider:
restrictedContacts:callProvider:
result
retain
retainCount
reverseObjectEnumerator
runIDSQueryForStartCallIntent:
runNativeContactResolutionOnParticipant:
score
scoreByEntity
scoreReasonsByEntity
scoredAlternatives
self
senderDestinationID
senderIdentityClient
setAllMockVoicemails:
setAudioPlaybackService:
setBehavior:
setCachedResult:
setCallCapability:
setCallCenter:
setCallTypes:
setCallerPool:
setConfirmationEnabled:
setConfirmationMargin:
setConfirmationReason:
setCoreAnalyticsLogger:
setDataSource:
setDate:
setDelegate:
setDeleted:
setDestinationType:
setDispatchQueue:
setDuration:
setEndpointIDSDestination:
setEndpointRapportEffectiveIdentifier:
setEndpointRapportMediaSystemIdentifier:
setEntities:
setFaceTimeUtilities:
setFeatureFlags:
setHandleToPersonCache:
setHandler:
setHandlesConfirmed:
setHungUpCallType:
setIdentifier:
setIncludeAllEntitiesInDisambiguation:
setIncludeThirdPartyCalls:
setIntentIdentifier:
setInvitationPreferences:
setObject:forKey:
setObject:forKeyedSubscript:
setOnline:
setParticipants:
setParticipantsPool:
setPersonHandle:
setPredicate:
setPreferredCallProvider:
setRecentCallIdToCallRecordCache:
setRecentIntentHandlersAndIdentifiers:
setResolutionResultType:
setResolutionSummary:
setResolvedEntities:
setRestrictedContacts:
setScoreByEntity:
setScoreReasonsByEntity:
setSenderDestinationID:
setShouldDoEmergencyCountdown:
setSourceIdentifier:
setStatusCode:
setSubscribed:
setSubscriberCountryCodeDidChange:
setSuccessfulResolutionMargin:
setTrashed:
setUUID:
setUnread:
setValue:forKey:
setVideo:
setVideoEnabled:
setVoicemailManager:
setWantsStagingArea:
setWithArray:
setWithObject:
sharedInstance
sharedManager
sharedPreferences
shortLabelsDidChange
shouldForceAudioOnlyWithIdiom:withDisplayDisabled:
shouldRequireInvalidNumberConfirmationForRecipient:
shouldRequireUnknownRecipientConfirmationForRequestedRecipient:resolvedToRecipient:contact:
signInController
simLockSaveRequestDidComplete:success:
simPinChangeRequestDidComplete:success:
simPinEntryErrorDidOccur:status:
simPukEntryErrorDidOccur:status:
simStatusDidChange:status:
siriLanguageCode
siriMatches
sortContacts:withIdentifiers:
sortFaceTimeHandles:faceTimeHandles:nonFaceTimeHandles:
sortedArrayUsingSelector:
standardUserDefaults
startAudioPlayback:completion:
startAudioPlaybackRequest:options:completion:
startDateComponents
stringFromContact:style:
stringValue
stringWithFormat:
subarrayWithRange:
subscribed
subscriberCountryCodeDidChange
subscriptionsInUse
successWithResolvedCallCapability:
successWithResolvedCallDestinationType:
successWithResolvedCallGroupConversation:
successWithResolvedCallRecord:
successWithResolvedPerson:
successWithResolvedPreferredCallProvider:
successWithResolvedString:
successfulResolutionMargin
superclass
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
supportsFaceTimeAudioCalls
supportsFaceTimeVideoCalls
supportsPrimaryCalling
supportsTelephonyCalls
telephonyProvider
timeIntervalSinceDate:
transactionDidCompleteForIntentIdentifier:
tuHandle
tu_allContactIdentifiers
tu_contactsForHandles:keyDescriptors:error:
tu_contactsMatchingIdentifiers:contactsDataSource:identifierToContactCache:
tu_emailAddressesMatchingPersonHandleLabel:
tu_handlesMatchingPersonWithContactsDataSource:identifierToContactCache:
tu_initUnlabledPersonHandleWithTUHandle:isoCountryCodes:
tu_labeledValue:matchesPersonHandleLabel:
tu_mapObjectsUsingBlock:
tu_matchingINPersonHandlesByContactIdentifier
tu_normalizedCHHandlesFromTUHandle:isoCountryCodes:
tu_personHandleMatchingHandle:isoCountryCodes:
tu_personMatchingHandle:contactsDataSource:isoCountryCodes:
tu_personWithFormattedHandleForISOCountryCodes:
tu_phoneNumbersMatchingPersonHandleLabel:
tu_tuHandle
tu_voicemailsPassingTest:
type
unformattedInternationalStringValue
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueId
uniqueProxyIdentifierUUID
unread
unresolvedPerson
unseen
unsupported
unsupportedForReason:
updateHandlerStateForContactResolutionResults:
updateRecentlyUsedHandlersWithHandler:
updateScoreBasedContactResolver:forFavoritesAmongContacts:
updateScoreBasedHandleResolver:forFavoritesAmongHandles:
updateScoreBasedHandleResolver:forRecentCallsMatchingHandles:telephonyOnly:
useLegacyContactResolution
useLegacyHandleResolution
userActivity
userActivityUsingDeprecatedCallingIntents:
userDefaultVoiceSlotDidChange:
usesScoreBasedEncoding
value
valueForKey:
videoDeviceController
voicemailDataSource
voicemailManager
voicemailWithCaller:unread:
voicemailWithIdentifier:
voicemailsPassingTest:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
@48@0:8@16@24q32@40
@24@0:8@16
v40@0:8@16@24@32
v16@0:8
@"<TUContactsDataSource>"
@"<IntentHandlerCoreAnalyticsLogging>"
v32@0:8@16@24
v28@0:8@16B24
v24@0:8@16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v24@0:8@"CTServiceDescriptor"16
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSimDeactivationInfo"24
@"NSArray"16@0:8
v20@0:8B16
@"CoreTelephonyClient"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@24@0:8Q16
B24@0:8@"TUConversation"16
@24@0:8@?16
@?16@0:8
v24@0:8@?16
B32@0:8@16@24
@"NSArray"24@0:8@?<B@?@"<SearchCallHistoryVoicemail>">16
@28@0:8@16B24
d16@0:8
@"NSDate"16@0:8
v24@0:8Q16
v24@0:8d16
@"NSDate"
@"NSString"
v40@0:8q16@24@32
v24@0:8q16
q16@0:8
@"NSMutableDictionary"
@"ScoreBasedResolutionResult"
@40@0:8Q16@24@32
@"NSDictionary"
@40@0:8@16@24@32
B24@0:8@"NSString"16
Q24@0:8Q16
v32@0:8@16@?24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INSearchCallHistoryIntentResponse">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeOptionsResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INBooleanResolutionResult">24
@80@0:8Q16@24@32@40Q48q56Q64@72
@"<SearchCallHistoryIntentHandlerDataSource>"
@"NSCache"
@"<TUContactsDataSource>"16@0:8
@"<CallHistoryDataSource>"16@0:8
@"<CoreTelephonyDataSource>"16@0:8
@"TUCallProviderManager"16@0:8
@"<SearchCallHistoryVoicemailDataSource>"16@0:8
@"<CallHistoryDataSource>"
@"TUCallProviderManager"
@"CNContactStore"
@32@0:8q16@24
v48@0:8@16@24@32@40
v48@0:8@"NSNumber"16@"NSNumber"24@"NSNumber"32@"NSString"40
v32@0:8@"VMVoicemail"16@?<v@?@"NSError">24
v32@0:8@"INPlayVoicemailIntent"16@?<v@?@"INPlayVoicemailIntentResponse">24
@"<SiriAudioPlaybackService>"
@"VMVoicemailManager"
@"TUCallCenter"
v32@0:8@"INAddCallParticipantIntent"16@?<v@?@"INAddCallParticipantIntentResponse">24
v32@0:8@"INAddCallParticipantIntent"16@?<v@?@"NSArray">24
@"TUConversationProviderManager"
@"NSObject<OS_dispatch_group>"
@"NSMutableArray"
v32@0:8@"INIdentifyIncomingCallerIntent"16@?<v@?@"INIdentifyIncomingCallerIntentResponse">24
q24@0:8@16
@"<IdentifyIncomingCallerIntentHandlerDataSource>"
@20@0:8B16
@24@0:8d16
@24@0:8q16
@20@0:8I16
@56@0:8@16q24Q32q40q48
@60@0:8@16q24Q32q40q48B56
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallIntentResponse">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INCallRecordResolutionResult">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INCallDestinationTypeResolutionResult">24
v32@0:8@"INStartCallIntent"16@?<v@?@"NSArray">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallCallCapabilityResolutionResult">24
q52@0:8q16@24q32q40B48
@36@0:8q16q24B32
B28@0:8q16B24
B32@0:8Q16Q24
@48@0:8@16@24@32@40
@36@0:8@16@24B32
v36@0:8@16@24B32
@40@0:8@16q24q32
@48@0:8@16q24@32@40
B40@0:8@16@24@32
@"<StartCallIntentHandlerDataSource>"
@"<AppResolving>"
@"NSMutableOrderedSet"
@"IntentHandlerFeatureFlags"
@"FaceTimeUtilities"
B24@0:8@"CNContact"16
B32@0:8@"TUHandle"16@"NSArray"24
@"CNFavorites"
Q24@0:8@16
v24@0:8@"TUHandle"16
@"NSArray"24@0:8@"NSString"16
@24@0:8@"NSObject<OS_dispatch_queue>"16
Q24@0:8@"TUDialRequest"16
@"NSArray"32@0:8@"NSArray"16@"TUCallProvider"24
@"TUSenderIdentityClient"16@0:8
@"<FavoritesDataSource>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"TUCallCenter"16@0:8
@"IDSSignInController"
@"TUSenderIdentityClient"
@"<FavoritesDataSource>"
@"RadiosPreferences"
@"ContactPool"
@"INPerson"
v32@0:8@"INJoinCallIntent"16@?<v@?@"INJoinCallIntentResponse">24
v32@0:8@"INJoinCallIntent"16@?<v@?@"INCallGroupConversationResolutionResult">24
v32@0:8@"INHangUpCallIntent"16@?<v@?@"INHangUpCallIntentResponse">24
@32@0:8@16q24
v24@0:8@"NSArray"16
B24@0:8@"NSArray"16
@"TUConversationLink"24@0:8@"NSSet"16
v32@0:8@"INAnswerCallIntent"16@?<v@?@"INAnswerCallIntentResponse">24
@"<AnswerCallIntentHandlerDataSource>"
@"TUHandle"
333?
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>cellular-plan</string>
</array>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.private.CallHistory.read</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/TelephonyUtilities.framework/PlugIns/PhoneIntentHandler.appex/PhoneIntentHandler</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.device.camera</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/InCallService.app/</string>
<string>/Applications/NanoPhone.app/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/CallHistoryDB/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.CellularPlanDaemon.xpc</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.videoconference.camera</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
<string>register-gft-service</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
</dict>
</plist>
l0% com.apple.CallHistory.sync.allow
0i com.apple.CallKit.call-directory0E
synchronize-extensions
compact-store
query-identification-entries09!com.apple.CommCenter.fine-grained0
spi
cellular-plan0!
com.apple.assistant.settings
0)$com.apple.coreaudio.allow-amr-decode
0'"com.apple.private.CallHistory.read
0-(com.apple.private.CallHistory.read-write
0+&com.apple.private.accounts.allaccounts
9com.apple.private.attribution.implicitly-assumed-identity
type
path0{
valuer/System/Library/PrivateFrameworks/TelephonyUtilities.framework/PlugIns/PhoneIntentHandler.appex/PhoneIntentHandler04/com.apple.private.coreservices.canmaplsdatabase
com.apple.private.ids.messaging
0K"com.apple.private.ids.registration0%
com.apple.ess
com.apple.private.ac0% com.apple.private.imcore.imagent
01,com.apple.private.imcore.spi.database-access
0(#com.apple.private.intents.extension
01,com.apple.private.security.storage.Voicemail
0+&com.apple.private.suggestions.contacts
com.apple.private.tcc.allow0+
kTCCServiceAddressBook
kTCCServiceCamera0#
com.apple.security.app-sandbox
0% com.apple.security.device.camera
0~:com.apple.security.exception.files.absolute-path.read-only0@ /Applications/InCallService.app/
/Applications/NanoPhone.app/0q?com.apple.security.exception.files.home-relative-path.read-only0.
/Library/Voicemail/
/Library/CallHistoryDB/0
@com.apple.security.exception.files.home-relative-path.read-write0]
/Library/Voicemail/
/Library/Logs/CallHistory
/Library/CallHistoryDB/
/Media/Recordings/0
%4com.apple.security.exception.mach-lookup.global-name0
Ccom.apple.telephonyutilities.callservicesdaemon.conversationmanagerCcom.apple.telephonyutilities.callservicesdaemon.callprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerKcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager)com.apple.identityservicesd.embedded.auth
com.apple.CallHistorySyncHelper
com.apple.voicemail.vmd
com.apple.commcenter.xpc com.apple.CellularPlanDaemon.xpc,com.apple.imdpersistence.IMDPersistenceAgent083com.apple.security.personal-information.addressbook
>com.apple.security.temporary-exception.mach-lookup.global-name0
^Ccom.apple.telephonyutilities.callservicesdaemon.callprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerKcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager(com.apple.identityservicesd.desktop.auth
com.apple.CallHistorySyncHelper
com.apple.commcenter.xpc com.apple.videoconference.camera0dBcom.apple.security.temporary-exception.shared-preference.read-only0
com.apple.TelephonyUtilities0
*com.apple.telephonyutilities.callservicesd0}access-calls
access-call-providersmodify-calls
access-call-capabilities
modify-call-capabilities
register-gft-service0% com.apple.visualvoicemail.client
SiriPhone
FaceTimeNoFanOut
CRRFullRecommendation
CRRHandleRecommendation
FaceTimeInvitation
v8@?0
com.apple.TelephonyUtilities.PhoneIntentHandler.%@
B16@?0@"TUConversation"8
Voicemail search performed on a mock voicemail handler with no mock voicemails
B24@?0@"<SearchCallHistoryVoicemail>"8@"NSDictionary"16
Attempting to add a score for an entity not part of original entity set
Attempting to add a score reason for an entity not part of the original entity set
%ld: %@
Resolved %ld entities. Result = %@
%ld%@: %@
 (chosen)
Success
Confirm
Disambiguate
Unknown
B16@?0@"<SearchCallHistoryVoicemail>"8
B16@?0@"VMVoicemail"8
com.apple.siri.phone.IntentHandler.StartCall.ResolveContacts.SiriMatches
siriMatchesCount
matchesByIdCount
matchesByNameCount
siriLocale
@"NSDictionary"8@?0
-[AFSettingsConnection(IntentHandler) startAudioPlayback:completion:]
 enableTelemetry=YES 
v16@?0@"NSError"8
-[PlayVoicemailIntentHandler endPlayback]
-[PlayVoicemailIntentHandler handlePlayVoicemail:completion:]
-[PlayVoicemailIntentHandler handlePlayVoicemail:completion:]_block_invoke
v12@?0B8
-[PlayVoicemailIntentHandler _playVoicemail:completion:]
-[PlayVoicemailIntentHandler _playVoicemail:completion:]_block_invoke
v32@?0@"IntentHandlerAndIdentifier"8Q16^B24
com.apple.private.alloy.dropin.communication
answered = %d
originated = %d
duration = 0
duration > %f
date > %@
date < %@
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.normalizedValue == %@
ANY remoteParticipantHandles.normalizedValue IN %@
ANY remoteParticipantHandles.value == %@
ANY remoteParticipantHandles.value IN %@
ANY remoteParticipantHandles.value ==[c] %@
service_provider = %@
call_category == %@
read == %d
v16@?0@"INStringResolutionResult"8
NoLinkGenerated
LocalEmergency
NonLocalEmergency
None
Unset
1190
1191
1195
1515
1717
1777
1818
2020
9999
10111
Unexpected score based contact resolution result type.
contacts
@16@?0@"INScoredPerson"8
emergency contact
Persons matching resolved handle should not be nil.
Persons matching handle to confirm should not be nil.
Persons matching handle to disambiguate should not be nil.
Unexpected score based handle resolution result type.
Call Recency
Favorites entry for telephony call with this handle
Favorites entry for this contact
InCallService
/Applications/InCallService.app
B24@?0@"INPerson"8@"NSDictionary"16
v32@?0@"CNContact"8@"NSArray"16^B24
true
false
UseLegacyContactResolution
UseLegacyHandleResolution
SiriInference
native_flow_contact_resolution
found_in_app_contacts
v16@?0@"IMSPIChat"8
com.apple.messages.imcore.spi.qos-unspecified
Contacts map did not contain UUID of recommended contact.
v16@?0@"NSNotification"8
v24@?0@"TUConversationLink"8@"NSError"16
com.apple.calls.intenthandler
Default
SiriPhone/FaceTimeNoFanOut: %{public}@
SiriPhone/CRRFullRecommendation: %{public}@
SiriPhone/crrHandleRecommendation: %{public}@
SiriPhone/FaceTimeInvitation: %{public}@
sortMatchingContactsWithIdentifiers
Person contains %ld contact IDs. Person: %@
Looking up contact in the contact store matching identifiers: %@
Found %ld contacts matching siriMatches
Found contacts matching siriMatches
siriMatches contactIDs don't correspond to any contacts in address book.
Looking up contact in the contact store by names
Error performing contact search: %@
contactsMatchingIdentifiers
Error performing contact search by name: %@
Found %ld contacts in search by name
contactsMatchingName
Could not determine ISO Country Code from Mobile Country Code: %@
Could not determine mobile country code from Core Telephony Subscription Context. Error: %@
Could not determine Core Telephony Subscription Info. Error: %@
Resolved relevant ISO country codes: %@
[WARN] Cellular service is not available for SIM. Registration Status: %@ Subscription context: %@
Could not determine registration status from Core Telephony Subscription Context. Error: %@
[WARN] Determined cellular service is unavailable.
SimpleConversationFilter: matchesCallGroup=%@
SimpleConversationFilter: matchesParticipantCount=%@
handlesMatchingPerson
Looking up contact in the contact store matching handle: %@
Could not construct contact search predicate from handle: %@
No contacts match handle
[WARN] Multiple contacts match handle, using the first one arbitrarily
personMatchingHandle
App supports INStartCallIntent - prefer this over deprecated calling intents.
Error when fetching application record for appId: %@, error: %@
Got a SearchCallHistory intent: %@
Start Date  : %@
End Date    : %@
Recipient   : %@
Capabilities: %lx (audio: %d | video: %d)
PreferredCallProvider: %@
Types       : %lx
Unseen     : %@
Type indicates we should be searching for voicemail. Matching voicemails to this intent
Rejecting voicemail because it is deleted or trashed: %@
Rejecting voicemail because a recipient was specified, but this voicemail has no senderDestinationID: %@
Rejecting voicemail because senderDestinationID does not match requested recipient: %@
Rejecting voicemail because voicemail.date is before requested startDate: %@
Rejecting voicemail because voicemail.date is after requested endDate: %@
Rejecting voicemail because only unread voicemails were requested, but this one is marked as read: %@
Rejecting voicemail because only read voicemails were requested, but this one is marked as unread: %@
Truncated matching voicemails to %ld objects: %@
Voicemails (%@) -> callRecords (%@)
Visual Voicemail is not set up yet
Calling completion block with response: %@
resolveRecipientForSearchCallHistory: %@
No recipient specified, returning notRequired
Handle is present. Simply using the recipient to resolve with: %@
No contacts match the specified recipient, returning unsupported (a.k.a. notFound)
Recipient contains siriMatches, preserving those and returning success
Resolving with: %@
[WARN] Could not determine voicemail.senderDestinationID
[WARN] person in callRecord is nil
Performing call history lookup
Unhandled call record type options: %ld
Unhandled call capability: %ld
Using predicate: %@
Call history search results: %@
callRecords: %@
%s Retrieved voicemail data, attempting to play via assistantd
 enableTelemetry=YES 
voicemailPlaybackMinusDuration
%{public, signpost.description:end_time}llu, %s
%s Observed playback ended, e.g. user dismissed siri
%s handlePlayVoicemail: %@
%s VVM is online and subscribed.
%s Found voicemail with the given identifier (%@). Returning success
%s Voicemail completed playing. Calling completion block with success response: %@
%s [WARN] Screen time restricted playback of voicemail: %@
%s [WARN] Voicemail with the given identifier was not found
%s [WARN] VVM is not online and subscribed. Returing that configuration is required
%s Attempting to play voicemail: %@
%s Error playing voicemail: %@
%s Voicemail completed successfully
Handling INAddCallParticipantIntent: %@
Adding participant %@ to the conversation: %@
Adding participant to a 1:1 FT call with no backing TUConversation: %@
Resolving participants: %@
CRR chose 1 INPerson but contact has no handle.
Intent Extension initialized
registerForCallbacksForProvider did not complete before the %ld second timeout.
HangUpIntentHandlerWaitForProvider
No handler for intent: %@
[WARN] Intent does not have an identifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
[WARN] Attempting to update recently used intent handler cache for an intent with no intentIdentifier. Ignoring.
HangUpIntentHandlerRegisterForProvider
Registering for drop-in calls
Unable to register for drop-in calls: %{public}@
Registered for drop-in calls
Received Siri request to identify incoming caller: %@
An incoming call exists with handle %@
Incoming call is from person: %@
Incoming caller is a private number
No incoming call exists. Looking up last missed call...
Last missed call is: %@
Inferring outgoing callStatus requirement from the presence of redial destination type and unspecified recordTypeForRedialing.
Unexpected callTypes received, ignoring value.
No preferredCallProvider specified and thirdParty redial is enabled, not filtering by provider
No preferredCallProvider specified and thirdParty redial is not enabled. Filtering for 1P calls.
Unrecognized PreferredCallProvider enum value, skipping provider predicate.
ThirdParty redial is enabled, using redial predicate that includes search for non-normalized handle values.
ThirdParty redial is not enabled, using normal recent call predicate that includes search for non-normalized handle values.
Facetime No Fan Out is true
Handling start call intent: %@
FaceTimeInvitation Enabled for faceTime link: %@
Configuring invitation preferences on FaceTime join request.
Calling completion block with response: %@ user activity: %@
handleStartCall
found a FaceTimeable personHandle: %@
found a non-FaceTimeable personHandle: %@
Extracting Handles From Intent: %@
Skipping IDS query lookup as all handles have been resolved.
Determining response for dial request: %@
Redial/callback to 3P call history entry.
useDeprecatedCallingIntents: %@
Dial request was restricted due to screen time policy.
Dial request was restricted due to downtime policy.
The call is initiated on a HomePod but the companion device already has a call ringing.
The call is initiated on a HomePod but the companion device already has a call in progress.
Dial request was for FaceTime provider and video but FaceTime video is not enabled. Returning reponse that app configuration is required
Dial request was for FaceTime provider and audio but FaceTime audio is not enabled. Returning reponse that app configuration is required
User activity was nil. Returning failure.
Dial Request invalid: %@
Emergency call requested, will always try to place the call, skipping provider and cellular service availability checks.
Call requested from Watch, will always try to place the call, skipping provider and cellular service availability checks.
Dial Request was for Telephony, but supportsTelephonyCalls was not true
Dial request was for telephony provider but airplane mode is enabled
Dial request was for telephony provider but no cellular service was available
responseForDialRequest
Determining response for join request: %@
Join request was restricted due to some restrictions from all members.
Join request was for FaceTime provider and video but FaceTime video is not enabled. Returning reponse that app configuration is required
Join request was for FaceTime provider and audio but FaceTime audio is not enabled. Returning reponse that app configuration is required
responseForJoinRequest
Confirm start audio call: %@
Join request was restricted due to some restrictions with some members (but not all).
Even though destinationType is normal, user specifically asked for a emergency number
Contact to redial/call back is an emergency number. Requiring intent confirmation.
Contact to redial/call back is NOT an emergency number.
Making an emergency call, sending UserConfirmationRequired with emergency flag = YES
confirmStartCall
Resolving callRecordToCallBack for start call: %@
Calling completion block with result: %@
resolveCallRecordToCallBack
Resolve destination type for start call: %@
%@ is an emergency handle. Resolving to an emergency call
%@ is not an emergency handle. Do not need special resolving.
Could not determine if handle to dial is an emergency handle because handle has not yet been resolved
resolveDestinationType
Intent's contact has no display name. Looking up the list of emergency handles available on this device
There are more than one number that could be dialed. Prompting to disambiguate between them using these people: %@
Only a single emergency number to call. Resolving to that number.
[WARN] User asked to call emergency services. Emergency provider does not have multiple handles, and call can be completed without specifying one. Returning not required.
Resolving contacts for start call intent: %@
[WARN] Intent includes an emergency person and a non-emergency person. Returning success for non-emergency person so emergency person can be properly resolved. Person: %@
Detected foreign emergency label, calling completion block early: %@
Resolution not required for voicemail destination
Resolution for emergency destination
Intent's contact has a personHandle.value set on an emergency call. Resolving to that value.
Resolution for redial
recentCall for group facetime: %@
Converted INCallRecord has no caller. Returning unsupported
Calling completion block with resolution results: %@
resolveContacts
Resolving call capability for start call intent: %@
Returning call capability resolution result: %@
resolveCallCapability
[WARN] Unable to infer callCapability from call to redial because the recent call was nil
Inferring audio call capability from call to redial
Inferring video call capability from call to redial
[WARN] Unable to infer callCapability from call to redial because media type of that call was unknown.
Call capability is already set, no inferring needed
Inferring audio callCapability because provider is Telephony.
Inferring video callCapability because provider is FaceTime and video is supported.
Inferring audio callCapability because provider is FaceTime and audio is supported
[WARN] Unable to infer callCapability. Provider is Facetime, but neither facetime audio nor video calling are supported.
Changing callCapability from video to audio because the current idiom only supports audio
Returning call Capability %ld
Facetime Video calling is unavailable, returning call capability unsupported reason video call unsupported.
deviceIdiom %ld is an audio only device idiom.
This Mac has no attached camera.
deviceIdiom %ld supports video calling.
Call capabilities do not support FaceTime video calls
Devices primary display is disabled, e.g. user is on carDND mode. 
GroupFaceTime is disabled for China SKU devices
Resolving faceTimeLink for start call intent: %@
resolveFaceTimeLink
Returning empty string as this is a telephony call or featureflag is disabled or destinations was empty
No non-FaceTime handles found. Returning nil.
This is watchOS or tvOS. Sending a placeholder string for returning unsupported dialog
Link generation failed and nil was returned. Setting empty string.
Returning FaceTimeLink resolution result: %@
Resolving call provider for start call intent: %@
The call provider %@ for redial or call back is not supported
Telephony call was requested from a watch or for an emergency call and telephony is not supported. isWatch: %d, isEmergencyCall: %d
Telephony call was requested, but supportsTelephonyCalls was false
FaceTime provider is turned off in the Settings App
FaceTime provider is blocked in settings or by managed configuration
FaceTime is not supported by this device's hardware or carrier configuration
FaceTime audio calling service is not available, likely because user is not signed in
FaceTime audio call was requested, but supportsFaceTimeAudioCalls was false, and the request passed checks for FT settings-based restrictions and FT provider availability.
FaceTime video calling service is not available, likely because user is not signed in
FaceTime video call was requested, but supportsFaceTimeVideoCalls was false, and the request passed checks for FT settings-based restrictions and FT provider availability.
Group FaceTime video calls are not supported by this device's hardware or carrier configuration
Returning call provider resolution result: %@
resolvePreferredCallProvider
Looking up recentCallRecordToRedial
Using previously-resolved INCallRecord from callRecordToCallBack
Looking up recentCall by constructing query from callRecordFilter
Looking up recentCall by constructing query from intent
recentCallToRedial
Expected to map CHRecentCall to INCallRecord 1:1
predicate for recentCall: %@
callHistoryDBCallToRedial
Found recentCall: %@
Resolution needs a value for zero contacts
Attempting to resolve more than one call participant. Returning multiple contacts unsupported for each recipient.
Handle has the LocalEmergency flag. Resolving success. %@ with type: %@
Handle %@ is in the global emergency numbers list. EmergencyType is %@
It's unclear if the user literally wanted this number, or if they meant to call emergency services. Disambiguate between local and nonlocal emergency services.
Returning _INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation with alternative items: %@
Number is on the global emergency numbers list, but INPersonHandle already has the emergencyType set: %@
Number is not on the global emergency numbers list
Requested handle type is unknown, but preferredCallProvider is phone. Inferring handle type of phone number.
PreferredCallProvider is faceTime. Inferring handle type of unknown to present both phone number and email address.
Native flow contact resolver enabled.
Confident match found by NCR, uuid %@
Low-confidence (needsConfirmation) match found by NCR, uuid %@
NCR recommended needsDisambiguation for contacts, but some have the same name. Proceeding to handle disambiguation.
needsDisambiguation recommended by NCR, uuids %@
NCR found no matches for person: %@
Only one matching contact for requested handle -- proceeding to handle disambiguation: %@
Only one matching contact (regardless of requested handle): %@
Using legacy contact resolution
Resolved to %ld contacts, asking the user to disambiguate among persons: %@
ScoreBasedResolutionResult is Disambiguate, but some contacts have the same name. Proceeding to handle disambiguation.
No valid matching handle is found for the resolved contacts and this handle has been requested: %@. will attempt additional matching handles from siri matches.
Resolved to %ld matching contacts with %ld additional matching handles. Contact: %@ Handles: %@
%@ was requested but the contact doesn't an exact match. Using the only alternative instead: %@
Resolved to %ld matching contacts with %ld matching handles. Contact: %@ Handles: %@
None of the resolved contacts have a valid matching handle. Offering all handles as alternatives
Offering all handles as alternatives
Using CRR based recommendation results: %@
No resolution result resolved, adding an unsupported result
Resolved to one CRR recommended handle: %@
Resolved to more than one CRR recommended handle: %@
Resolved to one handle: %@
Resolved contacts all share a handle: treating them as the same person. Contacts: %@
Facetime call contact resolved to multiple handles. Using score based resolution model to resolve handles: %@
Facetime call resolved to multiple handles for a distinct person, preserving ambiguity. Will ring all handles. Person: %@
Facetime call resolved to multiple contacts with the same name, none of which share a handle. Disambiguating between handles.
Resolved to multiple handles, using score based resolution model to resolve handles: %@
Found no matching contact from siriMatches or name search, returning unsupported. Person: %@
Updated contact in intent: %@
resolutionResults: %@
relaying CRR recommendations
No candidates from CRR. Returning unsupported. Person: %@
Found 1 candidate with a no handle; returning unsupported. Person: %@
Found 1 candidate with no matching handle; offering other handles as alternatives
Found 1 candidate with an invalid handle type; returning unsupported. Person: %@
Found 1 candidate with unsupported MMI or USSD handle %@
Found 1 high-confidence candidate; returning success: %@
Found 1 low-confidence candidate; returning confirm: %@
Found %ld candidates; returning disambiguate
Emergency contacts detected. Inserting personHandles.
Either a mobile handle or an iPhone label was requested without any matching handle. Checking if an alternative for mobile or iPhone handles exists.
Handle %@ is MMI or USSD which is unsupported. Returning error for person: %@
The user requested a potentially invalid phone number or email, returning confirmationRequired.
There is a handle on the single contact. Format the person handle and return success with that person.
Returning confirmationRequired with person: %@
Returning confirmationRequired with person (as upstream contact resolver recommended): %@
Returning success with person: %@
Using legacy handle resolution.
Beginning score based handle resolution.
Completed score based handle resolution.
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, resolving to the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, confirming just the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). Including those multiples in the disambiguation list. %@
scoreBasedHandleResolution
Beginning call recency for handles check.
Handle %@ was a partipant in recent call %@ with country code %@.
Completed call recency for handles check.
recentCallsMatchingHandles
Beginning favorites for handles check.
No favorites entry for handle %@. No score adjustment.
Completed favorites for handles check.
favoritesAmongHandles
Beginning score based contact resolution.
Completed score based contact resolution.
scoreBasedContactResolution
Beginning call recency for contacts check.
Contact %@ was a partipant in recent call %@ with isoCountryCode %@.
Completed call recency for contacts check.
contactCallRecency
Searching call history for one call matching predicate: %@
callHistoryDBFirstRecencyCheck
Completed initial call history search with result: %@
Calculated oldest relevant date of %@ based on most recent matching call %.0f seconds ago
Searching call history for up to %ld calls matching predicate: %@
callHistoryDBSecondRecencyCheck
Completed second call history search with result: %@
No matching call history for any of the requested handles. No score adjustment.
recentCallsWithHandles
Beginning favorites for contacts check.
No favorites entry for contact %@. No score adjustment.
Completed favorites for contacts check.
favoritesAmongContacts
Found %ld alternatives when dropping label constraint.
Not dropping handle type constraint because the user requested a telephony call.
Found %ld alternatives when dropping handle and label constraint.
Handle is an emergency number, %@ is in the prioritizedSenderIdentities list
Handle is an emergency number, %@ is in the emergencyLabeledHandles list
Handle is an emergency number, %@ is in the unlabeled emergencyHandles list
Handle is not an emergency number: %@
Not applying an implicit handle type filter to an intent with an explicit handle type specified
Not applying an implicit handle type filter to an intent with an explicit call provider specified
Not applying an implicit handle type = phone number filter on a device that doesn't support telephone calls
Not applying an implicit handle type filter because there is already only one matching handle
Multiple handles match call request. Attempting to filter to just phone numbers to resolve ambiguity.
Filtered the results to only phone numbers. Remaining matches: %@
Filtering results to only phone numbers would have produced no results, not filtering.
Have previously confirmed recipient with handle %@
Have previously confirmed recipient with contactIdentifier: %@
Not requiring invalid number confirmation because recipient has already been confirmed.
Not requiring invalid number confirmation because recipient has a nonlocal emergency handle type and has already been confirmed.
Not requiring invalid number confirmation because handle is valid for country code %@
[WARN] Requested handle %@ is not valid for any of the following country codes: %@
Examining call history to determine if there is existing call history with the invalid number.
callHistoryDBForInvalidNumber
Not requiring invalid number confirmation because there are %ld recents call with %@
Did not find any matching calls with: %@
[WARN] Returning YES for shouldRequireInvalidNumberConfirmationForRecipient.
shouldRequireInvalidNumberConfirmation
Not requiring unknown recipient confirmation because recipient has already been confirmed.
Not requiring unknown recipient confirmation because requested recipient was a relation: %@
Not requiring unknown recipient confirmation because requested recipient was a manually dictated handle: %@
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients full displayName: "%@"
Not requiring unknown recipient confirmation because requested displayName "%@" matches resolved recipients displayName: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because resolved contact is a favorite. Contact: %@
Searching for recent calls using predicate: %@
callHistoryDBForUnknownRecipient
Not requiring unknown recipient confirmation because there is a recent call with one of the following handles: %@
Did not find a recent calls with any of the following handles: %@
Returning %{public}@ for shouldRequireUnknownRecipientConfirmationForRequestedRecipient.
shouldRequireUnknownRecipientConfirmation
group facetime message callGroups for intent: %@
fetching handles from spiChat: %@
updated contacts: %@
Found a favorites entry matching handle: %@
[WARN] Ignoring favorite for telephony call with an empty phone number: %@
[WARN] Ignoring favorite for telephony call without a phone number: %@
Checking if there is any call ringing currently
is there any call ringing currently? %@
Checking if there is any call in progress.
is there any call in progress? %@
SiriInference/native_flow_contact_resolution: %@
SiriInference/found_in_app_contacts: %@
spiChat person handles: %@
ConversationContactPool: Searching for %@ in caller ContactPool: %@
ConversationContactPool: Searching for %@ in participants ContactPool: %@
ConversationPersonFilter: matchesCaller=%@
ConversationPersonFilter: matchesParticipants=%@
Handling join call intent: %@
Searching for conversationId: %@ among active conversations.
Found matching conversation %@
No matching conversation. Returning failure.
Attaching TUJoinConversationRequest to UserActivity
UserActivity was nil
Confirming join call intent: %@
Resolving join call intent: %@
INCallGroupConversation already resolved.
Searching among active conversations for a matching call.
doesConversationMatch = %@ for TUConversation: %@
Found more than one matching conversation.
Found one matching conversation.
Found no matching conversations.
Calling completion on resolution result: %@
Confirming Siri request to hang up: %@
No calls exist. Returning failure.
Call exists, proceeding to handle HangUp intent.
Handling Siri request to hang up: %@
An incoming call exists. Declining it and returning success: %@
At least one call exists. Hanging up and returning success
No calls exist. Since call was hung up between confirm and handle, return success.
starting dispatch semaphore for TUIDSLookupManagerStatusChangedNotification
ending dispatch semaphore for TUIDSLookupManagerStatusChangedNotification
canonical address: %@
Failed to generate FaceTime link with error %@
Successfully generated FaceTime link: %@
Received Siri request to answer incoming call: %@
Requested to answer specific call but UUID did not match identifier of requested call
Requested identifier: %@, actual identifier: %@
An incoming call exists. Answering it and returning success
Setting endpointIDSDestination: %@
Intent contains an originatingDeviceRapportMediaSystemIdentifier: %@
Intent contains an originatingDeviceRapportEffectiveIdentifier: %@
No incoming call exists. Returning no incoming call. Recent Missed Calls: %@
Before deduping: %ld, After deduping: %ld
All persons have equivalent handle values
Converting CHRecentCall %@ to INCallRecord.
Converted this CHRecentCall previously, using cached converted INCallRecord.
[WARN] Caller ID is blocked
[WARN] Found an entry of unknown type in handleToPerson cache
person added to particpants in callrecord: %@
[WARN] Could not determine remoteParticipantHandle for CHRecentCall
serviceProvider is not FT or telephony - must be a 3P provider.
No serviceProvider found on CHRecentCall - setting preferredCallProvider to unknown.
Unrecognized INScoredPersonRecommendation
SiriInference recommended resolution result: %@
IntentHandlerFeatureFlags
NSObject
StartCallIntentHandlerUtilities
ContactResolver
DefaultCoreTelephonyDataSource
CoreTelephonyClientSubscriberDelegate
CoreTelephonyDataSource
SimpleConversationFilter
ConversationFilter
TUIntentHandler
MockVoicemailDataSource
SearchCallHistoryVoicemailDataSource
MockVoicemail
SearchCallHistoryVoicemail
ScoreBasedResolver
ScoreBasedResolutionResult
ContactPool
TelephonyUtilities
AppResolver
AppResolving
SearchCallHistoryIntentHandler
INSearchCallHistoryIntentHandling
SearchCallHistoryIntentHandlerDataSource
SiriMatchRecommendation
IntentHandlerCoreAnalyticsLogger
IntentHandlerCoreAnalyticsLogging
IntentHandler
SiriAudioPlaybackService
PlayVoicemailIntentHandler
INPlayVoicemailIntentHandling
AddCallParticipantIntentHandler
INAddCallParticipantIntentHandling
IntentRouter
IntentHandlerAndIdentifier
AndConversationFilter
ConversationFilterFactory
IdentifyIncomingCallerIntentHandler
INIdentifyIncomingCallerIntentHandling
IdentifyIncomingCallerIntentHandlerDefaultDataSource
IdentifyIncomingCallerIntentHandlerDataSource
CallHistoryDataSourcePredicate
RecentCallQuery
StartCallIntentHandler
INStartCallIntentHandling
StartCallDefaultFavoritesDataSource
FavoritesDataSource
StartCallIntentHandlerDataSource
ConversationContactPool
ConversationPersonFilter
JoinCallIntentHandler
INJoinCallIntentHandling
HangUpCallIntentHandler
INHangUpCallIntentHandling
ContactSlotResolutionHelper
FaceTimeUtilities
AnswerCallIntentHandler
INAnswerCallIntentHandling
AnswerCallIntentHandlerDefaultDataSource
AnswerCallIntentHandlerDataSource
INPersonWrapper
INPersonDeduplicator
CallRecordConverter
CRRRecommendation
T@"<CallHistoryDataSource>",R,N
T#,R
T@"NSArray",R,C,N,V_allContacts
T@"<AppResolving>",&,N,V_appResolver
Td,N,V_duration
T@"<CoreTelephonyDataSource>",R,N
_callCapability
T@"<FavoritesDataSource>",R,N,V_favoritesDataSource
_online
T@"<IntentHandlerCoreAnalyticsLogging>",&,N,V_coreAnalyticsLogger
_subscriberCountryCodeDidChange
T@"<SearchCallHistoryVoicemailDataSource>",R,N
address
T@"<StartCallIntentHandlerDataSource>",&,N,V_dataSource
bundleWithPath:
T@"<TUContactsDataSource>",R,N,V_contactsDataSource
callsInProgress
T@"CNFavorites",R,N,V_favoritesController
contactProperty
T@"ContactPool",&,N,V_participantsPool
dataURL
T@"CoreTelephonyClient",R,N,V_coreTelephonyClient
destinationType
T@"IDSSignInController",R,N,V_signInController
faceTimeBlocked
T@"INPerson",R,N,V_inPerson
groupId
T@"IntentHandlerFeatureFlags",&,N,V_featureFlags
handler
T@"NSArray",C,N,V_entities
hasCurrentCalls
T@"NSArray",C,N,V_resolutionSummary
initWithPerson:
T@"NSArray",R,C,N
isFaceTimeable:
T@"NSArray",R,C,N,V_contactIdentifiers
isValid
T@"NSArray",R,N,V_filters
lowercaseString
T@"NSCache",&,N,V_handleToPersonCache
T@"NSCache",R,N,V_identifierToContactCache
persons
T@"NSDate",R,N
providerManager
T@"NSMutableArray",&,N,V_recentIntentHandlersAndIdentifiers
removeObserver:
T@"NSMutableDictionary",&,N,V_scoreReasonsByEntity
T@"NSMutableOrderedSet",&,N,V_handlesConfirmed
setCallRecords:
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
setPhonemeData:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
trashed
T@"NSString",C,N,V_senderDestinationID
.cxx_destruct
T@"<SearchCallHistoryIntentHandlerDataSource>",R,N,V_dataSource
T@"<AnswerCallIntentHandlerDataSource>",&,N,V_dataSource
TB,N,GisSubscribed,V_subscribed
T@"<CallHistoryDataSource>",R,N,V_callHistoryDataSource
T@"<FavoritesDataSource>",R,N
_caller
T@"<IdentifyIncomingCallerIntentHandlerDataSource>",&,N,V_dataSource
_originatingDeviceIDSIdentifier
T@"<IntentHandlerCoreAnalyticsLogging>",R,N,V_coreAnalyticsLogger
_unread
T@"<SiriAudioPlaybackService>",&,N,V_audioPlaybackService
allKeys
T@"<TUContactsDataSource>",R,N
callFilterStatusForDialRequest:
T@"CNContactStore",R,N,V_contactStore
canonicalAddressesForAddresses:
T@"ContactPool",&,N,V_callerPool
containsObject:
T@"ContactPool",R,N,V_availableContacts
deleted
T@"FaceTimeUtilities",&,N,V_faceTimeUtilities
entries
T@"INPerson",R,N,V_caller
filters
T@"INPerson",R,N,V_unresolvedPerson
handlePlayVoicemail:completion:
T@"NSArray",C,N,V_allMockVoicemails
handles
T@"NSArray",C,N,V_participants
initWithHandle:
T@"NSArray",C,N,V_resolvedEntities
initWithPersonResolutionResult:
T@"NSArray",R,C,N,V_allRelevantISOCountryCodes
isProxy
T@"NSArray",R,C,N,V_persons
isVideo
T@"NSArray",R,N,V_participants
normalizedValue
T@"NSCache",&,N,V_recentCallIdToCallRecordCache
numberWithBool:
T@"NSDate",&,N,V_date
predicateForCallsWithNoDuration
T@"NSDictionary",R,C,N,V_contactByIdCache
release
T@"NSMutableDictionary",&,N,V_scoreByEntity
serviceProvider
T@"NSMutableOrderedSet",&,N,V_contactIdentifiersConfirmed
setAppResolver:
T@"NSObject<OS_dispatch_queue>",&,N
setContactIdentifiersConfirmed:
T@"NSObject<OS_dispatch_queue>",R,N,V_coreTelephonyClientQueue
subscriberCountryCodeDidChange:
T@"NSString",C,N,V_intentIdentifier
updateScoreBasedContactResolver:forRecentCallsMatchingContacts:
T@"NSString",R,C
T@"NSString",R,C,N
T@"RadiosPreferences",R,N,V_radiosPreferences
T@"ScoreBasedResolutionResult",&,N,V_cachedResult
T@"ScoreBasedResolutionResult",R,N
T@"TUCallCenter",&,N,V_callCenter
T@"TUCallCenter",R,N
T@"TUCallCenter",R,N,V_callCenter
T@"TUCallProviderManager",R,N
T@"TUCallProviderManager",R,N,V_providerManager
T@"TUHandle",R,N
T@"TUHandle",R,N,V_tuHandle
T@"TUSenderIdentityClient",R,N
T@"TUSenderIdentityClient",R,N,V_senderIdentityClient
T@"VMVoicemailManager",&,N,V_voicemailManager
T@,&,N,V_handler
T@?,C,N,V_predicate
TB,N,GisDeleted,V_deleted
TB,N,GisOnline,V_online
TB,N,GisTrashed,V_trashed
TB,N,GisUnread,V_unread
TB,N,V_confirmationEnabled
TB,N,V_includeAllEntitiesInDisambiguation
TB,N,V_includeThirdPartyCalls
TB,N,V_subscriberCountryCodeDidChange
TB,R,N
TB,R,N,GisAirplaneModeEnabled
TB,R,N,GisDeleted
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisFaceTimeAudioBlocked
TB,R,N,GisFaceTimeVideoBlocked
TB,R,N,GisOnline
TB,R,N,GisSubscribed
TB,R,N,GisTrashed
TB,R,N,GisUnread
TQ,N,V_callTypes
TQ,N,V_identifier
TQ,N,V_resolutionResultType
TQ,R
TQ,R,N
Td,R,N
Tq,N,V_callCapability
Tq,N,V_confirmationMargin
Tq,N,V_destinationType
Tq,N,V_preferredCallProvider
Tq,N,V_successfulResolutionMargin
Tq,R,N,V_recommendationType
Tq,R,N,V_type
URLWithString:
UTF8String
UUID
UUIDString
_allContacts
_allMockVoicemails
_allRelevantISOCountryCodes
_appResolver
_appearsToBeEmail
_appearsToBePhoneNumber
_applyImpliedFilterToPhoneNumberOnlyMatchesIfApplicableForPersonsByContact:requestedHandleType:preferredCallProvider:
_audioPlaybackService
_availableContacts
_cachedResult
_cachedSiriLanguageCode
_callCenter
_callHistoryDataSource
_callTypes
_callerPool
_confirmationEnabled
_confirmationMargin
_contactByIdCache
_contactIdentifiers
_contactIdentifiersConfirmed
_contactPoolForConversation:
_contactStore
_contactsDataSource
_contactsMatchingIdentifiers:
_contactsMatchingNamesForPerson:
_conversationProviderManager
_coreAnalyticsLogger
_coreTelephonyClient
_coreTelephonyClientQueue
_dataSource
_date
_deleted
_destinationType
_dispatchQueue
_duration
_entities
_faceTimeUtilities
_favoritesController
_favoritesDataSource
_featureFlags
_filters
_group
_handleToPersonCache
_handler
_handlesConfirmed
_identifier
_identifierToContactCache
_identifiersForRecommendedPerson:
_idiom
_inPerson
_inPersonsFromContact:withRequestedType:requestedLabel:isoCountryCodes:
_includeAllEntitiesInDisambiguation
_includeThirdPartyCalls
_initWithIntent:
_intentIdentifier
_isOwnedByCurrentUser
_isPrimaryDisplayDisabled
_lookup:
_matchesCallerFilter:
_matchesParticipantsFilter:
_originatingDeviceRapportEffectiveIdentifier
_originatingDeviceRapportMediaSystemIdentifier
_participants
_participantsPool
_persons
_playVoicemail:completion:
_predicate
_preferredCallProvider
_providerManager
_queue
_radiosPreferences
_recentCallIdToCallRecordCache
_recentIntentHandlersAndIdentifiers
_recommendationType
_resolutionResultType
_resolutionSummary
_resolvedEntities
_responseForMatchingConversation:intent:
_scoreByEntity
_scoreReasonsByEntity
_sendSiriMatchAnalyticsEventForIdentifiers:contactsMatchingId:contactsMatchingName:
_senderDestinationID
_senderIdentityClient
_signInController
_subscribed
_successfulResolutionMargin
_trashed
_tuHandle
_type
_unresolvedPerson
_userInput
_voicemailManager
absoluteString
actionType
activeConversationForCall:
activeConversations
addCallParticipant:toCall:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addRemoteMembers:otherInvitedHandles:toConversation:
addScore:forEntities:reason:
addScore:forEntity:reason:
airplaneMode
airplaneModeEnabled
allContactIds
allContacts
allCountryCodesRelevantToCall:
allMockVoicemails
allObjects
allRelevantISOCountryCodes
allTUHandles
allValues
alternatives
andPredicateWithSubpredicates:
answerWithRequest:
anyContactsHaveSameName:
appResolver
appSupportsDeprecatedCallingIntents:
array
arrayWithCapacity:
arrayWithObjects:count:
audioPlaybackService
audioRoute
authTokenChanged:
autorelease
availableContacts
beginQueryWithDestinations:
boolForKey:
boolValue
buildConfirmationResultForContact:withReason:
buildDisambiguationResultForContacts:
bundleIdentifier
cachedResult
callCapabilities
callCapability
callCapabilityFromRecentCall:
callCapabilityPredicate
callCenter
callCenterWithQueue:
callCountWithPredicate:
callFilterController
callGroup
callGroups
callHistoryDataSource
callIdentifier
callRecordFilter
callRecordForRecentCall:
callRecordForRecentCall:withContactsDataSource:withCallProviderManager:withCurrentISOCountryCodes:
callRecordIdentifier
callRecordToCallBack
callRecordTypePredicates
callRecordsForRecentCalls:withContactsDataSource:withCallProviderManager:
callRecordsForRecentCalls:withContactsDataSource:withCallProviderManager:withCurrentISOCountryCodes:
callRecordsForRecentCallsWithRecordTypeOptions:startDate:endDate:recipient:capabilities:preferredProvider:maximumRecordCount:unseen:
callRecordsForVoicemails:
callRinging
callStatus
callTypes
callUUID
caller
callerIdIsBlocked
callerPool
callerPoolContainsOneOf:
callingBlocked
callsWithPredicate:limit:offset:batchSize:
canAttemptEmergencyCallsWithoutCellularConnection
canAttemptTelephonyCallsWithoutCellularConnection
caseInsensitiveCompare:
class
coalescedCallsWithPredicate:limit:offset:batchSize:
code
compare:
compatibilityObject
componentsForContact:
confirmAddCallParticipant:completion:
confirmAnswerCall:completion:
confirmHangUpCall:completion:
confirmIdentifyIncomingCaller:completion:
confirmJoinCall:completion:
confirmPlayVoicemail:completion:
confirmSearchCallHistory:completion:
confirmStartCall:completion:
confirmationEnabled
confirmationMargin
confirmationRequiredWithPersonToConfirm:
confirmationRequiredWithPersonToConfirm:forReason:
conformsToProtocol:
contactByIdCache
contactForIdentifier:keysToFetch:
contactIdentifier
contactIdentifiers
contactIdentifiersConfirmed
contactStore
contactWithId:
contactWithMostHandles:
contacts
contactsAvailableInPool:
contactsDataSource
contactsShareHandleValue:
contactsWithIds:
containsRestrictedHandle:forBundleIdentifier:performSynchronously:
conversationId
conversationLink
conversationLinkForURL:
conversationManager
copy
copyMobileCountryCode:error:
copyRegistrationStatus:error:
coreAnalyticsLogger
coreTelephonyClient
coreTelephonyClientQueue
coreTelephonyDataSource
count
countByEnumeratingWithState:objects:count:
crrFullRecommendation
crrHandleRecommendation
customIdentifier
dataSource
dataWithContentsOfURL:
date
dateByAddingTimeInterval:
dateCreated
dateWithTimeIntervalSinceNow:
debugDescription
dedupeINPersons:
defaultCenter
description
descriptorForRequiredKeysForStyle:
descriptorForUsedKeys
destinationWithURI:
dialType
dictionaryWithObjects:forKeys:count:
didDetectSimDeactivation:info:
directFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
disambiguationItems
disambiguationWithPeopleToDisambiguate:
disconnectCall:withReason:
disconnectCurrentCallAndActivateHeld
dispatchQueue
displayName
duration
emailAddresses
emergencyHandles
emergencyLabeledHandles
emergencyProvider
emergencyType
emergencyTypeToString:
endDateComponents
endPlayback
endpointRapportEffectiveIdentifier
endpointRapportMediaSystemIdentifier
entities
entriesForContact:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
exceptionWithName:reason:userInfo:
existingHandlerForIntentIdentifier:
expectFoundInAppsContacts
expectUpstreamContactRecommendation
extractHandlesFromIntent:faceTimeMemberHandles:nonFaceTimeMemberHandles:
extractRecommendation
faceTimeAudioBlocked
faceTimeInvitationEnabled
faceTimeLink
faceTimeNoFanOutEnabled
faceTimeType
faceTimeUtilities
faceTimeVideoBlocked
favoritesController
favoritesDataSource
featureFlags
fetchSPIHandlesForGroupID:
filterForCallGroup:
filterForParticipantCount:
filteredArrayUsingPredicate:
firstObject
floatValue
frontmostAudioOrVideoCall
generateAdditionalMatchingHandles:resolvedContacts:requestedHandleType:requestedHandleLabel:
generateFaceTimeLink:
generateLinkWithInvitedMemberHandles:completionHandler:
getAlternativesForContact:forRequestedHandleType:forCallProvider:
getSubscriptionInfoWithError:
globalEmergencyNumbers
groupConversation
groupConversationFilter
groupName
handle
handleAddCallParticipant:completion:
handleAnswerCall:completion:
handleHangUpCall:completion:
handleIdentifyIncomingCaller:completion:
handleJoinCall:completion:
handleSearchCallHistory:completion:
handleStartCall:completion:
handleToPersonCache
handleWithDestinationID:
handleWithPerson:
handlerForIntent:
handlesConfirmed
hasCamera
hasFavoritesEntryForContact:
hasFavoritesEntryForTelephonyCallWithPhoneNumber:isoCountryCodes:
hash
haveAlreadyConfirmedRecipient:
identifier
identifierToContactCache
image
inPerson
inPersonFromContact:handleValue:handleType:handleLabel:
includeAllEntitiesInDisambiguation
includeThirdPartyCalls
incomingCall
incomingVideoCall
inferCallCapabilityForPreferredCallProvider:recentCall:initialCallCapability:idiom:isDisplayDisabled:
init
initForActiveVoicemailAccountWithVoicemails:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCall:
initWithCallCenter:
initWithCallCenter:contactsDataSource:
initWithCaller:participants:dataSource:
initWithCapacity:
initWithCode:userActivity:
initWithContactStore:
initWithContacts:
initWithConversation:
initWithConversationId:caller:otherParticipants:callGroup:
initWithConversationLink:otherInvitedHandles:sendLetMeInRequest:
initWithDataSource:
initWithDataSource:logger:
initWithDeferredFormat:fromTable:bundle:arguments:
initWithDialIntent:providerManager:contactsDataSource:senderIdentityClient:
initWithDispatchQueue:
initWithEntities:
initWithFeatureFlags:
initWithFeatureFlags:faceTimeUtilities:
initWithFilters:
initWithFullyResolvedPerson:
initWithHandleType:notificationStyles:
initWithHandler:intentIdentifier:
initWithHandles:
initWithINPerson:
initWithIdentifier:dateCreated:callRecordType:callCapability:callDuration:unseen:participants:numberOfCalls:isCallerIdBlocked:
initWithIdentifier:dateCreated:callRecordType:callCapability:callDuration:unseen:preferredCallProvider:participants:numberOfCalls:providerId:providerBundleId:isCallerIdBlocked:
initWithItemURL:itemData:numberOfLoops:volume:fadeInDuration:fadeOutDuration:userInfo:
initWithParticipants:destinationType:callTypes:callCapability:preferredCallProvider:
initWithParticipants:destinationType:callTypes:callCapability:preferredCallProvider:includeThirdPartyCalls:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:
initWithPredicate:
initWithQueue:
initWithRecommendationType:persons:
initWithRemoteMembers:otherInvitedHandles:
initWithSet:
initWithSiriInferencePerson:
initWithType:contactIdentifiers:
initWithType:resolvedEntities:resolutionSummary:
initWithType:value:
initWithUnresolvedPerson:availableContacts:
initWithUserActivity:
initWithValue:type:label:
initWithValue:type:label:emergencyType:
initiator
inputDevices
insertObject:atIndex:
integerValue
intentHasUnresolvedLocalEmergencyContact:
intentIdentifier
interpretContactResolutionRecommendation:participant:
intersectSet:
intersectsSet:
isAirplaneModeEnabled
isBlocked
isCanonicallyEqualToHandle:isoCountryCode:
isCellularServiceAvailable
isChinaSKUDevice
isConversation
isDeleted
isDirectFaceTimeAudioCallingCurrentlyAvailable
isDirectFaceTimeVideoCallingCurrentlyAvailable
isEmergencyHandle:
isEmergencyNumberForDigits:senderIdentityUUID:
isEqual:
isEqualToIgnoringCase:
isEqualToString:
isFaceTimeAudioAvailableForAnyDestinationInDestinations:
isFaceTimeAudioBlocked
isFaceTimeEnabled
isFaceTimeEnabledInSettings
isFaceTimeInvitationEnabled
isFaceTimeMultiwayAvailableForAnyDestinationInDestinations:
isFaceTimeNoFanOutEnabled
isFaceTimeProvider
isFaceTimeVideoAvailableForAnyDestinationInDestinations:
isFaceTimeVideoBlocked
isFoundInAppsSuggestion
isGFTDisabledForChinaSKU:
isGreenTea
isGroupCall
isKindOfClass:
isMMIOrUSSDNumber:
isMe
isMemberOfClass:
isOnline
isRestrictedMessage:
isSendingVideo
isSubscribed
isSubsetOfSet:
isSuggested
isTelephonyProvider
isTrashed
isUnread
isUnresolvedLocalEmergencyContact:
isValidForISOCountryCode:
isVideoEnabled
isoCountryCode
itemToConfirm
joinConversationWithConversationRequest:
keysToFetch
label
length
localizeForLanguage:
localizedEmergencyString:
localizedStringForLabel:
localizedStringFromPersonNameComponents:style:options:
logOutgoingCallToHandle:
logSiriMatchEvent:matchesByIdCount:matchesByNameCount:siriLocale:
longLongValue
mainQueue
makeActivityWithIntent:dialRequestAttachment:
makeActivityWithIntent:joinRequestAttachment:
makeFilterForINCallGroupConversationFilter:contactsDataSource:
markVoicemailAsRead:
matchCallerAndParticipantsExactly
matches:
matchingContactsForPerson:
maximumRecordCountForCallRecordTypeOptions:
mediaType
messagesGroupName
nameComponents
nameForResolutionResultType:
needsValue
normalizedDestination
normalizedEmailAddressHandleForValue:
normalizedGenericHandleForValue:
normalizedHandleWithDestinationID:
normalizedPhoneNumberHandleForValue:isoCountryCode:
notRequired
null
numberOfOccurrences
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
online
orPredicateWithSubpredicates:
parseEmergencyContacts:usingExistingResult:
participants
participantsPool
participantsPoolContainsOneOf:
participantsPredicatesWithContactsDataSource:contactIdentifierCache:coreTelephonyDataSource:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personHandle
personResolutionResultsForIntent:
phoneNumberWithStringValue:
phoneNumbers
phonemeData
plugInKitPlugins
populatePersonsByTUHandleFrom:personsByTUHandle:tuHandleOrderedSet:
predicate
predicateForAudioCalls
predicateForCallToCallBackWithAnyOfTheseRemoteParticipantHandles:isoCountryCodes:
predicateForCallsAfterDate:beforeDate:
predicateForCallsThatAreRead:
predicateForCallsThatWereAnswered:
predicateForCallsThatWereOriginated:
predicateForCallsWithAnyOfTheseRemoteParticipantHandles:isoCountryCodes:
predicateForCallsWithCallCategory:
predicateForCallsWithDurationGreaterThan:
predicateForCallsWithDurationLongerThanImmediateHangUp
predicateForCallsWithNumberOfRemoteParticipants:
predicateForCallsWithServiceProvider:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingName:options:
predicateForContactsMatchingPhoneNumber:
predicateForContactsWithIdentifiers:
predicateForFaceTimeCalls
predicateForMissedCallsSinceDate:
predicateForRecentCallWithContactsDataSource:contactIdentifierCache:coreTelephonyDataSource:
predicateForRemoteParticipantsWithNormalizedValues:
predicateForRemoteParticipantsWithValues:
predicateForRemoteParticipantsWithValues:caseInsensitiveValues:normalizedValues:
predicateForRemoteParticipantsWithValuesCaseInsensitive:
predicateForTelephonyCalls
predicateForTelephonyOrFaceTimeCalls
predicateForVideoCalls
predicateWithBlock:
predicateWithFormat:
predicateWithValue:
preferredCallProvider
preferredCallProviderFor:
preferredCallProviderFromRecentCall:
preferredCallProviderPredicate
prioritizedSenderIdentities
prlVersionDidChange:version:
provider
providerForRecentCall:
providerId
queue
radiosPreferences
raise
read
recentCallIdToCallRecordCache
recentCallRecordToRedialForIntent:
recentCallToRedialForQuery:
recentCallsWithHandles:telephonyOnly:
recentIntentHandlersAndIdentifiers
recipient
recommendation
recommendationType
recommendedResult
recordTypeForRedialing
registerForCallbacksForProvider:completionHandler:
registerForProvider
relationship
relayCRRRecommendationForPerson:intent:
remoteMembers
remoteParticipantHandles
removeLastObject
removeObjectAtIndex:
requireScoreBasedResolutionForGFT:numberOfContactsCount:
resolutionResultCode
resolutionResultDisambiguationWithItemsToDisambiguate:
resolutionResultForCallCapability:idiom:withDisplayDisabled:
resolutionResultForEmergency
resolutionResultForPersonWithResolvedContactName:resolvedPerson:resolvedContact:contactIdentifiersRequiringConfirmation:
resolutionResultForPersonWithResolvedHandleValue:
resolutionResultType
resolutionResultUnsupportedWithReason:alternativeItems:
resolutionSummary
resolveCallCapabilityForStartCall:withCompletion:
resolveCallRecordToCallBackForStartCall:withCompletion:
resolveCallTypeForSearchCallHistory:withCompletion:
resolveCallTypesForSearchCallHistory:withCompletion:
resolveContactsForStartCall:withCompletion:
resolveContactsFromCallGroups:
resolveDateCreatedForSearchCallHistory:withCompletion:
resolveDestinationTypeForStartCall:withCompletion:
resolveFaceTimeLinkForStartCall:withCompletion:
resolveGroupConversationForJoinCall:withCompletion:
resolveParticipantsForAddCallParticipant:withCompletion:
resolvePreferredCallProviderForStartCall:withCompletion:
resolvePreferredContactFromContacts:
resolvePreferredHandleFromHandles:contactIdentifiersRequiringConfirmation:telephonyOnly:
resolveRecipientForSearchCallHistory:withCompletion:
resolveUnseenForSearchCallHistory:withCompletion:
resolvedEntities
resolvedValue
respondsToSelector:
responseForDialRequest:intent:
responseForJoinRequest:intent:callProvider:
restrictedContacts:callProvider:
result
retain
retainCount
reverseObjectEnumerator
runIDSQueryForStartCallIntent:
runNativeContactResolutionOnParticipant:
score
scoreByEntity
scoreReasonsByEntity
scoredAlternatives
self
senderDestinationID
senderIdentityClient
setAllMockVoicemails:
setAudioPlaybackService:
setBehavior:
setCachedResult:
setCallCapability:
setCallCenter:
setCallTypes:
setCallerPool:
setConfirmationEnabled:
setConfirmationMargin:
setConfirmationReason:
setCoreAnalyticsLogger:
setDataSource:
setDate:
setDelegate:
setDeleted:
setDestinationType:
setDispatchQueue:
setDuration:
setEndpointIDSDestination:
setEndpointRapportEffectiveIdentifier:
setEndpointRapportMediaSystemIdentifier:
setEntities:
setFaceTimeUtilities:
setFeatureFlags:
setHandleToPersonCache:
setHandler:
setHandlesConfirmed:
setHungUpCallType:
setIdentifier:
setIncludeAllEntitiesInDisambiguation:
setIncludeThirdPartyCalls:
setIntentIdentifier:
setInvitationPreferences:
setObject:forKey:
setObject:forKeyedSubscript:
setOnline:
setParticipants:
setParticipantsPool:
setPersonHandle:
setPredicate:
setPreferredCallProvider:
setRecentCallIdToCallRecordCache:
setRecentIntentHandlersAndIdentifiers:
setResolutionResultType:
setResolutionSummary:
setResolvedEntities:
setRestrictedContacts:
setScoreByEntity:
setScoreReasonsByEntity:
setSenderDestinationID:
setShouldDoEmergencyCountdown:
setSourceIdentifier:
setStatusCode:
setSubscribed:
setSubscriberCountryCodeDidChange:
setSuccessfulResolutionMargin:
setTrashed:
setUUID:
setUnread:
setValue:forKey:
setVideo:
setVideoEnabled:
setVoicemailManager:
setWantsStagingArea:
setWithArray:
setWithObject:
sharedInstance
sharedManager
sharedPreferences
shortLabelsDidChange
shouldForceAudioOnlyWithIdiom:withDisplayDisabled:
shouldRequireInvalidNumberConfirmationForRecipient:
shouldRequireUnknownRecipientConfirmationForRequestedRecipient:resolvedToRecipient:contact:
signInController
simLockSaveRequestDidComplete:success:
simPinChangeRequestDidComplete:success:
simPinEntryErrorDidOccur:status:
simPukEntryErrorDidOccur:status:
simStatusDidChange:status:
siriLanguageCode
siriMatches
sortContacts:withIdentifiers:
sortFaceTimeHandles:faceTimeHandles:nonFaceTimeHandles:
sortedArrayUsingSelector:
standardUserDefaults
startAudioPlayback:completion:
startAudioPlaybackRequest:options:completion:
startDateComponents
stringFromContact:style:
stringValue
stringWithFormat:
subarrayWithRange:
subscribed
subscriberCountryCodeDidChange
subscriptionsInUse
successWithResolvedCallCapability:
successWithResolvedCallDestinationType:
successWithResolvedCallGroupConversation:
successWithResolvedCallRecord:
successWithResolvedPerson:
successWithResolvedPreferredCallProvider:
successWithResolvedString:
successfulResolutionMargin
superclass
supportsDisplayingFaceTimeAudioCalls
supportsDisplayingFaceTimeVideoCalls
supportsFaceTimeAudioCalls
supportsFaceTimeVideoCalls
supportsPrimaryCalling
supportsTelephonyCalls
telephonyProvider
timeIntervalSinceDate:
transactionDidCompleteForIntentIdentifier:
tuHandle
tu_allContactIdentifiers
tu_contactsForHandles:keyDescriptors:error:
tu_contactsMatchingIdentifiers:contactsDataSource:identifierToContactCache:
tu_emailAddressesMatchingPersonHandleLabel:
tu_handlesMatchingPersonWithContactsDataSource:identifierToContactCache:
tu_initUnlabledPersonHandleWithTUHandle:isoCountryCodes:
tu_labeledValue:matchesPersonHandleLabel:
tu_mapObjectsUsingBlock:
tu_matchingINPersonHandlesByContactIdentifier
tu_normalizedCHHandlesFromTUHandle:isoCountryCodes:
tu_personHandleMatchingHandle:isoCountryCodes:
tu_personMatchingHandle:contactsDataSource:isoCountryCodes:
tu_personWithFormattedHandleForISOCountryCodes:
tu_phoneNumbersMatchingPersonHandleLabel:
tu_tuHandle
tu_voicemailsPassingTest:
type
unformattedInternationalStringValue
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueId
uniqueProxyIdentifierUUID
unread
unresolvedPerson
unseen
unsupported
unsupportedForReason:
updateHandlerStateForContactResolutionResults:
updateRecentlyUsedHandlersWithHandler:
updateScoreBasedContactResolver:forFavoritesAmongContacts:
updateScoreBasedHandleResolver:forFavoritesAmongHandles:
updateScoreBasedHandleResolver:forRecentCallsMatchingHandles:telephonyOnly:
useLegacyContactResolution
useLegacyHandleResolution
userActivity
userActivityUsingDeprecatedCallingIntents:
userDefaultVoiceSlotDidChange:
usesScoreBasedEncoding
value
valueForKey:
videoDeviceController
voicemailDataSource
voicemailManager
voicemailWithCaller:unread:
voicemailWithIdentifier:
voicemailsPassingTest:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
@48@0:8@16@24q32@40
@24@0:8@16
v40@0:8@16@24@32
v16@0:8
@"<TUContactsDataSource>"
@"<IntentHandlerCoreAnalyticsLogging>"
v32@0:8@16@24
v28@0:8@16B24
v24@0:8@16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSString"24
v28@0:8@"CTXPCServiceSubscriptionContext"16B24
v24@0:8@"CTServiceDescriptor"16
v24@0:8@"CTXPCServiceSubscriptionContext"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSNumber"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTSimDeactivationInfo"24
@"NSArray"16@0:8
v20@0:8B16
@"CoreTelephonyClient"
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@24@0:8Q16
B24@0:8@"TUConversation"16
@24@0:8@?16
@?16@0:8
v24@0:8@?16
B32@0:8@16@24
@"NSArray"24@0:8@?<B@?@"<SearchCallHistoryVoicemail>">16
@28@0:8@16B24
d16@0:8
@"NSDate"16@0:8
v24@0:8Q16
v24@0:8d16
@"NSDate"
@"NSString"
v40@0:8q16@24@32
v24@0:8q16
q16@0:8
@"NSMutableDictionary"
@"ScoreBasedResolutionResult"
@40@0:8Q16@24@32
@"NSDictionary"
@40@0:8@16@24@32
B24@0:8@"NSString"16
Q24@0:8Q16
v32@0:8@16@?24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INSearchCallHistoryIntentResponse">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeOptionsResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INBooleanResolutionResult">24
@80@0:8Q16@24@32@40Q48q56Q64@72
@"<SearchCallHistoryIntentHandlerDataSource>"
@"NSCache"
@"<TUContactsDataSource>"16@0:8
@"<CallHistoryDataSource>"16@0:8
@"<CoreTelephonyDataSource>"16@0:8
@"TUCallProviderManager"16@0:8
@"<SearchCallHistoryVoicemailDataSource>"16@0:8
@"<CallHistoryDataSource>"
@"TUCallProviderManager"
@"CNContactStore"
@32@0:8q16@24
v48@0:8@16@24@32@40
v48@0:8@"NSNumber"16@"NSNumber"24@"NSNumber"32@"NSString"40
v32@0:8@"VMVoicemail"16@?<v@?@"NSError">24
v32@0:8@"INPlayVoicemailIntent"16@?<v@?@"INPlayVoicemailIntentResponse">24
@"<SiriAudioPlaybackService>"
@"VMVoicemailManager"
@"TUCallCenter"
v32@0:8@"INAddCallParticipantIntent"16@?<v@?@"INAddCallParticipantIntentResponse">24
v32@0:8@"INAddCallParticipantIntent"16@?<v@?@"NSArray">24
@"TUConversationProviderManager"
@"NSObject<OS_dispatch_group>"
@"NSMutableArray"
v32@0:8@"INIdentifyIncomingCallerIntent"16@?<v@?@"INIdentifyIncomingCallerIntentResponse">24
q24@0:8@16
@"<IdentifyIncomingCallerIntentHandlerDataSource>"
@20@0:8B16
@24@0:8d16
@24@0:8q16
@20@0:8I16
@56@0:8@16q24Q32q40q48
@60@0:8@16q24Q32q40q48B56
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallIntentResponse">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INCallRecordResolutionResult">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INCallDestinationTypeResolutionResult">24
v32@0:8@"INStartCallIntent"16@?<v@?@"NSArray">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallCallCapabilityResolutionResult">24
q52@0:8q16@24q32q40B48
@36@0:8q16q24B32
B28@0:8q16B24
B32@0:8Q16Q24
@48@0:8@16@24@32@40
@36@0:8@16@24B32
v36@0:8@16@24B32
@40@0:8@16q24q32
@48@0:8@16q24@32@40
B40@0:8@16@24@32
@"<StartCallIntentHandlerDataSource>"
@"<AppResolving>"
@"NSMutableOrderedSet"
@"IntentHandlerFeatureFlags"
@"FaceTimeUtilities"
B24@0:8@"CNContact"16
B32@0:8@"TUHandle"16@"NSArray"24
@"CNFavorites"
Q24@0:8@16
v24@0:8@"TUHandle"16
@"NSArray"24@0:8@"NSString"16
@24@0:8@"NSObject<OS_dispatch_queue>"16
Q24@0:8@"TUDialRequest"16
@"NSArray"32@0:8@"NSArray"16@"TUCallProvider"24
@"TUSenderIdentityClient"16@0:8
@"<FavoritesDataSource>"16@0:8
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"TUCallCenter"16@0:8
@"IDSSignInController"
@"TUSenderIdentityClient"
@"<FavoritesDataSource>"
@"RadiosPreferences"
@"ContactPool"
@"INPerson"
v32@0:8@"INJoinCallIntent"16@?<v@?@"INJoinCallIntentResponse">24
v32@0:8@"INJoinCallIntent"16@?<v@?@"INCallGroupConversationResolutionResult">24
v32@0:8@"INHangUpCallIntent"16@?<v@?@"INHangUpCallIntentResponse">24
@32@0:8@16q24
v24@0:8@"NSArray"16
B24@0:8@"NSArray"16
@"TUConversationLink"24@0:8@"NSSet"16
v32@0:8@"INAnswerCallIntent"16@?<v@?@"INAnswerCallIntentResponse">24
@"<AnswerCallIntentHandlerDataSource>"
@"TUHandle"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>cellular-plan</string>
</array>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.private.CallHistory.read</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/System/Library/PrivateFrameworks/TelephonyUtilities.framework/PlugIns/PhoneIntentHandler.appex/PhoneIntentHandler</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.security.storage.Voicemail</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCamera</string>
</array>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.device.camera</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/InCallService.app/</string>
<string>/Applications/NanoPhone.app/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/CallHistoryDB/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.CellularPlanDaemon.xpc</string>
<string>com.apple.imdpersistence.IMDPersistenceAgent</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.videoconference.camera</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
<string>register-gft-service</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
</dict>
</plist>
l0% com.apple.CallHistory.sync.allow
0i com.apple.CallKit.call-directory0E
synchronize-extensions
compact-store
query-identification-entries09!com.apple.CommCenter.fine-grained0
spi
cellular-plan0!
com.apple.assistant.settings
0)$com.apple.coreaudio.allow-amr-decode
0'"com.apple.private.CallHistory.read
0-(com.apple.private.CallHistory.read-write
0+&com.apple.private.accounts.allaccounts
9com.apple.private.attribution.implicitly-assumed-identity
type
path0{
valuer/System/Library/PrivateFrameworks/TelephonyUtilities.framework/PlugIns/PhoneIntentHandler.appex/PhoneIntentHandler04/com.apple.private.coreservices.canmaplsdatabase
com.apple.private.ids.messaging
0K"com.apple.private.ids.registration0%
com.apple.ess
com.apple.private.ac0% com.apple.private.imcore.imagent
01,com.apple.private.imcore.spi.database-access
0(#com.apple.private.intents.extension
01,com.apple.private.security.storage.Voicemail
0+&com.apple.private.suggestions.contacts
com.apple.private.tcc.allow0+
kTCCServiceAddressBook
kTCCServiceCamera0#
com.apple.security.app-sandbox
0% com.apple.security.device.camera
0~:com.apple.security.exception.files.absolute-path.read-only0@ /Applications/InCallService.app/
/Applications/NanoPhone.app/0q?com.apple.security.exception.files.home-relative-path.read-only0.
/Library/Voicemail/
/Library/CallHistoryDB/0
@com.apple.security.exception.files.home-relative-path.read-write0]
/Library/Voicemail/
/Library/Logs/CallHistory
/Library/CallHistoryDB/
/Media/Recordings/0
%4com.apple.security.exception.mach-lookup.global-name0
Ccom.apple.telephonyutilities.callservicesdaemon.conversationmanagerCcom.apple.telephonyutilities.callservicesdaemon.callprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerKcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager)com.apple.identityservicesd.embedded.auth
com.apple.CallHistorySyncHelper
com.apple.voicemail.vmd
com.apple.commcenter.xpc com.apple.CellularPlanDaemon.xpc,com.apple.imdpersistence.IMDPersistenceAgent083com.apple.security.personal-information.addressbook
>com.apple.security.temporary-exception.mach-lookup.global-name0
^Ccom.apple.telephonyutilities.callservicesdaemon.callprovidermanagerCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerKcom.apple.telephonyutilities.callservicesdaemon.conversationprovidermanager(com.apple.identityservicesd.desktop.auth
com.apple.CallHistorySyncHelper
com.apple.commcenter.xpc com.apple.videoconference.camera0dBcom.apple.security.temporary-exception.shared-preference.read-only0
com.apple.TelephonyUtilities0
*com.apple.telephonyutilities.callservicesd0}access-calls
access-call-providersmodify-calls
access-call-capabilities
modify-call-capabilities
register-gft-service0% com.apple.visualvoicemail.client
