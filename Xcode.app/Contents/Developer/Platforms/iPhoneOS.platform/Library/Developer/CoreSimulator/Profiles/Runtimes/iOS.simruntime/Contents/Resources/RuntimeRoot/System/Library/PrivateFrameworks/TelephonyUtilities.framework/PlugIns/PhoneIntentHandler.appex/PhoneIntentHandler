init
phoneNumbers
countByEnumeratingWithState:objects:count:
length
tu_labeledValue:matchesPersonHandleLabel:
addObject:
copy
emailAddresses
caseInsensitiveCompare:
label
localizedStringForLabel:
tu_initUnlabledPersonHandleWithTUHandle:
type
value
stringValue
initWithType:value:
initWithValue:type:label:
array
tuHandlesForPhoneNumbers
tuHandlesForEmailAddresses
addObjectsFromArray:
tu_phoneNumbersMatchingPersonHandleLabel:
tu_emailAddressesMatchingPersonHandleLabel:
tu_personHandleMatchingHandle:
allTUHandles
allMockVoicemails
exceptionWithName:reason:userInfo:
raise
predicateWithBlock:
filteredArrayUsingPredicate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
tu_voicemailsPassingTest:
isOnline
isSubscribed
initForActiveVoicemailAccountWithVoicemails:
.cxx_destruct
setOnline:
setSubscribed:
setAllMockVoicemails:
_online
_subscribed
_allMockVoicemails
setSenderDestinationID:
setUnread:
voicemailWithCaller:unread:
identifier
date
senderDestinationID
duration
isDeleted
isTrashed
isUnread
setIdentifier:
setDate:
setDuration:
setDeleted:
setTrashed:
_deleted
_trashed
_unread
_identifier
_date
_senderDestinationID
_duration
setObject:forKeyedSubscript:
numberWithInt:
objectForKeyedSubscript:
integerValue
numberWithInteger:
stringWithFormat:
addScore:forEntity:reason:
entities
scoreByEntity
setObject:forKey:
allKeys
compare:
sortedArrayUsingSelector:
reverseObjectEnumerator
allObjects
firstObject
count
objectAtIndexedSubscript:
successfulResolutionMargin
confirmationEnabled
confirmationMargin
includeAllEntitiesInDisambiguation
nameForResolutionResultType:
containsObject:
initWithType:resolvedEntities:resolutionSummary:
initWithEntities:
addScore:forEntities:reason:
setSuccessfulResolutionMargin:
setConfirmationMargin:
setConfirmationEnabled:
result
setIncludeAllEntitiesInDisambiguation:
setEntities:
setScoreByEntity:
scoreReasonsByEntity
setScoreReasonsByEntity:
cachedResult
setCachedResult:
_confirmationEnabled
_includeAllEntitiesInDisambiguation
_successfulResolutionMargin
_confirmationMargin
_entities
_scoreByEntity
_scoreReasonsByEntity
_cachedResult
resolutionResultType
setResolutionResultType:
resolvedEntities
setResolvedEntities:
resolutionSummary
setResolutionSummary:
_resolutionResultType
_resolvedEntities
_resolutionSummary
_appearsToBePhoneNumber
_appearsToBeEmail
tu_tuHandle
contactIdentifier
siriMatches
personHandle
emergencyType
initWithValue:type:label:emergencyType:
nameComponents
displayName
image
customIdentifier
isMe
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isMe:
handleWithPersonHandle:
tu_allContactIdentifiers
tu_contactsMatchingIdentifiers:contactsDataSource:identifierToContactCache:
objectForKey:
predicateForContactsWithIdentifiers:
arrayWithObjects:count:
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingEmailAddress:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
descriptorForUsedKeys
componentsForContact:
tu_personWithFormattedHandle
tu_handlesMatchingPersonWithContactsDataSource:identifierToContactCache:
tu_personMatchingHandle:contactsDataSource:
initWithDataSource:
dateCreated
startDateComponents
endDateComponents
recipient
callCapabilities
callTypes
unseen
preferredCallProvider
maximumRecordCountForCallRecordTypeOptions:
dataSource
voicemailDataSource
contactsDataSource
identifierToContactCache
boolValue
subarrayWithRange:
callRecordsForVoicemails:
callRecordsForRecentCallsWithRecordTypeOptions:startDate:endDate:recipient:capabilities:preferredProvider:maximumRecordCount:unseen:
initWithCode:userActivity:
setCallRecords:
notRequired
successWithResolvedPerson:
unsupported
arrayWithCapacity:
null
numberWithUnsignedInteger:
numberWithDouble:
numberWithBool:
initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:
predicateForCallsAfterDate:beforeDate:
predicateForCallsWithNumberOfRemoteParticipants:
predicateForCallsWithAnyOfTheseRemoteParticipantHandles:
predicateForCallsThatWereOriginated:
predicateForCallsThatWereAnswered:
andPredicateWithSubpredicates:
orPredicateWithSubpredicates:
predicateForAudioCalls
predicateForVideoCalls
predicateForTelephonyCalls
predicateForFaceTimeCalls
predicateForCallsThatAreRead:
callHistoryDataSource
coalescedCallsWithPredicate:limit:offset:batchSize:
sharedInstance
callRecordsForRecentCalls:withContactsDataSource:
handleSearchCallHistory:completion:
confirmSearchCallHistory:completion:
resolveCallTypeForSearchCallHistory:withCompletion:
resolveDateCreatedForSearchCallHistory:withCompletion:
resolveRecipientForSearchCallHistory:withCompletion:
resolveCallTypesForSearchCallHistory:withCompletion:
resolveUnseenForSearchCallHistory:withCompletion:
callHistoryControllerOptionsForCallCapabilities:preferredCallProvider:
_dataSource
_identifierToContactCache
voicemailsPassingTest:
contactStore
callHistoryController
setCallHistoryController:
_callHistoryDataSource
_callHistoryController
_contactStore
rate
isEqualToString:
voicemailFinishedPlaying
setVoicemailFinishedPlaying:
observeValueForKeyPath:ofObject:change:context:
callRecordIdentifier
longLongValue
voicemailWithIdentifier:
setCurrentVoicemail:
setCurrentPlayer:
_playCurrentVoicemailWithCompletion:
currentVoicemail
category
setCategory:withOptions:error:
setActive:error:
dataURL
initWithURL:
addObserver:forKeyPath:options:context:
markVoicemailAsRead:
play
handlePlayVoicemail:completion:
confirmPlayVoicemail:completion:
currentPlayer
_voicemailFinishedPlaying
_currentVoicemail
_currentPlayer
existingHandlerForIntentIdentifier:
initWithHandler:intentIdentifier:
updateRecentlyUsedHandlersWithHandler:
handler
recentIntentHandlersAndIdentifiers
intentIdentifier
enumerateObjectsUsingBlock:
removeObjectAtIndex:
insertObject:atIndex:
removeLastObject
handlerForIntent:
setRecentIntentHandlersAndIdentifiers:
_recentIntentHandlersAndIdentifiers
setIntentIdentifier:
setHandler:
_intentIdentifier
_handler
UTF8String
callCenterWithQueue:
incomingCall
incomingVideoCall
handle
setStatusCode:
callUUID
isVideo
predicateForMissedCallsSinceDate:
callsWithPredicate:limit:offset:batchSize:
handleIdentifyIncomingCaller:completion:
confirmIdentifyIncomingCaller:completion:
setDataSource:
predicateForCallsWithNoDuration
predicateWithFormat:
predicateForCallsWithDurationGreaterThan:
predicateWithValue:
predicateForCallsWithAnyOfTheseRemoteParticipantHandles:isoCountryCodes:
canonicalHandleForISOCountryCode:
normalizedDestination
lowercaseString
predicateForCallsWithServiceProvider:
predicateForCallsWithCallCategory:
predicateForCallsWithDurationLongerThanImmediateHangUp
predicateForTelephonyOrFaceTimeCalls
providerManager
senderIdentityClient
initWithDialIntent:providerManager:contactsDataSource:senderIdentityClient:
responseForDialRequest:
code
provider
isTelephonyProvider
logOutgoingCallToHandle:
userActivity
isFaceTimeProvider
isFaceTimeEnabled
isValid
isDirectFaceTimeVideoCallingCurrentlyAvailable
isDirectFaceTimeAudioCallingCurrentlyAvailable
supportsTelephonyCalls
canAttemptTelephonyCallsWithoutCellularConnection
isAirplaneModeEnabled
supportsPrimaryCalling
isCellularServiceAvailable
_idiom
haveUnconfirmedRecipientsInIntent:
setShouldDoEmergencyCountdown:
intentHasUnresolvedLocalEmergencyContact:
destinationType
contacts
isEmergencyHandle:
haveAlreadyConfirmedRecipient:
successWithResolvedCallDestinationType:
emergencyProvider
emergencyLabeledHandles
localizedEmergencyString:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
resolutionResultDisambiguationWithItemsToDisambiguate:
isUnresolvedLocalEmergencyContact:
resolutionResultForEmergency
updateHandlerStateForContactResolutionResults:
recentCallToRedialForIntent:
callerIdIsBlocked
unsupportedForReason:
remoteParticipantHandles
anyObject
personResolutionResultsForIntent:
callCapability
mediaType
successWithResolvedCallCapability:
intentSupportsAudioOnly:
supportsFaceTimeVideoCalls
_isPrimaryDisplayDisabled
serviceProvider
successWithResolvedPreferredCallProvider:
recordTypeForRedialing
needsValue
emergencyTypeToString:
globalEmergencyNumbers
resolutionResultUnsupportedWithReason:alternativeItems:
shouldRequireInvalidNumberConfirmationForRecipient:
confirmationRequiredWithPersonToConfirm:
_contactsMatchingIdentifiers:
_inPersonsFromContact:withRequestedType:requestedLabel:
_inPersonFromContact:handleValue:handleType:handleLabel:
_applyImpliedFilterToPhoneNumberOnlyMatchesIfApplicableForPersonsByContact:requestedHandleType:preferredCallProvider:
useLegacyContactResolution
disambiguationWithPeopleToDisambiguate:
resolvePreferredContactFromContacts:
shouldRequireUnknownRecipientConfirmationForRequestedRecipient:resolvedToRecipient:contact:
resolvePreferredHandleFromHandles:
useLegacyHandleResolution
updateScoreBasedHandleResolver:forRecentCallsMatchingHandles:
updateScoreBasedHandleResolver:forFavoritesAmongHandles:
recentCallsWithHandles:telephonyOnly:
isoCountryCode
isCanonicallyEqualToHandle:isoCountryCode:
allRelevantISOCountryCodes
favoritesDataSource
hasFavoritesEntryForTelephonyCallWithPhoneNumber:isoCountryCodes:
updateScoreBasedContactResolver:forRecentCallsMatchingContacts:
updateScoreBasedContactResolver:forFavoritesAmongContacts:
timeIntervalSinceDate:
dateByAddingTimeInterval:
hasFavoritesEntryForContact:
resolutionResultCode
itemToConfirm
handlesConfirmed
contactIdentifiersConfirmed
telephonyProvider
prioritizedSenderIdentities
UUID
isEmergencyNumberForDigits:senderIdentityUUID:
bundleWithPath:
initWithDeferredFormat:fromTable:bundle:arguments:
siriLanguageCode
localizeForLanguage:
allValues
enumerateKeysAndObjectsUsingBlock:
descriptorForRequiredKeysForStyle:
stringFromContact:style:
isValidForISOCountryCode:
callCountWithPredicate:
_userInput
relationship
isEqualToIgnoringCase:
localizedStringFromPersonNameComponents:style:options:
handleStartCall:completion:
confirmStartCall:completion:
resolveDestinationTypeForStartCall:withCompletion:
resolveContactsForStartCall:withCompletion:
resolveCallCapabilityForStartCall:withCompletion:
resolvePreferredCallProviderForStartCall:withCompletion:
setHandlesConfirmed:
setContactIdentifiersConfirmed:
_handlesConfirmed
_contactIdentifiersConfirmed
initWithContactStore:
favoritesController
entriesForContact:
entries
actionType
bundleIdentifier
contactProperty
_favoritesController
initWithQueue:
supportsFaceTimeAudioCalls
radiosPreferences
airplaneMode
coreTelephonyClient
getSubscriptionInfoWithError:
subscriptionsInUse
copyRegistrationStatus:error:
copyMobileCountryCode:error:
standardUserDefaults
boolForKey:
signInController
_signInController
_providerManager
_senderIdentityClient
_favoritesDataSource
_coreTelephonyClient
_allRelevantISOCountryCodes
_radiosPreferences
disconnectCall:withReason:
setHungUpCallType:
hasCurrentCalls
disconnectCurrentCallAndActivateHeld
handleHangUpCall:completion:
confirmHangUpCall:completion:
initWithCall:
_originatingDeviceIDSIdentifier
tu_defaults
destinationWithURI:
setEndpointIDSDestination:
setDowngradeToAudio:
_originatingDeviceRapportMediaSystemIdentifier
setEndpointRapportMediaSystemIdentifier:
endpointRapportMediaSystemIdentifier
_originatingDeviceRapportEffectiveIdentifier
setEndpointRapportEffectiveIdentifier:
endpointRapportEffectiveIdentifier
answerWithRequest:
dateWithTimeIntervalSinceNow:
handleAnswerCall:completion:
confirmAnswerCall:completion:
alloc
handleToPersonCache
callStatus
uniqueId
read
numberOfOccurrences
initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:numberOfCalls:
setHandleToPersonCache:
_handleToPersonCache
TUIntentHandler
MockVoicemailDataSource
SearchCallHistoryVoicemailDataSource
NSObject
MockVoicemail
SearchCallHistoryVoicemail
ScoreBasedResolver
ScoreBasedResolutionResult
TelephonyUtilities
SearchCallHistoryIntentHandler
INSearchCallHistoryIntentHandling
SearchCallHistoryIntentHandlerDataSource
PlayVoicemailIntentHandler
INPlayVoicemailIntentHandling
IntentRouter
IntentHandlerAndIdentifier
IdentifyIncomingCallerIntentHandler
INIdentifyIncomingCallerIntentHandling
IdentifyIncomingCallerIntentHandlerDefaultDataSource
IdentifyIncomingCallerIntentHandlerDataSource
CallHistoryDataSourcePredicate
StartCallIntentHandler
INStartCallIntentHandling
StartCallDefaultFavoritesDataSource
FavoritesDataSource
StartCallIntentHandlerDataSource
HangUpCallIntentHandler
INHangUpCallIntentHandling
AnswerCallIntentHandler
INAnswerCallIntentHandling
AnswerCallIntentHandlerDefaultDataSource
AnswerCallIntentHandlerDataSource
CallRecordConverter
@24@0:8@16
B32@0:8@16@24
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@?16
@"NSArray"24@0:8@?<B@?@"<SearchCallHistoryVoicemail>">16
v16@0:8
v20@0:8B16
v24@0:8@16
@"NSArray"
@28@0:8@16B24
d16@0:8
@"NSDate"16@0:8
v24@0:8Q16
v24@0:8d16
@"NSDate"
@"NSString"
v40@0:8q16@24@32
v24@0:8q16
@24@0:8Q16
q16@0:8
@"NSMutableDictionary"
@"ScoreBasedResolutionResult"
@40@0:8Q16@24@32
@32@0:8@16@24
@40@0:8@16@24@32
Q24@0:8Q16
v32@0:8@16@?24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INSearchCallHistoryIntentResponse">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INDateComponentsRangeResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INPersonResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INCallRecordTypeOptionsResolutionResult">24
v32@0:8@"INSearchCallHistoryIntent"16@?<v@?@"INBooleanResolutionResult">24
Q32@0:8Q16q24
@80@0:8Q16@24@32@40Q48q56Q64@72
@"<SearchCallHistoryIntentHandlerDataSource>"
@"NSCache"
@"<TUContactsDataSource>"16@0:8
@"<CallHistoryDataSource>"16@0:8
@"<SearchCallHistoryVoicemailDataSource>"16@0:8
@"<CallHistoryDataSource>"
@"TUCallHistoryController"
@"CNContactStore"
v32@0:8@"INPlayVoicemailIntent"16@?<v@?@"INPlayVoicemailIntentResponse">24
v48@0:8@16@24@32^v40
v24@0:8@?16
@?16@0:8
@"VMVoicemail"
@"AVPlayer"
@"NSMutableArray"
v32@0:8@"INIdentifyIncomingCallerIntent"16@?<v@?@"INIdentifyIncomingCallerIntentResponse">24
@"<IdentifyIncomingCallerIntentHandlerDataSource>"
@20@0:8B16
@24@0:8d16
@24@0:8q16
@20@0:8I16
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallIntentResponse">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INCallDestinationTypeResolutionResult">24
v32@0:8@"INStartCallIntent"16@?<v@?@"NSArray">24
v32@0:8@"INStartCallIntent"16@?<v@?@"INStartCallCallCapabilityResolutionResult">24
v32@0:8@16@24
@40@0:8@16q24q32
@40@0:8@16q24@32
@48@0:8@16@24q32@40
B40@0:8@16@24@32
@"<StartCallIntentHandlerDataSource>"
@"NSMutableOrderedSet"
B24@0:8@"CNContact"16
B32@0:8@"TUHandle"16@"NSArray"24
@"CNFavorites"
v24@0:8@"TUHandle"16
@"TUCallProviderManager"16@0:8
@"TUSenderIdentityClient"16@0:8
@"NSArray"16@0:8
@"<FavoritesDataSource>"16@0:8
@"IDSSignInController"
@"TUCallProviderManager"
@"TUSenderIdentityClient"
@"<FavoritesDataSource>"
@"CoreTelephonyClient"
@"RadiosPreferences"
v32@0:8@"INHangUpCallIntent"16@?<v@?@"INHangUpCallIntentResponse">24
v32@0:8@"INAnswerCallIntent"16@?<v@?@"INAnswerCallIntentResponse">24
@"<AnswerCallIntentHandlerDataSource>"
Voicemail search performed on a mock voicemail handler with no mock voicemails
B24@?0@"<SearchCallHistoryVoicemail>"8@"NSDictionary"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
online
TB,R,N,GisOnline
subscribed
TB,R,N,GisSubscribed
allMockVoicemails
T@"NSArray",C,N,V_allMockVoicemails
TB,N,GisOnline,V_online
TB,N,GisSubscribed,V_subscribed
identifier
TQ,R,N
date
T@"NSDate",R,N
senderDestinationID
T@"NSString",R,C,N
duration
Td,R,N
deleted
TB,R,N,GisDeleted
trashed
TB,R,N,GisTrashed
unread
TB,R,N,GisUnread
TQ,N,V_identifier
T@"NSDate",&,N,V_date
T@"NSString",C,N,V_senderDestinationID
Td,N,V_duration
TB,N,GisDeleted,V_deleted
TB,N,GisTrashed,V_trashed
TB,N,GisUnread,V_unread
Attempting to add a score for an entity not part of original entity set
Attempting to add a score reason for an entity not part of the original entity set
%ld: %@
Resolved %ld entities. Result = %@
%ld%@: %@
 (chosen)
Success
Confirm
Disambiguate
Unknown
entities
T@"NSArray",C,N,V_entities
scoreByEntity
T@"NSMutableDictionary",&,N,V_scoreByEntity
scoreReasonsByEntity
T@"NSMutableDictionary",&,N,V_scoreReasonsByEntity
cachedResult
T@"ScoreBasedResolutionResult",&,N,V_cachedResult
successfulResolutionMargin
Tq,N,V_successfulResolutionMargin
confirmationMargin
Tq,N,V_confirmationMargin
confirmationEnabled
TB,N,V_confirmationEnabled
includeAllEntitiesInDisambiguation
TB,N,V_includeAllEntitiesInDisambiguation
result
T@"ScoreBasedResolutionResult",R,N
resolutionResultType
TQ,N,V_resolutionResultType
resolvedEntities
T@"NSArray",C,N,V_resolvedEntities
resolutionSummary
T@"NSArray",C,N,V_resolutionSummary
tu_tuHandle
T@"TUHandle",R,N
B16@?0@"<SearchCallHistoryVoicemail>"8
dataSource
T@"<SearchCallHistoryIntentHandlerDataSource>",R,N,V_dataSource
identifierToContactCache
T@"NSCache",R,N,V_identifierToContactCache
B16@?0@"VMVoicemail"8
contactsDataSource
T@"<TUContactsDataSource>",R,N
callHistoryDataSource
T@"<CallHistoryDataSource>",R,N
voicemailDataSource
T@"<SearchCallHistoryVoicemailDataSource>",R,N
callHistoryController
T@"TUCallHistoryController",&,N,V_callHistoryController
contactStore
T@"CNContactStore",R,N,V_contactStore
T@"<CallHistoryDataSource>",R,N,V_callHistoryDataSource
v8@?0
voicemailFinishedPlaying
T@?,C,N,V_voicemailFinishedPlaying
currentVoicemail
T@"VMVoicemail",&,N,V_currentVoicemail
currentPlayer
T@"AVPlayer",&,N,V_currentPlayer
v32@?0@"IntentHandlerAndIdentifier"8Q16^B24
recentIntentHandlersAndIdentifiers
T@"NSMutableArray",&,N,V_recentIntentHandlersAndIdentifiers
intentIdentifier
T@"NSString",C,N,V_intentIdentifier
handler
T@,&,N,V_handler
com.apple.TelephonyUtilities.PhoneIntentHandler.%@
T@"<IdentifyIncomingCallerIntentHandlerDataSource>",&,N,V_dataSource
answered = %d
originated = %d
duration = 0
duration > %f
date > %@
date < %@
remoteParticipantHandles.@count = %d
ANY remoteParticipantHandles.normalizedValue == %@
ANY remoteParticipantHandles.normalizedValue IN %@
ANY remoteParticipantHandles.value == %@
ANY remoteParticipantHandles.value IN %@
ANY remoteParticipantHandles.value ==[c] %@
service_provider = %@
call_category == %@
read == %d
LocalEmergency
NonLocalEmergency
None
Unset
1190
1191
1195
1515
1717
1777
1818
2020
9999
10111
Unexpected score based contact resolution result type.
Persons matching resolved handle should not be nil.
Persons matching handle to confirm should not be nil.
Persons matching handle to disambiguate should not be nil.
Unexpected score based handle resolution result type.
Call Recency
Favorites entry for telephony call with this handle
Favorites entry for this contact
InCallService
/Applications/InCallService.app
B24@?0@"INPerson"8@"NSDictionary"16
v32@?0@"CNContact"8@"NSArray"16^B24
true
false
handlesConfirmed
T@"NSMutableOrderedSet",&,N,V_handlesConfirmed
contactIdentifiersConfirmed
T@"NSMutableOrderedSet",&,N,V_contactIdentifiersConfirmed
T@"<StartCallIntentHandlerDataSource>",&,N,V_dataSource
favoritesController
T@"CNFavorites",R,N,V_favoritesController
UseLegacyContactResolution
UseLegacyHandleResolution
faceTimeEnabled
TB,R,N,GisFaceTimeEnabled
providerManager
T@"TUCallProviderManager",R,N
senderIdentityClient
T@"TUSenderIdentityClient",R,N
airplaneModeEnabled
TB,R,N,GisAirplaneModeEnabled
cellularServiceAvailable
TB,R,N,GisCellularServiceAvailable
supportsPrimaryCalling
TB,R,N
supportsTelephonyCalls
supportsFaceTimeVideoCalls
directFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
canAttemptTelephonyCallsWithoutCellularConnection
allRelevantISOCountryCodes
T@"NSArray",R,C,N
favoritesDataSource
T@"<FavoritesDataSource>",R,N
siriLanguageCode
useLegacyContactResolution
useLegacyHandleResolution
signInController
T@"IDSSignInController",R,N,V_signInController
T@"TUCallHistoryController",R,N,V_callHistoryController
coreTelephonyClient
T@"CoreTelephonyClient",R,N,V_coreTelephonyClient
radiosPreferences
T@"RadiosPreferences",R,N,V_radiosPreferences
T@"TUCallProviderManager",R,N,V_providerManager
T@"TUSenderIdentityClient",R,N,V_senderIdentityClient
T@"NSArray",R,C,N,V_allRelevantISOCountryCodes
T@"<FavoritesDataSource>",R,N,V_favoritesDataSource
preferRapportForHomepodAudioRouting
T@"<AnswerCallIntentHandlerDataSource>",&,N,V_dataSource
com.apple.calls.intenthandler
Default
handleToPersonCache
T@"NSCache",&,N,V_handleToPersonCache
Looking up contact in the contact store matching identifiers: %@
Error performing contact search: %@
Looking up contact in the contact store matching handle: %@
Could not construct contact search predicate from handle: %@
No contacts match handle
[WARN] Multiple contacts match handle, using the first one arbitrarily
Got a SearchCallHistory intent: %@
Start Date  : %@
End Date    : %@
Recipient   : %@
Capabilities: %lx (audio: %d | video: %d)
PreferredCallProvider: %@
Types       : %lx
Unseen     : %@
Type indicates we should be searching for voicemail. Matching voicemails to this intent
Rejecting voicemail because it is deleted or trashed: %@
Rejecting voicemail because a recipient was specified, but this voicemail has no senderDestinationID: %@
Rejecting voicemail because senderDestinationID does not match requested recipient: %@
Rejecting voicemail because voicemail.date is before requested startDate: %@
Rejecting voicemail because voicemail.date is after requested endDate: %@
Rejecting voicemail because only unread voicemails were requested, but this one is marked as read: %@
Rejecting voicemail because only read voicemails were requested, but this one is marked as unread: %@
Truncated matching voicemails to %ld objects: %@
Voicemails (%@) -> callRecords (%@)
Visual Voicemail is not set up yet
Calling completion block with response: %@
resolveRecipientForSearchCallHistory: %@
No recipient specified, returning notRequired
Handle is present. Simply using the recipient to resolve with: %@
No contacts match the specified recipient, returning unsupported (a.k.a. notFound)
Recipient contains siriMatches, preserving those and returning success
Resolving with: %@
[WARN] Could not determine voicemail.senderDestinationID
Performing call history lookup
Unhandled call record type options: %ld
Unhandled call capability: %ld
Using predicate: %@
Call history search results: %@
callRecords: %@
Observed rate change for playback: %f
handlePlayVoicemail: %@
VVM is online and subscribed.
Found voicemail with the given identifier (%@). Returning success
Voicemail completed playing. Calling completion block with success response: %@
[WARN] Voicemail with the given identifier was not found
[WARN] VVM is not online and subscribed. Returing that configuration is required
Attempting to play voicemail with identifier: %lu
Using voicemail: %@
Building audio session
Setting category to: %@
Could not set category: %@
Activating audio session: %@
Activation succeeded
Activation failed: %@
Generated AVPlayer with voicemail data: %@
Voicemail finished playing (rate change)
Calling completion block
Playing the voicemail
Intent Extension initialized
No handler for intent: %@
[WARN] Intent does not have an identifier set. Creating new handler.
Found existing handler for intent identifier: %@.
Existing handler not found for intent identifier: %@. Creating new handler.
[WARN] Attempting to update recently used intent handler cache for an intent with no intentIdentifier. Ignoring.
Received Siri request to identify incoming caller: %@
An incoming call exists with handle %@
Incoming call is from person: %@
Incoming caller is a private number
No incoming call exists. Looking up last missed call...
Last missed call is: %@
Handling start call intent: %@
Calling completion block with response: %@ user activity: %@
Determining response for dial request: %@
Dial request was for FaceTime provider but FaceTime is not enabled. Returning reponse that app configuration is required
User activity was nil. Returning failure.
Dial Request invalid: %@
Dial Request was for video, but FaceTime Video was not available
Dial Request was for FT Audio, but FaceTime Audio was not available
Dial Request was for Telephony, but supportsTelephonyCalls was not true
Dial request was for telephony provider but airplane mode is enabled
Dial request was for telephony provider but no cellular service was available
Handling intent for remote HomePod
Intent has unconfirmed recipients. Requiring intent confirmation.
All call recipients have already been confirmed. Skipping intent confirmation.
Even though destinationType is normal, user specifically asked for a emergency number
Contact to redial/call back is an emergency number. Requiring intent confirmation.
Contact to redial/call back is NOT an emergency number.
Resolve destination type for start audio call: %@
%@ is an emergency handle. Resolving to an emergency call
%@ is not an emergency handle. Do not need special resolving.
Could not determine if handle to dial is an emergency handle because handle has not yet been resolved
Calling completion block with result: %@
Intent's contact has no display name. Looking up the list of emergency handles available on this device
There are more than one number that could be dialed. Prompting to disambiguate between them using these people: %@
Only a single emergency number to call. Resolving to that number.
[WARN] User asked to call emergency services. Emergency provider does not have multiple handles, and call can be completed without specifying one. Returning not required.
Resolving contacts for start call intent: %@
[WARN] Intent includes an emergency person and a non-emergency person. Returning success for non-emergency person so emergency person can be properly resolved. Person: %@
Detected foreign emergency label, calling completion block early: %@
Resolution not required for voicemail destination
Resolution for emergency destination
Intent's contact has a personHandle.value set on an emergency call. Resolving to that value.
Resolution for redial
There is a recent call that can be redialed.
Caller ID is blocked for recent call, returning no usable handle error.
Recent call has no participants, returning no usable handle error.
Resolving with this person to redial: %@
Cannot create INPerson from handle for redial: %@
Cannot create TUHandle from CHHandle for redial: %@
Recent call has multiple participants, returning multiple contacts unsupported error.
Nothing found in call history to redial. Resolving as unsupported.
Calling completion block with resolution results: %@
Resolving call capability for start call intent: %@
Inferring audio call capability from call to redial
Inferring video call capability from call to redial
[WARN] Could not infer call capability from call to redial because media type of that call was unknown.
Facetime Video calling is unavailable, returning call capability unsupported reason video call unsupported.
Facetime Video calling is requested, but video call isn't supported on this device or interaction mode. Resolving to audio instead.
callCapability is unknown. It's a telephony provider so resolve callCapability to audio.
callCapability is unknown. It's a FaceTime provider but video isn't supported on this device or interaction mode, so resolve callCapability to audio.
callCapability is unknown. It's a FaceTime provider and video is supported so resolve callCapability to video.
callCapability and preferredCallProvider are both unknown. Resolve callCapability to notRequired.
Returning call capability resolution result: %@
deviceIdiom %ld is an audio only device idiom.
deviceIdiom %ld supports video calling.
Call capabilities do not support FaceTime video calls
Devices primary display is disabled, e.g. user is on carDND mode. 
Resolving call provider for start call intent: %@
The call provider %@ for redial or call back is not supported
Telephony call was requested, but supportsTelephonyCalls was false
FaceTime call was requested, but isFaceTimeEnabled was false
Returning call provider resolution result: %@
Inferring outgoing callStatus requirement from the presence of redial destination type and unspecified recordTypeForRedialing.
Unexpected recordTypeForRedialing received, ignoring value.
Resolution needs a value for zero contacts
Attempting to resolve more than one call participant. Returning multiple contacts unsupported for each recipient.
Handle has the LocalEmergency flag. Resolving success. %@ with type: %@
Handle %@ is MMI or USSD which is unsupported. Returning error for person: %@
Handle %@ is in the global emergency numbers list. EmergencyType is %@
It's unclear if the user literally wanted this number, or if they meant to call emergency services. Disambiguate between local and nonlocal emergency services.
Returning _INStartCallContactUnsupportedReasonForeignEmergencyDisambiguation with alternative items: %@
Number is on the global emergency numbers list, but INPersonHandle already has the emergencyType set, resolving to success for person: %@
The user requested a potentially invalid phone number or email, returning confirmationRequired.
There is a handle on the single contact. Format the person handle and return success with that person.
Person contains %ld contact IDs. Person: %@
Requested handle type is unknown, but preferredCallProvider is phone. Inferring handle type of phone number.
None of the matching contacts have a valid matching handle.
There was only one matching contact, but none of the handles matched the requested type and label, dropping constraints to find alternatives.
Found %ld alternatives when dropping label constraint.
Not dropping handle type constraint because the user requested a telephony call.
Found %ld alternatives when dropping handle and label constraint.
There was more than one matching contact, but none of the handles matched the requested type and label, presenting those contacts as alternatives.
Only one matching contact: %@
Using legacy contact resolution
Resolved to %ld contacts, asking the user to disambiguate among persons: %@
Resolved to one matching contact with %ld matching handles. Contact: %@ Handles: %@
Resolved to one handle: %@
Facetime call resolved to multiple handles, preserving ambiguity. Will ring all handles for contact. Person: %@
Returning confirmationRequired with person: %@
Returning success with person: %@
Resolved to multiple handles, using score based resolution model to resolve handles: %@
Person contains neither siriMatches nor a personHandle.value, returning unsupported. Person: %@
Using legacy handle resolution.
Beginning score based handle resolution.
Completed score based handle resolution.
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, resolving to the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). As either handle will produce the same result, confirming just the first one. %@
[WARN] More than one INPerson matches the same handle (e.g. multiple labels with the same number). Including those multiples in the disambiguation list. %@
Beginning call recency for handles check.
Handle %@ was a partipant in recent call %@.
Completed call recency for handles check.
Beginning favorites for handles check.
No favorites entry for handle %@. No score adjustment.
Completed favorites for handles check.
Beginning score based contact resolution.
Completed score based contact resolution.
Beginning call recency for contacts check.
Contact %@ was a partipant in recent call %@.
Completed call recency for contacts check.
Searching call history for one call matching predicate: %@
Completed initial call history search with result: %@
Calculated oldest relevant date of %@ based on most recent matching call %.0f seconds ago
Searching call history for up to %ld calls matching predicate: %@
Completed second call history search with result: %@
No matching call history for any of the requested handles. No score adjustment.
Beginning favorites for contacts check.
No favorites entry for contact %@. No score adjustment.
Completed favorites for contacts check.
Handle is an emergency number.
Not applying an implicit handle type filter to an intent with an explicit handle type specified
Not applying an implicit handle type filter to an intent with an explicit call provider specified
Not applying an implicit handle type = phone number filter on a device that doesn't support telephone calls
Not applying an implicit handle type filter because there is already only one matching handle
Multiple handles match call request. Attempting to filter to just phone numbers to resolve ambiguity.
Filtered the results to only phone numbers. Remaining matches: %@
Filtering results to only phone numbers would have produced no results, not filtering.
Have previously confirmed recipient with handle %@
Have previously confirmed recipient with contactIdentifier: %@
Not requiring invalid number confirmation because recipient has already been confirmed.
Not requiring invalid number confirmation because handle is valid for country code %@
[WARN] Requested handle %@ is not valid for any of the following country codes: %@
Examining call history to determine if there is existing call history with the invalid number.
Not requiring invalid number confirmation because there are %ld recents call with %@
Did not find any matching calls with: %@
[WARN] Returning YES for shouldRequireInvalidNumberConfirmationForRecipient.
Not requiring unknown recipient confirmation because recipient has already been confirmed.
Not requiring unknown recipient confirmation because requested recipient was a relation: %@
Not requiring unknown recipient confirmation because requested recipient was a manually dictated handle: %@
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients full displayName: "%@"
Not requiring unknown recipient confirmation because requested displayName "%@" matches resolved recipients displayName: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients long format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved recipients medium format name: "%@"
Not requiring unknown recipient confirmation because userInput "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because requested recipient displayName "%@" matches resolved contact formatted name: "%@"
Not requiring unknown recipient confirmation because resolved contact is a favorite. Contact: %@
Searching for recent calls using predicate: %@
Not requiring unknown recipient confirmation because there is a recent call with one of the following handles: %@
Did not find a recent calls with any of the following handles: %@
Returning %{public}@ for shouldRequireUnknownRecipientConfirmationForRequestedRecipient.
Found a favorites entry matching handle: %@
[WARN] Ignoring favorite for telephony call with an empty phone number: %@
[WARN] Ignoring favorite for telephony call without a phone number: %@
[WARN] Cellular service is not available for SIM. Registration Status: %@ Subscription context: %@
Could not determine registration status from Core Telephony Subscription Context. Error: %@
Could not determine Core Telephony Subscription Info. Error: %@
[WARN] Determined cellular service is unavailable.
Could not determine ISO Country Code from Mobile Country Code: %@
Could not determine mobile country code from Core Telephony Subscription Context. Error: %@
Resolved relevant ISO country codes: %@
Received Siri request to hang up: %@
An incoming call exists. Declining it and returning success: %@
At least one call exists. Hanging up and returning success
No calls exist. Returning failure
Received Siri request to answer incoming call: %@
An incoming call exists. Answering it and returning success
Setting endpointIDSDestination: %@
Intent contains an originatingDeviceRapportMediaSystemIdentifier: %@
Intent contains an originatingDeviceRapportEffectiveIdentifier: %@
No incoming call exists. Returning no incoming call. Recent Missed Calls: %@
[WARN] Could not determine remoteParticipantHandle for CHRecentCall
[WARN] Call had more than one participant, not setting caller
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/InCallService.app/</string>
<string>/Applications/NanoPhone.app/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.security.temporary-exception.shared-preference.read-only</key>
<array>
<string>com.apple.TelephonyUtilities</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
</dict>
</plist>
