@333
333333
CGColor
PKArrayContaining:forKey:
_lockScreenView
T#,R
_passFooterView
T@"<SBLockScreenPluginAgent>",W,N,VpluginAgent
_showCoverSheet
T@"<WLLockScreenViewDataSource>",W,N,V_dataSource
awakeFromBundle
T@"NSData",&,N,V_externalizedAuthenticationContext
barcode
T@"PKPass",&,N,V_pass
defaultDuration
T@"SBLockScreenPluginAction",R,&,N
enableIdleTimer
T@"UIViewController<SBLockScreenPluginViewController>",R,N
isEqualToPassIncludingMetadata:
TB,N,GisAnimatingPresentation,V_animatingPresentation
loadContentSync
TQ,N,V_index
passLibraryReceivedInterruption
Tq,R,N
pluginDidDeactivateWithContext:
_animatingPresentation
release
_cardUniqueIDs
removeObserver:
_configurePage:forIndex:
setContentSize:
_coverSheetAuthenticator
setIdleTimerDisabled:forReason:
_coverSheetViewState
startEvaluation
_createPassesView
traitCollection
_delegate
.cxx_destruct
_createCoverSheetViewController
PKBoolForKey:
_pageScrollView
T@"<SBLockScreenPluginAgent>",W,N
_passViewNotificationTimerFired
T@"<SBLockScreenPluginAppearance>",R,N
animateWithDuration:animations:
T@"<WLLockScreenViewDelegate>",W,N,V_delegate
backgroundColor
T@"NSString",R,C
dealloc
T@"PKPassView",R,N
dismissAnimated:withCompletion:
T@"UIView",R,N
initWithMass:stiffness:damping:
T@"_UILegibilitySettings",&,N
isProxy
TB,N,V_modallyPresented
locationManager:didEnterRegion:
TQ,R
passViewTapped:
_animateViewBackgroundColor:from:to:delay:completion:
prepareForReuse
_canShowWhileLocked
removeDelegate:
_cardsByUniqueID
setContentMode:
_contactlessInterfaceAssertion
setCurrentPage:
_coverSheetViewController
setPluginAgent:
_createPassFooterConfigurationForPassView:
suppressedContentForPassFooter:
_dataSource
viewWillAppear:
_dequeueRecycledPage
_diff
_disappeared
_dismissIfAppropriate
_externalizedAuthenticationContext
_fadeView
_footerViewFrameForPassView:
_handleDidReceiveSuccessfulTransaction:
_hasVisiblePageForIndex:
_index
_insertViewControllerIfNeeded:
_invalidated
_jumpToPage:
_jumpToPage:animated:
_lockscreenActive
_modallyPresented
_notifyPassViewedTimer
_overlayStyle
_pageControl
_parentState
_pass
_passFooterViewOutstandingAnimations
_passFooterViewVisibilityToken
_passFooterViewVisible
_passLibrary
_passView
_passViewState
_presentPassesAnimated:completion:
_recycledPages
_refreshBrightnessForFrontmostPass
_resetIdleTimerTimer
_secureElement
_springAnimationFactory
_startIndex
_staticGlyphResources
_tilePagesEagerly:
_transacted
_updateAlphasAndBacklight
_updateNumberOfPages
_updatePageControl
_updatePageScrollViewContentSize
_updatePassFooterView
_updatePassFooterViewIfNecessary
_updatePassFooterViewWithReload:
_updateViewState
_verticalScrollView
_visiblePageForIndex:
_visiblePages
_wantsBacklightRamping
accessExternalizedContextWithCompletion:
acquireAssertionOfType:withReason:completion:
addAnimation:forKey:
addChildViewController:
addDelegate:
addObject:
addObserver:selector:name:object:
addSubview:
addTarget:action:forControlEvents:
allObjects
alpha
animateWithDuration:animations:completion:
animateWithDuration:delay:options:animations:completion:
animatingPresentation
anyObject
authorizationCoverSheetViewControllerDidCompleteWithSuccess:
authorizationCoverSheetViewControllerDidGetBiometricUnavailableOrFailure
autorelease
beginAllowingBacklightRamping:
beginRequestingBacklightRamping:
bounds
bundlePath
cardAtIndex:
cardCount
caseInsensitiveCompare:
class
clearColor
colorWithAlphaComponent:
configuration
configureWithConfiguration:context:options:
conformsToProtocol:
contactlessInterfaceDidDismissFromSource:
contactlessInterfaceDidPresentFromSource:
contentOffset
contentSize
convertPoint:fromView:
convertRect:fromView:
count
countByEnumeratingWithState:objects:count:
currentDevice
currentIndex
currentPage
dataSource
deactivatePluginController:
debugDescription
defaultCenter
delegate
description
didAppear
didBecomeHiddenAnimated:
didBecomeVisibleAnimated:
didMoveToParentViewController:
diffForCardAtIndex:
diffForPassUpdateUserNotificationWithIdentifier:
disableIdleTimer
dismissAnimated:
duration
effectiveBoolValueForSetting:
endAllowingBacklightRamping:
endRequestingBacklightRamping:
externalizedAuthenticationContext
faceFrameDidChangeForPassView:
fadeInUIAnimated:performSynchronizedAnimation:
fadeOutUIWithCompletion:
frame
hasLocationRelevancyInfo
hash
highFrameRateSpringAnimationWithKeyPath:reason:
index
init
initWithDelegate:
initWithDelegate:authenticator:source:
initWithEffectiveBundlePath:delegate:onQueue:
initWithFrame:
initWithPass:content:suppressedContent:
initWithPassView:state:
insertSubview:aboveSubview:
invalidate
isAccessPass
isAnimatingPresentation
isDecelerating
isDragging
isEqual:
isEqualToString:
isInRestrictedMode
isKindOfClass:
isMemberOfClass:
isPassFooterViewInGroup:
isTracking
isViewCurrentContentView:
labelColor
layer
layoutIfNeeded
layoutSubviews
legibilitySettings
loadImageSetSync:preheat:
loadView
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
mainScreen
markAsHavingReceivedLocation
minusSet:
modallyPresented
notifyPassUsedWithIdentifier:fromSource:
numberOfPages
numberWithFloat:
object
objectAtIndex:
objectForKey:
openApplication:
origin
pageChanged
parentViewController
pass
passFooterViewDidChangeCoachingState:
passFooterViewDidChangePhysicalButtonRequirement:
passFooterViewDidChangePileSuppressionRequirement:
passFooterViewDidEndAuthorization:
passFooterViewDidSucceedAtAuthorization:
passLibrary:receivedUpdatedCatalog:passes:
passType
passUniqueID
passView
passView:deleteButtonEnabledForPass:
passView:deleteButtonPressedForPass:
passView:didPresentPassDetailsViewController:
passView:willPresentPassDetailsViewController:
passViewDidResize:animated:
passViewExpandButtonTapped:
passWithUniqueID:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pk_indexDictionaryByApplyingBlock:
pkui_setCompletionHandler:
pluginAgent
pluginAnimateAppearanceTransition:withCompletion:
pluginAnimatesAppearanceTransition:
pluginAppearance
pluginHandleEvent:
pluginPriority
pluginUnlockAction
pluginViewController
pluginWillActivateWithContext:
preferredStatusBarStyle
presentDiff:completion:
presentedViewController
reloadCardAtIndex:
removeFromSuperview
removeObject:
removeObserver:name:object:
resetSharedRootContextWithCompletion:
respondsToSelector:
retain
retainCount
safeAreaInsets
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scrollViewDidChangeAdjustedContentInset:
scrollViewDidEndDecelerating:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndScrollingAnimation:
scrollViewDidEndZooming:withView:atScale:
scrollViewDidScroll:
scrollViewDidScrollToTop:
scrollViewDidZoom:
scrollViewShouldScrollToTop:
scrollViewWillBeginDecelerating:
scrollViewWillBeginDragging:
scrollViewWillBeginZooming:withView:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
secureElementPass
self
setAdditive:
setAlpha:
setAnimatingPresentation:
setBackgroundColor:
setBackgroundStyle:
setBeginTime:
setBeginTimeMode:
setClipsToBounds:
setContentInsetAdjustmentBehavior:
setContentOffset:
setContentOffset:animated:
setCurrentPageIndicatorTintColor:
setDataSource:
setDelegate:
setDiff:
setExternalizedAuthenticationContext:
setFadeAlpha:
setFillMode:
setFrame:
setFromValue:
setHidesForSinglePage:
setIndex:
setLegibilitySettings:
setMinimumBacklightLevel:animated:
setModalShadowVisibility:animated:
setModallyPresented:
setNeedsLayout
setNeedsStatusBarAppearanceUpdate
setNumberOfPages:
setObject:forKey:
setOffscreen:
setPageIndicatorTintColor:
setPagingEnabled:
setPass:
setPresentationStyle:
setRemovedOnCompletion:
setRestrictedCapabilities:
setScrollsToTop:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setSubviewAlpha:
setTiming:
setToValue:
setTransform:
setValue:forKeyPath:
setView:
settingsWithDuration:
settingsWithDuration:delay:
sharedConnection
sharedInstance
sharedStaticResources
sizeOfFront
sizeToFit
springAnimationWithKeyPath:
startIndex
style
superclass
systemGroupedBackgroundColor
transform
translatedView
uniqueID
unsignedIntegerValue
updateBacklightWithProgress:
updateForPresentation:
userInfo
userInterfaceIdiom
userInterfaceStyle
valueForKeyPath:
vehicleConnectionDidRecievePassthroughData:
vehicleConnectionDidUpdateConnectionState:
view
viewDidAppear:
viewDidDisappear:
viewForZoomingInScrollView:
viewIfLoaded
viewWillDisappear:
viewWillLayoutSubviews
willBecomeHiddenAnimated:
willBecomeVisibleAnimated:
willDisappear
window
zone
Wallet isn't supported on iPads
Error Acquiring Assertion for Lockscreen Plugin: %@
PKPassGroupStackView (%{public}p): configuring PKPassFooterView %{public}p.
seedIndex
uniqueIDs
recordID
Lockscreen Plugin
v8@?0
v24@?0@"PKAssertion"8@"NSError"16
v12@?0C8
v16@?0@"NSData"8
@"<NSCopying>"16@?0@"PKPass"8
transform.translation.y
v12@?0B8
PassBookPluginShowPass
backgroundColor
v20@?0@"WLLockScreenView"8B16
WLLockScreenCardsViewController
WLLockScreenViewDataSource
NSObject
WLLockScreenViewDelegate
PKPassLibraryDelegate
CLLocationManagerDelegate
SBLockScreenPluginViewController
PKAuthorizationCoverSheetViewControllerDelegate
SBLockScreenPluginController
SBPluginBundleController
BSPluginBundleController
SBUIOptionalLegibility
WLLockScreenCardView
WLCardViewDelegate
WLLockScreenView
UIScrollViewDelegate
PKPassFooterViewDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
@"PKPass"24@0:8Q16
@"PKDiff"24@0:8Q16
v20@0:8B16
v24@0:8d16
v16@0:8
v40@0:8@16@24@32
v24@0:8q16
v24@0:8@16
v40@0:8@"PKPassLibrary"16@"PKCatalog"24@"NSSet"32
v24@0:8@"NSData"16
v32@0:8@16@24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B20@0:8B16
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
q16@0:8
B24@0:8q16
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16@?20
d28@0:8B16@?20
d56@0:8@16@24@32d40@?48
@"PKPassLibrary"
@"NSArray"
@"NSMutableDictionary"
@"PKDiff"
@"NSTimer"
@"PKAssertion"
@"WLLockScreenView"
@"PKAuthorizationCoverSheetViewController"
@"PKAuthenticator"
@"PKUISpringAnimationFactory"
@"<SBLockScreenPluginAgent>"
B32@0:8@16@24
v28@0:8@16B24
v24@0:8@"PKPassView"16
v32@0:8@"PKPassView"16@"PKPass"24
B32@0:8@"PKPassView"16@"PKPass"24
v32@0:8@"PKPassView"16@"UIViewController"24
v28@0:8@"PKPassView"16B24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8Q16
@"PKPassView"
@"PKPass"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
@24@0:8@16
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
Q24@0:8@16
v24@0:8@"PKPassFooterView"16
B24@0:8@"PKPassFooterView"16
Q24@0:8@"PKPassFooterView"16
v28@0:8Q16B24
B24@0:8Q16
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIView"
@"UIScrollView"
@"UIPageControl"
@"NSMutableSet"
@"PKPassFooterView"
@"PKSecureElement"
@"<WLLockScreenViewDataSource>"
@"<WLLockScreenViewDelegate>"
@"NSData"
?333
333333
Wallet isn't supported on iPads
Error Acquiring Assertion for Lockscreen Plugin: %@
PKPassGroupStackView (%{public}p): configuring PKPassFooterView %{public}p.
CGColor
PKArrayContaining:forKey:
_lockScreenView
T#,R
_passFooterView
T@"<SBLockScreenPluginAgent>",W,N,VpluginAgent
_showCoverSheet
T@"<WLLockScreenViewDataSource>",W,N,V_dataSource
awakeFromBundle
T@"NSData",&,N,V_externalizedAuthenticationContext
barcode
T@"PKPass",&,N,V_pass
defaultDuration
T@"SBLockScreenPluginAction",R,&,N
enableIdleTimer
T@"UIViewController<SBLockScreenPluginViewController>",R,N
isEqualToPassIncludingMetadata:
TB,N,GisAnimatingPresentation,V_animatingPresentation
loadContentSync
TQ,N,V_index
passLibraryReceivedInterruption
Tq,R,N
pluginDidDeactivateWithContext:
_animatingPresentation
release
_cardUniqueIDs
removeObserver:
_configurePage:forIndex:
setContentSize:
_coverSheetAuthenticator
setIdleTimerDisabled:forReason:
_coverSheetViewState
startEvaluation
_createPassesView
traitCollection
_delegate
.cxx_destruct
_createCoverSheetViewController
PKBoolForKey:
_pageScrollView
T@"<SBLockScreenPluginAgent>",W,N
_passViewNotificationTimerFired
T@"<SBLockScreenPluginAppearance>",R,N
animateWithDuration:animations:
T@"<WLLockScreenViewDelegate>",W,N,V_delegate
backgroundColor
T@"NSString",R,C
dealloc
T@"PKPassView",R,N
dismissAnimated:withCompletion:
T@"UIView",R,N
initWithMass:stiffness:damping:
T@"_UILegibilitySettings",&,N
isProxy
TB,N,V_modallyPresented
locationManager:didEnterRegion:
TQ,R
passViewTapped:
_animateViewBackgroundColor:from:to:delay:completion:
prepareForReuse
_canShowWhileLocked
removeDelegate:
_cardsByUniqueID
setContentMode:
_contactlessInterfaceAssertion
setCurrentPage:
_coverSheetViewController
setPluginAgent:
_createPassFooterConfigurationForPassView:
suppressedContentForPassFooter:
_dataSource
viewWillAppear:
_dequeueRecycledPage
_diff
_disappeared
_dismissIfAppropriate
_externalizedAuthenticationContext
_fadeView
_footerViewFrameForPassView:
_handleDidReceiveSuccessfulTransaction:
_hasVisiblePageForIndex:
_index
_insertViewControllerIfNeeded:
_invalidated
_jumpToPage:
_jumpToPage:animated:
_lockscreenActive
_modallyPresented
_notifyPassViewedTimer
_overlayStyle
_pageControl
_parentState
_pass
_passFooterViewOutstandingAnimations
_passFooterViewVisibilityToken
_passFooterViewVisible
_passLibrary
_passView
_passViewState
_presentPassesAnimated:completion:
_recycledPages
_refreshBrightnessForFrontmostPass
_resetIdleTimerTimer
_secureElement
_springAnimationFactory
_startIndex
_staticGlyphResources
_tilePagesEagerly:
_transacted
_updateAlphasAndBacklight
_updateNumberOfPages
_updatePageControl
_updatePageScrollViewContentSize
_updatePassFooterView
_updatePassFooterViewIfNecessary
_updatePassFooterViewWithReload:
_updateViewState
_verticalScrollView
_visiblePageForIndex:
_visiblePages
_wantsBacklightRamping
accessExternalizedContextWithCompletion:
acquireAssertionOfType:withReason:completion:
addAnimation:forKey:
addChildViewController:
addDelegate:
addObject:
addObserver:selector:name:object:
addSubview:
addTarget:action:forControlEvents:
allObjects
alpha
animateWithDuration:animations:completion:
animateWithDuration:delay:options:animations:completion:
animatingPresentation
anyObject
authorizationCoverSheetViewControllerDidCompleteWithSuccess:
authorizationCoverSheetViewControllerDidGetBiometricUnavailableOrFailure
autorelease
beginAllowingBacklightRamping:
beginRequestingBacklightRamping:
bounds
bundlePath
cardAtIndex:
cardCount
class
clearColor
colorWithAlphaComponent:
configuration
configureWithConfiguration:context:options:
conformsToProtocol:
contactlessInterfaceDidDismissFromSource:
contactlessInterfaceDidPresentFromSource:
contentOffset
contentSize
convertPoint:fromView:
convertRect:fromView:
count
countByEnumeratingWithState:objects:count:
currentDevice
currentIndex
currentPage
dataSource
deactivatePluginController:
debugDescription
defaultCenter
delegate
description
didAppear
didBecomeHiddenAnimated:
didBecomeVisibleAnimated:
didMoveToParentViewController:
diffForCardAtIndex:
diffForPassUpdateUserNotificationWithIdentifier:
disableIdleTimer
dismissAnimated:
duration
effectiveBoolValueForSetting:
endAllowingBacklightRamping:
endRequestingBacklightRamping:
externalizedAuthenticationContext
faceFrameDidChangeForPassView:
fadeInUIAnimated:performSynchronizedAnimation:
fadeOutUIWithCompletion:
frame
hasLocationRelevancyInfo
hash
highFrameRateSpringAnimationWithKeyPath:reason:
index
init
initWithDelegate:
initWithDelegate:authenticator:source:
initWithEffectiveBundlePath:delegate:onQueue:
initWithFrame:
initWithPass:content:suppressedContent:
initWithPassView:state:
insertSubview:aboveSubview:
invalidate
isAccessPass
isAnimatingPresentation
isDecelerating
isDragging
isEqual:
isEqualToString:
isInRestrictedMode
isKindOfClass:
isMemberOfClass:
isPassFooterViewInGroup:
isTracking
isViewCurrentContentView:
labelColor
layer
layoutIfNeeded
layoutSubviews
legibilitySettings
loadImageSetSync:preheat:
loadView
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
mainScreen
markAsHavingReceivedLocation
minusSet:
modallyPresented
notifyPassUsedWithIdentifier:fromSource:
numberOfPages
numberWithFloat:
object
objectAtIndex:
objectForKey:
openApplication:
origin
pageChanged
parentViewController
pass
passFooterViewDidChangeCoachingState:
passFooterViewDidChangePhysicalButtonRequirement:
passFooterViewDidChangePileSuppressionRequirement:
passFooterViewDidEndAuthorization:
passFooterViewDidSucceedAtAuthorization:
passLibrary:receivedUpdatedCatalog:passes:
passType
passUniqueID
passView
passView:deleteButtonEnabledForPass:
passView:deleteButtonPressedForPass:
passView:didPresentPassDetailsViewController:
passView:willPresentPassDetailsViewController:
passViewDidResize:animated:
passViewExpandButtonTapped:
passWithUniqueID:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pk_indexDictionaryByApplyingBlock:
pkui_setCompletionHandler:
pluginAgent
pluginAnimateAppearanceTransition:withCompletion:
pluginAnimatesAppearanceTransition:
pluginAppearance
pluginHandleEvent:
pluginPriority
pluginUnlockAction
pluginViewController
pluginWillActivateWithContext:
preferredStatusBarStyle
presentDiff:completion:
presentedViewController
reloadCardAtIndex:
removeFromSuperview
removeObject:
removeObserver:name:object:
resetSharedRootContextWithCompletion:
respondsToSelector:
retain
retainCount
safeAreaInsets
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scrollViewDidChangeAdjustedContentInset:
scrollViewDidEndDecelerating:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndScrollingAnimation:
scrollViewDidEndZooming:withView:atScale:
scrollViewDidScroll:
scrollViewDidScrollToTop:
scrollViewDidZoom:
scrollViewShouldScrollToTop:
scrollViewWillBeginDecelerating:
scrollViewWillBeginDragging:
scrollViewWillBeginZooming:withView:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
secureElementPass
self
setAdditive:
setAlpha:
setAnimatingPresentation:
setBackgroundColor:
setBackgroundStyle:
setBeginTime:
setBeginTimeMode:
setClipsToBounds:
setContentInsetAdjustmentBehavior:
setContentOffset:
setContentOffset:animated:
setCurrentPageIndicatorTintColor:
setDataSource:
setDelegate:
setDiff:
setExternalizedAuthenticationContext:
setFadeAlpha:
setFillMode:
setFrame:
setFromValue:
setHidesForSinglePage:
setIndex:
setLegibilitySettings:
setMinimumBacklightLevel:animated:
setModalShadowVisibility:animated:
setModallyPresented:
setNeedsLayout
setNeedsStatusBarAppearanceUpdate
setNumberOfPages:
setObject:forKey:
setOffscreen:
setPageIndicatorTintColor:
setPagingEnabled:
setPass:
setPresentationStyle:
setRemovedOnCompletion:
setRestrictedCapabilities:
setScrollsToTop:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setSubviewAlpha:
setTiming:
setToValue:
setTransform:
setValue:forKeyPath:
setView:
settingsWithDuration:
settingsWithDuration:delay:
sharedConnection
sharedInstance
sharedStaticResources
sizeOfFront
sizeToFit
springAnimationWithKeyPath:
startIndex
style
superclass
systemGroupedBackgroundColor
transform
translatedView
uniqueID
unsignedIntegerValue
updateBacklightWithProgress:
updateForPresentation:
userInfo
userInterfaceIdiom
userInterfaceStyle
valueForKeyPath:
vehicleConnectionDidRecievePassthroughData:
vehicleConnectionDidUpdateConnectionState:
view
viewDidAppear:
viewDidDisappear:
viewForZoomingInScrollView:
viewIfLoaded
viewWillDisappear:
viewWillLayoutSubviews
willBecomeHiddenAnimated:
willBecomeVisibleAnimated:
willDisappear
window
zone
seedIndex
uniqueIDs
recordID
Lockscreen Plugin
v8@?0
v24@?0@"PKAssertion"8@"NSError"16
v12@?0C8
v16@?0@"NSData"8
@"<NSCopying>"16@?0@"PKPass"8
transform.translation.y
v12@?0B8
PassBookPluginShowPass
backgroundColor
v20@?0@"WLLockScreenView"8B16
WLLockScreenCardsViewController
WLLockScreenViewDataSource
NSObject
WLLockScreenViewDelegate
PKPassLibraryDelegate
CLLocationManagerDelegate
SBLockScreenPluginViewController
PKAuthorizationCoverSheetViewControllerDelegate
SBLockScreenPluginController
SBPluginBundleController
BSPluginBundleController
SBUIOptionalLegibility
WLLockScreenCardView
WLCardViewDelegate
WLLockScreenView
UIScrollViewDelegate
PKPassFooterViewDelegate
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
@"PKPass"24@0:8Q16
@"PKDiff"24@0:8Q16
v20@0:8B16
v24@0:8d16
v16@0:8
v40@0:8@16@24@32
v24@0:8q16
v24@0:8@16
v40@0:8@"PKPassLibrary"16@"PKCatalog"24@"NSSet"32
v24@0:8@"NSData"16
v32@0:8@16@24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
B20@0:8B16
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
q16@0:8
B24@0:8q16
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16@?20
d28@0:8B16@?20
d56@0:8@16@24@32d40@?48
@"PKPassLibrary"
@"NSArray"
@"NSMutableDictionary"
@"PKDiff"
@"NSTimer"
@"PKAssertion"
@"WLLockScreenView"
@"PKAuthorizationCoverSheetViewController"
@"PKAuthenticator"
@"PKUISpringAnimationFactory"
@"<SBLockScreenPluginAgent>"
B32@0:8@16@24
v28@0:8@16B24
v24@0:8@"PKPassView"16
v32@0:8@"PKPassView"16@"PKPass"24
B32@0:8@"PKPassView"16@"PKPass"24
v32@0:8@"PKPassView"16@"UIViewController"24
v28@0:8@"PKPassView"16B24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8Q16
@"PKPassView"
@"PKPass"
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
@24@0:8@16
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
Q24@0:8@16
v24@0:8@"PKPassFooterView"16
B24@0:8@"PKPassFooterView"16
Q24@0:8@"PKPassFooterView"16
v28@0:8Q16B24
B24@0:8Q16
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@"UIView"
@"UIScrollView"
@"UIPageControl"
@"NSMutableSet"
@"PKPassFooterView"
@"PKSecureElement"
@"<WLLockScreenViewDataSource>"
@"<WLLockScreenViewDelegate>"
@"NSData"
