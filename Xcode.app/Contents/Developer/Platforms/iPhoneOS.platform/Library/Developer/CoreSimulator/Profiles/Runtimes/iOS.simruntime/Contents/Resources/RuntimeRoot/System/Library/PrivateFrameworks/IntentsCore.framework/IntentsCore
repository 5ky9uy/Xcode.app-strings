@(#)PROGRAM:IntentsCore  PROJECT:Intents-1
INCExtensionRequestQueue
v32@?0@"NSExtension"8@"NSUUID"16@"NSError"24
-[INCExtensionRequest reset]_block_invoke
-[INCExtensionRequest _extensionContextHost]
B32@?0@"NSString"8@"<INCLocalExtending>"16^B24
%@ {identifier = %@, currentIntent = %@, currentUserActivity = %@, userActivitiesIdentifiers = %@}
com.apple.intents.INCExtensionTransaction.internal-queue
-[INCExtensionTransaction userActivityWithIdentifier:]
-[INCExtensionTransaction setState:]
-[INCExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]
-[INCExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]_block_invoke
-[INCExtensionTransaction _addUserActivities:]
-[NSExtension(IntentsCore) _intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:]
-[NSExtension(IntentsCore) _intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:]_block_invoke
_INCOptionalLocalExtensionIdentifier
INCExtensionManagerExtensionKey
INCExtensionManagerRequestIdentifierKey
INCExtensionManagerQueue
v24@?0@"NSUUID"8@"NSError"16
v24@?0@"NSExtension"8@"NSError"16
-[INCExtensionManager killExtension:requestIdentifier:afterTimeout:]_block_invoke
-[INCExtensionManager _resetKillTimerForExtensionWithBundleIdentifier:]
-[INCExtensionManager _killExtensionWithBundleIdentifier:]
_INCExtensionManagerFetchMatchingSiriExtensionForIntent_block_invoke_2
_INCExtensionManagerFetchMatchingSiriExtensionForIntent_block_invoke
v24@?0@"NSArray"8@"NSError"16
_INCExtensionManagerFetchMatchingSiriExtensionForIntent
com.apple.MobileSMS
INCIntentsSupportedQueue
SiriKitPlugins
plist
-[INCExtensionPlugInBundleManager extensionForIntent:]
-[INCExtensionPlugInBundleManager loadBundleForBundleIdentifier:wasPrewarmed:]
-[INCExtensionPlugInBundleManager _registerBundle:bundleIdentifier:]
NSExtension
NSExtensionAttributes
IntentsSupported
IntentsRestrictedWhileLocked
-[INCDisplayLayoutMonitorObserver updateDisplayLayout:]
INCExtensionTransactionStateTypeUnknown
INCExtensionTransactionStateTypeBeforeSlotResolution
INCExtensionTransactionStateTypeConfirmIntentInProgress
INCExtensionTransactionStateTypeConfirmIntentCompleted
INCExtensionTransactionStateTypeHandleIntentInProgress
INCExtensionTransactionStateTypeHandleIntentCompleted
%@ {type = %ld (%@), intent = %@, intentResponse = %@, userActivities = %@}
INCExtensionConnectionQueue
-[INCExtensionConnection initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:]_block_invoke_2
-[INCExtensionConnection initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:]_block_invoke
v16@?0B8B12
-[INCExtensionConnection resumeWithCompletionHandler:]_block_invoke
-[INCExtensionConnection resumeWithCompletionHandler:]_block_invoke_2
{?=[8I]}
v32@?0@"NSExtension"8@"INExtensionContextHost"16@"NSError"24
Unable to resume connection with an undefined extension type
-[INCExtensionConnection _startRequestTimerWithExtensionProxy:]
-[INCExtensionConnection _cancelRequestTimer]
-[INCExtensionConnection _takeAssertionsForIntent:extensionBundleIdentifier:processIdentifier:]
-[INCExtensionConnection _takeInUseAssertionForIntent:extensionBundleIdentifier:]
com.apple.siri
IntentStartupGrant
Delivering an intent to an extension
-[INCExtensionConnection _takeRunningBoardAssertionForProcessIdentifier:]
-[INCExtensionConnection _invalidateRunningBoardAssertion]
INCExtensionErrorDomain
-[INCAppProxy launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:]
Cannot launch "%@" while CarPlay is active because it is not available in CarPlay
-[INCAppProxy launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
+[INCAppProxy shouldLaunchAppInBackgroundWithIntent:intentResponse:]
B16@?0@"TUCallProvider"8
TUCallCenter
TUCallProviderManager
B16@?0@"NSURL"8
v24@?0@"<INCExtensionProxy>"8@"NSError"16
v24@?0@8@"NSError"16
v24@?0@"INObjectCollection"8@"NSError"16
-[INCExtensionProxy getOptionsForParameterNamed:searchTerm:completionHandler:]_block_invoke_2
-[INCExtensionProxy getOptionsForParameterNamed:searchTerm:completionHandler:]_block_invoke
v16@?0@"INGetIntentParameterOptionsForwardingActionResponse"8
-[INCExtensionProxy getDefaultValueForParameterNamed:completionHandler:]_block_invoke_2
-[INCExtensionProxy getDefaultValueForParameterNamed:completionHandler:]_block_invoke
v16@?0@"INGetIntentParameterDefaultValueForwardingActionResponse"8
-[INCExtensionProxy resolveIntentSlotKeyPath:completionHandler:]_block_invoke
no data
v16@?0@"INResolveIntentParametersForwardingActionResponse"8
-[INCExtensionProxy resolveIntentSlotKeyPaths:completionHandler:]_block_invoke
-[INCExtensionProxy confirmIntentWithCompletionHandler:]_block_invoke_2
-[INCExtensionProxy confirmIntentWithCompletionHandler:]_block_invoke
v16@?0@"INConfirmIntentForwardingActionResponse"8
v16@?0@"NSError"8
-[INCExtensionProxy handleIntentWithCompletionHandler:]
v24@?0@"INIntentResponse"8@"NSSet"16
-[INCExtensionProxy handleIntentWithCompletionHandler:]_block_invoke
v16@?0@"INIntentForwardingActionResponse"8
v16@?0@"INHandleIntentForwardingActionResponse"8
-[INCExtensionProxy prewarmAppWithIntent:completionHandler:]
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]_block_invoke_2
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]_block_invoke
v16@?0@"<INCacheableObject>"8
v24@?0@"NSData"8@"NSError"16
com.apple.Carousel
-[INCAppLaunchRequest initWithInteraction:userActivity:inBackground:error:]
No intent was provided in the interaction.
-[INCAppLaunchRequest initWithIntent:userActivity:inBackground:error:]
-[INCAppLaunchRequest initWithAudioCallIntentForCarousel:error:]
Missing personHandle from INStartAudioCallIntent
facetime://%@
tel://%@
-[INCAppLaunchRequest initWithURL:error:]
No applications are available to handle the %@ scheme
    bundleIdentifier = %@,
    options = %@,
    URL = %@,
    userActivity = %@
https
http
facetime.apple.com
facetime-open-link
link
-[INCAppLaunchRequest isSupportedInCarPlay]
-[INCAppLaunchRequest performWithCompletionHandler:]
-[INCAppLaunchRequest performWithService:completionHandler:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[INCAppLaunchRequest observeForAppLaunchWithTimeout:completionHandler:]
v8@?0
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
GEOCountryConfiguration
Unable to find class %s
CRCarPlayAppPolicyEvaluator
CRCarPlayAppDeclaration
CARSessionStatus
UIActivityContinuationAction
-[INCWidgetIntentProvider provideIntentWithOptions:completionHandler:]
v24@?0@"INIntent"8@"NSError"16
%s Reset extension request
%s Unexpected extension context class %@
%s Found user activity %@ with identifier %@.
%s Unable to find user activity with identifier %@
%s state = %@
%s %ld (%@) is not an expected state type and therefore not handled.
%s _intentResponseCode = %@, donating interaction %@
%s Unable to donate interaction with identifier %@, error %@
%s Successfully donated interaction with identifier %@
%s _intentResponseCode = %@, NOT donating interaction with identifier %@
%s Unknown INCExtensionTransactionStateType %@
%s Adding %tu user activities...
%s Added user activity %@ with identifier %@.
%s Extension loading timeout disabled for %@ for debugging.
%s Extension launching timed out after %{public}f seconds for intent %@
INSignpostExtensionLaunch
%s Error with extension request %{public}@
%s UNEXPECTED: requestIdentifier should be of class NSUUID: %{public}@
%s Extension successfully brought up with request identifier %@
%s UNEXPECTED: extension context host is nil: %{public}@
%s Request identifier <%@> didn't match an existing <%@> while trying to schedule a kill timer for an extension with bundleId %@
%s Schedule to kill an extension with bundleId %@
%s Reset kill timer for extension with bundleId %@
%s Killed extension with bundleId %@
%s Failed to kill extension with bundleId %@
%s Failed to find extension %{public}@
%s Found Siri extensions %@
%s No local app to handle intent with launchID=%{public}@, bundleID=%{public}@
%s Unable to get bundleIdentifier from %@
%s Error loading bundle at path "%@"
%s Successfully loaded bundle at path "%@"
%s Unable to register '%@' bundle for '%@' bundleIdentifier
%s SiriKit extension plugin does not specify an NSPrincipalClass, unable to load: %@
%s Layout changed to: %@
%s Pausing request timer %@
%s Resuming request timer %@
%s Found local extension %@ for identifier: %@
%s Returning an optional local extension for the provided widget intent
%s Unable to get remote object proxy (%{public}@). XPC error: %{public}@
%s Received an XPC connection interruption (%{public}@). The remote process exited or crashed.
%s Cancelling request timer from previous request
%s Waiting indefinitely for intent: %@
%s Intent handling already timed out, ignoring extension response for intent %@
%s Unable to take assertions for a process with pid 0. Did the `%{public}@` process crash?
%s Error acquiring background assertion: %{public}@
%s Failed to acquire assertion: %{public}@
%s Failed to invalidate process assertion: %{public}@
%s Unable to find user activity for identifier %{public}@
%s Unable to construct launch request: %{public}@
%s Refusing to launch "%{public}@" while CarPlay is active because it is not available in CarPlay
%s Performing launch request: %@
%s Successfully performed launch request %@
%s Failed to perform launch request %@: %{public}@
%s Calling intent has an unknown call provider (%{public}@), preventing us from determining if the app should be launched in the background
%s Call intent failed requiring app launch, launching app in the foreground
%s Calling intent had an unknown call destination (%lu) and/or an unknown call capability (%lu), preventing us from determining if the app should be launched in the background.
%s Error getting options for parameter: %@ - %@
%s Error unarchiving options: %@. Parameter name: %@
%s Error getting default value for parameter name: %@ - %@
%s Error unarchiving default value: %@. Parameter name: %@
%s Received slot resolution result from vendor remote
%s resolutionResultData = %@
%s Received slot resolution results from vendor remote: %@
%s Received confirm response from vendor remote: %@
%s Got error when vendor remote is trying to confirm intent %@: %{public}@
%s intent.backingStore = %@
%s Received handle response from vendor remote: %@
%s Got error when vendor remote is trying to handle intent %@: %{public}@
%s Got error when application is trying to handle intent %@: %{public}@
%s No application id was found to handle intent %@
%s Unable to create application record: %@
%s intentResponse.backingStore = %@
%s Error processing image : %@
%s Image caching handler is not set
%s Image caching timed out for intent:%@
%s No intent was provided in the interaction: %@
%s %{public}@ was given a %{public}@ without a bundle identifier to launch
%s %{public}@ was not given a user activity, making one
%s %{public}@ is missing a personHandle to call
%s Multiple app links are available to handle the URL, picking the first one: %{public}@
%s Failed to get app links for URL: %{public}@
%s No applications are available to handle the "%{public}@" scheme
%s Multiple applications are available to handle the "%{public}@" scheme, picking the first one: %{public}@
%s Failed to get the GEOCountryConfiguration, falling back to the default service
%s Failed to get the CarPlay dashboard service (is the process properly entitled?). Falling back to the default service.
%s Failed to serialize user activity: %{public}@
%s Failed to get CarPlay layout monitor configuration. Falling back to the default layout monitor configuration
%s Providing intent for chrono with options: extensionBundleIdentifier = %{public}@, intentType = %{public}@
%s No chrono extension found with identifier: %{public}@. Error: %{public}@
%s No intents extension found in same bundle as chrono extension. %{public}@
%s No intent definitions found in extensions.
%s Unable to create intent from schema.
softlink:o:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:o:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:o:path:/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
softlink:o:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:o:path:/System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
INCExtensionRequest
INCLocalExtensionRegistry
INCExtensionPlugInBundle
INCUserActivityExecutionInfo
INCExtensionTransaction
IntentsCore
_INCOptionalLocalExtension
INCLocalExtending
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
NSObject
INCExtensionManager
INCExtensionPlugInBundleManager
INCExecutionInfo
INCIntentExecutionInfoResolver
INCIntentExecutionInfo
INCDisplayLayoutMonitorObserver
SBSDisplayLayoutElement
INCChronoOptions
INCChronoIntentProvider
INCExtensionTransactionState
INCExtensionConnection
NSXPCListenerDelegate
INXPCListenerEndpointProvider
INCExtensionError
INCAppProxy
INCExecutionInfoResolver
INCodableAttributeDefaultValueProviding
INCIntentDefaultValueProvider
INCExtensionProxy
INCAppLaunchRequest
NSCopying
INCWidgetOptions
INCWidgetIntentProvider
init
_resetExtensionContextHostWithCompletion:
_requestOperationQueue
setSuspended:
_extension
_extensionContextHost
_error
addOperationWithBlock:
operationCount
sharedManager
extensionInputItems
requiresTCC
_setExtension:
_setError:
_extensionBundle
setExtensionBundle:
_scheduleContextTimer
fetchExtensionForIntent:extensionInputItems:requiresTCC:completion:
_auxiliaryConnection
remoteObjectProxy
killExtension:requestIdentifier:afterTimeout:
setMaxConcurrentOperationCount:
_extensionContextForUUID:
_resetContextTimer
completeTransactionWithIntentIdentifier:completion:
cancel
identifier
cancelTransactionDueToTimeoutWithIntentIdentifier:completion:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
initialize
initWithIdentifier:
setExtensionInputItems:
startRequestForIntent:completion:
reset
setIdentifier:
setRequiresTCC:
.cxx_destruct
_requestIdentifier
_contextTimer
_queue
_requiresTCC
_identifier
_extensionInputItems
T@"NSExtension",&,N,S_setExtension:,V_extension
T@"NSError",&,N,S_setError:,V_error
T@"NSString",&,N,V_identifier
T@"NSArray",&,N,V_extensionInputItems
TB,N,V_requiresTCC
localExtensionIdentifier
setObject:forKey:
objectForKey:
isEqual:
removeObjectForKey:
keysOfEntriesPassingTest:
allObjects
removeObjectsForKeys:
allValues
setWithArray:
sharedInstance
registerLocalExtension:
deregisterLocalExtension:
localExtensions
localExtensionForIdentifier:
_localExtensionsByIdentifier
copy
initWithPrincipalClass:intentsSupported:intentsRestrictedWhileLocked:
principalClass
intentsSupported
intentsRestrictedWhileLocked
_principalClass
_intentsSupported
_intentsRestrictedWhileLocked
T#,R,N,V_principalClass
T@"NSSet",R,C,N,V_intentsSupported
T@"NSSet",R,C,N,V_intentsRestrictedWhileLocked
description
allKeys
stringWithFormat:
type
intent
intentResponse
_setCurrentIntent:
_setCurrentIntentResponse:
_updateCurrentUserActivityForType:intent:intentResponse:
userActivities
_addUserActivities:
shouldResetRequestAfterHandle
userActivity
_intents_copy
currentUserActivity
_className
initWithActivityType:
_init
groupIdentifier
setGroupIdentifier:
_intentHandlingStatus
setIntentHandlingStatus:
_intentResponseCode
donateInteraction
numberWithInteger:
donateInteractionWithCompletion:
_setInteraction:donate:
count
countByEnumeratingWithState:objects:count:
_intentsIdentifier
initWithIntent:donateInteraction:groupIdentifier:
request
userActivityWithIdentifier:
setState:
currentIntent
currentIntentResponse
state
setShouldResetRequestAfterHandle:
_userActivitiesByIdentifier
_donateInteraction
_shouldResetRequestAfterHandle
_currentUserActivity
_request
_currentIntent
_currentIntentResponse
_groupIdentifier
_state
T@"INIntent",&,N,S_setCurrentIntent:,V_currentIntent
T@"INIntentResponse",&,N,S_setCurrentIntentResponse:,V_currentIntentResponse
TB,R,N,V_donateInteraction
T@"NSString",R,C,N,V_groupIdentifier
T@"INCExtensionRequest",R,N,V_request
T@"NSUserActivity",R,C,N,V_currentUserActivity
T@"INCExtensionTransactionState",&,N,V_state
TB,N,V_shouldResetRequestAfterHandle
_plugIn
userElection
errorWithDomain:code:userInfo:
beginExtensionRequestWithOptions:inputItems:error:
dictionaryWithObjects:forKeys:count:
beginTransactionWithIntentIdentifier:completion:
_intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
T@"NSString",R,N
dictionary
bundleIdentifier
_resetKillTimerForExtensionWithBundleIdentifier:
_manageExtension:requestIdentifier:
_killExtensionWithBundleIdentifier:
_kill:
isExtensionLoadedForExtensionBundleIdentifier:
_extensions
_killTimers
firstObject
_intents_launchIdForCurrentPlatform
extensionBundleId
isEqualToString:
launchId
_intents_matchSiriExtensionsForIntent:completion:
_intents_matchExtensionsForIntent:completion:
bundleForClass:
pathForResource:ofType:
dictionaryWithContentsOfFile:
_extensionPlugInBundleForIntent:bundleIdentifier:
loadBundleForBundleIdentifier:wasPrewarmed:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
stringByAppendingPathComponent:
initWithPath:
isLoaded
_registerBundle:bundleIdentifier:
infoDictionary
_setExtensionPlugInBundle:forIntent:bundleIdentifier:
extensionForIntent:
_intentsSupportedQueue
_pluginsPlistDictionary
resolveIntentExecutionInfo:
resolveExecutionInfo:
elements
_intents_isExpectedElement
_intents_isSiri
updateDisplayLayout:
handler
setHandler:
_handler
T@?,C,N,V_handler
isSpringBoardElement
layoutRole
sb_isTransitioning
sb_isStashedPIP
springBoardElement
TB,R,N,GisSpringBoardElement
Tq,R,N
sb_transitioning
TB,R,N,Gsb_isTransitioning
sb_stashedPIP
TB,R,N,Gsb_isStashedPIP
_intents_SpringBoardElement
provideIntentWithOptions:completionHandler:
initWithType:intent:intentResponse:userActivities:
_type
_intent
_intentResponse
_userActivities
Tq,R,N,V_type
T@"INIntent",R,N,V_intent
T@"INIntentResponse",R,N,V_intentResponse
T@"NSSet",R,C,N,V_userActivities
initWithIntent:supportedExtensionTypes:remoteProxyProvider:
initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:
_initWithConnection:
setRemoteExtensionProxyProvider:
_executionContext
stop
_setExecutionContext:
_transaction
supportedExtensionTypes
initWithInputItems:privateIntentHandlerProvider:
_initWithConnection:extension:vendorRemote:auditTokenValue:
initWithInputItems:extension:
appInfoWithIntent:
supportsMultiwindow
_intents_isExemptFromMulitWindowRequirementForInAppHandling
_intents_hasSystemIntentHandler
supportedIntentsByApp
containsObject:
applicationIdentifier
_siriAuthorizationStatusForAppID:
_codableDescription
isEligibleForWidgets
auditToken
trimDataAgainstTCCForAuditToken:bundle:
_setShouldObserveLayout:
_invalidateAssertions
interruptionHandler
remoteObjectProxyWithErrorHandler:
setInterruptionHandler:
processIdentifier
_takeAssertionsForIntent:extensionBundleIdentifier:processIdentifier:
value:withObjCType:
exceptionWithName:reason:userInfo:
_invalidateDisplayLayoutMonitor
setXPCInterface:
setXPCObject:
anonymousListener
setDelegate:
resume
endpoint
invalidate
configurationForDefaultMainDisplayMonitor
setTransitionHandler:
monitorWithConfiguration:
cancelIfNotAlreadyCanceled
_isExtensionBeingDebugged
_timeoutIntervalForTransactionState:
_vendorRemote
dealloc
_takeInUseAssertionForIntent:extensionBundleIdentifier:
_takeRunningBoardAssertionForProcessIdentifier:
_intents_backgroundHandlingAssertionForBundleIdentifier:context:error:
_invalidateRunningBoardAssertion
targetWithPid:
attributeWithDomain:name:
arrayWithObjects:count:
initWithExplanation:target:attributes:
acquireWithError:
_invalidateInUseAssertion
isValid
invalidateWithError:
setXPCConnection:
setInvalidationHandler:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
xpcListenerEndpointWithInterface:object:
initWithIntent:
initWithIntent:remoteProxyProvider:
setIntent:
resumeWithCompletionHandler:
_startRequestTimerWithExtensionProxy:
_cancelRequestTimer
_shouldObserveLayout
xpcListener
appProxy
requestTimeoutInterval
setRequestTimeoutInterval:
timeoutHandler
setTimeoutHandler:
appHandler
setAppHandler:
remoteExtensionProxyProvider
xpcInterface
xpcConnection
xpcObject
_displayLayoutMonitor
_layoutObserver
_requestTimer
_backgroundHandlingAssertion
_processAssertion
_xpcListener
_appProxy
_supportedExtensionTypes
_requestTimeoutInterval
_timeoutHandler
_interruptionHandler
_appHandler
_remoteExtensionProxyProvider
_xpcInterface
_xpcConnection
_xpcObject
TB,N,S_setShouldObserveLayout:,V_shouldObserveLayout
T@?,C,N,V_remoteExtensionProxyProvider
T@"NSXPCListener",R,N,V_xpcListener
T@"NSXPCInterface",&,N,SsetXPCInterface:,V_xpcInterface
T@"NSXPCConnection",&,N,SsetXPCConnection:,V_xpcConnection
T@,&,N,SsetXPCObject:,V_xpcObject
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"INCExtensionTransaction",R,N,V_transaction
T@"INCAppProxy",R,N,V_appProxy
Tq,R,N,V_supportedExtensionTypes
T@"INIntent",&,N
Td,N,V_requestTimeoutInterval
T@?,C,N,V_timeoutHandler
T@?,C,N,V_interruptionHandler
TB,N
T@?,C,N,V_appHandler
initWithErrorCode:underlyingError:
errorCode
setErrorCode:
underlyingError
setUnderlyingError:
_errorCode
_underlyingError
Tq,N,V_errorCode
T@"NSError",C,N,V_underlyingError
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
_connection
initWithIntent:response:
initWithInteraction:userActivity:inBackground:error:
initAndWaitUntilSessionUpdated
currentSession
isSupportedInCarPlay
applicationWillLaunchForStartCallInteraction:
performWithCompletionHandler:
_intents_bundleIdForLaunching
providersPassingTest:
isSystemProvider
destinationType
supportsEmergency
supportsVoicemail
callCapability
supportsAudioOnly
supportsAudioAndVideo
shouldLaunchAppInBackgroundWithIntent:intentResponse:
launchAppInBackground:completionHandler:
T@"INCExtensionConnection",R,W,N,V_connection
resolveUserActivityExecutionInfo:
isFileURL
_intents_enumerateObjectsOfClass:withBlock:
inc_associateFileURLsWithAuditToken:
displayOrderedAttributes
array
supportsDynamicEnumeration
loadDefaultValuesWithAttributes:extensionProxy:completionHandler:
relationship
parentCodableAttribute
relation
propertyName
valueForKey:
compareValue:
isExpectedDefaultValueError:
setValue:forKey:
getDefaultValueForParameterNamed:completionHandler:
metadata
defaultValueForIntentDefaultValueProvider
modifier
arrayWithObject:
domain
code
loadDefaultValuesWithCompletionHandler:
T@"INIntent",R,C,N,V_intent
allItems
getOptionsForParameterNamed:searchTerm:completionHandler:
attributeByName:
objectClass
_issueSandboxExtensionsForFileURLsIfNeededToIntent:
initWithIntent:parameterName:searchTerm:
setRequestTimeout:
archivedObjectCollection
error
unarchivedObjectOfClass:fromData:error:
_typedObjectCollectionWithCodableAttribute:
initWithItems:
executeRemotelyWithVendorRemote:completionHandler:
initWithIntent:parameterName:
archivedDefaultValue
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
initWithCapacity:
decodeWithCodableAttribute:from:
if_addObjectIfNonNil:
parameterResolutionResults
data
responseHandler
initWithData:
initWithIntent:parameterNames:
isSuccess
updatedIntent
_isIntentRestrictedWhileProtectedDataUnavailableWithCompletionHandler:
_codeFromIntentResponseCode:
_setCode:
setNowPlayingInfo:
cacheItems
_processIntent:intentResponse:withCacheItems:
backingStore
_shouldForwardToAppWithIntent:intentResponse:
setAllowsScenelessAppLaunch:
initWithBundleIdentifier:intentForwardingAction:
deliverIntentForwardingActionWithResponseHandler:
initWithIntent:endpointProvider:observer:
initWithBundleIdentifier:allowPlaceholder:error:
numberWithBool:
serviceWithDefaultShellEndpoint
optionsWithDictionary:
openApplication:withOptions:completion:
_shouldForwardIntentToApp
_extensionProcessHasEntitlement:
_shouldForwardToAppOnSucccess
getValue:size:
addObject:
shouldCache
sharedCache
addCacheableObject:
imageProcessingHandler
deserializeCacheItem:completion:
_intents_updateContainerWithCache:
_intents_intentsRestrictedWhileProtectedDataUnavailable
_initWithCode:userActivity:
_setRequiresProtectedData:
confirmIntentWithCompletionHandler:
handleIntentWithCompletionHandler:
resolveIntentSlotKeyPath:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
prewarmAppWithIntent:completionHandler:
startSendingUpdatesToObserver:
stopSendingUpdates
getOptionsForParameterNamed:completionHandler:
_auditTokenValue
setShouldCache:
imageCachingHandler
setImageCachingHandler:
setImageProcessingHandler:
setResponseHandler:
_shouldCache
_imageCachingHandler
_imageProcessingHandler
_responseHandler
_extensionBeingDebugged
TB,R,N,G_isExtensionBeingDebugged
T@"INCExtensionConnection",R,N,V_connection
T@"NSExtension",R,N,V_extension
T@"<_INExtensionContextVending>",R,N,V_vendorRemote
T@"NSValue",R,N,V_auditTokenValue
TB,N,V_shouldCache
T@?,C,N,V_imageCachingHandler
T@?,C,N,V_imageProcessingHandler
T@?,C,N,V_responseHandler
setNeedsSave:
_intentsPrepareForEncoding
_createUserActivityDataWithOptions:completionHandler:
_initWithUserActivityData:
initWithIntent:userActivity:inBackground:error:
userInfo
initWithURL:error:
initWithAudioCallIntentForCarousel:error:
_initWithIntent:
initWithBundleIdentifier:options:URL:userActivity:
contacts
personHandle
value
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
preferredCallProvider
URLWithString:
defaultWorkspace
URLOverrideForURL:
appLinksWithURL:limit:error:
targetApplicationProxy
applicationsAvailableForOpeningURL:
scheme
initWithFormat:
stringByAppendingString:
host
setScheme:
absoluteString
initWithName:value:
setQueryItems:
sharedConfiguration
applicationProxyForIdentifier:
appState
isInstalled
currentCountrySupportsCarIntegration
setGeoSupported:
declarationForAppProxy:
effectivePolicyForAppDeclaration:
isCarPlaySupported
canDisplayOnCarScreen
dashboardService
performWithService:completionHandler:
options
mutableCopy
initWithSettings:
interaction
realToken
configurationForCarDisplayMonitor
setNeedsUserInteractivePriority:
initWithTimeoutInterval:timeoutHandler:
copyWithZone:
observeForAppLaunchWithTimeout:completionHandler:
_bundleIdentifier
_options
_URL
_userActivity
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSDictionary",R,C,N,V_options
T@"NSURL",R,C,N,V_URL
T@"NSUserActivity",R,N,V_userActivity
supportedInCarPlay
TB,R,N,GisSupportedInCarPlay
underlyingIntent
underlyingIntentResponse
intentHandlingStatus
typeName
messageData
initWithExtensionBundleIdentifier:intentType:
extensionBundleIdentifier
setExtensionBundleIdentifier:
intentType
setIntentType:
_extensionBundleIdentifier
_intentType
T@"NSString",C,N,V_extensionBundleIdentifier
T@"NSString",C,N,V_intentType
sharedResolver
setOptions:
initWithBundleIdentifier:error:
containingBundleRecord
intentsExtensionForExtension:compatibleWithIntent:error:
initWithIntentClassName:extensionBundleId:
initWithIntentClassName:launchableAppBundleId:
resolvedIntentMatchingDescriptor:
intentDefinitionURLs
_initWithContentsOfURLs:bundleIdentifier:
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
UUID
UUIDString
_initWithIdentifier:schema:name:data:
_setLaunchId:
_setExtensionBundleId:
compatibilityObject
if_isSystem
objectForKey:ofClass:
URLByDeletingLastPathComponent
defaultManager
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
extensionPointRecord
componentsSeparatedByString:
lastObject
if_extensionAttributesDictionary
v16@0:8
@24@0:8@16
v24@0:8@16
v32@0:8@16@?24
@16@0:8
v24@0:8@?16
B16@0:8
v20@0:8B16
@"NSUUID"
@"INWatchdogTimer"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSExtension"
@"NSError"
@"NSString"
@"NSArray"
@"NSMutableDictionary"
@40@0:8#16@24@32
#16@0:8
@"NSSet"
@36@0:8@16B24@28
v40@0:8q16@24@32
@"NSUserActivity"
@"INCExtensionRequest"
@"INIntent"
@"INIntentResponse"
@"INCExtensionTransactionState"
v48@0:8@16@24@32@?40
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"INIntent"16
v24@0:8@"NSString"16
v44@0:8@16@24B32@?36
v40@0:8@16@24d32
v32@0:8@16@24
@32@0:8@16@24
v40@0:8@16@24@32
B32@0:8@16^B24
B32@0:8@16@24
@"NSDictionary"
@?16@0:8
q16@0:8
@48@0:8q16@24@32@40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListenerEndpoint"32@0:8@"NSXPCInterface"16@24
@32@0:8@16@?24
@40@0:8@16q24@?32
@52@0:8@16q24B32@36@?44
d24@0:8@16
v36@0:8@16@24i32
v20@0:8i16
d16@0:8
v24@0:8d16
@"FBSDisplayLayoutMonitor"
@"INCDisplayLayoutMonitorObserver"
@"<INIntentBackgroundHandlingAssertion>"
@"RBSAssertion"
@"INCExtensionTransaction"
@"NSXPCListener"
@"INCAppProxy"
@"NSXPCInterface"
@"NSXPCConnection"
@32@0:8q16@24
v24@0:8q16
v28@0:8B16@?20
v40@0:8B16B20@24@?32
@"INCExtensionConnection"
v48@0:8{?=[8I]}16
v40@0:8@16@24@?32
v24@0:8@?<v@?@"INIntentResponse"@"INCExtensionError">16
v32@0:8@"NSString"16@?<v@?@"NSData">24
v32@0:8@"NSArray"16@?<v@?B@"INIntent"@"NSDictionary">24
v32@0:8@"INIntent"16@?<v@?B@"NSError">24
v24@0:8@"<INIntentResponseObserver>"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"INObjectCollection"@"NSError">32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B24@0:8@?16
@"<_INExtensionContextVending>"
@"NSValue"
@24@0:8^{_NSZone=}16
@44@0:8@16@24B32^@36
@32@0:8@16^@24
v32@0:8d16@?24
@"NSURL"
@40@0:8@16@24^@32
@(#)PROGRAM:IntentsCore  PROJECT:Intents-1
INCExtensionRequestQueue
v32@?0@"NSExtension"8@"NSUUID"16@"NSError"24
-[INCExtensionRequest reset]_block_invoke
-[INCExtensionRequest _extensionContextHost]
B32@?0@"NSString"8@"<INCLocalExtending>"16^B24
%@ {identifier = %@, currentIntent = %@, currentUserActivity = %@, userActivitiesIdentifiers = %@}
com.apple.intents.INCExtensionTransaction.internal-queue
-[INCExtensionTransaction userActivityWithIdentifier:]
-[INCExtensionTransaction setState:]
-[INCExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]
-[INCExtensionTransaction _updateCurrentUserActivityForType:intent:intentResponse:]_block_invoke
-[INCExtensionTransaction _addUserActivities:]
-[NSExtension(IntentsCore) _intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:]
-[NSExtension(IntentsCore) _intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:]_block_invoke
_INCOptionalLocalExtensionIdentifier
INCExtensionManagerExtensionKey
INCExtensionManagerRequestIdentifierKey
INCExtensionManagerQueue
v24@?0@"NSUUID"8@"NSError"16
v24@?0@"NSExtension"8@"NSError"16
-[INCExtensionManager killExtension:requestIdentifier:afterTimeout:]_block_invoke
-[INCExtensionManager _resetKillTimerForExtensionWithBundleIdentifier:]
-[INCExtensionManager _killExtensionWithBundleIdentifier:]
_INCExtensionManagerFetchMatchingSiriExtensionForIntent_block_invoke_2
_INCExtensionManagerFetchMatchingSiriExtensionForIntent_block_invoke
v24@?0@"NSArray"8@"NSError"16
_INCExtensionManagerFetchMatchingSiriExtensionForIntent
com.apple.MobileSMS
INCIntentsSupportedQueue
SiriKitPlugins
plist
-[INCExtensionPlugInBundleManager extensionForIntent:]
-[INCExtensionPlugInBundleManager loadBundleForBundleIdentifier:wasPrewarmed:]
-[INCExtensionPlugInBundleManager _registerBundle:bundleIdentifier:]
NSExtension
NSExtensionAttributes
IntentsSupported
IntentsRestrictedWhileLocked
-[INCDisplayLayoutMonitorObserver updateDisplayLayout:]
INCExtensionTransactionStateTypeUnknown
INCExtensionTransactionStateTypeBeforeSlotResolution
INCExtensionTransactionStateTypeConfirmIntentInProgress
INCExtensionTransactionStateTypeConfirmIntentCompleted
INCExtensionTransactionStateTypeHandleIntentInProgress
INCExtensionTransactionStateTypeHandleIntentCompleted
%@ {type = %ld (%@), intent = %@, intentResponse = %@, userActivities = %@}
INCExtensionConnectionQueue
-[INCExtensionConnection initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:]_block_invoke_2
-[INCExtensionConnection initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:]_block_invoke
v16@?0B8B12
-[INCExtensionConnection resumeWithCompletionHandler:]_block_invoke
-[INCExtensionConnection resumeWithCompletionHandler:]_block_invoke_2
-[INCExtensionConnection resumeWithCompletionHandler:]_block_invoke_3
{?=[8I]}
v32@?0@"NSExtension"8@"INExtensionContextHost"16@"NSError"24
Unable to resume connection with an undefined extension type
-[INCExtensionConnection _startRequestTimerWithExtensionProxy:]
-[INCExtensionConnection _cancelRequestTimer]
-[INCExtensionConnection _takeAssertionsForIntent:extensionBundleIdentifier:processIdentifier:]
-[INCExtensionConnection _takeInUseAssertionForIntent:extensionBundleIdentifier:]
com.apple.siri
IntentStartupGrant
Delivering an intent to an extension
-[INCExtensionConnection _takeRunningBoardAssertionForProcessIdentifier:]
-[INCExtensionConnection _invalidateRunningBoardAssertion]
INCExtensionErrorDomain
-[INCAppProxy launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:]
Cannot launch "%@" while CarPlay is active because it is not available in CarPlay
-[INCAppProxy launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:]_block_invoke
v20@?0B8@"NSError"12
+[INCAppProxy shouldLaunchAppInBackgroundWithIntent:intentResponse:]
B16@?0@"TUCallProvider"8
TUCallCenter
TUCallProviderManager
B16@?0@"NSURL"8
v24@?0@"<INCExtensionProxy>"8@"NSError"16
v24@?0@8@"NSError"16
v24@?0@"INObjectCollection"8@"NSError"16
-[INCExtensionProxy getOptionsForParameterNamed:searchTerm:completionHandler:]_block_invoke_2
-[INCExtensionProxy getOptionsForParameterNamed:searchTerm:completionHandler:]_block_invoke
v16@?0@"INGetIntentParameterOptionsForwardingActionResponse"8
-[INCExtensionProxy getDefaultValueForParameterNamed:completionHandler:]_block_invoke_2
-[INCExtensionProxy getDefaultValueForParameterNamed:completionHandler:]_block_invoke
v16@?0@"INGetIntentParameterDefaultValueForwardingActionResponse"8
-[INCExtensionProxy resolveIntentSlotKeyPath:completionHandler:]_block_invoke
no data
v16@?0@"INResolveIntentParametersForwardingActionResponse"8
-[INCExtensionProxy resolveIntentSlotKeyPaths:completionHandler:]_block_invoke
-[INCExtensionProxy confirmIntentWithCompletionHandler:]_block_invoke_2
-[INCExtensionProxy confirmIntentWithCompletionHandler:]_block_invoke
v16@?0@"INConfirmIntentForwardingActionResponse"8
v16@?0@"NSError"8
-[INCExtensionProxy handleIntentWithCompletionHandler:]
v24@?0@"INIntentResponse"8@"NSSet"16
-[INCExtensionProxy handleIntentWithCompletionHandler:]_block_invoke_2
-[INCExtensionProxy handleIntentWithCompletionHandler:]_block_invoke
v16@?0@"INIntentForwardingActionResponse"8
v16@?0@"INHandleIntentForwardingActionResponse"8
-[INCExtensionProxy prewarmAppWithIntent:completionHandler:]
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]_block_invoke_2
-[INCExtensionProxy _processIntent:intentResponse:withCacheItems:]_block_invoke
v16@?0@"<INCacheableObject>"8
v24@?0@"NSData"8@"NSError"16
com.apple.Carousel
-[INCAppLaunchRequest initWithInteraction:userActivity:inBackground:error:]
No intent was provided in the interaction.
-[INCAppLaunchRequest initWithIntent:userActivity:inBackground:error:]
-[INCAppLaunchRequest initWithAudioCallIntentForCarousel:error:]
Missing personHandle from INStartAudioCallIntent
facetime://%@
tel://%@
-[INCAppLaunchRequest initWithURL:error:]
No applications are available to handle the %@ scheme
    bundleIdentifier = %@,
    options = %@,
    URL = %@,
    userActivity = %@
https
http
facetime.apple.com
facetime-open-link
link
-[INCAppLaunchRequest isSupportedInCarPlay]
-[INCAppLaunchRequest performWithCompletionHandler:]
-[INCAppLaunchRequest performWithService:completionHandler:]
v24@?0@"BSProcessHandle"8@"NSError"16
-[INCAppLaunchRequest observeForAppLaunchWithTimeout:completionHandler:]
v8@?0
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
GEOCountryConfiguration
Unable to find class %s
CRCarPlayAppPolicyEvaluator
CRCarPlayAppDeclaration
CARSessionStatus
UIActivityContinuationAction
-[INCWidgetIntentProvider provideIntentWithOptions:completionHandler:]
v24@?0@"INIntent"8@"NSError"16
%s Reset extension request
%s Unexpected extension context class %@
%s Found user activity %@ with identifier %@.
%s Unable to find user activity with identifier %@
%s state = %@
%s %ld (%@) is not an expected state type and therefore not handled.
%s _intentResponseCode = %@, donating interaction %@
%s Unable to donate interaction with identifier %@, error %@
%s Successfully donated interaction with identifier %@
%s _intentResponseCode = %@, NOT donating interaction with identifier %@
%s Unknown INCExtensionTransactionStateType %@
%s Adding %tu user activities...
%s Added user activity %@ with identifier %@.
%s Extension loading timeout disabled for %@ for debugging.
%s Extension launching timed out after %{public}f seconds for intent %@
INSignpostExtensionLaunch
%s Error with extension request %{public}@
%s UNEXPECTED: requestIdentifier should be of class NSUUID: %{public}@
%s Extension successfully brought up with request identifier %@
%s UNEXPECTED: extension context host is nil: %{public}@
%s Request identifier <%@> didn't match an existing <%@> while trying to schedule a kill timer for an extension with bundleId %@
%s Schedule to kill an extension with bundleId %@
%s Reset kill timer for extension with bundleId %@
%s Killed extension with bundleId %@
%s Failed to kill extension with bundleId %@
%s Failed to find extension %{public}@
%s Found Siri extensions %@
%s No local app to handle intent with launchID=%{public}@, bundleID=%{public}@
%s Unable to get bundleIdentifier from %@
%s Error loading bundle at path "%@"
%s Successfully loaded bundle at path "%@"
%s Unable to register '%@' bundle for '%@' bundleIdentifier
%s SiriKit extension plugin does not specify an NSPrincipalClass, unable to load: %@
%s Layout changed to: %@
%s Pausing request timer %@
%s Resuming request timer %@
%s Found local extension %@ for identifier: %@
%s Returning an optional local extension for the provided widget intent
%s Unable to get remote object proxy (%{public}@). XPC error: %{public}@
%s Received an XPC connection interruption (%{public}@). The remote process exited or crashed.
%s Cancelling request timer from previous request
%s Waiting indefinitely for intent: %@
%s Intent handling already timed out, ignoring extension response for intent %@
%s Unable to take assertions for a process with pid 0. Did the `%{public}@` process crash?
%s Error acquiring background assertion: %{public}@
%s Failed to acquire assertion: %{public}@
%s Failed to invalidate process assertion: %{public}@
%s Unable to find user activity for identifier %{public}@
%s Unable to construct launch request: %{public}@
%s Refusing to launch "%{public}@" while CarPlay is active because it is not available in CarPlay
%s Performing launch request: %@
%s Successfully performed launch request %@
%s Failed to perform launch request %@: %{public}@
%s Calling intent has an unknown call provider (%{public}@), preventing us from determining if the app should be launched in the background
%s Call intent failed requiring app launch, launching app in the foreground
%s Calling intent had an unknown call destination (%lu) and/or an unknown call capability (%lu), preventing us from determining if the app should be launched in the background.
%s Error getting options for parameter: %@ - %@
%s Error unarchiving options: %@. Parameter name: %@
%s Error getting default value for parameter name: %@ - %@
%s Error unarchiving default value: %@. Parameter name: %@
%s Received slot resolution result from vendor remote
%s resolutionResultData = %@
%s Received slot resolution results from vendor remote: %@
%s Received confirm response from vendor remote: %@
%s Got error when vendor remote is trying to confirm intent %@: %{public}@
%s intent.backingStore = %@
%s Received handle response from vendor remote: %@
%s Got error when vendor remote is trying to handle intent %@: %{public}@
%s Got error when application is trying to handle intent %@: %{public}@
%s No application id was found to handle intent %@
%s Unable to create application record: %@
%s intentResponse.backingStore = %@
%s Error processing image : %@
%s Image caching handler is not set
%s Image caching timed out for intent:%@
%s No intent was provided in the interaction: %@
%s %{public}@ was given a %{public}@ without a bundle identifier to launch
%s %{public}@ was not given a user activity, making one
%s %{public}@ is missing a personHandle to call
%s Multiple app links are available to handle the URL, picking the first one: %{public}@
%s Failed to get app links for URL: %{public}@
%s No applications are available to handle the "%{public}@" scheme
%s Multiple applications are available to handle the "%{public}@" scheme, picking the first one: %{public}@
%s Failed to get the GEOCountryConfiguration, falling back to the default service
%s Failed to get the CarPlay dashboard service (is the process properly entitled?). Falling back to the default service.
%s Failed to serialize user activity: %{public}@
%s Failed to get CarPlay layout monitor configuration. Falling back to the default layout monitor configuration
%s Providing intent for chrono with options: extensionBundleIdentifier = %{public}@, intentType = %{public}@
%s No chrono extension found with identifier: %{public}@. Error: %{public}@
%s No intents extension found in same bundle as chrono extension. %{public}@
%s No intent definitions found in extensions.
%s Unable to create intent from schema.
softlink:o:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:o:path:/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
softlink:o:path:/System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
softlink:o:path:/System/Library/PrivateFrameworks/CarKit.framework/CarKit
softlink:o:path:/System/Library/PrivateFrameworks/CarPlayServices.framework/CarPlayServices
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
INCExtensionRequest
INCLocalExtensionRegistry
INCExtensionPlugInBundle
INCUserActivityExecutionInfo
INCExtensionTransaction
IntentsCore
_INCOptionalLocalExtension
INCLocalExtending
INIntentHandlerProvidingPrivate
INIntentHandlerProviding
NSObject
INCExtensionManager
INCExtensionPlugInBundleManager
INCExecutionInfo
INCIntentExecutionInfoResolver
INCIntentExecutionInfo
INCDisplayLayoutMonitorObserver
SBSDisplayLayoutElement
INCChronoOptions
INCChronoIntentProvider
INCExtensionTransactionState
INCExtensionConnection
NSXPCListenerDelegate
INXPCListenerEndpointProvider
INCExtensionError
INCAppProxy
INCExecutionInfoResolver
INCodableAttributeDefaultValueProviding
INCIntentDefaultValueProvider
INCExtensionProxy
INCAppLaunchRequest
NSCopying
INCWidgetOptions
INCWidgetIntentProvider
valueForKey:
value:withObjCType:
value
userInfo
userElection
updatedIntent
underlyingIntentResponse
underlyingIntent
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
typeName
trimDataAgainstTCCForAuditToken:bundle:
targetWithPid:
targetApplicationProxy
supportsVoicemail
supportsMultiwindow
supportsEmergency
supportsDynamicEnumeration
supportsAudioOnly
supportsAudioAndVideo
supportedIntentsByApp
stringWithFormat:
stringByAppendingString:
stringByAppendingPathComponent:
stringByAddingPercentEncodingWithAllowedCharacters:
stop
start
sharedResolver
sharedConfiguration
sharedCache
setWithObjects:
setWithArray:
setValue:forKey:
setTransitionHandler:
setSuspended:
setScheme:
setRequestTimeout:
setQueryItems:
setOptions:
setObject:forKeyedSubscript:
setObject:forKey:
setNowPlayingInfo:
setNeedsUserInteractivePriority:
setNeedsSave:
setMaxConcurrentOperationCount:
setInvalidationHandler:
setIntentHandlingStatus:
setGroupIdentifier:
setGeoSupported:
setExtensionBundle:
setExportedObject:
setExportedInterface:
setDelegate:
setAllowsScenelessAppLaunch:
serviceWithDefaultShellEndpoint
scheme
resume
resolvedIntentMatchingDescriptor:
removeObjectsForKeys:
removeObjectForKey:
remoteObjectProxyWithErrorHandler:
remoteObjectProxy
relationship
relation
realToken
providersPassingTest:
propertyName
processIdentifier
preferredCallProvider
personHandle
pathForResource:ofType:
parentCodableAttribute
parameterResolutionResults
optionsWithDictionary:
operationCount
openApplication:withOptions:completion:
objectForKeyedSubscript:
objectForKey:ofClass:
objectForKey:
objectClass
numberWithInteger:
numberWithBool:
mutableCopy
monitorWithConfiguration:
modifier
metadata
messageData
launchId
lastObject
keysOfEntriesPassingTest:
isValid
isSystemProvider
isSuccess
isLoaded
isInstalled
isFileURL
isEqualToString:
isEligibleForWidgets
isCarPlaySupported
invalidateWithError:
invalidate
interaction
intentHandlingStatus
intentDefinitionURLs
initWithTimeoutInterval:timeoutHandler:
initWithTimeoutInterval:onQueue:timeoutHandler:
initWithSettings:
initWithPath:
initWithName:value:
initWithItems:
initWithIntentClassName:launchableAppBundleId:
initWithIntentClassName:extensionBundleId:
initWithIntent:response:
initWithIntent:parameterNames:
initWithIntent:parameterName:searchTerm:
initWithIntent:parameterName:
initWithIntent:endpointProvider:observer:
initWithInputItems:privateIntentHandlerProvider:
initWithInputItems:extension:
initWithFormat:
initWithExplanation:target:attributes:
initWithData:
initWithCapacity:
initWithBundleIdentifier:intentForwardingAction:
initWithBundleIdentifier:error:
initWithBundleIdentifier:allowPlaceholder:error:
initWithActivityType:
initAndWaitUntilSessionUpdated
infoDictionary
if_isSystem
if_extensionAttributesDictionary
if_addObjectIfNonNil:
host
getValue:size:
firstObject
extensionPointRecord
extensionBundleId
executeRemotelyWithVendorRemote:completionHandler:
exceptionWithName:reason:userInfo:
errorWithDomain:code:userInfo:
error
endpoint
elements
effectivePolicyForAppDeclaration:
donateInteractionWithCompletion:
domain
displayOrderedAttributes
dictionaryWithObjects:forKeys:count:
dictionaryWithContentsOfFile:
dictionary
destinationType
deserializeCacheItem:completion:
deliverIntentForwardingActionWithResponseHandler:
defaultWorkspace
defaultManager
decodeWithCodableAttribute:from:
declarationForAppProxy:
data
dashboardService
currentSession
currentCountrySupportsCarIntegration
countByEnumeratingWithState:objects:count:
count
copy
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
containsObject:
containingBundleRecord
contacts
configurationForDefaultMainDisplayMonitor
configurationForCarDisplayMonitor
componentsSeparatedByString:
completeTransactionWithIntentIdentifier:completion:
compatibilityObject
compareValue:
code
cancelTransactionDueToTimeoutWithIntentIdentifier:completion:
cancelIfNotAlreadyCanceled
cancel
canDisplayOnCarScreen
callCapability
cacheItems
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
bundleForClass:
beginTransactionWithIntentIdentifier:completion:
beginExtensionRequestWithOptions:inputItems:error:
backingStore
auditToken
attributeWithDomain:name:
attributeByName:
arrayWithObjects:count:
arrayWithObject:
array
archivedObjectCollection
archivedDefaultValue
applicationsAvailableForOpeningURL:
applicationWillLaunchForStartCallInteraction:
applicationProxyForIdentifier:
applicationIdentifier
appState
appLinksWithURL:limit:error:
appInfoWithIntent:
anonymousListener
allValues
allObjects
allKeys
allItems
addOperationWithBlock:
addObject:
addCacheableObject:
acquireWithError:
absoluteString
_typedObjectCollectionWithCodableAttribute:
_siriAuthorizationStatusForAppID:
_shouldForwardToAppOnSucccess
_shouldForwardIntentToApp
_setRequiresProtectedData:
_setLaunchId:
_setInteraction:donate:
_setExtensionBundleId:
_setExecutionContext:
_setCode:
_plugIn
_kill:
_intents_updateContainerWithCache:
_intents_matchSiriExtensionsForIntent:completion:
_intents_matchExtensionsForIntent:completion:
_intents_launchIdForCurrentPlatform
_intents_isExemptFromMulitWindowRequirementForInAppHandling
_intents_intentsRestrictedWhileProtectedDataUnavailable
_intents_hasSystemIntentHandler
_intents_enumerateObjectsOfClass:withBlock:
_intents_copy
_intents_bundleIdForLaunching
_intents_backgroundHandlingAssertionForBundleIdentifier:context:error:
_intentsPrepareForEncoding
_intentsIdentifier
_intentResponseCode
_intentHandlingStatus
_initWithUserActivityData:
_initWithIntent:
_initWithIdentifier:schema:name:data:
_initWithContentsOfURLs:bundleIdentifier:
_initWithCode:userActivity:
_init
_extensionContextForUUID:
_extensionBundle
_executionContext
_createUserActivityDataWithOptions:completionHandler:
_codeFromIntentResponseCode:
_codableDescription
_className
_auxiliaryConnection
UUIDString
URLPathAllowedCharacterSet
UUID
URLWithString:
URLByDeletingLastPathComponent
init
initialize
initWithIdentifier:
setExtensionInputItems:
startRequestForIntent:completion:
reset
_requestOperationQueue
_extensionContextHost
_resetExtensionContextHostWithCompletion:
_resetContextTimer
_scheduleContextTimer
_extension
_setExtension:
_error
_setError:
identifier
setIdentifier:
extensionInputItems
requiresTCC
setRequiresTCC:
.cxx_destruct
_requestIdentifier
_contextTimer
_queue
_requiresTCC
_identifier
_extensionInputItems
T@"NSExtension",&,N,S_setExtension:,V_extension
T@"NSError",&,N,S_setError:,V_error
T@"NSString",&,N,V_identifier
T@"NSArray",&,N,V_extensionInputItems
TB,N,V_requiresTCC
sharedInstance
registerLocalExtension:
deregisterLocalExtension:
localExtensions
localExtensionForIdentifier:
_localExtensionsByIdentifier
initWithPrincipalClass:intentsSupported:intentsRestrictedWhileLocked:
principalClass
intentsSupported
intentsRestrictedWhileLocked
_principalClass
_intentsSupported
_intentsRestrictedWhileLocked
T#,R,N,V_principalClass
T@"NSSet",R,C,N,V_intentsSupported
T@"NSSet",R,C,N,V_intentsRestrictedWhileLocked
description
initWithIntent:donateInteraction:groupIdentifier:
request
userActivityWithIdentifier:
_setCurrentIntent:
setState:
_updateCurrentUserActivityForType:intent:intentResponse:
currentUserActivity
_addUserActivities:
currentIntent
currentIntentResponse
_setCurrentIntentResponse:
donateInteraction
groupIdentifier
state
shouldResetRequestAfterHandle
setShouldResetRequestAfterHandle:
_userActivitiesByIdentifier
_donateInteraction
_shouldResetRequestAfterHandle
_currentUserActivity
_request
_currentIntent
_currentIntentResponse
_groupIdentifier
_state
T@"INIntent",&,N,S_setCurrentIntent:,V_currentIntent
T@"INIntentResponse",&,N,S_setCurrentIntentResponse:,V_currentIntentResponse
TB,R,N,V_donateInteraction
T@"NSString",R,C,N,V_groupIdentifier
T@"INCExtensionRequest",R,N,V_request
T@"NSUserActivity",R,C,N,V_currentUserActivity
T@"INCExtensionTransactionState",&,N,V_state
TB,N,V_shouldResetRequestAfterHandle
_intents_startExtensionConnectionWithExtensionInputItems:intent:queue:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handlerForIntent:
transactionWillBeginForIntentIdentifier:
transactionDidCompleteForIntentIdentifier:
localExtensionIdentifier
T@"NSString",R,N
sharedManager
fetchExtensionForIntent:extensionInputItems:requiresTCC:completion:
killExtension:requestIdentifier:afterTimeout:
isExtensionLoadedForExtensionBundleIdentifier:
_resetKillTimerForExtensionWithBundleIdentifier:
_killExtensionWithBundleIdentifier:
_manageExtension:requestIdentifier:
_extensions
_killTimers
extensionForIntent:
_extensionPlugInBundleForIntent:bundleIdentifier:
_setExtensionPlugInBundle:forIntent:bundleIdentifier:
loadBundleForBundleIdentifier:wasPrewarmed:
_registerBundle:bundleIdentifier:
_intentsSupportedQueue
_pluginsPlistDictionary
resolveExecutionInfo:
updateDisplayLayout:
handler
setHandler:
_handler
T@?,C,N,V_handler
isSpringBoardElement
layoutRole
sb_isTransitioning
sb_isStashedPIP
springBoardElement
TB,R,N,GisSpringBoardElement
Tq,R,N
sb_transitioning
TB,R,N,Gsb_isTransitioning
sb_stashedPIP
TB,R,N,Gsb_isStashedPIP
_intents_SpringBoardElement
_intents_isExpectedElement
_intents_isSiri
provideIntentWithOptions:completionHandler:
initWithType:intent:intentResponse:userActivities:
type
intent
intentResponse
userActivities
_type
_intent
_intentResponse
_userActivities
Tq,R,N,V_type
T@"INIntent",R,N,V_intent
T@"INIntentResponse",R,N,V_intentResponse
T@"NSSet",R,C,N,V_userActivities
dealloc
listener:shouldAcceptNewConnection:
xpcListenerEndpointWithInterface:object:
initWithIntent:
initWithIntent:remoteProxyProvider:
initWithIntent:supportedExtensionTypes:remoteProxyProvider:
initWithIntent:supportedExtensionTypes:donateInteraction:groupIdentifier:remoteProxyProvider:
setIntent:
resumeWithCompletionHandler:
_invalidateDisplayLayoutMonitor
_setShouldObserveLayout:
_startRequestTimerWithExtensionProxy:
_timeoutIntervalForTransactionState:
_cancelRequestTimer
_takeAssertionsForIntent:extensionBundleIdentifier:processIdentifier:
_takeInUseAssertionForIntent:extensionBundleIdentifier:
_takeRunningBoardAssertionForProcessIdentifier:
_invalidateAssertions
_invalidateInUseAssertion
_invalidateRunningBoardAssertion
_shouldObserveLayout
_transaction
xpcListener
appProxy
supportedExtensionTypes
requestTimeoutInterval
setRequestTimeoutInterval:
timeoutHandler
setTimeoutHandler:
interruptionHandler
setInterruptionHandler:
appHandler
setAppHandler:
remoteExtensionProxyProvider
setRemoteExtensionProxyProvider:
xpcInterface
setXPCInterface:
xpcConnection
setXPCConnection:
xpcObject
setXPCObject:
_displayLayoutMonitor
_layoutObserver
_requestTimer
_backgroundHandlingAssertion
_processAssertion
_xpcListener
_appProxy
_supportedExtensionTypes
_requestTimeoutInterval
_timeoutHandler
_interruptionHandler
_appHandler
_remoteExtensionProxyProvider
_xpcInterface
_xpcConnection
_xpcObject
TB,N,S_setShouldObserveLayout:,V_shouldObserveLayout
T@?,C,N,V_remoteExtensionProxyProvider
T@"NSXPCListener",R,N,V_xpcListener
T@"NSXPCInterface",&,N,SsetXPCInterface:,V_xpcInterface
T@"NSXPCConnection",&,N,SsetXPCConnection:,V_xpcConnection
T@,&,N,SsetXPCObject:,V_xpcObject
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"INCExtensionTransaction",R,N,V_transaction
T@"INCAppProxy",R,N,V_appProxy
Tq,R,N,V_supportedExtensionTypes
T@"INIntent",&,N
Td,N,V_requestTimeoutInterval
T@?,C,N,V_timeoutHandler
T@?,C,N,V_interruptionHandler
TB,N
T@?,C,N,V_appHandler
initWithErrorCode:underlyingError:
errorCode
setErrorCode:
underlyingError
setUnderlyingError:
_errorCode
_underlyingError
Tq,N,V_errorCode
T@"NSError",C,N,V_underlyingError
shouldLaunchAppInBackgroundWithIntent:intentResponse:
launchAppInBackground:completionHandler:
launchAppInBackground:restrictAppsToCarPlay:userActivityIdentifier:completionHandler:
_initWithConnection:
_connection
T@"INCExtensionConnection",R,W,N,V_connection
resolveIntentExecutionInfo:
resolveUserActivityExecutionInfo:
inc_associateFileURLsWithAuditToken:
defaultValueForIntentDefaultValueProvider
loadDefaultValuesWithCompletionHandler:
loadDefaultValuesWithAttributes:extensionProxy:completionHandler:
isExpectedDefaultValueError:
T@"INIntent",R,C,N,V_intent
confirmIntentWithCompletionHandler:
handleIntentWithCompletionHandler:
resolveIntentSlotKeyPath:completionHandler:
resolveIntentSlotKeyPaths:completionHandler:
prewarmAppWithIntent:completionHandler:
startSendingUpdatesToObserver:
stopSendingUpdates
getOptionsForParameterNamed:searchTerm:completionHandler:
getDefaultValueForParameterNamed:completionHandler:
getOptionsForParameterNamed:completionHandler:
_initWithConnection:extension:vendorRemote:auditTokenValue:
_shouldForwardToAppWithIntent:intentResponse:
_extensionProcessHasEntitlement:
_isExtensionBeingDebugged
_processIntent:intentResponse:withCacheItems:
_isIntentRestrictedWhileProtectedDataUnavailableWithCompletionHandler:
_issueSandboxExtensionsForFileURLsIfNeededToIntent:
_vendorRemote
_auditTokenValue
shouldCache
setShouldCache:
imageCachingHandler
setImageCachingHandler:
imageProcessingHandler
setImageProcessingHandler:
responseHandler
setResponseHandler:
_shouldCache
_imageCachingHandler
_imageProcessingHandler
_responseHandler
_extensionBeingDebugged
TB,R,N,G_isExtensionBeingDebugged
T@"INCExtensionConnection",R,N,V_connection
T@"NSExtension",R,N,V_extension
T@"<_INExtensionContextVending>",R,N,V_vendorRemote
T@"NSValue",R,N,V_auditTokenValue
TB,N,V_shouldCache
T@?,C,N,V_imageCachingHandler
T@?,C,N,V_imageProcessingHandler
T@?,C,N,V_responseHandler
copyWithZone:
initWithInteraction:userActivity:inBackground:error:
initWithIntent:userActivity:inBackground:error:
initWithAudioCallIntentForCarousel:error:
initWithURL:error:
initWithBundleIdentifier:options:URL:userActivity:
URLOverrideForURL:
isSupportedInCarPlay
performWithCompletionHandler:
performWithService:completionHandler:
observeForAppLaunchWithTimeout:completionHandler:
bundleIdentifier
options
userActivity
_bundleIdentifier
_options
_URL
_userActivity
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSDictionary",R,C,N,V_options
T@"NSURL",R,C,N,V_URL
T@"NSUserActivity",R,N,V_userActivity
supportedInCarPlay
TB,R,N,GisSupportedInCarPlay
initWithExtensionBundleIdentifier:intentType:
extensionBundleIdentifier
setExtensionBundleIdentifier:
intentType
setIntentType:
_extensionBundleIdentifier
_intentType
T@"NSString",C,N,V_extensionBundleIdentifier
T@"NSString",C,N,V_intentType
intentsExtensionForExtension:compatibleWithIntent:error:
v16@0:8
@24@0:8@16
v24@0:8@16
v32@0:8@16@?24
@16@0:8
v24@0:8@?16
B16@0:8
v20@0:8B16
@"NSUUID"
@"INWatchdogTimer"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSExtension"
@"NSError"
@"NSString"
@"NSArray"
@"NSMutableDictionary"
@40@0:8#16@24@32
#16@0:8
@"NSSet"
@36@0:8@16B24@28
v40@0:8q16@24@32
@"NSUserActivity"
@"INCExtensionRequest"
@"INIntent"
@"INIntentResponse"
@"INCExtensionTransactionState"
v48@0:8@16@24@32@?40
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"INIntent"16
v24@0:8@"NSString"16
v44@0:8@16@24B32@?36
v40@0:8@16@24d32
v32@0:8@16@24
@32@0:8@16@24
v40@0:8@16@24@32
B32@0:8@16^B24
B32@0:8@16@24
@"NSDictionary"
@?16@0:8
q16@0:8
@48@0:8q16@24@32@40
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListenerEndpoint"32@0:8@"NSXPCInterface"16@24
@32@0:8@16@?24
@40@0:8@16q24@?32
@52@0:8@16q24B32@36@?44
d24@0:8@16
v36@0:8@16@24i32
v20@0:8i16
d16@0:8
v24@0:8d16
@"FBSDisplayLayoutMonitor"
@"INCDisplayLayoutMonitorObserver"
@"<INIntentBackgroundHandlingAssertion>"
@"RBSAssertion"
@"INCExtensionTransaction"
@"NSXPCListener"
@"INCAppProxy"
@"NSXPCInterface"
@"NSXPCConnection"
@32@0:8q16@24
v24@0:8q16
v28@0:8B16@?20
v40@0:8B16B20@24@?32
@"INCExtensionConnection"
v48@0:8{?=[8I]}16
v40@0:8@16@24@?32
v24@0:8@?<v@?@"INIntentResponse"@"INCExtensionError">16
v32@0:8@"NSString"16@?<v@?@"NSData">24
v32@0:8@"NSArray"16@?<v@?B@"INIntent"@"NSDictionary">24
v32@0:8@"INIntent"16@?<v@?B@"NSError">24
v24@0:8@"<INIntentResponseObserver>"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"INObjectCollection"@"NSError">32
v32@0:8@"NSString"16@?<v@?@@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B24@0:8@?16
@"<_INExtensionContextVending>"
@"NSValue"
@24@0:8^{_NSZone=}16
@44@0:8@16@24B32^@36
@32@0:8@16^@24
v32@0:8d16@?24
@"NSURL"
@40@0:8@16@24^@32
