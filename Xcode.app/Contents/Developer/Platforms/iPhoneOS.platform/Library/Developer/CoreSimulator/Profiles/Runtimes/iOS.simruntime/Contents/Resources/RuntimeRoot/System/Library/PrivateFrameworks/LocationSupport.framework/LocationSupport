@(#)PROGRAM:LocationSupport  PROJECT:CoreLocation-2785.1.32
33333
@21CLCallbackDropManager
NSt3__120__shared_ptr_emplaceIiNS_9allocatorIiEEEE
NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI28CLConnectionEntitlementCacheNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI26CLConnectionClientInternalNS_9allocatorIS1_EEEE
CLSettingsManager
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
com.apple.LocationSupport
Connection
XPC_TYPE_NULL
XPC_TYPE_BOOL
XPC_TYPE_INT64
XPC_TYPE_UINT64
XPC_TYPE_DOUBLE
XPC_TYPE_DATE
XPC_TYPE_DATA
XPC_TYPE_STRING
XPC_TYPE_UUID
XPC_TYPE_FD
XPC_TYPE_SHMEM
XPC_TYPE_ARRAY
XPC_TYPE_DICTIONARY
Unknown type
assert
32 > numArguments
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloInterface.mm
-[CLIntersiloInterfaceSelectorInfo initWithSelector:andMethodSignature:]
syncget
0 != returnValueSize
0 == returnValueSize
doAsync:
withReply:
subStringRange.location == (selStr.length - subString.length)
isLastArgBlockType
0 == _returnAddressIndex
basic_string
allocator
__compressed_pair
__list_node_base
__split_buffer
%s::%@
!containsCppTypesToAvoid(pDesc->types)
registerSelectorInfosForMethodDescriptionList
v16@?0^v8
__objc_no
-[CLIntersiloInterface extendSelectorInfoWithProtocol:bases:]
iter != selectorMap.end()
-[CLIntersiloInterface getInfoForSelector:]_block_invoke
Intersilo
AutoCohortEdgesDirectoryPath
CohortListFile
CohortToNameMap
NameToCohortMap
SyncgetGraphFile
CLSilo: %@
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLSilo.m
-[CLSilo assertInside]
-[CLSilo assertOutside]
-[CLSilo suspend]
-[CLSilo resume]
-[CLSilo isSuspended]
-[CLSilo currentLatchedAbsoluteTimestamp]
-[CLSilo newTimer]
-[CLSilo async:]
-[CLSilo sync:]
-[CLSilo intendToSync]
-[CLSilo afterInterval:async:]
-[CLSilo heartBeat:]
com.apple.locationd.Support
Support
[%@ %@]
cprofile_set_current_identifier
/System/Library/PrivateFrameworks/CProfileRuntime.framework/CProfileRuntime
CPROFILE_ENABLE
CLSettingsManagerInternalSilo
-[CLSettingsManagerInternal updateClientsWithDictionary:]
CLSettingsManagerInternal.m
![dictionary isKindOfClass:[NSMutableDictionary class]]
v16@?0@"NSTimer"8
default
%@(%@)
v16@?0@"NSMutableDictionary"8
_siloThread
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLRunLoopSilo.m
-[CLRunLoopSilo initWithIdentifier:]
RunLoop: %p
-[CLRunLoopSilo getTimeCoercibleVariantInstance]
-[CLRunLoopSilo assertInside]
CLRunLoopSilo.m
[NSRunLoop currentRunLoop] == _siloThread.underlyingRunLoop
-[CLRunLoopSilo assertOutside]
[NSRunLoop currentRunLoop] != _siloThread.underlyingRunLoop
-[CLRunLoopSilo suspend]
-[CLRunLoopSilo resume]
-[CLRunLoopSilo isSuspended]
CLRunLoopSilo: %@ - %@
handler != ((void *)0)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLTimer.m
-[CLTimer setHandler:]
Timer
mobile
v8@?0
__null == fConnection
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/IPC/CLConnection.mm
~CLConnection
__null == fDestructionHandler
fEventQueue
initializeConnection_nl
activity
fPaused
start
!fPaused
pause
<Indeterminate>
kCLConnectionMessageNameKey
kCLConnectionMessageReplyHandlerIdentifierKey
kCLConnectionMessageIsReplyingKey
kCLConnectionMessageInfoKey
kCLConnectionMessageFileDescriptorKey
((void *)0)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloService.m
+[CLIntersiloService getSilo]
+[CLIntersiloService performSyncOnSilo:invoker:]
-[CLIntersiloService init]
!_silo
-[CLIntersiloService setSilo:]
!_vendor
-[CLIntersiloService setVendor:]
Silo: %@
!_inUse
-[CLIntersiloServiceMockPayload setInUse:]
self.keyedPayloads
-[CLIntersiloServiceMock setPayload:forKey:]
![self.keyedPayloads objectForKey:key]
payload
-[CLIntersiloServiceMock getPayloadForKey:]
-[CLIntersiloServiceMock removePayloadForKey:]
v16@?0@"NSNotification"8
vector
v32@?0@8@16^B24
~CLConnectionClientInternal
CLConnectionClient.mm
!fIsValid
ActivityModelingTokenZone
CoreLocation
CLAutoCohort
path && path.length
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLAutoCohortUtilities.mm
+[CLAutoCohortUtilities enableAutoCohortingForProcessAtPath:]
syncget_addenda
[children isKindOfClass:[NSArray class]] || [children isKindOfClass:[NSSet class]]
+[CLAutoCohortUtilities applyEdges:toGraph:]
!error
+[CLAutoCohortUtilities createDirectoryAtPath:]
.plist
yyyy_MM_dd_HH_mm_ss
%@.plist
-1 <= [CLAutoCohortUtilities layerAssignmentForNode:node inGraph:syncgetGraph extendingLayering:autoCohortNameToCohortMapAggregateSafe].intValue
+[CLAutoCohortUtilities computeAutoCohortMapWithStarterGraph:]
_safe
_unsafe
-[CLDispatchTimerScheduler reflectNextFireDelay:fireInterval:]
CLDispatchSilo.m
_source
Cohort:%@
MainSilo
!_isQueueSuspended
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLDispatchSilo.m
-[CLDispatchSilo suspend]
_isQueueSuspended
-[CLDispatchSilo resume]
%@.NSOperationQueue
CLDispatchSilo: %s
B24@?0@8@"NSDictionary"16
dispatchSilo
postInit == initiatorProxy
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloProxy.m
+[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]
postInit == recipientProxy
![inv argumentsRetained]
-[CLIntersiloProxy forwardInvocation:]
_delegate
_delegateSilo
v16@?0@"NSInvocation"8
(id)[NSNull null] != _delegate
_delegate == (id)[NSNull null] && !_delegateSilo
-[CLIntersiloProxy registerDelegate:inSilo:]
<%@: peer silo:%@, peer name:<REDACTED>>
-[CLIntersiloProxy peer]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLServiceVendor.mm
+[_Locationd performSyncOnSilo:invoker:]
0 <= dewrappedDeficit
validateTrackedSilos_block_invoke
record.svcClass
v32@?0@"CLSilo"8@"CLSiloHeartbeatRecord"16^B24
locationd: Heartbeat underflow
q24@?0@8@16
Adapter
_CLUnSupportedService
CLServiceVendorQueue
_CLMainService
CLServiceVendor.HeartbeatCheckInterval
HeartAttackStackshot
IsInternalInstall
IsLocationServicesEnabled
0 == [_catalog count]
-[CLServiceVendor enableTimeCoercion]
!_timeCoercibleSilos
remapping
-[CLServiceVendor setServiceReplacementMap:missBehavior:]_block_invoke
newEffectiveSvcName
oldEffectiveSvcName
[oldEffectiveSvcName isEqual:newEffectiveSvcName]
Test
Mock
serialized
compatibilityInfo
Couldn't create XPC service
Got error: %{public}s
Unexpected event type %{public}s
Too many arguments to selector in IntersiloInterface
{"msg%{public}.0s":"Too many arguments to selector in IntersiloInterface", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Methods beginning 'syncget...' must return non-void
{"msg%{public}.0s":"Methods beginning 'syncget...' must return non-void", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Methods returning non-void must begin 'syncget...'
{"msg%{public}.0s":"Methods returning non-void must begin 'syncget...'", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
withReply: can only be used at the end of a method name
{"msg%{public}.0s":"withReply: can only be used at the end of a method name", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
withReply: argument name should only take block type argument
{"msg%{public}.0s":"withReply: argument name should only take block type argument", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Assertion failed
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Method potentially contains a non POD or non Obj-C type in its arguments
{"msg%{public}.0s":"Method potentially contains a non POD or non Obj-C type in its arguments", "methodName":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Selector extension failed!
{"msg%{public}.0s":"Selector extension failed!", "proto":%{public, location:escape_only}@, "bases":%{public, location:escape_only}@, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
getInfoForSelector called on a missing selector
{"msg%{public}.0s":"getInfoForSelector called on a missing selector", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Using cohortList file if available"}
{"msg%{public}.0s":"#Cohorting No cohortList filePath supplied"}
{"msg%{public}.0s":"#Cohorting No cohortList file available to read", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Successfully read cohort list file", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Using syng-get graph file if available"}
{"msg%{public}.0s":"#Cohorting No sync-get graph filePath supplied"}
{"msg%{public}.0s":"#Cohorting No sync-get graph file available to read", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Successfully read sync-get graph file", "filePath":%{public, location:escape_only}@}
#Idleness: Silo is being resumed: %@
CLRunLoopSilo initialization timed out
CLRunLoopSiloThread failed to init
{"msg%{public}.0s":"CLRunLoopSiloThread failed to init", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support time coercion. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support time coercion. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support suspend. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support suspend. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support resume. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support resume. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support suspend or resume yet. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support suspend or resume yet. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Idleness: Silo is being idled: %@
Can't set nil handler for CLTimer.
{"msg%{public}.0s":"Can't set nil handler for CLTimer.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"deferredDelete() should have nulled out connection", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
deferredDelete() should have nulled out connection
{"msg%{public}.0s":"deferredDelete() should have nulled out handler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
deferredDelete() should have nulled out handler
{"msg%{public}.0s":"CLConnections must always have event queues", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLConnections must always have event queues
{"msg%{public}.0s":"No ReplyHandler found", "Message Name":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
No ReplyHandler found
CL: Invoking reply-handler
{"msg%{public}.0s":"Invoking reply-handler", "event":%{public, location:escape_only}s, "MessageName":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
#Warning Unhandled message %s
CL: CLConnection::handleInterruption
{"msg%{public}.0s":"CLConnection::handleInterruption", "event":%{public, location:escape_only}s}
CL: CLConnection::handleDisconnection
{"msg%{public}.0s":"CLConnection::handleDisconnection", "event":%{public, location:escape_only}s}
CL: ReplyHandler cached
{"msg%{public}.0s":"ReplyHandler cached", "event":%{public, location:escape_only}s, "MessageName":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
{"msg%{public}.0s":"CLConnection::sendMessage", "name":%{public, location:escape_only}s}
CL: CLConnection::sendMessage
{"msg%{public}.0s":"CLConnection::sendMessage", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s}
{"msg%{public}.0s":"Couldn't create XPC message", "name":%{public, location:escape_only}s}
Couldn't create XPC message
Error on message reply (sync) for %{public}s (%{public}s)
CL: CLConnection calling interruption handler in sendMessageSync
{"msg%{public}.0s":"CLConnection calling interruption handler in sendMessageSync", "event":%{public, location:escape_only}s}
CL: CLConnection calling disconnection handler in sendMessageSync
{"msg%{public}.0s":"CLConnection calling disconnection handler in sendMessageSync", "event":%{public, location:escape_only}s}
Dropping unexpected response (not a dictionary)
CL: #MultiUser CLConnection::getUserName
{"msg%{public}.0s":"#MultiUser CLConnection::getUserName", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Cannot call start() on an unpaused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Cannot call start() on an unpaused CLConnection.
{"msg%{public}.0s":"Cannot call pause() on a paused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Cannot call pause() on a paused CLConnection.
#Warning The client name could not be determined.
The received data object is invalid: %{private}@
{"msg%{public}.0s":"Unable to send reply message", "MessageName":%{public, location:escape_only}s, "ReplyHanlderIdentifier":%{public}ld}
Unable to send reply message
Attempting to send nil/null data. An error should be sent instead.
{"msg%{public}.0s":"Unable to send reply message with raw data", "MessageName":%{public, location:escape_only}s, "ReplyHanlderIdentifier":%{public}ld}
Unable to send reply message with raw data
#Warning Connection interrupted!
#Warning Location connection invalid!
Got unexpected location event
{"msg%{public}.0s":"-becameFatallyBlocked:index: was not overriden", "class":%{public, location:escape_only}@}
-becameFatallyBlocked:index: was not overriden
The silo associated with a CLIntersiloService may not be changed once set
{"msg%{public}.0s":"The silo associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
The vendor associated with a CLIntersiloService may not be changed once set
{"msg%{public}.0s":"The vendor associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Payloads can't be reused!
{"msg%{public}.0s":"Payloads can't be reused!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Overrider didn't call up to super for beginService?
{"msg%{public}.0s":"Overrider didn't call up to super for beginService?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Only one payload per key at at time
{"msg%{public}.0s":"Only one payload per key at at time", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A payload must be ready for this key
{"msg%{public}.0s":"A payload must be ready for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A payload must be around to remove for this key
{"msg%{public}.0s":"A payload must be around to remove for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Setting handler for message %s
CL: CLConnectionClient::sendMessage(cache)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(cache)", "event":%{public, location:escape_only}s}
CL: CLConnectionClient::sendMessage(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(reply)", "event":%{public, location:escape_only}s}
CL: CLConnectionClient::sendMessageWithCompletion(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessageWithCompletion(reply)", "event":%{public, location:escape_only}s}
received daemon start notification for service %@
Invalidating connection
{"msg%{public}.0s":"No connection fConnection", "messageName":%{public, location:escape_only}s}
#Warning Sending an un-cached message '%{public}s' without first clearing the previously cached value
{"msg%{public}.0s":"Trying to cache a reply message", "messageName":%{public, location:escape_only}s}
Trying to cache a reply message
Creating connection
CL: Sending cached messages to daemon
{"msg%{public}.0s":"Sending cached messages to daemon", "event":%{public, location:escape_only}s}
#Warning stackshot only available on device
{"msg%{public}.0s":"#Cohorting Process intended to sign up for auto cohorting but CoreLocation/CLAutoCohort=off", "autoCohortEdgesDirectoryPath":%{public, location:escape_only}@}
#Cohorting Invalid path while enabling auto cohorting
{"msg%{public}.0s":"#Cohorting Invalid path while enabling auto cohorting", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Process successfully signed up for auto cohorting", "autoCohortEdgesDirectoryPath":%{public, location:escape_only}@}
#Cohorting Sync-get graph is of unexpected type. Expects {"key":["", ""]}
{"msg%{public}.0s":"#Cohorting Sync-get graph is of unexpected type. Expects {"key":["", ""]}", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Cohorting Cannot create directory
{"msg%{public}.0s":"#Cohorting Cannot create directory", "directoryPath":%{public, location:escape_only}@, "error":%{public, location:escape_only}@, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Doesnot exist or is not a directory", "directoryPath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot read contents of directory", "directoryPath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Sync-get graph edge is of unexpected type. Expects ["", ""]"}
{"msg%{public}.0s":"#Cohorting Cannot write edge file", "edgeFilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot move unvetted edge", "srcFilePath":%{public, location:escape_only}@, "dstFilePath":%{public, location:escape_only}@}
#Cohorting Edge that was marked safe causes cycle in syncget graph
{"msg%{public}.0s":"#Cohorting Edge that was marked safe causes cycle in syncget graph", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Cycle introduced in sync-get graph", "FromNode":%{public, location:escape_only}@, "ToNode":%{public, location:escape_only}@}
#Cohorting Cycle introduced in sync-get graph
{"msg%{public}.0s":"#Cohorting CohortId assignment for silo", "Silo":%{public, location:escape_only}@, "CohortId":%{public, location:escape_only}@}
Intersilo currently does not support reference counting
{"msg%{public}.0s":"Intersilo currently does not support reference counting", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Time should not be moved backwards; systems based on monotonic time (like CLTimer) will misbehave.
{"msg%{public}.0s":"#Cohorting Intend to sync", "FromDispatchSilo":%{public, location:escape_only}@, "FromCohortId":%{public, location:escape_only}@, "ToDispatchSilo":%{public, location:escape_only}@, "ToCohortId":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Persist sync-get edge", "fromSiloIdentifier":%{public, location:escape_only}@, "toSiloIdentifier":%{public, location:escape_only}@}
#Cohorting Persist sync-get edge
#Idleness, Silo is being idled: %@
Intersilo proxy init changed self
{"msg%{public}.0s":"Intersilo proxy init changed self", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"withReply: and void-returning block must be used in conjunction for correct reply handling", "selector":%{public, location:escape_only}@}
withReply: and void-returning block must be used in conjunction for correct reply handling
Delegate is necessary for reply delivery
{"msg%{public}.0s":"Delegate is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Silo is necessary for reply delivery
{"msg%{public}.0s":"Silo is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A delegate must be set before sending messages with byref return address parameters
{"msg%{public}.0s":"A delegate must be set before sending messages with byref return address parameters", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
The object passed to byref return address parameters MUST BE the registered delegate
{"msg%{public}.0s":"The object passed to byref return address parameters MUST BE the registered delegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Didn't expect the arguments to be retained before now
{"msg%{public}.0s":"Didn't expect the arguments to be retained before now", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Once registered, delegate may not be changed
{"msg%{public}.0s":"Once registered, delegate may not be changed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
-peer should never be invoked at this level...
{"msg%{public}.0s":"-peer should never be invoked at this level...", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
_Locationd should come last?!
{"msg%{public}.0s":"locationd became blocked, non-fatally because internal install", "ImplicatedServicesSoFar":%{public, location:escape_only}@}
locationd became blocked, non-fatally because internal install
Don't message _Locationd
{"msg%{public}.0s":"Don't message _Locationd", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Heartbeat tracking commenced", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking terminated", "silo":%{public, location:escape_only}@}
Deltafied deficit should be non-negative
{"msg%{public}.0s":"Deltafied deficit should be non-negative", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow; going to crash now!", "silo":%{public, location:escape_only}@}
Only living, non-nil services should be heart-beaten
{"msg%{public}.0s":"Only living, non-nil services should be heart-beaten", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow", "silo":%{public, location:escape_only}@, "deficit":%{public}d}
{"msg%{public}.0s":"locationd remains non-fatally blocked because internal install", "ImplicatedServicesCurrently":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking already enabled", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking resumed", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking suspended"}
{"msg%{public}.0s":"Heartbeat tracking already disabled"}
Enabling Time Coercion must be done before any services are started
{"msg%{public}.0s":"Enabling Time Coercion must be done before any services are started", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Only enable Time Coercion once, eh?
{"msg%{public}.0s":"Only enable Time Coercion once, eh?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"When amending replacement maps, you must make the new miss behavior the same or more strict. stock -> nop, stock -> crash and nop -> crash are valid changes here, or otherwise you must leave the behavior the same", "current":%{public, location:CLSVReplacementMapMissBehavior}lld, "desired":%{public, location:CLSVReplacementMapMissBehavior}lld}
When amending replacement maps, you must make the new miss behavior the same or more strict. stock -> nop, stock -> crash and nop -> crash are valid changes here, or otherwise you must leave the behavior the same
Service replacement map must be non-nil if set
{"msg%{public}.0s":"Service replacement map must be non-nil if set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"service replacement mapping", "literalSvcName":%{public, location:escape_only}s, "MissBehavior":%{public}d}
Existing services must not fail to map under new mapping and behavior
{"msg%{public}.0s":"Existing services must not fail to map under new mapping and behavior", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test
{"msg%{public}.0s":"Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Old and new mappings and behaviors must agree about any service which has started
{"msg%{public}.0s":"Old and new mappings and behaviors must agree about any service which has started", "oldEffectiveSvcName":%{public, location:escape_only}s, "newEffectiveSvcName":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Configuring service replacement map", "ReplacementMap":%{public, location:escape_only}@, "MissBehavior":%{public}d}
{"msg%{public}.0s":"Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:", "RequestedServiceName":%{public, location:escape_only}@}
Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:
{"msg%{public}.0s":"Unavailable service requested", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Service replacement map does not include requested service", "RequestedServiceName":%{public, location:escape_only}@, "ReplacementMap":%{public, location:escape_only}@}
Service replacement map does not include requested service
{"msg%{public}.0s":"Looking up service identified by name", "ServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Tried to look up a service by name that doesn't exist", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
Tried to look up a service by name that doesn't exist
{"msg%{public}.0s":"Requested service not isSupported", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Trying to start an unavailable service", "RequestedServiceName":%{public, location:escape_only}@, "UnavailableServices":%{public, location:escape_only}@}
{"msg%{public}.0s":"Reusing replacement service under new name", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@, "ReusedFromServiceName":%{public, location:escape_only}@}
CL: #Manufacturing service
{"msg%{public}.0s":"#Manufacturing service", "event":%{public, location:escape_only}s, "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to alloc and init key class for service", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
Failed to alloc and init key class for service
{"msg%{public}.0s":"#Manufacturing service complete", "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Warning Service retired redundantly or without ever having been started", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot deduce toSilo", "serviceName":%{public, location:escape_only}@}
CLSettingsMirror
CLSettingsManagerClientProtocol
CLIntersiloClientProtocol
CLIntersiloProxyDelegateProtocol
NSObject
CLSettingsManagerMockProtocol
CLSettingsManagerProtocol
CLIntersiloServiceProtocol
CLSettingsManagerMock
CLExtensions
CLIntersiloInterfaceSelectorInfo
CLIntersiloInterface
CLSiloIdleHandler
CLSiloHeartbeatRecord
CLSilo
NSCopying
CLSettingsManagerInternal
CLRunLoopTimerScheduler
CLTimerScheduler
CLRunLoopSiloThread
CLRunLoopSilo
CLTimer
DeprecatedWalltimeBasedTimerAPIs
CLIntersiloService
CLIntersiloUniverse
CLIntersiloServiceMockPayload
CLIntersiloServiceMock
CLIntersiloServiceMockProtocol
CLSettingsManager
CLPermissiveTimer
CLSettingsDictionary
CLAutoCohortUtilities
CLDispatchTimerScheduler
CLTimerWeakHolder
CLDispatchSilo
CLTimeCoercibleDispatchSilo
MainSilo
CLIntersiloProxyToRecipient
CLIntersiloProxyToInitiator
CLIntersiloProxy
_Locationd
_CLMainService
_CLUnSupportedService
CLServiceVendor
CLCppContainer
NSSecureCoding
NSCoding
CLCppEncodableDataContainer
T@"CLIntersiloProxy",R,N,V_peer
T#,R
T@"CLTimer",W,N
T:,R,N,V_sel
T@?,C,N,V_settingsChangeHandler
T@"<CLIntersiloUniverse>",R,N
_isIdle
T@"CLIntersiloProxy",R,W,N,V_peer
_operationQueue
T@"CLServiceVendor",R,N
_vendor
T@"CLSilo",R,N
allKeys
T@"CLTimer",R,W,N,V_timer
clients
T@"CLTimer",W,N,Vtimer
containsString:
T@"NSDictionary",R,N,V_inputDictionary
dbgAssertInside
T@"NSMethodSignature",R,&,N,V_sig
encoder
T@"NSMutableDictionary",&,N,V_keyedPayloads
getTimeCoercibleVariantInstance
T@"NSMutableSet",&,V_clients
hasValueForKey:
T@"NSRunLoop",&,N,V_runloop
initWithFormat:
T@"NSString",R,C
inputDictionary
T@"NSString",R,N,V_identifier
manager
T@"NSThread",R,N,V_underlyingThread
numberWithLong:
T@"XCTestExpectation",R,N,V_expectation
release
T@,C,N,V_compatibilityInfo
retainArguments
T@?,C,N,V_encoder
runloop
T@?,C,N,V_handler
T@?,C,V_onResume
setLong:forKey:
TB,N,V_inUse
TB,R
stringFromDate:
TQ,R
svcName
TQ,R,N,V_sizeOfType
typeStr
Td,D,N
unregisterForIdleNotifications:
Td,N,V_nextFireDelay
.cxx_destruct
T@"CLSilo",R,W,N,V_delegateSilo
T#,R,N,V_svcClass
T@"NSDictionary",&,N,V_internal
T@"<CLIntersiloProxyDelegateProtocol>",R,W,N,V_delegate
_delaySetAtTime
T@"<CLSettingsManagerProtocol>",&,N,V_manager
_onIdle
T@"CLIntersiloUniverse",&,N,V_universe
_source
T@"CLServiceVendor",R,N,V_vendor
T@"CLSilo",R,N,V_silo
arrayWithArray:
T@"CLTimer",W,N,V_timer
containsObject:
T@"NSData",C,N,V_serialized
currentLatchedAbsoluteTimestamp
T@"NSDictionary",R,N,V_outputDictionary
dealloc
T@"NSMutableArray",R,N,V_timerHolders
getSilo
T@"NSMutableDictionary",&,V_settingsDictionary
handler
T@"NSObject<OS_dispatch_source>",&,N,V_source
initInUniverse:
T@"NSRunLoop",R,N,V_underlyingRunLoop
initWithString:
T@"NSString",R,C,D,N
isProxy
T@"NSString",R,V_svcName
numberWithBool:
T@"NSTimer",&,N,V_underlyingTimer
refresh
T@,&,N,V_notificationObserver
removeObserver:
T@?,C,N,V_destructor
runIdleHandlers
T@?,C,N,V_fireBlock
T@?,C,V_onIdle
setBool:forKey:
TB,N
sharedInterface
TB,N,V_valid
stringByAppendingPathComponent:
TB,R,N,V_shouldCancelThread
suspend
TQ,R,N,V_binaryVersion
T^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]},R,N,V_threadId
underlyingTimer
Td,N,V_fireInterval
updateScheduler
Ti,N,V_residentCount
Ti,R,N,V_ackCount
Ti,R,N,V_lastArgBlockIndex
Ti,R,N,V_returnAddressIndex
Ti,R,N,V_synCount
Tr^v,N,V_cppObjectPtr
UTF8String
_ackCount
_binaryVersion
_cTypeString
_catalog
_clients
_cohortId
_compatibilityInfo
_cppObjectPtr
_currentGlobalLatchedAbsoluteTimestamp
_currentLatchedAbsoluteTimestamp
_delegate
_delegateSilo
_destructor
_encoder
_expectation
_fireBlock
_fireInterval
_handler
_identifier
_idleHandlers
_idleHandlersLock
_inUse
_inputDictionary
_internal
_isQueueSuspended
_keyedPayloads
_lastArgBlockIndex
_lastIdleCheck
_manager
_missBehavior
_nextFireDelay
_notificationObserver
_onResume
_outputDictionary
_peer
_queue
_recordingFromTriggersByTo
_recordingToTriggersByFrom
_residentCount
_returnAddressIndex
_runloop
_scheduler
_sel
_serialized
_serviceReplacementMap
_setLatchedAbsoluteTimestamp:
_settingsChangeHandler
_settingsDictionary
_shouldCancelThread
_sig
_silo
_siloThread
_sizeOfType
_svcClass
_svcName
_synCount
_threadId
_timeCoercibleSilos
_timer
_timerHolders
_unavailableServiceNames
_underlyingRunLoop
_underlyingThread
_underlyingTimer
_universe
_useCLPermissiveTimer
_valid
ackCount
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addTimer:forMode:
afterInterval:async:
amendServiceReplacementMap:missBehavior:
applyEdges:toGraph:
archivedDataWithRootObject:requiringSecureCoding:error:
argumentsRetained
array
arrayForKey:defaultValue:
arrayWithContentsOfFile:
arrayWithObjects:count:
assertInside
assertOutside
async:
autoCohortingEnabled
autorelease
becameFatallyBlocked:index:
beginService
binaryVersion
boolForKey:defaultValue:
boolValue
bytes
cancel
cl_deepMutableCopy
class
close
compare:
compatibilityInfo
componentsSeparatedByCharactersInSet:
computeAutoCohortMapWithStarterGraph:
conformsToProtocol:
containerWithObject:cppDataEncoder:destructor:binaryVersion:typeSize:
containerWithObject:destructor:binaryVersion:typeSize:
contentsOfDirectoryAtPath:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
cppObjectPtr
createDirectoryAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentRunLoop
currentThread
dataWithBytes:length:
date
dateWithTimeIntervalSinceNow:
debugDescription
decodeObjectForKey:
decodeTopLevelObjectOfClasses:forKey:error:
defaultCenter
defaultManager
delegate
delegateSilo
description
destructor
dictionary
dictionaryForKey:defaultValue:
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didUpdateSettings:
doubleForKey:defaultValue:
doubleValue
enableAutoCohortingForProcessAtPath:
enableTimeCoercion
encodeWithCoder:
endService
ensureServiceIsRunning:
enumerateKeysAndObjectsUsingBlock:
expectation
extendSelectorInfoWithProtocol:bases:
fileExistsAtPath:isDirectory:
fileURLWithPath:
filterUsingPredicate:
fireBlock
fireInterval
floatForKey:defaultValue:
floatValue
flush
forwardInvocation:
getArgument:atIndex:
getArgumentTypeAtIndex:
getCFRunLoop
getEdgeFilesFromDirectory:
getInfoForSelector:
getPayloadForKey:
getPayloadForSelector:
getSafeEdges
getServiceWithName:
getUnsafeEdges
getUnvettedEdges
globalConfiguration
hasPrefix:
hasSuffix:
hasSuffixInsensitive:
hash
heartBeat:
holderWithTimer:
identifier
inPermissiveMode
inUse
init
initForReadingFromData:error:
initInSilo:withScheduler:
initMain
initTrackingServiceClass:name:
initWithBlock:
initWithCoder:
initWithCurrentRunLoopAndIdentifier:
initWithCurrentRunLoopAndIdentifier:bePermissive:
initWithCurrentThread
initWithDelegateObject:delegateSilo:
initWithDelegateObject:delegateSilo:uninitializedPeer:
initWithDictionary:
initWithDispatchSilo:
initWithExpectation:inputDictionary:
initWithIdentifier:
initWithIdleHandler:onResume:
initWithInboundProtocol:outboundProtocol:
initWithObject:cppDataEncoder:destructor:binaryVersion:typeSize:
initWithObject:destructor:binaryVersion:typeSize:
initWithObjects:
initWithRunLoop:
initWithRunLoopSilo:
initWithSelector:andMethodSignature:
initWithSilo:vendor:
initWithTimer:
initWithUnderlyingQueue:
initWithUnderlyingQueue:bePermissive:
initWithUnderlyingRunLoop:
initWithUninitializedPeer:
initialize
initiatorRepresentingClass
inputStreamWithFileAtPath:
intForKey:defaultValue:
intValue
intendToSync
intendToSyncServiceWithName:
invalidate
invoke
invokeWithTarget:
isEdgeKnownToCauseCycle:
isEqual:
isKindOfClass:
isMemberOfClass:
isServiceEnabled:
isServiceRunning:
isSupported
isSuspended
isTimeCoercionEnabled
keyedPayloads
lastArgBlockIndex
layerAssignmentForNode:inGraph:extendingLayering:
length
localizedFailureReason
longForKey:defaultValue:
longValue
main
markUnvetted:
markUnvettedSafe
markUnvettedUnsafe
methodReturnLength
methodSignatureForSelector:
missBehavior
moveItemAtPath:toPath:error:
mutableCopy
newIsolatedUniverseWithOnlySilo:
newSharedVendorUniverseWithSilo:
newTimer
nextFireDelay
nextFireDelayRaw
nextFireTime
notificationObserver
null
numberOfArguments
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithShort:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offsiloHandleInvocation:selectorInfo:peer:
onIdle
onResume
open
operationQueue
outputDictionary
peer
performBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performSyncOnSilo:invoker:
persistEdgeFrom:to:
predicateWithBlock:
prepareAndRunBlock:
propertyListWithStream:options:format:error:
proxyForRecipientObject:inSilo:recipientName:
proxyForService:
proxyForService:forClient:
queue
rangeOfString:options:
readEdges:
recipientRepresentingClass
reflectNextFireDelay:fireInterval:
registerDelegate:inSilo:
registerForIdleNotifications:onResume:
removeAllObjects
removeObject:
removeObjectForKey:
removePayloadForKey:
removePayloadForSelector:
rereadConfiguration:
residentCount
respondsToSelector:
resume
retain
retainCount
retireServiceWithName:
returnAddressIndex
runResumeHandlers
selector
self
serialized
setArgument:atIndex:
setArray:forKey:
setByAddingObjectsFromSet:
setClients:
setCompatibilityInfo:
setCppObjectPtr:
setCurrentGlobalLatchedAbsoluteTimestamp:
setDateFormat:
setDelegateEntityName:
setDestructor:
setDictionary:
setDictionary:forKey:
setDouble:forKey:
setEncoder:
setFireBlock:
setFireDate:
setFireInterval:
setFloat:forKey:
setGlobalConfiguration:
setHandler:
setInUse:
setInt:forKey:
setKeyedPayloads:
setLatchedAbsoluteTimestamp:
setManager:
setName:
setNextFireDelay:
setNextFireDelay:interval:
setNextFireTime:
setNextFireTime:interval:
setNotificationObserver:
setObject:forKey:
setObject:forKeyedSubscript:
setOnIdle:
setOnResume:
setOutput:forKey:
setPayload:forKey:
setPayload:forSelector:
setRecordingTriggerMap:outputPathBase:
setResidentCount:
setRunloop:
setSerialized:
setServiceReplacementMap:missBehavior:
setSettings:
setSettingsChangeHandler:
setSettingsDictionary:
setShort:forKey:
setSilo:
setSource:
setString:forKey:
setTarget:
setTimer:
setUnderlyingQueue:
setUnderlyingTimer:
setUniverse:
setValid:
setValue:forKey:
setVendor:
setWithArray:
setWithObject:
settingsChangeHandler
settingsDictionary
settingsWithDictionary:
sharedInstance
shortForKey:defaultValue:
shortValue
shouldBeIdled
shouldCancelThread
shouldFire
signatureWithObjCTypes:
silo
sizeOfType
sortUsingComparator:
source
standardUserDefaults
start
stringByAppendingString:
stringForKey:defaultValue:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
superclass
supportsSecureCoding
svcClass
synCount
sync:
syncgetPayloadForKey:
syncgetPayloadForSelector:
syncgetSetValue:forKey:withoutNotifying:
syncgetSettingsAndRegisterForUpdates:
threadId
timer
timerHolders
timerWithTimeInterval:repeats:block:
underlyingRunLoop
underlyingThread
unionSet:
universe
unregisterForUpdates:
updateClientsWithDictionary:
valid
vendor
whitespaceAndNewlineCharacterSet
writeEdge:toDirectory:
writeToURL:error:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8@"NSDictionary"16
@24@0:8@16
v16@0:8
v32@0:8@16@24
v28@0:8B16@20
v28@0:8s16@20
v28@0:8i16@20
v32@0:8q16@24
v28@0:8f16@20
v32@0:8d16@24
@?16@0:8
v24@0:8@?16
@"<CLSettingsManagerProtocol>"
@"CLIntersiloUniverse"
v32@0:8@16Q24
v32@0:8@16@?24
v24@0:8r*16
@"CLSilo"16@0:8
v32@0:8@"NSArray"16Q24
v32@0:8@"CLSilo"16@?<v@?>24
v32@0:8@"<CLIntersiloProxyDelegateProtocol>"16@"CLSilo"24
v24@0:8R@16
@24@0:8R@16
@40@0:8@16@24R@32
v24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"40@0:8@16@"NSString"24R@"<CLSettingsManagerClientProtocol>"32
:16@0:8
i16@0:8
@"NSMethodSignature"
@32@0:8@?16@?24
@32@0:8#16@24
v20@0:8i16
@"CLSilo"
@"NSString"
@24@0:8^{_NSZone=}16
d16@0:8
v32@0:8d16@?24
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8d16d24
@"CLTimer"16@0:8
v24@0:8@"CLTimer"16
@"NSTimer"
@"NSRunLoop"
@"CLTimer"
@24@0:8^{__CFRunLoop=}16
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}16@0:8
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@"NSThread"
@28@0:8@16B24
@"CLRunLoopSiloThread"
@32@0:8@16@24
v24@0:8d16
@"<CLTimerScheduler>"
@"CLServiceVendor"16@0:8
@"CLServiceVendor"
@"XCTestExpectation"
@"NSDictionary"
v32@0:8@16:24
v24@0:8:16
v32@0:8@"CLIntersiloServiceMockPayload"16:24
v32@0:8@"CLIntersiloServiceMockPayload"16@"NSString"24
v24@0:8@"NSString"16
@"CLIntersiloServiceMockPayload"24@0:8:16
@"CLIntersiloServiceMockPayload"24@0:8@"NSString"16
B28@0:8@16B24
s28@0:8@16s24
i28@0:8@16i24
q32@0:8@16q24
f28@0:8@16f24
d32@0:8@16d24
@40@0:8@16@24@32
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSNumber"
@"NSMutableArray"
@"CLIntersiloProxy"
B40@0:8@16@24@32
@"<CLIntersiloProxyDelegateProtocol>"
v28@0:8@16i24
@48@0:8^v16@?24Q32Q40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
r^v16@0:8
v24@0:8r^v16
@56@0:8^v16@?24@?32Q40Q48
@"NSData"
@(#)PROGRAM:LocationSupport  PROJECT:CoreLocation-2785.1.32
33333
21CLCallbackDropManager
NSt3__120__shared_ptr_emplaceIiNS_9allocatorIiEEEE
@NSt3__120__shared_ptr_emplaceI19CLConnectionMessageNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI28CLConnectionEntitlementCacheNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI26CLConnectionClientInternalNS_9allocatorIS1_EEEE
CLSettingsManager
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
v24@?0{shared_ptr<CLConnectionMessage>=^{CLConnectionMessage}^{__shared_weak_count}}8
com.apple.LocationSupport
Connection
XPC_TYPE_NULL
XPC_TYPE_BOOL
XPC_TYPE_INT64
XPC_TYPE_UINT64
XPC_TYPE_DOUBLE
XPC_TYPE_DATE
XPC_TYPE_DATA
XPC_TYPE_STRING
XPC_TYPE_UUID
XPC_TYPE_FD
XPC_TYPE_SHMEM
XPC_TYPE_ARRAY
XPC_TYPE_DICTIONARY
Unknown type
assert
32 > numArguments
%s:%d: assertion failure in %s
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloInterface.mm
-[CLIntersiloInterfaceSelectorInfo initWithSelector:andMethodSignature:]
syncget
0 != returnValueSize
0 == returnValueSize
doAsync:
withReply:
subStringRange.location == (selStr.length - subString.length)
isLastArgBlockType
0 == _returnAddressIndex
basic_string
allocator
__compressed_pair
__list_node_base
__split_buffer
%s::%@
!containsCppTypesToAvoid(pDesc->types)
registerSelectorInfosForMethodDescriptionList
v16@?0^v8
__objc_no
-[CLIntersiloInterface extendSelectorInfoWithProtocol:bases:]
iter != selectorMap.end()
-[CLIntersiloInterface getInfoForSelector:]_block_invoke
Intersilo
AutoCohortEdgesDirectoryPath
CohortListFile
CohortToNameMap
NameToCohortMap
SyncgetGraphFile
CLSilo: %@
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLSilo.m
-[CLSilo assertInside]
-[CLSilo assertOutside]
-[CLSilo suspend]
-[CLSilo resume]
-[CLSilo isSuspended]
-[CLSilo currentLatchedAbsoluteTimestamp]
-[CLSilo newTimer]
-[CLSilo async:]
-[CLSilo sync:]
-[CLSilo intendToSync]
-[CLSilo afterInterval:async:]
-[CLSilo heartBeat:]
com.apple.locationd.Support
Support
[%@ %@]
cprofile_set_current_identifier
/System/Library/PrivateFrameworks/CProfileRuntime.framework/CProfileRuntime
CPROFILE_ENABLE
CLSettingsManagerInternalSilo
-[CLSettingsManagerInternal updateClientsWithDictionary:]
CLSettingsManagerInternal.m
![dictionary isKindOfClass:[NSMutableDictionary class]]
v16@?0@"NSTimer"8
default
%@(%@)
v16@?0@"NSMutableDictionary"8
_siloThread
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLRunLoopSilo.m
-[CLRunLoopSilo initWithIdentifier:]
RunLoop: %p
-[CLRunLoopSilo getTimeCoercibleVariantInstance]
-[CLRunLoopSilo assertInside]
CLRunLoopSilo.m
[NSRunLoop currentRunLoop] == _siloThread.underlyingRunLoop
-[CLRunLoopSilo assertOutside]
[NSRunLoop currentRunLoop] != _siloThread.underlyingRunLoop
-[CLRunLoopSilo suspend]
-[CLRunLoopSilo resume]
-[CLRunLoopSilo isSuspended]
CLRunLoopSilo: %@ - %@
handler != ((void *)0)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLTimer.m
-[CLTimer setHandler:]
Timer
mobile
v8@?0
__null == fConnection
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/IPC/CLConnection.mm
~CLConnection
__null == fDestructionHandler
fEventQueue
initializeConnection_nl
activity
fPaused
start
!fPaused
pause
<Indeterminate>
kCLConnectionMessageNameKey
kCLConnectionMessageReplyHandlerIdentifierKey
kCLConnectionMessageIsReplyingKey
kCLConnectionMessageInfoKey
kCLConnectionMessageFileDescriptorKey
((void *)0)
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloService.m
+[CLIntersiloService getSilo]
+[CLIntersiloService performSyncOnSilo:invoker:]
-[CLIntersiloService init]
!_silo
-[CLIntersiloService setSilo:]
!_vendor
-[CLIntersiloService setVendor:]
Silo: %@
!_inUse
-[CLIntersiloServiceMockPayload setInUse:]
self.keyedPayloads
-[CLIntersiloServiceMock setPayload:forKey:]
![self.keyedPayloads objectForKey:key]
payload
-[CLIntersiloServiceMock getPayloadForKey:]
-[CLIntersiloServiceMock removePayloadForKey:]
v16@?0@"NSNotification"8
vector
v32@?0@8@16^B24
~CLConnectionClientInternal
CLConnectionClient.mm
!fIsValid
ActivityModelingTokenZone
CoreLocation
CLAutoCohort
path && path.length
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Utilities/CLAutoCohortUtilities.mm
+[CLAutoCohortUtilities enableAutoCohortingForProcessAtPath:]
syncget_addenda
[children isKindOfClass:[NSArray class]] || [children isKindOfClass:[NSSet class]]
+[CLAutoCohortUtilities applyEdges:toGraph:]
!error
+[CLAutoCohortUtilities createDirectoryAtPath:]
.plist
yyyy_MM_dd_HH_mm_ss
%@.plist
-1 <= [CLAutoCohortUtilities layerAssignmentForNode:node inGraph:syncgetGraph extendingLayering:autoCohortNameToCohortMapAggregateSafe].intValue
+[CLAutoCohortUtilities computeAutoCohortMapWithStarterGraph:]
_safe
_unsafe
-[CLDispatchTimerScheduler reflectNextFireDelay:fireInterval:]
CLDispatchSilo.m
_source
Cohort:%@
MainSilo
!_isQueueSuspended
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLDispatchSilo.m
-[CLDispatchSilo suspend]
_isQueueSuspended
-[CLDispatchSilo resume]
%@.NSOperationQueue
CLDispatchSilo: %s
B24@?0@8@"NSDictionary"16
dispatchSilo
postInit == initiatorProxy
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLIntersiloProxy.m
+[CLIntersiloProxy proxyForRecipientObject:inSilo:recipientName:]
postInit == recipientProxy
![inv argumentsRetained]
-[CLIntersiloProxy forwardInvocation:]
_delegate
_delegateSilo
v16@?0@"NSInvocation"8
(id)[NSNull null] != _delegate
_delegate == (id)[NSNull null] && !_delegateSilo
-[CLIntersiloProxy registerDelegate:inSilo:]
<%@: peer silo:%@, peer name:<REDACTED>>
-[CLIntersiloProxy peer]
/Library/Caches/com.apple.xbs/Sources/CoreLocationFramework_Sim/Shared/Intersilo/CLServiceVendor.mm
+[_Locationd performSyncOnSilo:invoker:]
0 <= dewrappedDeficit
validateTrackedSilos_block_invoke
record.svcClass
v32@?0@"CLSilo"8@"CLSiloHeartbeatRecord"16^B24
locationd: Heartbeat underflow
q24@?0@8@16
Adapter
_CLUnSupportedService
CLServiceVendorQueue
_CLMainService
CLServiceVendor.HeartbeatCheckInterval
HeartAttackStackshot
IsInternalInstall
IsLocationServicesEnabled
0 == [_catalog count]
-[CLServiceVendor enableTimeCoercion]
!_timeCoercibleSilos
remapping
-[CLServiceVendor setServiceReplacementMap:missBehavior:]_block_invoke
newEffectiveSvcName
oldEffectiveSvcName
[oldEffectiveSvcName isEqual:newEffectiveSvcName]
Test
Mock
serialized
compatibilityInfo
Couldn't create XPC service
Got error: %{public}s
Unexpected event type %{public}s
Too many arguments to selector in IntersiloInterface
{"msg%{public}.0s":"Too many arguments to selector in IntersiloInterface", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Methods beginning 'syncget...' must return non-void
{"msg%{public}.0s":"Methods beginning 'syncget...' must return non-void", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Methods returning non-void must begin 'syncget...'
{"msg%{public}.0s":"Methods returning non-void must begin 'syncget...'", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
withReply: can only be used at the end of a method name
{"msg%{public}.0s":"withReply: can only be used at the end of a method name", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
withReply: argument name should only take block type argument
{"msg%{public}.0s":"withReply: argument name should only take block type argument", "selStr":%{private, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Assertion failed
{"msg%{public}.0s":"Assertion failed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Method potentially contains a non POD or non Obj-C type in its arguments
{"msg%{public}.0s":"Method potentially contains a non POD or non Obj-C type in its arguments", "methodName":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Selector extension failed!
{"msg%{public}.0s":"Selector extension failed!", "proto":%{public, location:escape_only}@, "bases":%{public, location:escape_only}@, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
getInfoForSelector called on a missing selector
{"msg%{public}.0s":"getInfoForSelector called on a missing selector", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Using cohortList file if available"}
{"msg%{public}.0s":"#Cohorting No cohortList filePath supplied"}
{"msg%{public}.0s":"#Cohorting No cohortList file available to read", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Successfully read cohort list file", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Using syng-get graph file if available"}
{"msg%{public}.0s":"#Cohorting No sync-get graph filePath supplied"}
{"msg%{public}.0s":"#Cohorting No sync-get graph file available to read", "filePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Successfully read sync-get graph file", "filePath":%{public, location:escape_only}@}
#Idleness: Silo is being resumed: %@
CLRunLoopSilo initialization timed out
CLRunLoopSiloThread failed to init
{"msg%{public}.0s":"CLRunLoopSiloThread failed to init", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support time coercion. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support time coercion. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support suspend. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support suspend. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support resume. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support resume. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLRunLoopSilo doesn't support suspend or resume yet. See rdar://problem/45973444
{"msg%{public}.0s":"CLRunLoopSilo doesn't support suspend or resume yet. See rdar://problem/45973444", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Idleness: Silo is being idled: %@
Can't set nil handler for CLTimer.
{"msg%{public}.0s":"Can't set nil handler for CLTimer.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"deferredDelete() should have nulled out connection", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
deferredDelete() should have nulled out connection
{"msg%{public}.0s":"deferredDelete() should have nulled out handler", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
deferredDelete() should have nulled out handler
{"msg%{public}.0s":"CLConnections must always have event queues", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
CLConnections must always have event queues
{"msg%{public}.0s":"No ReplyHandler found", "Message Name":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
No ReplyHandler found
CL: Invoking reply-handler
{"msg%{public}.0s":"Invoking reply-handler", "event":%{public, location:escape_only}s, "MessageName":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
#Warning Unhandled message %s
CL: CLConnection::handleInterruption
{"msg%{public}.0s":"CLConnection::handleInterruption", "event":%{public, location:escape_only}s}
CL: CLConnection::handleDisconnection
{"msg%{public}.0s":"CLConnection::handleDisconnection", "event":%{public, location:escape_only}s}
CL: ReplyHandler cached
{"msg%{public}.0s":"ReplyHandler cached", "event":%{public, location:escape_only}s, "MessageName":%{public, location:escape_only}s, "ReplyHandlerIdentifier":%{public}u}
{"msg%{public}.0s":"CLConnection::sendMessage", "name":%{public, location:escape_only}s}
CL: CLConnection::sendMessage
{"msg%{public}.0s":"CLConnection::sendMessage", "event":%{public, location:escape_only}s, "name":%{public, location:escape_only}s}
{"msg%{public}.0s":"Couldn't create XPC message", "name":%{public, location:escape_only}s}
Couldn't create XPC message
Error on message reply (sync) for %{public}s (%{public}s)
CL: CLConnection calling interruption handler in sendMessageSync
{"msg%{public}.0s":"CLConnection calling interruption handler in sendMessageSync", "event":%{public, location:escape_only}s}
CL: CLConnection calling disconnection handler in sendMessageSync
{"msg%{public}.0s":"CLConnection calling disconnection handler in sendMessageSync", "event":%{public, location:escape_only}s}
Dropping unexpected response (not a dictionary)
CL: #MultiUser CLConnection::getUserName
{"msg%{public}.0s":"#MultiUser CLConnection::getUserName", "event":%{public, location:escape_only}s}
{"msg%{public}.0s":"Cannot call start() on an unpaused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Cannot call start() on an unpaused CLConnection.
{"msg%{public}.0s":"Cannot call pause() on a paused CLConnection.", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Cannot call pause() on a paused CLConnection.
#Warning The client name could not be determined.
The received data object is invalid: %{private}@
{"msg%{public}.0s":"Unable to send reply message", "MessageName":%{public, location:escape_only}s, "ReplyHanlderIdentifier":%{public}ld}
Unable to send reply message
Attempting to send nil/null data. An error should be sent instead.
{"msg%{public}.0s":"Unable to send reply message with raw data", "MessageName":%{public, location:escape_only}s, "ReplyHanlderIdentifier":%{public}ld}
Unable to send reply message with raw data
#Warning Connection interrupted!
#Warning Location connection invalid!
Got unexpected location event
{"msg%{public}.0s":"-becameFatallyBlocked:index: was not overriden", "class":%{public, location:escape_only}@}
-becameFatallyBlocked:index: was not overriden
The silo associated with a CLIntersiloService may not be changed once set
{"msg%{public}.0s":"The silo associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
The vendor associated with a CLIntersiloService may not be changed once set
{"msg%{public}.0s":"The vendor associated with a CLIntersiloService may not be changed once set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Payloads can't be reused!
{"msg%{public}.0s":"Payloads can't be reused!", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Overrider didn't call up to super for beginService?
{"msg%{public}.0s":"Overrider didn't call up to super for beginService?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Only one payload per key at at time
{"msg%{public}.0s":"Only one payload per key at at time", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A payload must be ready for this key
{"msg%{public}.0s":"A payload must be ready for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A payload must be around to remove for this key
{"msg%{public}.0s":"A payload must be around to remove for this key", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Setting handler for message %s
CL: CLConnectionClient::sendMessage(cache)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(cache)", "event":%{public, location:escape_only}s}
CL: CLConnectionClient::sendMessage(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessage(reply)", "event":%{public, location:escape_only}s}
CL: CLConnectionClient::sendMessageWithCompletion(reply) (Fallback)
{"msg%{public}.0s":"CLConnectionClient::sendMessageWithCompletion(reply)", "event":%{public, location:escape_only}s}
received daemon start notification for service %@
Invalidating connection
{"msg%{public}.0s":"No connection fConnection", "messageName":%{public, location:escape_only}s}
#Warning Sending an un-cached message '%{public}s' without first clearing the previously cached value
{"msg%{public}.0s":"Trying to cache a reply message", "messageName":%{public, location:escape_only}s}
Trying to cache a reply message
Creating connection
CL: Sending cached messages to daemon
{"msg%{public}.0s":"Sending cached messages to daemon", "event":%{public, location:escape_only}s}
#Warning stackshot only available on device
{"msg%{public}.0s":"#Cohorting Process intended to sign up for auto cohorting but CoreLocation/CLAutoCohort=off", "autoCohortEdgesDirectoryPath":%{public, location:escape_only}@}
#Cohorting Invalid path while enabling auto cohorting
{"msg%{public}.0s":"#Cohorting Invalid path while enabling auto cohorting", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Process successfully signed up for auto cohorting", "autoCohortEdgesDirectoryPath":%{public, location:escape_only}@}
#Cohorting Sync-get graph is of unexpected type. Expects {"key":["", ""]}
{"msg%{public}.0s":"#Cohorting Sync-get graph is of unexpected type. Expects {"key":["", ""]}", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Cohorting Cannot create directory
{"msg%{public}.0s":"#Cohorting Cannot create directory", "directoryPath":%{public, location:escape_only}@, "error":%{public, location:escape_only}@, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Doesnot exist or is not a directory", "directoryPath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot read contents of directory", "directoryPath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Sync-get graph edge is of unexpected type. Expects ["", ""]"}
{"msg%{public}.0s":"#Cohorting Cannot write edge file", "edgeFilePath":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot move unvetted edge", "srcFilePath":%{public, location:escape_only}@, "dstFilePath":%{public, location:escape_only}@}
#Cohorting Edge that was marked safe causes cycle in syncget graph
{"msg%{public}.0s":"#Cohorting Edge that was marked safe causes cycle in syncget graph", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Cohorting Cycle introduced in sync-get graph", "FromNode":%{public, location:escape_only}@, "ToNode":%{public, location:escape_only}@}
#Cohorting Cycle introduced in sync-get graph
{"msg%{public}.0s":"#Cohorting CohortId assignment for silo", "Silo":%{public, location:escape_only}@, "CohortId":%{public, location:escape_only}@}
Intersilo currently does not support reference counting
{"msg%{public}.0s":"Intersilo currently does not support reference counting", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
#Warning Time should not be moved backwards; systems based on monotonic time (like CLTimer) will misbehave.
{"msg%{public}.0s":"#Cohorting Intend to sync", "FromDispatchSilo":%{public, location:escape_only}@, "FromCohortId":%{public, location:escape_only}@, "ToDispatchSilo":%{public, location:escape_only}@, "ToCohortId":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Persist sync-get edge", "fromSiloIdentifier":%{public, location:escape_only}@, "toSiloIdentifier":%{public, location:escape_only}@}
#Cohorting Persist sync-get edge
#Idleness, Silo is being idled: %@
Intersilo proxy init changed self
{"msg%{public}.0s":"Intersilo proxy init changed self", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"withReply: and void-returning block must be used in conjunction for correct reply handling", "selector":%{public, location:escape_only}@}
withReply: and void-returning block must be used in conjunction for correct reply handling
Delegate is necessary for reply delivery
{"msg%{public}.0s":"Delegate is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Silo is necessary for reply delivery
{"msg%{public}.0s":"Silo is necessary for reply delivery", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
A delegate must be set before sending messages with byref return address parameters
{"msg%{public}.0s":"A delegate must be set before sending messages with byref return address parameters", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
The object passed to byref return address parameters MUST BE the registered delegate
{"msg%{public}.0s":"The object passed to byref return address parameters MUST BE the registered delegate", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Didn't expect the arguments to be retained before now
{"msg%{public}.0s":"Didn't expect the arguments to be retained before now", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Once registered, delegate may not be changed
{"msg%{public}.0s":"Once registered, delegate may not be changed", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
-peer should never be invoked at this level...
{"msg%{public}.0s":"-peer should never be invoked at this level...", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
_Locationd should come last?!
{"msg%{public}.0s":"locationd became blocked, non-fatally because internal install", "ImplicatedServicesSoFar":%{public, location:escape_only}@}
locationd became blocked, non-fatally because internal install
Don't message _Locationd
{"msg%{public}.0s":"Don't message _Locationd", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Heartbeat tracking commenced", "silo":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking terminated", "silo":%{public, location:escape_only}@}
Deltafied deficit should be non-negative
{"msg%{public}.0s":"Deltafied deficit should be non-negative", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow; going to crash now!", "silo":%{public, location:escape_only}@}
Only living, non-nil services should be heart-beaten
{"msg%{public}.0s":"Only living, non-nil services should be heart-beaten", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"#Warning Heartbeat underflow", "silo":%{public, location:escape_only}@, "deficit":%{public}d}
{"msg%{public}.0s":"locationd remains non-fatally blocked because internal install", "ImplicatedServicesCurrently":%{public, location:escape_only}@}
{"msg%{public}.0s":"Heartbeat tracking already enabled", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking resumed", "interval":"%{public}f"}
{"msg%{public}.0s":"Heartbeat tracking suspended"}
{"msg%{public}.0s":"Heartbeat tracking already disabled"}
Enabling Time Coercion must be done before any services are started
{"msg%{public}.0s":"Enabling Time Coercion must be done before any services are started", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Only enable Time Coercion once, eh?
{"msg%{public}.0s":"Only enable Time Coercion once, eh?", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"When amending replacement maps, you must make the new miss behavior the same or more strict. stock -> nop, stock -> crash and nop -> crash are valid changes here, or otherwise you must leave the behavior the same", "current":%{public, location:CLSVReplacementMapMissBehavior}lld, "desired":%{public, location:CLSVReplacementMapMissBehavior}lld}
When amending replacement maps, you must make the new miss behavior the same or more strict. stock -> nop, stock -> crash and nop -> crash are valid changes here, or otherwise you must leave the behavior the same
Service replacement map must be non-nil if set
{"msg%{public}.0s":"Service replacement map must be non-nil if set", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"service replacement mapping", "literalSvcName":%{public, location:escape_only}s, "MissBehavior":%{public}d}
Existing services must not fail to map under new mapping and behavior
{"msg%{public}.0s":"Existing services must not fail to map under new mapping and behavior", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test
{"msg%{public}.0s":"Should be impossible for an existing service to fail to map under existing mapping and behavior, and must be non-nil for next test", "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
Old and new mappings and behaviors must agree about any service which has started
{"msg%{public}.0s":"Old and new mappings and behaviors must agree about any service which has started", "oldEffectiveSvcName":%{public, location:escape_only}s, "newEffectiveSvcName":%{public, location:escape_only}s, "event":%{public, location:escape_only}s, "condition":%{private, location:escape_only}s}
{"msg%{public}.0s":"Configuring service replacement map", "ReplacementMap":%{public, location:escape_only}@, "MissBehavior":%{public}d}
{"msg%{public}.0s":"Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:", "RequestedServiceName":%{public, location:escape_only}@}
Test and Mock services may only be looked up indirectly via -setServiceReplacementMap:
{"msg%{public}.0s":"Unavailable service requested", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Service replacement map does not include requested service", "RequestedServiceName":%{public, location:escape_only}@, "ReplacementMap":%{public, location:escape_only}@}
Service replacement map does not include requested service
{"msg%{public}.0s":"Looking up service identified by name", "ServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Tried to look up a service by name that doesn't exist", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
Tried to look up a service by name that doesn't exist
{"msg%{public}.0s":"Requested service not isSupported", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Trying to start an unavailable service", "RequestedServiceName":%{public, location:escape_only}@, "UnavailableServices":%{public, location:escape_only}@}
{"msg%{public}.0s":"Reusing replacement service under new name", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@, "ReusedFromServiceName":%{public, location:escape_only}@}
CL: #Manufacturing service
{"msg%{public}.0s":"#Manufacturing service", "event":%{public, location:escape_only}s, "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"Failed to alloc and init key class for service", "RequestedServiceName":%{public, location:escape_only}@, "EffectiveServiceName":%{public, location:escape_only}@}
Failed to alloc and init key class for service
{"msg%{public}.0s":"#Manufacturing service complete", "EffectiveServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Warning Service retired redundantly or without ever having been started", "RequestedServiceName":%{public, location:escape_only}@}
{"msg%{public}.0s":"#Cohorting Cannot deduce toSilo", "serviceName":%{public, location:escape_only}@}
CLSettingsMirror
CLSettingsManagerClientProtocol
CLIntersiloClientProtocol
CLIntersiloProxyDelegateProtocol
NSObject
CLSettingsManagerMockProtocol
CLSettingsManagerProtocol
CLIntersiloServiceProtocol
CLSettingsManagerMock
CLExtensions
CLIntersiloInterfaceSelectorInfo
CLIntersiloInterface
CLSiloIdleHandler
CLSiloHeartbeatRecord
CLSilo
NSCopying
CLSettingsManagerInternal
CLRunLoopTimerScheduler
CLTimerScheduler
CLRunLoopSiloThread
CLRunLoopSilo
CLTimer
DeprecatedWalltimeBasedTimerAPIs
CLIntersiloService
CLIntersiloUniverse
CLIntersiloServiceMockPayload
CLIntersiloServiceMock
CLIntersiloServiceMockProtocol
CLSettingsManager
CLPermissiveTimer
CLSettingsDictionary
CLAutoCohortUtilities
CLDispatchTimerScheduler
CLTimerWeakHolder
CLDispatchSilo
CLTimeCoercibleDispatchSilo
MainSilo
CLIntersiloProxyToRecipient
CLIntersiloProxyToInitiator
CLIntersiloProxy
_Locationd
_CLMainService
_CLUnSupportedService
CLServiceVendor
CLCppContainer
NSSecureCoding
NSCoding
CLCppEncodableDataContainer
T@"CLIntersiloProxy",R,N,V_peer
T#,R
T@"CLTimer",W,N
T:,R,N,V_sel
T@?,C,N,V_settingsChangeHandler
T@"<CLIntersiloUniverse>",R,N
_isIdle
T@"CLIntersiloProxy",R,W,N,V_peer
_operationQueue
T@"CLServiceVendor",R,N
_vendor
T@"CLSilo",R,N
allKeys
T@"CLTimer",R,W,N,V_timer
clients
T@"CLTimer",W,N,Vtimer
containsString:
T@"NSDictionary",R,N,V_inputDictionary
dbgAssertInside
T@"NSMethodSignature",R,&,N,V_sig
encoder
T@"NSMutableDictionary",&,N,V_keyedPayloads
getTimeCoercibleVariantInstance
T@"NSMutableSet",&,V_clients
hasValueForKey:
T@"NSRunLoop",&,N,V_runloop
initWithFormat:
T@"NSString",R,C
inputDictionary
T@"NSString",R,N,V_identifier
manager
T@"NSThread",R,N,V_underlyingThread
numberWithLong:
T@"XCTestExpectation",R,N,V_expectation
release
T@,C,N,V_compatibilityInfo
retainArguments
T@?,C,N,V_encoder
runloop
T@?,C,N,V_handler
T@?,C,V_onResume
setLong:forKey:
TB,N,V_inUse
TB,R
stringFromDate:
TQ,R
svcName
TQ,R,N,V_sizeOfType
typeStr
Td,D,N
unregisterForIdleNotifications:
Td,N,V_nextFireDelay
.cxx_destruct
T@"CLSilo",R,W,N,V_delegateSilo
T#,R,N,V_svcClass
T@"NSDictionary",&,N,V_internal
T@"<CLIntersiloProxyDelegateProtocol>",R,W,N,V_delegate
_delaySetAtTime
T@"<CLSettingsManagerProtocol>",&,N,V_manager
_onIdle
T@"CLIntersiloUniverse",&,N,V_universe
_source
T@"CLServiceVendor",R,N,V_vendor
T@"CLSilo",R,N,V_silo
arrayWithArray:
T@"CLTimer",W,N,V_timer
containsObject:
T@"NSData",C,N,V_serialized
currentLatchedAbsoluteTimestamp
T@"NSDictionary",R,N,V_outputDictionary
dealloc
T@"NSMutableArray",R,N,V_timerHolders
getSilo
T@"NSMutableDictionary",&,V_settingsDictionary
handler
T@"NSObject<OS_dispatch_source>",&,N,V_source
initInUniverse:
T@"NSRunLoop",R,N,V_underlyingRunLoop
initWithString:
T@"NSString",R,C,D,N
isProxy
T@"NSString",R,V_svcName
numberWithBool:
T@"NSTimer",&,N,V_underlyingTimer
refresh
T@,&,N,V_notificationObserver
removeObserver:
T@?,C,N,V_destructor
runIdleHandlers
T@?,C,N,V_fireBlock
T@?,C,V_onIdle
setBool:forKey:
TB,N
sharedInterface
TB,N,V_valid
stringByAppendingPathComponent:
TB,R,N,V_shouldCancelThread
suspend
TQ,R,N,V_binaryVersion
T^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]},R,N,V_threadId
underlyingTimer
Td,N,V_fireInterval
updateScheduler
Ti,N,V_residentCount
Ti,R,N,V_ackCount
Ti,R,N,V_lastArgBlockIndex
Ti,R,N,V_returnAddressIndex
Ti,R,N,V_synCount
Tr^v,N,V_cppObjectPtr
UTF8String
_ackCount
_binaryVersion
_cTypeString
_catalog
_clients
_cohortId
_compatibilityInfo
_cppObjectPtr
_currentGlobalLatchedAbsoluteTimestamp
_currentLatchedAbsoluteTimestamp
_delegate
_delegateSilo
_destructor
_encoder
_expectation
_fireBlock
_fireInterval
_handler
_identifier
_idleHandlers
_idleHandlersLock
_inUse
_inputDictionary
_internal
_isQueueSuspended
_keyedPayloads
_lastArgBlockIndex
_lastIdleCheck
_manager
_missBehavior
_nextFireDelay
_notificationObserver
_onResume
_outputDictionary
_peer
_queue
_recordingFromTriggersByTo
_recordingToTriggersByFrom
_residentCount
_returnAddressIndex
_runloop
_scheduler
_sel
_serialized
_serviceReplacementMap
_setLatchedAbsoluteTimestamp:
_settingsChangeHandler
_settingsDictionary
_shouldCancelThread
_sig
_silo
_siloThread
_sizeOfType
_svcClass
_svcName
_synCount
_threadId
_timeCoercibleSilos
_timer
_timerHolders
_unavailableServiceNames
_underlyingRunLoop
_underlyingThread
_underlyingTimer
_universe
_useCLPermissiveTimer
_valid
ackCount
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addTimer:forMode:
afterInterval:async:
amendServiceReplacementMap:missBehavior:
applyEdges:toGraph:
archivedDataWithRootObject:requiringSecureCoding:error:
argumentsRetained
array
arrayForKey:defaultValue:
arrayWithContentsOfFile:
arrayWithObjects:count:
assertInside
assertOutside
async:
autoCohortingEnabled
autorelease
becameFatallyBlocked:index:
beginService
binaryVersion
boolForKey:defaultValue:
boolValue
bytes
cancel
cl_deepMutableCopy
class
close
compare:
compatibilityInfo
componentsSeparatedByCharactersInSet:
computeAutoCohortMapWithStarterGraph:
conformsToProtocol:
containerWithObject:cppDataEncoder:destructor:binaryVersion:typeSize:
containerWithObject:destructor:binaryVersion:typeSize:
contentsOfDirectoryAtPath:error:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
cppObjectPtr
createDirectoryAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentRunLoop
currentThread
dataWithBytes:length:
date
dateWithTimeIntervalSinceNow:
debugDescription
decodeObjectForKey:
decodeTopLevelObjectOfClasses:forKey:error:
defaultCenter
defaultManager
delegate
delegateSilo
description
destructor
dictionary
dictionaryForKey:defaultValue:
dictionaryRepresentation
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didUpdateSettings:
doubleForKey:defaultValue:
doubleValue
enableAutoCohortingForProcessAtPath:
enableTimeCoercion
encodeWithCoder:
endService
ensureServiceIsRunning:
enumerateKeysAndObjectsUsingBlock:
expectation
extendSelectorInfoWithProtocol:bases:
fileExistsAtPath:isDirectory:
fileURLWithPath:
filterUsingPredicate:
fireBlock
fireInterval
floatForKey:defaultValue:
floatValue
flush
forwardInvocation:
getArgument:atIndex:
getArgumentTypeAtIndex:
getCFRunLoop
getEdgeFilesFromDirectory:
getInfoForSelector:
getPayloadForKey:
getPayloadForSelector:
getSafeEdges
getServiceWithName:
getUnsafeEdges
getUnvettedEdges
globalConfiguration
hasPrefix:
hasSuffix:
hasSuffixInsensitive:
hash
heartBeat:
holderWithTimer:
identifier
inPermissiveMode
inUse
init
initForReadingFromData:error:
initInSilo:withScheduler:
initMain
initTrackingServiceClass:name:
initWithBlock:
initWithCoder:
initWithCurrentRunLoopAndIdentifier:
initWithCurrentRunLoopAndIdentifier:bePermissive:
initWithCurrentThread
initWithDelegateObject:delegateSilo:
initWithDelegateObject:delegateSilo:uninitializedPeer:
initWithDictionary:
initWithDispatchSilo:
initWithExpectation:inputDictionary:
initWithIdentifier:
initWithIdleHandler:onResume:
initWithInboundProtocol:outboundProtocol:
initWithObject:cppDataEncoder:destructor:binaryVersion:typeSize:
initWithObject:destructor:binaryVersion:typeSize:
initWithObjects:
initWithRunLoop:
initWithRunLoopSilo:
initWithSelector:andMethodSignature:
initWithSilo:vendor:
initWithTimer:
initWithUnderlyingQueue:
initWithUnderlyingQueue:bePermissive:
initWithUnderlyingRunLoop:
initWithUninitializedPeer:
initialize
initiatorRepresentingClass
inputStreamWithFileAtPath:
intForKey:defaultValue:
intValue
intendToSync
intendToSyncServiceWithName:
invalidate
invoke
invokeWithTarget:
isEdgeKnownToCauseCycle:
isEqual:
isKindOfClass:
isMemberOfClass:
isServiceEnabled:
isServiceRunning:
isSupported
isSuspended
isTimeCoercionEnabled
keyedPayloads
lastArgBlockIndex
layerAssignmentForNode:inGraph:extendingLayering:
length
localizedFailureReason
longForKey:defaultValue:
longValue
main
markUnvetted:
markUnvettedSafe
markUnvettedUnsafe
methodReturnLength
methodSignatureForSelector:
missBehavior
moveItemAtPath:toPath:error:
mutableCopy
newIsolatedUniverseWithOnlySilo:
newSharedVendorUniverseWithSilo:
newTimer
nextFireDelay
nextFireDelayRaw
nextFireTime
notificationObserver
null
numberOfArguments
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithShort:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
offsiloHandleInvocation:selectorInfo:peer:
onIdle
onResume
open
operationQueue
outputDictionary
peer
performBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performSyncOnSilo:invoker:
persistEdgeFrom:to:
predicateWithBlock:
prepareAndRunBlock:
propertyListWithStream:options:format:error:
proxyForRecipientObject:inSilo:recipientName:
proxyForService:
proxyForService:forClient:
queue
rangeOfString:options:
readEdges:
recipientRepresentingClass
reflectNextFireDelay:fireInterval:
registerDelegate:inSilo:
registerForIdleNotifications:onResume:
removeAllObjects
removeObject:
removeObjectForKey:
removePayloadForKey:
removePayloadForSelector:
rereadConfiguration:
residentCount
respondsToSelector:
resume
retain
retainCount
retireServiceWithName:
returnAddressIndex
runResumeHandlers
selector
self
serialized
setArgument:atIndex:
setArray:forKey:
setByAddingObjectsFromSet:
setClients:
setCompatibilityInfo:
setCppObjectPtr:
setCurrentGlobalLatchedAbsoluteTimestamp:
setDateFormat:
setDelegateEntityName:
setDestructor:
setDictionary:
setDictionary:forKey:
setDouble:forKey:
setEncoder:
setFireBlock:
setFireDate:
setFireInterval:
setFloat:forKey:
setGlobalConfiguration:
setHandler:
setInUse:
setInt:forKey:
setKeyedPayloads:
setLatchedAbsoluteTimestamp:
setManager:
setName:
setNextFireDelay:
setNextFireDelay:interval:
setNextFireTime:
setNextFireTime:interval:
setNotificationObserver:
setObject:forKey:
setObject:forKeyedSubscript:
setOnIdle:
setOnResume:
setOutput:forKey:
setPayload:forKey:
setPayload:forSelector:
setRecordingTriggerMap:outputPathBase:
setResidentCount:
setRunloop:
setSerialized:
setServiceReplacementMap:missBehavior:
setSettings:
setSettingsChangeHandler:
setSettingsDictionary:
setShort:forKey:
setSilo:
setSource:
setString:forKey:
setTarget:
setTimer:
setUnderlyingQueue:
setUnderlyingTimer:
setUniverse:
setValid:
setValue:forKey:
setVendor:
setWithArray:
setWithObject:
settingsChangeHandler
settingsDictionary
settingsWithDictionary:
sharedInstance
shortForKey:defaultValue:
shortValue
shouldBeIdled
shouldCancelThread
shouldFire
signatureWithObjCTypes:
silo
sizeOfType
sortUsingComparator:
source
standardUserDefaults
start
stringByAppendingString:
stringForKey:defaultValue:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
superclass
supportsSecureCoding
svcClass
synCount
sync:
syncgetPayloadForKey:
syncgetPayloadForSelector:
syncgetSetValue:forKey:withoutNotifying:
syncgetSettingsAndRegisterForUpdates:
threadId
timer
timerHolders
timerWithTimeInterval:repeats:block:
underlyingRunLoop
underlyingThread
unionSet:
universe
unregisterForUpdates:
updateClientsWithDictionary:
valid
vendor
whitespaceAndNewlineCharacterSet
writeEdge:toDirectory:
writeToURL:error:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8@16
v24@0:8@"NSDictionary"16
@24@0:8@16
v16@0:8
v32@0:8@16@24
v28@0:8B16@20
v28@0:8s16@20
v28@0:8i16@20
v32@0:8q16@24
v28@0:8f16@20
v32@0:8d16@24
@?16@0:8
v24@0:8@?16
@"<CLSettingsManagerProtocol>"
@"CLIntersiloUniverse"
v32@0:8@16Q24
v32@0:8@16@?24
v24@0:8r*16
@"CLSilo"16@0:8
v32@0:8@"NSArray"16Q24
v32@0:8@"CLSilo"16@?<v@?>24
v32@0:8@"<CLIntersiloProxyDelegateProtocol>"16@"CLSilo"24
v24@0:8R@16
@24@0:8R@16
@40@0:8@16@24R@32
v24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"24@0:8R@"<CLSettingsManagerClientProtocol>"16
@"NSDictionary"40@0:8@16@"NSString"24R@"<CLSettingsManagerClientProtocol>"32
:16@0:8
i16@0:8
@"NSMethodSignature"
@32@0:8@?16@?24
@32@0:8#16@24
v20@0:8i16
@"CLSilo"
@"NSString"
@24@0:8^{_NSZone=}16
d16@0:8
v32@0:8d16@?24
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8d16d24
@"CLTimer"16@0:8
v24@0:8@"CLTimer"16
@"NSTimer"
@"NSRunLoop"
@"CLTimer"
@24@0:8^{__CFRunLoop=}16
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}16@0:8
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
@"NSThread"
@28@0:8@16B24
@"CLRunLoopSiloThread"
@32@0:8@16@24
v24@0:8d16
@"<CLTimerScheduler>"
@"CLServiceVendor"16@0:8
@"CLServiceVendor"
@"XCTestExpectation"
@"NSDictionary"
v32@0:8@16:24
v24@0:8:16
v32@0:8@"CLIntersiloServiceMockPayload"16:24
v32@0:8@"CLIntersiloServiceMockPayload"16@"NSString"24
v24@0:8@"NSString"16
@"CLIntersiloServiceMockPayload"24@0:8:16
@"CLIntersiloServiceMockPayload"24@0:8@"NSString"16
B28@0:8@16B24
s28@0:8@16s24
i28@0:8@16i24
q32@0:8@16q24
f28@0:8@16f24
d32@0:8@16d24
@40@0:8@16@24@32
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
@"NSOperationQueue"
@"NSNumber"
@"NSMutableArray"
@"CLIntersiloProxy"
B40@0:8@16@24@32
@"<CLIntersiloProxyDelegateProtocol>"
v28@0:8@16i24
@48@0:8^v16@?24Q32Q40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
r^v16@0:8
v24@0:8r^v16
@56@0:8^v16@?24@?32Q40Q48
@"NSData"
