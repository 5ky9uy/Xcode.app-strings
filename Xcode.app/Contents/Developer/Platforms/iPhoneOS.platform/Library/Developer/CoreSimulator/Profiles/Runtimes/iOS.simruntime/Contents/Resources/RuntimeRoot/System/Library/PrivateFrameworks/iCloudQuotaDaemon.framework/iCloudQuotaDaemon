@(#)PROGRAM:iCloudQuotaDaemon  PROJECT:iCloudQuota-1
softlink:r:path:/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
softlink:r:path:/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices
softlink:r:path:/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
Unable to get user volume status: %{public}s
Device storage nearLowButNotLow:%{public}@
unable to get disk usage from MobileGestalt
disk usage dict: %{public}@
user volume is eating into the reserve -- too low for offers
photosLibrarySize took %@ seconds
photosLibraryUploadSize took %@ seconds
photosVideosCount took %@ seconds
Checking user volume status flags 0x%lx
no alertInfo provided
alertInfo: expected NSDictionary, got %@
defaults key %@ is not of correct type
Invalid string
context dictionary response is missing device offers
error %@ fetching offers with context dictionary %{public}@ resulting in serverDict %@
teardown offers related to primary account %@ due to user logout
teardown for non-primary account %@ - ignoring
%s - Renewing credentials
Error posting Storage Management followup %{public}@; error: %{public}@
Posted Storage Management followup %{public}@
Error clearing Storage Management followup; error: %{public}@
Cleared Storage Management followup
Failed to clear followups with error %{public}@
using cached offer stubs - expires %@
_processPushNotificationDictionary: %@
push notification with bad event %@
ignoring push (CKHardwareID:%@ does not match local CKHardwareID:%@)
push targeted to this device only
push notification with bad dsid of class %@
dsid mismatch: ignoring
handling push event %@
push notification with bad notificationId %@
push event (alert)
flushed stubs; fetching offer for notificationID %@
showing alert
skipping alert
fetch error %@
push event (%{public}@)
reconsidered offers success:%d error:%{public}@
push notification with unexpected event %@ (ignored)
_fetchDictionaryForAccount:%@ quotaKey:%@ stub:%@ notificationID:%@ contextDictionary:%@
fetchOffer(s) with postDict %@
request: %@ headers: %@ body: %@ body (as string): %@
sending request for latest offer
error parsing fetched offer: %@
Mocking the server response
Mocking Not Supported in case of both stub and notification id are nil
Mocking Not Supported for %@
getting mock server dict from %@
error parsing mock offer: %@
mockServerDict = %@
Quota for %@ changed from %@ to %@; updating last known quota
Updated account quota information with success: %@, error: %@
WARNING: both stub and notificationID are nil -- attempting blind refresh
missing buddyOffer flag after refresh offer details
Finished persisting %{public}@offer; expires on %@
error %{public}@ occurred fetching %{public}@offer -- persisting placeholder
Finished persisting placeholder %{public}@offer; expires on %@
fetched local sample offer
Finished persisting local offer stubs; expires on %@
Unable to get local offer stubs; dropping through to server stubs
fetched offers:
Finished persisting offer stubs; expires on %@
error %{public}@ occurred fetching offer stubs -- persisting placeholder
Finished persisting placeholder stubs; expires on %@
showing alert for daemonOffer %@
Skipping alert from daemon offer level %@ alertSpecification %@
Showing alert from daemon with offer level %@ alertSpecification %@
Daemon alert completed with action %@ parameters %@
no buttonId, skipping teardown ack
posting push received darwin notification
daemon offer / alerts / followups were torn down without replacement; notifying clients
daemon offer / alerts / followups were torn down but will be replaced; not notifying clients until then
Unable to get offer stubs; error: %@
Error: Unable to create offer stubs from dict %@
Persisting placeholder & clearing any existing followups
No stub matched for %@ -- persisting placeholder
Unexpected error %@
Error: Unexpected nil daemonOffer
Error: Requested buddy offer but got non-buddy offer!
Error: Requested offer but got buddy offer!
error %{public}@ posting followup
posted followup
Error fetching CloudKit backup container device id: %{public}@
_ICQActionFromString - illegal action %@
%{public}@ is missing
invalid %{public}@ of class %@
invalid %{public}@[%ld] of class %@
choose stub: none present
checking criteria for offer type %{public}@ type %{public}@ criteria
%{public}@
choose stub: none with matching criteria found
choose offer type (%@):
skipping server offer type %@ (%@) because it doesn't match requested %@
choose offer type (%@): none found
choose offer type: none present
attempt to open URL %@ of class %@
link - presenting purchase flow in Settings
link - presenting manage storage in Settings
link - presenting family setup in Settings
link - offer rejected
link - opening URL %@
ICQLink: performAction: %@ not handled since it requires context
ICQLink: performAction: %@ not handled
performOfferUpdateWithContext:%@ - %@ zeroAction:%d account:%@
update offer - failed to create request to URL %@
update offer request: %@ headers: %@ body: %@ body (as string): %@
Error: buddy offer object of incorrect class -- will persist at the wrong key
expected inlineAlertInfo to be NSArray<NSDictionary *> but found %@
photosLibraryUploadSize: %@ < %lld -- recommending alternate string
photosVideosCount: %@ < %lld -- recommending alternate string
no substitution for placeholder %@%@
substituting for placeholder %{public}@ = %@
missing substitution for substring "%{public}@"
no followupInfo provided
followupInfo: expected NSDictionary, got %@
Photos transfer progress %@
Photos transfer error %@
device Info = %@
error = %@
not badging app
Posted ICQFollowup item (title:%@ group:%@) %@%@
Clearing ICQFollowup items
_ICQOfferTypeForString - illegal offer type %@
_ICQOfferTypeForServerString - illegal server offer type %@
bad retrieval date %@
bad callbackInterval %@
persisted offer missing server dict
bad server dict %@
validated persistence dictionary
persistence dictionary is invalid: %@
returning failure dictionary: %{public}@
persisted offer(s) bad %@: %@
missing quota key %@ for account %@
invalid URL string %@ for quota key %@ account %@
Could not convert message body to JSON. Error: %@
Body: %@
request: stub missing offerId
request: missing conditions when stub was chosen; using live conditions
expected NSString from key %@ but got %@
expected NSDictionary from key %@ but got %@
unexpected server action %@
link overrides action in text:%@ action:%@ params:%@ link:%@
link: expected dict: invalid server message parameter:%@
Invalid link: %@
links: expected array: invalid server message parameters:%@
format is "%@"; button may not contain more than one "%%@"
expected message; bad plist object:%@
attempt to create alert with nil daemonOffer
attempt to create alert for invalid daemonOffer %@
alert already shown; skipping
alert not shown: no alert specification
showing alert for daemonOffer%@
dismissing alert for daemonOffer %@
alert not showing; skipping dismiss
waiting for alert %@ to dismiss
finished waiting for alert %@ to dismiss
remember alert for notification %@
dismissing old alert for notification %@
forget alert for notification %@
Could not find alert for notification %@, dismissing unlabeled alert
dismissing alert for notification %@
Could not find alert for notification %@
dismissing all alerts
%{public}@%{public}@
event details: nil
event details: unexpected class %@
offerType: %{public}@
type: %{public}@
notificationInfo: present %@
notificationInfo: missing
iTunesAccountExists: %d
iTunesAccountExists: unexpected class %@
callbackInterval: %g
callbackInterval: unexpected class %@
showAlert: %d
showAlert: unexpected class %@
alertInfo: present
alertInfo: missing
showBanner: %d
showBanner: unexpected class %@
appBannerInfo: present
appBannerInfo: missing
appContextInfo: present
appContextInfo: missing
followUpInfo: present
followUpInfo: missing
container: %@
%@ request completed; %@
data: %@
response: %@
error: %@
request for detail notification object
"lockTitle" field not present or of undefined type in lockScreenInfo
"lockMessage" field not present or of undefined type in lockScreenInfo
"title" field not present or of undefined type in followups
"mesg" field not present or of undefined type in followups
Posting detail notification
lockScreenTitle = %@
lockScreenMessage = %@
followupTitle = %@
followupMessage = %@
criteria: missing, substituting empty criteria (always succeeds)
criteria: expected NSDictionary, got %@
criterion: %@: %@ not convertible to long long
criterion: photos library size unknown
criterion: %{public}@: %lld %{public}@ %lld
unexpected criterion key %@
criterion: %{public}@ matches %{public}@
criterion: %{public}@ doesn't match %{public}@
criterion: expected bool value, got %@
DiskUsage
v24@?0@"NSNumber"8@"NSError"16
v16@?0@"NSDictionary"8
isDeviceStorageAlmostFull
TB,R,N
isPhotosCloudEnabled
hasPhotosCloudEverBeenEnabled
isPhotosOptimizeEnabled
photosLibrarySize
T@"NSNumber",R,N
photosLibraryUploadSize
photosVideosCount
simulatedDeviceStorageAlmostFull
TB,N,GisSimulatedDeviceStorageAlmostFull
isDeviceStorageNearLowButNotLow
isCachedCloudQuotaAlmostFullOrFull
deviceStorageAlmostFull
TB,N,GisDeviceStorageAlmostFull,V_deviceStorageAlmostFull
photosCloudEnabled
TB,N,GisPhotosCloudEnabled,V_photosCloudEnabled
photosOptimizeEnabled
TB,N,GisPhotosOptimizeEnabled,V_photosOptimizeEnabled
T@"NSNumber",C,N,V_photosLibrarySize
/private/var
PLIsCPLDataclassEnabled
v8@?0
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
/System/Library/PrivateFrameworks/PhotoLibraryServices.framework/Contents/MacOS/PhotoLibraryServices
PLCPLHasBeenEnabledForCurrentAccount
PLCloudPhotoLibraryKeepOriginalsIsEnabled
PLPhotoLibrary
Unable to find class %s
PLGatekeeperClient
/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/AssetsLibraryServices
/System/Library/PrivateFrameworks/AssetsLibraryServices.framework/Contents/MacOS/AssetsLibraryServices
alertInfo
title
mesg
altMesg
hideOnLock
actions
Actions
linkForButtonIndex
T@"NSMutableDictionary",&,V_linkForButtonIndex
serverDict
T@"NSDictionary",&,N
T@"NSString",&,N,V_title
message
T@"NSString",&,N,V_message
altMessage
T@"NSString",&,N,V_altMessage
lockScreenTitle
T@"NSString",&,N,V_lockScreenTitle
lockScreenMessage
T@"NSString",&,N,V_lockScreenMessage
altLockScreenMessage
T@"NSString",&,N,V_altLockScreenMessage
disableLockScreenAlert
TB,N,V_disableLockScreenAlert
defaultButtonIndex
Tq,N,V_defaultButtonIndex
btnDefault
BtnDefault
btnAction
BtnAction
CHANGE_STORAGE_PLAN
MANAGE_STORAGE
deviceOffers
needsUpgrade
offerType
EnableICPL
followUpEnabled
hasUIFlow
appBannerInfo
appId
com.apple.mobileslideshow
format
iPhone storage is almost full. Free up space by using iCloud Photo Library. %@
params
display
Learn More >
action
ENABLE_ICPL
actParams
offerId
RW5hYmxlSUNQTA==
sbAlertEnabled
offerInfo
actionInfo
actionBtn
btnTitle
Use iCloud Photo Library
btnId
enableICPLAction
More Space, for More Photos
icloudApps
backBtn
Cancel
cancelEnableICPLAction
CANCEL_AND_CLOSE_ACTION
header
Free up space and take more photos by using iCloud Photo Library.
Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
footer
Uploads to and downloads from iCloud Photo Library will require an Internet connection.
successInfo
Done
exitCloseAction
EXIT_AND_CLOSE_ACTION
iCloud Photo Library has been turned on
Your photos and videos will start uploading when you're connected to Wi-Fi
failureInfo
Try Later
errorCloseAction
Unble to enable iCloud Photo Library
We were not able to enable iCloud Photo Library
priority
followUpInfo
lockMessage
iPhone Storage Almost Full
settingsTitle
Free up space and take more photos by using iCloud Photo Library. Your photos and videos will be safely stored in iCloud, and only smaller versions will be kept on your iPhone.
lockTitle
Use iCloud Photo Libary
dlUpgrade
Not Now
DISMISS_AND_CLOSE_ACTION
dlCancel
criteria
iCPLEnabled
minPhotoLibraryInBytes
maxPhotoLibraryInBytes
Get more storage, and keep all your photos safely stored in iCloud
With 50 GB of iCloud storage and iCloud Photo Library, you can keep all your photos and videos safely stored in iCloud and free up space on your iPhone too.
UPGRADE_ENABLE_ICPL
planDetails
productType
Software
pricingParameters
STDQ
salableAdamId
916860110
prsId
price
planSize
appleId
sj_ic3_15@icloud.com
pricePerYear
$0.99 per month.
totalStorage
UpgradeEnableICPL
iPhone storage is almost full. Get more storage, and keep all your photos safely stored in iCloud. %@
VXBncmFkZUVuYWJsZUlDUEw=
Buy 50 GB for $0.99/mo.
buyEnableICPLAction
cancelCloseAction
You will be charged $0.99 right now and each month. You can cancel at any time. Contact Apple within 15 days for a refund. Partial refunds are available where required.
You now have 50GB of total iCloud storage
3068
iCloud Photo Library Will Be Updated
warnCloseAction
More Space Will be available for More Photos
You can start taking more photos shortly by using iCloud Photo Library
Unable to upgrade and enable iCloud Photo Library
Unable to free up space to take more photos
OptimizeICPL
iPhone storage is almost full. Free up space by using original photos in iCloud only. %@
Optimize Now >
SHOW_INLINE_ALERT
alertKey
optimizeICPL
T3B0aW1pemVJQ1BM
inlineAlertInfo
Optimize iPhone Storage
Free up space by keeping your original photos in iCloud, and smaller versions on you iPhone
Optimize
ENABLE_OPTIMIZE_ICPL
optimize
cancel
Free up space by keeping your original photos in iCloud only
Free up space on your iPhone by keeping your original photos and videos in iCloud only
buddyOffers
YnVkZHlVcGdyYWRlV2l0aElDUEw=
With 50 GB of iCloud storage, you can keep all your photos and videos safely in iCloud Photo Library and free up space on your iPhone.
< Back
backCloseAction
buddyBuyEnableICPLAction
notNowBtn
Continue
iCloud Photo Library is on
iCloud Photo Library Will Be Enabled
You will have 50 GB of total iCloud storage
Unable to enable iCloud Photo Library
Failed to enable iCloud Photo Library
YnVkZHlVcGdyYWRlRHJpdmU=
Your iPhone has been backing up in iCloud each night but your iCloud storage is now almost full.
With 50 GB of iCloud storage, all your important things like photos, videos, documents and apps can keep backing up automatically.
Keep your iPhone backed up
com.apple.iCloudDriveApp
buyId
iCloud Storage Upgraded
You now have 50 GB of total iCloud storage
iCloud Storage Will Be Upgraded
Unable to upgrade iCloud Storage
Failed to upgrade iCloud Storage
UpgradeStorage
quotaInfo
totalQuota
totalAvailable
totalUsed
callbackInterval
_ICQEnableServerMocking
default
com.apple.cloud.quota
com.apple.Dataclass.Quota
ICQDaemonOfferChangedDueToPushDarwinNotification
bundleIdentifier
contextDictionary
ICQUpdateOfferKeyIsZeroAction
event
hardwareId
CKHardwareID
dsId
altDSID
notificationId
debugAlert
alert
dismiss
teardown
_ICQPushInternal
_ICQSimulatedDeviceStorageAlmostFull
_ICQShouldDirectToStorageManagement
_ICQSimulatedPhotosLibrarySize
_ICQUseFetchOffersDataDirectly
_ICQBuddyOfferEnable
_ICQLegacyDeviceStorageLevelNotification
_ICQOfferSource
server-sample
local-sample
quotaFetchOffersURL
buddy:quotaFetchOffersURL
quotaRefreshOfferDetailsURL
ICQFetchOfferURLSession
com.apple.icloud.quota
com.apple.purplebuddy
context dictionary response is missing device offers
v24@?0@"NSDictionary"8@"NSError"16
com.apple.icq
v24@?0@"ICQDaemonOffer"8@"NSError"16
@"ICQDaemonOfferStub"16@?0@"ICQDaemonOfferStubs"8
-[ICQDaemonOfferManager renewCredentialsWithCompletion:]
DEVICE_FULL_FOLLOWUP_MANAGE_STORAGE_BUTTON_TITLE
Localizable
prefs:root=General&path=STORAGE_MGMT
DEVICE_FULL_FOLLOWUP_LEARN_MORE_BUTTON_TITLE
https://support.apple.com/HT206504
DEVICE_FULL_ALERT_TITLE
DEVICE_FULL_ALERT_MESSAGE
DEVICE_FULL_ALERT_ACTIVATE_BUTTON_TITLE
com.apple.iCloudQuotaDaemon.StorageManagement.followup
DEVICE_FULL_FOLLOWUP_TITLE
DEVICE_FULL_FOLLOWUP_MESSAGE
v20@?0B8@"NSError"12
v24@?0@"ICQDaemonOfferStubs"8@"NSError"16
unable to get URL for account:%@ quotaKey:%@
quota_alert
ck_hw_id
dsid
true
X-Apple-All-Device-Offers
X-Apple-InvoiceEvent-Simulate
AlmostFull
X-Apple-QuotaEvent-Simulate
X-Apple-Storage-Has-SubscriptionOffer
X-Apple-Storage-Include-BuddyOffer
X-Apple-Storage-Include-BackupOffer
X-Apple-Itunes-DSID
useWlanTerm
unable to convert post dict to JSON
fetch offer
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
_ICQ_MOCK_FETCH_OFFER
_ICQ_MOCK_%@
total_quota
buddy 
v24@?0q8@"NSDictionary"16
v16@?0@"ICQDaemonOffer"8
malformed daemon offer stubs
buddy offer
offer
ckBackupDeviceID
T@"NSString",R,N
accountManager
T@"_ICQAccountManager",R,V_accountManager
sharedURLSession
T@"NSURLSession",R,V_sharedURLSession
shouldDirectToStorageManagement
TB,N
buddyOfferEnabled
TB,N,GisBuddyOfferEnabled
simulatedPhotosLibrarySize
T@"NSNumber",&,N
legacyDeviceStorageLevelNotificationEnabled
TB,N,GisLegacyDeviceStorageLevelNotificationEnabled
GSDeviceName
_SIMULATOR
%@_%@
wapi
com.apple.backup.ios
v24@?0@"NSString"8@"NSError"16
CKContainer
/System/Library/PrivateFrameworks/CloudKit.framework/CloudKit
/System/Library/PrivateFrameworks/CloudKit.framework/Contents/MacOS/CloudKit
buddyOffer
TB,R,N,GisBuddyOffer
defaultOffer
TB,R,N,GisDefaultOffer
T@"ICQDaemonOfferCriteria",R,N
conditionsWhenChosen
T@"ICQDaemonOfferConditions",C,N,V_conditionsWhenChosen
serverDictionary
T@"NSDictionary",R,N
openURL
URLQueryParameters
ServerLinkId
ICQActionNone
ICQActionDismiss
ICQActionRejectOffer
ICQActionPresentPurchaseFlow
ICQActionPresentManageStorage
ICQActionPurchaseBuy
ICQActionPurchaseComplete
ICQActionOpenURL
ICQActionCancel
ICQActionShowInlineAlert
ICQActionOpenPaymentUpdate
ICQActionOpenCloudBackup
ICQActionCloudUpgrade
ICQActionPhotosOptimize
ICQActionPhotosCloudEnable
ICQActionPhotosCloudUpgradeEnable
ICQActionFamilySetup
ICQActionLaunchRemoteUI
ICQActionCloudUpgradeOslo
ICQActionPhotosCloudUpgradeEnableOslo
_ICQCachedOfferStubsInternal
q24@?0@8@16
defaultOffers
v32@?0@8Q16^B24
type
serverStubs
T@"NSArray",R,N,V_serverStubs
buddyStubs
T@"NSArray",R,N,V_buddyStubs
defaultStubs
T@"NSArray",R,N,V_defaultStubs
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/STORAGE_UPGRADE
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/STORAGE_AND_BACKUP/MANAGE_STORAGE
prefs:root=APPLE_ACCOUNT&aaaction=setupFamily&clientAppContext=iCloudStorage
prefs:root=APPLE_ACCOUNT&path=PAYMENT_AND_SHIPPING/PRIMARY_PAYMENT
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE/BACKUP
%@: "%@" options:%@ action:%@ parameters:%@
text
T@"NSString",R,C,N,V_text
options
Tq,R,N,V_options
Tq,R,N,V_action
parameters
T@"NSDictionary",R,C,N,V_parameters
remoteUIURL
T@"NSURL",&,N,V_remoteUIURL
quotaUpdateOfferURL
directAction
update offer
_ICQCachedOfferInternal
internalAlertSpecification
T@"_ICQAlertSpecification",&,N,V_internalAlertSpecification
internalFollowupSpecification
T@"_ICQFollowupSpecification",&,N,V_internalFollowupSpecification
level
Tq,R,N
notificationID
T@"NSString",&,N,V_notificationID
T@"NSString",C,N,V_offerId
PhotoLibrarySize
PhotoLibraryUploadSize
PhotosVideosCount
%@%@
alertSpecification
T@"_ICQAlertSpecification",R,N
followupSpecification
T@"_ICQFollowupSpecification",R,N
followupInfo
_ICQMockPhotoCount
_ICQMockVideoCount
v24@?0@"PLiCPLTransferProgress"8@"NSError"16
photoCount
TQ,N,V_photoCount
videoCount
TQ,N,V_videoCount
accountStore
T@"ACAccountStore",R,V_accountStore
Add iCloud Storage
You are using 4.6 GB of your 5 GB iCloud storage. Add more storage to keep using iCloud Photo Library, iCloud Mail, and Backup.
Manage Storage
iCloud Storage is Full
iCloud Photo Library, iCloud Mail, and Backup are no longer updating. Add more storage to keep using iCloud.
[ENG: LOCAL SAMPLE UI]
btnActParams
buyQueryParam
&autoSelectPlan=true&minReqdSize=1000000
upgrade
Upgrade Storage
DISMISS_ALERT
cancelled
alertAckAction
quotaAckEventURL
dataClass
Quota
SAMPLE ALERT: Upgrade your storage to keep using iCloud Mail, iCloud Drive, and Backup.
iCloud Storage is Almost Full
_ICQCachedBuddyOfferInternal
isBuddyOffer
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
%$PhotosCount
%$VideosCount
%$TotalPhotosVideosCount
v24@?0@"_ICQPhotosInfo"8@"NSError"16
v24@?0@"_ICQDeviceInfo"8@"NSError"16
T@"NSString",&,N,V_key
wordsToReplace
T@"NSDictionary",&,N,V_wordsToReplace
bundleId
T@"NSString",&,N,V_bundleId
com.apple.iCloudQuotaDaemon.ICQFollowup
badgeApp
ICQLinkAction
ICQLinkParameters
success
failure: 
lockMesg
altLockMesg
altLockMessage
enableDirectAction
links
T@"NSArray",&,N,V_links
noteTitle
T@"NSString",&,N,V_noteTitle
noteMessage
T@"NSString",&,N,V_noteMessage
altNoteMessage
T@"NSString",&,N,V_altNoteMessage
noteActivateLink
T@"ICQLink",&,N,V_noteActivateLink
noteClearLink
T@"ICQLink",&,N,V_noteClearLink
forAccountGroup
TB,N,GisForAccountGroup,V_forAccountGroup
zeroAction
TB,N,GisZeroAction,V_zeroAction
TB,N,V_badgeApp
T@"NSURL",R,N
ICQOfferTypeUnknown
ICQOfferTypeCloudStorageUpgrade
ICQOfferTypePhotosOptimizeEnable
ICQOfferTypePhotosCloudEnable
ICQOfferTypePhotosCloudUpgradeEnable
ICQOfferTypeUpdateBillingInfo
ICQOfferTypeBuddyCloudStorageUpgrade
ICQOfferTypeBuddyPhotosCloudUpgradeEnable
Invoice
buddyUpgradeDrive
buddyUpgradeWithICPL
retrievalDate
failedToFetchFromServer
failureDetails
ICQDaemonOfferPersistedNotificationName
ErrorDomain
ErrorCode
ErrorDescription
None
invalid
persistenceDomain
persistenceKey
defaultCallbackInterval
Td,R,N
_mutablePlaceholderPersistanceDictionary
T@"NSMutableDictionary",R,N
T@"NSDate",&,N,V_retrievalDate
Td,N,V_callbackInterval
expirationDate
T@"NSDate",R,N
expired
TB,R,N,GisExpired
accountAltDSID
T@"NSString",&,N,V_accountAltDSID
T@"NSDictionary",&,N,V_serverDictionary
TB,N,V_failedToFetchFromServer
T@"NSDictionary",&,N,V_failureDetails
_mutablePersistenceDictionary
_cachedQuotaAvailable
_persistenceDictionary
_placeholderPersistenceDictionary
X-MMe-Timezone
Accept-Language
X-Apple-Cloud-Bkp-Id
X-Apple-Cloud-Bkp-Time
UniqueDeviceID
X-Mme-Device-Id
POST
application/json
Content-Type
false
optimizeEnabled
isDefaultOffer
FALSE
TRUE
OPEN_EXT_LINK
UPGRADE_ICLOUD_STORAGE
OPEN_FAMILY_SETUP
OPEN_PAYMENT_UPDATE
OPEN_ICLOUD_BACKUP
DISP_STORAGE_UPGRADE
LAUNCH_REMOTE_UI
UPGRADE_ICLOUD_STORAGE_OSLO
UPGRADE_ENABLE_ICPL_OSLO
buyQueryParams
linkURL
openUrl
link
BtnTitle
BtnActParams
BtnId
btnVisible
com.apple.mobilemail
com.apple.cloud.mail
com.apple.cloud.docs
com.apple.cloud.photos
com.apple.__mobilebackup__
com.apple.cloud.backup
com.apple.icloud.quota.ICQ-Adopt
__WILDCARD__
ICQDaemonAlertLock
ICQDaemonAlertQueue
 (but not on lock screen)
com.apple.springboard
daemonOffer
T@"ICQDaemonOffer",R,N,V_daemonOffer
showOnlyInSpringboard
TB,N,V_showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
TB,N,V_handleActionsBeforeCallingCompletionHandler
v32@?0@8@16^B24
com.apple.iCloudQuota
core
missing
notificationInfo
iTunesAccountExists
showAlert
showBanner
appContextInfo
container
appContextInfo: appId:%@ offerInfo: 
app-independent offerInfo: 
planDetails: 
quotaInfo: 
got response
no response
lockScreenInfo
T@"NSDictionary",&,N,V_lockScreenInfo
T@"NSDictionary",&,N,V_followUpInfo
mesgTemplates
T@"NSDictionary",&,N,V_mesgTemplates
titleTemplates
T@"NSDictionary",&,N,V_titleTemplates
followupMesgTemplates
T@"NSDictionary",&,N,V_followupMesgTemplates
followupTitleTemplates
T@"NSDictionary",&,N,V_followupTitleTemplates
Insufficient
Full
Device
Billing
_ICQCachedDefaultOfferInternal
fail
account
T@"ACAccount",&,N,V_account
T@"ACAccountStore",&,N,V_accountStore
buttonId
T@"NSString",C,N,V_buttonId
T@"NSString",&,N,V_offerId
ICQDaemonOfferConditions
NSCopying
_ICQAlertSpecification
ICQDebugging
_ICQHelperFunctions
ICQDaemonOfferManager
ICQDaemonOfferStub
ICQDaemonOfferStubs
ICQTestingStubs
ICQLink
ICQOfferUpdateController
ICQDaemonOffer
Internal
Debugging
_ICQPhotosInfo
_ICQAccountManager
ICQDaemonBuddyOffer
ICQDaemon
_ICQDeviceInfo
_ICQFollowupSpecification
ICQDaemonPersisted
Convenience
ICQRequestProvider
ICQDaemonAlert
_ICQDetailFollowupSpecification
ICQDaemonDefaultOffer
ICQDaemonOfferCriteria
ICQOfferUpdateRequestContext
initWithCurrentConditions
init
isDeviceStorageAlmostFull
setDeviceStorageAlmostFull:
isPhotosCloudEnabled
setPhotosCloudEnabled:
isPhotosOptimizeEnabled
setPhotosOptimizeEnabled:
photosLibrarySize
setPhotosLibrarySize:
isSimulatedDeviceStorageAlmostFull
objectForKey:
longLongValue
sharedDaemonOfferManager
simulatedPhotosLibrarySize
date
timeIntervalSinceNow
numberWithDouble:
getPhotosLibrarySizeWithCompletion:
getPhotosLibraryUploadSizeWithCompletion:
sharedPhotoLibrary
getPhotoCount:videoCount:
numberWithUnsignedLong:
sharedInstance
stringWithFormat:
objectForKeyedSubscript:
getLibrarySizes:
getLibrarySizesFromDB:handler:
setSimulatedDeviceStorageAlmostFull:
persistedObject
_cachedQuotaAvailable
retrievalDate
compare:
currentConditions
hasPhotosCloudEverBeenEnabled
photosLibraryUploadSize
photosVideosCount
isDeviceStorageNearLowButNotLow
isCachedCloudQuotaAlmostFullOrFull
copyWithZone:
.cxx_destruct
_deviceStorageAlmostFull
_photosCloudEnabled
_photosOptimizeEnabled
_photosLibrarySize
setServerDict:
linkForButtonIndex
numberWithInteger:
setObject:forKey:
removeObjectForKey:
setDefaultButtonIndex:
setLink:forButtonIndex:
count
objectAtIndexedSubscript:
setLink:forButtonIndex:defaultButton:
setTitle:
setMessage:
setAltMessage:
setDisableLockScreenAlert:
_setLinks:defaultIndex:
initWithServerDictionary:
linkForButtonIndex:
serverDict
title
message
altMessage
lockScreenTitle
setLockScreenTitle:
lockScreenMessage
setLockScreenMessage:
altLockScreenMessage
setAltLockScreenMessage:
disableLockScreenAlert
defaultButtonIndex
setLinkForButtonIndex:
_serverDict
_disableLockScreenAlert
_title
_message
_altMessage
_lockScreenTitle
_lockScreenMessage
_altLockScreenMessage
_defaultButtonIndex
_linkForButtonIndex
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
copy
boolValue
isEqualToString:
daemonOfferStubsDictionarySample
stringByReplacingOccurrencesOfString:withString:
containsString:
whitespaceCharacterSet
componentsSeparatedByCharactersInSet:
hasPrefix:
defaultValueForKey:
defaultKeyExists:
currentLocale
setLocale:
setNumberStyle:
setUsesGroupingSeparator:
setMaximumFractionDigits:
stringFromNumber:
dataUsingEncoding:
base64EncodedStringWithOptions:
replaceWordsIn:with:
stringFromTemplates:key:
findPlaceholdersInString:
defaultStringValueForKey:
parseTemplates:
isServerMockingEnabled
getStringFromNumber:
base64EncodeString:
initWithAccountManager:
defaultSessionConfiguration
initWithIdentifier:
set_appleIDContext:
sessionWithConfiguration:
initWithClientIdentifier:
daemonBuddyOfferDictionaryForAccount:completion:
_initWithAccount:serverDictionary:
chooseFirstStub
serverDictionary
_persistenceDictionary
_fetchDictionaryForAccount:quotaKey:stub:notificationID:contextDictionary:completion:
isValidForAccount:
isExpired
notificationID
length
_postDaemonOfferChangedDueToPushDarwinNotification
_postFollowupForDaemonOffer:completion:
_fetchDaemonOfferForAccount:stub:notificationID:completion:
chooseFirstDefaultStub
_reconsiderOffersForAccount:isForBuddy:choiceHandler:completion:
_processPushNotificationDictionary:completion:
aa_isPrimaryAccount
_teardownCachedOffersAndNotify:
expirationDate
earlierDate:
aa_primaryAppleAccount
initWithAccount:
addCommonHeadersToRequest:
renewCredentialsForAccount:force:reason:completion:
bundleForClass:
localizedStringForKey:value:table:
URLWithString:
actionWithLabel:url:
arrayWithObjects:count:
setInformativeText:
setActivateAction:
setFrequency:
setWithArray:
setOptions:
setUniqueIdentifier:
setGroupIdentifier:
setDisplayStyle:
_storageManagementFollowupActions
setActions:
_storageManagementFollowupNotification
setNotification:
_storageManagementFollowupItem
postFollowUpItem:error:
clearPendingFollowUpItemsWithUniqueIdentifiers:error:
shouldDirectToStorageManagement
setShouldDirectToStorageManagement:
_postStorageManagementFollowup
_clearStorageManagementFollowup
accountManager
accountStore
clearPersistedObject
clearFollowupWithController:completion:
_fetchDaemonOfferStubsForAccount:isForBuddy:completion:
lowercaseString
ckBackupDeviceID
stringValue
aa_personID
isEqual:
_sanitizedNotificationDictionary:account:
_addSampleAlert
shouldShowForDaemonOffer:
_showDaemonAlertForOffer:notificationDictionary:store:account:completion:
_updateOffer:buttonId:info:account:accountStore:completion:
urlForQuotaKey:
attemptSetRequest:toPostWithJSONDict:
addEntriesToPostDictionary:forStub:
isEnabledForDataclass:
enabledDataclassesForAccount:
containsObject:
_mockFetchDictionaryForAccount:quotaKey:stub:notificationID:contextDictionary:completion:
_useFetchOffersDataDirectly
URLForAccount:quotaKey:
requestWithURL:cachePolicy:timeoutInterval:
dictionaryWithObjects:forKeys:count:
mutableCopy
_addEntriesToPostDictionary:forStub:
daemonOfferSource
setValue:forHTTPHeaderField:
deviceOffersContainType:
_isBackupEnabledForAccount:
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
_attemptSetRequest:toPostWithJSONDict:
_addCommonHeadersToRequest:account:
allHTTPHeaderFields
HTTPBody
initWithData:encoding:
JSONObjectWithData:options:error:
dataTaskWithRequest:completionHandler:
resume
defaultManager
offerId
numberWithLongLong:
aa_lastKnownQuota
isEqualToNumber:
reload
aa_setLastKnownQuota:
saveVerifiedAccount:withCompletionHandler:
isBuddyOffer
isDefaultOffer
_updateQuotaForAccount:withServerDictionary:
setNotificationID:
persistWithCompletion:
_placeholderOfferForAccount:isForBuddy:error:
_initWithAccount:error:
dismissAlert
level
alertSpecification
initWithDaemonOffer:
showAlertWithCompletion:
aa_altDSID
setAccount:
setButtonId:
setOfferId:
setZeroAction:
initWithSession:
performOfferUpdateWithContext:completion:
dismissAlertsWithNotificationID:
clearFollowupsWithCompletion:
_teardownCachedBuddyOffer
_teardownCachedOfferAndNotify:
initWithDictionary:
chooseBuddyStub
chooseStub
_daemonOfferStubsDictionaryForAccount:isForBuddy:completion:
followupSpecification
postFollowupWithController:completion:
_postOfferType:isForBuddy:
chooseBuddyStubForOfferType:
chooseStubForOfferType:
daemonOfferDictionaryForAccount:options:completion:
processPushNotificationDictionary:completion:
teardownOffersForAccount:completion:
soonestOfferOrStubExpirationDate
renewCredentialsWithCompletion:
startDirectingToStorageManagement
stopDirectingToStorageManagement
reconsiderOffersWithCompletion:
_pushNotificationDictionary
updateOfferForAccount:offerId:buttonId:info:completion:
postOfferType:
postBuddyOfferType:
forcePostFollowup
teardownCachedOffer
teardownCachedBuddyOffer
teardownCachedOffers
isBuddyOfferEnabled
setBuddyOfferEnabled:
setSimulatedPhotosLibrarySize:
isLegacyDeviceStorageLevelNotificationEnabled
setLegacyDeviceStorageLevelNotificationEnabled:
sharedURLSession
_sharedURLSession
_followUpController
_accountManager
uppercaseString
hasSuffix:
rangeOfString:
substringToIndex:
containerWithIdentifier:
fetchCurrentDeviceIDWithCompletionHandler:
criteria
conditionsWhenChosen
setConditionsWhenChosen:
_conditionsWhenChosen
integerValue
serverStubs
_chooseStubFromServerStubs:conditions:
firstObject
buddyStubs
defaultStubs
_initServerStubsFromServerDictionary
setServerDictionary:
sortedArrayWithOptions:usingComparator:
_isValidServerStubs:key:
sortedServerStubs:
enumerateObjectsUsingBlock:
isSatisfiedByConditions:
persistenceKey
chooseStubForConditions:
chooseBuddyStubForConditions:
chooseDefaultStub
chooseDefaultStubForConditions:
_serverStubs
_buddyStubs
_defaultStubs
_chooseStubFromServerStubs:offerType:
defaultWorkspace
openSensitiveURL:withOptions:
linkWithText:options:action:parameters:
initWithText:options:action:parameters:
initWithText:action:parameters:
debugDescription
text
options
action
parameters
valueForKey:
initWithString:
performActionWithOptions:
performAction:parameters:options:
linkWithText:action:parameters:
remoteUIURL
performAction
setRemoteUIURL:
_text
_options
_action
_parameters
_remoteUIURL
buttonId
isZeroAction
account
dictionary
setObject:forKeyedSubscript:
_initSubclassFromServerDictionary
_mutablePersistenceDictionary
internalAlertSpecification
setInternalAlertSpecification:
internalFollowupSpecification
setInternalFollowupSpecification:
_notificationID
_offerId
_internalAlertSpecification
_internalFollowupSpecification
componentsSeparatedByString:
stringFromByteCount:countStyle:
substitutionForPlaceholderKey:outIsBelowMin:
substitutionsForPlaceholderKeys:checkIfBelowMin:outIsMissingSubstitution:
stringWithPlaceholderFormat:alternateString:
placeholderExistsInString:
defaultPlaceholderKeys
placeholderKeysInString:fromKeys:
stringWithPlaceholderFormat:substitutions:
appendString:
substringFromIndex:
alertSpecificationForAlertKey:
substitutionsForPlaceholderKeys:
stringWithPlaceholderFormat:
alertSpecificationDictionarySampleForLevel:
setForAccountGroup:
errorWithDomain:code:userInfo:
mockCount:
setPhotoCount:
setVideoCount:
systemPhotoLibrary
notUploadedPhotosCount
notUploadedVideosCount
getInfoWithCompletion:
photoCount
videoCount
_photoCount
_videoCount
initWithAccountStore:
_accountStore
alertSpecificationSampleForLevel:
_mutablePlaceholderPersistanceDictionary
initWithLocaleIdentifier:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
stringFromDate:
icq_serverFriendlyString
setBundleId:
templateKeyForPhotos:video:
setKey:
numberWithUnsignedLongLong:
setWordsToReplace:
defaultDeviceInfoWithBundleId:
getInfoWithBundleId:completion:
getInfoWithBundleId:
wordsToReplace
bundleId
_key
_wordsToReplace
_bundleId
setBadgeApp:
followupActionForLink:needsFlow:
setUserInfo:
links
noteActivateLink
noteTitle
noteMessage
altNoteMessage
noteClearLink
followupActionForLink:
setClearAction:
setExtensionIdentifier:
isForAccountGroup
displayStyle
badgeApp
groupIdentifier
postFollowUpItem:completion:
clearPendingFollowUpItemsWithUniqueIdentifiers:completion:
setLinks:
setNoteTitle:
setNoteMessage:
setAltNoteMessage:
setNoteActivateLink:
postFollowupWithController:
setNoteClearLink:
_forAccountGroup
_zeroAction
_badgeApp
_links
_noteTitle
_noteMessage
_altNoteMessage
_noteActivateLink
_noteClearLink
_placeholderPersistenceDictionary
persistenceDomain
defaultCenter
postNotificationName:object:
callbackInterval
dateByAddingTimeInterval:
accountAltDSID
doubleValue
dateWithTimeIntervalSinceReferenceDate:
defaultCallbackInterval
setRetrievalDate:
_callbackIntervalFromServerObject:
setCallbackInterval:
setAccountAltDSID:
_initWithAccountAltDSID:error:
setFailedToFetchFromServer:
domain
code
localizedDescription
setFailureDetails:
numberWithBool:
_placeholderObject
clearPersistedObjectWithCompletion:
persistObject
failedToFetchFromServer
failureDetails
_failedToFetchFromServer
_retrievalDate
_callbackInterval
_accountAltDSID
_serverDictionary
_failureDetails
propertyList:isValidForFormat:
propertiesForDataclass:
aa_addBasicAuthorizationHeaderWithAccount:preferUsingPassword:
ak_addClientInfoHeader
systemTimeZone
abbreviation
preferredLanguages
ak_addCountryHeader
stringTimeOfLastBackup
setHTTPMethod:
dataWithJSONObject:options:error:
setHTTPBody:
_account
rangeOfString:options:range:
substringWithRange:
addObjectsFromArray:
setName:
dealloc
lock
daemonOffer
unlock
showOnlyInSpringboard
handleActionsBeforeCallingCompletionHandler
_handleLink:
setShowOnlyInSpringboard:
setHandleActionsBeforeCallingCompletionHandler:
_alertLock
_alertState
_cfAlert
_alertSema
_alertQueue
_showOnlyInSpringboard
_handleActionsBeforeCallingCompletionHandler
_daemonOffer
enumerateKeysAndObjectsUsingBlock:
allKeys
setLockScreenInfo:
setFollowUpInfo:
setTitleTemplates:
setMesgTemplates:
setFollowupTitleTemplates:
setFollowupMesgTemplates:
titleTemplates
mesgTemplates
titleWithKey:
mesgWithKey:
followupTitleTemplates
followupMesgTemplates
lockScreenInfo
followUpInfo
_lockScreenInfo
_followUpInfo
_mesgTemplates
_titleTemplates
_followupMesgTemplates
_followupTitleTemplates
setAccountStore:
_buttonId
@16@0:8
B16@0:8
v24@0:8@?16
v20@0:8B16
@24@0:8^{_NSZone=}16
v24@0:8@16
v16@0:8
@"NSNumber"
@24@0:8@16
@24@0:8q16
v32@0:8@16q24
v36@0:8@16q24B32
v32@0:8@16Q24
q16@0:8
v24@0:8q16
@"NSDictionary"
@"NSString"
@"NSMutableDictionary"
@32@0:8@16@24
B24@0:8@16
v40@0:8@16@24@?32
v32@0:8@16@?24
Q16@0:8
v36@0:8@16B24@?28
v32@0:8@16@24
B32@0:8@16@24
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
@36@0:8@16B24@28
v44@0:8@16B24@?28@?36
v28@0:8@16B24
@"NSURLSession"
@"FLFollowUpController"
@"_ICQAccountManager"
@"ICQDaemonOfferConditions"
@"NSArray"
@32@0:8@16q24
@40@0:8@16q24@32
@48@0:8@16q24q32@40
B40@0:8q16@24q32
B24@0:8q16
@"NSURL"
@"_ICQAlertSpecification"
@"_ICQFollowupSpecification"
@32@0:8@16^B24
@36@0:8@16B24^B28
v24@0:8Q16
@"ACAccountStore"
@32@0:8Q16Q24
@28@0:8@16B24
@"ICQLink"
d16@0:8
d24@0:8@16
v24@0:8d16
@"NSDate"
@"ACAccount"
B24@0:8@?16
@"NSLock"
^{__CFUserNotification=}
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
@"ICQDaemonOffer"
