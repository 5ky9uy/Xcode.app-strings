?UUUUUU
Unknown descriptor type
Device does not support requested limits
Device does not support requested features
Validation failure.
CommandEncoder::clearBuffer(): offset > buffer.size
v16@?0@"<MTLCommandBuffer>"8
Function creation error: %@
Pipeline state creation error: %@
Default queue
Default queue for device %s
com.apple.WebKit.WebGPU.CaptureFrame
v12@?0i8
com.apple.WebKit.WebGPU.ToggleCaptureFirstFrame
%@.gputrace
Failed to start GPU frame capture at path %@, error %@
Success starting GPU frame capture at path %@
Device lost.
popErrorScope() failed validation.
v16@?0@?<v@?>8
No adapters present
Unknown power preference
Adapter is internally null
Device does not support WebGPU
/AppleInternal/Library/BuildRoots/2e989dad-a909-11ed-91d1-ae4f7fab34c4/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.4.Internal.sdk/usr/local/include/wtf/CompletionHandler.h
WTF::Detail::CallableWrapper<WTF::CompletionHandler<void (WGPUQueueWorkDoneStatus)>, void, WGPUQueueWorkDoneStatus>::CallableWrapper(CompletionHandler<Out (In...)> &&) [CallableType = WTF::CompletionHandler<void (WGPUQueueWorkDoneStatus)>, Out = void, In = <WGPUQueueWorkDoneStatus>]
getBindGroup() generated layout
MSL compilation error: %@
_inT
/AppleInternal/Library/BuildRoots/2e989dad-a909-11ed-91d1-ae4f7fab34c4/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.4.Internal.sdk/usr/local/include/wtf/text/StringConcatenate.h
static unsigned int WTF::StringTypeAdapter<const unsigned char *>::computeLength(const LChar *)
/Library/Caches/com.apple.xbs/Sources/WebGPU_Sim/Source/WebGPU/WGSL/GlobalVariableRewriter.cpp
void WGSL::RewriteGlobalVariables::collectGlobals()
WGSL::RewriteGlobalVariables::IndexSet WGSL::RewriteGlobalVariables::requiredGroups()
__ArgumentBufer_
__ArgumentBuferT_
true
false
bool
function
private
read
read_write
return
storage
struct
uniform
workgroup
write
array
bf16
const
enum
handle
premerge
regardless
typedef
unless
using
void
while
#include <metal_stdlib>
using namespace metal;
 [[stage_in]]
const device 
vertex_index
[[vertex_id]]
position
[[position]]
[[vertex]]
[[fragment]]
[[compute]]
[[buffer(
[[id(
[[user(loc
[[attribute(
array<
float
unsigned
vec<
matrix<
Expected a 
, but got a 
Trying to parse a GlobalDecl, expected 'var', 'fn', or 'struct'.
group
binding
location
builtin
vertex
compute
fragment
Unknown attribute. Supported attributes are 'group', 'binding', 'location', 'builtin', 'vertex', 'compute', 'fragment'.
Tried parsing a type and it did not start with an identifier
Expected one of '(', a literal, or an identifier
vec2
vec3
vec4
mat2x2
mat2x3
mat2x4
mat3x2
mat3x3
mat3x4
mat4x2
mat4x3
mat4x4
Expected one of 'function'/'private'/'storage'/'uniform'/'workgroup'
Expected one of 'read'/'write'/'read_write'
Not a valid statement
Tried to parse the left-hand side of an assignment and failed
Invalid
IntegerLiteral
IntegerLiteralSigned
IntegerLiteralUnsigned
DecimalFloatLiteral
HexFloatLiteral
Identifier
ReservedWord
backFaceStencil
UTF8String
depthAttachment
UUIDString
maxBufferLength
addCompletedHandler:
newCommandQueue
argumentBuffersSupport
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
arrayWithCapacity:
pushDebugGroup:
blitCommandEncoder
setBufferIndex:
bytes
setDestination:
colorAttachments
setLodMaxClamp:
commandTypes
setPixelFormat:
contents
setScissorRect:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
setStoreAction:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
setVertexBuffer:offset:atIndex:
count
supportsFamily:
counterSets
URLByAppendingPathComponent:
buffers
UUID
layouts
absoluteString
members
addObject:
newComputePipelineStateWithDescriptor:options:reflection:error:
array
present
attributes
setArrayLength:
bufferStructType
setConstantValue:type:withName:
caseInsensitiveCompare:
setDestinationAlphaBlendFactor:
commandBufferWithDescriptor:
setLodMinClamp:
commit
setSampleCount:
copy
setStorageMode:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
setTextureType:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
setVisibilityResultMode:offset:
countByEnumeratingWithState:objects:count:
texture
dataType
defaultManager
dictionaryWithObjects:forKeys:count:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
encodedLength
endEncoding
executeCommandsInBuffer:withRange:
fillBuffer:range:value:
fragmentBindings
frontFaceStencil
functionConstantsDictionary
hasUnifiedMemory
index
indirectRenderCommandAtIndex:
insertDebugSignpost:
isCapturing
isDepthWriteEnabled
isEqualToString:
length
maxFragmentBufferBindCount
maxVertexBufferBindCount
name
newArgumentEncoderWithArguments:
newBufferWithBytes:length:options:
newBufferWithLength:options:
newCounterSampleBufferWithDescriptor:error:
newDepthStencilStateWithDescriptor:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:error:
newLibraryWithSource:options:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newSamplerStateWithDescriptor:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
nextDrawable
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndexedSubscript:
objectForKey:
outputURL
popDebugGroup
renderCommandEncoderWithDescriptor:
renderPassDescriptor
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
resolveCounterRange:
sampleBufferAttachments
sampleCount
setAccess:
setAlphaBlendOperation:
setAlphaToCoverageEnabled:
setArgumentBuffer:offset:
setBlendColorRed:green:blue:alpha:
setBlendingEnabled:
setBuffer:offset:atIndex:
setCaptureObject:
setClearColor:
setClearDepth:
setClearStencil:
setCommandTypes:
setCompareFunction:
setComputeFunction:
setConstantValues:
setCounterSet:
setCullMode:
setDataType:
setDepth:
setDepthAttachmentPixelFormat:
setDepthCompareFunction:
setDepthPlane:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthWriteEnabled:
setDestinationRGBBlendFactor:
setDevice:
setDrawableSize:
setEndOfFragmentSampleIndex:
setEndOfVertexSampleIndex:
setErrorOptions:
setFastMathEnabled:
setFormat:
setFragmentBuffer:offset:atIndex:
setFragmentFunction:
setFramebufferOnly:
setFrontFacingWinding:
setHeight:
setIndex:
setInheritBuffers:
setInheritPipelineState:
setInputPrimitiveTopology:
setLabel:
setLevel:
setLoadAction:
setMagFilter:
setMaxAnisotropy:
setMaxFragmentBufferBindCount:
setMaxTotalThreadsPerThreadgroup:
setMaxVertexBufferBindCount:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setMutability:
setName:
setOffset:
setOutputURL:
setRAddressMode:
setRasterSampleCount:
setReadMask:
setRenderPipelineState:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setRgbBlendOperation:
setSAddressMode:
setSampleBuffer:
setSamplerState:atIndex:
setSlice:
setSourceAlphaBlendFactor:
setSourceRGBBlendFactor:
setStartOfFragmentSampleIndex:
setStartOfVertexSampleIndex:
setStencilCompareFunction:
setStencilFailureOperation:
setStepFunction:
setStride:
setSupportArgumentBuffers:
setSupportIndirectCommandBuffers:
setTAddressMode:
setTexture:
setTexture:atIndex:
setUsage:
setVertexDescriptor:
setVertexFunction:
setViewport:
setVisibilityResultBuffer:
setWidth:
setWriteMask:
sharedCaptureManager
size
startCaptureWithDescriptor:error:
stencilAttachment
stopCapture
storageMode
stringWithFormat:
temporaryDirectory
type
useResource:usage:stages:
vertexBindings
vertexDescriptor
writeMask
/'-!
1-----------------
-------------------
------
----
  ""$$&&((**,,
 "$&(*,.02468:<>@BDFHJLNPR
TVXZ\^`bdfhjlnprtvxz|~
;WcLm}
$-6?HQZcl
7DQ^
-H^z
7DQ^
-H^z
$-6?HQZ]behmpsx}
Unknown descriptor type
Device does not support requested limits
Device does not support requested features
Validation failure.
CommandEncoder::clearBuffer(): offset > buffer.size
v16@?0@"<MTLCommandBuffer>"8
Function creation error: %@
Pipeline state creation error: %@
Default queue
Default queue for device %s
com.apple.WebKit.WebGPU.CaptureFrame
v12@?0i8
com.apple.WebKit.WebGPU.ToggleCaptureFirstFrame
%@.gputrace
Failed to start GPU frame capture at path %@, error %@
Success starting GPU frame capture at path %@
Device lost.
popErrorScope() failed validation.
v16@?0@?<v@?>8
No adapters present
Unknown power preference
Adapter is internally null
Device does not support WebGPU
/AppleInternal/Library/BuildRoots/2e989dad-a909-11ed-91d1-ae4f7fab34c4/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.4.Internal.sdk/usr/local/include/wtf/CompletionHandler.h
WTF::Detail::CallableWrapper<WTF::CompletionHandler<void (WGPUQueueWorkDoneStatus)>, void, WGPUQueueWorkDoneStatus>::CallableWrapper(CompletionHandler<Out (In...)> &&) [CallableType = WTF::CompletionHandler<void (WGPUQueueWorkDoneStatus)>, Out = void, In = <WGPUQueueWorkDoneStatus>]
getBindGroup() generated layout
MSL compilation error: %@
_inT
/AppleInternal/Library/BuildRoots/2e989dad-a909-11ed-91d1-ae4f7fab34c4/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.4.Internal.sdk/usr/local/include/wtf/text/StringConcatenate.h
static unsigned int WTF::StringTypeAdapter<const unsigned char *>::computeLength(const LChar *)
/Library/Caches/com.apple.xbs/Sources/WebGPU_Sim/Source/WebGPU/WGSL/GlobalVariableRewriter.cpp
void WGSL::RewriteGlobalVariables::collectGlobals()
WGSL::RewriteGlobalVariables::IndexSet WGSL::RewriteGlobalVariables::requiredGroups()
__ArgumentBufer_
__ArgumentBuferT_
true
false
bool
function
private
read
read_write
return
storage
struct
uniform
workgroup
write
array
bf16
const
enum
handle
premerge
regardless
typedef
unless
using
void
while
#include <metal_stdlib>
using namespace metal;
 [[stage_in]]
const device 
vertex_index
[[vertex_id]]
position
[[position]]
[[vertex]]
[[fragment]]
[[compute]]
[[buffer(
[[id(
[[user(loc
[[attribute(
array<
float
unsigned
vec<
matrix<
Expected a 
, but got a 
Trying to parse a GlobalDecl, expected 'var', 'fn', or 'struct'.
group
binding
location
builtin
vertex
compute
fragment
Unknown attribute. Supported attributes are 'group', 'binding', 'location', 'builtin', 'vertex', 'compute', 'fragment'.
/AppleInternal/Library/BuildRoots/2e989dad-a909-11ed-91d1-ae4f7fab34c4/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator16.4.Internal.sdk/usr/local/include/wtf/Expected.h
void std::experimental::__expected_detail::__expected_terminate()
Tried parsing a type and it did not start with an identifier
Expected one of '(', a literal, or an identifier
vec2
vec3
vec4
mat2x2
mat2x3
mat2x4
mat3x2
mat3x3
mat3x4
mat4x2
mat4x3
mat4x4
Expected one of 'function'/'private'/'storage'/'uniform'/'workgroup'
Expected one of 'read'/'write'/'read_write'
Not a valid statement
Tried to parse the left-hand side of an assignment and failed
Invalid
IntegerLiteral
IntegerLiteralSigned
IntegerLiteralUnsigned
DecimalFloatLiteral
HexFloatLiteral
Identifier
ReservedWord
backFaceStencil
UTF8String
depthAttachment
UUIDString
maxBufferLength
addCompletedHandler:
newCommandQueue
argumentBuffersSupport
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
arrayWithCapacity:
pushDebugGroup:
blitCommandEncoder
setBufferIndex:
bytes
setDestination:
colorAttachments
setLodMaxClamp:
commandTypes
setPixelFormat:
contents
setScissorRect:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
setStoreAction:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
setVertexBuffer:offset:atIndex:
countByEnumeratingWithState:objects:count:
supportsFamily:
dataType
URLByAppendingPathComponent:
buffers
UUID
layouts
absoluteString
members
addObject:
newComputePipelineStateWithDescriptor:options:reflection:error:
array
present
attributes
setArrayLength:
bufferStructType
setConstantValue:type:withName:
caseInsensitiveCompare:
setDestinationAlphaBlendFactor:
commandBufferWithDescriptor:
setLodMinClamp:
commit
setSampleCount:
copy
setStorageMode:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
setTextureType:
count
setVisibilityResultMode:offset:
counterSets
texture
defaultManager
dictionaryWithObjects:forKeys:count:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
encodedLength
endEncoding
executeCommandsInBuffer:withRange:
fillBuffer:range:value:
fragmentBindings
frontFaceStencil
functionConstantsDictionary
hasUnifiedMemory
index
indirectRenderCommandAtIndex:
insertDebugSignpost:
isCapturing
isDepthWriteEnabled
isEqualToString:
length
maxFragmentBufferBindCount
maxVertexBufferBindCount
name
newArgumentEncoderWithArguments:
newBufferWithBytes:length:options:
newBufferWithLength:options:
newCounterSampleBufferWithDescriptor:error:
newDepthStencilStateWithDescriptor:
newFunctionWithDescriptor:error:
newFunctionWithName:
newFunctionWithName:constantValues:error:
newLibraryWithSource:options:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newSamplerStateWithDescriptor:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
nextDrawable
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndexedSubscript:
objectForKey:
outputURL
popDebugGroup
renderCommandEncoderWithDescriptor:
renderPassDescriptor
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
resolveCounterRange:
sampleBufferAttachments
sampleCount
setAccess:
setAlphaBlendOperation:
setAlphaToCoverageEnabled:
setArgumentBuffer:offset:
setBlendColorRed:green:blue:alpha:
setBlendingEnabled:
setBuffer:offset:atIndex:
setCaptureObject:
setClearColor:
setClearDepth:
setClearStencil:
setCommandTypes:
setCompareFunction:
setComputeFunction:
setConstantValues:
setCounterSet:
setCullMode:
setDataType:
setDepth:
setDepthAttachmentPixelFormat:
setDepthCompareFunction:
setDepthPlane:
setDepthStencilPassOperation:
setDepthStencilState:
setDepthWriteEnabled:
setDestinationRGBBlendFactor:
setDevice:
setDrawableSize:
setEndOfFragmentSampleIndex:
setEndOfVertexSampleIndex:
setErrorOptions:
setFastMathEnabled:
setFormat:
setFragmentBuffer:offset:atIndex:
setFragmentFunction:
setFramebufferOnly:
setFrontFacingWinding:
setHeight:
setIndex:
setInheritBuffers:
setInheritPipelineState:
setInputPrimitiveTopology:
setLabel:
setLevel:
setLoadAction:
setMagFilter:
setMaxAnisotropy:
setMaxFragmentBufferBindCount:
setMaxTotalThreadsPerThreadgroup:
setMaxVertexBufferBindCount:
setMinFilter:
setMipFilter:
setMipmapLevelCount:
setMutability:
setName:
setOffset:
setOutputURL:
setRAddressMode:
setRasterSampleCount:
setReadMask:
setRenderPipelineState:
setResolveDepthPlane:
setResolveLevel:
setResolveSlice:
setResolveTexture:
setRgbBlendOperation:
setSAddressMode:
setSampleBuffer:
setSamplerState:atIndex:
setSlice:
setSourceAlphaBlendFactor:
setSourceRGBBlendFactor:
setStartOfFragmentSampleIndex:
setStartOfVertexSampleIndex:
setStencilCompareFunction:
setStencilFailureOperation:
setStepFunction:
setStride:
setSupportArgumentBuffers:
setSupportIndirectCommandBuffers:
setTAddressMode:
setTexture:
setTexture:atIndex:
setUsage:
setVertexDescriptor:
setVertexFunction:
setViewport:
setVisibilityResultBuffer:
setWidth:
setWriteMask:
sharedCaptureManager
size
startCaptureWithDescriptor:error:
stencilAttachment
stopCapture
storageMode
stringWithFormat:
temporaryDirectory
type
useResource:usage:stages:
vertexBindings
vertexDescriptor
writeMask
