@(#)PROGRAM:AdID  PROJECT:SearchAds-1
v8@?0
DPIDReconcileOperation
DPIDAccountSubscribeOperation
DPIDAccountUnsubscribeOperation
DPIDDeleteSubscriptionOperation
DPIDSyncOperation
DPIDFetchRecordOperation
DPIDFetchChangesOperation
DPIDSaveOperation
DPIDRemoveOperation
DPIDDeleteContainerOperation
Unexpected DPIDOperationType.
DPIDLogging
[%@] ERROR: There was an error getting the account info of the user: %@
[%@] Resetting the local container due to Manatee state change from %@ to %@
v24@?0@"CKAccountInfo"8@"NSError"16
v16@?0@"NSNotification"8
DPIDZone
DPIDRecordID
DPIDRecordIDForATP
com.apple.ap.adprivacyd.DPIDBackupFlow
Changing the record's iCloud Identifier: %@ => %@
DPID Reconcile state is %lu. Caller started at %@. Current flow started at %@. %@ continue.
Will
Wont
Starting DPID Reconcile.
[%@] We have gotten into an impossible state (%lu). We are going to crash now. Goodbye.
-[ADClientDPIDManager reconcileDPID:]
ADClientDPIDManager.m
false
DPID reconcile: Couldn't create CKContainer
DPID reconcile with iCloud
Creating the backup DPID flow.
Starting to wait for the account status.
DPID reconcile (started at %@): accountStatusWithCompletionHandler called after %f seconds: accountStatus %ld, error %@
The fallback flow is actively being run right now. Maybe we should extend the delay?
The DPID manager was not able to find the CloudKit Account Status in time. An error has already been propagated.
Falling back to insecure container due to manatee available (%@) or error: %@
privateContainer matched what we needed. isPrivateContainerSecure is %d
Container is secure.
Container is NOT secure.
DPID was previously stored as Manatee.
DPID was not previously stored as Manatee.
Container type does not match DPID type. Creating a new DPID locally
Container type matches DPID type.
iCloud container supportsDeviceToDeviceEncryption: %@
The backup flow started at %@ has been fired. Checking to see if we need to run.
We are still waiting for the iCloud Account Status. Continue with backup flow and provide an error so the DPID can be resolved later.
Something went wrong while attempting to get the iCloud Account Status.
We are no longer waiting for the account status (%lu).
DPID reconcile - iCloud account not available accountStatus %ld
Done reconciling the DPID.
DPID reconcile - iCloud account not subscribed for push notifications. 
DPID sync failed with error: %@
v16@?0@"NSError"8
DPID reconcile - iCloud account already subscribed for push notifications. 
DPID handlePushNotification
CKDPIDSyncState
DPID reset
Removing DPID Locally
Not removing DPID from iCloud
Resetting DPID Locally
Not resetting DPID in iCloud
isLoggedIntoiTunes: DSID is NULL
Primary account AltDSID %@
Could not get account for altDSID %@
_ADClientDPIDStorageContainerKey
No DPID record found in keychain, creating new entry
ADClientDPIDRecordKey
iAdInternalLogging
Error writing DPID to keychain: %d
Error serializing property list. Error %lu.
-secure
-sandbox
ADClientiCloudSubscribedAccountsKey
Could not read from keychain for %@. Error %ld
No data to read from keychain for key %@.
Nothing previously stored in keychain for key %@
Error writing ADClientiCloudSubscribedAccountsKey to keychain: %d
Added subscribed iCloud account to keychain
startOperation: %@
    operationsInProgress: %@
******** Attempt to remove operation that wasn't present %@
finishOperation: %@
com.apple.iad-cloudkit-secure
Created secure privateContainer %@ %@. isPrivateContainerSecure is %d.
com.apple.iad-cloudkit
Created insecure privateContainer %@ %@. isPrivateContainerSecure is %d;
Setting DPID to %@.
setupLocalDPID:
Storing NEW DPID locally. %@.
DPID Already exists, not creating one %@
Removing DPID locally.
Keeping NULL DPID %@
DPID-
shouldSyncDPID: No iCloud Account, not syncing
shouldSyncDPID:
iCloudDSID:
iTunesDSID:
Can Generate DPID:
iTunes Logged In:
Not Restricted By Apple:
Personalized Ads Enabled:
[%@] Retrying DPID Sync
Retry: Failed to sync DPID in iCloud with error: %@
[%@] Retrying DPID Save
[%@] Retrying DPID Remove
Retry: Failed to remove DPID record from iCloud with error: %@
[%@] Retrying DPID Fetch
Retry: Failed to fetch DPID from iCloud with error: %@
v28@?0@"NSString"8@"NSError"16B24
Deleting inaccessible encrypted container
We were unable to delete the encrypted zone in enough time. (Started at %@)
Deleted DPID zone %@ with error %@.
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Beginning DPID Subscription Installation
Unable to set up iCloud subscription due to missing iCloud container
We were unable to Create a CloudKit zone to create a subscription in enough time. (Started at %@)
Created DPID zone %@ with error code %ld %@ 
com.apple.AdSheetPhone.DPID.push.subscription
-[ADClientDPIDManager setupiCloudSubscription:]_block_invoke_2
subscription
We were unable to finish the CloudKit subscription process on time. (Started at %@)
Created DPID subscription %@ 
Failed To create DPID subscription %@ with error %@.
v24@?0@"CKSubscription"8@"NSError"16
Failed To create DPID zone with error %@. Handling CloudKit error.
Beginning DPID Teardown action
Unable to tear down iCloud subscription due to missing iCloud container
fetchAllSubscriptionsWithCompletionHandler subscriptions %@ error %@.
Saved DPID zone: savedRecordZones %@ deletedRecordZoneIDs %@ with error %@.
Deleted DPID subscription %@ with error %@.
Deleted DPID zone: savedRecordZones %@ deletedRecordZoneIDs %@ with error %@.
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
[%@] Found a migrated DPID record!
[%@] Found a legacy DPID record!
DPID
Reading encrypted DPID %@
Reading unencrypted DPID %@
The error is real. No DPID found in iCloud. Returning nil DPID.
fetchDPIDfromiCloud: Personalized Ads is disabled, not fetching
Attempting to fetch the DPID from iCloud.
Unable to fetch iCloud DPID due to missing iCloud container
We were unable to fetch the record in time. (Started at %@)
iCloud returned an error fetching records: %@ code %ld. Checking if there is an actual error.
iCloud Returned no error but failed to fetch record, please file a radar.
v24@?0@"NSDictionary"8@"NSError"16
Beginning DPID Remove action
Unable to remove iCloud DPID due to missing iCloud container
Failed to remove DPID record in iCloud with error: %@
Removed DPID record in iCloud for current user.
[%@] handleCloudKitError. error code %ld
We need to wait and try again later because of CKErrorInternalUnsyncedKeychain
We have attempted to use an encrypted container on a non HSA2 account CKErrorInternaliCDPRequired, please file a radar.
Correctly identified as cloudkit domain
Got error code as CKErrorPrivateMissingManateeIdentity
Got error code as CKErrorPartialFailure. Need to get the exact reason for partial failure.
Found error code as CKErrorPrivateMissingManateeIdentity
Incorrectly identified domain. Domain is %@
We need to delete and re-create the zone due to CKErrorPrivateMissingManateeIdentity
Error resetting Encrypted zone %@, please file a radar.
Beginning DPID Save action
Unable to save iCloud DPID due to missing iCloud container
DPIDRecord
Writing encrypted DPID %@
Writing unencrypted DPID %@
Failed to save DPID record to iCloud with error: %@
Updated DPID record in iCloud
syncDPIDWithiCloud: Downloaded DPID %@
[%@] No migration required. Done syncing with iCloud.
[%@] The DPID requires migration to the new iCloud container
syncDPIDWithiCloud: Uploaded new DPID %@
iAdIDLogging
Generated ID %@ for DSID %@ and client type %ld(%@)
Resetting IDs for DSID record %@.
Created ID %@ for DSID %@ and client type %@(%@)
v32@?0@"NSNumber"8@"ADIDRecord"16^B24
Error resetting DPID: %@
Content-Type
application/json
[%@]: Invalid value for bag key %@: %@ (class: %@)
[%@]: iTunes DSID mismatch. Active DSID: %@. Record DSID: %@. Cannot request Segments.
Non-string key in additional headers: %@
Non-string value in additional headers: %@
headers
body
POSTing to Jingle (%@): %@
Jingle response is nil.
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
Jingle response for %@ received with status %ld
Jingle response body:
apple-internal-install
ForceU13SegmentResponse
ForceT13SegmentResponse
ForceU18SegmentResponse
u13flag
t13flag
u18flag
Jingle authentication error.
v12@?0B8
Unknown HTTP response code: %ld
LATDLogging
[%@]: Error %ld in Jingle response for %@: %@
dsid
ioflag
gflag
oo-timestamp
com.apple.ap.adprivacyd.forceReconcile
com.apple.private.ap.idmanager
Rejected ID manager client with PID %d lacking the appropriate entitlement (%@).
XPC connection invalidated. Lost connection from ID manager client.
Accepted connection from ID manager client.
Delaying forceReconcile for %lu seconds.
Error Description
Times that a forceReconcile have been requested: %@
NONE
com.apple.ap.adprivacyd.reconcile
WARNING: Check On Task has been disabled. If you see this outside of unit tests, Please file a radar...
ClearMonthlyResetCount
[%@]: Received clear monthly reset count notification
[%@ setDSID]: DSID already set to %@.
[%@]: Failed to save record for current DSID %@
[%@]: Request to set DSID to %@
[%@]: DSID already set to %@, skipping.
kADiAdIDStorageKey
Error deleting DSID records: %d
APIDAccountsSettings.IDAccountsRecord
Error deleting APIDAccountsSettings: %d
Error deleting DPID: %d
Active record changed. Posting %@
kADIDManager_ChangedNotification
v32@?0@8Q16^B24
Aborting save, no DSID record.
com.apple.adprivacyd [%@ save] starting
iAdIDRecordsVersion
kADiAdIDManager_RecordsKey
Overwriting existing DSID record for %@.
Writing new record for DSID %@.
kADiADIDMonthResetKey
APIDAccountsSettings.monthlyIDResetCount
monthlyIDResetCount is %d.
Error writing DSID record to keychain.
Failed to save DSID record for %@ to keychain with error %ld: %@
[%@] Error %ld saving the record to the keychain. We will retry...
[%@]: Error %ld reconciling DSID record: %@
IDs after failed reconcile:
[%@]: Successfully reconciled DSID record for DSID %@
Final reconciled IDs:
[%@]: DSID changed from %@ to %@ during reconcile process. Posting handleAccountChange to work queue.
ToroLogging
Running post-reconcile operations
weakSelf was nil in retrieveSegmentDataFromiTunes
[%@]: Not reconciling DPID nor sending segments to Ad Platforms. This is not an Ad-enabled locality (dsid: %@ storefront: %@)
weakSelf was nil in reconcileDPID
[%@]: Error reconciling DPID - %@
v20@?0@"NSError"8B16
[%@]: DSID record reconcile already in progress.
Reconcile in progress
com.apple.adprivacyd [%@ reconcile]
weakSelf is nil in setDSID completionHandler
[%@]: weakSelf was nil in reconcile
[%@]: Failed to get or create record for DSID %@
[%@]: Set current DSID to %@. Beginning reconciliation process.
ERROR
APIDAccountsSettings.storefront
[%@ handleAccountChange]: iTunesAccountDSID is %@, current DSID is %@. iCloudAccountDSID is %@, current iCloud DSID is %@. Account has %@been reconciled once.
not 
[%@ handleAccountChange]: Current iTunes account has changed from %@ to %@.
Error deleting all records: %d
[%@ handleAccountChange]: Current iCloud account has changed from %@ to %@.
[%@ handleAccountChange]: Current DSID record has never been through reconcile.
[%@] handleAccountChange: Current accounts (iTunes: %@, iCloud: %@) have not changed.
[%@]: Not rescheduling reconcile, MAX_RETRY_COUNT of %d exceeded.
kBackgroundTaskProperty_RetryCount
[%@]: Rescheduling DSID record reconcile to run again in %lld seconds (%@).
[%@]: Received request to run background task %@.
[%@] ERROR: Unable to mark the task as being continue. Please file a radar...
[%@]: Finished task %@ with error %@
[%@] ERROR: Unable to mark the task as finished. Please file a radar...
[%@]: Checking in on task %@ - PLIST Launch
[%@]: Reconcile task already scheduled: %@
Exiting due to SIGTERM
com.apple.queue.adplatforms.adTracking
com.apple.notifyd.matching
com.apple.ap.adprivacyd.iTunesActiveAccountDidChangeNotification
Received Account Changed Notification
com.apple.ap.adprivacyd.iTunesActiveStorefrontDidChangeNotification
Received Storefront Changed Notification
adprivacyd handling internal notification %@
com.apple.ap.adprivacyd.deviceKnowledge
com.apple.ap.adprivacyd.launch
adprivacyd launched in response to %s
com.apple.ap.adprivacyd.canceltasks
adprivacyd handling internal notification %s
v16@?0@"NSObject<OS_xpc_object>"8
Received a Notification from Account Plugin that the Current Account Changed
Received a notification that the storefront changed. Reloading the Bag.
acknowledgedPersonalizedAdsVersion
[%@]: Personalized Ads onboarding acknowledgement is being migrated
personalizedAdsMigrated
[%@]: Personalized Ads has not been migrated. Deriving the value from LAT
ADPersonalizedAdsKeychainKey
Error deleting PA from keychain: %d
ForceNonAdLocale
[%@]: isAdEnabledLocality is forced OFF by internal default.
LatestPAVersion
AppStorePAAvailable
This country is Toro enabled
This country is %@
being onboarded for Toro
not Toro enabled
com.apple.news
MCRestrictions.plist
MCWhitelistedLocales
This country %@ News enabled
is not
StocksEnabled
com.apple.stocks
Stocks was set to enabled but is no longer installed. Disabling...
This country %@ Stocks enabled
Checking if config data has been saved to promotedcontentd key
ForceExpireConfiguration
Force config expiration notification received.
iAdServerRequestLogging
[%@]: Not refreshing configuration because this is not an Ad-enabled locality
Configuration Data has not yet expired. (%d > %d)
Configuration Message is already in flight.
Received an ADConfigurationResponse: %@
There was an error writing the Configuration Response to the keychain: %d
ADConfigurationDidChangeNotification
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Expiring and Refreshing the configuration message now.
com.apple.AdSheetPhone.push
DPID Couldn't create push connection
DPID Received public token "%@" on connection %@
DPID Received per-topic push token "%@" for topic "%@" identifier "%@" on connection %@
DPID APS Push received: %@ %@
Handled push notification returned an eror: %@ payload: %@
Handled push notification successfully. payload: %@
com.apple.icloud-container.
[%@] handleAccountChange: iTunes account change notification has already been dispatched to ADIDManager. Short-circuiting.
com.apple.adprivacyd [%@ handleAccountChange]
Error %ld while handling account change: %@
Successfully handled account change.
isSponsoredAdsEnabled
isSponsoredAdsEnabledForAdTrackingd
latestPersonalizedAdsConsentVersion
adprivacyd
Performing the Authentication Returned Error: %@
Unable to get the 'isSponsoredAdsEnabled' status from the bag. Error: %@
Unable to get the 'isSponsoredAdsEnabledForAdTrackingd' status from the bag. Error: %@
Unable to get 'latestPersonalizedAdsConsentVersion' from the bag. Error: %@
Error: Key for AMS bag lookup is empty. Cannot return a value.
Unable to get the '%@' key for Jingle from the bag. Error: %@. Falling back to value in user defaults.
Unable to get Jingle URL for request type '%@' from user defaults. File a radar if you see this message!
[%@]: Not sending Personalized Ads status to AdPlatforms - invalid argument. %@ is not the current DSID (%@).
[%@]: Not sending Personalized Ads status to AdPlatforms - request already in-flight.
[%@]: Not sending ADOptOutRequest to AdPlatforms for what is now the old iAdID: %@.
[%@]: Sending Opted-%@ Personalized Ads status to AdPlatforms for logged out iTunes user (DSID 0) - Backend needs knowledge of iAdID's Personalized Ads status.
[%@]: Not sending Personalized Ads status to AdPlatforms - Personalized Ads is on with no DPID. FILE A RADAR.
[%@]: Personalized Ads status for %@ (%d) has never been sent to AdPlatforms. Sending now.
[%@]: Not sending Personalized Ads status to AdPlatforms - Personalized Ads status has not changed (%d).
[%@]: Sending current Personalized Ads status (%d) for %@ to AdPlatforms.
[%@] Received opt-out response: %@
[%@] Error sending segments to AdPlatforms for %@ %@. Error %ld - %@
com.apple.ap.adprivacyd.opt-out
com.apple.private.iad.opt-in-control
Rejected ADTrackingTransparency connection client with PID %d lacking the appropriate entitlement (%@).
XPC connection invalidated. Lost connection from ADTrackingTransparency client.
XPC connection interrupted. Lost connection from ADTrackingTransparency client.
Accepted connection from ADTrackingTransparency client.
There was an sending Personalized Ads to Ad Platforms. Error: %@. Please file a radar.
There was an error reconciling. Error: %@. Please file a radar.
[%@] ERROR: completion block not passed in
Personalized Ads has been toggled. Device is going from OPTED IN to OPTED OUT.
Personalized Ads has been toggled. Device is going from OPTED OUT to OPTED IN.
[%@]: Ad Enabled Locality is forced OFF by internal default.
[%@]: Skipping segment retrieval request. Request for %@ already in-flight.
[%@]: Skipping segment retrieval request. DSID %@ is not logged into iTunes.
[%@]: Skipping segment retrieval request. Current active record DSID %@ does not match request DSID %@.
[%@]: Forcing segment retrieval request for DSID %@ because ADReconcileOp_RetrieveSegments flag is set
[%@]: Skipping segment retrieval request. Segment data for DSID %@ has not expired.
[%@]: Retrieving segment data for DSID %@ because we don't have any.
[%@]: Segments for DSID %@ expired %d seconds ago (%@). Asking Jingle for new segments.
[%@]: Forcing segment retrieval request for DSID %@ because 'ignoreTimestamps' was specified.
[%@]: Segment update response has token %@, but was expecting token %@.
[%@]: Segment update response has DSID %@, but current DSID is %@. Ignoring.
ForceSegmentDataRetrieval
[%@]: The Force Segment Data Retrieval switch is enabled - overriding forceSegments parameter.
[%@]: The current account is: EDU: %d. Managed: %d. U13: %d. T13: %d. U18: %d. Unknown Age: %d.
[%@ retrieveSegmentData]: Forcing 'ioflag = 1'.
v16@?0@"ADJingleRequest"8
[%@ retrieveSegmentData]: Segment update returned nil request. An update was not even attempted.
[%@ retrieveSegmentData]: Received segment update response for DSID %@
[%@ retrieveSegmentData] Error making segment request: %@
[%@ retrieveSegmentData]: Segment update returned empty response body. Segments not updated.
[%@ retrieveSegmentData]: Error %ld decoding segment update response: %@
[%@ retrieveSegmentData]: Successfully decoded segment update response for DSID %@:
activeRecord == nil. Please file a Radar!
[%@ retrieveSegmentData]: %@
status
[%@ retrieveSegmentData]: The Jingle Weak Token for this user has expired. No action is possible by iAd, the user must log into the account.
[%@ retrieveSegmentData]: Jingle response code %d indicates a malformed request. Please file a Radar!
[%@ retrieveSegmentData]: Unhandled Jingle response code %d. Please file a Radar!
[%@]: %@ key not present in segmentData
[%@]: demographicData returned is not a dictionary!
[%@]: No gender data present.
[%@]: Only new gender data present.
[%@]: Only old gender data present.
[%@]: Both old and new gender data is present in segmentData. This is an error.
[%@]: Demographic data is: %@
last-served
[%@ retrieveSegmentData]: %@ is a restricted account, ignoring segments from Jingle.
[%@ retrieveSegmentData]: Overriding unchanged segments - local segment timestamp (%d) is older than last-served timestamp (%d)
[%@]: Segments have changed for opted-in user. Updating lastSegmentServedTimestamp to %d
[%@]: Ignoring segment change for opted-out user.
payload
For DSID: %@ both old and new gender data is present in segmentData: %@. This is an error.
[%@ retrieveSegmentData]: Error %ld decoding segment dictionary %@: %@
[%@ retrieveSegmentData]: Jingle did not return segment payload for DSID %@
no-segment
EnableCustomPayload
[%@]: Sending segment data to AdPlatforms because AD_ENABLE_CUSTOM_SEGMENT_PAYLOAD is enabled.
[%@]: Skipping sending segment data to AdPlatforms. Segment update for %@ is in-flight.
[%@]: Skipping sending segment data to AdPlatforms. Segment retrieval request to Jingle for %@ is in-flight.
[%@]: Skipping sending segment data to AdPlatforms. Current active record DSID %@ does not match request DSID %@.
[%@]: Skipping sending segment data to AdPlatforms. Device is opted-in but DPID for %@ is NULL.
[%@]: Sending segment data to AdPlatforms - we have not sent segments before for DSID %@.
[%@]: Sending segment data to AdPlatforms - maximum update interval of %d seconds exceeded.
[%@]: Sending segment data to AdPlatforms because ADReconcileOp_SendSegmentUpdate is set.
[%@]: Skipping sending segment data to AdPlatforms. Segment data has not changed (lastSegmentServedTimestamp = %d < lastSentSegmentDataTimestamp %d).
[%@]: Skipping sending segment data to AdPlatforms, it was previously sent at %d and hasn't changed since %d.
[%@]: Sending segment data to AdPlatforms because segment data changed (lastSegmentServedTimestamp = %d > lastSentSegmentDataTimestamp %d).
[%@]: Sending segment data to AdPlatforms because segment data changed (segmentDataTimestamp = %d > lastSentSegmentDataTimestamp %d).
00000000-0000-0000-0000-000000000000
[%@ sendSegmentDataToAdPlatforms]: NOT including segment data in ADSegmentUpdateRequest because -
isRestrictedByApple: %@
personalizedAdsEnabled: %@
isPlaceholderAccount: %@
{"t":6, "o":0}
[%@ sendSegmentDataToAdPlatforms]: Forcing segment data to %@
[%@] Using Custom Segment Payload from Internal Settings: %@
nil (LAT Enabled)
Active DSID record segments set to: %@
[%@] Received segment update response: %@
InstalledProfiles
com.apple.adplatforms.logging
com.apple.ap.adprivacyd.ADLoggingProfileMonitor.init
PrivacyLogging
self == nil in [ADLoggingProfileMonitor _fetchInstalledProfilesAndListen]. Profile changes will not be monitored.
Error %d reading installed profile data
Error converting installed profile data to NSSet: %@
Reading installed profile list from MDM
Received profile list changed notification
Error writing installed profiles to keychain: %@
Ad Platforms logging profile has been removed.
Rolling all identifiers in response to logging profile removal.
There was an error reconciling after logging profile removed. Error: %@. Please file a radar.
Existing profile list
Installed profiles:
Removed profiles:
[%@] WARNING: Check On Task has been disabled. If you see this outside of unit tests, Please file a radar...
DeviceKnowledgeLogging
[%@]: Received request to run background task %@
[%@] ERROR: We should not be running the task twice at the same time.
[%@]: This is not an Ad enabled country. Skipping Device Knoweldge.
[%@] ERROR: Unable to inform the system we need to run Device Knowledge asynchronously. Please file a radar...
[%@] Taking an XPC transaction for %@
Device Knowledge In Progress
[%@] ERROR Unable to inform the system we have completed the Device Knowledge task. Please file a radar...
[%@] Releasing an XPC transaction for %@
[%@]: Checking in on task: %@
[%@]: First checkin for Device Knowledge task. Rescheduling...
[%@]: Device Knowledge task already scheduled: %@
DeviceKnowledgeScheduleOverride
[%@]: Overriding reschedule period to %f seconds
[%@] Scheduling device knowledge update to run.
Unable to make Segment Request for DSID %@. Has activeDSIDRecord and Network Connection: %@
[%@] There is no active DSID Record.
Received a response to Jingle request %@, but the request has already timed out; this response will be ignored.
[%@]: Initiating Jingle authentication request.
[%@]: Successfully authenticated account. The account is: %@
[%@]: FILE A RADAR IMMEDIATELY: We have an active account but could not authenticate it.
[%@]: Jingle authentication request failed, ACAccount is (null).
ADClientDPIDManager
Private
ADJingleRequest
ADJingleSegmentRequest
ADJingleOptOutRequest
ADIDManager_XPC
ADIDManagerService
NSXPCListenerDelegate
NSObject
BackgroundTaskDelegate
ADAdTrackingSchedulingManager
APSConnectionDelegate
ADAMSBagManager
AMSBagConsumer
ADPersonalizedAdsStatusManager
ADAppTracking_XPC
ADAppTrackingService
ADSegmentDataManager
ADLoggingProfileMonitor
ADDeviceKnowledgeManager
ADJingleRequestManager
raise:format:
init
defaultCenter
mainQueue
workQueue
secureContainer
stringWithFormat:
supportsDeviceToDeviceEncryption
setPrivateContainer:
addOperationWithBlock:
accountInfoWithCompletionHandler:
addObserverForName:object:queue:usingBlock:
setSandboxEnvironment:
initWithZoneName:ownerName:
setZoneID:
zoneID
initWithRecordName:zoneID:
setRecordIDLegacy:
setRecordID:
setOperationsInProgress:
setQualityOfService:
setDpidReconcileState:
setDpidReconcileStartDate:
sharedInstance
activeDSIDRecord
iCloudDSID
isEqualToString:
setICloudDSID:
dpidReconcileState
dpidReconcileStartDate
doubleDateTimeAsString
startOperation:
idForClientType:
isRestrictedByApple
finishOperation:
updateActiveRecordICloudDSID
setupLocalDPID
shouldSyncDPID
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
date
backupFlowForCloudKitWorkAtTime:with:
accountStatus
timeIntervalSinceDate:
canContinueProcessing:
setSupportsDeviceToDeviceEncryption:
insecureContainer
resolveAccountVsStoredManateeState:andError:with:
isDPIDManatee
setDPID:
continueReconcileWithAccountStatus:andError:with:
initWithCode:andDescription:
iCloudAccountSubscribed
syncDPIDWithiCloud:
setupiCloudSubscription:
retryIfNeeded:
prepareForPushNotification
setInteger:forKey:
reconcile:
canGenerateDPID
removeDPIDfromiCloud:
generateDPID
DPID
saveDPIDtoiCloud:completionHandler:
DSID
iCloudAccount
altDSIDForAccount:
primaryiCloudAccountAltDSID
length
authKitAccountWithAltDSID:
securityLevelForAccount:
isPersonalizedAdsEnabled
mutableCopy
initWithFlags:
setReconcileOperations:
dictionary
setObject:forKeyedSubscript:
removeObjectForKey:
dataWithPropertyList:format:options:error:
code
userInfo
iCloudAccountIdentifier
stringByAppendingString:
sandboxEnvironment
subscriptionIdentifier
propertyListWithData:options:format:error:
containsObject:
addObject:
removeObject:
operationsInProgress
countByEnumeratingWithState:objects:count:
integerValue
DPIDOperationTypeToString:
componentsJoinedByString:
numberWithUnsignedInteger:
operationQueueLog
indexOfObject:
removeObjectAtIndex:
initWithContainerIdentifier:environment:
initWithContainerID:
containerWithIDString:
setSourceApplicationBundleIdentifier:
isEqual:
writeDPIDtoKeychain
setID:forClientType:
setIsDPIDManatee:
removeIDForClientType:
UUID
UUIDString
isLoggedIntoiTunes
devicePersonalizedAdsEnabled
integerForKey:
fetchDPIDfromiCloud:
privateContainer
privateCloudDatabase
arrayWithObjects:count:
initWithRecordZonesToSave:recordZoneIDsToDelete:
qualityOfService
setiCloudAccountSubscribed:
firstObject
setModifyRecordZonesCompletionBlock:
addOperation:
createErrorForPrivateDB:completionHandler:
initWithZoneID:
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
saveSubscription:completionHandler:
handleCloudKitError:
count
subscriptionID
deleteSubscriptionWithID:completionHandler:
fetchAllSubscriptionsWithCompletionHandler:
Log:
encryptedValuesByKey
objectForKeyedSubscript:
recordID
recordIDLegacy
initWithRecordIDs:
conformDPIDToUseWithRecord:legacyRecord:
setFetchRecordsCompletionBlock:
initWithRecordsToSave:recordIDsToDelete:
setModifyRecordsCompletionBlock:
domain
objectForKey:
allValues
resetEncryptedZone:
initWithRecordType:recordID:
setSavePolicy:
reconcileDPID:
handlePushNotification:completionHandler:
resetDPID:
primaryiCloudAccountSecurityLevel
teardowniCloudSubscription:
isTest
isPrivateContainerSecure
setIsPrivateContainerSecure:
updateInProgress
setUpdateInProgress:
.cxx_destruct
_backupFlowQueue
_isTest
_isPrivateContainerSecure
_updateInProgress
_sandboxEnvironment
_supportsDeviceToDeviceEncryption
_dpidReconcileState
_dpidReconcileStartDate
_zoneID
_recordID
_recordIDLegacy
_privateContainer
_qualityOfService
_DPID
_operationsInProgress
T@"CKRecordZoneID",&,N,V_zoneID
T@"CKRecordID",&,N,V_recordID
T@"CKRecordID",&,N,V_recordIDLegacy
T@"CKContainer",&,N,V_privateContainer
TB,N,V_isPrivateContainerSecure
Tq,N,V_qualityOfService
T@"NSString",&,N,V_DPID
TB,N,V_updateInProgress
T@"NSMutableArray",&,N,V_operationsInProgress
TB,N,V_sandboxEnvironment
TB,N,V_supportsDeviceToDeviceEncryption
TQ,V_dpidReconcileState
T@"NSDate",&,V_dpidReconcileStartDate
TB,R,N,V_isTest
ADIDRecords
numberWithInteger:
setDirty:
hasIDForClientType:
setLastSentSegmentDataTimestamp:
removeAllObjects
setID:
intValue
enumerateKeysAndObjectsUsingBlock:
toServerTime
setPersonalizedAdsTimestamp:
setLastSentPersonalizedAdsTimestamp:
resetiAdIDs
retrieveSegmentData:forceSegments:completionHandler:
sendSegmentDataToAdPlatforms:completionHandler:
sendPersonalizedAdsStatusToAdPlatforms:completionHandler:
segmentData
accountIsT13
accountIsU18
accountIsU13
lastSentPersonalizedAdsStatus
personalizedAdsTimestamp
lastSentSegmentDataTimestamp
segmentDataTimestamp
lastSentPersonalizedAdsTimestamp
lastSegmentServedTimestamp
ensureiAdIDs
resetiAdIDsAndDPID:
isActiveRecord
retrieveSegmentDataFromiTunes:
sendSegmentDataToAdPlatforms:
sendPersonalizedAdsStatusToAdPlatforms:
T@"NSString",&,D,N
TB,D,N
accountAgeUnknown
Ti,D,N
iAdIDBeforeReset
numberWithInt:
incrementToken
bagKey
retrieveJingleRequestURLFromAMSBagWithPartialityKey:
absoluteString
setError:
completionHandler
iTunesAccountDSID
setRequestEncoding:
iTunesStoreAccount
setAccount:
setUrlKnownToBeTrusted:
requestHeaders
setValue:forKey:
requestWithMethod:URL:parameters:
requestBody
setHTTPBody:
jingleTimeoutInterval
setTimeoutInterval:
setObject:forKey:
JSONObjectWithData:options:error:
jsonString
data
copy
setResponseBody:
responseHeaders
setResponseHeaders:
responseStatusCode
setStatusCode:
handleJingleResponse
sendJingleRequest:withCompletion:
addFinishBlock:
token
statusCode
responseBody
initWithData:encoding:
boolForKey:
dataWithJSONObject:options:error:
send
authenticateUser:
error
localizedDescription
defaultSessionConfiguration
initWithConfiguration:delegate:delegateQueue:
finishWithResult:error:
resultWithError:
dataTaskWithRequest:completionHandler:
resume
finishTasksAndInvalidate
init:withCompletion:
setToken:
setDSID:
setCompletionHandler:
setBagKey:
setRequestBody:
setRequestHeaders:
_token
_responseBody
_responseHeaders
_error
_statusCode
_DSID
_completionHandler
_bagKey
_requestBody
_requestHeaders
T@"NSNumber",&,N,V_token
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_bagKey
T@"NSData",&,N,V_requestBody
T@"NSMutableDictionary",&,N,V_requestHeaders
T@"NSData",&,V_responseBody
T@"NSDictionary",&,V_responseHeaders
T@"NSError",C,V_error
Tq,V_statusCode
T@"NSString",C,N,V_DSID
dataUsingEncoding:
init:forceSegments:withCompletion:
numberWithDouble:
init:state:timestamp:completionHandler:
array
initWithMachServiceName:
setDelegate:
valueForEntitlement:
boolValue
processIdentifier
setExportedObject:
forceReconcile:
interfaceWithProtocol:
setExportedInterface:
setInvalidationHandler:
delayForNewForceReconcileRequest
description
removeObjectsInArray:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
listener
setListener:
reconcileArray
setReconcileArray:
_forceReconcileQueue
_listener
_reconcileArray
T@"NSXPCListener",&,V_listener
T@"NSMutableArray",&,N,V_reconcileArray
registerTaskDelegate:forRequestID:
unitTesting
checkOnTask:
setMonthlyResetArray:
save
reloadRecords:
initWithDSID:serializedRecord:version:
setActiveDSIDRecord:
setSegmentDataTimestamp:
postNotificationName:object:
dateWithTimeIntervalSinceNow:
timeIntervalSinceReferenceDate
monthlyResetArray
doubleValue
enumerateObjectsUsingBlock:
arrayWithArray:
dirty
idAccountsDictionaryRepresentation
initWithObjectsAndKeys:
valueForKey:
dictionaryRepresentation
numberWithUnsignedLong:
shouldSendNotification
notifyActiveRecordChanged
setNotificationRequired:
saveAndNotifyIfNecessary
scheduleReconciliation:
logIDs:
segmentRetrievalInterval
handleAccountChange
reset
removeWatchdogWithToken:
finishedReconciling:withError:
isAdEnabledLocality
iTunesStorefront
createNewWatchdog:withTimer:
refreshConfiguration:
isSet:
updateAccountData:
reloadStorefront:
setDSID:completionHandler:
lastJingleAccountStatus
cancelBackgroundTask:
initWithID:
setPropertyAsInteger:value:
setDelay:
setRequireClassCData:
setRequireBuddyComplete:
setNextReconcileTimestamp:
delay
nextReconcileTimestamp
dateFromServerTime:
localDateTimeAsString
addBackgroundTask:
requestIdentifier
continueTask
checkForLateReconcile
finishTask
deleteRecords:
incrementMonthlyResetCount
performOperationWhenNotReconciling:
performOperationAfterReconcile:
handleAccountChange:
cancelPendingReconcile
runTask:
checkOnTask:activity:
reconcileInProgress
reconcileOperations
initialize
UTF8String
scheduleDeviceDataProcessing:
migratePersonalizedAdsFromLAT
migratePersonalizedAdsOnboarding
handleConfiguration
pushEnable
removeObserver:
dealloc
initWithSuiteName:
sharedConnection
effectiveBoolValueForSetting:
setBoolValue:forSetting:
setBool:forKey:
retrieveLatestPersonalizedAdsConsentVersionFromAMSBag
isSearchOrSegmentEnabled
isNewsOrStocksEnabledLocality
retrieveIsSponsoredAdsEnabledValueFromAMSBag
retrieveIsSponsoredAdsEnabledValueForAdTrackingdFromAMSBag
applicationProxyForIdentifier:
bundleURL
URLByAppendingPathComponent:
dataWithContentsOfURL:
currentLocale
appState
isInstalled
forceExpiration
configurations
configurationExpirationTime
_shouldSaveConfig
saveConfig
isConfigRequestInFlight
setIsConfigRequestInFlight:
defaultConfigurationServerURL
initWithData:
buildConfigurationDictionary:
saveProxyURL
handleRequest:serverURL:responseHandler:
setConfigurationExpirationTime:
mainBundle
bundleIdentifier
executablePath
lastPathComponent
initWithEnvironmentName:namedDelegatePort:queue:
topic
pushConnection
setEnabledTopics:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
isSearchAdsEnabled
latestPersonalizedConsentVersion
currentBundleID
pushDisable
storeFrontNotifyToken
setStoreFrontNotifyToken:
accountChangedNotifyToken
setAccountChangedNotifyToken:
setPushConnection:
loggingProfileMonitor
setLoggingProfileMonitor:
_isConfigRequestInFlight
_storeFrontNotifyToken
_accountChangedNotifyToken
_pushConnection
_loggingProfileMonitor
T@"ADLoggingProfileMonitor",&,N,V_loggingProfileMonitor
T@"<NSObject>",&,N,V_storeFrontNotifyToken
T@"<NSObject>",&,N,V_accountChangedNotifyToken
T@"APSConnection",&,N,V_pushConnection
TB,N,V_isConfigRequestInFlight
addBagKey:valueType:
setHARLoggingEnabled:
bagKeySet
bagSubProfile
bagSubProfileVersion
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
setAuthenticationType:
setAllowServerDialogs:
initWithAccount:options:
performAuthentication
createBagForSubProfile
valueWithError:
URLForKey:
stringForKey:
URLWithString:
setString:forKey:
T@"AMSBagKeySet",R,N
T@"NSString",R,N
authenticateAccountThroughAMSOperation:
isPlaceholderAccount
setStatusChangeTimestamp:
setTransmitTimestamp:
encryptedIDForClientType:
setIAdID:
timezone
setTimezone:
setOptedOutStatus:
defaultServerURL
setLastSentPersonalizedAdsStatus:
setSendingPersonalizedAdsToAdPlatforms:
sendingPersonalizedAdsToAdPlatforms
pendingJingleRequestToken
setPendingJingleRequestToken:
_sendingPersonalizedAdsToAdPlatforms
_pendingJingleRequestToken
T@"NSNumber",C,N,V_pendingJingleRequestToken
TB,N,V_sendingPersonalizedAdsToAdPlatforms
setPersonalizedAds:withCompletionHandler:
getAccountLevelSwitchDisabledReasonWithHandler:
shouldDisplayPersonalizedAdsUI:
shouldAppStoreDisplayAdvertisingScreen:
latestPersonalizedAdsConsentVersion:
setInterruptionHandler:
reconcileDataForRecord:
setIsPersonalizedAdsEnabled:
sendPersonalizedAdsAndReconcileDataForRecord:
requestInFlight
setRequestInFlight:
_requestInFlight
TB,N,V_requestInFlight
segmentRetrievalInProgress
retrieveSegmentData:forceSegments:ignoreTimestamps:completionHandler:
shouldSendSegmentRequest:ignoreTimestamps:
educationModeEnabled
isManagedAppleID
setIdentifierForAdvertisingAllowed:
handleJingleSegmentResponse:activeRecord:completionHandler:
makeSegmentRequest:forceSegments:withCompletion:
checkTokenAndDSID:
setLastJingleAccountStatus:
setAccountAgeUnknown:
handleSuccessfulJingleSegmentResponse:dsidRecord:completionHandler:
setLastSegmentServedTimestamp:
verifyGenderInSegmentData:
setSegmentData:
setAccountIsU13:
setAccountIsT13:
setAccountIsU18:
addAccountType:
segmentUpdateInProgress
maxSegmentSendInterval
shouldSendSegmentDataToAdPlatforms:
initWithUUIDString:
setAdvertisingIdentifier:
setAdvertisingIdentifierMonthResetCount:
isRestrictedByEU_GDPR
setSegmentInfo:
customJinglePayload
setIsFirstPartyIdentifier:
setITunesRefreshTime:
setUpdateSentTime:
osVersionAndBuild
setOsVersionAndBuild:
localeIdentifier
setLocaleIdentifier:
addDeviceMode:
populateAccountTypeFields:
addAccountState:
handleSegmentUpdateResponse:error:completionHandler:
hasSegmentRefreshIntervalInSeconds
segmentRefreshIntervalInSeconds
setSegmentRetrievalInterval:
hasMaxSegmentUpdateIntervalInSeconds
maxSegmentUpdateIntervalInSeconds
setMaxSegmentSendInterval:
retrieveSegmentDataIgnoringTimestamps:forceSegments:completionHandler:
setSegmentUpdateInProgress:
_segmentUpdateInProgress
TB,N,V_segmentUpdateInProgress
TB,R,N
_fetchInstalledProfilesAndListen
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
setProfileIdentifiers:
profileIdentifiers
fetchInstalledProfileIdentifiers
_profilesChanged:
_beginMonitoring
setInitQueue:
_hasLoggingProfileBeenRemoved:
archivedDataWithRootObject:requiringSecureCoding:error:
minusSet:
installedProfileIdentifiers
setWithArray:
addObserver:selector:name:object:
initQueue
_profileIdentifiers
_initQueue
T@"NSSet",&,N,V_profileIdentifiers
T@"NSObject<OS_dispatch_queue>",&,N,V_initQueue
sharedAssetManagerCoordinator
assetManagerForPlacementType:assetManagerType:
doubleValueForFactor:
taskIsDeferred
processDeviceData:
setAllowBattery:
setIsCPUIntensive:
setRequiresNetworkConnectivity:
stringWithCString:encoding:
setPriority:
setGracePeriod:
arrayWithObject:
refreshTrialClientForPlacementTypes:
setRespondToRefreshNotification:
activity
initWithActivity:
calculateAllFeatures:
taskIsRunning
setTaskIsRunning:
xpc_task
setXpc_task:
refreshInterval
setRefreshInterval:
_taskIsRunning
_xpc_task
_refreshInterval
TB,N,V_taskIsRunning
T@"ADBackgroundTaskRequest",&,N,V_xpc_task
T@"NSNumber",&,N,V_refreshInterval
canMakeJingleRequest
jingleRequestCompleted:
startJingleRequest:
ams_DSID
stringValue
jingleRequestInProgress
setJingleRequestInProgress:
pendingJingleRequests
setPendingJingleRequests:
_jingleRequestInProgress
_pendingJingleRequests
TB,V_jingleRequestInProgress
T@"NSMutableDictionary",&,N,V_pendingJingleRequests
@16@0:8
@24@0:8Q16
v16@0:8
B24@0:8@16
v24@0:8@?16
v40@0:8q16@24@?32
v32@0:8@16@?24
B16@0:8
Q16@0:8
v20@0:8B16
v24@0:8Q16
@24@0:8@16
v24@0:8@16
@32@0:8@16@24
q16@0:8
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@"CKRecordZoneID"
@"CKRecordID"
@"CKContainer"
@"NSString"
@"NSMutableArray"
B24@0:8q16
@32@0:8@16@?24
@?16@0:8
@"NSNumber"
@"NSData"
@"NSDictionary"
@"NSError"
@"NSMutableDictionary"
@36@0:8@16B24@?28
@44@0:8@16B24d28@?36
v24@0:8@?<v@?@"NSError">16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
v32@0:8@?16@24
B24@0:8d16
v32@0:8@16@24
B24@0:8@"ADBackgroundTaskRequest"16
v32@0:8@"NSString"16@"NSObject<OS_xpc_object>"24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<NSObject>"
@"APSConnection"
@"ADLoggingProfileMonitor"
@"AMSBagKeySet"16@0:8
@"AMSBag"16@0:8
v28@0:8B16@?20
v28@0:8B16@?<v@?B>20
v24@0:8@?<v@?q>16
v24@0:8@?<v@?B>16
B28@0:8@16B24
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v40@0:8@16@24@?32
@"NSSet"
v24@0:8d16
@"ADBackgroundTaskRequest"
