?UUUUUUUUUUUUUUUU
mcpl)
0Esafety violationafety violation:
@cfuavnoclppa
11CAException
xfuafmuanpuaumuaxmuacfuauouangualouaxauaimua3$_1
 NSt3__112system_errorE
NSt3__117bad_function_callE
St20bad_array_new_length
St9bad_alloc
St14overflow_error
St13runtime_error
St9exception
St12length_error
St11logic_error
CAException
result = AudioUnitGetProperty (AU(), kAudioUnitProperty_AudioChannelLayout, inScope, inEl, layout, &size)
home
result = GetElementCount(kAudioUnitScope_Input, elCount)
result = SetSampleRate (kAudioUnitScope_Input, i, inSampleRate)
result = GetElementCount(kAudioUnitScope_Output, elCount)
result = SetSampleRate (kAudioUnitScope_Output, i, inSampleRate)
AudioUnit:%p
node=%ld
CAAudioUnit.cpp
AudioComponentDescription: %s - 
%s - 
, 0x%X, 0x%X
0x%x
NULL layout
Tag=0x%X, 
Using Bitmap:0x%X
Num Chan Descs=%d
Label=%d, Flags=0x%X, 
[az=%f,el=%f,dist=%f]
arithmetic multiplication overflow
arithmetic addition overflow
CAComponent: %p
, Manu:
, Name:
AUOutputBL.cpp
com.apple.coreaudio.synchronously
ERROR: IN CALL %s
ERROR: %d IN CALL %s
FATAL ERROR: %s
ERROR: %s
WARNING: %s
--------------------------------------------------
VALIDATING AUDIO UNIT: '%s' - '%s' - '%s'
  ** As Component **
* * FAIL
* * PASS
TESTING OPEN TIMES:
VERIFYING DEFAULT SCOPE FORMATS:
* * FAIL
* * PASS
VERIFYING REQUIRED PROPERTIES:
VERIFYING RECOMMENDED PROPERTIES:
VERIFYING OPTIONAL PROPERTIES:
VERIFYING SPECIAL PROPERTIES:
PUBLISHED PARAMETER INFO:
FORMAT TESTS:
RENDER TESTS:
  Format errors. Cannot perform render tests
Latency
Tail Time
Bypass Effect
Unknown 
AudioStreamBasicDescription:
%s%s %s
Float32
Int16
Fixed8.24
Float64
Int32
, interleaved
, deinterleaved
%2u ch, %6.0f Hz, %s%s
%2u ch, %6.0f Hz, 'freq'
%2u ch, %6.0f Hz
%2u ch, %6.0f Hz, %s (0x%08X) 
 big-endian
 little-endian
 signed
 unsigned
integer
float
%spacked in %u bytes
 high-aligned
 low-aligned
%u.%u
%s-bit%s%s %s%s%s%s%s
from %u-bit source, 
from UNKNOWN source bit depth, 
%u frames/packet
%u bits/channel, %u bytes/packet, %u frames/packet, %u bytes/frame
Manufacturer OSType should have at least one non-lower case character: '%s'
Manufacturer String: 
AudioUnit Name: 
Component Name string needs a colon separating 'Manufacturer: AudioUnit': 
Cannot get Component's Name strings
Error from retrieving Component Version: %d
Component Version: %d.%d.%d (0x%X)
didn't find the component
COLD:
Time to open AudioUnit:         %.3f ms
WARM:
Time to open AudioUnit:         %.3f  ms
This AudioUnit is a version 3 implementation.
This AudioUnit is a version 2 implementation.
FIRST TIME:
Time for initialization:        %.3f ms
AudioUnitInitialize should not succeed for an 'auou' audio unit with subtype %s
'hkip'
'ldcm'
AudioUnitReset should succeed for an 'auou' audio unit with subtype %s
AudioUnitInitialize should not succeed for an 'auax' audio unit
AudioUnitReset should not succeed for an 'auax' audio unit
OpenAComponent: result: %d,0x%X
* AudioUnit Is Not Authorised (Open) *
Initialize: result: %d
* AudioUnit Is Not Authorised (Initialize) *
AudioUnitGetProperty (BusCount) / Input
AudioUnitGetProperty (BusCount) / Output
Input
Output
Default Format of unit does not match reported Channel handling capabilities
%s Scope Bus Configuration:
 Default Bus Count:%d
AU Generators cannot have input buses
AudioUnitGetProperty (Format)
    Format Bus %d is invalid: 
    Bus Name: 
    Format Bus %d: 
    Default Format: 
    Bus %d, Has Channel Layouts: 
    Has Channel Layouts: 
0x%X 
AudioUnitGetProperty (Layout)
    Default Layout (bus %d):
    Default Layout:
Layout Reports %d channels, default format reports %d
Error setting element count for Matrix Mixer: %d
  VERIFYING PROPERTY: %s
Obtained valid result for GetProperty(), but not for GetPropertyInfo() call
  VERIFYING PROPERTY %s
Initialize: Property
UnInitialize: Property
GetProperty() call accepts & returns bad data size.
GetPropertyInfo (%s) returning valid information for scope/element for [%s/%d], which should be invalid.
GetPropertyInfo (%s) returning error for scope/element for [%s/%d], which should be valid.
Recommended Property is not supported
  AU returns NEGATIVE value for %s Property
    PASS
Max Frames
Add Property Listener
Set Max Frames
Changing max frames property did not fire off a property changed notification
Remove Property Listener
A property listener fired that was previously removed from the audio unit
VERIFYING CLASS INFO
ClassInfo::Can't initialize unit when it says it needs it
AudioUnit required initialization for Class data but did not report this
ClassInfo::GetProperty() call doesn't work when it is supposed to.
ClassInfo::GetProperty() Data is of invalid format - it is not a CFPropertyList
type
Class Data does not have required field:<type> == componentType
Class Data's <type> key has incorrect value type (should be a number)
subtype
Class Data does not have required field:<subtype> == componentSubType
Class Data's <subtype> key has incorrect value type (should be a number)
manufacturer
Class Data does not have required field:<manufacturer> == componentManufacturer
Class Data's <manufacturer> key has incorrect value type (should be a number)
version
Class data should have a version field - it doesn't
Class Data's <version> key has incorrect value type (should be a number)
Class Data fields %s, %s, %s do not match component description
name
Class data doesn't contain a name key
Preset name is not retained in retrieved class data
Cannot Initialize AU
Cannot reset the AU to its default preset
Present Preset::Can't Get the AU's present Preset setting
CurrentPreset property is deprectated. AU should implement PresentPreset
DEFAULT PRESET: %d, Name: 
Test Preset Name
Can't set new preset
FactoryPresets::Can't initialize unit when it says it needs it
AudioUnit required initialization for Factory Preset data but did not report this
HAS FACTORY PRESETS
Type of Factory Preset is not a CFArrayRef
    ID: %s%d    Name: 
AudioUnitInitialize
Parameter values are different since last set - probable cause: a Meta Param Flag is NOT set on a parameter that will change values of other parameters.
Testing that parameters retain value across reset and initialization
Parameter did not retain set value when Initialized
AudioUnitReset
Parameter did not retain set value when AU was Reset
AudioUnitUninitialize
Parameter did not retain set value when Uinitialized
  PASS
Cannot perform Parameter Value check across initialization and reset
# Parameter Get/Set Values required Initialization
Parameter Declares it is a custom unit, but doesn't provide a name for it
# # # %d %s Scope Parameters:
Cannot Get Parameter List when should be able to:%d
Cannot Retrieve information for published parameter ID:%d, result = %d
Cannot retrieve consistent parameter flag info for published parameter ID:%d
  -parameter PASS
  -parameter FAIL
Parameter ID:%d
Name: 
PARAMETER SHOULD PUBLISH NAME AS CFString
Generic
Indexed
Boolean
Percent
Seconds
Sample Frames
Phase
Rate
Hertz
Cents
Relative Semi Tones
MIDI Note Number
MIDI Controller
Decibels
Linear Gain
Degrees
Equal Power Crossfade
Mixer Fader Curve 1
Meters
Absolute Cents
Octaves
Beats Per Minute
Beats
Milliseconds
<UNDEFINED>
Parameter Type: %s
Parameter Type: ID=%d (unknown display string)
Published Parameter Info has no flags set
Values Have Strings, 
Display Logarithmic, 
Display Square Root, 
Display Squared, 
Display Cubed, 
Display Cube Root, 
Display Exponential, 
High Resolution, 
Not Real Time, 
Can Ramp, 
Expert Mode, 
Global Meta, 
Element Meta, 
Metered Readable, 
Readable, 
Writable 
Flags: %s
Parameter's min value is greater than max value
Parameter default value does not fall within [minValue, maxValue] range
use -strict_DefP flag
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* Parameter's Published defaultvalue does not fall with [min, max] range  *
* This will fail using -strict option. Will fail in future auval version  *
AudioUnitGetParameter
retrievedValue = %f (was %f), Parameter did not retain minimum value when set
AudioUnitSetParameter
retrievedValue = %f (was %f), Parameter did not retain maximum value when set
retrievedValue = %f (was %f), Parameter did not retain default value when set
ParameterID=%d, Scope=%d, Element=%d: Saved Value = %f, Current Value %f
Reported Channel Capabilities
 (explicit):
      
[%d, %d]  
 (implicit):
      [-1, -1]
 (default config only):
Input/Output Channel Handling:
1-1   1-2   1-4   1-5   1-6   1-7   1-8   2-2   2-4   2-5   2-6   2-7   2-8   4-4   4-5   5-5   6-6   7-7   8-8
   %d-%d
No Input, Output Chans:
0-1   0-2   0-4   0-5   0-6   0-7   0-8
Unit now reports it cannot support default channel configuration (it previously reported that it did): in:%d, out:%d
Unit Needs to describe its channel handling capabilities (at least for default config: in:%d, out:%d)
AU incorrectly reports Dynamic Configuration capability (bus count is not writable)
Cannot Set %s Num Channels:%d when unit says it can
%s Audio Channel Layout (Tag:0x%X) and numChannels (%d) does not match format
Can't Uninitialize unit
Cannot Get sample rate for output (0)
Cannot Initialize Unit to valid num channels:InputChan:%d, OutputChan:%d
Can Initialize Unit to un-supported num channels:InputChan:%d, OutputChan:%d
Initialised Unit incorrectly set to InputChans:%d OutputChans:%d
Source AU supports multi-channel output but does not provide a channel layout
Global
Unknown
AU states it supports layouts (%s scope), but they cannot be retrieved: %d
Cannot verify Audio Channel Layouts as Format handling has problems
# # AudioChannelLayouts (%d), %s Scope:
The supported AudioChannelLayout property GetInfo returns (%d)
The reported AudioChannelLayout property's data size (%d) is less than the minimum size of an ACL struct
AU publishes support for writing channel layouts (use channel descriptions) but isWritable is false
ChannelLayout is Writable: %c
The Unit publishes the following Channel Layouts:
0x%X (Use_Channel_Descriptions), 
0x%X (Use_Channel_Descriptions)
0x%X, 
Is Audio Channel Layout Available:
Mono    Stereo  Binau.  AU_4    Ambi.   AU_5    AU_5_0  AU_6    AU_6_0  AU_7_0  AU_7_0F AU_8    AU_5_1  AU_6_1  AU_7_1  AU_7_1F 
Mismatch between reported channel layouts and reported numChannels
Default Layout is not published as a supported layout tag
Problem with initial Channel layout state
Can write a channel layout (tag = 0x%X) with mismatched channels (%d)
Can't get current channel layout
Current Format:
Current Format Tag = 0x%X, New Format Tag = 0x%X, 
Mismatched report of current layout's channels with current format
Successsful
Can not set Channel Layout when should be able to
Success - did not reset format with mis-matched layout
Input IOData's Buffer Sizes do not match inNumFrames count
Input asked for more frames (%d) than current max frames setting (%d)
  AU is not passing time stamp correctly. Was given: %.0f, but input received: %.0f
  AU is not pulling input frames correctly. Output Requested: %d, but input request: %d
Get Output format
Setting Offline AU Input Size
Getting Sample Rate
  Render for %f seconds of audio at frame size: %u, sample rate: %.0f Hz
Starting making thread real-time
MusicDeviceMIDIEvent
Problem with inputs for ProcessMultiple
Problem with outputs for ProcessMultiple
AU Reports Processing in Place; Input buffer[0]:%p and Output buffer[0]:%p are not the same
Expected an error code to be returned, but received none
AudioUnitRender
Render Input returned an error, but was not returned to the caller of AURender
Output Buffer Size does not match requested num frames
Buffer overun was detected when rendering
The Silent Flag is set, but the AU is NOT outputting silence
End making thread real-time
sudo killall -9 dtrace
  Found real-time violation in AU: 
  Real-time Safe Test FAILED!
Failed to get input bus count!
Failed to get format!
Cannot set unit to its default input and output channels
Implements: Block Size Property
Implements: 
AudioUnitProcess
AudioUnitProcessMultiple
Input Format: 
Input Format is invalid - cannot perform render tests
Setting Render Callback
Get Output Format
Output Format: 
Output Format is invalid - cannot perform render tests
Render Test at %d frames
Use Block Size: Cannot set max frames to: %d
Use Block Size: Cannot initialize to: %d
Slicing Render Test at %d frames
Render Test at %d frames, sample rate: %.0f Hz
Uninitialize
Setting Frame Size
Message: AU Doesn't support %.0f sample rate
Unable to initialize to render %d frames
%d Channel Test:
Render Test at 512 frames
:%d Render Preparation, 512 frames
1 to 2 Channel Render Test at 256 frames
:%d Render Preparation, 256 frames
SetFormat (output) to default config
SetFormat (input) to default config
Initialize AU to default channels
Checking connection semantics:
Removing Render Callback
Ouch!!! Can't find srcUnit
Connection format:
Can't set (output) format of source srcUnit
Can't set (input) format of source srcUnit
sourceUnit::Setting Render Callback
Getting Frame Size
Initialize srcUnit to default format
Make connection to AU
Disconnect AU
Bad Max Frames - Render should fail
AudioUnitRender should have returned an error for too many frames but returned noErr
Checking parameter setting
Using AudioUnitSetParameter
Using AudioUnitScheduleParameter
AudioUnitAddRenderNotify
AudioUnitRemoveRenderNotify
Did not set AU Render flags for pre and post render notifications correctly
Checking ramped parameter scheduling
Test MIDI
MusicDeviceMIDIEventList
Unsupported AudioUnitMIDIProtocol with id: %d
AU implements MusicDeviceMIDIEvent but is of type 'aufx' (it should be 'aumf')
MusicDeviceMIDIEvent should be invalid selector for AU type - noErr was returned
AU implements MusicDeviceMIDIEvent but returns false from AudioComponentInstanceCanDo
Stress Test
Render for %.0f seconds of audio at frame size: %u, sample rate: %.0f Hz
Getting Parameter Info
Real-time Safe Test:
AudioUnitScheduleParameters
vector
malloc
calloc
realloc
valloc
posix_memalign
free
mmap
vm_allocate
vm_deallocate
pthread_mutex_lock
pthread_mutex_trylock
pthread_rwlock_wrlock
pthread_rwlock_rdlock
dispatch_async
dispatch_async_f
dispatch_sync
dispatch_sync_f
dispatch_after
dispatch_after_f
dispatch_barrier_async
dispatch_barrier_async_f
dispatch_barrier_sync
dispatch_barrier_sync_f
CFRelease
objc_sync_enter
objc_msgSend
send
sendto
recv
fopen
fclose
fread
fwrite
fgets
open
read
pread
write
pwrite
/curthread->sched_pri==97/ 
   printf("\nRealtime-safety violation:"); 
   ustack(); 
dtrace_script.txt
pid$target::
:entry
/usr/bin/sudo /usr/sbin/dtrace -q -s 
 -p 
  Running dtrace in background: %s
  Couldn't start dtrace in background. Test might not be valid.
ps -ax -O state | grep dtrace
  Couldn't start checking dtrace.
  Checking if DTrace started
/usr/sbin/dtrace
  DTrace started!
basic_string
Constructing a thread with real time priority requires that the computation (quantum) is less than or equal to the constraint
Mach
  Create DTrace handshake
NaN detected in output ABL %u channel %u sample %u iteration %u
infinity detected in output ABL %u channel %u sample %u iteration %u
setThreadToStandard() failed with error: %d
thread constructor failed
Result
v8@?0
%02X
v20@?0^{OpaqueAudioComponentInstance=}8i16
v16@?0@?<v@?>8
Loaded AudioUnit out-of-process: %s 
true
false
%s %s %s
  -  
 [AUv3]
 [AUv2]
    Cannot open component: %d
Could not convert
 ca_require_noerr: [%s, %d] (goto %s;)
%25s:%-5d EXCEPTION (%d) [error != noErr is false]: ""
%25s:%-5d EXCEPTION (%d) [(nBytes * mNumberBuffers) > AllocatedBytes() is false]: ""
Throwing: %s
addObject:
numberWithInt:
setObject:forKeyedSubscript:
stringWithUTF8String:
cfuavnoc
!$'*-0369<?BEHN
%(11CAException
xfuafmuanpuaumuaxmuacfuauouangualouaxauaimua3$_1
 NSt3__112system_errorE
NSt3__117bad_function_callE
St20bad_array_new_length
St9bad_alloc
St14overflow_error
St13runtime_error
St9exception
St12length_error
St11logic_error
mcpl)
CAException
result = AudioUnitGetProperty (AU(), kAudioUnitProperty_AudioChannelLayout, inScope, inEl, layout, &size)
home
result = GetElementCount(kAudioUnitScope_Input, elCount)
result = SetSampleRate (kAudioUnitScope_Input, i, inSampleRate)
result = GetElementCount(kAudioUnitScope_Output, elCount)
result = SetSampleRate (kAudioUnitScope_Output, i, inSampleRate)
AudioUnit:%p
node=%ld
CAAudioUnit.cpp
AudioComponentDescription: %s - 
%s - 
, 0x%X, 0x%X
0x%x
NULL layout
Tag=0x%X, 
Using Bitmap:0x%X
Num Chan Descs=%d
Label=%d, Flags=0x%X, 
[az=%f,el=%f,dist=%f]
arithmetic multiplication overflow
arithmetic addition overflow
CAComponent: %p
, Manu:
, Name:
AUOutputBL.cpp
com.apple.coreaudio.synchronously
ERROR: IN CALL %s
ERROR: %d IN CALL %s
FATAL ERROR: %s
ERROR: %s
WARNING: %s
--------------------------------------------------
VALIDATING AUDIO UNIT: '%s' - '%s' - '%s'
  ** As Component **
* * FAIL
* * PASS
TESTING OPEN TIMES:
VERIFYING DEFAULT SCOPE FORMATS:
* * FAIL
* * PASS
VERIFYING REQUIRED PROPERTIES:
VERIFYING RECOMMENDED PROPERTIES:
VERIFYING OPTIONAL PROPERTIES:
VERIFYING SPECIAL PROPERTIES:
PUBLISHED PARAMETER INFO:
FORMAT TESTS:
RENDER TESTS:
  Format errors. Cannot perform render tests
Latency
Tail Time
Bypass Effect
Unknown 
AudioStreamBasicDescription:
%s%s %s
Float32
Int16
Fixed8.24
Float64
Int32
, interleaved
, deinterleaved
%2u ch, %6.0f Hz, %s%s
%2u ch, %6.0f Hz, 'freq'
%2u ch, %6.0f Hz
%2u ch, %6.0f Hz, %s (0x%08X) 
 big-endian
 little-endian
 signed
 unsigned
integer
float
%spacked in %u bytes
 high-aligned
 low-aligned
%u.%u
%s-bit%s%s %s%s%s%s%s
from %u-bit source, 
from UNKNOWN source bit depth, 
%u frames/packet
%u bits/channel, %u bytes/packet, %u frames/packet, %u bytes/frame
Manufacturer OSType should have at least one non-lower case character: '%s'
Manufacturer String: 
AudioUnit Name: 
Component Name string needs a colon separating 'Manufacturer: AudioUnit': 
Cannot get Component's Name strings
Error from retrieving Component Version: %d
Component Version: %d.%d.%d (0x%X)
didn't find the component
COLD:
Time to open AudioUnit:         %.3f ms
WARM:
Time to open AudioUnit:         %.3f  ms
This AudioUnit is a version 3 implementation.
This AudioUnit is a version 2 implementation.
FIRST TIME:
Time for initialization:        %.3f ms
AudioUnitInitialize should not succeed for an 'auou' audio unit with subtype %s
'hkip'
'ldcm'
AudioUnitReset should succeed for an 'auou' audio unit with subtype %s
AudioUnitInitialize should not succeed for an 'auax' audio unit
AudioUnitReset should not succeed for an 'auax' audio unit
OpenAComponent: result: %d,0x%X
* AudioUnit Is Not Authorised (Open) *
Initialize: result: %d
* AudioUnit Is Not Authorised (Initialize) *
AudioUnitGetProperty (BusCount) / Input
AudioUnitGetProperty (BusCount) / Output
Input
Output
Default Format of unit does not match reported Channel handling capabilities
%s Scope Bus Configuration:
 Default Bus Count:%d
AU Generators cannot have input buses
AudioUnitGetProperty (Format)
    Format Bus %d is invalid: 
    Bus Name: 
    Format Bus %d: 
    Default Format: 
    Bus %d, Has Channel Layouts: 
    Has Channel Layouts: 
0x%X 
AudioUnitGetProperty (Layout)
    Default Layout (bus %d):
    Default Layout:
Layout Reports %d channels, default format reports %d
Error setting element count for Matrix Mixer: %d
  VERIFYING PROPERTY: %s
Obtained valid result for GetProperty(), but not for GetPropertyInfo() call
  VERIFYING PROPERTY %s
Initialize: Property
UnInitialize: Property
GetProperty() call accepts & returns bad data size.
GetPropertyInfo (%s) returning valid information for scope/element for [%s/%d], which should be invalid.
GetPropertyInfo (%s) returning error for scope/element for [%s/%d], which should be valid.
Recommended Property is not supported
  AU returns NEGATIVE value for %s Property
    PASS
    FAIL
Max Frames
Add Property Listener
Set Max Frames
Changing max frames property did not fire off a property changed notification
Remove Property Listener
A property listener fired that was previously removed from the audio unit
VERIFYING CLASS INFO
ClassInfo::Can't initialize unit when it says it needs it
AudioUnit required initialization for Class data but did not report this
ClassInfo::GetProperty() call doesn't work when it is supposed to.
ClassInfo::GetProperty() Data is of invalid format - it is not a CFPropertyList
type
Class Data does not have required field:<type> == componentType
Class Data's <type> key has incorrect value type (should be a number)
subtype
Class Data does not have required field:<subtype> == componentSubType
Class Data's <subtype> key has incorrect value type (should be a number)
manufacturer
Class Data does not have required field:<manufacturer> == componentManufacturer
Class Data's <manufacturer> key has incorrect value type (should be a number)
version
Class data should have a version field - it doesn't
Class Data's <version> key has incorrect value type (should be a number)
Class Data fields %s, %s, %s do not match component description
name
Class data doesn't contain a name key
Preset name is not retained in retrieved class data
Cannot Initialize AU
Cannot reset the AU to its default preset
Present Preset::Can't Get the AU's present Preset setting
CurrentPreset property is deprectated. AU should implement PresentPreset
DEFAULT PRESET: %d, Name: 
Test Preset Name
Can't set new preset
FactoryPresets::Can't initialize unit when it says it needs it
AudioUnit required initialization for Factory Preset data but did not report this
HAS FACTORY PRESETS
Type of Factory Preset is not a CFArrayRef
    ID: %s%d    Name: 
AudioUnitInitialize
Parameter values are different since last set - probable cause: a Meta Param Flag is NOT set on a parameter that will change values of other parameters.
Testing that parameters retain value across reset and initialization
Parameter did not retain set value when Initialized
AudioUnitReset
Parameter did not retain set value when AU was Reset
AudioUnitUninitialize
Parameter did not retain set value when Uinitialized
  PASS
Cannot perform Parameter Value check across initialization and reset
# Parameter Get/Set Values required Initialization
Parameter Declares it is a custom unit, but doesn't provide a name for it
# # # %d %s Scope Parameters:
Cannot Get Parameter List when should be able to:%d
Cannot Retrieve information for published parameter ID:%d, result = %d
Cannot retrieve consistent parameter flag info for published parameter ID:%d
  -parameter PASS
  -parameter FAIL
Parameter ID:%d
Name: 
PARAMETER SHOULD PUBLISH NAME AS CFString
Generic
Indexed
Boolean
Percent
Seconds
Sample Frames
Phase
Rate
Hertz
Cents
Relative Semi Tones
MIDI Note Number
MIDI Controller
Decibels
Linear Gain
Degrees
Equal Power Crossfade
Mixer Fader Curve 1
Meters
Absolute Cents
Octaves
Beats Per Minute
Beats
Milliseconds
<UNDEFINED>
Parameter Type: %s
Parameter Type: ID=%d (unknown display string)
Published Parameter Info has no flags set
Values Have Strings, 
Display Logarithmic, 
Display Square Root, 
Display Squared, 
Display Cubed, 
Display Cube Root, 
Display Exponential, 
High Resolution, 
Not Real Time, 
Can Ramp, 
Expert Mode, 
Global Meta, 
Element Meta, 
Metered Readable, 
Readable, 
Writable 
Flags: %s
Parameter's min value is greater than max value
Parameter default value does not fall within [minValue, maxValue] range
use -strict_DefP flag
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* Parameter's Published defaultvalue does not fall with [min, max] range  *
* This will fail using -strict option. Will fail in future auval version  *
AudioUnitGetParameter
retrievedValue = %f (was %f), Parameter did not retain minimum value when set
AudioUnitSetParameter
retrievedValue = %f (was %f), Parameter did not retain maximum value when set
retrievedValue = %f (was %f), Parameter did not retain default value when set
ParameterID=%d, Scope=%d, Element=%d: Saved Value = %f, Current Value %f
Reported Channel Capabilities
 (explicit):
      
[%d, %d]  
 (implicit):
      [-1, -1]
 (default config only):
      input:  
      output: 
Input/Output Channel Handling:
1-1   1-2   1-4   1-5   1-6   1-7   1-8   2-2   2-4   2-5   2-6   2-7   2-8   4-4   4-5   5-5   6-6   7-7   8-8
   %d-%d
No Input, Output Chans:
0-1   0-2   0-4   0-5   0-6   0-7   0-8
Unit now reports it cannot support default channel configuration (it previously reported that it did): in:%d, out:%d
Unit Needs to describe its channel handling capabilities (at least for default config: in:%d, out:%d)
AU incorrectly reports Dynamic Configuration capability (bus count is not writable)
Cannot Set %s Num Channels:%d when unit says it can
%s Audio Channel Layout (Tag:0x%X) and numChannels (%d) does not match format
Can't Uninitialize unit
Cannot Get sample rate for output (0)
Cannot Initialize Unit to valid num channels:InputChan:%d, OutputChan:%d
Can Initialize Unit to un-supported num channels:InputChan:%d, OutputChan:%d
Initialised Unit incorrectly set to InputChans:%d OutputChans:%d
Source AU supports multi-channel output but does not provide a channel layout
Global
Unknown
AU states it supports layouts (%s scope), but they cannot be retrieved: %d
Cannot verify Audio Channel Layouts as Format handling has problems
# # AudioChannelLayouts (%d), %s Scope:
The supported AudioChannelLayout property GetInfo returns (%d)
The reported AudioChannelLayout property's data size (%d) is less than the minimum size of an ACL struct
AU publishes support for writing channel layouts (use channel descriptions) but isWritable is false
ChannelLayout is Writable: %c
The Unit publishes the following Channel Layouts:
0x%X (Use_Channel_Descriptions), 
0x%X (Use_Channel_Descriptions)
0x%X, 
Is Audio Channel Layout Available:
Mono    Stereo  Binau.  AU_4    Ambi.   AU_5    AU_5_0  AU_6    AU_6_0  AU_7_0  AU_7_0F AU_8    AU_5_1  AU_6_1  AU_7_1  AU_7_1F 
Mismatch between reported channel layouts and reported numChannels
Default Layout is not published as a supported layout tag
Problem with initial Channel layout state
Can write a channel layout (tag = 0x%X) with mismatched channels (%d)
Can't get current channel layout
Current Format:
Current Format Tag = 0x%X, New Format Tag = 0x%X, 
Mismatched report of current layout's channels with current format
Successsful
Can not set Channel Layout when should be able to
Success - did not reset format with mis-matched layout
Input IOData's Buffer Sizes do not match inNumFrames count
Input asked for more frames (%d) than current max frames setting (%d)
  AU is not passing time stamp correctly. Was given: %.0f, but input received: %.0f
  AU is not pulling input frames correctly. Output Requested: %d, but input request: %d
Get Output format
Setting Offline AU Input Size
Getting Sample Rate
  Render for %f seconds of audio at frame size: %u, sample rate: %.0f Hz
Starting making thread real-time
MusicDeviceMIDIEvent
Problem with inputs for ProcessMultiple
Problem with outputs for ProcessMultiple
AU Reports Processing in Place; Input buffer[0]:%p and Output buffer[0]:%p are not the same
Expected an error code to be returned, but received none
AudioUnitRender
Render Input returned an error, but was not returned to the caller of AURender
Output Buffer Size does not match requested num frames
Buffer overun was detected when rendering
The Silent Flag is set, but the AU is NOT outputting silence
End making thread real-time
sudo killall -9 dtrace
  Found real-time violation in AU: 
  Real-time Safe Test FAILED!
Failed to get input bus count!
Failed to get format!
Cannot set unit to its default input and output channels
Implements: Block Size Property
Implements: 
AudioUnitProcess
AudioUnitProcessMultiple
Input Format: 
Input Format is invalid - cannot perform render tests
Setting Render Callback
Get Output Format
Output Format: 
Output Format is invalid - cannot perform render tests
Render Test at %d frames
Use Block Size: Cannot set max frames to: %d
Use Block Size: Cannot initialize to: %d
Slicing Render Test at %d frames
Render Test at %d frames, sample rate: %.0f Hz
Uninitialize
Setting Frame Size
Message: AU Doesn't support %.0f sample rate
Unable to initialize to render %d frames
%d Channel Test:
Render Test at 512 frames
:%d Render Preparation, 512 frames
1 to 2 Channel Render Test at 256 frames
:%d Render Preparation, 256 frames
SetFormat (output) to default config
SetFormat (input) to default config
Initialize AU to default channels
Checking connection semantics:
Removing Render Callback
Ouch!!! Can't find srcUnit
Connection format:
Can't set (output) format of source srcUnit
Can't set (input) format of source srcUnit
sourceUnit::Setting Render Callback
Getting Frame Size
Initialize srcUnit to default format
Make connection to AU
Disconnect AU
Bad Max Frames - Render should fail
AudioUnitRender should have returned an error for too many frames but returned noErr
Checking parameter setting
Using AudioUnitSetParameter
Using AudioUnitScheduleParameter
AudioUnitAddRenderNotify
AudioUnitRemoveRenderNotify
Did not set AU Render flags for pre and post render notifications correctly
Checking ramped parameter scheduling
Test MIDI
MusicDeviceMIDIEventList
Unsupported AudioUnitMIDIProtocol with id: %d
AU implements MusicDeviceMIDIEvent but is of type 'aufx' (it should be 'aumf')
MusicDeviceMIDIEvent should be invalid selector for AU type - noErr was returned
AU implements MusicDeviceMIDIEvent but returns false from AudioComponentInstanceCanDo
Stress Test
Render for %.0f seconds of audio at frame size: %u, sample rate: %.0f Hz
Getting Parameter Info
Real-time Safe Test:
AudioUnitScheduleParameters
X       
vector
malloc
calloc
realloc
valloc
posix_memalign
free
mmap
vm_allocate
vm_deallocate
pthread_mutex_lock
pthread_mutex_trylock
pthread_rwlock_wrlock
pthread_rwlock_rdlock
dispatch_async
dispatch_async_f
dispatch_sync
dispatch_sync_f
dispatch_after
dispatch_after_f
dispatch_barrier_async
dispatch_barrier_async_f
dispatch_barrier_sync
dispatch_barrier_sync_f
CFRelease
objc_sync_enter
objc_msgSend
send
sendto
recv
fopen
fclose
fread
fwrite
fgets
open
read
pread
write
pwrite
/curthread->sched_pri==97/ 
   printf("\nRealtime-safety violation:"); 
   ustack(); 
dtrace_script.txt
pid$target::
:entry
/usr/bin/sudo /usr/sbin/dtrace -q -s 
 -p 
  Running dtrace in background: %s
  Couldn't start dtrace in background. Test might not be valid.
ps -ax -O state | grep dtrace
  Couldn't start checking dtrace.
  Checking if DTrace started
/usr/sbin/dtrace
  DTrace started!
basic_string
Constructing a thread with real time priority requires that the computation (quantum) is less than or equal to the constraint
Mach
  Create DTrace handshake
NaN detected in output ABL %u channel %u sample %u iteration %u
infinity detected in output ABL %u channel %u sample %u iteration %u
setThreadToStandard() failed with error: %d
thread constructor failed
Result
v8@?0
%02X
v20@?0^{OpaqueAudioComponentInstance=}8i16
v16@?0@?<v@?>8
Loaded AudioUnit out-of-process: %s 
true
false
%s %s %s
  -  
 [AUv3]
 [AUv2]
    Cannot open component: %d
Could not convert
 ca_require_noerr: [%s, %d] (goto %s;)
%25s:%-5d EXCEPTION (%d) [error != noErr is false]: ""
%25s:%-5d EXCEPTION (%d) [(nBytes * mNumberBuffers) > AllocatedBytes() is false]: ""
Throwing: %s
addObject:
numberWithInt:
setObject:forKeyedSubscript:
stringWithUTF8String:
