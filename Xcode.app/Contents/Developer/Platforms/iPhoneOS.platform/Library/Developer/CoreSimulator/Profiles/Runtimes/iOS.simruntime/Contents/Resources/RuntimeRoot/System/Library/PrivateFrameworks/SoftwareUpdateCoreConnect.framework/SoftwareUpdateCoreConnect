com.apple.SUCoreConnect.ClientAllowlistAccessQueue
SUCoreConnectClientPolicy
initForServiceName:delegate: is deprecated, use initForServiceName:delegate:clientID instead
%@.<%d>
v8@?0
Cannot set allowlisted classes for a nil/empty NSSet of keys
Cannot set nil/empty NSSet of classes for keys %@
SUCoreConnectClientPolicy(serviceName:%@|clientID:%@)
com.apple.SUCoreConnect.ConnectionsAccessQueue
com.apple.SUCoreConnect.ConnectionSendMessageQueue
SERVER-%@
v16@?0@"NSError"8
v16@?0@"NSString"8
[SendServerMessage](%@) Observer clients cannot send messages to server
v24@?0@"SUCoreConnectMessage"8@"NSError"16
[SendServerMessage](%@) handleMessage selector is not implemented by server delegate
SUCoreConnectServer(connectionPolicy:%@)
SelectorString
SUCoreConnectVersion(selectorString:%@)
SUCoreConnectClientProxyClientID
com.apple.SUCoreConnect.ClientProxyCompletionQueue
SUCoreConnectClientProxy(%@)
SUCoreConnectClientProxy(clientID:%@|completionQueue:%@|genericBlock:%@|progressBlock:%@)
MessageType
MessageName
ClientID
ClientIDRaw
ClientProcessIdentifier
Version
Error
Message
SUCoreConnectMessage
SUCoreConnectMessage requires a non-nil messageName
SUCoreConnectMessage requires a non-nil clientID
SUCoreConnectMessage requires a valid message dictionary
server policy does not define allowlisted classes for key: %@
SUCoreConnectMessageDecode
server policy failed define required allowlisted classes for key (%@), exception reason: %@
client policy does not define allowlisted classes for key: %@
client policy failed define required allowlisted classes for key (%@), exception reason: %@
no connect policy type could be determined for message with type: %ld
CLIENT_MESSAGE
SERVER_MESSAGE
UNKNOWN_TYPE(%lu)
SUCoreConnectMessage(clientID:%@|type:%@|name:%@)
[>>>
%@: %@
%@: %@
%@: %@
<<<]
SUCoreConnectMessage(type:%@|name:%@|clientID:%@|clientIDRaw:%@|clientProcessIdentifier:%d|version:%@|error:%@|message:%@)
com.apple.SUCoreConnect.ConnectionQueue
com.apple.SUCoreConnect.ServerDelegateQueue
com.apple.SUCoreConnect.ServerAllowlistAccessQueue
SUCoreConnectServerPolicy
SUCoreConnectServerPolicy(serviceName:%@)
com.apple.SUCoreConnect.ServerConnectionQueue
com.apple.SUCoreConnect.ClientConnectionStateAccessQueue
com.apple.SUCoreConnect.ClientDelegateCallbackQueue
com.apple.SUCoreConnect.ClientCompletionQueue
com.apple.SUCoreConnect.ClientMessageQueue
com.apple.SUCoreConnect.ClientReplyCompletionQueue
CLIENT
v16@?0@"NSXPCConnection"8
ClientID of message (%@) does not align with policy clientID (%@)
connectClientSendServerMessage
No server connection present to send client->server message
Client does not respond to messages
SUCoreConnectMonitorReplyMessage
SUCoreConnectMonitorReplyError
[SUCoreConnectClientPolicy] Setting proxy object classes: %{public}@
[SUCoreConnectClientPolicy] Cannot get allowlisted for a nil key, returning no allowlisted classes
[SUCoreConnectClientPolicy] All entries removed from allowlisted classes dictionary
[EntitlementValidation](%{public}@) No connection policy provided, unable to determine what entitlements are required for new connection
[EntitlementValidation](%{public}@) Policy did not define entitlements; unable to determine entitlements and one is always required for new connection
[EntitlementValidation](%{public}@)(%@) Checking for entitlement
[EntitlementValidation](%{public}@)(%@) Client process does not have the entitlement
[EntitlementValidation](%{public}@)(%@) New connection's entitlement is not a boolean
[EntitlementValidation](%{public}@)(%@) New connection's value for entitlement is false
[ListenerNewConnection](%{public}@) Attempting to connect with new connection
[ListenerNewConnection](%{public}@) Rejecting connection - client is not entitled correctly
[InterruptedHandler] Server connection interrupted to XPC client, found no retained server object available
[InterruptedHandler] Server connection interrupted to XPC client, found no retained connection object available
[InterruptedHandler](%{public}@) Client connection interrupted, removing from connections list
[InvalidatedHandler] Server connection invalidated to XPC client, found no retained server object available
[InvalidatedHandler] Server connection invalidated to XPC client, found no retained connection object available
[InvalidatedHandler](%{public}@) Client connection invalidated, removing from connections list
[ListenerNewConnection](%{public}@) Resumed connection, requesting clientID
[ListenerNewConnection](%{public}@) ErrorHandler: Failed to receive clientID when requested for new connection, error: %{public}@
[ListenerNewConnection](%{public}@) Completion successfully received for request of clientID: %{public}@
[ListenerStartup] Setting up listener, enabling transactions, and resuming connection using policy: %{public}@
[ListenerStartup] Listener connection resumed, setup completed.
[SendServerMessage] Received message: %{public}@ (proxyObject:%{public}@, reply:%{public}@)
[SendServerMessage](%{public}@) Calling completion block with error: %{public}@
[SendServerMessage](%{public}@) Observer clients cannot send messages to server, error: %{public}@
[SendServerMessage](%{public}@) connectProtocolFromClientSendServerMessage was not provided a reply block, response:%{public}@ error:%{public}@
[SendServerMessage](%{public}@) connectProtocolFromClientSendServerMessage was not provided a reply block, error:%{public}@
[InformObserversOfReplyCompletion] Attempting to send message (no reply expected) to observer client with connection %{public}@
[InformObserversOfReplyCompletion] ErrorHandler: Connection failed (no completion was expected to be called) for observer client connection %{public}@ with error %{public}@
[SendClientMessage] Method called to send message: %{public}@
[SendClientMessage] Attempting to send message (no reply expected) to client %{public}@ with connection %{public}@
[SendClientMessage] ErrorHandler: Connection failed (no completion was expected to be called) for client with clientID: %{public}@ %{public}@ with error %{public}@
[SendClientMessage] Unable to send message, no connection could be located for clientID: %{public}@
[SendClientMessage] Attempting to send message (no reply expected) to observer client with connection %{public}@
[SendClientMessage] ErrorHandler: Connection failed (no completion was expected to be called) for observer client connection %{public}@ with error %{public}@
[GetAllObserverConnections] Returning %lu observable connections
[SetConnection] Attempting to set new clientID: %{public}@, for connection: %{public}@
[SetConnection] New connection to add is nil, aborting
[SetConnection] Adding new observable connection: %{public}@
[SetConnection] Found %lu existing connections for clientID: %{public}@
[SetConnection] Same connection already exists for clientID: %{public}@
[SetConnection] Setting new connection (to existing set) for clientID: %{public}@, newConnection: %{public}@
[SetConnection] Setting new connection (to new set) for clientID: %{public}@, newConnection: %{public}@
[RemoveConnection] From %lu clientIDs currently connected, attempting to remove connection: %{public}@
[RemoveConnection] Removing observable connection: %{public}@
[RemoveConnection] Removing connection for clientID: %{public}@, connection: %{public}@
[RemoveConnection] Set remaining %lu connections for clientID: %{public}@, connections: %{public}@
[RemoveConnection] No remaining connections for clientID: %{public}@
[RemoveConnection] Unable to locate the clientID for connection: %{public}@
[RemoveConnection] Informing server of connection disconnect for clientID: %{public}@
[ConnectionForClientID] From %lu clientIDs, %lu connections located for clientID: %{public}@, connections: %{public}@
[ConnectionForClientID] From %lu current clientIDs, no connection was located for clientID: %{public}@
[ClientIDForConnection] Located clientID: %{public}@, for connection: %{public}@
[ClientIDForConnection] No clientID located for connection: %{public}@
[%{public}@] No completion queue was provided on initialization, creating new completion queue
[%{public}@] Unable to execute a nil generic block with object: %{public}@
[%{public}@] Calling genericBlock on completion queue with object: %{public}@
[%{public}@] Unable to execute a nil progress block with progress: %{public}@
[%{public}@] Calling progressBlock on completion queue with progress: %{public}@
[SUCoreConnectServerPolicy] Cannot get allowlisted for a nil key, returning no allowlisted classes
[SUCoreConnectServerPolicy] All entries removed from allowlisted classes dictionary
[InvalidateConnection](%{public}@) Invalidating the persistent server connection %{public}@
[InvalidateConnection](%{public}@) Not invalidating server connection %{public}@ as client usesPersistentXPCConnections
[InvalidateConnection](%{public}@) Invalidating the server connection %{public}@
[ConnectionDropped] Client connection dropped to XPC server, found no retained client object available during cleanup
[ConnectionDropped](%{public}@) Client connection dropped to XPC server, calling connectionClosed delegate callback for connection %{public}@
[ConnectionDropped](%{public}@) Client connection dropped from XPC server, no delegate callback provided for connection %{public}@
[ConnectToServer](%{public}@) Already connected to server, not reconnecting for client that usesPersistentXPCConnections for connection %{public}@
[ConnectToServer](%{public}@) Attempting to connect to server
[CLIENT-%{public}@][InvalidatedHandler](%{public}@) Connection invalidated
[CLIENT-%{public}@][InterruptedHandler](%{public}@) Connection interrupted
[ConnectToServer](%{public}@) Client usesPersistentXPCConnections, assigning serverConnection
[ConnectToServer](%{public}@) Successfully connected to server with connection %{public}@
[SendServerMessage](%{public}@) Validation Error: Calling provided reply completion with error %{public}@
[SendServerMessage](%{public}@) Validation Error: No reply completion was provided
[SendServerMessage](%{public}@) No server connection present to send client->server message
[SendServerMessage](%{public}@) No reply completion provided
[SendServerMessage](%{public}@) Connected to server and calling sendMessage %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) ErrorHandler: Calling provided reply completion on connection error %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) ErrorHandler: No reply completion was provided for connection %{public}@
[SendServerMessage](%{public}@) sendMessage response received from server with response %{public}@ error %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) Calling reply delegate callback 'handleResponse:error:' for connection %{public}@
[SendServerMessage](%{public}@) Client does not respond to the handleMessage:reply: delegate callback and no reply completion was provided for connection %{public}@
[ForceCloseConnection](%{public}@) Incoming client request to force close connection
[RequestClientID](%{public}@) Replying to server for clientID request: %{public}@
[RequestClientID](%{public}@) Replying to server for clientID request: %{public}@, no reply block provided
[SendClientMessage](%{public}@) Calling client delegate method handleMessage
[SendClientMessage](%{public}@) Client does not respond to handleMessage:%{public}@, error:%{public}@, calling reply block
[SendClientMessage](%{public}@) Client does not respond to handleMessage:%{public}@, error: %{public}@, and no reply block provided
SUCoreConnectClientPolicy
SUCoreConnectPolicyProtocolPrivate
NSObject
SUCoreConnectPolicyProtocol
SUCoreConnectServerProtocol
SUCoreConnectClientProxyProtocol
SUCoreConnectClientProtocol
SUCoreConnectServer
NSXPCListenerDelegate
SUCoreConnectVersion
NSSecureCoding
NSCoding
SUCoreConnectClientProxy
SUCoreConnectMessage
SUCoreConnectServerPolicy
SUCoreConnectClient
SUCoreConnectConstants
sharedDiag
trackAnomaly:forReason:withResult:withError:
init
processInfo
processIdentifier
stringWithFormat:
sharedLogger
oslog
UTF8String
_getSharedClientAccessQueue
_getSharedClientAllowlistedClasses
safeObjectForKey:ofClass:
_getAllowlistedClassesForKey:
setWithObject:
setAllowlistedClasses:forKeys:
count
countByEnumeratingWithState:objects:count:
defaultClasses
setWithArray:
setByAddingObjectsFromSet:
setSafeObject:forKey:
removeAllObjects
serviceName
clientID
getAllowlistedClassesForKey:
setAllowlistedClass:forKey:
setAllowlistedClasses:forKey:
clearAllowlistedClasses
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initForServiceName:delegate:
initForServiceName:delegate:clientID:
setProxyObjectClasses:
clientDelegate
clientIDRaw
clientProcessIdentifier
proxyObjectClasses
usesPersistentXPCConnections
setUsesPersistentXPCConnections:
.cxx_destruct
_usesPersistentXPCConnections
_clientProcessIdentifier
_serviceName
_clientDelegate
_clientID
_clientIDRaw
_proxyObjectClasses
T@"NSSet",&,N,V_proxyObjectClasses
T@"NSString",R,&,N,V_serviceName
T@"<SUCoreConnectClientDelegate>",R,W,N,V_clientDelegate
T@"NSString",R,&,N,V_clientID
T@"NSString",R,&,N,V_clientIDRaw
Ti,R,N,V_clientProcessIdentifier
TB,N,V_usesPersistentXPCConnections
initWithCategory:
connectionPolicy
logger
entitlements
valueForEntitlement:
boolValue
isConnectionEntitled:
invalidate
connectionQueue
_setQueue:
connectionsAccessQueue
_removeConnection:
setInterruptionHandler:
setInvalidationHandler:
connectProtocolFromClientSendServerMessage:
connectProtocolFromClientSendServerMessage:proxyObject:withReply:
interfaceWithProtocol:
executeGenericBlock:
executeProgressBlock:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
connectProtocolFromServerRequestClientID:
connectProtocolFromServerSendClientMessage:
connectProtocolFromServerSendClientMessage:reply:
setRemoteObjectInterface:
resume
connectionSendMessageQueue
remoteObjectProxyWithErrorHandler:
_setConnection:forClientID:
enableTransactions
initWithMachServiceName:
setDelegate:
currentConnection
isEqualToString:
initWithFormat:
sharedCore
buildError:underlying:description:
_informObserversOfCompletionReplyWithMessage:error:
serverDelegate
handleMessage:proxyObject:reply:
messageType
messageName
version
initWithType:messageName:clientID:version:message:
_getAllObserverConnections
_connectionsForClientID:
observerConnections
addObject:
connections
containsObject:
setByAddingObject:
removeObject:
_clientIDForConnection:
mutableCopy
removeObjectForKey:
connectionClosedForClientID:
listener:shouldAcceptNewConnection:
initWithServerPolicy:
setupListenerAndResumeConnection
connectServerSendClientMessage:
_connectionPolicy
_logger
_connectionsAccessQueue
_connections
_observerConnections
_connectionSendMessageQueue
T@"SUCoreConnectServerPolicy",R,&,N,V_connectionPolicy
T@"SUCoreLog",R,&,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionsAccessQueue
T@"NSMutableDictionary",R,&,N,V_connections
T@"NSMutableSet",R,&,N,V_observerConnections
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionSendMessageQueue
selectorString
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSelector:
initWithString:
_selectorString
T@"NSString",R,&,N,V_selectorString
initWithClientID:completionQueue:genericBlock:progressBlock:
summary
genericBlock
completionQueue
progressBlock
initWithClientID:completionQueue:genericBlock:
initWithClientID:completionQueue:progressBlock:
_completionQueue
_genericBlock
_progressBlock
T@"NSObject<OS_dispatch_queue>",R,&,N,V_completionQueue
T@?,R,N,V_genericBlock
T@?,R,N,V_progressBlock
validateMessageDictionary:
encodeInteger:forKey:
encodeInt:forKey:
error
message
decodeIntegerForKey:
decodeIntForKey:
trackError:forReason:withResult:withError:
decodeObjectOfClasses:forKey:
reason
trackFault:forReason:withResult:withError:
nameForMessageType:
objectForKey:
stringByAppendingFormat:
stringByAppendingString:
allowlistedClasses
_messageType
_messageName
_version
_error
_message
_allowlistedClasses
Tq,R,N,V_messageType
T@"NSString",R,&,N,V_messageName
T@"SUCoreConnectVersion",R,&,N,V_version
T@"NSError",R,&,N,V_error
T@"NSDictionary",R,&,N,V_message
T@"NSSet",R,&,N,V_allowlistedClasses
_getSharedServerAccessQueue
_getSharedServerAllowlistedClasses
initWithServiceName:entitlements:serverDelegate:
delegateQueue
_entitlements
_serverDelegate
_connectionQueue
_delegateQueue
T@"NSSet",R,&,N,V_entitlements
T@"<SUCoreConnectServerDelegate>",R,W,N,V_serverDelegate
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_delegateQueue
_sharedClientLogger
serverConnection
policy
setServerConnection:
dealloc
clientConnectionStateAccessQueue
connectionClosed
clientDelegateCallbackQueue
initWithMachServiceName:options:
_droppedConnection:
clientCompletionQueue
_invalidateConnection:
_internalConnectToServerWithCompletion:
connectClientSendServerMessage:proxyObject:withReply:
stringIsEqual:to:
code
handleResponse:error:
clientReplyCompletionQueue
handleMessage:reply:
clientMessageQueue
initWithClientPolicy:
connectToServerWithCompletion:
connectClientSendServerMessage:
forceCloseConnection
setPolicy:
setLogger:
_serverConnection
_policy
_clientConnectionStateAccessQueue
_clientDelegateCallbackQueue
_clientCompletionQueue
_clientMessageQueue
_clientReplyCompletionQueue
T@"NSXPCConnection",&,N,V_serverConnection
T@"SUCoreConnectClientPolicy",&,N,V_policy
T@"SUCoreLog",&,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientConnectionStateAccessQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientDelegateCallbackQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientCompletionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientMessageQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientReplyCompletionQueue
arrayWithObjects:count:
@16@0:8
@24@0:8@16
v32@0:8#16@24
v32@0:8@16@24
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSSet"24@0:8@"NSString"16
v32@0:8#16@"NSString"24
v32@0:8@"NSSet"16@"NSString"24
v32@0:8@"NSSet"16@"NSSet"24
@32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@16
i16@0:8
v20@0:8B16
@"NSString"
@"<SUCoreConnectClientDelegate>"
@"NSSet"
v40@0:8@16@24@?32
v24@0:8@"SUCoreConnectMessage"16
v40@0:8@"SUCoreConnectMessage"16@"SUCoreConnectClientProxy"24@?<v@?@"SUCoreConnectMessage"@"NSError">32
v24@0:8@"SUCoreProgress"16
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"SUCoreConnectMessage"16@?<v@?@"SUCoreConnectMessage"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"SUCoreConnectServerPolicy"
@"SUCoreLog"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"NSMutableSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@?32
@48@0:8@16@24@?32@?40
@?16@0:8
@24@0:8q16
@56@0:8q16@24@32@40@48
q16@0:8
@"SUCoreConnectVersion"
@"NSError"
@"NSDictionary"
@"<SUCoreConnectServerDelegate>"
@"NSXPCConnection"
@"SUCoreConnectClientPolicy"
com.apple.SUCoreConnect.ClientAllowlistAccessQueue
SUCoreConnectClientPolicy
initForServiceName:delegate: is deprecated, use initForServiceName:delegate:clientID instead
%@.<%d>
v8@?0
Cannot set allowlisted classes for a nil/empty NSSet of keys
Cannot set nil/empty NSSet of classes for keys %@
SUCoreConnectClientPolicy(serviceName:%@|clientID:%@)
com.apple.SUCoreConnect.ConnectionsAccessQueue
com.apple.SUCoreConnect.ConnectionSendMessageQueue
SERVER-%@
v16@?0@"NSError"8
v16@?0@"NSString"8
[SendServerMessage](%@) Observer clients cannot send messages to server
v24@?0@"SUCoreConnectMessage"8@"NSError"16
[SendServerMessage](%@) handleMessage selector is not implemented by server delegate
SUCoreConnectServer(connectionPolicy:%@)
SelectorString
SUCoreConnectVersion(selectorString:%@)
SUCoreConnectClientProxyClientID
com.apple.SUCoreConnect.ClientProxyCompletionQueue
SUCoreConnectClientProxy(%@)
SUCoreConnectClientProxy(clientID:%@|completionQueue:%@|genericBlock:%@|progressBlock:%@)
MessageType
MessageName
ClientID
ClientIDRaw
ClientProcessIdentifier
Version
Error
Message
SUCoreConnectMessage
SUCoreConnectMessage requires a non-nil messageName
SUCoreConnectMessage requires a non-nil clientID
SUCoreConnectMessage requires a valid message dictionary
server policy does not define allowlisted classes for key: %@
SUCoreConnectMessageDecode
server policy failed define required allowlisted classes for key (%@), exception reason: %@
client policy does not define allowlisted classes for key: %@
client policy failed define required allowlisted classes for key (%@), exception reason: %@
no connect policy type could be determined for message with type: %ld
CLIENT_MESSAGE
SERVER_MESSAGE
UNKNOWN_TYPE(%lu)
SUCoreConnectMessage(clientID:%@|type:%@|name:%@)
[>>>
%@: %@
%@: %@
%@: %@
<<<]
SUCoreConnectMessage(type:%@|name:%@|clientID:%@|clientIDRaw:%@|clientProcessIdentifier:%d|version:%@|error:%@|message:%@)
com.apple.SUCoreConnect.ConnectionQueue
com.apple.SUCoreConnect.ServerDelegateQueue
com.apple.SUCoreConnect.ServerAllowlistAccessQueue
SUCoreConnectServerPolicy
SUCoreConnectServerPolicy(serviceName:%@)
com.apple.SUCoreConnect.ServerConnectionQueue
com.apple.SUCoreConnect.ClientConnectionStateAccessQueue
com.apple.SUCoreConnect.ClientDelegateCallbackQueue
com.apple.SUCoreConnect.ClientCompletionQueue
com.apple.SUCoreConnect.ClientMessageQueue
com.apple.SUCoreConnect.ClientReplyCompletionQueue
CLIENT
v16@?0@"NSXPCConnection"8
ClientID of message (%@) does not align with policy clientID (%@)
connectClientSendServerMessage
No server connection present to send client->server message
Client does not respond to messages
SUCoreConnectMonitorReplyMessage
SUCoreConnectMonitorReplyError
[SUCoreConnectClientPolicy] Setting proxy object classes: %{public}@
[SUCoreConnectClientPolicy] Cannot get allowlisted for a nil key, returning no allowlisted classes
[SUCoreConnectClientPolicy] All entries removed from allowlisted classes dictionary
[EntitlementValidation](%{public}@) No connection policy provided, unable to determine what entitlements are required for new connection
[EntitlementValidation](%{public}@) Policy did not define entitlements; unable to determine entitlements and one is always required for new connection
[EntitlementValidation](%{public}@)(%@) Checking for entitlement
[EntitlementValidation](%{public}@)(%@) Client process does not have the entitlement
[EntitlementValidation](%{public}@)(%@) New connection's entitlement is not a boolean
[EntitlementValidation](%{public}@)(%@) New connection's value for entitlement is false
[ListenerNewConnection](%{public}@) Attempting to connect with new connection
[ListenerNewConnection](%{public}@) Rejecting connection - client is not entitled correctly
[InterruptedHandler] Server connection interrupted to XPC client, found no retained server object available
[InterruptedHandler] Server connection interrupted to XPC client, found no retained connection object available
[InterruptedHandler](%{public}@) Client connection interrupted, removing from connections list
[InvalidatedHandler] Server connection invalidated to XPC client, found no retained server object available
[InvalidatedHandler] Server connection invalidated to XPC client, found no retained connection object available
[InvalidatedHandler](%{public}@) Client connection invalidated, removing from connections list
[ListenerNewConnection](%{public}@) Resumed connection, requesting clientID
[ListenerNewConnection](%{public}@) ErrorHandler: Failed to receive clientID when requested for new connection, error: %{public}@
[ListenerNewConnection](%{public}@) Completion successfully received for request of clientID: %{public}@
[ListenerStartup] Setting up listener, enabling transactions, and resuming connection using policy: %{public}@
[ListenerStartup] Listener connection resumed, setup completed.
[SendServerMessage] Received message: %{public}@ (proxyObject:%{public}@, reply:%{public}@)
[SendServerMessage](%{public}@) Calling completion block with error: %{public}@
[SendServerMessage](%{public}@) Observer clients cannot send messages to server, error: %{public}@
[SendServerMessage](%{public}@) connectProtocolFromClientSendServerMessage was not provided a reply block, response:%{public}@ error:%{public}@
[SendServerMessage](%{public}@) connectProtocolFromClientSendServerMessage was not provided a reply block, error:%{public}@
[InformObserversOfReplyCompletion] Attempting to send message (no reply expected) to observer client with connection %{public}@
[InformObserversOfReplyCompletion] ErrorHandler: Connection failed (no completion was expected to be called) for observer client connection %{public}@ with error %{public}@
[SendClientMessage] Method called to send message: %{public}@
[SendClientMessage] Attempting to send message (no reply expected) to client %{public}@ with connection %{public}@
[SendClientMessage] ErrorHandler: Connection failed (no completion was expected to be called) for client with clientID: %{public}@ %{public}@ with error %{public}@
[SendClientMessage] Unable to send message, no connection could be located for clientID: %{public}@
[SendClientMessage] Attempting to send message (no reply expected) to observer client with connection %{public}@
[SendClientMessage] ErrorHandler: Connection failed (no completion was expected to be called) for observer client connection %{public}@ with error %{public}@
[GetAllObserverConnections] Returning %lu observable connections
[SetConnection] Attempting to set new clientID: %{public}@, for connection: %{public}@
[SetConnection] New connection to add is nil, aborting
[SetConnection] Adding new observable connection: %{public}@
[SetConnection] Found %lu existing connections for clientID: %{public}@
[SetConnection] Same connection already exists for clientID: %{public}@
[SetConnection] Setting new connection (to existing set) for clientID: %{public}@, newConnection: %{public}@
[SetConnection] Setting new connection (to new set) for clientID: %{public}@, newConnection: %{public}@
[RemoveConnection] From %lu clientIDs currently connected, attempting to remove connection: %{public}@
[RemoveConnection] Removing observable connection: %{public}@
[RemoveConnection] Removing connection for clientID: %{public}@, connection: %{public}@
[RemoveConnection] Set remaining %lu connections for clientID: %{public}@, connections: %{public}@
[RemoveConnection] No remaining connections for clientID: %{public}@
[RemoveConnection] Unable to locate the clientID for connection: %{public}@
[RemoveConnection] Informing server of connection disconnect for clientID: %{public}@
[ConnectionForClientID] From %lu clientIDs, %lu connections located for clientID: %{public}@, connections: %{public}@
[ConnectionForClientID] From %lu current clientIDs, no connection was located for clientID: %{public}@
[ClientIDForConnection] Located clientID: %{public}@, for connection: %{public}@
[ClientIDForConnection] No clientID located for connection: %{public}@
[%{public}@] No completion queue was provided on initialization, creating new completion queue
[%{public}@] Unable to execute a nil generic block with object: %{public}@
[%{public}@] Calling genericBlock on completion queue with object: %{public}@
[%{public}@] Unable to execute a nil progress block with progress: %{public}@
[%{public}@] Calling progressBlock on completion queue with progress: %{public}@
[SUCoreConnectServerPolicy] Cannot get allowlisted for a nil key, returning no allowlisted classes
[SUCoreConnectServerPolicy] All entries removed from allowlisted classes dictionary
[InvalidateConnection](%{public}@) Invalidating the persistent server connection %{public}@
[InvalidateConnection](%{public}@) Not invalidating server connection %{public}@ as client usesPersistentXPCConnections
[InvalidateConnection](%{public}@) Invalidating the server connection %{public}@
[ConnectionDropped] Client connection dropped to XPC server, found no retained client object available during cleanup
[ConnectionDropped](%{public}@) Client connection dropped to XPC server, calling connectionClosed delegate callback for connection %{public}@
[ConnectionDropped](%{public}@) Client connection dropped from XPC server, no delegate callback provided for connection %{public}@
[ConnectToServer](%{public}@) Already connected to server, not reconnecting for client that usesPersistentXPCConnections for connection %{public}@
[ConnectToServer](%{public}@) Attempting to connect to server
[CLIENT-%{public}@][InvalidatedHandler](%{public}@) Connection invalidated
[CLIENT-%{public}@][InterruptedHandler](%{public}@) Connection interrupted
[ConnectToServer](%{public}@) Client usesPersistentXPCConnections, assigning serverConnection
[ConnectToServer](%{public}@) Successfully connected to server with connection %{public}@
[SendServerMessage](%{public}@) Validation Error: Calling provided reply completion with error %{public}@
[SendServerMessage](%{public}@) Validation Error: No reply completion was provided
[SendServerMessage](%{public}@) No server connection present to send client->server message
[SendServerMessage](%{public}@) No reply completion provided
[SendServerMessage](%{public}@) Connected to server and calling sendMessage %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) ErrorHandler: Calling provided reply completion on connection error %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) ErrorHandler: No reply completion was provided for connection %{public}@
[SendServerMessage](%{public}@) sendMessage response received from server with response %{public}@ error %{public}@ for connection %{public}@
[SendServerMessage](%{public}@) Calling reply delegate callback 'handleResponse:error:' for connection %{public}@
[SendServerMessage](%{public}@) Client does not respond to the handleMessage:reply: delegate callback and no reply completion was provided for connection %{public}@
[ForceCloseConnection](%{public}@) Incoming client request to force close connection
[RequestClientID](%{public}@) Replying to server for clientID request: %{public}@
[RequestClientID](%{public}@) Replying to server for clientID request: %{public}@, no reply block provided
[SendClientMessage](%{public}@) Calling client delegate method handleMessage
[SendClientMessage](%{public}@) Client does not respond to handleMessage:%{public}@, error:%{public}@, calling reply block
[SendClientMessage](%{public}@) Client does not respond to handleMessage:%{public}@, error: %{public}@, and no reply block provided
SUCoreConnectClientPolicy
SUCoreConnectPolicyProtocolPrivate
NSObject
SUCoreConnectPolicyProtocol
SUCoreConnectServerProtocol
SUCoreConnectClientProxyProtocol
SUCoreConnectClientProtocol
SUCoreConnectServer
NSXPCListenerDelegate
SUCoreConnectVersion
NSSecureCoding
NSCoding
SUCoreConnectClientProxy
SUCoreConnectMessage
SUCoreConnectServerPolicy
SUCoreConnectClient
SUCoreConnectConstants
stringByAppendingFormat:
removeAllObjects
boolValue
setWithArray:
setByAddingObject:
setByAddingObjectsFromSet:
currentConnection
setInterface:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
processIdentifier
trackAnomaly:forReason:withResult:withError:
initWithMachServiceName:
encodeObject:forKey:
remoteObjectProxyWithErrorHandler:
valueForEntitlement:
mutableCopy
code
safeObjectForKey:ofClass:
sharedLogger
decodeObjectOfClasses:forKey:
setExportedObject:
countByEnumeratingWithState:objects:count:
reason
addObject:
initWithFormat:
setSafeObject:forKey:
encodeInteger:forKey:
oslog
resume
invalidate
sharedDiag
count
setExportedInterface:
stringWithFormat:
setRemoteObjectInterface:
UTF8String
decodeObjectOfClass:forKey:
sharedCore
stringIsEqual:to:
interfaceWithProtocol:
encodeInt:forKey:
removeObjectForKey:
decodeIntegerForKey:
containsObject:
setDelegate:
_setQueue:
initWithCategory:
setInvalidationHandler:
trackFault:forReason:withResult:withError:
removeObject:
objectForKey:
buildError:underlying:description:
enableTransactions
setWithObject:
stringByAppendingString:
isEqualToString:
setClasses:forSelector:argumentIndex:ofReply:
decodeIntForKey:
trackError:forReason:withResult:withError:
initWithMachServiceName:options:
setInterruptionHandler:
processInfo
init
_getSharedClientAccessQueue
_getSharedClientAllowlistedClasses
_getAllowlistedClassesForKey:
getAllowlistedClassesForKey:
setAllowlistedClass:forKey:
setAllowlistedClasses:forKey:
setAllowlistedClasses:forKeys:
clearAllowlistedClasses
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initForServiceName:delegate:
initForServiceName:delegate:clientID:
setProxyObjectClasses:
serviceName
clientDelegate
clientID
clientIDRaw
clientProcessIdentifier
proxyObjectClasses
usesPersistentXPCConnections
setUsesPersistentXPCConnections:
.cxx_destruct
_usesPersistentXPCConnections
_clientProcessIdentifier
_serviceName
_clientDelegate
_clientID
_clientIDRaw
_proxyObjectClasses
T@"NSSet",&,N,V_proxyObjectClasses
T@"NSString",R,&,N,V_serviceName
T@"<SUCoreConnectClientDelegate>",R,W,N,V_clientDelegate
T@"NSString",R,&,N,V_clientID
T@"NSString",R,&,N,V_clientIDRaw
Ti,R,N,V_clientProcessIdentifier
TB,N,V_usesPersistentXPCConnections
connectProtocolFromClientSendServerMessage:
connectProtocolFromClientSendServerMessage:proxyObject:withReply:
executeGenericBlock:
executeProgressBlock:
connectProtocolFromServerRequestClientID:
connectProtocolFromServerSendClientMessage:
connectProtocolFromServerSendClientMessage:reply:
handleMessage:proxyObject:reply:
connectionClosedForClientID:
listener:shouldAcceptNewConnection:
initWithServerPolicy:
isConnectionEntitled:
setupListenerAndResumeConnection
_informObserversOfCompletionReplyWithMessage:error:
connectServerSendClientMessage:
_getAllObserverConnections
_setConnection:forClientID:
_removeConnection:
_connectionsForClientID:
_clientIDForConnection:
connectionPolicy
logger
connectionsAccessQueue
connections
observerConnections
connectionSendMessageQueue
_connectionPolicy
_logger
_connectionsAccessQueue
_connections
_observerConnections
_connectionSendMessageQueue
T@"SUCoreConnectServerPolicy",R,&,N,V_connectionPolicy
T@"SUCoreLog",R,&,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionsAccessQueue
T@"NSMutableDictionary",R,&,N,V_connections
T@"NSMutableSet",R,&,N,V_observerConnections
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionSendMessageQueue
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSelector:
initWithString:
selectorString
_selectorString
T@"NSString",R,&,N,V_selectorString
initWithClientID:completionQueue:genericBlock:
initWithClientID:completionQueue:progressBlock:
initWithClientID:completionQueue:genericBlock:progressBlock:
summary
completionQueue
genericBlock
progressBlock
_completionQueue
_genericBlock
_progressBlock
T@"NSObject<OS_dispatch_queue>",R,&,N,V_completionQueue
T@?,R,N,V_genericBlock
T@?,R,N,V_progressBlock
validateMessageDictionary:
nameForMessageType:
initWithType:messageName:clientID:version:message:
messageType
messageName
version
error
message
allowlistedClasses
_messageType
_messageName
_version
_error
_message
_allowlistedClasses
Tq,R,N,V_messageType
T@"NSString",R,&,N,V_messageName
T@"SUCoreConnectVersion",R,&,N,V_version
T@"NSError",R,&,N,V_error
T@"NSDictionary",R,&,N,V_message
T@"NSSet",R,&,N,V_allowlistedClasses
_getSharedServerAccessQueue
_getSharedServerAllowlistedClasses
initWithServiceName:entitlements:serverDelegate:
entitlements
serverDelegate
connectionQueue
delegateQueue
_entitlements
_serverDelegate
_connectionQueue
_delegateQueue
T@"NSSet",R,&,N,V_entitlements
T@"<SUCoreConnectServerDelegate>",R,W,N,V_serverDelegate
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_delegateQueue
dealloc
connectionClosed
handleResponse:error:
handleMessage:reply:
_sharedClientLogger
initWithClientPolicy:
_invalidateConnection:
_droppedConnection:
_internalConnectToServerWithCompletion:
connectToServerWithCompletion:
connectClientSendServerMessage:
connectClientSendServerMessage:proxyObject:withReply:
forceCloseConnection
serverConnection
setServerConnection:
policy
setPolicy:
setLogger:
clientConnectionStateAccessQueue
clientDelegateCallbackQueue
clientCompletionQueue
clientMessageQueue
clientReplyCompletionQueue
_serverConnection
_policy
_clientConnectionStateAccessQueue
_clientDelegateCallbackQueue
_clientCompletionQueue
_clientMessageQueue
_clientReplyCompletionQueue
T@"NSXPCConnection",&,N,V_serverConnection
T@"SUCoreConnectClientPolicy",&,N,V_policy
T@"SUCoreLog",&,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientConnectionStateAccessQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientDelegateCallbackQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientCompletionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientMessageQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_clientReplyCompletionQueue
defaultClasses
@16@0:8
@24@0:8@16
v32@0:8#16@24
v32@0:8@16@24
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSSet"24@0:8@"NSString"16
v32@0:8#16@"NSString"24
v32@0:8@"NSSet"16@"NSString"24
v32@0:8@"NSSet"16@"NSSet"24
@32@0:8@16@24
@40@0:8@16@24@32
v24@0:8@16
i16@0:8
v20@0:8B16
@"NSString"
@"<SUCoreConnectClientDelegate>"
@"NSSet"
v40@0:8@16@24@?32
v24@0:8@"SUCoreConnectMessage"16
v40@0:8@"SUCoreConnectMessage"16@"SUCoreConnectClientProxy"24@?<v@?@"SUCoreConnectMessage"@"NSError">32
v24@0:8@"SUCoreProgress"16
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSString">16
v32@0:8@"SUCoreConnectMessage"16@?<v@?@"SUCoreConnectMessage"@"NSError">24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"SUCoreConnectServerPolicy"
@"SUCoreLog"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"NSMutableSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@?32
@48@0:8@16@24@?32@?40
@?16@0:8
@24@0:8q16
@56@0:8q16@24@32@40@48
q16@0:8
@"SUCoreConnectVersion"
@"NSError"
@"NSDictionary"
@"<SUCoreConnectServerDelegate>"
@"NSXPCConnection"
@"SUCoreConnectClientPolicy"
