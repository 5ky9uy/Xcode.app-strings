CloudSettingsServiceProtocol
ServiceDelegate
NSXPCListenerDelegate
NSObject
IPLocaleCoder
InternationalCloudMediator
_deviceLanguage
T#,R
componentsFromLocaleIdentifier:
T@"NSString",&
isProxy
T@"NSString",R,C
numberWithBool:
UTF8String
serviceListener
_currentGlobalUserInflection
.cxx_destruct
allKeys
T@"NSMutableDictionary",&,V_mutablePreferences
containsObject:
T@"NSString",&,V_languageIdentifier
localeIdentifierFromComponents:
TQ,R
release
_ICUBaseNameForLocaleIdentifier:
setValuesForKeysWithDictionary:
_defaultCalendarIdentifier
_defaultNumberingSystemIdentifier
_languageIdentifier
_mutablePreferences
_setAsGlobalUserInflection
applyCloudSettingsToDevice:forStore:
applySettingsToDevice:
arrayWithObjects:count:
autorelease
boolValue
calendar
calendarIdentifier
canonicalLocaleIdentifierFromString:
class
conformsToProtocol:
copy
count
dataUsingEncoding:
debugDescription
defaultCalendarForLocaleID:
defaultNumberingSystemForLocaleID:
description
deviceSettings
dictionary
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
enumerateKeysAndObjectsUsingBlock:
exceptionWithName:reason:userInfo:
externalRepresentation
firstObject
hash
inflection
init
initWithBytes:length:encoding:
initWithData:encoding:
initWithDictionary:
initWithExternalRepresentation:error:
initWithLocaleIdentifier:
initWithStoreIdentifier:settingsMediator:
interfaceWithProtocol:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
languageIdentifier
listener:shouldAcceptNewConnection:
liveText
locale
localeIdentifier
localePreferenceKeysAndClasses
localeWithPreferences:
matchedLanguagesFromAvailableLanguages:forPreferredLanguages:
mutableCopy
mutablePreferences
numberingSystemIdentifier
objectForKey:
objectForKey:inDomain:
objectForKeyedSubscript:
performFirstTimeSetupForStore:
performFirstTimeSetupForStore:newDevice:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferences
raise
registerKey:getter:setter:
registerKeys
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
self
setCalendarIdentifier:
setDelegate:
setExportedInterface:
setExportedObject:
setInflection:
setLanguageIdentifier:
setLiveText:
setLocale:
setLocaleIdentifier:
setMutablePreferences:
setNumberingSystemIdentifier:
setObject:forKey:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
standardUserDefaults
superclass
willChangeValueForKey:
writeToCloudSettings:forStore:
zone
v32@0:8@16@24
v24@0:8@16
v28@0:8@16B24
@16@0:8
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v28@0:8@"NSString"16B24
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
@"NSString"
@"NSMutableDictionary"
com.apple.cloudsettings.international
AppleLocale
calendar
numbers
localeIdentifier
languageIdentifier
calendarIdentifier
numberingSystemIdentifier
en_US
v32@?0@"NSString"8#16^B24
*** setLocaleIdentifier: object cannot be nil
*** setLanguageIdentifier: object cannot be nil
gregorian
AppleLiveTextEnabled
IP_Locale
IP_LiveText
IP_Infection
v32@?0@"NSString"8@16^B24
AppleDatePreferencesChangedNotification
AppleTimePreferencesChangedNotification
AppleNumberPreferencesChangedNotification
AppleTemperatureUnitPreferencesChangedNotification
zh-Hans
zh-Hant
yue-Hans
yue-Hant
IN XPCSERVICE - Update locale
IN XPCSERVICE - Update locale settings: %@
IN XPCSERVICE - localeID: %@
IN XPCSERVICE - Update live text
IN XPCSERVICE - Update live text: %@
IN XPCSERVICE - Update inflection: %@
IN XPCSERVEC - Can't get inflection due to %@
IN SERVICE Locale
IN SERVICE Locale: %@
IN SERVICE LiveText
IN SERVICE Inflection
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.cloudsettings.international</string>
</dict>
</plist>
Z0X/com.apple.developer.ubiquity-kvstore-identifier%com.apple.cloudsettings.international
CloudSettingsServiceProtocol
ServiceDelegate
NSXPCListenerDelegate
NSObject
IPLocaleCoder
InternationalCloudMediator
_deviceLanguage
T#,R
componentsFromLocaleIdentifier:
T@"NSString",&
isProxy
T@"NSString",R,C
numberWithBool:
UTF8String
serviceListener
_currentGlobalUserInflection
.cxx_destruct
allKeys
T@"NSMutableDictionary",&,V_mutablePreferences
containsObject:
T@"NSString",&,V_languageIdentifier
localeIdentifierFromComponents:
TQ,R
release
_ICUBaseNameForLocaleIdentifier:
setValuesForKeysWithDictionary:
_defaultCalendarIdentifier
_defaultNumberingSystemIdentifier
_languageIdentifier
_mutablePreferences
_setAsGlobalUserInflection
applyCloudSettingsToDevice:forStore:
applySettingsToDevice:
arrayWithObjects:count:
autorelease
boolValue
calendar
calendarIdentifier
canonicalLocaleIdentifierFromString:
class
conformsToProtocol:
copy
count
dataUsingEncoding:
debugDescription
defaultCalendarForLocaleID:
defaultNumberingSystemForLocaleID:
description
deviceSettings
dictionary
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
didChangeValueForKey:
enumerateKeysAndObjectsUsingBlock:
exceptionWithName:reason:userInfo:
externalRepresentation
firstObject
hash
inflection
init
initWithBytes:length:encoding:
initWithData:encoding:
initWithDictionary:
initWithExternalRepresentation:error:
initWithLocaleIdentifier:
initWithStoreIdentifier:settingsMediator:
interfaceWithProtocol:
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
languageIdentifier
listener:shouldAcceptNewConnection:
liveText
locale
localeIdentifier
localePreferenceKeysAndClasses
localeWithPreferences:
matchedLanguagesFromAvailableLanguages:forPreferredLanguages:
mutableCopy
mutablePreferences
numberingSystemIdentifier
objectForKey:
objectForKey:inDomain:
objectForKeyedSubscript:
performFirstTimeSetupForStore:
performFirstTimeSetupForStore:newDevice:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferences
raise
registerKey:getter:setter:
registerKeys
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
self
setCalendarIdentifier:
setDelegate:
setExportedInterface:
setExportedObject:
setInflection:
setLanguageIdentifier:
setLiveText:
setLocale:
setLocaleIdentifier:
setMutablePreferences:
setNumberingSystemIdentifier:
setObject:forKey:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
standardUserDefaults
superclass
willChangeValueForKey:
writeToCloudSettings:forStore:
zone
v32@0:8@16@24
v24@0:8@16
v28@0:8@16B24
@16@0:8
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"NSString"16
v28@0:8@"NSString"16B24
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
@"NSString"
@"NSMutableDictionary"
com.apple.cloudsettings.international
AppleLocale
calendar
numbers
localeIdentifier
languageIdentifier
calendarIdentifier
numberingSystemIdentifier
en_US
v32@?0@"NSString"8#16^B24
*** setLocaleIdentifier: object cannot be nil
*** setLanguageIdentifier: object cannot be nil
gregorian
AppleLiveTextEnabled
IP_Locale
IP_LiveText
IP_Infection
v32@?0@"NSString"8@16^B24
AppleDatePreferencesChangedNotification
AppleTimePreferencesChangedNotification
AppleNumberPreferencesChangedNotification
AppleTemperatureUnitPreferencesChangedNotification
zh-Hans
zh-Hant
yue-Hans
yue-Hant
IN XPCSERVICE - Update locale
IN XPCSERVICE - Update locale settings: %@
IN XPCSERVICE - localeID: %@
IN XPCSERVICE - Update live text
IN XPCSERVICE - Update live text: %@
IN XPCSERVICE - Update inflection: %@
IN XPCSERVEC - Can't get inflection due to %@
IN SERVICE Locale
IN SERVICE Locale: %@
IN SERVICE LiveText
IN SERVICE Inflection
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.cloudsettings.international</string>
</dict>
</plist>
Z0X/com.apple.developer.ubiquity-kvstore-identifier%com.apple.cloudsettings.international
