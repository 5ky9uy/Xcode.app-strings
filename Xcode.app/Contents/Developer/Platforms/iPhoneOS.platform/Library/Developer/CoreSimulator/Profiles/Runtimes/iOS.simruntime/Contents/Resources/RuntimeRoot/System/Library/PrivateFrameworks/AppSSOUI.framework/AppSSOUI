@(#)PROGRAM:AppSSOUI  PROJECT:AppSSO-1
%s extensionViewController = %{public}@, hints = %{private}@ on %@
unsupported UIModalPresentationStyle (%d) specified, using default
%s  on %@
dismissing _UIFallbackPresentationViewController
-[SOUIAuthorizationViewController initWithExtensionViewController:hints:]
-[SOUIAuthorizationViewController loadView]
v8@?0
-[SOUIAuthorizationViewController viewDidLoad]
-[SOUIAuthorizationViewController viewWillAppear:]
-[SOUIAuthorizationViewController viewDidAppear:]
-[SOUIAuthorizationViewController viewWillDisappear:]
-[SOUIAuthorizationViewController viewDidDisappear:]
com.apple.AppSSO
SOUIAuthorizationViewController
SOUIAuthorizationViewController
_UIRemoteViewControllerContaining
NSObject
UIGestureRecognizerDelegate
T@"_UIRemoteViewController",R,N
T#,R
isProxy
T@"NSString",R,C
viewWillAppear:
.cxx_destruct
_cancel
T@"<SOUIAuthorizationViewControllerDelegate>",W,V_delegate
release
T@?,C,N,V_dismissCompletionHandler
TQ,R
_containedRemoteViewController
_delegate
_dismissCompletionHandler
_extensionViewController
_rootSheetPresentationController
_setShouldScaleDownBehindDescendantSheets:
addChildViewController:
addGestureRecognizer:
addSubview:
autorelease
bottomAnchor
class
clearColor
conformsToProtocol:
constraintEqualToAnchor:
debugDescription
delegate
description
didMoveToParentViewController:
dismissCompletionHandler
dismissViewControllerAnimated:completion:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
hash
init
initWithExtensionViewController:hints:
integerValue
isEqual:
isKindOfClass:
isMemberOfClass:
keyWindow
leadingAnchor
loadView
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
respondsToSelector:
retain
retainCount
self
setActive:
setBackgroundColor:
setDelegate:
setDismissCompletionHandler:
setModalPresentationStyle:
setTranslatesAutoresizingMaskIntoConstraints:
setView:
shouldAutorotate
superclass
supportedInterfaceOrientations
topAnchor
trailingAnchor
view
viewControllerDidCancel:
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewWillDisappear:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"_UIRemoteViewController"16@0:8
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@32@0:8@16@24
v16@0:8
v28@0:8B16@?20
v20@0:8B16
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"UIViewController"
@"<SOUIAuthorizationViewControllerDelegate>"
@(#)PROGRAM:AppSSOUI  PROJECT:AppSSO-1
%s extensionViewController = %{public}@, hints = %{private}@ on %@
unsupported UIModalPresentationStyle (%d) specified, using default
%s  on %@
dismissing _UIFallbackPresentationViewController
-[SOUIAuthorizationViewController initWithExtensionViewController:hints:]
-[SOUIAuthorizationViewController loadView]
v8@?0
-[SOUIAuthorizationViewController viewDidLoad]
-[SOUIAuthorizationViewController viewWillAppear:]
-[SOUIAuthorizationViewController viewDidAppear:]
-[SOUIAuthorizationViewController viewWillDisappear:]
-[SOUIAuthorizationViewController viewDidDisappear:]
com.apple.AppSSO
SOUIAuthorizationViewController
SOUIAuthorizationViewController
_UIRemoteViewControllerContaining
NSObject
UIGestureRecognizerDelegate
T@"_UIRemoteViewController",R,N
T#,R
isProxy
T@"NSString",R,C
viewWillAppear:
.cxx_destruct
_cancel
T@"<SOUIAuthorizationViewControllerDelegate>",W,V_delegate
release
T@?,C,N,V_dismissCompletionHandler
TQ,R
_containedRemoteViewController
_delegate
_dismissCompletionHandler
_extensionViewController
_rootSheetPresentationController
_setShouldScaleDownBehindDescendantSheets:
addChildViewController:
addGestureRecognizer:
addSubview:
autorelease
bottomAnchor
class
clearColor
conformsToProtocol:
constraintEqualToAnchor:
debugDescription
delegate
description
didMoveToParentViewController:
dismissCompletionHandler
dismissViewControllerAnimated:completion:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveEvent:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizerShouldBegin:
hash
init
initWithExtensionViewController:hints:
integerValue
isEqual:
isKindOfClass:
isMemberOfClass:
keyWindow
leadingAnchor
loadView
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
respondsToSelector:
retain
retainCount
self
setActive:
setBackgroundColor:
setDelegate:
setDismissCompletionHandler:
setModalPresentationStyle:
setTranslatesAutoresizingMaskIntoConstraints:
setView:
shouldAutorotate
superclass
supportedInterfaceOrientations
topAnchor
trailingAnchor
view
viewControllerDidCancel:
viewDidAppear:
viewDidDisappear:
viewDidLoad
viewWillDisappear:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"_UIRemoteViewController"16@0:8
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
@32@0:8@16@24
v16@0:8
v28@0:8B16@?20
v20@0:8B16
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"UIViewController"
@"<SOUIAuthorizationViewControllerDelegate>"
