MbP?
mediaremoted
MRDSwiftStruct
%@-%@-%@-%@-%@-%@
com.apple.mediaremote
type
date
event
eventdescription
selectionreason
eventreason
timesince
changeType
changeTypeDescription
v8@?0
B8@?0
Restoring previous
v12@?0B8
%@ origin registered <%@> (<%@>) 
origin de-registration of <%@> (<%@>) 
personal device was attached
Playback changed for %@
was not playing sort of recently <%lf> seconds ago
was playing recently <%lf> seconds ago
was not <%@> sort of recently <%lf> seconds ago
was <%@> recently <%lf> ago
was not playing recently <%lf> ago and was not <%@> recently <%lf> seconds ago
Could not find origin with deviceUID = <%@>
No %@SystemEndpoint
Internal Setting not set
local activePlayer %@ is playing
Fallback to previous
%@SystemEndpoint changed from <%@> to <%@> with changeType = <%@>, eventType = <%@>, eventReason = <%@>, selectionReason = <%@>
unknown
@"NSDictionary"8@?0
%@ endpoint disconnected and attempting to reconnect
v16@?0@"MRAVEndpoint"8
v24@?0d8@?<v@?B>16
%@Endpoint changed
com.apple.mediaremote.systemendpointcontroller.userselectedtimer
 %@ timeout event %@ after <%lf> seconds 
%@Endpoint timeout imminent
%@Endpoint is playing
%@Endpoint is local
com.apple.mediaremote.systemendpointcontroller.playbacktimer
%@ playback timedout event %@ after <%lf> seconds
com.apple.mediaremote.systemEndpointController.userDefaults.serialQueue
SystemEndpoint
v32@?0@8@"NSDictionary"16^B24
Startup
B16@?0@"MRDeviceInfo"8
ASE moved to another endpoint
StartUp
ConnectionAdded
ConnectionRemoved
UserSelected
UserSelectedTimeout
Playback
PlaybackTimeout
NowPlayingAppRemoved
migrationPlaybackSession
ResolveActiveEndpoint
invalid route error
from external device client
Analytics: 
com.apple.mediaremote.MRDRemoteControlServer
com.apple.mediaremote.MRDMediaRemoteUIService
MULTIPLAYER_CAPACITY_REACHED_TITLE
MULTIPLAYER_CAPACITY_REACHED
v16@?0@"MRCommandResult"8
v20@?0I8@"NSArray"12
com.apple.mediaremote.broadcastcommand.%@
v32@?0@"NSString"8@"MRDRemoteControlContext"16^B24
MRXPC_MESSAGE_ID_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
@"NSData"16@?0@"_MRSendCommandResultMessageProtobuf"8
MRXPC_COMMAND_STATUSES_DATA_KEY
MRXPC_MEDIA_CONTROLS_CONFIGURATION_KEY
MRXPC_MEDIA_CONTROLS_XPC_ENDPOINT_KEY
MRXPC_MEDIA_CONTROLS_STYLE_KEY
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0@"NSError"8
MRXPC_MEDIA_CONTROLS_ROUTE_UID_KEY
MRXPC_MEDIA_CONTROLS_CENTER_KEY
MRXPC_COMMAND_KEY
Pause because migration
v24@?0@"MRDMediaRemoteClient"8@"NSError"16
Did not receive fade out notification
com.apple.mediaexperience.fadeoutappliedforplaybackhandoff
v12@?0i8
MRXPC_RESTRICT_COMMANDS_ARRAY_DATA_KEY
@"NSData"16@?0@"NSData"8
B16@?0@"NSData"8
%@ started playback
phone call began
v16@?0Q8
RestrictedCommandClients Mode - Client not in allow list
FBSOpenApplicationErrorDomain
command<%@>=%@
The app did not launch and set canBeNowPlaying in a timely manner
com.apple.Fuse
com.apple.mediaremoted
B16@?0@"MRDNowPlayingClient"8
B16@?0@"MRCommandInfo"8
com.apple.MediaPlayer.RemotePlayerService
airtunesd
tvairplayd
com.apple.HomePodCannedDemo
coreduetd
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVSystemController_InterruptAudioSessionIDForHandoff
AVSystemController_AppToInterruptCurrentNowPlayingSessionAttribute
AVSystemController_AllowAppToFadeInTemporarilyAttribute
MRXPC_COMMAND_OPTIONS_KEY
Client <%@> missing entitlement needed to send command <%@> to arbitrary apps. Sending to NowPlayingApp instead of <%@>.
MRDBrowsableContentAPICoordinatorPersistence
MRDBrowsableContentAPICoordinatorStoredCaseSensitive
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.mediaremote.remotecontrol.routedcommands
MRDAVRoutingDataSourcePickableRoutesDidChangeNotification
MRDAVRoutingDataSourceExternalScreenDidChangeNotification
MRDAVRoutingDataSourceRouteStatusDidChangeNotification
MRDAVRoutingDataSourceRouteStatusUserInfoKey
MRDAVRoutingDataSourceAVRouteUserInfoKey
MRDAVRoutingCategorySystem
MRDAVRoutingCategoryMedia
com.apple.MRDAVRoutingDataSource.serialQueue
com.apple.MRDUIActivityServer.queue
MediaRemoteUIProcessElectedPlayerChange
MediaRemoteUIProcessElectedPlayerIsPlayingChange
MediaRemoteUIProcessElectedPlayerPlaybackQueueChange
MRUIActivityController
/System/Library/PrivateFrameworks/MediaRemoteDaemonServices.framework/MediaRemoteDaemonServices
subclass must implement
Currently playing %ld %@ streams (max = %ld).
external
origin-%ld %@ (%@)
%@ (%@) + 
%@ on %@
canActivateStreamWithPlayerPath
B24@?0@"NSArray"8@"MROrigin"16
B16@?0@"MRDNowPlayingOriginClient"8
B16@?0@"MRPlayerPath"8
PlayerPath does not take up a slot thus is always allowed to activate
PlayerPath is already active
Number of currently activeStreams (%ld) is less that capacity (%ld) so allowing activation
Already above max capacity. %@
interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath
v24@?0@"MRPlayerPath"8@"NSError"16
%@<%@>
Could not find a best stream to interrupt
bestStreamToInterrupt
@"MRDNowPlayingPlayerClient"16@?0@"MRDNowPlayingOriginClient"8
q24@?0@"MRDNowPlayingPlayerClient"8@"MRDNowPlayingPlayerClient"16
Number of currently activeStreams (%ld) is less that capacity (%ld).
Already playing <%@> to specified device <%@>
willStartingPlaybackToOutputDevicesInterrupt
%@ just started playing
com.apple.mediaremote.%@.%@
v32@?0@"NSNumber"8@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"16^B24
%@ %p {
  playerPath = %@
  player = %@
  canBeNowPlayingPlayer = %@
  transaction = %@
  playbackState = %@
  inferredPlaybackState = %@
  playbackStateHistory = %@
  pictureInPictureEnabled = %@
  supportedCommands = %@
  capabilities = %@
  playbackQueue = %@
  subscriptionController = %@
supportedCommands
playbackQueue
nowPlayingItem
inferred playback state
playback state
playbackQueueCapabilities
q24@?0@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"8@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"16
com.apple.mediaremoted.MRDNowPlayingPlayerClient/%@
true
false
%@-%@
CUBluetoothClient
CoreUtils
v16@?0@"NSData"8
v24@?0@"MRDeviceInfo"8@"NSError"16
<%@ %p "%@">
local.
%@ (pid=%d)
<%@ %p {
  %@-%d
  hasConnected = %@ (%@ %lf seconds ago)
  hasConnectedCompleted = %@ (%@ %lf seconds ago)
  connectionState = %@ (%@ %lf seconds ago)
  registeredCallbacks = %@
  registeredNotifications = %@
  subscribedPlayerPaths = %@
  pendingClientState = %@
  connectionMonitor = %@
B16@?0@"MRAVOutputDevice"8
v32@?0@"MRAVRoutingDiscoverySessionConfiguration"8@"NSArray"16^B24
WakingPlayerPathNotification
<%@ %p{
 hasConnected
    connectionState=%@
    connectionStateError=%@
    name = %@
    endpoint = %@
    volume = %f
    volumeCapabilities = %@
    outputDeviceVolumes = %@
    outputDeviceVolumeCapabilities = %@
    modifications = %@
    discoveryResults = %@
   addedOutputDevices = %@
    changedOutputDevices = %@
    removedOutputDevices = %@
com.apple.mediaremote.MRDIDSService
<%@:%p {
 service=%@
 devices=%@
 messageHandlers = %@
 deviceMessageHandlers = %@
v56@?0@"MRDIDSServiceMessage"8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48
v64@?0@"MRDIDSServiceMessage"8@"IDSDevice"16@"NSString"24@"NSString"32@"NSString"40@"NSNumber"48@"NSNumber"56
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
messageid
destination
session
data
replyid
v32@?0@?<v@?@"MRDIDSServiceMessage"@"IDSDevice"@"NSString"@"NSString"@"NSString"@"NSNumber"@"NSNumber">8Q16^B24
v32@?0@?<v@?@"MRDIDSServiceMessage"@"NSString"@"NSString"@"NSString"@"NSNumber"@"NSNumber">8Q16^B24
bundleID
audioSessionID
mxSessionIDs
isPlaying
B16@?0@"<MRDNowPlayingDataSourceObserver>"8
<%@, %p: sourceOrigin: %@ - destinationOrigin: %@>
v20@?0I8^{__CFArray=}12
v36@?0^v8I16^{__CFDictionary=}20@?<v@?^{__CFArray=}>28
v24@?0^v8^{__CFError=}16
v32@?0^v8^v16@?<v@?^v^{__CFError=}>24
v24@?0@"MRPlaybackSessionMigrateRequest"8@"NSError"16
v40@?0@"MRPlaybackSession"8@"MRPlaybackSessionMigrateRequest"16@"MRPlayerPath"24@?<v@?@"MRPlaybackSessionMigrateRequest"@"NSError">32
v32@?0^v8^v16@?<v@?^{__CFError=}>24
v40@?0^v8^{__CFError=}16^v24@?<v@?^{__CFError=}>32
%@-%@-%d
MediaPlayback
v32@?0@"NSArray"8@"MRAVEndpoint"16@"NSError"24
AVOutputDeviceDiscoverySession
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVOutputContextSetOutputDevicePasswordKey
AVOutputContext
Unknown
SharedAudioPresentation
SharedSystemAudio
SharedSystemScreen
iTunesAudio
Auxiliary
<Unknown>
com.apple.mediaremote.MRDRapportRemoteControlService.workerQueue
com.apple.mediaremote.remotecontrol.connect
destinationGroupUID
v32@?0@"MRDeviceInfo"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
com.apple.mediaremote.remotecontrol.disconnect
MRDRapportRemoteControlService received disconect event
B16@?0@"MRDRapportRemoteControlServiceConnection"8
v24@?0@"MRDeviceInfo"8@"NSDictionary"16
com.apple.mediaremote.remotecontrol.reset
MRDRapportRemoteControlService received reset event
RapportRemoteControlChannel-<%@->%@/%@>
MRDMediaRemoteExternalDeviceServerClientInvalidatedNotification
v16@?0@"NSNotification"8
incomingRapportConnections
incomingRapportConnectionsDescription
source
source=%@(%@) session=%@
ProximityController(%@)
MRDAVOutputContextManagerDidReset
local=%@
active=%@
inactive=%@
reserved=%@
@16@?0@"MRAVOutputContext"8
v16@?0@"NSMutableDictionary"8
@16@?0@"MRAVOutputDevice"8
B16@?0@"NSString"8
B16@?0@"MRAVOutputContext"8
@"MRAVConcreteOutputContext"16@?0@"AVOutputContext"8
@16@?0@"MRAVOutputDeviceDescription"8
AVSystemController_ServerConnectionDiedNotification
AVSystemController_SubscribeToNotificationsAttribute
PBSMediaRemoteServiceDialogOptionTitleKey
PineBoardServices
PBSMediaRemoteServiceDialogOptionPINKey
PBSMediaRemoteServiceDialogOptionMessageKey
PBSMediaRemoteServiceDialogOptionTimeoutKey
TV_REMOTE_AUTHENTICATION_PIN_DIALOG_HEADER
TV_REMOTE_AUTHENTICATION_PIN_DIALOG_MESSAGE
com.apple.mediaremote.%@
  discoveryMode = %@
  idsService = %@
  outputDevices = %@
@"MRAVOutputDevice"16@?0@"IDSDevice"8
MRDAVLocalDeviceCommitManager
MRDAVLocalDeviceCommitManager.serial
Boot
AirplayActiveDidChange
alltopologyChangesFinished-%@
didRemoveLocalDevice
clusterTypeDidChange
v24@?0@"MRAVEndpoint"8@"NSError"16
v16@?0^{__CFError=}8
Dynamic
MRXPC_INDEXPATH_DATA_KEY
v16@?0@"MRDMediaRemoteClient"8
MRXPC_CONTENT_API_MASK_KEY
MRXPC_BUNDLE_ID_ARRAY_DATA_KEY
BrowsableContent playback initiated
Sending initiatePlaybackMessage
MRXPC_BUNDLE_ID_KEY
v16@?0@"NSArray"8
  localEndpointConnection=%@
  discoveryMode=%@
  routingContextID=%@
  avDiscoverySession = %@
  idsDiscoverySession = %@
  localOutputDevice = %@
  unclusteredOutputDevices = %@
  availableOutputDevices = %@
localEndpointConnection
v32@?0@"NSString"8@"NSArray"16^B24
updateFromOutputContext
deviceInfo
reservedOutputContext
addFromOutputContext
v16@?0@"_MRAVOutputDeviceDescriptorProtobuf"8
loadLocalEndpointConnection
com.apple.mediaremote.hostedDiscoverySession/serialQueue
discovery enabled at: %@ (%.0f s ago) until: %@ (duration %.0f s)
discovery never enabled
%@ %p {
    discovery mode = %@
    xpc connection = %@
    pid = %d
    bundle id = %@
    %@
    connection monitor = %@
com.apple.mediaremoted.MRDAVHostedDiscoverySession/%@(%d)
<%@: %p - destination UID=%@ groupID=%@>
NowPlaying 
OutputDevices 
Volume 
Keyboard 
SystemEndpointUpdates 
<%@ %p {
    deviceInfo = %@
    lastSupportedMessageType = %ld
    virtualTouchDevices = %@
    registeredVirtualVoiceInputDevices = %@
    playbackQueueRequests = %@
    sessionPeer = %@
    pinPairingToken = %@
    serverDelegate = %@
    registeredUpdates = %@
    subscribedPlayerPaths = %@
    destinationOutputDeviceUID = %@
    destinationGroupID = %@
    destinationEndpoint = %@
    connection = %@
v16@?0I8I12
v16@?0@"MRPlayerPath"8
MRDExternalDeviceServer.requestConnectedDestinationEndpoint
ExternalDeviceServerDestination
com.apple.TVRemote
FF disabled
deviceInfo==nil
endpoint does not support outputContextSync
v32@?0@"NSNumber"8@"MREmulatedGameController"16^B24
B16@?0@"MRAVDistantOutputDevice"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
@16@?0@"MRAVEndpoint"8
B24@?0@"MRAVEndpoint"8@"MRAVEndpoint"16
@"NSString"16@?0@"MRAVEndpoint"8
INSERT INTO auth_tokens (device_id, auth_token, date_created, expiration_date) VALUES (?, ?, ?, ?);
DELETE FROM auth_tokens WHERE expiration_date < ?;
PRAGMA journal_mode=WAL
PRAGMA user_version;
CREATE TABLE 'auth_tokens' ('id' INTEGER PRIMARY KEY AUTOINCREMENT,'auth_token' TEXT NOT NULL,'date_created' INTEGER,'expiration_date' INTEGER,'device_id' TEXT);
PRAGMA user_version = %d
SELECT auth_token, date_created, expiration_date, device_id FROM auth_tokens;
 Service = %@
 DiscoveryChannels = %@
 RemoteControlChannels = %@
v48@?0@"MRDIDSServiceMessage"8@"IDSDevice"16@"NSString"24@"NSString"32@"NSString"40
v16@?0@"MRDIDSServiceMessage"8
v32@?0@"MRAVOutputDevice"8q16@?<v@?@"NSString">24
IDSRemoteControlChannel-<%@/%@>
Tried to connect to endpoint but its groupLeader changed from %@ to %@
v24@?0q8@?<v@?@"NSString">16
v16@?0@"MRIDSCompanionMessage"8
  client = %@
  transport = %@
  destination = %@
  session = %@
  connectionAttemptDate = %@ (%lf seconds ago)
@16@?0@"NSMutableDictionary"8
New RemoteControlChannel created for destination %@, clearing all previous channels for this destination
v32@?0@"NSString"8@"MRDIDSRemoteControlServiceRemoteControlChannel"16^B24
model
deviceID
AirPlayPortExtendedInfo
kMRDPersonalDeviceControllerPersonalDeviceStateDevicesKey
kMRDPersonalDeviceControllerPersonalDeviceStateDateKey
com.apple.mediaremote.MRDPersonalDeviceController
com.apple.mediaremote.MRDPersonalDeviceController.delegateQueue
Personal devices did change.
Initial load with no persisted state.
com.apple.mediaremote.mrdpersonaldevicecontroller.overridetimer
Timeout reached.
v24@?0^{__CFArray=}8^{__CFError=}16
Companion Link Event
MRXPC_HOMEKIT_IDENTIFIER_KEY
RecentlyPlayedEntries
v32@?0@"NSDictionary"8Q16^B24
q24@?0@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"8@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"16
lastPlayingDate
lastNotPlayingDate
currentPlaybackSessionTypes
supportedPlaybackSessionTypes
currentPlaybackSessionIdentifier
%@-%@-%@-%@-%@-%@(%@)-%@-%@
PLAYING
NOT PLAYING
deviceUID
playerPathDescription
contentItemDescription
 connection = %@
 outputDevice = %@
 session = %@
 error = %@
v16@?0@"MRProtocolMessage"8
%@-%d
MPStoreClientTokenDidChangeNotification
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_NAME
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
MRXPC_TRANSACTION_ENDED
MR_WAIT_FOR_DEBUGGER
com.apple.MediaRemote.transactionServer
v12@?0I8
v32@?0@"NSString"8@"NSString"16^B24
MRIDSCompanionTransportConnection.dealloc
 type = %@
 destination = %@
 isValid = %@
v32@?0@"MRAVOutputDevice"8Q16^B24
TightSyncCluster
com.apple.common
BasicAngelIPC
com.apple.mediaremoteui.services
com.apple.mediaremoteui.ui-service
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.mediaremote.MRDIDSCompanionRemoteControlServiceConnection.workerQueue
v32@?0@"MRIDSCompanionMessage"8@"NSString"16@"NSString"24
%@ %p
IDSWatch: %@
DiscoveryChannelMode: %@
Connections: %@
lastSentEndpoint: %@ (%.1fs ago)
Start
IDS Connected
IDSConnection Disconnected
MRDIDSCompanionRemoteControlService.setConnectionState
IDSDiscoveryChannel
New replacement connection %@-%@ established
v32@?0@"NSString"8@"MRDIDSCompanionRemoteControlServiceConnection"16^B24
Interrupted
Failed to load device info
Failed to create IO Streams
Failed to register custom origin
Failed to re-register custom origin
Failed to sync client state
ConnectOptions
com.apple.MediaRemote.MRExternalDevice.SerialQueue
com.apple.MediaRemote.MRExternalDevice.WorkerQueue
com.apple.MediaRemote.MRExternalDevice.NotificationQueue
<%@:%p %@ transport=%@>
<%@:%p {
    device=%@
    origin=%@
    transport=%@
TransportExternalDevice.connectWithOptions
@"NSError"8@?0
Artifical Delay...
<%@> Connection to: %@ (%@) from client: %@ isRetry: %u allowAuth: %u reason: %@ result: %@ in: %.2f
success
NONE
%@<%@:%@>
Already Connected
Connection already in progress, batching connection attempt %@
AuthUpgrade required
%@:%p
com.apple.mediaremote.transportExternalDevice.connect.%@
qos: %u->%u
Calling batched completions %@
attemptReconnection due to <%@>
authUpgrade
retry
none
TransportExternalDevice.connectWithOptions.attemptReconnection
reason
ping
v24@?0^{__CFError=}8d16
v20@?0f8@"NSError"12
v20@?0I8@"NSError"12
TransportExternalDevice.connectWithOptions.initializeConnection
com.apple.mediaremote.MRExternalDevice/%@(%@)
TransportExternalDevice.connectWithOptions.loadDeviceInfo
deviceInfo response was nil
TransportExternalDevice.connectWithOptions.registerCustomOrigin
TransportExternalDevice.connectWithOptions.reregisterCustomOrigin
TransportExternalDevice.connectWithOptions.syncClientState
v36@?0@"MRPlayerPath"8I16@"NSDictionary"20@?<v@?@"MRCommandResult">28
v24@?0@"MRPlaybackQueue"8@"NSError"16
v24@?0^v8^v16
v24@?0@"MRPlaybackSession"8@"NSError"16
v24@?0@"MRProtocolMessage"8@?<v@?@"MRProtocolMessage">16
event = <playbackQueueRequest>, request = <%@>, error = <%@>
v20@?0^{__CFString=}8B16
event = <%@>, command = <%@>, error = <%@>
Received update from companion
v16@?0@"MRUpdateActiveSystemEndpointResponse"8
None
AutoRetry
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}
handlePlaybackQueueRequest
v40@?0@"MRPlaybackQueueRequest"8@"MRPlayerPath"16@"MRPlaybackQueue"24@"NSError"32
relayPlaybackQueueRequest
requestArtworkForContentItems
v24@?0@"NSArray"8@"NSError"16
@16@?0@"MRContentItem"8
@"MRContentItem"16@?0@"MRContentItem"8
B32@?0@"MRDMediaRemoteClient"8@"NSDictionary"16^@24
identifier
defaultGroupUID
CUPairingManager
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
com.apple.airplay.prefsChanged
com.apple.airplay.active
com.apple.airplay.advertisingDidChange
v24@?0@"CUPairingIdentity"8Q16
com.apple.MRDDeviceInfoDataSource.workerQueue
CurrentDeviceInfo
LOCAL
DeviceInfo.plist
com.apple.mediaremote.MRDNowPlayingOriginClient
<%@ %p origin=%@ %llu nowPlayingClient%s>
%@ %p {
  origin = %@
  deviceInfo = %@
  volume = %f
  volume capabilities = %@
  isMuted = %@
  time since playing = %lf
  is playing = %@
  active now playing client = %@
  override client = %@
  explicit now playing client = %@
  computed now playing client = %@
  inferred now playing client = %@
  app activity = %@
  datasource = %@
  default supportedCommands = %@
q24@?0@"MRDNowPlayingClient"8@"MRDNowPlayingClient"16
all now playing clients = %@
volume
volumeCapabilities
isMuted
computedNowPlayingClient
Updated computedNowPlayingClient.
explicitNowPlayingClient
Updated explicitNowPlayingClient.
inferredNowPlayingClient
Updated inferredNowPlayingClient.
overrideNowPlayingClient
Updated overrideNowPlayingClient.
applicationActivity
Updated applicationActivity.
RemoveAllClients
Removed nowPlayingClient.
v32@?0@"NSString"8@"NSData"16^B24
setNowPlayingDataSource
nowPlayingApplicationDidChange
nowPlayingApplicationPlaybackStateDidChange
nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange
nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange
PlayerPictureInPictureEnabledDidChange
ActivePlayerDidChange
NowPlayingApplicationDidUnregisterCanBeNowPlaying
com.apple.mediaremoted.MRDNowPlayingOriginClient/%@
@16@?0@"MRDNowPlayingPlayerClient"8
addNowPlayingClient-%@
com.apple.mediaremote.originclient.playbacktimer
%@ was not playing recently
%@ is playing for notification <%@>
com.apple.mediaremote.originClient.userDefaults.serialQueue
<%@ %p: %@>
B32@?0@"MRAVOutputDevice"8Q16^B24
Speaker
<%p> %@ {
registeredForNowPlayingCount = %u
registeredForVolumeCount = %u
coalescingStates = %@
  supportedCommands = %lu
 playbackQueue = %@
 playbackQueueCapabilities = %@
  contentItems = %@
  contentItemArtworks = %@
  playbackStateTimestamp = %@ (%lf seconds ago)
    playerProperties = %@
Audio/Video
Default
AirPlayPortExtendedInfo.deviceID
AVAudioRoute_Speaker
AVAudioRoute_Headphone
AVSystemController_CurrentExternalScreenAttribute
AVSystemController_RouteAwayFromAirPlayAttribute
AVSystemController_ExternalScreenDidChangeNotification
AVSystemController_PortStatusDidChangeNotification
AVSystemController_ExternalScreenType_AirPlay
AVSystemController_ExternalScreenType_TVOut
EXTERNAL_DEVICE_AUTHENTICATION_PIN_DIALOG_HEADER
com.apple.mediaremote.MRDLockScreenController
Previous playerPath %@ invalidated
v16@?0^v8
PlayerPath changed from %@ to %@ with changeType %@
visible
NOT visible
Personal devices changed
Lock screen content changed
LayoutChange
ElectedPlayer %@ playback
started
stopped
playerPath
personalDeviceAttached
com.apple.mediaremoted.LockScreen
SBDashBoardNowPlayingAssertionIdentifier
SBSLockScreenContentAssertion
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
SBSLockScreenContentAssertionSlotPlatter
MRDConnectionLifetimeController-%@-%ld.queue
Init
Device is in use
Device is on cover sheet
Device is playing
Device played recently
Device is part of UserSelected endpoint
Remote device is playing to local device
DeviceInfo changed
Has not played recently
ScreenOff -> CoverSheet
ScreenOff -> InUse
CoverSheet -> InUse
CoverSheet -> ScreenOff
InUse -> ScreenOff
Active endpoint changed
com.apple.mediaremoted.hostedExternalDevice.serialQueue
com.apple.mediaremoted.hostedExternalDevice.callbackQueue
<%@: %p externalDeviceName=%@>
%@: %p {
    external device = %@
    connection state = %@
    last can migrate to local endpoint error = %@
    discovery modes = %@    external device clients = %@
    external output context = %@
    external output context debug = %@
    subscribed playerPaths = %@
    lifetimeController = %@
HostedExternalDevice.connectWithOptions
%@:%p (%@)
No externalDevice available when attempting to %@
TV joined Expanse session.
Not already connected to endpoint
Local device is groupable
B16@?0@"MRDAVHostedExternalDeviceClient"8
v20@?0I8^{__CFError=}12
v20@?0f8@"NSString"12
v20@?0I8@"NSString"12
init
Endpoint is not initialized
v16@?0^{__CFString=}8
v24@?0^{__CFString=}8^{__CFData=}16
groupContainsGroupLeader
groupLeader
topology
com.apple.MediaRemote.MRExternalDeviceRemoteServer.SerialQueue
kAirPlayWHANotification_BreakAwayFromCurrentGroup
@"MRProtocolMessage"16@?0@"MRDExternalDeviceServerClientConnection"8
%@ -> %@
v32@?0@"MRAVRoutingDiscoverySessionConfiguration"8@"MRAVRoutingDiscoverySession"16^B24
com.apple.MediaRemote.Television.KeepAlive10SecondsForUser
v16@?0^{__CFArray=}8
v16@?0@"_MRLyricsEventProtobuf"8
Connection %@ exited in the middle of a migration
v24@?0@"MRPlaybackSessionRequest"8@"MRPlayerPath"16
B16@?0@"MRDExternalDeviceServerClientConnection"8
com.apple.MediaRemote.MRTelevisionRemoteServer.WorkerQueue
com.apple.tvremotecore.xpc
SBSUndimScreen
SpringBoardServices
v24@?0@"CUPairedPeer"8Q16
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_PAIRED_EXTERNAL_DEVICES_DATA
MRXPC_PAIRED_EXTERNAL_DEVICE
MRXPC_EXTERNAL_DEVICE_LOGGING_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
@16@?0@"MRPlayerPath"8
@"MRProtocolMessage"20@?0@"NSString"8I16
v16@?0@"MROrigin"8
v32@?0@"NSString"8@"MRAVOutputDevice"16^B24
v40@?0@"NSDictionary"8@"NSArray"16@"MRAVEndpoint"24@"NSError"32
sendPlaybackSession<%@>
sendPlaybackSessionMigrateBegin<%@>
sendPlaybackSessionMigrateEnd<%@>
%@ from external device client: %@<%@>
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
MRDAVHostedRoutingObserverDiscoveryModeDidChangeNotification
com.apple.mediaremoted.MRDHostedRoutingController/calloutQueue
DiscoverySession=%@
%s is abstract
-[MRDHostedRoutingController createDiscoverySession]
-[MRDHostedRoutingController _onQueue_reloadEndpoints]
-[MRDHostedRoutingController _onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:]
-[MRDHostedRoutingController makeEndpointWithOutputDevices:options:]
MediaRemote
virtual_device
q24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
@"MRAVDistantOutputDevice"16@?0@"MRAVOutputDevice"8
v32@?0@"NSString"8@"MRDAVHostedExternalDevice"16^B24
B16@?0@"<MRDAVHostedRoutingObserver>"8
@"NSString"16@?0@"<MRDAVHostedRoutingObserver>"8
<%@: %p> %@: %@
@"NSString"16@?0@"MRAVOutputDevice"8
@"_MRAVOutputDeviceDescriptorProtobuf"24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
@"MRAVDistantOutputDevice"16@?0@"MRAVDistantOutputDevice"8
ignoreExistingLeader
preferExistingConnection
preferSubscription
preferCloudLibrary
preferHomePod
preferAppleTV
{ %@ }
proxyGroupPlayer
relayable
remoteControllable
existingConnection
appleMusicSubscription
iCloudMusicLibrary
existingLeader
HomePod
AppleTV
existingDesignatedLeader
_MRDActiveOriginDataDefaultsKey
LastNowPlayingAppIsPlayingState
_MRDActivePlayerPathDateDefaultsKey
_MRDAnyNowPlayingAppIsPlayingDefaultsKey
%@ has exited in the middle of a migration attempt
v24@?0@"NSString"8@"NSMutableDictionary"16
v32@?0@"MRContentItem"8@"MRPlaybackQueueRequest"16^B24
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
enable
disable
MRXPC_NOWPLAYING_DISPLAYID_KEY
<unknown>
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_TIMESTAMP
MRXPC_HARDWARE_REMOTE_BEHAVIOR_KEY
MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA
MRXPC_PLAYBACK_STATE_KEY
MRXPC_APP_IS_PLAYING_KEY
@16@?0@"MRDNowPlayingClient"8
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_ARRAY_DATA_KEY
@"NSData"16@?0@"MRDNowPlayingPlayerClient"8
MRXPC_NOWPLAYING_PLAYER_PATH_ARRAY_DATA_KEY
MRXPC_PICTURE_IN_PICTURE_ENABLED_KEY
v16@?0@?<v@?@"NSData"I>8
v24@?0@"NSData"8@"NSError"16
Application <%@> waiting for can be now playing
v20@?0@"NSData"8I16
Unable to register for waking now playing notifications without entitlement: %@
com.apple.mediaremote.waking-now-playing-notifications
MRXPC_AUDIO_FORMAT_CONTENT_INFO
MRXPC_ARTWORK_DATA_KEY
MRXPC_ARTWORK_DIMENSION_WIDTH_KEY
MRXPC_ARTWORK_DIMENSION_HEIGHT_KEY
q24@?0@"MRDNowPlayingOriginClient"8@"MRDNowPlayingOriginClient"16
event %@, eventReason = <%@>, selectionReason = <%@>, mostRecentEVent = %@, mostRecentEventReason = <%@>, mostRecentSelectionReason = <%@>
com.apple.maybePostDistributedNotifications.serialQueue
Playing
Not Playing
burgundy
com.apple.NowPlayingCap
com.apple.mediaremote.MRDNowPlayingClient
<%@ %p playerPath="%@" playerClients=%@>
%@ %p {
    player path = %@
    client = %@
    perPlayerCanBeNowPlaying = %@
    canBeNowPlaying = %@
    canBeNowPlayingTimestamp = %@
    effectiveCanBeNowPlaying = %@
    any player is playing = %@
    has now playing data = %@
    foregrounded = %@
    supportsBackgroundAudio = %@
    active player client = %@
    player clients = %@
effectiveBundleIdentifier
v16@?0@"NSDictionary"8
UIBackgroundModes
audio
displayName
activePlayerClient
MRDMediaRemoteServerClientInvalidatedNotification
MRDMediaRemoteClientUserInfoKey
MRDMediaRemoteDaemonErrorDomain
-init is not supported, use +server
com.apple.mediaremoted.serialQueue
AppleLanguagePreferencesChangedNotification
@"AVOutputContext"8@?0
com.apple.mediaremoted.connection
com.apple.mediaremoted.xpc
v32@?0@"NSNumber"8@"MRDMediaRemoteClient"16^B24
com.apple.mediaremote.mediaremoted.notificationQueue
_MROriginatingNotification
com.apple.MediaRemoteUI
com.apple.mediaremote.companionLinkClient
MRXPC_SOURCE_ID_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_VOLUME_VALUE_KEY
MRXPC_APP_INSTALLED_KEY
MRXPC_BOOL_RESULT_KEY
System Media Wake - %@
Player Service Wake - %@
Bless Request - %@
v16@?0@"_MRDiagnosticProtobuf"8
com.apple.mediaremote.MRDMediaRemoteServer
No diagnostic info
XPC Client: %@:
MediaRemote Client Diagnostic
Collected at: %@
================================================================================
clientDiagnose
MRXPC_ROUTE_UID_KEY
q24@?0@"MRDMediaRemoteClient"8@"MRDMediaRemoteClient"16
com.apple.
kern.bootsessionuuid
Restoring state of client after daemon launch
%@ is invalid. You must provide a type, pid and bundleID with %@.
%@ type=%@
SendCommand
RelayServerMessage
BrowsableContentMessage
Transaction
RestoreState
Wake
Notification
UIPresentation
UnknownType
<%@ (%p): 
allowedAuditTokens: %@
@16@?0@"NSData"8
PID: %i, PID_V: %i
, requester: %@
, date: %@
<MRDAutoConnectionControllerReason %@ - %@>
com.apple.mediaremote.MRDAutoConnectionController
player %@ started playing
q24@?0@"MRAVEndpoint"8@"MRAVEndpoint"16
%@ endpoint changed
autoConnectToEndpoint
autoConnectToEndpoint-%@
endpointChanged
proximity
reconnect
startedPlaying
requestDestination
MRDElectedPlayerControllerEventUserInfoKey
ElectedOrigin changed from <%@> (<%@>) to <%@> (<%@>)
%@ PlaybackQueueChanged
%@ Playback %@
NowPlayingAppChanged to %@
Was %@grounded
Fore
Back
activeSystemEndpointDidChange
ElectedPlayerController failed to connect
v16@?0^{__MRAVEndpointRef=}8
is playing
SiriIntent
was playing recently <%lf> seconds ago but not nowPlayingData
was not playing recently. Last played <%lf> seconds ago
%@ has no activePlayer
%@ is not foregrounded and does not support background audio
%@ has no activeNowPlayingClient
com.apple.mediaremote.electedplayercontroller.playbacktimer
%@ playback timeout event %@ after <%lf> seconds
electedPlayer %@ was not playing recently for event <%@>
electedPlayer %@ is playing for event <%@>
no electedPlayer for event <%@>
OriginChanged
PlaybackChanged
NowPlayingAppChanged
NowPlayingAppForegroundChanged
PlaybackQueueChanged
com.apple.mediaremote.MRDAirPlayRemoteControlService.workerQueue
<%@:%p {
  started = %@
  connections = %@
APReceiverMediaRemoteXPCClient_SetDelegate
@"MRAirPlayTransportConnection"8@?0
AVOutputContextCommunicationChannel.didCloseCommunicationChannel
APReceiverMediaRemoteCommunicationChannel.didCloseCommunicationChannel
/System/Library/PrivateFrameworks/MediaControlReceiver.framework/MediaControlReceiver
MediaRemote Diagnostic
================================================================================
Active Clients
Active Transactions
Current App Activity
Local Now Playing Client
System Media Client
Frontmost Client
Daemon Client
UI Server
UI Activity Info
Now Playing Server
Origin Clients
Active Origin
Elected Player
Elected Player Reason
LockScreen Widget Active
LockScreen Widget Visible
LockScreen Widget PlayerPath
Origin Forwarders
Remote Control Server
Enqueued Commands
Remote Control Contexts
RestrictedCommandClient Mode Restriction
Browsable Content Server
Queued "Initiate Playback" Messages
External Device Server
Connected Devices
Television Endpoints
External Discovery Sessions
RemoteControlService
Local OutputContextDataSource
OutputContexts
BatchedNowPlayingState
Routing Server
System Discovery Mode (Legacy)
AirPlay Security Settings
Local Receiver Pairing Identity
System Active Endpoints
Auto Connecting Endpoints
Auto Connected Endpoints
Proximity Events
Nearby Devices
Medium Devices
Immediate Devices
Proximal Migrating Devices
Hosted Routing
Hosted Discovery Mode
Discovery Sessions
Endpoints:
Endpoint
External Device
v32@?0@"MRAVDistantEndpoint"8Q16^B24
Remaining External Devices
EndpointID: %@
v32@?0@8@"MRDAVHostedExternalDevice"16^B24
Concrete Discovery Session
Stream Count
Virtual Audio Server
Recording Endpoint Clients
Registered Virtual Audio Devices
Transaction Server
Transactions
Used Transaction Memory: %llu bytes
Allowed Transaction Memory: %llu bytes
Transaction Wait Duration: %f seconds
Companion Link
RPDevice<routeID: %@>
Home Users
--------------------------------------------------------------------------------
(None)
%@: %@
    
%@%@:
%@%@
%@(None)
<%@ %p {
  AirPlayService = %@
  CompanionService = %@
  RapportService = %@
  IDSService = %@
com.apple.mediaremote.ui-control
<%@: %p bundleID=%@>
com.apple.MRDUIServer.messageQueue
CXCallObserver
B16@?0@"MRAVEndpoint"8
PreventUserIdleSystemSleep
com.apple.mediaremote.powerassertion
TimeoutActionRelease
MRDAVOutputContextExternalDeviceDiscoveryLocalClusterTypeDidChangeNotification
MRDAVOutputContextExternalDevice.serialQueue
MRDAVOutputContextExternalDevice.workerQueue
MRDAVOutputContextExternalDevice.notificationQueue
startUp
PREWARM-DUMMY-DEVICE
prewarmApp
v32@?0@"MRDMediaRemoteClient"8@"MRPlayerPath"16@"NSError"24
designatedGroupLeader
origin
outputContext
<%@: %p id=%@ leader=%@ origin=%@-%ld originFwd=%@>
<%@: %p {
    designatedGroupLeader = %@
    origin = %d:%@
    originForwarder = %@
    outputContextController = %@
    outputContext = %@
    clientBundleIDs = %@
OutputContextExternalDevice does not have a designatedGroupLeader. (PreviousGroupLeader=%@)
Invalid routingContextID detected. From %@ to %@
handleRemoteCommand
Needed to interrupt %@ in order to continue with command
originCommand
Failed to commit group leader to output context
createPlayerAndWaitForConnection
Could not find xpcClient for playerPath %@
Could not find application in playerPath %@
createPlayerAndWaitForCanBeNowPlaying
Waiting for %@ to set canBeNowPlayingPlayer=YES
createPlayer
CreatePlayer
v24@?0@"NSObject<OS_xpc_object>"8@"NSError"16
@"NSObject<OS_xpc_object>"16@?0@"MRPlayerPath"8
_handlePlaybackQueueRequest
_handlePlaybackSessionRequest
@"MRProtocolMessage"16@?0@"MRPlayerPath"8
v24@?0@"MRProtocolMessage"8@"NSError"16
_handlePlaybackSessionMigrateRequest
interruptBestStreamIfNecessary
_handlePlaybackSessionMigrateBeginRequest
_handlePlaybackSessionMigrateEndRequest
setOutputDeviceVolume
Attempting to set and add/remove devices at the same time, which is unsupported
modifyOutputContext
Failed to find devices with UIDs: %@
v32@?0@"NSString"8@"MRAVConcreteOutputDevice"16^B24
MRDAVOutputContextExternalDevice<%@>
%@:%@:%p
OutputContextExternalDevice.connectWithOptions
%@ %@
Local device changed clusterType in discovery
Local device changed clusterType to %u
External device is invalid (no designatedGroupLeader)
OutputContextExternalDevice-%@-%@:%@<%@>
BYSetupAssistantFinishedDarwinNotification
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
BYSetupAssistantNeedsToRun
com.apple.MediaRemote.connectionMonitor
<%@ %p : %@>
    stauts = %@
    currentMessageCount = %lu
    totalMessageCount = %lu
    lastMessageSent = %f seconds ago
    lastStatusCheck = %f seconds ago
    lastStatusChange = %f seconds ago
    pendingBarrierCompletion = YES
    paramters = {%lu x %f}
%@:%@-%d
XPCConnectionBarrier
Running
Suspended
com.apple.airplay.password
MostRecentlyUsedAVOutputDeviceUIDs
MRDRoutingServerAirplayActiveDidChange
com.apple.mediaremote.routingServer.operationQueue
Restore
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
v16@?0@"NSString"8
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_OPTIONS_KEY
v24@?0@"MRDAVRoute"8@"NSError"16
MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_AIRPLAY_SEC_SETTINGS_DATA_KEY
MRXPC_CUSTOM_XPC_ENDPOINT_KEY
MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY
MRXPC_AIRPLAY_LEADER_TYPE
requestID
MRXPC_ENDPOINT_LEADER_OPTIONS_KEY
v20@?0@"MRAVEndpoint"8I16
_handleStartNowPlayingSession
v32@?0@"MRPlayerPath"8@"MRDeviceInfo"16@"NSError"24
Returning local origin because device requires command redirection
%@<%@> looking for localDevice with groupID=%@
Rejecting endpoint %@ because localDevice %@ isAirPlayReceiverSessionActive=NO
Rejecting endpoint %@ because endpointGroupID %@ != %@
Discovered local device on endpoint: %@
Failed to query output context for local device
Failed to remove local device from existing context
_handleStopNowPlayingSession
_handleResumeNowPlayingSession
com.apple.mediaremote.routingServer.getDeviceUID
MRXPC_ROUTING_CONTEXT_UID_KEY
MRXPC_SOURCE_ENDPOINT_UID_KEY
MRXPC_MIGRATE_REQUEST_DATA_KEY
MRXPC_DESTINATION_ENDPOINT_UID_KEY
groupDevicesAndSendCommand
Analytics: Group devices and send message
createHostedEndpointForDevices
v16@?0@"MRAVOutputDevice"8
com.apple.mediaremote.removeFromParentGroup
com.apple.mediaremote.routingServer.getExternalDevice
MRXPC_ENDPOINT_UID_KEY
MRXPC_EXTERNAL_DEVICE_LISTENER_KEY
_handleModifyOutputContextMessage
MRXPC_MESSAGE_CUSTOM_ID_KEY
MRXPC_CONTEXT_MODIFICATION_DATA_KEY
ContextID=%@ %@
B16@?0@"MRAVConcreteOutputContext"8
Failed to create output context with UID=%@
v16@?0@"MSVSystemDialogResponse"8
AIRPLAY_PIN_ALERT_TITLE
AIRPLAY_PASSWORD_ALERT_TITLE
AIRPLAY_PIN_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_PASSWORD_ALERT_MESSAGE_FORMAT_%@
CANCEL
com.apple.mediaremoted.MRDAVRoutingServer
AIRPLAY_GENERIC_ERROR_ALERT_TITLE
AIRPLAY_CLUSTER_ATV_ALERT_RELAYFAILED_TITLE
AIRPLAY_CLUSTER_ATV_ALERT_IPALIASING_MESSAGE
AIRPLAY_CLUSTER_ATV_ALERT_RELAYFAILEDMULTIDFSNETWORK_MESSAGE
AIRPLAY_CLUSTER_ATV_ALERT_MESSAGE
Cluster connect error
AIRPLAY_ATV_CLUSTER_TRY_AGAIN
AIRPLAY_ATV_CLUSTER_CHANGE_DEFAULT_OUTPUT
prefs:root=DefaultAudioOutput
com.apple.TVSettings
AIRPLAY_BUSY_ATV_ALERT_TITLE
AIRPLAY_BUSY_ALERT_TITLE
AIRPLAY_BUSY_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_OUT_OF_RANGE_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_NOT_CONNETED_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_GENERIC_ALERT_MESSAGE_FORMAT_%@
APReceiverMediaRemoteXPCClient_CopyProperty
AirPlaySecuritySetting
password
createHostedEndpointForOutputDeviceUIDs
Modifying output context: %@
setOutputDevices failed
Discovering endpoint with output context: %@
Discovered hosted endpoint in %.2f s: %@
Failed to discover endpoint with contextID: %@ in %.2f s
Unable to discovery any of the given output devices
Relaying command to cluster leader: %@
Remote createHostedEndpoint finished with groupUID: %@, error: %@
v24@?0@"NSString"8@"NSError"16
B16@?0@"MRAVOutputDeviceDescription"8
MRDAVRoutingServer/resolveEndpoint
B16@?0@"MRDMediaRemoteClient"8
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationTokenTypePIN
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManager
FBSOpenApplicationOptionKeyPayloadURL
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
AIRPLAY_PASSCODE_ALERT_PLACEHOLDER
AIRPLAY_PASSWORD_ALERT_PLACEHOLDER
RequestingAuthorizationToken
ReceivedAuthorizationToken
Retried
Completed
Cancelled
Failed
com.apple.siri.client-state-changed
%@ ASE Change
AudioAccessory Boot
proactivePrepareForSetQueue
AFInstanceContext
/System/Library/Frameworks/AssistantServices.framework/AssistantServices
AFNotifyGetEffectiveNotificationName
AFNotifyObserver
Siri Activation
CanSleep
WillSleep
WillPowerOn
B24@?0@"NSString"8@"MRDAVHostedExternalDevice"16
undiscoverable endpoint
Endpoint no longer is discoverable
disconnected
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
  artworkCache = %@
q24@?0@"MRDPlaybackQueueArtworkCacheSize"8@"MRDPlaybackQueueArtworkCacheSize"16
B16@?0@"MRDPlaybackQueueArtworkCacheSize"8
<%@:%p> {
  cache = %@
%lf x %lf
PBS.%@
AVSystemController_FullMuteAttribute
AVSystemController_SystemVolumeDidChangeNotification
AVSystemController_FullMuteDidChangeNotification
AVSystemController_CurrentRouteHasVolumeControlDidChangeNotification
AVSystemController_AudioCategoryNotificationParameter
com.apple.siri
MusicUIServiceNowPlayingViewController
com.apple.MusicUIService
MusicUIServiceMediaControlsViewController
MusicUIServiceLanguageOptionsViewController
MusicUIServiceMediaControlsMediumConfidenceViewController
MRDMediaRemoteClientDidConnect
MRDMediaRemoteClientDidInvalidate
MRDMediaRemoteClientDeclaringAirplayActiveDidChange
com.apple.mediaremote.%@.%@.%@-%d
r*16@?0@"NSString"8
com.apple.mediaremote.%@.xpcTargetQueue
serialQueue
com.apple.mediaremote.send-commands
com.apple.AssistantServices
com.apple.lskdd
com.apple.mediaremote.nearby-device
com.apple.mediaremote.request-bless
com.apple.mediaremote.set-now-playing-app
com.apple.mediaremote.set-default-supported-commands
com.apple.mediaremote.restrict-command-clients
com.apple.security.exception.mach-lookup.global-name
com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Read
com.apple.PairingManager.Write
com.apple.PairingManager
%@-%ld
<%@ %p, bundleIdentifier = %@, pid = %ld>
<%@ %p {
    bundle identifier = %@
    pid = %ld
    euid = %ld
    xpc connection = %@
    connection monitor = %@
    current task assertion = %@
    assertions = %@
    route discovery mode = %@
    application picked routes = %@
    hardware remote behavior = %@
    has requested legacy nowPlayingInfo = %s
    has requested supported commands = %s
    declaringAirplayActive = YES
    subscribedWakingPlayerPaths = %@
    playbackQueueRequests = %@
com.apple.iapd
com.apple.iap2d
v16@?0@"MSVTaskAssertion"8
sendRemoteControlCommand
Redirecting command to local origin legacy handler. Command will be re-emitted under origin containing the local device: %@
Redirecting command to remoteEndpoint containing localDevice
Sending remote control command %@
 host process: %@(%d)
RequestPlaybackQueue
BeginLoadingBrowsableContent
%llu
Relaying XPC message %@ to client %@
MRXPC_ERROR_CODE_KEY
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSNumber"8@"NSValue"16^B24
ReportDescriptor
DisplayIntegrated
ProductID
VendorID
MRDisplayMonitorLayoutDidChange
MRDisplayMonitorDisplayDidChangeNotification
com.apple.mediaremote.MRDDisplayMonitor
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
Display%@
LockScreen%@grounded
LockScreen%@Visible
ControlCenter%@Visible
FBSDisplayLayoutMonitor
FBSDisplayLayoutMonitorConfiguration
FBSDisplayLayoutElementLockScreenIdentifier
FBSDisplayLayoutElementControlCenterIdentifier
com.apple.mediaremote.MRDIDSServiceConnection
v32@?0@"MRDIDSServiceMessage"8@"NSString"16@"NSString"24
 deviceUID = %@
 device = %@
 service = %@
 destinationMessageHandlers = %@
 responseMessageHandlers = %@
 deviceMessageHandler = %@
 invalidationHandler = %@
 connectionHandler = %@
Device Connection was manually reset by the peer
Device fell out of IDS service
default
v16@?0@"MRMediaSuggestionRequest<MRMediaSuggestionRequestConfigurable>"8
v24@?0@"NSDictionary"8@"NSError"16
B24@?0r*8@"NSObject<OS_xpc_object>"16
A reply object could not be created.
A reply connection could not be obtained.
MRDLaunchApplicationWithReason
com.apple.mediaservicesbroker.app
com.apple.SoundScapes
MediaPlayer
Burgundy
com.apple.Music
Podcasts
com.apple.podcasts
post-launch setup for  %@
com.apple.MediaRemote.command
invoked.notify.client
%@.%@.%@.%@
%@.%@.%@
%@.%@
v24@?0@"BSProcessHandle"8@"NSError"16
launchAppAndWaitForXpcConnection
Application <%@> waiting for xpcConnection
launchAppAndWaitForCanBeNowPlaying
Application <%@> waiting for CanBeNowPlaying
FallbackIdentifier-%d
SBSCopyFrontmostApplicationDisplayIdentifier
FBSOpenApplicationOptions
FBSOpenApplicationService
AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute
<%@ %p, command = %@, %@
, commandID = %@
, remote control interface = %@
, appOptions = %ld
, path = %@
, unresolvedPath = %@
<%@ %p, command = %@, %@
, commandID = %@
, remote control interface = %@
, appOptions = %ld
, path = %@
, unresolvedPath = %@
, options = %@
com.apple.BTAvrcp
com.apple.rcd
com.apple.AVRCP
<%@ %p, command = %@, routedToApp = %@>
-[MRDAVRoute initWithDictionary:]
com.apple.mediaremoted.UIController.%p
<%@ %p outputDevice = %@>
RouteUID
RouteName
RouteRequiresAirPlayPIN
PortHasPassword
Wireless
AirTunes
Bluetooth
CarPlay
RouteType
AVAudioRouteName
AVOutputDevice
com.apple.amp.mediaremote
T@"<MRUIServerXPCProtocol>",R,N
T@"IDSService",R,N,V_idsService
MRHIDTouchEventValue
T@"MRDCommandClientRestriction",C,N,V_commandClientsRestriction
T#,R
T@"MRDNowPlayingPlayerClient",&,N,V_pushStateActivePlayerClient
T@"<MRDAVSystemEndpointControllerDelegate>",W,N,V_delegate
T@"MROrigin",&,N,V_customOrigin
T@"<MRDBonjourRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSArray",&,N
T@"<MRDConnectionLifetimeControllerDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_activeClients
T@"<MRDElectedPlayerControllerDelegate>",N,V_delegate
T@"NSArray",C,N,V_nearbyDevices
T@"<MRDHostedExternalDeviceManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<MRDIDSRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSDate",R,N,V_expirationDate
T@"<MRDLockScreenControllerDelegate>",N,V_delegate
TB,N,V_pendingBarrierCompletion
T@"<MRDNowPlayingOriginClientDelegate>",W,N,V_delegate
TI,N,V_hostedRouteDiscoveryMode
T@"<MRDNowPlayingStateObserverDelegate>",W,N,V_delegate
_activityServer
T@"<MRDPhoneCallObserverDelegate>",W,N,V_delegate
_apiCoordinator
T@"<MRDProximityControllerDataSource>",W,N,V_dataSource
_avOutputDevice
T@"<MRDRemoteControlServiceDelegate>",W,N,V_delegate
_canMigrateToLocalEndpointError
T@"<MRDVirtualAudioInputServerDelegate>",W,N,V_delegate
_cancelCallback
T@"<MRLockScreenUIControllable>",&,N,V_uiController
_client
T@"<MRUIClientProtocol>",W,N,V_target
_connectedExternalDeviceClients
T@"<MRUIServerProtocol>",R,N
_deviceInfoData
T@"<NSObject>",&,N,V_notificationToken
_discoveryModes
T@"BKSApplicationStateMonitor",&,N,V_appStateMonitor
_displayMonitor
T@"BSServiceConnection<BSServiceConnectionClient>",R,N,V_serviceConnection
_expirationDate
T@"CUPairingManager",&,N,V_pairingManager
_fbsDisplayMonitorConfiguration
T@"IDSDevice",&,N
_handleDeviceInfoUpdateMessage:
T@"MRAVConcreteRoutingDiscoverySession",&,N,V_avDiscoverySession
_hasLockScreenControlsAssertion
T@"MRAVDistantEndpoint",R,N,V_endpoint
_initWithLabel:
T@"MRAVOutputContext",&,N,V_outputContext
_messageHandler
T@"MRAVOutputDevice",&,N,V_designatedGroupLeader
_networkService
T@"MRAVRoutingDiscoverySession",&,N,V_silentDiscoverySession
_nowPlayingApplicationDisplayID
T@"MRAirPlayTransportConnection",&,N,V_localEndpointConnection
_onQueue_originClientForOrigin:
T@"MRClient",&,N
_onQueue_setActivePlayerClient:
T@"MRClient",R,N,V_destinationClient
_origin
T@"MRContentItem",&,N,V_cachedNowPlayingContentItem
_overrideClient
T@"MRContentItem",R,N
_pairingManager
T@"MRDAVHostedExternalDevicePendingClientState",&,N,V_pendingClientState
_persistConnectionRecordsToDisk
T@"MRDAVHostedRoutingService",R,N,V_hostedRoutingService
_pinKey
T@"MRDAVRoute",R,N,V_route
_playerPathForNowPlayingClient:
T@"MRDAVRoutingDataSource",R,N,V_routingDataSource
_query:
T@"MRDAVSystemEndpointController",R,N,V_systemEndpointController
_rapportService
T@"MRDBonjourRemoteControlService",&,N,V_genericNetworkService
_readLegacyDeviceInfoIdentifier
T@"MRDBrowsableContentAPICoordinator",R,N,V_apiCoordinator
_resolveReason:
T@"MRDDeviceInfoDataSource",&,N,V_deviceInfoDataSource
_sendEndpoint:toClient:options:
T@"MRDDisplayMonitor",R,N
_shouldSendCompanionLinkMessage
T@"MRDExternalDeviceHomeServerRecentlyPlayedEntry",&,N,V_lastSentEntry
_source
T@"MRDHostedRoutingController",R,N,V_hostedRoutingController
_storePassword:forOutputDevice:
T@"MRDIDSDiscoverySession",&,N,V_idsDiscoverySession
_supportedRemoteControlCommands
T@"MRDIDSServerClientConnection",&,N,V_client
_termSigHandler
T@"MRDIDSService",R,N,V_mrService
_txtDataChanged
T@"MRDIDSServiceConnection",R,N,V_connection
_updateSystemRouteDiscoveryMode
T@"MRDLockScreenAssertion",&,N,V_legacyAssertion
_volumeCallback
T@"MRDLockScreenController",R,N,V_lockScreenController
_wantsOutputDeviceNotifications
T@"MRDMediaRemoteClient",&,N,V_frontmostClient
activeClientPID
T@"MRDMediaRemoteClient",&,N,V_overrideClient
addArtworkFromItem:fromRequest:
T@"MRDMediaRemoteClient",&,N,V_systemMediaClient
addVolumeEvent:
T@"MRDMediaRemoteClient",R,N
allKeys
T@"MRDMediaRemoteServer",R,N
appStateMonitor
T@"MRDNowPlayingClient",&,N,V_computedNowPlayingClient
augmentedUserInfoForPlayerPath:
T@"MRDNowPlayingClient",&,N,V_inferredNowPlayingClient
beginReceivingUpdatesForSource:
T@"MRDNowPlayingClient",R,N
canBeNowPlayingForPlayerClient:
T@"MRDNowPlayingOriginClient",&,N,V_activeOriginClient
cleanUp
T@"MRDNowPlayingOriginClient",&,N,V_originClient
clientObservers
T@"MRDNowPlayingPlayerClient",&,N
closeForClient:
T@"MRDNowPlayingPlayerClient",&,N,V_playerClient
clusterCompositionOutputDevices
T@"MRDNowPlayingPlayerClientPlaybackState",&,N,V_playerPlaybackState
command
T@"MRDNowPlayingServer",R,N,V_nowPlayingServer
connectionState
T@"MRDPairingHandler",&,N,V_pairingHandler
containsObject:
T@"MRDPlaybackQueueArtworkCache",&,N,V_artworkCache
controller:playerPathDidChange:
T@"MRDProximityController",R,N,V_proximityController
currentSettings
T@"MRDRemoteControlDiscoverySession",&,N,V_discoverySession
destroyPlayersForClient:origin:
T@"MRDRemoteControlService",&,N,V_remoteControlService
disconnectTimer
T@"MRDServerMessageProxy",&,N,V_messageProxy
discoveryTokenForConfiguration:
T@"MRDTransactionServer",R,N,V_transactionServer
dismiss
T@"MRDUIClientMessageForwarder",R,N,V_forwarder
entries
T@"MRDUIServer",R,N
expanseSessionHasActiveActivity
T@"MRDeviceInfo",&,N,V_deviceInfo
frontmostClient
T@"MRDeviceInfo",R,N
groupID
T@"MRExternalDevice",R,N,V_externalDevice
hasASmartDevice
T@"MRExternalDeviceTransportConnection",&,N,V_connection
hasUIAssertions
T@"MRExternalOutputContextDataSource",R,N,V_externalOutputContext
initWithAPCommunicationChannel:
T@"MRMutableApplicationActivity",&,N,V_activity
initWithClient:
T@"MRNowPlayingState",R,N
initWithFormat:
T@"MROSTransaction",&,N,V_transaction
initWithOrigin:
T@"MROrigin",R,N
initWithOutputDeviceUID:reason:
T@"MROrigin",R,N,V_origin
initWithTimeout:reason:handler:
T@"MRPasscodeCredentials",&,N,V_credentials
initWithVolume:
T@"MRPlaybackQueue",C,N
internalClients
T@"MRPlaybackQueueClient",R,N,V_playbackQueueRequests
isClusterLeader
T@"MRPlayer",&,N,V_playerProperties
isGizmo
T@"MRPlayer",R,N
isLocalEndpoint
T@"MRPlayerPath",&,N,V_electedPlayer
isMuted
T@"MRPlayerPath",&,N,V_lockScreenPlayerPath
isProxy
T@"MRPlayerPath",&,N,V_previousPlayerPath
isValid
T@"MRPlayerPath",C,N,V_playerPath
keyboardUpdates
T@"MRPlayerPath",R,N,V_electedPlayerPath
legacyAssertion
T@"MRPlayerPath",R,N,V_previousElectedPlayerPath
logicalDeviceID
T@"MRRapportTransportConnection",&,N,V_connection
migrationEvents
T@"MRVirtualTouchDeviceDescriptor",R,C,N,V_deviceDescriptor
modelID
T@"MRXPCConnectionMonitor",&,N,V_connectionMonitor
mostRecentEvent
T@"MSVSystemDialog",&,N,V_activePasswordDialog
mr_any:
T@"MSVTimer",&,N,V_disconnectTimer
mr_outputDevice
T@"NSArray",&,N,V_contentItems
msv_firstWhere:
T@"NSArray",&,N,V_currentPlaybackSessionTypes
nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange:
T@"NSArray",&,N,V_pendingEndpoints
numberWithBool:
T@"NSArray",&,N,V_supportedCommands
options
T@"NSArray",&,N,V_updatedEndpoints
pairingCallback
T@"NSArray",C,N,V_activeTransactions
pickedRoutesForCategory:source:
T@"NSArray",C,N,V_autoConnectingEndpoints
pinPairingToken
T@"NSArray",C,N,V_discoverySessions
playing
T@"NSArray",C,N,V_hostedDiscoverySessions
protocolVersion
T@"NSArray",C,N,V_migratingDevices
pushStatePlayer
T@"NSArray",C,N,V_promptingDevices
release
T@"NSArray",C,N,V_recordingEndpointClients
remoteAlertHandleDidDeactivate:
T@"NSArray",C,N,V_remoteControlContexts
removeDelegate:
T@"NSArray",C,N,V_televisionEndpoints
removeObserver:
T@"NSArray",R,C,N
request
T@"NSArray",R,N,V_availableOrigins
resetWithError:
T@"NSData",&,N,V_configurationData
runLoop
T@"NSData",C,N
sendContentItemTransactionWithPlaybackQueue:request:playerPath:
T@"NSData",R,C,N,V_data
sendMessage:type:destination:session:options:priority:response:
T@"NSData",R,N,V_MACAddress
sendingPlaybackStateToCompanion
T@"NSDate",&,N,V_canMigrateEvaluationTimestamp
serviceSpaceDidBecomeAvailable:
T@"NSDate",&,N,V_date
session
T@"NSDate",&,N,V_lastDiscoveryModeEnableDate
setAlertHeader:
T@"NSDate",&,N,V_lastNotPlayingDate
setBool:forKey:
T@"NSDate",&,N,V_lastStatusChangeDate
setCanAccessiCloudMusicLibrary:
T@"NSDate",&,N,V_pendingDisconnectDate
setCommandType:
T@"NSDate",C,D,N
setContentItem:
T@"NSDate",C,N,V_canBeNowPlayingTimestamp
setCurrentPlaybackSessionTypes:
T@"NSDate",R,N,V_date
setDestination:
T@"NSDate",R,N,V_lastPlayingDate
setDeviceState:
T@"NSDictionary",&,N,V_dictionaryRepresentation
setDisplayName:
T@"NSDictionary",C,N,V_hostedExternalDevices
setExternalDeviceCallbackQueue:
T@"NSDictionary",C,N,V_uiActivityInfo
setHasIsVolumeControlAvailable:
T@"NSDictionary",R,N,V_dictionary
setInvalidated:
T@"NSDictionary",R,N,V_route
setMaxConcurrentOperationCount:
T@"NSError",&,N,V_connectionStateError
setOriginClient:withChangeType:
T@"NSHashTable",&,N,V_objects
setPushStateActivePlayerClient:
T@"NSMutableArray",&,N,V_changedOutputDevices
setSerialQueue:
T@"NSMutableArray",&,N,V_entries
setSupportsACL:
T@"NSMutableArray",&,N,V_removedOutputDevices
setWithObjects:
T@"NSMutableDictionary",&,N,V_activeOutputContexts
setXpcEndpoint:
T@"NSMutableDictionary",&,N,V_commandDictionary
started
T@"NSMutableDictionary",&,N,V_deviceMessageHandlers
stringByAppendingPathComponent:
T@"NSMutableDictionary",&,N,V_discoverySessionConfigurationsResults
takeAssertionAndBlessForReason:
T@"NSMutableDictionary",&,N,V_outputDeviceVolume
T@"NSMutableDictionary",&,N,V_playbackTimers
verboseConnectionMonitorLogging
T@"NSMutableDictionary",&,N,V_reservedOutputContexts
virtualDeviceID
T@"NSMutableDictionary",&,N,V_totalMessageHandlers
volumeForOutputDeviceUID:error:
T@"NSMutableDictionary",R,V_handlers
.cxx_destruct
T@"IDSService",&,N,V_idsService
MACAddress
T@"MRDCommandClientRestriction",&,N,V_commandClientsRestriction
MRUIClient
T@"MRDIDSService",&,N,V_service
T@"<MRDAVHostedDiscoverySessionDelegate>",W,N,V_delegate
T@"MROrigin",&,N,V_activeOrigin
T@"<MRDAirPlayRemoteControlServiceDelegate>",W,N,V_delegate
T@"MROrigin",R,N,V_sourceOrigin
T@"<MRDConnectionLifetimeControllerDataSource>",W,N,V_dataSource
T@"NSArray",C,N
T@"<MRDDeviceInfoDataSourceDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_mediumDevices
T@"<MRDExternalDeviceServerClientConnectionDelegate>",W,N,V_serverDelegate
T@"NSArray",C,N,V_originClients
T@"<MRDIDSCompanionRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSData",&,N,V_deviceInfoData
T@"<MRDLockScreenContentControllerDelegate>",W,N,V_delegate
TB,N,GisPictureInPictureEnabled
T@"<MRDNowPlayingClientDelegate>",W,N,V_delegate
TB,N,V_perPlayerCanBeNowPlaying
T@"<MRDNowPlayingPlayerClientDelegate>",W,N,V_delegate
TQ,N,V_allowedTransactionMemory
T@"<MRDPersonalDeviceControllerDelegate>",W,N,V_delegate
_airPlayService
T@"<MRDPinPairingDialogDelegate>",W,N,V_delegate
_audioSessionID
T@"<MRDRapportRemoteControlServiceDelegate>",W,N,V_delegate
_canBeNowPlayingPlayerTimestamp
T@"<MRDSleepObserverDelegate>",W,N,V_delegate
_canSendMessage
T@"<MRDXPCMessageHandling>",W,N,V_messageHandler
_center
T@"<MRTransactionDelegate>",W,N,V_delegate
_clientInvalidatedNotification:
T@"<MRUIClientXPCProtocol>",W,N,V_target
_device
T@"<MRXPCConnectionMonitorDelegate>",W,N,V_delegate
_devicesDelayed
T@"AVOutputDevice",R,N,V_avOutputDevice
_discoverySessionEndpointsToken
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
_endpointSupportsVolumeControl:
T@"BSServiceInterface",R,N
_externalDevice
T@"FBSDisplayLayoutMonitor",R,N,V_sharedDisplayMonitor
_frontmostApplicationDidChange:
T@"IDSDevice",R,N,V_device
_handleGetAppsSupportingBrowsableContentAPIsMessage:fromClient:
T@"MRAVDistantEndpoint",&,N,V_endpoint
_hostsByGroupID
T@"MRAVEndpoint",&,N
_isForegrounded
T@"MRAVOutputDevice",&,N
_netServiceType
T@"MRAVOutputDevice",R,N,V_outputDevice
_notifyDelegate
T@"MRAVRoutingDiscoverySessionConfiguration",&,N,V_configuration
_nowPlayingApplicationIsPlaying
T@"MRApplicationActivity",C,N,V_currentAppActivity
_onQueue_playerClientForPlayer:
T@"MRClient",&,N,V_pushStateClient
_onSyncSelf_calculateElectedPlayerForOriginClient:event:reason:
T@"MRCompanionLinkClient",&,N,V_client
_outputDeviceVolumeCapabilities
T@"MRContentItem",&,N,V_contentItem
_pairingHandler
T@"MRCoreUtilsPairingSessionPeer",R,N,V_sessionPeer
_pendingReconSessionCompletions
T@"MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications",&,N,V_outputDeviceModifications
_picked
T@"MRDAVRoute",R,N,V_pickedRoute
_playbackTimers
T@"MRDAVRouteExtendedInfo",R,N,V_extendedInfo
_pushStateCanBeNowPlayingPlayer
T@"MRDAVRoutingServer",R,N,V_routingServer
_queuedInitiatePlaybackMessages
T@"MRDAirPlayRemoteControlService",&,N,V_airPlayService
_readDeviceInfo
T@"MRDBonjourRemoteControlService",&,N,V_televisionNetworkService
_reloadEndpoint
T@"MRDConnectionLifetimeController",&,N,V_lifetimeController
_routedCommands
T@"MRDDisplayMonitor",&,N,V_displayMonitor
_serverDelegate
T@"MRDElectedPlayerController",R,N,V_electedPlayerController
_sortSnapshots:
T@"MRDExternalDeviceRemoteServer",R,N,V_externalDeviceServer
_status
T@"MRDIDSCompanionRemoteControlService",&,N,V_companionService
_string
T@"MRDIDSRemoteControlService",&,N,V_idsService
_target
T@"MRDIDSServerClientConnection",R,N
_tombstoneHostedExternalDevice:
T@"MRDIDSServiceConnection",&,N,V_idsConnection
_uiActivityInfo
T@"MRDIDSTransportConnection",&,N,V_transport
_volume
T@"MRDLockScreenContentController",&,N,V_contentController
_wakeDevice:dismissScreenSaver:
T@"MRDMediaRemoteClient",&,N,V_daemonClient
acquire
T@"MRDMediaRemoteClient",&,N,V_localNowPlayingClient
activeTopologyChangeIdentifiers
T@"MRDMediaRemoteClient",&,N,V_requester
addLyricsEvent:
T@"MRDMediaRemoteClient",&,N,V_xpcClient
airPlayGroupUID
T@"MRDMediaRemoteClient",R,N,V_owningClient
appIcon
T@"MRDMediaRemoteUIService",&,N,V_remoteUIService
artwork
T@"MRDNowPlayingClient",&,N,V_explicitNowPlayingClient
avOutputContext
T@"MRDNowPlayingClient",&,N,V_nowPlayingClient
canBeNowPlaying
T@"MRDNowPlayingDataSource",&,N,V_nowPlayingDataSource
canSendMessage:
T@"MRDNowPlayingOriginClient",&,N,V_localOriginClient
clientInterface
T@"MRDNowPlayingOriginClient",R,N
clients
T@"MRDNowPlayingPlayerClient",&,N,V_nowPlayingPlayerClient
closeWithError:
T@"MRDNowPlayingPlayerClient",R,N
clusterLeaderID
T@"MRDNowPlayingPlayerClientPlaybackState",&,N,V_pushStatePlaybackState
connectToAllOutputDevicesForReason:comparator:queue:completion:
T@"MRDNowPlayingServer",R,N,V_npServer
containsDevice:
T@"MRDPersonalDeviceController",&,N,V_personalDeviceController
containsString:
T@"MRDPlaybackQueueArtworkCacheSize",R,N
createAssertion
T@"MRDRapportRemoteControlService",&,N,V_rapportService
dealloc
T@"MRDRemoteControlServer",R,N,V_remoteControlServer
devices
T@"MRDRemoteControlService",R,N,V_remoteControlService
discoverEndpointTimeoutInterval
T@"MRDTaskAssertion",&,N,V_currentTaskAssertion
discoveryTokens
T@"MRDUIActivityServer",&,N,V_activityServer
effectiveValuesForUnionSetting:
T@"MRDUIControllerConnection",R,N,V_connection
existingNowPlayingClientForPid:
T@"MRDeviceInfo",&,N
exportEndpoint:
T@"MRDeviceInfo",C,N
getDiscoveryModeWithCompletion:
T@"MRExternalClientConnection",&,N,V_clientConnection
T@"MRExternalDeviceTransport",R,N,V_transport
hasPlaybackRate
T@"MRExternalDeviceTransportConnection",&,N,V_transport
homepodDemoMode
T@"MRMediaSuggestionPreferences",&,N,V_suggestionPreferences
initWithBundleID:indexPathData:
T@"MRNowPlayingAudioFormatContentInfo",R,N
initWithDevice:
T@"MROSTransaction",&,N,V_discoveryTransaction
initWithID:data:device:service:
T@"MROrigin",&,N,V_origin
initWithOutputContext:endpoint:
T@"MROrigin",R,N,V_destinationOrigin
initWithString:
T@"MROutputContextDataSource",&,N,V_localOutputContextDataSource
initWithType:pid:bundleID:name:
T@"MRPlaybackQueue",&,N,V_playbackQueue
initWithVolume:outputDeviceUID:
T@"MRPlaybackQueue",R,N,V_playbackQueue
isAirPlayActive
T@"MRPlaybackQueueSubscriptionController",R,N,V_subscriptionController
isEqualToArray:
T@"MRPlayer",&,N,V_pushStatePlayer
isLocal
T@"MRPlayerPath",&,N
isLocallyHosted
T@"MRPlayerPath",&,N,V_electedPlayerPath
isPersonalRoute
T@"MRPlayerPath",&,N,V_playerPath
isSilentPrimary
T@"MRPlayerPath",C,D,N
T@"MRPlayerPath",R,N
lastPlayingDate
T@"MRPlayerPath",R,N,V_playerPath
localPlayerPath
T@"MRPlayerPath",R,N,V_unresolvedPlayerPath
lowercaseString
T@"MRUIActivityController",R,N,V_activityController
minimumSupportedProtocolVersion
T@"MRXPCConnection",R,N,V_connection
mostRecentCanBeNowPlayingClient
T@"MSVPersistentTimer",&,N,V_overrideTimer
mr_all:
T@"MSVSystemDialog",W,N,V_activeDialog
mr_map:
T@"MSVTimer",&,N,V_playbackTimer
msv_compactMap:
T@"NSArray",&,N,V_contentItemsArtwork
T@"NSArray",&,N,V_originForwarders
nowPlayingState
T@"NSArray",&,N,V_pendingOutputDevices
objects
T@"NSArray",&,N,V_supportedPlaybackSessionTypes
outputDeviceUID
T@"NSArray",&,N,V_updatedOutputDevices
personalDeviceLockScreenTimeout
T@"NSArray",C,N,V_autoConnectedEndpoints
T@"NSArray",C,N,V_connectedExternalDevices
playbackSession
T@"NSArray",C,N,V_endpoints
prewarm
T@"NSArray",C,N,V_immediateDevices
pushStateClient
T@"NSArray",C,N,V_migrationEvents
registeredToOutputDeviceUpdates
T@"NSArray",C,N,V_queuedInitiatePlaybackMessages
reloadScheduled
T@"NSArray",C,N,V_registeredVirtualAudioDevices
remoteUIService
T@"NSArray",C,N,V_subscribedPlayerPaths
removeEndpointsChangedCallback:
T@"NSArray",C,N,V_transactions
replyIdentifier
T@"NSArray",R,N,V_activePlayerClients
resetConnection
T@"NSArray",R,N,V_memberOutputDevices
T@"NSData",C,D,N
selectionReason
T@"NSData",C,N,V_lastKnownBluetoothAddress
sendEvent:destination:userInfo:
T@"NSData",R,N
sendRemoteControlCommandWithoutRedirection:withCompletionBlock:
T@"NSData",R,N,V_indexPathData
service
T@"NSDate",&,N,V_connectionAttemptDate
serviceWithDefaultShellEndpoint
T@"NSDate",&,N,V_lastDiscoveryModeDisableDate
T@"NSDate",&,N,V_lastMessageSentDate
setBluetoothID:
T@"NSDate",&,N,V_lastPlayingDate
setCachedNowPlayingContentItem:
T@"NSDate",&,N,V_lastStatusCheckDate
setClusterType:
T@"NSDate",&,N,V_playbackStateTimestamp
setConnections:
T@"NSDate",C,N
setCredentials:
T@"NSDate",R,N
setDateCreated:
T@"NSDate",R,N,V_dateCreated
setDeviceClass:
T@"NSDate",R,N,V_registrationDate
setDismissOverlaysOnLockscreen:
T@"NSDictionary",C,N,V_enqueuedCommands
setEventReason:
T@"NSDictionary",C,N,V_systemActiveEndpoints
setGroupLeader:
T@"NSDictionary",R,N
setHasScreenMirroringAssertion:
T@"NSDictionary",R,N,V_nowPlayingAudioFormatContentInfos
setLastDiscoveryModeEnableDate:
T@"NSError",&,N,V_canMigrateToLocalEndpointError
setOptionsData:
T@"NSHashTable",&,N,V_clientObservers
setPairingAllowedCallbackQueue:
T@"NSMutableArray",&,N,V_addedOutputDevices
setQos:
T@"NSMutableArray",&,N,V_connections
setServiceType:
T@"NSMutableArray",&,N,V_pendingConnectCompletionHandlers
setTransaction:
T@"NSMutableArray",R,N,V_transactions
setWorkerQueue:
T@"NSMutableDictionary",&,N,V_coalescingStates
setXpcListener:
T@"NSMutableDictionary",&,N,V_completionBlockDictionary
streamsThatCountTowardsCapacity
T@"NSMutableDictionary",&,N,V_discoveryChannels
suggestionCount
T@"NSMutableDictionary",&,N,V_inactiveOutputContexts
textFieldValues
T@"NSMutableDictionary",&,N,V_outputDeviceVolumeCapabilities
uppercaseString
T@"NSMutableDictionary",&,N,V_remoteControlChannels
version
T@"NSMutableDictionary",&,N,V_responseHandlers
volumeCategoryForAudioCategory:
T@"NSMutableDictionary",&,N,V_virtualOutputDeviceDictionary
T@"NSMutableSet",&,N,V_activeTopologyChangeIdentifiers
T@"NSMutableSet",&,N,V_mutableExternalDeviceClients
T@"NSMutableSet",&,N,V_nearbyDevices
T@"NSMutableSet",R,N,V_internalClients
T@"NSNumber",&,N,V_playbackState
T@"NSNumber",&,N,V_volume
T@"NSNumber",&,N,V_volumeCapabilities
T@"NSNumber",R,C,N,V_messageID
T@"NSNumber",R,N,V_audioSessionID
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_externalDeviceCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputContextCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesRemovedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesUpdatedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeControlCapabilitiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workerQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_messageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSObject<OS_xpc_object>",&,N,V_connection_t
T@"NSObject<OS_xpc_object>",&,N,V_endpoint
T@"NSRunLoop",R,N,V_runLoop
T@"NSSet",&,N,V_allowedAuditTokens
T@"NSSet",&,N,V_cachedNowPlayingClients
T@"NSSet",&,N,V_currentPersonalDeviceUIDs
T@"NSSet",R,N
T@"NSSet",R,N,V_mxSessionIDs
T@"NSString",&,N
T@"NSString",&,N,V_batchedNowPlayingState
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_currentPlaybackSessionIdentifier
T@"NSString",&,N,V_destination
T@"NSString",&,N,V_destinationGroupUID
T@"NSString",&,N,V_destinationOutputDeviceUID
T@"NSString",&,N,V_deviceName
T@"NSString",&,N,V_deviceUID
T@"NSString",&,N,V_discoverySession
T@"NSString",&,N,V_electedPlayerReason
T@"NSString",&,N,V_eventReason
T@"NSString",&,N,V_name
T@"NSString",&,N,V_outputDeviceUID
T@"NSString",&,N,V_selectionReason
T@"NSString",&,N,V_session
T@"NSString",&,N,V_sessionUID
T@"NSString",&,N,V_sourceUID
T@"NSString",&,N,V_string
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,V_advertisingReasonDescription
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_center
T@"NSString",C,N,V_destinationGroupUID
T@"NSString",C,N,V_destinationOutputDeviceUID
T@"NSString",C,N,V_localReceiverPairingIdentity
T@"NSString",C,N,V_routeUID
T@"NSString",R,C
T@"NSString",R,N
T@"NSString",R,N,V_bundleID
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_contextID
T@"NSString",R,N,V_destination
T@"NSString",R,N,V_deviceID
T@"NSString",R,N,V_deviceUID
T@"NSString",R,N,V_event
T@"NSString",R,N,V_eventReason
T@"NSString",R,N,V_modelName
T@"NSString",R,N,V_mostRecentEvent
T@"NSString",R,N,V_mostRecentEventReason
T@"NSString",R,N,V_mostRecentSelectionReason
T@"NSString",R,N,V_name
T@"NSString",R,N,V_netServiceType
T@"NSString",R,N,V_nowPlayingApplicationDisplayID
T@"NSString",R,N,V_originatingAppDisplayID
T@"NSString",R,N,V_path
T@"NSString",R,N,V_routeUID
T@"NSString",R,N,V_routedAppDisplayID
T@"NSString",R,N,V_selectionReason
T@"NSString",R,N,V_senderAppDisplayID
T@"NSString",R,N,V_session
T@"NSString",R,N,V_token
T@"NSString",R,N,V_type
T@"NSString",R,N,V_uniqueIdentifier
T@"NSTimer",&,N,V_timeoutTimer
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSUserDefaults",R,N
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCConnection",R,N,V_connection
T@"NSXPCConnection",R,N,V_xpcConnection
T@"NSXPCListener",&,N,V_xpcListener
T@"NSXPCListener",R,N,V_listener
T@"NSXPCListenerEndpoint",&,N,V_remoteUIServerEndpoint
T@"NSXPCListenerEndpoint",R,N
T@"Protocol",&,N,V_protocol
T@"RPCompanionLinkClient",R,N
T@"SBSLockScreenContentAssertion",&,N,V_assertion
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
T@"_MRAVAirPlaySecuritySettingsProtobuf",&,N,V_airplaySecuritySettings
T@,&,N,V_pinPairingToken
T@,&,N,V_serviceToken
T@,R,W,N,V_delegate
T@?,C,N,V_callback
T@?,C,N,V_completion
T@?,C,N,V_connectionHandler
T@?,C,N,V_connectionStateCallback
T@?,C,N,V_customDataCallback
T@?,C,N,V_invalidationHandler
T@?,C,N,V_nameCallback
T@?,C,N,V_outputDevicesRemovedCallback
T@?,C,N,V_outputDevicesUpdatedCallback
T@?,C,N,V_pairingAllowedCallback
T@?,C,N,V_pairingCallback
T@?,C,N,V_volumeCallback
T@?,C,N,V_volumeControlCapabilitiesCallback
T@?,R,N,V_invalidationHandler
TB,N
TB,N,V_controlCenterForegrounded
TB,N,V_declaringAirplayActive
TB,N,V_devicesDelayed
TB,N,V_displayOn
TB,N,V_enableThrottling
TB,N,V_endpointsDelayed
TB,N,V_hasLockScreenAssertion
TB,N,V_hasLockScreenControlsAssertion
TB,N,V_hasPresentedForCurrentPersonalDevices
TB,N,V_hasQuickControlsAssertion
TB,N,V_hasRequestedLegacyNowPlayingInfo
TB,N,V_hasRequestedSupportedCommands
TB,N,V_hasScreenMirroringAssertion
TB,N,V_hasScreenMirroringQuickControlsAssertion
TB,N,V_hasTriggered
TB,N,V_invalidated
TB,N,V_isAdvertisingProximity
TB,N,V_isCallingClientCallback
TB,N,V_isForegrounded
TB,N,V_isPlaying
TB,N,V_keepAlive
TB,N,V_lockScreenForegrounded
TB,N,V_lockScreenWidgetActive
TB,N,V_lockScreenWidgetVisible
TB,N,V_personalDeviceWasRecentlyAttached
TB,N,V_pushStateCanBeNowPlayingPlayer
TB,N,V_pushStateHasNowPlayingData
TB,N,V_pushStateIsPlaying
TB,N,V_pushStatePictureInPictureEnabled
TB,N,V_reloadScheduled
TB,N,V_sendingPlaybackStateToCompanion
TB,N,V_shouldConsiderSuggestions
TB,N,V_shouldFinishPresentationForCurrentPersonalDevices
TB,N,V_shouldRun
TB,N,V_started
TB,N,V_supportsBackgroundAudio
TB,N,V_tombstoned
TB,N,V_useOutputDeviceCache
TB,R
TB,R,N
TB,R,N,GisAVRCPCommand
TB,R,N,GisContextSensitive
TB,R,N,GisDestinationLocal
TB,R,N,GisInputRoute,V_inputRoute
TB,R,N,GisLockScreenWidgetActive
TB,R,N,GisLockScreenWidgetVisible
TB,R,N,GisNavigational
TB,R,N,GisOutputRoute,V_outputRoute
TB,R,N,GisPicked,V_picked
TB,R,N,GisPlaying,V_playing
TB,R,N,GisSilentPrimary
TB,R,N,GisSpeakerRoute,V_speakerRoute
TB,R,N,V_airplayActive
TB,R,N,V_canBeDefaultRoute
TB,R,N,V_canBeSystemDefaultRoute
TB,R,N,V_isActive
TB,R,N,V_isDiscoveryChannelConnected
TB,R,N,V_isMuted
TB,R,N,V_nowPlayingApplicationIsInterrupted
TB,R,N,V_nowPlayingApplicationIsPlaying
TB,R,N,V_shouldSendCommandsDuringPhoneCall
TB,R,N,V_wantsCoalescedStateChanged
TI,D,N
TI,N
TI,N,V_connectionState
TI,N,V_discoveryMode
TI,N,V_error
TI,N,V_hardwareRemoteBehavior
TI,N,V_options
TI,N,V_outputDeviceDiscoveryMode
TI,N,V_routeDiscoveryMode
TI,N,V_style
TI,N,V_systemDiscoveryMode
TI,R,N
TI,R,N,V_appOptions
TI,R,N,V_capabilities
TI,R,N,V_commandType
TI,R,N,V_connection
TI,R,N,V_externalScreenType
TI,R,N,V_identifier
TI,R,N,V_playbackState
TQ,N
TQ,N,V_currentMessageCount
TQ,N,V_deviceState
TQ,N,V_notifications
TQ,N,V_playbackQueueCapabilities
TQ,N,V_registeredCallbacks
TQ,N,V_serviceType
TQ,N,V_status
TQ,N,V_totalMessageCount
TQ,N,V_type
TQ,N,V_usedTransactionMemory
TQ,R
TQ,R,N,V_entitlements
TQ,R,N,V_name
TQ,R,N,V_routeDiscoveryCount
TQ,R,N,V_totalOutgoingMessageCount
TQ,R,N,V_uniqueIdentifier
T^{IONotificationPort=},R,N,V_port
T^{__IOHIDUserDevice=},R,N,V_ioDevice
Td,N,V_transactionWaitDuration
Td,R,N
Td,R,N,V_disconnectInterval
Td,R,N,V_h
Td,R,N,V_recentlyPlayingInterval
Td,R,N,V_w
Tf,N
Tf,R,N,V_currentVolume
Ti,N
Ti,R,N
Ti,R,N,V_nowPlayingApplicationPID
Ti,R,N,V_pid
Ti,R,N,V_processID
Tq,N,V_changeType
Tq,N,V_event
Tq,N,V_eventType
Tq,N,V_type
Tq,R,N
Tq,R,N,V_inputType
Tq,R,N,V_type
Tq,V_suggestionCount
T{?=[8I]},R,N
T{os_unfair_lock_s=I},R,N,V_lock
URLByAppendingPathComponent:
URLWithString:
UTF8String
UUID
UUIDString
WHAIdentifier
_MACAddress
_activeClients
_activeDialog
_activeNowPlayingClient
_activeNowPlayingClientDidChangeNotification:
_activeNowPlayingClientTransaction
_activeOrigin
_activeOriginClient
_activeOutputContexts
_activePasswordDialog
_activePlayerClients
_activeReconSessions
_activeReconnaissanceSessions
_activeSystemContext
_activeSystemEndpointDidChangeNotification:
_activeSystemEndpointOutputDeviceUID
_activeTopologyChangeIdentifiers
_activeTouchEventsForFingerIndices
_activeTransactions
_activity
_activityController
_addAuthorizationCallbackForOutputDevice:destination:session:
_addClient:
_addEntry:
_addMessageHandler:
_addMessageHandlerForDevice:handler:
_addNowPlayingNotification:selector:
_addNowPlayingStateToMessage:forClient:withEndpoint:
_addOrigin:withDeviceInfo:emitNotification:
_addOutputDevicesToMessage:forClient:withEndpoint:
_addSubscribedStateToMessage:forClient:nowPlayingClient:
_addSubscribedStateToMessage:forClient:originClient:
_addSubscribedStateToMessage:forClient:playerClient:
_addToMessage:withAllClusterDeviceMembers:block:
_addUndiscoveredOutputContextOutputDevices:
_addVolumeToMessage:forClient:outputDevice:withEndpoint:
_addVolumeToMessage:forClient:withEndpoint:
_addVolumeToMessage:forClient:withEndpoint:completion:
_addedOutputDevices
_adjustPlaybackTimerIfNeeded
_advertisingReasonDescription
_airplayActive
_airplayActiveNotifyToken
_airplayAdvertisingNotifyToken
_airplayPerfsNotifyToken
_airplaySecuritySettings
_allClusterMembers
_allExternalDeviceClients
_allowedAuditTokens
_allowedMemory
_allowedTransactionMemory
_anonymousListener
_appOptions
_appStateMonitor
_appendDescribableArray:toString:withTitle:
_appendDescribableArray:toString:withTitle:indentLevel:
_appendDescribableArray:toString:withTitle:indentLevel:usingDebugDescription:
_appendNullableObjectDescription:toString:withTitle:
_appendNullableObjectDescription:toString:withTitle:usingDebugDescription:
_appendSubheader:toString:
_applicationIsRunning:
_applicationPickedRoutes
_applyDeviceInfoValuesToOutputDevices:withDeviceInfo:
_applyLocalReservedOutputContextValuesToOutputDevices:
_applyLocallySourcedValuesToOutputDevices:
_applyOutputContextValuesToOutputDevices:
_artworkCache
_assertion
_assertionID
_assertions
_authorizationCallbacks
_autoConnectedEndpoints
_autoConnectingEndpoints
_autoConnectionController
_avDiscoverySession
_avSessionMediaServicesResetNotification:
_availableOrigins
_availableOutputDevices
_batchedNowPlayingState
_bluetoothClient
_broadcastKeyboardMessageWithState:text:attributes:
_broadcastRemoteTextInputMessageWithPayload:
_browsableContentServer
_bundleID
_bundleIdentifier
_bytesInUse
_cache
_cachedHasPersonalDevices
_cachedNowPlayingClients
_cachedNowPlayingContentItem
_cachedProtobufData
_cachingPolicyForRequest:
_calculateHierarchy:
_calculateMemory
_callClientAllowsPairingCallback
_callClientConnectionStateCallback:previousConnectionState:error:
_callClientCustomDataCallback:name:
_callClientNameCallback
_callClientPairingCallback:
_callObserver
_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:
_callOutputDevicesUpdatedCallbackWithOutputDevices:
_callVolumeCallback:outputDeviceUID:
_callVolumeControlCapabilitiesCallback:outputDeviceUID:
_callback
_calloutQueue
_canBeDefaultRoute
_canBeNowPlaying
_canBeNowPlayingPlayer
_canBeNowPlayingTimestamp
_canBeSystemDefaultRoute
_canMigrateEvaluationTimestamp
_capabilities
_capabilitiesValue
_changeType
_changedOutputDevices
_channels
_checkConnectionStatus
_cleanUpPersistedSessionForSessionPreloadCommand:
_cleanUpStreamsWithReason:error:
_cleanUpWithReason:error:
_clearAllQueuedCommandsForReason:
_clearPasswordForOutputDevice:
_clearQueuedBeginLoadingMessagesForApp:
_clearQueuedCommand:forUnavailableApplicationWithDisplayID:
_clientBundleIDs
_clientConnection
_clientDidConnectNotification:
_clientDidOpenConnection:
_clientDidRegisterCanBeNowPlaying:
_clientDidUnregisterCanBeNowPlaying:
_clientForIdentifier:
_clientForPairingSession:
_clientIdentifier
_clientObservers
_clients
_clusterOutputDevicesFromUnclusteredDevices:
_coalescingStates
_coealesceItems:
_collectDiagnosticFromClient:completion:
_commandClientsRestriction
_commandDictionary
_commandQueue
_commandQueuesForDisplayIDs
_commandType
_commitLocalDeviceWithReason:
_companionService
_completion
_completionBlockDictionary
_completionHandler
_computedNowPlayingClient
_concludeSearchWithRoute:
_configuration
_configurationData
_configurationForUID:
_configurationFromDestination:session:
_configureObserver
_connectToAllOutputDevicesForReason:comparator:queue:completion:
_connectToGroup:reason:completion:
_connectToOutputDevice:reason:completion:
_connectedClients
_connectedEndpoints
_connectedExternalDevices
_connectingEndpoints
_connectingExternalDeviceClients
_connection
_connection:canReceiveUpdatesForPlayerPath:
_connection:wasPreviouslySubscribedToPlayerPath:
_connectionAttemptDate
_connectionForSource:destination:session:
_connectionHandler
_connectionMonitor
_connectionOptions
_connectionQueue
_connectionRecoveryBehavior
_connectionState
_connectionStateCallback
_connectionStateCallbackQueue
_connectionStateDate
_connectionStateError
_connectionStateTimestamp
_connectionUID
_connection_t
_connections
_contentController
_contentItem
_contentItems
_contentItemsArtwork
_contextID
_contextuallyAwareDestinationAppDisplayIDForCommand:
_controlCenterForegrounded
_copyWithZone:usingConcreteClass:
_createAirPlaySecuritySettings
_createBroadcastCommandPlayerPathForClient:
_createBroadcastCommandResponseFromStatuses:forClient:
_createConnectionWith:groupID:connectionType:shouldUseSystemAuthenticationPrompt:userInfo:
_createConnectionWithUserInfo:
_createDiscoveryChannelForIDSConnection:deviceInfo:
_createEndpointForOutputDeviceIDs:completion:
_createEndpointForOutputDeviceIDs:options:completion:
_createEndpointForOutputDeviceIDsLegacy:options:completion:
_createLocalizedOutputDevice:redactVolume:forClient:endpoint:
_createLocalizedOutputDevices:redactVolume:forClient:endpoint:
_createPlayerAndWaitForCanBeNowPlaying:completion:
_createPlayerAndWaitForCanBeNowPlaying:deviceInfo:completion:
_createPlayerAndWaitForConnection:command:completion:
_createPlayerAndWaitForConnection:command:deviceInfo:completion:
_createPlayerForClient:playerPath:deviceInfo:completion:
_createRemoteAlertHandleIfNeeded
_createRemoteControlChannelForIDSConnection:deviceInfo:destination:session:options:
_createResolvedPlayerPathFromPlayerPath:
_createStereoPairRepresentationFrom:
_credentials
_currentAppActivity
_currentDeviceInfo
_currentMessageCount
_currentPersonalDeviceUIDs
_currentPlaybackSessionIdentifier
_currentPlaybackSessionTypes
_currentRouteHasVolumeControlDidChangeNotification:
_currentTaskAssertion
_currentVolume
_customDataCallback
_customDataCallbackQueue
_customOrigin
_daemonClient
_data
_dataSource
_date
_dateCreated
_dbHandle
_declaringAirplayActive
_defaultSupportedCommandsData
_delegate
_delegateQueue
_descriptionForDiscoveryMode:
_designatedGroupLeader
_destination
_destinationClient
_destinationClientForRemoteControlCommand:
_destinationEndpoint
_destinationGroupUID
_destinationMessageHandlers
_destinationOrigin
_destinationOutputDeviceUID
_deviceDescriptor
_deviceID
_deviceIDCounter
_deviceInfo
_deviceInfoArchiveClasses
_deviceInfoDataSource
_deviceInfoDidChange
_deviceInfoDidChange:
_deviceInfoDidChangeWithDeviceInfo:
_deviceInfoFilePath
_deviceInfoReloadScheduled
_deviceMessageHandlers
_deviceName
_deviceProperties
_deviceState
_deviceUID
_dictionary
_dictionaryRepresentation
_didCloseCommunicationChannelWithID:error:
_didReceiveData:fromConnectionID:connectionFactory:
_disconnectClient:withError:
_disconnectInterval
_disconnectTimer
_disconnecting
_discoverGroup:reason:completion:
_discoverOutputDevice:reason:completion:
_discoveryChannel
_discoveryChannelConnectionTimer
_discoveryChannels
_discoveryMode
_discoverySession
_discoverySessionConfigurationsResults
_discoverySessionOutputDevicesToken
_discoverySessions
_discoveryTokens
_discoveryTransaction
_dispatchKeypressEventWithUsagePage:usage:
_displayOn
_distantOutputDevices
_effectiveCanBeNowPlaying
_effectiveContextIDForCommand:
_electedPlayer
_electedPlayerController
_electedPlayerPath
_electedPlayerReason
_enableThrottling
_endSearch
_endpoint
_endpointIsSolo:
_endpointShouldNotifyClientsOfTopologyChanges:
_endpointShouldPostVolumeNotifications:outputDevice:
_endpoints
_endpointsDelayed
_enqueueCommand:forApplication:withCompletion:
_enqueueCommand:forUnavailableApplicationWithDisplayID:
_enqueueCompletion:forUnavailableDestinationApp:
_enqueuedCommands
_enqueuedCommandsForDisplayID:
_entitlements
_entries
_error
_event
_eventReason
_eventType
_existingKeychainAccountForOutputDevice:password:
_explicitNowPlayingClient
_exportDescriptorForOutputDevice:endpoint:remoteControl:
_extendedInfo
_externalDeviceCallbackQueue
_externalDeviceClientDidInvalidate:
_externalDeviceClientForConnection:
_externalDeviceManager
_externalDeviceServer
_externalOutputContext
_externalScreenDidChangeNotification:
_externalScreenType
_fadeOutNotificationToken
_failedToConnectToOutputDeviceNotification:
_fetchAvailableOutputDevicesFromDiscoverySessions
_findClientIf:
_forceEnableCECVolumeNotification:
_forceReconnectOnConnectionFailure
_forwardCommand:completion:
_forwarder
_frontmostClient
_gameControllerDeviceIDCounter
_gameControllerInputMode
_gameControllers
_generateDeviceInfoWithDesignatedGroupLeader:outputContext:
_generateMessageID
_generateSessionUID
_genericNetworkService
_gestaltNotificationToken
_handleActiveApplicationDidChangeNotification:
_handleActivePlayerDidChange:
_handleActivePlayerDidChangeNotification:
_handleActiveSystemEndpointChangedNotification:
_handleActiveSystemEndpointDidChangeNotification:
_handleAddVirtualOutputDeviceMessage:fromClient:
_handleAdjustSystemVolumeByStepMessage:fromClient:
_handleAdjustVolumeMessage:fromClient:
_handleApplicationClientStateChanged:
_handleApplicationClientStateDidChangeNotification:
_handleApplicationDidRegisterNotification:
_handleApplicationDidUnregisterNotification:
_handleAuthenticationFailureForRoute:withOptions:
_handleAuthorizationRequest:
_handleBeginApplicationActivityMessage:fromClient:
_handleBeginLoadingBrowsableContentMessage:fromClient:
_handleBroadcastCommandMessage:fromClient:
_handleBrowsableContentDidFinishLoadingFromClient:indexPath:withError:
_handleClearAllAVRoutePasswordsMessage:fromClient:
_handleClientConnection:
_handleClientUpdatesConfigMessage:fromClient:
_handleClusterErrorStatus:forRoute:
_handleCollectClientDiagnosticsMessage:fromClient:
_handleCollectClientDiagnosticsMessageWithCompletion:
_handleCollectDiagnosticMessage:fromClient:
_handleCompanionDeviceConnectedNotification:
_handleCompanionDeviceDisconnectedNotification:
_handleCompletePairingHandlerMessage:fromClient:
_handleConnectRemoteControlMessage:fromDevice:destination:session:
_handleContentItemArtworkChanged:
_handleContentItemArtworkChangedMessage:fromClient:
_handleContentItemChangedMessage:fromClient:
_handleContentItemsChanged:
_handleCreateDirectEndpointForDevices:fromClient:
_handleCreateEndpointWithDevices:fromClient:
_handleCreateGroupWithDevices:fromClient:
_handleCreateHostedEndpointForDevices:fromClient:
_handleCreateHostedEndpointRequestMessage:fromClient:
_handleDefaultSupportedCommandsChanged:
_handleDeletePairedDeviceMessage:fromClient:
_handleDeletePairingIdentityMessage:fromClient:
_handleDeviceInfoChange:oldDevice:
_handleDeviceInfoChangedNotification:
_handleDeviceInfoDidChangeNotification:
_handleDeviceInfoRequest:fromClient:
_handleDeviceInfoUpdateMessage:fromClient:
_handleDiscoveryMessage:fromDevice:
_handleDiscoveryUpdateOutputDevicesMessage:
_handleDismissMediaControlsCommandMessage:fromClient:
_handleElectedPlayerDidChangeNotification:
_handleEndApplicationActivityMessage:fromClient:
_handleEndpointDidDisconnect:
_handleEndpointDidInvalidateNotification:
_handleEndpointOutputDevicesDidChangeNotification:
_handleErrorStatus:forRoute:
_handleExternalDeviceConnectionDidChange:
_handleExternalDeviceConnectionStateDidChangeNotification:
_handleGenericMessage:
_handleGenericMessage:fromClient:
_handleGetActiveOriginMessage:fromClient:
_handleGetActivePlayerPathsForLocalOriginMessage:fromClient:
_handleGetActiveSystemEndpointUIDsMessage:fromClient:
_handleGetAirPlaySecuritySettingsMessage:fromClient:
_handleGetAirplayStatus:fromClient:
_handleGetAnyAppIsPlayingMessage:fromClient:
_handleGetApplicationActivityMessage:fromClient:
_handleGetAudioFormatContentInfoForOriginMessage:fromClient:
_handleGetAvailableOriginsMessage:fromClient:
_handleGetClientPropertiesMessage:fromClient:
_handleGetDeviceInfo:fromClient:
_handleGetDeviceSupportsUIActivitiesMessage:fromClient:
_handleGetDevicesMessage:fromClient:
_handleGetElectedPlayerPathMessage:fromClient:
_handleGetExternalDeviceMessage:fromClient:
_handleGetExternalScreenTypeMessage:fromClient:
_handleGetHostedEndpointForDeviceUIDMessage:fromClient:
_handleGetHostedRoutingXPCEndpointMessage:fromClient:
_handleGetImageDimensionsForArtworkDataMessage:fromClient:
_handleGetInputModeMessage:fromClient:
_handleGetIsBooksAppInstalledMessage:fromClient:
_handleGetIsMusicAppInstalledMessage:fromClient:
_handleGetIsMutedMessage:fromClient:
_handleGetKeyboardSessionMessage:fromClient:
_handleGetLastPlayingDateMessage:fromClient:
_handleGetNowPlayingClientMessage:fromClient:
_handleGetNowPlayingClientsMessage:fromClient:
_handleGetNowPlayingPlayerMessage:fromClient:
_handleGetNowPlayingPlayersMessage:fromClient:
_handleGetOutputContextUIDMessage:fromClient:
_handleGetPairedDevicesMessage:fromClient:
_handleGetPendingCommandsMessage:fromClient:
_handleGetPickableRoutesMessage:fromClient:
_handleGetPickedRouteHasVolumeControlMessage:fromClient:
_handleGetPlaybackStateMessage:fromClient:
_handleGetPlayerPictureInPictureEnabledMessage:fromClient:
_handleGetPlayerPropertiesMessage:fromClient:
_handleGetRecentAVOutputDeviceUIDsMessage:fromClient:
_handleGetRemoteTextInputSessionMessage:fromClient:
_handleGetSavedAVRoutePasswordMessage:fromClient:
_handleGetSupportedBrowsableContentAPIsMessage:fromClient:
_handleGetSupportedCommandsMessage:fromClient:
_handleGetSupportsSystemPairingMessage:fromClient:
_handleGetSystemIsMutedMessage:fromClient:
_handleGetSystemVolumeMessage:fromClient:
_handleGetUIServerRelayEndpointMessage:fromClient:
_handleGetVirtualOutputDevicesMessage:fromClient:
_handleGetVolumeControlCapabilitiesMessage:fromClient:
_handleGetVolumeMessage:fromClient:
_handleGroupDevicesAndSendCommand:fromClient:
_handleHiliteModeChanged:
_handleInputDeviceConnectedMessage:fromClient:
_handleInputDeviceDisconnectedMessage:fromClient:
_handleIsPlayingDidChangeNotification:
_handleKeepAliveMessage:fromClient:
_handleLayoutDidChangeNotification:
_handleLegacyVolumeControlCapabilitiesDidChangeMessage:
_handleLocalPlaybackBeganNotification:
_handleLyricsEventMessage:fromClient:
_handleMaybeCanMigrateToLocalEndpointDidChange:
_handleMediaServerDeath
_handleMigrateFromEndpointToEndpointMessage:fromClient:
_handleMigrateFromEndpointToOutputDevicesMessage:fromClient:
_handleModifyOutputContextMessage:fromClient:
_handleModifyOutputContextRequestMessage:fromClient:
_handleNotificationMessage:
_handleNowPlayingAppDidChange:
_handleNowPlayingAppMaybeDidChange:
_handleNowPlayingApplicationDidChangeNotification:
_handleNowPlayingApplicationDidForegroundNotification:
_handleNowPlayingApplicationDidUnregisterCanBeNowPlaying:
_handleNowPlayingClientDidChange:
_handleNowPlayingPlaybackStateChanged:
_handleNowPlayingPlayerDidChange:
_handleObserverDiscoveryModeDidChangeNotification:
_handleOriginDidRegisterNotification:
_handleOriginDidUnregisterNotification:
_handleOriginIsPlayingDidChange:
_handleOutputContextDidAddLocalDevice:
_handleOutputContextDidAddOutputDeviceNotification:
_handleOutputContextDidRemoveLocalDevice:
_handleOutputContextManagerDidReset:
_handleOutputDevicesDidChangeNotification:
_handleOutputDevicesRemovedMessage:
_handleOutputDevicesUpdatedMessage:
_handlePersonalDeviceChangeNotification:
_handlePing:fromClient:
_handlePlaybackQueueCapabilitiesChanged:
_handlePlaybackQueueChanged:
_handlePlaybackQueueChangedNotification:
_handlePlaybackQueueDidChangeNotification:
_handlePlaybackQueueRequest:forPlayer:completion:
_handlePlaybackQueueRequest:forPlayerPath:completion:
_handlePlaybackQueueRequestMessage:fromClient:
_handlePlaybackSessionMigrateBeginMessage:fromClient:
_handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:
_handlePlaybackSessionMigrateEndMessage:fromClient:
_handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:
_handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:
_handlePlaybackSessionMigrateRequestMessage:fromClient:
_handlePlaybackSessionRequest:forPlayerPath:completion:
_handlePlaybackSessionRequest:fromClient:
_handlePlaybackSessionRequestMessage:fromClient:
_handlePlaybackStateDidChange:
_handlePlaybackStateDidChangeNotification:
_handlePlayerDidRegister:
_handlePlayerDidRegisterCanBeNowPlayingNotification:
_handlePlayerDidRegisterNotification:
_handlePlayerDidUnregisterCanBeNowPlayingNotification:
_handlePlayerDidUnregisterNotification:
_handlePlayerIsPlayingDidChange:
_handlePlayerIsPlayingDidChangeNotification:
_handlePlayerPictureInPictureEnabledDidChange:
_handlePlayerPlaybackQueueCapabilitiesDidChangeNotification:
_handlePlayerPlaybackQueueContentItemArtworkDidChangeNotification:
_handlePlayerPlaybackQueueContentItemsDidChangeNotification:
_handlePlayerPlaybackQueueDidChangeNotification:
_handlePlayerPropertiesDidChange:
_handlePlayerStateChanged:
_handlePlayerStateDidChangeNotification:
_handlePostNotificationMessage:fromClient:
_handlePredictGroupLeader:fromClient:
_handlePresentMediaControlsCommandMessage:fromClient:
_handlePresentMediaControlsLanguageOptionsCommandMessage:fromClient:
_handlePresentRouteAuthorizationStatusMessage:
_handlePresentRouteAuthorizationStatusMessage:fromClient:
_handlePrewarmMediaControlsCommandMessage:fromClient:
_handlePromptForRouteAuthorizationMessage:
_handlePromptForRouteAuthorizationMessage:fromClient:
_handleReceivedButtonEvent:fromClient:
_handleReceivedCommand:fromClient:
_handleReceivedVoiceInputMessage:fromClient:
_handleRecordingEndpointAvailabilityMessage:fromClient:
_handleRecordingStateChangedMessage:fromClient:
_handleRegisterForWakingNowPlayingNotifications:fromClient:
_handleRegisterGameControllerMessage:client:
_handleRegisterHIDDeviceMessage:fromClient:
_handleRegisterPairingHandlerMessage:fromClient:
_handleRegisterVoiceInputDeviceMessage:fromClient:
_handleRemoteCommand:withOptions:playerPath:completion:
_handleRemoteTextInputMessage:fromClient:
_handleRemoveClient:
_handleRemoveClientMessage:
_handleRemoveFromParentGroup:fromClient:
_handleRemoveNowPlayingClientMessage:fromClient:
_handleRemoveNowPlayingPlayerMessage:fromClient:
_handleRemovePlayer:
_handleRemovePlayerMessage:
_handleRequestAudioAmplitudeSamplesMessage:fromClient:
_handleRequestBlessMessage:fromClient:
_handleRequestPlaybackInitializationMessage:fromClient:
_handleRequestPlaybackQueueCapabilities:fromClient:
_handleRequestVideoThumbnailsMessage:fromClient:
_handleResetOutputContextMessage:fromClient:
_handleResetPlaybackQueueRequests:fromClient:
_handleResolvePlayerPath:fromClient:
_handleRestrictCommandClientsMessage:fromClient:
_handleRestrictionChangedNotification:
_handleResumeNowPlayingSession:fromClient:
_handleSelectSourceMessage:fromClient:
_handleSendCommandMessage:fromClient:
_handleSendLyricsEvent:fromClient:
_handleSendPlaybackSessionMessage:fromClient:
_handleSendPlaybackSessionMigrateBeginMessage:fromClient:
_handleSendPlaybackSessionMigrateEndMessage:fromClient:
_handleSendTelevisionCustomDataMessage:fromClient:
_handleServerXPCMessage:fromClient:
_handleSetActiveOriginMessage:fromClient:
_handleSetApplicationPickedRoutes:fromClient:
_handleSetCanBeNowPlayingAppMessage:fromClient:
_handleSetCanBeNowPlayingPlayerMessage:fromClient:
_handleSetClientPropertiesMessage:fromClient:
_handleSetConnectionStateMessage:
_handleSetConnectionStateMessage:fromClient:
_handleSetDefaultSupportedCommandsMessage:
_handleSetDefaultSupportedCommandsMessage:fromClient:
_handleSetDiscoveryModeMessage:fromClient:
_handleSetHardwareRemoteBehaviorMessage:fromClient:
_handleSetHiliteModeMessage:fromClient:
_handleSetInputModeMessage:fromClient:
_handleSetIsMutedMessage:fromClient:
_handleSetListeningModeMessage:fromClient:
_handleSetMessageLogging:fromClient:
_handleSetNearbyDevice:fromClient:
_handleSetNearbyDevicesToRemoteControlMessage:fromClient:
_handleSetNowPlayingAppOverrideMessage:fromClient:
_handleSetNowPlayingClientMessage:
_handleSetNowPlayingClientMessage:fromClient:
_handleSetNowPlayingPlayerMessage:
_handleSetNowPlayingPlayerMessage:fromClient:
_handleSetOriginClientPropertiesMessage:
_handleSetOriginClientPropertiesMessage:fromClient:
_handleSetOverriddenNowPlayingAppMessage:fromClient:
_handleSetPickedRouteHasVolumeControlMessage:fromClient:
_handleSetPickedRouteMessage:fromClient:
_handleSetPlaybackQueue:fromClient:
_handleSetPlaybackQueueCapabilities:fromClient:
_handleSetPlaybackStateMessage:fromClient:
_handleSetPlayerClientPropertiesMessage:
_handleSetPlayerClientPropertiesMessage:fromClient:
_handleSetPlayerPictureInPictureEnabledMessage:fromClient:
_handleSetPlayerPropertiesMessage:fromClient:
_handleSetRecentAVOutputDeviceUIDMessage:fromClient:
_handleSetRouteDiscoveryModeMessage:fromClient:
_handleSetSavedAVRoutePasswordMessage:fromClient:
_handleSetStateMessage:
_handleSetSupportedBrowsableContentAPIsMessage:fromClient:
_handleSetSupportedCommandsMessage:fromClient:
_handleSetSystemIsMutedMessage:fromClient:
_handleSetSystemVolumeMessage:fromClient:
_handleSetVolumeMessage:fromClient:
_handleStartNowPlayingSession:fromClient:
_handleStopNowPlayingSession:fromClient:
_handleSupportedAPIsDidChangeForClient:
_handleSupportedCommandsDidChange:
_handleSupportedCommandsDidChangeNotification:
_handleTelevisionEndpointAvailableMessage:fromClient:
_handleTextInputMessage:fromClient:
_handleTouchEvent:withDeviceID:fromClient:
_handleTriggerAudioFadeMessage:fromClient:
_handleUnpickAirPlayRoutesMessage:fromClient:
_handleUnregisterPairingHandler:fromClient:
_handleUpdateActiveSystemEndpoint:
_handleUpdateActiveSystemEndpointMessage:fromClient:
_handleUpdateActiveSystemEndpointUIDMessage:fromClient:
_handleUpdateClientMessage:
_handleUpdateClientPropertiesMessage:fromClient:
_handleUpdateContentItemsMessage:
_handleUpdatePlayerMessage:
_handleUpdatePlayerPropertiesMessage:fromClient:
_handleVoiceDataReceivedMessage:fromClient:
_handleVolumeAvailabilityDidChangeNotification:
_handleVolumeCapabilitiesDidChangeNotification:
_handleVolumeControlCapabilitiesDidChangeMessage:
_handleVolumeDidChangeMessage:
_handleWakeMediaAppMessage:fromClient:
_handleWakePlayerServiceMessage:fromClient:
_handleWillStartPlayingInterruptMessage:fromClient:
_handleXPCMessage:
_handlers
_hardwareRemoteBehavior
_hasAttemptedToConnect
_hasAttemptedToConnectDate
_hasConnectionAttemptCompleted
_hasConnectionAttemptCompletedDate
_hasForwarderForOrigin:
_hasLockScreenAssertion
_hasNowPlayingDataTransaction
_hasPersonalDeviceForContext:
_hasPresentedForCurrentPersonalDevices
_hasQuickControlsAssertion
_hasRequestedLegacyNowPlayingInfo
_hasRequestedSupportedCommands
_hasScreenMirroringAssertion
_hasScreenMirroringQuickControlsAssertion
_hasTriggered
_hidSystemClient
_hiliteMode
_homeServer
_hostedDiscoverySessions
_hostedExternalDeviceGraveyard
_hostedExternalDeviceMap
_hostedExternalDevices
_hostedRouteDiscoveryMode
_hostedRoutingController
_hostedRoutingService
_identifier
_idsConnection
_idsDiscoverySession
_idsPriorityFromPriority:
_idsService
_immediateDevices
_inactiveOutputContexts
_indexPathData
_inferredNowPlayingClient
_inferredPlayerPlaybackState
_init
_initVolumeDataIfNeccessary
_initialize
_initializeBonjourServiceWithDeviceInfo:
_initializeDatabaseSchema
_initializeExternalDevice:
_initializeIDSRemoteControlServiceWithRoutingDataSource:
_initializeSystemEndpointInfo
_inputRoute
_inputType
_internalClients
_internalMediaRemoteNotificationIsLegal:
_intializeClient:forRemoteControlChannel:authCallback:completion:
_invalidate
_invalidated
_invalidationHandler
_ioDevice
_isActive
_isAdvertisingProximity
_isCallingClientCallback
_isClientSyncActive
_isCommandCacheCreating:
_isCommandCacheable:
_isConnectionForManagedConfigIDAllowed:
_isDiscoveryChannelConnected
_isMediaAppInstalled:
_isMuted
_isMutedValue
_isPlaying
_keepAlive
_label
_lastClusterConnectionFailureDate
_lastDiscoveryModeDisableDate
_lastDiscoveryModeEnableDate
_lastKnownBluetoothAddress
_lastMessageSentDate
_lastNotPlayingDate
_lastPlayingDate
_lastSentEndpoint
_lastSentEndpointDate
_lastSentEntry
_lastStatusChangeDate
_lastStatusCheckDate
_lastVolumeDecrementEvent
_lastVolumeIncrementEvent
_launchHomePodNowPlaying
_launchTVClusterSettings
_layoutChangeScheduled
_legacyAssertion
_lifetimeController
_listener
_listenerConnection
_loadLocalEndpointConnection
_loadMostRecentlyPicked
_loadTokenRecords
_localDeviceCommitManager
_localDeviceInfoDidChangeNotification:
_localEndpoint
_localEndpointConnection
_localNowPlayingClient
_localOriginClient
_localOutputContextDataSource
_localReceiverPairingIdentity
_localRoutingDataSource
_lock
_lockScreenController
_lockScreenForegrounded
_lockScreenPlayerPath
_lockScreenWidgetActive
_lockScreenWidgetVisible
_logChangesInModifyingOutputDevice:toOutputDevice:reason:
_logEndpointsChanged:oldEndpoints:
_lyricsEvents
_maybeDeviceConnectionStatusChanged
_maybeForwardOriginToLocalOrigin:
_maybeMostRecentlyPlayedDeviceChanged:
_maybePostEndpointDidAddOutputDevice:
_maybePostEndpointDidChangeOutputDevice:
_maybePostEndpointDidRemoveOutputDevice:
_maybePostVolumeControlCapabilitiesDidChange:outputDevice:
_maybePostVolumeDidChange:outputDevice:
_maybeSendPlaybackStateMessageToCompanion
_maybeWakeClient
_mediaServerController
_mediumDevices
_memberOutputDevices
_messageCanLaunchApp:
_messageHandlers
_messageID
_messageKey
_messageProxy
_messageQueue
_messageRequiresMediaServerBlessing:
_migratingDevices
_migrationEvents
_modelName
_mostRecentEvent
_mostRecentEventReason
_mostRecentSelectionReason
_mostRecentStatus
_mostRecentlyPickedDevices
_mostRecentlyUpdatedClient
_mrService
_mutableExternalDeviceClients
_mutableExternalDeviceClientsWithRegisteredCallbacks:
_mutableExternalDeviceClientsWithRegisteredNotification:
_mxSessionIDs
_name
_nameCallback
_nameCallbackQueue
_nearbyDevices
_netServiceTXTRecordDataWithDeviceInfo:
_newIOKitDeviceProperties
_notificationQueue
_notificationToken
_notifications
_notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification:
_notifyAndDisconnectClient:withError:
_notifyAndDisconnectClients:withError:completion:
_notifyAvailableEndpointsDidChange:
_notifyAvailableOutputDevicesDidChange:
_notifyDelegate:
_notifyDelegateDidCloseWithError:
_notifyDelegateDidReceiveData:
_notifyDelegateNowPlayingApplicationDidChange
_notifyDelegateNowPlayingPlaybackStateDidChange
_notifyDelegateRoutesDidChange
_notifyDelegateWithConnection:
_notifyLocalDeviceDidChangeOutputContext
_nowPlayingApplicationIsInterrupted
_nowPlayingApplicationIsPlayingStates
_nowPlayingApplicationPID
_nowPlayingAudioFormatContentInfos
_nowPlayingClient
_nowPlayingClientDidRegisterNotification:
_nowPlayingClientDidUnregisterNotification:
_nowPlayingClients
_nowPlayingDataSource
_nowPlayingPlayerClient
_nowPlayingServer
_npServer
_numberOfActiveCalls
_objects
_observedNowPlayingNotifications
_observedVolumeControlNotificationToken
_observerCalloutQueue
_oddsShimDataSource
_onCalloutQueue_notifyStatusDidChange:
_onQueue_activeOriginClient
_onQueue_activePlayerClient
_onQueue_addNowPlayingClient:
_onQueue_addPlayer:
_onQueue_adjustPlaybackTimerIfNeededForPlayerPath:
_onQueue_allNowPlayingInfoClients
_onQueue_allNowPlayingInfoClientsForOrigin:
_onQueue_anyPlayerIsPlaying
_onQueue_beginTimerWithInterval:
_onQueue_calculateActiveNowPlayingClient
_onQueue_calculateActiveNowPlayingPlayerClients
_onQueue_calculateComputedNowPlayingClient
_onQueue_calculateInferredNowPlayingClient
_onQueue_calculateInferredPlaybackStateForPlayer:
_onQueue_calculateShouldShowLockScreenForReason:
_onQueue_canBeNowPlayingDidChange:
_onQueue_companionOriginClient
_onQueue_destroyPlayerPathsForOrigin:
_onQueue_determineGroupLeaderForOutputDevices:availableOutputDevices:options:
_onQueue_evaluateShouldDisconnectWithReason:
_onQueue_existingPlayerClientForPlayer:
_onQueue_isPlaying
_onQueue_isPlayingDidChange:
_onQueue_lastPlayingDate
_onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:
_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:
_onQueue_maybeSavePlaybackStateForNotification:
_onQueue_maybeSetupPlaybackTimeoutTimerForNotification:
_onQueue_notifyCoalescedPlayerPath:
_onQueue_originClientForDeviceUID:
_onQueue_originClientForGroupLeaderOfDeviceUID:
_onQueue_pictureInPictureEnabledDidChanged:
_onQueue_playbackQueueCapabilitiesDidChange:
_onQueue_playbackQueueContentItemsArtworkDidChange:
_onQueue_playbackQueueContentItemsDidChange:
_onQueue_playbackQueueDidChange:nowPlayingItemChanged:
_onQueue_playbackState
_onQueue_playbackStateDidChanged:
_onQueue_popState
_onQueue_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:
_onQueue_pushState
_onQueue_queryPlayerPath:
_onQueue_recalculateStateForReason:
_onQueue_reevaluateRemoteControlState
_onQueue_reevaluateShouldShowLockScreenForReason:
_onQueue_reevaluateStateWithReason:
_onQueue_reloadEndpoints
_onQueue_reloadInferredStateFromDataSource:reason:
_onQueue_reloadOutputDevices
_onQueue_reloadWithOutputDevices:
_onQueue_removeNowPlayingClient:
_onQueue_removePlayerClientForPlayer:
_onQueue_restoreState
_onQueue_restoredActiveOrigin
_onQueue_savePersistentActiveOrigin:
_onQueue_sendPrepareForSetQueueTo:reason:type:
_onQueue_setActiveOrigin:saveState:
_onQueue_setReceiveNowPlayingUpdates:
_onQueue_setReceiveVolumeControlUpdates:
_onQueue_simplifyToplogyOfPlayerPathIfNeeded:
_onQueue_stateForPlayerPath:
_onQueue_supportedCommandsDidChange:
_onQueue_updateActivityStatus:
_onQueue_updatePlaybackQueue:fromRequest:
_onSerialQueue_addConnectedEndpoint:
_onSerialQueue_calculateActiveEndpoint:event:reason:
_onSerialQueue_calculateProactiveEndpoint:
_onSerialQueue_calculateUserSelectedEndpointForEvent:reason:
_onSerialQueue_connectToEndpoint:reason:queue:completion:
_onSerialQueue_discoverGroup:connect:reason:completion:
_onSerialQueue_discoverOutputDevice:connect:reason:completion:
_onSerialQueue_isEndpointsDesignatedGroupLeader:
_onSerialQueue_maybeSetupPlaybackTimerForEvent:
_onSerialQueue_maybeSetupUserSelectedTimerForEvent:
_onSerialQueue_prepareToConnectWithRequestName:options:userInfo:connectionAttemptDetails:connectionHandler:
_onSerialQueue_prepareToDisconnect:userInfo:completion:
_onSerialQueue_reconnectToOutputDevice:completion:
_onSerialQueue_reevaluateActiveEndpoint:event:changeType:eventReason:clientBundleIdentifier:
_onSerialQueue_reevaluateActiveEndpoint:event:eventReason:clientBundleIdentifier:
_onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint:
_onSerialQueue_registerOriginCallbacks
_onSerialQueue_removeConnectedEndpoint:
_onSerialQueue_restoreElectedPlayer
_onSerialQueue_updateSystemEndpoint:type:event:eventReason:
_onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent:
_onSyncSelf_reevaluateElectedPlayerForEvent:withReason:
_onWorkerQueue_connectDiscoveryChannelWithReason:
_onWorkerQueue_connectRemoteControlChannelForDestination:session:options:completion:
_onWorkerQueue_connectRemoteControlChannelForSource:destination:destinationGroupUID:session:name:
_onWorkerQueue_connectWithOptions:isRetry:userInfo:completion:
_onWorkerQueue_createClientConnectionWithTransport:
_onWorkerQueue_disconnect:
_onWorkerQueue_disconnectAllRemoteControlChannels
_onWorkerQueue_disconnectAllRemoteControlChannelsWithError:
_onWorkerQueue_disconnectDiscoveryChannel
_onWorkerQueue_disconnectRemoteControlChannelForSource:destination:session:
_onWorkerQueue_disconnectRemoteControlChannelsForDestination:error:
_onWorkerQueue_disconnectRemoteControlChannelsWithError:predicate:
_onWorkerQueue_initializeConnectionWithOptions:userInfo:
_onWorkerQueue_initializeDiscoveryChannel
_onWorkerQueue_loadDeviceInfoWithUserInfo:
_onWorkerQueue_reRegisterCustomOriginWithUserInfo:
_onWorkerQueue_registerCustomOriginWithUserInfo:
_onWorkerQueue_reload
_onWorkerQueue_scheduleReload
_onWorkerQueue_sendEndpoint:toClient:options:
_onWorkerQueue_syncClientStateWithUserInfo:
_openDatabase
_options
_optionsData
_optionsDictionary
_origin:client:matchesSubscribedPlayerPath:
_origin:client:player:matchesSubscribedPlayerPath:
_origin:matchesSubscribedPlayerPath:
_originClient
_originClients
_originForwarder
_originForwarders
_originalConnectionStartDate
_originatingAppDisplayID
_otherDeviceInfoDidChange:
_outputContext
_outputContextCallbackQueue
_outputContextController
_outputContextDidChange
_outputDevice
_outputDeviceCallbackTokens
_outputDeviceDiscoveryMode
_outputDeviceModifications
_outputDeviceUID
_outputDeviceVolume
_outputDevicesRemovedCallback
_outputDevicesRemovedCallbackQueue
_outputDevicesUpdatedCallback
_outputDevicesUpdatedCallbackQueue
_outputRoute
_overrideTimer
_owningClient
_packedDeviceIDToDeviceIDMapping
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_pairingCallback
_pairingCallbackQueue
_parsedOptionsDict
_passwordDialogForRouteWithName:usingInputType:
_path
_pendingBarrierCompletion
_pendingClientState
_pendingCommitRequests
_pendingConnectCompletionHandlers
_pendingConnectingEndpointCompletions
_pendingDisconnectDate
_pendingEndpoints
_pendingGroupReconSessionCompletions
_pendingGroupReconSessions
_pendingOutputDevices
_pendingPlaybackSessionMigrateEvents
_pendingReconSessions
_pendingSendPlaybackSessionDisplayIDs
_perPlayerCanBeNowPlaying
_performCommandProcessingAfterSend:
_persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand:forClient:error:
_persistenceDictionary
_personalDeviceController
_personalDeviceWasRecentlyAttached
_pickableRoutesDidChangeNotification:
_pickedRoute
_pictureInPictureEnabled
_pid
_pinPairingDialog
_pinPairingToken
_platformHasNativeMuteSupport
_playbackQueue
_playbackQueueCapabilities
_playbackQueueInternal
_playbackQueueRequests
_playbackQueueServer
_playbackState
_playbackStateHistory
_playbackStateTimestamp
_playbackTimer
_playerClient
_playerClients
_playerPath
_playerPath:matchesSubscribedPlayerPath:
_playerPathInvalidationToken
_playerPlaybackState
_playerProperties
_playerResult
_playing
_populateApplicationSpecificDataForPrepareForSetQueueCommand:forClient:
_port
_portStatusDidChangeNotification:
_postAppActivityNotificationNamed:withActivity:
_postExternalScreenDidChange
_postIsMutedDidChange:
_postNotification:
_postRouteStatusDidChangeNotificationForRoute:newStatus:
_postVolumeControlCapabilitiesDidChange:
_postVolumeDidChange:
_predictGroupLeaderForOutputDeviceIDs:completion:
_preferredIdentifierForMACAddress:identifier:name:
_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:
_presentPasswordDialogForRoute:withOptions:
_previousElectedPlayerPath
_previousPlayerPath
_previousPlayerPathInvalidationToken
_prewarmMediaApps
_proactivePrepareForSetQueueSender
_processCanMigrateToLocalEndpointEvent:timestamp:error:
_processDiscoveryObserverChanges
_processID
_processMessage:
_processName
_promptingDevices
_protocol
_proximityController
_pruneCache
_pushStateActivePlayerClient
_pushStateClient
_pushStateHasNowPlayingData
_pushStateIsPlaying
_pushStatePictureInPictureEnabled
_pushStatePlaybackState
_pushStatePlayer
_queue
_queuedBeginLoadingBlocks
_queuedRelayableMessages
_readConnectionRecordsFromDisk
_recentlyPlayingInterval
_reconnaissanceSessions
_reconnectionAttemptCount
_recordingEndpointClients
_redirectionCache
_reevaluateAirplayActive
_reevaluateCanBeNowPlaying
_reevaluateDeviceInfo
_registerAVSystemControllerNotifications
_registerCallbacks
_registerCompanionLinkHandlers
_registerNotifications
_registeredCallbacks
_registeredDevices
_registeredForNowPlayingCount
_registeredForVolumeAvailabilityCount
_registeredVirtualAudioDevices
_registeredVirtualVoiceInputDevices
_registrationDate
_relayMessage:toClientWithBundleIDAndReply:
_relayXPCMessage:andReply:resultCallback:
_relayingMessages
_reloadCachedNowPlayingClients
_reloadCachedNowPlayingItem
_reloadHostedExternalDeviceCallbacks
_reloadHostedExternalDeviceNotifications
_reloadHostedExternalDeviceSubscribedPlayerPaths
_reloadOutputDevices
_reloadScheduled
_reloadVolumeDataWithReason:
_remoteAlertHandle
_remoteAlertWorkerQueue
_remoteControlChannels
_remoteControlConnections
_remoteControlContextForCommand:
_remoteControlContexts
_remoteControlDialog
_remoteControlServer
_remoteControlService
_remoteUIServerEndpoint
_remoteUIService
_removeAuthorizationCallbackForOutputDevice:
_removeClient:
_removeExternalDeviceWithEndpointIdentifier:forReason:
_removeExternalDeviceWithOutputDeviceUID:forReason:
_removeNowPlayingClient:forOrigin:
_removeNowPlayingNotifications
_removeOrigin:
_removedOutputDevices
_requester
_reservedOutputContexts
_resetPersistedConnections
_resolveChangeTypeWithOriginClient:forEvent:
_resolveCommandBeforeSend:toClient:error:
_resolveReason:uid:name:requestID:
_resolveRequest:withCapabilities:
_resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand:
_responseCallback
_responseHandlers
_restoreNowPlayingClientState
_resumeConnection
_resumeConnectionWithState:
_route
_routeDescription
_routeDiscoveryCount
_routeDiscoveryMode
_routeUID
_routeUIDsToIgnorePortStatusFailures
_routedAppDisplayID
_routingContextID
_routingController
_routingDataSource
_routingDataSourceExternalScreenDidChangeNotification:
_routingDataSourcePickableRoutesDidChange:
_routingDataSourcePickableRoutesDidChangeNotification:
_routingDataSourceRouteStatusDidChangeNotification:
_routingServer
_runAssertionName
_runLoop
_saveMostRecentlyPicked
_savedPasswordForOutputDevice:
_scheduleAvailableOutputDevicesReload
_scheduleEndProcessAssertionForClient:
_scheduledAvailableOutputDevicesReload
_searchInProgress
_selectionReason
_sendClientMessage:completion:
_sendCommandPreview:options:playerPath:
_sendContentItemTransaction:request:playerPath:
_sendEndpointScheduled
_sendExternalCommand:withCompletionHandler:
_sendInitiatePlaybackMessage:
_sendLocalCommand:withCompletionHandler:
_sendMediaRemoteCommand:withOrigin:
_sendMessage:device:type:destination:session:options:priority:replyID:response:
_sendMessageForPlayerPath:timeout:reason:factory:completion:
_sendMessageFromEndpoint:outputDevice:withSource:handler:
_sendMessageFromEndpoint:withSource:handler:
_sendQueuedBeginLoadingMessagesForAvailableApp:
_sendQueuedCommandsForDestinationClient:
_sendRemoteControlCommand:toDestinationClient:withCompletion:
_sendRemoteControlCommand:toDestinationClient:withLegacyCompletion:
_sendStateUpdateMessageFromPlayerPath:source:handler:
_senderAppDisplayID
_sendingPlaybackStateToCompanion
_serialQueue
_serverIsRunning
_service
_serviceConnection
_serviceHandlerToken
_serviceToken
_serviceType
_session
_sessionPeer
_sessionUID
_setApplicationPickedRoutes:updateRoutes:forClient:
_setCompletionHandler:
_setGameControllerInputMode:
_setPickedRoute:withPassword:options:
_setQueue:
_setReceiveUpdates:forSource:
_setupNotifications
_sharedDisplayMonitor
_shouldCommitLocalDeviceWithReason:deviceInfo:
_shouldConsiderSuggestions
_shouldCreateClusterOutputDevices
_shouldFinishPresentationForCurrentPersonalDevices
_shouldHandleNotification:
_shouldIgnoreCommand:completion:
_shouldIgnorePortStatusFailureForRouteWithUID:previouslyCachedRouteUID:
_shouldNotifyChange:
_shouldRun
_shouldSendCommandsDuringPhoneCall
_shouldSendStateUpdateMessageFromSource:toClient:
_shouldUseNotification:
_shouldUseSystemAuthenticationPrompt
_silentDiscoverySession
_siriInstanceContext
_siriObserver
_sleepObserver
_sourceOrigin
_sourceUID
_speakerRoute
_started
_stateFromDataSource:
_stateMonitor
_stateObserver
_storePassword:forRoute:
_style
_subscribedPlayerPaths
_subscribedWakingPlayerPaths
_subscriptionController
_suggestionCount
_suggestionPreferences
_supportedCommands
_supportedPlaybackSessionTypes
_supportedRemoteControlCommandsData
_supportsBackgroundAudio
_syncStateToClient:
_synchronized_setSessionUID:
_systemActiveEndpoints
_systemDiscoveryMode
_systemEndpointController
_systemEndpointEntries
_systemMediaClient
_systemMusicContext
_systemMuteDidChange:
_systemVolumeDidChange:
_takeProcessAssertionForClient:withReason:
_taskAssertion
_tasks
_tearDownNotifications
_televisionEndpoints
_televisionNetworkService
_terminationHandler
_timeoutInterval
_timeoutKey
_timeoutTimer
_timeoutTimerFired:
_timer
_titleKey
_token
_tokenRecords
_tombstoned
_topologySimplifier
_totalMessageCount
_totalMessageHandlers
_totalOutgoingMessageCount
_transaction
_transactionEnded
_transactionServer
_transactionWaitDuration
_transactions
_transport
_transportDeviceInfoDidChangeNotification:
_tvEndpoints
_txtDataChangedWithDeviceInfo:
_txtDataChangedWithUserInfo:
_type
_uiController
_uiServer
_unclusteredLocalOutputDevice
_unclusteredOutputDevices
_uniqueIdentifier
_unpair:
_unregisterAVSystemControllerNotifications
_unregisterNotifications
_unresolvedPlayerPath
_updateCapabilitiesValueCache
_updateIsMutedValueCache
_updateSuggestionCountIfNeeded
_updateTransaction
_updateVolumeValueCache
_updatedEndpoints
_updatedOutputDevices
_useOutputDeviceCache
_usedMemory
_usedTransactionMemory
_userDefaults
_userSelectedTimer
_usingSystemPairing
_validateAuditTokens:pids:auditTokens:
_validateDatabase
_verifyClientVersionCompatibility:withError:
_virtualAudioInputServer
_virtualOutputDeviceDictionary
_virtualTouchDevices
_volumeCallbackQueue
_volumeCapabilities
_volumeControlCapabilities
_volumeControlCapabilitiesCallback
_volumeControlCapabilitiesCallbackQueue
_volumeController
_volumeDataIntialized
_volumeFromAVController
_volumeValue
_wakeDevice:dismissScreenSaver:reason:
_wantsCoalescedStateChanged
_wantsEndpointChangeNotifications
_wantsLibraryCommands
_wantsNowPlayingArtworkNotifications
_wantsNowPlayingNotifications
_wantsSystemEndpointNotifications
_wantsVolumeNotifications
_weakObservers
_willStartingPlaybackToOutputDevicesInterrupt:
_workerOperationQueue
_workerQueue
_writeConnectionRecordsToDisk:
_writeDeviceInfo:toPath:
_writeSystemEndpointInfo:
_xpcClient
_xpcConnection
_xpcListener
absoluteString
acquireContentProviderAssertionForType:slot:identifier:errorHandler:
acquireLockScreenControlsAssertion
acquireLockScreenControlsAssertionWithReply:
acquireQuickControlsAssertion
acquireQuickControlsAssertionWithReply:
acquireScreenMirroringQuickControlsAssertion
acquireScreenMirroringQuickControlsAssertionWithReply:
activate
activateWithCompletion:
activateWithContext:
activeClientBundleIdentifier
activeClients
activeContent
activeDialog
activeNowPlayingClient
activeOrigin
activeOriginClient
activeOutputContexts
activeOutputDeviceUID:
activePasswordDialog
activePlayerClient
activePlayerClients
activePlayerIsPlaying
activePlayerPath
activePlayerPlaybackState
activeStreamCount
activeSystemEndpointOutputDeviceUID
activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval
activeSystemEndpointUID
activeTelevisionRouteID
activeTransactions
activity
activityController
activityServer
addAuthorizationCallbackForOutputDevice:callback:
addAuthorizationCallbackForOutputDevice:client:
addAuthorizationCallbackForRouteID:requestCallback:
addChannel:forDestination:session:
addClient:
addClientObserver:
addDelegate:queue:
addEndpointsChangedCallback:
addEntriesFromDictionary:
addGameController:
addHandlerForRouteUID:completion:
addHandlerReturnStatus:
addHostedExternalDevice:endpoint:
addMessage:
addMessageHandler:
addMessageHandlerForDevice:handler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperationWithBlock:
addOutputDevice:
addOutputDevices:initiator:withCallbackQueue:block:
addOutputDevices:initiator:withReplyQueue:completion:
addOutputDevicesChangedCallback:
addPendingPlaybackSessionMigrateEvent:playerPath:
addRegisteredVirtualVoiceInputDevice:
addRequest:
addRoutedCommand:
addSharedAudioOutputContext
addTextField:
addVirtualOutputDevice:forClient:
addVirtualTouchDevice:
addedOutputDevices
addingOutputDeviceUIDs
adjustMemory:
adjustOutputDeviceVolume:outputDevice:queue:completion:
adjustVolume:error:
adjustVolumeWithStepAmount:error:
adjustment
advertisingReasonDescription
airPlayGroupID
airPlayRemoteControlService:didAcceptConnection:
airPlayService
airplayActive
airplayActiveDidChangeNotification:
airplaySecuritySettings
alertHeader
alertMessage
allClients
allClusterMembers
allClusterMembersOutputDevices
allClusteredDevices
allLocalNowPlayingInfoClients
allNowPlayingInfoClients
allObjects
allSharedAudioOutputContexts
allStreams
allStreamsExcludingLocal
allValues
allocWithZone:
allowAllClientUIConnections
allowList
allowedAuditTokens
allowedTransactionMemory
alwaysIgnoreDuringCall
alwaysIgnoreDuringSharePlay
anonymousListener
anyClient
anyDeviceInfoDidChangeNotification:
anyObject
anyOrigin
anyOutputContextDidAddOutputDeviceNotification:
anyPlayer
anyPlayerIsPlaying
anyPlayerPath
apiCoordinator
appOptions
appState
appendFormat:
appendString:
applicationInfoForApplication:
applicationInfoForApplication:completion:
applicationIsInstalled:
applicationPickedRoutes
applicationProxyForIdentifier:
applicationsSupportingAPIs:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
artworkByResizingWithWidth:height:
artworkCache
artworkCacheSize
artworkHeight
artworkWidth
assertion
attributeForKey:
attributeWithDomain:name:
audioSessionID
audioSessionType
auditToken
authorizationRequestCallbackForRouteID:
authorizationTokenType
autoConnectedEndpoints
autoConnectingEndpoints
autorelease
auxiliaryOutputContext
avDiscoverySession
avOutputDevice
availableDistantAudioOutputDevices
availableDistantOutputDevices
availableEndpoints
availableEndpointsDidChange:
availableExternalDevices
availableOrigins
availableOutputDevices
availableOutputDevicesDidChange:
avrcpCommand
baseGroupID
baseParentGroupID
batchedNowPlayingState
beginSearchWithTimeout:completion:
beginSearchWithTimeout:mapCompletion:
bestStreamToInterrupt
bluetoothAddress
bluetoothID
bonjourRemoteControlService:didAcceptConnection:
boolForKey:
boolValue
broadcastCommandWaitDuration
broadcastRemoteControlCommand:
broadcastRemoteControlCommand:completion:
buffer
buildVersion
bundle
bundleID
bundleIdentifier
bundleInfoValueForKey:PID:
bundleVersion
bundleWithURL:
buttonEvent
buttonIdentifier
bytes
cachedNowPlayingClients
cachedNowPlayingContentItem
cachingPolicy
callControllerWillHandleCommandForBargeCalls:
callObserver:callChanged:
callback
calloutQueue
calls
canAccessAppleMusic
canAccessRemoteAssets
canAccessiCloudMusicLibrary
canActivateStreamWithPlayerPath:
canBeClusterMember
canBeDefaultRoute
canBeDefaultSystemRoute
canBeNowPlayingClients
canBeNowPlayingPlayer
canBeNowPlayingPlayerTimestamp
canBeNowPlayingTimestamp
canBeSystemDefaultRoute
canMigrateEvaluationTimestamp
canMigrateToEndpoint:queue:completion:
canMigrateToLocalEndpointError
canRelayCommunicationChannel
canSetVolume
cancel
cancelSearch
capabilities
center
changeDescriptionTo:keyBlock:isUpdatedBlock:descriptionBlock:
changeOutputDevice:
changeType
changedOutputDevices
channelForDestination:session:
characterCount
checkXPCConnectionStatusDefaultInterval
checkXPCConnectionStatusDefaultResponseTimeout
class
clearArtwork
clearArtworkForContentItems:
clearArtworkForItems:
clearContextsForClient:
clearDefaultSupportedCommandsData
clearEndpointForClient:
clearExpiredTokenRecords
clearNowPlayingClientForXPCClient:
clearRecordingEndpointsForClient:
clearRegisteredDevicesForClient:
clearRoutedCommands
clearUserSelectedOutputDeviceUID:event:reason:clientBundleIdentifier:
client
clientBundleIdentifier
clientConnected:
clientConnection
clientConnection:didReceiveMessage:
clientDidDisconnect:error:
clientDisconnected:
clientForBundleIdentifier:
clientForConnection:
clientForPID:
clientForPlayerPath:
clientIdentifier
clientWithRegisteredCustomOrigin:
clientsForApplicationPickedRoute:
clientsWithApplicationPickedRoutes
close
closeAll
closeForClient:userCancelled:
clusterComposition
clusterCompositionMembers
clusterController:clusterStatusDidChange:
clusterController:clusterTypeDidChange:
clusterID
clusterLeaderUID
clusterStatus
clusterType
clusterUID
clusteredDevices
coalescingStates
code
collectDiagnostic:
commandClientsRestriction
commandDictionary
commandID
commandInfosFromData:
commandResult
commandResultWithSendError:
commandResultWithSendError:description:
commandType
commitOutputDeviceToContextIfNeededWithReason:completion:
companionLinkDevices
companionOriginClient
companionService
compare:
compare:options:
completion
completionBlockDictionary
componentsJoinedByString:
computeHostsByGroupIDForOutputDevices:unclusteredDevices:
computeNowPlayingApplication
computedNowPlayingClient
configuration
configurationData
configurationForDefaultMainDisplayMonitor
configurationWithEndpointFeatures:
configureConnection:
configuredClusterSize
conformsToProtocol:
connectToAllEndpointsWhenAnyEndpointBeginsPlayback
connectToEndpointWhenBeginsPlayback
connectToExternalDeviceWithOptions:userInfo:completion:
connectToExternalDeviceWithUserInfo:completion:
connectToGroup:reason:queue:completion:
connectToOutputDevice:reason:queue:completion:
connectToUserSelectedEndpoint
connectWithOptions:userInfo:completion:
connectedClientAuditTokens
connectedExternalDevices
connection
connectionAttemptDate
connectionDidInvalidate:
connectionDidResume:
connectionHandler
connectionMonitor
connectionRecoveryBehavior
connectionStateCallback
connectionStateCallbackQueue
connectionStateError
connectionType
connectionWithEndpoint:
connection_t
connections
containsActiveStream
containsLocalDevice
containsOutputDeviceWithUID:
containsUID:
contentController
contentItem
contentItemForIdentifier:
contentItemWithOffset:
contentItems
contentItemsArtwork
contextForActivityIdentifier:
contextForActivityIdentifier:reply:
contextID
contextSensitive
controlCenterForegrounded
controlCenterVisible
controller:clientPropertiesDidChangeFrom:to:
controller:contentItemsDidUpdate:
controller:contentItemsDidUpdateWithContentItemChanges:
controller:deviceLastPlayingDateDidChange:
controller:didFailWithError:
controller:didLoadArtworkForContentItems:
controller:didLoadResponse:
controller:didUpdateResponse:
controller:playbackQueueDidChangeFrom:to:
controller:playbackStateDidChangeFrom:to:
controller:playerLastPlayingDateDidChange:
controller:supportedCommandsDidChangeFrom:to:
controllerID
controllerWillReloadForInvalidation:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createConnectionWithUserInfo:
createCustomOriginClientForOrigin:
createDelocalizedPlayerPath:
createDiagnosticInfo
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDiscoverySession
createEndpointWithOutputDeviceUIDs:options:queue:completion:
createHostedEndpointForOutputDeviceUIDs:completion:
createHostedEndpointWithOutputDeviceUIDs:completion:
createHostedEndpointWithOutputDeviceUIDs:queue:completion:
createLocalizePlayerPath:
createNowPlayingClient
createOutputContextWithUniqueIdentifier:
createPlaybackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:
creatorProcessID
credentials
cryptoEnabled
cryptoSession
currentActivityInfo
currentAppActivity
currentClientUpdatesConfigMessage
currentConnection
currentMessageCount
currentPersonalDeviceUIDs
currentPlaybackSessionIdentifier
currentPlaybackSessionTypes
currentProtocolVersion
currentRouteHasVolumeControl
currentRouteSupportsVolumeControl
currentRunLoop
currentTaskAssertion
currentVolume
customDataCallback
customDataCallbackQueue
customOrigin
daemonClient
data
dataForKey:
dataFromDeviceInfos:
dataFromTXTRecordDictionary:
dataSource
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateCreated
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugName
declaringAirplayActive
decodeEntries
decodeObjectOfClass:forKey:
defaultCenter
defaultContext
defaultManager
defaultPlaybackQueueRequest
defaultPlaybackQueueRequestWithRange:
defaultPlayer
defaultSize
defaultSupportedCommands
defaultSupportedCommandsData
defaultSupportedCommandsDataForClient:
defaultSupportedCommandsForClient:
defaultWorkspace
delayCreateAssertion
delegate
delegateQueue
deleteIdentityWithError:
description
descriptor
designatedGroupLeader
destination
destinationAppDisplayID
destinationAppProcessID
destinationClient
destinationEndpoint
destinationGroupUID
destinationLocal
destinationOrigin
destinationOutputDeviceUID
determineGroupLeaderForOutputDevices:options:
device
deviceClass
deviceDescriptor
deviceForFromID:
deviceID
deviceIdentifier
deviceInfo
deviceInfoData
deviceInfoDataSource
deviceInfoDataSource:deviceInfoDidChange:
deviceInfoDidChangeNotification:
deviceInfoForOrigin:
deviceInfoForOrigin:queue:completion:
deviceIsActiveTelevision:
deviceMessageHandlers
deviceName
devicePresenceDetected
deviceProperties
deviceState
deviceSubtype
deviceSupportsActivities
deviceType
deviceUID
devicesDelayed
diagnosticInfo
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didCancelRoutePicking:
didCloseCommunicationChannel:
didReceiveData:fromCommunicationChannel:
didSetupReverseCommunicationChannel:
disarm
disconnect:
disconnectInterval
disconnectOrigin:
disconnectUndiscoverableEndpoints:
disconnectWithError:
discoverGroup:reason:queue:completion:
discoverOutputDevice:reason:queue:completion:
discoveryChannel
discoveryChannels
discoveryDescription
discoveryMode
discoveryModeForConfiguration:
discoveryOutputDevicesChanged:forConfiguration:
discoverySession
discoverySessionConfigurations
discoverySessionConfigurationsResults
discoverySessionWithConfiguration:
discoverySessionWithEndpointFeatures:
discoverySessions
discoveryTransaction
dispatchHIDEvent:
dispatchHomeButton
dispatchKeypressEvent:
dispatchUnicodeEventWithText:
displayBacklightLevel
displayMonitor
displayName
displayOn
distantFuture
distantPast
domain
effectiveBoolValueForSetting:
elapsedTimeTimestamp
electedPlayer
electedPlayerController
electedPlayerController:electedPlayerDidChange:change:event:reason:
electedPlayerPath
electedPlayerReason
elements
enableThrottling
encodeEntries
encodeObject:forKey:
encodeWithCoder:
encryptedMessageWithState:text:attributes:usingCryptoSession:
encryptionType
endEvent:
endMirroringActivity
endNowPlayingActivity
endpoint
endpointDidAddOutputDeviceNotification:
endpointDidChangeOutputDeviceNotification:
endpointDidRemoveOutputDeviceNotification:
endpointFeatures
endpointForDeviceUID:
endpointForMachName:service:instance:
endpointForOrigin:
endpointRecentlyUserSelectedInterval
endpointVolumeControlCapabilitiesDidChangeNotification:
endpointVolumeDidChangeNotification:
endpoints
endpointsDelayed
enqueuedCommands
entitlements
enumerateFilteredContentItemsBySubscriptionsForContentItems:block:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorForCurrentState
errorWithDomain:code:userInfo:
euid
evaluateState
event
eventReason
eventType
eventuallyCommitOutputDevice:
exceptionWithName:reason:userInfo:
existingNowPlayingClientForClient:
existingNowPlayingClientForDisplayID:
existingNowPlayingClientForPlayerPath:
existingOriginClientRequestsForPlayerPath:
existingPlayerClientForPlayer:
existingPlayerClientForPlayerPath:
existingSubscriptionControllerForPlayerPath:
expanseManagerDidJoinExpanseSession:
expanseManagerDidLeaveExpanseSession:
expanseManagerTelevisionDidJoinSession:
expanseManagerTelevisionDidLeaveSession:
expanseSessionActive
expectedClientAuditTokens
expirationDate
explicitNowPlayingClient
exportContentItemArtworkUpdates:forPlayerPath:
exportContentItems:forPlayerPath:
exportNowPlayingState:forPlayerPath:
exportOutputDevice:endpoint:
exportOutputDevices:endpoint:
exportPlaybackQueue:forPlayerPath:
exportSupportedCommands:
exportedInterface
extendedInfo
extendedInfoWithRoute:
externalDevice
externalDeviceArtificalConnectionDelay
externalDeviceCallbackQueue
externalDeviceClient:gameController:propertiesChanged:
externalDeviceClients
externalDeviceDisconnectSleepDuration
externalDeviceDisconnectWaitDuration
externalDeviceForEndpoint:
externalDeviceForOutputDeviceUID:
externalDeviceListenerEndpoint
externalDeviceServer
externalDeviceSleepAssertionOnClientConnectDuration
externalDeviceTimeoutDuration
externalOutputContext
externalScreenType
fadeType
failedToSetupReverseCommunicationChannel:
fileExistsAtPath:
fileSystemRepresentation
fileURLWithPath:
filterOutputDevices:remoteControllableOnly:
filteredContentItemsBySubscriptionsForContentItems:
first
firstObject
fittedArtworkForContentItem:withRequest:
floatValue
flushLyricsEvents:
flushPendingPlaybackSessionMigrateEvents:
flushVolumeEvents:
forceDeviceInfoDiscovery
forceEnableCECVolume
forwardInvocation:
forwarder
forwarderWithTarget:
forwarderWithXPCTarget:
gain
gameController:propertiesDidChange:
gameControllerConnectionDidInterrupt:
gameControllerWithID:
generateDescriptor
genericNetworkService
getActivePairedDevice
getAvailableEndpointsWithCompletion:
getAvailableOutputDevicesWithCompletion:
getBytes:length:
getClusterStatus:
getConnectionStateWithCompletion:
getCustomOriginDataWithCompletion:
getDevicePresenceDetectedWithCompletion:
getExternalDeviceIsPairedWithCompletion:
getExternalDeviceMetadataWithCompletion:
getExternalOutputContextWithCompletion:
getPersonalOutputDevices:
getValue:
getVolume:forCategory:
groupContainsDiscoverableGroupLeader
groupContainsGroupLeader
groupContextID
groupLeader
groupUID
groupedDevices
handleCanBeNowPlayingPlayerDidChange:
handleContentItemTransaction:packets:group:
handleDidReceiveResetConnectionRequest
handleFirstLaunchAfterBootIfNeeded
handleForIdentifier:error:
handleHIDReport:
handleIncomingMessage:type:destination:session:messageID:replyID:
handlePlaybackQueueRequest:fromClient:
handlePlaybackQueueRequestTransaction:packets:group:
handleSetConnectionStateMessage:forClient:
handleSetDiscoveryModeMessage:forClient:
handleTouchEvent:
handleXPCMessage:fromClient:
handlerReturnStatuses
handlers
hardwareRemoteBehavior
hasArtworkAvailable
hasAttemptedToConnect
hasAuxiliaryProperties
hasConnectionAttemptCompleted
hasElapsedTimeTimestamp
hasEnded
hasLength
hasLocation
hasLockScreenAssertion
hasLockScreenControlsAssertion
hasNowPlayingData
hasPlaceholder
hasPlaybackStateTimestamp
hasPlayedRecently
hasPrefix:
hasPresentedForCurrentPersonalDevices
hasQuickControlsAssertion
hasRequest:
hasRequestedLegacyNowPlayingInfo
hasRequestedSupportedCommands
hasScreenMirroringAssertion
hasScreenMirroringQuickControlsAssertion
hasTriggered
hash
height
homeKitUserIdentifiers
hostName
hostProcess
hostedDiscoverySessionDidInvalidate:
hostedDiscoverySessions
hostedExternalDeviceConnectionStateDidChange:withError:
hostedExternalDeviceDidAddOutputDevice:
hostedExternalDeviceDidChangeOutputDevice:
hostedExternalDeviceDidReceiveCustomData:withName:
hostedExternalDeviceDidRemoveOutputDevice:
hostedExternalDeviceEndpointDidChange:
hostedExternalDeviceForEndpointIdentifier:
hostedExternalDeviceManagerDidUpdateExternalDeviceMapping:
hostedExternalDeviceNameDidChange:
hostedExternalDeviceVolumeCapabilitiesDidChange:forOutputDevice:
hostedExternalDeviceVolumeDidChange:forOutputDevice:
hostedExternalDevices
hostedRouteDiscoveryMode
hostedRoutingController
hostedRoutingController:endpointsDidChange:
hostedRoutingController:outputDevicesDidChange:forFeature:
hostedRoutingService
hostname
iTunesAudioContext
identifier
identifierWithPid:
identifyingMACAddress
idsCompanionRemoteControlService:didAcceptConnection:
idsConnection
idsDiscoverySession
idsRemoteControlService:didAcceptConnection:
idsService
imageData
immediateDevices
inactiveOutputContexts
includeArtwork
indexOfObject:
indexOfObject:inRange:
indexOfObjectPassingTest:
indexPathData
indexesOfObjectsPassingTest:
inferredNowPlayingClient
inferredPlaybackState
info
infoDictionary
ingestData:
init
initFromTransactionName:
initWithAVOutputContext:type:
initWithAVOutputDevice:
initWithAVOutputDevice:sourceInfo:
initWithAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:clusterAwareAddingOutputDeviceUIDs:clusterAwareRemovingOutputDeviceUIDs:clusterAwareSettingOutputDeviceUIDs:
initWithAllSupportedMessages
initWithArray:
initWithArray:copyItems:
initWithBlock:
initWithBundleID:audioSessionID:isPlaying:
initWithBundleID:processID:
initWithBundleIDs:states:
initWithBundleIdentifier:
initWithButtonEvent:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithCapabilities:
initWithCapabilities:endpointUID:outputDeviceUID:
initWithCapacity:
initWithClientObject:
initWithClientObject:invalidationHandler:
initWithCoder:
initWithCommand:options:playerPath:
initWithCommand:routedApp:
initWithCommandID:commandResult:
initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:optionsData:
initWithConfiguration:
initWithConfigurationData:style:endpoint:
initWithConnection:
initWithConnection:bundleID:
initWithConnection:hostedRoutingController:
initWithConnection:label:
initWithConnection:queue:defaultReplyQueue:
initWithConnection:type:destination:session:
initWithConnectionState:
initWithContentItems:
initWithContentItems:forPlayerPath:
initWithContentItems:location:
initWithContextID:originatingAppDisplayID:
initWithControllerID:
initWithData:
initWithData:forKey:
initWithDataSource:delegate:
initWithDeallocHandler:
initWithDefaultSupportedCommands:forPlayerPath:
initWithDelegate:
initWithDescriptor:
initWithDesignatedGroupLeader:outputDevices:preferredSuffix:
initWithDesignatedGroupLeader:outputDevices:preferredSuffix:connectionType:
initWithDestination:
initWithDeviceDescriptor:
initWithDeviceFeatures:
initWithDeviceID:
initWithDeviceID:errorCode:
initWithDeviceInfo:
initWithDeviceUID:
initWithDeviceUID:sessionUID:targetDevice:error:
initWithDevices:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDiscoverySession:
initWithDomain:type:name:
initWithEndpointFeatures:
initWithErrorCode:deviceIdentifier:
initWithEvent:
initWithExternalDevice:
initWithFadeDuration:error:
initWithFirst:second:
initWithGameControllerProperties:controllerID:
initWithGroupUID:
initWithHandlerStatuses:sendError:
initWithHiliteMode:
initWithIdentifier:type:displayName:
initWithIdentifiers:
initWithInputMode:
initWithInputStream:outputStream:
initWithInterval:name:queue:block:
initWithInterval:repeats:queue:block:
initWithIsMuted:
initWithKey:data:
initWithLastPlayingDate:
initWithLastSupportedMessageType:
initWithListenerEndpoint:
initWithListeningMode:outputDeviceUID:
initWithMRError:
initWithMRError:description:
initWithMRError:format:
initWithMRError:userInfo:
initWithMode:configuration:
initWithName:
initWithName:fromMessage:withDelegate:
initWithName:options:queue:delegate:
initWithName:pid:bundleID:subsystem:reason:flags:
initWithName:playerPath:
initWithName:timeout:
initWithNetServiceType:
initWithNotification:userInfo:
initWithNowPlayingState:
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:systemEndpointUpdates:subscribedPlayerPaths:
initWithObjects:
initWithOptions:
initWithOrigin:client:player:
initWithOrigin:destinationOrigin:
initWithOriginClient:
initWithOutputContext:
initWithOutputContext:designatedGroupLeader:
initWithOutputContextCommunicationChannel:outputContext:
initWithOutputDevice:
initWithOutputDevice:groupID:connectionType:
initWithOutputDevice:proxyOutputDevice:
initWithOutputDeviceUID:
initWithOutputDeviceUIDs:
initWithOutputDeviceUIDs:outputDeviceGroupID:features:
initWithOutputDevices:
initWithOutputDevices:configuration:
initWithOwningClient:
initWithPID:audioSessionID:mxSessionIDs:
initWithPairingData:status:
initWithPath:
initWithPlaybackQueue:
initWithPlaybackSession:
initWithPlaybackSession:request:forPlayerPath:
initWithPlaybackState:date:
initWithPlayerPath:
initWithPlayerPath:lastPlayingDate:
initWithPrimaryOutputDevice:members:
initWithProcessIdentifier:bundleIdentifier:
initWithProperties:
initWithQueue:
initWithRange:
initWithRecordingState:
initWithRequest:
initWithRequest:error:playerPath:
initWithRequest:forPlayerPath:
initWithRequest:playerPath:
initWithResponse:
initWithRole:device:
initWithRoute:
initWithRoute:inputType:
initWithRoute:inputType:responseCallback:cancelCallback:
initWithRoute:status:
initWithRouteUID:
initWithRouteUID:center:
initWithRoutingContextUID:multipleBuiltInDevices:
initWithRoutingController:
initWithRoutingDataSource:
initWithRoutingDataSource:hostedRoutingService:systemEndpointController:autoConnectionController:homeServer:avOutputDeviceAuthorizationSession:
initWithService:
initWithServiceName:viewControllerClassName:
initWithSuiteName:
initWithTimeIntervalSinceReferenceDate:
initWithTimeout:reason:queue:handler:
initWithTitle:
initWithTransport:
initWithUTF8String:
initWithUnderlyingCodableMessage:error:
initWithUniqueIdentifier:
initWithUnresolvedPlayerPath:
initWithVersion:data:
initWithVolume:endpointUID:outputDeviceUID:
initWithW:h:
initWithWithSendError:description:
initWithXPCConnection:label:
initialize
initializeBundleIdentifier
initializeDestinationOriginWithSourceOriginData
initializeDisplayName
initializeServer
inputRoute
inputType
insertObject:atIndex:
intValue
integerValue
interfaceWithIdentifier:
interfaceWithProtocol:
interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath:reason:completion:
intersectsSet:
invalidate
invalidateOnDate:
invalidateWithReason:
invalidated
invalidationHandler
invokeWithTarget:
ioDevice
isAVRCPCommand
isActive
isActiveStream
isActivity
isActivityActive
isAdvertisingProximity
isAirPlayReceiverSessionActive
isAllowedAccessToDataFromPlayerPath:
isAuxiliary
isAwareOfCluster:
isCallingClientCallback
isCompanion
isConnected
isContextSensitive
isDestinationLocal
isDirectConnectedToOutputDeviceUID:
isDiscoveryChannelConnected
isEligibleForSpatialization
isEntitledFor:
isEqual:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToOrderedSet:
isEqualToSet:
isEqualToString:
isFirstLaunchAfterBoot
isForegrounded
isGroupLeader
isGroupable
isHomepodDemoApplication
isHosted
isInputRoute
isIntegratedDisplay
isKindOfClass:
isLegacyNowPlayingInfoRequest
isLocalDevice
isLocalOrigin
isLockScreenWidgetActive
isLockScreenWidgetVisible
isMediaRemoteDaemon
isMemberOfActiveSystemEndpoint
isMemberOfClass:
isMultiplayerAware
isMultiplayerHost
isNavigational
isOutputRoute
isPaired
isPairedDeviceSync
isPairingAllowed
isPicked
isPictureInPictureEnabled
isPlaying
isPrimaryLocalDevice
isProxyGroupPlayer
isRemoteControllable
isResolved
isSmartDevice
isSpeakerRoute
isSubsetOfSet:
isSupported:
isSystemMediaApplication
isUsingJSONProtocol
isUsingSystemPairing
isWaking
keepAlive
label
lastBootUUID
lastDiscoveryModeDisableDate
lastDiscoveryModeEnableDate
lastKnownBluetoothAddress
lastMessageSentDate
lastNotPlayingDate
lastObject
lastPathComponent
lastPlayingDateForPlayerPath:
lastPlayingDeviceThresholdInterval
lastReportedClientIdentifiers
lastSentEntry
lastStatusChangeDate
lastStatusCheckDate
lastSupportedMessageType
laterDate:
launchApplicationTimeoutInterval
layoutMonitor:didUpdateDisplayLayout:withContext:
length
lifetimeController
listener
listener:shouldAcceptNewConnection:
listeningMode
localActiveClientBundleIdentifier
localActiveClientPID
localActiveNowPlayingClient
localActivePlayerClient
localActivePlayerIsPlaying
localActivePlayerPath
localActivePlayerPlaybackState
localClient
localClusterTypeDidChangeNotification:
localDeviceUID
localEndpointConnection
localLastPlayingDate
localNowPlayingClient
localOrigin
localOriginClient
localOutputContextDataSource
localPlaybackState
localPlayersForXpcClient:
localReceiverPairingIdentity
localizeDestinationOrigin:completion:
localizeDestinationPlayerPath:completion:
localizedDescription
localizedFailureReason
localizedModelName
localizedName
localizedPlayerIDFromPlayerPath:
location
lock
lockScreenContentControllerStateDidChange:
lockScreenController
lockScreenController:lockScreenWidgetActiveDidChange:
lockScreenController:lockScreenWidgetVisibleDidChange:
lockScreenController:playerPathDidChange:
lockScreenForegrounded
lockScreenPlatterActive
lockScreenPlatterHasContent
lockScreenPlayerPath
lockScreenUIController
lockScreenVisible
lockScreenWidgetActive
lockScreenWidgetVisible
logEvent:withInfo:
logicalOutputDeviceCount
longLongValue
mainBundle
makeEndpointWithOutputDevices:options:
managedConfigurationDeviceIdentifier
match:
matchesUID:
matchesUniqueIdentifier:
maxStreamCapacity
maxTransactionMemorySize
maybeCommitLocalDeviceWithReason:
maybePostDistributedNotifications
mediaRecentlyPlayedInterval
mediaRouteIdentifier
mediaType
mediumDevices
memberOutputDevices
mergeFrom:
messageHandler
messageID
messageProxy
messageQueue
metadata
methodSignatureForSelector:
migratingDevices
minimalReadableDescription
minimumSupportedHangdogApplicationVersion
minusSet:
mode
modelName
modifyByAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:addingClusterAwareDeviceUIDs:removingClusterAwareDeviceUIDs:settingClusterAwareDeviceUIDs:withReplyQueue:completion:
modifyByAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:addingClusterDeviceUIDs:removingClusterDeviceUIDs:settingClusterDeviceUIDs:completion:
modifyWithOutputContext:queue:completion:
monitorWithConfiguration:
mostRecentDeviceUID
mostRecentEventReason
mostRecentPlayers
mostRecentPlayingClient
mostRecentSelectionReason
mrService
mr_allOutputDevices
mr_compactMap:
mr_deviceInfo
mr_filter:
mr_first:
mr_formattedDebugDescription
mr_redactClusterMembers
mr_sharedIDSService
msv_filter:
msv_map:
multipleBuiltInDevices
mutableCopy
mutableCopyWithZone:
mutableExternalDeviceClients
mxSessionIDs
name
nameCallback
nameCallbackQueue
navigational
nearbyDevices
needNowPlayingForegroundState
needsCommandRedirection
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceType
netServiceWillPublish:
netServiceWillResolve:
networkIdentifier
newHandleWithDefinition:configurationContext:
notification
notificationPlayerPathFromPlayer:
notificationQueue
notificationRequiresTaskAssertionForPlayerPath:
notificationToken
notifications
notifyArtworkChangedForContentItems:
notifyDelegateOfSleepWithCompletion:
notifyDelegateOfWake
notifyDevicesInHomeThatPlaybackStarted
notifyDiscoveryOutputDevicesChanged:forConfiguration:
notifyObserver:didChangeStateFrom:to:
notifyObserver:didReceiveNotificationWithToken:
notifyOutputDevicesChanged:
nowPlayingActivityIdentifier
nowPlayingApplicationDisplayID
nowPlayingApplicationIsInterrupted
nowPlayingApplicationIsPlaying
nowPlayingApplicationPID
nowPlayingApplicationTimeout
nowPlayingApplications
nowPlayingAudioFormatContentInfo
nowPlayingAudioFormatContentInfos
nowPlayingClient
nowPlayingClient:activePlayerDidChangeFromPlayerClient:toPlayerClient:
nowPlayingClient:applicationDidForeground:
nowPlayingClient:clientStateDidChange:
nowPlayingClient:playerDidRegister:
nowPlayingClient:playerDidUnregister:
nowPlayingClientForClient:
nowPlayingClientForPlayerPath:
nowPlayingClientRequests
nowPlayingClients
nowPlayingContentItem
nowPlayingDataSource
nowPlayingDataSourceNowPlayingApplicationDidChange:
nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:
nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:
nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange:
nowPlayingObserverCoalesceInterval
nowPlayingOriginClient:activePlayerClientsDidChange:
nowPlayingOriginClient:activePlayerPathDidChange:withPlaybackState:
nowPlayingOriginClient:applicationActivityDidBegin:
nowPlayingOriginClient:applicationActivityDidEnd:
nowPlayingOriginClient:applicationActivityStatusDidChange:
nowPlayingOriginClient:clientDidRegister:
nowPlayingOriginClient:clientDidUnregister:
nowPlayingOriginClient:currentRouteIsMutedDidChange:
nowPlayingOriginClient:currentRouteVolumeControlCapabilitiesDidChange:
nowPlayingOriginClient:currentRouteVolumeDidChange:
nowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:
nowPlayingOriginClientDidChangeAudioFormatContentInfo:
nowPlayingOriginClientPlaybackDidTimeout:
nowPlayingPlayerClient
nowPlayingPlayerClient:clientCanBeNowPlayingDidChange:
nowPlayingPlayerClient:isPlayingDidChange:
nowPlayingPlayerClient:pictureInPictureEnabledDidChange:
nowPlayingPlayerClient:playbackQueueArtworkContentItemsDidChange:
nowPlayingPlayerClient:playbackQueueCapabilitiesDidChange:
nowPlayingPlayerClient:playbackQueueContentItemsDidChange:
nowPlayingPlayerClient:playbackQueueDidChange:nowPlayingItemDidChange:
nowPlayingPlayerClient:playbackStateDidChange:
nowPlayingPlayerClient:playerCanBeNowPlayingDidChange:
nowPlayingPlayerClient:playerStateDidChange:
nowPlayingPlayerClient:supportedCommandsDidChange:
nowPlayingServer
nowPlayingServer:activeOriginDidChangeFromOriginClient:toOriginClient:
nowPlayingSessions
nowPlayingUIWakingPlayerEventAssertionDuration
nowPlayingUpdates
npServer
null
numberOfActivePhoneCalls:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
object
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observeValueForKeyPath:ofObject:change:context:
observersForSelector:
open
openApplication:withOptions:completion:
optionValueForKey:
optionsData
optionsWithDictionary:
origin
originClient
originClientForDeviceUID:
originClientForGroupLeaderOfDeviceUID:
originClientForOrigin:
originClientRequestsForPlayerPath:
originClients
originForwarders
originatedFromAccessory
originatedFromHID
originatingAppDisplayID
outOfMemoryWaitDuration
outputContext
outputContext:didCloseCommunicationChannel:
outputContext:didReceiveData:fromCommunicationChannel:
outputContextCallbackQueue
outputContextDataSourceDidAddOutputDevice:
outputContextDataSourceDidAddOutputDeviceNotification:
outputContextDataSourceDidChangeOutputDevice:
outputContextDataSourceDidRemoveOutputDevice:
outputContextDataSourceDidRemoveOutputDeviceNotification:
outputContextDataSourceOutputDeviceDidChangeNotification:
outputContextDataSourceOutputDeviceDidChangeVolume:
outputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilities:
outputContextDataSourceOutputDevicesDidChangeNotification:
outputContextDataSourceVolumeControlCapabilitiesDidChangeNotification:
outputContextDataSourceVolumeDidChangeNotification:
outputContextDidAddLocalDeviceNotification:
outputContextDidRemoveLocalDeviceNotification:
outputContextForOutputDevice:
outputContextForOutputDeviceUID:
outputContextForOutputDeviceUIDs:strict:
outputContextForOutputDevices:strict:
outputContextManagerForAllOutputContexts
outputContextModificationDidBeginNotification:
outputContextModificationDidFinishNotification:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContextRequestToAddLocalOutputDeviceNotification:
outputContexts
outputDevice
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
outputDeviceDiscoveryMode
outputDeviceForUID:
outputDeviceForUID:error:
outputDeviceIsMuted:queue:completion:
outputDeviceModifications
outputDeviceUIDs
outputDeviceUpdates
outputDeviceVolume
outputDeviceVolume:queue:completion:
outputDeviceVolume:withCompletion:
outputDeviceVolumeCapabilities
outputDeviceVolumeControlCapabilities:queue:completion:
outputDeviceVolumeControlCapabilities:withCompletion:
outputDeviceWithUID:
outputDevices
outputDevicesChanged:forConfiguration:
outputDevicesDidChangeNotification:
outputDevicesForEndpoint:
outputDevicesRemovedCallback
outputDevicesRemovedCallbackQueue
outputDevicesUpdatedCallback
outputDevicesUpdatedCallbackQueue
outputRoute
overrideClient
overrideTimer
owningClient
pairedDevices
pairingAllowedCallback
pairingAllowedCallbackQueue
pairingCallbackQueue
pairingHandler
pairingManager
pairingSession:didCompleteExchangeWithError:
pairingSession:didPrepareExchangeData:
pairingSession:promptForSetupCodeWithDelay:completion:
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
parentApplicationBundleIdentifier
parentGroupContainsDiscoverableGroupLeader
parentGroupContainsDiscoverableLeader
parentGroupID
parentGroupIdentifier
parentUID
path
pendingBarrierCompletion
pendingClientState
pendingConnectCompletionHandlers
pendingDisconnectDate
pendingEndpoints
pendingOutputDevices
perPlayerCanBeNowPlaying
perform:completion:
performHandlerForRouteUID:passcode:
performMigrationToEndpoint:request:queue:completion:
performMigrationToOutputDevices:request:initiator:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithPreferences:completion:
personalDeviceController
personalDeviceControllerStateDidChange:
personalDeviceState
personalDeviceUIDs
personalDeviceWasRecentlyAttached
personalOutputDevices
phoneCallController:didRequestCommand:
phoneCallObserver:callDidChange:
pickCachedRouteWithUID:
pickableRoutesForCategory:
pickableRoutesForCategory:source:
picked
pickedRoute
pickedRouteForCategory:
pickedRouteForCategory:source:
pickedRoutes
pictureInPictureEnabled
pinPairingDialogDidClose:forClient:userCancelled:
pinPairingDialogDidOpen:forClient:
ping:callback:withQueue:
pingWithTimeout:callback:
playbackQueue
playbackQueueCapabilities
playbackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:
playbackQueueRequests
playbackSessionData
playbackState
playbackStateDescription
playbackStateForPlayerPath:
playbackStateTimestamp
playbackTimer
playbackTimers
player
playerClient
playerClientForPlayer:
playerClients
playerPath
playerPlaybackState
playerProperties
populatedOutputContexts
port
postActiveOriginDidChange:withPlaybackState:handler:
postActivePlayerDidChangeForPlayerPath:withPlaybackState:handler:
postActivePlayerPathsDidChangeForOrigin:handler:
postAudioFormatContentInfoDidChangeForOrigin:handler:
postClientDidRegisterCanBeNowPlayingForPlayerPath:handler:
postClientDidRegisterForPlayerPath:handler:
postClientDidUnregisterCanBeNowPlayingForPlayerPath:handler:
postClientDidUnregisterForPlayerPath:hasDefaultSupportedCommands:canBeNowPlaying:handler:
postClientNotificationNamed:
postClientNotificationNamed:predicate:
postClientNotificationNamed:userInfo:
postClientNotificationNamed:userInfo:predicate:
postDeviceInfoDidChange:previousDeviceInfo:forOrigin:handler:
postElectedPlayerDidChange:change:event:reason:handler:
postIsMutedDidChange:isMuted:handler:
postIsPlayingDidChange:lastPlayingTimestamp:forPlayerPath:handler:
postLockScreenActiveDidChange:handler:
postLockScreenControlsDidChangeDistributedNotification
postLockScreenPlayerPathDidChange:handler:
postLockScreenVisibleDidChange:handler:
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
postNowPlayingApplicationDidChangeForPlayerPath:withPlaybackState:handler:
postNowPlayingClientStateDidChange:forPlayerPath:handler:
postNowPlayingPlayerStateDidChange:forPlayerPath:handler:
postOriginDidRegister:handler:
postOriginDidUnRegister:deviceInfo:handler:
postPictureInPictureDidChange:forPlayerPath:handler:
postPlaybackQueueCapabilitiesDidChange:forPlayerPath:handler:
postPlaybackQueueContentItemsArtworkDidChange:forPlayerPath:handler:
postPlaybackQueueContentItemsDidChange:forPlayerPath:handler:
postPlaybackQueueDidChange:nowPlayingItemDidChange:forPlayerPath:handler:
postPlaybackStateDidChange:forPlayerPath:handler:
postPlayerDidRegisterCanBeNowPlayingForPlayerPath:handler:
postPlayerDidRegisterForPlayerPath:handler:
postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:handler:
postPlayerDidUnregisterWithPlaybackState:canBeNowPlaying:forPlayerPath:handler:
postSupportedCommandsDidChange:forPlayerPath:handler:
postSystemEndpointDeviceChange:type:originClient:handler:
postVolumeCapabilitiesDidChange:capabilities:handler:
postVolumeDidChange:volume:handler:
presentWithCompletion:
previousElectedPlayerPath
previousPlayerPath
prewarmApp:origin:deviceInfo:
prewarmSoon
primaryID
priority
processID
processIdentifier
processInfo
processName
processOutputContext:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
promptingDevices
properties
propertyListWithData:options:format:error:
protobuf
protobufData
protocol
protocolForProtocol:
protocolMessageWithProtobufData:error:
proximityController
proxyForObject:protocol:
proxyForObjects:protocol:
proxyWithObject:protocol:
publishWithOptions:
purgeUnusedDiscoverySessions
pushStateActivePlayerClient
pushStateCanBeNowPlayingPlayer
pushStateHasNowPlayingData
pushStateIsPlaying
pushStatePictureInPictureEnabled
pushStatePlaybackState
queryExistingPlayerPathForXPCMessage:forClient:
queryPlayerPath:
queryPlayerPathForXPCMessage:fromClient:
queue
queuedCommandsTimeoutInterval
queuedInitiatePlaybackMessages
raise:format:
range
rangeContainsNowPlayingItem
rapportRemoteControlService:didAcceptConnection:
rapportService
realToken
reason
reasonWithType:string:
recentlyPlayingInterval
recordingEndpointClients
registerCommunicationChannelForOutputContext:
registerCommunicationsChannels
registerDestinationOriginCallbacksToRelayToSourceOrigin
registerDiscoveryTokenForConfiguration:
registerEvent:callback:
registerForChanges
registerForNotifications
registerForOutputContextNotifications:
registerNotifications
registerObserver:
registerOrigin:deviceInfo:
registerOriginForwarder:
registerOutputContext:
registerRequest:callback:
registerSourceOriginNotifications
registeredCallbacks
registeredDeviceWithID:
registeredDevices
registeredKeyboardUpdates
registeredToNowPlayingUpdates
registeredToSystemEndpointUpdates
registeredToVolumeUpdates
registeredVirtualAudioDevices
registeredVirtualVoiceInputDevices
registrationDate
relayArtworkRequest:forContentItems:withMessage:fromNowPlayingClient:andNotifyXPCClient:
relayPlaybackQueueRequest:withMessage:toNowPlayingClient:backToXpcClient:completion:
relayXPCMessage:andReply:
relayXPCMessage:andReply:resultCallback:
releaseLockScreenControlsAssertion
releaseLockScreenControlsAssertionWithReply:
releaseQuickControlsAssertion
releaseQuickControlsAssertionWithReply:
releaseScreenMirroringQuickControlsAssertion
releaseScreenMirroringQuickControlsAssertionWithReply:
reloadDeviceInfoImmediatly
reloadOutputContexts
remainingStreamCapacity
remoteAlertHandle
remoteAlertHandle:didInvalidateWithError:
remoteAlertHandleDidActivate:
remoteControlChannels
remoteControlClients
remoteControlContexts
remoteControlInterfaceID
remoteControlServer
remoteControlService
remoteControlService:didAcceptClientConnection:
remoteDeviceIdleDisconnection
remoteDeviceIdleDisconnectionInterval
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteTargetWithLaunchingAssertionAttributes:
remoteUIServerEndpoint
removeAllClients
removeAllObjects
removeAllOutputDevices
removeAllVirtualTouchDevices
removeAuthorizationCallbackForOutputDevice:
removeAuthorizationCallbackForRouteID:
removeChannelForDestination:
removeClient:
removeClientForPID:
removeClientObserver:
removeFromParentGroup:queue:completion:
removeGameController:
removeHandler:
removeItemAtURL:error:
removeLyricsEvent:
removeMessageHandlerForType:
removeMessageHandlerForType:destination:session:
removeNowPlayingClientForClient:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInRange:
removeObserver:name:object:
removeOrigin:
removeOriginRequests:
removeOutputDevice:
removeOutputDeviceFromParentGroup:queue:completion:
removeOutputDevices:
removeOutputDevices:initiator:withCallbackQueue:block:
removeOutputDevices:initiator:withReplyQueue:completion:
removeOutputDevicesChangedCallback:
removePeer
removePendingPlaybackSessionMigrateEvent:
removePlayerClientForPlayer:
removeRequest:
removeVirtualOutputDevicesForClient:
removedOutputDevices
removingOutputDeviceUIDs
replaceObjectAtIndex:withObject:
replyWithData:priority:
replyWithMessage:
requestByRemovingArtwork
requestConnectedDestinationEndpoint:
requestDestinationEndpoint:
requestForSubscribedContentItemIdentifier:
requestID
requestIdentifier
requester
requiresAuthorization
requiresCustomPairing
requiresPIN
reregisterOrigin:deviceInfo:
reserveSlotForLocal
reservedOutputContexts
resetPickedRouteForSource:
resetPickedSystemRouteForSource:
resolveExistingPlayerPath:
resolveOutputDevices:
resolvePlaceholdersForDeviceInfo:
resolvePlayerPath:fromClient:
resolvePlayerPath:fromClient:useDefaultPlayerIfNoneSpecified:
respondWithAuthorizationToken:
respondWithAuthorizationToken:completionHandler:
respondsToSelector:
response
responseHandlers
restoreClientDeviceInfo:
restoreClientState:handler:
restoreDeviceInfoToClient:handler:
restoreStateFromController:
restrictedTo:by:
resultStatuses
resume
retain
retainCount
reverseObjectEnumerator
revision
route
routeDiscoveryCount
routeDiscoveryMode
routeIsActiveWithUID:
routeUID
routedAppDisplayID
routedCommands
routingContextID
routingContextUID
routingDataSource
routingServer
sampleRate
saveTokenRecord:
scheduleLayoutChangeForReason:
scheduleSendBarrierBlock:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenSize
searchEndpointsForGroupUID:timeout:reason:queue:completion:
searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:
searchEndpointsWithPredicate:timeout:reason:queue:completion:
second
selector
self
send:toConnection:completion:
sendButtonEvent:
sendButtonEventWithUsagePage:usage:down:
sendClientUpdatesConfigMessage
sendClientUpdatesConfigMessageWithCompletion:
sendCommand:options:queue:completion:
sendContentItemTransaction:request:playerPath:
sendCustomData:withName:
sendError
sendEvent:toDevicesOfHomeUser:userInfo:
sendEventToCompanion:userInfo:
sendEventToHome:userInfo:
sendGameControllerEvent:
sendLastPlayingDeviceToHome
sendMessage:
sendMessage:device:type:destination:session:options:priority:response:
sendMessage:queue:reply:
sendMessage:timeout:queue:reply:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:type:destination:session:options:priority:
sendMessageWithType:playerPath:timeout:reason:factory:completion:
sendPlaybackQueueResponse:forRequest:withMessage:fromNowPlayingClient:toXpcClient:
sendPlaybackSessionUpdateToCompanionCoalesceInterval
sendProactivePFSQAfterBoot
sendProactivePFSQOnProactiveASEChange
sendProactivePFSQOnSiriActivation
sendProactivePFSQOnUserSelectedASEChange
sendRemoteControlCommand:
sendRemoteControlCommand:completion:
sendRemoteControlCommand:toClients:completion:
sendRemoteControlCommand:withCompletionBlock:
sendTransportData:options:
senderAppDisplayID
senderDefaultGroupUID
senderID
serialQueue
server
serverDelegate
serverDiscoveryModeForConfiguration:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceConnection
serviceInterface
serviceToken
serviceType
sessionPeer
sessionUID
setActivatingForSiri:
setActivationHandler:
setActiveClients:
setActiveDialog:
setActiveOrigin:
setActiveOriginClient:
setActiveOutputContexts:
setActivePasswordDialog:
setActivePlayerClient:
setActiveSystemEndpointOutputDeviceUID:
setActiveTopologyChangeIdentifiers:
setActiveTransactions:
setActivity:
setActivityServer:
setAddedOutputDevices:
setAdvertisingReasonDescription:
setAirPlayActive:
setAirPlayGroupID:
setAirPlayGroupUID:
setAirPlayReceivers:
setAirPlayService:
setAirplayActive:
setAirplaySecuritySettings:
setAlertMessage:
setAllClusterMembers:
setAllClusteredDevices:
setAllowedAuditTokens:
setAllowedTransactionMemory:
setAlternateButtonTitle:
setAlwaysAllowUpdates:
setAppOptions:
setAppStateMonitor:
setApplicationPickedRoutes:
setArtwork:
setArtworkCache:
setArtworkHeight:
setArtworkURLTemplates:
setArtworkWidth:
setAssertion:
setAttribute:forKey:error:
setAutoConnectedEndpoints:
setAutoConnectingEndpoints:
setAvDiscoverySession:
setAvailableOutputDevices:
setBatchedNowPlayingState:
setBluetoothAddressChangedHandler:
setBuildVersion:
setBundleIdentifier:
setBundleVersion:
setByAddingObjectsFromArray:
setCachedNowPlayingClients:
setCallback:
setCanAccessAppleMusic:
setCanAccessRemoteAssets:
setCanBeNowPlaying:
setCanBeNowPlayingPlayer:
setCanBeNowPlayingPlayerTimestamp:
setCanBeNowPlayingTimestamp:
setCanMigrateEvaluationTimestamp:
setCanMigrateToLocalEndpointError:
setCenter:
setChangeType:
setChangedOutputDevices:
setClient:
setClientBundleIdentifier:
setClientConnection:
setClientIdentifier:
setClientMessageCallback:
setClientMessagingExpectation:
setClientObservers:
setClusterAware:
setClusterID:
setClusterLeaderID:
setClusteredDevices:
setCoalescingStates:
setCommand:
setCommandClientsRestriction:
setCommandDictionary:
setCommunicationChannelDelegate:
setCompanionService:
setCompletion:
setCompletionBlockDictionary:
setComputedNowPlayingClient:
setConfiguration:
setConfigurationData:
setConfiguredClusterSize:
setConnected:
setConnectedClientAuditTokens:
setConnectedExternalDevices:
setConnection:
setConnectionAttemptDate:
setConnectionHandler:
setConnectionMonitor:
setConnectionRecoveryBehavior:
setConnectionState:
setConnectionState:error:
setConnectionStateCallback:
setConnectionStateCallback:withQueue:
setConnectionStateCallbackQueue:
setConnectionStateError:
setConnection_t:
setContentController:
setContentItems:
setContentItemsArtwork:
setControlCenterForegrounded:
setCryptoEnabled:
setCurrentAppActivity:
setCurrentMessageCount:
setCurrentPersonalDeviceUIDs:
setCurrentPlaybackSessionIdentifier:
setCurrentTaskAssertion:
setCustomDataCallback:
setCustomDataCallback:withQueue:
setCustomDataCallbackQueue:
setCustomOrigin:
setDaemonClient:
setDataSource:
setDate:
setDeclaringAirplayActive:
setDefaultButtonTitle:
setDelegate:
setDelegate:queue:
setDelegateQueue:
setDescriptor:
setDesignatedGroupLeader:
setDesignatedGroupLeaderWhenContextEmpty:
setDestinationAppDisplayID:
setDestinationAppProcessID:
setDestinationEndpoint:
setDestinationGroupUID:
setDestinationOutputDeviceUID:
setDevice:
setDeviceID:
setDeviceInfo:
setDeviceInfoData:
setDeviceInfoDataSource:
setDeviceMessageHandlers:
setDeviceName:
setDeviceSpecificUserInfo:
setDeviceSubType:
setDeviceType:
setDeviceUID:
setDevicesDelayed:
setDiagnosticInfo:
setDictionaryRepresentation:
setDisconnectTimer:
setDiscoveryChannels:
setDiscoveryMode:
setDiscoveryMode:enableThrottling:withCompletion:
setDiscoveryMode:forClientIdentifiers:
setDiscoveryMode:forConfiguration:
setDiscoveryMode:forToken:
setDiscoveryOutputDevicesChangedCallback:forToken:
setDiscoverySession:
setDiscoverySessionConfigurationsResults:
setDiscoverySessions:
setDiscoveryToken:forConfiguration:
setDiscoveryTransaction:
setDispatchQueue:
setDisplayMonitor:
setDisplayOn:
setDistantPersonalOutputDevices:
setElectedPlayer:
setElectedPlayerPath:
setElectedPlayerReason:
setEnableThrottling:
setEndpoint:
setEndpoints:
setEndpointsDelayed:
setEnqueuedCommands:
setEntries:
setError:
setEvent:
setEventType:
setExpectedClientAuditTokens:
setExpirationDate:
setExplicitNowPlayingClient:
setExportedInterface:
setExportedObject:
setExternalDevice:
setExternalDeviceListenerEndpoint:
setForceModalAlertAppearance:
setFrontmostClient:
setGenericNetworkService:
setGroupContainsDiscoverableGroupLeader:
setGroupContainsGroupLeader:
setGroupID:
setGroupLogicalDeviceCount:
setGroupName:
setGroupUID:
setGroupedDevices:
setHandler:
setHardwareRemoteBehavior:
setHasAttemptedToConnect:
setHasConnectionAttemptCompleted:
setHasLockScreenAssertion:
setHasLockScreenControlsAssertion:
setHasPresentedForCurrentPersonalDevices:
setHasQuickControlsAssertion:
setHasRequestedLegacyNowPlayingInfo:
setHasRequestedSupportedCommands:
setHasScreenMirroringQuickControlsAssertion:
setHasTriggered:
setHasVolume:
setHasVolumeCapabilities:
setHomepodDemoMode:
setHostDeviceClass:
setHostName:
setHostPort:
setHostedDiscoverySessions:
setHostedExternalDevices:
setHostedRouteDiscoveryMode:
setIdentifier:
setIdentityCreatedHandler:
setIdentityDeletedHandler:
setIdsConnection:
setIdsDiscoverySession:
setIdsService:
setImageData:
setImmediateDevices:
setInactiveOutputContexts:
setIncludeMetadata:
setIncludesPeerToPeer:
setInferredNowPlayingClient:
setInferredPlaybackState:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setIsAdvertisingProximity:
setIsAirPlayReceiverSessionActive:
setIsCallingClientCallback:
setIsForegrounded:
setIsGroupLeader:
setIsLocalDevice:
setIsMuted:
setIsMuted:error:
setIsPlaying:
setIsProxyGroupPlayer:
setIsRemoteControllable:
setIsVolumeControlAvailable:
setKeepAlive:
setKeyboardType:
setLabel:
setLastBootUUID:
setLastDiscoveryModeDisableDate:
setLastKnownBluetoothAddress:
setLastKnownClusterType:
setLastMessageSentDate:
setLastNotPlayingDate:
setLastPlayingDate:
setLastSentEntry:
setLastStatusChangeDate:
setLastStatusCheckDate:
setLegacyAssertion:
setLength:
setLifetimeController:
setLinkAgent:
setListeningMode:outputDeviceUID:completion:
setListeningMode:outputDeviceUID:queue:completion:
setLocalEndpointConnection:
setLocalLastPlayingDate:
setLocalNowPlayingClient:
setLocalOriginClient:
setLocalOutputContextDataSource:
setLocalPlaybackState:
setLocalReceiverPairingIdentity:
setLocalizedModelName:
setLocallyHosted:
setLocation:
setLockScreenForegrounded:
setLockScreenPlayerPath:
setLockScreenWidgetActive:
setLockScreenWidgetVisible:
setManagedConfigurationDeviceIdentifier:
setMaxResults:
setMediumDevices:
setMessageHandler:
setMessageHandler:forType:
setMessageHandler:forType:destination:session:
setMessageProxy:
setMigratingDevices:
setMigrationEvents:
setModelID:
setMutableExternalDeviceClients:
setName:
setNameCallback:
setNameCallback:withQueue:
setNameCallbackQueue:
setNearbyDevices:
setNotificationQueue:
setNotificationToken:
setNotifications:
setNowPlayingClient:
setNowPlayingDataSource:
setNowPlayingPlayerClient:
setObject:forKey:
setObject:forKeyedSubscript:
setObjects:
setOptionValue:forKey:
setOptions:
setOrigin:
setOriginClient:
setOriginClients:
setOriginForwarders:
setOriginUID:
setOutputContext:
setOutputContextCallbackQueue:
setOutputContextForLocalDeviceDataSource:
setOutputDevice:options:
setOutputDeviceDiscoveryMode:
setOutputDeviceIsMuted:outputDevice:queue:completion:
setOutputDeviceModifications:
setOutputDeviceUID:
setOutputDeviceVolume:
setOutputDeviceVolume:forOutputDevice:withCompletion:
setOutputDeviceVolume:outputDevice:queue:completion:
setOutputDeviceVolume:outputDeviceUID:queue:completion:
setOutputDeviceVolumeCapabilities:
setOutputDevices:
setOutputDevices:initiator:withCallbackQueue:block:
setOutputDevices:initiator:withReplyQueue:completion:
setOutputDevicesRemovedCallback:
setOutputDevicesRemovedCallback:withQueue:
setOutputDevicesRemovedCallbackQueue:
setOutputDevicesUpdatedCallback:
setOutputDevicesUpdatedCallback:withQueue:
setOutputDevicesUpdatedCallbackQueue:
setOverrideClient:
setOverrideTimer:
setPairedDeviceSync:
setPairedPeerRemovedHandler:
setPairingAllowed:
setPairingAllowedCallback:
setPairingAllowedCallback:withQueue:
setPairingCallback:
setPairingCallback:withQueue:
setPairingCallbackQueue:
setPairingHandler:
setPairingManager:
setParentGroupContainsDiscoverableGroupLeader:
setParentGroupContainsDiscoverableLeader:
setParentGroupIdentifier:
setPendingBarrierCompletion:
setPendingClientState:
setPendingConnectCompletionHandlers:
setPendingDisconnectDate:
setPendingEndpoints:
setPendingOutputDevices:
setPerPlayerCanBeNowPlaying:
setPersonalDeviceController:
setPersonalDeviceState:
setPersonalDeviceWasRecentlyAttached:
setPickedRoute:withPassword:
setPickedRoute:withPassword:forSource:
setPickedRoute:withPassword:options:
setPickedSystemRoute:withPassword:forSource:
setPictureInPictureEnabled:
setPinPairingToken:
setPlaybackQueue:
setPlaybackQueueCapabilities:
setPlaybackSessionMigrateRequestCallback:
setPlaybackState:
setPlaybackStateTimestamp:
setPlaybackTimer:
setPlaybackTimers:
setPlayer:
setPlayerClient:
setPlayerPath:
setPlayerPlaybackState:
setPlayerProperties:
setPopulatesExternalDevice:
setPreviousPlayerPath:
setPrimaryUID:
setPriority:
setProcessIdentifier:
setProcessUserIdentifier:
setPromptingDevices:
setProtocol:
setProtocolVersion:
setProxyGroupPlayer:
setPushStateCanBeNowPlayingPlayer:
setPushStateClient:
setPushStateHasNowPlayingData:
setPushStateIsPlaying:
setPushStatePictureInPictureEnabled:
setPushStatePlaybackState:
setPushStatePlayer:
setQueue:
setQueuedInitiatePlaybackMessages:
setRapportService:
setReason:
setRecordingEndpointClients:
setRecordingState:
setRegisteredCallbacks:
setRegisteredKeyboardUpdates:
setRegisteredToNowPlayingUpdates:
setRegisteredToOutputDeviceUpdates:
setRegisteredToSystemEndpointUpdates:
setRegisteredToVolumeUpdates:
setRegisteredVirtualAudioDevices:
setReloadScheduled:
setRemoteAlertHandle:
setRemoteControlChannels:
setRemoteControlContexts:
setRemoteControlInterfaceID:
setRemoteControlService:
setRemoteObjectInterface:
setRemoteUIServerEndpoint:
setRemoteUIService:
setRemovedOutputDevices:
setRequest:
setRequestClientProperties:
setRequestID:
setRequestLastPlayingDate:
setRequestPlaybackQueue:
setRequestPlaybackState:
setRequestSupportedCommands:
setRequester:
setReservedOutputContexts:
setResponseHandlers:
setReturnPartialResults:
setRouteDiscoveryMode:
setRouteUID:
setRoutingContextID:
setRoutingContextUID:
setRunLoop:
setSecure:
setSelectionReason:
setSenderAppDisplayID:
setSenderDefaultGroupUID:
setSendingPlaybackStateToCompanion:
setServer:
setServerDelegate:
setServerDiscoveryMode:forConfiguration:
setService:
setServiceQuality:
setServiceToken:
setSession:
setSessionUID:
setSharedQueueVersion:
setShouldConsiderSuggestions:
setShouldFinishPresentationForCurrentPersonalDevices:
setShouldLog:
setShouldRun:
setShouldUseSystemAuthenticationPrompt:
setShouldVerboselyLog:
setShowAsTopmost:
setShowOnLockscreen:
setSilentDiscoverySession:
setSourceUID:
setStartDate:
setStarted:
setStateMonitor:
setStatus:
setString:
setStyle:
setSubscribedPlayerPaths:
setSuggestionCount:
setSuggestionPreferences:
setSupportedAPIs:forApplication:
setSupportedCommands:
setSupportedMessages:
setSupportedPlaybackSessionTypes:
setSupportedRemoteControlCommands:
setSupportedRemoteControlCommandsData:
setSupportsBackgroundAudio:
setSupportsExtendedMotion:
setSupportsMultiplayer:
setSupportsSharedQueue:
setSupportsSystemPairing:
setSystemActiveEndpoints:
setSystemBooksApplication:
setSystemDiscoveryMode:
setSystemMediaApplication:
setSystemMediaClient:
setSystemPodcastApplication:
setTXTRecordData:
setTarget:
setTelevisionEndpoints:
setTelevisionNetworkService:
setTightSyncUID:
setTimeoutTimer:
setToken:
setTombstoned:
setTotalMessageCount:
setTotalMessageHandlers:
setTransactionWaitDuration:
setTransactions:
setTransitionHandler:
setTransport:
setTransportOptions:
setTransportType:
setType:
setUiActivityInfo:
setUiController:
setUnclusteredLocalOutputDevice:
setUnclusteredOutputDevices:
setUniqueIdentifier:
setUpdatedEndpoints:
setUpdatedOutputDevices:
setUseOutputDeviceCache:
setUseWeakMatching:
setUsedTransactionMemory:
setUserData:
setUserDefaults:
setUserDisplayPreferencesDidChangeCallback:
setUserInfo:
setUsingSystemPairing:
setValue:forKey:
setVirtualOutputDeviceDictionary:
setVoiceRecordingState:
setVolume:
setVolume:error:
setVolume:outputDeviceUID:
setVolumeCallback:
setVolumeCallbackQueue:
setVolumeCapabilities:
setVolumeChangedCallback:withQueue:
setVolumeControlCapabilities:
setVolumeControlCapabilitiesCallback:
setVolumeControlCapabilitiesCallback:withQueue:
setVolumeControlCapabilitiesCallbackQueue:
setVolumeTo:forCategory:
setWaking:
setWantsAssertionsForNotificationsWithPlayerPath:
setWantsEndpointChangeNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsNowPlayingNotifications:
setWantsOutputDeviceNotifications:
setWantsSystemEndpointNotifications:
setWantsVolumeNotifications:
setWithArray:
setWithCapacity:
setWithObject:
setXpcClient:
settingOutputDeviceUIDs
sharedAVSystemController
sharedAudioPresentationContext
sharedAudioPresentationOutputContext
sharedAuthorizationSession
sharedCompanionLinkClient
sharedConnection
sharedConnectionController
sharedController
sharedDataSource
sharedDisplayMonitor
sharedIDSCompanionLinkClient
sharedInstance
sharedLocalDevice
sharedLocalEndpoint
sharedLocalEndpointForRoutingContextWithUID:
sharedLogger
sharedManager
sharedMonitor
sharedOutputContextController
sharedQueueVersion
sharedServer
sharedService
sharedServiceClient
sharedSystemAudioContext
sharedSystemScreenContext
shortValue
shouldBeLocallyHosted
shouldConnectToLocalEndpoint
shouldConsiderSuggestions
shouldFinishPresentationForCurrentPersonalDevices
shouldImplicitlyLaunchApplication
shouldInitializeGenericBonjourService
shouldInitializeIDSService
shouldInitializeRapportService
shouldInitializeTelevisionBonjourService
shouldLogPairingSetupCode
shouldRun
shouldSendCommand:
shouldSendCommandsDuringPhoneCall
shouldUseDeviceInfoForLocalDevice
shouldUseSystemAuthenticationPrompt
shouldWakeDeviceForRemoteControlCommands
showUncommitedDevices
showWithPin:forClient:
signatureWithObjCTypes:
silentDiscoverySession
silentPrimary
skeleton
sleepObserverSystemDidWake:
sleepObserverSystemWillSleep:completion:
snapshotForIsPlaying:
snapshotForPlaybackState:
snapshots
snapshotsForIsPlaying:
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sourceInfo
sourceOrigin
sourceUID
speakerRoute
standardCredentials
standardUserDefaults
start
startContext:
startEvent:
startMirroringActivity
startMonitoringWithOptions:
startNowPlayingActivity
startObservationIfNeeded
state
stateMonitor
stateObserver:didReceiveApplicationClientStateDidChange:
stateObserver:didReceiveClientDidUnregister:
stateObserver:didReceiveCoalescedNowPlayingStateChange:playerPath:
stateObserver:didReceiveDefaultSupportedCommandsChange:playerPath:
stateObserver:didReceiveNowPlayingClientChange:
stateObserver:didReceiveNowPlayingPlayerChange:
stateObserver:didReceivePlayerDidUnregister:
stateObserver:didReceiveVolumeControlCapabilitiesChange:playerPath:
status
stop
stopReceivingUpdatesForSource:
stream:handleEvent:
streamsActivelyUsingSlot
string
stringByAppendingFormat:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
style
subscribeToPlaybackQueue:forRequest:
subscribedPlayerPaths
subscriptionController
subscriptionControllerForPlayerPath:
suggestionPreferences
suggestionsDisabledInContext:
superclass
supportCoordinatedVolume
supportExpanseMigration
supportGenericAudioGroup
supportIDSDiscovery
supportLastPlayingDevice
supportLockscreenPlatterDisplayForPersonalDevice
supportMultiplayerHost
supportNanoLinkAgent
supportNanoStandalone
supportNowPlayingPIP
supportNowPlayingSessionDataSource
supportOutputContextPrewarming
supportOutputContextSync
supportSessionBasedLockScreenPlatter
supportedAPIsForApplication:
supportedCommands
supportedMessages
supportedPlaybackSessionTypes
supportedProtocolMessages
supportedRemoteControlCommands
supportedRemoteControlCommandsData
supportsBackgroundAudio
supportsEngageOnClusterActivation
supportsIdleDisconnection
supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions
supportsMultiplayer
supportsOutputContextSync
supportsSecureCoding
supportsSharedQueue
syncedOutputDevices
synchronize
synchronousRemoteObjectProxyWithErrorHandler:
synchronousServer
systemActiveEndpoints
systemBooksApplication
systemDiscoveryMode
systemEndpointController
systemEndpointController:activeSystemEndpointDidChangeForRequest:type:
systemEndpointInfo
systemEndpointUpdates
systemMediaAppPlayerPathForNotification:
systemMediaApplication
systemMediaClient
systemPodcastApplication
systemPodcastClient
takeAssertion:forReason:duration:
takelockScreenAssertion
target
televisionEndpoints
televisionNetworkService
textEditingService:attributesDidChange:payload:
textEditingService:echoWithText:
textEditingService:textDidChange:payload:
textEditingService:textEditingDidBegin:withAttributes:payload:
textEditingServiceTextEditingDidEnd:
tightSyncID
tightSyncUID
time
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeSincePlaying
timeSincePlayingForPlayerPath:
timeoutTimer
timerWithInterval:queue:block:
timerWithInterval:repeats:queue:block:
tintColor
title
token
tokenRecords
tombstone
tombstoned
totalMessageCount
totalMessageHandlers
totalOutgoingMessageCount
transaction
transaction:didReceivePackets:receivedSize:requestedSize:queue:completion:
transactionDidEnd:bytesRemaining:
transactionRequestingMemorySize:
transactionServer
transactionWaitDuration
transactionWaitDurationOnNetworkSend
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactions
transport
transport:didReceiveData:
transportDidClose:error:
transportType
triggerAudioFadeInWithReplyQueue:completion:
triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue:completion:
type
uiActivityInfo
uiController
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unclusteredLocalOutputDevice
unclusteredOutputDevices
uniqueIDOverride
uniqueIdentifier
unpair
unpickAirPlayRoutes
unregisterAllVirtualVoiceInputDevices
unregisterDiscoveryToken:
unregisterForChanges
unregisterOrigin:
unregisterOriginForwarder:
unresolvedPlayerPath
unsignedIntValue
unsignedIntegerValue
updateClient:
updateDefaultSupportedCommandsData:forClient:
updateDeviceInfo:origin:
updateLastPlayingDate:
updateOutputDevices:
updatePeer
updatePlaybackQueue:
updatePlaybackQueue:fromRequest:
updatePlaybackQueueWithContentItems:fromRequest:
updatePlaybackState:date:
updatePlayer:
updateUserSelectedSystemEndpoint:
updateUserSelectedSystemEndpoint:event:eventReason:
updateVolume:outputDeviceUID:
updateVolumeControlCapabilities:outputDeviceUID:
updatedEndpoints
updatedOutputDevices
useAPSyncAPI
useClusterDevices
useExternalDeviceSystemPairing
useOutputDeviceCache
usePeerToPeerExternalDeviceConnections
useProactiveEndpoint
useProactivePFSQSender
usedTransactionMemory
userCancelledPickingRoute:
userData
userDefaults
userInfo
userInitiated
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueForProperty:
valueWithBytes:objCType:
valueWithMRHIDTouchEvent:
verboseHostedDiscoverySessionLogging
verboseHostedExternalDeviceClientLogging
verboseMRDMediaRemoteClientLogging
verboseNowPlayingStateObserver
verboseOriginForwarderLogging
verboseRemoteControlDiscoveryLogging
verifyConnectionStatusAndMaybeDisconnect:
verifyCreatedPlayerPath:forClient:error:
verifyGroupLeader:
verifyGroupLeaderForReason:
virtualAudioInputServer:didUpdateRecordingState:forDevice:
virtualOutputDeviceDictionary
virtualOutputDevices
virtualTouchDeviceWithID:
virtualTouchDevices
virtualTouchIDWithPackedID:
visibility
voiceRecordingState
volume
volumeCallback
volumeCallbackQueue
volumeCapabilities
volumeControlCapabilities
volumeControlCapabilitiesCallback
volumeControlCapabilitiesCallbackQueue
volumeControlCapabilitiesForOutputDeviceUID:error:
volumeUpdates
wakingPlayerPathAssertionDuration
wantsCoalescedStateChanged
wantsEndpointChangeNotifications
wantsNowPlayingArtworkNotifications
wantsNowPlayingNotifications
wantsOutputDeviceNotifications
wantsSystemEndpointNotifications
wantsVolumeNotifications
weakObjectsHashTable
weakProxyWithObject:protocol:
width
willBeLocallyHosted
willStartingPlaybackToOutputDevicesInterrupt:
workerQueue
writeToFile:options:error:
writeToURL:options:error:
xpcClient
xpcClientForPlayerPath:
xpcConnection
xpcEndpoint
xpcListener
xpcMessage
zone
MRDSystemEndpointEntry
MRDAVSystemEndpointController
MRDRedirectionCacheEntry
MRDRemoteControlServer
MRDPhoneCallObserverDelegate
NSObject
MRDXPCMessageHandling
MRDDiagnosticCollecting
MRDVolumeController
MRDBrowsableContentAPICoordinator
MRDRemoteControlContext
MRDAVRoutingDataSource
MRDUIActivityServer
MRUIServerClientObserver
MRLockScreenUIServerXPCProtocol
MRQuickControlsUIServerXPCProtocol
MRScreenMirroringQuickControlsUIServerXPCProtocol
MRUIContextServerXPCProtocol
MRDHIDEventManager
MRDSystemHIDEventManager
MRDProcessHIDEventManager
MRDStreamCapacityManager
MRDStreamCapacityManagerAdditions
MRDNowPlayingPlayerClient
MRDNowPlayingPlayerClientPlaybackState
MRDNowPlayingPlayerClientPlaybackStateSnapshot
MRDBonjourRemoteControlService
NSNetServiceDelegate
MRDAVHostedExternalDeviceClient
MRXPCConnectionMonitorDelegate
MRAVDistantExternalDeviceClientProtocol
MRDAVHostedExternalDevicePendingClientState
MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications
MRDIDSService
IDSServiceDelegate
MRDIDSServiceMessage
MRDNowPlayingDataSourceApplication
MRDNowPlayingDataSourceSession
MRDNowPlayingDataSource
MRDOriginForwarder
MRDOutputDeviceRoutingDataSource
MRDRapportRemoteControlService
MRDRapportRemoteControlServiceConnection
NSSecureCoding
NSCoding
MRDProximityController
MRNowPlayingControllerDelegate
MRDAVOutputContextManager
MRDPinPairingDialog_ATV
MRDIDSDiscoverySession
MRDAVReconnaissanceSession
MRDAVLocalDeviceCommitManager
MRAVClusterObserver
MRDBrowsableContentServer
MRDRemoteControlDiscoverySession
MRExternalDeviceTransportConnectionDelegate
MRDAVHostedDiscoverySession
MRAVDistantRoutingDiscoveryServiceProtocol
MRDAVHostedRoutingObserver
MRDExternalDeviceServerClientConnection
MREmulatedGameControllerDelegate
MRDAVHostedRoutingService
NSXPCListenerDelegate
MRDAVHostedDiscoverySessionDelegate
MRDAVHostedRoutingController
MRDExternalDeviceCredentialDatabase
MRDIDSRemoteControlService
MRProtocolClientConnectionDelegate
MRDIDSRemoteControlServiceDiscoveryChannel
MRDIDSRemoteControlServiceRemoteControlChannel
MRDIDSRemoteControlServiceRemoteControlChannels
MRDVirtualAudioInputServerDevice
MRDAVRouteExtendedInfo
MRDPersonalDeviceController
MRDExternalDeviceHomeServer
MRDExternalDeviceHomeServerRecentlyPlayedEntry
MRDIDSTransport
MRDBackgroundTasks
MRTransaction
MRDTransactionServer
MRTransactionDelegate
MRDIDSTransportConnection
MRDAVRemoteControlClusterOutputDevice
MRDPinPairingDialog
MRUIServerProtocol
MRUIClientProtocol
MRDUIControllerConnection
MRDIDSCompanionRemoteControlService
NSStreamDelegate
MRDIDSCompanionRemoteControlServiceConnection
MRDTransportExternalDevice
MRJSONTransportExternalDevice
MRHID
MRDNowPlayingPlaybackQueueServer
MRDDeviceInfoDataSource
MCProfileConnectionObserver
MRDNowPlayingOriginClient
MRDNowPlayingDataSourceObserver
MRDDeviceInfoDataSourceDelegate
MRDMediaServerAVRoute
MRDNowPlayingStateObserver
MRDNowPlayingObserverState
MRDMediaServerAVRoutingDataSource
MRDPinPairingDialog_CFUN
MRDLockScreenController
MRDPersonalDeviceControllerDelegate
MRDLockScreenContentControllerDelegate
MRDLockScreenAssertion
MRDConnectionLifetimeController
MRDAVHostedExternalDevice
MRExpanseManagerObserver
MRDConnectionLifetimeControllerDataSource
MRDConnectionLifetimeControllerDelegate
MRAVDistantExternalDeviceServiceProtocol
MRDExternalDeviceRemoteServer
MRCryptoPairingSessionDelegate
MRDRemoteControlServiceDelegate
MRDExternalDeviceServerClientConnectionDelegate
MRDNowPlayingStateObserverDelegate
MRDPinPairingDialogDelegate
MRDSleepObserverDelegate
MRDTextEditingServiceDelegate
MRDServerMessageProxy
MRDHostedRoutingController
MRDHostedExternalDeviceManagerDelegate
MRDHostedRoutingControllerAdditions
MRDNowPlayingServer
MRDLockScreenControllerDelegate
MRDElectedPlayerControllerDelegate
MRDProximityControllerDataSource
MRDNowPlayingClientDelegate
MRDNowPlayingOriginClientDelegate
MRDNowPlayingPlayerClientDelegate
MRDNowPlayingServerResult
MRDNowPlayingClient
MRDMediaRemoteServer
MRDVirtualAudioInputServerDelegate
MRDPhoneCallControllerDelegate
MRDTaskAssertion
MRDCommandClientRestriction
NSCopying
MRDAutoConnectionControllerReason
MRDAutoConnectionController
MRDElectedPlayerController
MRDAirPlayRemoteControlService
AVOutputContextCommunicationChannelDelegate
APReceiverMediaRemoteCommunicationChannelDelegate
MRDDiagnostic
MRDRemoteControlService
MRDAirPlayRemoteControlServiceDelegate
MRDBonjourRemoteControlServiceDelegate
MRDRapportRemoteControlServiceDelegate
MRDIDSCompanionRemoteControlServiceDelegate
MRDIDSRemoteControlServiceDelegate
MRDRemoteControlServiceAdditions
MRDUIClient
MRUIServerXPCProtocol
MRUIClientXPCProtocol
MRLockScreenUIClientXPCProtocol
MRQuickControlsUIClientXPCProtocol
MRScreenMirroringQuickControlsUIClientXPCProtocol
MRDUIServer
MRDPhoneCallObserver
CXCallObserverDelegate
MRDIdleTopologySimplifier
MRDIDSServerClientConnection
MRDSleepAssertion
MRDAVOutputContextExternalDevice
MRXPCConnectionMonitor
MRDAVRoutingServer
MRDAVSystemEndpointControllerDelegate
AVOutputDeviceAuthorizationSessionDelegate
MRDProactivePrepareForSetQueueSender
AFNotifyObserverDelegate
MRDiOSSimulatorNowPlayingDataSource
MRDSleepObserver
MRDHostedExternalDeviceManager
MRDVirtualAudioInputServer
MRDPlaybackQueue
MRDPlaybackQueueArtworkCache
MRAdditions
MRDPlaybackQueueArtworkCacheSize
MRDMediaServerVolumeController
MRDMediaRemoteUIService
SBSRemoteAlertHandleObserver
MRDMediaRemoteClient
MRDVirtualTouchDevice
MRDDisplayMonitor
MRDIDSServiceConnection
MRDRouteAuthorizationRequest
MRDUIClientMessageForwarder
MRDUIClientBSMessageForwarder
MRDUIClientXPCMessageForwarder
MRDLockScreenContentController
MRDPairingHandler
MRDRemoteControlCommand
NSMutableCopying
MRDMutableRemoteControlCommand
MRDRoutedRemoteControlCommand
MRDAVRoute
MRDInitiatePlaybackMessage
MRDUIControllerProvider
MRDUIController
MRDXPCUIController
MRLockScreenUIControllable
MRUIControllable
MRQuickControlsUIControllable
MRScreenMirroringQuickControlsUIControllable
MRDExternalDeviceAuthTokenRecord
MRDMutableExternalDeviceAuthTokenRecord
MRDOutputDeviceRoute
MRDAVOutputDeviceRoute
@16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
v16@0:8
@"NSString"
@"NSDate"
@24@0:8@16
@24@0:8q16
v40@0:8@16q24@32
v48@0:8@16q24@32@40
v48@0:8q16q24@32@40
v56@0:8q16q24q32@40@48
@40@0:8q16q24^@32
@32@0:8q16^@24
@24@0:8^@16
v48@0:8@16q24q32@40
v32@0:8@16@?24
B24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"MRDNowPlayingServer"
@"MRDHostedRoutingController"
@"NSMutableDictionary"
@"NSUserDefaults"
@"MSVPersistentTimer"
@"MROrigin"
@"<MRDAVSystemEndpointControllerDelegate>"
@"MRPlayerPath"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"MRDPhoneCallObserver"16@"NSString"24
v32@0:8@"NSObject<OS_xpc_object>"16@"MRDMediaRemoteClient"24
v24@0:8@"MRDDiagnostic"16
v40@0:8@16@24@?32
B32@0:8@16@24
@32@0:8@16@24
B20@0:8I16
@40@0:8@16@24^@32
@56@0:8@16@24@32@40@?48
@"NSMutableSet"
@"MRDPhoneCallObserver"
@"MSVSystemDialog"
@"MRDCommandClientRestriction"
@24@0:8^{_NSZone=}16
v28@0:8f16^@20
v32@0:8q16^@24
v28@0:8B16^@20
f16@0:8
I16@0:8
@"MRDAVRoutingDataSource"
I24@0:8@16
v28@0:8I16@20
@20@0:8I16
@"NSMutableArray"
@28@0:8@16I24
B36@0:8@16@24I32
@?24@0:8@16
v20@0:8I16
@"MRDAVRoute"
v24@0:8@"MRDUIClient"16
v24@0:8@?16
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?@"NSString">24
@"MRUIActivityController"
v24@0:8^{__IOHIDEvent=}16
v24@0:8Q16
v24@0:8I16I20
^{__IOHIDEventSystemClient=}
@28@0:8@16i24
i16@0:8
v20@0:8B16
d16@0:8
@20@0:8B16
@44@0:8@16I24@28^@36
v28@0:8@16B24
@"NSArray"
@"NSData"
@"MRDPlaybackQueue"
@"MRDNowPlayingPlayerClientPlaybackState"
@"MROSTransaction"
@"MRPlaybackQueueSubscriptionController"
@"<MRDNowPlayingPlayerClientDelegate>"
@"MRPlayer"
@28@0:8I16@20
q24@0:8@16
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"CUBluetoothClient"
@"NSNetService"
@"<MRDBonjourRemoteControlServiceDelegate>"
v24@0:8@"MRXPCConnectionMonitor"16
v28@0:8f16@20
v28@0:8I16@"NSError"20
v24@0:8@"NSString"16
v32@0:8@"NSData"16@"NSString"24
v24@0:8@"MRAVEndpoint"16
v28@0:8I16@"MRAVOutputDevice"20
v28@0:8f16@"MRAVOutputDevice"20
v24@0:8@"MRAVOutputDevice"16
v32@0:8@"NSArray"16@"MRAVRoutingDiscoverySessionConfiguration"24
@"NSXPCConnection"
@"MRDAVHostedExternalDevicePendingClientState"
@"MRXPCConnectionMonitor"
@"MRDMediaRemoteClient"
@"NSError"
@"MRAVDistantEndpoint"
@"NSNumber"
@"MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8@16@?24
@24@0:8@?16
B80@0:8@16@24@32@40@48@56q64@?72
B88@0:8@16@24@32@40@48@56q64@72@?80
@"IDSService"
@48@0:8@16@24@32@40
B32@0:8@16q24
@"IDSDevice"
@"MRDIDSService"
@36@0:8i16@20@28
@"NSSet"
@36@0:8@16@24B32
@"NSHashTable"
@"NSDictionary"
@"MRClient"
@"AVOutputDeviceDiscoverySession"
@40@0:8@16@24@32
@"<MRDRapportRemoteControlServiceDelegate>"
@"MRCompanionLinkClient"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"MRRapportTransportConnection"
@"<NSObject>"
v32@0:8@16I24I28
v32@0:8@"MRNowPlayingController"16@"MRNowPlayingPlayerResponse"24
v32@0:8@"MRNowPlayingController"16I24I28
v40@0:8@"MRNowPlayingController"16@"MRPlaybackQueue"24@"MRPlaybackQueue"32
v32@0:8@"MRNowPlayingController"16@"NSArray"24
v40@0:8@"MRNowPlayingController"16@"NSArray"24@"NSArray"32
v32@0:8@"MRNowPlayingController"16@"NSDate"24
v40@0:8@"MRNowPlayingController"16@"MRClient"24@"MRClient"32
v32@0:8@"MRNowPlayingController"16@"MRPlayerPath"24
v24@0:8@"MRNowPlayingController"16
v32@0:8@"MRNowPlayingController"16@"NSError"24
@"<MRDProximityControllerDataSource>"
@"MRDDisplayMonitor"
@28@0:8@16B24
v32@0:8d16@?24
@?16@0:8
@"NSTimer"
v32@0:8@16Q24
v28@0:8@16I24
v32@0:8@"MRAVClusterController"16Q24
v28@0:8@"MRAVClusterController"16I24
v32@0:8@?16@24
v48@0:8@16{?=^QQ}24@40
@"MRDBrowsableContentAPICoordinator"
v32@0:8@"MRExternalDeviceTransportConnection"16@"NSError"24
v32@0:8@"MRExternalDeviceTransportConnection"16@"NSData"24
@"MRAVOutputDevice"
@"MRDeviceInfo"
@"MRAVConcreteRoutingDiscoverySession"
@"MRDIDSDiscoverySession"
@"MRAirPlayTransportConnection"
v32@0:8I16B20@?24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?I@"NSError">16
v32@0:8I16B20@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8@16@24I32
v32@0:8@"MRDHostedRoutingController"16@"NSArray"24
v36@0:8@"MRDHostedRoutingController"16@"NSArray"24I32
@"<MRDAVHostedDiscoverySessionDelegate>"
v32@0:8@"MREmulatedGameController"16@"_MRGameControllerPropertiesProtobuf"24
Q24@0:8@16
@24@0:8Q16
Q24@0:8Q16
v28@0:8{_MRHIDButtonEvent=IIB}16
{_MRHIDButtonEvent="usagePage"I"usage"I"down"B}
@"MRAVEndpoint"
@"MRPasscodeCredentials"
@"MRPlaybackQueueClient"
@"MRCoreUtilsPairingSessionPeer"
@"<MRDExternalDeviceServerClientConnectionDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"MRDAVHostedDiscoverySession"16
@"NSXPCListener"
@32@0:8@16Q24
^{sqlite3=}
v32@0:8@"MRProtocolClientConnection"16@"MRProtocolMessage"24
v32@0:8@"MRProtocolClientConnection"16@"NSError"24
@52@0:8@16@24@32@40I48
v48@0:8@16@24@?32@?40
@"<MRDIDSRemoteControlServiceDelegate>"
@"MRDIDSTransportConnection"
@"MRDIDSServerClientConnection"
@"MRExternalDeviceTransportConnection"
v24@0:8d16
@"<MRDPersonalDeviceControllerDelegate>"
@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"
@"MRContentItem"
@"MRDIDSServiceConnection"
@40@0:8Q16@24@32
@32@0:8Q16@24
@"MRDTaskAssertion"
@"<MRTransactionDelegate>"
v64@0:8@16@24Q32Q40@48@?56
v64@0:8@"MRTransaction"16@"NSArray"24Q32Q40@"NSObject<OS_dispatch_queue>"48@?<v@?>56
v32@0:8@"MRTransaction"16Q24
Q24@0:8@"MRTransaction"16
Q32@0:8@16@24
q24@0:8q16
@"<MRDPinPairingDialogDelegate>"
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BSServiceConnection<BSServiceConnectionClient>"
@"MRDUIClientMessageForwarder"
v32@0:8@"NSStream"16Q24
v44@0:8@16@24I32@?36
@"MSVTimer"
@"MRAVRoutingDiscoverySessionConfiguration"
@"<MRDIDSCompanionRemoteControlServiceDelegate>"
@"NSRunLoop"
v40@0:8I16B20@24@?32
v52@0:8@16I24@28@36@?44
v36@0:8I16@20@?28
v40@0:8d16@?24@32
v44@0:8f16@20@28@?36
v48@0:8@16@24@32@?40
v80@0:8@16@24@32@40@48@56@64@?72
v32@0:8q16@24
v40@0:8^v16^v24@?32
v32@0:8I16I20@24
v44@0:8I16@20@28@?36
@"MRExternalClientConnection"
@"MRExternalDeviceTransport"
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16@0:8
@48@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16
v56@0:8@16@24@32@40@?48
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
^{MGNotificationTokenStruct=}
@"<MRDDeviceInfoDataSourceDelegate>"
@"CUPairingManager"
v24@0:8@"MRDNowPlayingDataSource"16
v32@0:8@"MRDDeviceInfoDataSource"16@"MRDeviceInfo"24
v20@0:8f16
@20@0:8i16
v20@0:8i16
@"MRDNowPlayingClient"
@"MRMutableApplicationActivity"
@"MRDNowPlayingDataSource"
@"MRDDeviceInfoDataSource"
@"<MRDNowPlayingOriginClientDelegate>"
@"MRDAVRouteExtendedInfo"
v28@0:8B16q20
v32@0:8@16:24
@"<MRDNowPlayingStateObserverDelegate>"
@"MRPlaybackQueue"
@"MRDOutputDeviceRoutingDataSource"
v24@0:8@"MRDPersonalDeviceController"16
v24@0:8@"MRDLockScreenContentController"16
B24@0:8^@16
@"MRDNowPlayingServerResult"
@"<MRDLockScreenControllerDelegate>"
@"<MRLockScreenUIControllable>"
@"MRDLockScreenAssertion"
@"MRDPersonalDeviceController"
@"MRDLockScreenContentController"
@"SBSLockScreenContentAssertion"
@"<MRDConnectionLifetimeControllerDataSource>"
@"<MRDConnectionLifetimeControllerDelegate>"
v24@0:8@"MRExpanseManager"16
@"MROrigin"16@0:8
v24@0:8@"MROrigin"16
v36@0:8f16@20@?28
v72@0:8@16@24@32@40@48@56@?64
v28@0:8I16I20B24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"MRAVDistantExternalDeviceMetadata"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v36@0:8I16@"NSDictionary"20@?<v@?@"NSError">28
v24@0:8@"NSError"16
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v72@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@?<v@?@"NSError">64
v32@0:8@"NSArray"16@?<v@?@"NSString"@"NSError">24
v32@0:8d16@?<v@?@"NSError">24
v28@0:8I16@"MRAVRoutingDiscoverySessionConfiguration"20
v24@0:8@?<v@?@"MRExternalOutputContextDataSource">16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"MRExternalDevice"
@"MRExternalOutputContextDataSource"
@"MRAVRoutingDiscoverySession"
@"MRDConnectionLifetimeController"
v40@0:8@16d24@?32
v32@0:8@"MRCryptoPairingSession"16@"NSData"24
v32@0:8@"MRCryptoPairingSession"16@"NSString"24
v24@0:8@"MRCryptoPairingSession"16
v40@0:8@"MRCryptoPairingSession"16d24@?<v@?@"NSString">32
v32@0:8@"MRCryptoPairingSession"16@"NSError"24
v32@0:8@"MRDRemoteControlService"16@"MRDExternalDeviceServerClientConnection"24
v40@0:8@16Q24@32
v40@0:8@"MRDExternalDeviceServerClientConnection"16Q24@"_MRGameControllerPropertiesProtobuf"32
v36@0:8@16I24@28
v32@0:8@"MRDNowPlayingStateObserver"16@"MRPlayerPath"24
v36@0:8@"MRDNowPlayingStateObserver"16I24@"MRPlayerPath"28
v40@0:8@"MRDNowPlayingStateObserver"16@"NSArray"24@"MRPlayerPath"32
v40@0:8@"MRDNowPlayingStateObserver"16@"MRDNowPlayingObserverState"24@"MRPlayerPath"32
v36@0:8@16@24B32
v32@0:8@"MRDPinPairingDialog"16@"MRDExternalDeviceServerClientConnection"24
v36@0:8@"MRDPinPairingDialog"16@"MRDExternalDeviceServerClientConnection"24B32
v32@0:8@"MRDSleepObserver"16@?<v@?>24
v24@0:8@"MRDSleepObserver"16
v48@0:8@"MRDTextEditingService"16@"NSString"24@"MRTextEditingAttributes"32@"RTIDataPayload"40
v40@0:8@"MRDTextEditingService"16@"NSString"24@"RTIDataPayload"32
v40@0:8@"MRDTextEditingService"16@"MRTextEditingAttributes"24@"RTIDataPayload"32
v24@0:8@"MRDTextEditingService"16
v32@0:8@"MRDTextEditingService"16@"NSString"24
@44@0:8@16B24@28@36
B32@0:8@16^@24
v40@0:8@16q24@?32
v48@0:8@16@24q32@?40
B32@0:8q16@24
v40@0:8Q16@24@32
v24@0:8B16B20
v36@0:8{_MRHIDButtonEvent=IIB}16@28
v64@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48@56
B40@0:8@16@24@32
B48@0:8@16@24@32@40
@"MRDNowPlayingStateObserver"
@"MRDPinPairingDialog"
@"MRDSleepObserver"
@"MROutputContextController"
@"MRDRemoteControlService"
@"Protocol"
v24@0:8@"MRDHostedExternalDeviceManager"16
@32@0:8@16^B24
@40@0:8@16@24Q32
@"MRDHostedExternalDeviceManager"
@"MRDRemoteControlDiscoverySession"
v28@0:8@"MRDLockScreenController"16B24
v32@0:8@"MRDLockScreenController"16@"MRPlayerPath"24
v56@0:8@16@24q32q40@48
v56@0:8@"MRDElectedPlayerController"16@"MRPlayerPath"24q32q40@"NSString"48
v40@0:8@"MRDNowPlayingClient"16@"MRDNowPlayingPlayerClient"24@"MRDNowPlayingPlayerClient"32
v32@0:8@"MRDNowPlayingClient"16@"MRClient"24
v32@0:8@"MRDNowPlayingClient"16@"MRDNowPlayingPlayerClient"24
v28@0:8@"MRDNowPlayingClient"16B24
v28@0:8@16f24
v40@0:8@"MRDNowPlayingOriginClient"16@"MRDeviceInfo"24@"MRDeviceInfo"32
v36@0:8@"MRDNowPlayingOriginClient"16@"MRPlayerPath"24I32
v32@0:8@"MRDNowPlayingOriginClient"16@"MRApplicationActivity"24
v32@0:8@"MRDNowPlayingOriginClient"16@"MRDNowPlayingClient"24
v28@0:8@"MRDNowPlayingOriginClient"16I24
v28@0:8@"MRDNowPlayingOriginClient"16f24
v28@0:8@"MRDNowPlayingOriginClient"16B24
v32@0:8@"MRDNowPlayingOriginClient"16@"NSArray"24
v24@0:8@"MRDNowPlayingOriginClient"16
v32@0:8@"MRDNowPlayingPlayerClient"16@"MRPlayer"24
v28@0:8@"MRDNowPlayingPlayerClient"16B24
v28@0:8@"MRDNowPlayingPlayerClient"16I24
v32@0:8@"MRDNowPlayingPlayerClient"16@"NSData"24
v36@0:8@"MRDNowPlayingPlayerClient"16@"MRPlaybackQueue"24B32
v32@0:8@"MRDNowPlayingPlayerClient"16Q24
v32@0:8@"MRDNowPlayingPlayerClient"16@"NSArray"24
v36@0:8@16I24@?28
v36@0:8@16f24@?28
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v44@0:8B16d20@28@?36
v36@0:8B16@20@?28
v44@0:8@16B24@28@?36
v40@0:8Q16@24@?32
v56@0:8@16q24q32@40@?48
v28@0:8B16@?20
@"MRDNowPlayingPlaybackQueueServer"
@"MRDNowPlayingOriginClient"
@"MRDElectedPlayerController"
@"MRDLockScreenController"
@"MRDProximityController"
@"MRDNowPlayingPlayerClient"
@"<MRDNowPlayingClientDelegate>"
@"BKSApplicationStateMonitor"
v36@0:8@"MRDVirtualAudioInputServer"16I24@"MRDVirtualAudioInputServerDevice"28
v32@0:8@"MRDPhoneCallController"16@"MRDRemoteControlCommand"24
@"NSObject<OS_xpc_object>"
@"MRDVolumeController"
@"MRDRemoteControlServer"
@"MRDBrowsableContentServer"
@"MRDExternalDeviceRemoteServer"
@"MRDAVRoutingServer"
@"MRDUIServer"
@"MRDVirtualAudioInputServer"
@"MRDTransactionServer"
@"MRDBackgroundTasks"
@"NSObject<OS_dispatch_source>"
@"FBSDisplayLayoutMonitor"
@44@0:8q16i24@28@36
v48@0:8@16@?24@32@?40
v32@0:8@16q24
q32@0:8@16q24
@40@0:8@16q24^@32
@"<MRDElectedPlayerControllerDelegate>"
v24@0:8@"AVOutputContext"16
v40@0:8@"AVOutputContext"16@"NSData"24@"AVOutputContextCommunicationChannel"32
v32@0:8@"AVOutputContext"16@"AVOutputContextCommunicationChannel"24
v32@0:8@"NSData"16@"APReceiverMediaRemoteCommunicationChannel"24
v24@0:8@"APReceiverMediaRemoteCommunicationChannel"16
v40@0:8@16Q24@?32
v32@0:8Q16@24
@"AVOutputContext"
@"NSMapTable"
@"<MRDAirPlayRemoteControlServiceDelegate>"
v44@0:8@16@24@32B40
v44@0:8@16@24@32I40
v48@0:8@16@24@32I40B44
@"MRApplicationActivity"
@"MROutputContextDataSource"
@"_MRAVAirPlaySecuritySettingsProtobuf"
v32@0:8@"MRDAirPlayRemoteControlService"16@"MRExternalDeviceTransportConnection"24
v32@0:8@"MRDBonjourRemoteControlService"16@"MRExternalDeviceTransportConnection"24
v32@0:8@"MRDRapportRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDExternalDeviceServerClientConnection"32@0:8@"MRDIDSCompanionRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDExternalDeviceServerClientConnection"32@0:8@"MRDIDSRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDAirPlayRemoteControlService"
@"<MRDRemoteControlServiceDelegate>"
@"MRDBonjourRemoteControlService"
@"MRDRapportRemoteControlService"
@"MRDIDSCompanionRemoteControlService"
@"MRDIDSRemoteControlService"
@"NSXPCListenerEndpoint"
@"MRDUIActivityServer"
@"MRDServerMessageProxy"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"<MRDPhoneCallObserverDelegate>"
d24@0:8@16
@32@0:8@16d24
v36@0:8I16@20@28
v64@0:8Q16@24d32@40@?48@?56
v56@0:8@16d24@32@?40@?48
@32@0:8@16^@24
B40@0:8@16@24^@32
@"MRDOriginForwarder"
@"MRAVOutputContext"
@"<MRXPCConnectionMonitorDelegate>"
v40@0:8@16@24q32
v40@0:8@"MRDAVSystemEndpointController"16@"MRUpdateActiveSystemEndpointRequest"24q32
v32@0:8@"AVOutputDeviceAuthorizationSession"16@"AVOutputDeviceAuthorizationRequest"24
B40@0:8@"AVOutputDeviceAuthorizationSession"16@"AVOutputDeviceAuthorizationRequest"24@"NSString"32
@64@0:8@16@24@32@40@48@56
v48@0:8@16q24@32@?40
v28@0:8@16i24
@32@0:8@16q24
v28@0:8i16@20
v36@0:8@16B24@28
@"MRDAutoConnectionController"
@"MRDExternalDeviceHomeServer"
@"NSOperationQueue"
@"MRDAVLocalDeviceCommitManager"
@"MRDIdleTopologySimplifier"
@"MRDProactivePrepareForSetQueueSender"
@"MRDAVHostedRoutingService"
@"MRDAVSystemEndpointController"
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
@"AFInstanceContext"
@"AFNotifyObserver"
^{IONotificationPort=}16@0:8
@"<MRDSleepObserverDelegate>"
^{IONotificationPort=}
@"<MRDHostedExternalDeviceManagerDelegate>"
@"<MRDVirtualAudioInputServerDelegate>"
@"MRDPlaybackQueueArtworkCache"
@32@0:8d16d24
v48@0:8@16@24@32^v40
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@36@0:8@16I24@28
@"SBSRemoteAlertHandle"
{?=[8I]}16@0:8
B24@0:8Q16
B40@0:8q16@24d32
v32@0:8B16B20@24
@"<MRDXPCMessageHandling>"
@"MRXPCConnection"
@"MRDMediaRemoteUIService"
@"MRDPairingHandler"
B48@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16
^{__IOHIDUserDevice=}16@0:8
@"MRVirtualTouchDeviceDescriptor"
^{__IOHIDUserDevice=}
B64@0:8@16@24@32@40@48q56
B72@0:8@16@24@32@40@48q56@?64
v48@0:8@?16@24@32@40
@48@0:8@16q24@?32@?40
@"<MRUIClientProtocol>"
@"<MRUIClientXPCProtocol>"
@"<MRDLockScreenContentControllerDelegate>"
@"MRMediaSuggestionPreferences"
@52@0:8I16@20@28@36@44
@24@0:8^{__CFString=}16
@32@0:8^{_NSZone=}16#24
v32@0:8@16^{__CFString=}24
@"MRDUIControllerConnection"
@"AVOutputDevice"
[SystemEndpointController] Reevaluating %{public}@ActiveEndpoint because %{public}@
[SystemEndpointController] %{public}@
[SystemEndpointController] %@SystemEndpoint remains <%@>, eventType = <%@>, eventReason = <%@>, selectionReason = <%@>
[SystemEndpointController] Updating activeEndpointInfo %@
[SystemEndpointController] Requesting to move ASE to deviceUID: %{public}@ because the old ASE changed groups
[SystemEndpointController] ASE changed groups, but no other devices found in old group
Yielding AVRCP command to callservicesd
Caching resolved player path %{public}@ for context %{public}@.
No cache entry found.
Sending cachable command to player path %{public}@ for context %{public}@.
Got a cache creating command from assistant, context: %{public}@.
Performing early return of successful status for backwards compatibility.
Expiring player path for context %{public}@.
Got a cacheable command from assistant, context: %{public}@.
Adding command to assistant cache, context: %{public}@.
Redirecting to cached path: %{public}@
No assistant cache active, context: %{public}@.
Command <%{public}@> ignored because of device state
Broadcasting command <%{public}@> to client: <%@>
Broadcast command %{public}@ timedout after %lf seconds
Clearing %lld context(s) for client %@
[RestrictedCommandClients Mode] %@ is gone, disabling restricted mode
Received command from client %{public}@: %{public}@
Received broadcast command from client %{public}@: %{public}@
Destroying remoteUIService for client: %@
Error for fade out state. Status = %u.
Requesting fade in on next playback for client %{private}@
Tried to restrict command clients without entitlement. Ignoring.
[RestrictedCommandClients Mode] %@ requested to enable restrictions: %@. Previous state: %@
[RestrictedCommandClients Mode] %@ requested to disable restriction. Previous state: %@
No destination client can be found for command %@, and the option to launch the app was not included. Dropping command.
Command ignored because of device state: %{public}@
The client that registered the custom origin %{public}@ no longer exists, so this command will be ignored.
[RestrictedCommandClients Mode] Blocked command %@. %@ is not allow-listed
[RestrictedCommandClients Mode] Allowed command %@. Allow-listed.
Command <%{public}@> ignored because of pre-processing error %{public}@.
Sending command %{public}@ to %{public}@ (%{public}@).
Client %{public}@ failed to reply to command (SendCommandErr = %@)
Destination app %{public}@ not available for command %{public}@, and command requested a launch. Enqueueing command for later execution.
Failed to launch application %{public}@ instead launching %{public}@
Removing previously queued command %{public}@ because it timed out (enqueued for %f seconds)
Sending previously queued command %{public}@ to client %{public}@.
Removing queued commands because %{public}@ %@
Using previously routed app %{public}@ for context %{public}@
No context for context-sensitive command %{public}@
Command is an AVRCP command: skipping straight to call observer check to determine whether we should ignore the command or not.
Ignoring command because of active SharePlay activity.
Ignoring command because a phone call or FaceTime is active.
Not populating PPFSQ command options - command is not proactive - command: %@
Not populating PPFSQ command options - playerPath is not systemMediaApplication - command: %@
Ready to populate PPFSQ, reason: %@, command: %@
Not setting key '%@' for PPFSQ - key already populated
Finished populating PPFSQ command options for command %@ - populated %lu keys: %@
Not populating PPFSQ command options - no data provided - command: %@
Purging command: %{public}@
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle electedPlayer change.
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle isPlaying change.
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle playbackQueue change.
Request: %{public}@<%{public}@> for <%{public}@>
Request: %{public}@<%{public}@>
Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds
Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds
Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned in %.4lf seconds
Request: %{public}@<%{public}@> for <%{public}@> because <%{public}@>
Request: %{public}@<%{public}@> because <%{public}@>
Update: %{public}@<%{public}@> %@
Set: %{public}@ setting %{public}@ from <%@> to <%@>
Set: %{public}@ setting %{public}@ to <%@>
[MRDNowPlayingPlayerClient] Taking hasNowPlayingData transaction for %{public}@
[MRDNowPlayingPlayerClient] Removing hasNowPlayingData transaction for %{public}@
[MRDNowPlayingPlayerClient] isPictureInPictureEnabled changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] PlaybackState changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] isPlaying changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] CanBeNowPlayingPlayer changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] DisplayName changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] AudioSessionType changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] MXSessionIDs changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] AudioSessionID changed from %u to %u for %{public}@
[MRDRemoteControlNetworkService] Bluetooth address changed to %{public}@
[MRDRemoteControlNetworkService] Starting network service: %{public}@ for type %{public}@
[MRDRemoteControlNetworkService] Stopping network service %{public}@ for type %{public}@
[MRDRemoteControlNetworkService] Did accept connection with service: %{public}@ using type: %{public}@ input: %{public}@ output: %{public}@
[MRDRemoteControlNetworkService] Remote server advertisement success with service: %{public}@ using type: %{public}@
[MRDRemoteControlNetworkService] Remote server advertisement failed with service: %{public}@ error: %{public}@
[MRDRemoteControlNetworkService] Retrying after 30s...
[MRDRemoteControlNetworkService] Updating txtData because deviceInfo changed...
[MRDRemoteControlNetworkService] Updating txtData because device restrictions changed...
[MRDRemoteControlNetworkService] Updating txtData: %{public}@
[MRDRemoteControlNetworkService] Stopping bonjour service %{public}@
[MRDRemoteControlNetworkService] Initializing bonjour service for type %{public}@
Configuring remote control network service with includesPeerToPeer = %s
[HostedExternalDeviceClient] Caching connectionState %@ %@ for %@
[HostedExternalDeviceClient] Caching deviceName %@ for %@
[HostedExternalDeviceClient] Caching customData %@ %@ for %@
[HostedExternalDeviceClient] Caching endpoint %@ for %@
[HostedExternalDeviceClient] Caching volumeCapabilities %@ outputDevice %@ for %@
[HostedExternalDeviceClient] Caching volume %lf outputDevice %@ for %@
[HostedExternalDeviceClient] Caching didAddOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching didChangeOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching didRemoveOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching discoverySessionOutputDevicesChanged %@ configuration %@ for %@
[HostedExternalDeviceClient] Restoring state %@ for %@
[MRDIDSService] %@ Message Sent<%lu>: idsDestination=%@ device=%@:%@ data=%@ type=%@ destination=%@ session=%@
[MRDIDSService] %@ Error %@ sending message
[MRDIDSService] %@ Message received<%@>: data=%@ device=%@:%@ type=%@ destination=%@ session=%@ replyID=%@
[MRDOriginForwarder] %@ forwarding command
[MRDOriginForwarder] %@ forwarding playbackQueueRequest
[MRDOriginForwarder] %@ forwarding playbackSessionRequest
[MRDOriginForwarder] %@ forwarding playbackSessionMigrationRequest
[MRDOriginForwarder] %@ Initializing OriginForwarder
[MRDOriginForwarder] %@ End Initializing OriginForwarder
[MRDOriginForwarder] %@ forwarding %@
[ODDSRouting] Setting system discovery mode to %{public}@
[ODDSRouting] Setting picked system route to: %{public}@ with password "%@"
[ODDSRouting] Route is an output device-based route. Setting the following device on the output context: %{public}@
[ODDSRouting] Route is not an output device-based route. Beginning search for device matching UID "%{public}@"
[ODDSRouting] No output context strictly matches compatible context type. Using system audio context.
[ODDSRouting] Found output device: %{public}@ - setting on context %{public}@ (%{public}@)
[ODDSRouting] Could not find output device for route %{public}@ - error = %{public}@
[ODDSRouting] Requested to pick speaker route. Clearing output devices from system screen and system music contexts: %{public}@ %{public}@
[ODDSRouting] Route is not an output device-based route and a route UID is not available. Cannot pick route.
[MRDRapportRemoteControlServiceConnection] Connecting remoteControlChannel to <%@->%@/%@>...
[MRDRapportRemoteControlServiceConnection] Disconnecting remoteControlChannel from <%@->%@/%@>...
[ProximityController] lockscreen: %@, controlcenter: %@
[ProximityController] Removing all nearby devices because screen off.
[MRDAVOutputContextManager] Returning active outputContext %@ with devices: %@ for: %@
[MRDAVOutputContextManager] Returning reserved outputContext %@ for: %@
[MRDAVOutputContextManager] Reusing inactive outputContext %@ for: %@ (%@)
[MRDAVOutputContextManager] Created new outputContext %@ for: %@
[MRDAVOutputContextManager] Failed to create new outputContext for: %@
[MRDAVOutputContextManager] Re-building output context state in response to mediaserverd death
[MRDAVOutputContextManager] Attempted to process output context with nil contextID: %{public}@
[MRDAVOutputContextManager] OutputContext became active %@ with: %@
[MRDAVOutputContextManager] OutputContext became active %@ with local: %@
[MRDAVOutputContextManager] OutputContext became inactive %@
[ReconnaissanceSession] Beginning search with timeout %f
[ReconnaissanceSession] Cancelling search for session %{public}@
[ReconnaissanceSession] Session timed out after %f seconds
[ReconnaissanceSession] Found route matching query: %@
[LocalDeviceCommitManager] Eventually commit with reason %@...
[LocalDeviceCommitManager] Not committing %@ because buddy is not engageOnActivate
[LocalDeviceCommitManager] Not committing %@ because Not multiplayer
[LocalDeviceCommitManager] Not committing %@ because Home Theater secondary
[LocalDeviceCommitManager] Not committing %@ because airplayActive
[LocalDeviceCommitManager] Not committing %@ because containsLocalDevice
[LocalDeviceCommitManager] Not committing %@ because localDevice part of another topology modification
[LocalDeviceCommitManager] Not committing %@ because not leader of a %@ cluster
[LocalDeviceCommitManager] Error %@ commiting local device for %@
Requesting client %@ to begin loading browsable content
Client %@ finished loading browsable content with error: %@
Client %@ not available. Enqueuing beginLoading message
Client %@ now available. Dequeuing beginLoading message
Client %@ not available even though it can be now playing app
Clearing beginLoading message for client %@
Failed to launch application with bundle ID %{public}@. Dropping initiate playback message.
Warning: cannot handle initiate playback message without a bundle ID.
Error preparing client %{public}@ for browsable content message relay.
Beginning task assertion for client %@ in preparation for playback initiated by the browsable content system.
Failed to launch %@ for relayable browsable content message %{public}@.
Warning: could not relay browsable content message. No client found for bundle ID %@.
Error preparing client %@ for playback initialization.
Warning: no client found for bundle ID %@. Dropping initiate playback message.
Sending queued initiate playback message %@ to client %@.
Sending queued relayable message %@ to client %@
Browsable Content Server: Taking process assertion for %@.
Unable to take task assertion for %@.
[RemoteControlDiscoverySession] Applied %@ sourced values from outputDevice %@:%@
[RemoteControlDiscoverySession] Added Fields: %{public}@
[RemoteControlDiscoverySession] Removed Fields: %{public}@
[RemoteControlDiscoverySession] Updated Values: %{public}@
[HostedDiscoverySession] Caching outputDevices %@ for %@
[HostedDiscoverySession] Caching endpoints %@ for %@
[HostedDiscoverySession] Restoring outputDevices %@ for %@
[HostedDiscoverySession] Restoring endpoints %@ for %@
[ExternalDeviceConnection(Server)] Added gamecontroller with deviceID: %llu
[ExternalDeviceConnection(Server)] Setting new voice recording state: %@ on client: %@
Failed to make endpoint due to no qualified group leader in devices: %{public}@
Cannot computed expected groupID suffix (ie contextID) for localDevice, ignoring until next update
%{public}@ - Endpoints changed
%{public}@
Error preparing statement to insert auth token
Error binding statement to database query
Error executing statement to insert auth token
Failed to finalize database statement
Error preparing statement to delete expired auth tokens
Failed to bind date param
Error executing statement to delete expired tokens
WARNING: could not enable WAL option on database file
WARNING: could not enable WAL option on database connection
Error reading from auth token database
Error stepping database statement
Error preparing database statement: %s
Error stepping database statement: %s
Error finalizing database statement %p
[MRDIDSRemoteControlService] Removing DiscoveryChannel for client %@ with error %@
[MRDIDSRemoteControlService] Created new DiscoveryChannel %@ for device=%@
[MRDIDSRemoteControlService] Created new RemoteControlChannel %@ for device=%@ destination=%@ session=%@ with options=%u
[MRDPersonalDeviceController] Restoring personal device state for devices %@. Remaining time %f.
[MRDPersonalDeviceController] Recalculating state for reason: %@
[MRDPersonalDeviceController] New personal device %@ recently attached.
[MRDPersonalDeviceController] Timeout reached. Personal devices %@ are now stale.
Attempted to enqueue disallowed background task %@
[MRDTransaction] New Transaction: %p %@ for playerPath %@
[MRDTransaction] Dealloc Transaction: %p %@ for playerPath %@
[MRDTransaction] Canceling %@ transaction for playerPath %@
[MRDTransaction] %@ %@ received interrupted/invalid connection
[MRDTransaction] %p %@ received bytes %ld
[MRDTransaction] %p %@ received end signal received
%p No memory available, waiting %lf and requesting again
%p Checking for available memory
[MRDTransaction] %p %@ could not extract connection to query
[MRDTransaction] %p %@ could not create reply to qeury
[MRDTransaction] %p %@ querying for %ld bytes
[MRDTransaction] %p %@ ending with %ld bytes remaining
Starting MediaRemote server
MediaRemote server exiting
[MRTransactionServer] Unhandled transaction name: %ld
[MRTransactionServer] Unhandled Transaction delegate callback
[MRTransactionServer] Memory Usage: %ld + %ld -> %ld
[MRTransactionServer] %@ received keys %@
[MRTransactionServer] %@ %@ sending client %@ subscribed packets %@
[MRTransactionServer] %@ received ack
[MRTransactionServer] %@ sending client %@ subscribed packets %@
Cluster requires primary but none was found. Members: %{public}@
[MRUIControllerConnection] <%p> Initializing.
[MRUIControllerConnection] <%p> Dealloc.
[MRUIControllerConnection] <%p> Creating service connection.
[MRUIControllerConnection] <%p> BSServiceConnection invalidate.
[MRUIControllerConnection] <%p> BSServiceConnection interrupt. Re-activating.
[MRUIControllerConnection] <%p> BSServiceConnection activated.
[MRUIControllerConnection] <%p> No endpoint found. Please check that MediaRemoteUI is installed and registered with launchd.
[IDSCompanionRemoteControlService] Connecting discoveryChannel to <%@> for reason <%@>...
[IDSCompanionRemoteControlService] No device avaiable to connect discoveryChannel to <%@> for reason <%@>
[IDSCompanionRemoteControlService] Connecting remoteControlChannel to <%@-%@>...
[IDSCompanionRemoteControlService] Disconnecting remoteControlChannel from %@-%@...
WHAPRO: ConnectionState for device %{public}@ change from %{public}@ to %@ in %{public}f seconds
<%{public}@> Exiting connection attempt due to disconnection request for device %@{public}. %{public}@
<%{public}@> Failed to initialize IO streams for device: %{public}@. %{public}@
<%{public}@> Error loading device info for device %{public}@. %{public}@
<%{public}@> Failed to register custom origin for device %{public}@. %{public}@
<%{public}@> Failed to re-register custom origin for device %{public}@. %{public}@
<%{public}@> Exiting connection attempt due to disconnection request for %@{public}. %{public}@
<%{public}@> Failed to sync client state for device %{public}@. %{public}@
Device disconnect called with error: %{public}@ for external device: %{public}@
Attempting to reconnect to external device %{public}@ (retry %llu out of %llu)
Not attempting reconnect of external device %{public}@ (error = %{public}@, recovery behavior = %{public}s, attempt count = %llu)
Connection error while sending custom data message. %{public}@
Connection error while sending ping message for device %{public}@. %{public}@
Error setting volume %@
Error getting volume %@
Error getting volume control capablities %@
Error setting listening mode %@
Error removing from parent group %@
Unknown message type=%ld identifier=%@ replyIdentifier=%@ attempting to be handled for device %{public}@
Connection error while sending begin lyrics event message. %{public}@
<%{public}@> Calling pairingCallback
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback with %@
Calling Client Registered pairing allowed Callback with %@
Calling Client Registered custom data Callback
<%{public}@> Volume did change to %lf for outputDevice: <%{public}@>
Received command %{public}@ for path %{public}@ for device %{public}@
unable to get an output device identifier, device will not be added to protobuf's grouped devices: %{public}@
Warning: Unknown device network ID
Failed to archive device info
Failed to write device info file
Failed to unarchive device info data
[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:
[MRDNowPlayingOriginClient] Application Activity %{public}@ already set
[MRDNowPlayingOriginClient] Removing nowPlayingClient %{public}@ for %{public}@
[MRDNowPlayingOriginClient] _reevaluateStateWithReason %@
[MRDNowPlayingOriginClient] ActiveNowPlayingClient changed from %{public}@ to %{public}@
[MRDNowPlayingOriginClient] Taking activeNowPlayingClient transaction for %{public}@
[MRDNowPlayingOriginClient] Removing activeNowPlayingClient transaction for %{public}@
[MRDNowPlayingOriginClient] ActiveNowPlayingPlayersClients changed from %{public}@ to %{public}@
[MRDNowPlayingOriginClient] Creating nowPlayingClient for %{public}@
[MRDNowPlayingStateObserver] Registering for Now Playing Updates
[MRDNowPlayingStateObserver] Unregistering for Now Playing Updates
[MRDNowPlayingStateObserver] Registering for volume control updates
[MRDNowPlayingStateObserver] Unregistering for volume control updates
[MRDNowPlayingStateObserver] Begin Coalescing for %@ for %lf seconds
[MRDNowPlayingStateObserver] End Coalescing %@ for %@
[MRDNowPlayingStateObserver] Removing item %@ item from contentItems because playbackQueue contains item for %@
[MRDNowPlayingStateObserver] Updating playbackQueue %@for %@
[MRDNowPlayingStateObserver] Setting playbackQueue %@ for %@
[MRDNowPlayingStateObserver] Merging item %@ into playbackQueue for %@
[MRDNowPlayingStateObserver] Merging item %@ into contentItems for %@
[MRDNowPlayingStateObserver] Adding contentItems %@ for %@
[MRDNowPlayingStateObserver] Setting contentItems %@ for %@
[MRDNowPlayingStateObserver] Adding items %@ into contentItemArtworkUpdates for %@
[MRDNowPlayingStateObserver] Setting items %@ into contentItemArtworkUpdates for %@
[MRDNowPlayingStateObserver] Updating supportedCommands %@ for %@
[MRDNowPlayingStateObserver] Setting supportedCommands %@ for %@
[MRDNowPlayingStateObserver] Updating playerProperties %@ for %@
[MRDNowPlayingStateObserver] Setting playerProperties %@ for %@
[MRDNowPlayingStateObserver] Updating playbackState %@ for %@
[MRDNowPlayingStateObserver] Setting playbackState %@ for %@
Successfully picked route named %@. (error = %@)
Failed to pick route named %@. (error = %@)
Error unpicking AirPlay routes. %{public}@
VAD port status changed to %i for route %@
MRMediaRemoteRouteStatus changed to %li for route %@
[MediaServerAVRoutingDataSource] AVAudioSessionMediaServicesWereReset notification received -- re-registering notifications and resetting cache
[MRDLockScreenController] Setting playerPath from %{public}@ to %{public}@
[MRDLockScreenController] Deferring setting playerPath from %{public}@ to %{public}@ because changeType is <%{public}@> and lock screen is <%{public}@>
[MRDLockScreenController] Restoring defered playerPath from %{public}@ to electedPlayerPath %{public}@
[MRDLockScreenController] Reevaluating shouldShowLockScreen for reason %@
[MRDLockScreenController] Delaying deactivation of lockScreen
[MRDLockScreenController] LockScreen now showing empty controls. Will be dismissed when lock screen is no longer visible
[MRDLockScreenController] Activating lockScreenAssertion
[MRDLockScreenController] Deactivating lockScreenAssertion
[MRDLockScreenController] lockScreenAssertion error %{public}@
[MRDCLC] <%p> Initializing for origin-%@-%ld.
[MRDCLC] <%p> Deallocating.
[MRDCLC] <%p> Re-evaluate for origin-%@-%ld because %@.
[MRDCLC] <%p> Setting timer to disconnect origin-%@-%ld in %.2lf seconds.
[MRDCLC] <%p> Disconnecting origin-%@-%ld.
[MRDCLC] <%p> Will maintain connection for origin-%@-%ld because %@.
[MRDCLC] <%p> Pause pending disconnection for origin-%@-%ld because %@.
[MRDCLC] <%p> Cancel pending disconnection for origin-%@-%ld because %@.
[MRDCLC] <%p> Scheduling playback timer for %.2lf seconds.
[MRDCLC] <%p> Cancelling playback timer.
[MRDAVHostedExternalDevice] %{public}@ is tombstoned, rejecting new XPC connection %{public}@
[MRDAVHostedExternalDevice] %{public}@ is accepting new XPC connection %{public}@ %@
[MRDAVHostedExternalDevice] Client %{public}@ is setting the following registered callbacks on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is setting the following notifications on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is subscribing to the following player paths on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to disconnect from external device using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to unpair from external device using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to set output device volume to %f using output device %{public}@ on hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to modify hosted endpoint %{public}@ (adding=%{public}@, removing=%{public}@,  setting=%{public}@,)
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to create hosted endpoint %{public}@ with output devices: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to send %llu bytes of custom data with name %{public}@ using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] [Client %{public}@ is requesting to ping external device with timeout %f using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] %{public}@ check for local route because TV join.
[MRDAVHostedExternalDevice] %{public}@ check for local route because TV leave.
[MRDAVHostedExternalDevice] %{public}@ Checking for match of endpoint: %{public}@ and active TV: %{public}@
[MRDAVHostedExternalDevice] %{public}@ maintaing no localRoute for %{public}@ because %{public}@
[MRDAVHostedExternalDevice] %{public}@ removing localRoute for %@ because %{public}@
[MRDAVHostedExternalDevice] %{public}@ adding localRoute for %@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ connection state did change to %{public}@ with error %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ device name did change to %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did receive %llu bytes of custom data with name %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ volumeCapabilities did change to %{public}@ for outputDevice %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ volume did change to %f for outputDevice %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did add output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did change output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did remove output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ client did disconnect: %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint <%{public}@> reevaluating volume control because %{public}@ changed from <%{public}@> to <%{public}@>
[ExternalDeviceServer] Removing television endpoint for client %{public}@
Received device info: %{public}@
[ExternalDeviceServer] ERROR: client is incompatible
[ExternalDeviceServer] ERROR: client not authorized
[ExternalDeviceServer] Unknown message attempting to be handled
[ExternalDeviceServer] didReceiveApplicationClientStateDidChange %@
[ExternalDeviceServer] didReceiveClientDidUnregister %@
[ExternalDeviceServer] didReceivePlayerDidUnregister %@
[ExternalDeviceServer] didReceiveNowPlayingClientChange %@
[ExternalDeviceServer] didReceiveNowPlayingPlayerChange %@
[ExternalDeviceServer] didReceiveVolumeControlCapabilitiesChange %@
[ExternalDeviceServer] didReceiveDefaultSupportedCommandsChange %@
[ExternalDeviceServer] didReceiveCoalescedNowPlayingStateChange %@
[ExternalDeviceServer] Exchanging %llu bytes of crypto pairing data with client "%{public}@"
[ExternalDeviceServer] ERROR: Unable to exchange pairing data. Unknown client for crypto pairing session: %{public}@
[ExternalDeviceServer] Remote Passcode: %@
[ExternalDeviceServer] Returning OSStatus code %d back to %{public}@
[ExternalDeviceServer] ERROR: Unable to send pairing failure message. Unknown client for crypto pairing session: %{public}@
[ExternalDeviceServer] Successfully opened security session with peer %{public}@
[ExternalDeviceServer] Client connected: %{public}@
[ExternalDeviceServer] MRExternalClientConnection did disconnect client: %{public}@ with error %{public}@
[ExternalDeviceServer] Client %{public}@ is not compatible. Protocol version %llu is less than the required minimum version %llu
[ExternalDeviceServer] Client %{public}@ is not compatible. TVRemote application version %llu is less than the required minimum version %llu
[ExternalDeviceServer] Setting game controller input mode to %{public}@
[ExternalDeviceServer] Error unpairing device: %{public}@ error: %{public}@
[ExternalDeviceServer] System pairing removed: %{public}@ -- Attempting to disconnect...
[ExternalDeviceServer] No active connection to disconnect
[ExternalDeviceServer] No TVRemote pairing found coresponding to removed system pairing
Checking if device with managedConfigDeviceID, %{public}@, allowed to connect
No managedConfig allow list found. Allowing all devices
Device with managedConfigDeviceID, %{public}@, allowed: %d
[ExternalDeviceServer] Error deleting pairing identity. %{public}@
[ExternalDeviceServer] Adding television endpoint %{public}@
[ExternalDeviceServer] Removing television endpoint %{public}@
[ExternalDeviceServer] Registering HID device with descriptor: %{public}@
[ExternalDeviceServer] Registered new virtual touch device with ID %llu
[ExternalDeviceServer] Failed to register new virtual touch device
[ExternalDeviceServer] Registering new virtual voice input device with descriptor: %{public}@
[ExternalDeviceServer] Error registering new virtual voice input device. %{public}@
[ExternalDeviceServer] Successfully registered new virtual voice input device with ID %u
[ExternalDeviceServer] Changing name to %{public}@
[ExternalDeviceServer] Could not set device name to %{public}@
[ExternalDeviceServer] Sending custom data %{public}@ to endpoint %{public}@
[ExternalDeviceServer] Received request to modify output context: %{public}@
[ExternalDeviceServer] Set output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Add output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Remove output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Error adding devices to output context: %{public}@
[ExternalDeviceServer] Error removing devices from output context: %{public}@
[ExternalDeviceServer] Error setting devices on output context: %{public}@
[ExternalDeviceServer] Successfully executed output context modification.
[ExternalDeviceServer] Failed to search for devices pertinent to output context modification: %{public}@
[ExternalDeviceServer] Completed recon session: %{public}@
[ExternalDeviceServer] Reseting Facade
[ExternalDeviceServer] Facading NowPlayingClient from %@ to %@
Failed to create external device transport for %{public}@, group leader: %{public}@
- Selecting devices (non-default selection options) from: %{public}@
- Selection options: %{public}@
- Updating preferred group leader %{public}@ based on better criteria: %{public}@
- Updating preferred group leader because found a remote host: %{public}@
- Updating preferred group leader because locally hosting the group
-- Final preferred group leader: %{public}@ based on criteria: %{public}@
Skipping invalid output device: %{public}@
[HostedRoutingController] Updating shared discovery session discovery mode to %{public}@ for: %{public}@
Ignoring uncommitted output device: %@ (%@)
Recieved Now Playing message %llu from client %@ : %@
Now Playing message with id %llu not handled.
PID Mismatch: Client %{public}@ is trying to make a nowPlayingClient with a different pid %d
PID Mismatch: Client %{public}@ is trying to making a nowPlayingClient with a different bundleID %{public}@
Resolving %{public}@ -> %{public}@ for client %@
Resolving Existing %{public}@ -> %{public}@
Client %{public}@ requesting to set active origin to %{public}@
Re-registering origin %{public}@
Client %{public}@ requesting to %{public}@ itself as now playing app override
Client %{public}@ requesting to %{public}@ now playing app override to %{public}@
Could not set override client. Client %{public}@ not found.
Unable to set can be now playing app. No now playing client found for %@
Unable to set can be now playing player. No player client found for %@
Setting hardware remote behavior to %{public}@ for client %{public}@
Unable to set playback state. No now playing client found for %@
Received video thumbnails request from %{public}@ for %{public}@
Relaying video thumbnails request to %{public}@
Client not found for video thumbnails request
Received audio amplitude samples request from %{public}@ for %{public}@
Relaying audio amplitude samples request to %{public}@
Client not found for audio amplitude samples request
Received lyrics event from client %{public}@ and sending to %{public}@
Relaying lyrics event to %{public}@
No client available for lyrics event
%{public}@ is requesting to resolve playerPath %{public}@ -> %{public}@
Tried to set now playing app without entitlement. Ignoring.
ERROR: now playing client could not be found for setting supported commands
Unable to set properties from message %@. No player client found.
Unable to set properties from message %@. No origin client found for %@
%{public}@ Unable to get audio format content info for origin: %{public}@ | client %{public}@
Posting contentItemChange for path %{public}@ to xpcClient %{public}@ %{public}@
Posting %@
Posting %@ because activePlayerPath changed from <%{public}@> to <%{public}@>
Posting %@ with <%@>
Registering origin %@
Unregistering origin %{public}@
Removing active origin %{public}@. Setting active origin to the local one.
Failed to open NowPlayingCap: %{public}@
Setting active origin from %@ to %@
Persisting active origin %@
Failed to initialize temporary directory
[MRDNowPlayingClient] Setting pid for %{public}@ to %d
[MRDNowPlayingClient] Timeout trying to pid for %{public}@
[MRDNowPlayingClient] CanBeNowPlaying changed to %{public}@ for %{public}@
[MRDNowPlayingClient] Creating playerClient for %{public}@
[MRDNowPlayingClient] ActiveNowPlayingPlayer changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] DisplayName changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] ParentAppBundleIdentifier changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] BundleIdentifierHierarchy changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] Visibility changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] TintColor changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] AppIcon changed from %{public}@ to %{public}@ for %{public}@
Received AppleLanguagePreferencesChangedNotification. Will tell libxpc to kill us once we're clean. Will invalidate MROSTransactions.
Received AppleLanguagePreferencesChangedNotification. Did tell libxpc to kill us once we're clean. Did invalidate MROSTransactions.
Failed to setup AppleLanguagePreferencesChangedNotification handler, status: %d
XPC Error: %s
Stopping MediaRemote server
Adding client %{public}@
Removing client %{public}@
Posting Notification %{public}@
UserInfo %{public}@
Posting Custom Notification %{public}@ to %{public}@
Custom UserInfo %{public}@
CompanionLinkClient invalidation
CompanionLinkClient interrupted
Error activating CompanionLinkClient %{public}@
Client with pid %ld opened connection.
XPC message with id %lu not handled.
Received message %llu from client %@ : %@
Server message with id %llu not handled.
NULL source ID string sent to %@
Received request to distribute notification "%{public}@" from %{public}@
Client %{public}@ attempted to post an illegal notification (%{public}@); ignoring.
Client: %{public}@ Set system volume: setting volume to %f
Client: %{public}@ Adjust system volume: stepping volume by %f
No app bundle ID provided in call to GetMediaAppIsInstalled message
Unable to wake system app [failed to launch] %{public}@
Unable to wake system app [failed to find client]
Unable to bless app [sync task assertion acquisition failed]
Unable to bless app [task assertion failed]
Unable to bless app [bless failed]
** Beginning Diagnostic Collection **
** Collecting Diagnostic for Main Server **
** Collecting Diagnostic for UI Server **
** Collecting Diagnostic for Now Playing Server **
** Collecting Diagnostic for Remote Control Server **
** Collecting Diagnostic for Browsable Content Server **
** Collecting Diagnostic for External Device Server **
** Collecting Diagnostic for Routing Server **
** Collecting Diagnostic for Virtual Audio Input Server **
** Collecting Diagnostic for Transaction Server **
** Diagnostic Complete **
Pairing Handler register failed with routeUID: %@
Pairing Handler unregister failed with routeUID: %@
Pairing Handler complete failed with routeUID: %@
Client %{public}@ invalidated.
Pidversion out of date for %d
No process for pid %d
Unable to get boot session ID
Restoring client pids %{public}@
Restoring expected client pids %{public}@
Resetting client and expected pids
SIGTERM received, preparing to shut down
[MRDAutoConnectionController] Begin DiscoverySession %@ because %@
[MRDAutoConnectionController] End DiscoverySession %@
[MRDAutoConnectionController] Removing outdated endpoint <%@> (<%@>)
[MRDAutoConnectionController] Removing endpoint <%@> (<%@>)
[MRDElectedPlayerController] Failed to connect to proactive endpoint %@ with error %@. Reset to local.
[MRDElectedPlayerController] Ignoring activeSystemEndpointDidChange for %@ because a new change for %@ was received
[MRDElectedPlayerController] Reevaluating electedPlayer event = %{public}@, reason =  %{public}@
[MRDElectedPlayerController] ElectedPlayer changed from <%@> to <%@> changeType=<%{public}@>, event=%{public}@, eventReason=%{public}@, selectionReason=%{public}@
[MRDElectedPlayerController] ElectedPlayer remained <%@> eventReason=%{public}@, selectionReason=%{public}@
[MRDElectedPlayerController] Manually setting changeType to %{public}@ because previousPlayerPath %{public}@ does not exist anymore
[MRDElectedPlayerController] Manually setting changeType to %{public}@ because changeType uninitialized and playerPath %{public}@ is nil and previousPlayerPath %{public}@ is still valid
[AirPlayRemoteControlService] Starting AirPlay remote control service
[AirPlayRemoteControlService] Stopping AirPlay remote control service
[MRDRemoteControlService] observed new activePairedDevice <%@>, creating IDSRemoteControlService...
[MRDRemoteControlService] Found activePairedDevice <%@>, creating IDSRemoteControlService...
[MRDUIClient] <%p> Dealloc.
[MRDUIServer] Rejecting connection from unknown client.
[MRDUIServer] Rejecting connection from non-entitled client %@.
[MRDUIServer] Accepting connection from client %@
[MRDUIServer] Adding client %@
[MRDUIServer] Removing client %@
[MRDITS] <%p> Initializing
[MRDITS] <%p> Deallocating.
[MRDITS] <%p> Last playing date for %@ is distantPast, setting new timer
[MRDITS] <%p> Scheduling idle playback timer for %.2lf seconds - %@
[MRDITS] <%p> Cancelling idle playback timer of playerPath %@
[MRDITS] <%p> Playback state changed to playing for %@, not simplifying topology
[MRDITS] <%p> Could not find endpoint for playerPath <%@> - error: %@
[MRDITS] <%p> Letting endpoint be hosted by a smart device - %@
[MRDITS] <%p> Could not remove devices <%@> from existing endpoint (%@) - error: %@
[MRDITS] <%p> Removed devices from existing endpoint %@: <%@>
[MRDITS] <%p> Not trying to recreate WHA group; Endpoint (%@) only had one smart device (%@)
[MRDITS] <%p> Topology not simplified, error: %@
[MRDITS] <%p> Topology simplified, new endpoint: %@
Initialization sleep assertion %@
Could not take sleep assertion
Taking sleep assertion %@ for a max of %lf seconds
Releasing sleep assertion %@
Could not release sleep assertion %@
Received %@ signal in order to start prewarming...
Waiting for Buddy in order start prewarming
%{public}@ Topology change failed with error: %{public}@
%{public}@ disconnecting with error %{public}@
%{public}@ Added localDevice %{public}@ to outputContext %{public}@
%{public}@ Removed groupLeader %{public}@ from outputContext %{public}@
%{public}@ Removed localDevice %{public}@ from outputContext. Clearing all localOrigin nowPlayingData
%{public}@ Removed localDevice %{public}@ from outputContext %{public}@
%{public}@ Local device changed clusterType to: %u
%{public}@ Found endpoint containing local in discovery that matches cluster type: %{public}@
%{public}@ Timed out waiting for local device to appear with expected clusterType in discovery
%{public}@ GroupLeader %{public}@ failed verification for reason: %{public}@ on context %{public}@
%{public}@ Verification failed because groupLeader was found in another outputContext: %{public}@
%{public}@ Calling %lu completions - Original reason: %{public}@
%{public}@ Ignoring request to commit in an invalid state (no designatedGroupLeader) reason: %{public}@
%{public}@ Already committing output device: %{public}@ to: %{public}@. New reason: %{public}@
%{public}@ Committing output device: %{public}@ to: %{public}@ because %{public}@
%{public}@ Failed to commit output device: %{public}@ to: %{public}@ because %{public}@ - %{public}@
%{public}@ Skipping commit of output device: %{public}@ to: %{public}@ because %{public}@
%{public}@ Begin Forwarding Origin Data from %{public}@ to %{public}@ for outputContext %{public}@
%{public}@ Destroying playerPaths for origin: %{public}@, client: %{public}@
%{public}@ Origin changed while creating player: %{public}@  - Destroying
[ConnectionMonitor] Checked-in connection %@ in %lf seconds
[ConnectionMonitor] Checking connection %@
[ConnectionMonitor] Updated connectionStatus = %@ for %@ after %lf seconds
[ConnectionMonitor] Resumed connection %@ in %lf seconds
[AVRoutingServer] Route change requested for AV server's cached routes with UID %{public}@
[AVRoutingServer] Switching to route with UID %{public}@
[AVRoutingServer] Received output device authorization request: %{public}@ (status = %{public}@)
[AVRoutingServer] Authorization request using saved password for %{public}@: %@
[AVRoutingServer] Authorization token failed for %{public}@ : %@
[AVRoutingServer] User cancelled authorization request for %{public}@
[AVRoutingServer] Responding to authorization request using user entered password for %{public}@: %@
[AVRoutingServer] Authorization token accepted for %{public}@. Updating keychain with new passcode.
[AVRoutingServer] Authorization token failed for %{public}@
[AVRoutingServer] Client %{public}@ changed route discovery mode to %{public}@.
[AVRoutingServer] %{public}@ requesting to pick route: %{public}@, options: %{public}@
[AVRoutingServer] %{public}@ requesting to pick route with UID: %{public}@, options: %{public}@
[AVRoutingServer] Beginning AV reconnaissance session for route with UID: %{public}@
[AVRoutingServer] AV reconnaissance session found route with UID %{public}@ : %{public}@
[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ -- %{public}@
[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ (unknown error)
[AVRoutingServer] Did not receive any pickable route information from the XPC message.
[AVRoutingServer] Requesting to clear all AirPlay route passwords...
[AVRoutingServer] Error %ld trying to delete passwords
[AVRoutingServer] No passwords to delete
[AVRoutingServer] Error %ld trying to query passwords
[AVRoutingServer] Requesting to unpick AirPlay routes
[AVRoutingServer] Received SetApplicationPickedRoutes message with route descriptions: %{public}@
[AVRoutingServer] Could not find endpoints for migration between %{private}@ and %{private}@.
[AVRoutingServer] Failed to remove output device UIDs: %{public}@ from parent group with error: %{public}@
[AVRoutingServer] No group leader, nothing to remove for: %{public}@
[AVRoutingServer] Failed to find external device for outputDeviceUID: %{public}@
[AVRoutingServer] Available external devices: %{public}@
[AVRoutingServer] Ignoring VAD port authentication failure.
[AVRoutingServer] Output device connection failure: %{public}@
[AVRoutingServer] Handling authorization request with custom callback for route %{public}@
[AVRoutingServer] Custom authorization callback returned for route %{public}@
[AVRoutingServer] Prompting user with authorization request route %{public}@
[AVRoutingServer] Ignoring authorization request because a password dialog is already being shown.
[AVRoutingServer] Ignoring authorization request because the request to pick indicated that we should ignore authorization failures.
[AVRoutingServer] Updating system route discovery mode to %{public}@
[AVRoutingServer] Discovery enabled. Starting transaction: %{public}@
[AVRoutingServer] Discovery ended. Clearing transaction %{public}@
[AVRoutingServer] Suppressing cluster connection error. %.2f since last alert
[AVRoutingServer] Error connecting to cluster member: %{public}@
[AVRoutingServer] Timed out waiting for action on cluster connection error for route: %{public}@
[AVRoutingServer] Failed to open TVSettings: %{public}@
[AVRoutingServer] AirPlay Error %ld: %{public}@: %{public}@
[AVRoutingServer] AirPlay Error %ld: Ignoring because error for "%{public}@" because the status code has not changed and already prompted user.
[AVRoutingServer] RouteUIDs ignored for port status failures: %{public}@
[AVRoutingServer] <%{public}@: %p> Dismissing active dialog <%{public}@: %p - %{public}@: %{public}@> to present new dialog: <%{public}@: %p - %{public}@: %{public}@>
[AVRoutingServer] Failed to pick route %{public}@
[AVRoutingServer] Error getting AirPlay security settings dictionary (OSStatus = %d)
Resolving endpoint for output device UIDs %{public}@
Returning endpoint with only a subset of specified output devices:
    - %{public}@
    + %{public}@
Resolved to endpoint: %{public}@
Setting output devices on endpoint: %{public}@
Error adding devices to endpoint:%{public}@ error:%{public}@
Could not make endpoint for output devices: %{public}@
Predicting endpoint for output device UIDs %{public}@
[MRDPPFSQS] <%p> Initializing
[MRDPPFSQS] <%p> Deallocating.
[MRDPPFSQS] %@ - Reported reason: %@
[MRDPPFSQS] Will send PPFSQ to <%@>
[MRDPPFSQS] Won't send PFSQ for ASE change - endpoint: <%@>, playerPath:<%@>, isLocal:<%@>
[MRDPPFSQS] First MRD launch after boot
[MRDPPFSQS] <%p> Received %@ signal. Will send PPFSQ to Local System Media App
[MRDPPFSQS] <%p> Setup is not needed. Will send PPFSQ to Local System Media App
[MRDPPFSQS] <%p> Waiting until device setup is finished to send PPFSQ
[MRDPPFSQS] First MRD launch after boot, device is not an AudioAccessory
[iOSSim Data Source] Failed to load playback queue: %{public}@
POWER: Did recieve power callback %{public}@-%{public}@
POWER: Responding to power callback %{public}@-%{public}@ in %lf seconds
[MRDHostedExternalDeviceManager] Created new hostedExternalDevice=%{public}@, endpoint=%{public}@
[MRDHostedExternalDeviceManager] Removing hostedExternalDevice=%{public}@, endpointIdentifier=%{public}@ reason=%{public}@
[MRDHostedExternalDeviceManager] Removing hostedExternalDevice=%{public}@, outputDeviceIdentifier=%{public}@ reason=%{public}@
[VirtualAudioInputServer] Created new device with descriptor: %{public}@
[VirtualAudioInputServer] Notifying %{public}llu endpoints of newly connected device
[VirtualAudioInputServer] Error creating virtual input device. No descriptor data provided.
[VirtualAudioInputServer] Disconnecting virtual device with ID %{public}d
[VirtualAudioInputServer] Notifying %{public}llu endpoints of disconnected device
[VirtualAudioInputServer] Couldn't find device with ID %{public}d
[VirtualAudioInputServer] An unknown device disconnected
[VirtualAudioInputServer] Recording state changed for device with ID %{public}d
[VirtualAudioInputServer] Recording state change ignored: unknown device ID %{public}d
[MRDVolumeController] Setting AVSC volume to %f
[MRDVolumeController] Setting AVSC isMuted to %@
[MRDVolumeController] Error setting AVSC isMuted: %@
[MRDVolumeController] AVAudioSessionMediaServicesWereReset notification received -- re-registering notifications
[MRDVolumeController] Reloading volume for reason: %@
Attempting to activate remote alert handle.
Creating remote alert handle for remote view controller: %{public}@
Remote alert handle did activate.
Remote alert handle did deactivate.
Remote alert handle did invalidate with error: %@
Client switched route discovery mode to: %lu
Client switched output device discovery mode to: %lu
Unable to bless client [sync task assertion acquisition failed] %{public}@
Failed to create assertion: %{public}@
Unable to bless client [bless failed] %{public}@
Set AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute for command %{public}@
Unable to relay message with id %lu
[MRDMediaRemoteClient] Restoring connection to <%@> with notification <%@> for <%@>
[MRDMediaRemoteClient] Restoring connection to <%@> with notification <%@>
[MRDMediaRemoteClient] Restoring connection with notification userInfo %@
Unable to create IOHIDUserDevice
WARNING: Failed to handle HID report for device ID %llu. (kernel error = %d)
[MRDDisplayMonitor] Layout Changed %@
[MRDIDSServiceConnection] %@ Setting IDSDevice from %@ to %@
[MRDIDSServiceConnection] %@ Added handler for %@ %@
[MRDIDSServiceConnection] Added destination handler for type=%@, destination=%@, session=%@, %@
[MRDIDSServiceConnection] Remove handler for type=%@, %@
[MRDIDSServiceConnection] Remove destination handler for type=%@, destination=%@, session=%@, %@
[MRDIDSServiceConnection] %@ Message received<%@>: data=%@ type=%@ destination=%@ session=%@ replyID=%@
[MRDLockScreenContentController] failed to retrieve suggestions with error %@
Error blessing %@ for playback initialization. %@
[MRUIController][D] <%p> Initializing direct controller.
[MRUIController][D] <%p> Dealloc.
[MRUIController][D] <%p> Initializing XPC controller.
[MRUIController][D] <%p> Deallocated while still holding lock screen assertion.
[MRUIController][D] <%p> Deallocated while still holding quick controls assertion.
[MRUIController][D] <%p> Deallocated while still holding screen mirroring assertion.
[MRUIController][D] <%p> XPC interrupted.
[MRUIController][D] <%p> XPC invalidated.
[MRUIController][D] <%p> Server proxy error %@.
identifier
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>mediaremoted</string>
<key>CFBundleIdentifier</key>
<string>com.apple.mediaremoted</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5229e</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5229e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mediaremoted</string>
<key>com.apple.BluetoothServices</key>
<true/>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.airplay.receiver.mediaremote.services</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.allow-wake</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appletv.pbs.volume-control</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.managedconfiguration.feature-setting.allowRemoteAppPairing</key>
<true/>
<key>com.apple.mediaremote.nearby-device</key>
<string>YES</string>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.mediaremote.set-now-playing-app</key>
<true/>
<key>com.apple.mediaremote.set-playback-state</key>
<true/>
<key>com.apple.mediaremote.ui-control</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>EthernetMacAddress</string>
</array>
<key>com.apple.private.activitykit.ephemeralActivityRequester</key>
<true/>
<key>com.apple.private.activitykit.unboundedActivityRequester</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
<string>com.apple.private.alloy.mediaremote.v2</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
<string>com.apple.private.alloy.mediaremote.v2</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.sessionkit.custom-platter-target</key>
<true/>
<key>com.apple.private.sessionkit.permitMultipleProcessInputs</key>
<true/>
<key>com.apple.private.sessionkit.sessionRequest</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.proximitycontrol</key>
<true/>
<key>com.apple.proximitycontrol.lockscreenControls</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/</string>
<string>/Applications/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.mediaremoted/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/MediaRemote/</string>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleJPEGDriverUserClient</string>
<string>IOHIDResourceDeviceUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sessionservices</string>
<string>com.apple.mediaremoteui.services</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.ProximityControl.server</string>
<string>com.apple.airplay.apsynccontroller.xpc</string>
<string>com.apple.airplay.receiver.mediaremote.services</string>
<string>com.apple.audio.AudioSession</string>
<string>com.apple.BluetoothServices</string>
<string>com.apple.callkit.callcontrollerhost</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.coremedia.admin</string>
<string>com.apple.coremedia.endpoint.xpc</string>
<string>com.apple.coremedia.endpointuiagent.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.systemcontroller.xpc</string>
<string>com.apple.coremedia.volumecontroller.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.GameController.gamecontrollerd</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.iohideventsystem</string>
<string>com.apple.iokit.powerdxpc</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.PowerManagement.control</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.securityd</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.SharingServices</string>
<string>com.apple.springboard.backgroundappservices</string>
<string>com.apple.springboard.services</string>
<string>com.apple.SystemConfiguration.configd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CoreDuet</string>
<string>com.apple.lockscreen.shared</string>
<string>com.apple.duetexpertd</string>
<string>com.apple.spotlightui</string>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaremote</string>
<string>com.apple.mediaremoted</string>
<string>com.apple.airplay</string>
<string>com.apple.persistentconnection</string>
<string>com.apple.avfoundation</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.avfaudio</string>
<string>com.apple.ids</string>
<string>com.apple.conference</string>
<string>com.apple.facetime.bag</string>
<string>com.apple.da</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AppleJPEGDriverUserClient</string>
<string>IOHIDResourceDeviceUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.sharing.ProximityClient</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.lockScreenContentAssertion</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>modify-calls</string>
<string>access-calls</string>
</array>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.airplay</string>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
g00
application-identifier
com.apple.mediaremoted0 
com.apple.BluetoothServices
com.apple.CompanionLink
com.apple.PairingManager.Read
0(#com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Write
04/com.apple.airplay.receiver.mediaremote.services
0-(com.apple.appletv.pbs.allow-screen-saver
0% com.apple.appletv.pbs.allow-wake
0&!com.apple.appletv.pbs.mediaremote
0)$com.apple.appletv.pbs.volume-control
050com.apple.avfoundation.allow-system-wide-context
083com.apple.avfoundation.allows-access-to-device-list
04/com.apple.avfoundation.allows-set-output-device
com.apple.bluetooth.internal
com.apple.bluetooth.system
com.apple.coreduetd.allow
0E@com.apple.developer.device-information.user-assigned-device-name
0,'com.apple.frontboard.launchapplications
083com.apple.frontboardservices.display-layout-monitor
0-(com.apple.hid.manager.user-access-device
com.apple.itunesstored.private
0IDcom.apple.managedconfiguration.feature-setting.allowRemoteAppPairing
0*#com.apple.mediaremote.nearby-device
YES0(#com.apple.mediaremote.send-commands
0.)com.apple.mediaremote.set-now-playing-app
0-(com.apple.mediaremote.set-playback-state
0% com.apple.mediaremote.ui-control
0/*com.apple.multitasking.unlimitedassertions
0.)com.apple.nano.nanoregistry.generalaccess
0j4com.apple.private.MobileGestalt.AllowedProtectedKeys02
WifiAddress
WifiAddressData
EthernetMacAddress0=8com.apple.private.activitykit.ephemeralActivityRequester
0=8com.apple.private.activitykit.unboundedActivityRequester
0)$com.apple.private.associated-domains
094com.apple.private.coreaudio.borrowaudiosession.allow
04/com.apple.private.coreservices.canmaplsdatabase
00+com.apple.private.hid.client.event-dispatch
0/*com.apple.private.hid.client.event-monitor
com.apple.private.ids.messaging0X.com.apple.private.alloy.avconference.avctester&com.apple.private.alloy.mediaremote.v20
/com.apple.private.ids.messaging.urgent-priority0X.com.apple.private.alloy.avconference.avctester&com.apple.private.alloy.mediaremote.v20Q
com.apple.private.ids.session00.com.apple.private.alloy.avconference.avctester0?*com.apple.private.lockdown.finegrained-set0
NULL/DeviceName072com.apple.private.sessionkit.custom-platter-target
0=8com.apple.private.sessionkit.permitMultipleProcessInputs
00+com.apple.private.sessionkit.sessionRequest
0&!com.apple.private.system-keychain
com.apple.private.tcc.allow0
kTCCServiceMediaLibrary0
com.apple.proximitycontrol
02-com.apple.proximitycontrol.lockscreenControls
083com.apple.rootless.storage.coreduet_knowledge_store
0o:com.apple.security.exception.files.absolute-path.read-only01
/private/var/containers/Bundle/
/Applications/0i;com.apple.security.exception.files.absolute-path.read-write0*(/private/var/tmp/com.apple.mediaremoted/0
@com.apple.security.exception.files.home-relative-path.read-write0W
/Library/MediaRemote/>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist0
4com.apple.security.exception.iokit-user-client-class0
AppleJPEGDriverUserClient
IOHIDResourceDeviceUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
RootDomainUserClient0
i4com.apple.security.exception.mach-lookup.global-name0
com.apple.sessionservices com.apple.mediaremoteui.services"com.apple.powerlog.plxpclogger.xpc@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerGcom.apple.telephonyutilities.callservicesdaemon.neighborhood-activitiesCcom.apple.telephonyutilities.callservicesdaemon.conversationmanager!com.apple.ProximityControl.server&com.apple.airplay.apsynccontroller.xpc/com.apple.airplay.receiver.mediaremote.services
com.apple.audio.AudioSession
com.apple.BluetoothServices$com.apple.callkit.callcontrollerhost&com.apple.commcenter.coretelephony.xpc
com.apple.commcenter.xpc
com.apple.CompanionLink
com.apple.coremedia.admin com.apple.coremedia.endpoint.xpc'com.apple.coremedia.endpointuiagent.xpc'com.apple.coremedia.routediscoverer.xpc&com.apple.coremedia.routingcontext.xpc(com.apple.coremedia.systemcontroller.xpc(com.apple.coremedia.volumecontroller.xpc4com.apple.coremedia.endpointremotecontrolsession.xpc(com.apple.GameController.gamecontrollerd)com.apple.identityservicesd.embedded.auth3com.apple.idsremoteurlconnectionagent.embedded.auth
com.apple.iohideventsystem
com.apple.iokit.powerdxpc
com.apple.mediaremoted.xpc
com.apple.PairingManager
com.apple.PineBoardServices!com.apple.PowerManagement.control
com.apple.SBUserNotification
com.apple.securityd%com.apple.server.bluetooth.le.att.xpc
com.apple.SharedWebCredentials
com.apple.SharingServices+com.apple.springboard.backgroundappservices
com.apple.springboard.services%com.apple.SystemConfiguration.configd0
8com.apple.security.exception.shared-preference.read-only0v
com.apple.CoreDuet
com.apple.lockscreen.shared
com.apple.duetexpertd
com.apple.spotlightui
com.apple.suggestions0
B9com.apple.security.exception.shared-preference.read-write0
com.apple.mediaremote
com.apple.mediaremoted
com.apple.airplay
com.apple.persistentconnection
com.apple.avfoundation
com.apple.coreaudio
com.apple.coremedia
com.apple.avfaudio
com.apple.ids
com.apple.conference
com.apple.facetime.bagcom.apple.da0
*com.apple.security.iokit-user-client-class0
AppleJPEGDriverUserClient
IOHIDResourceDeviceUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
RootDomainUserClient0&!com.apple.security.network.client
0&!com.apple.security.network.server
0)$com.apple.security.ts.mach-task-name
0&!com.apple.sharing.ProximityClient
0-(com.apple.springboard.CFUserNotification
0.)com.apple.springboard.activateRemoteAlert
0-(com.apple.springboard.launchapplications
050com.apple.springboard.lockScreenContentAssertion
0'"com.apple.springboard.remote-alert
0J*com.apple.telephonyutilities.callservicesd0
modify-callsaccess-calls0
fairplay-client
keychain-access-groups09
com.apple.MediaRemote.pairing
com.apple.airplay
apple0
platform-application
seatbelt-profiles0
temporary-sandbox
#(-2;;7
W[_cg
MbP?U
"',16;=BX]bglqv{
#(-27<AFKP
UZ_dinsx
mediaremoted
MRDSwiftStruct
%@-%@-%@-%@-%@-%@
com.apple.mediaremote
type
date
event
eventdescription
selectionreason
eventreason
timesince
changeType
changeTypeDescription
v8@?0
B8@?0
Restoring previous
v12@?0B8
%@ origin registered <%@> (<%@>) 
origin de-registration of <%@> (<%@>) 
personal device was attached
Playback changed for %@
was not playing sort of recently <%lf> seconds ago
was playing recently <%lf> seconds ago
was not <%@> sort of recently <%lf> seconds ago
was <%@> recently <%lf> ago
was not playing recently <%lf> ago and was not <%@> recently <%lf> seconds ago
Could not find origin with deviceUID = <%@>
No %@SystemEndpoint
Internal Setting not set
local activePlayer %@ is playing
Fallback to previous
%@SystemEndpoint changed from <%@> to <%@> with changeType = <%@>, eventType = <%@>, eventReason = <%@>, selectionReason = <%@>
unknown
@"NSDictionary"8@?0
%@ endpoint disconnected and attempting to reconnect
v16@?0@"MRAVEndpoint"8
v24@?0d8@?<v@?B>16
%@Endpoint changed
com.apple.mediaremote.systemendpointcontroller.userselectedtimer
 %@ timeout event %@ after <%lf> seconds 
%@Endpoint timeout imminent
%@Endpoint is playing
%@Endpoint is local
com.apple.mediaremote.systemendpointcontroller.playbacktimer
%@ playback timedout event %@ after <%lf> seconds
com.apple.mediaremote.systemEndpointController.userDefaults.serialQueue
SystemEndpoint
v32@?0@8@"NSDictionary"16^B24
Startup
B16@?0@"MRDeviceInfo"8
ASE moved to another endpoint
StartUp
ConnectionAdded
ConnectionRemoved
UserSelected
UserSelectedTimeout
Playback
PlaybackTimeout
NowPlayingAppRemoved
migrationPlaybackSession
ResolveActiveEndpoint
invalid route error
from external device client
Analytics: 
com.apple.mediaremote.MRDRemoteControlServer
com.apple.mediaremote.MRDMediaRemoteUIService
MULTIPLAYER_CAPACITY_REACHED_TITLE
MULTIPLAYER_CAPACITY_REACHED
v16@?0@"MRCommandResult"8
v20@?0I8@"NSArray"12
com.apple.mediaremote.broadcastcommand.%@
v32@?0@"NSString"8@"MRDRemoteControlContext"16^B24
MRXPC_MESSAGE_ID_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
@"NSData"16@?0@"_MRSendCommandResultMessageProtobuf"8
MRXPC_COMMAND_STATUSES_DATA_KEY
MRXPC_MEDIA_CONTROLS_CONFIGURATION_KEY
MRXPC_MEDIA_CONTROLS_XPC_ENDPOINT_KEY
MRXPC_MEDIA_CONTROLS_STYLE_KEY
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0@"NSError"8
MRXPC_MEDIA_CONTROLS_ROUTE_UID_KEY
MRXPC_MEDIA_CONTROLS_CENTER_KEY
MRXPC_COMMAND_KEY
Pause because migration
v24@?0@"MRDMediaRemoteClient"8@"NSError"16
Did not receive fade out notification
com.apple.mediaexperience.fadeoutappliedforplaybackhandoff
v12@?0i8
MRXPC_RESTRICT_COMMANDS_ARRAY_DATA_KEY
@"NSData"16@?0@"NSData"8
B16@?0@"NSData"8
%@ started playback
phone call began
v16@?0Q8
RestrictedCommandClients Mode - Client not in allow list
FBSOpenApplicationErrorDomain
command<%@>=%@
The app did not launch and set canBeNowPlaying in a timely manner
com.apple.Fuse
com.apple.mediaremoted
B16@?0@"MRDNowPlayingClient"8
B16@?0@"MRCommandInfo"8
com.apple.MediaPlayer.RemotePlayerService
airtunesd
tvairplayd
com.apple.HomePodCannedDemo
coreduetd
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVSystemController_InterruptAudioSessionIDForHandoff
AVSystemController_AppToInterruptCurrentNowPlayingSessionAttribute
AVSystemController_AllowAppToFadeInTemporarilyAttribute
MRXPC_COMMAND_OPTIONS_KEY
Client <%@> missing entitlement needed to send command <%@> to arbitrary apps. Sending to NowPlayingApp instead of <%@>.
MRDBrowsableContentAPICoordinatorPersistence
MRDBrowsableContentAPICoordinatorStoredCaseSensitive
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.mediaremote.remotecontrol.routedcommands
MRDAVRoutingDataSourcePickableRoutesDidChangeNotification
MRDAVRoutingDataSourceExternalScreenDidChangeNotification
MRDAVRoutingDataSourceRouteStatusDidChangeNotification
MRDAVRoutingDataSourceRouteStatusUserInfoKey
MRDAVRoutingDataSourceAVRouteUserInfoKey
MRDAVRoutingCategorySystem
MRDAVRoutingCategoryMedia
com.apple.MRDAVRoutingDataSource.serialQueue
com.apple.MRDUIActivityServer.queue
MediaRemoteUIProcessElectedPlayerChange
MediaRemoteUIProcessElectedPlayerIsPlayingChange
MediaRemoteUIProcessElectedPlayerPlaybackQueueChange
MRUIActivityController
/System/Library/PrivateFrameworks/MediaRemoteDaemonServices.framework/MediaRemoteDaemonServices
subclass must implement
Currently playing %ld %@ streams (max = %ld).
external
origin-%ld %@ (%@)
%@ (%@) + 
%@ on %@
canActivateStreamWithPlayerPath
B24@?0@"NSArray"8@"MROrigin"16
B16@?0@"MRDNowPlayingOriginClient"8
B16@?0@"MRPlayerPath"8
PlayerPath does not take up a slot thus is always allowed to activate
PlayerPath is already active
Number of currently activeStreams (%ld) is less that capacity (%ld) so allowing activation
Already above max capacity. %@
interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath
v24@?0@"MRPlayerPath"8@"NSError"16
%@<%@>
Could not find a best stream to interrupt
bestStreamToInterrupt
@"MRDNowPlayingPlayerClient"16@?0@"MRDNowPlayingOriginClient"8
q24@?0@"MRDNowPlayingPlayerClient"8@"MRDNowPlayingPlayerClient"16
Number of currently activeStreams (%ld) is less that capacity (%ld).
Already playing <%@> to specified device <%@>
willStartingPlaybackToOutputDevicesInterrupt
%@ just started playing
com.apple.mediaremote.%@.%@
v32@?0@"NSNumber"8@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"16^B24
%@ %p {
  playerPath = %@
  player = %@
  canBeNowPlayingPlayer = %@
  transaction = %@
  playbackState = %@
  inferredPlaybackState = %@
  playbackStateHistory = %@
  pictureInPictureEnabled = %@
  supportedCommands = %@
  capabilities = %@
  playbackQueue = %@
  subscriptionController = %@
supportedCommands
playbackQueue
nowPlayingItem
inferred playback state
playback state
playbackQueueCapabilities
q24@?0@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"8@"MRDNowPlayingPlayerClientPlaybackStateSnapshot"16
com.apple.mediaremoted.MRDNowPlayingPlayerClient/%@
true
false
%@-%@
CUBluetoothClient
CoreUtils
v16@?0@"NSData"8
v24@?0@"MRDeviceInfo"8@"NSError"16
<%@ %p "%@">
local.
%@ (pid=%d)
<%@ %p {
  %@-%d
  hasConnected = %@ (%@ %lf seconds ago)
  hasConnectedCompleted = %@ (%@ %lf seconds ago)
  connectionState = %@ (%@ %lf seconds ago)
  registeredCallbacks = %@
  registeredNotifications = %@
  subscribedPlayerPaths = %@
  pendingClientState = %@
  connectionMonitor = %@
B16@?0@"MRAVOutputDevice"8
v32@?0@"MRAVRoutingDiscoverySessionConfiguration"8@"NSArray"16^B24
WakingPlayerPathNotification
<%@ %p{
 hasConnected
    connectionState=%@
    connectionStateError=%@
    name = %@
    endpoint = %@
    volume = %f
    volumeCapabilities = %@
    outputDeviceVolumes = %@
    outputDeviceVolumeCapabilities = %@
    modifications = %@
    discoveryResults = %@
   addedOutputDevices = %@
    changedOutputDevices = %@
    removedOutputDevices = %@
com.apple.mediaremote.MRDIDSService
<%@:%p {
 service=%@
 devices=%@
 messageHandlers = %@
 deviceMessageHandlers = %@
v56@?0@"MRDIDSServiceMessage"8@"NSString"16@"NSString"24@"NSString"32@"NSNumber"40@"NSNumber"48
v64@?0@"MRDIDSServiceMessage"8@"IDSDevice"16@"NSString"24@"NSString"32@"NSString"40@"NSNumber"48@"NSNumber"56
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
messageid
destination
session
data
replyid
v32@?0@?<v@?@"MRDIDSServiceMessage"@"IDSDevice"@"NSString"@"NSString"@"NSString"@"NSNumber"@"NSNumber">8Q16^B24
v32@?0@?<v@?@"MRDIDSServiceMessage"@"NSString"@"NSString"@"NSString"@"NSNumber"@"NSNumber">8Q16^B24
bundleID
audioSessionID
mxSessionIDs
isPlaying
B16@?0@"<MRDNowPlayingDataSourceObserver>"8
<%@, %p: sourceOrigin: %@ - destinationOrigin: %@>
v20@?0I8^{__CFArray=}12
v36@?0^v8I16^{__CFDictionary=}20@?<v@?^{__CFArray=}>28
v24@?0^v8^{__CFError=}16
v32@?0^v8^v16@?<v@?^v^{__CFError=}>24
v24@?0@"MRPlaybackSessionMigrateRequest"8@"NSError"16
v40@?0@"MRPlaybackSession"8@"MRPlaybackSessionMigrateRequest"16@"MRPlayerPath"24@?<v@?@"MRPlaybackSessionMigrateRequest"@"NSError">32
v32@?0^v8^v16@?<v@?^{__CFError=}>24
v40@?0^v8^{__CFError=}16^v24@?<v@?^{__CFError=}>32
%@-%@-%d
MediaPlayback
v32@?0@"NSArray"8@"MRAVEndpoint"16@"NSError"24
AVOutputDeviceDiscoverySession
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
AVOutputContextSetOutputDevicePasswordKey
AVOutputContext
Unknown
SharedAudioPresentation
SharedSystemAudio
SharedSystemScreen
iTunesAudio
Auxiliary
<Unknown>
com.apple.mediaremote.MRDRapportRemoteControlService.workerQueue
com.apple.mediaremote.remotecontrol.connect
destinationGroupUID
v32@?0@"MRDeviceInfo"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
com.apple.mediaremote.remotecontrol.disconnect
MRDRapportRemoteControlService received disconect event
B16@?0@"MRDRapportRemoteControlServiceConnection"8
v24@?0@"MRDeviceInfo"8@"NSDictionary"16
com.apple.mediaremote.remotecontrol.reset
MRDRapportRemoteControlService received reset event
RapportRemoteControlChannel-<%@->%@/%@>
MRDMediaRemoteExternalDeviceServerClientInvalidatedNotification
v16@?0@"NSNotification"8
incomingRapportConnections
incomingRapportConnectionsDescription
source
source=%@(%@) session=%@
ProximityController(%@)
MRDAVOutputContextManagerDidReset
local=%@
active=%@
inactive=%@
reserved=%@
@16@?0@"MRAVOutputContext"8
v16@?0@"NSMutableDictionary"8
@16@?0@"MRAVOutputDevice"8
B16@?0@"NSString"8
B16@?0@"MRAVOutputContext"8
@"MRAVConcreteOutputContext"16@?0@"AVOutputContext"8
@16@?0@"MRAVOutputDeviceDescription"8
AVSystemController_ServerConnectionDiedNotification
AVSystemController_SubscribeToNotificationsAttribute
PBSMediaRemoteServiceDialogOptionTitleKey
PineBoardServices
PBSMediaRemoteServiceDialogOptionPINKey
PBSMediaRemoteServiceDialogOptionMessageKey
PBSMediaRemoteServiceDialogOptionTimeoutKey
TV_REMOTE_AUTHENTICATION_PIN_DIALOG_HEADER
TV_REMOTE_AUTHENTICATION_PIN_DIALOG_MESSAGE
com.apple.mediaremote.%@
  discoveryMode = %@
  idsService = %@
  outputDevices = %@
@"MRAVOutputDevice"16@?0@"IDSDevice"8
MRDAVLocalDeviceCommitManager
MRDAVLocalDeviceCommitManager.serial
Boot
AirplayActiveDidChange
alltopologyChangesFinished-%@
didRemoveLocalDevice
clusterTypeDidChange
v24@?0@"MRAVEndpoint"8@"NSError"16
v16@?0^{__CFError=}8
Dynamic
MRXPC_INDEXPATH_DATA_KEY
v16@?0@"MRDMediaRemoteClient"8
MRXPC_CONTENT_API_MASK_KEY
MRXPC_BUNDLE_ID_ARRAY_DATA_KEY
BrowsableContent playback initiated
Sending initiatePlaybackMessage
MRXPC_BUNDLE_ID_KEY
v16@?0@"NSArray"8
  localEndpointConnection=%@
  discoveryMode=%@
  routingContextID=%@
  avDiscoverySession = %@
  idsDiscoverySession = %@
  localOutputDevice = %@
  unclusteredOutputDevices = %@
  availableOutputDevices = %@
localEndpointConnection
v32@?0@"NSString"8@"NSArray"16^B24
updateFromOutputContext
deviceInfo
reservedOutputContext
addFromOutputContext
v16@?0@"_MRAVOutputDeviceDescriptorProtobuf"8
loadLocalEndpointConnection
com.apple.mediaremote.hostedDiscoverySession/serialQueue
discovery enabled at: %@ (%.0f s ago) until: %@ (duration %.0f s)
discovery never enabled
%@ %p {
    discovery mode = %@
    xpc connection = %@
    pid = %d
    bundle id = %@
    %@
    connection monitor = %@
com.apple.mediaremoted.MRDAVHostedDiscoverySession/%@(%d)
<%@: %p - destination UID=%@ groupID=%@>
NowPlaying 
OutputDevices 
Volume 
Keyboard 
SystemEndpointUpdates 
<%@ %p {
    deviceInfo = %@
    lastSupportedMessageType = %ld
    virtualTouchDevices = %@
    registeredVirtualVoiceInputDevices = %@
    playbackQueueRequests = %@
    sessionPeer = %@
    pinPairingToken = %@
    serverDelegate = %@
    registeredUpdates = %@
    subscribedPlayerPaths = %@
    destinationOutputDeviceUID = %@
    destinationGroupID = %@
    destinationEndpoint = %@
    connection = %@
v16@?0I8I12
v16@?0@"MRPlayerPath"8
MRDExternalDeviceServer.requestConnectedDestinationEndpoint
ExternalDeviceServerDestination
com.apple.TVRemote
FF disabled
deviceInfo==nil
endpoint does not support outputContextSync
v32@?0@"NSNumber"8@"MREmulatedGameController"16^B24
B16@?0@"MRAVDistantOutputDevice"8
v32@?0@"NSString"8@"NSMutableArray"16^B24
@16@?0@"MRAVEndpoint"8
B24@?0@"MRAVEndpoint"8@"MRAVEndpoint"16
@"NSString"16@?0@"MRAVEndpoint"8
INSERT INTO auth_tokens (device_id, auth_token, date_created, expiration_date) VALUES (?, ?, ?, ?);
DELETE FROM auth_tokens WHERE expiration_date < ?;
PRAGMA journal_mode=WAL
PRAGMA user_version;
CREATE TABLE 'auth_tokens' ('id' INTEGER PRIMARY KEY AUTOINCREMENT,'auth_token' TEXT NOT NULL,'date_created' INTEGER,'expiration_date' INTEGER,'device_id' TEXT);
PRAGMA user_version = %d
SELECT auth_token, date_created, expiration_date, device_id FROM auth_tokens;
 Service = %@
 DiscoveryChannels = %@
 RemoteControlChannels = %@
v48@?0@"MRDIDSServiceMessage"8@"IDSDevice"16@"NSString"24@"NSString"32@"NSString"40
v16@?0@"MRDIDSServiceMessage"8
v32@?0@"MRAVOutputDevice"8q16@?<v@?@"NSString">24
IDSRemoteControlChannel-<%@/%@>
Tried to connect to endpoint but its groupLeader changed from %@ to %@
v24@?0q8@?<v@?@"NSString">16
v16@?0@"MRIDSCompanionMessage"8
  client = %@
  transport = %@
  destination = %@
  session = %@
  connectionAttemptDate = %@ (%lf seconds ago)
@16@?0@"NSMutableDictionary"8
New RemoteControlChannel created for destination %@, clearing all previous channels for this destination
v32@?0@"NSString"8@"MRDIDSRemoteControlServiceRemoteControlChannel"16^B24
model
deviceID
AirPlayPortExtendedInfo
kMRDPersonalDeviceControllerPersonalDeviceStateDevicesKey
kMRDPersonalDeviceControllerPersonalDeviceStateDateKey
com.apple.mediaremote.MRDPersonalDeviceController
com.apple.mediaremote.MRDPersonalDeviceController.delegateQueue
Personal devices did change.
Initial load with no persisted state.
com.apple.mediaremote.mrdpersonaldevicecontroller.overridetimer
Timeout reached.
v24@?0^{__CFArray=}8^{__CFError=}16
Companion Link Event
MRXPC_HOMEKIT_IDENTIFIER_KEY
RecentlyPlayedEntries
v32@?0@"NSDictionary"8Q16^B24
q24@?0@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"8@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"16
lastPlayingDate
lastNotPlayingDate
currentPlaybackSessionTypes
supportedPlaybackSessionTypes
currentPlaybackSessionIdentifier
%@-%@-%@-%@-%@-%@(%@)-%@-%@
PLAYING
NOT PLAYING
deviceUID
playerPathDescription
contentItemDescription
 connection = %@
 outputDevice = %@
 session = %@
 error = %@
v16@?0@"MRProtocolMessage"8
%@-%d
MPStoreClientTokenDidChangeNotification
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_NAME
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
MRXPC_TRANSACTION_ENDED
MR_WAIT_FOR_DEBUGGER
com.apple.MediaRemote.transactionServer
v12@?0I8
v32@?0@"NSString"8@"NSString"16^B24
MRIDSCompanionTransportConnection.dealloc
 type = %@
 destination = %@
 isValid = %@
v32@?0@"MRAVOutputDevice"8Q16^B24
TightSyncCluster
com.apple.common
BasicAngelIPC
com.apple.mediaremoteui.services
com.apple.mediaremoteui.ui-service
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.mediaremote.MRDIDSCompanionRemoteControlServiceConnection.workerQueue
v32@?0@"MRIDSCompanionMessage"8@"NSString"16@"NSString"24
%@ %p
IDSWatch: %@
DiscoveryChannelMode: %@
Connections: %@
lastSentEndpoint: %@ (%.1fs ago)
Start
IDS Connected
IDSConnection Disconnected
MRDIDSCompanionRemoteControlService.setConnectionState
IDSDiscoveryChannel
New replacement connection %@-%@ established
v32@?0@"NSString"8@"MRDIDSCompanionRemoteControlServiceConnection"16^B24
Interrupted
Failed to load device info
Failed to create IO Streams
Failed to register custom origin
Failed to re-register custom origin
Failed to sync client state
ConnectOptions
com.apple.MediaRemote.MRExternalDevice.SerialQueue
com.apple.MediaRemote.MRExternalDevice.WorkerQueue
com.apple.MediaRemote.MRExternalDevice.NotificationQueue
<%@:%p %@ transport=%@>
<%@:%p {
    device=%@
    origin=%@
    transport=%@
TransportExternalDevice.connectWithOptions
@"NSError"8@?0
Artifical Delay...
<%@> Connection to: %@ (%@) from client: %@ isRetry: %u allowAuth: %u reason: %@ result: %@ in: %.2f
success
NONE
%@<%@:%@>
Already Connected
Connection already in progress, batching connection attempt %@
AuthUpgrade required
%@:%p
com.apple.mediaremote.transportExternalDevice.connect.%@
qos: %u->%u
Calling batched completions %@
attemptReconnection due to <%@>
authUpgrade
retry
none
TransportExternalDevice.connectWithOptions.attemptReconnection
reason
ping
v24@?0^{__CFError=}8d16
v20@?0f8@"NSError"12
v20@?0I8@"NSError"12
TransportExternalDevice.connectWithOptions.initializeConnection
com.apple.mediaremote.MRExternalDevice/%@(%@)
TransportExternalDevice.connectWithOptions.loadDeviceInfo
deviceInfo response was nil
TransportExternalDevice.connectWithOptions.registerCustomOrigin
TransportExternalDevice.connectWithOptions.reregisterCustomOrigin
TransportExternalDevice.connectWithOptions.syncClientState
v36@?0@"MRPlayerPath"8I16@"NSDictionary"20@?<v@?@"MRCommandResult">28
v24@?0@"MRPlaybackQueue"8@"NSError"16
v24@?0^v8^v16
v24@?0@"MRPlaybackSession"8@"NSError"16
v24@?0@"MRProtocolMessage"8@?<v@?@"MRProtocolMessage">16
event = <playbackQueueRequest>, request = <%@>, error = <%@>
v20@?0^{__CFString=}8B16
event = <%@>, command = <%@>, error = <%@>
Received update from companion
v16@?0@"MRUpdateActiveSystemEndpointResponse"8
None
AutoRetry
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}
handlePlaybackQueueRequest
v40@?0@"MRPlaybackQueueRequest"8@"MRPlayerPath"16@"MRPlaybackQueue"24@"NSError"32
relayPlaybackQueueRequest
requestArtworkForContentItems
v24@?0@"NSArray"8@"NSError"16
@16@?0@"MRContentItem"8
@"MRContentItem"16@?0@"MRContentItem"8
B32@?0@"MRDMediaRemoteClient"8@"NSDictionary"16^@24
identifier
defaultGroupUID
CUPairingManager
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
com.apple.airplay.prefsChanged
com.apple.airplay.active
com.apple.airplay.advertisingDidChange
v24@?0@"CUPairingIdentity"8Q16
com.apple.MRDDeviceInfoDataSource.workerQueue
CurrentDeviceInfo
LOCAL
DeviceInfo.plist
com.apple.mediaremote.MRDNowPlayingOriginClient
<%@ %p origin=%@ %llu nowPlayingClient%s>
%@ %p {
  origin = %@
  deviceInfo = %@
  volume = %f
  volume capabilities = %@
  isMuted = %@
  time since playing = %lf
  is playing = %@
  active now playing client = %@
  override client = %@
  explicit now playing client = %@
  computed now playing client = %@
  inferred now playing client = %@
  app activity = %@
  datasource = %@
  default supportedCommands = %@
q24@?0@"MRDNowPlayingClient"8@"MRDNowPlayingClient"16
all now playing clients = %@
volume
volumeCapabilities
isMuted
computedNowPlayingClient
Updated computedNowPlayingClient.
explicitNowPlayingClient
Updated explicitNowPlayingClient.
inferredNowPlayingClient
Updated inferredNowPlayingClient.
overrideNowPlayingClient
Updated overrideNowPlayingClient.
applicationActivity
Updated applicationActivity.
RemoveAllClients
Removed nowPlayingClient.
v32@?0@"NSString"8@"NSData"16^B24
setNowPlayingDataSource
nowPlayingApplicationDidChange
nowPlayingApplicationPlaybackStateDidChange
nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange
nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange
PlayerPictureInPictureEnabledDidChange
ActivePlayerDidChange
NowPlayingApplicationDidUnregisterCanBeNowPlaying
com.apple.mediaremoted.MRDNowPlayingOriginClient/%@
@16@?0@"MRDNowPlayingPlayerClient"8
addNowPlayingClient-%@
com.apple.mediaremote.originclient.playbacktimer
%@ was not playing recently
%@ is playing for notification <%@>
com.apple.mediaremote.originClient.userDefaults.serialQueue
<%@ %p: %@>
B32@?0@"MRAVOutputDevice"8Q16^B24
Speaker
<%p> %@ {
registeredForNowPlayingCount = %u
registeredForVolumeCount = %u
coalescingStates = %@
  supportedCommands = %lu
 playbackQueue = %@
 playbackQueueCapabilities = %@
  contentItems = %@
  contentItemArtworks = %@
  playbackStateTimestamp = %@ (%lf seconds ago)
    playerProperties = %@
Audio/Video
Default
AirPlayPortExtendedInfo.deviceID
AVAudioRoute_Speaker
AVAudioRoute_Headphone
AVSystemController_CurrentExternalScreenAttribute
AVSystemController_RouteAwayFromAirPlayAttribute
AVSystemController_ExternalScreenDidChangeNotification
AVSystemController_PortStatusDidChangeNotification
AVSystemController_ExternalScreenType_AirPlay
AVSystemController_ExternalScreenType_TVOut
EXTERNAL_DEVICE_AUTHENTICATION_PIN_DIALOG_HEADER
com.apple.mediaremote.MRDLockScreenController
Previous playerPath %@ invalidated
v16@?0^v8
PlayerPath changed from %@ to %@ with changeType %@
visible
NOT visible
Personal devices changed
Lock screen content changed
LayoutChange
ElectedPlayer %@ playback
started
stopped
playerPath
personalDeviceAttached
com.apple.mediaremoted.LockScreen
SBDashBoardNowPlayingAssertionIdentifier
SBSLockScreenContentAssertion
/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
SBSLockScreenContentAssertionSlotPlatter
MRDConnectionLifetimeController-%@-%ld.queue
Init
Device is in use
Device is on cover sheet
Device is playing
Device played recently
Device is part of UserSelected endpoint
Remote device is playing to local device
DeviceInfo changed
Has not played recently
ScreenOff -> CoverSheet
ScreenOff -> InUse
CoverSheet -> InUse
CoverSheet -> ScreenOff
InUse -> ScreenOff
Active endpoint changed
com.apple.mediaremoted.hostedExternalDevice.serialQueue
com.apple.mediaremoted.hostedExternalDevice.callbackQueue
<%@: %p externalDeviceName=%@>
%@: %p {
    external device = %@
    connection state = %@
    last can migrate to local endpoint error = %@
    discovery modes = %@    external device clients = %@
    external output context = %@
    external output context debug = %@
    subscribed playerPaths = %@
    lifetimeController = %@
HostedExternalDevice.connectWithOptions
%@:%p (%@)
No externalDevice available when attempting to %@
TV joined Expanse session.
Not already connected to endpoint
Local device is groupable
B16@?0@"MRDAVHostedExternalDeviceClient"8
v20@?0I8^{__CFError=}12
v20@?0f8@"NSString"12
v20@?0I8@"NSString"12
init
Endpoint is not initialized
v16@?0^{__CFString=}8
v24@?0^{__CFString=}8^{__CFData=}16
groupContainsGroupLeader
groupLeader
topology
com.apple.MediaRemote.MRExternalDeviceRemoteServer.SerialQueue
kAirPlayWHANotification_BreakAwayFromCurrentGroup
@"MRProtocolMessage"16@?0@"MRDExternalDeviceServerClientConnection"8
%@ -> %@
v32@?0@"MRAVRoutingDiscoverySessionConfiguration"8@"MRAVRoutingDiscoverySession"16^B24
com.apple.MediaRemote.Television.KeepAlive10SecondsForUser
v16@?0^{__CFArray=}8
v16@?0@"_MRLyricsEventProtobuf"8
Connection %@ exited in the middle of a migration
v24@?0@"MRPlaybackSessionRequest"8@"MRPlayerPath"16
B16@?0@"MRDExternalDeviceServerClientConnection"8
com.apple.MediaRemote.MRTelevisionRemoteServer.WorkerQueue
com.apple.tvremotecore.xpc
SBSUndimScreen
SpringBoardServices
v24@?0@"CUPairedPeer"8Q16
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_PAIRED_EXTERNAL_DEVICES_DATA
MRXPC_PAIRED_EXTERNAL_DEVICE
MRXPC_EXTERNAL_DEVICE_LOGGING_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
@16@?0@"MRPlayerPath"8
@"MRProtocolMessage"20@?0@"NSString"8I16
v16@?0@"MROrigin"8
v32@?0@"NSString"8@"MRAVOutputDevice"16^B24
v40@?0@"NSDictionary"8@"NSArray"16@"MRAVEndpoint"24@"NSError"32
sendPlaybackSession<%@>
sendPlaybackSessionMigrateBegin<%@>
sendPlaybackSessionMigrateEnd<%@>
%@ from external device client: %@<%@>
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
MRDAVHostedRoutingObserverDiscoveryModeDidChangeNotification
com.apple.mediaremoted.MRDHostedRoutingController/calloutQueue
DiscoverySession=%@
%s is abstract
-[MRDHostedRoutingController createDiscoverySession]
-[MRDHostedRoutingController _onQueue_reloadEndpoints]
-[MRDHostedRoutingController _onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:]
-[MRDHostedRoutingController makeEndpointWithOutputDevices:options:]
MediaRemote
virtual_device
q24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
@"MRAVDistantOutputDevice"16@?0@"MRAVOutputDevice"8
v32@?0@"NSString"8@"MRDAVHostedExternalDevice"16^B24
B16@?0@"<MRDAVHostedRoutingObserver>"8
@"NSString"16@?0@"<MRDAVHostedRoutingObserver>"8
<%@: %p> %@: %@
@"NSString"16@?0@"MRAVOutputDevice"8
@"_MRAVOutputDeviceDescriptorProtobuf"24@?0@"MRAVOutputDevice"8@"MRAVOutputDevice"16
@"MRAVDistantOutputDevice"16@?0@"MRAVDistantOutputDevice"8
ignoreExistingLeader
preferExistingConnection
preferSubscription
preferCloudLibrary
preferHomePod
preferAppleTV
{ %@ }
proxyGroupPlayer
relayable
remoteControllable
existingConnection
appleMusicSubscription
iCloudMusicLibrary
existingLeader
HomePod
AppleTV
existingDesignatedLeader
_MRDActiveOriginDataDefaultsKey
LastNowPlayingAppIsPlayingState
_MRDActivePlayerPathDateDefaultsKey
_MRDAnyNowPlayingAppIsPlayingDefaultsKey
%@ has exited in the middle of a migration attempt
v24@?0@"NSString"8@"NSMutableDictionary"16
v32@?0@"MRContentItem"8@"MRPlaybackQueueRequest"16^B24
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
enable
disable
MRXPC_NOWPLAYING_DISPLAYID_KEY
<unknown>
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_TIMESTAMP
MRXPC_HARDWARE_REMOTE_BEHAVIOR_KEY
MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA
MRXPC_PLAYBACK_STATE_KEY
MRXPC_APP_IS_PLAYING_KEY
@16@?0@"MRDNowPlayingClient"8
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_ARRAY_DATA_KEY
@"NSData"16@?0@"MRDNowPlayingPlayerClient"8
MRXPC_NOWPLAYING_PLAYER_PATH_ARRAY_DATA_KEY
MRXPC_PICTURE_IN_PICTURE_ENABLED_KEY
v16@?0@?<v@?@"NSData"I>8
v24@?0@"NSData"8@"NSError"16
Application <%@> waiting for can be now playing
v20@?0@"NSData"8I16
Unable to register for waking now playing notifications without entitlement: %@
com.apple.mediaremote.waking-now-playing-notifications
MRXPC_AUDIO_FORMAT_CONTENT_INFO
MRXPC_ARTWORK_DATA_KEY
MRXPC_ARTWORK_DIMENSION_WIDTH_KEY
MRXPC_ARTWORK_DIMENSION_HEIGHT_KEY
q24@?0@"MRDNowPlayingOriginClient"8@"MRDNowPlayingOriginClient"16
event %@, eventReason = <%@>, selectionReason = <%@>, mostRecentEVent = %@, mostRecentEventReason = <%@>, mostRecentSelectionReason = <%@>
com.apple.maybePostDistributedNotifications.serialQueue
Playing
Not Playing
burgundy
com.apple.NowPlayingCap
com.apple.mediaremote.MRDNowPlayingClient
<%@ %p playerPath="%@" playerClients=%@>
%@ %p {
    player path = %@
    client = %@
    perPlayerCanBeNowPlaying = %@
    canBeNowPlaying = %@
    canBeNowPlayingTimestamp = %@
    effectiveCanBeNowPlaying = %@
    any player is playing = %@
    has now playing data = %@
    foregrounded = %@
    supportsBackgroundAudio = %@
    active player client = %@
    player clients = %@
effectiveBundleIdentifier
v16@?0@"NSDictionary"8
UIBackgroundModes
audio
displayName
activePlayerClient
MRDMediaRemoteServerClientInvalidatedNotification
MRDMediaRemoteClientUserInfoKey
MRDMediaRemoteDaemonErrorDomain
-init is not supported, use +server
com.apple.mediaremoted.serialQueue
AppleLanguagePreferencesChangedNotification
@"AVOutputContext"8@?0
com.apple.mediaremoted.connection
com.apple.mediaremoted.xpc
v32@?0@"NSNumber"8@"MRDMediaRemoteClient"16^B24
com.apple.mediaremote.mediaremoted.notificationQueue
_MROriginatingNotification
com.apple.MediaRemoteUI
com.apple.mediaremote.companionLinkClient
MRXPC_SOURCE_ID_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_VOLUME_VALUE_KEY
MRXPC_APP_INSTALLED_KEY
MRXPC_BOOL_RESULT_KEY
System Media Wake - %@
Player Service Wake - %@
Bless Request - %@
v16@?0@"_MRDiagnosticProtobuf"8
com.apple.mediaremote.MRDMediaRemoteServer
No diagnostic info
XPC Client: %@:
MediaRemote Client Diagnostic
Collected at: %@
================================================================================
clientDiagnose
MRXPC_ROUTE_UID_KEY
q24@?0@"MRDMediaRemoteClient"8@"MRDMediaRemoteClient"16
com.apple.
kern.bootsessionuuid
Restoring state of client after daemon launch
%@ is invalid. You must provide a type, pid and bundleID with %@.
%@ type=%@
SendCommand
RelayServerMessage
BrowsableContentMessage
Transaction
RestoreState
Wake
Notification
UIPresentation
UnknownType
<%@ (%p): 
allowedAuditTokens: %@
@16@?0@"NSData"8
PID: %i, PID_V: %i
, requester: %@
, date: %@
<MRDAutoConnectionControllerReason %@ - %@>
com.apple.mediaremote.MRDAutoConnectionController
player %@ started playing
q24@?0@"MRAVEndpoint"8@"MRAVEndpoint"16
%@ endpoint changed
autoConnectToEndpoint
autoConnectToEndpoint-%@
endpointChanged
proximity
reconnect
startedPlaying
requestDestination
MRDElectedPlayerControllerEventUserInfoKey
ElectedOrigin changed from <%@> (<%@>) to <%@> (<%@>)
%@ PlaybackQueueChanged
%@ Playback %@
NowPlayingAppChanged to %@
Was %@grounded
Fore
Back
activeSystemEndpointDidChange
ElectedPlayerController failed to connect
v16@?0^{__MRAVEndpointRef=}8
is playing
SiriIntent
was playing recently <%lf> seconds ago but not nowPlayingData
was not playing recently. Last played <%lf> seconds ago
%@ has no activePlayer
%@ is not foregrounded and does not support background audio
%@ has no activeNowPlayingClient
com.apple.mediaremote.electedplayercontroller.playbacktimer
%@ playback timeout event %@ after <%lf> seconds
electedPlayer %@ was not playing recently for event <%@>
electedPlayer %@ is playing for event <%@>
no electedPlayer for event <%@>
OriginChanged
PlaybackChanged
NowPlayingAppChanged
NowPlayingAppForegroundChanged
PlaybackQueueChanged
com.apple.mediaremote.MRDAirPlayRemoteControlService.workerQueue
<%@:%p {
  started = %@
  connections = %@
APReceiverMediaRemoteXPCClient_SetDelegate
@"MRAirPlayTransportConnection"8@?0
AVOutputContextCommunicationChannel.didCloseCommunicationChannel
APReceiverMediaRemoteCommunicationChannel.didCloseCommunicationChannel
/System/Library/PrivateFrameworks/MediaControlReceiver.framework/MediaControlReceiver
MediaRemote Diagnostic
================================================================================
Active Clients
Active Transactions
Current App Activity
Local Now Playing Client
System Media Client
Frontmost Client
Daemon Client
UI Server
UI Activity Info
Now Playing Server
Origin Clients
Active Origin
Elected Player
Elected Player Reason
LockScreen Widget Active
LockScreen Widget Visible
LockScreen Widget PlayerPath
Origin Forwarders
Remote Control Server
Enqueued Commands
Remote Control Contexts
RestrictedCommandClient Mode Restriction
Browsable Content Server
Queued "Initiate Playback" Messages
External Device Server
Connected Devices
Television Endpoints
External Discovery Sessions
RemoteControlService
Local OutputContextDataSource
OutputContexts
BatchedNowPlayingState
Routing Server
System Discovery Mode (Legacy)
AirPlay Security Settings
Local Receiver Pairing Identity
System Active Endpoints
Auto Connecting Endpoints
Auto Connected Endpoints
Proximity Events
Nearby Devices
Medium Devices
Immediate Devices
Proximal Migrating Devices
Hosted Routing
Hosted Discovery Mode
Discovery Sessions
Endpoints:
Endpoint
External Device
v32@?0@"MRAVDistantEndpoint"8Q16^B24
Remaining External Devices
EndpointID: %@
v32@?0@8@"MRDAVHostedExternalDevice"16^B24
Concrete Discovery Session
Stream Count
Virtual Audio Server
Recording Endpoint Clients
Registered Virtual Audio Devices
Transaction Server
Transactions
Used Transaction Memory: %llu bytes
Allowed Transaction Memory: %llu bytes
Transaction Wait Duration: %f seconds
Companion Link
RPDevice<routeID: %@>
Home Users
--------------------------------------------------------------------------------
(None)
%@: %@
    
%@%@:
%@%@
%@(None)
<%@ %p {
  AirPlayService = %@
  CompanionService = %@
  RapportService = %@
  IDSService = %@
com.apple.mediaremote.ui-control
<%@: %p bundleID=%@>
com.apple.MRDUIServer.messageQueue
CXCallObserver
B16@?0@"MRAVEndpoint"8
PreventUserIdleSystemSleep
com.apple.mediaremote.powerassertion
TimeoutActionRelease
MRDAVOutputContextExternalDeviceDiscoveryLocalClusterTypeDidChangeNotification
MRDAVOutputContextExternalDevice.serialQueue
MRDAVOutputContextExternalDevice.workerQueue
MRDAVOutputContextExternalDevice.notificationQueue
startUp
PREWARM-DUMMY-DEVICE
prewarmApp
v32@?0@"MRDMediaRemoteClient"8@"MRPlayerPath"16@"NSError"24
designatedGroupLeader
origin
outputContext
<%@: %p id=%@ leader=%@ origin=%@-%ld originFwd=%@>
<%@: %p {
    designatedGroupLeader = %@
    origin = %d:%@
    originForwarder = %@
    outputContextController = %@
    outputContext = %@
    clientBundleIDs = %@
OutputContextExternalDevice does not have a designatedGroupLeader. (PreviousGroupLeader=%@)
Invalid routingContextID detected. From %@ to %@
handleRemoteCommand
Needed to interrupt %@ in order to continue with command
originCommand
Failed to commit group leader to output context
createPlayerAndWaitForConnection
Could not find xpcClient for playerPath %@
Could not find application in playerPath %@
createPlayerAndWaitForCanBeNowPlaying
Waiting for %@ to set canBeNowPlayingPlayer=YES
createPlayer
CreatePlayer
v24@?0@"NSObject<OS_xpc_object>"8@"NSError"16
@"NSObject<OS_xpc_object>"16@?0@"MRPlayerPath"8
_handlePlaybackQueueRequest
_handlePlaybackSessionRequest
@"MRProtocolMessage"16@?0@"MRPlayerPath"8
v24@?0@"MRProtocolMessage"8@"NSError"16
_handlePlaybackSessionMigrateRequest
interruptBestStreamIfNecessary
_handlePlaybackSessionMigrateBeginRequest
_handlePlaybackSessionMigrateEndRequest
setOutputDeviceVolume
Attempting to set and add/remove devices at the same time, which is unsupported
modifyOutputContext
Failed to find devices with UIDs: %@
v32@?0@"NSString"8@"MRAVConcreteOutputDevice"16^B24
MRDAVOutputContextExternalDevice<%@>
%@:%@:%p
OutputContextExternalDevice.connectWithOptions
%@ %@
Local device changed clusterType in discovery
Local device changed clusterType to %u
External device is invalid (no designatedGroupLeader)
OutputContextExternalDevice-%@-%@:%@<%@>
BYSetupAssistantFinishedDarwinNotification
/System/Library/PrivateFrameworks/SetupAssistant.framework/SetupAssistant
BYSetupAssistantNeedsToRun
com.apple.MediaRemote.connectionMonitor
<%@ %p : %@>
    stauts = %@
    currentMessageCount = %lu
    totalMessageCount = %lu
    lastMessageSent = %f seconds ago
    lastStatusCheck = %f seconds ago
    lastStatusChange = %f seconds ago
    pendingBarrierCompletion = YES
    paramters = {%lu x %f}
%@:%@-%d
XPCConnectionBarrier
Running
Suspended
com.apple.airplay.password
MostRecentlyUsedAVOutputDeviceUIDs
MRDRoutingServerAirplayActiveDidChange
com.apple.mediaremote.routingServer.operationQueue
Restore
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
v16@?0@"NSString"8
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_OPTIONS_KEY
v24@?0@"MRDAVRoute"8@"NSError"16
MRXPC_ROUTE_VOLUME_CONTROL_CAPABILITIES_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_AIRPLAY_SEC_SETTINGS_DATA_KEY
MRXPC_CUSTOM_XPC_ENDPOINT_KEY
MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY
MRXPC_AIRPLAY_LEADER_TYPE
requestID
MRXPC_ENDPOINT_LEADER_OPTIONS_KEY
v20@?0@"MRAVEndpoint"8I16
_handleStartNowPlayingSession
v32@?0@"MRPlayerPath"8@"MRDeviceInfo"16@"NSError"24
Returning local origin because device requires command redirection
%@<%@> looking for localDevice with groupID=%@
Rejecting endpoint %@ because localDevice %@ isAirPlayReceiverSessionActive=NO
Rejecting endpoint %@ because endpointGroupID %@ != %@
Discovered local device on endpoint: %@
Failed to query output context for local device
Failed to remove local device from existing context
_handleStopNowPlayingSession
_handleResumeNowPlayingSession
com.apple.mediaremote.routingServer.getDeviceUID
MRXPC_ROUTING_CONTEXT_UID_KEY
MRXPC_SOURCE_ENDPOINT_UID_KEY
MRXPC_MIGRATE_REQUEST_DATA_KEY
MRXPC_DESTINATION_ENDPOINT_UID_KEY
groupDevicesAndSendCommand
Analytics: Group devices and send message
createHostedEndpointForDevices
v16@?0@"MRAVOutputDevice"8
com.apple.mediaremote.removeFromParentGroup
com.apple.mediaremote.routingServer.getExternalDevice
MRXPC_ENDPOINT_UID_KEY
MRXPC_EXTERNAL_DEVICE_LISTENER_KEY
_handleModifyOutputContextMessage
MRXPC_MESSAGE_CUSTOM_ID_KEY
MRXPC_CONTEXT_MODIFICATION_DATA_KEY
ContextID=%@ %@
B16@?0@"MRAVConcreteOutputContext"8
Failed to create output context with UID=%@
v16@?0@"MSVSystemDialogResponse"8
AIRPLAY_PIN_ALERT_TITLE
AIRPLAY_PASSWORD_ALERT_TITLE
AIRPLAY_PIN_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_PASSWORD_ALERT_MESSAGE_FORMAT_%@
CANCEL
com.apple.mediaremoted.MRDAVRoutingServer
AIRPLAY_GENERIC_ERROR_ALERT_TITLE
AIRPLAY_CLUSTER_ATV_ALERT_RELAYFAILED_TITLE
AIRPLAY_CLUSTER_ATV_ALERT_IPALIASING_MESSAGE
AIRPLAY_CLUSTER_ATV_ALERT_RELAYFAILEDMULTIDFSNETWORK_MESSAGE
AIRPLAY_CLUSTER_ATV_ALERT_MESSAGE
Cluster connect error
AIRPLAY_ATV_CLUSTER_TRY_AGAIN
AIRPLAY_ATV_CLUSTER_CHANGE_DEFAULT_OUTPUT
prefs:root=DefaultAudioOutput
com.apple.TVSettings
AIRPLAY_BUSY_ATV_ALERT_TITLE
AIRPLAY_BUSY_ALERT_TITLE
AIRPLAY_BUSY_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_OUT_OF_RANGE_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_NOT_CONNETED_ALERT_MESSAGE_FORMAT_%@
AIRPLAY_GENERIC_ALERT_MESSAGE_FORMAT_%@
APReceiverMediaRemoteXPCClient_CopyProperty
AirPlaySecuritySetting
password
createHostedEndpointForOutputDeviceUIDs
Modifying output context: %@
setOutputDevices failed
Discovering endpoint with output context: %@
Discovered hosted endpoint in %.2f s: %@
Failed to discover endpoint with contextID: %@ in %.2f s
Unable to discovery any of the given output devices
Relaying command to cluster leader: %@
Remote createHostedEndpoint finished with groupUID: %@, error: %@
v24@?0@"NSString"8@"NSError"16
B16@?0@"MRAVOutputDeviceDescription"8
MRDAVRoutingServer/resolveEndpoint
B16@?0@"MRDMediaRemoteClient"8
AVOutputDeviceAuthorizationSession
AVOutputDeviceAuthorizationTokenTypePIN
AVOutputContextManagerOutputDeviceKey
AVOutputContextManagerFailureReasonKey
AVOutputContextDeviceConnectionFailureReasonDeviceInUse
AVOutputContextDeviceConnectionFailureReasonDeviceOutOfRange
AVOutputContextDeviceConnectionFailureReasonDeviceNotConnectedToInternet
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailedMultiDFSNetwork
AVOutputContextDeviceConnectionFailureReasonInfraRelayFailed2GHzNetwork
AVOutputContextManagerOutputContextDidFailToConnectToOutputDeviceNotification
AVOutputContextManager
FBSOpenApplicationOptionKeyPayloadURL
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
AIRPLAY_PASSCODE_ALERT_PLACEHOLDER
AIRPLAY_PASSWORD_ALERT_PLACEHOLDER
RequestingAuthorizationToken
ReceivedAuthorizationToken
Retried
Completed
Cancelled
Failed
com.apple.siri.client-state-changed
%@ ASE Change
AudioAccessory Boot
proactivePrepareForSetQueue
AFInstanceContext
/System/Library/Frameworks/AssistantServices.framework/AssistantServices
AFNotifyGetEffectiveNotificationName
AFNotifyObserver
Siri Activation
CanSleep
WillSleep
WillPowerOn
B24@?0@"NSString"8@"MRDAVHostedExternalDevice"16
undiscoverable endpoint
Endpoint no longer is discoverable
disconnected
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
  artworkCache = %@
q24@?0@"MRDPlaybackQueueArtworkCacheSize"8@"MRDPlaybackQueueArtworkCacheSize"16
B16@?0@"MRDPlaybackQueueArtworkCacheSize"8
<%@:%p> {
  cache = %@
%lf x %lf
PBS.%@
AVSystemController_FullMuteAttribute
AVSystemController_SystemVolumeDidChangeNotification
AVSystemController_FullMuteDidChangeNotification
AVSystemController_CurrentRouteHasVolumeControlDidChangeNotification
AVSystemController_AudioCategoryNotificationParameter
com.apple.siri
MusicUIServiceNowPlayingViewController
com.apple.MusicUIService
MusicUIServiceMediaControlsViewController
MusicUIServiceLanguageOptionsViewController
MusicUIServiceMediaControlsMediumConfidenceViewController
MRDMediaRemoteClientDidConnect
MRDMediaRemoteClientDidInvalidate
MRDMediaRemoteClientDeclaringAirplayActiveDidChange
com.apple.mediaremote.%@.%@.%@-%d
r*16@?0@"NSString"8
com.apple.mediaremote.%@.xpcTargetQueue
serialQueue
com.apple.mediaremote.send-commands
com.apple.AssistantServices
com.apple.lskdd
com.apple.mediaremote.nearby-device
com.apple.mediaremote.request-bless
com.apple.mediaremote.set-now-playing-app
com.apple.mediaremote.set-default-supported-commands
com.apple.mediaremote.restrict-command-clients
com.apple.security.exception.mach-lookup.global-name
com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Read
com.apple.PairingManager.Write
com.apple.PairingManager
%@-%ld
<%@ %p, bundleIdentifier = %@, pid = %ld>
<%@ %p {
    bundle identifier = %@
    pid = %ld
    euid = %ld
    xpc connection = %@
    connection monitor = %@
    current task assertion = %@
    assertions = %@
    route discovery mode = %@
    application picked routes = %@
    hardware remote behavior = %@
    has requested legacy nowPlayingInfo = %s
    has requested supported commands = %s
    declaringAirplayActive = YES
    subscribedWakingPlayerPaths = %@
    playbackQueueRequests = %@
com.apple.iapd
com.apple.iap2d
v16@?0@"MSVTaskAssertion"8
sendRemoteControlCommand
Redirecting command to local origin legacy handler. Command will be re-emitted under origin containing the local device: %@
Redirecting command to remoteEndpoint containing localDevice
Sending remote control command %@
 host process: %@(%d)
RequestPlaybackQueue
BeginLoadingBrowsableContent
%llu
Relaying XPC message %@ to client %@
MRXPC_ERROR_CODE_KEY
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSNumber"8@"NSValue"16^B24
ReportDescriptor
DisplayIntegrated
ProductID
VendorID
MRDisplayMonitorLayoutDidChange
MRDisplayMonitorDisplayDidChangeNotification
com.apple.mediaremote.MRDDisplayMonitor
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
Display%@
LockScreen%@grounded
LockScreen%@Visible
ControlCenter%@Visible
FBSDisplayLayoutMonitor
FBSDisplayLayoutMonitorConfiguration
FBSDisplayLayoutElementLockScreenIdentifier
FBSDisplayLayoutElementControlCenterIdentifier
com.apple.mediaremote.MRDIDSServiceConnection
v32@?0@"MRDIDSServiceMessage"8@"NSString"16@"NSString"24
 deviceUID = %@
 device = %@
 service = %@
 destinationMessageHandlers = %@
 responseMessageHandlers = %@
 deviceMessageHandler = %@
 invalidationHandler = %@
 connectionHandler = %@
Device Connection was manually reset by the peer
Device fell out of IDS service
default
v16@?0@"MRMediaSuggestionRequest<MRMediaSuggestionRequestConfigurable>"8
v24@?0@"NSDictionary"8@"NSError"16
B24@?0r*8@"NSObject<OS_xpc_object>"16
A reply object could not be created.
A reply connection could not be obtained.
MRDLaunchApplicationWithReason
com.apple.mediaservicesbroker.app
com.apple.SoundScapes
MediaPlayer
Burgundy
com.apple.Music
Podcasts
com.apple.podcasts
post-launch setup for  %@
com.apple.MediaRemote.command
invoked.notify.client
%@.%@.%@.%@
%@.%@.%@
%@.%@
v24@?0@"BSProcessHandle"8@"NSError"16
launchAppAndWaitForXpcConnection
Application <%@> waiting for xpcConnection
launchAppAndWaitForCanBeNowPlaying
Application <%@> waiting for CanBeNowPlaying
FallbackIdentifier-%d
SBSCopyFrontmostApplicationDisplayIdentifier
FBSOpenApplicationOptions
FBSOpenApplicationService
AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute
<%@ %p, command = %@, %@
, commandID = %@
, remote control interface = %@
, appOptions = %ld
, path = %@
, unresolvedPath = %@
<%@ %p, command = %@, %@
, commandID = %@
, remote control interface = %@
, appOptions = %ld
, path = %@
, unresolvedPath = %@
, options = %@
com.apple.BTAvrcp
com.apple.rcd
com.apple.AVRCP
<%@ %p, command = %@, routedToApp = %@>
-[MRDAVRoute initWithDictionary:]
com.apple.mediaremoted.UIController.%p
<%@ %p outputDevice = %@>
RouteUID
RouteName
RouteRequiresAirPlayPIN
PortHasPassword
Wireless
AirTunes
Bluetooth
CarPlay
RouteType
AVAudioRouteName
AVOutputDevice
com.apple.amp.mediaremote
MRDSystemEndpointEntry
MRDAVSystemEndpointController
MRDRedirectionCacheEntry
MRDRemoteControlServer
MRDPhoneCallObserverDelegate
NSObject
MRDXPCMessageHandling
MRDDiagnosticCollecting
MRDVolumeController
MRDBrowsableContentAPICoordinator
MRDRemoteControlContext
MRDAVRoutingDataSource
MRDUIActivityServer
MRUIServerClientObserver
MRLockScreenUIServerXPCProtocol
MRQuickControlsUIServerXPCProtocol
MRScreenMirroringQuickControlsUIServerXPCProtocol
MRUIContextServerXPCProtocol
MRDHIDEventManager
MRDSystemHIDEventManager
MRDProcessHIDEventManager
MRDStreamCapacityManager
MRDStreamCapacityManagerAdditions
MRDNowPlayingPlayerClient
MRDNowPlayingPlayerClientPlaybackState
MRDNowPlayingPlayerClientPlaybackStateSnapshot
MRDBonjourRemoteControlService
NSNetServiceDelegate
MRDAVHostedExternalDeviceClient
MRXPCConnectionMonitorDelegate
MRAVDistantExternalDeviceClientProtocol
MRDAVHostedExternalDevicePendingClientState
MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications
MRDIDSService
IDSServiceDelegate
MRDIDSServiceMessage
MRDNowPlayingDataSourceApplication
MRDNowPlayingDataSourceSession
MRDNowPlayingDataSource
MRDOriginForwarder
MRDOutputDeviceRoutingDataSource
MRDRapportRemoteControlService
MRDRapportRemoteControlServiceConnection
NSSecureCoding
NSCoding
MRDProximityController
MRNowPlayingControllerDelegate
MRDAVOutputContextManager
MRDPinPairingDialog_ATV
MRDIDSDiscoverySession
MRDAVReconnaissanceSession
MRDAVLocalDeviceCommitManager
MRAVClusterObserver
MRDBrowsableContentServer
MRDRemoteControlDiscoverySession
MRExternalDeviceTransportConnectionDelegate
MRDAVHostedDiscoverySession
MRAVDistantRoutingDiscoveryServiceProtocol
MRDAVHostedRoutingObserver
MRDExternalDeviceServerClientConnection
MREmulatedGameControllerDelegate
MRDAVHostedRoutingService
NSXPCListenerDelegate
MRDAVHostedDiscoverySessionDelegate
MRDAVHostedRoutingController
MRDExternalDeviceCredentialDatabase
MRDIDSRemoteControlService
MRProtocolClientConnectionDelegate
MRDIDSRemoteControlServiceDiscoveryChannel
MRDIDSRemoteControlServiceRemoteControlChannel
MRDIDSRemoteControlServiceRemoteControlChannels
MRDVirtualAudioInputServerDevice
MRDAVRouteExtendedInfo
MRDPersonalDeviceController
MRDExternalDeviceHomeServer
MRDExternalDeviceHomeServerRecentlyPlayedEntry
MRDIDSTransport
MRDBackgroundTasks
MRTransaction
MRDTransactionServer
MRTransactionDelegate
MRDIDSTransportConnection
MRDAVRemoteControlClusterOutputDevice
MRDPinPairingDialog
MRUIServerProtocol
MRUIClientProtocol
MRDUIControllerConnection
MRDIDSCompanionRemoteControlService
NSStreamDelegate
MRDIDSCompanionRemoteControlServiceConnection
MRDTransportExternalDevice
MRJSONTransportExternalDevice
MRHID
MRDNowPlayingPlaybackQueueServer
MRDDeviceInfoDataSource
MCProfileConnectionObserver
MRDNowPlayingOriginClient
MRDNowPlayingDataSourceObserver
MRDDeviceInfoDataSourceDelegate
MRDMediaServerAVRoute
MRDNowPlayingStateObserver
MRDNowPlayingObserverState
MRDMediaServerAVRoutingDataSource
MRDPinPairingDialog_CFUN
MRDLockScreenController
MRDPersonalDeviceControllerDelegate
MRDLockScreenContentControllerDelegate
MRDLockScreenAssertion
MRDConnectionLifetimeController
MRDAVHostedExternalDevice
MRExpanseManagerObserver
MRDConnectionLifetimeControllerDataSource
MRDConnectionLifetimeControllerDelegate
MRAVDistantExternalDeviceServiceProtocol
MRDExternalDeviceRemoteServer
MRCryptoPairingSessionDelegate
MRDRemoteControlServiceDelegate
MRDExternalDeviceServerClientConnectionDelegate
MRDNowPlayingStateObserverDelegate
MRDPinPairingDialogDelegate
MRDSleepObserverDelegate
MRDTextEditingServiceDelegate
MRDServerMessageProxy
MRDHostedRoutingController
MRDHostedExternalDeviceManagerDelegate
MRDHostedRoutingControllerAdditions
MRDNowPlayingServer
MRDLockScreenControllerDelegate
MRDElectedPlayerControllerDelegate
MRDProximityControllerDataSource
MRDNowPlayingClientDelegate
MRDNowPlayingOriginClientDelegate
MRDNowPlayingPlayerClientDelegate
MRDNowPlayingServerResult
MRDNowPlayingClient
MRDMediaRemoteServer
MRDVirtualAudioInputServerDelegate
MRDPhoneCallControllerDelegate
MRDTaskAssertion
MRDCommandClientRestriction
NSCopying
MRDAutoConnectionControllerReason
MRDAutoConnectionController
MRDElectedPlayerController
MRDAirPlayRemoteControlService
AVOutputContextCommunicationChannelDelegate
APReceiverMediaRemoteCommunicationChannelDelegate
MRDDiagnostic
MRDRemoteControlService
MRDAirPlayRemoteControlServiceDelegate
MRDBonjourRemoteControlServiceDelegate
MRDRapportRemoteControlServiceDelegate
MRDIDSCompanionRemoteControlServiceDelegate
MRDIDSRemoteControlServiceDelegate
MRDRemoteControlServiceAdditions
MRDUIClient
MRUIServerXPCProtocol
MRUIClientXPCProtocol
MRLockScreenUIClientXPCProtocol
MRQuickControlsUIClientXPCProtocol
MRScreenMirroringQuickControlsUIClientXPCProtocol
MRDUIServer
MRDPhoneCallObserver
CXCallObserverDelegate
MRDIdleTopologySimplifier
MRDIDSServerClientConnection
MRDSleepAssertion
MRDAVOutputContextExternalDevice
MRXPCConnectionMonitor
MRDAVRoutingServer
MRDAVSystemEndpointControllerDelegate
AVOutputDeviceAuthorizationSessionDelegate
MRDProactivePrepareForSetQueueSender
AFNotifyObserverDelegate
MRDiOSSimulatorNowPlayingDataSource
MRDSleepObserver
MRDHostedExternalDeviceManager
MRDVirtualAudioInputServer
MRDPlaybackQueue
MRDPlaybackQueueArtworkCache
MRAdditions
MRDPlaybackQueueArtworkCacheSize
MRDMediaServerVolumeController
MRDMediaRemoteUIService
SBSRemoteAlertHandleObserver
MRDMediaRemoteClient
MRDVirtualTouchDevice
MRDDisplayMonitor
MRDIDSServiceConnection
MRDRouteAuthorizationRequest
MRDUIClientMessageForwarder
MRDUIClientBSMessageForwarder
MRDUIClientXPCMessageForwarder
MRDLockScreenContentController
MRDPairingHandler
MRDRemoteControlCommand
NSMutableCopying
MRDMutableRemoteControlCommand
MRDRoutedRemoteControlCommand
MRDAVRoute
MRDInitiatePlaybackMessage
MRDUIControllerProvider
MRDUIController
MRDXPCUIController
MRLockScreenUIControllable
MRUIControllable
MRQuickControlsUIControllable
MRScreenMirroringQuickControlsUIControllable
MRDExternalDeviceAuthTokenRecord
MRDMutableExternalDeviceAuthTokenRecord
MRDOutputDeviceRoute
MRDAVOutputDeviceRoute
T@"<MRUIServerXPCProtocol>",R,N
T@"IDSService",R,N,V_idsService
MRHIDTouchEventValue
T@"MRDCommandClientRestriction",C,N,V_commandClientsRestriction
T#,R
T@"MRDNowPlayingPlayerClient",&,N,V_pushStateActivePlayerClient
T@"<MRDAVSystemEndpointControllerDelegate>",W,N,V_delegate
T@"MROrigin",&,N,V_customOrigin
T@"<MRDBonjourRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSArray",&,N
T@"<MRDConnectionLifetimeControllerDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_activeClients
T@"<MRDElectedPlayerControllerDelegate>",N,V_delegate
T@"NSArray",C,N,V_nearbyDevices
T@"<MRDHostedExternalDeviceManagerDelegate>",W,N,V_delegate
T@"NSArray",R,N
T@"<MRDIDSRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSDate",R,N,V_expirationDate
T@"<MRDLockScreenControllerDelegate>",N,V_delegate
TB,N,V_pendingBarrierCompletion
T@"<MRDNowPlayingOriginClientDelegate>",W,N,V_delegate
TI,N,V_hostedRouteDiscoveryMode
T@"<MRDNowPlayingStateObserverDelegate>",W,N,V_delegate
_activityServer
T@"<MRDPhoneCallObserverDelegate>",W,N,V_delegate
_apiCoordinator
T@"<MRDProximityControllerDataSource>",W,N,V_dataSource
_avOutputDevice
T@"<MRDRemoteControlServiceDelegate>",W,N,V_delegate
_canMigrateToLocalEndpointError
T@"<MRDVirtualAudioInputServerDelegate>",W,N,V_delegate
_cancelCallback
T@"<MRLockScreenUIControllable>",&,N,V_uiController
_client
T@"<MRUIClientProtocol>",W,N,V_target
_connectedExternalDeviceClients
T@"<MRUIServerProtocol>",R,N
_deviceInfoData
T@"<NSObject>",&,N,V_notificationToken
_discoveryModes
T@"BKSApplicationStateMonitor",&,N,V_appStateMonitor
_displayMonitor
T@"BSServiceConnection<BSServiceConnectionClient>",R,N,V_serviceConnection
_expirationDate
T@"CUPairingManager",&,N,V_pairingManager
_fbsDisplayMonitorConfiguration
T@"IDSDevice",&,N
_handleDeviceInfoUpdateMessage:
T@"MRAVConcreteRoutingDiscoverySession",&,N,V_avDiscoverySession
_hasLockScreenControlsAssertion
T@"MRAVDistantEndpoint",R,N,V_endpoint
_initWithLabel:
T@"MRAVOutputContext",&,N,V_outputContext
_messageHandler
T@"MRAVOutputDevice",&,N,V_designatedGroupLeader
_networkService
T@"MRAVRoutingDiscoverySession",&,N,V_silentDiscoverySession
_nowPlayingApplicationDisplayID
T@"MRAirPlayTransportConnection",&,N,V_localEndpointConnection
_onQueue_originClientForOrigin:
T@"MRClient",&,N
_onQueue_setActivePlayerClient:
T@"MRClient",R,N,V_destinationClient
_origin
T@"MRContentItem",&,N,V_cachedNowPlayingContentItem
_overrideClient
T@"MRContentItem",R,N
_pairingManager
T@"MRDAVHostedExternalDevicePendingClientState",&,N,V_pendingClientState
_persistConnectionRecordsToDisk
T@"MRDAVHostedRoutingService",R,N,V_hostedRoutingService
_pinKey
T@"MRDAVRoute",R,N,V_route
_playerPathForNowPlayingClient:
T@"MRDAVRoutingDataSource",R,N,V_routingDataSource
_query:
T@"MRDAVSystemEndpointController",R,N,V_systemEndpointController
_rapportService
T@"MRDBonjourRemoteControlService",&,N,V_genericNetworkService
_readLegacyDeviceInfoIdentifier
T@"MRDBrowsableContentAPICoordinator",R,N,V_apiCoordinator
_resolveReason:
T@"MRDDeviceInfoDataSource",&,N,V_deviceInfoDataSource
_sendEndpoint:toClient:options:
T@"MRDDisplayMonitor",R,N
_shouldSendCompanionLinkMessage
T@"MRDExternalDeviceHomeServerRecentlyPlayedEntry",&,N,V_lastSentEntry
_source
T@"MRDHostedRoutingController",R,N,V_hostedRoutingController
_storePassword:forOutputDevice:
T@"MRDIDSDiscoverySession",&,N,V_idsDiscoverySession
_supportedRemoteControlCommands
T@"MRDIDSServerClientConnection",&,N,V_client
_termSigHandler
T@"MRDIDSService",R,N,V_mrService
_txtDataChanged
T@"MRDIDSServiceConnection",R,N,V_connection
_updateSystemRouteDiscoveryMode
T@"MRDLockScreenAssertion",&,N,V_legacyAssertion
_volumeCallback
T@"MRDLockScreenController",R,N,V_lockScreenController
_wantsOutputDeviceNotifications
T@"MRDMediaRemoteClient",&,N,V_frontmostClient
activeClientPID
T@"MRDMediaRemoteClient",&,N,V_overrideClient
addArtworkFromItem:fromRequest:
T@"MRDMediaRemoteClient",&,N,V_systemMediaClient
addVolumeEvent:
T@"MRDMediaRemoteClient",R,N
allKeys
T@"MRDMediaRemoteServer",R,N
appStateMonitor
T@"MRDNowPlayingClient",&,N,V_computedNowPlayingClient
augmentedUserInfoForPlayerPath:
T@"MRDNowPlayingClient",&,N,V_inferredNowPlayingClient
beginReceivingUpdatesForSource:
T@"MRDNowPlayingClient",R,N
canBeNowPlayingForPlayerClient:
T@"MRDNowPlayingOriginClient",&,N,V_activeOriginClient
cleanUp
T@"MRDNowPlayingOriginClient",&,N,V_originClient
clientObservers
T@"MRDNowPlayingPlayerClient",&,N
closeForClient:
T@"MRDNowPlayingPlayerClient",&,N,V_playerClient
clusterCompositionOutputDevices
T@"MRDNowPlayingPlayerClientPlaybackState",&,N,V_playerPlaybackState
command
T@"MRDNowPlayingServer",R,N,V_nowPlayingServer
connectionState
T@"MRDPairingHandler",&,N,V_pairingHandler
containsObject:
T@"MRDPlaybackQueueArtworkCache",&,N,V_artworkCache
controller:playerPathDidChange:
T@"MRDProximityController",R,N,V_proximityController
currentSettings
T@"MRDRemoteControlDiscoverySession",&,N,V_discoverySession
destroyPlayersForClient:origin:
T@"MRDRemoteControlService",&,N,V_remoteControlService
disconnectTimer
T@"MRDServerMessageProxy",&,N,V_messageProxy
discoveryTokenForConfiguration:
T@"MRDTransactionServer",R,N,V_transactionServer
dismiss
T@"MRDUIClientMessageForwarder",R,N,V_forwarder
entries
T@"MRDUIServer",R,N
expanseSessionHasActiveActivity
T@"MRDeviceInfo",&,N,V_deviceInfo
frontmostClient
T@"MRDeviceInfo",R,N
groupID
T@"MRExternalDevice",R,N,V_externalDevice
hasASmartDevice
T@"MRExternalDeviceTransportConnection",&,N,V_connection
hasUIAssertions
T@"MRExternalOutputContextDataSource",R,N,V_externalOutputContext
initWithAPCommunicationChannel:
T@"MRMutableApplicationActivity",&,N,V_activity
initWithClient:
T@"MRNowPlayingState",R,N
initWithFormat:
T@"MROSTransaction",&,N,V_transaction
initWithOrigin:
T@"MROrigin",R,N
initWithOutputDeviceUID:reason:
T@"MROrigin",R,N,V_origin
initWithTimeout:reason:handler:
T@"MRPasscodeCredentials",&,N,V_credentials
initWithVolume:
T@"MRPlaybackQueue",C,N
internalClients
T@"MRPlaybackQueueClient",R,N,V_playbackQueueRequests
isClusterLeader
T@"MRPlayer",&,N,V_playerProperties
isGizmo
T@"MRPlayer",R,N
isLocalEndpoint
T@"MRPlayerPath",&,N,V_electedPlayer
isMuted
T@"MRPlayerPath",&,N,V_lockScreenPlayerPath
isProxy
T@"MRPlayerPath",&,N,V_previousPlayerPath
isValid
T@"MRPlayerPath",C,N,V_playerPath
keyboardUpdates
T@"MRPlayerPath",R,N,V_electedPlayerPath
legacyAssertion
T@"MRPlayerPath",R,N,V_previousElectedPlayerPath
logicalDeviceID
T@"MRRapportTransportConnection",&,N,V_connection
migrationEvents
T@"MRVirtualTouchDeviceDescriptor",R,C,N,V_deviceDescriptor
modelID
T@"MRXPCConnectionMonitor",&,N,V_connectionMonitor
mostRecentEvent
T@"MSVSystemDialog",&,N,V_activePasswordDialog
mr_any:
T@"MSVTimer",&,N,V_disconnectTimer
mr_outputDevice
T@"NSArray",&,N,V_contentItems
msv_firstWhere:
T@"NSArray",&,N,V_currentPlaybackSessionTypes
nowPlayingDataSourceNowPlayingAudioFormatContentInfosDidChange:
T@"NSArray",&,N,V_pendingEndpoints
numberWithBool:
T@"NSArray",&,N,V_supportedCommands
options
T@"NSArray",&,N,V_updatedEndpoints
pairingCallback
T@"NSArray",C,N,V_activeTransactions
pickedRoutesForCategory:source:
T@"NSArray",C,N,V_autoConnectingEndpoints
pinPairingToken
T@"NSArray",C,N,V_discoverySessions
playing
T@"NSArray",C,N,V_hostedDiscoverySessions
protocolVersion
T@"NSArray",C,N,V_migratingDevices
pushStatePlayer
T@"NSArray",C,N,V_promptingDevices
release
T@"NSArray",C,N,V_recordingEndpointClients
remoteAlertHandleDidDeactivate:
T@"NSArray",C,N,V_remoteControlContexts
removeDelegate:
T@"NSArray",C,N,V_televisionEndpoints
removeObserver:
T@"NSArray",R,C,N
request
T@"NSArray",R,N,V_availableOrigins
resetWithError:
T@"NSData",&,N,V_configurationData
runLoop
T@"NSData",C,N
sendContentItemTransactionWithPlaybackQueue:request:playerPath:
T@"NSData",R,C,N,V_data
sendMessage:type:destination:session:options:priority:response:
T@"NSData",R,N,V_MACAddress
sendingPlaybackStateToCompanion
T@"NSDate",&,N,V_canMigrateEvaluationTimestamp
serviceSpaceDidBecomeAvailable:
T@"NSDate",&,N,V_date
session
T@"NSDate",&,N,V_lastDiscoveryModeEnableDate
setAlertHeader:
T@"NSDate",&,N,V_lastNotPlayingDate
setBool:forKey:
T@"NSDate",&,N,V_lastStatusChangeDate
setCanAccessiCloudMusicLibrary:
T@"NSDate",&,N,V_pendingDisconnectDate
setCommandType:
T@"NSDate",C,D,N
setContentItem:
T@"NSDate",C,N,V_canBeNowPlayingTimestamp
setCurrentPlaybackSessionTypes:
T@"NSDate",R,N,V_date
setDestination:
T@"NSDate",R,N,V_lastPlayingDate
setDeviceState:
T@"NSDictionary",&,N,V_dictionaryRepresentation
setDisplayName:
T@"NSDictionary",C,N,V_hostedExternalDevices
setExternalDeviceCallbackQueue:
T@"NSDictionary",C,N,V_uiActivityInfo
setHasIsVolumeControlAvailable:
T@"NSDictionary",R,N,V_dictionary
setInvalidated:
T@"NSDictionary",R,N,V_route
setMaxConcurrentOperationCount:
T@"NSError",&,N,V_connectionStateError
setOriginClient:withChangeType:
T@"NSHashTable",&,N,V_objects
setPushStateActivePlayerClient:
T@"NSMutableArray",&,N,V_changedOutputDevices
setSerialQueue:
T@"NSMutableArray",&,N,V_entries
setSupportsACL:
T@"NSMutableArray",&,N,V_removedOutputDevices
setWithObjects:
T@"NSMutableDictionary",&,N,V_activeOutputContexts
setXpcEndpoint:
T@"NSMutableDictionary",&,N,V_commandDictionary
started
T@"NSMutableDictionary",&,N,V_deviceMessageHandlers
stringByAppendingPathComponent:
T@"NSMutableDictionary",&,N,V_discoverySessionConfigurationsResults
takeAssertionAndBlessForReason:
T@"NSMutableDictionary",&,N,V_outputDeviceVolume
T@"NSMutableDictionary",&,N,V_playbackTimers
verboseConnectionMonitorLogging
T@"NSMutableDictionary",&,N,V_reservedOutputContexts
virtualDeviceID
T@"NSMutableDictionary",&,N,V_totalMessageHandlers
volumeForOutputDeviceUID:error:
T@"NSMutableDictionary",R,V_handlers
.cxx_destruct
T@"IDSService",&,N,V_idsService
MACAddress
T@"MRDCommandClientRestriction",&,N,V_commandClientsRestriction
MRUIClient
T@"MRDIDSService",&,N,V_service
T@"<MRDAVHostedDiscoverySessionDelegate>",W,N,V_delegate
T@"MROrigin",&,N,V_activeOrigin
T@"<MRDAirPlayRemoteControlServiceDelegate>",W,N,V_delegate
T@"MROrigin",R,N,V_sourceOrigin
T@"<MRDConnectionLifetimeControllerDataSource>",W,N,V_dataSource
T@"NSArray",C,N
T@"<MRDDeviceInfoDataSourceDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_mediumDevices
T@"<MRDExternalDeviceServerClientConnectionDelegate>",W,N,V_serverDelegate
T@"NSArray",C,N,V_originClients
T@"<MRDIDSCompanionRemoteControlServiceDelegate>",W,N,V_delegate
T@"NSData",&,N,V_deviceInfoData
T@"<MRDLockScreenContentControllerDelegate>",W,N,V_delegate
TB,N,GisPictureInPictureEnabled
T@"<MRDNowPlayingClientDelegate>",W,N,V_delegate
TB,N,V_perPlayerCanBeNowPlaying
T@"<MRDNowPlayingPlayerClientDelegate>",W,N,V_delegate
TQ,N,V_allowedTransactionMemory
T@"<MRDPersonalDeviceControllerDelegate>",W,N,V_delegate
_airPlayService
T@"<MRDPinPairingDialogDelegate>",W,N,V_delegate
_audioSessionID
T@"<MRDRapportRemoteControlServiceDelegate>",W,N,V_delegate
_canBeNowPlayingPlayerTimestamp
T@"<MRDSleepObserverDelegate>",W,N,V_delegate
_canSendMessage
T@"<MRDXPCMessageHandling>",W,N,V_messageHandler
_center
T@"<MRTransactionDelegate>",W,N,V_delegate
_clientInvalidatedNotification:
T@"<MRUIClientXPCProtocol>",W,N,V_target
_device
T@"<MRXPCConnectionMonitorDelegate>",W,N,V_delegate
_devicesDelayed
T@"AVOutputDevice",R,N,V_avOutputDevice
_discoverySessionEndpointsToken
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
_endpointSupportsVolumeControl:
T@"BSServiceInterface",R,N
_externalDevice
T@"FBSDisplayLayoutMonitor",R,N,V_sharedDisplayMonitor
_frontmostApplicationDidChange:
T@"IDSDevice",R,N,V_device
_handleGetAppsSupportingBrowsableContentAPIsMessage:fromClient:
T@"MRAVDistantEndpoint",&,N,V_endpoint
_hostsByGroupID
T@"MRAVEndpoint",&,N
_isForegrounded
T@"MRAVOutputDevice",&,N
_netServiceType
T@"MRAVOutputDevice",R,N,V_outputDevice
_notifyDelegate
T@"MRAVRoutingDiscoverySessionConfiguration",&,N,V_configuration
_nowPlayingApplicationIsPlaying
T@"MRApplicationActivity",C,N,V_currentAppActivity
_onQueue_playerClientForPlayer:
T@"MRClient",&,N,V_pushStateClient
_onSyncSelf_calculateElectedPlayerForOriginClient:event:reason:
T@"MRCompanionLinkClient",&,N,V_client
_outputDeviceVolumeCapabilities
T@"MRContentItem",&,N,V_contentItem
_pairingHandler
T@"MRCoreUtilsPairingSessionPeer",R,N,V_sessionPeer
_pendingReconSessionCompletions
T@"MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications",&,N,V_outputDeviceModifications
_picked
T@"MRDAVRoute",R,N,V_pickedRoute
_playbackTimers
T@"MRDAVRouteExtendedInfo",R,N,V_extendedInfo
_pushStateCanBeNowPlayingPlayer
T@"MRDAVRoutingServer",R,N,V_routingServer
_queuedInitiatePlaybackMessages
T@"MRDAirPlayRemoteControlService",&,N,V_airPlayService
_readDeviceInfo
T@"MRDBonjourRemoteControlService",&,N,V_televisionNetworkService
_reloadEndpoint
T@"MRDConnectionLifetimeController",&,N,V_lifetimeController
_routedCommands
T@"MRDDisplayMonitor",&,N,V_displayMonitor
_serverDelegate
T@"MRDElectedPlayerController",R,N,V_electedPlayerController
_sortSnapshots:
T@"MRDExternalDeviceRemoteServer",R,N,V_externalDeviceServer
_status
T@"MRDIDSCompanionRemoteControlService",&,N,V_companionService
_string
T@"MRDIDSRemoteControlService",&,N,V_idsService
_target
T@"MRDIDSServerClientConnection",R,N
_tombstoneHostedExternalDevice:
T@"MRDIDSServiceConnection",&,N,V_idsConnection
_uiActivityInfo
T@"MRDIDSTransportConnection",&,N,V_transport
_volume
T@"MRDLockScreenContentController",&,N,V_contentController
_wakeDevice:dismissScreenSaver:
T@"MRDMediaRemoteClient",&,N,V_daemonClient
acquire
T@"MRDMediaRemoteClient",&,N,V_localNowPlayingClient
activeTopologyChangeIdentifiers
T@"MRDMediaRemoteClient",&,N,V_requester
addLyricsEvent:
T@"MRDMediaRemoteClient",&,N,V_xpcClient
airPlayGroupUID
T@"MRDMediaRemoteClient",R,N,V_owningClient
appIcon
T@"MRDMediaRemoteUIService",&,N,V_remoteUIService
artwork
T@"MRDNowPlayingClient",&,N,V_explicitNowPlayingClient
avOutputContext
T@"MRDNowPlayingClient",&,N,V_nowPlayingClient
canBeNowPlaying
T@"MRDNowPlayingDataSource",&,N,V_nowPlayingDataSource
canSendMessage:
T@"MRDNowPlayingOriginClient",&,N,V_localOriginClient
clientInterface
T@"MRDNowPlayingOriginClient",R,N
clients
T@"MRDNowPlayingPlayerClient",&,N,V_nowPlayingPlayerClient
closeWithError:
T@"MRDNowPlayingPlayerClient",R,N
clusterLeaderID
T@"MRDNowPlayingPlayerClientPlaybackState",&,N,V_pushStatePlaybackState
connectToAllOutputDevicesForReason:comparator:queue:completion:
T@"MRDNowPlayingServer",R,N,V_npServer
containsDevice:
T@"MRDPersonalDeviceController",&,N,V_personalDeviceController
containsString:
T@"MRDPlaybackQueueArtworkCacheSize",R,N
createAssertion
T@"MRDRapportRemoteControlService",&,N,V_rapportService
dealloc
T@"MRDRemoteControlServer",R,N,V_remoteControlServer
devices
T@"MRDRemoteControlService",R,N,V_remoteControlService
discoverEndpointTimeoutInterval
T@"MRDTaskAssertion",&,N,V_currentTaskAssertion
discoveryTokens
T@"MRDUIActivityServer",&,N,V_activityServer
effectiveValuesForUnionSetting:
T@"MRDUIControllerConnection",R,N,V_connection
existingNowPlayingClientForPid:
T@"MRDeviceInfo",&,N
exportEndpoint:
T@"MRDeviceInfo",C,N
getDiscoveryModeWithCompletion:
T@"MRExternalClientConnection",&,N,V_clientConnection
T@"MRExternalDeviceTransport",R,N,V_transport
hasPlaybackRate
T@"MRExternalDeviceTransportConnection",&,N,V_transport
homepodDemoMode
T@"MRMediaSuggestionPreferences",&,N,V_suggestionPreferences
initWithBundleID:indexPathData:
T@"MRNowPlayingAudioFormatContentInfo",R,N
initWithDevice:
T@"MROSTransaction",&,N,V_discoveryTransaction
initWithID:data:device:service:
T@"MROrigin",&,N,V_origin
initWithOutputContext:endpoint:
T@"MROrigin",R,N,V_destinationOrigin
initWithString:
T@"MROutputContextDataSource",&,N,V_localOutputContextDataSource
initWithType:pid:bundleID:name:
T@"MRPlaybackQueue",&,N,V_playbackQueue
initWithVolume:outputDeviceUID:
T@"MRPlaybackQueue",R,N,V_playbackQueue
isAirPlayActive
T@"MRPlaybackQueueSubscriptionController",R,N,V_subscriptionController
isEqualToArray:
T@"MRPlayer",&,N,V_pushStatePlayer
isLocal
T@"MRPlayerPath",&,N
isLocallyHosted
T@"MRPlayerPath",&,N,V_electedPlayerPath
isPersonalRoute
T@"MRPlayerPath",&,N,V_playerPath
isSilentPrimary
T@"MRPlayerPath",C,D,N
T@"MRPlayerPath",R,N
lastPlayingDate
T@"MRPlayerPath",R,N,V_playerPath
localPlayerPath
T@"MRPlayerPath",R,N,V_unresolvedPlayerPath
lowercaseString
T@"MRUIActivityController",R,N,V_activityController
minimumSupportedProtocolVersion
T@"MRXPCConnection",R,N,V_connection
mostRecentCanBeNowPlayingClient
T@"MSVPersistentTimer",&,N,V_overrideTimer
mr_all:
T@"MSVSystemDialog",W,N,V_activeDialog
mr_map:
T@"MSVTimer",&,N,V_playbackTimer
msv_compactMap:
T@"NSArray",&,N,V_contentItemsArtwork
T@"NSArray",&,N,V_originForwarders
nowPlayingState
T@"NSArray",&,N,V_pendingOutputDevices
objects
T@"NSArray",&,N,V_supportedPlaybackSessionTypes
outputDeviceUID
T@"NSArray",&,N,V_updatedOutputDevices
personalDeviceLockScreenTimeout
T@"NSArray",C,N,V_autoConnectedEndpoints
T@"NSArray",C,N,V_connectedExternalDevices
playbackSession
T@"NSArray",C,N,V_endpoints
prewarm
T@"NSArray",C,N,V_immediateDevices
pushStateClient
T@"NSArray",C,N,V_migrationEvents
registeredToOutputDeviceUpdates
T@"NSArray",C,N,V_queuedInitiatePlaybackMessages
reloadScheduled
T@"NSArray",C,N,V_registeredVirtualAudioDevices
remoteUIService
T@"NSArray",C,N,V_subscribedPlayerPaths
removeEndpointsChangedCallback:
T@"NSArray",C,N,V_transactions
replyIdentifier
T@"NSArray",R,N,V_activePlayerClients
resetConnection
T@"NSArray",R,N,V_memberOutputDevices
T@"NSData",C,D,N
selectionReason
T@"NSData",C,N,V_lastKnownBluetoothAddress
sendEvent:destination:userInfo:
T@"NSData",R,N
sendRemoteControlCommandWithoutRedirection:withCompletionBlock:
T@"NSData",R,N,V_indexPathData
service
T@"NSDate",&,N,V_connectionAttemptDate
serviceWithDefaultShellEndpoint
T@"NSDate",&,N,V_lastDiscoveryModeDisableDate
T@"NSDate",&,N,V_lastMessageSentDate
setBluetoothID:
T@"NSDate",&,N,V_lastPlayingDate
setCachedNowPlayingContentItem:
T@"NSDate",&,N,V_lastStatusCheckDate
setClusterType:
T@"NSDate",&,N,V_playbackStateTimestamp
setConnections:
T@"NSDate",C,N
setCredentials:
T@"NSDate",R,N
setDateCreated:
T@"NSDate",R,N,V_dateCreated
setDeviceClass:
T@"NSDate",R,N,V_registrationDate
setDismissOverlaysOnLockscreen:
T@"NSDictionary",C,N,V_enqueuedCommands
setEventReason:
T@"NSDictionary",C,N,V_systemActiveEndpoints
setGroupLeader:
T@"NSDictionary",R,N
setHasScreenMirroringAssertion:
T@"NSDictionary",R,N,V_nowPlayingAudioFormatContentInfos
setLastDiscoveryModeEnableDate:
T@"NSError",&,N,V_canMigrateToLocalEndpointError
setOptionsData:
T@"NSHashTable",&,N,V_clientObservers
setPairingAllowedCallbackQueue:
T@"NSMutableArray",&,N,V_addedOutputDevices
setQos:
T@"NSMutableArray",&,N,V_connections
setServiceType:
T@"NSMutableArray",&,N,V_pendingConnectCompletionHandlers
setTransaction:
T@"NSMutableArray",R,N,V_transactions
setWorkerQueue:
T@"NSMutableDictionary",&,N,V_coalescingStates
setXpcListener:
T@"NSMutableDictionary",&,N,V_completionBlockDictionary
streamsThatCountTowardsCapacity
T@"NSMutableDictionary",&,N,V_discoveryChannels
suggestionCount
T@"NSMutableDictionary",&,N,V_inactiveOutputContexts
textFieldValues
T@"NSMutableDictionary",&,N,V_outputDeviceVolumeCapabilities
uppercaseString
T@"NSMutableDictionary",&,N,V_remoteControlChannels
version
T@"NSMutableDictionary",&,N,V_responseHandlers
volumeCategoryForAudioCategory:
T@"NSMutableDictionary",&,N,V_virtualOutputDeviceDictionary
T@"NSMutableSet",&,N,V_activeTopologyChangeIdentifiers
T@"NSMutableSet",&,N,V_mutableExternalDeviceClients
T@"NSMutableSet",&,N,V_nearbyDevices
T@"NSMutableSet",R,N,V_internalClients
T@"NSNumber",&,N,V_playbackState
T@"NSNumber",&,N,V_volume
T@"NSNumber",&,N,V_volumeCapabilities
T@"NSNumber",R,C,N,V_messageID
T@"NSNumber",R,N,V_audioSessionID
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_externalDeviceCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputContextCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesRemovedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_outputDevicesUpdatedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_volumeControlCapabilitiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workerQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_messageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSObject<OS_xpc_object>",&,N,V_connection_t
T@"NSObject<OS_xpc_object>",&,N,V_endpoint
T@"NSRunLoop",R,N,V_runLoop
T@"NSSet",&,N,V_allowedAuditTokens
T@"NSSet",&,N,V_cachedNowPlayingClients
T@"NSSet",&,N,V_currentPersonalDeviceUIDs
T@"NSSet",R,N
T@"NSSet",R,N,V_mxSessionIDs
T@"NSString",&,N
T@"NSString",&,N,V_batchedNowPlayingState
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_currentPlaybackSessionIdentifier
T@"NSString",&,N,V_destination
T@"NSString",&,N,V_destinationGroupUID
T@"NSString",&,N,V_destinationOutputDeviceUID
T@"NSString",&,N,V_deviceName
T@"NSString",&,N,V_deviceUID
T@"NSString",&,N,V_discoverySession
T@"NSString",&,N,V_electedPlayerReason
T@"NSString",&,N,V_eventReason
T@"NSString",&,N,V_name
T@"NSString",&,N,V_outputDeviceUID
T@"NSString",&,N,V_selectionReason
T@"NSString",&,N,V_session
T@"NSString",&,N,V_sessionUID
T@"NSString",&,N,V_sourceUID
T@"NSString",&,N,V_string
T@"NSString",C,D,N
T@"NSString",C,N
T@"NSString",C,N,V_advertisingReasonDescription
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_center
T@"NSString",C,N,V_destinationGroupUID
T@"NSString",C,N,V_destinationOutputDeviceUID
T@"NSString",C,N,V_localReceiverPairingIdentity
T@"NSString",C,N,V_routeUID
T@"NSString",R,C
T@"NSString",R,N
T@"NSString",R,N,V_bundleID
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_contextID
T@"NSString",R,N,V_destination
T@"NSString",R,N,V_deviceID
T@"NSString",R,N,V_deviceUID
T@"NSString",R,N,V_event
T@"NSString",R,N,V_eventReason
T@"NSString",R,N,V_modelName
T@"NSString",R,N,V_mostRecentEvent
T@"NSString",R,N,V_mostRecentEventReason
T@"NSString",R,N,V_mostRecentSelectionReason
T@"NSString",R,N,V_name
T@"NSString",R,N,V_netServiceType
T@"NSString",R,N,V_nowPlayingApplicationDisplayID
T@"NSString",R,N,V_originatingAppDisplayID
T@"NSString",R,N,V_path
T@"NSString",R,N,V_routeUID
T@"NSString",R,N,V_routedAppDisplayID
T@"NSString",R,N,V_selectionReason
T@"NSString",R,N,V_senderAppDisplayID
T@"NSString",R,N,V_session
T@"NSString",R,N,V_token
T@"NSString",R,N,V_type
T@"NSString",R,N,V_uniqueIdentifier
T@"NSTimer",&,N,V_timeoutTimer
T@"NSUserDefaults",&,N,V_userDefaults
T@"NSUserDefaults",R,N
T@"NSXPCConnection",&,N,V_connection
T@"NSXPCConnection",R,N,V_connection
T@"NSXPCConnection",R,N,V_xpcConnection
T@"NSXPCListener",&,N,V_xpcListener
T@"NSXPCListener",R,N,V_listener
T@"NSXPCListenerEndpoint",&,N,V_remoteUIServerEndpoint
T@"NSXPCListenerEndpoint",R,N
T@"Protocol",&,N,V_protocol
T@"RPCompanionLinkClient",R,N
T@"SBSLockScreenContentAssertion",&,N,V_assertion
T@"SBSRemoteAlertHandle",&,N,V_remoteAlertHandle
T@"_MRAVAirPlaySecuritySettingsProtobuf",&,N,V_airplaySecuritySettings
T@,&,N,V_pinPairingToken
T@,&,N,V_serviceToken
T@,R,W,N,V_delegate
T@?,C,N,V_callback
T@?,C,N,V_completion
T@?,C,N,V_connectionHandler
T@?,C,N,V_connectionStateCallback
T@?,C,N,V_customDataCallback
T@?,C,N,V_invalidationHandler
T@?,C,N,V_nameCallback
T@?,C,N,V_outputDevicesRemovedCallback
T@?,C,N,V_outputDevicesUpdatedCallback
T@?,C,N,V_pairingAllowedCallback
T@?,C,N,V_pairingCallback
T@?,C,N,V_volumeCallback
T@?,C,N,V_volumeControlCapabilitiesCallback
T@?,R,N,V_invalidationHandler
TB,N
TB,N,V_controlCenterForegrounded
TB,N,V_declaringAirplayActive
TB,N,V_devicesDelayed
TB,N,V_displayOn
TB,N,V_enableThrottling
TB,N,V_endpointsDelayed
TB,N,V_hasLockScreenAssertion
TB,N,V_hasLockScreenControlsAssertion
TB,N,V_hasPresentedForCurrentPersonalDevices
TB,N,V_hasQuickControlsAssertion
TB,N,V_hasRequestedLegacyNowPlayingInfo
TB,N,V_hasRequestedSupportedCommands
TB,N,V_hasScreenMirroringAssertion
TB,N,V_hasScreenMirroringQuickControlsAssertion
TB,N,V_hasTriggered
TB,N,V_invalidated
TB,N,V_isAdvertisingProximity
TB,N,V_isCallingClientCallback
TB,N,V_isForegrounded
TB,N,V_isPlaying
TB,N,V_keepAlive
TB,N,V_lockScreenForegrounded
TB,N,V_lockScreenWidgetActive
TB,N,V_lockScreenWidgetVisible
TB,N,V_personalDeviceWasRecentlyAttached
TB,N,V_pushStateCanBeNowPlayingPlayer
TB,N,V_pushStateHasNowPlayingData
TB,N,V_pushStateIsPlaying
TB,N,V_pushStatePictureInPictureEnabled
TB,N,V_reloadScheduled
TB,N,V_sendingPlaybackStateToCompanion
TB,N,V_shouldConsiderSuggestions
TB,N,V_shouldFinishPresentationForCurrentPersonalDevices
TB,N,V_shouldRun
TB,N,V_started
TB,N,V_supportsBackgroundAudio
TB,N,V_tombstoned
TB,N,V_useOutputDeviceCache
TB,R
TB,R,N
TB,R,N,GisAVRCPCommand
TB,R,N,GisContextSensitive
TB,R,N,GisDestinationLocal
TB,R,N,GisInputRoute,V_inputRoute
TB,R,N,GisLockScreenWidgetActive
TB,R,N,GisLockScreenWidgetVisible
TB,R,N,GisNavigational
TB,R,N,GisOutputRoute,V_outputRoute
TB,R,N,GisPicked,V_picked
TB,R,N,GisPlaying,V_playing
TB,R,N,GisSilentPrimary
TB,R,N,GisSpeakerRoute,V_speakerRoute
TB,R,N,V_airplayActive
TB,R,N,V_canBeDefaultRoute
TB,R,N,V_canBeSystemDefaultRoute
TB,R,N,V_isActive
TB,R,N,V_isDiscoveryChannelConnected
TB,R,N,V_isMuted
TB,R,N,V_nowPlayingApplicationIsInterrupted
TB,R,N,V_nowPlayingApplicationIsPlaying
TB,R,N,V_shouldSendCommandsDuringPhoneCall
TB,R,N,V_wantsCoalescedStateChanged
TI,D,N
TI,N
TI,N,V_connectionState
TI,N,V_discoveryMode
TI,N,V_error
TI,N,V_hardwareRemoteBehavior
TI,N,V_options
TI,N,V_outputDeviceDiscoveryMode
TI,N,V_routeDiscoveryMode
TI,N,V_style
TI,N,V_systemDiscoveryMode
TI,R,N
TI,R,N,V_appOptions
TI,R,N,V_capabilities
TI,R,N,V_commandType
TI,R,N,V_connection
TI,R,N,V_externalScreenType
TI,R,N,V_identifier
TI,R,N,V_playbackState
TQ,N
TQ,N,V_currentMessageCount
TQ,N,V_deviceState
TQ,N,V_notifications
TQ,N,V_playbackQueueCapabilities
TQ,N,V_registeredCallbacks
TQ,N,V_serviceType
TQ,N,V_status
TQ,N,V_totalMessageCount
TQ,N,V_type
TQ,N,V_usedTransactionMemory
TQ,R
TQ,R,N,V_entitlements
TQ,R,N,V_name
TQ,R,N,V_routeDiscoveryCount
TQ,R,N,V_totalOutgoingMessageCount
TQ,R,N,V_uniqueIdentifier
T^{IONotificationPort=},R,N,V_port
T^{__IOHIDUserDevice=},R,N,V_ioDevice
Td,N,V_transactionWaitDuration
Td,R,N
Td,R,N,V_disconnectInterval
Td,R,N,V_h
Td,R,N,V_recentlyPlayingInterval
Td,R,N,V_w
Tf,N
Tf,R,N,V_currentVolume
Ti,N
Ti,R,N
Ti,R,N,V_nowPlayingApplicationPID
Ti,R,N,V_pid
Ti,R,N,V_processID
Tq,N,V_changeType
Tq,N,V_event
Tq,N,V_eventType
Tq,N,V_type
Tq,R,N
Tq,R,N,V_inputType
Tq,R,N,V_type
Tq,V_suggestionCount
T{?=[8I]},R,N
T{os_unfair_lock_s=I},R,N,V_lock
URLByAppendingPathComponent:
URLWithString:
UTF8String
UUID
UUIDString
WHAIdentifier
_MACAddress
_activeClients
_activeDialog
_activeNowPlayingClient
_activeNowPlayingClientDidChangeNotification:
_activeNowPlayingClientTransaction
_activeOrigin
_activeOriginClient
_activeOutputContexts
_activePasswordDialog
_activePlayerClients
_activeReconSessions
_activeReconnaissanceSessions
_activeSystemContext
_activeSystemEndpointDidChangeNotification:
_activeSystemEndpointOutputDeviceUID
_activeTopologyChangeIdentifiers
_activeTouchEventsForFingerIndices
_activeTransactions
_activity
_activityController
_addAuthorizationCallbackForOutputDevice:destination:session:
_addClient:
_addEntry:
_addMessageHandler:
_addMessageHandlerForDevice:handler:
_addNowPlayingNotification:selector:
_addNowPlayingStateToMessage:forClient:withEndpoint:
_addOrigin:withDeviceInfo:emitNotification:
_addOutputDevicesToMessage:forClient:withEndpoint:
_addSubscribedStateToMessage:forClient:nowPlayingClient:
_addSubscribedStateToMessage:forClient:originClient:
_addSubscribedStateToMessage:forClient:playerClient:
_addToMessage:withAllClusterDeviceMembers:block:
_addUndiscoveredOutputContextOutputDevices:
_addVolumeToMessage:forClient:outputDevice:withEndpoint:
_addVolumeToMessage:forClient:withEndpoint:
_addVolumeToMessage:forClient:withEndpoint:completion:
_addedOutputDevices
_adjustPlaybackTimerIfNeeded
_advertisingReasonDescription
_airplayActive
_airplayActiveNotifyToken
_airplayAdvertisingNotifyToken
_airplayPerfsNotifyToken
_airplaySecuritySettings
_allClusterMembers
_allExternalDeviceClients
_allowedAuditTokens
_allowedMemory
_allowedTransactionMemory
_anonymousListener
_appOptions
_appStateMonitor
_appendDescribableArray:toString:withTitle:
_appendDescribableArray:toString:withTitle:indentLevel:
_appendDescribableArray:toString:withTitle:indentLevel:usingDebugDescription:
_appendNullableObjectDescription:toString:withTitle:
_appendNullableObjectDescription:toString:withTitle:usingDebugDescription:
_appendSubheader:toString:
_applicationIsRunning:
_applicationPickedRoutes
_applyDeviceInfoValuesToOutputDevices:withDeviceInfo:
_applyLocalReservedOutputContextValuesToOutputDevices:
_applyLocallySourcedValuesToOutputDevices:
_applyOutputContextValuesToOutputDevices:
_artworkCache
_assertion
_assertionID
_assertions
_authorizationCallbacks
_autoConnectedEndpoints
_autoConnectingEndpoints
_autoConnectionController
_avDiscoverySession
_avSessionMediaServicesResetNotification:
_availableOrigins
_availableOutputDevices
_batchedNowPlayingState
_bluetoothClient
_broadcastKeyboardMessageWithState:text:attributes:
_broadcastRemoteTextInputMessageWithPayload:
_browsableContentServer
_bundleID
_bundleIdentifier
_bytesInUse
_cache
_cachedHasPersonalDevices
_cachedNowPlayingClients
_cachedNowPlayingContentItem
_cachedProtobufData
_cachingPolicyForRequest:
_calculateHierarchy:
_calculateMemory
_callClientAllowsPairingCallback
_callClientConnectionStateCallback:previousConnectionState:error:
_callClientCustomDataCallback:name:
_callClientNameCallback
_callClientPairingCallback:
_callObserver
_callOutputDevicesRemovedCallbackWithOutputDeviceUIDs:
_callOutputDevicesUpdatedCallbackWithOutputDevices:
_callVolumeCallback:outputDeviceUID:
_callVolumeControlCapabilitiesCallback:outputDeviceUID:
_callback
_calloutQueue
_canBeDefaultRoute
_canBeNowPlaying
_canBeNowPlayingPlayer
_canBeNowPlayingTimestamp
_canBeSystemDefaultRoute
_canMigrateEvaluationTimestamp
_capabilities
_capabilitiesValue
_changeType
_changedOutputDevices
_channels
_checkConnectionStatus
_cleanUpPersistedSessionForSessionPreloadCommand:
_cleanUpStreamsWithReason:error:
_cleanUpWithReason:error:
_clearAllQueuedCommandsForReason:
_clearPasswordForOutputDevice:
_clearQueuedBeginLoadingMessagesForApp:
_clearQueuedCommand:forUnavailableApplicationWithDisplayID:
_clientBundleIDs
_clientConnection
_clientDidConnectNotification:
_clientDidOpenConnection:
_clientDidRegisterCanBeNowPlaying:
_clientDidUnregisterCanBeNowPlaying:
_clientForIdentifier:
_clientForPairingSession:
_clientIdentifier
_clientObservers
_clients
_clusterOutputDevicesFromUnclusteredDevices:
_coalescingStates
_coealesceItems:
_collectDiagnosticFromClient:completion:
_commandClientsRestriction
_commandDictionary
_commandQueue
_commandQueuesForDisplayIDs
_commandType
_commitLocalDeviceWithReason:
_companionService
_completion
_completionBlockDictionary
_completionHandler
_computedNowPlayingClient
_concludeSearchWithRoute:
_configuration
_configurationData
_configurationForUID:
_configurationFromDestination:session:
_configureObserver
_connectToAllOutputDevicesForReason:comparator:queue:completion:
_connectToGroup:reason:completion:
_connectToOutputDevice:reason:completion:
_connectedClients
_connectedEndpoints
_connectedExternalDevices
_connectingEndpoints
_connectingExternalDeviceClients
_connection
_connection:canReceiveUpdatesForPlayerPath:
_connection:wasPreviouslySubscribedToPlayerPath:
_connectionAttemptDate
_connectionForSource:destination:session:
_connectionHandler
_connectionMonitor
_connectionOptions
_connectionQueue
_connectionRecoveryBehavior
_connectionState
_connectionStateCallback
_connectionStateCallbackQueue
_connectionStateDate
_connectionStateError
_connectionStateTimestamp
_connectionUID
_connection_t
_connections
_contentController
_contentItem
_contentItems
_contentItemsArtwork
_contextID
_contextuallyAwareDestinationAppDisplayIDForCommand:
_controlCenterForegrounded
_copyWithZone:usingConcreteClass:
_createAirPlaySecuritySettings
_createBroadcastCommandPlayerPathForClient:
_createBroadcastCommandResponseFromStatuses:forClient:
_createConnectionWith:groupID:connectionType:shouldUseSystemAuthenticationPrompt:userInfo:
_createConnectionWithUserInfo:
_createDiscoveryChannelForIDSConnection:deviceInfo:
_createEndpointForOutputDeviceIDs:completion:
_createEndpointForOutputDeviceIDs:options:completion:
_createEndpointForOutputDeviceIDsLegacy:options:completion:
_createLocalizedOutputDevice:redactVolume:forClient:endpoint:
_createLocalizedOutputDevices:redactVolume:forClient:endpoint:
_createPlayerAndWaitForCanBeNowPlaying:completion:
_createPlayerAndWaitForCanBeNowPlaying:deviceInfo:completion:
_createPlayerAndWaitForConnection:command:completion:
_createPlayerAndWaitForConnection:command:deviceInfo:completion:
_createPlayerForClient:playerPath:deviceInfo:completion:
_createRemoteAlertHandleIfNeeded
_createRemoteControlChannelForIDSConnection:deviceInfo:destination:session:options:
_createResolvedPlayerPathFromPlayerPath:
_createStereoPairRepresentationFrom:
_credentials
_currentAppActivity
_currentDeviceInfo
_currentMessageCount
_currentPersonalDeviceUIDs
_currentPlaybackSessionIdentifier
_currentPlaybackSessionTypes
_currentRouteHasVolumeControlDidChangeNotification:
_currentTaskAssertion
_currentVolume
_customDataCallback
_customDataCallbackQueue
_customOrigin
_daemonClient
_data
_dataSource
_date
_dateCreated
_dbHandle
_declaringAirplayActive
_defaultSupportedCommandsData
_delegate
_delegateQueue
_descriptionForDiscoveryMode:
_designatedGroupLeader
_destination
_destinationClient
_destinationClientForRemoteControlCommand:
_destinationEndpoint
_destinationGroupUID
_destinationMessageHandlers
_destinationOrigin
_destinationOutputDeviceUID
_deviceDescriptor
_deviceID
_deviceIDCounter
_deviceInfo
_deviceInfoArchiveClasses
_deviceInfoDataSource
_deviceInfoDidChange
_deviceInfoDidChange:
_deviceInfoDidChangeWithDeviceInfo:
_deviceInfoFilePath
_deviceInfoReloadScheduled
_deviceMessageHandlers
_deviceName
_deviceProperties
_deviceState
_deviceUID
_dictionary
_dictionaryRepresentation
_didCloseCommunicationChannelWithID:error:
_didReceiveData:fromConnectionID:connectionFactory:
_disconnectClient:withError:
_disconnectInterval
_disconnectTimer
_disconnecting
_discoverGroup:reason:completion:
_discoverOutputDevice:reason:completion:
_discoveryChannel
_discoveryChannelConnectionTimer
_discoveryChannels
_discoveryMode
_discoverySession
_discoverySessionConfigurationsResults
_discoverySessionOutputDevicesToken
_discoverySessions
_discoveryTokens
_discoveryTransaction
_dispatchKeypressEventWithUsagePage:usage:
_displayOn
_distantOutputDevices
_effectiveCanBeNowPlaying
_effectiveContextIDForCommand:
_electedPlayer
_electedPlayerController
_electedPlayerPath
_electedPlayerReason
_enableThrottling
_endSearch
_endpoint
_endpointIsSolo:
_endpointShouldNotifyClientsOfTopologyChanges:
_endpointShouldPostVolumeNotifications:outputDevice:
_endpoints
_endpointsDelayed
_enqueueCommand:forApplication:withCompletion:
_enqueueCommand:forUnavailableApplicationWithDisplayID:
_enqueueCompletion:forUnavailableDestinationApp:
_enqueuedCommands
_enqueuedCommandsForDisplayID:
_entitlements
_entries
_error
_event
_eventReason
_eventType
_existingKeychainAccountForOutputDevice:password:
_explicitNowPlayingClient
_exportDescriptorForOutputDevice:endpoint:remoteControl:
_extendedInfo
_externalDeviceCallbackQueue
_externalDeviceClientDidInvalidate:
_externalDeviceClientForConnection:
_externalDeviceManager
_externalDeviceServer
_externalOutputContext
_externalScreenDidChangeNotification:
_externalScreenType
_fadeOutNotificationToken
_failedToConnectToOutputDeviceNotification:
_fetchAvailableOutputDevicesFromDiscoverySessions
_findClientIf:
_forceEnableCECVolumeNotification:
_forceReconnectOnConnectionFailure
_forwardCommand:completion:
_forwarder
_frontmostClient
_gameControllerDeviceIDCounter
_gameControllerInputMode
_gameControllers
_generateDeviceInfoWithDesignatedGroupLeader:outputContext:
_generateMessageID
_generateSessionUID
_genericNetworkService
_gestaltNotificationToken
_handleActiveApplicationDidChangeNotification:
_handleActivePlayerDidChange:
_handleActivePlayerDidChangeNotification:
_handleActiveSystemEndpointChangedNotification:
_handleActiveSystemEndpointDidChangeNotification:
_handleAddVirtualOutputDeviceMessage:fromClient:
_handleAdjustSystemVolumeByStepMessage:fromClient:
_handleAdjustVolumeMessage:fromClient:
_handleApplicationClientStateChanged:
_handleApplicationClientStateDidChangeNotification:
_handleApplicationDidRegisterNotification:
_handleApplicationDidUnregisterNotification:
_handleAuthenticationFailureForRoute:withOptions:
_handleAuthorizationRequest:
_handleBeginApplicationActivityMessage:fromClient:
_handleBeginLoadingBrowsableContentMessage:fromClient:
_handleBroadcastCommandMessage:fromClient:
_handleBrowsableContentDidFinishLoadingFromClient:indexPath:withError:
_handleClearAllAVRoutePasswordsMessage:fromClient:
_handleClientConnection:
_handleClientUpdatesConfigMessage:fromClient:
_handleClusterErrorStatus:forRoute:
_handleCollectClientDiagnosticsMessage:fromClient:
_handleCollectClientDiagnosticsMessageWithCompletion:
_handleCollectDiagnosticMessage:fromClient:
_handleCompanionDeviceConnectedNotification:
_handleCompanionDeviceDisconnectedNotification:
_handleCompletePairingHandlerMessage:fromClient:
_handleConnectRemoteControlMessage:fromDevice:destination:session:
_handleContentItemArtworkChanged:
_handleContentItemArtworkChangedMessage:fromClient:
_handleContentItemChangedMessage:fromClient:
_handleContentItemsChanged:
_handleCreateDirectEndpointForDevices:fromClient:
_handleCreateEndpointWithDevices:fromClient:
_handleCreateGroupWithDevices:fromClient:
_handleCreateHostedEndpointForDevices:fromClient:
_handleCreateHostedEndpointRequestMessage:fromClient:
_handleDefaultSupportedCommandsChanged:
_handleDeletePairedDeviceMessage:fromClient:
_handleDeletePairingIdentityMessage:fromClient:
_handleDeviceInfoChange:oldDevice:
_handleDeviceInfoChangedNotification:
_handleDeviceInfoDidChangeNotification:
_handleDeviceInfoRequest:fromClient:
_handleDeviceInfoUpdateMessage:fromClient:
_handleDiscoveryMessage:fromDevice:
_handleDiscoveryUpdateOutputDevicesMessage:
_handleDismissMediaControlsCommandMessage:fromClient:
_handleElectedPlayerDidChangeNotification:
_handleEndApplicationActivityMessage:fromClient:
_handleEndpointDidDisconnect:
_handleEndpointDidInvalidateNotification:
_handleEndpointOutputDevicesDidChangeNotification:
_handleErrorStatus:forRoute:
_handleExternalDeviceConnectionDidChange:
_handleExternalDeviceConnectionStateDidChangeNotification:
_handleGenericMessage:
_handleGenericMessage:fromClient:
_handleGetActiveOriginMessage:fromClient:
_handleGetActivePlayerPathsForLocalOriginMessage:fromClient:
_handleGetActiveSystemEndpointUIDsMessage:fromClient:
_handleGetAirPlaySecuritySettingsMessage:fromClient:
_handleGetAirplayStatus:fromClient:
_handleGetAnyAppIsPlayingMessage:fromClient:
_handleGetApplicationActivityMessage:fromClient:
_handleGetAudioFormatContentInfoForOriginMessage:fromClient:
_handleGetAvailableOriginsMessage:fromClient:
_handleGetClientPropertiesMessage:fromClient:
_handleGetDeviceInfo:fromClient:
_handleGetDeviceSupportsUIActivitiesMessage:fromClient:
_handleGetDevicesMessage:fromClient:
_handleGetElectedPlayerPathMessage:fromClient:
_handleGetExternalDeviceMessage:fromClient:
_handleGetExternalScreenTypeMessage:fromClient:
_handleGetHostedEndpointForDeviceUIDMessage:fromClient:
_handleGetHostedRoutingXPCEndpointMessage:fromClient:
_handleGetImageDimensionsForArtworkDataMessage:fromClient:
_handleGetInputModeMessage:fromClient:
_handleGetIsBooksAppInstalledMessage:fromClient:
_handleGetIsMusicAppInstalledMessage:fromClient:
_handleGetIsMutedMessage:fromClient:
_handleGetKeyboardSessionMessage:fromClient:
_handleGetLastPlayingDateMessage:fromClient:
_handleGetNowPlayingClientMessage:fromClient:
_handleGetNowPlayingClientsMessage:fromClient:
_handleGetNowPlayingPlayerMessage:fromClient:
_handleGetNowPlayingPlayersMessage:fromClient:
_handleGetOutputContextUIDMessage:fromClient:
_handleGetPairedDevicesMessage:fromClient:
_handleGetPendingCommandsMessage:fromClient:
_handleGetPickableRoutesMessage:fromClient:
_handleGetPickedRouteHasVolumeControlMessage:fromClient:
_handleGetPlaybackStateMessage:fromClient:
_handleGetPlayerPictureInPictureEnabledMessage:fromClient:
_handleGetPlayerPropertiesMessage:fromClient:
_handleGetRecentAVOutputDeviceUIDsMessage:fromClient:
_handleGetRemoteTextInputSessionMessage:fromClient:
_handleGetSavedAVRoutePasswordMessage:fromClient:
_handleGetSupportedBrowsableContentAPIsMessage:fromClient:
_handleGetSupportedCommandsMessage:fromClient:
_handleGetSupportsSystemPairingMessage:fromClient:
_handleGetSystemIsMutedMessage:fromClient:
_handleGetSystemVolumeMessage:fromClient:
_handleGetUIServerRelayEndpointMessage:fromClient:
_handleGetVirtualOutputDevicesMessage:fromClient:
_handleGetVolumeControlCapabilitiesMessage:fromClient:
_handleGetVolumeMessage:fromClient:
_handleGroupDevicesAndSendCommand:fromClient:
_handleHiliteModeChanged:
_handleInputDeviceConnectedMessage:fromClient:
_handleInputDeviceDisconnectedMessage:fromClient:
_handleIsPlayingDidChangeNotification:
_handleKeepAliveMessage:fromClient:
_handleLayoutDidChangeNotification:
_handleLegacyVolumeControlCapabilitiesDidChangeMessage:
_handleLocalPlaybackBeganNotification:
_handleLyricsEventMessage:fromClient:
_handleMaybeCanMigrateToLocalEndpointDidChange:
_handleMediaServerDeath
_handleMigrateFromEndpointToEndpointMessage:fromClient:
_handleMigrateFromEndpointToOutputDevicesMessage:fromClient:
_handleModifyOutputContextMessage:fromClient:
_handleModifyOutputContextRequestMessage:fromClient:
_handleNotificationMessage:
_handleNowPlayingAppDidChange:
_handleNowPlayingAppMaybeDidChange:
_handleNowPlayingApplicationDidChangeNotification:
_handleNowPlayingApplicationDidForegroundNotification:
_handleNowPlayingApplicationDidUnregisterCanBeNowPlaying:
_handleNowPlayingClientDidChange:
_handleNowPlayingPlaybackStateChanged:
_handleNowPlayingPlayerDidChange:
_handleObserverDiscoveryModeDidChangeNotification:
_handleOriginDidRegisterNotification:
_handleOriginDidUnregisterNotification:
_handleOriginIsPlayingDidChange:
_handleOutputContextDidAddLocalDevice:
_handleOutputContextDidAddOutputDeviceNotification:
_handleOutputContextDidRemoveLocalDevice:
_handleOutputContextManagerDidReset:
_handleOutputDevicesDidChangeNotification:
_handleOutputDevicesRemovedMessage:
_handleOutputDevicesUpdatedMessage:
_handlePersonalDeviceChangeNotification:
_handlePing:fromClient:
_handlePlaybackQueueCapabilitiesChanged:
_handlePlaybackQueueChanged:
_handlePlaybackQueueChangedNotification:
_handlePlaybackQueueDidChangeNotification:
_handlePlaybackQueueRequest:forPlayer:completion:
_handlePlaybackQueueRequest:forPlayerPath:completion:
_handlePlaybackQueueRequestMessage:fromClient:
_handlePlaybackSessionMigrateBeginMessage:fromClient:
_handlePlaybackSessionMigrateBeginRequest:forPlayerPath:completion:
_handlePlaybackSessionMigrateEndMessage:fromClient:
_handlePlaybackSessionMigrateEndRequest:error:forPlayerPath:completion:
_handlePlaybackSessionMigrateRequest:request:forPlayerPath:completion:
_handlePlaybackSessionMigrateRequestMessage:fromClient:
_handlePlaybackSessionRequest:forPlayerPath:completion:
_handlePlaybackSessionRequest:fromClient:
_handlePlaybackSessionRequestMessage:fromClient:
_handlePlaybackStateDidChange:
_handlePlaybackStateDidChangeNotification:
_handlePlayerDidRegister:
_handlePlayerDidRegisterCanBeNowPlayingNotification:
_handlePlayerDidRegisterNotification:
_handlePlayerDidUnregisterCanBeNowPlayingNotification:
_handlePlayerDidUnregisterNotification:
_handlePlayerIsPlayingDidChange:
_handlePlayerIsPlayingDidChangeNotification:
_handlePlayerPictureInPictureEnabledDidChange:
_handlePlayerPlaybackQueueCapabilitiesDidChangeNotification:
_handlePlayerPlaybackQueueContentItemArtworkDidChangeNotification:
_handlePlayerPlaybackQueueContentItemsDidChangeNotification:
_handlePlayerPlaybackQueueDidChangeNotification:
_handlePlayerPropertiesDidChange:
_handlePlayerStateChanged:
_handlePlayerStateDidChangeNotification:
_handlePostNotificationMessage:fromClient:
_handlePredictGroupLeader:fromClient:
_handlePresentMediaControlsCommandMessage:fromClient:
_handlePresentMediaControlsLanguageOptionsCommandMessage:fromClient:
_handlePresentRouteAuthorizationStatusMessage:
_handlePresentRouteAuthorizationStatusMessage:fromClient:
_handlePrewarmMediaControlsCommandMessage:fromClient:
_handlePromptForRouteAuthorizationMessage:
_handlePromptForRouteAuthorizationMessage:fromClient:
_handleReceivedButtonEvent:fromClient:
_handleReceivedCommand:fromClient:
_handleReceivedVoiceInputMessage:fromClient:
_handleRecordingEndpointAvailabilityMessage:fromClient:
_handleRecordingStateChangedMessage:fromClient:
_handleRegisterForWakingNowPlayingNotifications:fromClient:
_handleRegisterGameControllerMessage:client:
_handleRegisterHIDDeviceMessage:fromClient:
_handleRegisterPairingHandlerMessage:fromClient:
_handleRegisterVoiceInputDeviceMessage:fromClient:
_handleRemoteCommand:withOptions:playerPath:completion:
_handleRemoteTextInputMessage:fromClient:
_handleRemoveClient:
_handleRemoveClientMessage:
_handleRemoveFromParentGroup:fromClient:
_handleRemoveNowPlayingClientMessage:fromClient:
_handleRemoveNowPlayingPlayerMessage:fromClient:
_handleRemovePlayer:
_handleRemovePlayerMessage:
_handleRequestAudioAmplitudeSamplesMessage:fromClient:
_handleRequestBlessMessage:fromClient:
_handleRequestPlaybackInitializationMessage:fromClient:
_handleRequestPlaybackQueueCapabilities:fromClient:
_handleRequestVideoThumbnailsMessage:fromClient:
_handleResetOutputContextMessage:fromClient:
_handleResetPlaybackQueueRequests:fromClient:
_handleResolvePlayerPath:fromClient:
_handleRestrictCommandClientsMessage:fromClient:
_handleRestrictionChangedNotification:
_handleResumeNowPlayingSession:fromClient:
_handleSelectSourceMessage:fromClient:
_handleSendCommandMessage:fromClient:
_handleSendLyricsEvent:fromClient:
_handleSendPlaybackSessionMessage:fromClient:
_handleSendPlaybackSessionMigrateBeginMessage:fromClient:
_handleSendPlaybackSessionMigrateEndMessage:fromClient:
_handleSendTelevisionCustomDataMessage:fromClient:
_handleServerXPCMessage:fromClient:
_handleSetActiveOriginMessage:fromClient:
_handleSetApplicationPickedRoutes:fromClient:
_handleSetCanBeNowPlayingAppMessage:fromClient:
_handleSetCanBeNowPlayingPlayerMessage:fromClient:
_handleSetClientPropertiesMessage:fromClient:
_handleSetConnectionStateMessage:
_handleSetConnectionStateMessage:fromClient:
_handleSetDefaultSupportedCommandsMessage:
_handleSetDefaultSupportedCommandsMessage:fromClient:
_handleSetDiscoveryModeMessage:fromClient:
_handleSetHardwareRemoteBehaviorMessage:fromClient:
_handleSetHiliteModeMessage:fromClient:
_handleSetInputModeMessage:fromClient:
_handleSetIsMutedMessage:fromClient:
_handleSetListeningModeMessage:fromClient:
_handleSetMessageLogging:fromClient:
_handleSetNearbyDevice:fromClient:
_handleSetNearbyDevicesToRemoteControlMessage:fromClient:
_handleSetNowPlayingAppOverrideMessage:fromClient:
_handleSetNowPlayingClientMessage:
_handleSetNowPlayingClientMessage:fromClient:
_handleSetNowPlayingPlayerMessage:
_handleSetNowPlayingPlayerMessage:fromClient:
_handleSetOriginClientPropertiesMessage:
_handleSetOriginClientPropertiesMessage:fromClient:
_handleSetOverriddenNowPlayingAppMessage:fromClient:
_handleSetPickedRouteHasVolumeControlMessage:fromClient:
_handleSetPickedRouteMessage:fromClient:
_handleSetPlaybackQueue:fromClient:
_handleSetPlaybackQueueCapabilities:fromClient:
_handleSetPlaybackStateMessage:fromClient:
_handleSetPlayerClientPropertiesMessage:
_handleSetPlayerClientPropertiesMessage:fromClient:
_handleSetPlayerPictureInPictureEnabledMessage:fromClient:
_handleSetPlayerPropertiesMessage:fromClient:
_handleSetRecentAVOutputDeviceUIDMessage:fromClient:
_handleSetRouteDiscoveryModeMessage:fromClient:
_handleSetSavedAVRoutePasswordMessage:fromClient:
_handleSetStateMessage:
_handleSetSupportedBrowsableContentAPIsMessage:fromClient:
_handleSetSupportedCommandsMessage:fromClient:
_handleSetSystemIsMutedMessage:fromClient:
_handleSetSystemVolumeMessage:fromClient:
_handleSetVolumeMessage:fromClient:
_handleStartNowPlayingSession:fromClient:
_handleStopNowPlayingSession:fromClient:
_handleSupportedAPIsDidChangeForClient:
_handleSupportedCommandsDidChange:
_handleSupportedCommandsDidChangeNotification:
_handleTelevisionEndpointAvailableMessage:fromClient:
_handleTextInputMessage:fromClient:
_handleTouchEvent:withDeviceID:fromClient:
_handleTriggerAudioFadeMessage:fromClient:
_handleUnpickAirPlayRoutesMessage:fromClient:
_handleUnregisterPairingHandler:fromClient:
_handleUpdateActiveSystemEndpoint:
_handleUpdateActiveSystemEndpointMessage:fromClient:
_handleUpdateActiveSystemEndpointUIDMessage:fromClient:
_handleUpdateClientMessage:
_handleUpdateClientPropertiesMessage:fromClient:
_handleUpdateContentItemsMessage:
_handleUpdatePlayerMessage:
_handleUpdatePlayerPropertiesMessage:fromClient:
_handleVoiceDataReceivedMessage:fromClient:
_handleVolumeAvailabilityDidChangeNotification:
_handleVolumeCapabilitiesDidChangeNotification:
_handleVolumeControlCapabilitiesDidChangeMessage:
_handleVolumeDidChangeMessage:
_handleWakeMediaAppMessage:fromClient:
_handleWakePlayerServiceMessage:fromClient:
_handleWillStartPlayingInterruptMessage:fromClient:
_handleXPCMessage:
_handlers
_hardwareRemoteBehavior
_hasAttemptedToConnect
_hasAttemptedToConnectDate
_hasConnectionAttemptCompleted
_hasConnectionAttemptCompletedDate
_hasForwarderForOrigin:
_hasLockScreenAssertion
_hasNowPlayingDataTransaction
_hasPersonalDeviceForContext:
_hasPresentedForCurrentPersonalDevices
_hasQuickControlsAssertion
_hasRequestedLegacyNowPlayingInfo
_hasRequestedSupportedCommands
_hasScreenMirroringAssertion
_hasScreenMirroringQuickControlsAssertion
_hasTriggered
_hidSystemClient
_hiliteMode
_homeServer
_hostedDiscoverySessions
_hostedExternalDeviceGraveyard
_hostedExternalDeviceMap
_hostedExternalDevices
_hostedRouteDiscoveryMode
_hostedRoutingController
_hostedRoutingService
_identifier
_idsConnection
_idsDiscoverySession
_idsPriorityFromPriority:
_idsService
_immediateDevices
_inactiveOutputContexts
_indexPathData
_inferredNowPlayingClient
_inferredPlayerPlaybackState
_init
_initVolumeDataIfNeccessary
_initialize
_initializeBonjourServiceWithDeviceInfo:
_initializeDatabaseSchema
_initializeExternalDevice:
_initializeIDSRemoteControlServiceWithRoutingDataSource:
_initializeSystemEndpointInfo
_inputRoute
_inputType
_internalClients
_internalMediaRemoteNotificationIsLegal:
_intializeClient:forRemoteControlChannel:authCallback:completion:
_invalidate
_invalidated
_invalidationHandler
_ioDevice
_isActive
_isAdvertisingProximity
_isCallingClientCallback
_isClientSyncActive
_isCommandCacheCreating:
_isCommandCacheable:
_isConnectionForManagedConfigIDAllowed:
_isDiscoveryChannelConnected
_isMediaAppInstalled:
_isMuted
_isMutedValue
_isPlaying
_keepAlive
_label
_lastClusterConnectionFailureDate
_lastDiscoveryModeDisableDate
_lastDiscoveryModeEnableDate
_lastKnownBluetoothAddress
_lastMessageSentDate
_lastNotPlayingDate
_lastPlayingDate
_lastSentEndpoint
_lastSentEndpointDate
_lastSentEntry
_lastStatusChangeDate
_lastStatusCheckDate
_lastVolumeDecrementEvent
_lastVolumeIncrementEvent
_launchHomePodNowPlaying
_launchTVClusterSettings
_layoutChangeScheduled
_legacyAssertion
_lifetimeController
_listener
_listenerConnection
_loadLocalEndpointConnection
_loadMostRecentlyPicked
_loadTokenRecords
_localDeviceCommitManager
_localDeviceInfoDidChangeNotification:
_localEndpoint
_localEndpointConnection
_localNowPlayingClient
_localOriginClient
_localOutputContextDataSource
_localReceiverPairingIdentity
_localRoutingDataSource
_lock
_lockScreenController
_lockScreenForegrounded
_lockScreenPlayerPath
_lockScreenWidgetActive
_lockScreenWidgetVisible
_logChangesInModifyingOutputDevice:toOutputDevice:reason:
_logEndpointsChanged:oldEndpoints:
_lyricsEvents
_maybeDeviceConnectionStatusChanged
_maybeForwardOriginToLocalOrigin:
_maybeMostRecentlyPlayedDeviceChanged:
_maybePostEndpointDidAddOutputDevice:
_maybePostEndpointDidChangeOutputDevice:
_maybePostEndpointDidRemoveOutputDevice:
_maybePostVolumeControlCapabilitiesDidChange:outputDevice:
_maybePostVolumeDidChange:outputDevice:
_maybeSendPlaybackStateMessageToCompanion
_maybeWakeClient
_mediaServerController
_mediumDevices
_memberOutputDevices
_messageCanLaunchApp:
_messageHandlers
_messageID
_messageKey
_messageProxy
_messageQueue
_messageRequiresMediaServerBlessing:
_migratingDevices
_migrationEvents
_modelName
_mostRecentEvent
_mostRecentEventReason
_mostRecentSelectionReason
_mostRecentStatus
_mostRecentlyPickedDevices
_mostRecentlyUpdatedClient
_mrService
_mutableExternalDeviceClients
_mutableExternalDeviceClientsWithRegisteredCallbacks:
_mutableExternalDeviceClientsWithRegisteredNotification:
_mxSessionIDs
_name
_nameCallback
_nameCallbackQueue
_nearbyDevices
_netServiceTXTRecordDataWithDeviceInfo:
_newIOKitDeviceProperties
_notificationQueue
_notificationToken
_notifications
_notifyActiveSessionMaybeWillBeHijackedByNativePlaybackFromOutputContextModification:
_notifyAndDisconnectClient:withError:
_notifyAndDisconnectClients:withError:completion:
_notifyAvailableEndpointsDidChange:
_notifyAvailableOutputDevicesDidChange:
_notifyDelegate:
_notifyDelegateDidCloseWithError:
_notifyDelegateDidReceiveData:
_notifyDelegateNowPlayingApplicationDidChange
_notifyDelegateNowPlayingPlaybackStateDidChange
_notifyDelegateRoutesDidChange
_notifyDelegateWithConnection:
_notifyLocalDeviceDidChangeOutputContext
_nowPlayingApplicationIsInterrupted
_nowPlayingApplicationIsPlayingStates
_nowPlayingApplicationPID
_nowPlayingAudioFormatContentInfos
_nowPlayingClient
_nowPlayingClientDidRegisterNotification:
_nowPlayingClientDidUnregisterNotification:
_nowPlayingClients
_nowPlayingDataSource
_nowPlayingPlayerClient
_nowPlayingServer
_npServer
_numberOfActiveCalls
_objects
_observedNowPlayingNotifications
_observedVolumeControlNotificationToken
_observerCalloutQueue
_oddsShimDataSource
_onCalloutQueue_notifyStatusDidChange:
_onQueue_activeOriginClient
_onQueue_activePlayerClient
_onQueue_addNowPlayingClient:
_onQueue_addPlayer:
_onQueue_adjustPlaybackTimerIfNeededForPlayerPath:
_onQueue_allNowPlayingInfoClients
_onQueue_allNowPlayingInfoClientsForOrigin:
_onQueue_anyPlayerIsPlaying
_onQueue_beginTimerWithInterval:
_onQueue_calculateActiveNowPlayingClient
_onQueue_calculateActiveNowPlayingPlayerClients
_onQueue_calculateComputedNowPlayingClient
_onQueue_calculateInferredNowPlayingClient
_onQueue_calculateInferredPlaybackStateForPlayer:
_onQueue_calculateShouldShowLockScreenForReason:
_onQueue_canBeNowPlayingDidChange:
_onQueue_companionOriginClient
_onQueue_destroyPlayerPathsForOrigin:
_onQueue_determineGroupLeaderForOutputDevices:availableOutputDevices:options:
_onQueue_evaluateShouldDisconnectWithReason:
_onQueue_existingPlayerClientForPlayer:
_onQueue_isPlaying
_onQueue_isPlayingDidChange:
_onQueue_lastPlayingDate
_onQueue_makeExternalDeviceTransportForEndpoint:designatedGroupLeader:
_onQueue_makeHostedExternalDeviceForEndpoint:didCreate:
_onQueue_maybeSavePlaybackStateForNotification:
_onQueue_maybeSetupPlaybackTimeoutTimerForNotification:
_onQueue_notifyCoalescedPlayerPath:
_onQueue_originClientForDeviceUID:
_onQueue_originClientForGroupLeaderOfDeviceUID:
_onQueue_pictureInPictureEnabledDidChanged:
_onQueue_playbackQueueCapabilitiesDidChange:
_onQueue_playbackQueueContentItemsArtworkDidChange:
_onQueue_playbackQueueContentItemsDidChange:
_onQueue_playbackQueueDidChange:nowPlayingItemChanged:
_onQueue_playbackState
_onQueue_playbackStateDidChanged:
_onQueue_popState
_onQueue_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:
_onQueue_pushState
_onQueue_queryPlayerPath:
_onQueue_recalculateStateForReason:
_onQueue_reevaluateRemoteControlState
_onQueue_reevaluateShouldShowLockScreenForReason:
_onQueue_reevaluateStateWithReason:
_onQueue_reloadEndpoints
_onQueue_reloadInferredStateFromDataSource:reason:
_onQueue_reloadOutputDevices
_onQueue_reloadWithOutputDevices:
_onQueue_removeNowPlayingClient:
_onQueue_removePlayerClientForPlayer:
_onQueue_restoreState
_onQueue_restoredActiveOrigin
_onQueue_savePersistentActiveOrigin:
_onQueue_sendPrepareForSetQueueTo:reason:type:
_onQueue_setActiveOrigin:saveState:
_onQueue_setReceiveNowPlayingUpdates:
_onQueue_setReceiveVolumeControlUpdates:
_onQueue_simplifyToplogyOfPlayerPathIfNeeded:
_onQueue_stateForPlayerPath:
_onQueue_supportedCommandsDidChange:
_onQueue_updateActivityStatus:
_onQueue_updatePlaybackQueue:fromRequest:
_onSerialQueue_addConnectedEndpoint:
_onSerialQueue_calculateActiveEndpoint:event:reason:
_onSerialQueue_calculateProactiveEndpoint:
_onSerialQueue_calculateUserSelectedEndpointForEvent:reason:
_onSerialQueue_connectToEndpoint:reason:queue:completion:
_onSerialQueue_discoverGroup:connect:reason:completion:
_onSerialQueue_discoverOutputDevice:connect:reason:completion:
_onSerialQueue_isEndpointsDesignatedGroupLeader:
_onSerialQueue_maybeSetupPlaybackTimerForEvent:
_onSerialQueue_maybeSetupUserSelectedTimerForEvent:
_onSerialQueue_prepareToConnectWithRequestName:options:userInfo:connectionAttemptDetails:connectionHandler:
_onSerialQueue_prepareToDisconnect:userInfo:completion:
_onSerialQueue_reconnectToOutputDevice:completion:
_onSerialQueue_reevaluateActiveEndpoint:event:changeType:eventReason:clientBundleIdentifier:
_onSerialQueue_reevaluateActiveEndpoint:event:eventReason:clientBundleIdentifier:
_onSerialQueue_reevaluateVolumeControlCapabilitiesForEndpoint:
_onSerialQueue_registerOriginCallbacks
_onSerialQueue_removeConnectedEndpoint:
_onSerialQueue_restoreElectedPlayer
_onSerialQueue_updateSystemEndpoint:type:event:eventReason:
_onSyncSelf_maybeSetupPlaybackTimeoutTimerForEvent:
_onSyncSelf_reevaluateElectedPlayerForEvent:withReason:
_onWorkerQueue_connectDiscoveryChannelWithReason:
_onWorkerQueue_connectRemoteControlChannelForDestination:session:options:completion:
_onWorkerQueue_connectRemoteControlChannelForSource:destination:destinationGroupUID:session:name:
_onWorkerQueue_connectWithOptions:isRetry:userInfo:completion:
_onWorkerQueue_createClientConnectionWithTransport:
_onWorkerQueue_disconnect:
_onWorkerQueue_disconnectAllRemoteControlChannels
_onWorkerQueue_disconnectAllRemoteControlChannelsWithError:
_onWorkerQueue_disconnectDiscoveryChannel
_onWorkerQueue_disconnectRemoteControlChannelForSource:destination:session:
_onWorkerQueue_disconnectRemoteControlChannelsForDestination:error:
_onWorkerQueue_disconnectRemoteControlChannelsWithError:predicate:
_onWorkerQueue_initializeConnectionWithOptions:userInfo:
_onWorkerQueue_initializeDiscoveryChannel
_onWorkerQueue_loadDeviceInfoWithUserInfo:
_onWorkerQueue_reRegisterCustomOriginWithUserInfo:
_onWorkerQueue_registerCustomOriginWithUserInfo:
_onWorkerQueue_reload
_onWorkerQueue_scheduleReload
_onWorkerQueue_sendEndpoint:toClient:options:
_onWorkerQueue_syncClientStateWithUserInfo:
_openDatabase
_options
_optionsData
_optionsDictionary
_origin:client:matchesSubscribedPlayerPath:
_origin:client:player:matchesSubscribedPlayerPath:
_origin:matchesSubscribedPlayerPath:
_originClient
_originClients
_originForwarder
_originForwarders
_originalConnectionStartDate
_originatingAppDisplayID
_otherDeviceInfoDidChange:
_outputContext
_outputContextCallbackQueue
_outputContextController
_outputContextDidChange
_outputDevice
_outputDeviceCallbackTokens
_outputDeviceDiscoveryMode
_outputDeviceModifications
_outputDeviceUID
_outputDeviceVolume
_outputDevicesRemovedCallback
_outputDevicesRemovedCallbackQueue
_outputDevicesUpdatedCallback
_outputDevicesUpdatedCallbackQueue
_outputRoute
_overrideTimer
_owningClient
_packedDeviceIDToDeviceIDMapping
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_pairingCallback
_pairingCallbackQueue
_parsedOptionsDict
_passwordDialogForRouteWithName:usingInputType:
_path
_pendingBarrierCompletion
_pendingClientState
_pendingCommitRequests
_pendingConnectCompletionHandlers
_pendingConnectingEndpointCompletions
_pendingDisconnectDate
_pendingEndpoints
_pendingGroupReconSessionCompletions
_pendingGroupReconSessions
_pendingOutputDevices
_pendingPlaybackSessionMigrateEvents
_pendingReconSessions
_pendingSendPlaybackSessionDisplayIDs
_perPlayerCanBeNowPlaying
_performCommandProcessingAfterSend:
_persistPlaybackSessionAndUpdateOptionsForSessionPreloadCommand:forClient:error:
_persistenceDictionary
_personalDeviceController
_personalDeviceWasRecentlyAttached
_pickableRoutesDidChangeNotification:
_pickedRoute
_pictureInPictureEnabled
_pid
_pinPairingDialog
_pinPairingToken
_platformHasNativeMuteSupport
_playbackQueue
_playbackQueueCapabilities
_playbackQueueInternal
_playbackQueueRequests
_playbackQueueServer
_playbackState
_playbackStateHistory
_playbackStateTimestamp
_playbackTimer
_playerClient
_playerClients
_playerPath
_playerPath:matchesSubscribedPlayerPath:
_playerPathInvalidationToken
_playerPlaybackState
_playerProperties
_playerResult
_playing
_populateApplicationSpecificDataForPrepareForSetQueueCommand:forClient:
_port
_portStatusDidChangeNotification:
_postAppActivityNotificationNamed:withActivity:
_postExternalScreenDidChange
_postIsMutedDidChange:
_postNotification:
_postRouteStatusDidChangeNotificationForRoute:newStatus:
_postVolumeControlCapabilitiesDidChange:
_postVolumeDidChange:
_predictGroupLeaderForOutputDeviceIDs:completion:
_preferredIdentifierForMACAddress:identifier:name:
_presentDialogWithTitle:message:defaultButtonTitle:alternateButtonTitle:completion:
_presentPasswordDialogForRoute:withOptions:
_previousElectedPlayerPath
_previousPlayerPath
_previousPlayerPathInvalidationToken
_prewarmMediaApps
_proactivePrepareForSetQueueSender
_processCanMigrateToLocalEndpointEvent:timestamp:error:
_processDiscoveryObserverChanges
_processID
_processMessage:
_processName
_promptingDevices
_protocol
_proximityController
_pruneCache
_pushStateActivePlayerClient
_pushStateClient
_pushStateHasNowPlayingData
_pushStateIsPlaying
_pushStatePictureInPictureEnabled
_pushStatePlaybackState
_pushStatePlayer
_queue
_queuedBeginLoadingBlocks
_queuedRelayableMessages
_readConnectionRecordsFromDisk
_recentlyPlayingInterval
_reconnaissanceSessions
_reconnectionAttemptCount
_recordingEndpointClients
_redirectionCache
_reevaluateAirplayActive
_reevaluateCanBeNowPlaying
_reevaluateDeviceInfo
_registerAVSystemControllerNotifications
_registerCallbacks
_registerCompanionLinkHandlers
_registerNotifications
_registeredCallbacks
_registeredDevices
_registeredForNowPlayingCount
_registeredForVolumeAvailabilityCount
_registeredVirtualAudioDevices
_registeredVirtualVoiceInputDevices
_registrationDate
_relayMessage:toClientWithBundleIDAndReply:
_relayXPCMessage:andReply:resultCallback:
_relayingMessages
_reloadCachedNowPlayingClients
_reloadCachedNowPlayingItem
_reloadHostedExternalDeviceCallbacks
_reloadHostedExternalDeviceNotifications
_reloadHostedExternalDeviceSubscribedPlayerPaths
_reloadOutputDevices
_reloadScheduled
_reloadVolumeDataWithReason:
_remoteAlertHandle
_remoteAlertWorkerQueue
_remoteControlChannels
_remoteControlConnections
_remoteControlContextForCommand:
_remoteControlContexts
_remoteControlDialog
_remoteControlServer
_remoteControlService
_remoteUIServerEndpoint
_remoteUIService
_removeAuthorizationCallbackForOutputDevice:
_removeClient:
_removeExternalDeviceWithEndpointIdentifier:forReason:
_removeExternalDeviceWithOutputDeviceUID:forReason:
_removeNowPlayingClient:forOrigin:
_removeNowPlayingNotifications
_removeOrigin:
_removedOutputDevices
_requester
_reservedOutputContexts
_resetPersistedConnections
_resolveChangeTypeWithOriginClient:forEvent:
_resolveCommandBeforeSend:toClient:error:
_resolveReason:uid:name:requestID:
_resolveRequest:withCapabilities:
_resolvedLocalDeviceDestinationAppDisplayIdentifierForCommand:
_responseCallback
_responseHandlers
_restoreNowPlayingClientState
_resumeConnection
_resumeConnectionWithState:
_route
_routeDescription
_routeDiscoveryCount
_routeDiscoveryMode
_routeUID
_routeUIDsToIgnorePortStatusFailures
_routedAppDisplayID
_routingContextID
_routingController
_routingDataSource
_routingDataSourceExternalScreenDidChangeNotification:
_routingDataSourcePickableRoutesDidChange:
_routingDataSourcePickableRoutesDidChangeNotification:
_routingDataSourceRouteStatusDidChangeNotification:
_routingServer
_runAssertionName
_runLoop
_saveMostRecentlyPicked
_savedPasswordForOutputDevice:
_scheduleAvailableOutputDevicesReload
_scheduleEndProcessAssertionForClient:
_scheduledAvailableOutputDevicesReload
_searchInProgress
_selectionReason
_sendClientMessage:completion:
_sendCommandPreview:options:playerPath:
_sendContentItemTransaction:request:playerPath:
_sendEndpointScheduled
_sendExternalCommand:withCompletionHandler:
_sendInitiatePlaybackMessage:
_sendLocalCommand:withCompletionHandler:
_sendMediaRemoteCommand:withOrigin:
_sendMessage:device:type:destination:session:options:priority:replyID:response:
_sendMessageForPlayerPath:timeout:reason:factory:completion:
_sendMessageFromEndpoint:outputDevice:withSource:handler:
_sendMessageFromEndpoint:withSource:handler:
_sendQueuedBeginLoadingMessagesForAvailableApp:
_sendQueuedCommandsForDestinationClient:
_sendRemoteControlCommand:toDestinationClient:withCompletion:
_sendRemoteControlCommand:toDestinationClient:withLegacyCompletion:
_sendStateUpdateMessageFromPlayerPath:source:handler:
_senderAppDisplayID
_sendingPlaybackStateToCompanion
_serialQueue
_serverIsRunning
_service
_serviceConnection
_serviceHandlerToken
_serviceToken
_serviceType
_session
_sessionPeer
_sessionUID
_setApplicationPickedRoutes:updateRoutes:forClient:
_setCompletionHandler:
_setGameControllerInputMode:
_setPickedRoute:withPassword:options:
_setQueue:
_setReceiveUpdates:forSource:
_setupNotifications
_sharedDisplayMonitor
_shouldCommitLocalDeviceWithReason:deviceInfo:
_shouldConsiderSuggestions
_shouldCreateClusterOutputDevices
_shouldFinishPresentationForCurrentPersonalDevices
_shouldHandleNotification:
_shouldIgnoreCommand:completion:
_shouldIgnorePortStatusFailureForRouteWithUID:previouslyCachedRouteUID:
_shouldNotifyChange:
_shouldRun
_shouldSendCommandsDuringPhoneCall
_shouldSendStateUpdateMessageFromSource:toClient:
_shouldUseNotification:
_shouldUseSystemAuthenticationPrompt
_silentDiscoverySession
_siriInstanceContext
_siriObserver
_sleepObserver
_sourceOrigin
_sourceUID
_speakerRoute
_started
_stateFromDataSource:
_stateMonitor
_stateObserver
_storePassword:forRoute:
_style
_subscribedPlayerPaths
_subscribedWakingPlayerPaths
_subscriptionController
_suggestionCount
_suggestionPreferences
_supportedCommands
_supportedPlaybackSessionTypes
_supportedRemoteControlCommandsData
_supportsBackgroundAudio
_syncStateToClient:
_synchronized_setSessionUID:
_systemActiveEndpoints
_systemDiscoveryMode
_systemEndpointController
_systemEndpointEntries
_systemMediaClient
_systemMusicContext
_systemMuteDidChange:
_systemVolumeDidChange:
_takeProcessAssertionForClient:withReason:
_taskAssertion
_tasks
_tearDownNotifications
_televisionEndpoints
_televisionNetworkService
_terminationHandler
_timeoutInterval
_timeoutKey
_timeoutTimer
_timeoutTimerFired:
_timer
_titleKey
_token
_tokenRecords
_tombstoned
_topologySimplifier
_totalMessageCount
_totalMessageHandlers
_totalOutgoingMessageCount
_transaction
_transactionEnded
_transactionServer
_transactionWaitDuration
_transactions
_transport
_transportDeviceInfoDidChangeNotification:
_tvEndpoints
_txtDataChangedWithDeviceInfo:
_txtDataChangedWithUserInfo:
_type
_uiController
_uiServer
_unclusteredLocalOutputDevice
_unclusteredOutputDevices
_uniqueIdentifier
_unpair:
_unregisterAVSystemControllerNotifications
_unregisterNotifications
_unresolvedPlayerPath
_updateCapabilitiesValueCache
_updateIsMutedValueCache
_updateSuggestionCountIfNeeded
_updateTransaction
_updateVolumeValueCache
_updatedEndpoints
_updatedOutputDevices
_useOutputDeviceCache
_usedMemory
_usedTransactionMemory
_userDefaults
_userSelectedTimer
_usingSystemPairing
_validateAuditTokens:pids:auditTokens:
_validateDatabase
_verifyClientVersionCompatibility:withError:
_virtualAudioInputServer
_virtualOutputDeviceDictionary
_virtualTouchDevices
_volumeCallbackQueue
_volumeCapabilities
_volumeControlCapabilities
_volumeControlCapabilitiesCallback
_volumeControlCapabilitiesCallbackQueue
_volumeController
_volumeDataIntialized
_volumeFromAVController
_volumeValue
_wakeDevice:dismissScreenSaver:reason:
_wantsCoalescedStateChanged
_wantsEndpointChangeNotifications
_wantsLibraryCommands
_wantsNowPlayingArtworkNotifications
_wantsNowPlayingNotifications
_wantsSystemEndpointNotifications
_wantsVolumeNotifications
_weakObservers
_willStartingPlaybackToOutputDevicesInterrupt:
_workerOperationQueue
_workerQueue
_writeConnectionRecordsToDisk:
_writeDeviceInfo:toPath:
_writeSystemEndpointInfo:
_xpcClient
_xpcConnection
_xpcListener
absoluteString
acquireContentProviderAssertionForType:slot:identifier:errorHandler:
acquireLockScreenControlsAssertion
acquireLockScreenControlsAssertionWithReply:
acquireQuickControlsAssertion
acquireQuickControlsAssertionWithReply:
acquireScreenMirroringQuickControlsAssertion
acquireScreenMirroringQuickControlsAssertionWithReply:
activate
activateWithCompletion:
activateWithContext:
activeClientBundleIdentifier
activeClients
activeContent
activeDialog
activeNowPlayingClient
activeOrigin
activeOriginClient
activeOutputContexts
activeOutputDeviceUID:
activePasswordDialog
activePlayerClient
activePlayerClients
activePlayerIsPlaying
activePlayerPath
activePlayerPlaybackState
activeStreamCount
activeSystemEndpointOutputDeviceUID
activeSystemEndpointStartupDelayToAllowAllPreviousClientsTimeToInitializeInterval
activeSystemEndpointUID
activeTelevisionRouteID
activeTransactions
activity
activityController
activityServer
addAuthorizationCallbackForOutputDevice:callback:
addAuthorizationCallbackForOutputDevice:client:
addAuthorizationCallbackForRouteID:requestCallback:
addChannel:forDestination:session:
addClient:
addClientObserver:
addDelegate:queue:
addEndpointsChangedCallback:
addEntriesFromDictionary:
addGameController:
addHandlerForRouteUID:completion:
addHandlerReturnStatus:
addHostedExternalDevice:endpoint:
addMessage:
addMessageHandler:
addMessageHandlerForDevice:handler:
addObject:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperationWithBlock:
addOutputDevice:
addOutputDevices:initiator:withCallbackQueue:block:
addOutputDevices:initiator:withReplyQueue:completion:
addOutputDevicesChangedCallback:
addPendingPlaybackSessionMigrateEvent:playerPath:
addRegisteredVirtualVoiceInputDevice:
addRequest:
addRoutedCommand:
addSharedAudioOutputContext
addTextField:
addVirtualOutputDevice:forClient:
addVirtualTouchDevice:
addedOutputDevices
addingOutputDeviceUIDs
adjustMemory:
adjustOutputDeviceVolume:outputDevice:queue:completion:
adjustVolume:error:
adjustVolumeWithStepAmount:error:
adjustment
advertisingReasonDescription
airPlayGroupID
airPlayRemoteControlService:didAcceptConnection:
airPlayService
airplayActive
airplayActiveDidChangeNotification:
airplaySecuritySettings
alertHeader
alertMessage
allClients
allClusterMembers
allClusterMembersOutputDevices
allClusteredDevices
allLocalNowPlayingInfoClients
allNowPlayingInfoClients
allObjects
allSharedAudioOutputContexts
allStreams
allStreamsExcludingLocal
allValues
allocWithZone:
allowAllClientUIConnections
allowList
allowedAuditTokens
allowedTransactionMemory
alwaysIgnoreDuringCall
alwaysIgnoreDuringSharePlay
anonymousListener
anyClient
anyDeviceInfoDidChangeNotification:
anyObject
anyOrigin
anyOutputContextDidAddOutputDeviceNotification:
anyPlayer
anyPlayerIsPlaying
anyPlayerPath
apiCoordinator
appOptions
appState
appendFormat:
appendString:
applicationInfoForApplication:
applicationPickedRoutes
applicationProxyForIdentifier:
applicationsSupportingAPIs:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
artworkByResizingWithWidth:height:
artworkCache
artworkCacheSize
artworkHeight
artworkWidth
assertion
attributeForKey:
attributeWithDomain:name:
audioSessionID
audioSessionType
auditToken
authorizationRequestCallbackForRouteID:
authorizationTokenType
autoConnectedEndpoints
autoConnectingEndpoints
autorelease
auxiliaryOutputContext
avDiscoverySession
avOutputDevice
availableDistantAudioOutputDevices
availableDistantOutputDevices
availableEndpoints
availableEndpointsDidChange:
availableExternalDevices
availableOrigins
availableOutputDevices
availableOutputDevicesDidChange:
avrcpCommand
baseGroupID
baseParentGroupID
batchedNowPlayingState
beginSearchWithTimeout:completion:
beginSearchWithTimeout:mapCompletion:
bestStreamToInterrupt
bluetoothAddress
bluetoothID
bonjourRemoteControlService:didAcceptConnection:
boolForKey:
boolValue
broadcastCommandWaitDuration
broadcastRemoteControlCommand:
broadcastRemoteControlCommand:completion:
buffer
buildVersion
bundle
bundleID
bundleIdentifier
bundleInfoValueForKey:PID:
bundleVersion
bundleWithURL:
buttonEvent
buttonIdentifier
bytes
cachedNowPlayingClients
cachedNowPlayingContentItem
cachingPolicy
callControllerWillHandleCommandForBargeCalls:
callObserver:callChanged:
callback
calloutQueue
calls
canAccessAppleMusic
canAccessRemoteAssets
canAccessiCloudMusicLibrary
canActivateStreamWithPlayerPath:
canBeClusterMember
canBeDefaultRoute
canBeDefaultSystemRoute
canBeNowPlayingClients
canBeNowPlayingPlayer
canBeNowPlayingPlayerTimestamp
canBeNowPlayingTimestamp
canBeSystemDefaultRoute
canMigrateEvaluationTimestamp
canMigrateToEndpoint:queue:completion:
canMigrateToLocalEndpointError
canRelayCommunicationChannel
canSetVolume
cancel
cancelSearch
capabilities
center
changeDescriptionTo:keyBlock:isUpdatedBlock:descriptionBlock:
changeOutputDevice:
changeType
changedOutputDevices
channelForDestination:session:
characterCount
checkXPCConnectionStatusDefaultInterval
checkXPCConnectionStatusDefaultResponseTimeout
class
clearArtwork
clearArtworkForContentItems:
clearArtworkForItems:
clearContextsForClient:
clearDefaultSupportedCommandsData
clearEndpointForClient:
clearExpiredTokenRecords
clearNowPlayingClientForXPCClient:
clearRecordingEndpointsForClient:
clearRegisteredDevicesForClient:
clearRoutedCommands
clearUserSelectedOutputDeviceUID:event:reason:clientBundleIdentifier:
client
clientBundleIdentifier
clientConnected:
clientConnection
clientConnection:didReceiveMessage:
clientDidDisconnect:error:
clientDisconnected:
clientForBundleIdentifier:
clientForConnection:
clientForPID:
clientForPlayerPath:
clientIdentifier
clientWithRegisteredCustomOrigin:
clientsForApplicationPickedRoute:
clientsWithApplicationPickedRoutes
close
closeAll
closeForClient:userCancelled:
clusterComposition
clusterCompositionMembers
clusterController:clusterStatusDidChange:
clusterController:clusterTypeDidChange:
clusterID
clusterLeaderUID
clusterStatus
clusterType
clusterUID
clusteredDevices
coalescingStates
code
collectDiagnostic:
commandClientsRestriction
commandDictionary
commandID
commandInfosFromData:
commandResult
commandResultWithSendError:
commandResultWithSendError:description:
commandType
commitOutputDeviceToContextIfNeededWithReason:completion:
companionLinkDevices
companionOriginClient
companionService
compare:
compare:options:
completion
completionBlockDictionary
componentsJoinedByString:
computeHostsByGroupIDForOutputDevices:unclusteredDevices:
computeNowPlayingApplication
computedNowPlayingClient
configuration
configurationData
configurationForDefaultMainDisplayMonitor
configurationWithEndpointFeatures:
configureConnection:
configuredClusterSize
conformsToProtocol:
connectToAllEndpointsWhenAnyEndpointBeginsPlayback
connectToEndpointWhenBeginsPlayback
connectToExternalDeviceWithOptions:userInfo:completion:
connectToExternalDeviceWithUserInfo:completion:
connectToGroup:reason:queue:completion:
connectToOutputDevice:reason:queue:completion:
connectToUserSelectedEndpoint
connectWithOptions:userInfo:completion:
connectedClientAuditTokens
connectedExternalDevices
connection
connectionAttemptDate
connectionDidInvalidate:
connectionDidResume:
connectionHandler
connectionMonitor
connectionRecoveryBehavior
connectionStateCallback
connectionStateCallbackQueue
connectionStateError
connectionType
connectionWithEndpoint:
connection_t
connections
containsActiveStream
containsLocalDevice
containsOutputDeviceWithUID:
containsUID:
contentController
contentItem
contentItemForIdentifier:
contentItemWithOffset:
contentItems
contentItemsArtwork
contextForActivityIdentifier:
contextForActivityIdentifier:reply:
contextID
contextSensitive
controlCenterForegrounded
controlCenterVisible
controller:clientPropertiesDidChangeFrom:to:
controller:contentItemsDidUpdate:
controller:contentItemsDidUpdateWithContentItemChanges:
controller:deviceLastPlayingDateDidChange:
controller:didFailWithError:
controller:didLoadArtworkForContentItems:
controller:didLoadResponse:
controller:didUpdateResponse:
controller:playbackQueueDidChangeFrom:to:
controller:playbackStateDidChangeFrom:to:
controller:playerLastPlayingDateDidChange:
controller:supportedCommandsDidChangeFrom:to:
controllerID
controllerWillReloadForInvalidation:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createConnectionWithUserInfo:
createCustomOriginClientForOrigin:
createDelocalizedPlayerPath:
createDiagnosticInfo
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDiscoverySession
createEndpointWithOutputDeviceUIDs:options:queue:completion:
createHostedEndpointForOutputDeviceUIDs:completion:
createHostedEndpointWithOutputDeviceUIDs:completion:
createHostedEndpointWithOutputDeviceUIDs:queue:completion:
createLocalizePlayerPath:
createNowPlayingClient
createOutputContextWithUniqueIdentifier:
createPlaybackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:
creatorProcessID
credentials
cryptoEnabled
cryptoSession
currentActivityInfo
currentAppActivity
currentClientUpdatesConfigMessage
currentConnection
currentMessageCount
currentPersonalDeviceUIDs
currentPlaybackSessionIdentifier
currentPlaybackSessionTypes
currentProtocolVersion
currentRouteHasVolumeControl
currentRouteSupportsVolumeControl
currentRunLoop
currentTaskAssertion
currentVolume
customDataCallback
customDataCallbackQueue
customOrigin
daemonClient
data
dataForKey:
dataFromDeviceInfos:
dataFromTXTRecordDictionary:
dataSource
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfFile:
dataWithPropertyList:format:options:error:
date
dateByAddingTimeInterval:
dateCreated
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugName
declaringAirplayActive
decodeEntries
decodeObjectOfClass:forKey:
defaultCenter
defaultContext
defaultManager
defaultPlaybackQueueRequest
defaultPlaybackQueueRequestWithRange:
defaultPlayer
defaultSize
defaultSupportedCommands
defaultSupportedCommandsData
defaultSupportedCommandsDataForClient:
defaultSupportedCommandsForClient:
delayCreateAssertion
delegate
delegateQueue
deleteIdentityWithError:
description
descriptor
designatedGroupLeader
destination
destinationAppDisplayID
destinationAppProcessID
destinationClient
destinationEndpoint
destinationGroupUID
destinationLocal
destinationOrigin
destinationOutputDeviceUID
determineGroupLeaderForOutputDevices:options:
device
deviceClass
deviceDescriptor
deviceForFromID:
deviceID
deviceIdentifier
deviceInfo
deviceInfoData
deviceInfoDataSource
deviceInfoDataSource:deviceInfoDidChange:
deviceInfoDidChangeNotification:
deviceInfoForOrigin:
deviceInfoForOrigin:queue:completion:
deviceIsActiveTelevision:
deviceMessageHandlers
deviceName
devicePresenceDetected
deviceProperties
deviceState
deviceSubtype
deviceSupportsActivities
deviceType
deviceUID
devicesDelayed
diagnosticInfo
dictionary
dictionaryForKey:
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didCancelRoutePicking:
didCloseCommunicationChannel:
didReceiveData:fromCommunicationChannel:
didSetupReverseCommunicationChannel:
disarm
disconnect:
disconnectInterval
disconnectOrigin:
disconnectUndiscoverableEndpoints:
disconnectWithError:
discoverGroup:reason:queue:completion:
discoverOutputDevice:reason:queue:completion:
discoveryChannel
discoveryChannels
discoveryDescription
discoveryMode
discoveryModeForConfiguration:
discoveryOutputDevicesChanged:forConfiguration:
discoverySession
discoverySessionConfigurations
discoverySessionConfigurationsResults
discoverySessionWithConfiguration:
discoverySessionWithEndpointFeatures:
discoverySessions
discoveryTransaction
dispatchHIDEvent:
dispatchHomeButton
dispatchKeypressEvent:
dispatchUnicodeEventWithText:
displayBacklightLevel
displayMonitor
displayName
displayOn
distantFuture
distantPast
domain
effectiveBoolValueForSetting:
elapsedTimeTimestamp
electedPlayer
electedPlayerController
electedPlayerController:electedPlayerDidChange:change:event:reason:
electedPlayerPath
electedPlayerReason
elements
enableThrottling
encodeEntries
encodeObject:forKey:
encodeWithCoder:
encryptedMessageWithState:text:attributes:usingCryptoSession:
encryptionType
endEvent:
endMirroringActivity
endNowPlayingActivity
endpoint
endpointDidAddOutputDeviceNotification:
endpointDidChangeOutputDeviceNotification:
endpointDidRemoveOutputDeviceNotification:
endpointFeatures
endpointForDeviceUID:
endpointForMachName:service:instance:
endpointForOrigin:
endpointRecentlyUserSelectedInterval
endpointVolumeControlCapabilitiesDidChangeNotification:
endpointVolumeDidChangeNotification:
endpoints
endpointsDelayed
enqueuedCommands
entitlements
enumerateFilteredContentItemsBySubscriptionsForContentItems:block:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
error
errorForCurrentState
errorWithDomain:code:userInfo:
euid
evaluateState
event
eventReason
eventType
eventuallyCommitOutputDevice:
exceptionWithName:reason:userInfo:
existingNowPlayingClientForClient:
existingNowPlayingClientForDisplayID:
existingNowPlayingClientForPlayerPath:
existingOriginClientRequestsForPlayerPath:
existingPlayerClientForPlayer:
existingPlayerClientForPlayerPath:
existingSubscriptionControllerForPlayerPath:
expanseManagerDidJoinExpanseSession:
expanseManagerDidLeaveExpanseSession:
expanseManagerTelevisionDidJoinSession:
expanseManagerTelevisionDidLeaveSession:
expanseSessionActive
expectedClientAuditTokens
expirationDate
explicitNowPlayingClient
exportContentItemArtworkUpdates:forPlayerPath:
exportContentItems:forPlayerPath:
exportNowPlayingState:forPlayerPath:
exportOutputDevice:endpoint:
exportOutputDevices:endpoint:
exportPlaybackQueue:forPlayerPath:
exportSupportedCommands:
exportedInterface
extendedInfo
extendedInfoWithRoute:
externalDevice
externalDeviceArtificalConnectionDelay
externalDeviceCallbackQueue
externalDeviceClient:gameController:propertiesChanged:
externalDeviceClients
externalDeviceDisconnectSleepDuration
externalDeviceDisconnectWaitDuration
externalDeviceForEndpoint:
externalDeviceForOutputDeviceUID:
externalDeviceListenerEndpoint
externalDeviceServer
externalDeviceSleepAssertionOnClientConnectDuration
externalDeviceTimeoutDuration
externalOutputContext
externalScreenType
fadeType
failedToSetupReverseCommunicationChannel:
fileExistsAtPath:
fileSystemRepresentation
fileURLWithPath:
filterOutputDevices:remoteControllableOnly:
filteredContentItemsBySubscriptionsForContentItems:
first
firstObject
fittedArtworkForContentItem:withRequest:
floatValue
flushLyricsEvents:
flushPendingPlaybackSessionMigrateEvents:
flushVolumeEvents:
forceDeviceInfoDiscovery
forceEnableCECVolume
forwardInvocation:
forwarder
forwarderWithTarget:
forwarderWithXPCTarget:
gain
gameController:propertiesDidChange:
gameControllerConnectionDidInterrupt:
gameControllerWithID:
generateDescriptor
genericNetworkService
getActivePairedDevice
getAvailableEndpointsWithCompletion:
getAvailableOutputDevicesWithCompletion:
getBytes:length:
getClusterStatus:
getConnectionStateWithCompletion:
getCustomOriginDataWithCompletion:
getDevicePresenceDetectedWithCompletion:
getExternalDeviceIsPairedWithCompletion:
getExternalDeviceMetadataWithCompletion:
getExternalOutputContextWithCompletion:
getPersonalOutputDevices:
getValue:
getVolume:forCategory:
groupContainsDiscoverableGroupLeader
groupContainsGroupLeader
groupContextID
groupLeader
groupUID
groupedDevices
handleCanBeNowPlayingPlayerDidChange:
handleContentItemTransaction:packets:group:
handleDidReceiveResetConnectionRequest
handleFirstLaunchAfterBootIfNeeded
handleForIdentifier:error:
handleHIDReport:
handleIncomingMessage:type:destination:session:messageID:replyID:
handlePlaybackQueueRequest:fromClient:
handlePlaybackQueueRequestTransaction:packets:group:
handleSetConnectionStateMessage:forClient:
handleSetDiscoveryModeMessage:forClient:
handleTouchEvent:
handleXPCMessage:fromClient:
handlerReturnStatuses
handlers
hardwareRemoteBehavior
hasArtworkAvailable
hasAttemptedToConnect
hasAuxiliaryProperties
hasConnectionAttemptCompleted
hasElapsedTimeTimestamp
hasEnded
hasLength
hasLocation
hasLockScreenAssertion
hasLockScreenControlsAssertion
hasNowPlayingData
hasPlaceholder
hasPlaybackStateTimestamp
hasPlayedRecently
hasPrefix:
hasPresentedForCurrentPersonalDevices
hasQuickControlsAssertion
hasRequest:
hasRequestedLegacyNowPlayingInfo
hasRequestedSupportedCommands
hasScreenMirroringAssertion
hasScreenMirroringQuickControlsAssertion
hasTriggered
hash
height
homeKitUserIdentifiers
hostName
hostProcess
hostedDiscoverySessionDidInvalidate:
hostedDiscoverySessions
hostedExternalDeviceConnectionStateDidChange:withError:
hostedExternalDeviceDidAddOutputDevice:
hostedExternalDeviceDidChangeOutputDevice:
hostedExternalDeviceDidReceiveCustomData:withName:
hostedExternalDeviceDidRemoveOutputDevice:
hostedExternalDeviceEndpointDidChange:
hostedExternalDeviceForEndpointIdentifier:
hostedExternalDeviceManagerDidUpdateExternalDeviceMapping:
hostedExternalDeviceNameDidChange:
hostedExternalDeviceVolumeCapabilitiesDidChange:forOutputDevice:
hostedExternalDeviceVolumeDidChange:forOutputDevice:
hostedExternalDevices
hostedRouteDiscoveryMode
hostedRoutingController
hostedRoutingController:endpointsDidChange:
hostedRoutingController:outputDevicesDidChange:forFeature:
hostedRoutingService
hostname
iTunesAudioContext
identifier
identifierWithPid:
identifyingMACAddress
idsCompanionRemoteControlService:didAcceptConnection:
idsConnection
idsDiscoverySession
idsRemoteControlService:didAcceptConnection:
idsService
imageData
immediateDevices
inactiveOutputContexts
includeArtwork
indexOfObject:
indexOfObject:inRange:
indexOfObjectPassingTest:
indexPathData
indexesOfObjectsPassingTest:
inferredNowPlayingClient
inferredPlaybackState
info
infoDictionary
ingestData:
init
initFromTransactionName:
initWithAVOutputContext:type:
initWithAVOutputDevice:
initWithAVOutputDevice:sourceInfo:
initWithAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:clusterAwareAddingOutputDeviceUIDs:clusterAwareRemovingOutputDeviceUIDs:clusterAwareSettingOutputDeviceUIDs:
initWithAllSupportedMessages
initWithArray:
initWithArray:copyItems:
initWithBlock:
initWithBundleID:audioSessionID:isPlaying:
initWithBundleID:processID:
initWithBundleIDs:states:
initWithBundleIdentifier:
initWithButtonEvent:
initWithBytes:length:
initWithBytes:length:encoding:
initWithCString:encoding:
initWithCapabilities:
initWithCapabilities:endpointUID:outputDeviceUID:
initWithCapacity:
initWithClientObject:
initWithClientObject:invalidationHandler:
initWithCoder:
initWithCommand:options:playerPath:
initWithCommand:routedApp:
initWithCommandID:commandResult:
initWithCommandType:playerPath:unresolvedPlayerPath:senderAppDisplayID:optionsData:
initWithConfiguration:
initWithConfigurationData:style:endpoint:
initWithConnection:
initWithConnection:bundleID:
initWithConnection:hostedRoutingController:
initWithConnection:label:
initWithConnection:queue:defaultReplyQueue:
initWithConnection:type:destination:session:
initWithConnectionState:
initWithContentItems:
initWithContentItems:forPlayerPath:
initWithContentItems:location:
initWithContextID:originatingAppDisplayID:
initWithControllerID:
initWithData:
initWithData:forKey:
initWithDataSource:delegate:
initWithDeallocHandler:
initWithDefaultSupportedCommands:forPlayerPath:
initWithDelegate:
initWithDescriptor:
initWithDesignatedGroupLeader:outputDevices:preferredSuffix:
initWithDesignatedGroupLeader:outputDevices:preferredSuffix:connectionType:
initWithDestination:
initWithDeviceDescriptor:
initWithDeviceFeatures:
initWithDeviceID:
initWithDeviceID:errorCode:
initWithDeviceInfo:
initWithDeviceUID:
initWithDeviceUID:sessionUID:targetDevice:error:
initWithDevices:
initWithDictionary:
initWithDictionaryRepresentation:
initWithDiscoverySession:
initWithDomain:type:name:
initWithEndpointFeatures:
initWithErrorCode:deviceIdentifier:
initWithEvent:
initWithExternalDevice:
initWithFadeDuration:error:
initWithFirst:second:
initWithGameControllerProperties:controllerID:
initWithGroupUID:
initWithHandlerStatuses:sendError:
initWithHiliteMode:
initWithIdentifier:type:displayName:
initWithIdentifiers:
initWithInputMode:
initWithInputStream:outputStream:
initWithInterval:name:queue:block:
initWithInterval:repeats:queue:block:
initWithIsMuted:
initWithKey:data:
initWithLastPlayingDate:
initWithLastSupportedMessageType:
initWithListenerEndpoint:
initWithListeningMode:outputDeviceUID:
initWithMRError:
initWithMRError:description:
initWithMRError:format:
initWithMRError:userInfo:
initWithMode:configuration:
initWithName:
initWithName:fromMessage:withDelegate:
initWithName:options:queue:delegate:
initWithName:pid:bundleID:subsystem:reason:flags:
initWithName:playerPath:
initWithName:timeout:
initWithNetServiceType:
initWithNotification:userInfo:
initWithNowPlayingState:
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:outputDeviceUpdates:systemEndpointUpdates:subscribedPlayerPaths:
initWithObjects:
initWithOptions:
initWithOrigin:client:player:
initWithOrigin:destinationOrigin:
initWithOriginClient:
initWithOutputContext:
initWithOutputContext:designatedGroupLeader:
initWithOutputContextCommunicationChannel:outputContext:
initWithOutputDevice:
initWithOutputDevice:groupID:connectionType:
initWithOutputDevice:proxyOutputDevice:
initWithOutputDeviceUID:
initWithOutputDeviceUIDs:
initWithOutputDeviceUIDs:outputDeviceGroupID:features:
initWithOutputDevices:
initWithOutputDevices:configuration:
initWithOwningClient:
initWithPID:audioSessionID:mxSessionIDs:
initWithPairingData:status:
initWithPath:
initWithPlaybackQueue:
initWithPlaybackSession:
initWithPlaybackSession:request:forPlayerPath:
initWithPlaybackState:date:
initWithPlayerPath:
initWithPlayerPath:lastPlayingDate:
initWithPrimaryOutputDevice:members:
initWithProcessIdentifier:bundleIdentifier:
initWithProperties:
initWithQueue:
initWithRange:
initWithRecordingState:
initWithRequest:
initWithRequest:error:playerPath:
initWithRequest:forPlayerPath:
initWithRequest:playerPath:
initWithResponse:
initWithRole:device:
initWithRoute:
initWithRoute:inputType:
initWithRoute:inputType:responseCallback:cancelCallback:
initWithRoute:status:
initWithRouteUID:
initWithRouteUID:center:
initWithRoutingContextUID:multipleBuiltInDevices:
initWithRoutingController:
initWithRoutingDataSource:
initWithRoutingDataSource:hostedRoutingService:systemEndpointController:autoConnectionController:homeServer:avOutputDeviceAuthorizationSession:
initWithService:
initWithServiceName:viewControllerClassName:
initWithSuiteName:
initWithTimeIntervalSinceReferenceDate:
initWithTimeout:reason:queue:handler:
initWithTitle:
initWithTransport:
initWithUTF8String:
initWithUnderlyingCodableMessage:error:
initWithUniqueIdentifier:
initWithUnresolvedPlayerPath:
initWithVersion:data:
initWithVolume:endpointUID:outputDeviceUID:
initWithW:h:
initWithWithSendError:description:
initWithXPCConnection:label:
initialize
initializeBundleIdentifier
initializeDestinationOriginWithSourceOriginData
initializeDisplayName
initializeServer
inputRoute
inputType
insertObject:atIndex:
intValue
integerValue
interfaceWithIdentifier:
interfaceWithProtocol:
interruptBestStreamIfNecessaryToActivateStreamWithPlayerPath:reason:completion:
intersectsSet:
invalidate
invalidateOnDate:
invalidateWithReason:
invalidated
invalidationHandler
invokeWithTarget:
ioDevice
isAVRCPCommand
isActive
isActiveStream
isActivity
isActivityActive
isAdvertisingProximity
isAirPlayReceiverSessionActive
isAllowedAccessToDataFromPlayerPath:
isAuxiliary
isAwareOfCluster:
isCallingClientCallback
isCompanion
isConnected
isContextSensitive
isDestinationLocal
isDirectConnectedToOutputDeviceUID:
isDiscoveryChannelConnected
isEligibleForSpatialization
isEntitledFor:
isEqual:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToOrderedSet:
isEqualToSet:
isEqualToString:
isFirstLaunchAfterBoot
isForegrounded
isGroupLeader
isGroupable
isHomepodDemoApplication
isHosted
isInputRoute
isIntegratedDisplay
isKindOfClass:
isLegacyNowPlayingInfoRequest
isLocalDevice
isLocalOrigin
isLockScreenWidgetActive
isLockScreenWidgetVisible
isMediaRemoteDaemon
isMemberOfActiveSystemEndpoint
isMemberOfClass:
isMultiplayerAware
isMultiplayerHost
isNavigational
isOutputRoute
isPaired
isPairedDeviceSync
isPairingAllowed
isPicked
isPictureInPictureEnabled
isPlaying
isPrimaryLocalDevice
isProxyGroupPlayer
isRemoteControllable
isResolved
isSmartDevice
isSpeakerRoute
isSubsetOfSet:
isSupported:
isSystemMediaApplication
isUsingJSONProtocol
isUsingSystemPairing
isWaking
keepAlive
label
lastBootUUID
lastDiscoveryModeDisableDate
lastDiscoveryModeEnableDate
lastKnownBluetoothAddress
lastMessageSentDate
lastNotPlayingDate
lastObject
lastPathComponent
lastPlayingDateForPlayerPath:
lastPlayingDeviceThresholdInterval
lastReportedClientIdentifiers
lastSentEntry
lastStatusChangeDate
lastStatusCheckDate
lastSupportedMessageType
laterDate:
launchApplicationTimeoutInterval
layoutMonitor:didUpdateDisplayLayout:withContext:
length
lifetimeController
listener
listener:shouldAcceptNewConnection:
listeningMode
localActiveClientBundleIdentifier
localActiveClientPID
localActiveNowPlayingClient
localActivePlayerClient
localActivePlayerIsPlaying
localActivePlayerPath
localActivePlayerPlaybackState
localClient
localClusterTypeDidChangeNotification:
localDeviceUID
localEndpointConnection
localLastPlayingDate
localNowPlayingClient
localOrigin
localOriginClient
localOutputContextDataSource
localPlaybackState
localPlayersForXpcClient:
localReceiverPairingIdentity
localizeDestinationOrigin:completion:
localizeDestinationPlayerPath:completion:
localizedDescription
localizedFailureReason
localizedModelName
localizedName
localizedPlayerIDFromPlayerPath:
location
lock
lockScreenContentControllerStateDidChange:
lockScreenController
lockScreenController:lockScreenWidgetActiveDidChange:
lockScreenController:lockScreenWidgetVisibleDidChange:
lockScreenController:playerPathDidChange:
lockScreenForegrounded
lockScreenPlatterActive
lockScreenPlatterHasContent
lockScreenPlayerPath
lockScreenUIController
lockScreenVisible
lockScreenWidgetActive
lockScreenWidgetVisible
logEvent:withInfo:
logicalOutputDeviceCount
longLongValue
mainBundle
makeEndpointWithOutputDevices:options:
managedConfigurationDeviceIdentifier
match:
matchesUID:
matchesUniqueIdentifier:
maxStreamCapacity
maxTransactionMemorySize
maybeCommitLocalDeviceWithReason:
maybePostDistributedNotifications
mediaRecentlyPlayedInterval
mediaRouteIdentifier
mediaType
mediumDevices
memberOutputDevices
mergeFrom:
messageHandler
messageID
messageProxy
messageQueue
metadata
methodSignatureForSelector:
migratingDevices
minimalReadableDescription
minimumSupportedHangdogApplicationVersion
minusSet:
mode
modelName
modifyByAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:addingClusterAwareDeviceUIDs:removingClusterAwareDeviceUIDs:settingClusterAwareDeviceUIDs:withReplyQueue:completion:
modifyByAddingDeviceUIDs:removingDeviceUIDs:settingDeviceUIDs:addingClusterDeviceUIDs:removingClusterDeviceUIDs:settingClusterDeviceUIDs:completion:
modifyWithOutputContext:queue:completion:
monitorWithConfiguration:
mostRecentDeviceUID
mostRecentEventReason
mostRecentPlayers
mostRecentPlayingClient
mostRecentSelectionReason
mrService
mr_allOutputDevices
mr_compactMap:
mr_deviceInfo
mr_filter:
mr_first:
mr_formattedDebugDescription
mr_redactClusterMembers
mr_sharedIDSService
msv_filter:
msv_map:
multipleBuiltInDevices
mutableCopy
mutableCopyWithZone:
mutableExternalDeviceClients
mxSessionIDs
name
nameCallback
nameCallbackQueue
navigational
nearbyDevices
needNowPlayingForegroundState
needsCommandRedirection
netService:didAcceptConnectionWithInputStream:outputStream:
netService:didNotPublish:
netService:didNotResolve:
netService:didUpdateTXTRecordData:
netServiceDidPublish:
netServiceDidResolveAddress:
netServiceDidStop:
netServiceType
netServiceWillPublish:
netServiceWillResolve:
networkIdentifier
newHandleWithDefinition:configurationContext:
notification
notificationPlayerPathFromPlayer:
notificationQueue
notificationRequiresTaskAssertionForPlayerPath:
notificationToken
notifications
notifyArtworkChangedForContentItems:
notifyDelegateOfSleepWithCompletion:
notifyDelegateOfWake
notifyDevicesInHomeThatPlaybackStarted
notifyDiscoveryOutputDevicesChanged:forConfiguration:
notifyObserver:didChangeStateFrom:to:
notifyObserver:didReceiveNotificationWithToken:
notifyOutputDevicesChanged:
nowPlayingActivityIdentifier
nowPlayingApplicationDisplayID
nowPlayingApplicationIsInterrupted
nowPlayingApplicationIsPlaying
nowPlayingApplicationPID
nowPlayingApplicationTimeout
nowPlayingApplications
nowPlayingAudioFormatContentInfo
nowPlayingAudioFormatContentInfos
nowPlayingClient
nowPlayingClient:activePlayerDidChangeFromPlayerClient:toPlayerClient:
nowPlayingClient:applicationDidForeground:
nowPlayingClient:clientStateDidChange:
nowPlayingClient:playerDidRegister:
nowPlayingClient:playerDidUnregister:
nowPlayingClientForClient:
nowPlayingClientForPlayerPath:
nowPlayingClientRequests
nowPlayingClients
nowPlayingContentItem
nowPlayingDataSource
nowPlayingDataSourceNowPlayingApplicationDidChange:
nowPlayingDataSourceNowPlayingApplicationPlaybackStateDidChange:
nowPlayingDataSourceNowPlayingApplicationsPlaybackStateDidChange:
nowPlayingDataSourceNowPlayingSessionsPlaybackStateDidChange:
nowPlayingObserverCoalesceInterval
nowPlayingOriginClient:activePlayerClientsDidChange:
nowPlayingOriginClient:activePlayerPathDidChange:withPlaybackState:
nowPlayingOriginClient:applicationActivityDidBegin:
nowPlayingOriginClient:applicationActivityDidEnd:
nowPlayingOriginClient:applicationActivityStatusDidChange:
nowPlayingOriginClient:clientDidRegister:
nowPlayingOriginClient:clientDidUnregister:
nowPlayingOriginClient:currentRouteIsMutedDidChange:
nowPlayingOriginClient:currentRouteVolumeControlCapabilitiesDidChange:
nowPlayingOriginClient:currentRouteVolumeDidChange:
nowPlayingOriginClient:deviceInfoDidChange:previousDeviceInfo:
nowPlayingOriginClientDidChangeAudioFormatContentInfo:
nowPlayingOriginClientPlaybackDidTimeout:
nowPlayingPlayerClient
nowPlayingPlayerClient:clientCanBeNowPlayingDidChange:
nowPlayingPlayerClient:isPlayingDidChange:
nowPlayingPlayerClient:pictureInPictureEnabledDidChange:
nowPlayingPlayerClient:playbackQueueArtworkContentItemsDidChange:
nowPlayingPlayerClient:playbackQueueCapabilitiesDidChange:
nowPlayingPlayerClient:playbackQueueContentItemsDidChange:
nowPlayingPlayerClient:playbackQueueDidChange:nowPlayingItemDidChange:
nowPlayingPlayerClient:playbackStateDidChange:
nowPlayingPlayerClient:playerCanBeNowPlayingDidChange:
nowPlayingPlayerClient:playerStateDidChange:
nowPlayingPlayerClient:supportedCommandsDidChange:
nowPlayingServer
nowPlayingServer:activeOriginDidChangeFromOriginClient:toOriginClient:
nowPlayingSessions
nowPlayingUIWakingPlayerEventAssertionDuration
nowPlayingUpdates
npServer
null
numberOfActivePhoneCalls:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objCType
object
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
observeValueForKeyPath:ofObject:change:context:
observersForSelector:
open
openApplication:withOptions:completion:
optionValueForKey:
optionsData
optionsWithDictionary:
origin
originClient
originClientForDeviceUID:
originClientForGroupLeaderOfDeviceUID:
originClientForOrigin:
originClientRequestsForPlayerPath:
originClients
originForwarders
originatedFromAccessory
originatedFromHID
originatingAppDisplayID
outOfMemoryWaitDuration
outputContext
outputContext:didCloseCommunicationChannel:
outputContext:didReceiveData:fromCommunicationChannel:
outputContextCallbackQueue
outputContextDataSourceDidAddOutputDevice:
outputContextDataSourceDidAddOutputDeviceNotification:
outputContextDataSourceDidChangeOutputDevice:
outputContextDataSourceDidRemoveOutputDevice:
outputContextDataSourceDidRemoveOutputDeviceNotification:
outputContextDataSourceOutputDeviceDidChangeNotification:
outputContextDataSourceOutputDeviceDidChangeVolume:
outputContextDataSourceOutputDeviceDidChangeVolumeControlCapabilities:
outputContextDataSourceOutputDevicesDidChangeNotification:
outputContextDataSourceVolumeControlCapabilitiesDidChangeNotification:
outputContextDataSourceVolumeDidChangeNotification:
outputContextDidAddLocalDeviceNotification:
outputContextDidRemoveLocalDeviceNotification:
outputContextForOutputDevice:
outputContextForOutputDeviceUID:
outputContextForOutputDeviceUIDs:strict:
outputContextForOutputDevices:strict:
outputContextManagerForAllOutputContexts
outputContextModificationDidBeginNotification:
outputContextModificationDidFinishNotification:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContextRequestToAddLocalOutputDeviceNotification:
outputContexts
outputDevice
outputDeviceAuthorizationSession:didProvideAuthorizationRequest:
outputDeviceAuthorizationSession:shouldRetryAuthorizationRequest:reason:
outputDeviceDiscoveryMode
outputDeviceForUID:
outputDeviceForUID:error:
outputDeviceIsMuted:queue:completion:
outputDeviceModifications
outputDeviceUIDs
outputDeviceUpdates
outputDeviceVolume
outputDeviceVolume:queue:completion:
outputDeviceVolume:withCompletion:
outputDeviceVolumeCapabilities
outputDeviceVolumeControlCapabilities:queue:completion:
outputDeviceVolumeControlCapabilities:withCompletion:
outputDeviceWithUID:
outputDevices
outputDevicesChanged:forConfiguration:
outputDevicesDidChangeNotification:
outputDevicesForEndpoint:
outputDevicesRemovedCallback
outputDevicesRemovedCallbackQueue
outputDevicesUpdatedCallback
outputDevicesUpdatedCallbackQueue
outputRoute
overrideClient
overrideTimer
owningClient
pairedDevices
pairingAllowedCallback
pairingAllowedCallbackQueue
pairingCallbackQueue
pairingHandler
pairingManager
pairingSession:didCompleteExchangeWithError:
pairingSession:didPrepareExchangeData:
pairingSession:promptForSetupCodeWithDelay:completion:
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
parentApplicationBundleIdentifier
parentGroupContainsDiscoverableGroupLeader
parentGroupContainsDiscoverableLeader
parentGroupID
parentGroupIdentifier
parentUID
path
pendingBarrierCompletion
pendingClientState
pendingConnectCompletionHandlers
pendingDisconnectDate
pendingEndpoints
pendingOutputDevices
perPlayerCanBeNowPlaying
perform:completion:
performHandlerForRouteUID:passcode:
performMigrationToEndpoint:request:queue:completion:
performMigrationToOutputDevices:request:initiator:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performWithPreferences:completion:
personalDeviceController
personalDeviceControllerStateDidChange:
personalDeviceState
personalDeviceUIDs
personalDeviceWasRecentlyAttached
personalOutputDevices
phoneCallController:didRequestCommand:
phoneCallObserver:callDidChange:
pickCachedRouteWithUID:
pickableRoutesForCategory:
pickableRoutesForCategory:source:
picked
pickedRoute
pickedRouteForCategory:
pickedRouteForCategory:source:
pickedRoutes
pictureInPictureEnabled
pinPairingDialogDidClose:forClient:userCancelled:
pinPairingDialogDidOpen:forClient:
ping:callback:withQueue:
pingWithTimeout:callback:
playbackQueue
playbackQueueCapabilities
playbackQueueForRequest:cachingPolicy:playerPath:partiallyCachedItems:
playbackQueueRequests
playbackSessionData
playbackState
playbackStateDescription
playbackStateForPlayerPath:
playbackStateTimestamp
playbackTimer
playbackTimers
player
playerClient
playerClientForPlayer:
playerClients
playerPath
playerPlaybackState
playerProperties
populatedOutputContexts
port
postActiveOriginDidChange:withPlaybackState:handler:
postActivePlayerDidChangeForPlayerPath:withPlaybackState:handler:
postActivePlayerPathsDidChangeForOrigin:handler:
postAudioFormatContentInfoDidChangeForOrigin:handler:
postClientDidRegisterCanBeNowPlayingForPlayerPath:handler:
postClientDidRegisterForPlayerPath:handler:
postClientDidUnregisterCanBeNowPlayingForPlayerPath:handler:
postClientDidUnregisterForPlayerPath:hasDefaultSupportedCommands:canBeNowPlaying:handler:
postClientNotificationNamed:
postClientNotificationNamed:predicate:
postClientNotificationNamed:userInfo:
postClientNotificationNamed:userInfo:predicate:
postDeviceInfoDidChange:previousDeviceInfo:forOrigin:handler:
postElectedPlayerDidChange:change:event:reason:handler:
postIsMutedDidChange:isMuted:handler:
postIsPlayingDidChange:lastPlayingTimestamp:forPlayerPath:handler:
postLockScreenActiveDidChange:handler:
postLockScreenControlsDidChangeDistributedNotification
postLockScreenPlayerPathDidChange:handler:
postLockScreenVisibleDidChange:handler:
postNotification:
postNotificationName:object:
postNotificationName:object:userInfo:
postNowPlayingApplicationDidChangeForPlayerPath:withPlaybackState:handler:
postNowPlayingClientStateDidChange:forPlayerPath:handler:
postNowPlayingPlayerStateDidChange:forPlayerPath:handler:
postOriginDidRegister:handler:
postOriginDidUnRegister:deviceInfo:handler:
postPictureInPictureDidChange:forPlayerPath:handler:
postPlaybackQueueCapabilitiesDidChange:forPlayerPath:handler:
postPlaybackQueueContentItemsArtworkDidChange:forPlayerPath:handler:
postPlaybackQueueContentItemsDidChange:forPlayerPath:handler:
postPlaybackQueueDidChange:nowPlayingItemDidChange:forPlayerPath:handler:
postPlaybackStateDidChange:forPlayerPath:handler:
postPlayerDidRegisterCanBeNowPlayingForPlayerPath:handler:
postPlayerDidRegisterForPlayerPath:handler:
postPlayerDidUnregisterCanBeNowPlayingForPlayerPath:handler:
postPlayerDidUnregisterWithPlaybackState:canBeNowPlaying:forPlayerPath:handler:
postSupportedCommandsDidChange:forPlayerPath:handler:
postSystemEndpointDeviceChange:type:originClient:handler:
postVolumeCapabilitiesDidChange:capabilities:handler:
postVolumeDidChange:volume:handler:
presentWithCompletion:
previousElectedPlayerPath
previousPlayerPath
prewarmApp:origin:deviceInfo:
prewarmSoon
primaryID
priority
processID
processIdentifier
processInfo
processName
processOutputContext:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
promptingDevices
properties
propertyListWithData:options:format:error:
protobuf
protobufData
protocol
protocolForProtocol:
protocolMessageWithProtobufData:error:
proximityController
proxyForObject:protocol:
proxyForObjects:protocol:
proxyWithObject:protocol:
publishWithOptions:
purgeUnusedDiscoverySessions
pushStateActivePlayerClient
pushStateCanBeNowPlayingPlayer
pushStateHasNowPlayingData
pushStateIsPlaying
pushStatePictureInPictureEnabled
pushStatePlaybackState
queryExistingPlayerPathForXPCMessage:forClient:
queryPlayerPath:
queryPlayerPathForXPCMessage:fromClient:
queue
queuedCommandsTimeoutInterval
queuedInitiatePlaybackMessages
raise:format:
range
rangeContainsNowPlayingItem
rapportRemoteControlService:didAcceptConnection:
rapportService
realToken
reason
reasonWithType:string:
recentlyPlayingInterval
recordingEndpointClients
registerCommunicationChannelForOutputContext:
registerCommunicationsChannels
registerDestinationOriginCallbacksToRelayToSourceOrigin
registerDiscoveryTokenForConfiguration:
registerEvent:callback:
registerForChanges
registerForNotifications
registerForOutputContextNotifications:
registerNotifications
registerObserver:
registerOrigin:deviceInfo:
registerOriginForwarder:
registerOutputContext:
registerRequest:callback:
registerSourceOriginNotifications
registeredCallbacks
registeredDeviceWithID:
registeredDevices
registeredKeyboardUpdates
registeredToNowPlayingUpdates
registeredToSystemEndpointUpdates
registeredToVolumeUpdates
registeredVirtualAudioDevices
registeredVirtualVoiceInputDevices
registrationDate
relayArtworkRequest:forContentItems:withMessage:fromNowPlayingClient:andNotifyXPCClient:
relayPlaybackQueueRequest:withMessage:toNowPlayingClient:backToXpcClient:completion:
relayXPCMessage:andReply:
relayXPCMessage:andReply:resultCallback:
releaseLockScreenControlsAssertion
releaseLockScreenControlsAssertionWithReply:
releaseQuickControlsAssertion
releaseQuickControlsAssertionWithReply:
releaseScreenMirroringQuickControlsAssertion
releaseScreenMirroringQuickControlsAssertionWithReply:
reloadDeviceInfoImmediatly
reloadOutputContexts
remainingStreamCapacity
remoteAlertHandle
remoteAlertHandle:didInvalidateWithError:
remoteAlertHandleDidActivate:
remoteControlChannels
remoteControlClients
remoteControlContexts
remoteControlInterfaceID
remoteControlServer
remoteControlService
remoteControlService:didAcceptClientConnection:
remoteDeviceIdleDisconnection
remoteDeviceIdleDisconnectionInterval
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
remoteTargetWithLaunchingAssertionAttributes:
remoteUIServerEndpoint
removeAllClients
removeAllObjects
removeAllOutputDevices
removeAllVirtualTouchDevices
removeAuthorizationCallbackForOutputDevice:
removeAuthorizationCallbackForRouteID:
removeChannelForDestination:
removeClient:
removeClientForPID:
removeClientObserver:
removeFromParentGroup:queue:completion:
removeGameController:
removeHandler:
removeItemAtURL:error:
removeLyricsEvent:
removeMessageHandlerForType:
removeMessageHandlerForType:destination:session:
removeNowPlayingClientForClient:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectIdenticalTo:
removeObjectsForKeys:
removeObjectsInRange:
removeObserver:name:object:
removeOrigin:
removeOriginRequests:
removeOutputDevice:
removeOutputDeviceFromParentGroup:queue:completion:
removeOutputDevices:
removeOutputDevices:initiator:withCallbackQueue:block:
removeOutputDevices:initiator:withReplyQueue:completion:
removeOutputDevicesChangedCallback:
removePeer
removePendingPlaybackSessionMigrateEvent:
removePlayerClientForPlayer:
removeRequest:
removeVirtualOutputDevicesForClient:
removedOutputDevices
removingOutputDeviceUIDs
replaceObjectAtIndex:withObject:
replyWithData:priority:
replyWithMessage:
requestByRemovingArtwork
requestConnectedDestinationEndpoint:
requestDestinationEndpoint:
requestForSubscribedContentItemIdentifier:
requestID
requestIdentifier
requester
requiresAuthorization
requiresCustomPairing
requiresPIN
reregisterOrigin:deviceInfo:
reserveSlotForLocal
reservedOutputContexts
resetPickedRouteForSource:
resetPickedSystemRouteForSource:
resolveExistingPlayerPath:
resolveOutputDevices:
resolvePlaceholdersForDeviceInfo:
resolvePlayerPath:fromClient:
resolvePlayerPath:fromClient:useDefaultPlayerIfNoneSpecified:
respondWithAuthorizationToken:
respondWithAuthorizationToken:completionHandler:
respondsToSelector:
response
responseHandlers
restoreClientDeviceInfo:
restoreClientState:handler:
restoreDeviceInfoToClient:handler:
restoreStateFromController:
restrictedTo:by:
resultStatuses
resume
retain
retainCount
reverseObjectEnumerator
revision
route
routeDiscoveryCount
routeDiscoveryMode
routeIsActiveWithUID:
routeUID
routedAppDisplayID
routedCommands
routingContextID
routingContextUID
routingDataSource
routingServer
sampleRate
saveTokenRecord:
scheduleLayoutChangeForReason:
scheduleSendBarrierBlock:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
screenSize
searchEndpointsForGroupUID:timeout:reason:queue:completion:
searchEndpointsForOutputDeviceUID:timeout:reason:queue:completion:
searchEndpointsWithPredicate:timeout:reason:queue:completion:
second
selector
self
send:toConnection:completion:
sendButtonEvent:
sendButtonEventWithUsagePage:usage:down:
sendClientUpdatesConfigMessage
sendClientUpdatesConfigMessageWithCompletion:
sendCommand:options:queue:completion:
sendContentItemTransaction:request:playerPath:
sendCustomData:withName:
sendError
sendEvent:toDevicesOfHomeUser:userInfo:
sendEventToCompanion:userInfo:
sendEventToHome:userInfo:
sendGameControllerEvent:
sendLastPlayingDeviceToHome
sendMessage:
sendMessage:device:type:destination:session:options:priority:response:
sendMessage:queue:reply:
sendMessage:timeout:queue:reply:
sendMessage:toDestinations:priority:options:identifier:error:
sendMessage:type:destination:session:options:priority:
sendMessageWithType:playerPath:timeout:reason:factory:completion:
sendPlaybackQueueResponse:forRequest:withMessage:fromNowPlayingClient:toXpcClient:
sendPlaybackSessionUpdateToCompanionCoalesceInterval
sendProactivePFSQAfterBoot
sendProactivePFSQOnProactiveASEChange
sendProactivePFSQOnSiriActivation
sendProactivePFSQOnUserSelectedASEChange
sendRemoteControlCommand:
sendRemoteControlCommand:completion:
sendRemoteControlCommand:toClients:completion:
sendRemoteControlCommand:withCompletionBlock:
sendTransportData:options:
senderAppDisplayID
senderDefaultGroupUID
senderID
serialQueue
server
serverDelegate
serverDiscoveryModeForConfiguration:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
serviceConnection
serviceInterface
serviceToken
serviceType
sessionPeer
sessionUID
setActivatingForSiri:
setActivationHandler:
setActiveClients:
setActiveDialog:
setActiveOrigin:
setActiveOriginClient:
setActiveOutputContexts:
setActivePasswordDialog:
setActivePlayerClient:
setActiveSystemEndpointOutputDeviceUID:
setActiveTopologyChangeIdentifiers:
setActiveTransactions:
setActivity:
setActivityServer:
setAddedOutputDevices:
setAdvertisingReasonDescription:
setAirPlayActive:
setAirPlayGroupID:
setAirPlayGroupUID:
setAirPlayReceivers:
setAirPlayService:
setAirplayActive:
setAirplaySecuritySettings:
setAlertMessage:
setAllClusterMembers:
setAllClusteredDevices:
setAllowedAuditTokens:
setAllowedTransactionMemory:
setAlternateButtonTitle:
setAlwaysAllowUpdates:
setAppOptions:
setAppStateMonitor:
setApplicationPickedRoutes:
setArtwork:
setArtworkCache:
setArtworkHeight:
setArtworkURLTemplates:
setArtworkWidth:
setAssertion:
setAttribute:forKey:error:
setAutoConnectedEndpoints:
setAutoConnectingEndpoints:
setAvDiscoverySession:
setAvailableOutputDevices:
setBatchedNowPlayingState:
setBluetoothAddressChangedHandler:
setBuildVersion:
setBundleIdentifier:
setBundleVersion:
setByAddingObjectsFromArray:
setCachedNowPlayingClients:
setCallback:
setCanAccessAppleMusic:
setCanAccessRemoteAssets:
setCanBeNowPlaying:
setCanBeNowPlayingPlayer:
setCanBeNowPlayingPlayerTimestamp:
setCanBeNowPlayingTimestamp:
setCanMigrateEvaluationTimestamp:
setCanMigrateToLocalEndpointError:
setCenter:
setChangeType:
setChangedOutputDevices:
setClient:
setClientBundleIdentifier:
setClientConnection:
setClientIdentifier:
setClientMessageCallback:
setClientMessagingExpectation:
setClientObservers:
setClusterAware:
setClusterID:
setClusterLeaderID:
setClusteredDevices:
setCoalescingStates:
setCommand:
setCommandClientsRestriction:
setCommandDictionary:
setCommunicationChannelDelegate:
setCompanionService:
setCompletion:
setCompletionBlockDictionary:
setComputedNowPlayingClient:
setConfiguration:
setConfigurationData:
setConfiguredClusterSize:
setConnected:
setConnectedClientAuditTokens:
setConnectedExternalDevices:
setConnection:
setConnectionAttemptDate:
setConnectionHandler:
setConnectionMonitor:
setConnectionRecoveryBehavior:
setConnectionState:
setConnectionState:error:
setConnectionStateCallback:
setConnectionStateCallback:withQueue:
setConnectionStateCallbackQueue:
setConnectionStateError:
setConnection_t:
setContentController:
setContentItems:
setContentItemsArtwork:
setControlCenterForegrounded:
setCryptoEnabled:
setCurrentAppActivity:
setCurrentMessageCount:
setCurrentPersonalDeviceUIDs:
setCurrentPlaybackSessionIdentifier:
setCurrentTaskAssertion:
setCustomDataCallback:
setCustomDataCallback:withQueue:
setCustomDataCallbackQueue:
setCustomOrigin:
setDaemonClient:
setDataSource:
setDate:
setDeclaringAirplayActive:
setDefaultButtonTitle:
setDelegate:
setDelegate:queue:
setDelegateQueue:
setDescriptor:
setDesignatedGroupLeader:
setDesignatedGroupLeaderWhenContextEmpty:
setDestinationAppDisplayID:
setDestinationAppProcessID:
setDestinationEndpoint:
setDestinationGroupUID:
setDestinationOutputDeviceUID:
setDevice:
setDeviceID:
setDeviceInfo:
setDeviceInfoData:
setDeviceInfoDataSource:
setDeviceMessageHandlers:
setDeviceName:
setDeviceSpecificUserInfo:
setDeviceSubType:
setDeviceType:
setDeviceUID:
setDevicesDelayed:
setDiagnosticInfo:
setDictionaryRepresentation:
setDisconnectTimer:
setDiscoveryChannels:
setDiscoveryMode:
setDiscoveryMode:enableThrottling:withCompletion:
setDiscoveryMode:forClientIdentifiers:
setDiscoveryMode:forConfiguration:
setDiscoveryMode:forToken:
setDiscoveryOutputDevicesChangedCallback:forToken:
setDiscoverySession:
setDiscoverySessionConfigurationsResults:
setDiscoverySessions:
setDiscoveryToken:forConfiguration:
setDiscoveryTransaction:
setDispatchQueue:
setDisplayMonitor:
setDisplayOn:
setDistantPersonalOutputDevices:
setElectedPlayer:
setElectedPlayerPath:
setElectedPlayerReason:
setEnableThrottling:
setEndpoint:
setEndpoints:
setEndpointsDelayed:
setEnqueuedCommands:
setEntries:
setError:
setEvent:
setEventType:
setExpectedClientAuditTokens:
setExpirationDate:
setExplicitNowPlayingClient:
setExportedInterface:
setExportedObject:
setExternalDevice:
setExternalDeviceListenerEndpoint:
setForceModalAlertAppearance:
setFrontmostClient:
setGenericNetworkService:
setGroupContainsDiscoverableGroupLeader:
setGroupContainsGroupLeader:
setGroupID:
setGroupLogicalDeviceCount:
setGroupName:
setGroupUID:
setGroupedDevices:
setHandler:
setHardwareRemoteBehavior:
setHasAttemptedToConnect:
setHasConnectionAttemptCompleted:
setHasLockScreenAssertion:
setHasLockScreenControlsAssertion:
setHasPresentedForCurrentPersonalDevices:
setHasQuickControlsAssertion:
setHasRequestedLegacyNowPlayingInfo:
setHasRequestedSupportedCommands:
setHasScreenMirroringQuickControlsAssertion:
setHasTriggered:
setHasVolume:
setHasVolumeCapabilities:
setHomepodDemoMode:
setHostDeviceClass:
setHostName:
setHostPort:
setHostedDiscoverySessions:
setHostedExternalDevices:
setHostedRouteDiscoveryMode:
setIdentifier:
setIdentityCreatedHandler:
setIdentityDeletedHandler:
setIdsConnection:
setIdsDiscoverySession:
setIdsService:
setImageData:
setImmediateDevices:
setInactiveOutputContexts:
setIncludeMetadata:
setIncludesPeerToPeer:
setInferredNowPlayingClient:
setInferredPlaybackState:
setInterface:
setInterfaceTarget:
setInterruptionHandler:
setInvalidationHandler:
setIsAdvertisingProximity:
setIsAirPlayReceiverSessionActive:
setIsCallingClientCallback:
setIsForegrounded:
setIsGroupLeader:
setIsLocalDevice:
setIsMuted:
setIsMuted:error:
setIsPlaying:
setIsProxyGroupPlayer:
setIsRemoteControllable:
setIsVolumeControlAvailable:
setKeepAlive:
setKeyboardType:
setLabel:
setLastBootUUID:
setLastDiscoveryModeDisableDate:
setLastKnownBluetoothAddress:
setLastKnownClusterType:
setLastMessageSentDate:
setLastNotPlayingDate:
setLastPlayingDate:
setLastSentEntry:
setLastStatusChangeDate:
setLastStatusCheckDate:
setLegacyAssertion:
setLength:
setLifetimeController:
setLinkAgent:
setListeningMode:outputDeviceUID:completion:
setListeningMode:outputDeviceUID:queue:completion:
setLocalEndpointConnection:
setLocalLastPlayingDate:
setLocalNowPlayingClient:
setLocalOriginClient:
setLocalOutputContextDataSource:
setLocalPlaybackState:
setLocalReceiverPairingIdentity:
setLocalizedModelName:
setLocallyHosted:
setLocation:
setLockScreenForegrounded:
setLockScreenPlayerPath:
setLockScreenWidgetActive:
setLockScreenWidgetVisible:
setManagedConfigurationDeviceIdentifier:
setMaxResults:
setMediumDevices:
setMessageHandler:
setMessageHandler:forType:
setMessageHandler:forType:destination:session:
setMessageProxy:
setMigratingDevices:
setMigrationEvents:
setModelID:
setMutableExternalDeviceClients:
setName:
setNameCallback:
setNameCallback:withQueue:
setNameCallbackQueue:
setNearbyDevices:
setNotificationQueue:
setNotificationToken:
setNotifications:
setNowPlayingClient:
setNowPlayingDataSource:
setNowPlayingPlayerClient:
setObject:forKey:
setObject:forKeyedSubscript:
setObjects:
setOptionValue:forKey:
setOptions:
setOrigin:
setOriginClient:
setOriginClients:
setOriginForwarders:
setOriginUID:
setOutputContext:
setOutputContextCallbackQueue:
setOutputContextForLocalDeviceDataSource:
setOutputDevice:options:
setOutputDeviceDiscoveryMode:
setOutputDeviceIsMuted:outputDevice:queue:completion:
setOutputDeviceModifications:
setOutputDeviceUID:
setOutputDeviceVolume:
setOutputDeviceVolume:forOutputDevice:withCompletion:
setOutputDeviceVolume:outputDevice:queue:completion:
setOutputDeviceVolume:outputDeviceUID:queue:completion:
setOutputDeviceVolumeCapabilities:
setOutputDevices:
setOutputDevices:initiator:withCallbackQueue:block:
setOutputDevices:initiator:withReplyQueue:completion:
setOutputDevicesRemovedCallback:
setOutputDevicesRemovedCallback:withQueue:
setOutputDevicesRemovedCallbackQueue:
setOutputDevicesUpdatedCallback:
setOutputDevicesUpdatedCallback:withQueue:
setOutputDevicesUpdatedCallbackQueue:
setOverrideClient:
setOverrideTimer:
setPairedDeviceSync:
setPairedPeerRemovedHandler:
setPairingAllowed:
setPairingAllowedCallback:
setPairingAllowedCallback:withQueue:
setPairingCallback:
setPairingCallback:withQueue:
setPairingCallbackQueue:
setPairingHandler:
setPairingManager:
setParentGroupContainsDiscoverableGroupLeader:
setParentGroupContainsDiscoverableLeader:
setParentGroupIdentifier:
setPendingBarrierCompletion:
setPendingClientState:
setPendingConnectCompletionHandlers:
setPendingDisconnectDate:
setPendingEndpoints:
setPendingOutputDevices:
setPerPlayerCanBeNowPlaying:
setPersonalDeviceController:
setPersonalDeviceState:
setPersonalDeviceWasRecentlyAttached:
setPickedRoute:withPassword:
setPickedRoute:withPassword:forSource:
setPickedRoute:withPassword:options:
setPickedSystemRoute:withPassword:forSource:
setPictureInPictureEnabled:
setPinPairingToken:
setPlaybackQueue:
setPlaybackQueueCapabilities:
setPlaybackSessionMigrateRequestCallback:
setPlaybackState:
setPlaybackStateTimestamp:
setPlaybackTimer:
setPlaybackTimers:
setPlayer:
setPlayerClient:
setPlayerPath:
setPlayerPlaybackState:
setPlayerProperties:
setPopulatesExternalDevice:
setPreviousPlayerPath:
setPrimaryUID:
setPriority:
setProcessIdentifier:
setProcessUserIdentifier:
setPromptingDevices:
setProtocol:
setProtocolVersion:
setProxyGroupPlayer:
setPushStateCanBeNowPlayingPlayer:
setPushStateClient:
setPushStateHasNowPlayingData:
setPushStateIsPlaying:
setPushStatePictureInPictureEnabled:
setPushStatePlaybackState:
setPushStatePlayer:
setQueue:
setQueuedInitiatePlaybackMessages:
setRapportService:
setReason:
setRecordingEndpointClients:
setRecordingState:
setRegisteredCallbacks:
setRegisteredKeyboardUpdates:
setRegisteredToNowPlayingUpdates:
setRegisteredToOutputDeviceUpdates:
setRegisteredToSystemEndpointUpdates:
setRegisteredToVolumeUpdates:
setRegisteredVirtualAudioDevices:
setReloadScheduled:
setRemoteAlertHandle:
setRemoteControlChannels:
setRemoteControlContexts:
setRemoteControlInterfaceID:
setRemoteControlService:
setRemoteObjectInterface:
setRemoteUIServerEndpoint:
setRemoteUIService:
setRemovedOutputDevices:
setRequest:
setRequestClientProperties:
setRequestID:
setRequestLastPlayingDate:
setRequestPlaybackQueue:
setRequestPlaybackState:
setRequestSupportedCommands:
setRequester:
setReservedOutputContexts:
setResponseHandlers:
setReturnPartialResults:
setRouteDiscoveryMode:
setRouteUID:
setRoutingContextID:
setRoutingContextUID:
setRunLoop:
setSecure:
setSelectionReason:
setSenderAppDisplayID:
setSenderDefaultGroupUID:
setSendingPlaybackStateToCompanion:
setServer:
setServerDelegate:
setServerDiscoveryMode:forConfiguration:
setService:
setServiceQuality:
setServiceToken:
setSession:
setSessionUID:
setSharedQueueVersion:
setShouldConsiderSuggestions:
setShouldFinishPresentationForCurrentPersonalDevices:
setShouldLog:
setShouldRun:
setShouldUseSystemAuthenticationPrompt:
setShouldVerboselyLog:
setShowAsTopmost:
setShowOnLockscreen:
setSilentDiscoverySession:
setSourceUID:
setStartDate:
setStarted:
setStateMonitor:
setStatus:
setString:
setStyle:
setSubscribedPlayerPaths:
setSuggestionCount:
setSuggestionPreferences:
setSupportedAPIs:forApplication:
setSupportedCommands:
setSupportedMessages:
setSupportedPlaybackSessionTypes:
setSupportedRemoteControlCommands:
setSupportedRemoteControlCommandsData:
setSupportsBackgroundAudio:
setSupportsExtendedMotion:
setSupportsMultiplayer:
setSupportsSharedQueue:
setSupportsSystemPairing:
setSystemActiveEndpoints:
setSystemBooksApplication:
setSystemDiscoveryMode:
setSystemMediaApplication:
setSystemMediaClient:
setSystemPodcastApplication:
setTXTRecordData:
setTarget:
setTelevisionEndpoints:
setTelevisionNetworkService:
setTightSyncUID:
setTimeoutTimer:
setToken:
setTombstoned:
setTotalMessageCount:
setTotalMessageHandlers:
setTransactionWaitDuration:
setTransactions:
setTransitionHandler:
setTransport:
setTransportOptions:
setTransportType:
setType:
setUiActivityInfo:
setUiController:
setUnclusteredLocalOutputDevice:
setUnclusteredOutputDevices:
setUniqueIdentifier:
setUpdatedEndpoints:
setUpdatedOutputDevices:
setUseOutputDeviceCache:
setUseWeakMatching:
setUsedTransactionMemory:
setUserData:
setUserDefaults:
setUserDisplayPreferencesDidChangeCallback:
setUserInfo:
setUsingSystemPairing:
setValue:forKey:
setVirtualOutputDeviceDictionary:
setVoiceRecordingState:
setVolume:
setVolume:error:
setVolume:outputDeviceUID:
setVolumeCallback:
setVolumeCallbackQueue:
setVolumeCapabilities:
setVolumeChangedCallback:withQueue:
setVolumeControlCapabilities:
setVolumeControlCapabilitiesCallback:
setVolumeControlCapabilitiesCallback:withQueue:
setVolumeControlCapabilitiesCallbackQueue:
setVolumeTo:forCategory:
setWaking:
setWantsAssertionsForNotificationsWithPlayerPath:
setWantsEndpointChangeNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsNowPlayingNotifications:
setWantsOutputDeviceNotifications:
setWantsSystemEndpointNotifications:
setWantsVolumeNotifications:
setWithArray:
setWithCapacity:
setWithObject:
setXpcClient:
settingOutputDeviceUIDs
sharedAVSystemController
sharedAudioPresentationContext
sharedAudioPresentationOutputContext
sharedAuthorizationSession
sharedCompanionLinkClient
sharedConnection
sharedConnectionController
sharedController
sharedDataSource
sharedDisplayMonitor
sharedIDSCompanionLinkClient
sharedInstance
sharedLocalDevice
sharedLocalEndpoint
sharedLocalEndpointForRoutingContextWithUID:
sharedLogger
sharedManager
sharedMonitor
sharedOutputContextController
sharedQueueVersion
sharedServer
sharedService
sharedServiceClient
sharedSystemAudioContext
sharedSystemScreenContext
shortValue
shouldBeLocallyHosted
shouldConnectToLocalEndpoint
shouldConsiderSuggestions
shouldFinishPresentationForCurrentPersonalDevices
shouldImplicitlyLaunchApplication
shouldInitializeGenericBonjourService
shouldInitializeIDSService
shouldInitializeRapportService
shouldInitializeTelevisionBonjourService
shouldLogPairingSetupCode
shouldRun
shouldSendCommand:
shouldSendCommandsDuringPhoneCall
shouldUseDeviceInfoForLocalDevice
shouldUseSystemAuthenticationPrompt
shouldWakeDeviceForRemoteControlCommands
showUncommitedDevices
showWithPin:forClient:
signatureWithObjCTypes:
silentDiscoverySession
silentPrimary
skeleton
sleepObserverSystemDidWake:
sleepObserverSystemWillSleep:completion:
snapshotForIsPlaying:
snapshotForPlaybackState:
snapshots
snapshotsForIsPlaying:
sortDescriptorWithKey:ascending:
sortUsingComparator:
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sourceInfo
sourceOrigin
sourceUID
speakerRoute
standardCredentials
standardUserDefaults
start
startContext:
startEvent:
startMirroringActivity
startMonitoringWithOptions:
startNowPlayingActivity
startObservationIfNeeded
state
stateMonitor
stateObserver:didReceiveApplicationClientStateDidChange:
stateObserver:didReceiveClientDidUnregister:
stateObserver:didReceiveCoalescedNowPlayingStateChange:playerPath:
stateObserver:didReceiveDefaultSupportedCommandsChange:playerPath:
stateObserver:didReceiveNowPlayingClientChange:
stateObserver:didReceiveNowPlayingPlayerChange:
stateObserver:didReceivePlayerDidUnregister:
stateObserver:didReceiveVolumeControlCapabilitiesChange:playerPath:
status
stop
stopReceivingUpdatesForSource:
stream:handleEvent:
streamsActivelyUsingSlot
string
stringByAppendingFormat:
stringByDeletingLastPathComponent
stringByReplacingOccurrencesOfString:withString:
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
strongToWeakObjectsMapTable
style
subscribeToPlaybackQueue:forRequest:
subscribedPlayerPaths
subscriptionController
subscriptionControllerForPlayerPath:
suggestionPreferences
suggestionsDisabledInContext:
superclass
supportCoordinatedVolume
supportExpanseMigration
supportGenericAudioGroup
supportIDSDiscovery
supportLastPlayingDevice
supportLockscreenPlatterDisplayForPersonalDevice
supportMultiplayerHost
supportNanoLinkAgent
supportNanoStandalone
supportNowPlayingPIP
supportNowPlayingSessionDataSource
supportOutputContextPrewarming
supportOutputContextSync
supportSessionBasedLockScreenPlatter
supportedAPIsForApplication:
supportedCommands
supportedMessages
supportedPlaybackSessionTypes
supportedProtocolMessages
supportedRemoteControlCommands
supportedRemoteControlCommandsData
supportsBackgroundAudio
supportsEngageOnClusterActivation
supportsIdleDisconnection
supportsImplicitChangeShuffleAndRepeatModeInSetPlaybackQueueCommandOptions
supportsMultiplayer
supportsOutputContextSync
supportsSecureCoding
supportsSharedQueue
syncedOutputDevices
synchronize
synchronousRemoteObjectProxyWithErrorHandler:
synchronousServer
systemActiveEndpoints
systemBooksApplication
systemDiscoveryMode
systemEndpointController
systemEndpointController:activeSystemEndpointDidChangeForRequest:type:
systemEndpointInfo
systemEndpointUpdates
systemMediaAppPlayerPathForNotification:
systemMediaApplication
systemMediaClient
systemPodcastApplication
systemPodcastClient
takeAssertion:forReason:duration:
takelockScreenAssertion
target
televisionEndpoints
televisionNetworkService
textEditingService:attributesDidChange:payload:
textEditingService:echoWithText:
textEditingService:textDidChange:payload:
textEditingService:textEditingDidBegin:withAttributes:payload:
textEditingServiceTextEditingDidEnd:
tightSyncID
tightSyncUID
time
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeSincePlaying
timeSincePlayingForPlayerPath:
timeoutTimer
timerWithInterval:queue:block:
timerWithInterval:repeats:queue:block:
tintColor
title
token
tokenRecords
tombstone
tombstoned
totalMessageCount
totalMessageHandlers
totalOutgoingMessageCount
transaction
transaction:didReceivePackets:receivedSize:requestedSize:queue:completion:
transactionDidEnd:bytesRemaining:
transactionRequestingMemorySize:
transactionServer
transactionWaitDuration
transactionWaitDurationOnNetworkSend
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactions
transport
transport:didReceiveData:
transportDidClose:error:
transportType
triggerAudioFadeInWithReplyQueue:completion:
triggerAudioFadeOutForNowPlayingApplicationWithReplyQueue:completion:
type
uiActivityInfo
uiController
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unclusteredLocalOutputDevice
unclusteredOutputDevices
uniqueIDOverride
uniqueIdentifier
unpair
unpickAirPlayRoutes
unregisterAllVirtualVoiceInputDevices
unregisterDiscoveryToken:
unregisterForChanges
unregisterOrigin:
unregisterOriginForwarder:
unresolvedPlayerPath
unsignedIntValue
unsignedIntegerValue
updateClient:
updateDefaultSupportedCommandsData:forClient:
updateDeviceInfo:origin:
updateLastPlayingDate:
updateOutputDevices:
updatePeer
updatePlaybackQueue:
updatePlaybackQueue:fromRequest:
updatePlaybackQueueWithContentItems:fromRequest:
updatePlaybackState:date:
updatePlayer:
updateUserSelectedSystemEndpoint:
updateUserSelectedSystemEndpoint:event:eventReason:
updateVolume:outputDeviceUID:
updateVolumeControlCapabilities:outputDeviceUID:
updatedEndpoints
updatedOutputDevices
useAPSyncAPI
useClusterDevices
useExternalDeviceSystemPairing
useOutputDeviceCache
usePeerToPeerExternalDeviceConnections
useProactiveEndpoint
useProactivePFSQSender
usedTransactionMemory
userCancelledPickingRoute:
userData
userDefaults
userInfo
userInitiated
valueForEntitlement:
valueForKey:
valueForKeyPath:
valueForProperty:
valueWithBytes:objCType:
valueWithMRHIDTouchEvent:
verboseHostedDiscoverySessionLogging
verboseHostedExternalDeviceClientLogging
verboseMRDMediaRemoteClientLogging
verboseNowPlayingStateObserver
verboseOriginForwarderLogging
verboseRemoteControlDiscoveryLogging
verifyConnectionStatusAndMaybeDisconnect:
verifyCreatedPlayerPath:forClient:error:
verifyGroupLeader:
verifyGroupLeaderForReason:
virtualAudioInputServer:didUpdateRecordingState:forDevice:
virtualOutputDeviceDictionary
virtualOutputDevices
virtualTouchDeviceWithID:
virtualTouchDevices
virtualTouchIDWithPackedID:
visibility
voiceRecordingState
volume
volumeCallback
volumeCallbackQueue
volumeCapabilities
volumeControlCapabilities
volumeControlCapabilitiesCallback
volumeControlCapabilitiesCallbackQueue
volumeControlCapabilitiesForOutputDeviceUID:error:
volumeUpdates
wakingPlayerPathAssertionDuration
wantsCoalescedStateChanged
wantsEndpointChangeNotifications
wantsNowPlayingArtworkNotifications
wantsNowPlayingNotifications
wantsOutputDeviceNotifications
wantsSystemEndpointNotifications
wantsVolumeNotifications
weakObjectsHashTable
weakProxyWithObject:protocol:
width
willBeLocallyHosted
willStartingPlaybackToOutputDevicesInterrupt:
workerQueue
writeToFile:options:error:
writeToURL:options:error:
xpcClient
xpcClientForPlayerPath:
xpcConnection
xpcEndpoint
xpcListener
xpcMessage
zone
@16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
v16@0:8
@"NSString"
@"NSDate"
@24@0:8@16
@24@0:8q16
v40@0:8@16q24@32
v48@0:8@16q24@32@40
v48@0:8q16q24@32@40
v56@0:8q16q24q32@40@48
@40@0:8q16q24^@32
@32@0:8q16^@24
@24@0:8^@16
v48@0:8@16q24q32@40
v32@0:8@16@?24
B24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"MRDNowPlayingServer"
@"MRDHostedRoutingController"
@"NSMutableDictionary"
@"NSUserDefaults"
@"MSVPersistentTimer"
@"MROrigin"
@"<MRDAVSystemEndpointControllerDelegate>"
@"MRPlayerPath"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"MRDPhoneCallObserver"16@"NSString"24
v32@0:8@"NSObject<OS_xpc_object>"16@"MRDMediaRemoteClient"24
v24@0:8@"MRDDiagnostic"16
v40@0:8@16@24@?32
B32@0:8@16@24
@32@0:8@16@24
B20@0:8I16
@40@0:8@16@24^@32
@56@0:8@16@24@32@40@?48
@"NSMutableSet"
@"MRDPhoneCallObserver"
@"MSVSystemDialog"
@"MRDCommandClientRestriction"
@24@0:8^{_NSZone=}16
v28@0:8f16^@20
v32@0:8q16^@24
v28@0:8B16^@20
f16@0:8
I16@0:8
@"MRDAVRoutingDataSource"
I24@0:8@16
v28@0:8I16@20
@20@0:8I16
@"NSMutableArray"
@28@0:8@16I24
B36@0:8@16@24I32
@?24@0:8@16
v20@0:8I16
@"MRDAVRoute"
v24@0:8@"MRDUIClient"16
v24@0:8@?16
v24@0:8@?<v@?>16
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?@"NSString">24
@"MRUIActivityController"
v24@0:8^{__IOHIDEvent=}16
v24@0:8Q16
v24@0:8I16I20
^{__IOHIDEventSystemClient=}
@28@0:8@16i24
i16@0:8
v20@0:8B16
d16@0:8
@20@0:8B16
@44@0:8@16I24@28^@36
v28@0:8@16B24
@"NSArray"
@"NSData"
@"MRDPlaybackQueue"
@"MRDNowPlayingPlayerClientPlaybackState"
@"MROSTransaction"
@"MRPlaybackQueueSubscriptionController"
@"<MRDNowPlayingPlayerClientDelegate>"
@"MRPlayer"
@28@0:8I16@20
q24@0:8@16
v40@0:8@16@24@32
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
@"CUBluetoothClient"
@"NSNetService"
@"<MRDBonjourRemoteControlServiceDelegate>"
v24@0:8@"MRXPCConnectionMonitor"16
v28@0:8f16@20
v28@0:8I16@"NSError"20
v24@0:8@"NSString"16
v32@0:8@"NSData"16@"NSString"24
v24@0:8@"MRAVEndpoint"16
v28@0:8I16@"MRAVOutputDevice"20
v28@0:8f16@"MRAVOutputDevice"20
v24@0:8@"MRAVOutputDevice"16
v32@0:8@"NSArray"16@"MRAVRoutingDiscoverySessionConfiguration"24
@"NSXPCConnection"
@"MRDAVHostedExternalDevicePendingClientState"
@"MRXPCConnectionMonitor"
@"MRDMediaRemoteClient"
@"NSError"
@"MRAVDistantEndpoint"
@"NSNumber"
@"MRDAVHostedExternalDevicePendingClientStateOutputDeviceModifications"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@32@0:8@16@?24
@24@0:8@?16
B80@0:8@16@24@32@40@48@56q64@?72
B88@0:8@16@24@32@40@48@56q64@72@?80
@"IDSService"
@48@0:8@16@24@32@40
B32@0:8@16q24
@"IDSDevice"
@"MRDIDSService"
@36@0:8i16@20@28
@"NSSet"
@36@0:8@16@24B32
@"NSHashTable"
@"NSDictionary"
@"MRClient"
@"AVOutputDeviceDiscoverySession"
@40@0:8@16@24@32
@"<MRDRapportRemoteControlServiceDelegate>"
@"MRCompanionLinkClient"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"MRRapportTransportConnection"
@"<NSObject>"
v32@0:8@16I24I28
v32@0:8@"MRNowPlayingController"16@"MRNowPlayingPlayerResponse"24
v32@0:8@"MRNowPlayingController"16I24I28
v40@0:8@"MRNowPlayingController"16@"MRPlaybackQueue"24@"MRPlaybackQueue"32
v32@0:8@"MRNowPlayingController"16@"NSArray"24
v40@0:8@"MRNowPlayingController"16@"NSArray"24@"NSArray"32
v32@0:8@"MRNowPlayingController"16@"NSDate"24
v40@0:8@"MRNowPlayingController"16@"MRClient"24@"MRClient"32
v32@0:8@"MRNowPlayingController"16@"MRPlayerPath"24
v24@0:8@"MRNowPlayingController"16
v32@0:8@"MRNowPlayingController"16@"NSError"24
@"<MRDProximityControllerDataSource>"
@"MRDDisplayMonitor"
@28@0:8@16B24
v32@0:8d16@?24
@?16@0:8
@"NSTimer"
v32@0:8@16Q24
v28@0:8@16I24
v32@0:8@"MRAVClusterController"16Q24
v28@0:8@"MRAVClusterController"16I24
v32@0:8@?16@24
v48@0:8@16{?=^QQ}24@40
@"MRDBrowsableContentAPICoordinator"
v32@0:8@"MRExternalDeviceTransportConnection"16@"NSError"24
v32@0:8@"MRExternalDeviceTransportConnection"16@"NSData"24
@"MRAVOutputDevice"
@"MRDeviceInfo"
@"MRAVConcreteRoutingDiscoverySession"
@"MRDIDSDiscoverySession"
@"MRAirPlayTransportConnection"
v32@0:8I16B20@?24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?I@"NSError">16
v32@0:8I16B20@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8@16@24I32
v32@0:8@"MRDHostedRoutingController"16@"NSArray"24
v36@0:8@"MRDHostedRoutingController"16@"NSArray"24I32
@"<MRDAVHostedDiscoverySessionDelegate>"
v32@0:8@"MREmulatedGameController"16@"_MRGameControllerPropertiesProtobuf"24
Q24@0:8@16
@24@0:8Q16
Q24@0:8Q16
v28@0:8{_MRHIDButtonEvent=IIB}16
{_MRHIDButtonEvent="usagePage"I"usage"I"down"B}
@"MRAVEndpoint"
@"MRPasscodeCredentials"
@"MRPlaybackQueueClient"
@"MRCoreUtilsPairingSessionPeer"
@"<MRDExternalDeviceServerClientConnectionDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"MRDAVHostedDiscoverySession"16
@"NSXPCListener"
@32@0:8@16Q24
^{sqlite3=}
v32@0:8@"MRProtocolClientConnection"16@"MRProtocolMessage"24
v32@0:8@"MRProtocolClientConnection"16@"NSError"24
@52@0:8@16@24@32@40I48
v48@0:8@16@24@?32@?40
@"<MRDIDSRemoteControlServiceDelegate>"
@"MRDIDSTransportConnection"
@"MRDIDSServerClientConnection"
@"MRExternalDeviceTransportConnection"
v24@0:8d16
@"<MRDPersonalDeviceControllerDelegate>"
@"MRDExternalDeviceHomeServerRecentlyPlayedEntry"
@"MRContentItem"
@"MRDIDSServiceConnection"
@40@0:8Q16@24@32
@32@0:8Q16@24
@"MRDTaskAssertion"
@"<MRTransactionDelegate>"
v64@0:8@16@24Q32Q40@48@?56
v64@0:8@"MRTransaction"16@"NSArray"24Q32Q40@"NSObject<OS_dispatch_queue>"48@?<v@?>56
v32@0:8@"MRTransaction"16Q24
Q24@0:8@"MRTransaction"16
Q32@0:8@16@24
q24@0:8q16
@"<MRDPinPairingDialogDelegate>"
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BSServiceConnection<BSServiceConnectionClient>"
@"MRDUIClientMessageForwarder"
v32@0:8@"NSStream"16Q24
v44@0:8@16@24I32@?36
@"MSVTimer"
@"MRAVRoutingDiscoverySessionConfiguration"
@"<MRDIDSCompanionRemoteControlServiceDelegate>"
@"NSRunLoop"
v40@0:8I16B20@24@?32
v52@0:8@16I24@28@36@?44
v36@0:8I16@20@?28
v40@0:8d16@?24@32
v44@0:8f16@20@28@?36
v48@0:8@16@24@32@?40
v80@0:8@16@24@32@40@48@56@64@?72
v32@0:8q16@24
v40@0:8^v16^v24@?32
v32@0:8I16I20@24
v44@0:8I16@20@28@?36
@"MRExternalClientConnection"
@"MRExternalDeviceTransport"
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16@0:8
@48@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16
v56@0:8@16@24@32@40@?48
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
^{MGNotificationTokenStruct=}
@"<MRDDeviceInfoDataSourceDelegate>"
@"CUPairingManager"
v24@0:8@"MRDNowPlayingDataSource"16
v32@0:8@"MRDDeviceInfoDataSource"16@"MRDeviceInfo"24
v20@0:8f16
@20@0:8i16
v20@0:8i16
@"MRDNowPlayingClient"
@"MRMutableApplicationActivity"
@"MRDNowPlayingDataSource"
@"MRDDeviceInfoDataSource"
@"<MRDNowPlayingOriginClientDelegate>"
@"MRDAVRouteExtendedInfo"
v28@0:8B16q20
v32@0:8@16:24
@"<MRDNowPlayingStateObserverDelegate>"
@"MRPlaybackQueue"
@"MRDOutputDeviceRoutingDataSource"
v24@0:8@"MRDPersonalDeviceController"16
v24@0:8@"MRDLockScreenContentController"16
B24@0:8^@16
@"MRDNowPlayingServerResult"
@"<MRDLockScreenControllerDelegate>"
@"<MRLockScreenUIControllable>"
@"MRDLockScreenAssertion"
@"MRDPersonalDeviceController"
@"MRDLockScreenContentController"
@"SBSLockScreenContentAssertion"
@"<MRDConnectionLifetimeControllerDataSource>"
@"<MRDConnectionLifetimeControllerDelegate>"
v24@0:8@"MRExpanseManager"16
@"MROrigin"16@0:8
v24@0:8@"MROrigin"16
v36@0:8f16@20@?28
v72@0:8@16@24@32@40@48@56@?64
v28@0:8I16I20B24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?@"MRAVDistantExternalDeviceMetadata"@"NSError">16
v24@0:8@?<v@?@"NSData"@"NSError">16
v36@0:8I16@"NSDictionary"20@?<v@?@"NSError">28
v24@0:8@"NSError"16
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v72@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSArray"40@"NSArray"48@"NSArray"56@?<v@?@"NSError">64
v32@0:8@"NSArray"16@?<v@?@"NSString"@"NSError">24
v32@0:8d16@?<v@?@"NSError">24
v28@0:8I16@"MRAVRoutingDiscoverySessionConfiguration"20
v24@0:8@?<v@?@"MRExternalOutputContextDataSource">16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"MRExternalDevice"
@"MRExternalOutputContextDataSource"
@"MRAVRoutingDiscoverySession"
@"MRDConnectionLifetimeController"
v40@0:8@16d24@?32
v32@0:8@"MRCryptoPairingSession"16@"NSData"24
v32@0:8@"MRCryptoPairingSession"16@"NSString"24
v24@0:8@"MRCryptoPairingSession"16
v40@0:8@"MRCryptoPairingSession"16d24@?<v@?@"NSString">32
v32@0:8@"MRCryptoPairingSession"16@"NSError"24
v32@0:8@"MRDRemoteControlService"16@"MRDExternalDeviceServerClientConnection"24
v40@0:8@16Q24@32
v40@0:8@"MRDExternalDeviceServerClientConnection"16Q24@"_MRGameControllerPropertiesProtobuf"32
v36@0:8@16I24@28
v32@0:8@"MRDNowPlayingStateObserver"16@"MRPlayerPath"24
v36@0:8@"MRDNowPlayingStateObserver"16I24@"MRPlayerPath"28
v40@0:8@"MRDNowPlayingStateObserver"16@"NSArray"24@"MRPlayerPath"32
v40@0:8@"MRDNowPlayingStateObserver"16@"MRDNowPlayingObserverState"24@"MRPlayerPath"32
v36@0:8@16@24B32
v32@0:8@"MRDPinPairingDialog"16@"MRDExternalDeviceServerClientConnection"24
v36@0:8@"MRDPinPairingDialog"16@"MRDExternalDeviceServerClientConnection"24B32
v32@0:8@"MRDSleepObserver"16@?<v@?>24
v24@0:8@"MRDSleepObserver"16
v48@0:8@"MRDTextEditingService"16@"NSString"24@"MRTextEditingAttributes"32@"RTIDataPayload"40
v40@0:8@"MRDTextEditingService"16@"NSString"24@"RTIDataPayload"32
v40@0:8@"MRDTextEditingService"16@"MRTextEditingAttributes"24@"RTIDataPayload"32
v24@0:8@"MRDTextEditingService"16
v32@0:8@"MRDTextEditingService"16@"NSString"24
@44@0:8@16B24@28@36
B32@0:8@16^@24
v40@0:8@16q24@?32
v48@0:8@16@24q32@?40
B32@0:8q16@24
v40@0:8Q16@24@32
v24@0:8B16B20
v36@0:8{_MRHIDButtonEvent=IIB}16@28
v64@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16Q48@56
B40@0:8@16@24@32
B48@0:8@16@24@32@40
@"MRDNowPlayingStateObserver"
@"MRDPinPairingDialog"
@"MRDSleepObserver"
@"MROutputContextController"
@"MRDRemoteControlService"
@"Protocol"
v24@0:8@"MRDHostedExternalDeviceManager"16
@32@0:8@16^B24
@40@0:8@16@24Q32
@"MRDHostedExternalDeviceManager"
@"MRDRemoteControlDiscoverySession"
v28@0:8@"MRDLockScreenController"16B24
v32@0:8@"MRDLockScreenController"16@"MRPlayerPath"24
v56@0:8@16@24q32q40@48
v56@0:8@"MRDElectedPlayerController"16@"MRPlayerPath"24q32q40@"NSString"48
v40@0:8@"MRDNowPlayingClient"16@"MRDNowPlayingPlayerClient"24@"MRDNowPlayingPlayerClient"32
v32@0:8@"MRDNowPlayingClient"16@"MRClient"24
v32@0:8@"MRDNowPlayingClient"16@"MRDNowPlayingPlayerClient"24
v28@0:8@"MRDNowPlayingClient"16B24
v28@0:8@16f24
v40@0:8@"MRDNowPlayingOriginClient"16@"MRDeviceInfo"24@"MRDeviceInfo"32
v36@0:8@"MRDNowPlayingOriginClient"16@"MRPlayerPath"24I32
v32@0:8@"MRDNowPlayingOriginClient"16@"MRApplicationActivity"24
v32@0:8@"MRDNowPlayingOriginClient"16@"MRDNowPlayingClient"24
v28@0:8@"MRDNowPlayingOriginClient"16I24
v28@0:8@"MRDNowPlayingOriginClient"16f24
v28@0:8@"MRDNowPlayingOriginClient"16B24
v32@0:8@"MRDNowPlayingOriginClient"16@"NSArray"24
v24@0:8@"MRDNowPlayingOriginClient"16
v32@0:8@"MRDNowPlayingPlayerClient"16@"MRPlayer"24
v28@0:8@"MRDNowPlayingPlayerClient"16B24
v28@0:8@"MRDNowPlayingPlayerClient"16I24
v32@0:8@"MRDNowPlayingPlayerClient"16@"NSData"24
v36@0:8@"MRDNowPlayingPlayerClient"16@"MRPlaybackQueue"24B32
v32@0:8@"MRDNowPlayingPlayerClient"16Q24
v32@0:8@"MRDNowPlayingPlayerClient"16@"NSArray"24
v36@0:8@16I24@?28
v36@0:8@16f24@?28
v36@0:8@16B24@?28
v40@0:8@16B24B28@?32
v44@0:8B16d20@28@?36
v36@0:8B16@20@?28
v44@0:8@16B24@28@?36
v40@0:8Q16@24@?32
v56@0:8@16q24q32@40@?48
v28@0:8B16@?20
@"MRDNowPlayingPlaybackQueueServer"
@"MRDNowPlayingOriginClient"
@"MRDElectedPlayerController"
@"MRDLockScreenController"
@"MRDProximityController"
@"MRDNowPlayingPlayerClient"
@"<MRDNowPlayingClientDelegate>"
@"BKSApplicationStateMonitor"
v36@0:8@"MRDVirtualAudioInputServer"16I24@"MRDVirtualAudioInputServerDevice"28
v32@0:8@"MRDPhoneCallController"16@"MRDRemoteControlCommand"24
@"NSObject<OS_xpc_object>"
@"MRDVolumeController"
@"MRDRemoteControlServer"
@"MRDBrowsableContentServer"
@"MRDExternalDeviceRemoteServer"
@"MRDAVRoutingServer"
@"MRDUIServer"
@"MRDVirtualAudioInputServer"
@"MRDTransactionServer"
@"MRDBackgroundTasks"
@"NSObject<OS_dispatch_source>"
@"FBSDisplayLayoutMonitor"
@44@0:8q16i24@28@36
v48@0:8@16@?24@32@?40
v32@0:8@16q24
q32@0:8@16q24
@40@0:8@16q24^@32
@"<MRDElectedPlayerControllerDelegate>"
v24@0:8@"AVOutputContext"16
v40@0:8@"AVOutputContext"16@"NSData"24@"AVOutputContextCommunicationChannel"32
v32@0:8@"AVOutputContext"16@"AVOutputContextCommunicationChannel"24
v32@0:8@"NSData"16@"APReceiverMediaRemoteCommunicationChannel"24
v24@0:8@"APReceiverMediaRemoteCommunicationChannel"16
v40@0:8@16Q24@?32
v32@0:8Q16@24
@"AVOutputContext"
@"NSMapTable"
@"<MRDAirPlayRemoteControlServiceDelegate>"
v44@0:8@16@24@32B40
v44@0:8@16@24@32I40
v48@0:8@16@24@32I40B44
@"MRApplicationActivity"
@"MROutputContextDataSource"
@"_MRAVAirPlaySecuritySettingsProtobuf"
v32@0:8@"MRDAirPlayRemoteControlService"16@"MRExternalDeviceTransportConnection"24
v32@0:8@"MRDBonjourRemoteControlService"16@"MRExternalDeviceTransportConnection"24
v32@0:8@"MRDRapportRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDExternalDeviceServerClientConnection"32@0:8@"MRDIDSCompanionRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDExternalDeviceServerClientConnection"32@0:8@"MRDIDSRemoteControlService"16@"MRExternalDeviceTransportConnection"24
@"MRDAirPlayRemoteControlService"
@"<MRDRemoteControlServiceDelegate>"
@"MRDBonjourRemoteControlService"
@"MRDRapportRemoteControlService"
@"MRDIDSCompanionRemoteControlService"
@"MRDIDSRemoteControlService"
@"NSXPCListenerEndpoint"
@"MRDUIActivityServer"
@"MRDServerMessageProxy"
v32@0:8@"CXCallObserver"16@"CXCall"24
@"CXCallObserver"
@"<MRDPhoneCallObserverDelegate>"
d24@0:8@16
@32@0:8@16d24
v36@0:8I16@20@28
v64@0:8Q16@24d32@40@?48@?56
v56@0:8@16d24@32@?40@?48
@32@0:8@16^@24
B40@0:8@16@24^@32
@"MRDOriginForwarder"
@"MRAVOutputContext"
@"<MRXPCConnectionMonitorDelegate>"
v40@0:8@16@24q32
v40@0:8@"MRDAVSystemEndpointController"16@"MRUpdateActiveSystemEndpointRequest"24q32
v32@0:8@"AVOutputDeviceAuthorizationSession"16@"AVOutputDeviceAuthorizationRequest"24
B40@0:8@"AVOutputDeviceAuthorizationSession"16@"AVOutputDeviceAuthorizationRequest"24@"NSString"32
@64@0:8@16@24@32@40@48@56
v48@0:8@16q24@32@?40
v28@0:8@16i24
@32@0:8@16q24
v28@0:8i16@20
v36@0:8@16B24@28
@"MRDAutoConnectionController"
@"MRDExternalDeviceHomeServer"
@"NSOperationQueue"
@"MRDAVLocalDeviceCommitManager"
@"MRDIdleTopologySimplifier"
@"MRDProactivePrepareForSetQueueSender"
@"MRDAVHostedRoutingService"
@"MRDAVSystemEndpointController"
v40@0:8@16Q24Q32
v28@0:8@"AFNotifyObserver"16i24
v40@0:8@"AFNotifyObserver"16Q24Q32
@"AFInstanceContext"
@"AFNotifyObserver"
^{IONotificationPort=}16@0:8
@"<MRDSleepObserverDelegate>"
^{IONotificationPort=}
@"<MRDHostedExternalDeviceManagerDelegate>"
@"<MRDVirtualAudioInputServerDelegate>"
@"MRDPlaybackQueueArtworkCache"
@32@0:8d16d24
v48@0:8@16@24@32^v40
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@36@0:8@16I24@28
@"SBSRemoteAlertHandle"
{?=[8I]}16@0:8
B24@0:8Q16
B40@0:8q16@24d32
v32@0:8B16B20@24
@"<MRDXPCMessageHandling>"
@"MRXPCConnection"
@"MRDMediaRemoteUIService"
@"MRDPairingHandler"
B48@0:8{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}16
^{__IOHIDUserDevice=}16@0:8
@"MRVirtualTouchDeviceDescriptor"
^{__IOHIDUserDevice=}
B64@0:8@16@24@32@40@48q56
B72@0:8@16@24@32@40@48q56@?64
v48@0:8@?16@24@32@40
@48@0:8@16q24@?32@?40
@"<MRUIClientProtocol>"
@"<MRUIClientXPCProtocol>"
@"<MRDLockScreenContentControllerDelegate>"
@"MRMediaSuggestionPreferences"
@52@0:8I16@20@28@36@44
@24@0:8^{__CFString=}16
@32@0:8^{_NSZone=}16#24
v32@0:8@16^{__CFString=}24
@"MRDUIControllerConnection"
@"AVOutputDevice"
[SystemEndpointController] Reevaluating %{public}@ActiveEndpoint because %{public}@
[SystemEndpointController] %{public}@
[SystemEndpointController] %@SystemEndpoint remains <%@>, eventType = <%@>, eventReason = <%@>, selectionReason = <%@>
[SystemEndpointController] Updating activeEndpointInfo %@
[SystemEndpointController] Requesting to move ASE to deviceUID: %{public}@ because the old ASE changed groups
[SystemEndpointController] ASE changed groups, but no other devices found in old group
Yielding AVRCP command to callservicesd
Caching resolved player path %{public}@ for context %{public}@.
No cache entry found.
Sending cachable command to player path %{public}@ for context %{public}@.
Got a cache creating command from assistant, context: %{public}@.
Performing early return of successful status for backwards compatibility.
Expiring player path for context %{public}@.
Got a cacheable command from assistant, context: %{public}@.
Adding command to assistant cache, context: %{public}@.
Redirecting to cached path: %{public}@
No assistant cache active, context: %{public}@.
Command <%{public}@> ignored because of device state
Broadcasting command <%{public}@> to client: <%@>
Broadcast command %{public}@ timedout after %lf seconds
Clearing %lld context(s) for client %@
[RestrictedCommandClients Mode] %@ is gone, disabling restricted mode
Received command from client %{public}@: %{public}@
Received broadcast command from client %{public}@: %{public}@
Destroying remoteUIService for client: %@
Error for fade out state. Status = %u.
Requesting fade in on next playback for client %{private}@
Tried to restrict command clients without entitlement. Ignoring.
[RestrictedCommandClients Mode] %@ requested to enable restrictions: %@. Previous state: %@
[RestrictedCommandClients Mode] %@ requested to disable restriction. Previous state: %@
No destination client can be found for command %@, and the option to launch the app was not included. Dropping command.
Command ignored because of device state: %{public}@
The client that registered the custom origin %{public}@ no longer exists, so this command will be ignored.
[RestrictedCommandClients Mode] Blocked command %@. %@ is not allow-listed
[RestrictedCommandClients Mode] Allowed command %@. Allow-listed.
Command <%{public}@> ignored because of pre-processing error %{public}@.
Sending command %{public}@ to %{public}@ (%{public}@).
Client %{public}@ failed to reply to command (SendCommandErr = %@)
Destination app %{public}@ not available for command %{public}@, and command requested a launch. Enqueueing command for later execution.
Failed to launch application %{public}@ instead launching %{public}@
Removing previously queued command %{public}@ because it timed out (enqueued for %f seconds)
Sending previously queued command %{public}@ to client %{public}@.
Removing queued commands because %{public}@ %@
Using previously routed app %{public}@ for context %{public}@
No context for context-sensitive command %{public}@
Command is an AVRCP command: skipping straight to call observer check to determine whether we should ignore the command or not.
Ignoring command because of active SharePlay activity.
Ignoring command because a phone call or FaceTime is active.
Not populating PPFSQ command options - command is not proactive - command: %@
Not populating PPFSQ command options - playerPath is not systemMediaApplication - command: %@
Ready to populate PPFSQ, reason: %@, command: %@
Not setting key '%@' for PPFSQ - key already populated
Finished populating PPFSQ command options for command %@ - populated %lu keys: %@
Not populating PPFSQ command options - no data provided - command: %@
Purging command: %{public}@
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle electedPlayer change.
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle isPlaying change.
[MRDUIActivityServer] Giving runtime to MediaRemoteUI to handle playbackQueue change.
Request: %{public}@<%{public}@> for <%{public}@>
Request: %{public}@<%{public}@>
Response: %{public}@<%{public}@> returned <%@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned <%@> in %.4lf seconds
Response: %{public}@<%{public}@> returned with error <%{public}@> for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned with error <%{public}@> in %.4lf seconds
Response: %{public}@<%{public}@> returned for %{public}@ in %.4lf seconds
Response: %{public}@<%{public}@> returned in %.4lf seconds
Request: %{public}@<%{public}@> for <%{public}@> because <%{public}@>
Request: %{public}@<%{public}@> because <%{public}@>
Update: %{public}@<%{public}@> %@
Set: %{public}@ setting %{public}@ from <%@> to <%@>
Set: %{public}@ setting %{public}@ to <%@>
[MRDNowPlayingPlayerClient] Taking hasNowPlayingData transaction for %{public}@
[MRDNowPlayingPlayerClient] Removing hasNowPlayingData transaction for %{public}@
[MRDNowPlayingPlayerClient] isPictureInPictureEnabled changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] PlaybackState changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] isPlaying changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] CanBeNowPlayingPlayer changed to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] DisplayName changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] AudioSessionType changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] MXSessionIDs changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingPlayerClient] AudioSessionID changed from %u to %u for %{public}@
[MRDRemoteControlNetworkService] Bluetooth address changed to %{public}@
[MRDRemoteControlNetworkService] Starting network service: %{public}@ for type %{public}@
[MRDRemoteControlNetworkService] Stopping network service %{public}@ for type %{public}@
[MRDRemoteControlNetworkService] Did accept connection with service: %{public}@ using type: %{public}@ input: %{public}@ output: %{public}@
[MRDRemoteControlNetworkService] Remote server advertisement success with service: %{public}@ using type: %{public}@
[MRDRemoteControlNetworkService] Remote server advertisement failed with service: %{public}@ error: %{public}@
[MRDRemoteControlNetworkService] Retrying after 30s...
[MRDRemoteControlNetworkService] Updating txtData because deviceInfo changed...
[MRDRemoteControlNetworkService] Updating txtData because device restrictions changed...
[MRDRemoteControlNetworkService] Updating txtData: %{public}@
[MRDRemoteControlNetworkService] Stopping bonjour service %{public}@
[MRDRemoteControlNetworkService] Initializing bonjour service for type %{public}@
Configuring remote control network service with includesPeerToPeer = %s
[HostedExternalDeviceClient] Caching connectionState %@ %@ for %@
[HostedExternalDeviceClient] Caching deviceName %@ for %@
[HostedExternalDeviceClient] Caching customData %@ %@ for %@
[HostedExternalDeviceClient] Caching endpoint %@ for %@
[HostedExternalDeviceClient] Caching volumeCapabilities %@ outputDevice %@ for %@
[HostedExternalDeviceClient] Caching volume %lf outputDevice %@ for %@
[HostedExternalDeviceClient] Caching didAddOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching didChangeOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching didRemoveOutputDevice %@ for %@
[HostedExternalDeviceClient] Caching discoverySessionOutputDevicesChanged %@ configuration %@ for %@
[HostedExternalDeviceClient] Restoring state %@ for %@
[MRDIDSService] %@ Message Sent<%lu>: idsDestination=%@ device=%@:%@ data=%@ type=%@ destination=%@ session=%@
[MRDIDSService] %@ Error %@ sending message
[MRDIDSService] %@ Message received<%@>: data=%@ device=%@:%@ type=%@ destination=%@ session=%@ replyID=%@
[MRDOriginForwarder] %@ forwarding command
[MRDOriginForwarder] %@ forwarding playbackQueueRequest
[MRDOriginForwarder] %@ forwarding playbackSessionRequest
[MRDOriginForwarder] %@ forwarding playbackSessionMigrationRequest
[MRDOriginForwarder] %@ Initializing OriginForwarder
[MRDOriginForwarder] %@ End Initializing OriginForwarder
[MRDOriginForwarder] %@ forwarding %@
[ODDSRouting] Setting system discovery mode to %{public}@
[ODDSRouting] Setting picked system route to: %{public}@ with password "%@"
[ODDSRouting] Route is an output device-based route. Setting the following device on the output context: %{public}@
[ODDSRouting] Route is not an output device-based route. Beginning search for device matching UID "%{public}@"
[ODDSRouting] No output context strictly matches compatible context type. Using system audio context.
[ODDSRouting] Found output device: %{public}@ - setting on context %{public}@ (%{public}@)
[ODDSRouting] Could not find output device for route %{public}@ - error = %{public}@
[ODDSRouting] Requested to pick speaker route. Clearing output devices from system screen and system music contexts: %{public}@ %{public}@
[ODDSRouting] Route is not an output device-based route and a route UID is not available. Cannot pick route.
[MRDRapportRemoteControlServiceConnection] Connecting remoteControlChannel to <%@->%@/%@>...
[MRDRapportRemoteControlServiceConnection] Disconnecting remoteControlChannel from <%@->%@/%@>...
[ProximityController] lockscreen: %@, controlcenter: %@
[ProximityController] Removing all nearby devices because screen off.
[MRDAVOutputContextManager] Returning active outputContext %@ with devices: %@ for: %@
[MRDAVOutputContextManager] Returning reserved outputContext %@ for: %@
[MRDAVOutputContextManager] Reusing inactive outputContext %@ for: %@ (%@)
[MRDAVOutputContextManager] Created new outputContext %@ for: %@
[MRDAVOutputContextManager] Failed to create new outputContext for: %@
[MRDAVOutputContextManager] Re-building output context state in response to mediaserverd death
[MRDAVOutputContextManager] Attempted to process output context with nil contextID: %{public}@
[MRDAVOutputContextManager] OutputContext became active %@ with: %@
[MRDAVOutputContextManager] OutputContext became active %@ with local: %@
[MRDAVOutputContextManager] OutputContext became inactive %@
[ReconnaissanceSession] Beginning search with timeout %f
[ReconnaissanceSession] Cancelling search for session %{public}@
[ReconnaissanceSession] Session timed out after %f seconds
[ReconnaissanceSession] Found route matching query: %@
[LocalDeviceCommitManager] Eventually commit with reason %@...
[LocalDeviceCommitManager] Not committing %@ because buddy is not engageOnActivate
[LocalDeviceCommitManager] Not committing %@ because Not multiplayer
[LocalDeviceCommitManager] Not committing %@ because Home Theater secondary
[LocalDeviceCommitManager] Not committing %@ because airplayActive
[LocalDeviceCommitManager] Not committing %@ because containsLocalDevice
[LocalDeviceCommitManager] Not committing %@ because localDevice part of another topology modification
[LocalDeviceCommitManager] Not committing %@ because not leader of a %@ cluster
[LocalDeviceCommitManager] Error %@ commiting local device for %@
Requesting client %@ to begin loading browsable content
Client %@ finished loading browsable content with error: %@
Client %@ not available. Enqueuing beginLoading message
Client %@ now available. Dequeuing beginLoading message
Client %@ not available even though it can be now playing app
Clearing beginLoading message for client %@
Failed to launch application with bundle ID %{public}@. Dropping initiate playback message.
Warning: cannot handle initiate playback message without a bundle ID.
Error preparing client %{public}@ for browsable content message relay.
Beginning task assertion for client %@ in preparation for playback initiated by the browsable content system.
Failed to launch %@ for relayable browsable content message %{public}@.
Warning: could not relay browsable content message. No client found for bundle ID %@.
Error preparing client %@ for playback initialization.
Warning: no client found for bundle ID %@. Dropping initiate playback message.
Sending queued initiate playback message %@ to client %@.
Sending queued relayable message %@ to client %@
Browsable Content Server: Taking process assertion for %@.
Unable to take task assertion for %@.
[RemoteControlDiscoverySession] Applied %@ sourced values from outputDevice %@:%@
[RemoteControlDiscoverySession] Added Fields: %{public}@
[RemoteControlDiscoverySession] Removed Fields: %{public}@
[RemoteControlDiscoverySession] Updated Values: %{public}@
[HostedDiscoverySession] Caching outputDevices %@ for %@
[HostedDiscoverySession] Caching endpoints %@ for %@
[HostedDiscoverySession] Restoring outputDevices %@ for %@
[HostedDiscoverySession] Restoring endpoints %@ for %@
[ExternalDeviceConnection(Server)] Added gamecontroller with deviceID: %llu
[ExternalDeviceConnection(Server)] Setting new voice recording state: %@ on client: %@
Failed to make endpoint due to no qualified group leader in devices: %{public}@
Cannot computed expected groupID suffix (ie contextID) for localDevice, ignoring until next update
%{public}@ - Endpoints changed
%{public}@
Error preparing statement to insert auth token
Error binding statement to database query
Error executing statement to insert auth token
Failed to finalize database statement
Error preparing statement to delete expired auth tokens
Failed to bind date param
Error executing statement to delete expired tokens
WARNING: could not enable WAL option on database file
WARNING: could not enable WAL option on database connection
Error reading from auth token database
Error stepping database statement
Error preparing database statement: %s
Error stepping database statement: %s
Error finalizing database statement %p
[MRDIDSRemoteControlService] Removing DiscoveryChannel for client %@ with error %@
[MRDIDSRemoteControlService] Created new DiscoveryChannel %@ for device=%@
[MRDIDSRemoteControlService] Created new RemoteControlChannel %@ for device=%@ destination=%@ session=%@ with options=%u
[MRDPersonalDeviceController] Restoring personal device state for devices %@. Remaining time %f.
[MRDPersonalDeviceController] Recalculating state for reason: %@
[MRDPersonalDeviceController] New personal device %@ recently attached.
[MRDPersonalDeviceController] Timeout reached. Personal devices %@ are now stale.
Attempted to enqueue disallowed background task %@
[MRDTransaction] New Transaction: %p %@ for playerPath %@
[MRDTransaction] Dealloc Transaction: %p %@ for playerPath %@
[MRDTransaction] Canceling %@ transaction for playerPath %@
[MRDTransaction] %@ %@ received interrupted/invalid connection
[MRDTransaction] %p %@ received bytes %ld
[MRDTransaction] %p %@ received end signal received
%p No memory available, waiting %lf and requesting again
%p Checking for available memory
[MRDTransaction] %p %@ could not extract connection to query
[MRDTransaction] %p %@ could not create reply to qeury
[MRDTransaction] %p %@ querying for %ld bytes
[MRDTransaction] %p %@ ending with %ld bytes remaining
Starting MediaRemote server
MediaRemote server exiting
[MRTransactionServer] Unhandled transaction name: %ld
[MRTransactionServer] Unhandled Transaction delegate callback
[MRTransactionServer] Memory Usage: %ld + %ld -> %ld
[MRTransactionServer] %@ received keys %@
[MRTransactionServer] %@ %@ sending client %@ subscribed packets %@
[MRTransactionServer] %@ received ack
[MRTransactionServer] %@ sending client %@ subscribed packets %@
Cluster requires primary but none was found. Members: %{public}@
[MRUIControllerConnection] <%p> Initializing.
[MRUIControllerConnection] <%p> Dealloc.
[MRUIControllerConnection] <%p> Creating service connection.
[MRUIControllerConnection] <%p> BSServiceConnection invalidate.
[MRUIControllerConnection] <%p> BSServiceConnection interrupt. Re-activating.
[MRUIControllerConnection] <%p> BSServiceConnection activated.
[MRUIControllerConnection] <%p> No endpoint found. Please check that MediaRemoteUI is installed and registered with launchd.
[IDSCompanionRemoteControlService] Connecting discoveryChannel to <%@> for reason <%@>...
[IDSCompanionRemoteControlService] No device avaiable to connect discoveryChannel to <%@> for reason <%@>
[IDSCompanionRemoteControlService] Connecting remoteControlChannel to <%@-%@>...
[IDSCompanionRemoteControlService] Disconnecting remoteControlChannel from %@-%@...
WHAPRO: ConnectionState for device %{public}@ change from %{public}@ to %@ in %{public}f seconds
<%{public}@> Exiting connection attempt due to disconnection request for device %@{public}. %{public}@
<%{public}@> Failed to initialize IO streams for device: %{public}@. %{public}@
<%{public}@> Error loading device info for device %{public}@. %{public}@
<%{public}@> Failed to register custom origin for device %{public}@. %{public}@
<%{public}@> Failed to re-register custom origin for device %{public}@. %{public}@
<%{public}@> Exiting connection attempt due to disconnection request for %@{public}. %{public}@
<%{public}@> Failed to sync client state for device %{public}@. %{public}@
Device disconnect called with error: %{public}@ for external device: %{public}@
Attempting to reconnect to external device %{public}@ (retry %llu out of %llu)
Not attempting reconnect of external device %{public}@ (error = %{public}@, recovery behavior = %{public}s, attempt count = %llu)
Connection error while sending custom data message. %{public}@
Connection error while sending ping message for device %{public}@. %{public}@
Error setting volume %@
Error getting volume %@
Error getting volume control capablities %@
Error setting listening mode %@
Error removing from parent group %@
Unknown message type=%ld identifier=%@ replyIdentifier=%@ attempting to be handled for device %{public}@
Connection error while sending begin lyrics event message. %{public}@
<%{public}@> Calling pairingCallback
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback with %@
Calling Client Registered pairing allowed Callback with %@
Calling Client Registered custom data Callback
<%{public}@> Volume did change to %lf for outputDevice: <%{public}@>
Received command %{public}@ for path %{public}@ for device %{public}@
unable to get an output device identifier, device will not be added to protobuf's grouped devices: %{public}@
Warning: Unknown device network ID
Failed to archive device info
Failed to write device info file
Failed to unarchive device info data
[MRDNowPlayingOriginClient] Set: deviceInfo for <%@>:
[MRDNowPlayingOriginClient] Application Activity %{public}@ already set
[MRDNowPlayingOriginClient] Removing nowPlayingClient %{public}@ for %{public}@
[MRDNowPlayingOriginClient] _reevaluateStateWithReason %@
[MRDNowPlayingOriginClient] ActiveNowPlayingClient changed from %{public}@ to %{public}@
[MRDNowPlayingOriginClient] Taking activeNowPlayingClient transaction for %{public}@
[MRDNowPlayingOriginClient] Removing activeNowPlayingClient transaction for %{public}@
[MRDNowPlayingOriginClient] ActiveNowPlayingPlayersClients changed from %{public}@ to %{public}@
[MRDNowPlayingOriginClient] Creating nowPlayingClient for %{public}@
[MRDNowPlayingStateObserver] Registering for Now Playing Updates
[MRDNowPlayingStateObserver] Unregistering for Now Playing Updates
[MRDNowPlayingStateObserver] Registering for volume control updates
[MRDNowPlayingStateObserver] Unregistering for volume control updates
[MRDNowPlayingStateObserver] Begin Coalescing for %@ for %lf seconds
[MRDNowPlayingStateObserver] End Coalescing %@ for %@
[MRDNowPlayingStateObserver] Removing item %@ item from contentItems because playbackQueue contains item for %@
[MRDNowPlayingStateObserver] Updating playbackQueue %@for %@
[MRDNowPlayingStateObserver] Setting playbackQueue %@ for %@
[MRDNowPlayingStateObserver] Merging item %@ into playbackQueue for %@
[MRDNowPlayingStateObserver] Merging item %@ into contentItems for %@
[MRDNowPlayingStateObserver] Adding contentItems %@ for %@
[MRDNowPlayingStateObserver] Setting contentItems %@ for %@
[MRDNowPlayingStateObserver] Adding items %@ into contentItemArtworkUpdates for %@
[MRDNowPlayingStateObserver] Setting items %@ into contentItemArtworkUpdates for %@
[MRDNowPlayingStateObserver] Updating supportedCommands %@ for %@
[MRDNowPlayingStateObserver] Setting supportedCommands %@ for %@
[MRDNowPlayingStateObserver] Updating playerProperties %@ for %@
[MRDNowPlayingStateObserver] Setting playerProperties %@ for %@
[MRDNowPlayingStateObserver] Updating playbackState %@ for %@
[MRDNowPlayingStateObserver] Setting playbackState %@ for %@
Successfully picked route named %@. (error = %@)
Failed to pick route named %@. (error = %@)
Error unpicking AirPlay routes. %{public}@
VAD port status changed to %i for route %@
MRMediaRemoteRouteStatus changed to %li for route %@
[MediaServerAVRoutingDataSource] AVAudioSessionMediaServicesWereReset notification received -- re-registering notifications and resetting cache
[MRDLockScreenController] Setting playerPath from %{public}@ to %{public}@
[MRDLockScreenController] Deferring setting playerPath from %{public}@ to %{public}@ because changeType is <%{public}@> and lock screen is <%{public}@>
[MRDLockScreenController] Restoring defered playerPath from %{public}@ to electedPlayerPath %{public}@
[MRDLockScreenController] Reevaluating shouldShowLockScreen for reason %@
[MRDLockScreenController] Delaying deactivation of lockScreen
[MRDLockScreenController] LockScreen now showing empty controls. Will be dismissed when lock screen is no longer visible
[MRDLockScreenController] Activating lockScreenAssertion
[MRDLockScreenController] Deactivating lockScreenAssertion
[MRDLockScreenController] lockScreenAssertion error %{public}@
[MRDCLC] <%p> Initializing for origin-%@-%ld.
[MRDCLC] <%p> Deallocating.
[MRDCLC] <%p> Re-evaluate for origin-%@-%ld because %@.
[MRDCLC] <%p> Setting timer to disconnect origin-%@-%ld in %.2lf seconds.
[MRDCLC] <%p> Disconnecting origin-%@-%ld.
[MRDCLC] <%p> Will maintain connection for origin-%@-%ld because %@.
[MRDCLC] <%p> Pause pending disconnection for origin-%@-%ld because %@.
[MRDCLC] <%p> Cancel pending disconnection for origin-%@-%ld because %@.
[MRDCLC] <%p> Scheduling playback timer for %.2lf seconds.
[MRDCLC] <%p> Cancelling playback timer.
[MRDAVHostedExternalDevice] %{public}@ is tombstoned, rejecting new XPC connection %{public}@
[MRDAVHostedExternalDevice] %{public}@ is accepting new XPC connection %{public}@ %@
[MRDAVHostedExternalDevice] Client %{public}@ is setting the following registered callbacks on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is setting the following notifications on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is subscribing to the following player paths on %{public}@: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to disconnect from external device using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to unpair from external device using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to set output device volume to %f using output device %{public}@ on hosted endpoint %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to modify hosted endpoint %{public}@ (adding=%{public}@, removing=%{public}@,  setting=%{public}@,)
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to create hosted endpoint %{public}@ with output devices: %{public}@
[MRDAVHostedExternalDevice] Client %{public}@ is requesting to send %llu bytes of custom data with name %{public}@ using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] [Client %{public}@ is requesting to ping external device with timeout %f using hosted endpoint %{public}@
[MRDAVHostedExternalDevice] %{public}@ check for local route because TV join.
[MRDAVHostedExternalDevice] %{public}@ check for local route because TV leave.
[MRDAVHostedExternalDevice] %{public}@ Checking for match of endpoint: %{public}@ and active TV: %{public}@
[MRDAVHostedExternalDevice] %{public}@ maintaing no localRoute for %{public}@ because %{public}@
[MRDAVHostedExternalDevice] %{public}@ removing localRoute for %@ because %{public}@
[MRDAVHostedExternalDevice] %{public}@ adding localRoute for %@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ connection state did change to %{public}@ with error %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ device name did change to %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did receive %llu bytes of custom data with name %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ volumeCapabilities did change to %{public}@ for outputDevice %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ volume did change to %f for outputDevice %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did add output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did change output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ did remove output device %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint %{public}@ client did disconnect: %{public}@
[MRDAVHostedExternalDevice] Hosted endpoint <%{public}@> reevaluating volume control because %{public}@ changed from <%{public}@> to <%{public}@>
[ExternalDeviceServer] Removing television endpoint for client %{public}@
Received device info: %{public}@
[ExternalDeviceServer] ERROR: client is incompatible
[ExternalDeviceServer] ERROR: client not authorized
[ExternalDeviceServer] Unknown message attempting to be handled
[ExternalDeviceServer] didReceiveApplicationClientStateDidChange %@
[ExternalDeviceServer] didReceiveClientDidUnregister %@
[ExternalDeviceServer] didReceivePlayerDidUnregister %@
[ExternalDeviceServer] didReceiveNowPlayingClientChange %@
[ExternalDeviceServer] didReceiveNowPlayingPlayerChange %@
[ExternalDeviceServer] didReceiveVolumeControlCapabilitiesChange %@
[ExternalDeviceServer] didReceiveDefaultSupportedCommandsChange %@
[ExternalDeviceServer] didReceiveCoalescedNowPlayingStateChange %@
[ExternalDeviceServer] Exchanging %llu bytes of crypto pairing data with client "%{public}@"
[ExternalDeviceServer] ERROR: Unable to exchange pairing data. Unknown client for crypto pairing session: %{public}@
[ExternalDeviceServer] Remote Passcode: %@
[ExternalDeviceServer] Returning OSStatus code %d back to %{public}@
[ExternalDeviceServer] ERROR: Unable to send pairing failure message. Unknown client for crypto pairing session: %{public}@
[ExternalDeviceServer] Successfully opened security session with peer %{public}@
[ExternalDeviceServer] Client connected: %{public}@
[ExternalDeviceServer] MRExternalClientConnection did disconnect client: %{public}@ with error %{public}@
[ExternalDeviceServer] Client %{public}@ is not compatible. Protocol version %llu is less than the required minimum version %llu
[ExternalDeviceServer] Client %{public}@ is not compatible. TVRemote application version %llu is less than the required minimum version %llu
[ExternalDeviceServer] Setting game controller input mode to %{public}@
[ExternalDeviceServer] Error unpairing device: %{public}@ error: %{public}@
[ExternalDeviceServer] System pairing removed: %{public}@ -- Attempting to disconnect...
[ExternalDeviceServer] No active connection to disconnect
[ExternalDeviceServer] No TVRemote pairing found coresponding to removed system pairing
Checking if device with managedConfigDeviceID, %{public}@, allowed to connect
No managedConfig allow list found. Allowing all devices
Device with managedConfigDeviceID, %{public}@, allowed: %d
[ExternalDeviceServer] Error deleting pairing identity. %{public}@
[ExternalDeviceServer] Adding television endpoint %{public}@
[ExternalDeviceServer] Removing television endpoint %{public}@
[ExternalDeviceServer] Registering HID device with descriptor: %{public}@
[ExternalDeviceServer] Registered new virtual touch device with ID %llu
[ExternalDeviceServer] Failed to register new virtual touch device
[ExternalDeviceServer] Registering new virtual voice input device with descriptor: %{public}@
[ExternalDeviceServer] Error registering new virtual voice input device. %{public}@
[ExternalDeviceServer] Successfully registered new virtual voice input device with ID %u
[ExternalDeviceServer] Changing name to %{public}@
[ExternalDeviceServer] Could not set device name to %{public}@
[ExternalDeviceServer] Sending custom data %{public}@ to endpoint %{public}@
[ExternalDeviceServer] Received request to modify output context: %{public}@
[ExternalDeviceServer] Set output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Add output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Remove output devices. Silent Primary = %{BOOL}u, Set Local = %{BOOL}u
[ExternalDeviceServer] Error adding devices to output context: %{public}@
[ExternalDeviceServer] Error removing devices from output context: %{public}@
[ExternalDeviceServer] Error setting devices on output context: %{public}@
[ExternalDeviceServer] Successfully executed output context modification.
[ExternalDeviceServer] Failed to search for devices pertinent to output context modification: %{public}@
[ExternalDeviceServer] Completed recon session: %{public}@
[ExternalDeviceServer] Reseting Facade
[ExternalDeviceServer] Facading NowPlayingClient from %@ to %@
Failed to create external device transport for %{public}@, group leader: %{public}@
- Selecting devices (non-default selection options) from: %{public}@
- Selection options: %{public}@
- Updating preferred group leader %{public}@ based on better criteria: %{public}@
- Updating preferred group leader because found a remote host: %{public}@
- Updating preferred group leader because locally hosting the group
-- Final preferred group leader: %{public}@ based on criteria: %{public}@
Skipping invalid output device: %{public}@
[HostedRoutingController] Updating shared discovery session discovery mode to %{public}@ for: %{public}@
Ignoring uncommitted output device: %@ (%@)
Recieved Now Playing message %llu from client %@ : %@
Now Playing message with id %llu not handled.
PID Mismatch: Client %{public}@ is trying to make a nowPlayingClient with a different pid %d
PID Mismatch: Client %{public}@ is trying to making a nowPlayingClient with a different bundleID %{public}@
Resolving %{public}@ -> %{public}@ for client %@
Resolving Existing %{public}@ -> %{public}@
Client %{public}@ requesting to set active origin to %{public}@
Re-registering origin %{public}@
Client %{public}@ requesting to %{public}@ itself as now playing app override
Client %{public}@ requesting to %{public}@ now playing app override to %{public}@
Could not set override client. Client %{public}@ not found.
Unable to set can be now playing app. No now playing client found for %@
Unable to set can be now playing player. No player client found for %@
Setting hardware remote behavior to %{public}@ for client %{public}@
Unable to set playback state. No now playing client found for %@
Received video thumbnails request from %{public}@ for %{public}@
Relaying video thumbnails request to %{public}@
Client not found for video thumbnails request
Received audio amplitude samples request from %{public}@ for %{public}@
Relaying audio amplitude samples request to %{public}@
Client not found for audio amplitude samples request
Received lyrics event from client %{public}@ and sending to %{public}@
Relaying lyrics event to %{public}@
No client available for lyrics event
%{public}@ is requesting to resolve playerPath %{public}@ -> %{public}@
Tried to set now playing app without entitlement. Ignoring.
ERROR: now playing client could not be found for setting supported commands
Unable to set properties from message %@. No player client found.
Unable to set properties from message %@. No origin client found for %@
%{public}@ Unable to get audio format content info for origin: %{public}@ | client %{public}@
Posting contentItemChange for path %{public}@ to xpcClient %{public}@ %{public}@
Posting %@
Posting %@ because activePlayerPath changed from <%{public}@> to <%{public}@>
Posting %@ with <%@>
Registering origin %@
Unregistering origin %{public}@
Removing active origin %{public}@. Setting active origin to the local one.
Failed to open NowPlayingCap: %{public}@
Setting active origin from %@ to %@
Persisting active origin %@
Failed to initialize temporary directory
[MRDNowPlayingClient] Setting pid for %{public}@ to %d
[MRDNowPlayingClient] Timeout trying to pid for %{public}@
[MRDNowPlayingClient] CanBeNowPlaying changed to %{public}@ for %{public}@
[MRDNowPlayingClient] Creating playerClient for %{public}@
[MRDNowPlayingClient] ActiveNowPlayingPlayer changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] DisplayName changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] ParentAppBundleIdentifier changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] BundleIdentifierHierarchy changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] Visibility changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] TintColor changed from %{public}@ to %{public}@ for %{public}@
[MRDNowPlayingClient] AppIcon changed from %{public}@ to %{public}@ for %{public}@
Received AppleLanguagePreferencesChangedNotification. Will tell libxpc to kill us once we're clean. Will invalidate MROSTransactions.
Received AppleLanguagePreferencesChangedNotification. Did tell libxpc to kill us once we're clean. Did invalidate MROSTransactions.
Failed to setup AppleLanguagePreferencesChangedNotification handler, status: %d
XPC Error: %s
Stopping MediaRemote server
Adding client %{public}@
Removing client %{public}@
Posting Notification %{public}@
UserInfo %{public}@
Posting Custom Notification %{public}@ to %{public}@
Custom UserInfo %{public}@
CompanionLinkClient invalidation
CompanionLinkClient interrupted
Error activating CompanionLinkClient %{public}@
Client with pid %ld opened connection.
XPC message with id %lu not handled.
Received message %llu from client %@ : %@
Server message with id %llu not handled.
NULL source ID string sent to %@
Received request to distribute notification "%{public}@" from %{public}@
Client %{public}@ attempted to post an illegal notification (%{public}@); ignoring.
Client: %{public}@ Set system volume: setting volume to %f
Client: %{public}@ Adjust system volume: stepping volume by %f
No app bundle ID provided in call to GetMediaAppIsInstalled message
Unable to wake system app [failed to launch] %{public}@
Unable to wake system app [failed to find client]
Unable to bless app [sync task assertion acquisition failed]
Unable to bless app [task assertion failed]
Unable to bless app [bless failed]
** Beginning Diagnostic Collection **
** Collecting Diagnostic for Main Server **
** Collecting Diagnostic for UI Server **
** Collecting Diagnostic for Now Playing Server **
** Collecting Diagnostic for Remote Control Server **
** Collecting Diagnostic for Browsable Content Server **
** Collecting Diagnostic for External Device Server **
** Collecting Diagnostic for Routing Server **
** Collecting Diagnostic for Virtual Audio Input Server **
** Collecting Diagnostic for Transaction Server **
** Diagnostic Complete **
Pairing Handler register failed with routeUID: %@
Pairing Handler unregister failed with routeUID: %@
Pairing Handler complete failed with routeUID: %@
Client %{public}@ invalidated.
Pidversion out of date for %d
No process for pid %d
Unable to get boot session ID
Restoring client pids %{public}@
Restoring expected client pids %{public}@
Resetting client and expected pids
SIGTERM received, preparing to shut down
[MRDAutoConnectionController] Begin DiscoverySession %@ because %@
[MRDAutoConnectionController] End DiscoverySession %@
[MRDAutoConnectionController] Removing outdated endpoint <%@> (<%@>)
[MRDAutoConnectionController] Removing endpoint <%@> (<%@>)
[MRDElectedPlayerController] Failed to connect to proactive endpoint %@ with error %@. Reset to local.
[MRDElectedPlayerController] Ignoring activeSystemEndpointDidChange for %@ because a new change for %@ was received
[MRDElectedPlayerController] Reevaluating electedPlayer event = %{public}@, reason =  %{public}@
[MRDElectedPlayerController] ElectedPlayer changed from <%@> to <%@> changeType=<%{public}@>, event=%{public}@, eventReason=%{public}@, selectionReason=%{public}@
[MRDElectedPlayerController] ElectedPlayer remained <%@> eventReason=%{public}@, selectionReason=%{public}@
[MRDElectedPlayerController] Manually setting changeType to %{public}@ because previousPlayerPath %{public}@ does not exist anymore
[MRDElectedPlayerController] Manually setting changeType to %{public}@ because changeType uninitialized and playerPath %{public}@ is nil and previousPlayerPath %{public}@ is still valid
[AirPlayRemoteControlService] Starting AirPlay remote control service
[AirPlayRemoteControlService] Stopping AirPlay remote control service
[MRDRemoteControlService] observed new activePairedDevice <%@>, creating IDSRemoteControlService...
[MRDRemoteControlService] Found activePairedDevice <%@>, creating IDSRemoteControlService...
[MRDUIClient] <%p> Dealloc.
[MRDUIServer] Rejecting connection from unknown client.
[MRDUIServer] Rejecting connection from non-entitled client %@.
[MRDUIServer] Accepting connection from client %@
[MRDUIServer] Adding client %@
[MRDUIServer] Removing client %@
[MRDITS] <%p> Initializing
[MRDITS] <%p> Deallocating.
[MRDITS] <%p> Last playing date for %@ is distantPast, setting new timer
[MRDITS] <%p> Scheduling idle playback timer for %.2lf seconds - %@
[MRDITS] <%p> Cancelling idle playback timer of playerPath %@
[MRDITS] <%p> Playback state changed to playing for %@, not simplifying topology
[MRDITS] <%p> Could not find endpoint for playerPath <%@> - error: %@
[MRDITS] <%p> Letting endpoint be hosted by a smart device - %@
[MRDITS] <%p> Could not remove devices <%@> from existing endpoint (%@) - error: %@
[MRDITS] <%p> Removed devices from existing endpoint %@: <%@>
[MRDITS] <%p> Not trying to recreate WHA group; Endpoint (%@) only had one smart device (%@)
[MRDITS] <%p> Topology not simplified, error: %@
[MRDITS] <%p> Topology simplified, new endpoint: %@
Initialization sleep assertion %@
Could not take sleep assertion
Taking sleep assertion %@ for a max of %lf seconds
Releasing sleep assertion %@
Could not release sleep assertion %@
Received %@ signal in order to start prewarming...
Waiting for Buddy in order start prewarming
%{public}@ Topology change failed with error: %{public}@
%{public}@ disconnecting with error %{public}@
%{public}@ Added localDevice %{public}@ to outputContext %{public}@
%{public}@ Removed groupLeader %{public}@ from outputContext %{public}@
%{public}@ Removed localDevice %{public}@ from outputContext. Clearing all localOrigin nowPlayingData
%{public}@ Removed localDevice %{public}@ from outputContext %{public}@
%{public}@ Local device changed clusterType to: %u
%{public}@ Found endpoint containing local in discovery that matches cluster type: %{public}@
%{public}@ Timed out waiting for local device to appear with expected clusterType in discovery
%{public}@ GroupLeader %{public}@ failed verification for reason: %{public}@ on context %{public}@
%{public}@ Verification failed because groupLeader was found in another outputContext: %{public}@
%{public}@ Calling %lu completions - Original reason: %{public}@
%{public}@ Ignoring request to commit in an invalid state (no designatedGroupLeader) reason: %{public}@
%{public}@ Already committing output device: %{public}@ to: %{public}@. New reason: %{public}@
%{public}@ Committing output device: %{public}@ to: %{public}@ because %{public}@
%{public}@ Failed to commit output device: %{public}@ to: %{public}@ because %{public}@ - %{public}@
%{public}@ Skipping commit of output device: %{public}@ to: %{public}@ because %{public}@
%{public}@ Begin Forwarding Origin Data from %{public}@ to %{public}@ for outputContext %{public}@
%{public}@ Destroying playerPaths for origin: %{public}@, client: %{public}@
%{public}@ Origin changed while creating player: %{public}@  - Destroying
[ConnectionMonitor] Checked-in connection %@ in %lf seconds
[ConnectionMonitor] Checking connection %@
[ConnectionMonitor] Updated connectionStatus = %@ for %@ after %lf seconds
[ConnectionMonitor] Resumed connection %@ in %lf seconds
[AVRoutingServer] Route change requested for AV server's cached routes with UID %{public}@
[AVRoutingServer] Switching to route with UID %{public}@
[AVRoutingServer] Received output device authorization request: %{public}@ (status = %{public}@)
[AVRoutingServer] Authorization request using saved password for %{public}@: %@
[AVRoutingServer] Authorization token failed for %{public}@ : %@
[AVRoutingServer] User cancelled authorization request for %{public}@
[AVRoutingServer] Responding to authorization request using user entered password for %{public}@: %@
[AVRoutingServer] Authorization token accepted for %{public}@. Updating keychain with new passcode.
[AVRoutingServer] Authorization token failed for %{public}@
[AVRoutingServer] Client %{public}@ changed route discovery mode to %{public}@.
[AVRoutingServer] %{public}@ requesting to pick route: %{public}@, options: %{public}@
[AVRoutingServer] %{public}@ requesting to pick route with UID: %{public}@, options: %{public}@
[AVRoutingServer] Beginning AV reconnaissance session for route with UID: %{public}@
[AVRoutingServer] AV reconnaissance session found route with UID %{public}@ : %{public}@
[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ -- %{public}@
[AVRoutingServer] AV reconnaissance session failed to find route with UID %{public}@ (unknown error)
[AVRoutingServer] Did not receive any pickable route information from the XPC message.
[AVRoutingServer] Requesting to clear all AirPlay route passwords...
[AVRoutingServer] Error %ld trying to delete passwords
[AVRoutingServer] No passwords to delete
[AVRoutingServer] Error %ld trying to query passwords
[AVRoutingServer] Requesting to unpick AirPlay routes
[AVRoutingServer] Received SetApplicationPickedRoutes message with route descriptions: %{public}@
[AVRoutingServer] Could not find endpoints for migration between %{private}@ and %{private}@.
[AVRoutingServer] Failed to remove output device UIDs: %{public}@ from parent group with error: %{public}@
[AVRoutingServer] No group leader, nothing to remove for: %{public}@
[AVRoutingServer] Failed to find external device for outputDeviceUID: %{public}@
[AVRoutingServer] Available external devices: %{public}@
[AVRoutingServer] Ignoring VAD port authentication failure.
[AVRoutingServer] Output device connection failure: %{public}@
[AVRoutingServer] Handling authorization request with custom callback for route %{public}@
[AVRoutingServer] Custom authorization callback returned for route %{public}@
[AVRoutingServer] Prompting user with authorization request route %{public}@
[AVRoutingServer] Ignoring authorization request because a password dialog is already being shown.
[AVRoutingServer] Ignoring authorization request because the request to pick indicated that we should ignore authorization failures.
[AVRoutingServer] Updating system route discovery mode to %{public}@
[AVRoutingServer] Discovery enabled. Starting transaction: %{public}@
[AVRoutingServer] Discovery ended. Clearing transaction %{public}@
[AVRoutingServer] Suppressing cluster connection error. %.2f since last alert
[AVRoutingServer] Error connecting to cluster member: %{public}@
[AVRoutingServer] Timed out waiting for action on cluster connection error for route: %{public}@
[AVRoutingServer] Failed to open TVSettings: %{public}@
[AVRoutingServer] AirPlay Error %ld: %{public}@: %{public}@
[AVRoutingServer] AirPlay Error %ld: Ignoring because error for "%{public}@" because the status code has not changed and already prompted user.
[AVRoutingServer] RouteUIDs ignored for port status failures: %{public}@
[AVRoutingServer] <%{public}@: %p> Dismissing active dialog <%{public}@: %p - %{public}@: %{public}@> to present new dialog: <%{public}@: %p - %{public}@: %{public}@>
[AVRoutingServer] Failed to pick route %{public}@
[AVRoutingServer] Error getting AirPlay security settings dictionary (OSStatus = %d)
Resolving endpoint for output device UIDs %{public}@
Returning endpoint with only a subset of specified output devices:
    - %{public}@
    + %{public}@
Resolved to endpoint: %{public}@
Setting output devices on endpoint: %{public}@
Error adding devices to endpoint:%{public}@ error:%{public}@
Could not make endpoint for output devices: %{public}@
Predicting endpoint for output device UIDs %{public}@
[MRDPPFSQS] <%p> Initializing
[MRDPPFSQS] <%p> Deallocating.
[MRDPPFSQS] %@ - Reported reason: %@
[MRDPPFSQS] Will send PPFSQ to <%@>
[MRDPPFSQS] Won't send PFSQ for ASE change - endpoint: <%@>, playerPath:<%@>, isLocal:<%@>
[MRDPPFSQS] First MRD launch after boot
[MRDPPFSQS] <%p> Received %@ signal. Will send PPFSQ to Local System Media App
[MRDPPFSQS] <%p> Setup is not needed. Will send PPFSQ to Local System Media App
[MRDPPFSQS] <%p> Waiting until device setup is finished to send PPFSQ
[MRDPPFSQS] First MRD launch after boot, device is not an AudioAccessory
[iOSSim Data Source] Failed to load playback queue: %{public}@
POWER: Did recieve power callback %{public}@-%{public}@
POWER: Responding to power callback %{public}@-%{public}@ in %lf seconds
[MRDHostedExternalDeviceManager] Created new hostedExternalDevice=%{public}@, endpoint=%{public}@
[MRDHostedExternalDeviceManager] Removing hostedExternalDevice=%{public}@, endpointIdentifier=%{public}@ reason=%{public}@
[MRDHostedExternalDeviceManager] Removing hostedExternalDevice=%{public}@, outputDeviceIdentifier=%{public}@ reason=%{public}@
[VirtualAudioInputServer] Created new device with descriptor: %{public}@
[VirtualAudioInputServer] Notifying %{public}llu endpoints of newly connected device
[VirtualAudioInputServer] Error creating virtual input device. No descriptor data provided.
[VirtualAudioInputServer] Disconnecting virtual device with ID %{public}d
[VirtualAudioInputServer] Notifying %{public}llu endpoints of disconnected device
[VirtualAudioInputServer] Couldn't find device with ID %{public}d
[VirtualAudioInputServer] An unknown device disconnected
[VirtualAudioInputServer] Recording state changed for device with ID %{public}d
[VirtualAudioInputServer] Recording state change ignored: unknown device ID %{public}d
[MRDVolumeController] Setting AVSC volume to %f
[MRDVolumeController] Setting AVSC isMuted to %@
[MRDVolumeController] Error setting AVSC isMuted: %@
[MRDVolumeController] AVAudioSessionMediaServicesWereReset notification received -- re-registering notifications
[MRDVolumeController] Reloading volume for reason: %@
Attempting to activate remote alert handle.
Creating remote alert handle for remote view controller: %{public}@
Remote alert handle did activate.
Remote alert handle did deactivate.
Remote alert handle did invalidate with error: %@
Client switched route discovery mode to: %lu
Client switched output device discovery mode to: %lu
Unable to bless client [sync task assertion acquisition failed] %{public}@
Failed to create assertion: %{public}@
Unable to bless client [bless failed] %{public}@
Set AVSystemController_AllowAppToInitiatePlaybackTemporarilyAttribute for command %{public}@
Unable to relay message with id %lu
[MRDMediaRemoteClient] Restoring connection to <%@> with notification <%@> for <%@>
[MRDMediaRemoteClient] Restoring connection to <%@> with notification <%@>
[MRDMediaRemoteClient] Restoring connection with notification userInfo %@
Unable to create IOHIDUserDevice
WARNING: Failed to handle HID report for device ID %llu. (kernel error = %d)
[MRDDisplayMonitor] Layout Changed %@
[MRDIDSServiceConnection] %@ Setting IDSDevice from %@ to %@
[MRDIDSServiceConnection] %@ Added handler for %@ %@
[MRDIDSServiceConnection] Added destination handler for type=%@, destination=%@, session=%@, %@
[MRDIDSServiceConnection] Remove handler for type=%@, %@
[MRDIDSServiceConnection] Remove destination handler for type=%@, destination=%@, session=%@, %@
[MRDIDSServiceConnection] %@ Message received<%@>: data=%@ type=%@ destination=%@ session=%@ replyID=%@
[MRDLockScreenContentController] failed to retrieve suggestions with error %@
Error blessing %@ for playback initialization. %@
[MRUIController][D] <%p> Initializing direct controller.
[MRUIController][D] <%p> Dealloc.
[MRUIController][D] <%p> Initializing XPC controller.
[MRUIController][D] <%p> Deallocated while still holding lock screen assertion.
[MRUIController][D] <%p> Deallocated while still holding quick controls assertion.
[MRUIController][D] <%p> Deallocated while still holding screen mirroring assertion.
[MRUIController][D] <%p> XPC interrupted.
[MRUIController][D] <%p> XPC invalidated.
[MRUIController][D] <%p> Server proxy error %@.
identifier
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>mediaremoted</string>
<key>CFBundleIdentifier</key>
<string>com.apple.mediaremoted</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20E5229e</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5229e</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mediaremoted</string>
<key>com.apple.BluetoothServices</key>
<true/>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.airplay.receiver.mediaremote.services</key>
<true/>
<key>com.apple.appletv.pbs.allow-screen-saver</key>
<true/>
<key>com.apple.appletv.pbs.allow-wake</key>
<true/>
<key>com.apple.appletv.pbs.mediaremote</key>
<true/>
<key>com.apple.appletv.pbs.volume-control</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bluetooth.internal</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.hid.manager.user-access-device</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.managedconfiguration.feature-setting.allowRemoteAppPairing</key>
<true/>
<key>com.apple.mediaremote.nearby-device</key>
<string>YES</string>
<key>com.apple.mediaremote.send-commands</key>
<true/>
<key>com.apple.mediaremote.set-now-playing-app</key>
<true/>
<key>com.apple.mediaremote.set-playback-state</key>
<true/>
<key>com.apple.mediaremote.ui-control</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nano.nanoregistry.generalaccess</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>EthernetMacAddress</string>
</array>
<key>com.apple.private.activitykit.ephemeralActivityRequester</key>
<true/>
<key>com.apple.private.activitykit.unboundedActivityRequester</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.coreaudio.borrowaudiosession.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
<string>com.apple.private.alloy.mediaremote.v2</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
<string>com.apple.private.alloy.mediaremote.v2</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.avconference.avctester</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.sessionkit.custom-platter-target</key>
<true/>
<key>com.apple.private.sessionkit.permitMultipleProcessInputs</key>
<true/>
<key>com.apple.private.sessionkit.sessionRequest</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.proximitycontrol</key>
<true/>
<key>com.apple.proximitycontrol.lockscreenControls</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/</string>
<string>/Applications/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.mediaremoted/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/MediaRemote/</string>
<string>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>AppleJPEGDriverUserClient</string>
<string>IOHIDResourceDeviceUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sessionservices</string>
<string>com.apple.mediaremoteui.services</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callcapabilities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.telephonyutilities.callservicesdaemon.neighborhood-activities</string>
<string>com.apple.telephonyutilities.callservicesdaemon.conversationmanager</string>
<string>com.apple.ProximityControl.server</string>
<string>com.apple.airplay.apsynccontroller.xpc</string>
<string>com.apple.airplay.receiver.mediaremote.services</string>
<string>com.apple.audio.AudioSession</string>
<string>com.apple.BluetoothServices</string>
<string>com.apple.callkit.callcontrollerhost</string>
<string>com.apple.commcenter.coretelephony.xpc</string>
<string>com.apple.commcenter.xpc</string>
<string>com.apple.CompanionLink</string>
<string>com.apple.coremedia.admin</string>
<string>com.apple.coremedia.endpoint.xpc</string>
<string>com.apple.coremedia.endpointuiagent.xpc</string>
<string>com.apple.coremedia.routediscoverer.xpc</string>
<string>com.apple.coremedia.routingcontext.xpc</string>
<string>com.apple.coremedia.systemcontroller.xpc</string>
<string>com.apple.coremedia.volumecontroller.xpc</string>
<string>com.apple.coremedia.endpointremotecontrolsession.xpc</string>
<string>com.apple.GameController.gamecontrollerd</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.iohideventsystem</string>
<string>com.apple.iokit.powerdxpc</string>
<string>com.apple.mediaremoted.xpc</string>
<string>com.apple.PairingManager</string>
<string>com.apple.PineBoardServices</string>
<string>com.apple.PowerManagement.control</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.securityd</string>
<string>com.apple.server.bluetooth.le.att.xpc</string>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.SharingServices</string>
<string>com.apple.springboard.backgroundappservices</string>
<string>com.apple.springboard.services</string>
<string>com.apple.SystemConfiguration.configd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.CoreDuet</string>
<string>com.apple.lockscreen.shared</string>
<string>com.apple.duetexpertd</string>
<string>com.apple.spotlightui</string>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaremote</string>
<string>com.apple.mediaremoted</string>
<string>com.apple.airplay</string>
<string>com.apple.persistentconnection</string>
<string>com.apple.avfoundation</string>
<string>com.apple.coreaudio</string>
<string>com.apple.coremedia</string>
<string>com.apple.avfaudio</string>
<string>com.apple.ids</string>
<string>com.apple.conference</string>
<string>com.apple.facetime.bag</string>
<string>com.apple.da</string>
</array>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AppleJPEGDriverUserClient</string>
<string>IOHIDResourceDeviceUserClient</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.network.server</key>
<true/>
<key>com.apple.security.ts.mach-task-name</key>
<true/>
<key>com.apple.sharing.ProximityClient</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.lockScreenContentAssertion</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>modify-calls</string>
<string>access-calls</string>
</array>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>com.apple.MediaRemote.pairing</string>
<string>com.apple.airplay</string>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
g00
application-identifier
com.apple.mediaremoted0 
com.apple.BluetoothServices
com.apple.CompanionLink
com.apple.PairingManager.Read
0(#com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Write
04/com.apple.airplay.receiver.mediaremote.services
0-(com.apple.appletv.pbs.allow-screen-saver
0% com.apple.appletv.pbs.allow-wake
0&!com.apple.appletv.pbs.mediaremote
0)$com.apple.appletv.pbs.volume-control
050com.apple.avfoundation.allow-system-wide-context
083com.apple.avfoundation.allows-access-to-device-list
04/com.apple.avfoundation.allows-set-output-device
com.apple.bluetooth.internal
com.apple.bluetooth.system
com.apple.coreduetd.allow
0E@com.apple.developer.device-information.user-assigned-device-name
0,'com.apple.frontboard.launchapplications
083com.apple.frontboardservices.display-layout-monitor
0-(com.apple.hid.manager.user-access-device
com.apple.itunesstored.private
0IDcom.apple.managedconfiguration.feature-setting.allowRemoteAppPairing
0*#com.apple.mediaremote.nearby-device
YES0(#com.apple.mediaremote.send-commands
0.)com.apple.mediaremote.set-now-playing-app
0-(com.apple.mediaremote.set-playback-state
0% com.apple.mediaremote.ui-control
0/*com.apple.multitasking.unlimitedassertions
0.)com.apple.nano.nanoregistry.generalaccess
0j4com.apple.private.MobileGestalt.AllowedProtectedKeys02
WifiAddress
WifiAddressData
EthernetMacAddress0=8com.apple.private.activitykit.ephemeralActivityRequester
0=8com.apple.private.activitykit.unboundedActivityRequester
0)$com.apple.private.associated-domains
094com.apple.private.coreaudio.borrowaudiosession.allow
04/com.apple.private.coreservices.canmaplsdatabase
00+com.apple.private.hid.client.event-dispatch
0/*com.apple.private.hid.client.event-monitor
com.apple.private.ids.messaging0X.com.apple.private.alloy.avconference.avctester&com.apple.private.alloy.mediaremote.v20
/com.apple.private.ids.messaging.urgent-priority0X.com.apple.private.alloy.avconference.avctester&com.apple.private.alloy.mediaremote.v20Q
com.apple.private.ids.session00.com.apple.private.alloy.avconference.avctester0?*com.apple.private.lockdown.finegrained-set0
NULL/DeviceName072com.apple.private.sessionkit.custom-platter-target
0=8com.apple.private.sessionkit.permitMultipleProcessInputs
00+com.apple.private.sessionkit.sessionRequest
0&!com.apple.private.system-keychain
com.apple.private.tcc.allow0
kTCCServiceMediaLibrary0
com.apple.proximitycontrol
02-com.apple.proximitycontrol.lockscreenControls
083com.apple.rootless.storage.coreduet_knowledge_store
0o:com.apple.security.exception.files.absolute-path.read-only01
/private/var/containers/Bundle/
/Applications/0i;com.apple.security.exception.files.absolute-path.read-write0*(/private/var/tmp/com.apple.mediaremoted/0
@com.apple.security.exception.files.home-relative-path.read-write0W
/Library/MediaRemote/>/Library/UserConfigurationProfiles/EffectiveUserSettings.plist0
4com.apple.security.exception.iokit-user-client-class0
AppleJPEGDriverUserClient
IOHIDResourceDeviceUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
RootDomainUserClient0
i4com.apple.security.exception.mach-lookup.global-name0
com.apple.sessionservices com.apple.mediaremoteui.services"com.apple.powerlog.plxpclogger.xpc@com.apple.telephonyutilities.callservicesdaemon.callcapabilitiesCcom.apple.telephonyutilities.callservicesdaemon.callstatecontrollerGcom.apple.telephonyutilities.callservicesdaemon.neighborhood-activitiesCcom.apple.telephonyutilities.callservicesdaemon.conversationmanager!com.apple.ProximityControl.server&com.apple.airplay.apsynccontroller.xpc/com.apple.airplay.receiver.mediaremote.services
com.apple.audio.AudioSession
com.apple.BluetoothServices$com.apple.callkit.callcontrollerhost&com.apple.commcenter.coretelephony.xpc
com.apple.commcenter.xpc
com.apple.CompanionLink
com.apple.coremedia.admin com.apple.coremedia.endpoint.xpc'com.apple.coremedia.endpointuiagent.xpc'com.apple.coremedia.routediscoverer.xpc&com.apple.coremedia.routingcontext.xpc(com.apple.coremedia.systemcontroller.xpc(com.apple.coremedia.volumecontroller.xpc4com.apple.coremedia.endpointremotecontrolsession.xpc(com.apple.GameController.gamecontrollerd)com.apple.identityservicesd.embedded.auth3com.apple.idsremoteurlconnectionagent.embedded.auth
com.apple.iohideventsystem
com.apple.iokit.powerdxpc
com.apple.mediaremoted.xpc
com.apple.PairingManager
com.apple.PineBoardServices!com.apple.PowerManagement.control
com.apple.SBUserNotification
com.apple.securityd%com.apple.server.bluetooth.le.att.xpc
com.apple.SharedWebCredentials
com.apple.SharingServices+com.apple.springboard.backgroundappservices
com.apple.springboard.services%com.apple.SystemConfiguration.configd0
8com.apple.security.exception.shared-preference.read-only0v
com.apple.CoreDuet
com.apple.lockscreen.shared
com.apple.duetexpertd
com.apple.spotlightui
com.apple.suggestions0
B9com.apple.security.exception.shared-preference.read-write0
com.apple.mediaremote
com.apple.mediaremoted
com.apple.airplay
com.apple.persistentconnection
com.apple.avfoundation
com.apple.coreaudio
com.apple.coremedia
com.apple.avfaudio
com.apple.ids
com.apple.conference
com.apple.facetime.bagcom.apple.da0
*com.apple.security.iokit-user-client-class0
AppleJPEGDriverUserClient
IOHIDResourceDeviceUserClient
IOSurfaceAcceleratorClient
IOSurfaceRootUserClient
RootDomainUserClient0&!com.apple.security.network.client
0&!com.apple.security.network.server
0)$com.apple.security.ts.mach-task-name
0&!com.apple.sharing.ProximityClient
0-(com.apple.springboard.CFUserNotification
0.)com.apple.springboard.activateRemoteAlert
0-(com.apple.springboard.launchapplications
050com.apple.springboard.lockScreenContentAssertion
0'"com.apple.springboard.remote-alert
0J*com.apple.telephonyutilities.callservicesd0
modify-callsaccess-calls0
fairplay-client
keychain-access-groups09
com.apple.MediaRemote.pairing
com.apple.airplay
apple0
platform-application
seatbelt-profiles0
temporary-sandbox
