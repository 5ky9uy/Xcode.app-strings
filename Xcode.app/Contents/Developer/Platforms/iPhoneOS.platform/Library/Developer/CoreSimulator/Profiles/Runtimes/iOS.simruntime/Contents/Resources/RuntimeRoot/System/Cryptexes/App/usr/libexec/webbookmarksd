com.apple.MobileAsset.SafariCloudHistoryConfiguration
LastCloudHistoryConfigurationUpdateTime
v8@?0
1:1440
15:1 | 1:1425
31:5 | 1:1285
data.plist
q24@?0@"ASAsset"8@"ASAsset"16
com.apple.Safari.UserRequests
DeviceName
HasDuplicateDeviceName
LastModified
Tabs
CloudTabStoreDidUpdateNotification
CloudTabStorePrefChangedNotification
CloudTabStoreUpdateTypeKey
CloudTabStoreUpdateTypeDeviceStore
CloudTabStoreUpdateTypeUserRequestsStore
CloudTabStoreDateOfLastSaveWhenEnteringBackgroundWithNoOtherDevices
com.apple.MobileSafari.CloudTabStore
B16@?0@"WBSCloudTabDevice"8
v32@?0@8@"NSDictionary"16^B24
v12@?0B8
SafariStateDocuments
SafariStateDocumentUserVisibleURL
SafariStateDocumentUUID
SafariStateDocumentTitle
SafariStateDocumentShouldRestoreReader
HOME
CFFIXED_USER_HOME
/tmp/
TMPDIR
com.apple.private.safari.cloudtabs
com.apple.private.webbookmarks.settings
com.apple.webbookmarksd.WebsiteDataUsageTaskQueue
v24@?0@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"16
Website Data State
website data types
@"NSDictionary"8@?0
Ignoring request to clear cloud tab devices, because cloud tabs feature is currently disabled.
Ignoring request to clear cloud tabs on this device, because cloud tabs feature is currently disabled
Ignoring request to toggle cloud tabs, because cloud tabs feature is currently disabled
@"WBWebsiteDataRecord"16@?0@"NSString"8
v16@?0@"NSArray"8
@"NSString"16@?0@"WKWebsiteDataRecord"8
com.apple.mobilesafari
v16@?0Q8
com.apple.safari.history.clear-history
v16@?0@"NSError"8
v24@?0@"<WBSCloudHistoryServiceProtocol>"8@"NSError"16
v40@?0@"<WBSHistoryServiceDatabaseProtocol>"8q16q24@"NSError"32
IndexedDB
Cookies/Cookies.binarycookies
ResourceLoadStatistics/full_browsing_session_resourceLog.plist
CloudTabsEnabled
uuidOfCloudTabDeviceUsedForRestoration
lastModifiedTimeOfCloudTabDeviceUsedForRestoration
bookmarks database maintenance
v16@?0@?<v@?B>8
v16@?0@"NSObject<OS_xpc_object>"8
bookmarks database migration
com.apple.webbookmarksd.passwordIconsRepeatingCleanupActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMaintenanceActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMigrationActivityIdentifier
com.apple.webbookmarksd.passwordIconsImmediateCleanupActivityIdentifier
Library
Safari
MobileSafari
com.apple.webbookmarksd.xpc.backupActivity
Backup
Bookmarks
CloudHistory
CloudTabs
History
Passwords
ReadingList
WebsiteData
B24@?0Q8@"NSObject<OS_xpc_object>"16
AddToReadingListQueue.plist
platform-application
com.apple.private.safari.add-to-reading-list-without-prompt
com.apple.webbookmarksd.restoreReadingListQueueActivityIdentifier
init
_reloadConfigurationDataIfNecessary
dictionaryWithObjects:forKeys:count:
_cloudConfigurationAssetsSortedByVersionNumber
countByEnumeratingWithState:objects:count:
state
localURL
URLByAppendingPathComponent:
dataWithContentsOfURL:
propertyListWithData:options:format:error:
applyRemoteConfiguration:
initWithAssetType:
runQueryAndReturnError:
count
attributes
objectForKey:
compare:
sortedArrayUsingComparator:
standardUserDefaults
doubleForKey:
setDouble:forKey:
firstObject
beginDownloadWithOptions:
resumeDownloadAndReturnError:
accessLevel
sharedConfiguration
platformBuiltInConfiguration
remoteConfiguration
shouldUseLongLivedOperationsToSaveRecords
.cxx_destruct
_assetsSortedByVersionNumber
_remoteConfigurationDictionary
_fetchedAssetData
defaultStore
additionalStoreWithIdentifier:
setWbsDelegate:
_setCloudKitDataNeedsFetching:
defaultCenter
_syncedDevicesStoreDidUpdate:
backingStore
addObserver:selector:name:object:
_userRequestsStoreDidUpdate:
_cloudKitDataDidUpdateOnServer:
removeObserver:
synchronize
cloudTabsAreEnabled
cloudTabStore:cloudTabsEnabledDidChange:
resetSyncedCloudTabDevicesAndCloseRequestsFromKVS
_notifyCloudTabStoreDidUpdateWithType:
fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit
notificationWithName:object:userInfo:
postNotification:
_currentDeviceUUID
UUIDString
_shouldUseCloudKitForSavingCurrentDevice
dictionaryRepresentationOfCurrentDeviceInCloudKit
dictionaryForKey:
initWithDictionary:uuid:
syncedCloudTabDevices
synchronizeCloudTabDevices
_sf_safariDefaults
uuid
isEqualToString:
lastModified
timeIntervalSinceReferenceDate
safari_filterObjectsUsingBlock:
_cloudKitDataNeedsFetching
dictionaryRepresentation
isEqualToDictionary:
syncAgentIsAvailable
arrayWithObject:
addObject:
closeTab:onDevice:
closeTabs:onDevice:
closeAllTabsOnDevice:
allKeys
removeObjectForKey:
deleteAllDevicesFromCloudKit
_clearTabsForCurrentDeviceWithSyncCompletionHandler:
_saveCurrentDeviceCloudTabs:syncCompletionHandler:
canSaveCloudTabsForCurrentDevice
currentDevice
name
clearTabsForFirstDuplicateDeviceInCloudKitWithName:passingTest:
isCloudTabDeviceDictionary:
isEphemeralDeviceInDictionary:
boolValue
enumerateKeysAndObjectsUsingBlock:
safari_dateForKey:
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:
setDictionary:forKey:
saveCurrentDeviceCloudTabs:
uniqueDeviceMultiplicity
currentDeviceIsRegisteredInCloudKit
_sf_dateForKey:
date
timeIntervalSinceDate:
setObject:forKey:
_waitForInitialCloudKitFetchToComplete:
_removeConflictingDevice
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:isEphemeralDevice:
isEqual:
saveCurrentCloudTabDeviceDictionaryToCloudKit:completionHandler:
saveCurrentDeviceTabsFromBrowserSavedState:syncCompletionHandler:
browserWindows
array
UUID
savedTabsStateForBrowserControllerWithUUID:
sceneID
safari_arrayForKey:
safari_stringForKey:
URLWithString:
length
initWithUUIDString:
initWithURL:uuid:title:isShowingReader:readerScrollPosition:sceneID:
boolForKey:
deviceUUID
cloudTabStoreDidGetCachedDevicesFromCloudKit:
_callFetchCloudKitDataCompletionHandlers
handleCloseTabRequestsFromCloudKit
cloudTabStore:didUpdateDevicesFromCloudKitWithError:
saveCloudTabsUsingCloudTabStore:
_storeForIdentifier:
tabUUID
cloudTabStore:didReceiveTabCloseRequest:
sharedCloudTabStore
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didUpdateDevicesAndCloseRequestsFromCloudKitForCloudTabStore:error:
didGetCachedDevicesFromCloudKitForCloudTabStore:
startObservingTabStoreStateChanges
stopObservingTabStoreStateChanges
_cloudTabsEnabledDidChange
currentDeviceUUID
_clearAllDevices
clearTabsForCurrentDevice
saveCurrentDeviceCloudTabsForEnteringBackground:completion:
saveCurrentDeviceTabsFromBrowserSavedState:
_keyValueStoreDictionaryRepresentation:
_setDictionaryInKeyValueStore:dictionary:forKey:
_removeObjectFromKeyValueStore:forKey:
_closeRequestedTabIfPossible:
delegate
setDelegate:
_internalQueue
_syncedDevicesStore
_userRequestsStore
_hasInitiatedFetchOfCloudKitDataAtLeastOnce
_hasCompletedFetchOfCloudKitDataAtLeastOnce
_fetchCloudKitDataCompletionHandlers
_didAttemptToCloseAtLeastOneTab
__cloudKitDataNeedsFetching
_delegate
TB,S_setCloudKitDataNeedsFetching:,V__cloudKitDataNeedsFetching
T@"NSUUID",R,N
T@"<CloudTabStoreDelegate>",W,N,V_delegate
sharedServer
isReadingListAvailable
initListenerForMachService:
_addToReadingListWithMessage:forConnection:
setHandler:forMessageNamed:
_clearAllCloudTabDevicesForConnection:
_clearCloudTabsForCurrentDeviceForConnection:
_connection:didToggleCloudTabsWithMessage:
_connection:getSafariWebDataUsageWithMessage:
_connection:deleteSafariAllWebSecurityOriginWithMessage:
_connection:deleteSafariWebSecurityOriginWithMessage:
_connection:deleteSafariPersistentURLCacheStorage:
_connection:getSafariDataUsageSummaryWithMessage:
_connection:clearAllSafariHistoryWithMessage:
_connection:clearHSTSSuperCookies:
registerBookmarksDatabaseMaintenanceActivity
registerBookmarksDatabaseMigrationActivity
registerPasswordIconsCleanupActivity
allObjects
componentsJoinedByString:
registeredStateCollectorWithLogLabel:payloadProvider:
dealloc
removeObject:
handleAddToReadingListWithMessage:forConnection:
isCloudTabsAvailable
_logWarningWithMessage:connection:
hasBoolEntitlement:
setBool:forKey:
defaultBrowserStateDatabase
_setIndexedDBDatabaseDirectory:
_setCookieStorageFile:
safari_dataStoreWithConfiguration:
sharedHTTPCookieStorage
webui_trackerProtectionEnabled
_setResourceLoadStatisticsEnabled:
dictionary
safari_highLevelDomainFromHost
objectForKeyedSubscript:
websiteDataRecordWithDomain:
setObject:forKeyedSubscript:
_newWebsiteDataStore
safari_allDataTypes
dataTypes
unionSet:
displayName
_dataSize
totalSize
usage
setUsage:
allValues
_fetchDataRecordsOfTypes:withOptions:completionHandler:
XPCDictionaryRepresentation
sendMessage:
_generateWebsiteDataRecordsWithCompletion:
safari_setByApplyingBlock:
intersectsSet:
mutableCopy
intersectSet:
fetchDataRecordsOfTypes:completionHandler:
removeDataOfTypes:forDataRecords:completionHandler:
websiteDataRecordFromXPCDictionary:
domain
_deleteDataForWebsiteDataRecord:websiteDataStore:completion:
_deleteDataForWebsiteDataRecord:matchingWebKitWebsiteDataRecords:websiteDataStore:completion:
defaultManager
path
_web_removeFileOnlyAtPath:
distantPast
removeDataOfTypes:modifiedSince:completionHandler:
_initWithMemoryCapacity:diskCapacity:relativePath:
removeAllCachedResponses
safari_clearHSTSSuperCookies
_getSafariDataUsageSummaryWithWebsiteDataStore:completion:
_clearAllHistory
safari_privacyPreservingDescription
clearAllHistoryInsertingTombstoneUpToDate:completionHandler:
_isCloudHistoryEnabled
saveChangesBypassingThrottler:completionHandler:
initializeCloudHistoryWithConfiguration:completionHandler:
connectWithOptions:delegate:completionHandler:
isCloudHistorySyncAvailable
aa_primaryAppleAccount
isEnabledForDataclass:
connection
reportPermanentIDsForItems:completionHandler:
reportPermanentIDsForVisits:completionHandler:
reportSevereError:completionHandler:
handleEvent:completionHandler:
connection:didCloseWithError:
featureManager
_listener
_connections
_readingListReplyConnections
_readingListHandler
_historyObserver
_websiteDataUsageTaskQueue
_websiteDataTypes
_stateCollector
_featureManager
T@"WBUFeatureManager",R,N,V_featureManager
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
_websiteDataURLForContainerWithURL:bundleIdentifierIfNotInContainer:
checkInActivities
safariBookmarkCollectionConfiguration
setSkipsExternalNotifications:
initWithConfiguration:checkIntegrity:
vacuum
holdLockSync:
isLockedSync
lockSync
unholdLockSync:
unlockSync
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
cleanUpReadingListArchives
initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:
savedAccountTouchIconCache
imageDirectoryURL
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
uuidStringToHost
highLevelDomainsOfAllSavedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords
URLByDeletingPathExtension
lastPathComponent
removeItemAtURL:error:
containsObject:
savePendingProviderChangesBeforeTermination
removeTouchIconMetadataForHosts:completionHandler:
stringByAppendingPathComponent:
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
stringByResolvingSymlinksInPath
userCachesDirectory
UTF8String
checkInActivity
_scheduleRestoreReadingListQueueActivity
_restoreReadingListQueueIfNeeded
safari_bestURLStringForUserTypedString
supportsURL:
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
setDateAdded:
setDateLastViewed:
saveBookmark:startReadingListFetcher:
readingListWithUnreadOnly:
bookmarkCount
reorderBookmark:toIndex:
_trimmedTitle:
_trimmedPreviewText:
initReadingListBookmarkWithTitle:address:previewText:
setAddedLocally:
readingListFolderBookmarkID
moveBookmark:toFolderWithID:
stringWithUTF8String:
_collection
_addReadingListItemWithAddress:title:previewText:clientBundle:bookmarksCollection:
postBookmarksDidReloadNotification
objectAtIndex:
_finishRestoreReadingListQueueActivityIfNeeded
_readingListQueueBackupPath
dataWithContentsOfFile:
bytes
_queueReadingListItems:
writeToFile:atomically:
_readingListQueueTimerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_clearReadingListQueueTimer
_commitReadingListQueue
invalidate
_addItemsToReadingList:
readingListAlertForDomain:appBundleID:
scheduleWithCompletionBlock:
cancel
_readingListQueue
_readingListQueueTimer
_readingListQueueRetryCount
_restoreReadingListQueueActivity
_didRestoreReadingListQueue
_alertToAddReadingListItem
CloudHistoryConfiguration
CloudTabStore
WBSCloudTabStoreDelegate
NSObject
WebBookmarksServer
WBSHistoryServiceDatabaseDelegate
WebBookmarksXPCConnectionDelegate
WebBookmarksMaintenanceActivity
WebBookmarksBackupActivity
WebBookmarksServerReadingListHandler
@16@0:8
v16@0:8
B16@0:8
@"NSArray"
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@16
v32@0:8@"WBSCloudTabStore"16@"NSError"24
v24@0:8@"WBSCloudTabStore"16
v24@0:8@?16
B32@0:8@16@24
v32@0:8@16@?24
@24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"WBSEncryptedCloudKeyValueStore"
@"NSMutableArray"
@"<CloudTabStoreDelegate>"
v32@0:8@"WBSDictionaryInt64"16@?<v@?@"NSError">24
v32@0:8@"NSError"16@?<v@?>24
v32@0:8@"WBSHistoryServiceEvent"16@?<v@?@"NSError">24
v32@0:8@"WebBookmarksXPCConnection"16@"NSObject<OS_xpc_object>"24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@"WebBookmarksXPCListener"
@"WebBookmarksServerReadingListHandler"
@"WBSFormAutoFillCorrectionsHistoryObserver"
@"NSMutableSet"
@"WBSDiagnosticStateCollector"
@"WBUFeatureManager"
v56@0:8@16@24@32@40@48
@"WebBookmarkCollection"
@"NSObject<OS_xpc_object>"
@"NSTimer"
@"SFSystemAlert"
Fetching data from CloudKit because data was updated on server
No iCloud Tab devices returned because iCloud Tabs are disabled
Synchronizing before returning iCloud Tab devices
Bypassing synchronizing with KVS and CloudKit because iCloud Tabs are disabled
Synchronizing with KVS and CloudKit
Fetching data from CloudKit as part of synchronizing
Bypassing fetching data from CloudKit because we're already up-to-date
Synchronizing with KVS
Bypassing fetching data from CloudKit because sync agent is not available
Initial CloudKit fetch has already completed
Initial CloudKit fetch was never started
Sync agent not available so initial CloudKit fetch will never complete
Initial CloudKit fetch has completed
Waiting for initial CloudKit fetch to complete
Saving iCloud Tabs when entering background because tabs are nil
Saving iCloud Tabs when entering background because no CloudKit data is available
Saving iCloud Tabs when entering background because at least one other device is registered or registered devices cannot be determined
Saving iCloud Tabs when entering background with no other devices because this device isn't registered
Not saving iCloud Tabs when entering background with no other devices
Saving iCloud Tabs when entering background with no other devices
Attempting to close tab with UUID %{public}@
Tab URL: "%{private}@"
Initializing WebBookmarksServer
Not authorized to add items to reading list. This feature is currently unavailable
XPC connection is missing the %{public}@ entitlement
Scheduling Fetch data usage
Fetching data usage
Finished fetching data usage
Deleting %zu records
Records for %{sensitive}@ were not deleted
Deleting website data record for domain %{sensitive}@
Failed to find matching website data
Deleting all website data records
Some website data records were not deleted:
  Data types: %{public}@; Data size: %{public}@; Domain: %{sensitive}@
Deleting persistent url cache storage
Querying data usage summary
Result of querying website data usage: %llu stored
Fetched website data record with data types: %{public}@
Clearing all history
Failed to connect to default history database: %{public}@
Failed to clear history: %{public}@
History was cleared
CloudHistory was saved
In context of XPC call with remote peer <PID = %d>: %{public}@
%{public}@
Severe database error detected: %{public}@
Performing 'vaccum' on WebBookmarkCollection during database maintenance
Failed to 'vacuum' WebBookmarkCollection during database maintenance
Successfully finished 'vacuum' on WebBookmarkCollection during database maintenance
Checked In %{public}@ activity
No prior %{public}@ activity was found. Registering a new one
No prior %{public}@ activity was found and registration is not requested
Running %{public}@ activity
Failed to set the activity state to 'Continue'. Deferring %{public}@ activity
Failed to acquire the sync lock. Deferring %{public}@ activity
Performing %{public}@ activity
Finished %{public}@ activity
Deferring %{public}@ activity because it did not complete
Failed migrate Reading List icons
Successfully migrated Reading List icons
Failed to clean up Reading List archives
Successfully cleaned up Reading List archives
Checked In password icons cleanup activity
No prior password icons cleanup activity was found. Registering a new one
No prior password icons cleanup activity was found and registration is not requested
Running password icons cleanup activity
Failed to set the activity state to 'Continue'. Deferring password icons cleanup activity
Performing password icons cleanup activity
Finished password icons cleanup activity
Failed to read contents of password icons directory: %{public}@
Finishing successfully since there are no password icons
Failed to remove icon for which we have no cache settings: %{public}@
Failed to remove icon for which we have no saved password: %{public}@
Checked In backup activity
Current activity state is %ld. Not taking any action until the activity state is Run
Running backup activity
Backup activity finished. No need to sync CloudTabs from this device during backup
Failed to set the activity state to 'Continue'
Finished syncing CloudTabs during device backup (error: %{public}@)
Checked in restore reading list queue activity
Registering restore reading list queue activity
Running restore reading list queue activity
Failed to set the activity state to 'Continue'. Deferring restore reading list queue activity
Performing restore reading list queue activity
#Server: Adding item to Reading List from client '%{public}@'
#Server Title: '%{private}@', URL: '%{private}@'
Failed to add item to reading list because the URL is an unsupported scheme
URL is already in Reading List; updating date instead of duplicating
Saving Reading List item as WebBookmark with UUID %{public}@
Failed to save Reading List item '%{public}@' to database
Failed to write Add to Reading List queue to file %{public}@
Finished restore reading list queue activity
Handling AddToReadingList request
Received malformed AddToReadingList message: items aren't an array; dropping
Received malformed AddToReadingList message; dropping
Adding an item to the Reading List without prompting the user
Prompting the user to add an item to the Reading List
User declined to add an item to the Reading List
User opted to add an item to the Reading List
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>webbookmarksd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.webbookmarksd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>webbookmarksd</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>16.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>8614.2.9.0.8</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B68</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B68</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.developer.WebKit.ServiceWorkers</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.Safari.SyncedTabs</string>
<key>com.apple.private.Safari.History</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.SafariShared.History</key>
<string>com.apple.SafariShared.History</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.safari.can-use-bookmarks-sync-agent</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.container-required</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.Safari.UserRequests</string>
</array>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.mobilesafari</string>
</array>
<key>com.apple.remotemanagementd.management-state</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.SafariBookmarksSyncAgent</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage</string>
<string>com.apple.cfnetwork</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
com.apple.MobileAsset.SafariCloudHistoryConfiguration
LastCloudHistoryConfigurationUpdateTime
v8@?0
1:1440
15:1 | 1:1425
31:5 | 1:1285
data.plist
q24@?0@"ASAsset"8@"ASAsset"16
com.apple.Safari.UserRequests
DeviceName
HasDuplicateDeviceName
LastModified
Tabs
CloudTabStoreDidUpdateNotification
CloudTabStorePrefChangedNotification
CloudTabStoreUpdateTypeKey
CloudTabStoreUpdateTypeDeviceStore
CloudTabStoreUpdateTypeUserRequestsStore
CloudTabStoreDateOfLastSaveWhenEnteringBackgroundWithNoOtherDevices
com.apple.MobileSafari.CloudTabStore
B16@?0@"WBSCloudTabDevice"8
v32@?0@8@"NSDictionary"16^B24
v12@?0B8
SafariStateDocuments
SafariStateDocumentUserVisibleURL
SafariStateDocumentUUID
SafariStateDocumentTitle
SafariStateDocumentShouldRestoreReader
HOME
CFFIXED_USER_HOME
/tmp/
TMPDIR
com.apple.private.safari.cloudtabs
com.apple.private.webbookmarks.settings
com.apple.webbookmarksd.WebsiteDataUsageTaskQueue
v24@?0@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"16
Website Data State
website data types
@"NSDictionary"8@?0
Ignoring request to clear cloud tab devices, because cloud tabs feature is currently disabled.
Ignoring request to clear cloud tabs on this device, because cloud tabs feature is currently disabled
Ignoring request to toggle cloud tabs, because cloud tabs feature is currently disabled
@"WBWebsiteDataRecord"16@?0@"NSString"8
v16@?0@"NSArray"8
@"NSString"16@?0@"WKWebsiteDataRecord"8
com.apple.mobilesafari
v16@?0Q8
com.apple.safari.history.clear-history
v16@?0@"NSError"8
v24@?0@"<WBSCloudHistoryServiceProtocol>"8@"NSError"16
v40@?0@"<WBSHistoryServiceDatabaseProtocol>"8q16q24@"NSError"32
IndexedDB
Cookies/Cookies.binarycookies
ResourceLoadStatistics/full_browsing_session_resourceLog.plist
CloudTabsEnabled
uuidOfCloudTabDeviceUsedForRestoration
lastModifiedTimeOfCloudTabDeviceUsedForRestoration
bookmarks database maintenance
v16@?0@?<v@?B>8
v16@?0@"NSObject<OS_xpc_object>"8
bookmarks database migration
com.apple.webbookmarksd.passwordIconsRepeatingCleanupActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMaintenanceActivityIdentifier
com.apple.webbookmarksd.bookmarksDatabaseMigrationActivityIdentifier
com.apple.webbookmarksd.passwordIconsImmediateCleanupActivityIdentifier
Library
Safari
MobileSafari
com.apple.webbookmarksd.xpc.backupActivity
Backup
Bookmarks
CloudHistory
CloudTabs
History
Passwords
ReadingList
WebsiteData
B24@?0Q8@"NSObject<OS_xpc_object>"16
AddToReadingListQueue.plist
platform-application
com.apple.private.safari.add-to-reading-list-without-prompt
com.apple.webbookmarksd.restoreReadingListQueueActivityIdentifier
dataWithContentsOfFile:
bytes
unionSet:
readingListWithUnreadOnly:
saveCurrentCloudTabDeviceDictionaryToCloudKit:completionHandler:
websiteDataRecordWithDomain:
intersectSet:
dictionary
setObject:forKeyedSubscript:
unholdLockSync:
initListenerForMachService:
currentDeviceIsRegisteredInCloudKit
sendMessage:
name
safari_clearHSTSSuperCookies
allValues
readingListFolderBookmarkID
cloudTabStoreDidGetCachedDevicesFromCloudKit:
safari_bestURLStringForUserTypedString
removeObjectForKey:
isEqualToString:
fetchDataRecordsOfTypes:completionHandler:
stringByAppendingPathComponent:
imageDirectoryURL
initializeCloudHistoryWithConfiguration:completionHandler:
saveCloudTabsUsingCloudTabStore:
_initWithMemoryCapacity:diskCapacity:relativePath:
deviceUUID
browserWindows
websiteDataRecordFromXPCDictionary:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
mutableCopy
XPCDictionaryRepresentation
_trimmedTitle:
allObjects
setObject:forKey:
totalSize
readingListAlertForDomain:appBundleID:
removeObject:
saveChangesBypassingThrottler:completionHandler:
moveBookmark:toFolderWithID:
cloudTabStore:didUpdateDevicesFromCloudKitWithError:
enumerateKeysAndObjectsUsingBlock:
isEqualToDictionary:
initWithUUIDString:
holdLockSync:
boolValue
vacuum
deleteAllDevicesFromCloudKit
state
scheduleWithCompletionBlock:
setHandler:forMessageNamed:
UUIDString
_trimmedPreviewText:
safari_arrayForKey:
allKeys
countByEnumeratingWithState:objects:count:
removeItemAtURL:error:
cloudTabStore:didReceiveTabCloseRequest:
saveBookmark:startReadingListFetcher:
uuidStringToHost
doubleForKey:
timeIntervalSinceReferenceDate
highLevelDomainsOfAllSavedAccountsWithPasswordsExcludingNeverSaveMarkerPasswords
boolForKey:
defaultStore
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
propertyListWithData:options:format:error:
standardUserDefaults
initWithURL:uuid:title:isShowingReader:readerScrollPosition:sceneID:
removeDataOfTypes:modifiedSince:completionHandler:
safari_allDataTypes
UUID
domain
additionalStoreWithIdentifier:
setDouble:forKey:
count
bookmarkCount
sceneID
initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:
timeIntervalSinceDate:
isEphemeralDeviceInDictionary:
cloudTabStore:cloudTabsEnabledDidChange:
defaultManager
UTF8String
safari_stringForKey:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
sortedArrayUsingComparator:
postNotification:
lockSync
isEnabledForDataclass:
safariBookmarkCollectionConfiguration
hasBoolEntitlement:
distantPast
setDictionary:forKey:
uuid
addObserver:selector:name:object:
removeDataOfTypes:forDataRecords:completionHandler:
postBookmarksDidReloadNotification
tabUUID
defaultCenter
savedTabsStateForBrowserControllerWithUUID:
clearTabsForFirstDuplicateDeviceInCloudKitWithName:passingTest:
initWithDictionary:uuid:
containsObject:
beginDownloadWithOptions:
handleCloseTabRequestsFromCloudKit
safari_setByApplyingBlock:
runQueryAndReturnError:
savedAccountTouchIconCache
localURL
URLWithString:
addObject:
_fetchDataRecordsOfTypes:withOptions:completionHandler:
isCloudTabsAvailable
safari_privacyPreservingDescription
setDateLastViewed:
_sf_safariDefaults
removeAllCachedResponses
displayName
sharedHTTPCookieStorage
URLByDeletingPathExtension
defaultBrowserStateDatabase
connection
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:isEphemeralDevice:
backingStore
path
savePendingProviderChangesBeforeTermination
usage
clearAllHistoryInsertingTombstoneUpToDate:completionHandler:
length
resumeDownloadAndReturnError:
accessLevel
registeredStateCollectorWithLogLabel:payloadProvider:
_sf_dateForKey:
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
isCloudTabDeviceDictionary:
dictionaryWithObjects:forKeys:count:
synchronize
safari_highLevelDomainFromHost
setDateAdded:
objectForKeyedSubscript:
lastPathComponent
date
initWithDeviceName:lastModified:hasDuplicateName:tabs:uuid:
attributes
aa_primaryAppleAccount
applyRemoteConfiguration:
notificationWithName:object:userInfo:
isLockedSync
webui_trackerProtectionEnabled
safari_dataStoreWithConfiguration:
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
dataTypes
dictionaryForKey:
setSkipsExternalNotifications:
initReadingListBookmarkWithTitle:address:previewText:
_setCookieStorageFile:
compare:
uniqueDeviceMultiplicity
intersectsSet:
isReadingListAvailable
fileURLWithPath:isDirectory:
stringWithUTF8String:
_web_removeFileOnlyAtPath:
initWithAssetType:
safari_dateForKey:
array
removeTouchIconMetadataForHosts:completionHandler:
setAddedLocally:
setUsage:
dictionaryRepresentation
objectAtIndex:
_setIndexedDBDatabaseDirectory:
supportsURL:
removeObserver:
firstObject
URLByAppendingPathComponent:
lastModified
writeToFile:atomically:
invalidate
componentsJoinedByString:
setBool:forKey:
cancel
_dataSize
safari_filterObjectsUsingBlock:
arrayWithObject:
setWbsDelegate:
_websiteDataURLForContainerWithURL:bundleIdentifierIfNotInContainer:
dataWithContentsOfURL:
unlockSync
objectForKey:
syncAgentIsAvailable
dictionaryRepresentationOfCurrentDeviceInCloudKit
reorderBookmark:toIndex:
_setResourceLoadStatisticsEnabled:
initWithConfiguration:checkIntegrity:
isCloudHistorySyncAvailable
resetSyncedCloudTabDevicesAndCloseRequestsFromKVS
URLByAppendingPathComponent:isDirectory:
cleanUpReadingListArchives
connectWithOptions:delegate:completionHandler:
init
sharedConfiguration
platformBuiltInConfiguration
remoteConfiguration
_cloudConfigurationAssetsSortedByVersionNumber
_reloadConfigurationDataIfNecessary
shouldUseLongLivedOperationsToSaveRecords
.cxx_destruct
_assetsSortedByVersionNumber
_remoteConfigurationDictionary
_fetchedAssetData
_syncedDevicesStoreDidUpdate:
_userRequestsStoreDidUpdate:
_cloudKitDataDidUpdateOnServer:
syncedCloudTabDevices
fetchSyncedCloudTabDevicesAndCloseRequestsFromCloudKit
closeTab:onDevice:
closeTabs:onDevice:
closeAllTabsOnDevice:
sharedCloudTabStore
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didUpdateDevicesAndCloseRequestsFromCloudKitForCloudTabStore:error:
didGetCachedDevicesFromCloudKitForCloudTabStore:
startObservingTabStoreStateChanges
stopObservingTabStoreStateChanges
_cloudTabsEnabledDidChange
_notifyCloudTabStoreDidUpdateWithType:
currentDeviceUUID
currentDevice
synchronizeCloudTabDevices
_waitForInitialCloudKitFetchToComplete:
_callFetchCloudKitDataCompletionHandlers
_clearAllDevices
clearTabsForCurrentDevice
_clearTabsForCurrentDeviceWithSyncCompletionHandler:
_removeConflictingDevice
saveCurrentDeviceCloudTabsForEnteringBackground:completion:
saveCurrentDeviceCloudTabs:
_saveCurrentDeviceCloudTabs:syncCompletionHandler:
saveCurrentDeviceTabsFromBrowserSavedState:
saveCurrentDeviceTabsFromBrowserSavedState:syncCompletionHandler:
_shouldUseCloudKitForSavingCurrentDevice
cloudTabsAreEnabled
canSaveCloudTabsForCurrentDevice
_currentDeviceUUID
_storeForIdentifier:
_keyValueStoreDictionaryRepresentation:
_setDictionaryInKeyValueStore:dictionary:forKey:
_removeObjectFromKeyValueStore:forKey:
_closeRequestedTabIfPossible:
delegate
setDelegate:
_cloudKitDataNeedsFetching
_setCloudKitDataNeedsFetching:
_internalQueue
_syncedDevicesStore
_userRequestsStore
_hasInitiatedFetchOfCloudKitDataAtLeastOnce
_hasCompletedFetchOfCloudKitDataAtLeastOnce
_fetchCloudKitDataCompletionHandlers
_didAttemptToCloseAtLeastOneTab
__cloudKitDataNeedsFetching
_delegate
TB,S_setCloudKitDataNeedsFetching:,V__cloudKitDataNeedsFetching
T@"NSUUID",R,N
T@"<CloudTabStoreDelegate>",W,N,V_delegate
dealloc
sharedServer
reportPermanentIDsForItems:completionHandler:
reportPermanentIDsForVisits:completionHandler:
reportSevereError:completionHandler:
handleEvent:completionHandler:
connection:didCloseWithError:
_addToReadingListWithMessage:forConnection:
_clearAllCloudTabDevicesForConnection:
_clearCloudTabsForCurrentDeviceForConnection:
_connection:didToggleCloudTabsWithMessage:
_newWebsiteDataStore
_generateWebsiteDataRecordsWithCompletion:
_connection:getSafariWebDataUsageWithMessage:
_deleteDataForWebsiteDataRecord:matchingWebKitWebsiteDataRecords:websiteDataStore:completion:
_connection:deleteSafariWebSecurityOriginWithMessage:
_deleteDataForWebsiteDataRecord:websiteDataStore:completion:
_connection:deleteSafariAllWebSecurityOriginWithMessage:
_connection:deleteSafariPersistentURLCacheStorage:
_connection:clearHSTSSuperCookies:
_connection:getSafariDataUsageSummaryWithMessage:
_getSafariDataUsageSummaryWithWebsiteDataStore:completion:
_connection:clearAllSafariHistoryWithMessage:
_clearAllHistory
_isCloudHistoryEnabled
_logWarningWithMessage:connection:
featureManager
_listener
_connections
_readingListReplyConnections
_readingListHandler
_historyObserver
_websiteDataUsageTaskQueue
_websiteDataTypes
_stateCollector
_featureManager
T@"WBUFeatureManager",R,N,V_featureManager
checkInActivities
registerBookmarksDatabaseMaintenanceActivity
registerBookmarksDatabaseMigrationActivity
registerPasswordIconsCleanupActivity
checkInActivity
_readingListQueueTimerDidFire:
_collection
_scheduleRestoreReadingListQueueActivity
_addReadingListItemWithAddress:title:previewText:clientBundle:bookmarksCollection:
_addItemsToReadingList:
_readingListQueueBackupPath
_restoreReadingListQueueIfNeeded
_queueReadingListItems:
_finishRestoreReadingListQueueActivityIfNeeded
_clearReadingListQueueTimer
_commitReadingListQueue
handleAddToReadingListWithMessage:forConnection:
_readingListQueue
_readingListQueueTimer
_readingListQueueRetryCount
_restoreReadingListQueueActivity
_didRestoreReadingListQueue
_alertToAddReadingListItem
CloudHistoryConfiguration
CloudTabStore
WBSCloudTabStoreDelegate
NSObject
WebBookmarksServer
WBSHistoryServiceDatabaseDelegate
WebBookmarksXPCConnectionDelegate
WebBookmarksMaintenanceActivity
WebBookmarksBackupActivity
WebBookmarksServerReadingListHandler
@16@0:8
v16@0:8
B16@0:8
@"NSArray"
@"NSDictionary"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@16
v32@0:8@"WBSCloudTabStore"16@"NSError"24
v24@0:8@"WBSCloudTabStore"16
v24@0:8@?16
B32@0:8@16@24
v32@0:8@16@?24
@24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"WBSEncryptedCloudKeyValueStore"
@"NSMutableArray"
@"<CloudTabStoreDelegate>"
v32@0:8@"WBSDictionaryInt64"16@?<v@?@"NSError">24
v32@0:8@"NSError"16@?<v@?>24
v32@0:8@"WBSHistoryServiceEvent"16@?<v@?@"NSError">24
v32@0:8@"WebBookmarksXPCConnection"16@"NSObject<OS_xpc_object>"24
v48@0:8@16@24@32@?40
v40@0:8@16@24@?32
@"WebBookmarksXPCListener"
@"WebBookmarksServerReadingListHandler"
@"WBSFormAutoFillCorrectionsHistoryObserver"
@"NSMutableSet"
@"WBSDiagnosticStateCollector"
@"WBUFeatureManager"
v56@0:8@16@24@32@40@48
@"WebBookmarkCollection"
@"NSObject<OS_xpc_object>"
@"NSTimer"
@"SFSystemAlert"
Fetching data from CloudKit because data was updated on server
No iCloud Tab devices returned because iCloud Tabs are disabled
Synchronizing before returning iCloud Tab devices
Bypassing synchronizing with KVS and CloudKit because iCloud Tabs are disabled
Synchronizing with KVS and CloudKit
Fetching data from CloudKit as part of synchronizing
Bypassing fetching data from CloudKit because we're already up-to-date
Synchronizing with KVS
Bypassing fetching data from CloudKit because sync agent is not available
Initial CloudKit fetch has already completed
Initial CloudKit fetch was never started
Sync agent not available so initial CloudKit fetch will never complete
Initial CloudKit fetch has completed
Waiting for initial CloudKit fetch to complete
Saving iCloud Tabs when entering background because tabs are nil
Saving iCloud Tabs when entering background because no CloudKit data is available
Saving iCloud Tabs when entering background because at least one other device is registered or registered devices cannot be determined
Saving iCloud Tabs when entering background with no other devices because this device isn't registered
Not saving iCloud Tabs when entering background with no other devices
Saving iCloud Tabs when entering background with no other devices
Attempting to close tab with UUID %{public}@
Tab URL: "%{private}@"
Initializing WebBookmarksServer
Not authorized to add items to reading list. This feature is currently unavailable
XPC connection is missing the %{public}@ entitlement
Scheduling Fetch data usage
Fetching data usage
Finished fetching data usage
Deleting %zu records
Records for %{sensitive}@ were not deleted
Deleting website data record for domain %{sensitive}@
Failed to find matching website data
Deleting all website data records
Some website data records were not deleted:
  Data types: %{public}@; Data size: %{public}@; Domain: %{sensitive}@
Deleting persistent url cache storage
Querying data usage summary
Result of querying website data usage: %llu stored
Fetched website data record with data types: %{public}@
Clearing all history
Failed to connect to default history database: %{public}@
Failed to clear history: %{public}@
History was cleared
CloudHistory was saved
In context of XPC call with remote peer <PID = %d>: %{public}@
%{public}@
Severe database error detected: %{public}@
Performing 'vaccum' on WebBookmarkCollection during database maintenance
Failed to 'vacuum' WebBookmarkCollection during database maintenance
Successfully finished 'vacuum' on WebBookmarkCollection during database maintenance
Checked In %{public}@ activity
No prior %{public}@ activity was found. Registering a new one
No prior %{public}@ activity was found and registration is not requested
Running %{public}@ activity
Failed to set the activity state to 'Continue'. Deferring %{public}@ activity
Failed to acquire the sync lock. Deferring %{public}@ activity
Performing %{public}@ activity
Finished %{public}@ activity
Deferring %{public}@ activity because it did not complete
Failed migrate Reading List icons
Successfully migrated Reading List icons
Failed to clean up Reading List archives
Successfully cleaned up Reading List archives
Checked In password icons cleanup activity
No prior password icons cleanup activity was found. Registering a new one
No prior password icons cleanup activity was found and registration is not requested
Running password icons cleanup activity
Failed to set the activity state to 'Continue'. Deferring password icons cleanup activity
Performing password icons cleanup activity
Finished password icons cleanup activity
Failed to read contents of password icons directory: %{public}@
Finishing successfully since there are no password icons
Failed to remove icon for which we have no cache settings: %{public}@
Failed to remove icon for which we have no saved password: %{public}@
Checked In backup activity
Current activity state is %ld. Not taking any action until the activity state is Run
Running backup activity
Backup activity finished. No need to sync CloudTabs from this device during backup
Failed to set the activity state to 'Continue'
Finished syncing CloudTabs during device backup (error: %{public}@)
Checked in restore reading list queue activity
Registering restore reading list queue activity
Running restore reading list queue activity
Failed to set the activity state to 'Continue'. Deferring restore reading list queue activity
Performing restore reading list queue activity
#Server: Adding item to Reading List from client '%{public}@'
#Server Title: '%{private}@', URL: '%{private}@'
Failed to add item to reading list because the URL is an unsupported scheme
URL is already in Reading List; updating date instead of duplicating
Saving Reading List item as WebBookmark with UUID %{public}@
Failed to save Reading List item '%{public}@' to database
Failed to write Add to Reading List queue to file %{public}@
Finished restore reading list queue activity
Handling AddToReadingList request
Received malformed AddToReadingList message: items aren't an array; dropping
Received malformed AddToReadingList message; dropping
Adding an item to the Reading List without prompting the user
Prompting the user to add an item to the Reading List
User declined to add an item to the Reading List
User opted to add an item to the Reading List
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241133</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>webbookmarksd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.webbookmarksd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>webbookmarksd</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>16.1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>8614.2.9.0.8</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>20B68</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.1</string>
<key>DTSDKBuild</key>
<string>20B68</string>
<key>DTSDKName</key>
<string>iphonesimulator16.1.internal</string>
<key>DTXcode</key>
<string>1400</string>
<key>DTXcodeBuild</key>
<string>14A5270i</string>
<key>MinimumOSVersion</key>
<string>16.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.developer.WebKit.ServiceWorkers</key>
<true/>
<key>com.apple.developer.device-information.user-assigned-device-name</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.Safari.SyncedTabs</string>
<key>com.apple.private.Safari.History</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.SafariShared.History</key>
<string>com.apple.SafariShared.History</string>
</dict>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.safari.can-use-bookmarks-sync-agent</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.container-required</key>
<string>com.apple.mobilesafari</string>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.Safari.UserRequests</string>
</array>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.mobilesafari</string>
</array>
<key>com.apple.remotemanagementd.management-state</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.SafariBookmarksSyncAgent</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.ProtectedCloudStorage</string>
<string>com.apple.cfnetwork</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
