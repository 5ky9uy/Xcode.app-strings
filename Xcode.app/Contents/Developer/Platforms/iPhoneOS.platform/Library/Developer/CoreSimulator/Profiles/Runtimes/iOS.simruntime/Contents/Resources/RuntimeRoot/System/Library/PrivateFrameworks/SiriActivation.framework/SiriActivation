333333
333333
?ffffff
?333333
@(#)PROGRAM:SiriActivation  PROJECT:AssistantUI-1
%s Button Down Event absent. Artifically update timestamp.
%s BTLE lift time delta %f, adjusting by %d
%s BTLE connected to carplay, adjusting by %d
%s BTLE Myriad already handling Continuity activations
%s BTLE Myriad voice trigger advertising while isVisible
%s BTLE Myriad voice trigger advertising needed adjusted by lt=%d + cp=%d + rtw=%d = %d
%s BTLE Myriad direct trigger advertising needed
%s BTLE CarPlay delayed for Myriad decision, evt = %ld
%s BTLE timed out waiting for Myriad decision, sem=%ld
%s BTLE CarPlay Myriad decision. Not activating Siri.
%s BTLE CarPlay Myriad decision. Activating Siri.
%s BTLE observerCalled context=%@
%s BTLE wake gesture noted
%s %p
%s Unexpectedly attempted to assign a new connection to the activation server with an existing connection: %{public}@
%s %p #activation registerPresentationIdentifier:%@
%s %p #activation unregisterPresentationIdentifier:%@
%s %p #activation didDismissWithOptions:%@
%s %p #activation Shell indicates Siri is presented
%s %p #activation Shell indicates Siri presentation failed : %@
%s #activation allBulletins
%s #activation bulletinsOnLockScreen
%s #activation bulletinForIdentifier: %@
%s #activation markBulletinWithIdentifier:%@read:%@
%s Registration of '%@' when it is already connected. Removing.
%s Unregister request of '%@' when it is not connected.
%s #activation Unregister request of '%@' when it is an active presentation. Dismissing Siri.
%s #activation '%@' was the last active presentation. Setting request state to off.
%s #activation '%@' was not the last active presentation. Dismissing Siri.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Activating.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s %@ button prewarm request
%s Cancelling prewarm from %@
%s #activation buttonDownFromButtonIdentifier:%@
%s #activation buttonUpFromButtonIdentifier:%@
%s #activation buttonTapFromButtonIdentifier:%@
%s buttonTapFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context %@. Activating.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Passing to the Presentation Shell.
%s buttonUpTimestamp: %f, buttonDownTimestamp: %f
%s #activation synthesizing button tap
%s #activation button tap occurred, but Siri is not yet up. Not synthesizing tap event.
%s #activation activationRequestFromDirectActionEvent:%@
%s #activation activationRequestFromContinuityWithContext
%s #activation activationRequestFromBreadcrumb
%s #activation activationRequestFromSimpleActivation:%@
%s #activation activationRequestFromSpotlightWithContext
%s #activation activationRequestFromVoiceTrigger
%s #activation activationRequestFromTestingWithContext
%s %s: activationRequest = %@
%s #activation presentation decision : %@
%s #activation _activatePresentation %@
%s #activation _dismissSiri
%s #activation _cancelTTS
%s #activation _preheat
%s #activation _cancelActivationPreparationIfNecessary
%s SpringBoard did not call cancelPendingActivationEvent: in time before calling handleActivationEvent:eventSource:context: or handledButtonUpEventFromSource:
%s #activation _cancelActivationPreparationForSetup
%s #activation _cancelPendingActivationEventWithReason:%@
%s BTLE Device should abort session
%s BTLE Device continues to interact
%s Starting a new watchdog timer when one already exists.
%s Activation timed out, cleaning up
%s #activation presentation watchdog timer request starting
%s #activation presentation watchdog timer request stopping
%s #activation presentation watchdog timer request stop, but not needed
%s #activation starting a new dismissal watchdog timer when one already exists.
%s Dismissal timed out, cleaning up
%s #activation dismissal watchdog timer request starting
%s #activation dismissal watchdog timer request stopping
%s #activation dismissal watchdog timer request stopping, but not needed
%s #Activation SASPresentationDecision deciding between: %@
%s ERROR: Multiple connected presentations, but none of them have precedence. Taking the first object, %@
%s SiriLongPressButtonSource connection interrupted. Reactivating...
%s #activation %@ didRecognizeLongPress
%s Deallocated SiriActivityAssertion (identifier=%@, reason=%@) before it was properly invalidated.
%s Failed getting waketime mib %{public}s
%s Device wants Home Button ZLL, checking wake time
%s Failed looking up waketime %{public}s
%s Wake time was %lf seconds ago
%s Button down time was %lf seconds ago
%s Wake -> Button down delta is %lf
%s Using Wake Time
%s Using Button Down Time
%s button down timestamp sent in format where absolute time conversion is invalid
%s Bulletin with identifier: %@ not found in cache with bulletinIDs: %@
%s %@ added to lock screen feed
%s ACAssistantBBObserver: Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s ACAssistantBBObserver: Asked to remove a bulletin from lock screen %@ that I don't already have.
%s ACAssistantBBObserver: Asked to remove a bulletin %@ that I don't already have.
%s ERROR: attempted to create SiriButtonIdentifier from '%@'.
%s info=%@
%s Received VoiceTrigger activation request, already pending for possible future activation
%s Received VoiceTrigger activation request, but currently blocking VoiceTrigger activations
%s Received VoiceTrigger activation request, no restrictions, activating
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s %s count at beginning: %@, hasPendingTrigger: %@
%s count is zero after being decremented, activating from pending
%s Failed to query for pocket state: %@
%s PocketState changed to %@
%s Cannot set requestSource to SASRequestSourceKeyboard when keyboard input is disabled
%s %s Enabled: %@
%s Not activating; Siri is not supported. Language code: %@
%s Not activating; Siri is restricted by profile.
%s Not activating; Siri voice activation is disabled until first unlock.
%s Not activating via voicetrigger because the device is face down on table or in pocket
%s Not activating; There is an existing HoldToTalk trigger.
%s Not activating; Siri is disabled because an iPad Smart Cover is closed
%s Not activating; Siri is disabled because an iPhone Smart Cover is closed which blocks home button or Hey Siri
%s Not activating; "Press Home/Side For Siri" is disabled in Settings
%s Not activating; Siri state is %@. Ignoring activationRequest %@.
%s Not activating; Siri is disabled while passcode locked
%s Not activating; Siri is disabled because the device is blocked
%s Not activating; Siri Setup is disabled while passcode locked
%s SASSignalConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation Button identifier %@ registered by %@
%s #activation Button identifier %@ unregistered by %@
%s #activation Direct action source registered by %@
%s #activation Direct action source unregistered by %@
%s #activation Continuity source registered by %@
%s #activation Continuity source unregistered by %@
%s #activation SimpleActivation source registered by %@
%s #activation SimpleActivation source unregistered by %@
%s #activation Spotlight source registered by %@
%s #activation Spotlight source unregistered by %@
%s #activation Breadcrumb source registered by %@
%s #activation Breadcrumb source unregistered by %@
%s #activation Testing source registered by %@
%s #activation Testing source unregistered by %@
%s #activation activationRequestFromButtonIdentifier:%@ context:%@
%s #activation activationRequestFromDirectActionEvent:%@ context:%@
%s #activation activationRequestFromDirectActionEvent payload missing bundleId, using connection bundle id:%@
%s #activation activationRequestFromContinuityWithContext:%@
%s #activation activationRequestFromSimpleActivation
%s #activation activationRequestFromSpotlightWithContext:%@
%s #activation activationRequestFromTestingWithContext:%@
%s prewarmFromButtonIdentifier:%@
%s cancelPrewarmFromButtonIdentifier:%@
%s buttonDownFromButtonIdentifier:%@ timestamp:%@
%s buttonUpFromButtonIdentifier:%@ timestamp:%@
%s buttonTapFromButtonIdentifier:%@
%s buttonLongPressFromButtonIdentifier:%@ context:%@
%s SASPresentationConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
-[SASRequestOptionsBuilder _createRequestOptionsForRequest:withDataSource:]
__supportsCarFullScreen
__bundleId
AssistantDirectActionEventKey
systemState
T@"SASSystemState",&,N,V_systemState
presentationIdentifier
Tq,N,V_presentationIdentifier
contextOverride
T@"SiriContextOverride",&,N,V_contextOverride
SiriButtonIdentifierLongPressUndefined
SiriButtonIdentifierLongPressHomeButton
SiriButtonIdentifierLongPressLockButton
SiriButtonIdentifierLongPressBTHeadset
SiriButtonIdentifierLongPressWiredMic
SiriButtonIdentifierLongPressCarPlayAppDockButton
SiriButtonIdentifierLongPressCarPlaySteeringWheelButton
SiriButtonIdentifierLongPressCarPlaySiriButton
SiriButtonIdentifierMockShellButton
SiriButtonIdentifierMockSteeringWheelButton
SiriButtonIdentifierTestingShellButton
<unknown siri button identifier : %li>
SpeechRecognition
com.apple.siri.false_positive.0ms_to_150ms
com.apple.siri.false_positive.150ms_to_250ms
com.apple.siri.false_positive.250ms_to_350ms
com.apple.siri.false_positive.350ms_and_up
com.apple.siri.false_positive.activation_duration
v8@?0
preparationStartTime
Td,N,G_preparationStartTime,S_setPreparationStartTime:,V_preparationStartTime
predictedRecordRouteIsZLL
TB,N,V_predictedRecordRouteIsZLL
delegate
T@"<SASHeaterDelegate>",W,N,V_delegate
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSURL",C,N,V_url
punchoutStyle
Tq,N,V_punchoutStyle
shouldLogAnalyticsEvents
TB,N,V_shouldLogAnalyticsEvents
pendingAnalyticsEventQueue
T@"NSMutableArray",&,N,V_pendingAnalyticsEventQueue
v16@?0@"CMMotionActivity"8
-[SASMyriadController activateForRequest:visible:]
-[SASMyriadController layoutMonitor:didUpdateDisplayLayout:withContext:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
SiriContextOverrideKey
currentSpokenLanguageCode
unlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
connectedToCarPlay
connectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
supportsSecureCoding
TB,R
T@"NSString",&,N,V_currentSpokenLanguageCode
T@"NSNumber",&,N,V_unlockedSinceBoot
T@"NSNumber",&,N,V_deviceIsBlocked
T@"NSNumber",&,N,V_deviceIsPasscodeLocked
T@"NSNumber",&,N,V_pocketStateShouldPreventVoiceTrigger
T@"NSNumber",&,N,V_pad
T@"NSNumber",&,N,V_smartCoverClosed
T@"NSNumber",&,N,V_accessibilityShortcutEnabled
T@"NSNumber",&,N,V_carDNDActive
T@"NSNumber",&,N,V_connectedToCarPlay
T@"NSNumber",&,N,V_connectedToTrustedCarPlay
T@"NSNumber",&,N,V_siriIsEnabled
T@"NSNumber",&,N,V_siriIsRestricted
T@"NSNumber",&,N,V_siriIsSupported
v16@?0@"<BSServiceConnectionConfiguring>"8
v16@?0@"BSServiceConnection"8
-[SASPresentationServer init]
-[SASPresentationServer dealloc]
<SASPresentationServer connection:%@, presentationIdentifier:%@>
-[SASPresentationServer _setConnection:]
-[SASPresentationServer registerPresentationIdentifier:]
-[SASPresentationServer unregisterPresentationIdentifier:]
-[SASPresentationServer didDismissWithOptions:]
-[SASPresentationServer didPresentSiri]
-[SASPresentationServer failedToPresentSiriWithError:]
-[SASPresentationServer allBulletins]
-[SASPresentationServer bulletinsOnLockScreen]
-[SASPresentationServer bulletinForIdentifier:]
-[SASPresentationServer handleMarkBulletinWithIdentifier:asRead:]
workspaceServiceInjector
T@"BSServiceConnectionEndpointInjector",&,N,V_workspaceServiceInjector
connection
T@"BSServiceConnection<BSServiceConnectionHost>",&,N,V_connection
invalidated
TB,N,V_invalidated
waitForConnectBlocks
T@"NSMutableArray",&,N,V_waitForConnectBlocks
weak_delegate
T@"<SASPresentationServerDelegate>",W,N,V_weak_delegate
BT_KEY_SIRI_EYESFREE_MODE
com.apple.siri.activation.service
com.apple.siri.activation
com.apple.siri.activation.presentation
com.apple.siri.activation.signal
machServiceIdentifier
T@"NSString",&,N,V_machServiceIdentifier
presentationDomain
T@"NSString",&,N,V_presentationDomain
T@"NSString",&,N,V_presentationIdentifier
signalDomain
T@"NSString",&,N,V_signalDomain
signalIdentifier
T@"NSString",&,N,V_signalIdentifier
com.apple.siri.EyesFree
com.apple.siri.Siriland
com.apple.siri.CarDisplay
com.apple.siri.UIFree
SASRequestStateOff
SASRequestStateWarming
SASRequestStatePreparing
SASRequestStateStarting
SASRequestStateActive
SASRequestStateStopping
v12@?0B8
VoiceTrigger Dispatch Queue
Siri activation/dismissal watchdog queue
-[SiriActivationService registerSiriPresentation:withIdentifier:]
-[SiriActivationService unregisterSiriPresentationIdentifier:]
-[SiriActivationService activationRequestFromButtonIdentifier:context:]
-[SiriActivationService prewarmFromButtonIdentifier:longPressInterval:]
activationEvent
eventSource
interval
-[SiriActivationService cancelPrewarmFromButtonIdentifier:]
-[SiriActivationService buttonDownFromButtonIdentifier:timestamp:]_block_invoke
v16@?0@"NSString"8
-[SiriActivationService buttonUpFromButtonIdentifier:timestamp:]
-[SiriActivationService buttonTapFromButtonIdentifier:]
-[SiriActivationService buttonLongPressFromButtonIdentifier:context:]
-[SiriActivationService _handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:]
-[SiriActivationService activationRequestFromDirectActionEvent:context:]
-[SiriActivationService activationRequestFromContinuityWithContext:]
-[SiriActivationService activationRequestFromBreadcrumb]
-[SiriActivationService activationRequestFromSimpleActivation:]
-[SiriActivationService activationRequestFromSpotlightWithContext:]
-[SiriActivationService activationRequestFromVoiceTrigger]
-[SiriActivationService activationRequestFromTestingWithContext:]
isDeviceUnlocked
clockTime
-[SiriActivationService handleActivationRequest:systemState:]
-[SiriActivationService _activatePresentation:requestOptions:analyticsContext:]
-[SiriActivationService _dismissSiri:]
-[SiriActivationService _cancelTTS]
-[SiriActivationService _preheat]
-[SiriActivationService _cancelActivationPreparationIfNecessary]
-[SiriActivationService _cancelActivationPreparationForSetup]
-[SiriActivationService _cancelPendingActivationEventWithReason:]
-[SiriActivationService heaterSuggestsDefrosting:]
-[SiriActivationService heaterSuggestsPreheating:]
-[SiriActivationService shouldAbortAnotherDeviceBetter:]
-[SiriActivationService shouldContinue:]
-[SiriActivationService startActivationWatchdogTimerForPresentationServer:]
-[SiriActivationService startActivationWatchdogTimerForPresentationServer:]_block_invoke
-[SiriActivationService stopActivationWatchdogTimerIfNeeded]
-[SiriActivationService startDismissalWatchdogTimer]
-[SiriActivationService startDismissalWatchdogTimer]_block_invoke
-[SiriActivationService stopDismissalWatchdogTimerIfNeeded]
afPreferences
T@"AFPreferences",&,N,V_afPreferences
lockStateMonitor
T@"SASLockStateMonitor",&,N,V_lockStateMonitor
xcTestingActive
TB,N,V_xcTestingActive
presentations
T@"NSMutableDictionary",&,N,V_presentations
activePresentations
T@"NSMutableSet",&,N,V_activePresentations
preparingPresentations
T@"NSMutableDictionary",&,N,V_preparingPresentations
requestState
Tq,N,V_requestState
heater
T@"SASHeater",&,N,V_heater
siriTether
T@"AFSiriTether",&,N,V_siriTether
siriTetherIsAttached
TB,N,V_siriTetherIsAttached
preparationTimestamp
Td,N,V_preparationTimestamp
activationTimestamp
Td,N,V_activationTimestamp
preheated
TB,N,V_preheated
voiceTriggerNotifyTokenIsValid
TB,N,V_voiceTriggerNotifyTokenIsValid
bulletinManager
T@"SASBulletinManager",&,N,V_bulletinManager
remoteRequestManager
T@"SASRemoteRequestManager",&,N,V_remoteRequestManager
testingInputController
T@"SASTestingInputController",&,N,V_testingInputController
activationTimer
T@"AFWatchdogTimer",&,N,V_activationTimer
dismissalTimer
T@"AFWatchdogTimer",&,N,V_dismissalTimer
avExternalButtonEvents
T@"NSMutableDictionary",&,N,V_avExternalButtonEvents
buttonDownHasOccurredSinceActivation
TB,N,V_buttonDownHasOccurredSinceActivation
T@"BSServiceConnection",&,N,V_connection
lock
T{os_unfair_lock_s=I},N,V_lock
<SiriDirectActionContext contextOverride:%@, payload:%@, bulletin:%@, notification:%@, directActionEvent:%@, bundleId:%@>
com.apple.MobileSMS
SendMessageIntent
SearchForMessagesIntent
SBSAssistantActivationContextBundleID
payload
bulletin
notification
T@"NSDictionary",R,N,V_payload
T@"BBBulletin",R,N,V_bulletin
T@"UNNotification",R,N,V_notification
deactivationOptions:%lu, animated:%@
deactivationOptions
animated
TQ,R,N,V_deactivationOptions
TB,R,N,V_animated
+[SASPresentationDecision activationPresentationForRequest:presentationIdentifiers:systemState:]
context
T@"SiriContext",&,D,N
testName
SiriTestingContextRecognitionStringKey
SiriTestingContextAudioInputKey
<SiriTestingContext contextOverride:%@, testingContext:%@>
testingContext
T@"NSDictionary",R,N,V_testingContext
-[SiriLongPressButtonSource configureConnection]_block_invoke_3
prepare
speechInteraction
v24@?0@"<SiriAssertion>"8d16
-[SiriLongPressButtonSource didRecognizeLongPress]
longPressInterval
Td,N,V_longPressInterval
identifier
Tq,N,V_identifier
lock_activityAssertions
T@"NSMutableArray",&,N,V_lock_activityAssertions
T@"SiriLongPressButtonContext",&,N,V_context
SiriPresentationInvalidIdentifier
SiriPresentationSpringBoardMainScreenIdentifier
SiriPresentationCarPlayHeadUnitIdentifier
SiriPresentationMockIdentifier
<unknown siri presentation identifier : %li>
SiriPresentationActivationCancelReasonShellEvent
SiriPresentationActivationCancelReasonSiriNotEnabled
SiriPresentationActivationCancelReasonLongPressDisabledInAccessibility
SiriPresentationActivationCancelReasonPreheatedWithoutActivation
SiriPresentationActivationCancelReasonPreviousPendingActivation
SiriPresentationActivationCancelReasonIncomingPhoneCall
-[SiriActivityAssertion dealloc]
T@"NSString",R,C,N,V_identifier
reason
T@"NSString",R,C,N,V_reason
reference
T@"NSString",R,C,N,V_reference
timestamp
Td,R,N,V_timestamp
valid
TB,R,D,N,GisValid
SiriActivationEventTypeButton
SiriActivationEventTypeVoiceTrigger
SiriActivationEventTypeDirectAction
SiriActivationEventTypeContinuity
SiriActivationEventTypeBreadcrumb
SiriActivationEventTypeSimpleActivation
SiriActivationEventTypeSpotlight
SiriActivationEventTypeTesting
AFActivationEventUnspecified
AFActivationEventRemoteRequest
AFActivationEventDirectAction
AFActivationEventContinuity
AFActivationEventCorrectedText
AFActivationEventKeyboard
AFActivationEventSpokenNotification
AFActivationEventExternalRequest
AFActivationEventTestAutomation
AFDirectActionEventUnknown
AFDirectActionEventMessagesAmbiguous
AFDirectActionEventMessagesCompose
AFDirectActionEventMessagesComposeNewThread
AFDirectActionEventMessagesRead
AFDirectActionEventMessagesReply
AFDirectActionEventMapsSearch
AFDirectActionEventMusicSearch
AFDirectActionEventGuideUpdate
AFDirectActionEventCalendar
AFDirectActionEventWeather
AFDirectActionEventNews
AFDirectActionEventPhoneAmbiguous
AFDirectActionEventPhoneCall
AFDirectActionEventPhoneVoicemail
event = %@; source = %@; context: %@
kern.waketime
-[SASActivationRequest computedActivationTime]
-[SASActivationRequest buttonDownTimestamp]
requestSource
Tq,N,V_requestSource
activationType
Tq,N,V_activationType
Tq,N,V_activationEvent
T@"SiriContext",&,N,V_context
activationTime
Td,N,V_activationTime
buttonIdentifier
Tq,N,V_buttonIdentifier
com.apple.cmas
-[SASBulletinManager bulletinForIdentifier:]
-[SASBulletinManager addBulletinCompletionWithBulletin:forFeed:]
-[SASBulletinManager observer:modifyBulletin:]
-[SASBulletinManager observer:removeBulletin:forFeed:]
-[SASBulletinManager observer:purgeReferencesToBulletinID:]
T@"<SASBulletinManagerDelegate>",W,N,V_delegate
SASButtonIdentifierTransport:%@
-[SASButtonIdentifierTransport siriButtonIdentifier]
T@"NSString",&,N,V_identifier
SASDirectActionEventTransport:%@
event
T@"NSNumber",&,N,V_event
SASTimeIntervalTransport:%@
transport
T@"NSNumber",&,N,V_transport
SiriPresentationIdentifierTransport:%@
T@"NSNumber",&,N,V_identifier
SiriPresentationActivationCancelReason:%@
AFUISiriLockStateTransport:%@
v16@?0@"AFRequestInfo"8
v32@?0q8Q16@"NSDictionary"24
v16@?0@"AFSpeechRequestOptions"8
v24@?0@"INIntentResponse"8@"NSError"16
v32@?0@"INIntent"8@"NSString"16@?<v@?@"INIntentResponse"@"NSError">24
-[SASRemoteRequestManager _handleRemotePrewarmWithInfo:]
-[SASRemoteRequestManager _handleNewRemoteRequestWithInfo:]
-[SASRemoteRequestManager _handleRequestWatcherVoiceTriggerRequestWithInfo:]
-[SASRemoteRequestManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:]
inSpokenNotification
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]_block_invoke
-[SASRemoteRequestManager _startFetchingPocketStateUpdatesWithCompletion:]_block_invoke
v24@?0q8@"NSError"16
-[SASRemoteRequestManager _updateForPocketState:]
remoteRequestWatcher
T@"AFRemoteRequestWatcher",&,N,V_remoteRequestWatcher
currentAppIntentDeliverer
T@"INUIAppIntentDeliverer",&,N,V_currentAppIntentDeliverer
currentVoiceTriggerRestriction
TQ,N,V_currentVoiceTriggerRestriction
pendingVoiceTriggerRestrictionCount
TQ,N,V_pendingVoiceTriggerRestrictionCount
hasPendingVoiceTriggerActivation
TB,N,V_hasPendingVoiceTriggerActivation
pocketStateManager
T@"CMPocketStateManager",&,N,V_pocketStateManager
currentPocketState
Tq,N,V_currentPocketState
SASRequestOptionsSourceCodingKey
SASRequestOptionsActivationDeviceIdentifierCodingKey
SASRequestOptionsBulletinCodingKey
SASRequestOptionsAppBundleIdentifierCodingKey
SASRequestOptionsDirectActionEventCodingKey
SASRequestOptionsMessagesDirectActionDictionaryCodingKey
SASRequestOptionsCheckForGuideUpdateContextCodingKey
SASRequestOptionsServerCommandAceIdentifierCodingKey
SASRequestOptionsPronunciationRequestCodingKey
SASRequestOptionsPronunciationContextCodingKey
SASRequestOptionsTextCodingKey
SASRequestOptionsSpeechFileURLCodingKey
SASRequestOptionsTimestampCodingKey
SASRequestOptionsExpectedTimestampCodingKey
SASRequestOptionsButtonDownTimestampCodingKey
SASRequestOptionsIsInitialBringUpKey
SASRequestOptionsUseAutomaticEndpointingKey
SASRequestOptionsUseStreamingDictationKey
SASRequestOptionsAcousticIdEnabledKey
SASRequestOptionsReleaseAudioSessionOnRecordingCompletionKey
SASRequestHomeButtonUpFromBeepKey
SASRequestContinuityDataKey
SASRequestRequestInfoKey
SASRequestSpeechRequestOptionsKey
SASRequestPredictedRecordRouteIsZLL
SASRequestOptionsUIPresentationIdentifierCodingKey
SASRequestOptionsContextAppInfosForSiriViewControllerKey
SASRequestOptionsTestingContextKey
SASRequestOptionsIsConnectedToCarPlayCodingKey
SASRequestOptionsIsForCarDNDCodingKey
SASRequestOptionsCarDNDStatusCodingKey
SASRequestOptionsCurrentLockStateCodingKey
-[SASRequestOptions setRequestSource:]
<%@ %p; requestSource=%ld, activationDeviceIdentifier=%@, bulletin=%@, appBundleIdentifier=%@, checkForGuideUpdateContext:%@, directActionEvent=%ld serverCommandId=%@, isPronunciationRequest=%@, pronunciationContext=%@, text=%@, speechFileURL=%@, expectedTimestamp=%f, timestamp=%f, buttonDownTimestamp:%f, isInitialBringUp=%@, autoendpoint=%@ streamdict=%@ acousticId=%@ releaseAudioSessionORC=%@ predictedZLL:%@ uiPresentationIdentifier:%@ contextAppInfosForSVC:%@, testingContext:%@, is(speech:%@, stark:%@, CPconnected:%@, dnd:%@), carPlayStatus:%ld, homeButtonUpFromBeep:%@, continuityInfo:%@, requestInfo:%@, speechRequestOptions:%@, currentLockState:%ld, messagesDirectActionDictionary:%@, carPlayOEMList:%@
Tq,N
activationDeviceIdentifier
T@"NSString",C,N,V_activationDeviceIdentifier
T@"AFBulletin",&,N,V_bulletin
appBundleIdentifier
T@"NSString",C,N,V_appBundleIdentifier
messagesDirectActionContext
T@"NSDictionary",C,N,V_messagesDirectActionContext
checkForGuideUpdateContext
T@"SAGuidanceCheckForGuideUpdateContext",C,N,V_checkForGuideUpdateContext
directActionEvent
Tq,N,V_directActionEvent
serverCommandId
T@"NSString",C,N,V_serverCommandId
pronunciationRequest
TB,N,GisPronunciationRequest,V_pronunciationRequest
pronunciationContext
T@"SASPronunciationContext",&,N,V_pronunciationContext
text
T@"NSString",C,N,V_text
speechFileURL
T@"NSURL",C,N,V_speechFileURL
expectedTimestamp
Td,N,V_expectedTimestamp
Td,N,V_timestamp
buttonDownTimestamp
Td,N,V_buttonDownTimestamp
forStark
TB,R,N,GisForStark
currentCarPlaySupportedOEMAppIdList
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
messagesDirectAction
TB,R,N,GisMessagesDirectAction
isForCarDND
TB,N,V_isForCarDND
isConnectedToCarPlay
TB,N,V_isConnectedToCarPlay
carDNDStatus
TQ,N,V_carDNDStatus
forSpeechRequest
TB,R,N,GisForSpeechRequest
initialBringUp
TB,N,GisInitialBringUp,V_initialBringUp
useAutomaticEndpointing
TB,N,V_useAutomaticEndpointing
useStreamingDictation
TB,N,V_useStreamingDictation
homeButtonUpFromBeep
T@"NSNumber",&,N,V_homeButtonUpFromBeep
continuityInfo
T@"NSDictionary",C,N,V_continuityInfo
requestInfo
T@"AFRequestInfo",&,N,V_requestInfo
speechRequestOptions
T@"AFSpeechRequestOptions",&,N,V_speechRequestOptions
acousticIdEnabled
TB,N,V_acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
TB,N,V_releaseAudioSessionOnRecordingCompletion
uiPresentationIdentifier
T@"NSString",&,N,V_uiPresentationIdentifier
contextAppInfosForSiriViewController
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSDictionary",&,N,V_testingContext
currentLockState
TQ,N,V_currentLockState
SASRequestSourceNotSpecified
SASRequestSourceHomeButton
SASRequestSourceLockButton
SASRequestSourceVirtualButton
SASRequestSourceWiredMicrophone
SASRequestSourceBluetoothHeadset
SASRequestSourceMotionUpGesture
SASRequestSourceMotionDownGesture
SASRequestSourceVoice
SASRequestSourceServerCommand
SASRequestSourceStark
SASRequestSourceStarkPhoneHome
SASRequestSourceStarkVoiceTrigger
SASRequestSourceStarkNotification
SASRequestSourceStarkAppProxy
SASRequestSourceTVRemote
SASRequestSourceTesting
SASRequestSourceStarkSiriButton
SASRequestSourceAccessory
SASRequestSourceContinuity
SASRequestSourceSiriSetup
SASRequestSourceBreadcrumb
SASRequestSourceGuideUpdate
SASRequestSourceKeyboard
SASRequestSourceSpotlightQuerySuggestion
SASRequestSourceSpotlightAskSiriButton
SASRequestSourceTriggerless
SASRequestSourceAssistiveTouch
SASRequestSourceVoiceCommandButton
lockState
TQ,N,V_lockState
unlockedByTouchID
TB,N,V_unlockedByTouchID
assistantIsEnabled
T@"NSNumber",&,N,V_assistantIsEnabled
T@"<SASLockStateMonitorDelegate>",W,N,V_delegate
-[SASSystemState _updateAccessibilityState]
carPlayConnectionState
Ti,N,V_carPlayConnectionState
TB,N,V_accessibilityShortcutEnabled
applicationStateHelper
T@"SUICApplicationStateHelper",&,N,V_applicationStateHelper
enabled
TB,N,V_enabled
listeners
T@"NSMutableSet",&,N,V_listeners
TB,N,V_pocketStateShouldPreventVoiceTrigger
+[SASActivationDecision shouldSiriActivateForRequest:buttonTriggerStateActive:systemState:preferences:analyticsContext:currentRequestState:]
+[SASActivationDecision _shouldSiriActivateForSiriSetupWithSystemState:]
<SiriContext contextOverride:%@>
<SiriLongPressButtonContext contextOverride:%@, utteranceText:%@, source:%@>
utteranceText
source
T@"NSString",C,N,V_utteranceText
Tq,N,V_source
UnknownSiriSpotlightContextSource
SiriSpotlightContextSourceQuerySuggestion
SiriSpotlightContextSourceAskSiriButton
SBTestingConfigureNextAssistantRecognitionStrings
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
preloadedTestingInput
T@"SiriTestingContext",R,N,V_preloadedTestingInput
previousNode
T@"SASBulletinCacheNode",&,N,V_previousNode
nextNode
T@"SASBulletinCacheNode",&,N,V_nextNode
com.apple.mobiletimer
com.apple.reminders
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[SASSignalConnectionListener listener:didReceiveConnection:withContext:]
listener
T@"BSServiceConnectionListener",&,N,V_listener
<SiriLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@>
wakeScreen%@, hideOtherWindowsDuringAppearance:%@
wakeScreen
hideOtherWindowsDuringAppearance
TB,N,V_wakeScreen
TB,N,V_hideOtherWindowsDuringAppearance
T@"SiriBluetoothContext",&,N,V_context
type
recordedSpeechURL
Text
RecordedSpeechURL
Unspecified
<%@ %p; %@ - '%@'>
Tq,N,V_type
T@"NSURL",C,N,V_recordedSpeechURL
-[SASSignalServer _setConnection:]
-[SASSignalServer registerButtonIdentifier:]
-[SASSignalServer unregisterButtonIdentifier:]
-[SASSignalServer registerDirectActionSource]
-[SASSignalServer unregisterDirectActionSource]
-[SASSignalServer registerContinuitySource]
-[SASSignalServer unregisterContinuitySource]
-[SASSignalServer registerSimpleActivationSource]
-[SASSignalServer unregisterSimpleActivationSource]
-[SASSignalServer registerSpotlightSource]
-[SASSignalServer unregisterSpotlightSource]
-[SASSignalServer registerBreadcrumbSource]
-[SASSignalServer unregisterBreadcrumbSource]
-[SASSignalServer registerTestingSource]
-[SASSignalServer unregisterTestingSource]
-[SASSignalServer activationRequestFromButtonIdentifier:context:]
-[SASSignalServer activationRequestFromDirectActionEvent:context:]
-[SASSignalServer activationRequestFromContinuityWithContext:]
-[SASSignalServer activationRequestFromBreadcrumb]
-[SASSignalServer activationRequestFromSimpleActivation:]
-[SASSignalServer activationRequestFromSpotlightWithContext:]
-[SASSignalServer activationRequestFromTestingWithContext:]
-[SASSignalServer prewarmFromButtonIdentifier:]
-[SASSignalServer prewarmFromButtonIdentifier:longPressInterval:]
-[SASSignalServer cancelPrewarmFromButtonIdentifier:]
-[SASSignalServer buttonDownFromButtonIdentifier:timestamp:]
-[SASSignalServer buttonUpFromButtonIdentifier:timestamp:]
-[SASSignalServer buttonTapFromButtonIdentifier:]
-[SASSignalServer buttonLongPressFromButtonIdentifier:context:]
T@"<SASSignalServerDelegate>",W,N,V_weak_delegate
-[SASPresentationConnectionListener listener:didReceiveConnection:withContext:]
<SiriContinuityContext contextOverride:%@, speechRequestOptions:%@, requestInfo:%@, userActivity:%@>
userActivity
T@"AFSpeechRequestOptions",R,N
T@"AFRequestInfo",R,N,V_requestInfo
T@"NSDictionary",R,N,V_userActivity
<SiriBluetoothContext contextOverride:%@ isEyesFree:%@, address:%@>
isEyesFree
address
T@"NSNumber",R,N,V_isEyesFree
T@"NSString",R,N,V_address
SiriActivationSource
SASRequestOptionsBuilder
SASOverriddenSystemState
SiriButtonIdentifier
SASHeater
SiriPunchoutRequest
NSCopying
SASAnalytics
SASMyriadController
FBSDisplayLayoutObserver
NSObject
SiriContextOverride
NSSecureCoding
NSCoding
SASPresentationClientInterface
SASPresentationServerInterface
SASPresentationServer
SiriClientAdditions
SASSystemStateOverride
SASBoardServicesConfiguration
SASRequestState
SiriActivationService
SASRequestOptionsBuilderDataSource
SASRequestOptionsBuilderDataSourceForTesting
SASHeaterDelegate
AFMyriadDelegate
SASLockStateMonitorDelegate
SASBulletinManagerDelegate
SiriSpotlightSource
SiriDirectActionContext
SiriDismissalOptions
SASPresentationDecision
Testing
SiriSimpleActivationSource
SiriTestingSource
SiriTestingContext
SiriLongPressButtonSource
SiriButtonSource
SiriActivationSourceContext
SiriPresentationIdentifier
SiriPresentationActivationCancelReason
SiriActivityAssertion
SiriAssertion
SiriActivationEventType
SASActivationRequest
SASButtonActvationRequest
SASBulletinManager
BBObserverDelegate
SASButtonIdentifierTransport
SASDirectActionEventTransport
SASTimeIntervalTransport
SiriPresentationIdentifierTransport
SiriPresentationActivationCancelReasonTransport
AFUISiriLockStateTransport
SASRemoteRequestManager
CMPocketStateDelegate
SASRequestOptions
SiriBreadcrumbSource
SiriContinuitySource
SASLockStateMonitor
SASSystemState
SASActivationDecision
SiriContext
SiriSpotlightContext
SASTestingInputController
SASBulletinCacheNode
SASBulletinCache
SiriDirectActionSource
SASSignalConnectionListener
BSServiceConnectionListenerDelegate
SiriLongPressButtonContext
SiriPresentationOptions
SiriBluetoothDeviceSource
SASTestingInput
SASSignalClientInterface
SASSignalServerInterface
SASSignalServer
SASPresentationConnectionListener
SiriContinuityContext
SiriBluetoothContext
sharedSystemState
siriIsSupported
siriIsEnabled
isEnabled
_siriIsEnabled
setPresentationIdentifier:
_createRequestOptionsForRequest:withDataSource:
presentationIdentifier
requestOptionsBuilder:uiPresentationIdentifierWithActivation:activationPresentation:
requestSource
initWithRequestSource:uiPresentationIdentifier:
requestOptionsBuilder:isPredictedRecordRouteIsZLLWithActiviation:
setPredictedRecordRouteIsZLL:
isButtonRequest
buttonDownTimestamp
processInfo
systemUptime
systemState
accessibilityShortcutEnabled
setButtonDownTimestamp:
computedActivationTime
setTimestamp:
requestOptionsBuilder:isRequestInitialWithActiviation:
setInitialBringUp:
requestOptionsBuilder:shouldRequestUseAutomaticEndpointingWithActiviation:
setUseAutomaticEndpointing:
requestOptionsBuilder:isAcousticIdAllowedWithActiviation:
setAcousticIdEnabled:
isConnectedToCarPlay
setIsConnectedToCarPlay:
carDNDActive
setIsForCarDND:
isDirectActionRequest
context
directActionEvent
setDirectActionEvent:
payload
mutableCopy
allKeys
containsObject:
removeObjectForKey:
objectForKey:
setAppBundleIdentifier:
setMessagesDirectActionContext:
bulletin
init
setBulletin:
bundleId
notification
setNotification:fromSourceApp:
appBundleIdentifier
isBluetoothRequest
address
setActivationDeviceIdentifier:
isContinuityRequest
requestInfo
setRequestInfo:
userActivity
setContinuityInfo:
isSpotlightRequest
utteranceText
setText:
isTestingRequest
requestOptionsBuilder:optionsForOverriding:withActiviation:
foregroundAppInfosForPresentationIdentifier:
setContextAppInfosForSiriViewController:
requestOptionsBuilder:currentLockStateForActivation:
setCurrentLockState:
siriIsRestricted
buildOptionsWithRequest:presentationIdentifier:dataSource:
.cxx_destruct
setSystemState:
_systemState
_presentationIdentifier
setContextOverride:
lockStateMonitor
setLockStateMonitor:
contextOverride
currentSpokenLanguageCodeForSystemState:
hasUnlockedSinceBootForSystemState:
deviceIsBlockedForSystemState:
deviceIsPasscodeLockedForSystemState:
pocketStateShouldPreventVoiceTriggerForSystemState:
isPadForSystemState:
smartCoverClosedForSystemState:
accessibilityShortcutEnabledForSystemState:
carDNDActiveForSystemState:
isConnectedToCarPlayForSystemState:
isConnectedToTrustedCarPlayForSystemState:
siriIsEnabledForSystemState:
siriIsRestrictedForSystemState:
siriIsSupportedForSystemState:
initWithSystemState:contextOverride:
currentSpokenLanguageCode
hasUnlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
isPad
smartCoverClosed
isConnectedToTrustedCarPlay
_contextOverride
stringWithFormat:
stringWithSiriButtonIdentifier:
_setPreparationStartTime:
_cancelPreparation
_suggestPreheat
performSelector:withObject:afterDelay:
_suggestDefrost
_preparationStartTime
cancelPreviousPerformRequestsWithTarget:selector:object:
delegate
heaterSuggestsDefrosting:
heaterSuggestsPreheating:
_updatePredictedRouteIsZLL
sharedAVSystemController
pickableRoutesForCategory:andMode:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
boolValue
isEqualToString:
prepareForUseAfterTimeInterval:
cancelPreparation
setDelegate:
predictedRecordRouteIsZLL
_predictedRecordRouteIsZLL
_delegate
bundleIdentifier
setBundleIdentifier:
setUrl:
punchoutStyle
setPunchoutStyle:
copyWithZone:
_bundleIdentifier
_url
_punchoutStyle
_init
service
xcTestingActive
_enqueueAnalyticsEvent:
shouldLogAnalyticsEvents
flushPendingAnalyticsEventQueue
sharedAnalytics
logEvent:
pendingAnalyticsEventQueue
initWithCapacity:
setPendingAnalyticsEventQueue:
count
removeObjectsInRange:
addObject:
copy
logEvents:
analytics
enqueueCurrentAnalyticsEventWithType:context:
setShouldLogAnalyticsEvents:
_shouldLogAnalyticsEvents
_pendingAnalyticsEventQueue
isActivityAvailable
mainQueue
_handleCMMotionActivity:
startActivityUpdatesToQueue:withHandler:
initWithDisplayType:
addObserver:
currentCoordinator
isVoiceRequest
speechRequestOptions
activationEvent
myriadContext
startAdvertisingFromInTaskTriggerWithContext:
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerAdjusted:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTrigger
stationary
transitionReason
isEqual:
currentController
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
layoutMonitor:didUpdateDisplayLayout:
layoutMonitor:didUpdateDisplayLayout:withContext:
activateForRequest:visible:
_myriadFinishedSemaphore
_canceledByMyriad
_activityManager
_isLifted
_liftEndTime
_isLocked
_lockStateMonitor
_displayMonitor
_raiseToWakeTime
setCurrentSpokenLanguageCode:
numberWithBool:
setUnlockedSinceBoot:
setDeviceIsBlocked:
setDeviceIsPasscodeLocked:
setPocketStateShouldPreventVoiceTrigger:
setPad:
setSmartCoverClosed:
setAccessibilityShortcutEnabled:
setCarDNDActive:
setConnectedToTrustedCarPlay:
setConnectedToCarPlay:
setSiriIsEnabled:
setSiriIsRestricted:
setSiriIsSupported:
unlockedSinceBoot
connectedToCarPlay
connectedToTrustedCarPlay
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
overrideCurrentSpokenLanguageCode:
overrideHasUnlockedSinceBoot:
overrideDeviceIsBlocked:
overrideDeviceIsPasscodeLocked:
overridePocketStateShouldPreventVoiceTrigger:
overrideIsPad:
overrideSmartCoverClosed:
overrideAccessibilityShortcutEnabled:
overrideCarDNDActive:
overrideConnectedToTrustedCarPlay:
overrideConnectedToCarPlay:
overrideSiriIsEnabled:
overrideSiriIsRestricted:
overrideSiriIsSupported:
_currentSpokenLanguageCode
_unlockedSinceBoot
_deviceIsBlocked
_deviceIsPasscodeLocked
_pocketStateShouldPreventVoiceTrigger
_pad
_smartCoverClosed
_accessibilityShortcutEnabled
_carDNDActive
_connectedToCarPlay
_connectedToTrustedCarPlay
_siriIsRestricted
_siriIsSupported
initWithKeyOptions:valueOptions:capacity:
setObject:forKey:
unregisterSiriPresentationIdentifier:
setInvalidationHandler:
configureConnection:
_setConnection:
dealloc
connection
stringWithSiriPresentationIdentifier:
invalidated
invalidate
setConnection:
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
serverDidInvalidateConnection:
activate
waitForConnectBlocks
setWaitForConnectBlocks:
remoteTarget
registerPresentationIdentifier:
unregisterPresentationIdentifier:
didDismissWithOptions:
didPresentSiri
failedToPresentSiriWithError:
allBulletins
bulletinsOnLockScreen
bulletinForIdentifier:
handleMarkBulletinWithIdentifier:asRead:
protocolForProtocol:
presentationRequestedWithPresentationOptions:requestOptions:
presentationDismissalRequestedWithOptions:
handleRequestWithOptions:
cancelTTS
preheat
cancelPendingActivationEventWithReason:
handleTestingActivation:
handleButtonDownFromButtonIdentifier:timestamp:
handleButtonUpFromButtonIdentifier:timestamp:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:
updateCurrentLockState:
bulletinManagerDidChangeBulletins
interfaceWithServer:client:
userInteractive
siriPresentationIdentifier
registerSiriPresentation:withIdentifier:
siriPresentationDismissedWithIdentifier:
siriPresentationDisplayedWithIdentifier:
siriPresentationFailureWithIdentifier:error:
markBulletinWithIdentifier:asRead:
serverForConnection:
workspaceServiceInjector
setWorkspaceServiceInjector:
setInvalidated:
weak_delegate
setWeak_delegate:
_invalidated
_workspaceServiceInjector
_connection
_waitForConnectBlocks
_weak_delegate
getServiceSetting:key:
isServiceSupported:
device
ac_isEyesFree
overrideIsConnectedToCarPlay:
overrideIsConnectedToTrustedCarPlay:
_hasUnlockedSinceBoot
_isPad
_isConnectedToCarPlay
_isConnectedToTrustedCarPlay
setMachServiceIdentifier:
setPresentationDomain:
setSignalDomain:
setSignalIdentifier:
presentationDomain
signalDomain
signalIdentifier
configuration
domainForService:
identifierForService:
machServiceIdentifier
_machServiceIdentifier
_presentationDomain
_signalDomain
_signalIdentifier
stringWithSASRequestState:
setPreparingPresentations:
setXcTestingActive:
setPresentations:
setActivePresentations:
setRequestState:
setHeater:
heater
setPreheated:
setSiriTetherIsAttached:
setSiriTether:
siriTether
setAttachmentStatusChangedHandler:
initWithDelegate:
manager
setRemoteRequestManager:
setBulletinManager:
bulletinManager
_registerForVoiceTrigger
setAvExternalButtonEvents:
setButtonDownHasOccurredSinceActivation:
presentations
activePresentations
removeObject:
initWithDeactivationOptions:
_dismissSiri:
stopActivationWatchdogTimerIfNeeded
preparingPresentations
stopDismissalWatchdogTimerIfNeeded
initWithDeactivationOptions:animated:
requestState
initWithButtonIdentifier:context:
handleActivationRequest:
sharedPreferences
assistantIsEnabled
stringWithSiriActivationEventType:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
_cancelTTS
setPreparationTimestamp:
allObjects
allValues
initWithSiriButtonIdentifier:
initWithTimeInterval:
_performOrEnqueueButtonAction:
_recordTimeIfNeededForButtonIdentifier:buttonDownTimestamp:
_handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:
activationRequestFromButtonIdentifier:context:
_buttonIsAVExternalButton:
buttonDownHasOccurredSinceActivation
avExternalButtonEvents
doubleValue
activationTimestamp
buttonTapFromButtonIdentifier:
stringWithAFDirectActionEvent:
initWithDirectActionEvent:context:
initWithContinuityContext:
initWithBreadcrumbRequest
initWithSimpleActivation:
initWithSpotlightContext:
initWithVoiceTriggerRequest
initWithTestingContext:
handleActivationRequest:systemState:
activationType
eventSource
date
timeIntervalSince1970
afPreferences
shouldSiriActivateForRequest:buttonTriggerStateActive:systemState:preferences:analyticsContext:currentRequestState:
_cancelActivationPreparationIfNecessary
_cancelActivationPreparationForSetup
activationPresentationForRequest:presentationIdentifiers:systemState:
testingInputController
dequeuePreloadedTestingContext
testingContext
setTestingContext:
_activatePresentation:requestOptions:analyticsContext:
isHTTRequestSource
setActivationTimestamp:
startActivationWatchdogTimerForPresentationServer:
uiPresentationIdentifier
setWakeScreen:
startDismissalWatchdogTimer
attach:
_cancelPendingActivationEventWithReason:
stringWithSiriPresentationActivationCancelReason:
initWithSiriPresentationActivationCancelReason:
_isInitialRequest
isEyesFreeRequestSource
isUIFreeRequestSource
lockState
_attachToTether
_preheat
dismissSiriWithOptions:
initWithAFUISiriLockState:
activationTimer
setActivationTimer:
initWithTimeoutInterval:onQueue:timeoutHandler:
start
cancelIfNotAlreadyCanceled
dismissalTimer
setDismissalTimer:
removeAllObjects
requestOptionsBuilder:overriddenPresentationIdentifierForCurrentPresentationIdentifier:withActivation:
shouldAbortAnotherDeviceBetter:
shouldContinue:
shouldUnduck:
shouldHandleEmergency:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
didChangeLockState:
bulletinManagerDidChangeBulletins:
prewarmFromButtonIdentifier:longPressInterval:
cancelPrewarmFromButtonIdentifier:
buttonDownFromButtonIdentifier:timestamp:
buttonUpFromButtonIdentifier:timestamp:
buttonLongPressFromButtonIdentifier:context:
activationRequestFromDirectActionEvent:context:
activationRequestFromContinuityWithContext:
activationRequestFromBreadcrumb
activationRequestFromSimpleActivation:
activationRequestFromSpotlightWithContext:
activationRequestFromVoiceTrigger
activationRequestFromTestingWithContext:
activationRequestFromTestRunnerWithContext:
_unregisterForVoiceTrigger
setAfPreferences:
siriTetherIsAttached
preparationTimestamp
preheated
voiceTriggerNotifyTokenIsValid
setVoiceTriggerNotifyTokenIsValid:
remoteRequestManager
setTestingInputController:
_buttonTrigger
_activationHandled
_voiceTriggerNotifyToken
_myriad
_voiceTriggerDispatchQueue
_watchdogQueue
_xcTestingActive
_siriTetherIsAttached
_preheated
_voiceTriggerNotifyTokenIsValid
_buttonDownHasOccurredSinceActivation
_afPreferences
_presentations
_activePresentations
_preparingPresentations
_requestState
_heater
_siriTether
_preparationTimestamp
_activationTimestamp
_bulletinManager
_remoteRequestManager
_testingInputController
_activationTimer
_dismissalTimer
_avExternalButtonEvents
setLock:
configureConnection
endpointForMachName:service:instance:
connectionWithEndpoint:
unregisterSpotlightSource
registerSpotlightSource
setActivationHandler:
activateWithContext:
lock
_lock
integerValue
compare:options:
intentIDs
intentIdentifiers
containsString:
valueForKey:
sectionID
initWithPayload:
initWithBBBulletin:
initWithUNNotification:
isMessagingDirectAction
_payload
_bulletin
_notification
deactivationOptions
animated
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
_animated
_deactivationOptions
firstObject
setContext:
unregisterSimpleActivationSource
registerSimpleActivationSource
numberWithInteger:
activateFromSource:
unregisterTestingSource
registerTestingSource
initWithPPTContext:siriContextOverride:
initWithContextOverride:
initWithRecognitionStrings:siriContextOverride:
initWithAudioInput:siriContextOverride:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithPPTContext:
initWithRecognitionStrings:
initWithAudioInput:
containsPPT
containsRecognitionStrings
containsAudioInput
_testingContext
_initWithIdentifier:
setLongPressInterval:
setIdentifier:
setLock_activityAssertions:
identifier
unregisterButtonIdentifier:
setInterruptionHandler:
registerButtonIdentifier:
lock_activityAssertions
reason
reference
initWithString:
longPressInterval
timestamp
UUIDString
initWithIdentifier:reference:reason:timestamp:invalidationBlock:
longPressButtonForIdentifier:
prepareForActivation
speechInteractionActivityWithTimestamp:
didRecognizeButtonSinglePressUp
didRecognizeLongPress
_longPressInterval
_identifier
_lock_activityAssertions
_context
cancelReason
invalidatedAtTimestamp:
isValid
_reason
_reference
_timestamp
_invalidationBlock
stringWithAFActivationEvent:
setActivationTime:
setActivationType:
setButtonIdentifier:
requestSourceForButtonIdentifier:
setRequestSource:
source
isDeviceButtonRequest
activationTime
isEyesFree
isHoldToTalkSource
setActivationEvent:
_waketimeMIB
_waketimeMIBSize
_activationType
_activationEvent
_activationTime
_requestSource
buttonIdentifier
_buttonIdentifier
_setupObserver
setObserverFeed:
length
title
cachedBulletinForID:
setRead:
_bulletinsDidChange
_displayNameForBulletin:
setDisplayName:
addBulletinCompletionWithBulletin:forFeed:
bulletinID
availableOnLockScreen
setAvailableOnLockScreen:
bbBulletin
insertBulletin:fromFeed:
removeBulletinForID:
modifyBulletinCompletionWithBulletin:
observer:purgeReferencesToBulletinID:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
_observer
_bulletinCache
_bulletinsOnLockScreen
_identifierMatchesSiriButtonIdentifier:
alloc
siriButtonIdentifier
decodeObjectForKey:
setEvent:
event
intValue
initWithAFDirectActionEvent:
_event
setTransport:
transport
timeInterval
_transport
longValue
initWithSiriPresentationIdentifier:
numberWithUnsignedInteger:
unsignedIntegerValue
afuiSiriLockState
setRemoteRequestWatcher:
setPocketStateManager:
pocketStateManager
remoteRequestWatcher
_handleRemotePrewarmWithInfo:
setPrewarmHandler:
_handleNewRemoteRequestWithInfo:
setNewRequestHandler:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:
setDismissalHandler:
initWithSpeechRequestOptions:
setNewSpeechRequestHandler:
invalidateIntentDelivery
initWithBundleIdentifier:
deliverIntent:reply:
setIntentHandler:
_requestWatcherVoiceActivationEnabled
_startFetchingPocketStateUpdates
_handleRequestWatcherVoiceTriggerRequestWithInfo:
initWithRequestInfo:
setHasPendingVoiceTriggerActivation:
logEventWithType:context:
pendingVoiceTriggerRestrictionCount
setPendingVoiceTriggerRestrictionCount:
hasPendingVoiceTriggerActivation
_startFetchingPocketStateUpdatesWithCompletion:
_updateForPocketState:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
setCurrentPocketState:
_setPocketStateShouldPreventVoiceTrigger:
pocketStateManager:didUpdateState:
_handlePendingVoiceTriggerActivationsWithInfo:
currentAppIntentDeliverer
setCurrentAppIntentDeliverer:
currentVoiceTriggerRestriction
setCurrentVoiceTriggerRestriction:
currentPocketState
_hasPendingVoiceTriggerActivation
_remoteRequestWatcher
_currentAppIntentDeliverer
_currentVoiceTriggerRestriction
_pendingVoiceTriggerRestrictionCount
_pocketStateManager
_currentPocketState
_configureStreamingDictationForSource:
setUseStreamingDictation:
activationDeviceIdentifier
messagesDirectActionContext
checkForGuideUpdateContext
setCheckForGuideUpdateContext:
serverCommandId
setServerCommandId:
isPronunciationRequest
setPronunciationRequest:
pronunciationContext
setPronunciationContext:
text
speechFileURL
setSpeechFileURL:
expectedTimestamp
setExpectedTimestamp:
isInitialBringUp
useAutomaticEndpointing
useStreamingDictation
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
continuityInfo
setSpeechRequestOptions:
acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
contextAppInfosForSiriViewController
isForCarDND
carDNDStatus
setCarDNDStatus:
currentLockState
decodePropertyListForKey:
decodeDoubleForKey:
encodeDouble:forKey:
isForSpeechRequest
isForStark
currentCarPlaySupportedOEMAppIdList
absoluteString
initWithRequestSource:
isMessagesDirectAction
setCurrentCarPlaySupportedOEMAppIdList:
setUiPresentationIdentifier:
_pronunciationRequest
_isForCarDND
_initialBringUp
_useAutomaticEndpointing
_useStreamingDictation
_acousticIdEnabled
_releaseAudioSessionOnRecordingCompletion
_activationDeviceIdentifier
_appBundleIdentifier
_messagesDirectActionContext
_checkForGuideUpdateContext
_directActionEvent
_serverCommandId
_pronunciationContext
_text
_speechFileURL
_expectedTimestamp
_buttonDownTimestamp
_currentCarPlaySupportedOEMAppIdList
_carDNDStatus
_homeButtonUpFromBeep
_continuityInfo
_requestInfo
_speechRequestOptions
_uiPresentationIdentifier
_contextAppInfosForSiriViewController
_currentLockState
unregisterBreadcrumbSource
registerBreadcrumbSource
unregisterContinuitySource
registerContinuitySource
setLockState:
isBlocked
isScreenOn
unlockedByTouchID
setUnlockedByTouchID:
setAssistantIsEnabled:
_unlockedByTouchID
_lockState
_assistantIsEnabled
_updateAccessibilityState
monitorCarSessions
defaultCenter
_preferencesDidUpdate
addObserver:selector:name:object:
setApplicationStateHelper:
setListeners:
listeners
languageCode
bestSupportedLanguageCodeForLanguageCode:
applicationStateHelper
foregroundAppInfosForCarPlay
foregroundAppInfos
setEnabled:
enabled
isCurrentLocaleNativelySupported
isEnabledChanged:
addStateChangeListener:
removeStateChangeListener:
carPlayConnectionState
setCarPlayConnectionState:
_enabled
_carPlayConnectionState
_applicationStateHelper
_listeners
_shouldSiriActivateForSiriSetupWithSystemState:
disableAssistantWhilePasscodeLocked
stringWithSiriSpotlightContextSource:
setUtteranceText:
setSource:
_utteranceText
_source
_registerForTestingNotifications
_testingStringsDidChange:
_testingAudioInputPathsDidChange:
removeObserver:
object
preloadedTestingInput
_preloadedTestingInput
previousNode
setPreviousNode:
nextNode
setNextNode:
_previousNode
_nextNode
_isFeedRelevant:
_isBulletinFromRequiredDomain:
_findNodeForBulletinID:
_purgeOldestNodes
_deleteNode:
dictionary
_count
_oldestNode
_newestNode
unregisterDirectActionSource
registerDirectActionSource
setDomain:
setService:
listenerWithConfigurator:
setListener:
listener
remoteProcess
listener:didReceiveConnection:withContext:
_listener
wakeScreen
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_wakeScreen
_hideOtherWindowsDuringAppearance
initWithBluetoothDevice:
bluetoothDeviceForIdentifier:bluetoothDevice:
setType:
setRecordedSpeechURL:
type
recordedSpeechURL
_type
_recordedSpeechURL
prewarmFromButtonIdentifier:
setValue:forKey:
initWithUserActivity:
_userActivity
_isEyesFree
_address
B16@0:8
@40@0:8@16q24@32
@32@0:8@16@24
@16@0:8
v16@0:8
v24@0:8@16
q16@0:8
v24@0:8q16
@"SASSystemState"
@"SiriContextOverride"
@24@0:8q16
v24@0:8d16
d16@0:8
v20@0:8B16
@"<SASHeaterDelegate>"
@24@0:8^{_NSZone=}16
@"NSString"
@"NSURL"
v32@0:8q16@24
@"NSMutableArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24
v40@0:8@"FBSDisplayLayoutMonitor"16@"FBSDisplayLayout"24@"FBSDisplayLayoutTransitionContext"32
B28@0:8@16B24
@"NSObject<OS_dispatch_semaphore>"
@"CMMotionActivityManager"
@"SASLockStateMonitor"
@"FBSDisplayLayoutMonitor"
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSNumber"
Vv24@0:8@16
Vv32@0:8@16@24
Vv24@0:8@"SiriPresentationIdentifierTransport"16
Vv24@0:8@"SiriDismissalOptions"16
Vv24@0:8@"NSError"16
@"NSObject"16@0:8
@"AFBulletin"24@0:8@"NSString"16
Vv32@0:8@"NSString"16@"NSNumber"24
Vv32@0:8@"SiriPresentationOptions"16@"SASRequestOptions"24
Vv24@0:8@"SASRequestOptions"16
Vv24@0:8@"SiriPresentationActivationCancelReasonTransport"16
B24@0:8@"SASActivationRequest"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24
Vv24@0:8@"SASButtonIdentifierTransport"16
Vv24@0:8@"AFUISiriLockStateTransport"16
@"BSServiceConnectionEndpointInjector"
@"BSServiceConnection<BSServiceConnectionHost>"
@"<SASPresentationServerDelegate>"
@40@0:8@16@24@32
@"NSString"40@0:8@"SASRequestOptionsBuilder"16q24@"SASActivationRequest"32
@"SASRequestOptions"40@0:8@"SASRequestOptionsBuilder"16@"SASRequestOptions"24@"SASActivationRequest"32
B32@0:8@16@24
@40@0:8@16@24q32
Q32@0:8@16@24
B32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
@"NSString"40@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24q32
Q32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
v24@0:8@"SASHeater"16
v24@0:8@"AFMyriadCoordinator"16
v24@0:8Q16
v24@0:8@"SASBulletinManager"16
v32@0:8@16q24
v32@0:8q16d24
v24@0:8@?16
B24@0:8q16
v28@0:8@16B24
@"AFMyriadCoordinator"
@"NSObject<OS_dispatch_queue>"
@"AFPreferences"
@"NSMutableDictionary"
@"NSMutableSet"
@"SASHeater"
@"AFSiriTether"
@"SASBulletinManager"
@"SASRemoteRequestManager"
@"SASTestingInputController"
@"AFWatchdogTimer"
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"BSServiceConnection"
@"NSDictionary"
@"BBBulletin"
@"UNNotification"
@24@0:8Q16
@28@0:8Q16B24
q40@0:8@16@24@32
@"SiriContext"16@0:8
@24@0:8d16
@"<SiriAssertion>"16@0:8
@"<SiriAssertion>"24@0:8d16
@"SiriLongPressButtonContext"
@56@0:8@16@24@32d40@?48
q24@0:8q16
@32@0:8q16@24
[12i]
@"SiriContext"
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v48@0:8@16@24@32@?40
@32@0:8@16q24
v56@0:8@16@24@32@40@?48
{CGSize=dd}56@0:8@16@24@32{CGSize=dd}40
@48@0:8@16q24@32@40
{CGSize=dd}48@0:8@16q24f32f36@40
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v48@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32@?<v@?Q>40
B24@0:8@"BBObserver"16
@"BBThumbnailSizeConstraints"40@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32
@"BBThumbnailSizeConstraints"32@0:8@"BBObserver"16q24
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"NSData">48
v56@0:8@"BBObserver"16@"NSData"24@"BBAttachmentMetadata"32@"BBBulletin"40@?<v@?@"UIImage">48
{CGSize=dd}56@0:8@"BBObserver"16@"BBAttachmentMetadata"24@"BBBulletin"32{CGSize=dd}40
@"UIImage"48@0:8@"BBObserver"16q24@"NSData"32@"NSString"40
{CGSize=dd}48@0:8@"BBObserver"16q24f32f36@"NSString"40
v32@0:8@16Q24
@"BBObserver"
@"SASBulletinCache"
@"<SASBulletinManagerDelegate>"
v32@0:8@"CMPocketStateManager"16q24
v40@0:8q16Q24@32
@"AFRemoteRequestWatcher"
@"INUIAppIntentDeliverer"
@"CMPocketStateManager"
@"AFBulletin"
@"SAGuidanceCheckForGuideUpdateContext"
@"SASPronunciationContext"
@"NSArray"
@"AFRequestInfo"
@"AFSpeechRequestOptions"
@"<SASLockStateMonitorDelegate>"
i16@0:8
v20@0:8i16
@"SUICApplicationStateHelper"
B60@0:8@16B24@28@36@44q52
@"SiriTestingContext"
@"SASBulletinCacheNode"
B24@0:8Q16
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"BSServiceConnectionListener"
@"SiriBluetoothContext"
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24
Vv32@0:8@"SASDirectActionEventTransport"16@"SiriDirectActionContext"24
Vv24@0:8@"SiriContinuityContext"16
Vv24@0:8@"NSNumber"16
Vv24@0:8@"SiriSpotlightContext"16
Vv24@0:8@"SiriTestingContext"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriLongPressButtonContext"24
@"<SASSignalServerDelegate>"
