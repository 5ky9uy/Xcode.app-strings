@(#)PROGRAM:SiriActivation  PROJECT:AssistantUI-1
?333333
?333333
%s #activation invalidating BSServiceConnection %@
%s #activation old availability: %@, new availability: %@
%s Button Down Event absent. Artificially update timestamp.
%s Picked record route: %@
%s Predicted record route ZLL: %{BOOL}d
%s #SiriPocketStateManager: Querying Pocket State
%s #SiriPocketStateManager: Failed to query for pocket state: %@
%s #SiriPocketStateManager: Pocket state query successful with state: %@
%s #activation hfpTriggerDuringPhoneCall = YES bypassing pocket state detector
%s #SiriPocketStateManager: PocketState changed to %@
%s #myriad setCanceledByMyriad: %d
%s #myriad motion bump is ignored due to awareness being on
%s #myriad BTLE lift time delta %f, adjusting by %d
%s #myriad BTLE connected to carplay, adjusting by %d
%s #myriad BTLE Myriad voice trigger advertising while isVisible
%s #myriad BTLE Myriad voice trigger advertising needed adjusted by ul=%d + lt=%d + cp=%d + rtw=%d = %d
%s #myriad BTLE Myriad direct trigger advertising needed
%s #myriad BTLE Siri is delayed for Myriad decision, evt = %ld
%s #myriad BTLE timed out waiting for Myriad decision, sem=%ld
%s #myriad BTLE Canceled Myriad decision. Not activating Siri.
%s #myriad BTLE Got Myriad decision. Activating Siri.
%s #myriad BTLE Myriad ignoring advertisement [isVoiceTrigger %d, isVisible %d]
%s #myriad BTLE Myriad voice trigger advertising while is visible [isVoiceTrigger %d]
%s #myriad BTLE observerCalled transition=%@
%s #myriad BTLE wake gesture noted
%s #myriad
%s #myriad screen lock -> unlock: %d, screen unlock -> lock: %d
%s #activation #locks #noisy strongSelf->_activityManagerLock about to lock with qos: %zd
%s #activation #locks #noisy strongSelf->_activityManagerLock successfully locked
%s #activation #locks #noisy strongSelf->_activityManagerLock unlocked
%s #activation invalidated presentationServer: %@
%s #activation interrupted presentationServer: %@
%s %p
%s %p #activation Unable to establish connection to un-entitled remote process: %@
%s Unexpectedly attempted to assign a new connection to the activation server with an existing connection: %{public}@
%s %p #activation registerPresentationIdentifier:%@
%s %p #activation unregisterPresentationIdentifier:%@
%s %p #activation willDismiss
%s %p #activation didDismiss
%s %p #activation Shell indicates Siri is presented
%s %p #activation resetSiriToActive
%s %p #activation Shell indicates Siri presentation failed : %@
%s %p #activation Presentation state did update: %@
%s #activation Shell indicates that speech request was started via Siri orb
%s #activation Shell indicates that speech request was cancelled via Siri orb
%s #activation allBulletins
%s #activation bulletinsOnLockScreen
%s #activation bulletinForIdentifier: %@
%s #activation #locks #noisy sourcesLock about to lock with qos: %zd
%s #activation #locks #noisy sourcesLock successfully locked
%s #activation #locks #noisy sourcesLock unlocked
%s #activation #locks #noisy buttonEventListenerLock about to lock with qos: %zd
%s #activation #locks #noisy buttonEventListenerLock successfully locked
%s #activation #locks #noisy buttonEventListenerLock unlocked
%s #activation _updateCanActivateFromDirectActionSource
%s #activation setCanActivateFromDirectActionSource: %@
%s #activation Registration of '%@' when it is already registered. Removing
%s #activation Registering '%@'
%s #activation Unregister request of '%@' when it is not registered.
%s #activation Unregistering '%@'
%s #activation #locks #noisy assertionLock about to lock with qos: %zd
%s #activation #locks #noisy assertionLock successfully locked
%s #activation Registration of '%@' assertion when it is already present. Removing
%s #activation Registering assertion with Id -  '%@'
%s #activation #locks #noisy assertionLock unlocked
%s #activation Unregister assertion for '%@' when it is not registered.
%s #activation Unregistering assertion %@'
%s #activation Registration of '%@' listner when it is already present. Removing
%s #activation Registering listener with Id -  '%@'
%s #activation Unregister lisener for '%@' when it is not registered.
%s #activation Unregistering listener %@'
%s #activation B188ActivationEvent with Siri state %@. Activating.
%s #activation B188ActivationEvent with Siri state %@. Deactivating.
%s #activation SiriButtonIdentifierLongPressBTHeadset, context %@, but Siri state is %@. Treating as button long press.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Activating.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s deactivationRequestFromButtonIdentifier:%@, with Siri state %@. Deactivating.
%s  #activation _shouldRejectActivationWithButtonIdentifier - isBlockableButton:%d assertionsAvailable :%d
%s #activation %@ button prewarm request, current request state: %@, longPressInterval: %f
%s #activation buttonDownFromButtonIdentifier:%@
%s #activation button down used while stopping. Ignoring.
%s #activation Rejecting Button Down as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonUpFromButtonIdentifier:%@
%s #activation Rejecting Button Up as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonTapFromButtonIdentifier:%@
%s #activation Rejecting Button Tap as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation activating due to TV remote microphone button short tap with Siri state %@
%s buttonTapFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@
%s #activation Rejecting Button Long Press as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context %@. Activating.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@ and we are in CarPlay. Ignoring because we should also be getting a button down/up.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Passing to the Presentation Shell.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context: %@. Ignoring
%s buttonUpTimestamp: %f, buttonDownTimestamp: %f
%s #activation synthesizing button tap
%s #activation button tap occurred, but Siri is not yet up. Not synthesizing tap event.
%s #activation activationRequestFromDirectActionEventWithContext:%@
%s #activation activationRequestFromContinuityWithContext
%s #activation activationRequestFromVoiceTriggerWithContext
%s #activation activationRequestFromBreadcrumb
%s #activation activationRequestFromSimpleActivation:%@
%s #activation activationRequestFromRemotePresentationBringUpWithContext:%@
%s #activation activationRequestFromSpotlightWithContext
%s #activation activationRequestFromVoiceTrigger
%s #activation activationRequestFromTestingWithContext
%s #activation speech request state did change (state = %ld)
%s #activation #locks #noisy handleActivationLock about to lock with qos: %zd
%s #activation #locks #noisy handleActivationLock successfully locked
%s #activation activationRequest = %@
%s #activation Voice request on CarPlay, delaying Myriad decision by %f ms
%s #activation #locks #noisy handleActivationLock unlocked
%s #activation _activatePresentation %@
%s #activation Deferring wake, shouldHandlePocketStateFetch: (%{bool}d)
%s #activation Setting rotation style for presentation { rotationStyle: %@, presentation: %@ }
%s #activation should handle pocket state fetch via (requestIsWiredMicOrBluetoothHeadset (%{bool}d) || requestIsB288 (%{bool}d)) && isScreenOff (%{bool}d) && siriActivationDeviceSupportsProxSensor (%{bool}d) && !(requestIsEyesFree (%{bool}d) || requestIsBluetoothCar (%{bool}d))
%s #activation #SiriPocketStateManager: error querying the pocket state for screen wake: %@ Turning on the screen...
%s #activation #SiriPocketStateManager: Device is face down on table or in pocket. Leaving screen off.
%s #activation #SiriPocketStateManager: Turning on the screen...
%s #activation
%s #activation _attachToTether
%s #activation _cancelActivationPreparationForSetup
%s #activation _cancelPendingActivationEventWithReason:%@
%s #activation activating in design mode
%s #activation preheat; request state = %@
%s #activation cancelledPreparationWithButtonIdentifier: %@ duration: %f, willSendEvent: %d, targetDuration: %f, 
%s #myriad BTLE Device should abort session
%s #myriad BTLE Device continues to interact, device won election
%s #activation lockState: %@
%s #activation callStateChangedToIsActive: %@ isOutgoing: %@
%s #activation error: %@
%s #activation BSServiceConnection Invalidated %@
%s #activation BSServiceConnection Interrupted %@
%s #activation BSServiceConnection Activated %@
%s Couldn't determine direct action from bulletin content "%@" or notification content "%@".
%s Couldn't determine direct action from bundleId: "%@" and intent identifiers: "%@"
%s #activation #locks #noisy presentationsLock about to lock with qos: %zd
%s #activation #locks #noisy presentationsLock successfully locked
%s #activation active: %@ | starting: %@ | stopping: %@ | off: %@ | computed state: %@
%s #activation #locks #noisy presentationsLock unlocked
%s #activation presentationIdentifierKey: %@
%s #activation Registration of '%@' when it is already connected. Removing.
%s #activation Unregister request of '%@' when it is not connected.
%s #activation #preheat
%s #activation #preheat tried to preheat %@ but it's not a registered presentation
%s #activation #preheat tried to preheat %@ but it's request state is %@
%s #activation cancelling preheat for presentation: %@
%s #activation #noisy not cancelling preheat for presentation: %@ because it appears to be %@
%s #activation _lastReportedShouldRejectNewActivations: %@ | newShouldRejectNewActivations: %@
%s Received unknown button event type. Ignoring.
%s #activation presentation: %@, type: %@, state: %@
%s #activation enqueuing button event completion until State is %@.
%s #activation received %@ while request state is %@, enqueueing.
%s #activation unhandled button event, ignoring.
%s #activation presentation with identifier %@ isn't registered
%s #activation presentation with identifier %@ can't transition to state: %@ from state: %@
%s #activation %@: transitioning from %@ to %@
%s #activation identifier: %@
%s #pingpong sending ping and waiting for pong - model: %@ | server: %@ | connection: %@ | remoteTarget: %@
%s #pingpong not returning ping because presentation with identifier %@ is in request state %@
%s #pingpong timed out waiting for pong
%s #pingpong
%s #pingpong received pong with presentation identifier: %@
%s Sending <%@>'s state --> <%@>: %@
%s #activation SASPresentationDecision deciding between: %@
%s ERROR: Multiple connected presentations, but none of them have precedence. Taking the first object, %@
%s #activation BSServiceConnection Interrupted, re-activating %@
%s #activation BSServiceConnection Activated strongSelf=%p connection=%@
%s #activation %@ didRecognizeLongPress
%s #activation #zll carplay steering wheel button with previous prepare assertion, replaced timestamp with %@
%s #activation #zll carplay steering wheel button with no previous prepare assertion
%s #activation #zll not a carplay steering wheel button, converted passed in timestamp: %@
%s Deallocated SiriActivityAssertion (identifier=%@, reason=%@) before it was properly invalidated.
%s Failed getting waketime mib %{public}s
%s Device wants Home Button ZLL, checking wake time
%s Failed looking up waketime %{public}s
%s Wake time was %lf seconds ago
%s Button down time was %lf seconds ago
%s Wake -> Button down delta is %lf
%s Using Wake Time
%s Using Button Down Time
%s button down timestamp sent in format where absolute time conversion is invalid
%s Bulletin with identifier: %@ not found in cache with bulletinIDs: %@
%s %@ added to lock screen feed
%s ACAssistantBBObserver: Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s ACAssistantBBObserver: Asked to remove a bulletin from lock screen %@ that I don't already have.
%s ACAssistantBBObserver: Asked to remove a bulletin %@ that I don't already have.
%s #activation #locks #noisy _lock about to lock with qos: %zd
%s #activation #locks #noisy _lock successfully locked
%s #activation #locks #noisy _lock unlocked
%s #activation BSServiceConnection Activated for button event listener strongSelf=%p connection=%@
%s #activation #locks #noisy innerStrongSelf->_lock about to lock with qos: %zd
%s #activation #locks #noisy innerStrongSelf->_lock successfully locked
%s #activation #locks #noisy innerStrongSelf->_lock unlocked
%s #activation Unregister listener '%@' when it is not connected.
%s #activation BSServiceConnection Unregistering SiriActivationButtonEventListenerDelegate delegate=%@ connection=%@
%s #activation BSServiceConnection invalidating listener connection=%@
%s #activation #noisy Forwarding Button down event to Listener with identifier %@
%s #activation Received Invalidation for Assertion - %@, Invalidating
%s #activation Received Interruption for Assertion - %@, Invalidating
%s #activation BSServiceConnection Activated for assertion strongSelf=%p connection=%@
%s #activation BSServiceConnection Unregistering & invalidating assertion self=%@ connection=%@
%s #activation SiriActivationAssertion got deallocated
%s ERROR: attempted to create SiriButtonIdentifier from '%@'.
%s Unsupported button event: %li from source: %li
%s info=%@
%s TestAutomation activationEvent does not contain recognition text or speech file paths.
%s Received VoiceTrigger activation request, already pending for possible future activation
%s Received VoiceTrigger activation request, but currently blocking VoiceTrigger activations
%s Received VoiceTrigger activation request, no restrictions, activating
%s pending voice trigger activation timer fired, %@
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s #cancellationReason: Setting cancellationReason to %@ because deactivationReason is %@
%s PendingCount:%tu, hasPendingTrigger:%i
%s replacing prewarm AFRequestInfo %@ with newer pending activation AFRequestInfo %@
%s count is zero after being decremented, activating from pending
%s #activation Cannot set requestSource to SASRequestSourceKeyboard when keyboard input is disabled
%s #activation Updated properties from system state: %@
%s Unsupported SASRequestSource value: %lu, returning back AFDirectActionSourceUnknown.
%s Unsupported CARAutomaticFeatureState value: %lu
%s #modes DisplayTransition called transition=%@
%s #modes Device went through liftToWake transition setLiftToWake:YES
%s #modes Device went to sleep or went through another transition setLiftToWake:NO
%s %i
%s Disconnected from CarPlay display.
%s Paired to an untrusted CarPlay device.
%s Paired to a trusted CarPlay device.
%s #CarPlay failed to lookup car intent extensions: %@
%s #CarPlay supported OEM apps: %@
%s Enabled:%@
%s #activation NO: Siri is not supported. Language code: %@
%s #activation NO: Siri is restricted by profile
%s #activation NO: Siri voice activation is disabled until first unlock.
%s #activation: Ignoring pocket state for connected remote display voice activation
%s #activation: Pocket state would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring pocket state
%s #activation NO: Pocket state prevents voice trigger activation
%s #activation NO: There is an existing HoldToTalk trigger.
%s #activation: Ignoring Smart cover state for connected remote display voice activation
%s #activation NO: Siri is disabled because an iPad Smart Cover is closed which blocks home button or Hey Siri
%s #activation: Smart Cover is closed, which would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring Smart Cover state
%s #activation NO: Siri is disabled because an iPhone Smart Cover is closed which blocks home button or Hey Siri
%s #activation NO: "Press Home/Side For Siri" is disabled in Settings
%s #activation NO: Siri state is %@. Ignoring activationRequest %@.
%s #activation NO: Siri is disabled while passcode locked
%s requestSource:SASRequestSourceBluetoothHeadset isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B188 / bluetooth device
%s event:%@ isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B288 %@
%s #activation NO: Siri is disabled because the device is blocked
%s #activation NO: request type unsupported while in an active call - feature flag not enabled.
%s #activation NO: active call while connected to CarPlay
%s #activation NO: uod assets unavailable during a voice call
%s #activation NO: request type unsupported during a call
%s #activation continue: %@
AnnounceTelephony: %@
%s #activation NO: in remote webcam mode
%s #activation YES: source:%@
%s #activation NO: Siri is restricted by profile.
%s #activation NO: Siri Setup is disabled while passcode locked
%s #ptt device is in TTS mode
%s #ptt Remote Type is %@
%s Bulletin cache is being asked to insert a bulletin with no ID; ignoring the request because bulletin lookup is ID-based and so there's no reason to store a bulletin with no ID (bulletin: %@; bbBulletin: %@)
%s Bulletin cache contains a bulletin with a nil identifier; not including the bulletin as part of the return value of -allBulletins (bulletin: %@; bbBulletin: %@)
%s This should hopefully not happen, endpointType not initialized before called, returning as not Bluetooth.
%s Failed to subscribe to AVSystemController notifications due to error: %@
%s Registered AVSystemController listeners
%s Endpoint type is not found from AVSystemController, setting it to %@.
%s Endpoint type changed, from %@ to %@.
%s #activation canActivateChangedTo: %@
%s Error loading areSiriUODAssetsAvailable from AFSettingsConnection : %@
%s Received results for areSiriUODAssetsAvailable : %d
%s Released semaphore for areSiriUODAssetsAvailable from AFSettingsConnection
%s Waiting for results of areSiriUODAssetsAvailable.
%s Timed out waiting for areSiriUODAssetsAvailable
%s SASSignalConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation #locks #noisy lock about to lock with qos: %zd
%s #activation #locks #noisy lock successfully locked
%s #activation #locks #noisy lock unlocked
%s #activation Invalidating connection - %@ as client %@ terminated
%s #activation Invalidating connection - %@
%s #activation interrupted signalserver: %@
%s #activation Button identifier %@ with uuid '%@' registered by %@
%s #activation Button identifier %@ with uuid '%@' unregistered by %@
%s #activation Non-button source of type %@ with uuid '%@' registered by %@
%s #activation Non-button source of type %@ with uuid '%@' unregistered by %@
%s #activation activationRequestFromButtonIdentifier:%@ context:%@
%s #activation deactivationRequestFromButtonIdentifier:%@ context:%@
%s #activation _activationRequestFromDirectActionEventWithContext:%@
%s #activation _activationRequestFromDirectActionEventWithContext payload missing bundleId, using connection bundle id:%@
%s #activation activationRequestFromContinuityWithContext:%@
%s #activation activationRequestFromBluetoothKeyboardActivation
%s #activation activationRequestFromSimpleActivation
%s #activation activationRequestFromSpotlightWithContext:%@
%s #activation activationRequestFromTestingWithContext:%@
%s prewarmFromButtonIdentifier:%@
%s cancelPrewarmFromButtonIdentifier:%@
%s buttonDownFromButtonIdentifier:%@ timestamp:%@
%s buttonUpFromButtonIdentifier:%@ timestamp:%@
%s buttonTapFromButtonIdentifier:%@
%s buttonLongPressFromButtonIdentifier:%@ context:%@
%s #activation registerAssertionWithIdentifier:%@ reason:%@
%s #activation unregisterAssertionWithIdentifier:%@
%s registerButtonEventListenerWithIdentifier:%@
%s unregisterButtonEventListenerWithIdentifier:%@
%s SASPresentationConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation sending completions for %lu cached event(s)
-[SiriActivationSource invalidate]
-[SiriActivationSource activeChangedTo:]
unspecified
text
recordedSpeechURL
(unknown)
v8@?0
com.apple.siri.activation.service
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
requestSource
%@ {%@}
wakeScreen = %@
hideOtherWindowsDuringAppearance = %@
rotationStyle = %ld (%@)
requestSource = %@
SiriPresentationOptions::wakeScreen
SiriPresentationOptions::hideOtherWindowsDuringAppearance
SiriPresentationOptions::rotationStyle
SiriPresentationOptions::requestSource
com.apple.siri.CarDisplay.UIFree
-[SASRequestOptionsBuilder _createRequestOptionsForRequest:withDataSource:]
__supportsCarFullScreen
__bundleId
AssistantDirectActionEventKey
v16@?0@"<AFApplicationContextMutating>"8
SASDismissalReason
Unknown
SystemInterrupt
IncomingPhoneCallInterrupt
OutgoingPhoneCall
Timeout
HardwareButton
UISwipe
CarplayDismissed
LostMyriadElection
Punchout
CloseAssistantCommand
EmergencyBulletinSynthesized
ConnectionErrorTimeout
SiriUnavailable
HandoffDeviceUnlockFailure
InitialDeviceUnlockSinceBootFailure
UserEnteredScreenshotFullMode
TTSDidFinishInBackground
BluetoothDeviceDeactivation
PresentationUnregistered
CarPlayHardwareButton
UnexpectedError
CarPlayUnpaired
TapOutsideOfContent
PanSwipeDismissed
ScrollingWithoutListening
PresentationFailedToPresent
ActivationTimedOut
PresentationManagerError
AppLaunch
SiriSetupCancelled
ButtonEventWhileDelaySessionEndForTTS
AssistantConnectionDismissRequested
EmergencyBulletinSynthesisError
EmergencyBulletinEmptyError
AirPodDoubleTapWhenActive
AirPodOutOfEarWhenActive
AdBlockerTriggered
CarPlayAnnounceBannerTrump
CarPlayAnnounceBannerDismissal
CarPlayAnnounceBannerOutsideTap
CarPlayAnnounceBannerHomeButton
CarPlayAnnounceBannerBackButton
CarPlayAnnounceBannerTouchPadSwipe
CarPlayAnnounceBannerTrackPadMovement
CarPlayAnnounceBannerNotificationWithdrawn
VoiceInterruptionDuringAnnouncement
IncomingCallEndedDuringAnnouncement
IncomingCallAnnouncementTrump
RemoteDeactivation
CarPlayAppDockButtonPress
UnsupportedVoicePromptStyleDuringAnnouncement
CarPlayBorrowedAudioDuringAnnouncement
CloseAssistantCommandSpeechNoPrompt
SASDismissalReasonPromptForPasscodeUnlockFailure
AnnounceSpeechManagerStoppedUnexpectedly
SiriButtonIdentifierLongPressUndefined
SiriButtonIdentifierLongPressHomeButton
SiriButtonIdentifierLongPressLockButton
SiriButtonIdentifierLongPressBTHeadset
SiriButtonIdentifierLongPressHearstButton
SiriButtonIdentifierLongPressWiredMic
SiriButtonIdentifierLongPressCarPlayAppDockButton
SiriButtonIdentifierLongPressCarPlaySteeringWheelButton
SiriButtonIdentifierLongPressCarPlaySiriButton
SiriButtonIdentifierMockShellButton
SiriButtonIdentifierMockSteeringWheelButton
SiriButtonIdentifierTestingShellButton
SiriButtonIdentifierTVRemoteMicrophoneButton
SiriButtonIdentifierLongPressVoiceCommandButton
<unknown siri button identifier : %li>
SpeechRecognition
-[SASHeater updatePredictedRouteIsZLL]_block_invoke
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]_block_invoke
v24@?0q8@"NSError"16
hfpTriggerDuringPhoneCall
-[SASSiriPocketStateManager pocketStateShouldPreventVoiceTriggerForActivationRequest:]
-[SASSiriPocketStateManager _updateForPocketState:]
CMPocketStateTypeOutOfPocket
CMPocketStateTypeInPocket
CMPocketStateTypeFaceDown
CMPocketStateTypeFaceDownOnTable
CMPocketStateTypeMax
com.apple.siri.SASAnalyticsEventQueue
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[SASMyriadController setCanceledByMyriad:]
-[SASMyriadController activateForRequest:withTimeout:visible:]
-[SASMyriadController activateForInTaskRequest:isVisible:]
-[SASMyriadController _updateRaiseToWakeTimeForTransition:]
-[SASMyriadController shouldContinue:]
-[SASMyriadController shouldAbortAnotherDeviceBetter:]
-[SASMyriadController didChangeLockState:toState:]
-[SASMyriadController _configureMotionActivityManager]_block_invoke
v16@?0@"CMMotionActivity"8
SiriContextOverrideKey
currentSpokenLanguageCode
unlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
connectedToCarPlay
connectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
+[SASPresentationServer serverForConnection:]_block_invoke_2
v16@?0@"BSServiceConnection"8
+[SASPresentationServer serverForConnection:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
-[SASPresentationServer init]
-[SASPresentationServer dealloc]
<SASPresentationServer connection:%@, presentationIdentifier:%@>
-[SASPresentationServer _setConnection:]
-[SASPresentationServer registerPresentationIdentifier:]
-[SASPresentationServer unregisterPresentationIdentifier:]
-[SASPresentationServer willDismiss]
-[SASPresentationServer didDismiss]
-[SASPresentationServer didPresentSiri]
-[SASPresentationServer resetSiriToActive]
-[SASPresentationServer failedToPresentSiriWithError:]
-[SASPresentationServer didUpdatePresentationState:]
-[SASPresentationServer speechRequestStartedFromSiriOrb]_block_invoke
-[SASPresentationServer speechRequestCancelledFromSiriOrb]_block_invoke
-[SASPresentationServer allBulletins]
-[SASPresentationServer bulletinsOnLockScreen]
-[SASPresentationServer bulletinForIdentifier:]
BT_KEY_SIRI_EYESFREE_MODE
com.apple.siri.activation
com.apple.siri.activation.presentation
com.apple.siri.activation.signal
<SiriVoiceTriggerContext contextOverride:%@, speechRequestOptions:%@, requestInfo:%@, userActivity:%@>
com.apple.siri.hs.on.carplay
com.apple.siri.button.on.carplay
com.apple.siri
com.apple.siri.EyesFree
com.apple.siri.BluetoothCar
com.apple.siri.Compact
com.apple.siri.CarDisplay
com.apple.siri.UIFree
com.apple.siri.SiriTVPresentation
v12@?0B8
-[SiriActivationService _notifySourcesOfActiveChange:]
TVRemoteCore
updog
SiriUI
ios_remote_htt
-[SiriActivationService _notifyListenersOfButtonDownWithButtonIdentifier:atTimestamp:]
v32@?0@"NSString"8@"SASSignalServer"16^B24
-[SiriActivationService _notifyListenersOfButtonUpWithButtonIdentifier:atTimestamp:]
-[SiriActivationService _notifyListenersOfButtonLongPressWithButtonIdentifier:atTimestamp:]
-[SiriActivationService _updateCanActivateFromDirectActionSource]
-[SiriActivationService setCanActivateFromDirectActionSource:]
-[SiriActivationService _notifySourcesOfCanActivateFromDirectActionSourceChange:]
-[SiriActivationService registerActivationSource:withIdentifier:]
-[SiriActivationService unregisterActivationSourceIdentifier:]
-[SiriActivationService registerActivationAssertion:withIdentifier:]
-[SiriActivationService unregisterActivationAssertionWithIdentifier:]
-[SiriActivationService registerButtonEventListenerServer:identifier:]
-[SiriActivationService unregisterButtonEventListenerWithIdentifier:]
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke_2
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke
v16@?0@"NSTimer"8
-[SiriActivationService activationRequestFromButtonIdentifier:context:]
-[SiriActivationService deactivationRequestFromButtonIdentifier:context:options:]
-[SiriActivationService _shouldRejectActivationWithButtonIdentifier:activationAssertions:]
-[SiriActivationService prewarmFromButtonIdentifier:longPressInterval:]
activationEvent
eventSource
interval
-[SiriActivationService buttonDownFromButtonIdentifier:timestamp:context:]
v16@?0@"SASPresentationServer"8
-[SiriActivationService buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:]
-[SiriActivationService buttonTapFromButtonIdentifier:]
-[SiriActivationService buttonLongPressFromButtonIdentifier:context:]
-[SiriActivationService _handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:]
-[SiriActivationService activationRequestFromDirectActionEventWithContext:completion:]
-[SiriActivationService activationRequestFromContinuityWithContext:]
-[SiriActivationService activationRequestFromVoiceTriggerWithContext:]
-[SiriActivationService activationRequestFromBreadcrumb]
-[SiriActivationService activationRequestFromBluetoothKeyboardActivation:]
-[SiriActivationService activationRequestFromRemotePresentationBringUpWithContext:]
-[SiriActivationService activationRequestFromSimpleActivation:]
-[SiriActivationService activationRequestFromSpotlightWithContext:]
-[SiriActivationService activationRequestFromVoiceTrigger]
-[SiriActivationService activationRequestFromTestingWithContext:]
-[SiriActivationService speechRequestStateDidChange:]
-[SiriActivationService handleActivationRequest:systemState:]
isDeviceUnlocked
clockTime
carVehicleName
carVehicleModelName
carVehicleManufacturer
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]_block_invoke
v16@?0@"<SiriPresentationOptionsMutating>"8
-[SiriActivationService _shouldHandlePocketStateFetchForRequestOptions:]
-[SiriActivationService _handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:]_block_invoke_2
-[SiriActivationService _handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:]_block_invoke
PocketStateFetch
-[SiriActivationService _dismissSiri:]
-[SiriActivationService _preheatPresentation]
-[SiriActivationService _attachToTether]
-[SiriActivationService _cancelActivationPreparationForSetup]
-[SiriActivationService _cancelPendingActivationEventWithReason:]
-[SiriActivationService _handleDesignModeRequest]
com.apple.siri.internal.activation
-[SiriActivationService heaterSuggestsPreheating:]
-[SiriActivationService heater:cancelledPreparationWithButtonIdentifier:duration:targetDuration:]
com.apple.siri.button.false_positive_activation_duration
duration
buttonIdentifier
targetDuration
targetDurationEnum
@"NSDictionary"8@?0
-[SiriActivationService shouldAbort:]
-[SiriActivationService shouldContinue:]
-[SiriActivationService didChangeLockState:]
-[SiriActivationService callStateChangedToIsActive:isOutgoing:]
-[SiriActivationService presentationManager:didEncounterError:]
Speech file not found
proximity-sensor
-[SiriSpotlightSource configureConnection]_block_invoke_2
-[SiriSpotlightSource configureConnection]_block_invoke
SBSAssistantActivationContextBundleID
com.apple.MobileSMS
com.apple.Home
com.apple.shortcuts
<SiriDirectActionContext contextOverride:%@, payload:%@, bulletin:%@, notification:%@, directActionEvent:%@, bundleId:%@>
payload
bulletin
notification
-[SiriDirectActionContext _directActionEventFromContentTypesOfBulletin:notification:]
-[SiriDirectActionContext _directActionEventFromAppIdsAndIntentIdentifiersOfBulletin:notification:]
matchDeviceOrientation
matchContextOrientation
-[SASPresentationManager requestState]
-[SASPresentationManager registerSiriPresentation:withIdentifier:]
-[SASPresentationManager unregisterSiriPresentationWithIdentifier:]
-[SASPresentationManager preheatNextPresentationToActivate]
-[SASPresentationManager cancelAllPreheatedPresentations]
-[SASPresentationManager _presentationsLock_cancelAllPreheatedPresentations]
-[SASPresentationManager _notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary]
-[SASPresentationManager _sendBlock:toPresentationWithPresentationIdentifier:]
-[SASPresentationManager _sendBlockToActivePresentations:]
-[SASPresentationManager _sendBlockToStartingPresentations:]
-[SASPresentationManager _sendBlockToStoppingPresentations:]
-[SASPresentationManager sendButtonEventCompletionToPresentations:forButtonEventType:]
-[SASPresentationManager activePresentationsAreIdleAndQuiet]
-[SASPresentationManager _transitionPresentationWithPresentationIdentifier:toState:]
-[SASPresentationManager nextPresentationToActivate]
-[SASPresentationManager _presentationsLock_nextPresentationToActivate]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]_block_invoke
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]_block_invoke
-[SASPresentationManager _teardownPingTimerForPresentationIdentifier:]
-[SASPresentationManager pongWithPresentationIdentifier:]
-[SASPresentationManager _forceAllPresentationsOff]
-[SASPresentationManager presentationDidUpdateState:]
-[SASPresentationManager _presentationsLock_broadcastPresentationStateForIdentifier:presentationState:presentationIdentifiersToInform:]
SASPresentationManagerErrorInvalidStateTransition
SASPresentationManagerErrorStateTransitionFromUnregisteredPresentation
SASPresentationManagerSendBlockToUnregisteredPresentation
SASPresentationManagerSetupPingTimerForUnregisteredPresentation
SASPresentationManagerTeardownPingTimerForUnregisteredPresentation
SASPresentationManagerErrorPongTimeout
deactivationOptions:%lu, animated:%@, request cancellation reason %ld, dismissal reason %@, shouldTurnScreenOff %@
deactivationOptions
animated
requestCancellationReason
dismissalReason
shouldTurnScreenOff
+[SASPresentationDecision activationPresentationForPresentationIdentifiers:]
-[SiriSimpleActivationSource configureConnection]_block_invoke_2
-[SiriSimpleActivationSource configureConnection]_block_invoke
-[SiriTestingSource configureConnection]_block_invoke_2
-[SiriTestingSource configureConnection]_block_invoke
SiriTestingContextRecognitionStringKey
SiriTestingContextAudioInputKey
SiriTestingContextFailedTestIdentifierKey
SiriTestingContextFailedTestNameKey
SiriTestingContextFailedTestMessageKey
<SiriTestingContext contextOverride:%@, testingContext:%@>
testingContext
prepare
speechInteraction
d8@?0
-[SiriLongPressButtonSource configureConnection]_block_invoke_2
-[SiriLongPressButtonSource configureConnection]_block_invoke
v24@?0@"<SiriAssertion>"8d16
-[SiriLongPressButtonSource didRecognizeLongPress]
-[SiriLongPressButtonSource _timestampForSpeechInteractionActivityWithTimestamp:]
SiriPresentationInvalidIdentifier
SiriPresentationSpringBoardMainScreenIdentifier
SiriPresentationCarPlayHeadUnitIdentifier
SiriPresentationMockIdentifier
SiriPresentationPineBoardMainScreenIdentifier
<unknown siri presentation identifier : %li>
SiriPresentationActivationCancelReasonShellEvent
SiriPresentationActivationCancelReasonSiriNotEnabled
SiriPresentationActivationCancelReasonLongPressDisabledInAccessibility
SiriPresentationActivationCancelReasonPreheatedWithoutActivation
SiriPresentationActivationCancelReasonPreviousPendingActivation
SiriPresentationActivationCancelReasonIncomingPhoneCall
SiriHomeAffordanceSuppressionNone
SiriHomeAffordanceSuppressionSuppress
SiriHomeAffordanceSuppressionInherit
-[SiriActivityAssertion dealloc]
SiriActivationEventTypeButton
SiriActivationEventTypeVoiceTrigger
SiriActivationEventTypeDirectAction
SiriActivationEventTypeContinuity
SiriActivationEventTypeBreadcrumb
SiriActivationEventTypeSimpleActivation
SiriActivationEventTypeSpotlight
SiriActivationEventTypeTesting
SiriActivationEventTypeKeyboardBluetoothShortcut
SiriActivationEventTypeRemotePresentationBringUp
event = AFActivationEvent%@; source = %@; context: %@
kern.waketime
-[SASActivationRequest computedActivationTime]
-[SASActivationRequest buttonDownTimestamp]
com.apple.cmas
-[SASBulletinManager bulletinForIdentifier:]
-[SASBulletinManager addBulletinCompletionWithBulletin:forFeed:]
-[SASBulletinManager observer:modifyBulletin:]
-[SASBulletinManager observer:removeBulletin:forFeed:]
-[SASBulletinManager observer:purgeReferencesToBulletinID:]
presentationIdentifier
presentationIdentifier = %@
SASPresentationState::presentationIdentifier
-[SiriActivationButtonEventListener registerWithListener:identifier:]
-[SiriActivationButtonEventListener configureConnectionForIdentifier:]_block_invoke_2
-[SiriActivationButtonEventListener configureConnectionForIdentifier:]_block_invoke
-[SiriActivationButtonEventListener unregisterListenerWithIdentifier:]
-[SiriActivationButtonEventListener _registerListenerWithIdentifier:]
-[SiriActivationButtonEventListener invalidatedAtTimestamp:]
-[SiriActivationButtonEventListener buttonDownWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationButtonEventListener buttonUpWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationButtonEventListener buttonLongPressWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationAssertion configureConnection]_block_invoke
-[SiriActivationAssertion invalidatedAtTimestamp:]
-[SiriActivationAssertion dealloc]
-[SiriRemotePresentationBringUpSource configureConnection]_block_invoke_2
-[SiriRemotePresentationBringUpSource configureConnection]_block_invoke
SASButtonIdentifierTransport:%@
-[SASButtonIdentifierTransport siriButtonIdentifier]
identifier
SASTimeIntervalTransport:%@
transport
SiriPresentationIdentifierTransport:%@
SiriPresentationActivationCancelReason:%@
SASLockStateTransport:%@
zllButton
mixable
v16@?0@"AFRequestInfo"8
v32@?0q8Q16@"NSDictionary"24
v16@?0@"AFSpeechRequestOptions"8
v24@?0@"INIntentResponse"8@"NSError"16
v32@?0@"INIntent"8@"NSString"16@?<v@?@"INIntentResponse"@"NSError">24
v16@?0@"INIntentForwardingActionResponse"8
v32@?0@"INIntentForwardingAction"8@"NSString"16@?<v@?@"INIntentForwardingActionResponse">24
v16@?0@"AFSiriActivationContext"8
-[SASRemoteRequestManager _init]_block_invoke
v24@?0@"AFSiriActivationContext"8@?<v@?@"NSError">16
reason
Presentation rejected - remote presentation bringup activation expects AFSiriActivationSourceRemoteRequest.
-[SASRemoteRequestManager _handleRemotePrewarmWithInfo:]
-[SASRemoteRequestManager _handleNewRemoteRequestWithInfo:]
-[SASRemoteRequestManager _handleRequestWatcherVoiceTriggerRequestWithInfo:]
-[SASRemoteRequestManager _processPendingVoiceTriggerActivationsWithInfo:delay:]_block_invoke
with %@ pending activations
no pending activations
-[SASRemoteRequestManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:]
inSpokenNotification
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]_block_invoke
SASRequestOptionsSourceCodingKey
SASRequestOptionsActivationDeviceIdentifierCodingKey
SASRequestOptionsBulletinCodingKey
SASRequestOptionsAppBundleIdentifierCodingKey
SASRequestOptionsDirectActionEventCodingKey
SASRequestOptionsMessagesDirectActionApplicationContextCodingKey
SASRequestOptionsServerCommandAceIdentifierCodingKey
SASRequestOptionsPronunciationRequestCodingKey
SASRequestOptionsPronunciationContextCodingKey
SASRequestOptionsTextCodingKey
SASRequestOptionsSpeechFileURLCodingKey
SASRequestOptionsTimestampCodingKey
SASRequestOptionsExpectedTimestampCodingKey
SASRequestOptionsButtonDownTimestampCodingKey
SASRequestOptionsIsInitialBringUpKey
SASRequestOptionsUseAutomaticEndpointingKey
SASRequestOptionsUseStreamingDictationKey
SASRequestOptionsAcousticIdEnabledKey
SASRequestOptionsReleaseAudioSessionOnRecordingCompletionKey
SASRequestHomeButtonUpFromBeepKey
SASRequestContinuityDataKey
SASRequestRequestInfoKey
SASRequestSpeechRequestOptionsKey
SASRequestPredictedRecordRouteIsZLL
SASRequestOptionsUIPresentationIdentifierCodingKey
SASRequestOptionsTestingContextKey
SASRequestOptionsIsConnectedToCarPlayCodingKey
SASRequestOptionsIsForCarDNDCodingKey
SASRequestOptionsCarDNDStatusCodingKey
SASRequestOptionsCurrentLockStateCodingKey
SASRequestOptionsInstrumentationEventsCodingKey
SASRequestOptionsCurrentCarPlaySupportedOEMAppIdListKey
SASRequestOptionsIsTVShortButtonPressAction
SASRequestOptionsStartRecordingSoundIDCodingKey
SASRequestOptionsOriginalOptionsCodingKey
SASRequestOptionsPresentationModeCodingKey
SASRequestOptionsPreviousTurnIdentifierCodingKey
SASRequestOptionsIsRightHandDriveKey
SASRequestOptionsTVRemoteType
SASRequestOptionsIsRemotePresentationBringUpCodingKey
SASRequestOptionsIsTVRemoteSourcePTTEligibleCodingKey
SASRequestOptionsLongPressBehavior
-[SASRequestOptions setRequestSource:]
<%@ %p; requestSource=%@
;activationDeviceIdentifier=%@
;bulletin=%@
;appBundleIdentifier=%@
;directActionEvent=%@
;serverCommandId=%@
;isPronunciationRequest=%i
;pronunciationContext=%@
;text=%@
;speechFileURL=%@
;expectedTimestamp=%0.1f;timestamp=%0.1f;buttonDownTimestamp=%0.1f;isInitialBringUp=%i;useAutomaticEndpointing=%i;useStreamingDictation=%i;acousticId=%i;releaseAudioSessionORC=%i;predictedZLL=%i
;uiPresentationIdentifier=%@
;testingContext=%@
;is(speech=%i; textInput=%i;stark=%i;CPconnected=%i;dnd=%i;rightHandDrive=%i);carDNDStatus=%@;remotePresentationBringUp=%i
;homeButtonUpFromBeep=%@
;continuityInfo=%@
;requestInfo=%@
;currentLockState=%@
;directActionApplicationContext=%@
;carPlayOEMList=%@
;isShortButtonPressAction=%i
;startRecordingSoundId=%@
;originalRequestOptions.requestSource=%@
;presentationMode=%zd
;tvRemoteType=%@
;isTVRemoteSourcePTTEligible=%i
;longPressBehavior=%ld>
siri_ptt_b519
isConnectedToCarPlay
rightHandDrive
isForCarDND
carDNDStatus
currentCarPlaySupportedOEMAppIdList
-[SASRequestOptions _updateWithSystemState:forcefully:]
SASRequestSourceNotSpecified
SASRequestSourceHomeButton
SASRequestSourceLockButton
SASRequestSourceVirtualButton
SASRequestSourceWiredMicrophone
SASRequestSourceBluetoothHeadset
SASRequestSourceMotionUpGesture
SASRequestSourceMotionDownGesture
SASRequestSourceVoice
SASRequestSourceServerCommand
SASRequestSourceStark
SASRequestSourceStarkPhoneHome
SASRequestSourceStarkVoiceTrigger
SASRequestSourceStarkNotification
SASRequestSourceStarkAppProxy
SASRequestSourceTVRemote
SASRequestSourceTesting
SASRequestSourceStarkSiriButton
SASRequestSourceAccessory
SASRequestSourceContinuity
SASRequestSourceSiriSetup
SASRequestSourceBreadcrumb
SASRequestSourceGuideUpdate
SASRequestSourceKeyboard
SASRequestSourceSpotlightQuerySuggestion
SASRequestSourceSpotlightAskSiriButton
SASRequestSourceTriggerless
SASRequestSourceAssistiveTouch
SASRequestSourceVoiceCommandButton
SASRequestSourceControlCenterRemoteUI
SASRequestSourceRemoteApp
SASRequestSourceNonAppleRemote
SASRequestSourceTapToEdit
SASRequestSourceBackTap
SASRequestSourceKeyboardShortcut
SASRequestSourceHearstButton
SASRequestSourceBluetoothKeyboardShortcut
SASRequestSourceStarkSpokenNotification
SASRequestSourceRemotePresentationBringUp
SASRequestSourceHeadphonesAnnounceNotification
SASRequestSourceHeadphonesAnnounceCall
SASRequestSourceCarPlaySteeringWheel
SASRequestSourceCarPlayJarvis
AFDirectActionSourceFromSASRequestSource
CARAutomaticFeatureStateUnknown
CARAutomaticFeatureStateOn
CARAutomaticFeatureStateOff
CARAutomaticFeatureStateGetName
SASLockStateUnlocked
SASLockStateScreenLocked
SASLockStatePasscodeLocked
SASRequestInputTypeNone
SASRequestInputTypeText
SASRequestInputTypeSpeech
-[SiriBreadcrumbSource configureConnection]_block_invoke_2
-[SiriBreadcrumbSource configureConnection]_block_invoke
com.apple.SiriViewService
SiriHardwareButtonLongPressBehavior
#configurationUpdateManager longPressBehavior: %ld previousValue: %ld
#configurationUpdateManager %@ changed to %@
-[SiriContinuitySource configureConnection]_block_invoke_2
-[SiriContinuitySource configureConnection]_block_invoke
-[SASSystemState init]_block_invoke
com.apple.siri.ActivationService.SystemState
com.apple.bluetooth.WirelessSplitterOn
com.apple.bluetooth.GuestConnected
-[SASSystemState isWirelessSplitterOn]
-[SASSystemState isGuestConnected]
com.apple.Maps
-[SASSystemState _setCarPlayConnectionState:]
v20@?0B8@"NSError"12
-[SASSystemState _fetchOEMAppContext]_block_invoke
v24@?0@"NSSet"8@"NSError"16
-[SASSystemState _updateAccessibilityState]
+[SASActivationDecision canActivateForCondition:]
Hey Siri
Double-Tap
BluetoothFeatures
AnnounceTelephony
Siri
hang_up
W2 HS activation event during a call
Voice Request during a call
triggerless reply to announce call during a call
announce call on headphones request during a call
SiriInCall
blushing_phantom
Test Request during a call
+[SASActivationDecision _shouldSiriActivateForSiriSetupWithSystemState:]
<SiriContext contextOverride:%@ speechRequestOptions:%@>
speechRequestOptions
contextOverride
v16@?0q8
<SiriLongPressButtonContext contextOverride:%@, utteranceText:%@, source:%@>
utteranceText
source
UnknownSiriSpotlightContextSource
SiriSpotlightContextSourceQuerySuggestion
SiriSpotlightContextSourceAskSiriButton
buttonDownTimestamp
activeDeviceBluetoothIdentifier
remoteType
isListening
isSourcePTTEligible
<SiriTVLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@,activeDeviceBluetoothIdentifier:%@,remoteType:%@,isListening:%d,isSourcePTTEligible:%d>
-[SiriTVLongPressButtonContext isPTTEligible]
SiriTVRemoteTypeUnknown
SiriTVRemoteTypeControlCenter
SiriTVRemoteTypeSiriRemote
SiriTVRemoteTypeSiriRemote4K
SiriTVRemoteTypeExternal
SiriTVRemoteTypeSiriRemote2021
SiriTVRemoteTypeE
SASButtonEventTypeUnknown
SASButtonEventTypeDown
SASButtonEventTypeUp
SASButtonEventTypeTap
SASButtonEventTypeLong
SBTestingConfigureNextAssistantRecognitionStrings
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
<SiriHearstLongPressButtonContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@>
isTemporaryDevice
-[SASBulletinCache insertBulletin:fromFeed:]
-[SASBulletinCache allBulletins]
com.apple.siri.SerialBluetoothEndpointQueue
-[SASBluetoothEndpointUtility isConnectedToBluetoothVehicle]
-[SASBluetoothEndpointUtility _registerListenersAndSetEndpointTypeWithNotification:]
-[SASBluetoothEndpointUtility _setEndpointTypeWithNotification:]_block_invoke
v24@?0@"NSNumber"8@"NSError"16
-[SiriDirectActionSource configureConnection]_block_invoke_2
-[SiriDirectActionSource configureConnection]_block_invoke
-[SiriDirectActionSource canActivateChangedTo:]
SASUnderstandingOnDeviceAssetsStateQueue
-[SASUnderstandingOnDeviceAssetsState updateState]_block_invoke_2
-[SASUnderstandingOnDeviceAssetsState updateState]_block_invoke
SiriBringup
SiriBringupToCarPlayMessageReading
SiriBringupToFlamesListening
SiriBringupToInitialQuery
SiriBringupToSiriProcessContentAppeared
SiriBringupTVSyntheticSpeechCapturedToSnippetResults
SiriBringupTVSyntheticSpeechCapturedToSpeechRecording
SiriScrollTeamRoster
testOptions
delta
iterations
speechFile
testName
SASRequestStateOff
SASRequestStateHeated
SASRequestStateStarting
SASRequestStateActive
SASRequestStateStopping
type
type = %ld (%@)
text = %@
recordedSpeechURL = %@
SASTestingInput::type
SASTestingInput::text
SASTestingInput::recordedSpeechURL
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[SASSignalConnectionListener listener:didReceiveConnection:withContext:]
<SiriLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@ longPressBehavior: %@>
longPressBehavior
+[SASSignalServer serverForConnection:]
-[SASSignalServer _setConnection:]
-[SASSignalServer _setConnection:]_block_invoke_2
-[SASSignalServer _setConnection:]_block_invoke
+[SASSignalServer _unregisterConnection:]
-[SASSignalServer registerButtonIdentifier:withUUID:]
-[SASSignalServer unregisterButtonIdentifier:withUUID:]
-[SASSignalServer registerNonButtonSourceWithType:withUUID:]
-[SASSignalServer unregisterNonButtonSourceWithType:withUUID:]
-[SASSignalServer activationRequestFromButtonIdentifier:context:]
-[SASSignalServer deactivationRequestFromButtonIdentifier:context:options:]
-[SASSignalServer _activationRequestFromDirectActionEventWithContext:completion:]
-[SASSignalServer activationRequestFromContinuityWithContext:]
-[SASSignalServer activationRequestFromRemotePresentationBringUpWithContext:]
-[SASSignalServer activationRequestFromBreadcrumb]
-[SASSignalServer activationRequestFromBluetoothKeyboardActivation:]
-[SASSignalServer activationRequestFromSimpleActivation:]
-[SASSignalServer activationRequestFromSpotlightWithContext:]
-[SASSignalServer activationRequestFromTestingWithContext:]
-[SASSignalServer prewarmFromButtonIdentifier:]
-[SASSignalServer prewarmFromButtonIdentifier:longPressInterval:]
-[SASSignalServer cancelPrewarmFromButtonIdentifier:]
-[SASSignalServer buttonDownFromButtonIdentifier:timestamp:context:]
-[SASSignalServer buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:]
-[SASSignalServer buttonTapFromButtonIdentifier:]
-[SASSignalServer buttonLongPressFromButtonIdentifier:context:]
-[SASSignalServer registerAssertionWithIdentifier:reason:]
-[SASSignalServer unregisterAssertionWithIdentifier:]
-[SASSignalServer registerButtonEventListenerWithIdentifier:]
-[SASSignalServer unregisterButtonEventListenerWithIdentifier:]
-[SASPresentationConnectionListener listener:didReceiveConnection:withContext:]
-[SASPresentationModel flushEnqueuedButtonEventCompletions]
<SiriContinuityContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@ requestInfo:%@ userActivity:%@>
requestInfo
userActivity
<SiriBluetoothContext contextOverride:%@ isTemporaryDevice:%@ isEyesFree:%@ address:%@>
isEyesFree
address
SiriActivationSource
SiriPresentationOptions
NSCopying
NSSecureCoding
NSCoding
_SiriPresentationOptionsMutation
SiriPresentationOptionsMutating
NSObject
SiriPresentationOptionsMutability
SASRequestOptionsBuilder
SASOverriddenSystemState
SiriButtonIdentifier
SASHeater
SASSiriPocketStateManager
CMPocketStateDelegate
SiriPunchoutRequest
SASAnalytics
SASMyriadController
SASLockStateMonitorDelegate
AFMyriadDelegate
SiriContextOverride
SASPresentationClientInterface
SASPresentationServerInterface
SASPresentationServer
SiriTVActivationSource
SiriClientAdditions
SASBoardServicesConfiguration
SiriVoiceTriggerContext
SASTipKitSignalEmitter
SiriActivationService
SASRequestOptionsBuilderDataSource
SASRequestOptionsBuilderDataSourceForTesting
SASHeaterDelegate
SASMyriadControllerDelegate
SASBulletinManagerDelegate
SASStateChangeListener
SASPresentationManagerDelegate
SiriSpotlightSource
SiriDirectActionContext
SASPresentationManager
SiriDismissalOptions
SASPresentationDecision
SiriRemotePresentationBringUpContext
SiriSimpleActivationSource
SiriTestingSource
SiriTestingContext
SiriLongPressButtonSource
SiriLongPressButtonConfigurationUpdateDelegate
SiriButtonSource
SiriActivationSourceContext
SiriPresentationIdentifier
SiriPresentationActivationCancelReason
SiriHomeAffordanceSuppression
SiriActivityAssertion
SiriAssertion
SiriActivationEventType
SASActivationRequest
SASButtonActvationRequest
SASBulletinManager
BBObserverDelegate
SASPresentationState
_SASPresentationStateMutation
SASPresentationStateMutating
SASPresentationStateMutability
SiriActivationButtonEventListener
SiriActivationAssertion
SiriBluetoothKeyboardActivationSource
SiriRemotePresentationBringUpSource
SASButtonIdentifierTransport
SASTimeIntervalTransport
SiriPresentationIdentifierTransport
SiriPresentationActivationCancelReasonTransport
SASLockStateTransport
SASRemoteRequestManager
SASRequestOptions
SiriBreadcrumbSource
SiriLongPressButtonConfigurationUpdateManager
SiriContinuitySource
SASLockStateMonitor
SASSystemState
SASEmptyProtocol
CARSessionObserving
SASActivationCondition
SASActivationDecision
SiriContext
SASRequestTrigger
SiriSpotlightContext
SiriTVLongPressButtonContext
SiriShortPressButtonContext
SASTestingInputController
SiriHearstLongPressButtonContext
SiriLongPressButtonConfiguration
SASBulletinCacheNode
SASBulletinCache
SASBluetoothEndpointUtility
SiriDirectActionSource
SASUnderstandingOnDeviceAssetsState
SASTestingInput
_SASTestingInputMutation
SASTestingInputMutating
SASTestingInputMutability
SASSignalConnectionListener
BSServiceConnectionListenerDelegate
SiriLongPressButtonContext
SiriBluetoothDeviceSource
SASSignalClientInterface
SASSignalServerInterface
SASSignalServer
SASPresentationConnectionListener
SASPresentationModel
SiriContinuityContext
SiriBluetoothContext
init
UUID
UUIDString
invalidate
dealloc
sharedSystemState
siriIsSupported
siriIsEnabled
numberWithBool:
boolValue
isEnabled
isActive
activeChangedTo:
identifier
setIdentifier:
.cxx_destruct
_connection
_lock
_active
_knowsIfActive
_identifier
T@"NSString",&,N,V_identifier
length
objectForKey:
integerValue
isMainThread
processInfo
systemUptime
newWithBuilder:
description
initWithFormat:
numberWithInteger:
arrayWithObjects:count:
componentsJoinedByString:
hash
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
requestSource
decodeObjectOfClass:forKey:
initWithWakeScreen:hideOtherWindowsDuringAppearance:rotationStyle:requestSource:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithBuilder:
isEqual:
_wakeScreen
_hideOtherWindowsDuringAppearance
_rotationStyle
_requestSource
TB,R,N,V_wakeScreen
TB,R,N,V_hideOtherWindowsDuringAppearance
Tq,R,N,V_rotationStyle
Tq,R,N,V_requestSource
initWithBaseModel:
copy
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setWakeScreen:
setHideOtherWindowsDuringAppearance:
setRotationStyle:
setRequestSource:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
_siriIsEnabled
setPresentationIdentifier:
_createRequestOptionsForRequest:withDataSource:
presentationIdentifier
requestOptionsBuilder:uiPresentationIdentifierWithActivation:activationPresentation:
systemState
initWithRequestSource:uiPresentationIdentifier:systemState:
requestOptionsBuilder:isPredictedRecordRouteIsZLLWithActiviation:
setPredictedRecordRouteIsZLL:
isButtonRequest
buttonDownTimestamp
accessibilityShortcutEnabled
isForStark
setButtonDownTimestamp:
longPressBehavior
setLongPressBehavior:
context
setShortButtonPressAction:
remoteType
setTvRemoteType:
isPTTEligible
setIsTVRemoteSourcePTTEligible:
buttonIdentifier
setTimestamp:
computedActivationTime
requestOptionsBuilder:isRequestInitialWithActiviation:
setInitialBringUp:
requestOptionsBuilder:shouldRequestUseAutomaticEndpointingWithActiviation:
setUseAutomaticEndpointing:
requestOptionsBuilder:isAcousticIdAllowedWithActiviation:
setAcousticIdEnabled:
isDirectActionRequest
directActionEvent
setDirectActionEvent:
payload
mutableCopy
allKeys
containsObject:
removeObjectForKey:
setAppBundleIdentifier:
bulletin
setBulletin:
bundleId
notification
setNotification:fromSourceApp:
appBundleIdentifier
setAssociatedBundleIdentifier:
setContextDictionary:
setDirectActionApplicationContext:
directActionApplicationContext
setRequestInfo:
testingRequestInfo
isBluetoothRequest
address
setActivationDeviceIdentifier:
activeDeviceBluetoothIdentifier
isContinuityRequest
requestInfo
userActivity
setContinuityInfo:
activationEvent
isEqualToString:
isSpotlightRequest
utteranceText
setText:
isTestingRequest
requestOptionsBuilder:optionsForOverriding:withActiviation:
speechRequestOptions
activationDeviceIdentifier
requestOptionsBuilder:currentLockStateForActivation:
setCurrentLockState:
setSpeechRequestOptions:
siriIsRestricted
buildOptionsWithRequest:presentationIdentifier:dataSource:
setSystemState:
_systemState
_presentationIdentifier
T@"SASSystemState",&,N,V_systemState
Tq,N,V_presentationIdentifier
stringByAppendingString:
setContextOverride:
lockStateMonitor
setLockStateMonitor:
contextOverride
currentSpokenLanguageCodeForSystemState:
hasUnlockedSinceBootForSystemState:
deviceIsBlockedForSystemState:
deviceIsPasscodeLockedForSystemState:
pocketStateShouldPreventVoiceTriggerForSystemState:
isPadForSystemState:
smartCoverClosedForSystemState:
accessibilityShortcutEnabledForSystemState:
carDNDActiveForSystemState:
isConnectedToCarPlayForSystemState:
isConnectedToTrustedCarPlayForSystemState:
siriIsEnabledForSystemState:
siriIsRestrictedForSystemState:
siriIsSupportedForSystemState:
initWithSystemState:contextOverride:
currentSpokenLanguageCode
hasUnlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
isPad
smartCoverClosed
carDNDActive
isConnectedToCarPlay
isConnectedToTrustedCarPlay
_contextOverride
T@"SiriContextOverride",&,N,V_contextOverride
stringWithFormat:
stringWithSiriButtonIdentifier:
_setPreparationStartTime:
setPreheatTimeInterval:
_cancelPreparation
_suggestPreheat
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setPreheatTimer:
_preparationStartTime
delegate
preheatTimeInterval
heater:cancelledPreparationWithButtonIdentifier:duration:targetDuration:
preheatTimer
heaterSuggestsPreheating:
updatePredictedRouteIsZLL
sharedAVSystemController
pickableRoutesForCategory:andMode:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
prepareForUseAfterTimeInterval:
cancelPreparationForButtonIdentifier:
setDelegate:
predictedRecordRouteIsZLL
_predictedRecordRouteIsZLL
_delegate
_preheatTimer
_preheatTimeInterval
preparationStartTime
Td,N,G_preparationStartTime,S_setPreparationStartTime:,V_preparationStartTime
TB,N,V_predictedRecordRouteIsZLL
T@"NSTimer",&,N,V_preheatTimer
Td,N,V_preheatTimeInterval
T@"<SASHeaterDelegate>",W,N,V_delegate
_init
_setPocketStateManager:
_pocketStateManager
_setCurrentPocketState:
_updateForPocketState:
_stringForPocketState:
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
voiceTriggerEventInfo
_currentPocketState
sharedManager
pocketStateManager:didUpdateState:
queryForPocketStateWithCompletion:
pocketStateShouldPreventVoiceTriggerForActivationRequest:
pocketStateManager
T@"CMPocketStateManager",&,N,G_pocketStateManager,S_setPocketStateManager:,V_pocketStateManager
currentPocketState
Tq,N,G_currentPocketState,S_setCurrentPocketState:,V_currentPocketState
bundleIdentifier
setBundleIdentifier:
setUrl:
punchoutStyle
setPunchoutStyle:
_bundleIdentifier
_url
_punchoutStyle
T@"NSString",C,N,V_bundleIdentifier
T@"NSURL",C,N,V_url
Tq,N,V_punchoutStyle
service
xcTestingActive
_enqueueAnalyticsEvent:
shouldLogAnalyticsEvents
flushPendingAnalyticsEventQueue
sharedAnalytics
logEvent:
pendingAnalyticsEventQueue
initWithCapacity:
setPendingAnalyticsEventQueue:
count
removeObjectsInRange:
addObject:
logEvents:
analytics
enqueueCurrentAnalyticsEventWithType:context:
setShouldLogAnalyticsEvents:
_analyticsEventQueue
_shouldLogAnalyticsEvents
_pendingAnalyticsEventQueue
TB,N,V_shouldLogAnalyticsEvents
T@"NSMutableArray",&,N,V_pendingAnalyticsEventQueue
_configureMotionActivityManager
configurationForDefaultMainDisplayMonitor
_updateRaiseToWakeTimeForTransition:
setTransitionHandler:
monitorWithConfiguration:
initWithDelegate:
stopActivityUpdates
isVoiceRequest
initWithFloat:
activateForRequest:withTimeout:visible:
instrumentationUpdateBoost:value:
isVoiceTrigger
myriadContext
setCanceledByMyriad:
startAdvertisingFromInTaskVoiceTriggerWithContext:
startAdvertisingFromInTaskVoiceTrigger
startAdvertisingFromVoiceTriggerAdjusted:withContext:
startAdvertisingFromVoiceTriggerAdjusted:
startAdvertisingFromDirectTriggerWithContext:
startAdvertisingFromDirectTrigger
floatValue
currentCoordinator
transitionReasons
shouldContinue:
shouldAbort:
isActivityAvailable
currentThread
qualityOfService
mainQueue
stationary
startActivityUpdatesToQueue:withHandler:
didChangeLockState:
didChangeLockState:toState:
willStartWithSession:
willEndSession:
shouldAbortAnotherDeviceBetter:
shouldUnduck:
shouldHandleEmergency:
advertisingWillBeginWithDelay:advertisingInterval:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
myriadCoordinatorWillHandleEmergency:
myriadCoordinatorDidHandleEmergency:
activateForRequest:visible:
activateForInTaskRequest:isVisible:
canceledByMyriad
_myriadCoordinator
_isLocked
_myriadFinishedSemaphore
_displayMonitor
_raiseToWakeTime
_unlockTime
_lockStateMonitor
_isStationary
_liftEndTime
_activityManagerLock
_activityManager
_canceledByMyriad
TB,N,V_canceledByMyriad
setCurrentSpokenLanguageCode:
setUnlockedSinceBoot:
setDeviceIsBlocked:
setDeviceIsPasscodeLocked:
setPocketStateShouldPreventVoiceTrigger:
setPad:
setSmartCoverClosed:
setAccessibilityShortcutEnabled:
setCarDNDActive:
setConnectedToTrustedCarPlay:
setConnectedToCarPlay:
setSiriIsEnabled:
setSiriIsRestricted:
setSiriIsSupported:
unlockedSinceBoot
connectedToCarPlay
connectedToTrustedCarPlay
overrideCurrentSpokenLanguageCode:
overrideHasUnlockedSinceBoot:
overrideDeviceIsBlocked:
overrideDeviceIsPasscodeLocked:
overridePocketStateShouldPreventVoiceTrigger:
overrideIsPad:
overrideSmartCoverClosed:
overrideAccessibilityShortcutEnabled:
overrideCarDNDActive:
overrideConnectedToTrustedCarPlay:
overrideConnectedToCarPlay:
overrideSiriIsEnabled:
overrideSiriIsRestricted:
overrideSiriIsSupported:
_currentSpokenLanguageCode
_unlockedSinceBoot
_deviceIsBlocked
_deviceIsPasscodeLocked
_pocketStateShouldPreventVoiceTrigger
_pad
_smartCoverClosed
_accessibilityShortcutEnabled
_carDNDActive
_connectedToCarPlay
_connectedToTrustedCarPlay
_siriIsRestricted
_siriIsSupported
T@"NSString",&,N,V_currentSpokenLanguageCode
T@"NSNumber",&,N,V_unlockedSinceBoot
T@"NSNumber",&,N,V_deviceIsBlocked
T@"NSNumber",&,N,V_deviceIsPasscodeLocked
T@"NSNumber",&,N,V_pocketStateShouldPreventVoiceTrigger
T@"NSNumber",&,N,V_pad
T@"NSNumber",&,N,V_smartCoverClosed
T@"NSNumber",&,N,V_accessibilityShortcutEnabled
T@"NSNumber",&,N,V_carDNDActive
T@"NSNumber",&,N,V_connectedToCarPlay
T@"NSNumber",&,N,V_connectedToTrustedCarPlay
T@"NSNumber",&,N,V_siriIsEnabled
T@"NSNumber",&,N,V_siriIsRestricted
T@"NSNumber",&,N,V_siriIsSupported
initWithKeyOptions:valueOptions:capacity:
setObject:forKey:
_unregisterConnection:
setInvalidationHandler:
setInterruptionHandler:
configureConnection:
_setConnection:
unregisterSiriPresentationIdentifier:
connection
stringWithSiriPresentationIdentifier:
remoteProcess
hasEntitlement:
invalidated
setConnection:
serviceQuality
setServiceQuality:
interface
setInterface:
setInterfaceTarget:
serverDidInvalidateConnection:
activate
waitForConnectBlocks
setWaitForConnectBlocks:
remoteTarget
registerPresentationIdentifier:
unregisterPresentationIdentifier:
willDismiss
didDismiss
didPresentSiri
resetSiriToActive
failedToPresentSiriWithError:
didUpdatePresentationState:
allBulletins
bulletinsOnLockScreen
bulletinForIdentifier:
speechRequestStartedFromSiriOrb
speechRequestCancelledFromSiriOrb
pong
protocolForProtocol:
presentationRequestedWithPresentationOptions:requestOptions:
presentationDismissalRequestedWithOptions:
handleRequestWithOptions:
presentationisIdleAndQuiet
preheat
cancelPreheat
cancelPendingActivationEventWithReason:
wakeScreenAfterActivationWithReason:
presentationWithIdentifier:didUpdatePresentationState:
handleTestingActivation:
handleButtonDownFromButtonIdentifier:timestamp:context:
handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:context:
updateCurrentLockState:
bulletinManagerDidChangeBulletins
deviceWonMyriadElection
activationDeterminedShouldDeferWake:
ping
interfaceWithServer:client:
userInteractive
pongWithPresentationIdentifier:
siriPresentationIdentifier
registerSiriPresentation:withIdentifier:
siriPresentationWillDismissWithIdentifier:
siriPresentationDismissedWithIdentifier:
siriPresentationDisplayedWithIdentifier:
siriPresentationFailureWithIdentifier:error:
siriPresentationDidUpdateState:
speechRequestStateDidChange:
serverForConnection:
workspaceServiceInjector
setWorkspaceServiceInjector:
setInvalidated:
weak_delegate
setWeak_delegate:
_invalidated
_workspaceServiceInjector
_waitForConnectBlocks
_weak_delegate
T@"BSServiceConnectionEndpointInjector",&,N,V_workspaceServiceInjector
T@"BSServiceConnection<BSServiceConnectionHost>",&,N,V_connection
TB,N,V_invalidated
T@"NSMutableArray",&,N,V_waitForConnectBlocks
T@"<SASPresentationServerDelegate>",W,N,V_weak_delegate
_initWithButtonIdentifier:
setLongPressInterval:
setContext:
setActiveDeviceBluetoothIdentifier:
setRemoteType:
setIsListening:
setSourcePTTEligibility:
activationSourceForIdentifier:
setDeviceIdentifier:
setListening:
_deviceIdentifier
setPTTEligible:
deviceIdentifier
longPressInterval
_remoteType
_longPressInterval
_context
Td,N,V_longPressInterval
T@"SiriLongPressButtonContext",&,N,V_context
T@"NSString",C,N,V_deviceIdentifier
TQ,N,V_remoteType
getServiceSetting:key:
isServiceSupported:
device
ac_isEyesFree
setMachServiceIdentifier:
setPresentationDomain:
setSignalDomain:
setSignalIdentifier:
presentationDomain
signalDomain
signalIdentifier
configuration
domainForService:
identifierForService:
machServiceIdentifier
_machServiceIdentifier
_presentationDomain
_signalDomain
_signalIdentifier
T@"NSString",&,N,V_machServiceIdentifier
T@"NSString",&,N,V_presentationDomain
T@"NSString",&,N,V_presentationIdentifier
T@"NSString",&,N,V_signalDomain
T@"NSString",&,N,V_signalIdentifier
discoverabilitySignal
source
_checkAndEmitSignalsWithSource:forRequestOptions:
initWithIdentifier:bundleID:context:
sendEvent:
checkAndEmitSignalsForRequestOptions:
setSources:
setActivationAssertions:
setXcTestingActive:
setHeater:
heater
setSiriTetherIsAttached:
setSiriTether:
siriTether
setAttachmentStatusChangedHandler:
manager
setRemoteRequestManager:
addStateChangeListener:
setUodAssetsState:
setBulletinManager:
bulletinManager
_registerForVoiceTrigger
setAvExternalButtonEvents:
setButtonDownHasOccurredSinceActivation:
setPresentationManagerDelegate:
setButtonEventListeners:
removeStateChangeListener:
requestState
sources
allValues
buttonEventListeners
buttonDownWithButtonIdentifier:forListenerIdentifier:atTimestamp:
initWithTimeInterval:
enumerateKeysAndObjectsUsingBlock:
buttonUpWithButtonIdentifier:forListenerIdentifier:atTimestamp:
buttonLongPressWithButtonIdentifier:forListenerIdentifier:atTimestamp:
initWithPayload:
initWithDirectActionContext:
setRequest:
setButtonTriggerStateActive:
setPocketStateManager:
afPreferences
setPreferences:
_requestState
setRequestState:
uodAssetsState
canActivateForCondition:
setCanActivateFromDirectActionSource:
_notifySourcesOfCanActivateFromDirectActionSourceChange:
canActivateChangedTo:
unregisterSiriPresentationWithIdentifier:
presentationWithPresentationIdentifierBecameActive:
presentationWithPresentationIdentifierBeganStopping:
presentationWithPresentationIdentifierBecameOff:
presentationDidUpdateState:
_shouldRejectNewActivations:
_updateCanActivateFromDirectActionSource
activationAssertions
activePresentationsAreIdleAndQuiet
isValid
presentationsAreIdleAndQuiet
initWithButtonIdentifier:context:
handleActivationRequest:
initWithDeactivationOptions:
dismissSiriWithOptions:
scheduledTimerWithTimeInterval:repeats:block:
isConnectedTo188
_B188ActivationEvent:context:options:
initWithContextOverride:
buttonLongPressFromButtonIdentifier:context:
sharedPreferences
assistantIsEnabled
stringWithSiriActivationEventType:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
_defrost
_attachToTether
cancelAllPreheatedPresentations
_notifyListenersOfButtonDownWithButtonIdentifier:atTimestamp:
_shouldRejectActivationWithButtonIdentifier:activationAssertions:
initWithSiriButtonIdentifier:
sendButtonEventCompletionToPresentations:forButtonEventType:
_recordTimeIfNeededForButtonIdentifier:buttonDownTimestamp:
_notifyListenersOfButtonUpWithButtonIdentifier:atTimestamp:
_handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:
_buttonIsTVMicrophoneButton:
activationRequestFromButtonIdentifier:context:
_cancelPendingActivationEventWithReason:
_notifyListenersOfButtonLongPressWithButtonIdentifier:atTimestamp:
_buttonIsAVExternalButton:
isATV
buttonDownHasOccurredSinceActivation
avExternalButtonEvents
doubleValue
activationTimestamp
buttonTapFromButtonIdentifier:
designModeIsEnabled
_handleDesignModeRequest
initWithContinuityContext:
initWithVoiceTriggerContext:
initWithBreadcrumbRequest
initWithBluetoothKeyboardShortcutActivation:
initWithRemotePresentationBringUpContext:
initWithSimpleActivation:
initWithSpotlightContext:
initWithVoiceTriggerRequest
initWithTestingContext:
handleActivationRequest:systemState:
activationType
eventSource
date
timeIntervalSince1970
setObject:forKeyedSubscript:
vehicleName
vehicleModel
vehicleManufacturer
_cancelActivationPreparationForSetup
isUIFreeRequestSource
nextPresentationToActivate
setVehicleManufacturer:
setVehicleModel:
setVehicleName:
instrumentationEvents
testingInputController
dequeuePreloadedTestingContext
testingContext
setTestingContext:
_updateRequestOptionsWithTestingContextFromActivationRequest:requestOptions:
_activatePresentationWithIdentifier:requestOptions:analyticsContext:
_logActivationToPowerLogWithReason:
activePresentations_handleRequestWithOptions:
_dismissSiri:
_shouldHandlePocketStateFetchForRequestOptions:
presentationWithPresentationIdentifier:activationDeterminedShouldDeferWake:
_handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:
isHTTRequestSource
setActivationTimestamp:
presentationWithPresentationIdentifierBeganStarting:
uiPresentationIdentifier
_isVoiceActivationMaskNecessaryWithRequestOptions:
presentationRequestedWithPresentationIdentifier:presentationOptions:requestOptions:
_pocketStateFetchingInProgressForHeadsetActivation
_setPocketStateFetchingInProgressForHeadsetActivation:
presentationWithPresentationIdentifierWakeScreenAfterActivation:reason:
startingAndActiveAndStoppingPresentations_presentationDismissalRequestedWithOptions:
preheatNextPresentationToActivate
attach:
stringWithSiriPresentationActivationCancelReason:
startingPresentations_cancelPendingActivationWithReason:
_isInitialRequest
isConnectedToEyesFreeDevice
isConnectedToBluetoothVehicle
lockState
_preheatPresentation
numberWithUnsignedInteger:
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:shouldTurnScreenOff:
activePresentations_deviceWonMyriadElection
activeAndStartingPresentations_updateCurrentLockState:
activePresentations_bulletinManagerDidChangeBulletins
_notifySourcesOfActiveChange:
initWithDeactivationOptions:animated:dismissalReason:
containsRecognitionStrings
containsAudioInput
firstObject
fileURLWithPath:isDirectory:
checkResourceIsReachableAndReturnError:
setSpeechFileURL:
dictionaryWithDictionary:
dictionary
bulletinManagerDidChangeBulletins:
callStateChangedToIsActive:isOutgoing:
presentationManager:didChangeShouldRejectNewActivationsTo:
presentationManager:didEncounterError:
registerActivationSource:withIdentifier:
unregisterActivationSourceIdentifier:
registerActivationAssertion:withIdentifier:
unregisterActivationAssertionWithIdentifier:
registerButtonEventListenerServer:identifier:
unregisterButtonEventListenerWithIdentifier:
deactivationRequestFromButtonIdentifier:context:options:
prewarmFromButtonIdentifier:longPressInterval:
cancelPrewarmFromButtonIdentifier:
buttonDownFromButtonIdentifier:timestamp:context:
buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:
activationRequestFromDirectActionEventWithContext:completion:
activationRequestFromContinuityWithContext:
activationRequestFromVoiceTriggerWithContext:
activationRequestFromBreadcrumb
activationRequestFromBluetoothKeyboardActivation:
activationRequestFromRemotePresentationBringUpWithContext:
activationRequestFromSimpleActivation:
activationRequestFromSpotlightWithContext:
activationRequestFromVoiceTrigger
activationRequestFromTestingWithContext:
updatePredicatedRecordRoute
activationRequestFromTestRunnerWithContext:
_unregisterForVoiceTrigger
setAfPreferences:
siriTetherIsAttached
voiceTriggerNotifyTokenIsValid
setVoiceTriggerNotifyTokenIsValid:
remoteRequestManager
setTestingInputController:
canActivateFromDirectActionSource
bluetoothEndpointUtil
setBluetoothEndpointUtil:
presentationManager
setPresentationManager:
_buttonTrigger
_preheatedPresentation
_voiceTriggerNotifyToken
_voiceTriggerDispatchQueue
_B188ActivationTimer
_myriadController
_xcTestingActive
_siriTetherIsAttached
_voiceTriggerNotifyTokenIsValid
_buttonDownHasOccurredSinceActivation
_canActivateFromDirectActionSource
_afPreferences
_uodAssetsState
_sources
_activationAssertions
_buttonEventListeners
_heater
_siriTether
_activationTimestamp
_bulletinManager
_remoteRequestManager
_testingInputController
_avExternalButtonEvents
_bluetoothEndpointUtil
_presentationManager
T@"AFPreferences",&,N,V_afPreferences
T@"SASLockStateMonitor",&,N,V_lockStateMonitor
T@"SASUnderstandingOnDeviceAssetsState",&,N,V_uodAssetsState
TB,N,V_xcTestingActive
T@"NSMutableDictionary",&,N,V_sources
T@"NSMutableDictionary",&,N,V_activationAssertions
T@"NSMutableDictionary",&,N,V_buttonEventListeners
T@"SASHeater",&,N,V_heater
T@"AFSiriTether",&,N,V_siriTether
TB,N,V_siriTetherIsAttached
Td,N,V_activationTimestamp
TB,N,V_voiceTriggerNotifyTokenIsValid
T@"SASBulletinManager",&,N,V_bulletinManager
T@"SASRemoteRequestManager",&,N,V_remoteRequestManager
T@"SASTestingInputController",&,N,V_testingInputController
T@"NSMutableDictionary",&,N,V_avExternalButtonEvents
TB,N,V_buttonDownHasOccurredSinceActivation
TB,N,V_canActivateFromDirectActionSource
pocketStateFetchingInProgressForHeadsetActivation
TB,N,G_pocketStateFetchingInProgressForHeadsetActivation,S_setPocketStateFetchingInProgressForHeadsetActivation:,V_pocketStateFetchingInProgressForHeadsetActivation
T@"SASBluetoothEndpointUtility",&,N,V_bluetoothEndpointUtil
T@"SASPresentationManager",&,N,V_presentationManager
configureConnection
endpointForMachName:service:instance:
connectionWithEndpoint:
unregisterNonButtonSourceWithType:withUUID:
registerNonButtonSourceWithType:withUUID:
setActivationHandler:
activateWithContext:
_directActionEventFromContentTypesOfBulletin:notification:
_directActionEventFromAppIdsAndIntentIdentifiersOfBulletin:notification:
valueForKey:
sectionID
sourceIdentifier
setWithObjects:
decodeObjectOfClasses:forKey:
intentIDs
intentIdentifiers
contentType
request
content
caseInsensitiveCompare:
_intentIdentifiersFromBulletin:notification:
containsString:
_initWithDirectActionEvent:appBundleId:conversationGUID:fullName:phoneOrEmailAddress:
messageAmbiguousDirectActionWithAppBundleId:
messageComposeDirectActionWithAppBundleId:
messageComposeNewThreadDirectActionWithAppBundleId:fullName:phoneOrEmailAddress:
messageReadDirectActionWithAppBundleId:conversationGUID:
messageReplyDirectActionWithAppBundleId:conversationGUID:
mapSearchDirectActionWithAppBundleId:
mapShareEtaDirectActionWithAppBundleId:
musicSearchDirectActionWithAppBundleId:
phoneAmbiguousDirectActionWithAppBundleId:
phoneCallDirectActionWithAppBundleId:
appLaunchDirectActionWithAppBundleId:
initWithBBBulletin:
initWithUNNotification:
_payload
_bulletin
_notification
T@"NSDictionary",R,N,V_payload
T@"BBBulletin",R,N,V_bulletin
T@"UNNotification",R,N,V_notification
_presentationsLock_cancelAllPreheatedPresentations
initWithPresentationServer:
presentationState
_presentationsLock_broadcastPresentationStateForIdentifier:presentationState:presentationIdentifiersToInform:
_notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary
_presentationsLock_nextPresentationToActivate
presentationServer
_shouldRejectNewActivations
enqueuedButtonEventCompletions
_sendBlockToActivePresentations:
initWithSiriPresentationActivationCancelReason:
_sendBlockToStartingPresentations:
initWithSASLockState:
_sendBlockToStoppingPresentations:
_canTransitionFromState:toState:presentationIdentifier:
_canTransitionToOffFromState:
_canTransitionToHeatedFromState:
_canTransitionToStoppingFromState:
_canTransitionToStartingFromState:
_canTransitionToActiveFromState:presentationIdentifier:
_transitionPresentationWithPresentationIdentifier:toState:
flushEnqueuedButtonEventCompletions
_setupPingTimerForPresentationIdentifier:
_teardownPingTimerForPresentationIdentifier:
activationPresentationForPresentationIdentifiers:
_sendBlock:toPresentationWithPresentationIdentifier:
_shouldKeepPingingForRequestState:
_waitForPongFromPresentationWithPresentationIdentifier:
timerWithTimeInterval:repeats:block:
pingTimer
setPingTimer:
currentRunLoop
addTimer:forMode:
_forceAllPresentationsOff
setPresentationState:
array
initWithSiriPresentationIdentifier:
_canTransitionFromState:toState:
presentations
setPresentations:
_lastReportedShouldRejectNewActivations
_presentationManagerDelegate
_presentations
T@"NSMutableDictionary",&,N,V_presentations
initWithDeactivationOptions:animated:requestCancellationReason:
deactivationOptions
animated
reason
dismissalReason
shouldTurnScreenOff
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
initWithDeactivationOptions:animated:
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:
_animated
_shouldTurnScreenOff
_deactivationOptions
_reason
_dismissalReason
TQ,R,N,V_deactivationOptions
TB,R,N,V_animated
Tq,R,N,V_reason
TQ,R,N,V_dismissalReason
TB,R,N,V_shouldTurnScreenOff
activateFromSource:
initWithPPTContext:siriContextOverride:
initWithRecognitionStrings:siriContextOverride:
initWithAudioInput:siriContextOverride:
initWithRequestInfo:recognitionStrings:siriContextOverride:
initWithPPTContext:
initWithRecognitionStrings:
initWithAudioInput:
initWithRequestInfo:recognitionStrings:
_testingContext
_testingRequestInfo
T@"NSDictionary",R,N,V_testingContext
T@"AFRequestInfo",R,N,V_testingRequestInfo
setButtonIdentifier:
setLock_activityAssertions:
initWithButtonIdentifier:
setConfiguration:
setCurrentTimeGenerator:
unregisterButtonIdentifier:withUUID:
registerButtonIdentifier:withUUID:
lock_activityAssertions
reference
initWithString:
timestamp
removeObject:
initWithIdentifier:reference:reason:timestamp:invalidationBlock:
currentTimeGenerator
prepareForActivationWithTimestamp:
_timestampForSpeechInteractionActivityWithTimestamp:
_shouldReplaceSpeechInteractionActivityTimestampWithPrewarmTimestamp
lastObject
_sourceSupportsAutomaticConfigurationUpdates
startManagingConfigurationFromSource:withDelegate:
stopManagingAllConfigurations
configurationDidUpdateOnLongPressSource:
longPressButtonForIdentifier:
configurationUpdateManager:configurationDidUpdateForLongPressSource:
prepareForActivation
speechInteractionActivityWithTimestamp:
didRecognizeButtonSinglePressUp
didRecognizeLongPress
requestConfigurationUpdatesBasedOnDeviceSettings
stopConfigurationUpdates
updateManager
setUpdateManager:
_configuration
_buttonIdentifier
_lock_activityAssertions
_currentTimeGenerator
_updateManager
Tq,N,V_buttonIdentifier
T@"NSMutableArray",&,N,V_lock_activityAssertions
T@?,C,N,V_currentTimeGenerator
T@"SiriLongPressButtonConfiguration",C,N,V_configuration
T@"SiriLongPressButtonConfigurationUpdateManager",&,N,V_updateManager
T@"<SiriLongPressButtonSourceDelegate>",W,N,V_delegate
cancelReason
stringWithSiriHomeAffordanceSuppression:
invalidatedAtTimestamp:
_reference
_timestamp
_invalidationBlock
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_reason
T@"NSString",R,C,N,V_reference
Td,R,N,V_timestamp
valid
TB,R,D,N,GisValid
setActivationTime:
setButtonDownTime:
setActivationType:
requestSourceForButtonIdentifier:
setActivationEvent:
activationEventTime
isDeviceButtonRequest
activationTime
isEyesFree
isRemoteDisplayVoiceRequest
isHoldToTalkSource
isEyesFreeRequestSource
isRemotePresentationBringUpRequest
buttonDownTime
_waketimeMIB
_waketimeMIBSize
_activationType
_activationEvent
_activationTime
_buttonDownTime
Tq,N,V_requestSource
Tq,N,V_activationType
Tq,N,V_activationEvent
T@"SiriContext",&,N,V_context
Td,N,V_activationTime
Td,N,V_buttonDownTime
_setupObserver
setObserverFeed:
applicationProxyForIdentifier:
localizedNameForContext:
title
cachedBulletinForID:
setRead:
_displayNameForBulletin:
setDisplayName:
addBulletinCompletionWithBulletin:forFeed:
bulletinID
availableOnLockScreen
setAvailableOnLockScreen:
bbBulletin
insertBulletin:fromFeed:
_bulletinsDidChange
removeBulletinForID:
modifyBulletinCompletionWithBulletin:
observer:purgeReferencesToBulletinID:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
_observer
_bulletinCache
_bulletinsOnLockScreen
T@"<SASBulletinManagerDelegate>",W,N,V_delegate
initWithPresentationIdentifier:
T@"NSString",R,C,N,V_presentationIdentifier
listeners
configureConnectionForIdentifier:
_registerListenerWithIdentifier:
registerButtonEventListenerWithIdentifier:
timeInterval
buttonEventListenerDidReceiveButtonDownWithButtonIdentifier:atTimestamp:
buttonEventListenerDidReceiveButtonUpWithButtonIdentifier:atTimestamp:
buttonEventListenerDidReceiveButtonLongPressWithButtonIdentifier:atTimestamp:
listener
registerWithListener:identifier:
unregisterListenerWithIdentifier:
setListeners:
_listeners
T@"NSMutableDictionary",&,N,V_listeners
setReason:
registerAssertionWithIdentifier:reason:
unregisterAssertionWithIdentifier:
initWithIdentifier:reason:
TQ,N,V_reason
_identifierMatchesSiriButtonIdentifier:
siriButtonIdentifier
setTransport:
transport
_transport
T@"NSNumber",&,N,V_transport
longValue
T@"NSNumber",&,N,V_identifier
unsignedIntegerValue
SASLockState
arrayWithCapacity:
setRemoteRequestWatcher:
remoteRequestWatcher
_handleRemotePrewarmWithInfo:
setPrewarmHandler:
_handleNewRemoteRequestWithInfo:
setNewRequestHandler:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:
setDismissalHandler:
initWithSpeechRequestOptions:
setNewSpeechRequestHandler:
invalidateIntentDelivery
initWithBundleIdentifier:
deliverIntent:reply:
setIntentHandler:
initWithBundleIdentifier:intentForwardingAction:
deliverIntentForwardingActionWithResponseHandler:
setIntentForwardingActionHandler:
event
deviceID
setButtonEventHandler:
initWithDomain:code:userInfo:
_requestWatcherVoiceActivationEnabled
_startFetchingPocketStateUpdates
_handleRequestWatcherVoiceTriggerRequestWithInfo:
text
initWithRequestInfo:
setHasPendingVoiceTriggerActivation:
setPendingVoiceTriggerActivationInfo:
currentVoiceTriggerRestriction
setCurrentVoiceTriggerRestriction:
pendingVoiceTriggerRestrictionCount
_handlePendingVoiceTriggerActivationsWithInfo:
logEventWithType:context:
_dismissalReasonForDeactivationReason:
setPendingVoiceTriggerRestrictionCount:
hasPendingVoiceTriggerActivation
pendingVoiceTriggerActivationInfo
_processPendingVoiceTriggerActivationsWithInfo:delay:
currentAppIntentDeliverer
setCurrentAppIntentDeliverer:
setCurrentPocketState:
_hasPendingVoiceTriggerActivation
_remoteRequestWatcher
_currentAppIntentDeliverer
_currentVoiceTriggerRestriction
_pendingVoiceTriggerRestrictionCount
_pendingVoiceTriggerActivationInfo
T@"AFRemoteRequestWatcher",&,N,V_remoteRequestWatcher
T@"INAppIntentDeliverer",&,N,V_currentAppIntentDeliverer
TQ,N,V_currentVoiceTriggerRestriction
TQ,N,V_pendingVoiceTriggerRestrictionCount
TB,N,V_hasPendingVoiceTriggerActivation
T@"AFRequestInfo",&,N,V_pendingVoiceTriggerActivationInfo
T@"CMPocketStateManager",&,N,V_pocketStateManager
Tq,N,V_currentPocketState
initWithRequestSource:uiPresentationIdentifier:
_configureStreamingDictationForSource:
_updateWithSystemState:forcefully:
isTVPushToTalkEnabled
setUseStreamingDictation:
serverCommandId
setServerCommandId:
isPronunciationRequest
setPronunciationRequest:
pronunciationContext
setPronunciationContext:
speechFileURL
expectedTimestamp
setExpectedTimestamp:
isInitialBringUp
useAutomaticEndpointing
useStreamingDictation
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
continuityInfo
acousticIdEnabled
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
setIsConnectedToCarPlay:
isForCarDND
setIsForCarDND:
carDNDStatus
setCarDNDStatus:
currentLockState
currentCarPlaySupportedOEMAppIdList
setCurrentCarPlaySupportedOEMAppIdList:
isShortButtonPressAction
setInstrumentationEvents:
startRecordingSoundId
setStartRecordingSoundId:
originalRequestOptions
setOriginalRequestOptions:
presentationMode
setPresentationMode:
isRightHandDrive
setRightHandDrive:
tvRemoteType
isTVRemoteSourcePTTEligible
decodeDoubleForKey:
decodePropertyListForKey:
encodeDouble:forKey:
previousTurnIdentifier
isRemotePresentationBringUp
appendFormat:
inputType
_isTypeToSiriPermittedAndEnabledForRequestOptions
_isForSpeechRequest
isH1Activation
absoluteString
isEqualToArray:
isForEyesFree
initWithRequestSource:
initWithRequestSource:uiPresentationIdentifier:buttonContext:
isForAppleTV
isForBluetoothCar
isForUIFree
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
isVoiceTriggerRequest
isInAutoPrompt
isATVRemotePTTEligible
updateIfNeededWithSystemState:
setUiPresentationIdentifier:
setPreviousTurnIdentifier:
contextAppInfosForSiriViewController
setContextAppInfosForSiriViewController:
_pronunciationRequest
_isForCarDND
_isConnectedToCarPlay
_rightHandDrive
_initialBringUp
_useAutomaticEndpointing
_useStreamingDictation
_acousticIdEnabled
_releaseAudioSessionOnRecordingCompletion
_isRemotePresentationBringUp
_shortButtonPressAction
_isTVRemoteSourcePTTEligible
_activationDeviceIdentifier
_appBundleIdentifier
_directActionApplicationContext
_directActionEvent
_serverCommandId
_pronunciationContext
_text
_speechFileURL
_expectedTimestamp
_buttonDownTimestamp
_longPressBehavior
_currentCarPlaySupportedOEMAppIdList
_carDNDStatus
_homeButtonUpFromBeep
_continuityInfo
_requestInfo
_speechRequestOptions
_uiPresentationIdentifier
_instrumentationEvents
_previousTurnIdentifier
_contextAppInfosForSiriViewController
_currentLockState
_startRecordingSoundId
_originalRequestOptions
_presentationMode
_tvRemoteType
Tq,N
T@"NSString",C,N,V_activationDeviceIdentifier
T@"AFBulletin",&,N,V_bulletin
T@"NSString",C,N,V_appBundleIdentifier
T@"AFApplicationContext",C,N,V_directActionApplicationContext
Tq,N,V_directActionEvent
T@"NSString",C,N,V_serverCommandId
pronunciationRequest
TB,N,GisPronunciationRequest,V_pronunciationRequest
T@"SASPronunciationContext",&,N,V_pronunciationContext
T@"NSString",C,N,V_text
T@"NSURL",C,N,V_speechFileURL
Td,N,V_expectedTimestamp
Td,N,V_timestamp
Td,N,V_buttonDownTimestamp
Tq,N,V_longPressBehavior
forStark
TB,R,N,GisForStark
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
TB,N,V_isForCarDND
TB,N,V_isConnectedToCarPlay
TQ,N,V_carDNDStatus
rightHandDrive
TB,N,GisRightHandDrive,V_rightHandDrive
TB,R,N
Tq,R,N
initialBringUp
TB,N,GisInitialBringUp,V_initialBringUp
TB,N,V_useAutomaticEndpointing
TB,N,V_useStreamingDictation
T@"NSNumber",&,N,V_homeButtonUpFromBeep
T@"NSDictionary",C,N,V_continuityInfo
T@"AFRequestInfo",&,N,V_requestInfo
T@"AFSpeechRequestOptions",&,N,V_speechRequestOptions
TB,N,V_acousticIdEnabled
TB,N,V_releaseAudioSessionOnRecordingCompletion
TB,R,N,V_isRemotePresentationBringUp
T@"NSString",&,N,V_uiPresentationIdentifier
T@"NSMutableArray",&,N,V_instrumentationEvents
T@"NSUUID",&,N,V_previousTurnIdentifier
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSDictionary",&,N,V_testingContext
TQ,N,V_currentLockState
T@"NSString",C,N,V_startRecordingSoundId
shortButtonPressAction
TB,N,GisShortButtonPressAction,V_shortButtonPressAction
T@"SASRequestOptions",C,N,V_originalRequestOptions
Tq,N,V_presentationMode
TQ,N,V_tvRemoteType
TB,N,V_isTVRemoteSourcePTTEligible
weakToWeakObjectsMapTable
removeObserver:forKeyPath:
_setupKVOMonitoring
_addDelegate:forSource:
_stopKVOMonitoring
removeAllObjects
initWithSuiteName:
userDefaults
addObserver:forKeyPath:options:context:
null
keyEnumerator
observeValueForKeyPath:ofObject:change:context:
stopManagingConfigurationFromSource:
currentLongPressBehavior
setCurrentLongPressBehavior:
monitoringForUpdates
setMonitoringForUpdates:
delegatesBySource
setDelegatesBySource:
_internalUserDefaults
_monitoringForUpdates
_currentLongPressBehavior
_delegatesBySource
Tq,N,V_currentLongPressBehavior
TB,N,V_monitoringForUpdates
T@"NSMapTable",&,N,V_delegatesBySource
setLockState:
isBlocked
isScreenOn
unlockedByTouchID
setUnlockedByTouchID:
setAssistantIsEnabled:
_unlockedByTouchID
_lockState
_assistantIsEnabled
TQ,N,V_lockState
TB,N,V_unlockedByTouchID
T@"NSNumber",&,N,V_assistantIsEnabled
T@"<SASLockStateMonitorDelegate>",W,N,V_delegate
_updateAccessibilityState
monitorCarSessions
weakObjectsHashTable
setLiftToWakeDetected:
initWithName:options:queue:delegate:
languageCode
bestSupportedLanguageCodeForLanguageCode:
liftToWakeDetected
state
_internalAlwaysEyesFreeEnabled
_deviceIsUnlocked
_mapsAppIsVisibleOnLockscreen
displayLayoutMonitor
currentLayout
elements
layoutRole
isAutomaticDNDAvailable
carAutomaticDNDStatus
cachedAutomaticDNDActiveState
defaultCenter
_pairedVehiclesDidChange:
addObserver:selector:name:object:
setCarPlaySessionStatus:
carPlaySessionStatus
addSessionObserver:
setCarAutomaticDNDStatus:
fetchAutomaticDNDAssertionWithReply:
currentSession
MFiCertificateSerialNumber
_setCarPlayConnectionState:
_updateCarPlayConnectionState
vehicleModelName
supportsSiriZLL
supportsSiriZLLButton
supportsSiriMixable
_enhancedVoiceTriggerModeFromConfiguration:
voiceTriggerMode
allObjects
fetchApplicationBundleIdentifiersForCarIntents:
carPlayConnectionState
carPlayEnhancedSiriCharacteristics
_fetchVehicleInformation
_fetchOEMAppContext
setEnabled:
enabled
isCurrentLocaleNativelySupported
attributeForKey:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_initForTesting
deviceScreenIsOn
deviceLiftToWake
isInActiveCall
hasIncomingCall
isWirelessSplitterOn
isGuestConnected
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
carPlaySupportsAnyEnhancedSiriCharacteristics
carPlaySupportsEnhancedSiriCharacteristic:
carPlayEnhancedVoiceTriggerMode
isRemoteWebcamMode
setCarPlayConnectionState:
setDisplayLayoutMonitor:
observerWirelessSplitter
setObserverWirelessSplitter:
observerBluetoothGuestConnected
setObserverBluetoothGuestConnected:
setCarPlayEnhancedSiriCharacteristics:
setCarPlayEnhancedVoiceTriggerMode:
_liftToWakeDetected
_enabled
_carPlayConnectionState
_displayLayoutMonitor
_carPlaySessionStatus
_carAutomaticDNDStatus
_vehicleName
_vehicleModel
_vehicleManufacturer
_observerWirelessSplitter
_observerBluetoothGuestConnected
_carPlayEnhancedSiriCharacteristics
_carPlayEnhancedVoiceTriggerMode
Ti,N,V_carPlayConnectionState
TB,N,V_accessibilityShortcutEnabled
T@"FBSDisplayLayoutMonitor",&,N,V_displayLayoutMonitor
TB,N,V_liftToWakeDetected
T@"CARSessionStatus",&,N,V_carPlaySessionStatus
T@"CARAutomaticDNDStatus",&,N,V_carAutomaticDNDStatus
T@"NSString",&,N,V_vehicleName
T@"NSString",&,N,V_vehicleModel
T@"NSString",&,N,V_vehicleManufacturer
TB,N,V_rightHandDrive
TB,N,V_enabled
T@"NSHashTable",&,N,V_listeners
T@"AFNotifyObserver",&,N,V_observerWirelessSplitter
T@"AFNotifyObserver",&,N,V_observerBluetoothGuestConnected
TQ,N,V_carPlayEnhancedSiriCharacteristics
Tq,N,V_carPlayEnhancedVoiceTriggerMode
buttonTriggerStateActive
preferences
analyticsContext
setAnalyticsContext:
_buttonTriggerStateActive
_request
_preferences
_analyticsContext
T@"SASActivationRequest",&,N,V_request
TB,N,V_buttonTriggerStateActive
T@"SASSiriPocketStateManager",&,N,V_pocketStateManager
T@"AFPreferences",&,N,V_preferences
T@"NSDictionary",&,N,V_analyticsContext
Tq,N,V_requestState
alwaysAllowVoiceActivation
_shouldSiriActivateForSiriSetupWithSystemState:
requiresUserInteraction
disableAssistantWhilePasscodeLocked
isTemporaryDevice
understandingOnDeviceAssetsAvailable
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
_updateState:
initWithRequestOptions:updateHandle:
addTriggerTarget:action:
removeTriggerTarget:
options
_options
_state
_observers
T@"SASRequestOptions",R,N,V_options
Tq,R,N,V_state
stringWithSiriSpotlightContextSource:
setUtteranceText:
setSource:
_utteranceText
_source
T@"NSString",C,N,V_utteranceText
Tq,N,V_source
setIsSourcePTTEligible:
isListening
isSourcePTTEligible
_isListening
_isSourcePTTEligible
_activeDeviceBluetoothIdentifier
TB,N,V_isSourcePTTEligible
T@"NSString",C,N,V_activeDeviceBluetoothIdentifier
TB,N,V_isListening
_registerForTestingNotifications
_testingStringsDidChange:
_testingAudioInputPathsDidChange:
removeObserver:
object
preloadedTestingInput
_preloadedTestingInput
T@"SiriTestingContext",R,N,V_preloadedTestingInput
sharedInstance
initWithUUIDString:
deviceFromIdentifier:
_isTemporaryDevice
uniqueIdentifier
buttonIdentifer
_uniqueIdentifier
_buttonIdentifer
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_buttonIdentifer
Td,R,N
previousNode
setPreviousNode:
nextNode
setNextNode:
_previousNode
_nextNode
T@"SASBulletinCacheNode",&,N,V_previousNode
T@"SASBulletinCacheNode",&,N,V_nextNode
_isFeedRelevant:
_findNodeForBulletinID:
_deleteNode:
_purgeOldestNodes
_count
_oldestNode
_newestNode
_registerListenersAndSetEndpointTypeWithNotification:
setAttribute:forKey:error:
_setEndpointTypeWithNotification:
_endpointType
_setEndpointType:
_serialBluetoothEndpointQueue
endpointType
T@"NSString",&,G_endpointType,S_setEndpointType:,V_endpointType
activationRequestFromDirectActionEventWithContext:
activateWithContext:completion:
T@"<SiriDirectActionSourceDelegate>",W,N,V_delegate
setXPCConnectionManagementQueue:
updateState
settingsConnection
_setUODAssetsAvailable:
areSiriUODAssetsAvailable:
setSettingsConnection:
uodAssetsqueue
setUodAssetsqueue:
_settingsConnection
_uodAssetsqueue
T@"AFSettingsConnection",&,N,V_settingsConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_uodAssetsqueue
type
recordedSpeechURL
initWithType:text:recordedSpeechURL:
_type
_recordedSpeechURL
Tq,R,N,V_type
T@"NSString",R,C,N,V_text
T@"NSURL",R,C,N,V_recordedSpeechURL
setType:
setRecordedSpeechURL:
setDomain:
setService:
listenerWithConfigurator:
setListener:
listener:didReceiveConnection:withContext:
_listener
T@"BSServiceConnectionListener",&,N,V_listener
initWithBluetoothDevice:
bluetoothDeviceForIdentifier:bluetoothDevice:
deactivate
T@"SiriBluetoothContext",&,N,V_context
assertionClientIdentifier
prewarmFromButtonIdentifier:
_registerSourceForIdentifier:
_unregisterSourceForIdentifier:
_activationRequestFromDirectActionEventWithContext:completion:
setValue:forKey:
setAssertionClientIdentifier:
_assertionClientIdentifier
T@"<SASSignalServerDelegate>",W,N,V_weak_delegate
T@"NSString",N,V_assertionClientIdentifier
setEnqueuedButtonEventCompletions:
_presentationServer
_enqueuedButtonEventCompletions
_pingTimer
_presentationState
T@"SASPresentationServer",R,N,V_presentationServer
T@"NSMutableArray",&,N,V_enqueuedButtonEventCompletions
T@"NSTimer",&,N,V_pingTimer
T@"SASPresentationState",&,N,V_presentationState
numberWithInt:
initWithUserActivity:
_userActivity
T@"AFRequestInfo",R,N,V_requestInfo
T@"NSDictionary",R,N,V_userActivity
_isEyesFree
_address
T@"NSString",R,N,V_address
@16@0:8
v16@0:8
B16@0:8
Vv24@0:8@16
v24@0:8@16
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@?16
@40@0:8B16B20q24q32
Q16@0:8
B24@0:8@16
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8q16
@"SiriPresentationOptions"
{_mutationFlags="isDirty"b1"hasWakeScreen"b1"hasHideOtherWindowsDuringAppearance"b1"hasRotationStyle"b1"hasRequestSource"b1}
@40@0:8@16q24@32
@32@0:8@16@24
@"SASSystemState"
@"SiriContextOverride"
@24@0:8q16
v24@0:8d16
d16@0:8
@"<SASHeaterDelegate>"
@"NSTimer"
v32@0:8@16q24
v32@0:8@"CMPocketStateManager"16q24
v24@0:8@?16
@"CMPocketStateManager"
@"NSURL"
v32@0:8q16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v24@0:8Q16
v32@0:8Q16Q24
v24@0:8f16f20
v24@0:8@"AFMyriadSession"16
v24@0:8@"AFMyriadCoordinator"16
B28@0:8@16B24
B36@0:8@16@24B32
v24@0:8B16B20
@"<SASMyriadControllerDelegate>"
@"AFMyriadCoordinator"
@"NSObject<OS_dispatch_semaphore>"
@"FBSDisplayLayoutMonitor"
@"SASLockStateMonitor"
@"CMMotionActivityManager"
@"NSNumber"
Vv24@0:8@"SiriPresentationIdentifierTransport"16
Vv24@0:8@"NSError"16
Vv24@0:8@"SASPresentationState"16
@"NSArray<__AFBulletin__>"16@0:8
@"AFBulletin"24@0:8@"NSString"16
Vv32@0:8@16@24
Vv40@0:8@16@24@32
Vv48@0:8@16@24@32@40
Vv32@0:8@"SiriPresentationOptions"16@"SASRequestOptions"24
Vv24@0:8@"SiriDismissalOptions"16
Vv24@0:8@"SASRequestOptions"16
Vv24@0:8@"SiriPresentationActivationCancelReasonTransport"16
Vv24@0:8@"NSString"16
Vv32@0:8@"SiriPresentationIdentifierTransport"16@"SASPresentationState"24
B24@0:8@"SASActivationRequest"16
Vv40@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24@"SiriLongPressButtonContext"32
Vv48@0:8@"SASButtonIdentifierTransport"16@"NSString"24@"SASTimeIntervalTransport"32@"SiriLongPressButtonContext"40
Vv24@0:8@"SASButtonIdentifierTransport"16
Vv24@0:8@"SASLockStateTransport"16
Vv24@0:8@"NSNumber"16
@"BSServiceConnectionEndpointInjector"
@"BSServiceConnection<BSServiceConnectionHost>"
@"<SASPresentationServerDelegate>"
@"SiriLongPressButtonContext"
v32@0:8@16@24
@40@0:8@16@24@32
@"SASRequestOptions"40@0:8@"SASRequestOptionsBuilder"16@"SASRequestOptions"24@"SASActivationRequest"32
B32@0:8@16@24
@40@0:8@16@24q32
Q32@0:8@16@24
B32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
@"NSString"40@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24q32
Q32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
v48@0:8@16q24d32d40
v24@0:8@"SASHeater"16
v48@0:8@"SASHeater"16q24d32d40
v24@0:8@"SASMyriadController"16
v24@0:8@"SASBulletinManager"16
v28@0:8@16B24
v28@0:8@"SASPresentationManager"16B24
v32@0:8@"SASPresentationManager"16q24
B24@0:8q16
v32@0:8q16d24
v40@0:8q16@24@32
B32@0:8q16@24
v40@0:8q16d24@32
v48@0:8q16@24d32@40
v32@0:8@16@?24
@"SASMyriadController"
@"AFPreferences"
@"SASUnderstandingOnDeviceAssetsState"
@"NSMutableDictionary"
@"SASHeater"
@"AFSiriTether"
@"SASBulletinManager"
@"SASRemoteRequestManager"
@"SASTestingInputController"
@"SASBluetoothEndpointUtility"
@"SASPresentationManager"
q32@0:8@16@24
@56@0:8q16@24@32@40@48
@"NSDictionary"
@"BBBulletin"
@"UNNotification"
B32@0:8q16q24
B40@0:8q16q24q32
v32@0:8@?16q24
v32@0:8@?16Q24
v32@0:8q16q24
v28@0:8q16B24
v40@0:8@16@24@32
@"<SASPresentationManagerDelegate>"
@24@0:8Q16
@28@0:8Q16B24
@36@0:8Q16B24Q28
@36@0:8Q16B24q28
@44@0:8Q16B24q28Q36
@48@0:8Q16B24q28Q36B44
q24@0:8@16
@"AFRequestInfo"
v32@0:8@"SiriLongPressButtonConfigurationUpdateManager"16@"SiriLongPressButtonSource"24
@"SiriContext"16@0:8
@24@0:8d16
@"<SiriAssertion>"16@0:8
@"<SiriAssertion>"24@0:8d16
d24@0:8d16
@?16@0:8
@"SiriLongPressButtonConfiguration"
@"<SiriLongPressButtonSourceDelegate>"
@"SiriLongPressButtonConfigurationUpdateManager"
@56@0:8@16@24@32d40@?48
q24@0:8q16
@32@0:8q16@24
[12i]
@"SiriContext"
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v32@0:8@16Q24
@"BBObserver"
@"SASBulletinCache"
@"<SASBulletinManagerDelegate>"
v24@0:8@"NSString"16
@"SASPresentationState"
{_mutationFlags="isDirty"b1"hasPresentationIdentifier"b1}
@32@0:8@16Q24
v32@0:8@16d24
v40@0:8q16Q24@32
Q24@0:8q16
@"AFRemoteRequestWatcher"
@"INAppIntentDeliverer"
@40@0:8q16@24@32
@"AFBulletin"
@"AFApplicationContext"
@"SASPronunciationContext"
@"NSArray"
@"AFSpeechRequestOptions"
@"NSUUID"
@"SASRequestOptions"
v48@0:8@16@24@32^v40
@"NSUserDefaults"
@"NSMapTable"
@"<SASLockStateMonitorDelegate>"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
B20@0:8B16
v20@0:8i16
B24@0:8Q16
i16@0:8
@"CARSessionStatus"
@"CARAutomaticDNDStatus"
@"NSHashTable"
@"AFNotifyObserver"
@"SASActivationRequest"
@"SASSiriPocketStateManager"
@32@0:8@16^@?24
v32@0:8@16:24
@"SiriTestingContext"
@"SASBulletinCacheNode"
@"<SiriDirectActionSourceDelegate>"
@"AFSettingsConnection"
v24@0:8@"NSURL"16
@"SASTestingInput"
{_mutationFlags="isDirty"b1"hasType"b1"hasText"b1"hasRecordedSpeechURL"b1}
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"BSServiceConnectionListener"
@"SiriBluetoothContext"
Vv32@0:8@16@?24
Vv32@0:8@"SASButtonIdentifierTransport"16@"NSString"24
Vv32@0:8@"NSNumber"16@"NSString"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24
Vv24@0:8@"SiriDirectActionContext"16
Vv32@0:8@"SiriDirectActionContext"16@?<v@?@"NSNumber"@"NSError">24
Vv24@0:8@"SiriContinuityContext"16
Vv24@0:8@"SiriRemotePresentationBringUpContext"16
Vv24@0:8@"SiriSpotlightContext"16
Vv24@0:8@"SiriTestingContext"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriLongPressButtonContext"24
Vv40@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24@"SiriDismissalOptions"32
Vv32@0:8@"NSString"16@"NSNumber"24
Vv40@0:8@"NSNumber"16@"NSString"24@"SASTimeIntervalTransport"32
@"<SASSignalServerDelegate>"
@"SASPresentationServer"
@(#)PROGRAM:SiriActivation  PROJECT:AssistantUI-1
?333333
333333
%s #activation invalidating BSServiceConnection %@
%s #activation old availability: %@, new availability: %@
%s Button Down Event absent. Artificially update timestamp.
%s Picked record route: %@
%s Predicted record route ZLL: %{BOOL}d
%s #SiriPocketStateManager: Querying Pocket State
%s #SiriPocketStateManager: Failed to query for pocket state: %@
%s #SiriPocketStateManager: Pocket state query successful with state: %@
%s #activation hfpTriggerDuringPhoneCall = YES bypassing pocket state detector
%s #SiriPocketStateManager: PocketState changed to %@
%s #myriad setCanceledByMyriad: %d
%s #myriad motion bump is ignored due to awareness being on
%s #myriad BTLE lift time delta %f, adjusting by %d
%s #myriad BTLE connected to carplay, adjusting by %d
%s #myriad BTLE Myriad voice trigger advertising while isVisible
%s #myriad BTLE Myriad voice trigger advertising needed adjusted by ul=%d + lt=%d + cp=%d + rtw=%d = %d
%s #myriad BTLE Myriad direct trigger advertising needed
%s #myriad BTLE Siri is delayed for Myriad decision, evt = %ld
%s #myriad BTLE timed out waiting for Myriad decision, sem=%ld
%s #myriad BTLE Canceled Myriad decision. Not activating Siri.
%s #myriad BTLE Got Myriad decision. Activating Siri.
%s #myriad BTLE Myriad ignoring advertisement [isVoiceTrigger %d, isVisible %d]
%s #myriad BTLE Myriad voice trigger advertising while is visible [isVoiceTrigger %d]
%s #myriad BTLE observerCalled transition=%@
%s #myriad BTLE wake gesture noted
%s #myriad
%s #myriad screen lock -> unlock: %d, screen unlock -> lock: %d
%s #activation #locks #noisy strongSelf->_activityManagerLock about to lock with qos: %zd
%s #activation #locks #noisy strongSelf->_activityManagerLock successfully locked
%s #activation #locks #noisy strongSelf->_activityManagerLock unlocked
%s #activation invalidated presentationServer: %@
%s #activation interrupted presentationServer: %@
%s %p
%s %p #activation Unable to establish connection to un-entitled remote process: %@
%s Unexpectedly attempted to assign a new connection to the activation server with an existing connection: %{public}@
%s %p #activation registerPresentationIdentifier:%@
%s %p #activation unregisterPresentationIdentifier:%@
%s %p #activation willDismiss
%s %p #activation didDismiss
%s %p #activation Shell indicates Siri is presented
%s %p #activation resetSiriToActive
%s %p #activation Shell indicates Siri presentation failed : %@
%s %p #activation Presentation state did update: %@
%s #activation Shell indicates that speech request was started via Siri orb
%s #activation Shell indicates that speech request was cancelled via Siri orb
%s #activation allBulletins
%s #activation bulletinsOnLockScreen
%s #activation bulletinForIdentifier: %@
%s #activation #locks #noisy sourcesLock about to lock with qos: %zd
%s #activation #locks #noisy sourcesLock successfully locked
%s #activation #locks #noisy sourcesLock unlocked
%s #activation #locks #noisy buttonEventListenerLock about to lock with qos: %zd
%s #activation #locks #noisy buttonEventListenerLock successfully locked
%s #activation #locks #noisy buttonEventListenerLock unlocked
%s #activation _updateCanActivateFromDirectActionSource
%s #activation setCanActivateFromDirectActionSource: %@
%s #activation Registration of '%@' when it is already registered. Removing
%s #activation Registering '%@'
%s #activation Unregister request of '%@' when it is not registered.
%s #activation Unregistering '%@'
%s #activation #locks #noisy assertionLock about to lock with qos: %zd
%s #activation #locks #noisy assertionLock successfully locked
%s #activation Registration of '%@' assertion when it is already present. Removing
%s #activation Registering assertion with Id -  '%@'
%s #activation #locks #noisy assertionLock unlocked
%s #activation Unregister assertion for '%@' when it is not registered.
%s #activation Unregistering assertion %@'
%s #activation Registration of '%@' listner when it is already present. Removing
%s #activation Registering listener with Id -  '%@'
%s #activation Unregister lisener for '%@' when it is not registered.
%s #activation Unregistering listener %@'
%s #activation B188ActivationEvent with Siri state %@. Activating.
%s #activation B188ActivationEvent with Siri state %@. Deactivating.
%s #activation SiriButtonIdentifierLongPressBTHeadset, context %@, but Siri state is %@. Treating as button long press.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Activating.
%s activationRequestFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s deactivationRequestFromButtonIdentifier:%@, with Siri state %@. Deactivating.
%s  #activation _shouldRejectActivationWithButtonIdentifier - isBlockableButton:%d assertionsAvailable :%d
%s #activation %@ button prewarm request, current request state: %@, longPressInterval: %f
%s #activation buttonDownFromButtonIdentifier:%@
%s #activation button down used while stopping. Ignoring.
%s #activation Rejecting Button Down as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonUpFromButtonIdentifier:%@
%s #activation Rejecting Button Up as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonTapFromButtonIdentifier:%@
%s #activation Rejecting Button Tap as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation activating due to TV remote microphone button short tap with Siri state %@
%s buttonTapFromButtonIdentifier:%@, with Siri state %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@
%s #activation Rejecting Button Long Press as we have valid activation assertions. ButtonIdentifier - %@ Activation assertions - %@
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context %@. Activating.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Ignoring.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@ and we are in CarPlay. Ignoring because we should also be getting a button down/up.
%s #activation buttonLongPressFromButtonIdentifier:%@, context %@, but Siri state is %@. Passing to the Presentation Shell.
%s #activation buttonLongPressFromButtonIdentifier:%@, with Siri state %@, context: %@. Ignoring
%s buttonUpTimestamp: %f, buttonDownTimestamp: %f
%s #activation synthesizing button tap
%s #activation button tap occurred, but Siri is not yet up. Not synthesizing tap event.
%s #activation activationRequestFromDirectActionEventWithContext:%@
%s #activation activationRequestFromContinuityWithContext
%s #activation activationRequestFromVoiceTriggerWithContext
%s #activation activationRequestFromBreadcrumb
%s #activation activationRequestFromSimpleActivation:%@
%s #activation activationRequestFromRemotePresentationBringUpWithContext:%@
%s #activation activationRequestFromSpotlightWithContext
%s #activation activationRequestFromVoiceTrigger
%s #activation activationRequestFromTestingWithContext
%s #activation speech request state did change (state = %ld)
%s #activation #locks #noisy handleActivationLock about to lock with qos: %zd
%s #activation #locks #noisy handleActivationLock successfully locked
%s #activation activationRequest = %@
%s #activation Voice request on CarPlay, delaying Myriad decision by %f ms
%s #activation #locks #noisy handleActivationLock unlocked
%s #activation _activatePresentation %@
%s #activation Deferring wake, shouldHandlePocketStateFetch: (%{bool}d)
%s #activation Setting rotation style for presentation { rotationStyle: %@, presentation: %@ }
%s #activation should handle pocket state fetch via (requestIsWiredMicOrBluetoothHeadset (%{bool}d) || requestIsB288 (%{bool}d)) && isScreenOff (%{bool}d) && siriActivationDeviceSupportsProxSensor (%{bool}d) && !(requestIsEyesFree (%{bool}d) || requestIsBluetoothCar (%{bool}d))
%s #activation #SiriPocketStateManager: error querying the pocket state for screen wake: %@ Turning on the screen...
%s #activation #SiriPocketStateManager: Device is face down on table or in pocket. Leaving screen off.
%s #activation #SiriPocketStateManager: Turning on the screen...
%s #activation
%s #activation _attachToTether
%s #activation _cancelActivationPreparationForSetup
%s #activation _cancelPendingActivationEventWithReason:%@
%s #activation activating in design mode
%s #activation preheat; request state = %@
%s #activation cancelledPreparationWithButtonIdentifier: %@ duration: %f, willSendEvent: %d, targetDuration: %f, 
%s #myriad BTLE Device should abort session
%s #myriad BTLE Device continues to interact, device won election
%s #activation lockState: %@
%s #activation callStateChangedToIsActive: %@ isOutgoing: %@
%s #activation error: %@
%s #activation BSServiceConnection Invalidated %@
%s #activation BSServiceConnection Interrupted %@
%s #activation BSServiceConnection Activated %@
%s Couldn't determine direct action from bulletin content "%@" or notification content "%@".
%s Couldn't determine direct action from bundleId: "%@" and intent identifiers: "%@"
%s #activation #locks #noisy presentationsLock about to lock with qos: %zd
%s #activation #locks #noisy presentationsLock successfully locked
%s #activation active: %@ | starting: %@ | stopping: %@ | off: %@ | computed state: %@
%s #activation #locks #noisy presentationsLock unlocked
%s #activation presentationIdentifierKey: %@
%s #activation Registration of '%@' when it is already connected. Removing.
%s #activation Unregister request of '%@' when it is not connected.
%s #activation #preheat
%s #activation #preheat tried to preheat %@ but it's not a registered presentation
%s #activation #preheat tried to preheat %@ but it's request state is %@
%s #activation cancelling preheat for presentation: %@
%s #activation #noisy not cancelling preheat for presentation: %@ because it appears to be %@
%s #activation _lastReportedShouldRejectNewActivations: %@ | newShouldRejectNewActivations: %@
%s Received unknown button event type. Ignoring.
%s #activation presentation: %@, type: %@, state: %@
%s #activation enqueuing button event completion until State is %@.
%s #activation received %@ while request state is %@, enqueueing.
%s #activation unhandled button event, ignoring.
%s #activation presentation with identifier %@ isn't registered
%s #activation presentation with identifier %@ can't transition to state: %@ from state: %@
%s #activation %@: transitioning from %@ to %@
%s #activation identifier: %@
%s #pingpong sending ping and waiting for pong - model: %@ | server: %@ | connection: %@ | remoteTarget: %@
%s #pingpong not returning ping because presentation with identifier %@ is in request state %@
%s #pingpong timed out waiting for pong
%s #pingpong
%s #pingpong received pong with presentation identifier: %@
%s Sending <%@>'s state --> <%@>: %@
%s #activation SASPresentationDecision deciding between: %@
%s ERROR: Multiple connected presentations, but none of them have precedence. Taking the first object, %@
%s #activation BSServiceConnection Interrupted, re-activating %@
%s #activation BSServiceConnection Activated strongSelf=%p connection=%@
%s #activation %@ didRecognizeLongPress
%s #activation #zll carplay steering wheel button with previous prepare assertion, replaced timestamp with %@
%s #activation #zll carplay steering wheel button with no previous prepare assertion
%s #activation #zll not a carplay steering wheel button, converted passed in timestamp: %@
%s Deallocated SiriActivityAssertion (identifier=%@, reason=%@) before it was properly invalidated.
%s Failed getting waketime mib %{public}s
%s Device wants Home Button ZLL, checking wake time
%s Failed looking up waketime %{public}s
%s Wake time was %lf seconds ago
%s Button down time was %lf seconds ago
%s Wake -> Button down delta is %lf
%s Using Wake Time
%s Using Button Down Time
%s button down timestamp sent in format where absolute time conversion is invalid
%s Bulletin with identifier: %@ not found in cache with bulletinIDs: %@
%s %@ added to lock screen feed
%s ACAssistantBBObserver: Trying to modify a bulletin %@ that I don't already have.
%s %@ removed from lock screen feed
%s ACAssistantBBObserver: Asked to remove a bulletin from lock screen %@ that I don't already have.
%s ACAssistantBBObserver: Asked to remove a bulletin %@ that I don't already have.
%s #activation #locks #noisy _lock about to lock with qos: %zd
%s #activation #locks #noisy _lock successfully locked
%s #activation #locks #noisy _lock unlocked
%s #activation BSServiceConnection Activated for button event listener strongSelf=%p connection=%@
%s #activation #locks #noisy innerStrongSelf->_lock about to lock with qos: %zd
%s #activation #locks #noisy innerStrongSelf->_lock successfully locked
%s #activation #locks #noisy innerStrongSelf->_lock unlocked
%s #activation Unregister listener '%@' when it is not connected.
%s #activation BSServiceConnection Unregistering SiriActivationButtonEventListenerDelegate delegate=%@ connection=%@
%s #activation BSServiceConnection invalidating listener connection=%@
%s #activation #noisy Forwarding Button down event to Listener with identifier %@
%s #activation Received Invalidation for Assertion - %@, Invalidating
%s #activation Received Interruption for Assertion - %@, Invalidating
%s #activation BSServiceConnection Activated for assertion strongSelf=%p connection=%@
%s #activation BSServiceConnection Unregistering & invalidating assertion self=%@ connection=%@
%s #activation SiriActivationAssertion got deallocated
%s ERROR: attempted to create SiriButtonIdentifier from '%@'.
%s Unsupported button event: %li from source: %li
%s info=%@
%s TestAutomation activationEvent does not contain recognition text or speech file paths.
%s Received VoiceTrigger activation request, already pending for possible future activation
%s Received VoiceTrigger activation request, but currently blocking VoiceTrigger activations
%s Received VoiceTrigger activation request, no restrictions, activating
%s pending voice trigger activation timer fired, %@
%s Handling remote request dismissal, reason=%@, options=%@, analyticsContext=%@
%s #cancellationReason: Setting cancellationReason to %@ because deactivationReason is %@
%s PendingCount:%tu, hasPendingTrigger:%i
%s replacing prewarm AFRequestInfo %@ with newer pending activation AFRequestInfo %@
%s count is zero after being decremented, activating from pending
%s #activation Cannot set requestSource to SASRequestSourceKeyboard when keyboard input is disabled
%s #activation Updated properties from system state: %@
%s Unsupported SASRequestSource value: %lu, returning back AFDirectActionSourceUnknown.
%s Unsupported CARAutomaticFeatureState value: %lu
%s #modes DisplayTransition called transition=%@
%s #modes Device went through liftToWake transition setLiftToWake:YES
%s #modes Device went to sleep or went through another transition setLiftToWake:NO
%s %i
%s Disconnected from CarPlay display.
%s Paired to an untrusted CarPlay device.
%s Paired to a trusted CarPlay device.
%s #CarPlay failed to lookup car intent extensions: %@
%s #CarPlay supported OEM apps: %@
%s Enabled:%@
%s #activation NO: Siri is not supported. Language code: %@
%s #activation NO: Siri is restricted by profile
%s #activation NO: Siri voice activation is disabled until first unlock.
%s #activation: Ignoring pocket state for connected remote display voice activation
%s #activation: Pocket state would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring pocket state
%s #activation NO: Pocket state prevents voice trigger activation
%s #activation NO: There is an existing HoldToTalk trigger.
%s #activation: Ignoring Smart cover state for connected remote display voice activation
%s #activation NO: Siri is disabled because an iPad Smart Cover is closed which blocks home button or Hey Siri
%s #activation: Smart Cover is closed, which would normally prevent voice trigger, but the user default to always allow voice activation is set, so ignoring Smart Cover state
%s #activation NO: Siri is disabled because an iPhone Smart Cover is closed which blocks home button or Hey Siri
%s #activation NO: "Press Home/Side For Siri" is disabled in Settings
%s #activation NO: Siri state is %@. Ignoring activationRequest %@.
%s #activation NO: Siri is disabled while passcode locked
%s requestSource:SASRequestSourceBluetoothHeadset isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B188 / bluetooth device
%s event:%@ isTemporaryDevice:%i
%s #activation NO: Blocking wireless splitter guest that's using B288 %@
%s #activation NO: Siri is disabled because the device is blocked
%s #activation NO: request type unsupported while in an active call - feature flag not enabled.
%s #activation NO: active call while connected to CarPlay
%s #activation NO: uod assets unavailable during a voice call
%s #activation NO: request type unsupported during a call
%s #activation continue: %@
AnnounceTelephony: %@
%s #activation NO: in remote webcam mode
%s #activation YES: source:%@
%s #activation NO: Siri is restricted by profile.
%s #activation NO: Siri Setup is disabled while passcode locked
%s #ptt device is in TTS mode
%s #ptt Remote Type is %@
%s Bulletin cache is being asked to insert a bulletin with no ID; ignoring the request because bulletin lookup is ID-based and so there's no reason to store a bulletin with no ID (bulletin: %@; bbBulletin: %@)
%s Bulletin cache contains a bulletin with a nil identifier; not including the bulletin as part of the return value of -allBulletins (bulletin: %@; bbBulletin: %@)
%s This should hopefully not happen, endpointType not initialized before called, returning as not Bluetooth.
%s Failed to subscribe to AVSystemController notifications due to error: %@
%s Registered AVSystemController listeners
%s Endpoint type is not found from AVSystemController, setting it to %@.
%s Endpoint type changed, from %@ to %@.
%s #activation canActivateChangedTo: %@
%s Error loading areSiriUODAssetsAvailable from AFSettingsConnection : %@
%s Received results for areSiriUODAssetsAvailable : %d
%s Released semaphore for areSiriUODAssetsAvailable from AFSettingsConnection
%s Waiting for results of areSiriUODAssetsAvailable.
%s Timed out waiting for areSiriUODAssetsAvailable
%s SASSignalConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation #locks #noisy lock about to lock with qos: %zd
%s #activation #locks #noisy lock successfully locked
%s #activation #locks #noisy lock unlocked
%s #activation Invalidating connection - %@ as client %@ terminated
%s #activation Invalidating connection - %@
%s #activation interrupted signalserver: %@
%s #activation Button identifier %@ with uuid '%@' registered by %@
%s #activation Button identifier %@ with uuid '%@' unregistered by %@
%s #activation Non-button source of type %@ with uuid '%@' registered by %@
%s #activation Non-button source of type %@ with uuid '%@' unregistered by %@
%s #activation activationRequestFromButtonIdentifier:%@ context:%@
%s #activation deactivationRequestFromButtonIdentifier:%@ context:%@
%s #activation _activationRequestFromDirectActionEventWithContext:%@
%s #activation _activationRequestFromDirectActionEventWithContext payload missing bundleId, using connection bundle id:%@
%s #activation activationRequestFromContinuityWithContext:%@
%s #activation activationRequestFromBluetoothKeyboardActivation
%s #activation activationRequestFromSimpleActivation
%s #activation activationRequestFromSpotlightWithContext:%@
%s #activation activationRequestFromTestingWithContext:%@
%s prewarmFromButtonIdentifier:%@
%s cancelPrewarmFromButtonIdentifier:%@
%s buttonDownFromButtonIdentifier:%@ timestamp:%@
%s buttonUpFromButtonIdentifier:%@ timestamp:%@
%s buttonTapFromButtonIdentifier:%@
%s buttonLongPressFromButtonIdentifier:%@ context:%@
%s #activation registerAssertionWithIdentifier:%@ reason:%@
%s #activation unregisterAssertionWithIdentifier:%@
%s registerButtonEventListenerWithIdentifier:%@
%s unregisterButtonEventListenerWithIdentifier:%@
%s SASPresentationConnectionListener: Unable to assign new incoming connection to a process because the remote was unknown : connection=%@
%s #activation sending completions for %lu cached event(s)
-[SiriActivationSource invalidate]
-[SiriActivationSource activeChangedTo:]
unspecified
text
recordedSpeechURL
(unknown)
v8@?0
com.apple.siri.activation.service
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
requestSource
%@ {%@}
wakeScreen = %@
hideOtherWindowsDuringAppearance = %@
rotationStyle = %ld (%@)
requestSource = %@
SiriPresentationOptions::wakeScreen
SiriPresentationOptions::hideOtherWindowsDuringAppearance
SiriPresentationOptions::rotationStyle
SiriPresentationOptions::requestSource
com.apple.siri.CarDisplay.UIFree
-[SASRequestOptionsBuilder _createRequestOptionsForRequest:withDataSource:]
__supportsCarFullScreen
__bundleId
AssistantDirectActionEventKey
v16@?0@"<AFApplicationContextMutating>"8
SASDismissalReason
Unknown
SystemInterrupt
IncomingPhoneCallInterrupt
OutgoingPhoneCall
Timeout
HardwareButton
UISwipe
CarplayDismissed
LostMyriadElection
Punchout
CloseAssistantCommand
EmergencyBulletinSynthesized
ConnectionErrorTimeout
SiriUnavailable
HandoffDeviceUnlockFailure
InitialDeviceUnlockSinceBootFailure
UserEnteredScreenshotFullMode
TTSDidFinishInBackground
BluetoothDeviceDeactivation
PresentationUnregistered
CarPlayHardwareButton
UnexpectedError
CarPlayUnpaired
TapOutsideOfContent
PanSwipeDismissed
ScrollingWithoutListening
PresentationFailedToPresent
ActivationTimedOut
PresentationManagerError
AppLaunch
SiriSetupCancelled
ButtonEventWhileDelaySessionEndForTTS
AssistantConnectionDismissRequested
EmergencyBulletinSynthesisError
EmergencyBulletinEmptyError
AirPodDoubleTapWhenActive
AirPodOutOfEarWhenActive
AdBlockerTriggered
CarPlayAnnounceBannerTrump
CarPlayAnnounceBannerDismissal
CarPlayAnnounceBannerOutsideTap
CarPlayAnnounceBannerHomeButton
CarPlayAnnounceBannerBackButton
CarPlayAnnounceBannerTouchPadSwipe
CarPlayAnnounceBannerTrackPadMovement
CarPlayAnnounceBannerNotificationWithdrawn
VoiceInterruptionDuringAnnouncement
IncomingCallEndedDuringAnnouncement
IncomingCallAnnouncementTrump
RemoteDeactivation
CarPlayAppDockButtonPress
UnsupportedVoicePromptStyleDuringAnnouncement
CarPlayBorrowedAudioDuringAnnouncement
CloseAssistantCommandSpeechNoPrompt
SASDismissalReasonPromptForPasscodeUnlockFailure
AnnounceSpeechManagerStoppedUnexpectedly
SiriButtonIdentifierLongPressUndefined
SiriButtonIdentifierLongPressHomeButton
SiriButtonIdentifierLongPressLockButton
SiriButtonIdentifierLongPressBTHeadset
SiriButtonIdentifierLongPressHearstButton
SiriButtonIdentifierLongPressWiredMic
SiriButtonIdentifierLongPressCarPlayAppDockButton
SiriButtonIdentifierLongPressCarPlaySteeringWheelButton
SiriButtonIdentifierLongPressCarPlaySiriButton
SiriButtonIdentifierMockShellButton
SiriButtonIdentifierMockSteeringWheelButton
SiriButtonIdentifierTestingShellButton
SiriButtonIdentifierTVRemoteMicrophoneButton
SiriButtonIdentifierLongPressVoiceCommandButton
<unknown siri button identifier : %li>
SpeechRecognition
-[SASHeater updatePredictedRouteIsZLL]_block_invoke
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]
-[SASSiriPocketStateManager queryForPocketStateWithCompletion:]_block_invoke
v24@?0q8@"NSError"16
hfpTriggerDuringPhoneCall
-[SASSiriPocketStateManager pocketStateShouldPreventVoiceTriggerForActivationRequest:]
-[SASSiriPocketStateManager _updateForPocketState:]
CMPocketStateTypeOutOfPocket
CMPocketStateTypeInPocket
CMPocketStateTypeFaceDown
CMPocketStateTypeFaceDownOnTable
CMPocketStateTypeMax
com.apple.siri.SASAnalyticsEventQueue
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
-[SASMyriadController setCanceledByMyriad:]
-[SASMyriadController activateForRequest:withTimeout:visible:]
-[SASMyriadController activateForInTaskRequest:isVisible:]
-[SASMyriadController _updateRaiseToWakeTimeForTransition:]
-[SASMyriadController shouldContinue:]
-[SASMyriadController shouldAbortAnotherDeviceBetter:]
-[SASMyriadController didChangeLockState:toState:]
-[SASMyriadController _configureMotionActivityManager]_block_invoke
v16@?0@"CMMotionActivity"8
-[SASMyriadController _configureMotionActivityManager]_block_invoke_2
SiriContextOverrideKey
currentSpokenLanguageCode
unlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
connectedToCarPlay
connectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
+[SASPresentationServer serverForConnection:]_block_invoke_2
v16@?0@"BSServiceConnection"8
+[SASPresentationServer serverForConnection:]_block_invoke
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
-[SASPresentationServer init]
-[SASPresentationServer dealloc]
<SASPresentationServer connection:%@, presentationIdentifier:%@>
-[SASPresentationServer _setConnection:]
-[SASPresentationServer registerPresentationIdentifier:]
-[SASPresentationServer unregisterPresentationIdentifier:]
-[SASPresentationServer willDismiss]
-[SASPresentationServer didDismiss]
-[SASPresentationServer didPresentSiri]
-[SASPresentationServer resetSiriToActive]
-[SASPresentationServer failedToPresentSiriWithError:]
-[SASPresentationServer didUpdatePresentationState:]
-[SASPresentationServer speechRequestStartedFromSiriOrb]_block_invoke
-[SASPresentationServer speechRequestCancelledFromSiriOrb]_block_invoke
-[SASPresentationServer allBulletins]
-[SASPresentationServer bulletinsOnLockScreen]
-[SASPresentationServer bulletinForIdentifier:]
BT_KEY_SIRI_EYESFREE_MODE
com.apple.siri.activation
com.apple.siri.activation.presentation
com.apple.siri.activation.signal
<SiriVoiceTriggerContext contextOverride:%@, speechRequestOptions:%@, requestInfo:%@, userActivity:%@>
com.apple.siri.hs.on.carplay
com.apple.siri.button.on.carplay
com.apple.siri
com.apple.siri.EyesFree
com.apple.siri.BluetoothCar
com.apple.siri.Compact
com.apple.siri.CarDisplay
com.apple.siri.UIFree
com.apple.siri.SiriTVPresentation
v12@?0B8
-[SiriActivationService _notifySourcesOfActiveChange:]
TVRemoteCore
updog
SiriUI
ios_remote_htt
-[SiriActivationService _notifyListenersOfButtonDownWithButtonIdentifier:atTimestamp:]
v32@?0@"NSString"8@"SASSignalServer"16^B24
-[SiriActivationService _notifyListenersOfButtonUpWithButtonIdentifier:atTimestamp:]
-[SiriActivationService _notifyListenersOfButtonLongPressWithButtonIdentifier:atTimestamp:]
-[SiriActivationService _updateCanActivateFromDirectActionSource]
-[SiriActivationService setCanActivateFromDirectActionSource:]
-[SiriActivationService _notifySourcesOfCanActivateFromDirectActionSourceChange:]
-[SiriActivationService registerActivationSource:withIdentifier:]
-[SiriActivationService unregisterActivationSourceIdentifier:]
-[SiriActivationService registerActivationAssertion:withIdentifier:]
-[SiriActivationService unregisterActivationAssertionWithIdentifier:]
-[SiriActivationService registerButtonEventListenerServer:identifier:]
-[SiriActivationService unregisterButtonEventListenerWithIdentifier:]
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke_2
-[SiriActivationService _B188ActivationEvent:context:options:]_block_invoke
v16@?0@"NSTimer"8
-[SiriActivationService activationRequestFromButtonIdentifier:context:]
-[SiriActivationService deactivationRequestFromButtonIdentifier:context:options:]
-[SiriActivationService _shouldRejectActivationWithButtonIdentifier:activationAssertions:]
-[SiriActivationService prewarmFromButtonIdentifier:longPressInterval:]
activationEvent
eventSource
interval
-[SiriActivationService buttonDownFromButtonIdentifier:timestamp:context:]
v16@?0@"SASPresentationServer"8
-[SiriActivationService buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:]
-[SiriActivationService buttonTapFromButtonIdentifier:]
-[SiriActivationService buttonLongPressFromButtonIdentifier:context:]
-[SiriActivationService _handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:]
-[SiriActivationService activationRequestFromDirectActionEventWithContext:completion:]
-[SiriActivationService activationRequestFromContinuityWithContext:]
-[SiriActivationService activationRequestFromVoiceTriggerWithContext:]
-[SiriActivationService activationRequestFromBreadcrumb]
-[SiriActivationService activationRequestFromBluetoothKeyboardActivation:]
-[SiriActivationService activationRequestFromRemotePresentationBringUpWithContext:]
-[SiriActivationService activationRequestFromSimpleActivation:]
-[SiriActivationService activationRequestFromSpotlightWithContext:]
-[SiriActivationService activationRequestFromVoiceTrigger]
-[SiriActivationService activationRequestFromTestingWithContext:]
-[SiriActivationService speechRequestStateDidChange:]
-[SiriActivationService handleActivationRequest:systemState:]
isDeviceUnlocked
clockTime
carVehicleName
carVehicleModelName
carVehicleManufacturer
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]
-[SiriActivationService _activatePresentationWithIdentifier:requestOptions:analyticsContext:]_block_invoke
v16@?0@"<SiriPresentationOptionsMutating>"8
-[SiriActivationService _shouldHandlePocketStateFetchForRequestOptions:]
-[SiriActivationService _handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:]_block_invoke_2
-[SiriActivationService _handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:]_block_invoke
PocketStateFetch
-[SiriActivationService _dismissSiri:]
-[SiriActivationService _preheatPresentation]
-[SiriActivationService _attachToTether]
-[SiriActivationService _cancelActivationPreparationForSetup]
-[SiriActivationService _cancelPendingActivationEventWithReason:]
-[SiriActivationService _handleDesignModeRequest]
com.apple.siri.internal.activation
-[SiriActivationService heaterSuggestsPreheating:]
-[SiriActivationService heater:cancelledPreparationWithButtonIdentifier:duration:targetDuration:]
com.apple.siri.button.false_positive_activation_duration
duration
buttonIdentifier
targetDuration
targetDurationEnum
@"NSDictionary"8@?0
-[SiriActivationService shouldAbort:]
-[SiriActivationService shouldContinue:]
-[SiriActivationService didChangeLockState:]
-[SiriActivationService callStateChangedToIsActive:isOutgoing:]
-[SiriActivationService presentationManager:didEncounterError:]
Speech file not found
proximity-sensor
-[SiriSpotlightSource configureConnection]_block_invoke_2
-[SiriSpotlightSource configureConnection]_block_invoke
SBSAssistantActivationContextBundleID
com.apple.MobileSMS
com.apple.Home
com.apple.shortcuts
<SiriDirectActionContext contextOverride:%@, payload:%@, bulletin:%@, notification:%@, directActionEvent:%@, bundleId:%@>
payload
bulletin
notification
-[SiriDirectActionContext _directActionEventFromContentTypesOfBulletin:notification:]
-[SiriDirectActionContext _directActionEventFromAppIdsAndIntentIdentifiersOfBulletin:notification:]
matchDeviceOrientation
matchContextOrientation
-[SASPresentationManager requestState]
-[SASPresentationManager registerSiriPresentation:withIdentifier:]
-[SASPresentationManager unregisterSiriPresentationWithIdentifier:]
-[SASPresentationManager preheatNextPresentationToActivate]
-[SASPresentationManager cancelAllPreheatedPresentations]
-[SASPresentationManager _presentationsLock_cancelAllPreheatedPresentations]
-[SASPresentationManager _notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary]
-[SASPresentationManager _sendBlock:toPresentationWithPresentationIdentifier:]
-[SASPresentationManager _sendBlockToActivePresentations:]
-[SASPresentationManager _sendBlockToStartingPresentations:]
-[SASPresentationManager _sendBlockToStoppingPresentations:]
-[SASPresentationManager sendButtonEventCompletionToPresentations:forButtonEventType:]
-[SASPresentationManager activePresentationsAreIdleAndQuiet]
-[SASPresentationManager _transitionPresentationWithPresentationIdentifier:toState:]
-[SASPresentationManager nextPresentationToActivate]
-[SASPresentationManager _presentationsLock_nextPresentationToActivate]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]
-[SASPresentationManager _setupPingTimerForPresentationIdentifier:]_block_invoke
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]
-[SASPresentationManager _waitForPongFromPresentationWithPresentationIdentifier:]_block_invoke
-[SASPresentationManager _teardownPingTimerForPresentationIdentifier:]
-[SASPresentationManager pongWithPresentationIdentifier:]
-[SASPresentationManager _forceAllPresentationsOff]
-[SASPresentationManager presentationDidUpdateState:]
-[SASPresentationManager _presentationsLock_broadcastPresentationStateForIdentifier:presentationState:presentationIdentifiersToInform:]
SASPresentationManagerErrorInvalidStateTransition
SASPresentationManagerErrorStateTransitionFromUnregisteredPresentation
SASPresentationManagerSendBlockToUnregisteredPresentation
SASPresentationManagerSetupPingTimerForUnregisteredPresentation
SASPresentationManagerTeardownPingTimerForUnregisteredPresentation
SASPresentationManagerErrorPongTimeout
deactivationOptions:%lu, animated:%@, request cancellation reason %ld, dismissal reason %@, shouldTurnScreenOff %@
deactivationOptions
animated
requestCancellationReason
dismissalReason
shouldTurnScreenOff
+[SASPresentationDecision activationPresentationForPresentationIdentifiers:]
-[SiriSimpleActivationSource configureConnection]_block_invoke_2
-[SiriSimpleActivationSource configureConnection]_block_invoke
-[SiriTestingSource configureConnection]_block_invoke_2
-[SiriTestingSource configureConnection]_block_invoke
SiriTestingContextRecognitionStringKey
SiriTestingContextAudioInputKey
SiriTestingContextFailedTestIdentifierKey
SiriTestingContextFailedTestNameKey
SiriTestingContextFailedTestMessageKey
<SiriTestingContext contextOverride:%@, testingContext:%@>
testingContext
prepare
speechInteraction
d8@?0
-[SiriLongPressButtonSource configureConnection]_block_invoke_2
-[SiriLongPressButtonSource configureConnection]_block_invoke
v24@?0@"<SiriAssertion>"8d16
-[SiriLongPressButtonSource didRecognizeLongPress]
-[SiriLongPressButtonSource _timestampForSpeechInteractionActivityWithTimestamp:]
SiriPresentationInvalidIdentifier
SiriPresentationSpringBoardMainScreenIdentifier
SiriPresentationCarPlayHeadUnitIdentifier
SiriPresentationMockIdentifier
SiriPresentationPineBoardMainScreenIdentifier
<unknown siri presentation identifier : %li>
SiriPresentationActivationCancelReasonShellEvent
SiriPresentationActivationCancelReasonSiriNotEnabled
SiriPresentationActivationCancelReasonLongPressDisabledInAccessibility
SiriPresentationActivationCancelReasonPreheatedWithoutActivation
SiriPresentationActivationCancelReasonPreviousPendingActivation
SiriPresentationActivationCancelReasonIncomingPhoneCall
SiriHomeAffordanceSuppressionNone
SiriHomeAffordanceSuppressionSuppress
SiriHomeAffordanceSuppressionInherit
-[SiriActivityAssertion dealloc]
SiriActivationEventTypeButton
SiriActivationEventTypeVoiceTrigger
SiriActivationEventTypeDirectAction
SiriActivationEventTypeContinuity
SiriActivationEventTypeBreadcrumb
SiriActivationEventTypeSimpleActivation
SiriActivationEventTypeSpotlight
SiriActivationEventTypeTesting
SiriActivationEventTypeKeyboardBluetoothShortcut
SiriActivationEventTypeRemotePresentationBringUp
event = AFActivationEvent%@; source = %@; context: %@
kern.waketime
-[SASActivationRequest computedActivationTime]
-[SASActivationRequest buttonDownTimestamp]
com.apple.cmas
-[SASBulletinManager bulletinForIdentifier:]
-[SASBulletinManager addBulletinCompletionWithBulletin:forFeed:]
-[SASBulletinManager observer:modifyBulletin:]
-[SASBulletinManager observer:removeBulletin:forFeed:]
-[SASBulletinManager observer:purgeReferencesToBulletinID:]
presentationIdentifier
presentationIdentifier = %@
SASPresentationState::presentationIdentifier
-[SiriActivationButtonEventListener registerWithListener:identifier:]
-[SiriActivationButtonEventListener configureConnectionForIdentifier:]_block_invoke_4
-[SiriActivationButtonEventListener configureConnectionForIdentifier:]_block_invoke
-[SiriActivationButtonEventListener unregisterListenerWithIdentifier:]
-[SiriActivationButtonEventListener _registerListenerWithIdentifier:]
-[SiriActivationButtonEventListener invalidatedAtTimestamp:]
-[SiriActivationButtonEventListener buttonDownWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationButtonEventListener buttonUpWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationButtonEventListener buttonLongPressWithButtonIdentifier:forListenerIdentifier:atTimestamp:]
-[SiriActivationAssertion configureConnection]_block_invoke
-[SiriActivationAssertion invalidatedAtTimestamp:]
-[SiriActivationAssertion dealloc]
-[SiriRemotePresentationBringUpSource configureConnection]_block_invoke_2
-[SiriRemotePresentationBringUpSource configureConnection]_block_invoke
SASButtonIdentifierTransport:%@
-[SASButtonIdentifierTransport siriButtonIdentifier]
identifier
SASTimeIntervalTransport:%@
transport
SiriPresentationIdentifierTransport:%@
SiriPresentationActivationCancelReason:%@
SASLockStateTransport:%@
zllButton
mixable
v16@?0@"AFRequestInfo"8
v32@?0q8Q16@"NSDictionary"24
v16@?0@"AFSpeechRequestOptions"8
v24@?0@"INIntentResponse"8@"NSError"16
v32@?0@"INIntent"8@"NSString"16@?<v@?@"INIntentResponse"@"NSError">24
v16@?0@"INIntentForwardingActionResponse"8
v32@?0@"INIntentForwardingAction"8@"NSString"16@?<v@?@"INIntentForwardingActionResponse">24
v16@?0@"AFSiriActivationContext"8
-[SASRemoteRequestManager _init]_block_invoke_9
v24@?0@"AFSiriActivationContext"8@?<v@?@"NSError">16
-[SASRemoteRequestManager _init]_block_invoke
reason
Presentation rejected - remote presentation bringup activation expects AFSiriActivationSourceRemoteRequest.
-[SASRemoteRequestManager _handleRemotePrewarmWithInfo:]
-[SASRemoteRequestManager _handleNewRemoteRequestWithInfo:]
-[SASRemoteRequestManager _handleRequestWatcherVoiceTriggerRequestWithInfo:]
-[SASRemoteRequestManager _processPendingVoiceTriggerActivationsWithInfo:delay:]_block_invoke
with %@ pending activations
no pending activations
-[SASRemoteRequestManager _handleRemoteRequestDismissalWithReason:options:analyticsContext:]
inSpokenNotification
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]
-[SASRemoteRequestManager _handlePendingVoiceTriggerActivationsWithInfo:]_block_invoke
SASRequestOptionsSourceCodingKey
SASRequestOptionsActivationDeviceIdentifierCodingKey
SASRequestOptionsBulletinCodingKey
SASRequestOptionsAppBundleIdentifierCodingKey
SASRequestOptionsDirectActionEventCodingKey
SASRequestOptionsMessagesDirectActionApplicationContextCodingKey
SASRequestOptionsServerCommandAceIdentifierCodingKey
SASRequestOptionsPronunciationRequestCodingKey
SASRequestOptionsPronunciationContextCodingKey
SASRequestOptionsTextCodingKey
SASRequestOptionsSpeechFileURLCodingKey
SASRequestOptionsTimestampCodingKey
SASRequestOptionsExpectedTimestampCodingKey
SASRequestOptionsButtonDownTimestampCodingKey
SASRequestOptionsIsInitialBringUpKey
SASRequestOptionsUseAutomaticEndpointingKey
SASRequestOptionsUseStreamingDictationKey
SASRequestOptionsAcousticIdEnabledKey
SASRequestOptionsReleaseAudioSessionOnRecordingCompletionKey
SASRequestHomeButtonUpFromBeepKey
SASRequestContinuityDataKey
SASRequestRequestInfoKey
SASRequestSpeechRequestOptionsKey
SASRequestPredictedRecordRouteIsZLL
SASRequestOptionsUIPresentationIdentifierCodingKey
SASRequestOptionsTestingContextKey
SASRequestOptionsIsConnectedToCarPlayCodingKey
SASRequestOptionsIsForCarDNDCodingKey
SASRequestOptionsCarDNDStatusCodingKey
SASRequestOptionsCurrentLockStateCodingKey
SASRequestOptionsInstrumentationEventsCodingKey
SASRequestOptionsCurrentCarPlaySupportedOEMAppIdListKey
SASRequestOptionsIsTVShortButtonPressAction
SASRequestOptionsStartRecordingSoundIDCodingKey
SASRequestOptionsOriginalOptionsCodingKey
SASRequestOptionsPresentationModeCodingKey
SASRequestOptionsPreviousTurnIdentifierCodingKey
SASRequestOptionsIsRightHandDriveKey
SASRequestOptionsTVRemoteType
SASRequestOptionsIsRemotePresentationBringUpCodingKey
SASRequestOptionsIsTVRemoteSourcePTTEligibleCodingKey
SASRequestOptionsLongPressBehavior
-[SASRequestOptions setRequestSource:]
<%@ %p; requestSource=%@
;activationDeviceIdentifier=%@
;bulletin=%@
;appBundleIdentifier=%@
;directActionEvent=%@
;serverCommandId=%@
;isPronunciationRequest=%i
;pronunciationContext=%@
;text=%@
;speechFileURL=%@
;expectedTimestamp=%0.1f;timestamp=%0.1f;buttonDownTimestamp=%0.1f;isInitialBringUp=%i;useAutomaticEndpointing=%i;useStreamingDictation=%i;acousticId=%i;releaseAudioSessionORC=%i;predictedZLL=%i
;uiPresentationIdentifier=%@
;testingContext=%@
;is(speech=%i; textInput=%i;stark=%i;CPconnected=%i;dnd=%i;rightHandDrive=%i);carDNDStatus=%@;remotePresentationBringUp=%i
;homeButtonUpFromBeep=%@
;continuityInfo=%@
;requestInfo=%@
;currentLockState=%@
;directActionApplicationContext=%@
;carPlayOEMList=%@
;isShortButtonPressAction=%i
;startRecordingSoundId=%@
;originalRequestOptions.requestSource=%@
;presentationMode=%zd
;tvRemoteType=%@
;isTVRemoteSourcePTTEligible=%i
;longPressBehavior=%ld>
siri_ptt_b519
isConnectedToCarPlay
rightHandDrive
isForCarDND
carDNDStatus
currentCarPlaySupportedOEMAppIdList
-[SASRequestOptions _updateWithSystemState:forcefully:]
SASRequestSourceNotSpecified
SASRequestSourceHomeButton
SASRequestSourceLockButton
SASRequestSourceVirtualButton
SASRequestSourceWiredMicrophone
SASRequestSourceBluetoothHeadset
SASRequestSourceMotionUpGesture
SASRequestSourceMotionDownGesture
SASRequestSourceVoice
SASRequestSourceServerCommand
SASRequestSourceStark
SASRequestSourceStarkPhoneHome
SASRequestSourceStarkVoiceTrigger
SASRequestSourceStarkNotification
SASRequestSourceStarkAppProxy
SASRequestSourceTVRemote
SASRequestSourceTesting
SASRequestSourceStarkSiriButton
SASRequestSourceAccessory
SASRequestSourceContinuity
SASRequestSourceSiriSetup
SASRequestSourceBreadcrumb
SASRequestSourceGuideUpdate
SASRequestSourceKeyboard
SASRequestSourceSpotlightQuerySuggestion
SASRequestSourceSpotlightAskSiriButton
SASRequestSourceTriggerless
SASRequestSourceAssistiveTouch
SASRequestSourceVoiceCommandButton
SASRequestSourceControlCenterRemoteUI
SASRequestSourceRemoteApp
SASRequestSourceNonAppleRemote
SASRequestSourceTapToEdit
SASRequestSourceBackTap
SASRequestSourceKeyboardShortcut
SASRequestSourceHearstButton
SASRequestSourceBluetoothKeyboardShortcut
SASRequestSourceStarkSpokenNotification
SASRequestSourceRemotePresentationBringUp
SASRequestSourceHeadphonesAnnounceNotification
SASRequestSourceHeadphonesAnnounceCall
SASRequestSourceCarPlaySteeringWheel
SASRequestSourceCarPlayJarvis
AFDirectActionSourceFromSASRequestSource
CARAutomaticFeatureStateUnknown
CARAutomaticFeatureStateOn
CARAutomaticFeatureStateOff
CARAutomaticFeatureStateGetName
SASLockStateUnlocked
SASLockStateScreenLocked
SASLockStatePasscodeLocked
SASRequestInputTypeNone
SASRequestInputTypeText
SASRequestInputTypeSpeech
-[SiriBreadcrumbSource configureConnection]_block_invoke_2
-[SiriBreadcrumbSource configureConnection]_block_invoke
com.apple.SiriViewService
SiriHardwareButtonLongPressBehavior
#configurationUpdateManager longPressBehavior: %ld previousValue: %ld
#configurationUpdateManager %@ changed to %@
-[SiriContinuitySource configureConnection]_block_invoke_2
-[SiriContinuitySource configureConnection]_block_invoke
-[SASSystemState init]_block_invoke
com.apple.siri.ActivationService.SystemState
com.apple.bluetooth.WirelessSplitterOn
com.apple.bluetooth.GuestConnected
-[SASSystemState isWirelessSplitterOn]
-[SASSystemState isGuestConnected]
com.apple.Maps
-[SASSystemState _setCarPlayConnectionState:]
v20@?0B8@"NSError"12
-[SASSystemState _fetchOEMAppContext]_block_invoke
v24@?0@"NSSet"8@"NSError"16
-[SASSystemState _updateAccessibilityState]
+[SASActivationDecision canActivateForCondition:]
Hey Siri
Double-Tap
BluetoothFeatures
AnnounceTelephony
Siri
hang_up
W2 HS activation event during a call
Voice Request during a call
triggerless reply to announce call during a call
announce call on headphones request during a call
SiriInCall
blushing_phantom
Test Request during a call
+[SASActivationDecision _shouldSiriActivateForSiriSetupWithSystemState:]
<SiriContext contextOverride:%@ speechRequestOptions:%@>
speechRequestOptions
contextOverride
v16@?0q8
<SiriLongPressButtonContext contextOverride:%@, utteranceText:%@, source:%@>
utteranceText
source
UnknownSiriSpotlightContextSource
SiriSpotlightContextSourceQuerySuggestion
SiriSpotlightContextSourceAskSiriButton
buttonDownTimestamp
activeDeviceBluetoothIdentifier
remoteType
isListening
isSourcePTTEligible
<SiriTVLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@,activeDeviceBluetoothIdentifier:%@,remoteType:%@,isListening:%d,isSourcePTTEligible:%d>
-[SiriTVLongPressButtonContext isPTTEligible]
SiriTVRemoteTypeUnknown
SiriTVRemoteTypeControlCenter
SiriTVRemoteTypeSiriRemote
SiriTVRemoteTypeSiriRemote4K
SiriTVRemoteTypeExternal
SiriTVRemoteTypeSiriRemote2021
SiriTVRemoteTypeE
SASButtonEventTypeUnknown
SASButtonEventTypeDown
SASButtonEventTypeUp
SASButtonEventTypeTap
SASButtonEventTypeLong
SBTestingConfigureNextAssistantRecognitionStrings
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
<SiriHearstLongPressButtonContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@>
isTemporaryDevice
-[SASBulletinCache insertBulletin:fromFeed:]
-[SASBulletinCache allBulletins]
com.apple.siri.SerialBluetoothEndpointQueue
-[SASBluetoothEndpointUtility isConnectedToBluetoothVehicle]
-[SASBluetoothEndpointUtility _registerListenersAndSetEndpointTypeWithNotification:]
-[SASBluetoothEndpointUtility _setEndpointTypeWithNotification:]_block_invoke
v24@?0@"NSNumber"8@"NSError"16
-[SiriDirectActionSource configureConnection]_block_invoke_2
-[SiriDirectActionSource configureConnection]_block_invoke
-[SiriDirectActionSource canActivateChangedTo:]
SASUnderstandingOnDeviceAssetsStateQueue
-[SASUnderstandingOnDeviceAssetsState updateState]_block_invoke_2
-[SASUnderstandingOnDeviceAssetsState updateState]_block_invoke
SiriBringup
SiriBringupToCarPlayMessageReading
SiriBringupToFlamesListening
SiriBringupToInitialQuery
SiriBringupToSiriProcessContentAppeared
SiriBringupTVSyntheticSpeechCapturedToSnippetResults
SiriBringupTVSyntheticSpeechCapturedToSpeechRecording
SiriScrollTeamRoster
testOptions
delta
iterations
speechFile
testName
SASRequestStateOff
SASRequestStateHeated
SASRequestStateStarting
SASRequestStateActive
SASRequestStateStopping
type
type = %ld (%@)
text = %@
recordedSpeechURL = %@
SASTestingInput::type
SASTestingInput::text
SASTestingInput::recordedSpeechURL
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
-[SASSignalConnectionListener listener:didReceiveConnection:withContext:]
<SiriLongPressButtonContext contextOverride:%@ buttonDownTimestamp:%@ longPressBehavior: %@>
longPressBehavior
+[SASSignalServer serverForConnection:]
-[SASSignalServer _setConnection:]
-[SASSignalServer _setConnection:]_block_invoke_2
-[SASSignalServer _setConnection:]_block_invoke
+[SASSignalServer _unregisterConnection:]
-[SASSignalServer registerButtonIdentifier:withUUID:]
-[SASSignalServer unregisterButtonIdentifier:withUUID:]
-[SASSignalServer registerNonButtonSourceWithType:withUUID:]
-[SASSignalServer unregisterNonButtonSourceWithType:withUUID:]
-[SASSignalServer activationRequestFromButtonIdentifier:context:]
-[SASSignalServer deactivationRequestFromButtonIdentifier:context:options:]
-[SASSignalServer _activationRequestFromDirectActionEventWithContext:completion:]
-[SASSignalServer activationRequestFromContinuityWithContext:]
-[SASSignalServer activationRequestFromRemotePresentationBringUpWithContext:]
-[SASSignalServer activationRequestFromBreadcrumb]
-[SASSignalServer activationRequestFromBluetoothKeyboardActivation:]
-[SASSignalServer activationRequestFromSimpleActivation:]
-[SASSignalServer activationRequestFromSpotlightWithContext:]
-[SASSignalServer activationRequestFromTestingWithContext:]
-[SASSignalServer prewarmFromButtonIdentifier:]
-[SASSignalServer prewarmFromButtonIdentifier:longPressInterval:]
-[SASSignalServer cancelPrewarmFromButtonIdentifier:]
-[SASSignalServer buttonDownFromButtonIdentifier:timestamp:context:]
-[SASSignalServer buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:]
-[SASSignalServer buttonTapFromButtonIdentifier:]
-[SASSignalServer buttonLongPressFromButtonIdentifier:context:]
-[SASSignalServer registerAssertionWithIdentifier:reason:]
-[SASSignalServer unregisterAssertionWithIdentifier:]
-[SASSignalServer registerButtonEventListenerWithIdentifier:]
-[SASSignalServer unregisterButtonEventListenerWithIdentifier:]
-[SASPresentationConnectionListener listener:didReceiveConnection:withContext:]
-[SASPresentationModel flushEnqueuedButtonEventCompletions]
<SiriContinuityContext contextOverride:%@ isTemporaryDevice:%@ speechRequestOptions:%@ requestInfo:%@ userActivity:%@>
requestInfo
userActivity
<SiriBluetoothContext contextOverride:%@ isTemporaryDevice:%@ isEyesFree:%@ address:%@>
isEyesFree
address
SiriActivationSource
SiriPresentationOptions
NSCopying
NSSecureCoding
NSCoding
_SiriPresentationOptionsMutation
SiriPresentationOptionsMutating
NSObject
SiriPresentationOptionsMutability
SASRequestOptionsBuilder
SASOverriddenSystemState
SiriButtonIdentifier
SASHeater
SASSiriPocketStateManager
CMPocketStateDelegate
SiriPunchoutRequest
SASAnalytics
SASMyriadController
SASLockStateMonitorDelegate
AFMyriadDelegate
SiriContextOverride
SASPresentationClientInterface
SASPresentationServerInterface
SASPresentationServer
SiriTVActivationSource
SiriClientAdditions
SASBoardServicesConfiguration
SiriVoiceTriggerContext
SASTipKitSignalEmitter
SiriActivationService
SASRequestOptionsBuilderDataSource
SASRequestOptionsBuilderDataSourceForTesting
SASHeaterDelegate
SASMyriadControllerDelegate
SASBulletinManagerDelegate
SASStateChangeListener
SASPresentationManagerDelegate
SiriSpotlightSource
SiriDirectActionContext
SASPresentationManager
SiriDismissalOptions
SASPresentationDecision
SiriRemotePresentationBringUpContext
SiriSimpleActivationSource
SiriTestingSource
SiriTestingContext
SiriLongPressButtonSource
SiriLongPressButtonConfigurationUpdateDelegate
SiriButtonSource
SiriActivationSourceContext
SiriPresentationIdentifier
SiriPresentationActivationCancelReason
SiriHomeAffordanceSuppression
SiriActivityAssertion
SiriAssertion
SiriActivationEventType
SASActivationRequest
SASButtonActvationRequest
SASBulletinManager
BBObserverDelegate
SASPresentationState
_SASPresentationStateMutation
SASPresentationStateMutating
SASPresentationStateMutability
SiriActivationButtonEventListener
SiriActivationAssertion
SiriBluetoothKeyboardActivationSource
SiriRemotePresentationBringUpSource
SASButtonIdentifierTransport
SASTimeIntervalTransport
SiriPresentationIdentifierTransport
SiriPresentationActivationCancelReasonTransport
SASLockStateTransport
SASRemoteRequestManager
SASRequestOptions
SiriBreadcrumbSource
SiriLongPressButtonConfigurationUpdateManager
SiriContinuitySource
SASLockStateMonitor
SASSystemState
SASEmptyProtocol
CARSessionObserving
SASActivationCondition
SASActivationDecision
SiriContext
SASRequestTrigger
SiriSpotlightContext
SiriTVLongPressButtonContext
SiriShortPressButtonContext
SASTestingInputController
SiriHearstLongPressButtonContext
SiriLongPressButtonConfiguration
SASBulletinCacheNode
SASBulletinCache
SASBluetoothEndpointUtility
SiriDirectActionSource
SASUnderstandingOnDeviceAssetsState
SASTestingInput
_SASTestingInputMutation
SASTestingInputMutating
SASTestingInputMutability
SASSignalConnectionListener
BSServiceConnectionListenerDelegate
SiriLongPressButtonContext
SiriBluetoothDeviceSource
SASSignalClientInterface
SASSignalServerInterface
SASSignalServer
SASPresentationConnectionListener
SASPresentationModel
SiriContinuityContext
SiriBluetoothContext
isTVPushToTalkEnabled
weakToWeakObjectsMapTable
isAutomaticDNDAvailable
timerWithTimeInterval:repeats:block:
setTransitionHandler:
containsString:
setAvailableOnLockScreen:
numberWithInt:
hasEntitlement:
numberWithInteger:
content
allKeys
dictionary
title
numberWithUnsignedInteger:
contentType
dictionaryWithDictionary:
transitionReasons
allObjects
UUIDString
allValues
dictionaryWithObjects:forKeys:count:
object
setIntentForwardingActionHandler:
UUID
objectForKey:
sourceIdentifier
setIntentHandler:
alwaysAllowVoiceActivation
objectForKeyedSubscript:
setInterface:
isVoiceTrigger
setPrewarmHandler:
copy
setInterfaceTarget:
cachedAutomaticDNDActiveState
count
setButtonEventHandler:
setInterruptionHandler:
disableAssistantWhilePasscodeLocked
keyEnumerator
countByEnumeratingWithState:objects:count:
discoverabilitySignal
setValue:forKey:
setInvalidationHandler:
languageCode
startActivityUpdatesToQueue:withHandler:
appendFormat:
lastObject
setRead:
currentCoordinator
startAdvertisingFromDirectTrigger
applicationProxyForIdentifier:
isCurrentLocaleNativelySupported
activationEventTime
processInfo
startAdvertisingFromDirectTriggerWithContext:
currentLayout
length
areSiriUODAssetsAvailable:
requiresUserInteraction
startAdvertisingFromInTaskVoiceTrigger
array
currentRunLoop
startAdvertisingFromInTaskVoiceTriggerWithContext:
protocolForProtocol:
doubleValue
arrayWithCapacity:
setWithObjects:
currentSession
startAdvertisingFromVoiceTriggerAdjusted:
arrayWithObjects:count:
isEqualToArray:
elements
scheduledTimerWithTimeInterval:repeats:block:
pickableRoutesForCategory:andMode:
listenerWithConfigurator:
isEqualToString:
startAdvertisingFromVoiceTriggerAdjusted:withContext:
qualityOfService
setXPCConnectionManagementQueue:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
encodeBool:forKey:
sectionID
localizedNameForContext:
currentThread
queryStateOntoQueue:andMonitorFor:withTimeout:andHandler:
attach:
encodeDouble:forKey:
sharedAVSystemController
unsignedIntegerValue
initWithSuiteName:
encodeInteger:forKey:
attributeForKey:
sendEvent:
sharedAnalytics
encodeObject:forKey:
date
endpointForMachName:service:instance:
sharedInstance
availableOnLockScreen
logEvent:
serverDidInvalidateConnection:
initWithBundleIdentifier:
stationary
bbBulletin
initWithBundleIdentifier:intentForwardingAction:
logEventWithType:context:
setContextDictionary:
sharedPreferences
stopActivityUpdates
bestSupportedLanguageCodeForLanguageCode:
logEvents:
setService:
decodeBoolForKey:
boolValue
enumerateKeysAndObjectsUsingBlock:
initWithUUIDString:
setNewRequestHandler:
setServiceQuality:
MFiCertificateSerialNumber
caseInsensitiveCompare:
decodeDoubleForKey:
stringByAppendingString:
setNewSpeechRequestHandler:
event
initWithCapacity:
decodeIntegerForKey:
stringWithFormat:
checkResourceIsReachableAndReturnError:
longValue
decodeObjectOfClass:forKey:
setNotification:fromSourceApp:
componentsJoinedByString:
decodeObjectOfClasses:forKey:
isMainThread
setObject:forKey:
bulletinID
mainQueue
fetchApplicationBundleIdentifiersForCarIntents:
decodePropertyListForKey:
setObject:forKeyedSubscript:
userInteractive
fetchAutomaticDNDAssertionWithReply:
defaultCenter
fileURLWithPath:isDirectory:
setObserverFeed:
instrumentationUpdateBoost:value:
remoteProcess
firstObject
configurationForDefaultMainDisplayMonitor
setActivationHandler:
valueForKey:
integerValue
floatValue
deliverIntent:reply:
monitorWithConfiguration:
supportsSiriMixable
intentIDs
remoteTarget
deliverIntentForwardingActionWithResponseHandler:
supportsSiriZLL
mutableCopy
intentIdentifiers
supportsSiriZLLButton
configureConnection:
vehicleModelName
removeAllObjects
myriadContext
addObject:
interfaceWithServer:client:
initWithDomain:code:userInfo:
designModeIsEnabled
systemUptime
getServiceSetting:key:
setDismissalHandler:
voiceTriggerEventInfo
initWithFloat:
device
setDisplayName:
addObserver:forKeyPath:options:context:
removeObject:
initWithFormat:
voiceTriggerMode
invalidateIntentDelivery
addObserver:selector:name:object:
deviceFromIdentifier:
removeObjectForKey:
isServiceSupported:
setDomain:
initWithIdentifier:bundleID:context:
deviceID
addSessionObserver:
removeObjectsInRange:
buttonEventListenerDidReceiveButtonDownWithButtonIdentifier:atTimestamp:
setAssociatedBundleIdentifier:
connectionWithEndpoint:
buttonEventListenerDidReceiveButtonLongPressWithButtonIdentifier:atTimestamp:
initWithKeyOptions:valueOptions:capacity:
setAttachmentStatusChangedHandler:
removeObserver:
null
addTimer:forMode:
removeObserver:forKeyPath:
containsObject:
numberWithBool:
buttonEventListenerDidReceiveButtonUpWithButtonIdentifier:atTimestamp:
absoluteString
initWithName:options:queue:delegate:
weakObjectsHashTable
setAttribute:forKey:error:
isActivityAvailable
timeIntervalSince1970
numberWithDouble:
init
dealloc
isEnabled
isActive
invalidate
activeChangedTo:
identifier
setIdentifier:
.cxx_destruct
_connection
_lock
_active
_knowsIfActive
_identifier
T@"NSString",&,N,V_identifier
description
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithBuilder:
initWithWakeScreen:hideOtherWindowsDuringAppearance:rotationStyle:requestSource:
hash
isEqual:
wakeScreen
hideOtherWindowsDuringAppearance
rotationStyle
requestSource
_wakeScreen
_hideOtherWindowsDuringAppearance
_rotationStyle
_requestSource
TB,R,N,V_wakeScreen
TB,R,N,V_hideOtherWindowsDuringAppearance
Tq,R,N,V_rotationStyle
Tq,R,N,V_requestSource
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setWakeScreen:
setHideOtherWindowsDuringAppearance:
setRotationStyle:
setRequestSource:
initWithBaseModel:
generate
_baseModel
_mutationFlags
mutatedCopyWithMutator:
newWithBuilder:
buildOptionsWithRequest:presentationIdentifier:dataSource:
_createRequestOptionsForRequest:withDataSource:
_siriIsEnabled
systemState
setSystemState:
presentationIdentifier
setPresentationIdentifier:
_systemState
_presentationIdentifier
T@"SASSystemState",&,N,V_systemState
Tq,N,V_presentationIdentifier
initWithSystemState:contextOverride:
lockStateMonitor
setLockStateMonitor:
currentSpokenLanguageCode
hasUnlockedSinceBoot
deviceIsBlocked
deviceIsPasscodeLocked
pocketStateShouldPreventVoiceTrigger
isPad
smartCoverClosed
accessibilityShortcutEnabled
carDNDActive
isConnectedToCarPlay
isConnectedToTrustedCarPlay
siriIsEnabled
siriIsRestricted
siriIsSupported
contextOverride
setContextOverride:
_contextOverride
T@"SiriContextOverride",&,N,V_contextOverride
stringWithSiriButtonIdentifier:
_suggestPreheat
prepareForUseAfterTimeInterval:
cancelPreparationForButtonIdentifier:
_cancelPreparation
updatePredictedRouteIsZLL
delegate
setDelegate:
_preparationStartTime
_setPreparationStartTime:
predictedRecordRouteIsZLL
setPredictedRecordRouteIsZLL:
preheatTimer
setPreheatTimer:
preheatTimeInterval
setPreheatTimeInterval:
_predictedRecordRouteIsZLL
_delegate
_preheatTimer
_preheatTimeInterval
preparationStartTime
Td,N,G_preparationStartTime,S_setPreparationStartTime:,V_preparationStartTime
TB,N,V_predictedRecordRouteIsZLL
T@"NSTimer",&,N,V_preheatTimer
Td,N,V_preheatTimeInterval
T@"<SASHeaterDelegate>",W,N,V_delegate
sharedManager
pocketStateManager:didUpdateState:
_init
queryForPocketStateWithCompletion:
pocketStateShouldPreventVoiceTriggerForActivationRequest:
_updateForPocketState:
_stringForPocketState:
_pocketStateManager
_setPocketStateManager:
_currentPocketState
_setCurrentPocketState:
pocketStateManager
T@"CMPocketStateManager",&,N,G_pocketStateManager,S_setPocketStateManager:,V_pocketStateManager
currentPocketState
Tq,N,G_currentPocketState,S_setCurrentPocketState:,V_currentPocketState
bundleIdentifier
setBundleIdentifier:
setUrl:
punchoutStyle
setPunchoutStyle:
_bundleIdentifier
_url
_punchoutStyle
T@"NSString",C,N,V_bundleIdentifier
T@"NSURL",C,N,V_url
Tq,N,V_punchoutStyle
analytics
enqueueCurrentAnalyticsEventWithType:context:
_enqueueAnalyticsEvent:
flushPendingAnalyticsEventQueue
shouldLogAnalyticsEvents
setShouldLogAnalyticsEvents:
pendingAnalyticsEventQueue
setPendingAnalyticsEventQueue:
_analyticsEventQueue
_shouldLogAnalyticsEvents
_pendingAnalyticsEventQueue
TB,N,V_shouldLogAnalyticsEvents
T@"NSMutableArray",&,N,V_pendingAnalyticsEventQueue
shouldContinue:
shouldAbort:
didChangeLockState:
didChangeLockState:toState:
willStartWithSession:
willEndSession:
shouldAbortAnotherDeviceBetter:
shouldUnduck:
shouldHandleEmergency:
advertisingWillBeginWithDelay:advertisingInterval:
advertisingDidBegin:
advertisingDidEnd:
listeningDidBegin:
listeningDidEnd:
myriadCoordinatorWillHandleEmergency:
myriadCoordinatorDidHandleEmergency:
initWithDelegate:
setCanceledByMyriad:
activateForRequest:visible:
activateForRequest:withTimeout:visible:
activateForInTaskRequest:isVisible:
_updateRaiseToWakeTimeForTransition:
_configureMotionActivityManager
canceledByMyriad
_myriadCoordinator
_isLocked
_myriadFinishedSemaphore
_displayMonitor
_raiseToWakeTime
_unlockTime
_lockStateMonitor
_isStationary
_liftEndTime
_activityManagerLock
_activityManager
_canceledByMyriad
TB,N,V_canceledByMyriad
overrideCurrentSpokenLanguageCode:
overrideHasUnlockedSinceBoot:
overrideDeviceIsBlocked:
overrideDeviceIsPasscodeLocked:
overridePocketStateShouldPreventVoiceTrigger:
overrideIsPad:
overrideSmartCoverClosed:
overrideAccessibilityShortcutEnabled:
overrideCarDNDActive:
overrideConnectedToTrustedCarPlay:
overrideConnectedToCarPlay:
overrideSiriIsEnabled:
overrideSiriIsRestricted:
overrideSiriIsSupported:
currentSpokenLanguageCodeForSystemState:
hasUnlockedSinceBootForSystemState:
deviceIsBlockedForSystemState:
deviceIsPasscodeLockedForSystemState:
pocketStateShouldPreventVoiceTriggerForSystemState:
isPadForSystemState:
smartCoverClosedForSystemState:
accessibilityShortcutEnabledForSystemState:
carDNDActiveForSystemState:
isConnectedToCarPlayForSystemState:
isConnectedToTrustedCarPlayForSystemState:
siriIsEnabledForSystemState:
siriIsRestrictedForSystemState:
siriIsSupportedForSystemState:
setCurrentSpokenLanguageCode:
unlockedSinceBoot
setUnlockedSinceBoot:
setDeviceIsBlocked:
setDeviceIsPasscodeLocked:
setPocketStateShouldPreventVoiceTrigger:
setPad:
setSmartCoverClosed:
setAccessibilityShortcutEnabled:
setCarDNDActive:
connectedToCarPlay
setConnectedToCarPlay:
connectedToTrustedCarPlay
setConnectedToTrustedCarPlay:
setSiriIsEnabled:
setSiriIsRestricted:
setSiriIsSupported:
_currentSpokenLanguageCode
_unlockedSinceBoot
_deviceIsBlocked
_deviceIsPasscodeLocked
_pocketStateShouldPreventVoiceTrigger
_pad
_smartCoverClosed
_accessibilityShortcutEnabled
_carDNDActive
_connectedToCarPlay
_connectedToTrustedCarPlay
_siriIsRestricted
_siriIsSupported
T@"NSString",&,N,V_currentSpokenLanguageCode
T@"NSNumber",&,N,V_unlockedSinceBoot
T@"NSNumber",&,N,V_deviceIsBlocked
T@"NSNumber",&,N,V_deviceIsPasscodeLocked
T@"NSNumber",&,N,V_pocketStateShouldPreventVoiceTrigger
T@"NSNumber",&,N,V_pad
T@"NSNumber",&,N,V_smartCoverClosed
T@"NSNumber",&,N,V_accessibilityShortcutEnabled
T@"NSNumber",&,N,V_carDNDActive
T@"NSNumber",&,N,V_connectedToCarPlay
T@"NSNumber",&,N,V_connectedToTrustedCarPlay
T@"NSNumber",&,N,V_siriIsEnabled
T@"NSNumber",&,N,V_siriIsRestricted
T@"NSNumber",&,N,V_siriIsSupported
registerPresentationIdentifier:
unregisterPresentationIdentifier:
willDismiss
didDismiss
didPresentSiri
resetSiriToActive
failedToPresentSiriWithError:
didUpdatePresentationState:
allBulletins
bulletinsOnLockScreen
bulletinForIdentifier:
speechRequestStartedFromSiriOrb
speechRequestCancelledFromSiriOrb
pong
presentationRequestedWithPresentationOptions:requestOptions:
presentationDismissalRequestedWithOptions:
handleRequestWithOptions:
presentationisIdleAndQuiet
preheat
cancelPreheat
cancelPendingActivationEventWithReason:
wakeScreenAfterActivationWithReason:
presentationWithIdentifier:didUpdatePresentationState:
handleTestingActivation:
handleButtonDownFromButtonIdentifier:timestamp:context:
handleButtonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:
handleButtonTapFromButtonIdentifier:
handleButtonLongPressFromButtonIdentifier:deviceIdentifier:timestamp:context:
updateCurrentLockState:
bulletinManagerDidChangeBulletins
deviceWonMyriadElection
activationDeterminedShouldDeferWake:
ping
serverForConnection:
_unregisterConnection:
interface
serviceQuality
_setConnection:
workspaceServiceInjector
setWorkspaceServiceInjector:
connection
setConnection:
invalidated
setInvalidated:
waitForConnectBlocks
setWaitForConnectBlocks:
weak_delegate
setWeak_delegate:
_invalidated
_workspaceServiceInjector
_waitForConnectBlocks
_weak_delegate
T@"BSServiceConnectionEndpointInjector",&,N,V_workspaceServiceInjector
T@"BSServiceConnection<BSServiceConnectionHost>",&,N,V_connection
TB,N,V_invalidated
T@"NSMutableArray",&,N,V_waitForConnectBlocks
T@"<SASPresentationServerDelegate>",W,N,V_weak_delegate
activationSourceForIdentifier:
setDeviceIdentifier:
setRemoteType:
setListening:
_deviceIdentifier
setPTTEligible:
deviceIdentifier
remoteType
longPressInterval
setLongPressInterval:
context
setContext:
_remoteType
_longPressInterval
_context
Td,N,V_longPressInterval
T@"SiriLongPressButtonContext",&,N,V_context
T@"NSString",C,N,V_deviceIdentifier
TQ,N,V_remoteType
ac_isEyesFree
configuration
domainForService:
identifierForService:
machServiceIdentifier
setMachServiceIdentifier:
presentationDomain
setPresentationDomain:
signalDomain
setSignalDomain:
signalIdentifier
setSignalIdentifier:
_machServiceIdentifier
_presentationDomain
_signalDomain
_signalIdentifier
T@"NSString",&,N,V_machServiceIdentifier
T@"NSString",&,N,V_presentationDomain
T@"NSString",&,N,V_presentationIdentifier
T@"NSString",&,N,V_signalDomain
T@"NSString",&,N,V_signalIdentifier
checkAndEmitSignalsForRequestOptions:
_checkAndEmitSignalsWithSource:forRequestOptions:
buttonDownWithButtonIdentifier:forListenerIdentifier:atTimestamp:
buttonUpWithButtonIdentifier:forListenerIdentifier:atTimestamp:
buttonLongPressWithButtonIdentifier:forListenerIdentifier:atTimestamp:
canActivateChangedTo:
service
requestOptionsBuilder:optionsForOverriding:withActiviation:
requestOptionsBuilder:isRequestInitialWithActiviation:
requestOptionsBuilder:isPredictedRecordRouteIsZLLWithActiviation:
requestOptionsBuilder:isAcousticIdAllowedWithActiviation:
requestOptionsBuilder:shouldRequestUseAutomaticEndpointingWithActiviation:
requestOptionsBuilder:uiPresentationIdentifierWithActivation:activationPresentation:
requestOptionsBuilder:currentLockStateForActivation:
heaterSuggestsPreheating:
heater:cancelledPreparationWithButtonIdentifier:duration:targetDuration:
bulletinManagerDidChangeBulletins:
callStateChangedToIsActive:isOutgoing:
presentationManager:didChangeShouldRejectNewActivationsTo:
presentationManager:didEncounterError:
_shouldRejectNewActivations:
_requestState
_notifySourcesOfActiveChange:
_notifyListenersOfButtonDownWithButtonIdentifier:atTimestamp:
_notifyListenersOfButtonUpWithButtonIdentifier:atTimestamp:
_notifyListenersOfButtonLongPressWithButtonIdentifier:atTimestamp:
_updateCanActivateFromDirectActionSource
setCanActivateFromDirectActionSource:
_notifySourcesOfCanActivateFromDirectActionSourceChange:
registerSiriPresentation:withIdentifier:
unregisterSiriPresentationIdentifier:
siriPresentationDisplayedWithIdentifier:
siriPresentationWillDismissWithIdentifier:
siriPresentationDismissedWithIdentifier:
siriPresentationFailureWithIdentifier:error:
siriPresentationDidUpdateState:
registerActivationSource:withIdentifier:
unregisterActivationSourceIdentifier:
registerActivationAssertion:withIdentifier:
unregisterActivationAssertionWithIdentifier:
registerButtonEventListenerServer:identifier:
unregisterButtonEventListenerWithIdentifier:
presentationsAreIdleAndQuiet
isConnectedTo188
_B188ActivationEvent:context:options:
activationRequestFromButtonIdentifier:context:
deactivationRequestFromButtonIdentifier:context:options:
_shouldRejectActivationWithButtonIdentifier:activationAssertions:
prewarmFromButtonIdentifier:longPressInterval:
_defrost
cancelPrewarmFromButtonIdentifier:
buttonDownFromButtonIdentifier:timestamp:context:
buttonUpFromButtonIdentifier:deviceIdentifier:timestamp:context:
buttonTapFromButtonIdentifier:
buttonLongPressFromButtonIdentifier:context:
_buttonIsTVMicrophoneButton:
_handleTapSynthesisIfNeededForButtonIdentifier:buttonUpTimestamp:
_recordTimeIfNeededForButtonIdentifier:buttonDownTimestamp:
_buttonIsAVExternalButton:
activationRequestFromDirectActionEventWithContext:completion:
activationRequestFromContinuityWithContext:
activationRequestFromVoiceTriggerWithContext:
activationRequestFromBreadcrumb
activationRequestFromBluetoothKeyboardActivation:
activationRequestFromRemotePresentationBringUpWithContext:
activationRequestFromSimpleActivation:
activationRequestFromSpotlightWithContext:
activationRequestFromVoiceTrigger
activationRequestFromTestingWithContext:
speechRequestStateDidChange:
handleActivationRequest:
handleActivationRequest:systemState:
_logActivationToPowerLogWithReason:
dismissSiriWithOptions:
_activatePresentationWithIdentifier:requestOptions:analyticsContext:
_shouldHandlePocketStateFetchForRequestOptions:
_handlePocketStateFetchForScreenWakeForPresentationIdentifier:requestOptions:presentationOptions:
_dismissSiri:
_preheatPresentation
_attachToTether
_cancelActivationPreparationForSetup
_cancelPendingActivationEventWithReason:
_handleDesignModeRequest
_isVoiceActivationMaskNecessaryWithRequestOptions:
afPreferences
updatePredicatedRecordRoute
_isInitialRequest
activationRequestFromTestRunnerWithContext:
_registerForVoiceTrigger
_unregisterForVoiceTrigger
pongWithPresentationIdentifier:
_updateRequestOptionsWithTestingContextFromActivationRequest:requestOptions:
setAfPreferences:
uodAssetsState
setUodAssetsState:
xcTestingActive
setXcTestingActive:
sources
setSources:
activationAssertions
setActivationAssertions:
buttonEventListeners
setButtonEventListeners:
heater
setHeater:
siriTether
setSiriTether:
siriTetherIsAttached
setSiriTetherIsAttached:
activationTimestamp
setActivationTimestamp:
voiceTriggerNotifyTokenIsValid
setVoiceTriggerNotifyTokenIsValid:
bulletinManager
setBulletinManager:
remoteRequestManager
setRemoteRequestManager:
testingInputController
setTestingInputController:
avExternalButtonEvents
setAvExternalButtonEvents:
buttonDownHasOccurredSinceActivation
setButtonDownHasOccurredSinceActivation:
canActivateFromDirectActionSource
_pocketStateFetchingInProgressForHeadsetActivation
_setPocketStateFetchingInProgressForHeadsetActivation:
bluetoothEndpointUtil
setBluetoothEndpointUtil:
presentationManager
setPresentationManager:
_buttonTrigger
_preheatedPresentation
_voiceTriggerNotifyToken
_voiceTriggerDispatchQueue
_B188ActivationTimer
_myriadController
_xcTestingActive
_siriTetherIsAttached
_voiceTriggerNotifyTokenIsValid
_buttonDownHasOccurredSinceActivation
_canActivateFromDirectActionSource
_afPreferences
_uodAssetsState
_sources
_activationAssertions
_buttonEventListeners
_heater
_siriTether
_activationTimestamp
_bulletinManager
_remoteRequestManager
_testingInputController
_avExternalButtonEvents
_bluetoothEndpointUtil
_presentationManager
T@"AFPreferences",&,N,V_afPreferences
T@"SASLockStateMonitor",&,N,V_lockStateMonitor
T@"SASUnderstandingOnDeviceAssetsState",&,N,V_uodAssetsState
TB,N,V_xcTestingActive
T@"NSMutableDictionary",&,N,V_sources
T@"NSMutableDictionary",&,N,V_activationAssertions
T@"NSMutableDictionary",&,N,V_buttonEventListeners
T@"SASHeater",&,N,V_heater
T@"AFSiriTether",&,N,V_siriTether
TB,N,V_siriTetherIsAttached
Td,N,V_activationTimestamp
TB,N,V_voiceTriggerNotifyTokenIsValid
T@"SASBulletinManager",&,N,V_bulletinManager
T@"SASRemoteRequestManager",&,N,V_remoteRequestManager
T@"SASTestingInputController",&,N,V_testingInputController
T@"NSMutableDictionary",&,N,V_avExternalButtonEvents
TB,N,V_buttonDownHasOccurredSinceActivation
TB,N,V_canActivateFromDirectActionSource
pocketStateFetchingInProgressForHeadsetActivation
TB,N,G_pocketStateFetchingInProgressForHeadsetActivation,S_setPocketStateFetchingInProgressForHeadsetActivation:,V_pocketStateFetchingInProgressForHeadsetActivation
T@"SASBluetoothEndpointUtility",&,N,V_bluetoothEndpointUtil
T@"SASPresentationManager",&,N,V_presentationManager
configureConnection
activateWithContext:
messageAmbiguousDirectActionWithAppBundleId:
messageComposeDirectActionWithAppBundleId:
messageComposeNewThreadDirectActionWithAppBundleId:fullName:phoneOrEmailAddress:
messageReadDirectActionWithAppBundleId:conversationGUID:
messageReplyDirectActionWithAppBundleId:conversationGUID:
mapSearchDirectActionWithAppBundleId:
mapShareEtaDirectActionWithAppBundleId:
musicSearchDirectActionWithAppBundleId:
phoneAmbiguousDirectActionWithAppBundleId:
phoneCallDirectActionWithAppBundleId:
appLaunchDirectActionWithAppBundleId:
initWithPayload:
initWithBBBulletin:
initWithUNNotification:
directActionEvent
bundleId
_intentIdentifiersFromBulletin:notification:
_directActionEventFromContentTypesOfBulletin:notification:
_directActionEventFromAppIdsAndIntentIdentifiersOfBulletin:notification:
_initWithDirectActionEvent:appBundleId:conversationGUID:fullName:phoneOrEmailAddress:
payload
bulletin
notification
_payload
_bulletin
_notification
T@"NSDictionary",R,N,V_payload
T@"BBBulletin",R,N,V_bulletin
T@"UNNotification",R,N,V_notification
_canTransitionFromState:toState:
_canTransitionFromState:toState:presentationIdentifier:
_canTransitionToOffFromState:
_canTransitionToHeatedFromState:
_canTransitionToStartingFromState:
_canTransitionToStoppingFromState:
_canTransitionToActiveFromState:presentationIdentifier:
_shouldKeepPingingForRequestState:
requestState
unregisterSiriPresentationWithIdentifier:
preheatNextPresentationToActivate
cancelAllPreheatedPresentations
_presentationsLock_cancelAllPreheatedPresentations
setPresentationManagerDelegate:
_notifyDelegateOfShouldRejectNewActivationsChangeIfNecessary
_shouldRejectNewActivations
_sendBlock:toPresentationWithPresentationIdentifier:
_sendBlockToActivePresentations:
_sendBlockToStartingPresentations:
_sendBlockToStoppingPresentations:
sendButtonEventCompletionToPresentations:forButtonEventType:
activePresentations_handleRequestWithOptions:
startingPresentations_cancelPendingActivationWithReason:
activePresentations_deviceWonMyriadElection
activeAndStartingPresentations_updateCurrentLockState:
startingAndActiveAndStoppingPresentations_presentationDismissalRequestedWithOptions:
activePresentations_bulletinManagerDidChangeBulletins
activePresentationsAreIdleAndQuiet
presentationWithPresentationIdentifierBeganStarting:
presentationWithPresentationIdentifierBeganStopping:
presentationWithPresentationIdentifierBecameActive:
presentationWithPresentationIdentifierBecameOff:
_transitionPresentationWithPresentationIdentifier:toState:
nextPresentationToActivate
_presentationsLock_nextPresentationToActivate
presentationRequestedWithPresentationIdentifier:presentationOptions:requestOptions:
presentationWithPresentationIdentifier:activationDeterminedShouldDeferWake:
presentationWithPresentationIdentifierWakeScreenAfterActivation:reason:
_setupPingTimerForPresentationIdentifier:
_waitForPongFromPresentationWithPresentationIdentifier:
_teardownPingTimerForPresentationIdentifier:
_forceAllPresentationsOff
presentationDidUpdateState:
_presentationsLock_broadcastPresentationStateForIdentifier:presentationState:presentationIdentifiersToInform:
presentations
setPresentations:
_lastReportedShouldRejectNewActivations
_presentationManagerDelegate
_presentations
T@"NSMutableDictionary",&,N,V_presentations
initWithDeactivationOptions:
initWithDeactivationOptions:animated:
initWithDeactivationOptions:animated:dismissalReason:
initWithDeactivationOptions:animated:requestCancellationReason:
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:
initWithDeactivationOptions:animated:requestCancellationReason:dismissalReason:shouldTurnScreenOff:
deactivationOptions
animated
reason
dismissalReason
shouldTurnScreenOff
_animated
_shouldTurnScreenOff
_deactivationOptions
_reason
_dismissalReason
TQ,R,N,V_deactivationOptions
TB,R,N,V_animated
Tq,R,N,V_reason
TQ,R,N,V_dismissalReason
TB,R,N,V_shouldTurnScreenOff
activationPresentationForPresentationIdentifiers:
activateFromSource:
initWithContextOverride:
initWithPPTContext:
initWithPPTContext:siriContextOverride:
initWithRecognitionStrings:
initWithRecognitionStrings:siriContextOverride:
initWithAudioInput:
initWithAudioInput:siriContextOverride:
initWithRequestInfo:recognitionStrings:
initWithRequestInfo:recognitionStrings:siriContextOverride:
containsRecognitionStrings
containsAudioInput
testingContext
testingRequestInfo
_testingContext
_testingRequestInfo
T@"NSDictionary",R,N,V_testingContext
T@"AFRequestInfo",R,N,V_testingRequestInfo
configurationDidUpdateOnLongPressSource:
longPressButtonForIdentifier:
configurationUpdateManager:configurationDidUpdateForLongPressSource:
prepareForActivation
prepareForActivationWithTimestamp:
speechInteractionActivityWithTimestamp:
didRecognizeButtonSinglePressUp
_initWithButtonIdentifier:
longPressBehavior
didRecognizeLongPress
_shouldReplaceSpeechInteractionActivityTimestampWithPrewarmTimestamp
_timestampForSpeechInteractionActivityWithTimestamp:
_sourceSupportsAutomaticConfigurationUpdates
requestConfigurationUpdatesBasedOnDeviceSettings
stopConfigurationUpdates
setConfiguration:
buttonIdentifier
setButtonIdentifier:
lock_activityAssertions
setLock_activityAssertions:
currentTimeGenerator
setCurrentTimeGenerator:
updateManager
setUpdateManager:
_configuration
_buttonIdentifier
_lock_activityAssertions
_currentTimeGenerator
_updateManager
Tq,N,V_buttonIdentifier
T@"NSMutableArray",&,N,V_lock_activityAssertions
T@?,C,N,V_currentTimeGenerator
T@"SiriLongPressButtonConfiguration",C,N,V_configuration
T@"SiriLongPressButtonConfigurationUpdateManager",&,N,V_updateManager
T@"<SiriLongPressButtonSourceDelegate>",W,N,V_delegate
siriPresentationIdentifier
stringWithSiriPresentationIdentifier:
cancelReason
stringWithSiriPresentationActivationCancelReason:
stringWithSiriHomeAffordanceSuppression:
invalidatedAtTimestamp:
initWithIdentifier:reference:reason:timestamp:invalidationBlock:
isValid
reference
timestamp
_reference
_timestamp
_invalidationBlock
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_reason
T@"NSString",R,C,N,V_reference
Td,R,N,V_timestamp
valid
TB,R,D,N,GisValid
stringWithSiriActivationEventType:
requestSourceForButtonIdentifier:
initWithButtonIdentifier:context:
initWithDirectActionContext:
initWithContinuityContext:
initWithVoiceTriggerContext:
initWithRemotePresentationBringUpContext:
initWithBreadcrumbRequest
initWithSimpleActivation:
initWithBluetoothKeyboardShortcutActivation:
initWithSpotlightContext:
initWithVoiceTriggerRequest
initWithTestingContext:
eventSource
computedActivationTime
buttonDownTimestamp
isVoiceRequest
isRemoteDisplayVoiceRequest
isHoldToTalkSource
isButtonRequest
isDeviceButtonRequest
isTestingRequest
isEyesFreeRequestSource
isUIFreeRequestSource
isDirectActionRequest
isContinuityRequest
isBluetoothRequest
isSpotlightRequest
isRemotePresentationBringUpRequest
activationType
setActivationType:
activationEvent
setActivationEvent:
activationTime
setActivationTime:
buttonDownTime
setButtonDownTime:
_waketimeMIB
_waketimeMIBSize
_activationType
_activationEvent
_activationTime
_buttonDownTime
Tq,N,V_requestSource
Tq,N,V_activationType
Tq,N,V_activationEvent
T@"SiriContext",&,N,V_context
Td,N,V_activationTime
Td,N,V_buttonDownTime
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:updateGlobalSettings:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:noteBulletinsLoadedForSectionID:
_setupObserver
_bulletinsDidChange
_displayNameForBulletin:
addBulletinCompletionWithBulletin:forFeed:
modifyBulletinCompletionWithBulletin:
_observer
_bulletinCache
_bulletinsOnLockScreen
T@"<SASBulletinManagerDelegate>",W,N,V_delegate
initWithPresentationIdentifier:
T@"NSString",R,C,N,V_presentationIdentifier
listener
registerWithListener:identifier:
configureConnectionForIdentifier:
unregisterListenerWithIdentifier:
_registerListenerWithIdentifier:
listeners
setListeners:
_listeners
T@"NSMutableDictionary",&,N,V_listeners
initWithIdentifier:reason:
setReason:
TQ,N,V_reason
initWithSiriButtonIdentifier:
initWithString:
_identifierMatchesSiriButtonIdentifier:
siriButtonIdentifier
initWithTimeInterval:
timeInterval
transport
setTransport:
_transport
T@"NSNumber",&,N,V_transport
initWithSiriPresentationIdentifier:
T@"NSNumber",&,N,V_identifier
initWithSiriPresentationActivationCancelReason:
initWithSASLockState:
SASLockState
text
manager
_handleRemotePrewarmWithInfo:
_handleNewRemoteRequestWithInfo:
_handleRequestWatcherVoiceTriggerRequestWithInfo:
_processPendingVoiceTriggerActivationsWithInfo:delay:
_handleRemoteRequestDismissalWithReason:options:analyticsContext:
_handlePendingVoiceTriggerActivationsWithInfo:
_startFetchingPocketStateUpdates
_requestWatcherVoiceActivationEnabled
_dismissalReasonForDeactivationReason:
remoteRequestWatcher
setRemoteRequestWatcher:
currentAppIntentDeliverer
setCurrentAppIntentDeliverer:
currentVoiceTriggerRestriction
setCurrentVoiceTriggerRestriction:
pendingVoiceTriggerRestrictionCount
setPendingVoiceTriggerRestrictionCount:
hasPendingVoiceTriggerActivation
setHasPendingVoiceTriggerActivation:
pendingVoiceTriggerActivationInfo
setPendingVoiceTriggerActivationInfo:
setPocketStateManager:
setCurrentPocketState:
_hasPendingVoiceTriggerActivation
_remoteRequestWatcher
_currentAppIntentDeliverer
_currentVoiceTriggerRestriction
_pendingVoiceTriggerRestrictionCount
_pendingVoiceTriggerActivationInfo
T@"AFRemoteRequestWatcher",&,N,V_remoteRequestWatcher
T@"INAppIntentDeliverer",&,N,V_currentAppIntentDeliverer
TQ,N,V_currentVoiceTriggerRestriction
TQ,N,V_pendingVoiceTriggerRestrictionCount
TB,N,V_hasPendingVoiceTriggerActivation
T@"AFRequestInfo",&,N,V_pendingVoiceTriggerActivationInfo
T@"CMPocketStateManager",&,N,V_pocketStateManager
Tq,N,V_currentPocketState
initWithRequestSource:
initWithRequestSource:uiPresentationIdentifier:
initWithRequestSource:uiPresentationIdentifier:systemState:
initWithRequestSource:uiPresentationIdentifier:buttonContext:
_configureStreamingDictationForSource:
inputType
_isForSpeechRequest
isForAppleTV
isForStark
isForEyesFree
isForBluetoothCar
isForUIFree
isRequestMadeWithPhysicalDeviceInteraction
userTypedInSiri
isVoiceTriggerRequest
isInAutoPrompt
isH1Activation
isHTTRequestSource
isATVRemotePTTEligible
updateIfNeededWithSystemState:
_updateWithSystemState:forcefully:
_isTypeToSiriPermittedAndEnabledForRequestOptions
activationDeviceIdentifier
setActivationDeviceIdentifier:
setBulletin:
appBundleIdentifier
setAppBundleIdentifier:
directActionApplicationContext
setDirectActionApplicationContext:
setDirectActionEvent:
serverCommandId
setServerCommandId:
isPronunciationRequest
setPronunciationRequest:
pronunciationContext
setPronunciationContext:
setText:
speechFileURL
setSpeechFileURL:
expectedTimestamp
setExpectedTimestamp:
setTimestamp:
setButtonDownTimestamp:
setLongPressBehavior:
currentCarPlaySupportedOEMAppIdList
setCurrentCarPlaySupportedOEMAppIdList:
isForCarDND
setIsForCarDND:
setIsConnectedToCarPlay:
carDNDStatus
setCarDNDStatus:
isRightHandDrive
setRightHandDrive:
isInitialBringUp
setInitialBringUp:
useAutomaticEndpointing
setUseAutomaticEndpointing:
useStreamingDictation
setUseStreamingDictation:
homeButtonUpFromBeep
setHomeButtonUpFromBeep:
continuityInfo
setContinuityInfo:
requestInfo
setRequestInfo:
speechRequestOptions
setSpeechRequestOptions:
acousticIdEnabled
setAcousticIdEnabled:
releaseAudioSessionOnRecordingCompletion
setReleaseAudioSessionOnRecordingCompletion:
isRemotePresentationBringUp
uiPresentationIdentifier
setUiPresentationIdentifier:
instrumentationEvents
setInstrumentationEvents:
previousTurnIdentifier
setPreviousTurnIdentifier:
contextAppInfosForSiriViewController
setContextAppInfosForSiriViewController:
setTestingContext:
currentLockState
setCurrentLockState:
startRecordingSoundId
setStartRecordingSoundId:
isShortButtonPressAction
setShortButtonPressAction:
originalRequestOptions
setOriginalRequestOptions:
presentationMode
setPresentationMode:
tvRemoteType
setTvRemoteType:
isTVRemoteSourcePTTEligible
setIsTVRemoteSourcePTTEligible:
_pronunciationRequest
_isForCarDND
_isConnectedToCarPlay
_rightHandDrive
_initialBringUp
_useAutomaticEndpointing
_useStreamingDictation
_acousticIdEnabled
_releaseAudioSessionOnRecordingCompletion
_isRemotePresentationBringUp
_shortButtonPressAction
_isTVRemoteSourcePTTEligible
_activationDeviceIdentifier
_appBundleIdentifier
_directActionApplicationContext
_directActionEvent
_serverCommandId
_pronunciationContext
_text
_speechFileURL
_expectedTimestamp
_buttonDownTimestamp
_longPressBehavior
_currentCarPlaySupportedOEMAppIdList
_carDNDStatus
_homeButtonUpFromBeep
_continuityInfo
_requestInfo
_speechRequestOptions
_uiPresentationIdentifier
_instrumentationEvents
_previousTurnIdentifier
_contextAppInfosForSiriViewController
_currentLockState
_startRecordingSoundId
_originalRequestOptions
_presentationMode
_tvRemoteType
Tq,N
T@"NSString",C,N,V_activationDeviceIdentifier
T@"AFBulletin",&,N,V_bulletin
T@"NSString",C,N,V_appBundleIdentifier
T@"AFApplicationContext",C,N,V_directActionApplicationContext
Tq,N,V_directActionEvent
T@"NSString",C,N,V_serverCommandId
pronunciationRequest
TB,N,GisPronunciationRequest,V_pronunciationRequest
T@"SASPronunciationContext",&,N,V_pronunciationContext
T@"NSString",C,N,V_text
T@"NSURL",C,N,V_speechFileURL
Td,N,V_expectedTimestamp
Td,N,V_timestamp
Td,N,V_buttonDownTimestamp
Tq,N,V_longPressBehavior
forStark
TB,R,N,GisForStark
T@"NSArray",&,N,V_currentCarPlaySupportedOEMAppIdList
TB,N,V_isForCarDND
TB,N,V_isConnectedToCarPlay
TQ,N,V_carDNDStatus
rightHandDrive
TB,N,GisRightHandDrive,V_rightHandDrive
TB,R,N
Tq,R,N
initialBringUp
TB,N,GisInitialBringUp,V_initialBringUp
TB,N,V_useAutomaticEndpointing
TB,N,V_useStreamingDictation
T@"NSNumber",&,N,V_homeButtonUpFromBeep
T@"NSDictionary",C,N,V_continuityInfo
T@"AFRequestInfo",&,N,V_requestInfo
T@"AFSpeechRequestOptions",&,N,V_speechRequestOptions
TB,N,V_acousticIdEnabled
TB,N,V_releaseAudioSessionOnRecordingCompletion
TB,R,N,V_isRemotePresentationBringUp
T@"NSString",&,N,V_uiPresentationIdentifier
T@"NSMutableArray",&,N,V_instrumentationEvents
T@"NSUUID",&,N,V_previousTurnIdentifier
T@"NSArray",&,N,V_contextAppInfosForSiriViewController
T@"NSDictionary",&,N,V_testingContext
TQ,N,V_currentLockState
T@"NSString",C,N,V_startRecordingSoundId
shortButtonPressAction
TB,N,GisShortButtonPressAction,V_shortButtonPressAction
T@"SASRequestOptions",C,N,V_originalRequestOptions
Tq,N,V_presentationMode
TQ,N,V_tvRemoteType
TB,N,V_isTVRemoteSourcePTTEligible
activate
observeValueForKeyPath:ofObject:change:context:
startManagingConfigurationFromSource:withDelegate:
stopManagingConfigurationFromSource:
stopManagingAllConfigurations
userDefaults
_addDelegate:forSource:
_setupKVOMonitoring
_stopKVOMonitoring
currentLongPressBehavior
setCurrentLongPressBehavior:
monitoringForUpdates
setMonitoringForUpdates:
delegatesBySource
setDelegatesBySource:
_internalUserDefaults
_monitoringForUpdates
_currentLongPressBehavior
_delegatesBySource
Tq,N,V_currentLongPressBehavior
TB,N,V_monitoringForUpdates
T@"NSMapTable",&,N,V_delegatesBySource
isBlocked
isScreenOn
assistantIsEnabled
lockState
setLockState:
unlockedByTouchID
setUnlockedByTouchID:
setAssistantIsEnabled:
_unlockedByTouchID
_lockState
_assistantIsEnabled
TQ,N,V_lockState
TB,N,V_unlockedByTouchID
T@"NSNumber",&,N,V_assistantIsEnabled
T@"<SASLockStateMonitorDelegate>",W,N,V_delegate
layoutRole
_pairedVehiclesDidChange:
sharedSystemState
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
_initForTesting
addStateChangeListener:
removeStateChangeListener:
deviceScreenIsOn
_deviceIsUnlocked
deviceLiftToWake
isInActiveCall
hasIncomingCall
isWirelessSplitterOn
isGuestConnected
carDNDActiveOrEyesFreeAndShouldHaveFullScreenPresentation:
_internalAlwaysEyesFreeEnabled
_mapsAppIsVisibleOnLockscreen
monitorCarSessions
_setCarPlayConnectionState:
_updateCarPlayConnectionState
_fetchVehicleInformation
_enhancedVoiceTriggerModeFromConfiguration:
_fetchOEMAppContext
carPlaySupportsAnyEnhancedSiriCharacteristics
carPlaySupportsEnhancedSiriCharacteristic:
carPlayEnhancedSiriCharacteristics
carPlayEnhancedVoiceTriggerMode
isATV
_updateAccessibilityState
isConnectedToEyesFreeDevice
isRemoteWebcamMode
carPlayConnectionState
setCarPlayConnectionState:
displayLayoutMonitor
setDisplayLayoutMonitor:
liftToWakeDetected
setLiftToWakeDetected:
carPlaySessionStatus
setCarPlaySessionStatus:
carAutomaticDNDStatus
setCarAutomaticDNDStatus:
vehicleName
setVehicleName:
vehicleModel
setVehicleModel:
vehicleManufacturer
setVehicleManufacturer:
enabled
setEnabled:
observerWirelessSplitter
setObserverWirelessSplitter:
observerBluetoothGuestConnected
setObserverBluetoothGuestConnected:
setCarPlayEnhancedSiriCharacteristics:
setCarPlayEnhancedVoiceTriggerMode:
_liftToWakeDetected
_enabled
_carPlayConnectionState
_displayLayoutMonitor
_carPlaySessionStatus
_carAutomaticDNDStatus
_vehicleName
_vehicleModel
_vehicleManufacturer
_observerWirelessSplitter
_observerBluetoothGuestConnected
_carPlayEnhancedSiriCharacteristics
_carPlayEnhancedVoiceTriggerMode
Ti,N,V_carPlayConnectionState
TB,N,V_accessibilityShortcutEnabled
T@"FBSDisplayLayoutMonitor",&,N,V_displayLayoutMonitor
TB,N,V_liftToWakeDetected
T@"CARSessionStatus",&,N,V_carPlaySessionStatus
T@"CARAutomaticDNDStatus",&,N,V_carAutomaticDNDStatus
T@"NSString",&,N,V_vehicleName
T@"NSString",&,N,V_vehicleModel
T@"NSString",&,N,V_vehicleManufacturer
TB,N,V_rightHandDrive
TB,N,V_enabled
T@"NSHashTable",&,N,V_listeners
T@"AFNotifyObserver",&,N,V_observerWirelessSplitter
T@"AFNotifyObserver",&,N,V_observerBluetoothGuestConnected
TQ,N,V_carPlayEnhancedSiriCharacteristics
Tq,N,V_carPlayEnhancedVoiceTriggerMode
request
setRequest:
buttonTriggerStateActive
setButtonTriggerStateActive:
preferences
setPreferences:
analyticsContext
setAnalyticsContext:
setRequestState:
_buttonTriggerStateActive
_request
_preferences
_analyticsContext
T@"SASActivationRequest",&,N,V_request
TB,N,V_buttonTriggerStateActive
T@"SASSiriPocketStateManager",&,N,V_pocketStateManager
T@"AFPreferences",&,N,V_preferences
T@"NSDictionary",&,N,V_analyticsContext
Tq,N,V_requestState
canActivateForCondition:
_shouldSiriActivateForSiriSetupWithSystemState:
initWithSpeechRequestOptions:
T@"AFSpeechRequestOptions",R,N,V_speechRequestOptions
initWithRequestOptions:updateHandle:
_updateState:
addTriggerTarget:action:
removeTriggerTarget:
options
state
_options
_state
_observers
T@"SASRequestOptions",R,N,V_options
Tq,R,N,V_state
utteranceText
setUtteranceText:
source
setSource:
_utteranceText
_source
T@"NSString",C,N,V_utteranceText
Tq,N,V_source
stringWithSiriSpotlightContextSource:
setSourcePTTEligibility:
isPTTEligible
activeDeviceBluetoothIdentifier
setActiveDeviceBluetoothIdentifier:
isListening
setIsListening:
isSourcePTTEligible
setIsSourcePTTEligible:
_isListening
_isSourcePTTEligible
_activeDeviceBluetoothIdentifier
TB,N,V_isSourcePTTEligible
T@"NSString",C,N,V_activeDeviceBluetoothIdentifier
TB,N,V_isListening
_testingStringsDidChange:
_testingAudioInputPathsDidChange:
_registerForTestingNotifications
dequeuePreloadedTestingContext
preloadedTestingInput
_preloadedTestingInput
T@"SiriTestingContext",R,N,V_preloadedTestingInput
isTemporaryDevice
_isTemporaryDevice
initWithButtonIdentifier:
uniqueIdentifier
buttonIdentifer
_uniqueIdentifier
_buttonIdentifer
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_buttonIdentifer
Td,R,N
previousNode
setPreviousNode:
nextNode
setNextNode:
_previousNode
_nextNode
T@"SASBulletinCacheNode",&,N,V_previousNode
T@"SASBulletinCacheNode",&,N,V_nextNode
insertBulletin:fromFeed:
removeBulletinForID:
cachedBulletinForID:
_findNodeForBulletinID:
_deleteNode:
_purgeOldestNodes
_isFeedRelevant:
_count
_oldestNode
_newestNode
_registerListenersAndSetEndpointTypeWithNotification:
_setEndpointTypeWithNotification:
isConnectedToBluetoothVehicle
_endpointType
_setEndpointType:
_serialBluetoothEndpointQueue
endpointType
T@"NSString",&,G_endpointType,S_setEndpointType:,V_endpointType
activateWithContext:completion:
T@"<SiriDirectActionSourceDelegate>",W,N,V_delegate
updateState
_setUODAssetsAvailable:
understandingOnDeviceAssetsAvailable
settingsConnection
setSettingsConnection:
uodAssetsqueue
setUodAssetsqueue:
_settingsConnection
_uodAssetsqueue
T@"AFSettingsConnection",&,N,V_settingsConnection
T@"NSObject<OS_dispatch_queue>",&,N,V_uodAssetsqueue
initWithType:text:recordedSpeechURL:
type
recordedSpeechURL
_type
_recordedSpeechURL
Tq,R,N,V_type
T@"NSString",R,C,N,V_text
T@"NSURL",R,C,N,V_recordedSpeechURL
setType:
setRecordedSpeechURL:
listener:didReceiveConnection:withContext:
setListener:
_listener
T@"BSServiceConnectionListener",&,N,V_listener
bluetoothDeviceForIdentifier:bluetoothDevice:
deactivate
T@"SiriBluetoothContext",&,N,V_context
registerButtonIdentifier:withUUID:
unregisterButtonIdentifier:withUUID:
registerNonButtonSourceWithType:withUUID:
unregisterNonButtonSourceWithType:withUUID:
activationRequestFromDirectActionEventWithContext:
prewarmFromButtonIdentifier:
registerAssertionWithIdentifier:reason:
unregisterAssertionWithIdentifier:
registerButtonEventListenerWithIdentifier:
_registerSourceForIdentifier:
_unregisterSourceForIdentifier:
_activationRequestFromDirectActionEventWithContext:completion:
assertionClientIdentifier
setAssertionClientIdentifier:
_assertionClientIdentifier
T@"<SASSignalServerDelegate>",W,N,V_weak_delegate
T@"NSString",N,V_assertionClientIdentifier
initWithPresentationServer:
flushEnqueuedButtonEventCompletions
presentationServer
enqueuedButtonEventCompletions
setEnqueuedButtonEventCompletions:
pingTimer
setPingTimer:
presentationState
setPresentationState:
_presentationServer
_enqueuedButtonEventCompletions
_pingTimer
_presentationState
T@"SASPresentationServer",R,N,V_presentationServer
T@"NSMutableArray",&,N,V_enqueuedButtonEventCompletions
T@"NSTimer",&,N,V_pingTimer
T@"SASPresentationState",&,N,V_presentationState
initWithRequestInfo:
initWithUserActivity:
userActivity
_userActivity
T@"AFRequestInfo",R,N,V_requestInfo
T@"NSDictionary",R,N,V_userActivity
initWithBluetoothDevice:
isEyesFree
address
_isEyesFree
_address
T@"NSString",R,N,V_address
@16@0:8
v16@0:8
B16@0:8
Vv24@0:8@16
v24@0:8@16
@"BSServiceConnection"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@?16
@40@0:8B16B20q24q32
Q16@0:8
B24@0:8@16
q16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v20@0:8B16
v24@0:8q16
@"SiriPresentationOptions"
{_mutationFlags="isDirty"b1"hasWakeScreen"b1"hasHideOtherWindowsDuringAppearance"b1"hasRotationStyle"b1"hasRequestSource"b1}
@40@0:8@16q24@32
@32@0:8@16@24
@"SASSystemState"
@"SiriContextOverride"
@24@0:8q16
v24@0:8d16
d16@0:8
@"<SASHeaterDelegate>"
@"NSTimer"
v32@0:8@16q24
v32@0:8@"CMPocketStateManager"16q24
v24@0:8@?16
@"CMPocketStateManager"
@"NSURL"
v32@0:8q16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
v24@0:8Q16
v32@0:8Q16Q24
v24@0:8f16f20
v24@0:8@"AFMyriadSession"16
v24@0:8@"AFMyriadCoordinator"16
B28@0:8@16B24
B36@0:8@16@24B32
v24@0:8B16B20
@"<SASMyriadControllerDelegate>"
@"AFMyriadCoordinator"
@"NSObject<OS_dispatch_semaphore>"
@"FBSDisplayLayoutMonitor"
@"SASLockStateMonitor"
@"CMMotionActivityManager"
@"NSNumber"
Vv24@0:8@"SiriPresentationIdentifierTransport"16
Vv24@0:8@"NSError"16
Vv24@0:8@"SASPresentationState"16
@"NSArray<__AFBulletin__>"16@0:8
@"AFBulletin"24@0:8@"NSString"16
Vv32@0:8@16@24
Vv40@0:8@16@24@32
Vv48@0:8@16@24@32@40
Vv32@0:8@"SiriPresentationOptions"16@"SASRequestOptions"24
Vv24@0:8@"SiriDismissalOptions"16
Vv24@0:8@"SASRequestOptions"16
Vv24@0:8@"SiriPresentationActivationCancelReasonTransport"16
Vv24@0:8@"NSString"16
Vv32@0:8@"SiriPresentationIdentifierTransport"16@"SASPresentationState"24
B24@0:8@"SASActivationRequest"16
Vv40@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24@"SiriLongPressButtonContext"32
Vv48@0:8@"SASButtonIdentifierTransport"16@"NSString"24@"SASTimeIntervalTransport"32@"SiriLongPressButtonContext"40
Vv24@0:8@"SASButtonIdentifierTransport"16
Vv24@0:8@"SASLockStateTransport"16
Vv24@0:8@"NSNumber"16
@"BSServiceConnectionEndpointInjector"
@"BSServiceConnection<BSServiceConnectionHost>"
@"<SASPresentationServerDelegate>"
@"SiriLongPressButtonContext"
v32@0:8@16@24
@40@0:8@16@24@32
@"SASRequestOptions"40@0:8@"SASRequestOptionsBuilder"16@"SASRequestOptions"24@"SASActivationRequest"32
B32@0:8@16@24
@40@0:8@16@24q32
Q32@0:8@16@24
B32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
@"NSString"40@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24q32
Q32@0:8@"SASRequestOptionsBuilder"16@"SASActivationRequest"24
v48@0:8@16q24d32d40
v24@0:8@"SASHeater"16
v48@0:8@"SASHeater"16q24d32d40
v24@0:8@"SASMyriadController"16
v24@0:8@"SASBulletinManager"16
v28@0:8@16B24
v28@0:8@"SASPresentationManager"16B24
v32@0:8@"SASPresentationManager"16q24
B24@0:8q16
v32@0:8q16d24
v40@0:8q16@24@32
B32@0:8q16@24
v40@0:8q16d24@32
v48@0:8q16@24d32@40
v32@0:8@16@?24
@"SASMyriadController"
@"AFPreferences"
@"SASUnderstandingOnDeviceAssetsState"
@"NSMutableDictionary"
@"SASHeater"
@"AFSiriTether"
@"SASBulletinManager"
@"SASRemoteRequestManager"
@"SASTestingInputController"
@"SASBluetoothEndpointUtility"
@"SASPresentationManager"
q32@0:8@16@24
@56@0:8q16@24@32@40@48
@"NSDictionary"
@"BBBulletin"
@"UNNotification"
B32@0:8q16q24
B40@0:8q16q24q32
v32@0:8@?16q24
v32@0:8@?16Q24
v32@0:8q16q24
v28@0:8q16B24
v40@0:8@16@24@32
@"<SASPresentationManagerDelegate>"
@24@0:8Q16
@28@0:8Q16B24
@36@0:8Q16B24Q28
@36@0:8Q16B24q28
@44@0:8Q16B24q28Q36
@48@0:8Q16B24q28Q36B44
q24@0:8@16
@"AFRequestInfo"
v32@0:8@"SiriLongPressButtonConfigurationUpdateManager"16@"SiriLongPressButtonSource"24
@"SiriContext"16@0:8
@24@0:8d16
@"<SiriAssertion>"16@0:8
@"<SiriAssertion>"24@0:8d16
d24@0:8d16
@?16@0:8
@"SiriLongPressButtonConfiguration"
@"<SiriLongPressButtonSourceDelegate>"
@"SiriLongPressButtonConfigurationUpdateManager"
@56@0:8@16@24@32d40@?48
q24@0:8q16
@32@0:8q16@24
[12i]
@"SiriContext"
v52@0:8@16@24Q32B40@?44
v40@0:8@16@24Q32
v52@0:8@"BBObserver"16@"BBBulletin"24Q32B40@?<v@?B>44
v40@0:8@"BBObserver"16@"BBBulletin"24Q32
v32@0:8@"BBObserver"16@"BBBulletin"24
v32@0:8@"BBObserver"16@"BBSectionInfo"24
v32@0:8@"BBObserver"16@"NSString"24
v32@0:8@"BBObserver"16@"BBGlobalSettings"24
v40@0:8@"BBObserver"16@"BBSectionParameters"24@"NSString"32
v32@0:8@"BBObserver"16@"NSSet"24
v28@0:8@"BBObserver"16B24
v32@0:8@16Q24
@"BBObserver"
@"SASBulletinCache"
@"<SASBulletinManagerDelegate>"
v24@0:8@"NSString"16
@"SASPresentationState"
{_mutationFlags="isDirty"b1"hasPresentationIdentifier"b1}
@32@0:8@16Q24
v32@0:8@16d24
v40@0:8q16Q24@32
Q24@0:8q16
@"AFRemoteRequestWatcher"
@"INAppIntentDeliverer"
@40@0:8q16@24@32
@"AFBulletin"
@"AFApplicationContext"
@"SASPronunciationContext"
@"NSArray"
@"AFSpeechRequestOptions"
@"NSUUID"
@"SASRequestOptions"
v48@0:8@16@24@32^v40
@"NSUserDefaults"
@"NSMapTable"
@"<SASLockStateMonitorDelegate>"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
B20@0:8B16
v20@0:8i16
B24@0:8Q16
i16@0:8
@"CARSessionStatus"
@"CARAutomaticDNDStatus"
@"NSHashTable"
@"AFNotifyObserver"
@"SASActivationRequest"
@"SASSiriPocketStateManager"
@32@0:8@16^@?24
v32@0:8@16:24
@"SiriTestingContext"
@"SASBulletinCacheNode"
@"<SiriDirectActionSourceDelegate>"
@"AFSettingsConnection"
v24@0:8@"NSURL"16
@"SASTestingInput"
{_mutationFlags="isDirty"b1"hasType"b1"hasText"b1"hasRecordedSpeechURL"b1}
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"BSServiceConnectionListener"
@"SiriBluetoothContext"
Vv32@0:8@16@?24
Vv32@0:8@"SASButtonIdentifierTransport"16@"NSString"24
Vv32@0:8@"NSNumber"16@"NSString"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24
Vv24@0:8@"SiriDirectActionContext"16
Vv32@0:8@"SiriDirectActionContext"16@?<v@?@"NSNumber"@"NSError">24
Vv24@0:8@"SiriContinuityContext"16
Vv24@0:8@"SiriRemotePresentationBringUpContext"16
Vv24@0:8@"SiriSpotlightContext"16
Vv24@0:8@"SiriTestingContext"16
Vv32@0:8@"SASButtonIdentifierTransport"16@"SASTimeIntervalTransport"24
Vv32@0:8@"SASButtonIdentifierTransport"16@"SiriLongPressButtonContext"24
Vv40@0:8@"SASButtonIdentifierTransport"16@"SiriContext"24@"SiriDismissalOptions"32
Vv32@0:8@"NSString"16@"NSNumber"24
Vv40@0:8@"NSNumber"16@"NSString"24@"SASTimeIntervalTransport"32
@"<SASSignalServerDelegate>"
@"SASPresentationServer"
