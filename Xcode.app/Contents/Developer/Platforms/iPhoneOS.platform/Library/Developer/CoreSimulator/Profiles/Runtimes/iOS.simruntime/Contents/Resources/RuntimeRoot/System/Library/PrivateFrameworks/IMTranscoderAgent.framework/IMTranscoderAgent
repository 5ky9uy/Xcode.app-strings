@(#)PROGRAM:IMTranscoderAgent  PROJECT:IMTranscoderAgent-1
?333333
@X94<
?ffffff
?ffffff
@333333
?333333
@mcpl
Transcoding
Supported video utis: %@
Checking if we support the AV uti: %@
Trying to discriminate based on type alone:
   Start time: %f
     End time: %f
     Duration: %f
  assetLibURI: %@
  isAuxVideo: %@
 removeAlpha: %@
 preserveHDR: %@
 Start time > 0, we need to transcode
 End time > 0, we need to transcode
 We have an assets library URI, we need to transcode (video might be slow-mo).
 This is an Aux video.
 This is an AnimojiV2 video, and we want to remove alpha
 This is an HDR video, and we don't want to preserve HDR
 This is an AA video, and we don't want to preserve AA
That wasn't enough, let's look at filesize too:
SendableUTIs: %@
Is the original sendable without transcode? %@
Found size %llu of file %@ with error %@
   Carrier supports H264, selecting: %@
   Carrier does not support H264, selecting: %@
No audio/video tracks, failing transcode.
Actually, using the audio preset
Using preset %@ for audio/video transcoding (preserveHDR %@ isAnimojiV2 %@ removeAlpha %@ isAA %@ preserveAA %@)
Using a standard AVAssetExportSession.
Supported file types: %@
org.3gpp.adaptive-multi-rate-audio
   outputFileType: %@
Exporting video to file %@
    Asset length: %f
      Start time: %f
        End time: %f
        Duration: %f
       Max bytes: %zd
     Setting time range
     Ignoring time range, transcoding full
Removing the alpha because this was an HEVC video with alpha
     Preset name: %@
  Export session: %@
           Asset: %@
       outputURL: %@
Dispatching video export
Export failed: %@
Export canceled
Export succeeded!
Duration
v8@?0
Could not find a valid outputType for Message presets
Could not create export session with Message presets
BigSize: %zu SmallSize: %zu
Warning - bigSize (%lu), smallSize (%lu) combination does not match the number of reps requested (%d)
NeedsTranscode? %@ isHDR %@
Transfer %@ doesn't need any processing
We need a hard link to this file for our clients who assume it's a file we created: %@
Transfer %@ is a supported format, will transcode
Created asset %@ with %d video tracks, %d audio tracks
   => Tracks: %@
No video or audio tracks found
Using a dispatch group when generating multiple video transcodings
Asset to use for bigSize: %@
Do we need to transcode to get the big(%lu) representation? %@ (removeAlphaFromAnimojiV2 %@ isHDR %@ preserveHDR %@)
Transcoding bigSize finished with size %llu removeAlpha %@ path %@ and error %@
v32@?0@"NSURL"8@"NSDictionary"16@"NSError"24
Adding bigURL %@ to outputPaths with context: %@
actualBigSize: %llu   smallSize %zu
Only using the big representation because the big output (%llu) fits in the small requirements (%zu)
bigURL was too big for smallSize or there was a FS error
Generating the big representation was not successful. Let's potentially try for small.
We didn't have to transcode to get the big representation so we know we have to for the small one.
There were two sizes requested && big doesn't satisfy the requirements for both, generating small. removeAlphaForAnimojiV2 %@ isHDR %@
Asset to use for smallSize: %@
Transcoding smallSize finished with size %llu removeAlpha %@ path %@ and error %@
Adding smallURL %@ to outputPaths with context: %@
Calling completionBlock with: transfer %@ outputPaths %@ error %@
Supported UTI types: %@
_isWideGamut %@ 
Transcoding _isWideGamut nil sourceRef
preferHEIF
Creating CGImageSource from url: %@
Source ref is %@
NULL
good
Checking uti from source ref at url: %@
Needs transcode as image compressed image format
Image is HEIF standard-compliant, but recipients prefer it. Proceeding with other checks
Needs transcode as all recipients support heif (source uti %@)
Image is not HEIF-standard compliant. Proceeding with other checks
Needs transcode as WebP is not supported
Needs transcode as image is wide-gamut
Not wide gamut image. Proceeding with other checks
No UTI supplied
shouldTranscodeTransfer with uti: %@ ?
Uti is not contained in supportedUTIs
This is MMS, we should always transcode
Checked size of file %@ with error %@
Found delay %@ unclampedDelay %@ loopCount %@ FrameInfo %@. copying to destination
IMTransocoding
Got image properties for image at index %zu: %@
Checking for PNG Properties: %@
Checking for HEICS Properties: %@
Checking for GIF Properties: %@
Checking for WebP Properties: %@
newPngProperties
properties
IMTranscoding
No png property dictionary to add
newHeicsProperties
No HEICS property dictionary to add
newWebPProperties
No WebP property dictionary to add
Orientation data NOT found in default location, checked TIFF location: %@
Orientation data found in default location: %@
Couldn't find props for image to find source height and width
Cannot generate image because source is NULL
Cannot generate image because format is NULL
No source width and height
Not considering resizing to %lu or reducing to %zd images, it's larger than the current image dimension (%zd) and the current image count (%zd)
    Image count = %lu
 Original count = %lu
      Max count = %lu
         Length = %lu
     Max length = %lu
Original Length = %lu
    subsampling = %d
   scale factor = %f
Successfully used hardware encoding
Failed using hardware encoding
Not using hardware encoding. encoder %@  isWideGamut %@
Cannot generate image because imageDestination is NULL
Setting output props: %@
Using subsamping with: %d  (index: %d)
Getting thumbnail at index %zu from %@
Created a rotated image for MMS: %@
Failed to create a a rotated image for MMS
Used thumbnail path %@
Checking for properties: %@
Setting the image orientation (key=%@) to (%@)
 ...this is MMS, we don't want orientation appended, it's all pre-rotated
 ... * Adding original properties to the set
adding scaled image at index %lu
  properties: %@
Failed adding scaled image at index (%zd)!
Success finalizing image: %@
Adding backward compatible color profile for non-heif-destination wide-gamut image
Successfully generated image! Comparing data length (%d) to maxByteSize (%d)
This image is a keeper, writing it out to url!
Saving %@ and breaking out of transcode loop
No image generated for this iteration, we got no image data.
Copying %zd aux images (index %zd scaleFactor %f orientation %d) from input %@, to output %@
v32@?0@"NSString"8@"NSDictionary"16^B24
Cannot write out image because data is nil
Cannot write out image because format is NULL
Nil file extension, aborting writing of image
Using file extension: %@
creating destination with output path: %@
Writing to url %@ failed
Invalid image source given to writeImage!
Invalid destination format provided to writeImage
Original image properties: %@
Beginning transcode loop for image format %@ with maxByteSize %d maxDimension %zd width %@ height %@
Compressed input size is %.02f times larger than target output size, using initial scaled res of %.02f %.02f
Trying maxSize = %lu  (index: %d)
Overrriding subsampling to %d for APNG
Estimated size %lu is larger than required size %lu, skipping
Warning! Did not find a valid size for this image given the filesize constraint!
Generating the representations, originalSize %ld (err %@) sizes %@
Attempting copy+add props for size %lu (reason: the source is wide gamut and smaller than the limit %lu)
Using original wide-gamut image with added properties answerImageURL: %@
Couldn't use copy of wide-gamut image with added properties (size %ld max %ld), transcoding
Beginning to transcode images with size limits: %@ originalFileSize %lu
Trying to transcode to target size index %lu size limit %@
Transcoding: Aborting further transcoding attempts: current image resize index is %d.
Aborting transcoding attempt: current size limit %tu is the same as the previous size.
Transcoding large size %tu (reason: the target is MMS).
Transcoding to size %tu (reason: the source is HEIF).
Transcoded size fits within the max limit so only writing URL for wide gamut properties
Original size is larger than max limit so needs transcoding
Original is not HEIF, we want to send HEIF, so transcoding
Destination (%@) and source (%@) UTIs do not match, so transcoding
Given size limit %lu is already greater than the original file size %lu.
Original file size limit %lu is bigger than target size %lu
Transcoding at size %tu (the previous size is %tu)
Transcoding result URL: %@ (start/stop length index: %d => %d)
Not transcoding an image for size: %tu
answer: %@ answerImageURL: %@
Finished transcoding images with %tu results: %@
Trying to copy wide gamut properties with original image count = %zu
Cannot set gamut properties because imageDestination is NULL
 ==> Image Count = %zu
adding image properties for wide gamut properties only. Created scaled image: %@
Success copying wide gamut image w/ props to url: %@
Failed to copy an image url for a wide gamut transformation
Trying to copy wide gamut properties for index maxSize = %lu (index: %d) with original image count = %zu
 ==> Image Count = %zu, suggestedMaxLength = %zu
adding image properties for HEIF Images only. Created scaled image: %@
Success writing wide gamut image out, breaking from loop with url: %@
Failed to generate an image url for a wide gamut transformation
_getScaleFactorArray uti %@ transferURL %@ outputURLs %@
_getScaleFactor inImageWidth = %lu
_getScaleFactor outImageWidth = %lu
_getScaleFactorArray scale factor for outPutURL %@
_getScaleFactorArray resorting to default scale factor for outPutURL %@
Did not compute sticker scale. [outputURLs count] %@, uti %@, transferURL %@
Warning - sizes %@ do not match the number of reps requested (%d)
ImageQuality
Transfer: %@   needsTranscode? %@
This image needs to be transcoded!
transferURL is nil, no image to transcode...
Source image properties unavailable (sourceRef is NULL)
 File size of file %@ with error %@   (%llu bytes)
 File still requires transcoding: %@
 File is too large, we'll need to transcode it
Transcoding to HEIF, original uti: %@
Couldn't fit this image into any size of HEIF
We've got an opaque PNG, try to reencode as a JPEG
Couldn't fit this image into any size of PNG
We've got a GIF, try to reencode as a GIF
Couldn't fit this image into any size of GIF
We've got a WebP, try to reencode as a %@ (frame count %zu)
Couldn't fit this image into any size of %@
Ok, let's see if we can fit this image into a JPEG
Image failed to transcode; falling back to original
Didn't require transcode, defaulting to the original image MMSGIFCarrierTesting %@, needsTrancode %@
We've reached the end of the image transcode attempt. outputURL = %@
Failed to re-encode: %@
The imageSource was NULL when trying to load original attachment file
Image ended up not needing a transcode operation
scaleFactorArray = %@
PNG can be converted to JPG: %@
Image has no alpha channel, assuming opaque
Image has alpha channel, checking for translucent pixels
Image has premultiplied alpha channel, checking for translucent pixels
Image alpha channel unknown, translucency check may fail
 ==> Image has %ld bits per component, using %ld bpc for test
_imageContainsTranslucentPixels overflowed with %ld width and %ld height
Translucency buffer size (%ld MB) exceeds maximum, cannot test pixels, assuming YES
 ==> Attempting to allocate opacity test buffer of size %ld MB (%ld KB)
Failed to allocate buffer for image translucency test
Failed to create bitmap context while checking translucency of image, returning YES
Found translucent pixel(s) in image: %@
Real width is: %d
Trying to create GIF with %d frames
    Need to remove %d frame(s)
    Left with %d frame(s)
    Removed factor: %f
    Removed too many frames (%f), trying to shrink the image
  Bailing on frame %d out of %lu bceause we already exceeded the target data size
  Didn't fit, updating frames to remove: %d   (count: %lu   extra frames: %f  factorOff: %f)
  Fits!
Final length was %d
GIF wanted %zu durations. Generated: %@.
IMTranscoderAgent _GIFCreateFrameGenerationBlocksForImageSource source frame cache
^{CGImage=}8@?0
public.heif-standard
ForceHEIFEncoding
Forcing HEIF encoding from default
Rejecting HEIF encoding, source is %@
Checking for HEIF support %@
ForceHDREncoding
Forcing HDR encoding from default
Checking for HDR support %@
ForceAAEncoding
Forcing AA encoding from default
Attempted to transcode with generic transcoder--this is probably unintentional!!
Has transcoderUserInfo: %@, found %@, so %@ = %@
No transcoderUserInfo for %@
IMFallbackTranscoder_AudioMessage: nil filePath
Opening Opus file at path %@
IMFallbackTranscoder_AudioMessage: error creating directory for path %@ with error %@
Creating new file at path: %@
ExtAudioFileSetProperty / kExtAudioFileProperty_ClientDataFormat for AMR
ExtAudioFileSetProperty / kExtAudioFileProperty_ClientDataFormat for Opus
ExtAudioFileGetProperty / kExtAudioFileProperty_AudioConverter for AMR
AudioConverterSetProperty / kAudioConverterEncodeBitRate for outConverter
ExtAudioFileSetProperty / kExtAudioFileProperty_ConverterConfig for AMR
ExtAudioFileRead
ExtAudioFileWrite
Audio Message.amr
NO DESCRIPTION!
IMFallbackTranscoder_AudioMessage: %@ failed with error code %d
PKPeerPaymentBubbleView
PassKitUI
ChatKit
CKUIBehavior
CKFallbackClass
MSPhotosExtensionFallbackTranscoder
IMFallbackTranscoder
Found encoder to get bundle for identifier %@, encoder %@
Failed to get bundle for identifier %@
@"NSURL"16@?0@"NSString"8
IMFallBacktranscoder
output trying to generate fallback for data %@ inFileURL %@ outputURLs %@ error %@ success %@ attemptedTranscode %@ text %@ attachments %@
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
output trying to generate fallback for data %@ inFileURL %@ outputURLs %@ error %@ success %@ attemptedTranscode %@ attachments %@
v32@?0@"NSArray"8@"NSError"16B24B28
******** found encoder ******** %@ that responds to fullQualityForData %s %s
Feb 17 2023
21:25:03
got fullquality for data at URLs %@ error %@ success %@ attemptedToGenerateFallback %@
******** found encoder ******** %@ that responds to fullQualityForData:attachments:inFileURL:completionBlock: %s %s
got fullquality for data at URLs %@ error %@ success %@
v36@?0@"NSArray"8@"NSError"16B24Q28
******* did NOT ****** find encoder %@ that responds to fullQualityForData
IMTranscoding. No encoder found for balloon id %@
PFCreateGIFFromVideoURL
PhotosFormats
Transcoding GIF {source: %@, target: %@}
v24@?0d8^B16
Converting to GIF progress {progress: %f}
Finished transcoding GIF {success: %@}
v12@?0B8
IMTranscoding. PFCreateGIFFromVideoURL function not available
__kIMTranscodeErrorDomain
com.apple.IMTranscoderQueue
com.apple.IMTranscoderPreviewGenerationQueue
Transcoder received request to transcode %@
                       UTI: %@
     Allow Unfiltered UTIs: %@
                     Sizes: %@
             Max Dimension: %ld
           Transcoder Info: %@
v56@?0@"NSURL"8@"NSArray"16@"NSArray"24@"NSError"32B40B44@"NSDictionary"48
Transcoding Not transcoding file %@
Prefers HEIF output
Does not prefer HEIF output
Preserve HDR output
preserveHDR
Will NOT preserve HDR output
Not transcoding attachment file format: %@
Found transcoder to transcode data for balloonBundleID %@ fallback %@
Transcoding Not transcoding attachment file format: %@
Lockdown
Transcoder received request to generate safe render: %@
File is not a supported type: %@
v20@?0B8@"NSError"12
v36@?0B8{CGSize=dd}12@"NSError"28
CKPassPreviewMediaObject
Will generate preview metadata for url %@ dst url %@
v36@?0B8@"NSData"12@"NSArray"20@"NSError"28
IMTranscoderImage.transcode.none
 enableTelemetry=YES 
IMTranscoderAV.transcode.type.av
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
IMTranscoderImage.previewGeneration.type.other
IMTranscoderImage.previewGeneration.type.jpeg
IMTranscoderImage.previewGeneration.type.heif
IMTranscoderImage.previewGeneration.type.png
IMTranscoderImage.previewGeneration.type.gif
IMTranscoderImage.transcode.type.other
IMTranscoderImage.transcode.type.jpeg
IMTranscoderImage.transcode.type.heif
IMTranscoderImage.transcode.type.png
IMTranscoderImage.transcode.type.gif
IMTranscoderImage.transcode.none.other
IMTranscoderImage.transcode.none.jpeg
IMTranscoderImage.transcode.none.heif
IMTranscoderImage.transcode.none.png
IMTranscoderImage.transcode.none.gif
IMTranscoderImage.transcode.step.other
IMTranscoderImage.transcode.step.jpeg
IMTranscoderImage.transcode.step.heif
IMTranscoderImage.transcode.step.png
IMTranscoderImage.transcode.step.gif
IMTranscoderImage.transcode.final.other
IMTranscoderImage.transcode.final.jpeg
IMTranscoderImage.transcode.final.heif
IMTranscoderImage.transcode.final.png
IMTranscoderImage.transcode.final.gif
IMTranscoderImage.transcode.skip.other
IMTranscoderImage.transcode.skip.jpeg
IMTranscoderImage.transcode.skip.heif
IMTranscoderImage.transcode.skip.png
IMTranscoderImage.transcode.skip.gif
IMTranscoder_AV
IMEmbeddedHardwareJPEGTranscoder
IMTranscoder_Image
IMTranscoderTelemetry
IMTranscoderImageSizeEstimator
IMTranscoderImageCMPhotoSizeEstimator
IMTranscoder
IMFallbackTranscoder_AudioMessage
IMSnapshotTranscoder
IMBalloonPluginFallbackEncoder
NSObject
IMFallbackTranscoder
IMTranscodingAgentController
IMMMSSupportsH264VideoForPhoneNumber:simID:
_overrideJPEGCompressionQuality
T@"IMFallbackTranscoder_AudioMessage",&,N,V_audioTranscoder
conformsToType:
TQ,R
dealloc
Td,N,V_targetJPEGCompressionValue
initWithDouble:
__imArrayByApplyingBlock:
isProxy
_audioTranscoder
release
_checkAndSaveImageData:sourceURL:inFormat:withMaxByteSize:actualSize:usedLengthIndex:currentIndex:
.cxx_destruct
_getImageWidth:
T#,R
audioTranscoder
T@"NSString",R,C
containsObject:
Td,N,V_overrideJPEGCompressionQuality
emitSignpostNoTranscodeFromUTI:
URLByDeletingLastPathComponent
isEqualToValue:
__im_performBlock:
numberWithBool:
_canConvertPNGToJPEG:
sharedBehaviors
_container
_copyWideGamutImage:sourceURL:inFormat:withMaxByteSize:maxDimension:actualSize:telemetry:
_emitSignpostPreviewGenerationRange:begin:
_emitSignpostTranscodeRange:begin:
_estimatedBytesPerPixelForJPEGQuality:
_failWithOSStatusErrorCode:description:completion:
_fallbackTranscoders
_fileSizeForTransfer:
_findPluginFallbackEncoder:withBalloonBundleID:
_findTranscoderForUTI:
_getScaleFactorArray:transferURL:outputURLs:
_imageContainsTranslucentPixels:
_isHEIFImageFormat:
_isHEVCVideo:
_isWebPImageFormat:
_isWideGamutImage:
_newGeneratedImage:sourceWidth:sourceHeight:sourceLength:sourceProps:target:hardwareEncoder:inFormat:fromFormat:withMaxLength:withMaxCount:withCompressionQuality:enforceMaxes:subsampling:
_newSizeForMaximumDimension:originalSize:
_nominalBytesPerPixelForUTI:
_normalizedInputFactor
_normalizedInputFactorForUTI:bytesPerPixel:
_originalSize
_previewGenerationQueue
_queue
_randomTemporaryPathWithSuffix:fileName:
_registerTranscoders
_setWideGamutProperties:scaledImage:
_signpostId
_targetJPEGCompressionValue
_telemetryImageTypeForUTI:
_tmpOutputFileURL
_transcodeAudioMessageContents:utiType:completionBlock:
_transcodeAutoloopContents:utiType:completionBlock:
_transcodeVideoAsync:target:maxBytes:isAnimojiV2:removeAlpha:preserveHDR:isAA:preserveAA:userInfo:completionHandler:
_transcoders
_writeHEIFImage:sourceURL:inFormat:withMaxByteSize:maxDimension:actualSize:startingLengthIndex:usedLengthIndex:telemetry:
_writeImage:sourceURL:target:hardwareEncoder:inFormat:fromFormat:withMaxByteSize:maxDimension:actualSize:startingLengthIndex:usedLengthIndex:estimator:telemetry:
_writeImageData:inFormat:sourceURL:
_writeRepresentationsForImage:target:sourceURL:sizes:maxDimension:srcUTI:inFormat:estimator:telemetry:
addEntriesFromDictionary:
addObject:
array
arrayWithObjects:
arrayWithObjects:count:
attributesOfItemAtPath:error:
audiovisualTypes
autorelease
auxiliaryImagesToPreserveForDerivativesFromImageSource:imageIndex:
boolFromTranscoderUserInfo:withKey:
boolValue
bundleIdentifier
class
compare:
conformsToProtocol:
copy
copyAuxiliaryImagesFromImageSource:toDestination:fromImageAtIndex:scaleFactor:
copyFramePropertiesFrom:index:inFormat:outFormat:
copyImagePropertiesFrom:frameCount:withProps:inFormat:outFormat:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
debugDescription
decodeiMessageAppPayload:bundleID:completionBlock:
decodeiMessageAppPayload:bundleID:outAttachmentURLs:error:
defaultManager
description
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
doubleValue
duration
emitPreviewGenerationBeginFromUTI:
emitPreviewGenerationEndFromUTI:
emitSignpostTranscodeFinalForDestinationUTI:
emitSignpostTranscodeSkipSourceUTI:
emitSignpostTranscodeStepForDestinationUTI:
emitTranscodeBeginFromUTI:
emitTranscodeEndFromUTI:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
estimatedSizeForOutputUTI:maximumDimension:quality:
excludedUTIs
exportAsynchronouslyWithCompletionHandler:
fallbackForData:attachments:inFileURL:completionBlockWithText:
fallbackForData:inFileURL:completionBlock:
fileSize
fileURLWithPath:
fileURLWithPath:isDirectory:
findLargerDimensionFromImage:withProperties:toWidth:toHeight:
findOrientationFromProperties:
firstObject
fixIMTranscoderAgentPriorityInversion
floatValue
formatDescriptions
fullQualityForData:attachments:inFileURL:completionBlock:
fullQualityForData:inFileURL:completionBlock:
generateAndPersistMetadataFromSourceURL:destinationURL:size:constraints:error:
generateAndPersistPreviewFromSourceURL:previewURL:size:balloonBundleID:previewConstraints:error:
generatePreview:previewURL:balloonBundleID:constraints:completionBlock:
generatePreviewMetadata:destinationURL:constraints:completionBlock:
generateSafeRender:constraints:completionBlock:
generateSnapshotForMessageGUID:payloadURL:balloonBundleID:isFromMe:completionBlock:
generatedSnapshotForDataURL:contentInset:isFromMe:
hash
identifier
infoDictionary
init
initWithAsset:presetName:
initWithCapacity:
initWithContentsOfURL:options:error:
initWithDomain:code:userInfo:
initWithImageData:imageSource:
initWithObjects:
initWithURL:
initWithURL:options:
initWithURL:uti:imageSource:
initWithUTI:imageSource:
initWithUTI:originalSize:fileSize:
integerValue
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
lastObject
lastPathComponent
length
load
longValue
mainThread
mediaType
mutableCopy
newEstimatorWithURL:uti:imageSource:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
optimizedEstimatedSizeForOutputUTI:maximumDimension:quality:
outputURL
overrideJPEGCompressionQuality
path
pathExtension
pathWithComponents:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginBalloonInsetsForMessageFromMe:
rangeOfString:
removeLastObject
removeObjectAtIndex:
removeObjectsInArray:
replaceObjectAtIndex:withObject:
respondsToSelector:
retain
retainCount
scaleImageToFitLargestDimension:outputData:
self
setAudioTranscoder:
setBackgroundColor:
setCountLimit:
setFileLengthLimit:
setName:
setObject:forKey:
setOutputFileType:
setOutputURL:
setOverrideJPEGCompressionQuality:
setTargetJPEGCompressionValue:
setTimeRange:
setValue:forKey:
setVideoComposition:
sharedFeatureFlags
sharedInstance
shouldPreserveAAEncoding:
shouldPreserveHDREncoding:
shouldProcessFileTransfer:utiType:transcoderUserInfo:target:allowUnfilteredUTIs:fileSizeLimit:commonCapabilities:
shouldTranscodeTransfer:transcoderUserInfo:target:utiType:allowUnfilteredUTIs:fileSizeLimit:commonCapabilities:
shouldTranscodeTransfer:transcoderUserInfo:target:utiType:allowUnfilteredUTIs:isAnimojiV2:removeAlpha:isHDR:preserveHDR:isAA:preserveAA:fileSizeLimit:
shouldUseHEIFEncoding:sourceUTI:
sizePreview:constraints:completionBlock:
sizePreviewFromSourceURL:size:previewConstraints:error:
standardUserDefaults
status
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringGUID
stringWithFormat:
superclass
supportedFileTypes
supportedUTIs
supportsUTI:
targetJPEGCompressionValue
tracks
tracksWithMediaType:
transcodeFileTransfer:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:representations:completionBlock:
transcodeFileTransferContents:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:fallback:representations:completionBlock:
transcodeFileTransferContents:utiType:transcoderUserInfo:completionBlock:
transcodeFileTransferData:balloonBundleID:attachments:fallBack:completionBlock:
transcodeFileTransferData:balloonBundleID:attachments:inFileURL:fallBack:completionBlock:
transcodeOpusFile:completionBlock:
transcodeProcessingRequired:
transformAuxiliaryImages:scaleFactor:applyingOrientation:
typeWithFilenameExtension:
unsignedIntegerValue
unsignedLongValue
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
writeToURL:atomically:
writeToURL:options:error:
zone
@16@0:8
B24@0:8@16
q72@0:8@16@24q32@40@48Q56@64
q88@0:8@16@24q32@40@48B56B60B64B68B72B76Q80
Q24@0:8@16
v76@0:8@16q24Q32B40B44B48B52B56@60@?68
v96@0:8@16@24@32q40@48@56Q64@72q80@?88
@32@0:8@16^{CGImageSource=}24
B32@0:8@16^@24
d16@0:8
v24@0:8d16
@24@0:8@16
Q48@0:8^{CGImageSource=}16@24^@32^@40
B24@0:8^{CGImage=}16
B24@0:8^{CGImageSource=}16
B24@0:8^{__CFString=}16
@56@0:8^{CGImageSource=}16Q24@32^{__CFString=}40^{__CFString=}48
@48@0:8^{CGImageSource=}16Q24^{__CFString=}32^{__CFString=}40
@120@0:8^{CGImageSource=}16@24@32Q40@48q56@64^{__CFString=}72^{__CFString=}80Q88Q96d104B112i116
v32@0:8@16^{CGImage=}24
@68@0:8@16@24^{__CFString=}32Q40^Q48^i56i64
v48@0:8^{CGImageSource=}16^{CGImageDestination=}24Q32d40
@40@0:8@16^{__CFString=}24@32
@116@0:8^{CGImageSource=}16@24q32@40^{__CFString=}48^{__CFString=}56Q64Q72^Q80i88^i92@100@108
@88@0:8^{CGImageSource=}16q24@32@40Q48^{__CFString=}56^{__CFString=}64@72@80
@72@0:8^{CGImageSource=}16@24^{__CFString=}32Q40Q48^Q56@64
@84@0:8^{CGImageSource=}16@24^{__CFString=}32Q40Q48^Q56i64^i68@76
Q24@0:8^{CGImageSource=}16
@40@0:8@16@24@32
q24@0:8@16
v24@0:8@16
v28@0:8q16B24
@40@0:8@16@24^{CGImageSource=}32
@48@0:8@16{CGSize=dd}24Q40
{CGSize=dd}40@0:8q16{CGSize=dd}24
d24@0:8@16
d32@0:8@16d24
d24@0:8d16
Q40@0:8@16q24d32
{CGSize="width"d"height"d}
v16@0:8
^{CMPhotoDecompressionContainer=}
B32@0:8@16@24
B24@0:8q16
v32@0:8@16@?24
v36@0:8i16@20@?28
v52@0:8@16@24@32B40@?44
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@"NSData"16@"NSURL"24@?<v@?@"NSArray"@"NSError"BB>32
v48@0:8@"NSData"16@"NSArray"24@"NSURL"32@?<v@?@"NSArray"@"NSString"@"NSError"BB>40
v48@0:8@"NSData"16@"NSArray"24@"NSURL"32@?<v@?@"NSArray"@"NSError"BQ>40
@32@0:8@16@24
v60@0:8@16@24@32@40B48@?52
@"IMFallbackTranscoder_AudioMessage"
B72@0:8@16@24@32q40@48Q56@64
v100@0:8@16@24@32q40@48@56Q64@72B80q84@?92
v72@0:8@16{IMPreviewConstraints=d{CGSize=dd}dBB}24@?64
v88@0:8@16@24@32{IMPreviewConstraints=d{CGSize=dd}dBB}40@?80
v80@0:8@16@24{IMPreviewConstraints=d{CGSize=dd}dBB}32@?72
@"NSArray"
@"NSObject<OS_dispatch_queue>"
@(#)PROGRAM:IMTranscoderAgent  PROJECT:IMTranscoderAgent-1
?333333
?X94<
ffffff
?ffffff
?333333
?333333
@mcpl
Transcoding
Supported video utis: %@
Checking if we support the AV uti: %@
Trying to discriminate based on type alone:
   Start time: %f
     End time: %f
     Duration: %f
  assetLibURI: %@
  isAuxVideo: %@
 removeAlpha: %@
 preserveHDR: %@
 Start time > 0, we need to transcode
 End time > 0, we need to transcode
 We have an assets library URI, we need to transcode (video might be slow-mo).
 This is an Aux video.
 This is an AnimojiV2 video, and we want to remove alpha
 This is an HDR video, and we don't want to preserve HDR
 This is an AA video, and we don't want to preserve AA
That wasn't enough, let's look at filesize too:
SendableUTIs: %@
Is the original sendable without transcode? %@
Found size %llu of file %@ with error %@
   Carrier supports H264, selecting: %@
   Carrier does not support H264, selecting: %@
No audio/video tracks, failing transcode.
Actually, using the audio preset
Using preset %@ for audio/video transcoding (preserveHDR %@ isAnimojiV2 %@ removeAlpha %@ isAA %@ preserveAA %@)
Using a standard AVAssetExportSession.
Supported file types: %@
org.3gpp.adaptive-multi-rate-audio
   outputFileType: %@
Exporting video to file %@
    Asset length: %f
      Start time: %f
        End time: %f
        Duration: %f
       Max bytes: %zd
     Setting time range
     Ignoring time range, transcoding full
Removing the alpha because this was an HEVC video with alpha
     Preset name: %@
  Export session: %@
           Asset: %@
       outputURL: %@
Dispatching video export
Export failed: %@
Export canceled
Export succeeded!
Duration
v8@?0
Could not find a valid outputType for Message presets
Could not create export session with Message presets
BigSize: %zu SmallSize: %zu
Warning - bigSize (%lu), smallSize (%lu) combination does not match the number of reps requested (%d)
NeedsTranscode? %@ isHDR %@
Transfer %@ doesn't need any processing
We need a hard link to this file for our clients who assume it's a file we created: %@
Transfer %@ is a supported format, will transcode
Created asset %@ with %d video tracks, %d audio tracks
   => Tracks: %@
No video or audio tracks found
Using a dispatch group when generating multiple video transcodings
Asset to use for bigSize: %@
Do we need to transcode to get the big(%lu) representation? %@ (removeAlphaFromAnimojiV2 %@ isHDR %@ preserveHDR %@)
Transcoding bigSize finished with size %llu removeAlpha %@ path %@ and error %@
v32@?0@"NSURL"8@"NSDictionary"16@"NSError"24
Adding bigURL %@ to outputPaths with context: %@
actualBigSize: %llu   smallSize %zu
Only using the big representation because the big output (%llu) fits in the small requirements (%zu)
bigURL was too big for smallSize or there was a FS error
Generating the big representation was not successful. Let's potentially try for small.
We didn't have to transcode to get the big representation so we know we have to for the small one.
There were two sizes requested && big doesn't satisfy the requirements for both, generating small. removeAlphaForAnimojiV2 %@ isHDR %@
Asset to use for smallSize: %@
Transcoding smallSize finished with size %llu removeAlpha %@ path %@ and error %@
Adding smallURL %@ to outputPaths with context: %@
Calling completionBlock with: transfer %@ outputPaths %@ error %@
Supported UTI types: %@
_isWideGamut %@ 
Transcoding _isWideGamut nil sourceRef
preferHEIF
Creating CGImageSource from url: %@
Source ref is %@
NULL
good
Checking uti from source ref at url: %@
Needs transcode as image compressed image format
Image is HEIF standard-compliant, but recipients prefer it. Proceeding with other checks
Needs transcode as all recipients support heif (source uti %@)
Image is not HEIF-standard compliant. Proceeding with other checks
Needs transcode as WebP is not supported
Needs transcode as image is wide-gamut
Not wide gamut image. Proceeding with other checks
No UTI supplied
shouldTranscodeTransfer with uti: %@ ?
Uti is not contained in supportedUTIs
This is MMS, we should always transcode
Checked size of file %@ with error %@
Found delay %@ unclampedDelay %@ loopCount %@ FrameInfo %@. copying to destination
IMTransocoding
Got image properties for image at index %zu: %@
Checking for PNG Properties: %@
Checking for HEICS Properties: %@
Checking for GIF Properties: %@
Checking for WebP Properties: %@
newPngProperties
properties
IMTranscoding
No png property dictionary to add
newHeicsProperties
No HEICS property dictionary to add
newWebPProperties
No WebP property dictionary to add
Orientation data NOT found in default location, checked TIFF location: %@
Orientation data found in default location: %@
Couldn't find props for image to find source height and width
Cannot generate image because source is NULL
Cannot generate image because format is NULL
No source width and height
Not considering resizing to %lu or reducing to %zd images, it's larger than the current image dimension (%zd) and the current image count (%zd)
    Image count = %lu
 Original count = %lu
      Max count = %lu
         Length = %lu
     Max length = %lu
Original Length = %lu
    subsampling = %d
   scale factor = %f
Successfully used hardware encoding
Failed using hardware encoding
Not using hardware encoding. encoder %@  isWideGamut %@
Cannot generate image because imageDestination is NULL
Setting output props: %@
Using subsamping with: %d  (index: %d)
Getting thumbnail at index %zu from %@
Created a rotated image for MMS: %@
Failed to create a a rotated image for MMS
Used thumbnail path %@
Checking for properties: %@
Setting the image orientation (key=%@) to (%@)
 ...this is MMS, we don't want orientation appended, it's all pre-rotated
 ... * Adding original properties to the set
adding scaled image at index %lu
  properties: %@
Failed adding scaled image at index (%zd)!
Success finalizing image: %@
Adding backward compatible color profile for non-heif-destination wide-gamut image
Successfully generated image! Comparing data length (%d) to maxByteSize (%d)
This image is a keeper, writing it out to url!
Saving %@ and breaking out of transcode loop
No image generated for this iteration, we got no image data.
Copying %zd aux images (index %zd scaleFactor %f orientation %d) from input %@, to output %@
v32@?0@"NSString"8@"NSDictionary"16^B24
Cannot write out image because data is nil
Cannot write out image because format is NULL
Nil file extension, aborting writing of image
Using file extension: %@
creating destination with output path: %@
Writing to url %@ failed
Invalid image source given to writeImage!
Invalid destination format provided to writeImage
Original image properties: %@
Beginning transcode loop for image format %@ with maxByteSize %d maxDimension %zd width %@ height %@
Compressed input size is %.02f times larger than target output size, using initial scaled res of %.02f %.02f
Trying maxSize = %lu  (index: %d)
Overrriding subsampling to %d for APNG
Estimated size %lu is larger than required size %lu, skipping
Warning! Did not find a valid size for this image given the filesize constraint!
Generating the representations, originalSize %ld (err %@) sizes %@
Attempting copy+add props for size %lu (reason: the source is wide gamut and smaller than the limit %lu)
Using original wide-gamut image with added properties answerImageURL: %@
Couldn't use copy of wide-gamut image with added properties (size %ld max %ld), transcoding
Beginning to transcode images with size limits: %@ originalFileSize %lu
Trying to transcode to target size index %lu size limit %@
Transcoding: Aborting further transcoding attempts: current image resize index is %d.
Aborting transcoding attempt: current size limit %tu is the same as the previous size.
Transcoding large size %tu (reason: the target is MMS).
Transcoding to size %tu (reason: the source is HEIF).
Transcoded size fits within the max limit so only writing URL for wide gamut properties
Original size is larger than max limit so needs transcoding
Original is not HEIF, we want to send HEIF, so transcoding
Destination (%@) and source (%@) UTIs do not match, so transcoding
Given size limit %lu is already greater than the original file size %lu.
Original file size limit %lu is bigger than target size %lu
Transcoding at size %tu (the previous size is %tu)
Transcoding result URL: %@ (start/stop length index: %d => %d)
Not transcoding an image for size: %tu
answer: %@ answerImageURL: %@
Finished transcoding images with %tu results: %@
Trying to copy wide gamut properties with original image count = %zu
Cannot set gamut properties because imageDestination is NULL
 ==> Image Count = %zu
adding image properties for wide gamut properties only. Created scaled image: %@
Success copying wide gamut image w/ props to url: %@
Failed to copy an image url for a wide gamut transformation
Trying to copy wide gamut properties for index maxSize = %lu (index: %d) with original image count = %zu
 ==> Image Count = %zu, suggestedMaxLength = %zu
adding image properties for HEIF Images only. Created scaled image: %@
Success writing wide gamut image out, breaking from loop with url: %@
Failed to generate an image url for a wide gamut transformation
_getScaleFactorArray uti %@ transferURL %@ outputURLs %@
_getScaleFactor inImageWidth = %lu
_getScaleFactor outImageWidth = %lu
_getScaleFactorArray scale factor for outPutURL %@
_getScaleFactorArray resorting to default scale factor for outPutURL %@
Did not compute sticker scale. [outputURLs count] %@, uti %@, transferURL %@
Warning - sizes %@ do not match the number of reps requested (%d)
ImageQuality
Transfer: %@   needsTranscode? %@
This image needs to be transcoded!
transferURL is nil, no image to transcode...
Source image properties unavailable (sourceRef is NULL)
 File size of file %@ with error %@   (%llu bytes)
 File still requires transcoding: %@
 File is too large, we'll need to transcode it
Transcoding to HEIF, original uti: %@
Couldn't fit this image into any size of HEIF
We've got an opaque PNG, try to reencode as a JPEG
Couldn't fit this image into any size of PNG
We've got a GIF, try to reencode as a GIF
Couldn't fit this image into any size of GIF
We've got a WebP, try to reencode as a %@ (frame count %zu)
Couldn't fit this image into any size of %@
Ok, let's see if we can fit this image into a JPEG
Image failed to transcode; falling back to original
Didn't require transcode, defaulting to the original image MMSGIFCarrierTesting %@, needsTrancode %@
We've reached the end of the image transcode attempt. outputURL = %@
Failed to re-encode: %@
The imageSource was NULL when trying to load original attachment file
Image ended up not needing a transcode operation
scaleFactorArray = %@
PNG can be converted to JPG: %@
Image has no alpha channel, assuming opaque
Image has alpha channel, checking for translucent pixels
Image has premultiplied alpha channel, checking for translucent pixels
Image alpha channel unknown, translucency check may fail
 ==> Image has %ld bits per component, using %ld bpc for test
_imageContainsTranslucentPixels overflowed with %ld width and %ld height
Translucency buffer size (%ld MB) exceeds maximum, cannot test pixels, assuming YES
 ==> Attempting to allocate opacity test buffer of size %ld MB (%ld KB)
Failed to allocate buffer for image translucency test
Failed to create bitmap context while checking translucency of image, returning YES
Found translucent pixel(s) in image: %@
Real width is: %d
Trying to create GIF with %d frames
    Need to remove %d frame(s)
    Left with %d frame(s)
    Removed factor: %f
    Removed too many frames (%f), trying to shrink the image
  Bailing on frame %d out of %lu bceause we already exceeded the target data size
  Didn't fit, updating frames to remove: %d   (count: %lu   extra frames: %f  factorOff: %f)
  Fits!
Final length was %d
GIF wanted %zu durations. Generated: %@.
IMTranscoderAgent _GIFCreateFrameGenerationBlocksForImageSource source frame cache
^{CGImage=}8@?0
public.heif-standard
ForceHEIFEncoding
Forcing HEIF encoding from default
Rejecting HEIF encoding, source is %@
Checking for HEIF support %@
ForceHDREncoding
Forcing HDR encoding from default
Checking for HDR support %@
ForceAAEncoding
Forcing AA encoding from default
Attempted to transcode with generic transcoder--this is probably unintentional!!
Has transcoderUserInfo: %@, found %@, so %@ = %@
No transcoderUserInfo for %@
IMFallbackTranscoder_AudioMessage: nil filePath
Opening Opus file at path %@
IMFallbackTranscoder_AudioMessage: error creating directory for path %@ with error %@
Creating new file at path: %@
ExtAudioFileSetProperty / kExtAudioFileProperty_ClientDataFormat for AMR
ExtAudioFileSetProperty / kExtAudioFileProperty_ClientDataFormat for Opus
ExtAudioFileGetProperty / kExtAudioFileProperty_AudioConverter for AMR
AudioConverterSetProperty / kAudioConverterEncodeBitRate for outConverter
ExtAudioFileSetProperty / kExtAudioFileProperty_ConverterConfig for AMR
ExtAudioFileRead
ExtAudioFileWrite
Audio Message.amr
NO DESCRIPTION!
IMFallbackTranscoder_AudioMessage: %@ failed with error code %d
PKPeerPaymentBubbleView
PassKitUI
ChatKit
CKUIBehavior
CKFallbackClass
MSPhotosExtensionFallbackTranscoder
IMFallbackTranscoder
Found encoder to get bundle for identifier %@, encoder %@
Failed to get bundle for identifier %@
@"NSURL"16@?0@"NSString"8
IMFallBacktranscoder
output trying to generate fallback for data %@ inFileURL %@ outputURLs %@ error %@ success %@ attemptedTranscode %@ text %@ attachments %@
v40@?0@"NSArray"8@"NSString"16@"NSError"24B32B36
output trying to generate fallback for data %@ inFileURL %@ outputURLs %@ error %@ success %@ attemptedTranscode %@ attachments %@
v32@?0@"NSArray"8@"NSError"16B24B28
******** found encoder ******** %@ that responds to fullQualityForData %s %s
Feb 17 2023
21:25:04
got fullquality for data at URLs %@ error %@ success %@ attemptedToGenerateFallback %@
******** found encoder ******** %@ that responds to fullQualityForData:attachments:inFileURL:completionBlock: %s %s
got fullquality for data at URLs %@ error %@ success %@
v36@?0@"NSArray"8@"NSError"16B24Q28
******* did NOT ****** find encoder %@ that responds to fullQualityForData
IMTranscoding. No encoder found for balloon id %@
PFCreateGIFFromVideoURL
PhotosFormats
Transcoding GIF {source: %@, target: %@}
v24@?0d8^B16
Converting to GIF progress {progress: %f}
Finished transcoding GIF {success: %@}
v12@?0B8
IMTranscoding. PFCreateGIFFromVideoURL function not available
__kIMTranscodeErrorDomain
com.apple.IMTranscoderQueue
com.apple.IMTranscoderPreviewGenerationQueue
Transcoder received request to transcode %@
                       UTI: %@
     Allow Unfiltered UTIs: %@
                     Sizes: %@
             Max Dimension: %ld
           Transcoder Info: %@
v56@?0@"NSURL"8@"NSArray"16@"NSArray"24@"NSError"32B40B44@"NSDictionary"48
Transcoding Not transcoding file %@
Prefers HEIF output
Does not prefer HEIF output
Preserve HDR output
preserveHDR
Will NOT preserve HDR output
Not transcoding attachment file format: %@
Found transcoder to transcode data for balloonBundleID %@ fallback %@
Transcoding Not transcoding attachment file format: %@
Lockdown
Transcoder received request to generate safe render: %@
File is not a supported type: %@
v20@?0B8@"NSError"12
v36@?0B8{CGSize=dd}12@"NSError"28
CKPassPreviewMediaObject
Will generate preview metadata for url %@ dst url %@
v36@?0B8@"NSData"12@"NSArray"20@"NSError"28
IMTranscoderImage.transcode.none
 enableTelemetry=YES 
IMTranscoderAV.transcode.type.av
REQUIRED_ATTRIBUTE - Warning, missing %@ to add to %s
IMTranscoderImage.previewGeneration.type.other
IMTranscoderImage.previewGeneration.type.jpeg
IMTranscoderImage.previewGeneration.type.heif
IMTranscoderImage.previewGeneration.type.png
IMTranscoderImage.previewGeneration.type.gif
IMTranscoderImage.transcode.type.other
IMTranscoderImage.transcode.type.jpeg
IMTranscoderImage.transcode.type.heif
IMTranscoderImage.transcode.type.png
IMTranscoderImage.transcode.type.gif
IMTranscoderImage.transcode.none.other
IMTranscoderImage.transcode.none.jpeg
IMTranscoderImage.transcode.none.heif
IMTranscoderImage.transcode.none.png
IMTranscoderImage.transcode.none.gif
IMTranscoderImage.transcode.step.other
IMTranscoderImage.transcode.step.jpeg
IMTranscoderImage.transcode.step.heif
IMTranscoderImage.transcode.step.png
IMTranscoderImage.transcode.step.gif
IMTranscoderImage.transcode.final.other
IMTranscoderImage.transcode.final.jpeg
IMTranscoderImage.transcode.final.heif
IMTranscoderImage.transcode.final.png
IMTranscoderImage.transcode.final.gif
IMTranscoderImage.transcode.skip.other
IMTranscoderImage.transcode.skip.jpeg
IMTranscoderImage.transcode.skip.heif
IMTranscoderImage.transcode.skip.png
IMTranscoderImage.transcode.skip.gif
IMTranscoder_AV
IMEmbeddedHardwareJPEGTranscoder
IMTranscoder_Image
IMTranscoderTelemetry
IMTranscoderImageSizeEstimator
IMTranscoderImageCMPhotoSizeEstimator
IMTranscoder
IMFallbackTranscoder_AudioMessage
IMSnapshotTranscoder
IMBalloonPluginFallbackEncoder
NSObject
IMFallbackTranscoder
IMTranscodingAgentController
IMMMSSupportsH264VideoForPhoneNumber:simID:
_overrideJPEGCompressionQuality
T@"IMFallbackTranscoder_AudioMessage",&,N,V_audioTranscoder
conformsToType:
TQ,R
dealloc
Td,N,V_targetJPEGCompressionValue
initWithDouble:
__imArrayByApplyingBlock:
isProxy
_audioTranscoder
release
_checkAndSaveImageData:sourceURL:inFormat:withMaxByteSize:actualSize:usedLengthIndex:currentIndex:
.cxx_destruct
_getImageWidth:
T#,R
audioTranscoder
T@"NSString",R,C
containsObject:
Td,N,V_overrideJPEGCompressionQuality
emitSignpostNoTranscodeFromUTI:
URLByDeletingLastPathComponent
isEqualToValue:
__im_performBlock:
numberWithBool:
_canConvertPNGToJPEG:
sharedBehaviors
_container
_copyWideGamutImage:sourceURL:inFormat:withMaxByteSize:maxDimension:actualSize:telemetry:
_emitSignpostPreviewGenerationRange:begin:
_emitSignpostTranscodeRange:begin:
_estimatedBytesPerPixelForJPEGQuality:
_failWithOSStatusErrorCode:description:completion:
_fallbackTranscoders
_fileSizeForTransfer:
_findPluginFallbackEncoder:withBalloonBundleID:
_findTranscoderForUTI:
_getScaleFactorArray:transferURL:outputURLs:
_imageContainsTranslucentPixels:
_isHEIFImageFormat:
_isHEVCVideo:
_isWebPImageFormat:
_isWideGamutImage:
_newGeneratedImage:sourceWidth:sourceHeight:sourceLength:sourceProps:target:hardwareEncoder:inFormat:fromFormat:withMaxLength:withMaxCount:withCompressionQuality:enforceMaxes:subsampling:
_newSizeForMaximumDimension:originalSize:
_nominalBytesPerPixelForUTI:
_normalizedInputFactor
_normalizedInputFactorForUTI:bytesPerPixel:
_originalSize
_previewGenerationQueue
_queue
_randomTemporaryPathWithSuffix:fileName:
_registerTranscoders
_setWideGamutProperties:scaledImage:
_signpostId
_targetJPEGCompressionValue
_telemetryImageTypeForUTI:
_tmpOutputFileURL
_transcodeAudioMessageContents:utiType:completionBlock:
_transcodeAutoloopContents:utiType:completionBlock:
_transcodeVideoAsync:target:maxBytes:isAnimojiV2:removeAlpha:preserveHDR:isAA:preserveAA:userInfo:completionHandler:
_transcoders
_writeHEIFImage:sourceURL:inFormat:withMaxByteSize:maxDimension:actualSize:startingLengthIndex:usedLengthIndex:telemetry:
_writeImage:sourceURL:target:hardwareEncoder:inFormat:fromFormat:withMaxByteSize:maxDimension:actualSize:startingLengthIndex:usedLengthIndex:estimator:telemetry:
_writeImageData:inFormat:sourceURL:
_writeRepresentationsForImage:target:sourceURL:sizes:maxDimension:srcUTI:inFormat:estimator:telemetry:
addEntriesFromDictionary:
addObject:
array
arrayWithObjects:
arrayWithObjects:count:
attributesOfItemAtPath:error:
audiovisualTypes
autorelease
auxiliaryImagesToPreserveForDerivativesFromImageSource:imageIndex:
boolFromTranscoderUserInfo:withKey:
boolValue
bundleIdentifier
class
compare:
conformsToProtocol:
copy
copyAuxiliaryImagesFromImageSource:toDestination:fromImageAtIndex:scaleFactor:
copyFramePropertiesFrom:index:inFormat:outFormat:
copyImagePropertiesFrom:frameCount:withProps:inFormat:outFormat:
copyItemAtURL:toURL:error:
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
debugDescription
decodeiMessageAppPayload:bundleID:completionBlock:
decodeiMessageAppPayload:bundleID:outAttachmentURLs:error:
defaultManager
description
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
doubleValue
duration
emitPreviewGenerationBeginFromUTI:
emitPreviewGenerationEndFromUTI:
emitSignpostTranscodeFinalForDestinationUTI:
emitSignpostTranscodeSkipSourceUTI:
emitSignpostTranscodeStepForDestinationUTI:
emitTranscodeBeginFromUTI:
emitTranscodeEndFromUTI:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
estimatedSizeForOutputUTI:maximumDimension:quality:
excludedUTIs
exportAsynchronouslyWithCompletionHandler:
fallbackForData:attachments:inFileURL:completionBlockWithText:
fallbackForData:inFileURL:completionBlock:
fileSize
fileURLWithPath:
fileURLWithPath:isDirectory:
findLargerDimensionFromImage:withProperties:toWidth:toHeight:
findOrientationFromProperties:
firstObject
fixIMTranscoderAgentPriorityInversion
floatValue
formatDescriptions
fullQualityForData:attachments:inFileURL:completionBlock:
fullQualityForData:inFileURL:completionBlock:
generateAndPersistMetadataFromSourceURL:destinationURL:size:constraints:error:
generateAndPersistPreviewFromSourceURL:previewURL:size:balloonBundleID:previewConstraints:error:
generatePreview:previewURL:balloonBundleID:constraints:completionBlock:
generatePreviewMetadata:destinationURL:constraints:completionBlock:
generateSafeRender:constraints:completionBlock:
generateSnapshotForMessageGUID:payloadURL:balloonBundleID:isFromMe:completionBlock:
generatedSnapshotForDataURL:contentInset:isFromMe:
hash
identifier
infoDictionary
init
initWithAsset:presetName:
initWithCapacity:
initWithDomain:code:userInfo:
initWithImageData:imageSource:
initWithObjects:
initWithURL:
initWithURL:options:
initWithURL:uti:imageSource:
initWithUTI:imageSource:
initWithUTI:originalSize:fileSize:
integerValue
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
lastObject
lastPathComponent
length
load
longValue
mainThread
mediaType
mutableCopy
newEstimatorWithURL:uti:imageSource:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
optimizedEstimatedSizeForOutputUTI:maximumDimension:quality:
outputURL
overrideJPEGCompressionQuality
path
pathExtension
pathWithComponents:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pluginBalloonInsetsForMessageFromMe:
rangeOfString:
removeLastObject
removeObjectAtIndex:
removeObjectsInArray:
replaceObjectAtIndex:withObject:
respondsToSelector:
retain
retainCount
scaleImageToFitLargestDimension:outputData:
self
setAudioTranscoder:
setBackgroundColor:
setCountLimit:
setFileLengthLimit:
setName:
setObject:forKey:
setOutputFileType:
setOutputURL:
setOverrideJPEGCompressionQuality:
setTargetJPEGCompressionValue:
setTimeRange:
setValue:forKey:
setVideoComposition:
sharedFeatureFlags
sharedInstance
shouldPreserveAAEncoding:
shouldPreserveHDREncoding:
shouldProcessFileTransfer:utiType:transcoderUserInfo:target:allowUnfilteredUTIs:fileSizeLimit:commonCapabilities:
shouldTranscodeTransfer:transcoderUserInfo:target:utiType:allowUnfilteredUTIs:fileSizeLimit:commonCapabilities:
shouldTranscodeTransfer:transcoderUserInfo:target:utiType:allowUnfilteredUTIs:isAnimojiV2:removeAlpha:isHDR:preserveHDR:isAA:preserveAA:fileSizeLimit:
shouldUseHEIFEncoding:sourceUTI:
sizePreview:constraints:completionBlock:
sizePreviewFromSourceURL:size:previewConstraints:error:
standardUserDefaults
status
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringGUID
stringWithFormat:
superclass
supportedFileTypes
supportedUTIs
supportsUTI:
targetJPEGCompressionValue
tracks
tracksWithMediaType:
transcodeFileTransfer:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:representations:completionBlock:
transcodeFileTransferContents:utiType:allowUnfilteredUTIs:target:sizes:commonCapabilities:maxDimension:transcoderUserInfo:fallback:representations:completionBlock:
transcodeFileTransferContents:utiType:transcoderUserInfo:completionBlock:
transcodeFileTransferData:balloonBundleID:attachments:fallBack:completionBlock:
transcodeFileTransferData:balloonBundleID:attachments:inFileURL:fallBack:completionBlock:
transcodeOpusFile:completionBlock:
transcodeProcessingRequired:
transformAuxiliaryImages:scaleFactor:applyingOrientation:
typeWithFilenameExtension:
unsignedIntegerValue
unsignedLongValue
videoCompositionWithPropertiesOfAsset:prototypeInstruction:
writeToURL:atomically:
writeToURL:options:error:
zone
@16@0:8
B24@0:8@16
q72@0:8@16@24q32@40@48Q56@64
q88@0:8@16@24q32@40@48B56B60B64B68B72B76Q80
Q24@0:8@16
v76@0:8@16q24Q32B40B44B48B52B56@60@?68
v96@0:8@16@24@32q40@48@56Q64@72q80@?88
@32@0:8@16^{CGImageSource=}24
B32@0:8@16^@24
d16@0:8
v24@0:8d16
@24@0:8@16
Q48@0:8^{CGImageSource=}16@24^@32^@40
B24@0:8^{CGImage=}16
B24@0:8^{CGImageSource=}16
B24@0:8^{__CFString=}16
@56@0:8^{CGImageSource=}16Q24@32^{__CFString=}40^{__CFString=}48
@48@0:8^{CGImageSource=}16Q24^{__CFString=}32^{__CFString=}40
@120@0:8^{CGImageSource=}16@24@32Q40@48q56@64^{__CFString=}72^{__CFString=}80Q88Q96d104B112i116
v32@0:8@16^{CGImage=}24
@68@0:8@16@24^{__CFString=}32Q40^Q48^i56i64
v48@0:8^{CGImageSource=}16^{CGImageDestination=}24Q32d40
@40@0:8@16^{__CFString=}24@32
@116@0:8^{CGImageSource=}16@24q32@40^{__CFString=}48^{__CFString=}56Q64Q72^Q80i88^i92@100@108
@88@0:8^{CGImageSource=}16q24@32@40Q48^{__CFString=}56^{__CFString=}64@72@80
@72@0:8^{CGImageSource=}16@24^{__CFString=}32Q40Q48^Q56@64
@84@0:8^{CGImageSource=}16@24^{__CFString=}32Q40Q48^Q56i64^i68@76
Q24@0:8^{CGImageSource=}16
@40@0:8@16@24@32
q24@0:8@16
v24@0:8@16
v28@0:8q16B24
@40@0:8@16@24^{CGImageSource=}32
@48@0:8@16{CGSize=dd}24Q40
{CGSize=dd}40@0:8q16{CGSize=dd}24
d24@0:8@16
d32@0:8@16d24
d24@0:8d16
Q40@0:8@16q24d32
{CGSize="width"d"height"d}
v16@0:8
^{CMPhotoDecompressionContainer=}
B32@0:8@16@24
B24@0:8q16
v32@0:8@16@?24
v36@0:8i16@20@?28
v52@0:8@16@24@32B40@?44
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@"NSData"16@"NSURL"24@?<v@?@"NSArray"@"NSError"BB>32
v48@0:8@"NSData"16@"NSArray"24@"NSURL"32@?<v@?@"NSArray"@"NSString"@"NSError"BB>40
v48@0:8@"NSData"16@"NSArray"24@"NSURL"32@?<v@?@"NSArray"@"NSError"BQ>40
@32@0:8@16@24
v60@0:8@16@24@32@40B48@?52
@"IMFallbackTranscoder_AudioMessage"
B72@0:8@16@24@32q40@48Q56@64
v100@0:8@16@24@32q40@48@56Q64@72B80q84@?92
v72@0:8@16{IMPreviewConstraints=d{CGSize=dd}dBB}24@?64
v88@0:8@16@24@32{IMPreviewConstraints=d{CGSize=dd}dBB}40@?80
v80@0:8@16@24{IMPreviewConstraints=d{CGSize=dd}dBB}32@?72
@"NSArray"
@"NSObject<OS_dispatch_queue>"
