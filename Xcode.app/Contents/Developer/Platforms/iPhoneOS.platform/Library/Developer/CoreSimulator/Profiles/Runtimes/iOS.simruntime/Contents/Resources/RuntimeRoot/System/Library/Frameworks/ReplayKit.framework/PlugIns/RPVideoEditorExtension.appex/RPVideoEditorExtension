@(#)PROGRAM:RPVideoEditorExtension  PROJECT:ReplayKit-1
tempFileURL
mixAudioForMovie:finalMovieURL:withCompletionHandler:
assetWithURL:
initWithAsset:presetName:
setOutputURL:
setOutputFileType:
tracksWithMediaType:
array
countByEnumeratingWithState:objects:count:
audioMixInputParameters
trackID
setTrackID:
addObject:
audioMix
setInputParameters:
setAudioMix:
status
_rpUserErrorForCode:userInfo:
exportAsynchronouslyWithCompletionHandler:
defaultManager
_srTempPath
stringWithFormat:
date
timeIntervalSince1970
fileURLWithPath:
mixAudioForMovie:withCompletionHandler:
initWithBundleIdentifier:URL:applicationName:overrideTintColor:size:
init
view
setFrame:
setActivityTypes:
setHasEdit:
deviceHasHomeButton
setHasHomeButton:
setShareSheetUp:
setVideoOverlay:
bounds
videoOverlay
setUiHidden:
handleSingleTap:
initWithTarget:action:
addGestureRecognizer:
_srVideoOverlayButtonWithStyle:
setVideoOverlayPlayButton:
mainScreen
videoOverlayPlayButton
frame
playAction
setTarget:action:
setIntroMode:
setOriginalVideoURL:
setVideoURL:
setApplicationName:
setBundleIdentifier:
initWithFrame:
setTitleLabel:
titleLabel
systemFontOfSize:
setFont:
clearColor
setBackgroundColor:
traitCollection
userInterfaceStyle
whiteColor
setTextColor:
blackColor
applicationName
setText:
setTextAlignment:
setClipsToBounds:
setClipsSubviews:
_srGetCreationDateForFile:
_srGetStringFromDate:
addSubview:
initWithCustomView:
setTitleButton:
trimFileURL
setTrimFilePath:
setTrimming:
setExporting:
initWithURL:options:
setAvAsset:
avAsset
initWithAsset:
setAvPlayerItem:
avPlayerItem
initWithPlayerItem:
setAvPlayer:
avPlayer
seekToTime:
defaultCenter
itemDidFinishPlaying:
addObserver:selector:name:object:
setAvPlayerLayer:
avPlayerLayer
setPlayer:
currentItem
addObserver:forKeyPath:options:context:
setCurrentItemLoaded:
initWithFrame:privateStyle:
setScrubberContainterView:
scrubberContainterView
setUserInteractionEnabled:
setTranslatesAutoresizingMaskIntoConstraints:
setAvTrimmer:
avTrimmer
setAutoresizingMask:
setMinimumTrimLength:
setEditable:
setZoomDelay:
setEdgeInset:
setScrubbing:
isScrubbing
currentTime
setValue:
addPeriodicTimeObserverForInterval:queue:usingBlock:
setPlaybackTimeObserver:
shareAction
initWithBarButtonSystemItem:target:action:
setShareButton:
undoAction
setUndoButton:
pauseAction
setPauseButton:
setPlayButton:
doneAction
setDoneButton:
saveAction
setSaveButton:
setCancelButton:
setCancelTrimButton:
setTrimButton:
setFlexSpace:
setFixSpace:
fixSpace
setWidth:
setTopToolBar:
hasHomeButton
topToolBar
setDelegate:
setTintColor:
setBottomToolBar:
bottomToolBar
layer
addSublayer:
currentOrientation
applyPadUILayout
applyPhoneUILayout
playButton
setImageInsets:
pauseButton
shareButton
isTrimming
cancelTrimButton
flexSpace
titleButton
trimButton
arrayWithObjects:
setItems:
isIntroMode
cancelButton
saveButton
applyPhoneConstraints
setPadMode:
removeFromSuperview
applyPadConstraints
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
isEqualToString:
duration
currentItemLoaded
setThumbnailGenerator:
setCachedTimeStamps:
setDataSource:
setEditStartTime:
getPlayerDuration
setEditEndTime:
reloadData
isUIHidden
showUI
configureReplayUIHidden
hideUI
setAlpha:
animateWithDuration:animations:
becomeFirstResponder
viewWillAppear:
viewDidAppear:
viewDidLayoutSubviews
resignFirstResponder
viewWillDisappear:
removeTimeObserver:
removeObserver:forKeyPath:
removeObserver:
dealloc
viewWillTransitionToSize:withTransitionCoordinator:
refreshAVRotation
animateAlongsideTransition:completion:
isExporting
delegate
movieScrubberDidCancelEditing:
editStartTime
editEndTime
valueWithCMTime:
arrayWithObjects:count:
addBoundaryTimeObserverForTimes:queue:usingBlock:
setTimeObserver:
play
isPadMode
pause
isShareSheetUp
activityTypes
videoEditor:didFinishWithActivityTypes:
trimVideo
videoURL
_srRemoveFile:completion:
sharedPhotoLibrary
creationRequestForAssetFromVideoAtFileURL:
code
performChanges:completionHandler:
displayShareSheetWithVideoURL:
doneButton
mutableCopy
removeObject:
setExportSession:
exportSession
setTimeRange:
error
outputURL
reloadAVLayerWithURL:
setActionAtItemEnd:
sharedManager
bundleIdentifier
overrideShareMessage
setOverrideShareMessage:
_rpLocalizedStringFromFrameworkBundleWithKey:
author
length
appName
setAppName:
setShareText:
itemURL
setItemURL:
appArtworkURL
initWithContentsOfURL:
imageWithData:
setAppIcon:
initWithActivityItems:applicationActivities:
setExcludedActivityTypes:
setActivityTypeOrder:
setCompletionWithItemsHandler:
setModalPresentationStyle:
popoverPresentationController
setBarButtonItem:
presentViewController:animated:completion:
loadItemDetailsForBundleIdentifier:completionHandler:
hasEdit
value
editMode
setEditing:animated:
previewMode
doubleValue
arrayWithCapacity:
numberWithDouble:
arrayWithObject:
asset
count
objectAtIndex:
naturalSize
preferredTransform
thumbnailGenerator
getThumbnailSize
setMaximumSize:
cachedTimeStamps
objectForKey:
setThumbnailFromCacheWithTimeStamp:
setObject:forKey:
generateCGImagesAsynchronouslyForTimes:completionHandler:
setThumbnailImage:forTimestamp:
getVideoSize
scale
subtype
motionEnded:withEvent:
respondsToSelector:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
positionForBar:
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
initWithBundleIdentifier:URL:applicationName:
observeValueForKeyPath:ofObject:change:context:
canBecomeFirstResponder
fileAttachmentURL
setFileAttachmentURL:
playbackTimeObserver
timeObserver
undoButton
trimFilePath
originalVideoURL
.cxx_destruct
_currentItemLoaded
_exporting
_scrubbing
_trimming
_padMode
_introMode
_uiHidden
_shareSheetUp
_hasEdit
_hasHomeButton
_delegate
_fileAttachmentURL
_overrideShareMessage
_videoURL
_avPlayer
_avPlayerLayer
_avPlayerItem
_avAsset
_scrubberContainterView
_playbackTimeObserver
_applicationName
_bundleIdentifier
_timeObserver
_bottomToolBar
_topToolBar
_shareButton
_pauseButton
_saveButton
_flexSpace
_doneButton
_cancelButton
_cancelTrimButton
_trimButton
_undoButton
_titleButton
_playButton
_fixSpace
_videoOverlayPlayButton
_videoOverlay
_titleLabel
_editStartTime
_editEndTime
_trimFilePath
_originalVideoURL
_exportSession
_avTrimmer
_thumbnailGenerator
_cachedTimeStamps
_activityTypes
T@"NSURL",&,N,V_videoURL
T@"AVPlayer",&,N,V_avPlayer
T@"AVPlayerLayer",&,N,V_avPlayerLayer
T@"AVPlayerItem",&,N,V_avPlayerItem
T@"AVURLAsset",&,N,V_avAsset
TB,N,V_currentItemLoaded
T@"UIView",&,N,V_scrubberContainterView
T@"NSObject",&,N,V_playbackTimeObserver
T@"NSString",&,N,V_applicationName
T@"NSString",&,N,V_bundleIdentifier
T@,&,N,V_timeObserver
exporting
TB,N,GisExporting,V_exporting
scrubbing
TB,N,GisScrubbing,V_scrubbing
trimming
TB,N,GisTrimming,V_trimming
padMode
TB,N,GisPadMode,V_padMode
introMode
TB,N,GisIntroMode,V_introMode
uiHidden
TB,N,GisUIHidden,V_uiHidden
shareSheetUp
TB,N,GisShareSheetUp,V_shareSheetUp
T@"UIToolbar",&,N,V_bottomToolBar
T@"UIToolbar",&,N,V_topToolBar
T@"UIBarButtonItem",&,N,V_shareButton
T@"UIBarButtonItem",&,N,V_pauseButton
T@"UIBarButtonItem",&,N,V_saveButton
T@"UIBarButtonItem",&,N,V_flexSpace
T@"UIBarButtonItem",&,N,V_doneButton
T@"UIBarButtonItem",&,N,V_cancelButton
T@"UIBarButtonItem",&,N,V_cancelTrimButton
T@"UIBarButtonItem",&,N,V_trimButton
T@"UIBarButtonItem",&,N,V_undoButton
T@"UIBarButtonItem",&,N,V_titleButton
T@"UIBarButtonItem",&,N,V_playButton
T@"UIBarButtonItem",&,N,V_fixSpace
T@"UIView<RPVideoOverlayButton>",&,N,V_videoOverlayPlayButton
T@"UIView",&,N,V_videoOverlay
T@"UILabel",&,N,V_titleLabel
Td,N,V_editStartTime
Td,N,V_editEndTime
T@"NSURL",&,N,V_trimFilePath
T@"NSURL",&,N,V_originalVideoURL
T@"AVAssetExportSession",&,N,V_exportSession
T@"UIMovieScrubber",&,N,V_avTrimmer
T@"AVAssetImageGenerator",&,N,V_thumbnailGenerator
T@"NSMutableDictionary",&,N,V_cachedTimeStamps
T@"NSMutableArray",&,N,V_activityTypes
TB,V_hasEdit
TB,V_hasHomeButton
T@,W,N,V_delegate
T@"NSURL",&,N,V_fileAttachmentURL
T@"NSString",&,N,V_overrideShareMessage
currentDevice
userInterfaceIdiom
activityViewControllerPlaceholderItem:
activityViewController:itemForActivityType:
activityViewController:subjectForActivityType:
activityViewController:dataTypeIdentifierForActivityType:
activityViewController:thumbnailImageForActivityType:suggestedSize:
activityViewControllerLinkMetadata:
shareText
appIcon
_appName
_shareText
_appIcon
_itemURL
T@"NSString",&,N,V_appName
T@"NSString",&,N,V_shareText
T@"UIImage",&,N,V_appIcon
T@"NSURL",&,N,V_itemURL
_graphicsQuality
initWithStyle:
bundleForClass:
imageNamed:inBundle:
setImage:forState:
sizeToFit
_playButtonTapped:
addTarget:action:forControlEvents:
_playButtonActivate:
_playButtonDeactivate:
setDeliversTouchesForGesturesToSuperview:
initWithImage:
initWithPrivateStyle:
insertSubview:belowSubview:
_setBackdropMaskViewFlags:
updateMaskViewsForView:
style
target
setTarget:
action
setAction:
_style
_button
_backdropView
_target
_action
T@,W,N,V_target
T:,N,V_action
_normalButtonImage
_highlightedButtonImage
_handleTap:
_createOverlayImageWithBackgroundWhite:backgroundAlpha:glyphAlpha:
size
drawAtPoint:blendMode:alpha:
viewDidLoad
setupChildViewControllers
setupVideoEditorController
viewDidDisappear:
tearDownChildViewControllers
setMovieURL:
setOverrideTintColor:
setIsInternalTestMode:
isInternalTestMode
inputItemsFromClientWithCompletionHandler:
setVideoEditorViewController:
addChildViewController:
didMoveToParentViewController:
willMoveToParentViewController:
removeFromParentViewController
extensionContext
inputItems
attachments
objectAtIndexedSubscript:
hasItemConformingToTypeIdentifier:
attributedTitle
string
loadItemForTypeIdentifier:options:completionHandler:
enumerateObjectsUsingBlock:
replyQueue
extensionObjectProxy
extensionDidFinishWithActivityTypes:
doAction:
videoEditorViewController
movieURL
overrideTintColor
setReplyQueue:
_isInternalTestMode
_videoEditorViewController
_movieURL
_overrideTintColor
_replyQueue
T@"RPVideoEditorViewController",&,N,V_videoEditorViewController
T@"NSURL",&,N,V_movieURL
T@"UIColor",&,N,V_overrideTintColor
T@"NSObject<OS_dispatch_queue>",&,N,V_replyQueue
TB,N,V_isInternalTestMode
interfaceWithProtocol:
videoEditorExtensionViewController
_principalObject
_auxiliaryConnection
remoteObjectProxyWithErrorHandler:
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
dictionary
setObject:forKeyedSubscript:
bundleID
setBundleID:
setAuthor:
setAppArtworkURL:
_bundleID
_author
_appArtworkURL
T@"NSString",&,N,V_bundleID
T@"NSString",&,N,V_author
T@"NSURL",&,N,V_appArtworkURL
bagSubProfile
bagSubProfileVersion
bagForProfile:profileVersion:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
initWithBag:caller:keyProfile:
performLookupWithBundleIdentifiers:itemIdentifiers:
resultWithError:
allItems
firstObject
displayName
_rpLocalizedAppNameFromBundleID:
artistName
productPageURL
artwork
URLWithHeight:width:cropStyle:format:
v16@?0@"NSError"8
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]
+[RPAudioMixUtility mixAudioForMovie:finalMovieURL:withCompletionHandler:]_block_invoke
v8@?0
%@/RPReplay_Final
.mp4
%@%@%@
JwLB44/jEB8aFDpXQ16Tuw
status
duration
v32@?0{?=qiIq}8
%@/%@_
-[RPVideoEditorViewController viewDidAppear:]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[RPVideoEditorViewController saveAction]
-[RPVideoEditorViewController saveAction]_block_invoke
-[RPVideoEditorViewController saveAction]_block_invoke_4
v20@?0B8@"NSError"12
v24@?0@"NSURL"8@"NSError"16
-[RPVideoEditorViewController trimVideo]
-[RPVideoEditorViewController trimVideo]_block_invoke
-[RPVideoEditorViewController trimVideo]_block_invoke_2
-[RPVideoEditorViewController displayShareSheetWithVideoURL:]
SHARE_TEXT_FORMAT
v36@?0@"NSString"8B16@"NSArray"20@"NSError"28
v16@?0@"RPStoreInfo"8
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
RPVideoOverlayGlyphMask
RPVideoOverlayBackgroundMask
com.apple.ReplayKit.RPVideoEditorExtension.replyQueue
com.apple.replayKit.ReplayKitTestRunneriOS
-[RPVideoEditorExtensionViewController setupChildViewControllers]_block_invoke
v56@?0@"NSString"8@"NSString"16@"NSURL"24@"NSURL"32@"NSString"40@"UIColor"48
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSExtensionItem"8Q16^B24
-[RPVideoEditorExtensionViewController doAction:]
RPStoreInfoBundleIDKey
RPStoreInfoAppNameKey
RPStoreInfoAuthorKey
RPStoreInfoItemURLKey
com.apple.replayd
RPVideoEditorExtensionMovieURLKey
RPVideoEditorExtensionAppNameKey
RPVideoEditorExtensionBundleIdentifierKey
RPVideoEditorExtensionFileAttachmentKey
RPVideoEditorExtensionOverrideShareMessageKey
RPVideoEditorExtensionOverrideTintColorKey
 [INFO] %{public}s:%d movieURL  %@
 [INFO] %{public}s:%d finalMovieURL %@
 [INFO] %{public}s:%d starting export session
 [INFO] %{public}s:%d AVAssetExportSessionFailed
 [INFO] %{public}s:%d AVAssetExportSessionStatusCancelled
 [INFO] %{public}s:%d AVAssetExportSession returned with no errors
 [ERROR] %{public}s:%d video URL is nil
 [INFO] %{public}s:%d Start video duration: %lf
 [INFO] %{public}s:%d 
 [INFO] %{public}s:%d Final video duration: %lf
 [ERROR] %{public}s:%d Error Mixing video Audio tracks
 [ERROR] %{public}s:%d Error writing video to camera roll: %d
 [INFO] %{public}s:%d Trimming video to start time:%lf end time:%lf duration:%lf
 [INFO] %{public}s:%d Export Trim Video Failed, due to error: %i
 [INFO] %{public}s:%d Export Trim Video Cancelled
 [ERROR] %{public}s:%d Failed to remove file, due to error: %i
RPVideoEditorExtensionViewController -viewDidDisappear:
RPVideoEditorExtensionViewController -setupChildViewControllers
%s isInternalTestMode: %d
loaded input items
RPVideoEditorExtensionViewController -inputItemsFromClientWithCompletionHandler:
Error loading input item for type
RPVideoEditorExtensionViewController -videoEditorViewDidFinishWithActivityTypes:
RPVideoEditorExtensionContext:doAction
error calling extension - %i
RPStoreManager::performLookupWithBundleIdentifiers could not complete lookup with error:%@
RPStoreManager::AMSLookupItemArtwork::URLWithHeight could not find artwork with specified parameters
RPAudioMixUtility
RPVideoEditorViewController
UIToolbarDelegate
UIBarPositioningDelegate
NSObject
UIMovieScrubberDelegate
UIMovieScrubberDataSource
RPUIActivityItem
UIActivityItemSource
RPVideoOverlayButton
RPHighFidelityVideoOverlayButton
RPFlatVideoOverlayButton
RPVideoEditorExtensionViewControllerFocusView
RPVideoEditorExtensionViewController
RPVideoEditorViewControllerDelegate
RPVideoEditorExtensionProtocol
RPVideoEditorExtensionHostProtocol
RPVideoEditorExtensionContext
RPStoreInfo
RPStoreManager
v32@0:8@16@?24
v40@0:8@16@24@?32
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q24@0:8@16
q24@0:8@"<UIBarPositioning>"16
v32@0:8@16d24
v28@0:8@16i24
v32@0:8@16f24f28
v24@0:8@16
v40@0:8@16d24d32
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
d24@0:8@16
@44@0:8@16i24@28@36
v32@0:8@16@24
v36@0:8@16@24B32
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@40@0:8@16@24@32
@80@0:8@16@24@32@40{CGRect={CGPoint=dd}{CGSize=dd}}48
v16@0:8
v48@0:8@16@24@32^v40
v20@0:8B16
i16@0:8
v40@0:8{CGSize=dd}16@32
{CGSize=dd}16@0:8
d16@0:8
v32@0:8q16@24
v24@0:8d16
@"NSURL"
@"NSString"
@"AVPlayer"
@"AVPlayerLayer"
@"AVPlayerItem"
@"AVURLAsset"
@"UIView"
@"NSObject"
@"UIToolbar"
@"UIBarButtonItem"
@"UIView<RPVideoOverlayButton>"
@"UILabel"
@"AVAssetExportSession"
@"UIMovieScrubber"
@"AVAssetImageGenerator"
@"NSMutableDictionary"
@"NSMutableArray"
@24@0:8@16
@32@0:8@16@24
@48@0:8@16@24{CGSize=dd}32
@24@0:8@"UIActivityViewController"16
@32@0:8@"UIActivityViewController"16@"NSString"24
@"NSString"32@0:8@"UIActivityViewController"16@"NSString"24
@"UIImage"48@0:8@"UIActivityViewController"16@"NSString"24{CGSize=dd}32
@"LPLinkMetadata"24@0:8@"UIActivityViewController"16
@"UIImage"
@24@0:8q16
q16@0:8
v32@0:8@16:24
:16@0:8
v24@0:8:16
@"UIButton"
@"_UIBackdropView"
@40@0:8d16d24d32
v32@0:8@"RPVideoEditorViewController"16@"NSArray"24
Vv24@0:8@16
Vv24@0:8@"NSString"16
v24@0:8@?16
@"RPVideoEditorViewController"
@"UIColor"
@"NSObject<OS_dispatch_queue>"
Vv24@0:8@"NSArray"16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.ReplayKit.RPVideoEditorExtension</string>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.airdrop.discovery</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotosAdd</string>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Media/PhotoData/Photos.sqlite</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/ReplayKit/</string>
<string>/private/var/mobile/Library/Preferences/</string>
<string>/private/var/mobile/Library/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharingd</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
</dict>
</plist>
