@(#)PROGRAM:SplashBoard  PROJECT:SplashBoard-1
XBLaunchCaptureInformationEstimatedSize
XBLaunchCaptureInformationCaarPath
XBApplicationCaptureInformation.m
Invalid parameter not satisfying: %@
[launchRequests count] == [captureInfos count]
Estimated Memory Impact
Undefined!
%zu bytes
Minimal
Path
.caar Path
v8@?0
groupID
launchRequests
com.apple.SplashBoard
Snapshot
Memory
FetchRequests
SnapshotReaper
DaemonLifecycle
Capture
FileManifest
Purge
Common
storyboard
storyboardc
__from_UILaunchStoryboardName__
hidden
double-height
normal
invalid
v24@?0Q8^B16
Storyboard
(null)
displayConfiguration
statusBarState
referenceSize
naturalSize
interfaceOrientation
userInterfaceStyle
customSafeAreaInsets
urlSchemeName
launchInterfaceIdentifier
statusBar
refSize
orientation
scheme
colorName
imageName
imageRespectsSafeAreaInsets
navigationBarImageName
toolbarImageName
tabBarImageName
bars
XBApplicationLaunchCompatibilityInfo.m
[coder allowsKeyedCoding]
type
name
identifier
configuration
default
urlSchemes
bundleIdentifier
bundlePath
sandboxPath
bundleContainerPath
launchInterfaces
launchesOpaque
hasKnownBadLaunchImage
BadLaunchImageCandidateCount
v32@?0@"NSString"8@"NSString"16^B24
attempting to replace non-existent pre-existing default interface.
B16@?0@"XBLaunchInterface"8
v32@?0@"XBLaunchInterface"8Q16^B24
topInset
leftInset
bottomInset
rightInset
Snapshots
Caches
Library
SplashBoard
StaticDefault
GeneratedDefault
SceneContent
All Types
XBRecentScreenSize
XBCaptureLaunchImagesPostMigration
XBApplicationController.m
provided an invalid mainDisplay configuration
^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
XBLaunchImagePostMigrationQueue
B32@?0@"_UIApplicationInfo"8Q16^B24
v16@?0@"NSDictionary"8
v16@?0@"XBApplicationCaptureInformation"8
no displayConfiguration found
Portrait
PortraitUpsideDown
Landscape
LandscapeLeft
LandscapeRight
UpMirrored
Down
DownMirrored
Left
LeftMirrored
Right
RightMirrored
XBApplicationBundleIdentifier
com.apple.splashboard
_XBEncodeGeneratedInterfaces
splashboardd-%d
%@-%@-%@-%.fx%.f-%u
UIInterfaceOrientationPortrait
UIInterfaceOrientationLandscapeLeft
UIInterfaceOrientationLandscapeRight
UIInterfaceOrientationPortraitUpsideDown
%@-%@.caar
XBSnapshotManifestIdentity.m
init is not allowed
store
%@ - {DEFAULT GROUP}
@"NSString"8@?0
@8@?0
com.apple.splashboard.launchimage
message
compatibilityInfo
launchRequest
createCaptureInfo
contextID
error
captureInfo
UILaunchStoryboardName
UILaunchStoryboards
UILaunchStoryboardDefinitions
UILaunchStoryboardIdentifier
UILaunchStoryboardFile
UIURLToLaunchStoryboardAssociations
UIDefaultLaunchStoryboard
UILaunchScreen
UIColorName
UIImageName
UIImageRespectsSafeAreaInsets
UINavigationBar
UIToolbar
UITabBar
UILaunchScreens
UILaunchScreenDefinitions
UILaunchScreenIdentifier
UIURLToLaunchScreenAssociations
UIDefaultLaunchScreen
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
recent
uncommon
startDate
XBSnapshotContainerIdentity.m
this constructor is disallowed
record
proxy
sandboxed
dataContainerPath
XBApplicationSnapshotManifest
XBApplicationDataStore.m
com.apple.splashboard.application-data-store
XBApplicationLaunchCompatibilityInfo
Invalid condition not satisfying: %@
[_bs_assert_object isKindOfClass:XBApplicationLaunchCompatibilityInfoClass]
NSData
[_bs_assert_object isKindOfClass:NSDataClass]
unbalanced call to %s detected with bundleIdentifier=%@ : cacheable=%@
-[XBApplicationDataStore endAccessBlockForBundleIdentifier:]_block_invoke
XBApplicationSnapshotImageGenerator.m
scheduler
snapshot
[snapshot groupID]
dataProvider
[dataProvider context]
%@ XBSnapshotDataProvider %@ doesn't implement fetch* method
already complete
snapshot is nil
snapshot is invalidated
image data requested
no cached image
have a cached image and no requests to regenerate
%@ somehow we got into this method with the wrong data provider %@
com.apple.XBApplicationSnapshotImageGenerator._generate
v20@?0@"NSData"8B16
XBApplicationSnapshotSchedulerImageGenerationWorkloop
XBApplicationSnapshotSchedulerImageGenerationQueue
XBApplicationSnapshotSchedulerImageDataGenerationWorkloop
XBImageDataGenerationRequestNone
XBImageDataGenerationRequestSynchronous
XBImageDataGenerationRequestAsynchronous
requiredOSVersion
orientationMask
contentTypeMask
statusBarStateMask
size
scale
XBLaunchImageDataProvider.m
contextID != 0
contextID != XBInvalidContextId
request
imageOrientation
opaque
path
JPEG
ATX420f
(invalid)
(unknown)
Default
 [%@]
XBApplicationSnapshot.m
don't do that
containerIdentity
_imageAccessCount == 0
B8@?0
Extended data client class '%@' does not conform to NSSecureCoding
Extended data client class '%@' does not support NSSecureCoding
invalid content frame set by client
invalid reference size set by client
_imageAccessCount: %lu; _keepImageAccessUntilExpiration: %@; _hasProtectedContent: %@; _keepImageAccessForPreHeat: %@
Expiration date is required in order to keep alive until expiration.
Cannot keep alive an image that is already invalidated.
_imageAccessCount != 0
expired. expirationDate: %@; how long ago (seconds): %f
no cached image. no generation context. no image generator. no file at path: %@
v32@?0@"NSString"8@"XBApplicationSnapshot"16^B24
variantID
variant == nil || ![variant isValid]
_filename == nil
_path == nil
_relativePath == nil
@%lux
%@%@.%@
Invalid file extension: %@ for path: %@
com.apple.XBApplicationSnapshot.CachedImage
_contentType: %@(%ld)
kCGImageConversionReason
XBApplicationSnapshot
com.apple.atx
relativePath
filename
fileLocation
creationDate
lastUsedDate
expirationDate
contentType
fullScreen
contentFrame
imageOpaque
imageScale
statusBarSettings
classicMode
compatibilityMode
backgroundStyle
extendedData
variants
Cache
_cachedImage
IOSurfaceRef
allocSize
CGImageRef
_synchronized_hasCachedImage: isn't giving us a reason even though we have a cached image
reason
Variants
keepsImageAccessUntilExpiration
hasGenerationContext
context
additionalContext
imageContext
fileRelativeLocation
fileFormat
jpeg
{!InvalidType!}
none
dataContainer
bundle
bundleContainer
XBApplicationManifestWorkloop
XBApplicationManifestSerialWorkQueue
XBApplicationSnapshotImageAccessQueue
XBApplicationSnapshotArchiveSchedulingQueue
XBApplicationSnapshotManifestCallOutQueue
XBApplicationSnapshotManifestFSEventsQueue
com.apple.springboard.trackSplashBoardDeletionsPrefsChanged
SBTrackSplashBoardDeletions
@16@?0@"_UIApplicationInfo"8
v32@?0@"XBSnapshotManifestIdentity"8@"XBApplicationSnapshotManifestImpl"16^B24
v32@?0@"XBSnapshotManifestIdentity"8@"EventStreamWrapper"16^B24
XBApplicationSnapshotManifest.m
identity
info
v12@?0B8
bundleID
manifestToRelinquish does not match the manifest that we think we have : %@ != %@
invalidatedManifest does not match the manifest that we think we have : %@ != %@
self
<%@: %p>
<%@:%p bundleIdentifier=%@> was not properly invalidated before dealloc
<%@:%p bundleIdentifier=%@> failed to fire all synchronize completions before dealloc
@16@?0@"XBApplicationSnapshot"8
B32@?0@"XBApplicationSnapshot"8Q16^B24
v16@?0@"XBApplicationSnapshot"8
v32@?0@"NSString"8@"XBApplicationSnapshotGroup"16^B24
generationContext
XBApplicationSnapshotManifest-reapingTimer
v16@?0@"BSContinuousMachTimer"8
v32@?0@"NSString"8Q16^B24
v16@?0@"NSFileManager"8
v32@?0@8@16^B24
v32@?0@"XBApplicationSnapshot"8Q16^B24
generated nil path for snapshot %@
B12@?0i8
ji56BO1mUeT7Qg9RO7Er9w
Aixt/MEN2O2B7f+8m4TxUA
version
snapshots
v32@?0@"XBApplicationSnapshotGroup"8Q16^B24
clientCount
com.apple.splashboard.launchImageProvider.workQueue
XBLaunchImageProvider.m
appInfo
manifest
[appInfo allowsSavingLaunchImages]
[launchRequests count] > 0
snapshotGroupID
strikeCount >= 1
strikeCount <= NumberOfStrikesBeforeMarkingBad + 1
XBApplicationSnapshotGenerationContext.m
applicationCompatibilityInfo
timeout
v24@?0@"XBApplicationSnapshot"8^B16
XBApplicationSnapshotGroup.m
XBLaunchImageProviderClient.m
use initWithDefaultService
context != nil
launchRequest != nil
appInfo != nil
This API cannot be used if the client was not initialized with an app info
app info bundle ID: %@ doesn't match ivar app info bundle ID: %@
The request timed out
v16@?0@"NSObject<OS_xpc_object>"8
The request failed
timeout > 0.0
q24@?0@8@16
_sortableName
_sortableScheme
_sortableLaunchInterfaceIdentifier
_interfaceOrientationMask
_contentTypeMask
_sortableStatusBarSettings
_sortableRequiredOSVersion
hasProtectedContent
ascending
XBApplicationSnapshotNameKey
XBApplicationSnapshotSchemeKey
XBApplicationSnapshotLaunchInterfaceIdentifierKey
XBApplicationSnapshotInterfaceOrientationMaskKey
XBApplicationSnapshotReferenceSizeKey
XBApplicationSnapshotImageScaleKey
XBApplicationSnapshotContentTypeMaskKey
XBApplicationSnapshotStatusBarSettingsKey
XBApplicationSnapshotRequiredOSVersionKey
XBApplicationSnapshotCreationDateKey
XBApplicationSnapshotProtectedContentKey
XBApplicationSnapshotUserInterfaceStyleKey
XBApplicationSnapshotCustomSafeAreaInsetsKey
com.apple.splashboard.launch-image-caar-capture
style
backgroundActivityEnabled
isBackgroundActivityEnabled
Unspecified
Light
Dark
predicate
sortDescriptors
fallbackGenerationContext
XBLaunchStoryboardErrorDomain
Unable to generate launch image
Unknown application
fatal
Deleting legacy cache snapshots path for bundleID: %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@
Error deleting legacy cache snapshots path for bundleID %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system app: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system app %{public}@ at %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system apps: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system apps %{public}@: %{public}@
Failed to register with CacheDelete
Screen size changed from %{public}@ to %{public}@, purging all generated launch image and snapshots.
performPostMigrationLaunchImageGeneration
Post-migration launch image capture for %{public}@
No legacy snapshots caches to purge
Start purging legacy snapshots caches...
Purging legacy caches of sandboxed app snapshots for: %{public}@
Purging legacy caches of snapshots for non-sandboxed system app: %{public}@
Finished purging
XBInvalidate
Failed to capture launch image snapshot due to missing manifest or launchRequests for %{public}@
Unable to generate launch image for %{public}@ because the app has no valid launch interfaces.
Unable to generate launch image for %{public}@ because the provided bundle path does not exist: %{public}@
We can't generate launch image requests for: %{public}@ since it doesn't support any valid orientations.
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps: called
forgettingApps: %d
predicate:
%{public}@
dumping caar for view hierarchy:
splashboardd wrote an encoded launch interface to: %{public}@
appInfo: %{public}@
launchRequest: %{public}@
launchInterface: %{public}@
Marking %{public}@ as %{public}@
Failed to obtain recently used applications with error: %{public}@
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
[%{public}@] %{public}@ implementing deprecated fetchImageData:. rude. inconsiderate.
[%{public}@] ignoring asynchronous request to generate image because: %{public}@
[%{public}@] scheduling asynchronous request to generate image because: %{public}@
[%{public}@] ignoring synchronous request to generate image because: %{public}@
[%{public}@] CALLED IMAGE GENERATOR FOR %{public}@. This should be considered a last resort, and will likely result in significant blocking of the calling thread! reason: %{public}@
dataProvider=%{public}@ imageDataRequest=%{public}s
GenerateImageData
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] doing imageData generation
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] returned a nil image. skipping imageData generation
[%{public}@] -[%{public}@<XBSnapshotDataProvider> hasProtectedContent] is YES. skipping imageData generation
[%{public}@] was not asked for imageData. skipping imageData generation
[%{public}@] +[XBApplicationSnapshot dataForImage:withFormat:] failed to create imageData
[%{public}@] we don't have requests for imageData. skipping imageData generation
dataProvider=%{public}@
GenerateImageDataLegacy
[%{public}@] -[<XBSnapshotDataProvider> fetchImageData:] returned nil imageData. Returning nil image and data
[%{public}@] -[UIImage initWithData:scale:] returned a nil image, so we're not returning the image or its data
[%{public}@] we needlessly scheduled _generate even though we have nothing to do because: %{public}@; Snapshot: %{public}@
GenerateImage
[%{public}@] Generated image data (%{public}@ as %{public}@) for %{public}@ after %.2fs
%{public}@ Set expiration date to %{public}@
%{public}@ Clearing expiration date
%{public}@ received an empty or nil path for _sanitizedPathForPath: %{public}@. That's weird.
%{public}@ received invalid path
path: %{public}@
%{public}@ Sanitizing new path before set %{public}@
%{public}@ Sanitizing new relativePath before set %{public}@
%{public}@ we have a path but it doesn't exist: %{public}@
%{public}@ calling imageGenerator
%{public}@ finished calling imageGenerator
%{public}@ calling generatorFunction
%{public}@ finished calling generatorFunction
Loading image failed file load for %{public}@ : %{public}@
%{public}@ Keeping image access on until expiration
%{public}@ Dropping image access until expiration because the expiration has already occurred
%{public}@ we're invalid because we don't have a launchInterfaceIdentifier and our content type is: %{public}@
%{public}@ Snapshot migrated snapshot path to %{public}@, relative to %{public}@
%{public}@ we're invalid because we don't have a relativePath. path: %{public}@
%{public}@ has fileLocation of %ld
calculated rootPath of %{public}@
relativePath: %{public}@
setting to newPath: %{public}@
%{public}@ has fileLocation of %ld
setting to newPath: %{public}@
%{public}@ Snapshot rebuilt absolute path to: %{public}@
%{public}@ we're invalid because _path is a directory: %{public}@
%{public}@ we're invalid because _path doesn't exist: %{public}@
%{public}@ deleting file on purge because we're invalid.
deleteReason: %{public}@;
path: %{public}@
%{public}@ Error deleting file on purge at %{public}@: %{public}@
%{public}@ Found invalid variant. Removing. variantID: %{public}@; variant: %{public}@
%{public}@ Invalidating snapshot
[%{public}@] asked to create variant but we're invalidated. variantID: %{public}@
[%{public}@] had invalid variant -- overwriting. variantID: %{public}@
 old variant: %{public}@
[%{public}@] creating new variant. variantID: %{public}@
%{public}@ Purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
%{public}@ not purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
Failed to generate ATX data for %@
Deleting all system snapshots at path %{public}@
Error deleting all system snapshots at path %{public}@: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Manifest containerIdentity has changed: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: [%{public}@] Unable to unarchive manifest from store: %@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Created manifest: %{public}@.
acquireManifestForContainerIdentity:store:creatingIfNecessary: Unarchived manifest %{public}@ for %@.
Removing manifest: %{public}@
[%@] beginTrackingImageDeletions: watching under %@
[%@] beginTrackingImageDeletions: Unable to start FSEventStream: %s
[%@] endTrackingImageDeletions
[%@] snapshotsForGroupIDs given groupIDs: %@; returning snapshots:
[%@] snapshotsForGroupIDs:matchingPredicate: given groupIDs: %@; predicate: %@; returning matchingSnapshots:
[%@] BEGIN snapshotsForGroupIDs:fetchRequest: groupIDs: %@; fetchRequest: %@
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has predicate %@; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has no predicate; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: scheme %@ requested but there's no launch interface representing it
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@ and found matching snapshot %@; will not generate
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@, no snapshot matched, so generated and added fallbackSnapshot:
[%@] END snapshotsForGroupIDs:fetchRequest: returning matchingSnapshots:
%{public}@ inside imageGenerationHandler
%{public}@ processing imageGenerationHandler callback with didGenerateImage: %d
%{public}@ ignoring redundant imageDataGenerationHandler callback as we've already processed one. didGenerateImage: %@
%{public}@ inside imageDataGenerationHandler
%{public}@ Snapshot data for %{public}@ written to file: %{public}@
%{public}@ Error writing snapshot %{public}@ to file
%{public}@ Snapshot was invalidated between imageGenerationHandler and imageDataGenerationHandler. Skipping saving. %{public}@
%{public}@ calling didSaveHandler
%{public}@ we expected to receive and save image data for snapshot but failed. invalidating. snapshot: %{public}@
%{public}@ ignoring redundant imageDataGenerationHandler callback as we've already processed one. imageData: %p
XBCapture
%{public}@ Saved snapshot: %{public}@
%{public}@ Deleting snapshots: %{public}@
%{public}@ Deleting snapshots: %{public}@ matching predicate: %@
%{public}@ Deleting all snapshots for group: %{public}@.
%{public}@ Deleting all snapshots.
%{public}@ groupID: [%@] Creating temporary snapshot %@ with generation context.
%{public}@ Archiving manifest (%p).
%{public}@ Unable to archive manifest: %{public}@
%{public}@ We don't have any snapshots, so we're clearing our manifest data.
%{public}@ group isn't valid. removing from snapshotGroupsByID and will be culled later: %@
%{public}@ Manifest is empty; purging everything at %@
%{public}@ Error removing snapshotContainer for purge at %{public}@: %{public}@
%{public}@ Reaping invalid snapshot %{public}@
 invalidReason: %{public}@
%{public}@ Cancelling reaping timer as we've just reaped
%{public}@ Scheduling next reaping for ~%{public}@ %f.
%{public}@ Reaping timer fired! Cancelling timer
%{public}@ Not scheduling next reaping because the interval is invalid ~%@.
%{public}@ Deleting paths: %@
%{public}@ error deleting path %@: %{public}@
%{public}@ Deleting snapshot %{public}@ for reason: %{public}@
%{public}@ XBEnsureDirectoryExistsAtPath() check failed for: %{public}@
%{public}@ Failed to write to %@: (%s)
%{public}@ Incrementing client count: %u
%{public}@ Decrementing client count: %u
%{public}@ Manifest (%p) has no remaining clients or work. Invalidating!
%{public}@ Cancelling reaping timer as we're invalidating (no clients or work remaining)
%{public}@ Failed to decode from decoder with error: %{public}@
%{public}@ Snapshot manifest out of date (currVers=%d, newVers=%d).
Snapshot generation request for bundleID: %{public}@ rejected due to the app being denylisted.
Synchronously generating image for request: %@
Snapshot image generation completed after %.3fs.
Processing launch request %@ for app: %@.
Asynchronously generating image data for request: %@
Skipping launch request %@ due to denied app: %@.
Image generation complete for: %@
Image generation failed for: %@
Unable to generate context for %@, so skipping it and moving on.
Error generating image for launch request %@ .
Snapshot generation resulted in an error with code: %ld for app bundleID: %@, noting this until it is updated.
[%{public}@] Group %{public}@ deleting container with no valid snapshots: %{public}@
[%{public}@] Error with Group %{public}@ deleting container with no valid snapshots at %{public}@: %{public}@
[%{public}@] Group %{public}@ deleting unreferenced file: %{public}@
[%{public}@] Error with Group %{public}@ deleting unreferenced file at %{public}@: %{public}@
Request to splashboardd has timed out -- invalidating the connection for %@.
Fatal error generating snapshot for %@.
Warming up splashboardd (timeout %.1fs)
XBLaunchCaptureInformation
NSSecureCoding
NSCoding
XBApplicationCaptureInformation
BSDescriptionProviding
NSObject
XBLaunchImage
XBLaunchStateRequest
BSXPCCoding
NSCopying
XBLaunchInterfaceConfiguration
XBLaunchInterface
XBApplicationLaunchCompatibilityInfo
XBDisplayEdgeInsetsWrapper
XBDefaultApplicationProvider
XBApplicationProviding
XBApplicationController
XBSnapshotManifestIdentity
SplashBoard
XBCacheDeleteRequestHandler
XBSnapshotContainerIdentity
XBApplicationDataStore
XBSnapshotManifestStore
XBApplicationSnapshotImageGenerator
XBApplicationSnapshotGenerationScheduler
XBApplicationSnapshotImageGenerationScheduling
XBApplicationSnapshotPredicate
XBSnapshotDataProviderContext
XBLaunchImageDataProvider
XBSnapshotDataProvider
XBApplicationSnapshotImage
XBApplicationSnapshot
EventStreamWrapper
XBApplicationSnapshotManifest
XBApplicationSnapshotManifestDelegate
XBApplicationSnapshotManifestImpl
XBLaunchImageProvider
XBApplicationSnapshotGenerationContext
XBApplicationSnapshotGroup
XBLaunchImageProviderClient
SortingSupport
XBApplicationSnapshotSortDescriptor
XBStatusBarSettings
BSSettingDescriptionProvider
NSMutableCopying
XBMutableStatusBarSettings
XBApplicationSnapshotFetchRequest
XBLaunchImageError
init
encodeInt64:forKey:
encodeObject:forKey:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
estimatedMemoryImpact
setEstimatedMemoryImpact:
caarFilePath
setCaarFilePath:
.cxx_destruct
_estimatedMemoryImpact
_caarFilePath
TQ,N,V_estimatedMemoryImpact
T@"NSString",C,N,V_caarFilePath
count
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
indexOfObject:
objectAtIndexedSubscript:
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
build
succinctDescriptionBuilder
countByEnumeratingWithState:objects:count:
succinctDescription
activeMultilinePrefix
estimatedMemoryImpactForLaunchRequest:
appendString:withName:
stringWithFormat:
launchImagePathForLaunchRequest:
caarPathForLaunchRequest:
appendString:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
builderWithObject:
firstObject
groupID
appendUnsignedInteger:withName:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithLaunchRequests:captureInfos:launchImagePaths:
launchRequests
_captureInfos
_launchImagePaths
_launchRequests
T@"NSOrderedSet",R,N,V_launchRequests
array
addObject:
componentsJoinedByString:
encodeWithXPCDictionary:
allocWithZone:
initWithXPCDictionary:
referenceSize
statusBarState
interfaceOrientation
userInterfaceStyle
urlSchemeName
launchInterfaceIdentifier
appendObject:withName:
appendSize:withName:
appendObject:withName:skipIfNil:
setReferenceSize:
setNaturalSize:
fallbackXPCEncodableClass
copyWithZone:
setInterfaceOrientation:
displayConfiguration
setDisplayConfiguration:
setGroupID:
naturalSize
setUserInterfaceStyle:
customSafeAreaInsets
setCustomSafeAreaInsets:
setStatusBarState:
setUrlSchemeName:
setLaunchInterfaceIdentifier:
_displayConfiguration
_groupID
_interfaceOrientation
_userInterfaceStyle
_customSafeAreaInsets
_statusBarState
_urlSchemeName
_launchInterfaceIdentifier
_referenceSize
_naturalSize
T@"FBSDisplayConfiguration",&,N,V_displayConfiguration
T@"NSString",C,N,V_groupID
T{CGSize=dd},N,V_referenceSize
T{CGSize=dd},N,V_naturalSize
Tq,N,V_interfaceOrientation
Tq,N,V_userInterfaceStyle
T@"XBDisplayEdgeInsetsWrapper",&,N,V_customSafeAreaInsets
TQ,N,V_statusBarState
T@"NSString",C,N,V_urlSchemeName
T@"NSString",C,N,V_launchInterfaceIdentifier
valueForKey:
boolValue
arrayByAddingObject:
allowsKeyedCoding
stringWithUTF8String:
copy
decodeBoolForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeBool:forKey:
appendBool:withName:
initWithConfigurationDictionary:
colorName
imageName
imageRespectsSafeAreaInsets
bars
navigationBarImageName
toolbarImageName
tabBarImageName
_imageRespectsSafeAreaInsets
_colorName
_imageName
_bars
_navigationBarImageName
_toolbarImageName
_tabBarImageName
T@"NSString",R,C,N,V_colorName
T@"NSString",R,C,N,V_imageName
TB,R,N,V_imageRespectsSafeAreaInsets
T@"NSArray",R,N,V_bars
T@"NSString",R,C,N,V_navigationBarImageName
T@"NSString",R,C,N,V_toolbarImageName
T@"NSString",R,C,N,V_tabBarImageName
initWithType:name:identifier:urlSchemes:isDefault:
initWithConfiguration:identifier:urlSchemes:isDefault:
isStoryboard
isXIB
isConfiguration
_isDefault
set_default:
type
setType:
name
setName:
identifier
setIdentifier:
urlSchemes
setUrlSchemes:
configuration
_default
_type
_name
_identifier
_urlSchemes
_configuration
TQ,N,V_type
TB,N,G_isDefault,V_default
T@"NSString",C,N,V_name
T@"NSString",C,N,V_identifier
T@"NSArray",&,N,V_urlSchemes
T@"XBLaunchInterfaceConfiguration",R,N,V_configuration
TB,R,N
bundleIdentifier
sharedInstance
beginAccessBlockForBundleIdentifier:
_loadCompatibilityInfoForBundleIdentifier:
bundleURL
path
dataContainerURL
bundleContainerURL
bundlePath
isEqualToString:
initWithPath:
initWithBundle:
setSandboxPath:
setBundleContainerPath:
setDefaultGroupIdentifier:
_persistCompatibilityInfo:forBundleIdentifier:
endAccessBlockForBundleIdentifier:
infoDictionary
mutableCopy
localizedInfoDictionary
addEntriesFromDictionary:
length
containsObject:
enumerateKeysAndObjectsUsingBlock:
indexOfObjectIdenticalTo:
replaceObjectAtIndex:withObject:
bs_firstObjectPassingTest:
launchInterfaceWithIdentifier:
defaultLaunchInterface
enumerateObjectsUsingBlock:
compatibilityInfoForAppInfo:
_setLaunchInterfaces:
allowsSavingLaunchImages
launchInterfaceIdentifierForRequest:
launchInterfaceExistsForScheme:
launchInterfaces
setBundleIdentifier:
setBundlePath:
sandboxPath
launchesOpaque
setLaunchesOpaque:
hasKnownBadLaunchImage
setHasKnownBadLaunchImage:
badLaunchImageCandidateCount
setBadLaunchImageCandidateCount:
bundleContainerPath
defaultGroupIdentifier
_defaultInterface
_launchesOpaque
_hasKnownBadLaunchImage
_launchInterfaces
_bundleIdentifier
_bundlePath
_sandboxPath
_badLaunchImageCandidateCount
_bundleContainerPath
_defaultGroupIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundlePath
T@"NSString",C,N,V_sandboxPath
T@"NSString",C,N,V_bundleContainerPath
T@"NSString",C,N,V_defaultGroupIdentifier
TB,N,V_launchesOpaque
T@"XBLaunchInterface",R,C,N
T@"NSArray",R,C,N,V_launchInterfaces
TB,N,V_hasKnownBadLaunchImage
Tq,N,V_badLaunchImageCandidateCount
initWithTop:left:bottom:right:
topInset
leftInset
bottomInset
rightInset
appendDouble:withName:decimalPrecision:
decodeDoubleForKey:
encodeDouble:forKey:
makeWithEdgeInsets:
hasZeroInsets
edgeInsets
_topInset
_leftInset
_bottomInset
_rightInset
Td,R,N,V_topInset
Td,R,N,V_leftInset
Td,R,N,V_bottomInset
Td,R,N,V_rightInset
pathExtension
stringByDeletingPathExtension
pathForResource:ofType:inDirectory:
fileSystemRepresentation
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
fileExistsAtPath:
removeItemAtPath:error:
_allApplicationsFilteredBySystem:bySplashBoard:
enumeratorWithOptions:
compatibilityObject
_applicationTypeForProxy:
objectsForKeys:
objectForKey:ofClass:
initWithApplicationProxy:
allSplashBoardApplications
splashBoardSystemApplications
allInstalledApplications
recentlyUsedBundleIDs
isMainDisplay
isExternal
defaultCenter
_updateStatusBarOrientation
addObserver:selector:name:object:
_deleteLegacyCachesSnapshotPathsIfNeeded
_configureCacheDelete
removeObserver:
dealloc
initWithApplicationProvider:
amountPurgeable:urgency:
performPurge:urgency:
performPeriodic:urgency:
standardUserDefaults
stringForKey:
bounds
_removeAllGeneratedLaunchImagesAndSnapshots
setObject:forKey:
synchronize
boolForKey:
predicate
setContentTypeMask:
initWithApplicationInfo:
snapshotsForGroupID:matchingPredicate:
arrayWithObjects:count:
updateSnapshotsAPFSPurgability:
captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completion:
deleteAllSnapshots
snapshotsConsideredUnpurgableByAPFS
indexesOfObjectsPassingTest:
objectsAtIndexes:
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:createCaptureInfo:completionWithCaptureInfo:
initWithCapacity:
sentinelWithQueue:signalCount:completion:
signal
fileExistsAtPath:isDirectory:
_clearCompatibilityInfoForBundleIdentifier:
_launchRequestsForApplication:withCompatibilityInfo:
launchRequestsForApplication:withCompatibilityInfo:defaultLaunchRequests:
setObject:forKeyedSubscript:
manifestImpl
_synchronizeDataStoreWithCompletion:
captureLaunchImageForManifest:withCompatibilityInfo:launchRequests:createCaptureInfo:firstImageIsReady:withCompletionHandler:
currentStyle
xb_userInterfaceStyleForRequestedUserInterfaceStyle:
supportsInterfaceOrientation:
statusBarHiddenForInterfaceOrientation:onDisplay:
xb_supportsUserInterfaceStyle:
insertObject:atIndex:
endTrackingImageDeletions
deleteSnapshotsMatchingPredicate:
_removeBundleIdentifierFromLaunchInterfaceDenyList:
sharedApplication
statusBarOrientation
initWithMainDisplayConfiguration:applicationProvider:launchRequestProvider:
deleteAllSnapshotsIfScreenSizeChanged
performPostMigrationLaunchImageGeneration
findRecentlyUsedOfApplications:
removeCachedLaunchImagesForApplications:forgettingApps:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completionWithCaptureInfo:
applicationProvider
_statusBarOrientation
_mainDisplayConfiguration
_launchRequestProvider
_snapshotCacheDeleteRequestHandler
_applicationProvider
T@"<XBApplicationProviding>",R,N,V_applicationProvider
stringByAppendingFormat:
recursiveDescription
processInfo
processIdentifier
layer
UTF8String
initWithBundleIdentifier:store:
builder
appendObject:
builderWithObject:ofExpectedClass:
appendString:counterpart:
store
appendObject:counterpart:
isEqual
identityWithBundleIdentifier:store:
_store
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N
T@"<XBSnapshotManifestStore>",R,C,N,V_store
supportedUserInterfaceStyle
objectForKeyedSubscript:
dictionaryWithObjects:forKeys:count:
date
dateByAddingTimeInterval:
subarrayWithRange:
addObjectsFromArray:
allObjects
setApplicationProvider:
T@"<XBApplicationProviding>",&,N,V_applicationProvider
extensionHostIdentifier
predicateForObjectsWithMetadataKey:
notPredicateWithSubpredicate:
predicateForEventsWithStartInDateRangeFrom:to:
andPredicateWithSubpredicates:
sortDescriptorWithKey:ascending:
appUsageStream
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
knowledgeStore
executeQuery:error:
stringValue
_initWithBundleIdentifier:bundlePath:dataContainerPath:bundleContainerPath:
snapshotContainerPath
snapshotContainerPathForGroupID:
variantID
dataContainerPath
identityForApplicationRecord:
identityForBundleProxy:
identityForApplicationInfo:
identityForCompatibilityInfo:
snapshotContainerPathForSnapshot:
_dataContainerPath
_snapshotContainerPath
T@"NSString",R,C,N,V_snapshotContainerPath
T@"NSString",R,C,N,V_bundlePath
T@"NSString",R,C,N,V_dataContainerPath
T@"NSString",R,C,N,V_bundleContainerPath
_init
_storeForBundleIdentifier:
setArchivedObject:forKey:
removeObjectForKey:
safeArchivedObjectForKey:ofType:
objectForKey:
storeForApplication:
initWithObjects:forKeys:count:
safeObjectForKey:ofType:
synchronizeWithCompletion:
initWithObjects:count:
removeObject:
persistManifestData:forBundleIdentifier:
clearManifestDataForBundleIdentifier:
loadManifestDataForBundleIdentifier:
synchronizeForBundleIdentifier:withCompletion:
_bundleIdentifierHasDeniedLaunchInterface:
_bundleIdentifierDeniedLaunchInterfaceCount:
_addBundleIdentifierToLaunchInterfaceDenyList:
_queue
_cacheableBundleIdentifiers
_cachedStoresByBundleIdentifier
context
fetchImageForFormat:
fetchImage
fetchImageData:
performImageGenerationAsync:
_shouldGenerateForSnapshot:reason:
_performImageDataGeneration:withHandler:
_generate
performImageGenerationAsyncAndWait:
logIdentifier
performImageDataGenerationAsync:withHandler:
performImageDataGenerationAsyncAndWait:withHandler:
_generate_lock_shouldGenerateForSnapshot:reason:
_isInvalidated
hasCachedImage
hasProtectedContent
_setHasProtectedContent:
_outputFormatForSnapshot:
dataForImage:withFormat:
scale
initWithData:scale:
_generate_imageFromNewDataProvider:forSnapshot:imageDataHandler:
_generate_imageFromLegacyDataProvider:forSnapshot:imageDataHandler:
_cacheImage:
invalidateImage
initWithScheduler:snapshot:dataProvider:imageDataRequest:loggingPrefix:imageGenerationHandler:imageDataGenerationHandler:
performAsync:
scheduleGeneration
generate
_weak_snapshot
_scheduler
_dataProvider
_didGenerateImageHandler
_didGenerateImageDataHandler
_loggingPrefix
_generate_handled_request
_generate_lock
_imageDataRequest
_dataProviderFetchType
_imageGenerationWorkloop
_imageGenerationQueue
_dataGenerationWorkloop
_hasClientObjectForKey:
contentTypeMask
contentType
interfaceOrientationMask
scheme
requiredOSVersion
compare:options:
imageScale
statusBarStateMask
statusBarSettings
_clientObjectForKey:
creationDate
_setClientObject:forKey:
numberWithUnsignedInteger:
_removeClientObjectForKey:
valueWithCGSize:
numberWithDouble:
setStatusBarStateMask:
numberWithInteger:
unsignedIntegerValue
CGSizeValue
doubleValue
integerValue
setObject:forSetting:
setFlag:forSetting:
flagForSetting:
objectForSetting:
appendFloat:withName:decimalPrecision:
appendInteger:withName:
evaluateWithObject:
setScheme:
setRequiredOSVersion:
setInterfaceOrientationMask:
setFullScreen:
setImageScale:
isFullScreen
_clientSettings
T@"NSString",C,N
TQ,N
T{CGSize=dd},N
Td,N
Tq,N
T@"XBDisplayEdgeInsetsWrapper",C,N
fullScreen
TB,N,GisFullScreen
isHidden
style
setScale:
isOpaque
setOpaque:
_scale
_opaque
Td,N,V_scale
opaque
TB,N,GisOpaque,V_opaque
initWithContextID:baseTransform:
orderedSetWithObject:
initWithDisplayConfiguration:layers:
setSnapshotSize:
initWithSnapshotContext:
IOSurface
initWithIOSurface:
CGImage
initWithCGImage:scale:orientation:
invalidate
fallbackSnapshotDataProvider
T@"XBSnapshotDataProviderContext",R,&,N
initWithRequest:contextID:opaque:
_snapshot
_cachedImage
_context
T@"XBSnapshotDataProviderContext",R,&,N,V_context
ioSurface
_initWithIOSurface:scale:orientation:
beginImageAccess
endImageAccess
size
imageOrientation
isImageOpaque
initWithSnapshot:interfaceOrientation:
Tq,R,N,V_interfaceOrientation
caseInsensitiveCompare:
containerIdentity
componentsSeparatedByString:
lastObject
_initWithContainerIdentity:store:groupID:generationContext:
UUID
UUIDString
_commonInitWithIdentifier:
_invalidate
appendEqualsBlocks:
unionSet:
_synchronized_evaluateImageAccessUntilExpirationEnablingIfNecessary:
fileSystemRepresentationWithPath:
stringWithCString:encoding:
_sanitizedPathForPath:
_synchronized_isExpired
getFlag
_referenceBounds
contentFrame
allValues
allKeysForObject:
removeObjectsForKeys:
imageForInterfaceOrientation:generationOptions:
loadImageWithGenerationOptions:
cachedImageForInterfaceOrientation:
_beginPreHeatImageAccess
loadImage
_endPreHeatImageAccess
createLaunchImageGeneratorWithContext:asyncImageData:error:
setExpirationDate:
distantPast
clearImageGenerator
domain
code
initWithContentsOfFile:options:error:
_locked_synchronized_loadImageViaFile
_locked_loadImageViaGenerationContext:options:
_locked_loadImageViaGeneratorFunction:
_synchronized_hasCachedImage:
_purgeCachedImageIfAppropriate:
isAfterDate:
isValidWithReason:
isExpired
expirationDate
timeIntervalSinceDate:
_hasGenerationContext
imageGenerator
fileExists
_descriptionBuilderWithMultilinePrefix:includeVariants:
_manifestQueueDecode_setStore:
rangeOfString:
substringFromIndex:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
_path:isRelativeToPath:outRelativePath:
setContainerIdentity:
_determineRelativePathForPath:location:
_setRelativePath:
_setPath:
lastPathComponent
_shouldDeleteFileOnPurge:
_validateWithContainerIdentity:
variantWithIdentifier:
isValid
setVariantID:
setContentType:
setContentFrame:
setStatusBarSettings:
setClassicMode:
setCompatibilityMode:
setBackgroundStyle:
setImageOpaque:
setImageOrientation:
initWithFormat:
isValidImageFileExtension:
setFlag:
dateWithTimeIntervalSinceNow:
_createCGImageWithPreferredOptions:fromCGImage:
encodeInteger:forKey:
encodeCGSize:forKey:
encodeCGRect:forKey:
_stringForBackgroundStyle:
extendedData
decodeIntegerForKey:
decodeCGSizeForKey:
decodeCGRectForKey:
_backgroundStyleForString:
_allSecureCodingClassesIncludingDefaultAndClientSpecified
dictionaryWithDictionary:
appendPointer:withName:
allocationSize
appendInt64:withName:
appendUInt64:withName:
descriptionForStateCaptureWithMultilinePrefix:
localizedStringFromDate:dateStyle:timeStyle:
appendRect:withName:
appendDictionarySection:withName:skipIfEmpty:
normalizeSnapshotName:
secureCodableCustomExtendedDataClasses
setSecureCodableCustomExtendedDataClasses:
T@"NSSet",C,N
_fileLocation
_setFileLocation:
filename
hasFullSizedContent
variants
willDeleteVariant:
imageForInterfaceOrientation:
loadImageForPreHeat
purgeImage
beginImageAccessUntilExpiration
descriptionWithoutVariants
setImageGeneratingByProvider:withBlockingImageGenerator:
_createVariantWithIdentifier:
_configureDefaultPathWithinGroupForFormat:
_configureWithPath:
_generateImageIfPossible
_setFilename:
fileFormat
lastUsedDate
setLastUsedDate:
classicMode
compatibilityMode
backgroundStyle
generationContext
setExtendedData:
setImageGenerator:
dataProviderClassName
setDataProviderClassName:
_relativePath
fileLocation
setFileLocation:
imageTransform
setImageTransform:
_containerIdentity
_variantsByID
_variantID
_scheme
_requiredOSVersion
_path
_filename
_creationDate
_lastUsedDate
_expirationDate
_contentFrame
_contentType
_fileFormat
_imageScale
_imageOrientation
_statusBarSettings
_classicMode
_compatibilityMode
_backgroundStyle
_generationContext
_imageAccessCount
_extendedData
_invalidated
_fullScreen
_imageOpaque
_keepImageAccessUntilExpiration
_keepImageAccessForPreHeat
_hasProtectedContent
_loadImageLock
_baseLogIdentifier
_logIdentifier
_logContainerIdentifierDirty
_cachedImageTransaction
_imageGenerator
_dataProviderClassName
_imageTransform
T@"XBSnapshotContainerIdentity",C,V_containerIdentity
T@?,C,N,V_imageGenerator
T@"NSString",C,N,V_dataProviderClassName
relativePath
T@"NSString",C,N,G_relativePath,S_setRelativePath:,V_relativePath
T@"NSString",C,N,S_setPath:,V_path
T@"NSString",C,N,Gfilename,S_setFilename:,V_filename
T@"<XBSnapshotManifestStore>",R,N,G_store,V_store
T@"NSString",R,N
Tq,N,V_fileLocation
T@"NSString",C,N,V_variantID
Td,N,V_imageScale
imageOpaque
TB,N,GisImageOpaque,V_imageOpaque
T{CGAffineTransform=dddddd},N,V_imageTransform
Tq,N,V_imageOrientation
T@"XBApplicationSnapshotGenerationContext",R,N,V_generationContext
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_groupID
T@"NSString",C,N,V_scheme
T@"NSString",C,N,V_requiredOSVersion
Tq,R,N,V_fileFormat
T@"NSDate",R,N,V_creationDate
T@"NSDate",&,N,V_lastUsedDate
T@"NSDate",&,D,N
expired
TB,R,N,GisExpired
Tq,N,V_contentType
TB,N,GisFullScreen,V_fullScreen
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T@"XBStatusBarSettings",C,N,V_statusBarSettings
Tq,N,V_classicMode
Tq,N,V_compatibilityMode
Tq,N,V_backgroundStyle
T@"NSDictionary",C,V_extendedData
stream
setStream:
_stream
T^{__FSEventStream=},N,V_stream
setClass:forClassName:
handleTrackingStateChange
bs_compactMap:
beginTrackingImageDeletions
setUseDebugDescription:
acquireManifestForContainerIdentity:store:creatingIfNecessary:
setDelegate:
initWithContainerIdentity:store:
relinquishManifest:
containerPath
snapshotsForGroupID:
snapshotsForGroupID:fetchRequest:
snapshotsForGroupIDs:
snapshotsForGroupIDs:matchingPredicate:
snapshotsForGroupIDs:fetchRequest:
createSnapshotWithGroupID:
createVariantForSnapshot:withIdentifier:
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
generateImageForSnapshot:dataProvider:writeToFile:imageGeneratedHandler:imageDataSavedHandler:
generateImageForSnapshot:dataProvider:options:imageGeneratedHandler:imageDataSavedHandler:
saveSnapshot:atPath:withContext:
_allSnapshotGroups
deleteSnapshot:
deleteSnapshots:
deleteSnapshotsUsingPredicateBuilder:
deleteSnapshotsForGroupID:
deleteSnapshotsForGroupID:matchingPredicate:
deleteSnapshotsForGroupID:predicateBuilder:
purgeSnapshotsWithProtectedContent
beginSnapshotAccessTransaction:completion:
archive
appendArraySection:withName:multilinePrefix:skipIfEmpty:
manifest:didPurgeProtectedContentSnapshotsWithGroupIdentifiers:
initialize
deleteAllSystemSnapshots
_manifestsByIdentity
generateImageForSnapshot:dataProvider:writeToFile:completion:
delegate
_manifestImpl
_delegate
T@"XBApplicationSnapshotManifestImpl",R,W,N,V_manifestImpl
T@"<XBApplicationSnapshotManifestDelegate>",W,N,V_delegate
_handleMemoryPressure
unarchivedObjectOfClass:fromData:error:
_initWithContainerIdentity:
_noteDirtied
_scheduleArchivingIfNecessaryWithCompletion:
_workloop_incrementClientCount
identity
_workloop_decrementClientCount
_commonInit
_setContainerIdentity:
hasBeenSignalled
_access_snapshotsForGroupIDs:
_access_snapshotsForGroupIDs:matchingPredicate:
bs_map:
fallbackGenerationContext
launchRequest
applicationCompatibilityInfo
_snapshotPredicateForRequest:
_generatableSnapshotForGroupID:generationContext:
sortDescriptors
NSSortDescriptors
sortUsingDescriptors:
_imageAccessQueue_saveData:forSnapshot:
_reapExpiredAndInvalidSnapshots
_didGenerateImage:imageGenerationSignal:logIdentifier:imageGeneratedHandler:qos:
_didGenerateImageData:forSnapshot:imageWasGenerated:imageDataGenerationSignal:logIdentifier:didSaveHandler:qos:writeToFileIfSupported:
_addSnapshotToGroup:
_access_addSnapshotToGroup:
arrayByApplyingSelector:
_access_deleteSnapshots:
_access_snapshotsMatchingPredicate:
_access_snapshotGroupForID:creatingIfNeeded:
_access_deletePaths:
_access_purgeSnapshotsWithProtectedContent
_access_updateSnapshotsAPFSPurgability:
_access_snapshotsConsideredUnpurgableByAPFS
removeAllObjects
_access_accessSnapshotsWithBlock:completion:
setHidden:
setBackgroundActivityEnabled:
_createSnapshotWithGroupID:generationContext:
_configureSnapshot:withCompatibilityInfo:forLaunchRequest:
addSnapshot:
_access_allSnapshotGroups
_scheduleArchivingIfNecessaryWithDelay:completion:
_access_doArchiveWithCompletions:
_workloop_checkClientCount
_access_workloop_reapExpiredAndInvalidSnapshots
snapshots
archivedDataWithRootObject:requiringSecureCoding:error:
_access_validateWithContainerIdentity:
timeIntervalSinceNow
initWithIdentifier:
scheduleWithFireInterval:leewayInterval:queue:handler:
_access_gatherPaths:forSnapshot:
removeSnapshot:
allKeys
_initWithIdentifier:containerIdentity:
stringByDeletingLastPathComponent
bytes
_workloop_reallyCheckClientCount
_workloop_noteManifestInvalidated:
currentDevice
userInterfaceIdiom
error
appendArraySection:withName:skipIfEmpty:
isUnderMemoryPressure
_snapshotGroupsByID
_descriptionForStateCaptureWithMultilinePrefix:
_identity
_imageAccessFileManger
_reapingTimer
_invalidatedSignal
_clientCount
_pendingOperations
_archiveSchedulingQueue_synchronizeCompletions
_archiveSchedulingQueue_dirty
_archiveSchedulingQueue_scheduled
_accessLock
T@"XBSnapshotContainerIdentity",R,C,N,V_containerIdentity
T@"XBSnapshotManifestIdentity",R,C,N,V_identity
preheatServiceWithTimeout:
generateImageWithContext:captureInfo:error:
_resetBadLaunchInterfaceCount:
_generateImageForSnapshot:inManifest:withContext:asyncImageData:dataProvider:scheduleAsyncGeneration:completion:
_addBadLaunchInterfaceToDenyList:forError:
initWithArray:
descriptionForObject:
initWithApplicationCompatibilityInfo:launchRequest:timeout:
setObject:atIndexedSubscript:
_workQueue
_stateCaptureAssertion
appendFloat:withName:
timeout
_applicationCompatibilityInfo
_launchRequest
_timeout
T@"XBApplicationLaunchCompatibilityInfo",R,N,V_applicationCompatibilityInfo
T@"XBLaunchStateRequest",R,C,N,V_launchRequest
Td,R,N,V_timeout
enumeratorAtPath:
fileAttributes
fileType
setWithArray:
_snapshots
T@"NSString",R,C,D,N
T@"NSSet",R,C,N,V_snapshots
initWithServiceName:endpoint:
initWithCode:bundleID:reason:fatal:
bs_secureDecodedFromData:
_sendMessage:withReplyHandler:waitForReply:waitDuration:
isFatal
initWithServiceName:
_sendMessage:
_appInfo
_sortableScheme
_sortableName
_sortableLaunchInterfaceIdentifier
_sortableRequiredOSVersion
_sortableStatusBarSettings
_interfaceOrientationMask
_contentTypeMask
T@"XBStatusBarSettings",R,&,N
TQ,R,N
initWithKey:ascending:comparator:
_propertyKeyForSnapshotKey:overriddenForNil:
sortDescriptorWithKey:ascending:comparator:
_stringForKey:
NSSortDescriptor
setKey:
ascending
setAscending:
comparator
setComparator:
_key
_ascending
_comparator
TQ,N,V_key
TB,N,V_ascending
T@?,C,N,V_comparator
T@"NSSortDescriptor",R,N
_initWithBSSettings:
setDescriptionProvider:
stringForStatusBarStyle:
isBackgroundActivityEnabled
boolForSetting:
appendBool:
appendInteger:
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
keyDescriptionForSetting:
valueDescriptionForFlag:object:ofSetting:
mutableCopyWithZone:
_settings
hidden
TB,R,N,GisHidden
Tq,R,N
backgroundActivityEnabled
TB,R,N,GisBackgroundActivityEnabled
setStyle:
TB,D,N,GisHidden
Tq,D,N
TB,D,N,GisBackgroundActivityEnabled
arrayWithCapacity:
fetchRequest
setPredicate:
setSortDescriptors:
setFallbackGenerationContext:
_predicate
_sortDescriptors
_fallbackGenerationContext
T@"NSArray",R,C,N
T@"XBApplicationSnapshotPredicate",&,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"XBApplicationSnapshotGenerationContext",&,N,V_fallbackGenerationContext
initWithDomain:code:userInfo:
shouldDeny
_fatal
_shouldDeny
fatal
TB,R,GisFatal,V_fatal
TB,R,V_shouldDeny
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8@16@24@32
Q24@0:8@16
@"NSArray"
@"NSOrderedSet"
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@24@0:8^{_NSZone=}16
v32@0:8{CGSize=dd}16
v24@0:8q16
{CGSize=dd}16@0:8
q16@0:8
@"FBSDisplayConfiguration"
@"XBDisplayEdgeInsetsWrapper"
{CGSize="width"d"height"d}
@52@0:8Q16@24@32@40B48
@44@0:8@16@24@32B40
v20@0:8B16
@"XBLaunchInterfaceConfiguration"
@"XBLaunchInterface"
@48@0:8{UIEdgeInsets=dddd}16
@48@0:8d16d24d32d40
{UIEdgeInsets=dddd}16@0:8
d16@0:8
@"NSArray"16@0:8
@24@0:8B16B20
v28@0:8@16B24
v40@0:8@16@?24@?32
v44@0:8@16@?24B32@?36
@32@0:8@16@24
v36@0:8@16@24B32
@"<XBApplicationLaunchRequestProviding>"
@"XBCacheDeleteRequestHandler"
@"<XBApplicationProviding>"
@"<XBSnapshotManifestStore>"
q24@0:8q16
B24@0:8q16
@28@0:8@16i24
@48@0:8@16@24@32@40
v32@0:8@16@24
v32@0:8@16@?24
v32@0:8@"NSData"16@"NSString"24
v24@0:8@"NSString"16
@"NSData"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?>24
q24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSCountedSet"
@"NSMutableDictionary"
@72@0:8@16@24@32q40@48@?56@?64
v24@0:8@?16
v32@0:8@?16@?24
B32@0:8@16^@24
@40@0:8@16@24@?32
@"XBApplicationSnapshot"
@"<XBApplicationSnapshotImageGenerationScheduling>"
@"<XBSnapshotDataProvider>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@?<v@?>16
v32@0:8@?<v@?>16@?<v@?>24
@"NSObject<OS_dispatch_workloop>"
v24@0:8d16
v32@0:8@16Q24
B24@0:8Q16
@24@0:8Q16
@"BSMutableSettings"
@24@0:8q16
@24@0:8o^{CGAffineTransform=dddddd}16
@"XBSnapshotDataProviderContext"16@0:8
@"UIImage"24@0:8q16
@"UIImage"16@0:8
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"<XBSnapshotDataProvider>"16@0:8
@32@0:8@16I24B28
@"_FBSSnapshot"
@"UIImage"
@"XBSnapshotDataProviderContext"
@32@0:8@16q24
^{CGImage=}32@0:8@16^{CGImage=}24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8q16Q24
B24@0:8^@16
@?16@0:8
B40@0:8@16@24^@32
@32@0:8@16^q24
@28@0:8@16B24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"XBSnapshotContainerIdentity"
@"NSDate"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"XBStatusBarSettings"
@"XBApplicationSnapshotGenerationContext"
@"NSDictionary"
@"BSAtomicFlag"
@"NSObject<OS_os_transaction>"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
^{__FSEventStream=}16@0:8
v24@0:8^{__FSEventStream=}16
^{__FSEventStream=}
v32@0:8@"XBApplicationSnapshotManifest"16@"NSArray"24
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@?36@?44
v56@0:8@16@24Q32@?40@?48
v40@0:8@16@24@32
@"XBApplicationSnapshotManifestImpl"
@"<XBApplicationSnapshotManifestDelegate>"
@36@0:8@16@24B32
v48@0:8B16@20@28@?36I44
v68@0:8@16@24B32@36@44@?52I60B64
v32@0:8d16@?24
B32@0:8@16@24
@"XBSnapshotManifestIdentity"
@"NSFileManager"
@"BSContinuousMachTimer"
@"BSAtomicSignal"
@"NSMutableArray"
@?36@0:8@16B24^@28
v60@0:8@16@24@32B40@?44@?52
v64@0:8@16@24@32B40@44B52@?56
@"<BSInvalidatable>"
@40@0:8@16@24d32
@"XBApplicationLaunchCompatibilityInfo"
@"XBLaunchStateRequest"
@"NSMutableSet"
I40@0:8@16^@24^@32
@36@0:8Q16B24@?28
@32@0:8Q16^B24
B56@0:8@16@24q32@40Q48
@32@0:8@16Q24
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
@"XBApplicationSnapshotPredicate"
@44@0:8q16@24@32B40
@(#)PROGRAM:SplashBoard  PROJECT:SplashBoard-1
;@DH
%+.14
XBLaunchCaptureInformationEstimatedSize
XBLaunchCaptureInformationCaarPath
XBApplicationCaptureInformation.m
Invalid parameter not satisfying: %@
[launchRequests count] == [captureInfos count]
Estimated Memory Impact
Undefined!
%zu bytes
Minimal
Path
.caar Path
v8@?0
groupID
launchRequests
com.apple.SplashBoard
Snapshot
Memory
FetchRequests
SnapshotReaper
DaemonLifecycle
Capture
FileManifest
Purge
Common
storyboard
storyboardc
__from_UILaunchStoryboardName__
hidden
double-height
normal
invalid
v24@?0Q8^B16
Storyboard
(null)
displayConfiguration
statusBarState
referenceSize
naturalSize
interfaceOrientation
userInterfaceStyle
customSafeAreaInsets
urlSchemeName
launchInterfaceIdentifier
statusBar
refSize
orientation
scheme
colorName
imageName
imageRespectsSafeAreaInsets
navigationBarImageName
toolbarImageName
tabBarImageName
bars
XBApplicationLaunchCompatibilityInfo.m
[coder allowsKeyedCoding]
type
name
identifier
configuration
default
urlSchemes
bundleIdentifier
bundlePath
sandboxPath
bundleContainerPath
launchInterfaces
launchesOpaque
hasKnownBadLaunchImage
BadLaunchImageCandidateCount
v32@?0@"NSString"8@"NSString"16^B24
attempting to replace non-existent pre-existing default interface.
B16@?0@"XBLaunchInterface"8
v32@?0@"XBLaunchInterface"8Q16^B24
topInset
leftInset
bottomInset
rightInset
Snapshots
Caches
Library
SplashBoard
StaticDefault
GeneratedDefault
SceneContent
All Types
XBRecentScreenSize
XBCaptureLaunchImagesPostMigration
XBApplicationController.m
provided an invalid mainDisplay configuration
^{__CFDictionary=}20@?0i8r^{__CFDictionary=}12
XBLaunchImagePostMigrationQueue
B32@?0@"_UIApplicationInfo"8Q16^B24
v16@?0@"NSDictionary"8
v16@?0@"XBApplicationCaptureInformation"8
no displayConfiguration found
Portrait
PortraitUpsideDown
Landscape
LandscapeLeft
LandscapeRight
UpMirrored
Down
DownMirrored
Left
LeftMirrored
Right
RightMirrored
XBApplicationBundleIdentifier
com.apple.splashboard
_XBEncodeGeneratedInterfaces
splashboardd-%d
%@-%@-%@-%.fx%.f-%u
UIInterfaceOrientationPortrait
UIInterfaceOrientationLandscapeLeft
UIInterfaceOrientationLandscapeRight
UIInterfaceOrientationPortraitUpsideDown
%@-%@.caar
XBSnapshotManifestIdentity.m
init is not allowed
store
%@ - {DEFAULT GROUP}
@"NSString"8@?0
@8@?0
com.apple.splashboard.launchimage
message
compatibilityInfo
launchRequest
createCaptureInfo
contextID
error
captureInfo
UILaunchStoryboardName
UILaunchStoryboards
UILaunchStoryboardDefinitions
UILaunchStoryboardIdentifier
UILaunchStoryboardFile
UIURLToLaunchStoryboardAssociations
UIDefaultLaunchStoryboard
UILaunchScreen
UIColorName
UIImageName
UIImageRespectsSafeAreaInsets
UINavigationBar
UIToolbar
UITabBar
UILaunchScreens
UILaunchScreenDefinitions
UILaunchScreenIdentifier
UIURLToLaunchScreenAssociations
UIDefaultLaunchScreen
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
recent
uncommon
startDate
XBSnapshotContainerIdentity.m
this constructor is disallowed
record
proxy
sandboxed
dataContainerPath
XBApplicationSnapshotManifest
XBApplicationDataStore.m
com.apple.splashboard.application-data-store
XBApplicationLaunchCompatibilityInfo
Invalid condition not satisfying: %@
[_bs_assert_object isKindOfClass:XBApplicationLaunchCompatibilityInfoClass]
NSData
[_bs_assert_object isKindOfClass:NSDataClass]
unbalanced call to %s detected with bundleIdentifier=%@ : cacheable=%@
-[XBApplicationDataStore endAccessBlockForBundleIdentifier:]_block_invoke
XBApplicationSnapshotImageGenerator.m
scheduler
snapshot
[snapshot groupID]
dataProvider
[dataProvider context]
%@ XBSnapshotDataProvider %@ doesn't implement fetch* method
already complete
snapshot is nil
snapshot is invalidated
image data requested
no cached image
have a cached image and no requests to regenerate
%@ somehow we got into this method with the wrong data provider %@
com.apple.XBApplicationSnapshotImageGenerator._generate
v20@?0@"NSData"8B16
XBApplicationSnapshotSchedulerImageGenerationWorkloop
XBApplicationSnapshotSchedulerImageGenerationQueue
XBApplicationSnapshotSchedulerImageDataGenerationWorkloop
XBImageDataGenerationRequestNone
XBImageDataGenerationRequestSynchronous
XBImageDataGenerationRequestAsynchronous
requiredOSVersion
orientationMask
contentTypeMask
statusBarStateMask
size
scale
XBLaunchImageDataProvider.m
contextID != 0
contextID != XBInvalidContextId
request
imageOrientation
opaque
path
JPEG
ATX420f
(invalid)
(unknown)
Default
 [%@]
XBApplicationSnapshot.m
don't do that
containerIdentity
_imageAccessCount == 0
B8@?0
Extended data client class '%@' does not conform to NSSecureCoding
Extended data client class '%@' does not support NSSecureCoding
invalid content frame set by client
invalid reference size set by client
_imageAccessCount: %lu; _keepImageAccessUntilExpiration: %@; _hasProtectedContent: %@; _keepImageAccessForPreHeat: %@
Expiration date is required in order to keep alive until expiration.
Cannot keep alive an image that is already invalidated.
_imageAccessCount != 0
expired. expirationDate: %@; how long ago (seconds): %f
no cached image. no generation context. no image generator. no file at path: %@
v32@?0@"NSString"8@"XBApplicationSnapshot"16^B24
variantID
variant == nil || ![variant isValid]
_filename == nil
_path == nil
_relativePath == nil
@%lux
%@%@.%@
Invalid file extension: %@ for path: %@
com.apple.XBApplicationSnapshot.CachedImage
_contentType: %@(%ld)
kCGImageConversionReason
XBApplicationSnapshot
com.apple.atx
relativePath
filename
fileLocation
creationDate
lastUsedDate
expirationDate
contentType
fullScreen
contentFrame
imageOpaque
imageScale
statusBarSettings
classicMode
compatibilityMode
backgroundStyle
extendedData
variants
Cache
_cachedImage
IOSurfaceRef
allocSize
CGImageRef
_synchronized_hasCachedImage: isn't giving us a reason even though we have a cached image
reason
Variants
keepsImageAccessUntilExpiration
hasGenerationContext
context
additionalContext
imageContext
fileRelativeLocation
fileFormat
jpeg
{!InvalidType!}
none
dataContainer
bundle
bundleContainer
XBApplicationManifestWorkloop
XBApplicationManifestSerialWorkQueue
XBApplicationSnapshotImageAccessQueue
XBApplicationSnapshotArchiveSchedulingQueue
XBApplicationSnapshotManifestCallOutQueue
XBApplicationSnapshotManifestFSEventsQueue
com.apple.springboard.trackSplashBoardDeletionsPrefsChanged
SBTrackSplashBoardDeletions
@16@?0@"_UIApplicationInfo"8
v32@?0@"XBSnapshotManifestIdentity"8@"XBApplicationSnapshotManifestImpl"16^B24
v32@?0@"XBSnapshotManifestIdentity"8@"EventStreamWrapper"16^B24
XBApplicationSnapshotManifest.m
identity
info
v12@?0B8
bundleID
manifestToRelinquish does not match the manifest that we think we have : %@ != %@
invalidatedManifest does not match the manifest that we think we have : %@ != %@
self
<%@: %p>
<%@:%p bundleIdentifier=%@> was not properly invalidated before dealloc
<%@:%p bundleIdentifier=%@> failed to fire all synchronize completions before dealloc
@16@?0@"XBApplicationSnapshot"8
B32@?0@"XBApplicationSnapshot"8Q16^B24
v16@?0@"XBApplicationSnapshot"8
v32@?0@"NSString"8@"XBApplicationSnapshotGroup"16^B24
generationContext
XBApplicationSnapshotManifest-reapingTimer
v16@?0@"BSContinuousMachTimer"8
v32@?0@"NSString"8Q16^B24
v16@?0@"NSFileManager"8
v32@?0@8@16^B24
v32@?0@"XBApplicationSnapshot"8Q16^B24
generated nil path for snapshot %@
B12@?0i8
ji56BO1mUeT7Qg9RO7Er9w
Aixt/MEN2O2B7f+8m4TxUA
version
snapshots
v32@?0@"XBApplicationSnapshotGroup"8Q16^B24
clientCount
com.apple.splashboard.launchImageProvider.workQueue
XBLaunchImageProvider.m
appInfo
manifest
[appInfo allowsSavingLaunchImages]
[launchRequests count] > 0
snapshotGroupID
strikeCount >= 1
strikeCount <= NumberOfStrikesBeforeMarkingBad + 1
XBApplicationSnapshotGenerationContext.m
applicationCompatibilityInfo
timeout
v24@?0@"XBApplicationSnapshot"8^B16
XBApplicationSnapshotGroup.m
XBLaunchImageProviderClient.m
use initWithDefaultService
context != nil
launchRequest != nil
appInfo != nil
This API cannot be used if the client was not initialized with an app info
app info bundle ID: %@ doesn't match ivar app info bundle ID: %@
The request timed out
v16@?0@"NSObject<OS_xpc_object>"8
The request failed
timeout > 0.0
q24@?0@8@16
_sortableName
_sortableScheme
_sortableLaunchInterfaceIdentifier
_interfaceOrientationMask
_contentTypeMask
_sortableStatusBarSettings
_sortableRequiredOSVersion
hasProtectedContent
ascending
XBApplicationSnapshotNameKey
XBApplicationSnapshotSchemeKey
XBApplicationSnapshotLaunchInterfaceIdentifierKey
XBApplicationSnapshotInterfaceOrientationMaskKey
XBApplicationSnapshotReferenceSizeKey
XBApplicationSnapshotImageScaleKey
XBApplicationSnapshotContentTypeMaskKey
XBApplicationSnapshotStatusBarSettingsKey
XBApplicationSnapshotRequiredOSVersionKey
XBApplicationSnapshotCreationDateKey
XBApplicationSnapshotProtectedContentKey
XBApplicationSnapshotUserInterfaceStyleKey
XBApplicationSnapshotCustomSafeAreaInsetsKey
com.apple.splashboard.launch-image-caar-capture
style
backgroundActivityEnabled
isBackgroundActivityEnabled
Unspecified
Light
Dark
predicate
sortDescriptors
fallbackGenerationContext
XBLaunchStoryboardErrorDomain
Unable to generate launch image
Unknown application
fatal
Deleting legacy cache snapshots path for bundleID: %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@
Error deleting legacy cache snapshots path for bundleID %{public}@, sandboxPath: %{public}@, legacySnapshotsPath: %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system app: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system app %{public}@ at %{public}@: %{public}@
Deleting legacy cache snapshots path for non-sandboxed system apps: %{public}@
Error deleting legacy cache snapshots path for non-sandboxed system apps %{public}@: %{public}@
Failed to register with CacheDelete
Screen size changed from %{public}@ to %{public}@, purging all generated launch image and snapshots.
performPostMigrationLaunchImageGeneration
Post-migration launch image capture for %{public}@
No legacy snapshots caches to purge
Start purging legacy snapshots caches...
Purging legacy caches of sandboxed app snapshots for: %{public}@
Purging legacy caches of snapshots for non-sandboxed system app: %{public}@
Finished purging
XBInvalidate
XBCapture
Failed to capture launch image snapshot due to missing manifest or launchRequests for %{public}@
Unable to generate launch image for %{public}@ because the app has no valid launch interfaces.
Unable to generate launch image for %{public}@ because the provided bundle path does not exist: %{public}@
We can't generate launch image requests for: %{public}@ since it doesn't support any valid orientations.
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps: called
forgettingApps: %d
predicate:
%{public}@
dumping caar for view hierarchy:
splashboardd wrote an encoded launch interface to: %{public}@
appInfo: %{public}@
launchRequest: %{public}@
launchInterface: %{public}@
Marking %{public}@ as %{public}@
Failed to obtain recently used applications with error: %{public}@
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
[%{public}@] %{public}@ implementing deprecated fetchImageData:. rude. inconsiderate.
[%{public}@] ignoring asynchronous request to generate image because: %{public}@
[%{public}@] scheduling asynchronous request to generate image because: %{public}@
[%{public}@] ignoring synchronous request to generate image because: %{public}@
[%{public}@] CALLED IMAGE GENERATOR FOR %{public}@. This should be considered a last resort, and will likely result in significant blocking of the calling thread! reason: %{public}@
dataProvider=%{public}@ imageDataRequest=%{public}s
GenerateImageData
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] doing imageData generation
[%{public}@] -[%{public}@<XBSnapshotDataProvider> fetchImage] returned a nil image. skipping imageData generation
[%{public}@] -[%{public}@<XBSnapshotDataProvider> hasProtectedContent] is YES. skipping imageData generation
[%{public}@] was not asked for imageData. skipping imageData generation
[%{public}@] +[XBApplicationSnapshot dataForImage:withFormat:] failed to create imageData
[%{public}@] we don't have requests for imageData. skipping imageData generation
dataProvider=%{public}@
GenerateImageDataLegacy
[%{public}@] -[<XBSnapshotDataProvider> fetchImageData:] returned nil imageData. Returning nil image and data
[%{public}@] -[UIImage initWithData:scale:] returned a nil image, so we're not returning the image or its data
[%{public}@] we needlessly scheduled _generate even though we have nothing to do because: %{public}@; Snapshot: %{public}@
[%{public}@] Generated image data (%{public}@ as %{public}@) for %{public}@ after %.2fs
GenerateImage
%{public}@ Set expiration date to %{public}@
%{public}@ Clearing expiration date
%{public}@ received an empty or nil path for _sanitizedPathForPath: %{public}@. That's weird.
%{public}@ received invalid path
path: %{public}@
%{public}@ Sanitizing new path before set %{public}@
%{public}@ Sanitizing new relativePath before set %{public}@
%{public}@ we have a path but it doesn't exist: %{public}@
%{public}@ calling imageGenerator
%{public}@ finished calling imageGenerator
%{public}@ calling generatorFunction
%{public}@ finished calling generatorFunction
Loading image failed file load for %{public}@ : %{public}@
%{public}@ Keeping image access on until expiration
%{public}@ Dropping image access until expiration because the expiration has already occurred
%{public}@ we're invalid because we don't have a launchInterfaceIdentifier and our content type is: %{public}@
%{public}@ Snapshot migrated snapshot path to %{public}@, relative to %{public}@
%{public}@ we're invalid because we don't have a relativePath. path: %{public}@
%{public}@ has fileLocation of %ld
calculated rootPath of %{public}@
relativePath: %{public}@
setting to newPath: %{public}@
%{public}@ has fileLocation of %ld
setting to newPath: %{public}@
%{public}@ Snapshot rebuilt absolute path to: %{public}@
%{public}@ we're invalid because _path is a directory: %{public}@
%{public}@ we're invalid because _path doesn't exist: %{public}@
%{public}@ deleting file on purge because we're invalid.
deleteReason: %{public}@;
path: %{public}@
%{public}@ Error deleting file on purge at %{public}@: %{public}@
%{public}@ Found invalid variant. Removing. variantID: %{public}@; variant: %{public}@
%{public}@ Invalidating snapshot
[%{public}@] asked to create variant but we're invalidated. variantID: %{public}@
[%{public}@] had invalid variant -- overwriting. variantID: %{public}@
 old variant: %{public}@
[%{public}@] creating new variant. variantID: %{public}@
%{public}@ Purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
%{public}@ not purging the cached image; force: %d; _imageAccessCount: %lu; _keepImageAccessUntilExpiration: %d; _hasProtectedContent: %d; _keepImageAccessForPreheat: %d
Failed to generate ATX data for %@
Deleting all system snapshots at path %{public}@
Error deleting all system snapshots at path %{public}@: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Manifest containerIdentity has changed: %{public}@
acquireManifestForContainerIdentity:store:creatingIfNecessary: [%{public}@] Unable to unarchive manifest from store: %@
acquireManifestForContainerIdentity:store:creatingIfNecessary: Created manifest: %{public}@.
acquireManifestForContainerIdentity:store:creatingIfNecessary: Unarchived manifest %{public}@ for %@.
Removing manifest: %{public}@
[%@] beginTrackingImageDeletions: watching under %@
[%@] beginTrackingImageDeletions: Unable to start FSEventStream: %s
[%@] endTrackingImageDeletions
[%@] snapshotsForGroupIDs given groupIDs: %@; returning snapshots:
[%@] snapshotsForGroupIDs:matchingPredicate: given groupIDs: %@; predicate: %@; returning matchingSnapshots:
[%@] BEGIN snapshotsForGroupIDs:fetchRequest: groupIDs: %@; fetchRequest: %@
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has predicate %@; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has no predicate; retrieved matchingSnapshots:
[%@] snapshotsForGroupIDs:fetchRequest: scheme %@ requested but there's no launch interface representing it
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@ and found matching snapshot %@; will not generate
[%@] snapshotsForGroupIDs:fetchRequest: fetchRequest has fallbackPredicate %@, no snapshot matched, so generated and added fallbackSnapshot:
[%@] END snapshotsForGroupIDs:fetchRequest: returning matchingSnapshots:
%{public}@ inside imageGenerationHandler
%{public}@ processing imageGenerationHandler callback with didGenerateImage: %d
%{public}@ ignoring redundant imageDataGenerationHandler callback as we've already processed one. didGenerateImage: %@
%{public}@ inside imageDataGenerationHandler
%{public}@ Snapshot data for %{public}@ written to file: %{public}@
%{public}@ Error writing snapshot %{public}@ to file
%{public}@ Snapshot was invalidated between imageGenerationHandler and imageDataGenerationHandler. Skipping saving. %{public}@
%{public}@ calling didSaveHandler
%{public}@ we expected to receive and save image data for snapshot but failed. invalidating. snapshot: %{public}@
%{public}@ ignoring redundant imageDataGenerationHandler callback as we've already processed one. imageData: %p
%{public}@ Saved snapshot: %{public}@
%{public}@ Deleting snapshots: %{public}@
%{public}@ Deleting snapshots: %{public}@ matching predicate: %@
%{public}@ Deleting all snapshots for group: %{public}@.
%{public}@ Deleting all snapshots.
%{public}@ groupID: [%@] Creating temporary snapshot %@ with generation context.
%{public}@ Archiving manifest (%p).
%{public}@ Unable to archive manifest: %{public}@
%{public}@ We don't have any snapshots, so we're clearing our manifest data.
%{public}@ group isn't valid. removing from snapshotGroupsByID and will be culled later: %@
%{public}@ Manifest is empty; purging everything at %@
%{public}@ Error removing snapshotContainer for purge at %{public}@: %{public}@
%{public}@ Reaping invalid snapshot %{public}@
 invalidReason: %{public}@
%{public}@ Cancelling reaping timer as we've just reaped
%{public}@ Scheduling next reaping for ~%{public}@ %f.
%{public}@ Reaping timer fired! Cancelling timer
%{public}@ Not scheduling next reaping because the interval is invalid ~%@.
%{public}@ Deleting paths: %@
%{public}@ error deleting path %@: %{public}@
%{public}@ Deleting snapshot %{public}@ for reason: %{public}@
%{public}@ XBEnsureDirectoryExistsAtPath() check failed for: %{public}@
%{public}@ Failed to write to %@: (%s)
%{public}@ Incrementing client count: %u
%{public}@ Decrementing client count: %u
%{public}@ Manifest (%p) has no remaining clients or work. Invalidating!
%{public}@ Cancelling reaping timer as we're invalidating (no clients or work remaining)
%{public}@ Failed to decode from decoder with error: %{public}@
%{public}@ Snapshot manifest out of date (currVers=%d, newVers=%d).
Snapshot generation request for bundleID: %{public}@ rejected due to the app being denylisted.
Synchronously generating image for request: %@
Snapshot image generation completed after %.3fs.
Processing launch request %@ for app: %@.
Asynchronously generating image data for request: %@
Skipping launch request %@ due to denied app: %@.
Image generation complete for: %@
Image generation failed for: %@
Unable to generate context for %@, so skipping it and moving on.
Error generating image for launch request %@ .
Snapshot generation resulted in an error with code: %ld for app bundleID: %@, noting this until it is updated.
[%{public}@] Group %{public}@ deleting container with no valid snapshots: %{public}@
[%{public}@] Error with Group %{public}@ deleting container with no valid snapshots at %{public}@: %{public}@
[%{public}@] Group %{public}@ deleting unreferenced file: %{public}@
[%{public}@] Error with Group %{public}@ deleting unreferenced file at %{public}@: %{public}@
Request to splashboardd has timed out -- invalidating the connection for %@.
Fatal error generating snapshot for %@.
Warming up splashboardd (timeout %.1fs)
XBLaunchCaptureInformation
NSSecureCoding
NSCoding
XBApplicationCaptureInformation
BSDescriptionProviding
NSObject
XBLaunchImage
XBLaunchStateRequest
BSXPCCoding
NSCopying
XBLaunchInterfaceConfiguration
XBLaunchInterface
XBApplicationLaunchCompatibilityInfo
XBDisplayEdgeInsetsWrapper
XBDefaultApplicationProvider
XBApplicationProviding
XBApplicationController
XBSnapshotManifestIdentity
SplashBoard
XBCacheDeleteRequestHandler
XBSnapshotContainerIdentity
XBApplicationDataStore
XBSnapshotManifestStore
XBApplicationSnapshotImageGenerator
XBApplicationSnapshotGenerationScheduler
XBApplicationSnapshotImageGenerationScheduling
XBApplicationSnapshotPredicate
XBSnapshotDataProviderContext
XBLaunchImageDataProvider
XBSnapshotDataProvider
XBApplicationSnapshotImage
XBApplicationSnapshot
EventStreamWrapper
XBApplicationSnapshotManifest
XBApplicationSnapshotManifestDelegate
XBApplicationSnapshotManifestImpl
XBLaunchImageProvider
XBApplicationSnapshotGenerationContext
XBApplicationSnapshotGroup
XBLaunchImageProviderClient
SortingSupport
XBApplicationSnapshotSortDescriptor
XBStatusBarSettings
BSSettingDescriptionProvider
NSMutableCopying
XBMutableStatusBarSettings
XBApplicationSnapshotFetchRequest
XBLaunchImageError
currentStyle
objectAtIndexedSubscript:
appendDictionarySection:withName:skipIfEmpty:
build
setObject:forKeyedSubscript:
encodeCGSize:forKey:
addObject:
isEqual
valueWithCGSize:
bs_secureDecodedFromData:
numberWithUnsignedInteger:
extensionHostIdentifier
encodeCGRect:forKey:
currentHandler
statusBarOrientation
getFlag
compare:options:
predicateForObjectsWithMetadataKey:
currentDevice
setObject:forKey:
addEntriesFromDictionary:
safeObjectForKey:ofType:
initWithIdentifier:
sharedApplication
infoDictionary
appendBool:withName:
valueForKey:
appendBool:
setObject:atIndexedSubscript:
bs_map:
numberWithInteger:
statusBarHiddenForInterfaceOrientation:onDisplay:
substringFromIndex:
isAfterDate:
code
predicateForEventsWithStartInDateRangeFrom:to:
defaultManager
activeMultilinePrefix
safeArchivedObjectForKey:ofType:
initWithIOSurface:
UTF8String
indexesOfObjectsPassingTest:
numberWithDouble:
encodeBool:forKey:
ioSurface
userInterfaceIdiom
standardUserDefaults
appendUnsignedInteger:withName:
subarrayWithRange:
bs_firstObjectPassingTest:
doubleValue
setWithObjects:
appendUInt64:withName:
appendBodySectionWithName:multilinePrefix:block:
indexOfObjectIdenticalTo:
initWithFormat:
setWithArray:
executeQuery:error:
appendArraySection:withName:skipIfEmpty:
bs_compactMap:
sortUsingDescriptors:
domain
indexOfObject:
initWithDisplayConfiguration:layers:
appendArraySection:withName:multilinePrefix:skipIfEmpty:
notPredicateWithSubpredicate:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
appendString:withName:skipIfEmpty:
invalidate
stringWithUTF8String:
characterSetWithCharactersInString:
_sendMessage:withReplyHandler:waitForReply:waitDuration:
bounds
defaultCenter
distantPast
replaceObjectAtIndex:withObject:
initWithData:scale:
appendString:withName:
lastPathComponent
_sendMessage:
decodeObjectOfClasses:forKey:
stringWithFormat:
caseInsensitiveCompare:
appUsageStream
initWithContextID:baseTransform:
CGSizeValue
appendString:counterpart:
setUseDebugDescription:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringWithCString:encoding:
lastObject
decodeObjectOfClass:forKey:
unsignedIntegerValue
_backgroundStyleForString:
andPredicateWithSubpredicates:
dictionaryWithObjects:forKeys:count:
boolForSetting:
removeObserver:
initWithContentsOfFile:options:error:
sortDescriptorWithKey:ascending:
decodeIntegerForKey:
countByEnumeratingWithState:objects:count:
appendSize:withName:
mutableCopy
dictionaryWithDictionary:
flagForSetting:
error
integerValue
stringValue
removeObjectsForKeys:
unionSet:
knowledgeStore
stringForStatusBarStyle:
setClass:forClassName:
appendRect:withName:
_applicationTypeForProxy:
count
insertObject:atIndex:
unarchivedObjectOfClass:fromData:error:
boolForKey:
decodeInt64ForKey:
firstObject
removeObjectForKey:
appendPointer:withName:
enumeratorWithOptions:
copy
stringForKey:
enumeratorAtPath:
decodeDoubleForKey:
allowsKeyedCoding
fileType
UUID
removeObject:
appendObject:withName:skipIfNil:
descriptionForObject:
decodeCGSizeForKey:
stringByTrimmingCharactersInSet:
allocationSize
localizedStringFromDate:dateStyle:timeStyle:
pathForResource:ofType:inDirectory:
removeItemAtPath:error:
IOSurface
decodeCGRectForKey:
bytes
enumerateObjectsUsingBlock:
appendObject:withName:
fileSystemRepresentationWithPath:
pathExtension
stringByDeletingPathExtension
removeAllObjects
UUIDString
stringByDeletingLastPathComponent
allocWithZone:
appendObject:counterpart:
initWithSnapshotContext:
timeIntervalSinceNow
initWithCapacity:
localizedInfoDictionary
enumerateKeysAndObjectsUsingBlock:
fileSystemRepresentation
decodeBoolForKey:
allValues
setSnapshotSize:
isMainDisplay
bundleURL
dateWithTimeIntervalSinceNow:
setArchivedObject:forKey:
appendObject:
orderedSetWithObject:
fileExistsAtPath:isDirectory:
stringByAppendingPathComponent:
timeIntervalSinceDate:
allObjects
appendInteger:withName:
initWithServiceName:
allKeysForObject:
containsObject:
appendInteger:
dateByAddingTimeInterval:
stringByAppendingFormat:
arrayWithObjects:count:
objectsForKeys:
fileExistsAtPath:
arrayWithCapacity:
synchronizeWithCompletion:
recursiveDescription
initWithArray:
sentinelWithQueue:signalCount:completion:
_stringForBackgroundStyle:
allKeys
setFlag:forSetting:
date
objectsAtIndexes:
appendInt64:withName:
fileAttributes
bundleContainerURL
arrayByApplyingSelector:
length
setFlag:
objectForSetting:
rangeOfString:
scheduleWithFireInterval:leewayInterval:queue:handler:
storeForApplication:
synchronize
isExternal
appendFloat:withName:decimalPrecision:
initWithApplicationProxy:
encodeObject:forKey:
objectForKeyedSubscript:
hasBeenSignalled
appendFloat:withName:
dataContainerURL
initWithPath:
arrayByAddingObject:
builderWithObject:ofExpectedClass:
encodeInteger:forKey:
componentsSeparatedByString:
layer
initWithObjects:forKeys:count:
objectForKey:ofClass:
array
processInfo
supportsInterfaceOrientation:
appendEqualsBlocks:
setDescriptionProvider:
addObserver:selector:name:object:
builderWithObject:
isEqualToString:
size
archivedDataWithRootObject:requiringSecureCoding:error:
CGImage
encodeInt64:forKey:
componentsJoinedByString:
setObject:forSetting:
initWithObjects:count:
objectForKey:
addObjectsFromArray:
supportedUserInterfaceStyle
builder
processIdentifier
handleFailureInMethod:object:file:lineNumber:description:
launchRequestsForApplication:withCompatibilityInfo:defaultLaunchRequests:
signal
compatibilityObject
encodeDouble:forKey:
appendDouble:withName:decimalPrecision:
init
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
estimatedMemoryImpact
setEstimatedMemoryImpact:
caarFilePath
setCaarFilePath:
.cxx_destruct
_estimatedMemoryImpact
_caarFilePath
TQ,N,V_estimatedMemoryImpact
T@"NSString",C,N,V_caarFilePath
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
succinctDescription
succinctDescriptionBuilder
initWithLaunchRequests:captureInfos:launchImagePaths:
estimatedMemoryImpactForLaunchRequest:
launchImagePathForLaunchRequest:
caarPathForLaunchRequest:
launchRequests
_captureInfos
_launchImagePaths
_launchRequests
T@"NSOrderedSet",R,N,V_launchRequests
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
copyWithZone:
setReferenceSize:
setNaturalSize:
setInterfaceOrientation:
displayConfiguration
setDisplayConfiguration:
groupID
setGroupID:
referenceSize
naturalSize
interfaceOrientation
userInterfaceStyle
setUserInterfaceStyle:
customSafeAreaInsets
setCustomSafeAreaInsets:
statusBarState
setStatusBarState:
urlSchemeName
setUrlSchemeName:
launchInterfaceIdentifier
setLaunchInterfaceIdentifier:
_displayConfiguration
_groupID
_interfaceOrientation
_userInterfaceStyle
_customSafeAreaInsets
_statusBarState
_urlSchemeName
_launchInterfaceIdentifier
_referenceSize
_naturalSize
T@"FBSDisplayConfiguration",&,N,V_displayConfiguration
T@"NSString",C,N,V_groupID
T{CGSize=dd},N,V_referenceSize
T{CGSize=dd},N,V_naturalSize
Tq,N,V_interfaceOrientation
Tq,N,V_userInterfaceStyle
T@"XBDisplayEdgeInsetsWrapper",&,N,V_customSafeAreaInsets
TQ,N,V_statusBarState
T@"NSString",C,N,V_urlSchemeName
T@"NSString",C,N,V_launchInterfaceIdentifier
initWithConfigurationDictionary:
colorName
imageName
imageRespectsSafeAreaInsets
bars
navigationBarImageName
toolbarImageName
tabBarImageName
_imageRespectsSafeAreaInsets
_colorName
_imageName
_bars
_navigationBarImageName
_toolbarImageName
_tabBarImageName
T@"NSString",R,C,N,V_colorName
T@"NSString",R,C,N,V_imageName
TB,R,N,V_imageRespectsSafeAreaInsets
T@"NSArray",R,N,V_bars
T@"NSString",R,C,N,V_navigationBarImageName
T@"NSString",R,C,N,V_toolbarImageName
T@"NSString",R,C,N,V_tabBarImageName
initWithType:name:identifier:urlSchemes:isDefault:
initWithConfiguration:identifier:urlSchemes:isDefault:
isStoryboard
isXIB
isConfiguration
_isDefault
set_default:
type
setType:
name
setName:
identifier
setIdentifier:
urlSchemes
setUrlSchemes:
configuration
_default
_type
_name
_identifier
_urlSchemes
_configuration
TQ,N,V_type
TB,N,G_isDefault,V_default
T@"NSString",C,N,V_name
T@"NSString",C,N,V_identifier
T@"NSArray",&,N,V_urlSchemes
T@"XBLaunchInterfaceConfiguration",R,N,V_configuration
TB,R,N
compatibilityInfoForAppInfo:
_setLaunchInterfaces:
initWithBundle:
allowsSavingLaunchImages
defaultLaunchInterface
launchInterfaceWithIdentifier:
launchInterfaceIdentifierForRequest:
launchInterfaceExistsForScheme:
launchInterfaces
bundleIdentifier
setBundleIdentifier:
bundlePath
setBundlePath:
sandboxPath
setSandboxPath:
launchesOpaque
setLaunchesOpaque:
hasKnownBadLaunchImage
setHasKnownBadLaunchImage:
badLaunchImageCandidateCount
setBadLaunchImageCandidateCount:
bundleContainerPath
setBundleContainerPath:
defaultGroupIdentifier
setDefaultGroupIdentifier:
_defaultInterface
_launchesOpaque
_hasKnownBadLaunchImage
_launchInterfaces
_bundleIdentifier
_bundlePath
_sandboxPath
_badLaunchImageCandidateCount
_bundleContainerPath
_defaultGroupIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundlePath
T@"NSString",C,N,V_sandboxPath
T@"NSString",C,N,V_bundleContainerPath
T@"NSString",C,N,V_defaultGroupIdentifier
TB,N,V_launchesOpaque
T@"XBLaunchInterface",R,C,N
T@"NSArray",R,C,N,V_launchInterfaces
TB,N,V_hasKnownBadLaunchImage
Tq,N,V_badLaunchImageCandidateCount
makeWithEdgeInsets:
initWithTop:left:bottom:right:
hasZeroInsets
edgeInsets
topInset
leftInset
bottomInset
rightInset
_topInset
_leftInset
_bottomInset
_rightInset
Td,R,N,V_topInset
Td,R,N,V_leftInset
Td,R,N,V_bottomInset
Td,R,N,V_rightInset
allSplashBoardApplications
splashBoardSystemApplications
allInstalledApplications
recentlyUsedBundleIDs
_allApplicationsFilteredBySystem:bySplashBoard:
_updateStatusBarOrientation
dealloc
initWithMainDisplayConfiguration:applicationProvider:launchRequestProvider:
_configureCacheDelete
deleteAllSnapshotsIfScreenSizeChanged
performPostMigrationLaunchImageGeneration
_deleteLegacyCachesSnapshotPathsIfNeeded
findRecentlyUsedOfApplications:
removeCachedLaunchImagesForApplications:forgettingApps:
captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completion:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:completionWithCaptureInfo:
_captureOrUpdateLaunchImagesForApplications:firstImageIsReady:createCaptureInfo:completionWithCaptureInfo:
_launchRequestsForApplication:withCompatibilityInfo:
_removeAllGeneratedLaunchImagesAndSnapshots
_removeLaunchImagesMatchingPredicate:forApplications:forgettingApps:
applicationProvider
_statusBarOrientation
_mainDisplayConfiguration
_launchRequestProvider
_snapshotCacheDeleteRequestHandler
_applicationProvider
T@"<XBApplicationProviding>",R,N,V_applicationProvider
boolValue
identityWithBundleIdentifier:store:
initWithBundleIdentifier:store:
store
_store
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N
T@"<XBSnapshotManifestStore>",R,C,N,V_store
xb_userInterfaceStyleForRequestedUserInterfaceStyle:
xb_supportsUserInterfaceStyle:
initWithApplicationProvider:
amountPurgeable:urgency:
performPurge:urgency:
performPeriodic:urgency:
setApplicationProvider:
T@"<XBApplicationProviding>",&,N,V_applicationProvider
identityForApplicationRecord:
identityForBundleProxy:
identityForApplicationInfo:
identityForCompatibilityInfo:
_initWithBundleIdentifier:bundlePath:dataContainerPath:bundleContainerPath:
snapshotContainerPathForGroupID:
snapshotContainerPathForSnapshot:
dataContainerPath
snapshotContainerPath
_dataContainerPath
_snapshotContainerPath
T@"NSString",R,C,N,V_snapshotContainerPath
T@"NSString",R,C,N,V_bundlePath
T@"NSString",R,C,N,V_dataContainerPath
T@"NSString",R,C,N,V_bundleContainerPath
sharedInstance
persistManifestData:forBundleIdentifier:
clearManifestDataForBundleIdentifier:
loadManifestDataForBundleIdentifier:
synchronizeForBundleIdentifier:withCompletion:
beginAccessBlockForBundleIdentifier:
endAccessBlockForBundleIdentifier:
_init
_persistCompatibilityInfo:forBundleIdentifier:
_clearCompatibilityInfoForBundleIdentifier:
_loadCompatibilityInfoForBundleIdentifier:
_bundleIdentifierHasDeniedLaunchInterface:
_bundleIdentifierDeniedLaunchInterfaceCount:
_addBundleIdentifierToLaunchInterfaceDenyList:
_removeBundleIdentifierFromLaunchInterfaceDenyList:
_storeForBundleIdentifier:
_queue
_cacheableBundleIdentifiers
_cachedStoresByBundleIdentifier
fetchImageForFormat:
fetchImage
fetchImageData:
hasProtectedContent
invalidateImage
initWithScheduler:snapshot:dataProvider:imageDataRequest:loggingPrefix:imageGenerationHandler:imageDataGenerationHandler:
performAsync:
scheduleGeneration
generate
_performImageDataGeneration:withHandler:
_shouldGenerateForSnapshot:reason:
_generate_lock_shouldGenerateForSnapshot:reason:
_generate_imageFromNewDataProvider:forSnapshot:imageDataHandler:
_generate_imageFromLegacyDataProvider:forSnapshot:imageDataHandler:
_generate
_weak_snapshot
_scheduler
_dataProvider
_didGenerateImageHandler
_didGenerateImageDataHandler
_loggingPrefix
_generate_handled_request
_generate_lock
_imageDataRequest
_dataProviderFetchType
performImageGenerationAsync:
performImageGenerationAsyncAndWait:
performImageDataGenerationAsync:withHandler:
performImageDataGenerationAsyncAndWait:withHandler:
_imageGenerationWorkloop
_imageGenerationQueue
_dataGenerationWorkloop
predicate
evaluateWithObject:
setScheme:
setRequiredOSVersion:
setInterfaceOrientationMask:
setFullScreen:
setImageScale:
setContentTypeMask:
setStatusBarStateMask:
scheme
requiredOSVersion
interfaceOrientationMask
isFullScreen
imageScale
contentTypeMask
statusBarStateMask
_setClientObject:forKey:
_removeClientObjectForKey:
_hasClientObjectForKey:
_clientObjectForKey:
_clientSettings
T@"NSString",C,N
TQ,N
T{CGSize=dd},N
Td,N
Tq,N
T@"XBDisplayEdgeInsetsWrapper",C,N
fullScreen
TB,N,GisFullScreen
scale
setScale:
isOpaque
setOpaque:
_scale
_opaque
Td,N,V_scale
opaque
TB,N,GisOpaque,V_opaque
context
fallbackSnapshotDataProvider
T@"XBSnapshotDataProviderContext",R,&,N
initWithRequest:contextID:opaque:
_snapshot
_cachedImage
_context
T@"XBSnapshotDataProviderContext",R,&,N,V_context
initWithCGImage:scale:orientation:
_initWithIOSurface:scale:orientation:
initWithSnapshot:interfaceOrientation:
Tq,R,N,V_interfaceOrientation
normalizeSnapshotName:
secureCodableCustomExtendedDataClasses
setSecureCodableCustomExtendedDataClasses:
_allSecureCodingClassesIncludingDefaultAndClientSpecified
isValidImageFileExtension:
dataForImage:withFormat:
_createCGImageWithPreferredOptions:fromCGImage:
T@"NSSet",C,N
logIdentifier
_commonInitWithIdentifier:
_initWithContainerIdentity:store:groupID:generationContext:
_fileLocation
_setFileLocation:
setExpirationDate:
expirationDate
path
_sanitizedPathForPath:
_setPath:
_setRelativePath:
filename
fileExists
isExpired
contentFrame
setContentFrame:
hasFullSizedContent
variants
variantWithIdentifier:
willDeleteVariant:
imageForInterfaceOrientation:
imageForInterfaceOrientation:generationOptions:
cachedImageForInterfaceOrientation:
loadImageForPreHeat
loadImage
_locked_loadImageViaGenerationContext:options:
_locked_loadImageViaGeneratorFunction:
_locked_synchronized_loadImageViaFile
loadImageWithGenerationOptions:
hasCachedImage
_synchronized_hasCachedImage:
purgeImage
beginImageAccessUntilExpiration
_synchronized_isExpired
_synchronized_evaluateImageAccessUntilExpirationEnablingIfNecessary:
beginImageAccess
endImageAccess
_beginPreHeatImageAccess
_endPreHeatImageAccess
isValid
isValidWithReason:
descriptionWithoutVariants
_manifestQueueDecode_setStore:
imageGenerator
clearImageGenerator
setImageGeneratingByProvider:withBlockingImageGenerator:
_hasGenerationContext
_referenceBounds
_path:isRelativeToPath:outRelativePath:
_determineRelativePathForPath:location:
_validateWithContainerIdentity:
_invalidate
_isInvalidated
_createVariantWithIdentifier:
_configureDefaultPathWithinGroupForFormat:
_configureWithPath:
_cacheImage:
_generateImageIfPossible
_setHasProtectedContent:
_shouldDeleteFileOnPurge:
_purgeCachedImageIfAppropriate:
descriptionForStateCaptureWithMultilinePrefix:
_descriptionBuilderWithMultilinePrefix:includeVariants:
variantID
setVariantID:
_setFilename:
fileFormat
creationDate
lastUsedDate
setLastUsedDate:
contentType
setContentType:
statusBarSettings
setStatusBarSettings:
classicMode
setClassicMode:
compatibilityMode
setCompatibilityMode:
backgroundStyle
setBackgroundStyle:
generationContext
extendedData
setExtendedData:
containerIdentity
setContainerIdentity:
setImageGenerator:
isImageOpaque
setImageOpaque:
imageOrientation
setImageOrientation:
dataProviderClassName
setDataProviderClassName:
_relativePath
fileLocation
setFileLocation:
imageTransform
setImageTransform:
_containerIdentity
_variantsByID
_variantID
_scheme
_requiredOSVersion
_path
_filename
_creationDate
_lastUsedDate
_expirationDate
_contentFrame
_contentType
_fileFormat
_imageScale
_imageOrientation
_statusBarSettings
_classicMode
_compatibilityMode
_backgroundStyle
_generationContext
_imageAccessCount
_extendedData
_invalidated
_fullScreen
_imageOpaque
_keepImageAccessUntilExpiration
_keepImageAccessForPreHeat
_hasProtectedContent
_loadImageLock
_baseLogIdentifier
_logIdentifier
_logContainerIdentifierDirty
_cachedImageTransaction
_imageGenerator
_dataProviderClassName
_imageTransform
T@"XBSnapshotContainerIdentity",C,V_containerIdentity
T@?,C,N,V_imageGenerator
T@"NSString",C,N,V_dataProviderClassName
relativePath
T@"NSString",C,N,G_relativePath,S_setRelativePath:,V_relativePath
T@"NSString",C,N,S_setPath:,V_path
T@"NSString",C,N,Gfilename,S_setFilename:,V_filename
T@"<XBSnapshotManifestStore>",R,N,G_store,V_store
T@"NSString",R,N
Tq,N,V_fileLocation
T@"NSString",C,N,V_variantID
Td,N,V_imageScale
imageOpaque
TB,N,GisImageOpaque,V_imageOpaque
T{CGAffineTransform=dddddd},N,V_imageTransform
Tq,N,V_imageOrientation
T@"XBApplicationSnapshotGenerationContext",R,N,V_generationContext
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_groupID
T@"NSString",C,N,V_scheme
T@"NSString",C,N,V_requiredOSVersion
Tq,R,N,V_fileFormat
T@"NSDate",R,N,V_creationDate
T@"NSDate",&,N,V_lastUsedDate
T@"NSDate",&,D,N
expired
TB,R,N,GisExpired
Tq,N,V_contentType
TB,N,GisFullScreen,V_fullScreen
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T@"XBStatusBarSettings",C,N,V_statusBarSettings
Tq,N,V_classicMode
Tq,N,V_compatibilityMode
Tq,N,V_backgroundStyle
T@"NSDictionary",C,V_extendedData
stream
setStream:
_stream
T^{__FSEventStream=},N,V_stream
initialize
handleTrackingStateChange
deleteAllSystemSnapshots
_manifestsByIdentity
manifest:didPurgeProtectedContentSnapshotsWithGroupIdentifiers:
initWithContainerIdentity:store:
initWithApplicationInfo:
containerPath
snapshotsForGroupID:
snapshotsForGroupID:matchingPredicate:
snapshotsForGroupID:fetchRequest:
snapshotsForGroupIDs:
snapshotsForGroupIDs:matchingPredicate:
snapshotsForGroupIDs:fetchRequest:
beginTrackingImageDeletions
endTrackingImageDeletions
createSnapshotWithGroupID:
createVariantForSnapshot:withIdentifier:
generateImageForSnapshot:dataProvider:writeToFile:completion:
generateImageForSnapshot:dataProvider:writeToFile:didGenerateImage:didSaveImage:
generateImageForSnapshot:dataProvider:writeToFile:imageGeneratedHandler:imageDataSavedHandler:
generateImageForSnapshot:dataProvider:options:imageGeneratedHandler:imageDataSavedHandler:
saveSnapshot:atPath:withContext:
_allSnapshotGroups
deleteAllSnapshots
deleteSnapshot:
deleteSnapshots:
deleteSnapshotsMatchingPredicate:
deleteSnapshotsUsingPredicateBuilder:
deleteSnapshotsForGroupID:
deleteSnapshotsForGroupID:matchingPredicate:
deleteSnapshotsForGroupID:predicateBuilder:
purgeSnapshotsWithProtectedContent
updateSnapshotsAPFSPurgability:
snapshotsConsideredUnpurgableByAPFS
beginSnapshotAccessTransaction:completion:
archive
delegate
setDelegate:
manifestImpl
_manifestImpl
_delegate
T@"XBApplicationSnapshotManifestImpl",R,W,N,V_manifestImpl
T@"<XBApplicationSnapshotManifestDelegate>",W,N,V_delegate
acquireManifestForContainerIdentity:store:creatingIfNecessary:
relinquishManifest:
_workloop_noteManifestInvalidated:
isUnderMemoryPressure
_snapshotPredicateForRequest:
_configureSnapshot:withCompatibilityInfo:forLaunchRequest:
_outputFormatForSnapshot:
_setContainerIdentity:
_commonInit
_initWithContainerIdentity:
_didGenerateImage:imageGenerationSignal:logIdentifier:imageGeneratedHandler:qos:
_didGenerateImageData:forSnapshot:imageWasGenerated:imageDataGenerationSignal:logIdentifier:didSaveHandler:qos:writeToFileIfSupported:
_snapshotGroupsByID
_generatableSnapshotForGroupID:generationContext:
_createSnapshotWithGroupID:generationContext:
_addSnapshotToGroup:
_access_addSnapshotToGroup:
_access_allSnapshotGroups
_noteDirtied
_synchronizeDataStoreWithCompletion:
_scheduleArchivingIfNecessaryWithCompletion:
_scheduleArchivingIfNecessaryWithDelay:completion:
_handleMemoryPressure
_access_doArchiveWithCompletions:
_access_validateWithContainerIdentity:
_reapExpiredAndInvalidSnapshots
_access_workloop_reapExpiredAndInvalidSnapshots
_access_accessSnapshotsWithBlock:completion:
_access_deletePaths:
_access_deleteSnapshots:
_access_purgeSnapshotsWithProtectedContent
_access_updateSnapshotsAPFSPurgability:
_access_snapshotsConsideredUnpurgableByAPFS
_access_gatherPaths:forSnapshot:
_access_snapshotsForGroupIDs:
_access_snapshotsForGroupIDs:matchingPredicate:
_access_snapshotsMatchingPredicate:
_access_snapshotGroupForID:creatingIfNeeded:
_imageAccessQueue_saveData:forSnapshot:
_workloop_incrementClientCount
_workloop_decrementClientCount
_workloop_checkClientCount
_workloop_reallyCheckClientCount
_descriptionForStateCaptureWithMultilinePrefix:
identity
_identity
_imageAccessFileManger
_reapingTimer
_invalidatedSignal
_clientCount
_pendingOperations
_archiveSchedulingQueue_synchronizeCompletions
_archiveSchedulingQueue_dirty
_archiveSchedulingQueue_scheduled
_accessLock
T@"XBSnapshotContainerIdentity",R,C,N,V_containerIdentity
T@"XBSnapshotManifestIdentity",R,C,N,V_identity
preheatServiceWithTimeout:
createLaunchImageGeneratorWithContext:asyncImageData:error:
captureLaunchImageForManifest:withCompatibilityInfo:launchRequests:createCaptureInfo:firstImageIsReady:withCompletionHandler:
_generateImageForSnapshot:inManifest:withContext:asyncImageData:dataProvider:scheduleAsyncGeneration:completion:
_addBadLaunchInterfaceToDenyList:forError:
_resetBadLaunchInterfaceCount:
_workQueue
_stateCaptureAssertion
initWithApplicationCompatibilityInfo:launchRequest:timeout:
applicationCompatibilityInfo
launchRequest
timeout
_applicationCompatibilityInfo
_launchRequest
_timeout
T@"XBApplicationLaunchCompatibilityInfo",R,N,V_applicationCompatibilityInfo
T@"XBLaunchStateRequest",R,C,N,V_launchRequest
Td,R,N,V_timeout
_initWithIdentifier:containerIdentity:
addSnapshot:
removeSnapshot:
snapshots
_snapshots
T@"NSString",R,C,D,N
T@"NSSet",R,C,N,V_snapshots
initWithServiceName:endpoint:
generateImageWithContext:captureInfo:error:
_appInfo
_sortableScheme
_sortableName
_sortableLaunchInterfaceIdentifier
_sortableRequiredOSVersion
_sortableStatusBarSettings
_interfaceOrientationMask
_contentTypeMask
T@"XBStatusBarSettings",R,&,N
TQ,R,N
sortDescriptorWithKey:ascending:comparator:
_propertyKeyForSnapshotKey:overriddenForNil:
initWithKey:ascending:comparator:
NSSortDescriptor
_stringForKey:
setKey:
ascending
setAscending:
comparator
setComparator:
_key
_ascending
_comparator
TQ,N,V_key
TB,N,V_ascending
T@?,C,N,V_comparator
T@"NSSortDescriptor",R,N
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
keyDescriptionForSetting:
valueDescriptionForFlag:object:ofSetting:
mutableCopyWithZone:
_initWithBSSettings:
isHidden
style
isBackgroundActivityEnabled
_settings
hidden
TB,R,N,GisHidden
Tq,R,N
backgroundActivityEnabled
TB,R,N,GisBackgroundActivityEnabled
setHidden:
setStyle:
setBackgroundActivityEnabled:
TB,D,N,GisHidden
Tq,D,N
TB,D,N,GisBackgroundActivityEnabled
fetchRequest
NSSortDescriptors
setPredicate:
sortDescriptors
setSortDescriptors:
fallbackGenerationContext
setFallbackGenerationContext:
_predicate
_sortDescriptors
_fallbackGenerationContext
T@"NSArray",R,C,N
T@"XBApplicationSnapshotPredicate",&,N,V_predicate
T@"NSArray",C,N,V_sortDescriptors
T@"XBApplicationSnapshotGenerationContext",&,N,V_fallbackGenerationContext
initWithDomain:code:userInfo:
initWithCode:bundleID:reason:fatal:
isFatal
shouldDeny
_fatal
_shouldDeny
fatal
TB,R,GisFatal,V_fatal
TB,R,V_shouldDeny
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
Q16@0:8
v24@0:8Q16
v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@40@0:8@16@24@32
Q24@0:8@16
@"NSArray"
@"NSOrderedSet"
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@24@0:8^{_NSZone=}16
v32@0:8{CGSize=dd}16
v24@0:8q16
{CGSize=dd}16@0:8
q16@0:8
@"FBSDisplayConfiguration"
@"XBDisplayEdgeInsetsWrapper"
{CGSize="width"d"height"d}
@52@0:8Q16@24@32@40B48
@44@0:8@16@24@32B40
v20@0:8B16
@"XBLaunchInterfaceConfiguration"
@"XBLaunchInterface"
@48@0:8{UIEdgeInsets=dddd}16
@48@0:8d16d24d32d40
{UIEdgeInsets=dddd}16@0:8
d16@0:8
@"NSArray"16@0:8
@24@0:8B16B20
v28@0:8@16B24
v40@0:8@16@?24@?32
v44@0:8@16@?24B32@?36
@32@0:8@16@24
v36@0:8@16@24B32
@"<XBApplicationLaunchRequestProviding>"
@"XBCacheDeleteRequestHandler"
@"<XBApplicationProviding>"
@"<XBSnapshotManifestStore>"
q24@0:8q16
B24@0:8q16
@28@0:8@16i24
@48@0:8@16@24@32@40
v32@0:8@16@24
v32@0:8@16@?24
v32@0:8@"NSData"16@"NSString"24
v24@0:8@"NSString"16
@"NSData"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?>24
q24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSCountedSet"
@"NSMutableDictionary"
@72@0:8@16@24@32q40@48@?56@?64
v24@0:8@?16
v32@0:8@?16@?24
B32@0:8@16^@24
@40@0:8@16@24@?32
@"XBApplicationSnapshot"
@"<XBApplicationSnapshotImageGenerationScheduling>"
@"<XBSnapshotDataProvider>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v24@0:8@?<v@?>16
v32@0:8@?<v@?>16@?<v@?>24
@"NSObject<OS_dispatch_workloop>"
v24@0:8d16
v32@0:8@16Q24
B24@0:8Q16
@24@0:8Q16
@"BSMutableSettings"
@24@0:8q16
@24@0:8o^{CGAffineTransform=dddddd}16
@"XBSnapshotDataProviderContext"16@0:8
@"UIImage"24@0:8q16
@"UIImage"16@0:8
@"NSData"24@0:8o^{CGAffineTransform=dddddd}16
@"<XBSnapshotDataProvider>"16@0:8
@32@0:8@16I24B28
@"_FBSSnapshot"
@"UIImage"
@"XBSnapshotDataProviderContext"
@32@0:8@16q24
^{CGImage=}32@0:8@16^{CGImage=}24
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@32@0:8q16Q24
B24@0:8^@16
@?16@0:8
B40@0:8@16@24^@32
@32@0:8@16^q24
@28@0:8@16B24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"XBSnapshotContainerIdentity"
@"NSDate"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"XBStatusBarSettings"
@"XBApplicationSnapshotGenerationContext"
@"NSDictionary"
@"BSAtomicFlag"
@"NSObject<OS_os_transaction>"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
^{__FSEventStream=}16@0:8
v24@0:8^{__FSEventStream=}16
^{__FSEventStream=}
v32@0:8@"XBApplicationSnapshotManifest"16@"NSArray"24
v44@0:8@16@24B32@?36
v52@0:8@16@24B32@?36@?44
v56@0:8@16@24Q32@?40@?48
v40@0:8@16@24@32
@"XBApplicationSnapshotManifestImpl"
@"<XBApplicationSnapshotManifestDelegate>"
@36@0:8@16@24B32
v48@0:8B16@20@28@?36I44
v68@0:8@16@24B32@36@44@?52I60B64
v32@0:8d16@?24
B32@0:8@16@24
@"XBSnapshotManifestIdentity"
@"NSFileManager"
@"BSContinuousMachTimer"
@"BSAtomicSignal"
@"NSMutableArray"
@?36@0:8@16B24^@28
v60@0:8@16@24@32B40@?44@?52
v64@0:8@16@24@32B40@44B52@?56
@"<BSInvalidatable>"
@40@0:8@16@24d32
@"XBApplicationLaunchCompatibilityInfo"
@"XBLaunchStateRequest"
@"NSMutableSet"
I40@0:8@16^@24^@32
@36@0:8Q16B24@?28
@32@0:8Q16^B24
B56@0:8@16@24q32@40Q48
@32@0:8@16Q24
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
@"XBApplicationSnapshotPredicate"
@44@0:8q16@24@32B40
