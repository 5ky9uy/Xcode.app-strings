arrayWithObjects:count:
init
providerWithStore:
initWithContactStore:accountProvider:
initWithImplementation:accountProvider:
actionsForEnablingDataclassOnAccount:forDataclass:
accountType
identifier
isEqualToString:
_isLocalSourceEmpty
actionWithType:
destructiveActionWithType:
_areSourcesEmptyForAccount:
type
_createABAccountForACAccount:withChildren:
os_log
_disableLocalSourceIfNeededAddingAccount:
_copyDefaultAddressBookSourceForAccount:withChildren:createIfNecessary:
_mergeContactsFromLocalSourceIntoSource:
username
_setLocalSourceEnabled:
_copyABAccountForACAccount:withChildren:
_mergeContactsIntoLocalSourceFromABAccount:
_removeContactsAccount:
_removeABAccountForACAccount:withChildren:
_enableLocalSourceIfNecessaryIgnoringAccount:
_drainLocalStore
implementation
_cn_map:
createAccountForParentACAccountWithIdentifier:withChildACAccountIdentifiers:
removeAccountForParentACAccountWithIdentifier:withChildACAccountIdentifiers:
emptyLocalContainer
mergeContactsFromLocalContainerToContainer:
mergeContactsIntoLocalContainerFromContainersOfAccount:
removeAccount:
accountForParentACAccountWithIdentifier:withChildACAccountIdentifiers:
defaultContainerForParentACAccountWithIdentifier:withChildACAccountIdentifiers:createIfNecessary:
isLocalContainerEmpty
areContainersEmptyForParentACAccountWithIdentifier:
MCIsManaged
setLocalContainerEnabled:
setContainersEnabled:forParentACAccountWithIdentifier:withChildACAccountIdentifiers:
accountProvider
allAccountTypes
countByEnumeratingWithState:objects:count:
accountsWithAccountType:
parentAccountIdentifier
isEnabledForDataclass:
dataclasses
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
actionsForDeletingAccount:forDataclass:
actionsForDeletingAccount:forDataclass:withError:
actionsForEnablingDataclassOnAccount:forDataclass:withError:
actionsForDisablingDataclassOnAccount:forDataclass:
actionsForDisablingDataclassOnAccount:forDataclass:withError:
actionsForAddingAccount:forDataclass:
actionsForAddingAccount:forDataclass:withError:
performAction:forAccount:withChildren:forDataclass:withError:
performAction:forAccount:withChildren:forDataclass:
_setSourceEnabled:forAccount:withChildren:
.cxx_destruct
_accountProvider
_implementation
accountStore
accountWithIdentifier:
childAccountsForAccount:
syncableDataclasses
containsObject:
initWithAccountStore:
childACAccountIdentifiersForACAccountWithIdentifier:
isACAccountWithIdentifierSyncable:
_accountStore
accountChildAccountsPairs
first
second
_cn_flatten
_cn_reduce:initialValue:
_cn_filter:
_cn_firstObjectPassingTest:
_cn_any:
initWithAccounts:
_accountChildAccountsPairs
providerWithAccounts:
initWithAccountProvider:
containersInAccount:
_cn_each:
updateContainer:
createAndExecuteSaveRequest:errorBlock:
localContainer
mutableCopy
setEnabled:
isContainerEmpty:
array
_cn_addNonNilObject:
addObjectsFromArray:
containersInAccountWithExternalIdentifier:
contactsInContainer:
deleteContact:
defaultContainerInAccount:
addContainer:toAccountWithIdentifier:
setContainer:asDefaultContainerOfAccountWithIdentifier:
syncingACAccountIdentifierForParentACAccountWithIdentifier:withChildrenACAccountIdentifirs:
accountWithExternalIdentifier:
initWithExternalIdentifier:
addAccount:
externalIdentifierString
contactStore
moveContacts:fromContainer:toContainer:error:
pairWithFirst:second:
moveContacts:fromContainer:toContainer:
initWithKeysToFetch:
setUnifyResults:
predicateForContactsInContainerWithIdentifier:
setPredicate:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForLocalContainerIncludingDisabled:
containersMatchingPredicate:error:
firstObject
predicateForDefaultContainerForAccountWithIdentifier:
predicateForAccountWithExternalIdentifier:
accountsMatchingPredicate:error:
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
addObject:
executeSaveRequest:error:
isEnabled
_contactStore
v8@?0
com.apple.contacts.accounts-plugin
contacts-dataclass-owner
@"NSString"16@?0@"ACAccount"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
accountProvider
T@"<CNACAccountProvider>",R,N,V_accountProvider
implementation
T@"<CNContactsDataclassOwnerImplementation>",R,N,V_implementation
accountStore
T@"ACAccountStore",R,N,V_accountStore
@"NSArray"24@?0@"NSArray"8@"CNPair"16
B16@?0@"ACAccount"8
B16@?0@"CNPair"8
@"ACAccountType"16@?0@"ACAccount"8
accountChildAccountsPairs
T@"NSArray",R,N,V_accountChildAccountsPairs
v16@?0@"CNMutableContainer"8
v16@?0@"CNSaveRequest"8
v16@?0@"NSError"8
@"NSArray"16@?0@"NSString"8
B16@?0@"CNContainer"8
v16@?0@"CNMutableContact"8
@"CNPair"16@?0@"CNContainer"8
v16@?0@"CNPair"8
v24@?0@"CNContact"8^B16
@"CNMutableContainer"16@?0@"CNContainer"8
@"CNMutableContact"16@?0@"CNMutableContact"8
contactStore
T@"CNContactStore",R,N,V_contactStore
Created an Apple Account source and now disabling the AB local source
Merged AB local data to an Apple Account source and now disabling the AB local source
Failed to create ABAccount for iCloud account %@
Will merge AB data from an Apple Account source to the AB local source, so first enable the AB local source
Could not move contacts from iCloud source into local source!
Failed to remove AB source for iCloud account %@
Created a %@ source and now disabling the AB local source to hide local AB data
Created a %@ source and now disabling the AB local source
It is necessary to disable the AB local source
It is necessary to enable the AB local source
failed to enable containers: %@
failed to enable local container: %@
error deleteing contacts: %@
error creating container: %@
error setting container as default container: %@
error creating account %@: %@
cound not remove account %@: %@
did not migrate contacts to from local container to container %@: %@
did not migrate contacts to from container %@ to local container: %@
no account syncing Contacts found on parent account %@
did not find local container %@
error fetching account %@ %@
error fetching containers for account %@ %@
CNContactsDataclassOwner
ACDDataclassOwnerProtocol
NSObject
_CNACAccountStoreBasedProvider
_CNACAccountStaticProvider
CNACAccountProvider
CNContactsDataclassOwnerContactsImplementation
CNContactsDataclassOwnerImplementation
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16@24
@40@0:8@16@24^@32
B56@0:8@16@24@32@40^@48
B48@0:8@16@24@32@40
@"NSArray"16@0:8
@"NSArray"32@0:8@"ACAccount"16@"NSString"24
@"NSArray"40@0:8@"ACAccount"16@"NSString"24^@32
B56@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40^@48
B48@0:8@"ACDataclassAction"16@"ACAccount"24@"NSArray"32@"NSString"40
B32@0:8@16@24
@36@0:8@16@24B32
v24@0:8@16
v20@0:8B16
v36@0:8B16@20@28
v16@0:8
@"<CNACAccountProvider>"
@"<CNContactsDataclassOwnerImplementation>"
@24@0:8@16
@"ACAccountStore"
@"NSArray"
@"NSArray"24@0:8@"ACAccountType"16
@"NSArray"24@0:8@"NSString"16
B24@0:8@"NSString"16
v36@0:8B16@"NSString"20@"NSArray"28
@"CNContainer"36@0:8@"NSString"16@"NSArray"24B32
@"CNAccount"32@0:8@"NSString"16@"NSArray"24
B32@0:8@"NSString"16@"NSArray"24
B24@0:8@"CNAccount"16
B24@0:8@"CNContainer"16
B40@0:8@16@24@32
B32@0:8@?16@?24
@"CNContactStore"
