%@: Network is reachable, so triggering reachability block
%@: Notified that network is reachable, but we weren't asked to sync when reachable so ignoring.
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
DADAccessManager is Disabled. Cancelling Connection
DADAccessManager event %@ clientName %@ is Entitled
DADAccessManager event %@ clientName %@ is NOT Entitled
DADAccessManager Received connection event %@ for clientName %@
DADAccessManager number of Current Clients %lu and they are %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing DADClient with the same bundle id and with NULL xpc connection, using this DADClient and reconnecting. The client ID is: 1%@
Found an existing DADClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this DADClient and reconnect. The client ID is: %@
Found an existing DADClient with the same bundle id with same xpc connection. The client ID is: %@
DADAccessManager Adding New Client for %@ for clientName %@
DADAccessManager No New Clients For Event %@ clientName %@
DADAccessManager Initializing
DADAccessManager REMOVING client %@ from Current Clients %@
Found an existing DADClient with the same bundle id, not changing the folder list. The client ID is: %@
Add DADClient for client %@
Could not get an account with the ID [%@]
[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
DADAgentManager: Fetching active agents. count = %d, agents = %@
No holiday subscribed calendar account exists. Creating a new one
Error saving account %@: %@
Loading agents
Not creating an agent for account info %@ (%{public}@), it refused to init itself
Creating an agent for account info %@ (%{public}@)
Not creating an agent for account info %@ (%{public}@) because it should not be created
Loading up agent %@ for account "%@" (%{public}@)
Not loading an agent for account "%@" (%{public}@), because agentClass is nil
Not loading an agent for account "%@" (%{public}@), because it is disabled
DADAgentManager: Settings active agents. count = %d, agents = %@
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
DADAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType %d
The dataaccessd does not support currentPolicyKeyForAccount method, which is for Exchange acocunts
The dataaccessd does not support requestPolicyUpdateForAccount method, which is for Exchange acocunts
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
The dataaccessd does not support addPersistMonitoringAccountID method, which is for Exchange acocunts
The dataaccessd does not support removePersistMonitoringAccountID method, which is for Exchange acocunts
The dataaccessd does not support clearPersistMonitoringAccountID method, which is for Exchange acocunts
Removing subscribed calendar, as it's account id %@ isn't one of the account ids I know about: %@
AppleAccounts returned an error while trying fetch accounts: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
ClearOrphanStores : Error Fetching com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Error Fetching Accounts of Type com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Adding a Legacy CardDAV Account %@ To list of AccountIDs
ClearOrphanStores : ===== Starting CalDAV Orphan Store Cleanup ======
ClearOrphanStores : Current DA CalDAV (events) Account IDs : %@
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Turning it off
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Leaving it alone because there are events in the local store
ClearOrphanStores : ===== End CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ===== Starting CardDAV Orphan Store Cleanup ======
ClearOrphanStores : Current DA CardDAV and LegacyCardDAV Account IDs : %@
ClearOrphanStores : Checking if contact accountID %@ is a know DA CardDAV AccountID.
ClearOrphanStores : ACCOUNTDCOERROR Removing ABAccount, as its account id %@ isn't one of the account ids that I know about %@ %@
ClearOrphanStores : Contact accountID %@ is a known DA CardDAV AccountID - NoChanges
ClearOrphanStores : ACCOUNTDCOERROR Removing contact store, as it's account id %@ isn't one of the account ids I know about: %@
AClearOrphanStores : CCOUNTDCOERROR Removing contact search store, as it's account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing AB change tracking client, as its change tracking identifier "%@" doesn't belong to one of the account ids I know about: %@
ClearOrphanStores : Deleting all iCloud delegate databases as no primary iCloud contacts account is enabled or exists
ClearOrphanStores : ===== End CardDAV Orphan Store Cleanup ======
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
DAAgentManager: Device is Unlocked %d and PastBuddy is %d
DAAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
DAAgentManager: System Ready Calling Load Agents Block
DAAgentManager: System Not Yet Ready. We are Not Loading Agents
DAAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
DATransaction starting, ID: %@
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
Received cellular data usage changed notification. Checking if a refresh is required.
User allowed cellular or wifi data for BundleID %{public}@
Wireless data usage policy changes do not affect any existing agents; no refreshes will be done.
Refreshing account %{public}@ because wireless data use is now allowed for %{public}@ and might not have been before.
Loading our agents
Removing CFURLCache entries
XPC: Received darwin notification: %@
XPC: Received PCPreferencesDidChangeNotification due to user change
XPC: Received CDBPreferences_Notification_kCalPreferredDaysToSyncKey
XPC: Received com.apple.dataaccess.checkHolidayCalendarAccount
Agents loaded and monitoring.  They are %@
DAAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
DADAgentManager asked to enableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
DADAgentManager asked to disableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
The dataaccessd does not support setFolderIdsThatExternalClientsCareAboutAdded method, which is for Exchange acocunts
The dataaccessd does not support reportFolderItemsSyncSuccess method, which is for Exchange acocunts
The dataaccessd does not support processFolderChange method, which is for Exchange acocunts
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
DAAgentManager: System Ready Check Fired with Name %@
Creating a new DADClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for DADClient %@
Destroying DADClient %p for Connection %p and ClientID %@
Not stop monitoring account %@ folder %@ because other clients are watching it
PersistentClientCleanup called on disabled client. Will not perform any actions.
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF DADClient Bumping priority to refresh
Received begin monitoring folders request with persistent flag: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
No folders watched. Marking not persistent. Transaction: %@
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
Remote client disconnected and reconnected while stoping monitoring folders.
Remote client disconnected and reconnected while resuming monitoring folders.
Remote client disconnected and reconnected while suspending monitoring folders.
Requested to start monitoring agents with unrecognized client token %d. Forcing a reload.
StopMonitoringAgents timeout reached! %{public}@ (%i) requested we stop monitoring agents but didn't tell us to resume within %i seconds of the last stop. Assuming it's broken and starting monitoring agents again anyway with client tokens: %@
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Ignoring call to _startMonitoringAgents: with missing client token
Ignoring call to _handleAccountChange: with missing account change info data
_handleAccountChange: Failed to decode account change info: %@
Cannot find account with identifier %{public}@
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%lx isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%lx, isUserRequested: %d
[DADAgentManager sharedManager] number of Current Agents %lu and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: DADClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
_requestFolderListUpdateForAccountId %@, dataclass 0x%lx, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
%@: error processing meeting 
Remote client disconnected and reconnected while processing meeting request.
_resetCertWarningsForAccountWithId %@ dataclasses %lx
error resetting cert warnings account ID %@ dataclasses 0x%lx
Unable to read data to decode folder change: %@
Swallowing decoder exception of %@, treating as null data
No status reports available
_resetThrottleTimersForAccountWithId %@
_beginDownloadingAttachment UUID: %@, accountID: %@
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
_respondToSharedCalendar UUID: %@, response: %ld, accountID: %@
_reportSharedCalendarAsJunk UUID: %@, accountID: %@
DATransaction starting, ID: %{public}@
_fetchOfficeHours accountID: %{public}@
_setOfficeHours accountID: %{public}@
_cancelDownloadingSubscribedCalendar downloadID: %@
Received a cancel for subcal download %@, but that download doesn't exist any more
Received a password for subcal download %@, but that download doesn't exist any more
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
Starting granted delegates list request with accountID: [%@]
Starting update-granted-delegate-permission request with accountID: [%@]
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
Launching %@
Failed to launch %@: %@
_manageCalDAVServerSimulatorWithHostname called with nil hostname
_manageCalDAVServerSimulatorWithHostname called with unrecognized action: %@
Client of DADClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
Client %@ (%i) is not authorized to send message %@
unknown request sent to client.
request: %@
Unknown message: %@
Remote client disconnected and reconnected while sending a message it was not authorized to send.
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
Dataaccess Migrator Performing Synchronous Migration
Dataaccess Migrator Done Synchronous Migration. Updating Version
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
DA launched on network connectivity
Agents have completed their first start after launch.
DA launched on network connectivity - DONE
DA launched on network connectivity - asked to defer, deferring now
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %ld. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
No valid document after downloading subscribed calendar
Received a password, but don't have a password continuation block.
-[DADClientSubscribedCalendarDownloadDelegate finishWithError:summary:] called while we were waiting for a password. (error = %@, summary = %@)
DADClientSubscribedCalendarDownloadDelegate finished with error %@
Couldn't archive summary %@: %@
Missing required container identifier
Forcing APS environment to %@
Setting our enabled APS topics to %@
Performing token registration; Wrapper %@ is in state %d and its last push registration time was %@ (%f)
Skipping token re-registration; wrapper %@ is in state %d and its last push registration time was %@ (%f)
No public token. We won't be re-registering our tokens with the server
Timer fired. Re-registering everything with APS
Push registration failed for delegate %@. Falling back to poll.
Resuming XPC Activties for polling
Suspending topic "%@" for delegate %@
Resuming XPC Fetch Activities for polling
Resuming topic "%@" for delegate %@
Account "%@" (%{public}@): Resuming Push Delegate's PC style changed from %d to %d
Account "%@" (%{public}@): Suspending push and resuming XPC Activity for polling
Push settings changed for %lu accounts and remained the same for %i.
Received token %@ from APS. Registering all delegates with their servers
Received a message from APS for topic %@ with user info %@.
Received an APS push for %@ but we don't have any enabled delegates registered for that topic.
Enabled waiters: 
Suspended waiters: 
Waiter %@: %@
Registering delegate %@ for PC notifications
Begin Unregistering delegate %@ for all PC and APS notifications
Unregistering delegate %@ for all PC and APS notifications
Shutdown: Wrapper %@ Leaving push topics regiestered. delegate %@ for all PC and APS notifications
Delegate %@ was unregistered, but it was never registered
Registering daily refresh xpc activity.
Updating criteria for daily refresh xpc activity.
Unregistering daily refresh xpc activity.
Registering delegate %@ for topic %@ in environment %@
Delegate is not set to push, so putting it on the suspended queue
Removing refresh manager delegate for account %@ from topic %@
Delegate %@ tried to unregister for the topic %@, but that delegate is not registered with the refresh manager
No more delegates for any topic. Tearing down APS
Setting ourself enabled for these APS topics: %@
Resuming account %@ for polling
Delegate %@ finished a refresh but it is not registered with the refresh manager
Delegate %@ told us to retry a refresh later but it is not registered with the refresh manager
The token registration session became invalid for account ID %@: %@
Token registration session became invalid for account %@
The token registration task failed to load for account ID %@: %@
Token registration task finished for account %@
The server accepted our push token request (status %d)
The server returned a status of %d to our token registration request. Falling back to PC. Server response headers are %@
The server returned a response of "%@"
Can authenticate against protection space %@? %@
Cancelling authentication because it's already failed
Received an authentication challenge for account %@ method %@
Responding to authentication challenge with username %@ and password
Token registration - Continuing without credential for challenge
Token registration - Waiting for runloop callback to decide what to do
Can't send a token registration for %@ because it doesn't implement serverTokenRegistrationURL.
Registering token %@ with the server at %@
DADClientOfficeHoursRequestDelegate finished with error %@
DADClientOfficeHoursRequestDelegate canceled, but could not find an account with the ID %{public}@ to cancel the request
Invalid DAReachability subclass (%@) does not implement -_startMonitoringReachablity
Invalid DAReachability subclass (%@) does not implement -_stopMonitoringReachablity
Reachability changed notification %@
XPC: Cancelling Retry Activity for account "%@" (%{public}@) retryActivityIdentifier: %s
%@: Stopping XPC Activities for Refreshing Collections
%@: Cancelling pending Token Registration request
Delegate (%@) returned invalid fetch interval %lli; using system default
Don't start fetch because either DAAccount is nil or account description is nil
XPC: Registering Fetch Activity for account "%@" (%{public}@) retryActivityIdentifier: %s, Interval %lld
Updating criteria for fetch xpc activity for account "%@" (%{public}@)
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
Start fetching in automatically mode for account "%@" (%{public}@)
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
XPC: Performing Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Manual Sync Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Starting a Temp Sync Fetch Activity before Transitioning to Push for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Cancelling Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s
Performing token registration request for %@ with watched collections %@
Refreshing delegate %{public}@
Retry activity  fired for delegate %{public}@
Daily refresh activity fired for delegate %{public}@
Setting a timer to refresh the collections %@ for delegate %@ after %f seconds
DADClientSettingsDelegate initialized.
DADClientSettingsDelegate dealloced.
DADClientSettingsDelegate finished with status %ld.
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Ignoring probe request for "%@" as we already have one outstanding
The babysitter has put this account in timeout, so giving up on this probe sync. %@
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" (%{public}@) couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
%@ %@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
account
T@"DAAccount",&,N,V_account
lastRetryTimeout
Td,N,V_lastRetryTimeout
syncWhenReachable
TB,N,V_syncWhenReachable
networkReachableBlock
T@?,C,N,V_networkReachableBlock
isWaitingForPassword
TB,N,V_isWaitingForPassword
isMonitoring
TB,N,V_isMonitoring
trustHandler
T@"DATrustHandler",R,N
publicDescription
T@"NSString",R,N
com.apple.dataaccess.dataaccessd.PersistentPush
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on DADAccessManager.  Use +sharedManager instead.
Client %@ (%i) has %lu outstanding stop requests
mainConnection
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
clients
T@"NSMutableArray",&,N,V_clients
addressBook
T^v,R,N,V_addressBook
DADAgentsStartedNotification
DADAgentsStoppedNotification
com.apple.purplebuddy.setupdone
com.apple.dataaccessd
v8@?0
activeAgentsQueue
DataAccess
AccountInformation.plist
DAAgentClass
HOLIDAY_CALENDAR_DESCRIPTION
v20@?0B8@"NSError"12
Identifier
com.apple.eas.account
DADAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
com.apple.notifyd.matching
PCPreferencesDidChangeNotification
com.apple.dataaccess.checkHolidayCalendarAccount
v16@?0@"DAAgent"8
com.apple.dataaccess.account
type
disableMonitoringAgents
=======
(Skipped %lu agents without interesting state)
Outstanding shutdown tokens: %lu
Somebody isn't maintaining their account setup correctly
subCalHandlers
T@"NSMutableArray",&,N,V_subCalHandlers
nextDisableMonitoringAgentsToken
TQ,N,V_nextDisableMonitoringAgentsToken
disableMonitoringAgentsTokens
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
activeAgents
T@"NSArray",R,N
Library/Preferences/com.apple.dataaccess.activesync
DADRequestClientStatusDumpNotification
DADClient.m
DADClient already has a connection. Client bundle ID is: %@
(unknown)
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[DADClient _beginMonitoringFolders:]
v12@?0B8
B8@?0
-[DADClient _stopMonitoringFolders:]
-[DADClient _resumeMonitoringFolders:]
-[DADClient _suspendMonitoringFolders:]
dataaccessd
-[DADClient _requestFolderContentsUpdate:]
-[DADClient _requestAllFolderContentsUpdate:]
-[DADClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[DADClient _processMeetingRequests:]
-[DADClient _asyncProcessMeetingRequests:]
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
v16@?0@"NSArray"8
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
Attachment UUID is NULL when cancelling attachment download.
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
'accountID' is nil when starting granted delegates list request.
'accountID' is nil when starting update-granted-delegate-permission request.
'grantedDelegateData' is nil when starting update-granted-delegate-permission request.
Failed to unarchive granted delegate: %@
'accountID' is nil when starting calendar directory search.
v16@?0@"NSError"8
com.apple.dataaccess.statusreportaggregator
com.apple.private.dataaccessd.internal_tool
application-identifier
AAACCOUNTS.com.apple.accountsd
conn
T@"NSObject<OS_xpc_object>",&,N,V_conn
watchedIDs
T@"NSMutableDictionary",&,N,V_watchedIDs
busyIDs
T@"NSMutableDictionary",&,N,V_busyIDs
updatedIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
accountTimers
T@"NSMutableDictionary",&,N,V_accountTimers
actionDelegatesById
T@"NSMutableDictionary",&,N,V_actionDelegatesById
clientName
T@"NSString",&,N,V_clientName
clientPID
Ti,N,V_clientPID
clientBundleID
T@"NSString",&,N,V_clientBundleID
clientUniqueID
T@"NSString",&,N,V_clientUniqueID
agentMonitoringTokens
T@"NSMutableDictionary",&,N,V_agentMonitoringTokens
simulatedCalDAVHostnames
T@"NSCountedSet",&,N,V_simulatedCalDAVHostnames
persistent
TB,R,N,V_persistent
outstandingStopMonitoringAgentRequests
TQ,R,N
folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
lastFolderWipeRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
deferredFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
DA-Blocking Task
LogoutReceived
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
DataAccess State
@"NSString"8@?0
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
com.apple.dataaccess.connected
userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
Received notificaion "%@" indicating a language change.  Going to exit to pick up new locale support
SyncWindow=%i
query
T@"DASearchQuery",&,N,V_query
queryResultData
T@"NSData",&,N,V_queryResultData
webcal
http
https
#%02X%02X%02X
SubCalValidationTask
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
folder
T@"DAFolder",&,N,V_folder
hasRemoteChanges
TB,N,V_hasRemoteChanges
isInitialUberSync
TB,N,V_isInitialUberSync
actions
T@"NSArray",&,N,V_actions
isResyncAfterConnectionFailed
TB,N,V_isResyncAfterConnectionFailed
isResyncAfterServerError
TB,N,V_isResyncAfterServerError
containsPostponedActions
TB,N,V_containsPostponedActions
com.apple.dataaccess
CardDAV-changehistory
os_log
T@"NSObject<OS_os_log>",R,N
contactStore
T@"CNContactStore",R,N,V_contactStore
com.apple.dataaccessd.darefresh.pcqueue
DARefreshManager enabled wrappers:
Topic "%@" {
DARefreshManager suspended wrappers:
DARefreshManager wrappers:
production
development
demo
DARefreshManager.m
Couldn't come up with an env string for DAEnvString %@
com.apple.dataaccess.dataaccessd.aps
com.apple.dataaccess.dataaccessd.aps.dev
com.apple.dataaccess.dataaccessd.aps.demo
1051051051051051051051051051051051051051051051051051051051051050
Delegate %@ tried to register for a nil topic.
enabledTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_enabledTopicWrappersByEnv
suspendedTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_suspendedTopicWrappersByEnv
wrappers
T@"NSMutableSet",&,N,V_wrappers
wrappersForDailyRefresh
T@"NSMutableSet",&,N,V_wrappersForDailyRefresh
dailyRefreshInitialized
TB,N,V_dailyRefreshInitialized
connection
T@"APSConnection",&,N,V_connection
apsConnections
T@"NSMutableDictionary",&,N,V_apsConnections
tokenRegistrationTimer
T@"NSTimer",&,N,V_tokenRegistrationTimer
pcQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pcQueue
persistAPSAfterShutdown
TB,N,V_persistAPSAfterShutdown
com.apple.dataaccess.dataaccessd.dailyrefresh
%@?token=%@&key=%@
POST
User-Agent
wrapper
T@"DARefreshWrapper",W,N,V_wrapper
onBehalfOfBundleIdentifier
T@"NSString",&,N,V_onBehalfOfBundleIdentifier
token
T@"NSData",W,N,V_token
pushKey
T@"NSString",W,N,V_pushKey
hsa2Session
T@"AKAppleIDSession",&,N,V_hsa2Session
finished
TB,N,V_finished
delegate
T@"<DATokenRegistrationDelegate>",W,N,V_delegate
request
T@"NSMutableURLRequest",&,N,V_request
session
T@"NSURLSession",&,N,V_session
task
T@"NSURLSessionDataTask",&,N,V_task
@"NSString"24@?0@"DAAccount"8^@16
requestID
T@"NSString",&,N,V_requestID
com.apple.dataaccess.DAReachability
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
com.apple.dataaccess.dataaccessd.retry.%@
Push
Poll
Manual
UNKNOWN!
com.apple.dataaccess.dataaccessd.fetch.%@
<DARefreshWrapper 
 for delegate %@
: Push state %d, style %@
, last registration: %@
, %ld outstanding token registrations
tokenRegistrations
T@"NSMutableSet",&,N,V_tokenRegistrations
refreshReason
Ti,N,V_refreshReason
refreshCollections
T@"NSMutableSet",&,N,V_refreshCollections
fetchInterval
Tq,N,V_fetchInterval
T@"<DARefreshManagerDelegate>",W,N,V_delegate
pushState
Ti,N,V_pushState
pushRegistrationTime
T@"NSDate",&,N,V_pushRegistrationTime
curStyle
Ti,N,V_curStyle
isUpdate
TB,N,V_isUpdate
requestParams
T@"DAOofParams",&,N,V_requestParams
responseParams
T@"DAOofParams",&,N,V_responseParams
attachmentUUID
T@"NSString",&,N,V_attachmentUUID
downloadID
T@,&,N,V_downloadID
%@Probe
optionsProbe
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
optionsTimeoutTimer
T@"NSTimer",&,N,V_optionsTimeoutTimer
DADClientDelegate.m
finishWithError: should be implemented in the subclass
client
T@"DADClient",W,N,V_client
accountID
T@"NSString",&,N,V_accountID
consumerCancelled
TB,N,V_consumerCancelled
delegateID
T@"NSString",&,N,V_delegateID
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
calendarID
T@"NSString",&,N,V_calendarID
shareID
T@"NSString",&,N,V_shareID
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
DaemonAdditions
DAAgent
DAReachabilityClient
NSObject
DARefreshManagerDelegateSupport
CalendarSupport
DADAccessManager
DADaemonPowerAssertionManager
DADClientGrantedDelegatesListResponseDelegate
DAEventsGrantedDelegatesListResponseConsumer
_DAChangeHistoryABLegacyClerk
DADAgentManager
DADClient
DADClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
DADClientAccountTimers
DADMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
DADClientContactsSearchDelegate
DASearchQueryConsumer
DADClientSubscribedCalendarDownloadDelegate
SubCalValidationTaskDelegate
SubCalDATaskTrustDelegate
SubCalDATaskPasswordDelegate
DAFolderSyncRequest
_DAChangeHistoryContactsClerk
DARefreshManager
DATokenRegistrationRequest
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
DADClientOfficeHoursRequestDelegate
DAEventsOfficeHoursRequestResponseConsumer
DAReachability
DACPNetworkObserverReachability
DARefreshWrapper
DATokenRegistrationDelegate
DADClientSettingsDelegate
DASettingsResponseDelegate
DADClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DADClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
DADClientUpdateGrantedDelegatePermissionResponseDelegate
DAEventsUpdateGrantedDelegatePermissionResponseConsumer
DADStatusReportAggregator
DACoreDAVAgent
DABabysittable
DADClientDelegate
DADClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
DAChangeHistoryClerk
deviceWillSleep
deviceDidWake
init
setAccount:
addToCoreDAVLoggingDelegates
account
trustHandler
stateString
syncWhenReachable
networkReachableBlock
setSyncWhenReachable:
setNetworkReachableBlock:
sharedReachability
addDelegate:
removeDelegate:
setIsMonitoring:
shutdown
removeFromCoreDAVLoggingDelegates
backingAccountInfo
identifier
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
networkReachable
initWithAccount:
observeReachabilityWithBlock:
stopObservingReachability
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
publicDescription
isMonitoring
lastRetryTimeout
setLastRetryTimeout:
isWaitingForPassword
setIsWaitingForPassword:
.cxx_destruct
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
saveXpcActivity:
sharedInstance
agentClassForACAccount:
agentClass
shared
get_kCalPreferredDaysToSyncKey
get_kCalRemindersPreferredDaysToSyncKey
preferredEventDaysToSync
preferredToDoDaysToSync
UTF8String
setMainConnection:
mainConnection
isDisabled
stringWithUTF8String:
clients
count
countByEnumeratingWithState:objects:count:
clientBundleID
isEqualToString:
rawConnection
reconnectWithConnection:
persistentClientCleanup
initWithConnection:clientID:
addObject:
exceptionWithName:reason:userInfo:
raise
setClients:
_setupServerConnection
_init
dealloc
removeObject:
initWithClientID:
beginMonitoringPersistentFolders:forAccount:
clientUniqueID
isMonitoringAccountID:folderID:
copy
outstandingStopMonitoringAgentRequests
clientName
clientPID
appendFormat:
sharedManager
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
isAccountID:folderID:watchedByClientBesides:
_mainConnection
_clients
accountID
accountWithAccountID:
requestGrantedDelegatesListWithConsumer:
errorWithDomain:code:userInfo:
finishWithError:
finished
setFinished:
domain
code
cancelGrantedDelegatesListRequestWithID:
client
setObject:forKeyedSubscript:
delegateID
archivedDataWithRootObject:
delegateWithIDIsGoingAway:
grantedDelegatesListRequestFinishedWithResults:error:
performRequest
_requestID
_results
addressBook
asSource
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
_addressBook
sharedRunLoop
getCFRunLoop
useContactsFramework
contactStore
providerWithContactStore:
abDB
providerWithAddressBook:
clerkWithContactStore:
clerkWithAddressBook:
activeAgents
objectAtIndexedSubscript:
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
initWithAccountType:
bundleForClass:
localizedStringForKey:value:table:
setAccountDescription:
setAuthenticationType:
setSupportsAuthentication:
setWithObjects:
mutableCopy
setEnabledDataclasses:
setVisible:
saveVerifiedAccount:withCompletionHandler:
setMailAccountLoadOptions:
reloadAccounts
_ensureHolidaySubscribedCalendarExists
array
leafAccountTypes
daemonAppropriateAccountClassForACAccount:
shouldCreateAccountForBackingAccountInfo:
initWithBackingAccountInfo:
sharedKeychain
removePersistentCredentials
accountDescription
_accountInfoPath
initWithContentsOfFile:
objectForKeyedSubscript:
containsObject:
sharedConnection
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
removeOrphanedClientRestrictionsWithCompletion:
persistentUUID
dictionaryWithObjects:forKeys:count:
writeToFile:atomically:
_deviceDidWake
_deviceWillSleep
monitorFoldersWithIDs:
stopMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
resumeMonitoringFoldersWithIDs:
aa_appleAccountsWithError:
aa_isAccountClass:
isInHoldingPattern
orphanCheckEnabled
appleAccountsMatchingClass:errror:
firstObject
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isEnabledForDataclass:
calIsiCloudCalDAVAccount
displayAccount
accountTypeWithAccountTypeIdentifier:error:
accountsWithAccountType:options:error:
sharedInstanceForAccountType:creatingClass:
calOpenDBAsGenericClient
calDB
_clearOrphanedSubscribedCalendars:eventAccountIds:
hasPrefix:
length
substringFromIndex:
isLocalStoreEnabledInDatabase:
isLocalStoreEmptyInDatabase:
setLocalStoreEnabled:inDatabase:
calCloseDBAndSave:
abOpenDBAsGenericClient
changeTrackingID
accountsProviderWithDBHelper:
allAccounts
externalIdentifier
containerProviderWithDBHelper:
allContainersForAccountWithExternalIdentifier:
isLocal
type
markForDeletion
updateSaveRequest:
allContainers
accountForContainerWithIdentifier:
changeHistoryClerkWithDBHelper:
removeDelegateDatabasesNotMatchingAltDSIDs:
addSaveRequest:
executeAllSaveRequests
abCloseDBAndSave:
completelyIgnoreNotes
enableChangeLogging:
accountType
accountIdentifier
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
disableMonitoringAgentsTokens
removeAllObjects
_loadAndStartMonitoringAgents
transactionId
preferredDaysToSyncDidChange
sharedMain
_handleCellularDataUsageChangedNotification
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
onBehalfOfBundleIdentifier
initWithCapacity:
wirelessPolicy:isMorePermissiveThanPolicy:
enabledDataclassesBitmask
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
resetSyncStatusIfNecessaryForStoresOfType:
loadAgents
_clearOrphanedStores
keychainAccessibilityType
password
pushPreferenceDidChange
_calDaysToSyncDidChange
sharedDBWatcher
didReceiveDarwinNotification:
establishAllApsConnections
_registerForCTDataUsageNotificaiton
defaultCenter
postNotificationName:object:
_systemMayNowBeReady
saveAndReleaseAgents
accountTypeIdentifier
numberWithUnsignedInteger:
removeObjectForKey:
_sendAccountAnalytics
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
initWithLabel:
_stopMonitoringAndSaveAgents
agentsToSyncForAccountID:
enabledForAnyDADataclasses:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
isSubscribedCalendarAccount
parentAccountIdentifier
_shouldAccount:syncWhenSyncingParentAccountWithID:
parentAccount
isDelegateAccount
resetCertWarnings
stringByAppendingString:
stringByAppendingFormat:
sharedGateKeeper
sharedPowerAssertionManager
initWithString:
initWithIdentifier:description:
loadDaemonBundleForACAccountType:
handleWebcalURL:
sharedBabysitter
statusReport
waiterID
accountWithIDShouldContinue:
setSyncingAllowed:
protocolVersion
setProtocolVersion:
resetStatusReport
arrayWithCapacity:
dictionaryRepresentation
initWithObjects:
intersectsSet:
enabledDataclasses
_hasDataclassWeCareAbout:
agentWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:folderIDs:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:folderIDs:
addPersistMonitoringAccountID:folderIDs:clientID:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
_resetMonitoringRequestsAndLoadAgents
registerForBuddy
enableMonitoringAgentsWithToken:
disableMonitoringAgents
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
processFolderChange:forAccountWithID:completionBlock:
getStatusReportDictsWithCompletionBlock:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
enableActiveSync
disableActiveSync
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
_activeAgents
_activeAgentsQueue
_watchedIDs
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_wirelessPolicies
_pendingAccountSetupCount
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
fileSystemRepresentation
setConn:
conn
_clientDiedWithReason:
_dispatchMessage:
da_newGUID
setWatchedIDs:
setBusyIDs:
setUpdatedIDs:
setAccountTimers:
setActionDelegatesById:
setAgentMonitoringTokens:
setSimulatedCalDAVHostnames:
_foldersUpdated:
addObserver:selector:name:object:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
requestPriority:forClient:dataclasses:
_cancelRestartingAgentsDueToTimeout
disable
busyIDs
watchedIDs
actionDelegatesById
allValues
removeObserver:
accountTimers
killAllTimers
unregisterForInterrogation
allKeys
countForObject:
_removeBusyFolderIDs:forAccountWithID:
allObjects
_removeWatchedFolderIDs:forAccountWithID:
_clearAllStopMonitoringAgentsTokens
_endAllServerSimulations
noteBlockedClientCallChange:
setNumOutstandingBlockingClientCalls:
setNumOutstandingRefreshPriorityClientCalls:
numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
boolValue
addObjectsFromArray:
watchedFolderCount
numberWithLong:
_createReplyToRequest:withProperties:
setWithArray:
updatedIDs
intersectSet:
minusSet:
setObject:forKey:
agentMonitoringTokens
_startTimeoutWithClientToken:
unsignedIntegerValue
_startMonitoringAgentsWithServerToken:
_restartAgentsDueToTimeout
performSelector:withObject:afterDelay:
_startMonitoringAgentsWithClientToken:
cancelPreviousPerformRequestsWithTarget:selector:object:
numberWithInteger:
_stopMonitoringAgentsWithClientToken:
unarchivedObjectOfClass:fromData:error:
_shouldReloadAgentsForAccountChange:
initWithAccountStore:
accountWithIdentifier:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleAccountDidChange:withChangeInfo:store:
changeType
timersForAccountWithID:
clientBehaviorForFolderIds:
setLastFolderContentRequestDate:forFolderWithId:
deferredTimerInterval
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
setDeferredFolderContentsSource:
intValue
clientBehaviorForFolderContents
date
setLastAllFolderContentsRequestDate:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
setDeferredAllFolderContentsSource:
clientBehaviorForFolderList
setLastFolderListRequestDate:
allowFolderWipe
setLastFolderWipeRequestDate:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
setDeferredFolderListSource:
initWithAccountID:queryDictionary:client:
beginQuery
userRequestsCancel
numberWithUnsignedInt:
initWithObjectsAndKeys:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
noteRefreshClientCallChange:
registerForInterrogation
initWithAccountID:attachmentUUID:client:
beginDownload
initWithAccountID:client:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
initWithAccountID:client:
fetchOfficeHours
officeHoursFromData:
setOfficeHours:
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
numberWithBool:
initWithURL:client:
tryUsername:password:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
initWithAccountID:client:grantedDelegate:
initWithArray:
initWithAccountID:client:terms:recordTypes:resultLimit:
host
port
useSSL
emailAddresses
preferredAddress
object
userInfo
unionSet:
sharedService
openApplication:options:withResult:
noteAdditionalReportDicts:
simulatedCalDAVHostnames
beginSimulationWithHostname:
endSimulationWithHostname:
persistent
_checkAccessForMessage:
_sendAccessDeniedReplyForMessage:
_checkAccountId:
_beginMonitoringFolders:
_sendInvalidAccountIDReplyToMessage:withAccountID:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_startMonitoringAgents:
_stopMonitoringAgents:
_handleAccountChange:
_getCurrentPolicyKey:
_requestPolicyUpdate:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdate:
_requestFolderListUpdate:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_asyncProcessMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_reportSharedCalendarAsJunkEvent:eventDict:
_fetchOfficeHoursEvent:eventDict:
_setOfficeHoursEvent:eventDict:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_requestGrantedDelegatesList:eventDict:
_cancelGrantedDelegatesListRequest:eventDict:
_updateGrantedDelegatePermission:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_getAccountExternalIdentification:eventDict:
_downloadSubscribedCalendar:eventDict:
_cancelDownloadingSubscribedCalendar:eventDict:
_setUserNameAndPasswordForSubscribedCalendar:eventDict:
_manageCalDAVServerSimulatorWithHostname:action:
permissionsForMessage:
_hasCalendarAccess
_hasReminderAccess
_hasContactsAccess
_isInternalTool
_isAccountsDaemon
clientsToInterrogate
applyClientStatusReportToAggregator:
setClientBundleID:
setClientUniqueID:
setClientName:
setClientPID:
_persistent
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientPID
_clientBundleID
_clientUniqueID
_conn
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
_clientName
_agentMonitoringTokens
_simulatedCalDAVHostnames
cancelCalendarAvailabilityRequestWithID:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
_startDate
_endDate
_ignoredEventID
_addresses
_queue
refreshThrottleTime
folderIdToLastFolderContentsRequestDate
timeIntervalSinceDate:
lastAllFolderContentsRequestDate
lastFolderListRequestDate
lastFolderWipeRequestDate
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
sharedTransactionMonitor
transactionCount
setPersistAPSAfterShutdown:
shutdownDAD
userSwitchTasks
bundleID
_setRunLoopStopped:
_shutdownDaemon
invalidate
dateWithTimeIntervalSinceNow:
_forceShutdownTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
taskWithName:reason:forBundleID:
begin
arrayWithObjects:count:
setUserSwitchTasks:
setTransactionMonitorDelegate:
_forceShutdownDaemonOnLogoutInTimeInterval:
addSignalHandler
registerUserSwitchStakeHolder:
addLanguageChangeHandler
xpc_checkin
isAppleInternalInstall
CFNetworkLogging
endDailyAnalyticsReporter
agentsStarted
evaluateConnectedStartupActivityStatus
removeObserver:name:object:
willSwitchUser
didFinishAllXPCTransactions
waitForSystemAvailability
setRunLoopStoppedRef:
_configureAnalyticsLogging
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
initWithDictionaryRepresentation:consumer:
setQuery:
setConsumerCancelled:
query
performSearchQuery:
setQueryResultData:
setConsumer:
consumerCancelled
cancelSearchQuery:
queryResultData
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
_query
_queryResultData
scheme
da_urlBySettingScheme:
createAndSubmitValidationTask
setDelegate:
setSubscriptionURL:
setPerformQuickValidation:
submitQueuedTask:
shouldTryAgainWithHTTPForError:
setTitle:
subscriptionURL
calendar
x_wr_caldesc
setNotes:
x_apple_calendar_color
green
blue
setColor:
x_apple_auto_refresh
timeInterval
setRefreshInterval:
x_wr_relcalid
setSubscriptionID:
finishWithError:summary:
numberWithLongLong:
handleTrustChallenge:forTask:completionHandler:
protectionSpace
serverTrust
evaluateTrust:
shouldTrustChallenge:
initWithTrust:
sender
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
archivedDataWithRootObject:requiringSecureCoding:error:
cal_serializableError
handleTrustChallenge:forTask:
subCalValidationTask:finishedWithError:calendarName:document:calendarData:
subCalValidationTask:downloadProgressedTo:outOf:
subCalTask:needsUsernameAndPasswordForHost:continuation:
_subscribedCalendarURL
_taskManager
_shouldTryAgainWithHTTP
_passwordContinuation
setFolder:
setHasRemoteChanges:
setIsInitialUberSync:
setIsResyncAfterConnectionFailed:
setIsResyncAfterServerError:
folder
hasRemoteChanges
isInitialUberSync
isResyncAfterConnectionFailed
actions
initWithFolder:hasRemoteChanges:isInitialUberSync:
setActions:
isResyncAfterServerError
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
asContainer
os_log
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
initWithContactStore:
_contactStore
_tearDownAllApsConnections
string
appendString:
_apsEnvStringForDAEnvString:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:queue:
APSEnv
setEnabledTopics:
da_dataWithHexString:
delegate
pushState
pushRegistrationTime
timeIntervalSinceNow
performTokenRegistrationRequestsWithToken:onBehalfOf:
_connectionForEnv:
_registerAPSTopicsForDelegates:withConnection:
_registerAPSTopics
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheduleIdentifier
_currentTruePCStyleForDelegate:
setPushState:
startFetchActivityForPush
_enabledTopicsForWrapper:
setPushRegistrationTime:
startFetchActivityForFetch
_suspendedTopicsForWrapper:
curStyle
_resumeTopicsForSuspendedDelegate:
isSetToExpectedFetchInterval
_suspendTopicsForDelegate:
setCurStyle:
setWithObject:
watchedCollections
refreshCollections:withReason:
_refreshWrapperForDelegate:
_unregisterTopicLocked:forDelegate:inEnvironment:
stopCollectionsRefresh
dailyRefreshActivityFired
_dailyRefreshActivityFired
connection:didReceivePublicToken:
_wrapperIsSuspended:
_fakeTokenReceive
_unregisterWrapper:forTopic:inTopicDictionary:
_tearDownAPS
retryCollections:after:reason:
_overriddenPCStyleForWrapper:
_pushRegistrationForDelegateFailed:
connection:didReceiveMessageForTopic:userInfo:
_performBlockOnRefreshManagerThread:
registerDelegate:
unregisterDelegate:
startDailyRefreshActivityForWrapper:
endDailyRefreshActivityForWrapper:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
delegateDidCompleteRefresh:
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
pushTokenForEnvironment:
persistAPSAfterShutdown
enabledTopicWrappersByEnv
setEnabledTopicWrappersByEnv:
suspendedTopicWrappersByEnv
setSuspendedTopicWrappersByEnv:
wrappers
setWrappers:
wrappersForDailyRefresh
setWrappersForDailyRefresh:
dailyRefreshInitialized
setDailyRefreshInitialized:
connection
setConnection:
apsConnections
setApsConnections:
tokenRegistrationTimer
setTokenRegistrationTimer:
pcQueue
setPcQueue:
_persistAPSAfterShutdown
_dailyRefreshInitialized
_enabledTopicWrappersByEnv
_suspendedTopicWrappersByEnv
_wrappers
_wrappersForDailyRefresh
_connection
_apsConnections
_tokenRegistrationTimer
_pcQueue
setWrapper:
setToken:
setPushKey:
setOnBehalfOfBundleIdentifier:
initWithToken:pushKey:wrapper:onBehalfOf:
session
invalidateAndCancel
setTask:
setRequest:
wrapper
tokenRegistrationRequest:finishedWithError:
_handleAuthenticationChallenge:completionHandler:
finishTasksAndInvalidate
statusCode
cancelFetchActivity
allHeaderFields
bytes
initWithBytes:length:encoding:
authenticationMethod
previousFailureCount
proposedCredential
_canAuthenticateAgainstProtectionSpace:
_reallyHandleAuthenticationChallenge:completionHandler:
username
credentialWithUser:password:persistence:
handleTrustChallenge:forAccount:completionHandler:
serverTokenRegistrationURL
token
da_lowercaseHexStringWithoutSpaces
absoluteString
stringByAddingPercentEscapes
pushKey
URLWithString:
requestWithURL:cachePolicy:timeoutInterval:
request
setHTTPMethod:
setValue:forHTTPHeaderField:
getAppleIDSession
defaultSessionConfiguration
set_appleIDContext:
set_sourceApplicationBundleIdentifier:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
dataTaskWithRequest:
task
resume
requestWithToken:pushKey:wrapper:onBehalfOf:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancel
sendRegistrationRequestForAccount:
hsa2Session
setHsa2Session:
_finished
_delegate
_wrapper
_onBehalfOfBundleIdentifier
_token
_pushKey
_request
_session
_task
_hsa2Session
fetchOfficeHoursWithConsumer:error:
_doRequestWithBlock:
setOfficeHours:withConsumer:error:
setRequestID:
requestID
_finishedWithOfficeHours:error:canceled:
cancelOfficeHoursRequestWithID:
dataFromOfficeHours:
officeHoursRequestWithID:finishedWithOfficeHours:error:
officeHoursRequestWithID:finishedWithError:
initWithOptions:capacity:
_monitoringReachability
_startMonitoringReachability
_stopMonitoringReachability
muckWithDelegates:
queue
_notifyDelegatesNetworkReachable
_delegates
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
name
setTokenRegistrations:
retryActivityIdentifier
cancelRetryActivity
cancelDailyRefreshActivity
cancelAllTokenRegistrations
fetchInterval
fetchActivityIdentifier
_fetchActivityCriteriaWithInterval:
_fetchActivityCriteriaInOnPowerMode
XPCActivityInterval
setFetchInterval:
startFetchActivityWithInterval:
_stringForStyle:
tokenRegistrations
startDailyRefreshActivity
refreshCollections
refreshReason
setRefreshReason:
setRefreshCollections:
_retryActivityFired
_pushState
_curStyle
_refreshReason
_pushRegistrationTime
_tokenRegistrations
_refreshCollections
_fetchInterval
setIsUpdate:
initWithDictionary:
setRequestParams:
isUpdate
requestParams
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
setResponseParams:
responseParams
settingsRequestFinishedWithResults:status:error:
_isUpdate
_requestParams
_responseParams
cancelCalendarDirectorySearchWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
displayName
setDisplayName:
firstName
lastName
emailAddress
setPreferredAddress:
principalPath
setPrincipalPath:
_convertSearchQueryResults:
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
setAttachmentUUID:
beginDownloadingAttachmentWithUUID:consumer:
setDownloadID:
attachmentUUID
cancelDownloadingInstance:error:
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
downloadID
_attachmentUUID
_downloadID
updateGrantedDelegatePermission:consumer:
cancelUpdateGrantedDelegatePermissionRequestWithID:
updateGrantedDelegatePermissionFinishedWithError:
_grantedDelegate
_coalesceAndReport
initWithDictionaryRepresentation:
mergeStatusReport:
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
optionsTimeoutTimer
setOptionsTimeoutTimer:
_cancelOptionsTimer
finishCoreDAVTaskWithError:
taskManager
activeModalTask
principalURL
defaultDAVProbeTimeout
optionsProbe
setOptionsProbe:
registerAccount:forOperationWithName:
initWithURL:
setAccountInfoProvider:
error
unregisterAccount:forOperationWithName:
setCompletionBlock:
_serverProbeTimedOut
submitQueuedCoreDAVTask:
_probeAndSyncWithBlock:
_optionsProbe
_optionsTimeoutTimer
setAccountID:
setClient:
setDelegateID:
_consumerCancelled
_delegateID
_client
_accountID
setCalendarID:
respondToShareRequestForCalendar:withResponse:consumer:
_doResponseWithBlock:
reportShareRequestAsJunkForCalendar:consumer:
setShareID:
shareID
cancelShareResponseInstance:error:
calendarID
shareResponseFinishedWithError:
_calendarID
_shareID
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
v20@0:8B16
v24@0:8@16
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
i16@0:8
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSError"24
@"NSArray"
@24@0:8^v16
^v16@0:8
B32@0:8@16@24
@32@0:8@16@24
B32@0:8^v16@24
@32@0:8@16^@24
v24@0:8Q16
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@"NSDictionary"
Q24@0:8@16
v20@0:8i16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
@"NSString"
@"NSCountedSet"
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@64@0:8@16@24@32@40@48@56
@"NSDate"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
v40@0:8@16@24@?32
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24@?<v@?q@"NSURLCredential">32
v56@0:8@16@24@32@40@48
v40@0:8@16q24q32
v56@0:8@"SubCalValidationTask"16@"NSError"24@"NSString"32@"ICSDocument"40@"NSData"48
v40@0:8@"SubCalValidationTask"16q24q32
v40@0:8@"SubCalDATask"16@"NSString"24@?<v@?@"NSString"@"NSString">32
I24@0:8^{__SecTrust=}16
@"NSURL"
@"DATaskManager"
@32@0:8@16B24B28
@"DAFolder"
@"CNContactStore"
i24@0:8@16
v44@0:8@16@24d32i40
@"NSMutableSet"
@"APSConnection"
@48@0:8@16@24@32@40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@16@?24
@"<DATokenRegistrationDelegate>"
@"DARefreshWrapper"
@"NSMutableURLRequest"
@"NSURLSession"
@"NSURLSessionDataTask"
@"AKAppleIDSession"
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@16@24B32
@"NSHashTable"
v32@0:8@"DATokenRegistrationRequest"16@"NSError"24
r*16@0:8
@20@0:8i16
@24@0:8q16
v24@0:8q16
v28@0:8@16i24
v36@0:8@16d24i32
@"<DARefreshManagerDelegate>"
v40@0:8@16q24@32
v40@0:8@"DAOofParams"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
v28@0:8@16B24
v28@0:8@"NSError"16B24
@56@0:8@16@24@32@40Q48
@"NSSet"
v32@0:8q16q24
@"DAEGrantedDelegate"
@44@0:8@16i24d28@?36
@"CoreDAVOptionsTask"
@"DADClient"
