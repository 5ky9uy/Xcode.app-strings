Agent %@ needs to monitor reachability
Agent %@ no longer needs to monitor reachability
%@: Network is reachable, so triggering reachability block
%@: Notified that network is reachable, but we weren't asked to sync when reachable so ignoring.
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
DADAccessManager is Disabled. Cancelling Connection
DADAccessManager event %@ clientName %@ is Entitled
DADAccessManager event %@ clientName %@ is NOT Entitled
DADAccessManager Received connection event %@ for clientName %@
DADAccessManager number of Current Clients %lu and they are %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing DADClient with the same bundle id and with NULL xpc connection, using this DADClient and reconnecting. The client ID is: 1%@
Found an existing DADClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this DADClient and reconnect. The client ID is: %@
Found an existing DADClient with the same bundle id with same xpc connection. The client ID is: %@
DADAccessManager Adding New Client for %@ for clientName %@
DADAccessManager No New Clients For Event %@ clientName %@
DADAccessManager Initializing
DADAccessManager REMOVING client %@ from Current Clients %@
Found an existing DADClient with the same bundle id, not changing the folder list. The client ID is: %@
Add DADClient for client %@
Could not get an account with the ID [%@]
[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
DADAgentManager: Fetching active agents. count = %d, agents = %@
Triggering calendar migration if needed
Trigger calendar migration failed for some reason. Hope for the best?
Loading agents
Not creating an agent for account info %@ (%{public}@), it refused to init itself
Creating an agent for account info %@ (%{public}@)
Not creating an agent for account info %@ (%{public}@) because it should not be created
Loading up agent %@ for account "%@" (%{public}@)
Not loading an agent for account "%@" (%{public}@), because agentClass is nil
Not loading an agent for account "%@" (%{public}@), because it is disabled
DADAgentManager: Settings active agents. count = %d, agents = %@
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
DADAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType %d
The dataaccessd does not support currentPolicyKeyForAccount method, which is for Exchange accounts
The dataaccessd does not support requestPolicyUpdateForAccount method, which is for Exchange accounts
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
The dataaccessd does not support addPersistMonitoringAccountID method, which is for Exchange accounts
The dataaccessd does not support removePersistMonitoringAccountID method, which is for Exchange accounts
The dataaccessd does not support clearPersistMonitoringAccountID method, which is for Exchange accounts
ClearOrphanStores : Current DA CalDAV (events) Account IDs : %@
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@
Removing subscribed calendar, as it's account id %@ isn't one of the account ids I know about: %@
Removing subscribed calendar "%@", as there are two calendars with the same UID for account ID %@. Keeping %i, removing %i
Ignoring calendar in subscribed calendar store without an account ID, "%@" (external_id="%@")
AppleAccounts returned an error while trying fetch accounts: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
ClearOrphanStores : Error Fetching com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Error Fetching Accounts of Type com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Adding a Legacy CardDAV Account %@ To list of AccountIDs
ClearOrphanStores : ===== Starting CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Turning it off
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Leaving it alone because there are events in the local store
Skipping orphan cleanup because we couldn't open aux database with ID %i persona %{public}@ and path %@
ClearOrphanStores : ===== End CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ===== Starting CardDAV Orphan Store Cleanup ======
ClearOrphanStores : Current DA CardDAV and LegacyCardDAV Account IDs : %@
ClearOrphanStores : Checking if contact accountID %@ is a know DA CardDAV AccountID.
ClearOrphanStores : ACCOUNTDCOERROR Removing ABAccount, as its account id %@ isn't one of the account ids that I know about %@ %@
ClearOrphanStores : Contact accountID %@ is a known DA CardDAV AccountID - NoChanges
ClearOrphanStores : ACCOUNTDCOERROR Removing contact store, as it's account id %@ isn't one of the account ids I know about: %@
AClearOrphanStores : CCOUNTDCOERROR Removing contact search store, as it's account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing AB change tracking client, as its change tracking identifier "%@" doesn't belong to one of the account ids I know about: %@
ClearOrphanStores : Deleting all iCloud delegate databases as no primary iCloud contacts account is enabled or exists
ClearOrphanStores : ===== End CardDAV Orphan Store Cleanup ======
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Refusing to load agents because we are running as the setup user
DAAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
DAAgentManager: System Ready Calling Load Agents Block
DAAgentManager: System Not Yet Ready. We are Not Loading Agents
DAAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
DATransaction starting, ID: %@
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
Received cellular data usage changed notification. Checking if a refresh is required.
User allowed cellular or wifi data for BundleID %{public}@
Wireless data usage policy changes do not affect any existing agents; no refreshes will be done.
Refreshing account %{public}@ because wireless data use is now allowed for %{public}@ and might not have been before.
Loading our agents
Removing CFURLCache entries
XPC: Received darwin notification: %{public}@
XPC: Received PCPreferencesDidChangeNotification due to user change
XPC: Received CDBPreferences_Notification_kCalPreferredDaysToSyncKey
XPC: Received com.apple.dataaccess.checkHolidayCalendarAccount
Agents loaded and monitoring.  They are %@
DAAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
DADAgentManager asked to enableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
DADAgentManager asked to disableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
The dataaccessd does not support setFolderIdsThatExternalClientsCareAboutAdded method, which is for Exchange accounts
The dataaccessd does not support reportFolderItemsSyncSuccess method, which is for Exchange accounts
The dataaccessd does not support processFolderChange method, which is for Exchange accounts
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
Creating a new DADClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for DADClient %@
Destroying DADClient %p for Connection %p and ClientID %@
Not stop monitoring account %@ folder %@ because other clients are watching it
PersistentClientCleanup called on disabled client. Will not perform any actions.
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF DADClient Bumping priority to refresh
Received begin monitoring folders request with persistent flag: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
No folders watched. Marking not persistent. Transaction: %@
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
Remote client disconnected and reconnected while stopping monitoring folders.
Remote client disconnected and reconnected while resuming monitoring folders.
Remote client disconnected and reconnected while suspending monitoring folders.
Requested to start monitoring agents with unrecognized client token %d. Forcing a reload.
StopMonitoringAgents timeout reached! %{public}@ (%i) requested we stop monitoring agents but didn't tell us to resume within %i seconds of the last stop. Assuming it's broken and starting monitoring agents again anyway with client tokens: %@
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Ignoring call to _startMonitoringAgents: with missing client token
Ignoring call to _handleAccountChange: with missing account change info data
_handleAccountChange: Failed to decode account change info: %@
Cannot find account with identifier %{public}@
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%lx isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%lx, isUserRequested: %d
[DADAgentManager sharedManager] number of Current Agents %lu and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: DADClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
_requestFolderListUpdateForAccountId %@, dataclass 0x%lx, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
%@: error processing meeting 
Remote client disconnected and reconnected while processing meeting request.
_resetCertWarningsForAccountWithId %@ dataclasses %lx
error resetting cert warnings account ID %@ dataclasses 0x%lx
Unable to read data to decode folder change: %@
Swallowing decoder exception of %@, treating as null data
No status reports available
_resetThrottleTimersForAccountWithId %@
_beginDownloadingAttachment UUID: %@, accountID: %@
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
_respondToSharedCalendar UUID: %@, response: %ld, accountID: %@
_reportSharedCalendarAsJunk UUID: %@, accountID: %@
DATransaction starting, ID: %{public}@
_fetchOfficeHours accountID: %{public}@
_setOfficeHours accountID: %{public}@
_markSubscribedCalendarAsJunk
_checkSubscribedCalendarIsJunk
_fetchHolidayCalendars
_cancelDownloadingSubscribedCalendar downloadID: %@
Received a cancel for subcal download %@, but that download doesn't exist any more
Received a password for subcal download %@, but that download doesn't exist any more
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
Starting granted delegates list request with accountID: [%@]
Starting update-granted-delegate-permission request with accountID: [%@]
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
Starting groupExpansion accountID: [%@] principalPath: [%@]
Launching %@
Failed to launch %@: %@
_manageCalDAVServerSimulatorWithHostname called with nil hostname
_manageCalDAVServerSimulatorWithHostname called with unrecognized action: %@
Client of DADClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
Client %@ (%i) is not authorized to send message %@
unknown request sent to client.
request: %@
Unknown message: %@
Remote client disconnected and reconnected while sending a message it was not authorized to send.
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
Dataaccess Migrator Performing Synchronous Migration
Dataaccess Migrator Done Synchronous Migration. Updating Version
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
DA launched on network connectivity
Agents have completed their first start after launch.
DA launched on network connectivity - DONE
DA launched on network connectivity - asked to defer, deferring now
Received notification "%@" indicating a language change.  Going to exit to pick up new locale support
Reporting subscribed calendar as junk successful: %@
Report subscribed calendar as junk failed. Error = %@  Response status code = %ld  Calendar URL = %@
Report subscribed calendar as junk failed. Error = %@  Calendar URL = %@
Report subscribed calendar as junk failed. Unable to create a URL request. Calendar URL = %@
Report subscribed calendar as junk -finishWithError: called with error %@
Unable to add authentication headers. Sending subscribed calendar report without it.
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %ld. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
No valid document after downloading subscribed calendar
Received a password, but don't have a password continuation block.
-[DADClientSubscribedCalendarDownloadDelegate finishWithError:summary:] called while we were waiting for a password. (error = %@, summary = %@)
DADClientSubscribedCalendarDownloadDelegate finished with error %@
Couldn't archive summary %@: %@
Missing required container identifier
Forcing APS environment to %@
Setting our enabled APS topics to %@
Performing token registration; Wrapper %@ is in state %d and its last push registration time was %@ (%f)
Skipping token re-registration; wrapper %@ is in state %d and its last push registration time was %@ (%f)
No public token. We won't be re-registering our tokens with the server
Timer fired. Re-registering everything with APS
Push registration failed for delegate %@. Falling back to poll.
Resuming XPC Activities for polling
Suspending topic "%@" for delegate %@
Resuming XPC Fetch Activities for polling
Resuming topic "%@" for delegate %@
Account "%@" (%{public}@): Resuming Push Delegate's PC style changed from %d to %d
Account "%@" (%{public}@): Suspending push and resuming XPC Activity for polling
Push settings changed for %lu accounts and remained the same for %i.
Received token %@ from APS. Registering all delegates with their servers
Received a message from APS for topic %@ with user info %@.
Received an APS push for %@ but we don't have any enabled delegates registered for that topic.
Enabled waiters: 
Suspended waiters: 
Waiter %@: %@
Registering delegate %@ for PC notifications
Begin Unregistering delegate %@ for all PC and APS notifications
Unregistering delegate %@ for all PC and APS notifications
Shutdown: Wrapper %@ Leaving push topics registered. delegate %@ for all PC and APS notifications
Delegate %@ was unregistered, but it was never registered
Registering daily refresh xpc activity.
Updating criteria for daily refresh xpc activity.
Unregistering daily refresh xpc activity.
Registering delegate %@ for topic %@ in environment %@
Delegate is not set to push, so putting it on the suspended queue
Removing refresh manager delegate for account %@ from topic %@
Delegate %@ tried to unregister for the topic %@, but that delegate is not registered with the refresh manager
No more delegates for any topic. Tearing down APS
Setting ourself enabled for these APS topics: %@
Resuming account %@ for polling
Delegate %@ finished a refresh but it is not registered with the refresh manager
Delegate %@ told us to retry a refresh later but it is not registered with the refresh manager
HolidayCalendarFetch: Server requested we not fetch. Denying retries until %@
HolidayCalendarFetch: no valid calendar account found.
HolidayCalendarFetch: Error fetching list of holiday calendars: %@
HolidayCalendarFetch: Unable to find iCloud account with Calendars enabled.
HolidayCalendarFetch: Preventing retries until after: %@
The token registration session became invalid for account ID %@: %@
Token registration session became invalid for account %@
The token registration task failed to load for account ID %@: %@
Token registration task finished for account %@
The server accepted our push token request (status %d)
The server returned a status of %d to our token registration request. Falling back to PC. Server response headers are %@
The server returned a response of "%@"
Can authenticate against protection space %@? %@
Cancelling authentication because it's already failed
Received an authentication challenge for account %@ method %@
Responding to authentication challenge with username %@ and password
Token registration - Continuing without credential for challenge
Token registration - Waiting for runloop callback to decide what to do
Can't send a token registration for %@ because it doesn't implement serverTokenRegistrationURL.
Registering token %@ with the server at %@
DADClientOfficeHoursRequestDelegate finished with error %@
DADClientOfficeHoursRequestDelegate canceled, but could not find an account with the ID %{public}@ to cancel the request
Started monitoring network reachability
Stopped monitoring network reachability
Started monitoring network reachability for host %@
Stopped monitoring network reachability for host %@
Network reachability changed notification %{public}@
Host reachability changed notification %{public}@
XPC: Cancelling Retry Activity for account "%@" (%{public}@) retryActivityIdentifier: %s
%@: Stopping XPC Activities for Refreshing Collections
%@: Cancelling pending Token Registration request
Delegate (%@) returned invalid fetch interval %lli; using system default
Don't start fetch because either DAAccount is nil or account description is nil
XPC: Registering Fetch Activity for account "%@" (%{public}@) retryActivityIdentifier: %s, Interval %lld
Updating criteria for fetch xpc activity for account "%@" (%{public}@)
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
Start fetching in automatically mode for account "%@" (%{public}@)
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
XPC: Performing Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Manual Sync Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Starting a Temp Sync Fetch Activity before Transitioning to Push for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Cancelling Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s
Performing token registration request for %@ with watched collections %@
Refreshing delegate %{public}@
Retry activity  fired for delegate %{public}@
Daily refresh activity fired for delegate %{public}@
Setting a timer to refresh the collections %@ for delegate %@ after %f seconds
DADClientSettingsDelegate initialized.
DADClientSettingsDelegate dealloced.
DADClientSettingsDelegate finished with status %ld.
Checking whether subscribed calendar is junk successful. Received result %@ for URL: %@
Checking whether subscribed calendar returned success, but did not give us a junk score: %@
Checking whether subscribed calendar is junk failed. Error = %@  Response status code = %ld  Calendar URL = %@
Checking whether subscribed calendar is junk failed. Error = %@  Calendar URL = %@
Checking whether subscribed calendar is junk failed. Unable to create a URL request. Calendar URL = %@
Checking whether subscribed calendar is junk -finishWithError: called with error %@
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Ignoring probe request for "%@" as we already have one outstanding
The babysitter has put this account in timeout, so giving up on this probe sync. %@
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" (%{public}@) couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
%@ %@
com.apple.dataaccess.dataaccessd.PersistentPush
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on DADAccessManager.  Use +sharedManager instead.
Client %@ (%i) has %lu outstanding stop requests
DADAgentsStartedNotification
DADAgentsStoppedNotification
com.apple.purplebuddy.setupdone
com.apple.dataaccessd
v8@?0
activeAgentsQueue
DataAccess
AccountInformation.plist
DAAgentClass
Identifier
com.apple.eas.account
DADAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
com.apple.notifyd.matching
PCPreferencesDidChangeNotification
com.apple.dataaccess.checkHolidayCalendarAccount
v16@?0@"DAAgent"8
com.apple.dataaccess.account
type
disableMonitoringAgents
=======
(Skipped %lu agents without interesting state)
Outstanding shutdown tokens: %lu
Somebody isn't maintaining their account setup correctly
Library/Preferences/com.apple.dataaccess.activesync
DADRequestClientStatusDumpNotification
DADClient.m
DADClient already has a connection. Client bundle ID is: %@
(unknown)
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[DADClient _beginMonitoringFolders:]
v12@?0B8
B8@?0
-[DADClient _stopMonitoringFolders:]
-[DADClient _resumeMonitoringFolders:]
-[DADClient _suspendMonitoringFolders:]
dataaccessd
-[DADClient _requestFolderContentsUpdate:]
-[DADClient _requestAllFolderContentsUpdate:]
-[DADClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[DADClient _processMeetingRequests:]
-[DADClient _asyncProcessMeetingRequests:]
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
v16@?0@"NSArray"8
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
Attachment UUID is NULL when cancelling attachment download.
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
'accountID' is nil when starting granted delegates list request.
'accountID' is nil when starting update-granted-delegate-permission request.
'grantedDelegateData' is nil when starting update-granted-delegate-permission request.
Failed to unarchive granted delegate: %@
'accountID' is nil when starting calendar directory search.
'accountID' is nil when starting group expansion.
'principalPath' is nil when starting group expansion.
v16@?0@"NSError"8
com.apple.dataaccess.statusreportaggregator
com.apple.private.dataaccessd.internal_tool
application-identifier
AAACCOUNTS.com.apple.accountsd
DA-Blocking Task
LogoutReceived
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
DataAccess State
@"NSString"8@?0
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
com.apple.dataaccess.connected
Received notification "%@" indicating a language change.  Going to exit to pick up new locale support
SyncWindow=%i
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
https://caldav.icloud.com
/subscribe/reportjunk
POST
text/xml; charset=utf-8
content-type
#%02X%02X%02X
SubCalValidationTask
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
com.apple.dataaccess
CardDAV-changehistory
com.apple.dataaccessd.darefresh.pcqueue
DARefreshManager enabled wrappers:
Topic "%@" {
DARefreshManager suspended wrappers:
DARefreshManager wrappers:
production
development
demo
DARefreshManager.m
Couldn't come up with an env string for DAEnvString %@
com.apple.dataaccess.dataaccessd.aps
com.apple.dataaccess.dataaccessd.aps.dev
com.apple.dataaccess.dataaccessd.aps.demo
1051051051051051051051051051051051051051051051051051051051051050
Delegate %@ tried to register for a nil topic.
com.apple.dataaccess.dataaccessd.dailyrefresh
HolidayCalendarFetchThrottleDate
Holiday
%@?token=%@&key=%@
User-Agent
@"NSString"24@?0@"DAAccount"8^@16
com.apple.dataaccess.DAReachability
v32@?0@"NSString"8@"NSHashTable"16^B24
com.apple.dataaccess.dataaccessd.retry.%@
Push
Poll
Manual
UNKNOWN!
com.apple.dataaccess.dataaccessd.fetch.%@
<DARefreshWrapper 
 for delegate %@
: Push state %d, style %@
, last registration: %@
, %ld outstanding token registrations
X-Apple-Junk-Score
/subscribe/validate
%@Probe
DADClientDelegate.m
finishWithError: should be implemented in the subclass
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
DaemonAdditions
DAAgent
DAReachabilityClient
NSObject
DARefreshManagerDelegateSupport
CalendarSupport
DADAccessManager
DADaemonPowerAssertionManager
DADClientGrantedDelegatesListResponseDelegate
DAEventsGrantedDelegatesListResponseConsumer
_DAChangeHistoryABLegacyClerk
DADAgentManager
DADClient
DADClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
DADClientAccountTimers
DADMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
DADClientSubscribedCalendarJunkReportDelegate
DADClientContactsSearchDelegate
DASearchQueryConsumer
DADClientSubscribedCalendarDownloadDelegate
SubCalValidationTaskDelegate
SubCalDATaskTrustDelegate
SubCalDATaskPasswordDelegate
DAFolderSyncRequest
_DAChangeHistoryContactsClerk
DARefreshManager
DADClientHolidayCalendarFetchDelegate
DATokenRegistrationRequest
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
DADClientOfficeHoursRequestDelegate
DAEventsOfficeHoursRequestResponseConsumer
DAReachability
DARefreshWrapper
DATokenRegistrationDelegate
DADClientSettingsDelegate
DASettingsResponseDelegate
DADClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DADClientSubscribedCalendarJunkCheckDelegate
DADClientGroupExpansionResponseDelegate
DAEventsGroupExpansionResponseConsumer
DADClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
DADClientUpdateGrantedDelegatePermissionResponseDelegate
DAEventsUpdateGrantedDelegatePermissionResponseConsumer
DADStatusReportAggregator
DACoreDAVAgent
DABabysittable
DADClientDelegate
DADClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
DAChangeHistoryClerk
deviceWillSleep
deviceDidWake
init
setAccount:
addToCoreDAVLoggingDelegates
account
trustHandler
stateString
hostWithoutPath
syncWhenReachable
networkReachableBlock
sharedReachability
addDelegate:
removeDelegate:
setNetworkReachableBlock:
shouldBeMonitoringReachability
startOrStopMonitoringReachability:
setIsMonitoring:
shutdown
removeFromCoreDAVLoggingDelegates
backingAccountInfo
identifier
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
networkReachable
hostToObserveForDAReachability:
initWithAccount:
observeReachabilityWithBlock:
stopObservingReachability
setSyncWhenReachable:
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
publicDescription
isMonitoring
lastRetryTimeout
setLastRetryTimeout:
isWaitingForPassword
setIsWaitingForPassword:
.cxx_destruct
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
T@"DAAccount",&,N,V_account
Td,N,V_lastRetryTimeout
TB,N,V_syncWhenReachable
T@?,C,N,V_networkReachableBlock
TB,N,V_isWaitingForPassword
TB,N,V_isMonitoring
T@"DATrustHandler",R,N
T@"NSString",R,N
saveXpcActivity:
sharedInstance
agentClassForACAccount:
agentClass
shared
get_kCalPreferredDaysToSyncKey
get_kCalRemindersPreferredDaysToSyncKey
preferredEventDaysToSync
preferredToDoDaysToSync
UTF8String
setMainConnection:
mainConnection
isDisabled
stringWithUTF8String:
clients
count
countByEnumeratingWithState:objects:count:
clientBundleID
isEqualToString:
rawConnection
reconnectWithConnection:
persistentClientCleanup
initWithConnection:clientID:
addObject:
exceptionWithName:reason:userInfo:
raise
setClients:
_setupServerConnection
_init
dealloc
removeObject:
initWithClientID:
beginMonitoringPersistentFolders:forAccount:
clientUniqueID
isMonitoringAccountID:folderID:
copy
outstandingStopMonitoringAgentRequests
clientName
clientPID
appendFormat:
sharedManager
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
isAccountID:folderID:watchedByClientBesides:
_mainConnection
_clients
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
T@"NSMutableArray",&,N,V_clients
accountID
accountWithAccountID:
requestGrantedDelegatesListWithConsumer:
errorWithDomain:code:userInfo:
finishWithError:
finished
setFinished:
domain
code
cancelGrantedDelegatesListRequestWithID:
client
setObject:forKeyedSubscript:
delegateID
archivedDataWithRootObject:
delegateWithIDIsGoingAway:
grantedDelegatesListRequestFinishedWithResults:error:
performRequest
_requestID
_results
addressBook
asSource
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
_addressBook
T^v,R,N,V_addressBook
sharedRunLoop
getCFRunLoop
useContactsFramework
contactStore
providerWithContactStore:
abDB
providerWithAddressBook:
clerkWithContactStore:
clerkWithAddressBook:
activeAgents
objectAtIndexedSubscript:
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setMailAccountLoadOptions:
reloadAccounts
ensureHolidayAccountExistsWithAccountStore:
array
leafAccountTypes
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
daemonAppropriateAccountClassForACAccount:
shouldCreateAccountForBackingAccountInfo:
initWithBackingAccountInfo:
sharedKeychain
removePersistentCredentials
accountDescription
_accountInfoPath
initWithContentsOfFile:
objectForKeyedSubscript:
containsObject:
sharedConnection
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
removeOrphanedClientRestrictionsWithCompletion:
persistentUUID
dictionaryWithObjects:forKeys:count:
writeToFile:atomically:
_deviceDidWake
_deviceWillSleep
monitorFoldersWithIDs:
stopMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
resumeMonitoringFoldersWithIDs:
_clearOrphanedSubscribedCalendars:eventAccountIds:
hasPrefix:
length
substringFromIndex:
aa_appleAccountsWithError:
aa_isAccountClass:
isInHoldingPattern
orphanCheckEnabled
appleAccountsMatchingClass:errror:
firstObject
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isEnabledForDataclass:
calIsiCloudCalDAVAccount
displayAccount
setWithObjects:
accountTypeWithAccountTypeIdentifier:error:
accountsWithAccountType:options:error:
sharedInstanceForAccountType:creatingClass:
calOpenDatabaseAsGenericClientForAccountID:
calDatabaseForAccountID:
_clearOrphanedStoresInCalendarDatabase:eventAccountIds:
isLocalStoreEnabledInDatabase:
isLocalStoreEmptyInDatabase:
setLocalStoreEnabled:inDatabase:
calSaveDatabaseForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calDatabaseForAuxDatabaseRef:
calCloseDatabaseForAuxDatabaseRef:save:
calCloseDatabaseForAccountID:save:
abOpenDBAsGenericClient
abChangeTrackingID
accountsProviderWithDBHelper:
allAccounts
externalIdentifier
containerProviderWithDBHelper:
allContainersForAccountWithExternalIdentifier:
isLocal
type
markForDeletion
updateSaveRequest:
allContainers
accountForContainerWithIdentifier:
changeHistoryClerkWithDBHelper:
removeDelegateDatabasesNotMatchingAltDSIDs:
addSaveRequest:
executeAllSaveRequests
abCloseDBAndSave:
completelyIgnoreNotes
enableChangeLogging:
accountType
accountIdentifier
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
isRunningAsSetupUser
removeObserver:name:
disableMonitoringAgents
disableMonitoringAgentsTokens
removeAllObjects
_loadAndStartMonitoringAgents
transactionId
preferredDaysToSyncDidChange
sharedMain
_handleCellularDataUsageChangedNotification
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
onBehalfOfBundleIdentifier
initWithCapacity:
wirelessPolicy:isMorePermissiveThanPolicy:
recordError:forHost:
enabledDataclassesBitmask
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
resetSyncStatusIfNecessaryForStoresOfType:
loadAgents
_clearOrphanedStores
keychainAccessibilityType
password
pushPreferenceDidChange
_calDaysToSyncDidChange
sharedDBWatcher
didReceiveDarwinNotification:
establishAllApsConnections
_registerForCTDataUsageNotificaiton
defaultCenter
postNotificationName:object:
_systemMayNowBeReady
registerForBuddy
_resetMonitoringRequestsAndLoadAgents
addObserver:selector:name:
mutableCopy
saveAndReleaseAgents
accountTypeIdentifier
numberWithUnsignedInteger:
removeObjectForKey:
_sendAccountAnalytics
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
initWithLabel:
_stopMonitoringAndSaveAgents
agentsToSyncForAccountID:
enabledForAnyDADataclasses:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
isSubscribedCalendarAccount
parentAccountIdentifier
_shouldAccount:syncWhenSyncingParentAccountWithID:
parentAccount
isDelegateAccount
resetCertWarnings
stringByAppendingString:
stringByAppendingFormat:
sharedGateKeeper
sharedPowerAssertionManager
initWithString:
initWithIdentifier:description:
loadDaemonBundleForACAccountType:
handleWebcalURL:
sharedBabysitter
statusReport
waiterID
accountWithIDShouldContinue:
setSyncingAllowed:
protocolVersion
setProtocolVersion:
resetStatusReport
arrayWithCapacity:
dictionaryRepresentation
initWithObjects:
intersectsSet:
enabledDataclasses
_hasDataclassWeCareAbout:
agentWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:folderIDs:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:folderIDs:
addPersistMonitoringAccountID:folderIDs:clientID:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
enableMonitoringAgentsWithToken:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
processFolderChange:forAccountWithID:completionBlock:
getStatusReportDictsWithCompletionBlock:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
enableActiveSync
disableActiveSync
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
_activeAgents
_activeAgentsQueue
_watchedIDs
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_wirelessPolicies
_pendingAccountSetupCount
_registeredForBuddy
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
T@"NSMutableArray",&,N,V_subCalHandlers
TQ,N,V_nextDisableMonitoringAgentsToken
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
T@"NSArray",R,N
fileSystemRepresentation
setConn:
conn
_clientDiedWithReason:
_dispatchMessage:
da_newGUID
setWatchedIDs:
setBusyIDs:
setUpdatedIDs:
setAccountTimers:
setActionDelegatesById:
setAgentMonitoringTokens:
setSimulatedCalDAVHostnames:
_foldersUpdated:
addObserver:selector:name:object:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
requestPriority:forClient:dataclasses:
_cancelRestartingAgentsDueToTimeout
disable
busyIDs
watchedIDs
actionDelegatesById
allValues
removeObserver:
accountTimers
killAllTimers
unregisterForInterrogation
allKeys
countForObject:
_removeBusyFolderIDs:forAccountWithID:
allObjects
_removeWatchedFolderIDs:forAccountWithID:
_clearAllStopMonitoringAgentsTokens
_endAllServerSimulations
noteBlockedClientCallChange:
setNumOutstandingBlockingClientCalls:
setNumOutstandingRefreshPriorityClientCalls:
numOutstandingBlockingClientCalls
numOutstandingRefreshPriorityClientCalls
boolValue
addObjectsFromArray:
watchedFolderCount
numberWithLong:
_createReplyToRequest:withProperties:
setWithArray:
updatedIDs
intersectSet:
minusSet:
setObject:forKey:
agentMonitoringTokens
_startTimeoutWithClientToken:
unsignedIntegerValue
_startMonitoringAgentsWithServerToken:
_restartAgentsDueToTimeout
performSelector:withObject:afterDelay:
_startMonitoringAgentsWithClientToken:
cancelPreviousPerformRequestsWithTarget:selector:object:
numberWithInteger:
_stopMonitoringAgentsWithClientToken:
unarchivedObjectOfClass:fromData:error:
_shouldReloadAgentsForAccountChange:
initWithAccountStore:
accountWithIdentifier:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleAccountDidChange:withChangeInfo:store:
changeType
timersForAccountWithID:
clientBehaviorForFolderIds:
setLastFolderContentRequestDate:forFolderWithId:
deferredTimerInterval
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
setDeferredFolderContentsSource:
intValue
clientBehaviorForFolderContents
date
setLastAllFolderContentsRequestDate:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
setDeferredAllFolderContentsSource:
clientBehaviorForFolderList
setLastFolderListRequestDate:
allowFolderWipe
setLastFolderWipeRequestDate:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
setDeferredFolderListSource:
initWithAccountID:queryDictionary:client:
beginQuery
userRequestsCancel
numberWithUnsignedInt:
initWithObjectsAndKeys:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
noteRefreshClientCallChange:
registerForInterrogation
initWithAccountID:attachmentUUID:client:
beginDownload
initWithAccountID:client:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
initWithAccountID:client:
fetchOfficeHours
officeHoursFromData:
setOfficeHours:
URLWithString:
reportSubscribedCalendarAsJunk:
checkSubscribedCalendarJunkStatus:
fetchHolidayCalendars
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
numberWithBool:
initWithURL:client:
tryUsername:password:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
initWithAccountID:client:grantedDelegate:
initWithArray:
initWithAccountID:client:terms:recordTypes:resultLimit:
initWithAccountID:client:principalPath:
object
userInfo
unionSet:
sharedService
openApplication:options:withResult:
noteAdditionalReportDicts:
simulatedCalDAVHostnames
beginSimulationWithHostname:
endSimulationWithHostname:
persistent
_checkAccessForMessage:
_sendAccessDeniedReplyForMessage:
_checkAccountId:
_beginMonitoringFolders:
_sendInvalidAccountIDReplyToMessage:withAccountID:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_startMonitoringAgents:
_stopMonitoringAgents:
_handleAccountChange:
_getCurrentPolicyKey:
_requestPolicyUpdate:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdate:
_requestFolderListUpdate:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_asyncProcessMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_reportSharedCalendarAsJunkEvent:eventDict:
_fetchOfficeHoursEvent:eventDict:
_setOfficeHoursEvent:eventDict:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_requestGrantedDelegatesList:eventDict:
_cancelGrantedDelegatesListRequest:eventDict:
_updateGrantedDelegatePermission:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_performGroupExpansion:eventDict:
_downloadSubscribedCalendar:eventDict:
_cancelDownloadingSubscribedCalendar:eventDict:
_setUserNameAndPasswordForSubscribedCalendar:eventDict:
_manageCalDAVServerSimulatorWithHostname:action:
_reportSubscribedCalendarAsJunk:eventDict:
_checkSubscribedCalendarIsJunk:eventDict:
_fetchHolidayCalendars:eventDict:
permissionsForMessage:
_hasCalendarAccess
_hasReminderAccess
_hasContactsAccess
_isInternalTool
_isAccountsDaemon
clientsToInterrogate
applyClientStatusReportToAggregator:
setClientBundleID:
setClientUniqueID:
setClientName:
setClientPID:
_persistent
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientPID
_clientBundleID
_clientUniqueID
_conn
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
_clientName
_agentMonitoringTokens
_simulatedCalDAVHostnames
T@"NSObject<OS_xpc_object>",&,N,V_conn
T@"NSMutableDictionary",&,N,V_watchedIDs
T@"NSMutableDictionary",&,N,V_busyIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
Ti,N,V_numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
T@"NSMutableDictionary",&,N,V_accountTimers
T@"NSMutableDictionary",&,N,V_actionDelegatesById
T@"NSString",&,N,V_clientName
Ti,N,V_clientPID
T@"NSString",&,N,V_clientBundleID
T@"NSString",&,N,V_clientUniqueID
T@"NSMutableDictionary",&,N,V_agentMonitoringTokens
T@"NSCountedSet",&,N,V_simulatedCalDAVHostnames
TB,R,N,V_persistent
TQ,R,N
cancelCalendarAvailabilityRequestWithID:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
_startDate
_endDate
_ignoredEventID
_addresses
_queue
refreshThrottleTime
folderIdToLastFolderContentsRequestDate
timeIntervalSinceDate:
lastAllFolderContentsRequestDate
lastFolderListRequestDate
lastFolderWipeRequestDate
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
sharedTransactionMonitor
transactionCount
setPersistAPSAfterShutdown:
shutdownDAD
userSwitchTasks
bundleID
_setRunLoopStopped:
_shutdownDaemon
invalidate
dateWithTimeIntervalSinceNow:
_forceShutdownTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
taskWithName:reason:forBundleID:
begin
arrayWithObjects:count:
setUserSwitchTasks:
setTransactionMonitorDelegate:
_forceShutdownDaemonOnLogoutInTimeInterval:
addSignalHandler
registerUserSwitchStakeHolder:
addLanguageChangeHandler
xpc_checkin
isAppleInternalInstall
CFNetworkLogging
endDailyAnalyticsReporter
agentsStarted
evaluateConnectedStartupActivityStatus
removeObserver:name:object:
willSwitchUser
didFinishAllXPCTransactions
waitForSystemAvailability
setRunLoopStoppedRef:
_configureAnalyticsLogging
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
_createURLRequestForSubscriptionCalendarURL:
sharedSession
HTTPBody
statusCode
uploadTaskWithRequest:fromData:completionHandler:
resume
aa_primaryAppleAccount
_findCalendarURLFromAccount:
setPath:
initWithURL:
setHTTPMethod:
setMainDocumentURL:
aa_addDeviceIDHeader
addValue:forHTTPHeaderField:
_generateBodyWithURL:
setHTTPBody:
aa_addAuthTokenOrBasicAuthHeaderWithAccount:preferUsingPassword:
setURL:
startElement:inNamespace:withAttributes:
absoluteString
appendElement:inNamespace:withStringContent:withAttributeNamesAndValues:
endElement:inNamespace:
data
calSyncingAccountUsingChildAccounts:
urlFromDataclassPropertiesForDataclass:
requestID
setRequestID:
T@"NSString",&,N,V_requestID
initWithDictionaryRepresentation:consumer:
setQuery:
setConsumerCancelled:
query
performSearchQuery:
setQueryResultData:
setConsumer:
consumerCancelled
cancelSearchQuery:
queryResultData
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
_query
_queryResultData
T@"DASearchQuery",&,N,V_query
T@"NSData",&,N,V_queryResultData
createAndSubmitValidationTask
setDelegate:
setSubscriptionURL:
setPerformQuickValidation:
setUseShortTimeout:
submitQueuedTask:
setTitle:
subscriptionURL
calendar
x_wr_caldesc
setNotes:
x_apple_calendar_color
green
blue
setColor:
x_apple_auto_refresh
timeInterval
setRefreshInterval:
x_wr_relcalid
setSubscriptionID:
setData:
finishWithError:summary:
numberWithLongLong:
handleTrustChallenge:forTask:completionHandler:
protectionSpace
serverTrust
evaluateTrust:
shouldTrustChallenge:
initWithTrust:
sender
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
archivedDataWithRootObject:requiringSecureCoding:error:
cal_serializableError
handleTrustChallenge:forTask:
subCalValidationTask:finishedWithError:calendarName:document:calendarData:
subCalValidationTask:downloadProgressedTo:outOf:
subCalTask:needsUsernameAndPasswordForHost:continuation:
_subscribedCalendarURL
_taskManager
_passwordContinuation
setFolder:
setHasRemoteChanges:
setIsInitialUberSync:
setIsResyncAfterConnectionFailed:
setIsResyncAfterServerError:
folder
hasRemoteChanges
isInitialUberSync
isResyncAfterConnectionFailed
actions
initWithFolder:hasRemoteChanges:isInitialUberSync:
setActions:
isResyncAfterServerError
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
T@"DAFolder",&,N,V_folder
TB,N,V_hasRemoteChanges
TB,N,V_isInitialUberSync
T@"NSArray",&,N,V_actions
TB,N,V_isResyncAfterConnectionFailed
TB,N,V_isResyncAfterServerError
TB,N,V_containsPostponedActions
asContainer
os_log
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
T@"NSObject<OS_os_log>",R,N
initWithContactStore:
_contactStore
T@"CNContactStore",R,N,V_contactStore
_tearDownAllApsConnections
string
appendString:
_apsEnvStringForDAEnvString:
_portNameForEnvironmentName:
initWithEnvironmentName:namedDelegatePort:queue:
APSEnv
setEnabledTopics:
da_dataWithHexString:
delegate
pushState
pushRegistrationTime
timeIntervalSinceNow
performTokenRegistrationRequestsWithToken:onBehalfOf:
_connectionForEnv:
_registerAPSTopicsForDelegates:withConnection:
_registerAPSTopics
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
scheduleIdentifier
pushDisabled
setPushState:
startFetchActivityForPush
_enabledTopicsForWrapper:
setPushRegistrationTime:
startFetchActivityForFetch
_suspendedTopicsForWrapper:
curStyle
_currentTruePCStyleForDelegate:
_resumeTopicsForSuspendedDelegate:
isSetToExpectedFetchInterval
_suspendTopicsForDelegate:
setCurStyle:
setWithObject:
watchedCollections
refreshCollections:withReason:
_refreshWrapperForDelegate:
_unregisterTopicLocked:forDelegate:inEnvironment:
stopCollectionsRefresh
dailyRefreshActivityFired
_dailyRefreshActivityFired
connection:didReceivePublicToken:
_wrapperIsSuspended:
_fakeTokenReceive
_unregisterWrapper:forTopic:inTopicDictionary:
_tearDownAPS
retryCollections:after:reason:
_pushRegistrationForDelegateFailed:
connection:didReceiveMessageForTopic:userInfo:
_performBlockOnRefreshManagerThread:
registerDelegate:
unregisterDelegate:
startDailyRefreshActivityForWrapper:
endDailyRefreshActivityForWrapper:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
delegateDidCompleteRefresh:
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
pushTokenForEnvironment:
persistAPSAfterShutdown
enabledTopicWrappersByEnv
setEnabledTopicWrappersByEnv:
suspendedTopicWrappersByEnv
setSuspendedTopicWrappersByEnv:
wrappers
setWrappers:
wrappersForDailyRefresh
setWrappersForDailyRefresh:
dailyRefreshInitialized
setDailyRefreshInitialized:
connection
setConnection:
apsConnections
setApsConnections:
tokenRegistrationTimer
setTokenRegistrationTimer:
pcQueue
setPcQueue:
_persistAPSAfterShutdown
_dailyRefreshInitialized
_enabledTopicWrappersByEnv
_suspendedTopicWrappersByEnv
_wrappers
_wrappersForDailyRefresh
_connection
_apsConnections
_tokenRegistrationTimer
_pcQueue
T@"NSMutableDictionary",&,N,V_enabledTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_suspendedTopicWrappersByEnv
T@"NSMutableSet",&,N,V_wrappers
T@"NSMutableSet",&,N,V_wrappersForDailyRefresh
TB,N,V_dailyRefreshInitialized
T@"APSConnection",&,N,V_connection
T@"NSMutableDictionary",&,N,V_apsConnections
T@"NSTimer",&,N,V_tokenRegistrationTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_pcQueue
TB,N,V_persistAPSAfterShutdown
_getThrottleDateIfApplicable
timeIntervalSinceReferenceDate
_sendCompletionWithError:retryThrottleTime:
syncingAccount
holidayCalendarURL
initWithLanguages:location:calendarType:url:
_addAuthenticationHeaders
setLimit:
setAccountInfoProvider:
error
urlsToResults
_handleCalendarSearchResults:
responseStatusCode
responseHeaders
objectForKey:
doubleValue
_setThrottledRetryDateUsingTimeInterval:
setCompletionBlock:
taskManager
submitIndependentTask:
region
payloadAsString
language
calendarDescription
setURLString:
setRegion:
setLanguage:
setCalendarDescription:
_sendResults:
dictionaryWithObject:forKey:
dictionary
numberWithDouble:
enabledForDADataclass:
currentCalendar
secondsInDay
compare:
allHTTPHeaderFields
dictionaryWithDictionary:
removeObjectsForKeys:
setAdditionalAuthenticationHeaders:
_searchTask
_syncingAccount
setWrapper:
setToken:
setPushKey:
setOnBehalfOfBundleIdentifier:
initWithToken:pushKey:wrapper:onBehalfOf:
session
invalidateAndCancel
setTask:
setRequest:
wrapper
tokenRegistrationRequest:finishedWithError:
_handleAuthenticationChallenge:completionHandler:
finishTasksAndInvalidate
cancelFetchActivity
allHeaderFields
bytes
initWithBytes:length:encoding:
authenticationMethod
previousFailureCount
proposedCredential
_canAuthenticateAgainstProtectionSpace:
_reallyHandleAuthenticationChallenge:completionHandler:
username
credentialWithUser:password:persistence:
handleTrustChallenge:forAccount:completionHandler:
serverTokenRegistrationURL
token
da_lowercaseHexStringWithoutSpaces
stringByAddingPercentEscapes
pushKey
requestWithURL:cachePolicy:timeoutInterval:
request
setValue:forHTTPHeaderField:
_setNonAppInitiated:
getAppleIDSession
defaultSessionConfiguration
set_appleIDContext:
set_sourceApplicationBundleIdentifier:
setURLCache:
setDiscretionary:
sessionWithConfiguration:delegate:delegateQueue:
setSession:
dataTaskWithRequest:
task
requestWithToken:pushKey:wrapper:onBehalfOf:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
cancel
sendRegistrationRequestForAccount:
hsa2Session
setHsa2Session:
_finished
_delegate
_wrapper
_onBehalfOfBundleIdentifier
_token
_pushKey
_request
_session
_task
_hsa2Session
T@"DARefreshWrapper",W,N,V_wrapper
T@"NSString",&,N,V_onBehalfOfBundleIdentifier
T@"NSData",W,N,V_token
T@"NSString",W,N,V_pushKey
T@"AKAppleIDSession",&,N,V_hsa2Session
TB,N,V_finished
T@"<DATokenRegistrationDelegate>",W,N,V_delegate
T@"NSMutableURLRequest",&,N,V_request
T@"NSURLSession",&,N,V_session
T@"NSURLSessionDataTask",&,N,V_task
fetchOfficeHoursWithConsumer:error:
_doRequestWithBlock:
setOfficeHours:withConsumer:error:
_finishedWithOfficeHours:error:canceled:
cancelOfficeHoursRequestWithID:
dataFromOfficeHours:
officeHoursRequestWithID:finishedWithOfficeHours:error:
officeHoursRequestWithID:finishedWithError:
initWithOptions:capacity:
_startOrStopObservingNetworkReachabilityAfterUpdatingDelegates
_startOrStopObservingHostReachabilityAfterUpdatingDelegates
_monitoringNetworkReachability
_startMonitoringNetworkReachability
_stopMonitoringNetworkReachability
_monitoringReachabilityForHost:
_startMonitoringReachabilityForHost:
_stopMonitoringReachabilityForHost:
enumerateKeysAndObjectsUsingBlock:
muckWithDelegates:
queue
sharedNetworkObserver
_networkReachabilityChanged:
addNetworkReachableObserver:selector:
removeNetworkReachableObserver:
_hostReachabilityChanged:
addObserver:selector:forHostname:
removeObserver:forHostname:
name
_notifyDelegatesNetworkReachable
_notifyDelegatesHostReachable:
null
unsignedLongLongValue
numberWithUnsignedLongLong:
hostLikelyUnreachable:
_networkReachableDelegates
_hostReachableDelegates
_hostsMonitoredForReachability
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
setTokenRegistrations:
retryActivityIdentifier
cancelRetryActivity
cancelDailyRefreshActivity
cancelAllTokenRegistrations
fetchInterval
fetchActivityIdentifier
_fetchActivityCriteriaWithInterval:
_fetchActivityCriteriaInOnPowerMode
XPCActivityInterval
setFetchInterval:
startFetchActivityWithInterval:
_stringForStyle:
tokenRegistrations
startDailyRefreshActivity
refreshCollections
refreshReason
setRefreshReason:
setRefreshCollections:
_retryActivityFired
_pushState
_curStyle
_refreshReason
_pushRegistrationTime
_tokenRegistrations
_refreshCollections
_fetchInterval
T@"NSMutableSet",&,N,V_tokenRegistrations
Ti,N,V_refreshReason
T@"NSMutableSet",&,N,V_refreshCollections
Tq,N,V_fetchInterval
T@"<DARefreshManagerDelegate>",W,N,V_delegate
Ti,N,V_pushState
T@"NSDate",&,N,V_pushRegistrationTime
Ti,N,V_curStyle
setIsUpdate:
initWithDictionary:
setRequestParams:
isUpdate
requestParams
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
setResponseParams:
responseParams
settingsRequestFinishedWithResults:status:error:
_isUpdate
_requestParams
_responseParams
TB,N,V_isUpdate
T@"DAOofParams",&,N,V_requestParams
T@"DAOofParams",&,N,V_responseParams
cancelCalendarDirectorySearchWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
displayName
setDisplayName:
firstName
setFirstName:
lastName
setLastName:
emailAddress
setPreferredAddress:
principalPath
setPrincipalPath:
_convertSearchQueryResults:
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
valueForHTTPHeaderField:
_finishWithJunkStatusString:error:
performGroupExpansionForPrincipalPath:consumer:
groupExpansionFinishedWithResults:error:
_principalPath
_resultsData
setAttachmentUUID:
beginDownloadingAttachmentWithUUID:consumer:
setDownloadID:
attachmentUUID
cancelDownloadingInstance:error:
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
downloadID
_attachmentUUID
_downloadID
T@"NSString",&,N,V_attachmentUUID
T@,&,N,V_downloadID
updateGrantedDelegatePermission:consumer:
cancelUpdateGrantedDelegatePermissionRequestWithID:
updateGrantedDelegatePermissionFinishedWithError:
_grantedDelegate
_coalesceAndReport
initWithDictionaryRepresentation:
mergeStatusReport:
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
optionsTimeoutTimer
setOptionsTimeoutTimer:
_cancelOptionsTimer
finishCoreDAVTaskWithError:
activeModalTask
principalURL
defaultDAVProbeTimeout
optionsProbe
setOptionsProbe:
registerAccount:forOperationWithName:
host
unregisterAccount:forOperationWithName:
_serverProbeTimedOut
submitQueuedCoreDAVTask:
_probeAndSyncWithBlock:
_optionsProbe
_optionsTimeoutTimer
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
T@"NSTimer",&,N,V_optionsTimeoutTimer
setAccountID:
setClient:
setDelegateID:
_consumerCancelled
_delegateID
_client
_accountID
T@"DADClient",W,N,V_client
T@"NSString",&,N,V_accountID
TB,N,V_consumerCancelled
T@"NSString",&,N,V_delegateID
setCalendarID:
respondToShareRequestForCalendar:withResponse:consumer:
_doResponseWithBlock:
reportShareRequestAsJunkForCalendar:consumer:
setShareID:
shareID
cancelShareResponseInstance:error:
calendarID
shareResponseFinishedWithError:
_calendarID
_shareID
T@"NSString",&,N,V_calendarID
T@"NSString",&,N,V_shareID
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSString"24@0:8@"DAReachability"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
v24@0:8@16
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
i16@0:8
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSError"24
@"NSArray"
@24@0:8^v16
^v16@0:8
B32@0:8@16@24
@32@0:8@16@24
B32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
B32@0:8^v16@24
@32@0:8@16^@24
v24@0:8Q16
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@"NSDictionary"
Q24@0:8@16
v20@0:8i16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
@"NSString"
@"NSCountedSet"
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@64@0:8@16@24@32@40@48@56
@"NSDate"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
v40@0:8@16@24@?32
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24@?<v@?q@"NSURLCredential">32
v56@0:8@16@24@32@40@48
v40@0:8@16q24q32
v56@0:8@"SubCalValidationTask"16@"NSError"24@"NSString"32@"ICSDocument"40@"NSData"48
v40@0:8@"SubCalValidationTask"16q24q32
v40@0:8@"SubCalDATask"16@"NSString"24@?<v@?@"NSString"@"NSString">32
I24@0:8^{__SecTrust=}16
@"NSURL"
@"DATaskManager"
@32@0:8@16B24B28
@"DAFolder"
@"CNContactStore"
i24@0:8@16
v44@0:8@16@24d32i40
@"NSMutableSet"
@"APSConnection"
v32@0:8@16d24
@"CalDAVCalendarSearchTask"
@48@0:8@16@24@32@40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@16@?24
@"<DATokenRegistrationDelegate>"
@"DARefreshWrapper"
@"NSMutableURLRequest"
@"NSURLSession"
@"NSURLSessionDataTask"
@"AKAppleIDSession"
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@16@24B32
@"NSHashTable"
v32@0:8@"DATokenRegistrationRequest"16@"NSError"24
r*16@0:8
@20@0:8i16
@24@0:8q16
v24@0:8q16
v28@0:8@16i24
v36@0:8@16d24i32
@"<DARefreshManagerDelegate>"
v40@0:8@16q24@32
v40@0:8@"DAOofParams"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
v28@0:8@16B24
v28@0:8@"NSError"16B24
@56@0:8@16@24@32@40Q48
@"NSSet"
v32@0:8@"NSDictionary"16@"NSError"24
v32@0:8q16q24
@"DAEGrantedDelegate"
@44@0:8@16i24d28@?36
@"CoreDAVOptionsTask"
@"DADClient"
Agent %@ needs to monitor reachability
Agent %@ no longer needs to monitor reachability
%@: Network is reachable, so triggering reachability block
%@: Notified that network is reachable, but we weren't asked to sync when reachable so ignoring.
Couldn't checkin with our port. Aborting.
If running from the command line make sure you don't already have %@ registered with launchd.
DADAccessManager is Disabled. Cancelling Connection
DADAccessManager event %@ clientName %@ is Entitled
DADAccessManager event %@ clientName %@ is NOT Entitled
DADAccessManager Received connection event %@ for clientName %@
DADAccessManager number of Current Clients %lu and they are %@
Could not get client ID through xpc_connection_copy_entitlement_value(), the client name is: %@
Found an existing DADClient with the same bundle id and with NULL xpc connection, using this DADClient and reconnecting. The client ID is: 1%@
Found an existing DADClient with the same bundle id and non-NULL xpc connection. Clean it up then reuse this DADClient and reconnect. The client ID is: %@
Found an existing DADClient with the same bundle id with same xpc connection. The client ID is: %@
DADAccessManager Adding New Client for %@ for clientName %@
DADAccessManager No New Clients For Event %@ clientName %@
DADAccessManager Initializing
DADAccessManager REMOVING client %@ from Current Clients %@
Found an existing DADClient with the same bundle id, not changing the folder list. The client ID is: %@
Add DADClient for client %@
Could not get an account with the ID [%@]
[%@] finished with error %@
[%@] finished, but could not find an account with the ID %@
Registered for wake notification
IONotificationPortGetRunLoopSource returned NULL, can't register for wake notification
IORegisterForSystemPower returned MACH_PORT_NULL, can't register for wake notification
DADAgentManager: Fetching active agents. count = %d, agents = %@
Triggering calendar migration if needed
Trigger calendar migration failed for some reason. Hope for the best?
Loading agents
Not creating an agent for account info %@ (%{public}@), it refused to init itself
Creating an agent for account info %@ (%{public}@)
Not creating an agent for account info %@ (%{public}@) because it should not be created
Loading up agent %@ for account "%@" (%{public}@)
Not loading an agent for account "%@" (%{public}@), because agentClass is nil
Not loading an agent for account "%@" (%{public}@), because it is disabled
DADAgentManager: Settings active agents. count = %d, agents = %@
Error when cleaning up client restrictions for persistentUUID %@.  Error %@
DADAgentManager: Clearing active agents. previous count = %d, previous agents = %@
Tearing down connection cache
Tore down connection cache
Handling power change call with messageType %d
The dataaccessd does not support currentPolicyKeyForAccount method, which is for Exchange accounts
The dataaccessd does not support requestPolicyUpdateForAccount method, which is for Exchange accounts
Did not start monitoring folder ids %@, because the agent said "nope"
Did not start monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not stop monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not suspend monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
Did not resume monitoring folder ids %@, because I have no agent containing account id %@.  Agents: %@
The dataaccessd does not support addPersistMonitoringAccountID method, which is for Exchange accounts
The dataaccessd does not support removePersistMonitoringAccountID method, which is for Exchange accounts
The dataaccessd does not support clearPersistMonitoringAccountID method, which is for Exchange accounts
ClearOrphanStores : Current DA CalDAV (events) Account IDs : %@
ClearOrphanStores : ACCOUNTDCOERROR Removing calendar store, as its account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing Calendar change tracking client, as its change tracking identifier "%@" isn't one of the account ids I know about: %@
Removing subscribed calendar, as it's account id %@ isn't one of the account ids I know about: %@
Removing subscribed calendar "%@", as there are two calendars with the same UID for account ID %@. Keeping %i, removing %i
Ignoring calendar in subscribed calendar store without an account ID, "%@" (external_id="%@")
AppleAccounts returned an error while trying fetch accounts: %@
DA is NOT removing orphan accounts, because we're in a holding pattern.
DA is NOT removing orphan accounts, because some joker told us not to in behavior options
ClearOrphanStores : Error Fetching com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Error Fetching Accounts of Type com.apple.account.CardDAVLegacy AccountType %@. Bailing on orphan cleanup
ClearOrphanStores : Adding a Legacy CardDAV Account %@ To list of AccountIDs
ClearOrphanStores : ===== Starting CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Turning it off
ClearOrphanStores : ACCOUNTDCOERROR Local store is enabled, but it shouldn't be. Leaving it alone because there are events in the local store
Skipping orphan cleanup because we couldn't open aux database with ID %i persona %{public}@ and path %@
ClearOrphanStores : ===== End CalDAV Orphan Store Cleanup ======
ClearOrphanStores : ===== Starting CardDAV Orphan Store Cleanup ======
ClearOrphanStores : Current DA CardDAV and LegacyCardDAV Account IDs : %@
ClearOrphanStores : Checking if contact accountID %@ is a know DA CardDAV AccountID.
ClearOrphanStores : ACCOUNTDCOERROR Removing ABAccount, as its account id %@ isn't one of the account ids that I know about %@ %@
ClearOrphanStores : Contact accountID %@ is a known DA CardDAV AccountID - NoChanges
ClearOrphanStores : ACCOUNTDCOERROR Removing contact store, as it's account id %@ isn't one of the account ids I know about: %@
AClearOrphanStores : CCOUNTDCOERROR Removing contact search store, as it's account id %@ isn't one of the account ids I know about: %@
ClearOrphanStores : Removing AB change tracking client, as its change tracking identifier "%@" doesn't belong to one of the account ids I know about: %@
ClearOrphanStores : Deleting all iCloud delegate databases as no primary iCloud contacts account is enabled or exists
ClearOrphanStores : ===== End CardDAV Orphan Store Cleanup ======
Ignoring Notes orphan check.  You asked for it.
ACCOUNTDCOERROR Removing notes store, as it's account id %@ isn't one of the account ids I know about: %@
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Refusing to load agents because we are running as the setup user
DAAgentManager: NO startAgentWhenSystemReadyBlock defined. This will not load any agents
DAAgentManager: System Ready Calling Load Agents Block
DAAgentManager: System Not Yet Ready. We are Not Loading Agents
DAAgentManager: Clearing disableMonitoringAgentsTokens and Loading Agents
DATransaction starting, ID: %@
Failed to register CT server notification %@ (domain: %d error: %d).
Failed to create CT server connection
Received cellular data usage changed notification. Checking if a refresh is required.
User allowed cellular or wifi data for BundleID %{public}@
Wireless data usage policy changes do not affect any existing agents; no refreshes will be done.
Refreshing account %{public}@ because wireless data use is now allowed for %{public}@ and might not have been before.
Loading our agents
Removing CFURLCache entries
XPC: Received darwin notification: %{public}@
XPC: Received PCPreferencesDidChangeNotification due to user change
XPC: Received CDBPreferences_Notification_kCalPreferredDaysToSyncKey
XPC: Received com.apple.dataaccess.checkHolidayCalendarAccount
Agents loaded and monitoring.  They are %@
DAAgentManager: System Not Yet Ready. We will Register for BuddyFinished and KeyBagLock status Notification
REGISTER FOR BUDDY
EXITING REGISTER FOR BUDDY
Agents awaiting shut down are %@
Stopping our agents (which are %@)
Stopping agent %@
Agent %@ has stopped monitoring
agentsAwaitingShutdown count is now %lu
Still waiting for %lu agents to shut down.  Spinning a run loop. Outstanding agents are %@
Run Loop finished.  Active Agent count is now %ld.
Agents stopped and saved
Ignoring call to enableMonitoringAgentsWithToken: with unrecognized token %d
DADAgentManager asked to enableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 0. Start Loading Agents..
DADAgentManager asked to disableMonitoringAgents. New count = %d
DADAgentManager disableMonitoringAgents reached 1. Stop Loading Agents..
Found an EAS Account %@
The dataaccessd does not support setFolderIdsThatExternalClientsCareAboutAdded method, which is for Exchange accounts
The dataaccessd does not support reportFolderItemsSyncSuccess method, which is for Exchange accounts
The dataaccessd does not support processFolderChange method, which is for Exchange accounts
unable to signal launchd to keep dataaccessd alive: errno %d
unable to cleanup launchd semaphore so that dataaccessd can be pressured exit: errno %d
Creating a new DADClient for Connection %p and ClientID %@
ClientDied Not Dispatching XPC Event %@ for DADClient %@
Dispatching XPC Event %@ for DADClient %@
Destroying DADClient %p for Connection %p and ClientID %@
Not stop monitoring account %@ folder %@ because other clients are watching it
PersistentClientCleanup called on disabled client. Will not perform any actions.
DAPERF DADClient Bumped priority, someone's waiting
DAPERF DADClient Dropping priority back to refresh
DAPERF DADClient Dropping priority, no one's waiting
DAPERF DADClient Bumping priority to refresh
Received begin monitoring folders request with persistent flag: %@
Malformed request from client in %s: %@
Malformed request from client in %s: bad accountID
No folders watched. Marking not persistent. Transaction: %@
Sending pending folder updates to client. Updated folders: %@
Remote client disconnected and reconnected while begin monitoring folders.
Remote client disconnected and reconnected while stopping monitoring folders.
Remote client disconnected and reconnected while resuming monitoring folders.
Remote client disconnected and reconnected while suspending monitoring folders.
Requested to start monitoring agents with unrecognized client token %d. Forcing a reload.
StopMonitoringAgents timeout reached! %{public}@ (%i) requested we stop monitoring agents but didn't tell us to resume within %i seconds of the last stop. Assuming it's broken and starting monitoring agents again anyway with client tokens: %@
Buddy needs to Run. Resetting Outstanding Agents and Registering for Buddy for Client %@
Ignoring call to _startMonitoringAgents: with missing client token
Ignoring call to _handleAccountChange: with missing account change info data
_handleAccountChange: Failed to decode account change info: %@
Cannot find account with identifier %{public}@
_requestFolderContentsUpdateForFolders for account %@, dataclass 0x%lx isUserRequested %d
Block: request folder contents update (accounts %@, folders %@): error updating folder contents
Deferring request to update folders %@
Not forwarding request to update folders, as we already did that recently, and have a deferred request queued
_requestAllFolderContentsUpdateForAccountId %@, dataclasses 0x%lx, isUserRequested: %d
[DADAgentManager sharedManager] number of Current Agents %lu and they are %@
Block: request all folder contents update (accounts %@): error updating folder contents
Block: DADClient %@ with XPC Connection %@ is In Bad State
Deferring request to update all folders
Not forwarding request to update all folders, as we already did that recently, and have a deferred request queued
_requestFolderListUpdateForAccountId %@, dataclass 0x%lx, isUserRequested %d
Block: request folder list update (accounts %@): error updating folder contents
Deferring request to update folder list
Not forwarding request to update folder list, as we already did that recently, and have a deferred request queued
%@: error processing meeting 
Remote client disconnected and reconnected while processing meeting request.
_resetCertWarningsForAccountWithId %@ dataclasses %lx
error resetting cert warnings account ID %@ dataclasses 0x%lx
Unable to read data to decode folder change: %@
Swallowing decoder exception of %@, treating as null data
No status reports available
_resetThrottleTimersForAccountWithId %@
_beginDownloadingAttachment UUID: %@, accountID: %@
_cancelDownloadingAttachmentEvent downloadID: %@
Received a cancel for download %@, but that download doesn't exist any more
_respondToSharedCalendar UUID: %@, response: %ld, accountID: %@
_reportSharedCalendarAsJunk UUID: %@, accountID: %@
DATransaction starting, ID: %{public}@
_fetchOfficeHours accountID: %{public}@
_setOfficeHours accountID: %{public}@
_markSubscribedCalendarAsJunk
_checkSubscribedCalendarIsJunk
_fetchHolidayCalendars
_cancelDownloadingSubscribedCalendar downloadID: %@
Received a cancel for subcal download %@, but that download doesn't exist any more
Received a password for subcal download %@, but that download doesn't exist any more
Starting calendar availability request with accountID: [%@], startDate: [%@], endDate: [%@], ignoredEventID: [%@], addresses: [%@]
Starting granted delegates list request with accountID: [%@]
Starting update-granted-delegate-permission request with accountID: [%@]
Starting calendar directory search with accountID: [%@] recordTypes: [%@] resultLimit: [%lu] terms: [%@]
Starting groupExpansion accountID: [%@] principalPath: [%@]
Launching %@
Failed to launch %@: %@
_manageCalDAVServerSimulatorWithHostname called with nil hostname
_manageCalDAVServerSimulatorWithHostname called with unrecognized action: %@
Client of DADClient died, cleaning up.
LOOK AT ME!!!! Got an unknown error, the client messed with our connection in a way we weren't expecting.  If you're seeing this, get ready for some pain
Received xpc message %@
Client %@ (%i) is not authorized to send message %@
unknown request sent to client.
request: %@
Unknown message: %@
Remote client disconnected and reconnected while sending a message it was not authorized to send.
Signal USR1 (30) received.  Exit if xpc transaction count is 0.
The xpc transaction count is %d. Do nothing.
QUIT received.  Shutting down.
HUP received.  HUP is currently unused.  Ignoring.
USR2 received.  Dumping our state.
Initiating DA Shutdown...
UserManagementFramework: Ending Switch Task For %@
Add Force Logout Timer in %d seconds
No Active Agents to sync.
EAS Accounts Found. Forcing Logout without manual sync
UserManagement. Switch Tasks already pending. NOOP
UserManagementFramework: Creating Switch Tasks For Pending Transcation Count %d
UserManagementFramework: No Pending Transcation Count. Exiting without blocking logout.
All Transactions Finished. Initiating DA Shutdown
Dataaccess Migrator Performing Synchronous Migration
Dataaccess Migrator Done Synchronous Migration. Updating Version
Device is a %@AppleInternal install
Enabling CFNetwork diagnostics
DA launched on network connectivity
Agents have completed their first start after launch.
DA launched on network connectivity - DONE
DA launched on network connectivity - asked to defer, deferring now
Received notification "%@" indicating a language change.  Going to exit to pick up new locale support
Reporting subscribed calendar as junk successful: %@
Report subscribed calendar as junk failed. Error = %@  Response status code = %ld  Calendar URL = %@
Report subscribed calendar as junk failed. Error = %@  Calendar URL = %@
Report subscribed calendar as junk failed. Unable to create a URL request. Calendar URL = %@
Report subscribed calendar as junk -finishWithError: called with error %@
Unable to add authentication headers. Sending subscribed calendar report without it.
Could not get an account with the ID %@
DADClientContactsSearchDelegate finished with status %ld. Finishing DASearchQuery %p
DADServerContactsSearchTask finished, but could not find an account with the ID %@
No valid document after downloading subscribed calendar
Received a password, but don't have a password continuation block.
-[DADClientSubscribedCalendarDownloadDelegate finishWithError:summary:] called while we were waiting for a password. (error = %@, summary = %@)
DADClientSubscribedCalendarDownloadDelegate finished with error %@
Couldn't archive summary %@: %@
Missing required container identifier
Forcing APS environment to %@
Setting our enabled APS topics to %@
Performing token registration; Wrapper %@ is in state %d and its last push registration time was %@ (%f)
Skipping token re-registration; wrapper %@ is in state %d and its last push registration time was %@ (%f)
No public token. We won't be re-registering our tokens with the server
Timer fired. Re-registering everything with APS
Push registration failed for delegate %@. Falling back to poll.
Resuming XPC Activities for polling
Suspending topic "%@" for delegate %@
Resuming XPC Fetch Activities for polling
Resuming topic "%@" for delegate %@
Account "%@" (%{public}@): Resuming Push Delegate's PC style changed from %d to %d
Account "%@" (%{public}@): Suspending push and resuming XPC Activity for polling
Push settings changed for %lu accounts and remained the same for %i.
Received token %@ from APS. Registering all delegates with their servers
Received a message from APS for topic %@ with user info %@.
Received an APS push for %@ but we don't have any enabled delegates registered for that topic.
Enabled waiters: 
Suspended waiters: 
Waiter %@: %@
Registering delegate %@ for PC notifications
Begin Unregistering delegate %@ for all PC and APS notifications
Unregistering delegate %@ for all PC and APS notifications
Shutdown: Wrapper %@ Leaving push topics registered. delegate %@ for all PC and APS notifications
Delegate %@ was unregistered, but it was never registered
Registering daily refresh xpc activity.
Updating criteria for daily refresh xpc activity.
Unregistering daily refresh xpc activity.
Registering delegate %@ for topic %@ in environment %@
Delegate is not set to push, so putting it on the suspended queue
Removing refresh manager delegate for account %@ from topic %@
Delegate %@ tried to unregister for the topic %@, but that delegate is not registered with the refresh manager
No more delegates for any topic. Tearing down APS
Setting ourself enabled for these APS topics: %@
Resuming account %@ for polling
Delegate %@ finished a refresh but it is not registered with the refresh manager
Delegate %@ told us to retry a refresh later but it is not registered with the refresh manager
HolidayCalendarFetch: Server requested we not fetch. Denying retries until %@
HolidayCalendarFetch: no valid calendar account found.
HolidayCalendarFetch: Error fetching list of holiday calendars: %@
HolidayCalendarFetch: Unable to find iCloud account with Calendars enabled.
HolidayCalendarFetch: Preventing retries until after: %@
The token registration session became invalid for account ID %@: %@
Token registration session became invalid for account %@
The token registration task failed to load for account ID %@: %@
Token registration task finished for account %@
The server accepted our push token request (status %d)
The server returned a status of %d to our token registration request. Falling back to PC. Server response headers are %@
The server returned a response of "%@"
Can authenticate against protection space %@? %@
Cancelling authentication because it's already failed
Received an authentication challenge for account %@ method %@
Responding to authentication challenge with username %@ and password
Token registration - Continuing without credential for challenge
Token registration - Waiting for runloop callback to decide what to do
Can't send a token registration for %@ because it doesn't implement serverTokenRegistrationURL.
Registering token %@ with the server at %@
DADClientOfficeHoursRequestDelegate finished with error %@
DADClientOfficeHoursRequestDelegate canceled, but could not find an account with the ID %{public}@ to cancel the request
Started monitoring network reachability
Stopped monitoring network reachability
Started monitoring network reachability for host %@
Stopped monitoring network reachability for host %@
Network reachability changed notification %{public}@
Host reachability changed notification %{public}@
XPC: Cancelling Retry Activity for account "%@" (%{public}@) retryActivityIdentifier: %s
%@: Stopping XPC Activities for Refreshing Collections
%@: Cancelling pending Token Registration request
Delegate (%@) returned invalid fetch interval %lli; using system default
Don't start fetch because either DAAccount is nil or account description is nil
XPC: Registering Fetch Activity for account "%@" (%{public}@) retryActivityIdentifier: %s, Interval %lld
Updating criteria for fetch xpc activity for account "%@" (%{public}@)
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
Start fetching in automatically mode for account "%@" (%{public}@)
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_CONTINUE for account %@
XPC: Performing Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Manual Sync Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Starting a Temp Sync Fetch Activity before Transitioning to Push for account "%@" (%{public}@) fetchActivityIdentifier %s, Interval %lld
XPC: Cancelling Fetch Activity for account "%@" (%{public}@) fetchActivityIdentifier %s
Performing token registration request for %@ with watched collections %@
Refreshing delegate %{public}@
Retry activity  fired for delegate %{public}@
Daily refresh activity fired for delegate %{public}@
Setting a timer to refresh the collections %@ for delegate %@ after %f seconds
DADClientSettingsDelegate initialized.
DADClientSettingsDelegate dealloced.
DADClientSettingsDelegate finished with status %ld.
Checking whether subscribed calendar is junk successful. Received result %@ for URL: %@
Checking whether subscribed calendar returned success, but did not give us a junk score: %@
Checking whether subscribed calendar is junk failed. Error = %@  Response status code = %ld  Calendar URL = %@
Checking whether subscribed calendar is junk failed. Error = %@  Calendar URL = %@
Checking whether subscribed calendar is junk failed. Unable to create a URL request. Calendar URL = %@
Checking whether subscribed calendar is junk -finishWithError: called with error %@
DADAttachmentDownloadDelegate finished with error %@
DADAttachmentDownloadDelegate finished, but could not find an account with the ID %@
The options task timer fired, but the task manager is modal. We'll wait until it drops modal before tearing down this task.
We weren't able to reach the server at %@ within %lf seconds. Bailing out of this refresh early.
Ignoring probe request for "%@" as we already have one outstanding
The babysitter has put this account in timeout, so giving up on this probe sync. %@
Probing the host at %@ to see if we have a good enough network connection. We'll wait up to %lf seconds.
Account "%@" (%{public}@) couldn't reach the server at %@: %@
We were able to reach the server at %@. Continuing with the refresh
DADClientShareResponseDelegate finished with error %@
DADClientShareResponseDelegate finished, but could not find an account with the ID %@
%@ %@
com.apple.dataaccess.dataaccessd.PersistentPush
v16@?0@"NSObject<OS_xpc_object>"8
Should never call -init on DADAccessManager.  Use +sharedManager instead.
Client %@ (%i) has %lu outstanding stop requests
DADAgentsStartedNotification
DADAgentsStoppedNotification
com.apple.purplebuddy.setupdone
com.apple.dataaccessd
v8@?0
activeAgentsQueue
DataAccess
AccountInformation.plist
DAAgentClass
Identifier
com.apple.eas.account
DADAgentManager.m
When clearing orphaned stores, we have an account with no accountID.  That's bad.  account: %@
com.apple.dataaccess.ctdatapolicychangeq
v24@?0^{__CFString=}8^{__CFDictionary=}16
kCTPerAppNetworkDataAccessPolicyChangedNotification
com.apple.notifyd.matching
PCPreferencesDidChangeNotification
com.apple.dataaccess.checkHolidayCalendarAccount
v16@?0@"DAAgent"8
com.apple.dataaccess.account
type
disableMonitoringAgents
=======
(Skipped %lu agents without interesting state)
Outstanding shutdown tokens: %lu
Somebody isn't maintaining their account setup correctly
Library/Preferences/com.apple.dataaccess.activesync
DADRequestClientStatusDumpNotification
DADClient.m
DADClient already has a connection. Client bundle ID is: %@
(unknown)
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[DADClient _beginMonitoringFolders:]
v12@?0B8
B8@?0
-[DADClient _stopMonitoringFolders:]
-[DADClient _resumeMonitoringFolders:]
-[DADClient _suspendMonitoringFolders:]
dataaccessd
-[DADClient _requestFolderContentsUpdate:]
-[DADClient _requestAllFolderContentsUpdate:]
-[DADClient _requestFolderListUpdate:]
Account ID is NULL when opening a contacts search. BailWhale
Query Dictionary Representation is NULL when opening a contacts search. BailWhale
-[DADClient _processMeetingRequests:]
-[DADClient _asyncProcessMeetingRequests:]
v40@?0@"NSString"8@"NSString"16q24@"NSError"32
root
v16@?0@"NSArray"8
Account ID is NULL when starting attachment download.
Attachment UUID is NULL when starting attachment download.
Attachment UUID is NULL when cancelling attachment download.
Account ID is NULL when starting calendar share response.
Attachment UUID is NULL when starting calendar share response.
Response type is NULL when starting calendar share response.
Account ID is NULL when opening a settings request. BailWhale
'accountID' is nil when starting calendar availability request.
'startDate' is nil when starting calendar availability request.
'endDate' is nil when starting calendar availability request.
'accountID' is nil when starting granted delegates list request.
'accountID' is nil when starting update-granted-delegate-permission request.
'grantedDelegateData' is nil when starting update-granted-delegate-permission request.
Failed to unarchive granted delegate: %@
'accountID' is nil when starting calendar directory search.
'accountID' is nil when starting group expansion.
'principalPath' is nil when starting group expansion.
v16@?0@"NSError"8
com.apple.dataaccess.statusreportaggregator
com.apple.private.dataaccessd.internal_tool
application-identifier
AAACCOUNTS.com.apple.accountsd
DA-Blocking Task
LogoutReceived
com.apple.language.changed
com.apple.purplebuddy.LanguageResetReady
DataAccess State
@"NSString"8@?0
com.apple.dataaccessd.dadOperation
com.apple.dataaccessd.dadHighAvailability
CFNETWORK_DIAGNOSTICS
com.apple.dataaccess.connected
Received notification "%@" indicating a language change.  Going to exit to pick up new locale support
SyncWindow=%i
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
https://caldav.icloud.com
/subscribe/reportjunk
POST
text/xml; charset=utf-8
content-type
#%02X%02X%02X
SubCalValidationTask
<%@: %p> { Folder %@, hasRemoteChanges: %d, isInitialUberSync %d isResyncAfterConnectionFailed %d actions %@ }
com.apple.dataaccess
CardDAV-changehistory
com.apple.dataaccessd.darefresh.pcqueue
DARefreshManager enabled wrappers:
Topic "%@" {
DARefreshManager suspended wrappers:
DARefreshManager wrappers:
production
development
demo
DARefreshManager.m
Couldn't come up with an env string for DAEnvString %@
com.apple.dataaccess.dataaccessd.aps
com.apple.dataaccess.dataaccessd.aps.dev
com.apple.dataaccess.dataaccessd.aps.demo
1051051051051051051051051051051051051051051051051051051051051050
Delegate %@ tried to register for a nil topic.
com.apple.dataaccess.dataaccessd.dailyrefresh
HolidayCalendarFetchThrottleDate
Holiday
%@?token=%@&key=%@
User-Agent
@"NSString"24@?0@"DAAccount"8^@16
com.apple.dataaccess.DAReachability
v32@?0@"NSString"8@"NSHashTable"16^B24
com.apple.dataaccess.dataaccessd.retry.%@
Push
Poll
Manual
UNKNOWN!
com.apple.dataaccess.dataaccessd.fetch.%@
<DARefreshWrapper 
 for delegate %@
: Push state %d, style %@
, last registration: %@
, %ld outstanding token registrations
X-Apple-Junk-Score
/subscribe/validate
%@Probe
DADClientDelegate.m
finishWithError: should be implemented in the subclass
@"NSString"16@?0@"DAAccount"8
MobileCalDAVAccount
unregisterClientWithIdentifier: is abstract
registerClientWithIdentifier: is abstract
identifiersOfAllRegisterdClients: is abstract
DaemonAdditions
DAAgent
DAReachabilityClient
NSObject
DARefreshManagerDelegateSupport
CalendarSupport
DADAccessManager
DADaemonPowerAssertionManager
DADClientGrantedDelegatesListResponseDelegate
DAEventsGrantedDelegatesListResponseConsumer
_DAChangeHistoryABLegacyClerk
DADAgentManager
DADClient
DADClientCalendarAvailabilityResponseDelegate
DAEventsCalendarAvailabilityResponseConsumer
DADClientAccountTimers
DADMain
UMUserSwitchStakeholder
DATransactionMonitorDelegate
DADClientSubscribedCalendarJunkReportDelegate
DADClientContactsSearchDelegate
DASearchQueryConsumer
DADClientSubscribedCalendarDownloadDelegate
SubCalValidationTaskDelegate
SubCalDATaskTrustDelegate
SubCalDATaskPasswordDelegate
DAFolderSyncRequest
_DAChangeHistoryContactsClerk
DARefreshManager
DADClientHolidayCalendarFetchDelegate
DATokenRegistrationRequest
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
DADClientOfficeHoursRequestDelegate
DAEventsOfficeHoursRequestResponseConsumer
DAReachability
DARefreshWrapper
DATokenRegistrationDelegate
DADClientSettingsDelegate
DASettingsResponseDelegate
DADClientCalendarDirectorySearchResponseDelegate
DAEventsCalendarDirectorySearchResponseConsumer
DADClientSubscribedCalendarJunkCheckDelegate
DADClientGroupExpansionResponseDelegate
DAEventsGroupExpansionResponseConsumer
DADClientAttachmentDownloadDelegate
DAEventsAttachmentDownloadConsumer
DADClientUpdateGrantedDelegatePermissionResponseDelegate
DAEventsUpdateGrantedDelegatePermissionResponseConsumer
DADStatusReportAggregator
DACoreDAVAgent
DABabysittable
DADClientDelegate
DADClientShareResponseDelegate
DAEventsCalendarSharingResponseConsumer
DAChangeHistoryClerk
null
enabledForAnyDADataclasses:
sharedConnection
setPrincipalPath:
archivedDataWithRootObject:
monitorFoldersWithIDs:
urlFromDataclassPropertiesForDataclass:
setDisplayName:
accountWithIDShouldContinue:
reloadAccounts
initWithObjectsAndKeys:
handleTrustChallenge:forAccount:completionHandler:
stringWithUTF8String:
minusSet:
sharedBabysitter
enabledDataclassesBitmask
resumeMonitoringFoldersWithIDs:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
setPreferredAddress:
uploadTaskWithRequest:fromData:completionHandler:
cancelDownloadingInstance:error:
registerUserSwitchStakeHolder:
initWithObjects:
currentHandler
setDiscretionary:
HTTPBody
performSelector:withObject:afterDelay:
stringWithFormat:
handleFailureInMethod:object:file:lineNumber:description:
mergeStatusReport:
currentCalendar
enabledDataclasses
shared
initWithLanguages:location:calendarType:url:
performSearchQuery:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
stringByAppendingString:
DAExtendedDescription
appendString:
resume
markForDeletion
setPerformQuickValidation:
initWithLabel:
cancelCalendarDirectorySearchWithID:
accountTypeWithAccountTypeIdentifier:error:
updateSaveRequest:
CFNetworkLogging
handleAccountDidChange:withChangeInfo:store:
stringByAppendingPathComponent:
set_sourceApplicationBundleIdentifier:
responseStatusCode
updateOofSettingsWithParams:consumer:
mainRunLoop
enableChangeLogging:
appendFormat:
credentialWithUser:password:persistence:
registerChangeHistoryClientIdentifier:forContainerIdentifier:error:
setPath:
initWithIdentifier:description:
accountTypeWithAccountTypeIdentifier:
performGroupExpansionForPrincipalPath:consumer:
green
cancelCalendarAvailabilityRequestWithID:
stringByAppendingFormat:
emailAddress
set_appleIDContext:
registerAccount:forOperationWithName:
appendElement:inNamespace:withStringContent:withAttributeNamesAndValues:
updateGrantedDelegatePermission:consumer:
initWithFireDate:interval:target:selector:userInfo:repeats:
accountTypeIdentifier
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
stringByAddingPercentEscapes
get_kCalRemindersPreferredDaysToSyncKey
responseHeaders
doubleValue
loadDaemonBundleForACAccountType:
region
initWithEnvironmentName:namedDelegatePort:queue:
accountType
payloadAsString
string
get_kCalPreferredDaysToSyncKey
allValues
domain
setWithObjects:
initWithDictionaryRepresentation:consumer:
refreshThrottleTime
countForObject:
setData:
stopMonitoringFoldersWithIDs:
respondToShareRequestForCalendar:withResponse:consumer:
displayName
setWithObject:
initWithDictionaryRepresentation:
allObjects
length
setOfficeHours:withConsumer:error:
accountIdentifier
countByEnumeratingWithState:objects:count:
parentAccountIdentifier
setWithArray:
allKeys
initWithDictionary:
resetSyncStatusIfNecessaryForStoresOfType:
displayAccount
leafAccountTypes
unsignedLongLongValue
count
calendarDescription
parentAccount
getCFRunLoop
lastName
allHeaderFields
resetStatusReport
unsignedIntegerValue
accountForContainerWithIdentifier:
initWithContentsOfFile:
setObject:forKeyedSubscript:
copy
getAppleIDSession
calendar
setConsumer:
statusReport
setValue:forHTTPHeaderField:
allHTTPHeaderFields
language
continueWithoutCredentialForAuthenticationChallenge:
setObject:forKey:
accountDescription
cal_serializableError
statusCode
resetCertWarnings
allContainersForAccountWithExternalIdentifier:
containsObject:
setCompletionBlock:
calSyncingAccountUsingChildAccounts:
orphanCheckEnabled
requestWithURL:cachePolicy:timeoutInterval:
setUseShortTimeout:
didReceiveDarwinNotification:
keychainAccessibilityType
allContainers
unregisterChangeHistoryClientIdentifier:forContainerIdentifier:error:
absoluteString
_setNonAppInitiated:
setColor:
firstObject
calSaveDatabaseForAccountID:
unregisterAccount:forOperationWithName:
allAccounts
dictionaryWithObjects:forKeys:count:
setNotes:
initWithCapacity:
abOpenDBAsGenericClient
firstName
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
dictionaryWithObject:forKey:
setURLString:
initWithBytes:length:encoding:
requestPriority:forClient:dataclasses:
isSubscribedCalendarAccount
unionSet:
abDB
openApplication:options:withResult:
calOpenDatabaseAsGenericClientForAccountID:
setURLCache:
dictionaryWithDictionary:
unarchivedObjectOfClass:fromData:error:
raise
abCloseDBAndSave:
initWithBackingAccountInfo:
calIsiCloudCalDAVAccount
setURL:
dictionaryRepresentation
isRunningAsSetupUser
agentClassForACAccount:
setMainDocumentURL:
initWithArray:
abChangeTrackingID
type
setCalendarDescription:
officeHoursFromData:
calDatabaseForAuxDatabaseRef:
dictionary
setTransactionMonitorDelegate:
aa_primaryAppleAccount
completelyIgnoreNotes
finishTasksAndInvalidate
calDatabaseForAccountID:
objectForKeyedSubscript:
compare:
requestGrantedDelegatesListWithConsumer:
initWithAccountStore:
aa_isAccountClass:
setMailAccountLoadOptions:
finishCoreDAVTaskWithError:
objectForKey:
startElement:inNamespace:withAttributes:
calCloseDatabaseForAuxDatabaseRef:save:
addValue:forHTTPHeaderField:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
transactionId
setLocalStoreEnabled:inDatabase:
aa_appleAccountsWithError:
code
fileSystemRepresentation
calCloseDatabaseForAccountID:save:
objectAtIndexedSubscript:
setTitle:
isLocalStoreEnabledInDatabase:
deleteAccount:
setLimit:
aa_addDeviceIDHeader
transactionCount
object
fetchOfficeHoursWithConsumer:error:
bytes
setAdditionalAuthenticationHeaders:
isLocalStoreEmptyInDatabase:
setLastName:
addToCoreDAVLoggingDelegates
aa_addAuthTokenOrBasicAuthHeaderWithAccount:preferUsingPassword:
numberWithUnsignedLongLong:
addTimer:forMode:
setSyncingAllowed:
isLocal
APSEnv
bundleID
reportShareRequestAsJunkForCalendar:consumer:
numberWithUnsignedInteger:
x_wr_relcalid
setSubscriptionURL:
setAccountInfoProvider:
numberWithUnsignedInt:
boolValue
x_wr_caldesc
setSubscriptionID:
isInHoldingPattern
addSaveRequest:
x_apple_calendar_color
numberWithLongLong:
blue
isEqualToString:
timeIntervalSinceReferenceDate
providerWithContactStore:
beginSimulationWithHostname:
numberWithLong:
externalIdentifier
shouldCreateAccountForBackingAccountInfo:
defaultSessionConfiguration
x_apple_auto_refresh
addObserver:selector:name:object:
setLanguage:
removePersistentCredentials
isEnabledForDataclass:
timeIntervalSinceNow
providerWithAddressBook:
numberWithInteger:
executeAllSaveRequests
addObserver:selector:name:
writeToFile:atomically:
defaultManager
isDisabled
timeIntervalSinceDate:
protocolVersion
sessionWithConfiguration:delegate:delegateQueue:
numberWithDouble:
sharedTransactionMonitor
defaultDAVProbeTimeout
exceptionWithName:reason:userInfo:
addObserver:selector:forHostname:
isDelegateAccount
removeOrphanedClientRestrictionsWithCompletion:
protectionSpace
timeInterval
sharedSession
numberWithBool:
removeObserver:name:object:
isAppleInternalInstall
proposedCredential
addObjectsFromArray:
defaultCenter
taskWithName:reason:forBundleID:
initForReadingFromData:error:
beginDownloadingAttachmentWithUUID:consumer:
serverTrust
sharedService
decodeObjectOfClass:forKey:
taskManager
removeObserver:name:
addObject:
removeObserver:forHostname:
sharedRunLoop
addNetworkReachableObserver:selector:
invalidateAndCancel
dateWithTimeIntervalSinceNow:
retrieveOofSettingsForConsumer:
identifier
sender
begin
setRegion:
errorWithDomain:code:userInfo:
watchedCollections
invalidate
date
removeObserver:
hostWithoutPath
error
sharedPowerAssertionManager
backingAccountInfo
removeObjectsForKeys:
intersectsSet:
principalURL
databaseIsCorrupt:
setHTTPMethod:
changeType
sharedNetworkObserver
enumerateKeysAndObjectsUsingBlock:
authenticationMethod
activeModalTask
secondsInDay
valueForHTTPHeaderField:
dataTaskWithRequest:
setRefreshInterval:
host
intersectSet:
removeObjectForKey:
principalPath
setHTTPBody:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
ensureHolidayAccountExistsWithAccountStore:
dataFromOfficeHours:
cancelUpdateGrantedDelegatePermissionRequestWithID:
intValue
removeObject:
previousFailureCount
holidayCalendarURL
suspendMonitoringFoldersWithIDs:
scheduleIdentifier
endSimulationWithHostname:
asSource
removeNetworkReachableObserver:
cancelShareResponseInstance:error:
data
asContainer
endElement:inNamespace:
sharedKeychain
initWithURL:
setFirstName:
removeFromCoreDAVLoggingDelegates
cancelSearchQuery:
postNotificationName:object:
hasPrefix:
substringFromIndex:
arrayWithObjects:count:
sharedInstanceForAccountType:creatingClass:
initWithTrust:
userInfo
accountsWithAccountType:options:error:
removeDelegateDatabasesNotMatchingAltDSIDs:
daemonAppropriateAccountClassForACAccount:
subscriptionURL
persistentUUID
name
endDailyAnalyticsReporter
arrayWithCapacity:
save:
sharedInstance
useCredential:forAuthenticationChallenge:
da_newGUID
accountsWithAccountType:
submitQueuedTask:
cancelPreviousPerformRequestsWithTarget:selector:object:
handleWebcalURL:
sharedGateKeeper
mutableCopy
array
da_lowercaseHexStringWithoutSpaces
submitQueuedCoreDAVTask:
initWithString:
useContactsFramework
cancelOfficeHoursRequestWithID:
setEnabledTopics:
UTF8String
enabledForDADataclass:
archivedDataWithRootObject:requiringSecureCoding:error:
sharedDBWatcher
initWithOptions:capacity:
urlsToResults
da_dataWithHexString:
accountWithIdentifier:
setProtocolVersion:
removeAllObjects
submitIndependentTask:
URLWithString:
cancelGrantedDelegatesListRequestWithID:
deviceWillSleep
deviceDidWake
init
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
networkReachable
hostToObserveForDAReachability:
initWithAccount:
trustHandler
stateString
shouldBeMonitoringReachability
startOrStopMonitoringReachability:
observeReachabilityWithBlock:
stopObservingReachability
setNetworkReachableBlock:
setSyncWhenReachable:
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
shutdown
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:callback:
getDAAccount
publicDescription
isMonitoring
setIsMonitoring:
account
setAccount:
lastRetryTimeout
setLastRetryTimeout:
syncWhenReachable
networkReachableBlock
isWaitingForPassword
setIsWaitingForPassword:
.cxx_destruct
_isMonitoring
_syncWhenReachable
_isWaitingForPassword
_account
_lastRetryTimeout
_networkReachableBlock
T@"DAAccount",&,N,V_account
Td,N,V_lastRetryTimeout
TB,N,V_syncWhenReachable
T@?,C,N,V_networkReachableBlock
TB,N,V_isWaitingForPassword
TB,N,V_isMonitoring
T@"DATrustHandler",R,N
T@"NSString",R,N
saveXpcActivity:
agentClass
preferredEventDaysToSync
preferredToDoDaysToSync
dealloc
sharedManager
_setupServerConnection
_init
removeClient:
addPersistentClientWithAccountID:clientID:watchedIDs:
isAccountID:folderID:watchedByClientBesides:
mainConnection
setMainConnection:
clients
setClients:
_mainConnection
_clients
T@"NSObject<OS_xpc_object>",&,N,V_mainConnection
T@"NSMutableArray",&,N,V_clients
grantedDelegatesListRequestFinishedWithResults:error:
performRequest
finishWithError:
_requestID
_results
initWithAddressBook:
unregisterClientWithIdentifier:forContainer:
registerClientWithIdentifier:forContainer:
identifiersOfAllRegisterdClients
addressBook
_addressBook
T^v,R,N,V_addressBook
preferredDaysToSyncDidChange
_resetMonitoringRequestsAndLoadAgents
waiterID
wirelessPolicy:isMorePermissiveThanPolicy:
_shouldAccount:syncWhenSyncingParentAccountWithID:
activeAgents
accountsProviderWithDBHelper:
containerProviderWithDBHelper:
changeHistoryClerkWithDBHelper:
agentWithAccountID:
accountWithAccountID:
accountWithAccountID:andClassName:
_configFileForAgent:
_accountInfoPath
loadAgents
saveAndReleaseAgents
_deviceWillSleep
_deviceDidWake
currentPolicyKeyForAccount:
requestPolicyUpdateForAccount:
startMonitoringAccountID:folderIDs:
stopMonitoringAccountID:folderIDs:
suspendMonitoringAccountID:folderIDs:
resumeMonitoringAccountID:folderIDs:
addPersistMonitoringAccountID:folderIDs:clientID:
removePersistMonitoringAccountID:folderIDs:clientID:
clearPersistMonitoringAccountID:clientID:
_clearOrphanedStoresInCalendarDatabase:eventAccountIds:
_clearOrphanedSubscribedCalendars:eventAccountIds:
appleAccountsMatchingClass:errror:
_clearOrphanedStores
_systemMayNowBeReady
_calDaysToSyncDidChange
_registerForCTDataUsageNotificaiton
_handleCellularDataUsageChangedNotification
_loadAndStartMonitoringAgents
registerForBuddy
_stopMonitoringAndSaveAgents
_sendAccountAnalytics
enableMonitoringAgentsWithToken:
disableMonitoringAgents
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateContentsOfFolders:forAccountID:andDataclasses:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
agentsToSyncForAccountID:
activeAccountBundleIDs
hasEASAccountConfigured
processMeetingRequestDatas:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:callback:
resetCertWarningsForAccountWithId:andDataclasses:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
handleURLString:
processFolderChange:forAccountWithID:completionBlock:
getStatusReportDictsWithCompletionBlock:
_hasDataclassWeCareAbout:
addPendingAccountSetup
removePendingAccountSetup
hasPendingAccountSetup
hasActiveAccounts
enableActiveSync
disableActiveSync
upgradeAccountsInSimulator
subCalHandlers
setSubCalHandlers:
nextDisableMonitoringAgentsToken
setNextDisableMonitoringAgentsToken:
disableMonitoringAgentsTokens
_activeAgents
_activeAgentsQueue
_watchedIDs
_pmNotifier
_pmPort
_pmRunLoopSource
_startAgentsWhenSystemReadyBlock
_CTCellularUsagePolicyNotificationQ
_ctServerConnection
_wirelessPolicies
_pendingAccountSetupCount
_registeredForBuddy
_subCalHandlers
_nextDisableMonitoringAgentsToken
_disableMonitoringAgentsTokens
T@"NSMutableArray",&,N,V_subCalHandlers
TQ,N,V_nextDisableMonitoringAgentsToken
T@"NSMutableDictionary",R,N,V_disableMonitoringAgentsTokens
T@"NSArray",R,N
_foldersUpdated:
_asPolicyKeyChanged:
_requestClientStatusDump:
_agentsStopped:
disable
_restartAgentsDueToTimeout
clientsToInterrogate
_shouldReloadAgentsForAccountChange:
permissionsForMessage:
initWithConnection:clientID:
initWithClientID:
reconnectWithConnection:
clientName
clientPID
_removeBusyFolderIDs:forAccountWithID:
_removeWatchedFolderIDs:forAccountWithID:
watchedFolderCount
persistentClientCleanup
isMonitoringAccountID:folderID:
noteBlockedClientCallChange:
noteRefreshClientCallChange:
registerForInterrogation
unregisterForInterrogation
_createReplyToRequest:withProperties:
_beginMonitoringFolders:
beginMonitoringPersistentFolders:forAccount:
_stopMonitoringFolders:
_resumeMonitoringFolders:
_suspendMonitoringFolders:
_stopMonitoringAgentsWithClientToken:
_startMonitoringAgentsWithClientToken:
_startMonitoringAgentsWithServerToken:
_startTimeoutWithClientToken:
_cancelRestartingAgentsDueToTimeout
_clearAllStopMonitoringAgentsTokens
outstandingStopMonitoringAgentRequests
_startMonitoringAgents:
_stopMonitoringAgents:
_handleAccountChange:
_getCurrentPolicyKey:
_requestPolicyUpdate:
timersForAccountWithID:
_requestFolderContentsUpdateForFolders:accountId:dataclasses:isUserRequested:
_requestFolderContentsUpdate:
_requestAllFolderContentsUpdateForAccountId:dataclasses:isUserRequested:
_requestAllFolderContentsUpdate:
_requestFolderListUpdateForAccountId:dataclasses:requireChangedFolders:isUserRequested:
_requestFolderListUpdate:
delegateWithIDIsGoingAway:
_openServerContactsSearch:
_cancelServerContactsSearch:
_processMeetingRequests:
_asyncProcessMeetingRequests:
_resetCertWarnings:
_setFolderIdsThatExternalClientsCareAbout:
_reportFolderItemsSyncResult:
_handleURL:
_processFolderChange:
_getStatusReports:
_registerForInterrogation:
_resetThrottleTimers:
_beginDownloadingAttachmentEvent:eventDict:
_cancelDownloadingAttachmentEvent:eventDict:
_respondToSharedCalendarEvent:eventDict:
_reportSharedCalendarAsJunkEvent:eventDict:
_fetchOfficeHoursEvent:eventDict:
_setOfficeHoursEvent:eventDict:
_reportSubscribedCalendarAsJunk:eventDict:
_checkSubscribedCalendarIsJunk:eventDict:
_fetchHolidayCalendars:eventDict:
_openServerOofSettingsRequest:
_checkIsOofSettingsSupported:
_downloadSubscribedCalendar:eventDict:
_cancelDownloadingSubscribedCalendar:eventDict:
_setUserNameAndPasswordForSubscribedCalendar:eventDict:
_requestCalendarAvailability:eventDict:
_cancelCalendarAvailabilityRequest:eventDict:
_requestGrantedDelegatesList:eventDict:
_cancelGrantedDelegatesListRequest:eventDict:
_updateGrantedDelegatePermission:eventDict:
_performCalendarDirectorySearch:eventDict:
_cancelCalendarDirectorySearch:eventDict:
_performGroupExpansion:eventDict:
applyClientStatusReportToAggregator:
_manageCalDAVServerSimulatorWithHostname:action:
_endAllServerSimulations
_checkAccountId:
_sendInvalidAccountIDReplyToMessage:withAccountID:
_clientDiedWithReason:
_dispatchMessage:
rawConnection
_checkAccessForMessage:
_sendAccessDeniedReplyForMessage:
_hasCalendarAccess
_hasReminderAccess
_hasContactsAccess
_isInternalTool
_isAccountsDaemon
persistent
clientBundleID
setClientBundleID:
clientUniqueID
setClientUniqueID:
conn
setConn:
watchedIDs
setWatchedIDs:
busyIDs
setBusyIDs:
updatedIDs
setUpdatedIDs:
numOutstandingBlockingClientCalls
setNumOutstandingBlockingClientCalls:
numOutstandingRefreshPriorityClientCalls
setNumOutstandingRefreshPriorityClientCalls:
accountTimers
setAccountTimers:
actionDelegatesById
setActionDelegatesById:
setClientName:
setClientPID:
agentMonitoringTokens
setAgentMonitoringTokens:
simulatedCalDAVHostnames
setSimulatedCalDAVHostnames:
_persistent
_numOutstandingBlockingClientCalls
_numOutstandingRefreshPriorityClientCalls
_clientPID
_clientBundleID
_clientUniqueID
_conn
_busyIDs
_updatedIDs
_accountTimers
_actionDelegatesById
_clientName
_agentMonitoringTokens
_simulatedCalDAVHostnames
T@"NSObject<OS_xpc_object>",&,N,V_conn
T@"NSMutableDictionary",&,N,V_watchedIDs
T@"NSMutableDictionary",&,N,V_busyIDs
T@"NSMutableDictionary",&,N,V_updatedIDs
Ti,N,V_numOutstandingBlockingClientCalls
Ti,N,V_numOutstandingRefreshPriorityClientCalls
T@"NSMutableDictionary",&,N,V_accountTimers
T@"NSMutableDictionary",&,N,V_actionDelegatesById
T@"NSString",&,N,V_clientName
Ti,N,V_clientPID
T@"NSString",&,N,V_clientBundleID
T@"NSString",&,N,V_clientUniqueID
T@"NSMutableDictionary",&,N,V_agentMonitoringTokens
T@"NSCountedSet",&,N,V_simulatedCalDAVHostnames
TB,R,N,V_persistent
TQ,R,N
initWithAccountID:client:
calendarAvailabilityRequestReturnedResults:
calendarAvailabilityRequestFinishedWithError:
initWithAccountID:client:startDate:endDate:ignoredEventID:addresses:
_startDate
_endDate
_ignoredEventID
_addresses
_queue
killAllTimers
deferredTimerInterval
folderIdToLastFolderContentsRequestDate
setLastFolderContentRequestDate:forFolderWithId:
setDeferredAllFolderContentsSource:
setDeferredFolderListSource:
setDeferredFolderContentsSource:
clientBehaviorForFolderIds:
clientBehaviorForFolderList
clientBehaviorForFolderContents
allowFolderWipe
lastAllFolderContentsRequestDate
setLastAllFolderContentsRequestDate:
lastFolderListRequestDate
setLastFolderListRequestDate:
lastFolderWipeRequestDate
setLastFolderWipeRequestDate:
deferredAllFolderContentsSource
deferredFolderListSource
deferredFolderContentsSource
setFolderIdToLastFolderContentsRequestDate:
_lastAllFolderContentsRequestDate
_lastFolderListRequestDate
_lastFolderWipeRequestDate
_deferredAllFolderContentsSource
_deferredFolderListSource
_deferredFolderContentsSource
_folderIdToLastFolderContentsRequestDate
T@"NSMutableDictionary",&,N,V_folderIdToLastFolderContentsRequestDate
T@"NSDate",&,N,V_lastAllFolderContentsRequestDate
T@"NSDate",&,N,V_lastFolderListRequestDate
T@"NSDate",&,N,V_lastFolderWipeRequestDate
T@"NSObject<OS_dispatch_source>",W,N,V_deferredAllFolderContentsSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderListSource
T@"NSObject<OS_dispatch_source>",W,N,V_deferredFolderContentsSource
_forceShutdownTimerFired:
agentsStarted
sharedMain
willSwitchUser
didFinishAllXPCTransactions
_shutdownDaemon
_forceShutdownDaemonOnLogoutInTimeInterval:
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
addSignalHandler
addLanguageChangeHandler
shutdownDAD
waitForSystemAvailability
setRunLoopStoppedRef:
_setRunLoopStopped:
_configureAnalyticsLogging
xpc_checkin
evaluateConnectedStartupActivityStatus
userSwitchTasks
setUserSwitchTasks:
_delayedShutdownTimer
_forceShutdownTimer
_runLoopStoppedRef
_userSwitchTasks
T@"NSArray",&,N,V_userSwitchTasks
reportSubscribedCalendarAsJunk:
_createURLRequestForSubscriptionCalendarURL:
_generateBodyWithURL:
_findCalendarURLFromAccount:
requestID
setRequestID:
T@"NSString",&,N,V_requestID
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
initWithAccountID:queryDictionary:client:
beginQuery
query
setQuery:
queryResultData
setQueryResultData:
_query
_queryResultData
T@"DASearchQuery",&,N,V_query
T@"NSData",&,N,V_queryResultData
handleTrustChallenge:forTask:
handleTrustChallenge:forTask:completionHandler:
subCalValidationTask:finishedWithError:calendarName:document:calendarData:
subCalValidationTask:downloadProgressedTo:outOf:
subCalTask:needsUsernameAndPasswordForHost:continuation:
initWithURL:client:
beginDownload
createAndSubmitValidationTask
shouldTrustChallenge:
evaluateTrust:
tryUsername:password:
finishWithError:summary:
_subscribedCalendarURL
_taskManager
_passwordContinuation
initWithFolder:hasRemoteChanges:isInitialUberSync:
folder
setFolder:
hasRemoteChanges
setHasRemoteChanges:
isInitialUberSync
setIsInitialUberSync:
actions
setActions:
isResyncAfterConnectionFailed
setIsResyncAfterConnectionFailed:
isResyncAfterServerError
setIsResyncAfterServerError:
containsPostponedActions
setContainsPostponedActions:
_hasRemoteChanges
_isInitialUberSync
_isResyncAfterConnectionFailed
_isResyncAfterServerError
_containsPostponedActions
_folder
_actions
T@"DAFolder",&,N,V_folder
TB,N,V_hasRemoteChanges
TB,N,V_isInitialUberSync
T@"NSArray",&,N,V_actions
TB,N,V_isResyncAfterConnectionFailed
TB,N,V_isResyncAfterServerError
TB,N,V_containsPostponedActions
os_log
T@"NSObject<OS_os_log>",R,N
initWithContactStore:
contactStore
_contactStore
T@"CNContactStore",R,N,V_contactStore
_registerAPSTopics
pushDisabled
_fakeTokenReceive
_tearDownAPS
_tearDownAllApsConnections
establishAllApsConnections
_apsEnvStringForDAEnvString:
_portNameForEnvironmentName:
_connectionForEnv:
_registerAPSTopicsForDelegates:withConnection:
_currentTruePCStyleForDelegate:
_pushRegistrationForDelegateFailed:
_wrapperIsSuspended:
_suspendTopicsForDelegate:
_resumeTopicsForSuspendedDelegate:
pushPreferenceDidChange
connection:didReceivePublicToken:
connection:didReceiveMessageForTopic:userInfo:
_performBlockOnRefreshManagerThread:
_refreshWrapperForDelegate:
_enabledTopicsForWrapper:
_suspendedTopicsForWrapper:
registerDelegate:
unregisterDelegate:
_dailyRefreshActivityFired
startDailyRefreshActivityForWrapper:
endDailyRefreshActivityForWrapper:
registerTopic:forDelegate:inEnvironment:
_unregisterWrapper:forTopic:inTopicDictionary:
_unregisterTopicLocked:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
delegateDidCompleteRefresh:
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
pushTokenForEnvironment:
persistAPSAfterShutdown
setPersistAPSAfterShutdown:
enabledTopicWrappersByEnv
setEnabledTopicWrappersByEnv:
suspendedTopicWrappersByEnv
setSuspendedTopicWrappersByEnv:
wrappers
setWrappers:
wrappersForDailyRefresh
setWrappersForDailyRefresh:
dailyRefreshInitialized
setDailyRefreshInitialized:
connection
setConnection:
apsConnections
setApsConnections:
tokenRegistrationTimer
setTokenRegistrationTimer:
pcQueue
setPcQueue:
_persistAPSAfterShutdown
_dailyRefreshInitialized
_enabledTopicWrappersByEnv
_suspendedTopicWrappersByEnv
_wrappers
_wrappersForDailyRefresh
_connection
_apsConnections
_tokenRegistrationTimer
_pcQueue
T@"NSMutableDictionary",&,N,V_enabledTopicWrappersByEnv
T@"NSMutableDictionary",&,N,V_suspendedTopicWrappersByEnv
T@"NSMutableSet",&,N,V_wrappers
T@"NSMutableSet",&,N,V_wrappersForDailyRefresh
TB,N,V_dailyRefreshInitialized
T@"APSConnection",&,N,V_connection
T@"NSMutableDictionary",&,N,V_apsConnections
T@"NSTimer",&,N,V_tokenRegistrationTimer
T@"NSObject<OS_dispatch_queue>",&,N,V_pcQueue
TB,N,V_persistAPSAfterShutdown
fetchHolidayCalendars
_handleCalendarSearchResults:
_sendResults:
_sendCompletionWithError:retryThrottleTime:
syncingAccount
_getThrottleDateIfApplicable
_setThrottledRetryDateUsingTimeInterval:
_addAuthenticationHeaders
_searchTask
_syncingAccount
username
password
serverTokenRegistrationURL
requestWithToken:pushKey:wrapper:onBehalfOf:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
initWithToken:pushKey:wrapper:onBehalfOf:
cancel
_handleAuthenticationChallenge:completionHandler:
_canAuthenticateAgainstProtectionSpace:
_reallyHandleAuthenticationChallenge:completionHandler:
sendRegistrationRequestForAccount:
delegate
setDelegate:
wrapper
setWrapper:
onBehalfOfBundleIdentifier
setOnBehalfOfBundleIdentifier:
token
setToken:
pushKey
setPushKey:
request
setRequest:
session
setSession:
task
setTask:
hsa2Session
setHsa2Session:
finished
setFinished:
_finished
_delegate
_wrapper
_onBehalfOfBundleIdentifier
_token
_pushKey
_request
_session
_task
_hsa2Session
T@"DARefreshWrapper",W,N,V_wrapper
T@"NSString",&,N,V_onBehalfOfBundleIdentifier
T@"NSData",W,N,V_token
T@"NSString",W,N,V_pushKey
T@"AKAppleIDSession",&,N,V_hsa2Session
TB,N,V_finished
T@"<DATokenRegistrationDelegate>",W,N,V_delegate
T@"NSMutableURLRequest",&,N,V_request
T@"NSURLSession",&,N,V_session
T@"NSURLSessionDataTask",&,N,V_task
officeHoursRequestWithID:finishedWithOfficeHours:error:
officeHoursRequestWithID:finishedWithError:
fetchOfficeHours
setOfficeHours:
_doRequestWithBlock:
_finishedWithOfficeHours:error:canceled:
_networkReachabilityChanged:
_hostReachabilityChanged:
sharedReachability
hostLikelyUnreachable:
recordError:forHost:
muckWithDelegates:
_startOrStopObservingNetworkReachabilityAfterUpdatingDelegates
_startOrStopObservingHostReachabilityAfterUpdatingDelegates
addDelegate:
removeDelegate:
_notifyDelegatesNetworkReachable
_notifyDelegatesHostReachable:
_startMonitoringNetworkReachability
_stopMonitoringNetworkReachability
_monitoringNetworkReachability
_monitoringReachabilityForHost:
_startMonitoringReachabilityForHost:
_stopMonitoringReachabilityForHost:
queue
_networkReachableDelegates
_hostReachableDelegates
_hostsMonitoredForReachability
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
fetchInterval
tokenRegistrationRequest:finishedWithError:
retryActivityIdentifier
cancelRetryActivity
cancelDailyRefreshActivity
startDailyRefreshActivity
stopCollectionsRefresh
_stringForStyle:
fetchActivityIdentifier
XPCActivityInterval
_fetchActivityCriteriaWithInterval:
_fetchActivityCriteriaInOnPowerMode
startFetchActivityWithInterval:
startFetchActivityForFetch
startFetchActivityForPush
cancelFetchActivity
isSetToExpectedFetchInterval
setCurStyle:
cancelAllTokenRegistrations
performTokenRegistrationRequestsWithToken:onBehalfOf:
refreshCollections:withReason:
_retryActivityFired
dailyRefreshActivityFired
retryCollections:after:reason:
pushState
setPushState:
pushRegistrationTime
setPushRegistrationTime:
curStyle
tokenRegistrations
setTokenRegistrations:
refreshReason
setRefreshReason:
refreshCollections
setRefreshCollections:
setFetchInterval:
_pushState
_curStyle
_refreshReason
_pushRegistrationTime
_tokenRegistrations
_refreshCollections
_fetchInterval
T@"NSMutableSet",&,N,V_tokenRegistrations
Ti,N,V_refreshReason
T@"NSMutableSet",&,N,V_refreshCollections
Tq,N,V_fetchInterval
T@"<DARefreshManagerDelegate>",W,N,V_delegate
Ti,N,V_pushState
T@"NSDate",&,N,V_pushRegistrationTime
Ti,N,V_curStyle
settingsRequestFinishedWithResults:status:error:
initWithAccountID:requestDictionary:forUpdate:client:
beginSettingsRequest
isOofSupported
isUpdate
setIsUpdate:
requestParams
setRequestParams:
responseParams
setResponseParams:
_isUpdate
_requestParams
_responseParams
TB,N,V_isUpdate
T@"DAOofParams",&,N,V_requestParams
T@"DAOofParams",&,N,V_responseParams
calendarDirectorySearchReturnedResults:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
initWithAccountID:client:terms:recordTypes:resultLimit:
_convertSearchQueryResults:
_terms
_recordTypes
_resultLimit
_searchID
_exceededResultLimit
checkSubscribedCalendarJunkStatus:
_finishWithJunkStatusString:error:
groupExpansionFinishedWithResults:error:
initWithAccountID:client:principalPath:
_principalPath
_resultsData
downloadProgressDownloadedByteCount:totalByteCount:
downloadFinishedError:
initWithAccountID:attachmentUUID:client:
attachmentUUID
setAttachmentUUID:
downloadID
setDownloadID:
_attachmentUUID
_downloadID
T@"NSString",&,N,V_attachmentUUID
T@,&,N,V_downloadID
updateGrantedDelegatePermissionFinishedWithError:
initWithAccountID:client:grantedDelegate:
_grantedDelegate
initWithStatusReports:numOutstandingReports:timeout:completionBlock:
_coalesceAndReport
noteAdditionalReportDicts:
_numOutstandingReports
_completionBlock
_persistentUUIDToStatusReport
_serverProbeTimedOut
_cancelOptionsTimer
_probeAndSyncWithBlock:
optionsProbe
setOptionsProbe:
optionsTimeoutTimer
setOptionsTimeoutTimer:
_optionsProbe
_optionsTimeoutTimer
T@"CoreDAVOptionsTask",&,N,V_optionsProbe
T@"NSTimer",&,N,V_optionsTimeoutTimer
userRequestsCancel
delegateID
setDelegateID:
client
setClient:
accountID
setAccountID:
consumerCancelled
setConsumerCancelled:
_consumerCancelled
_delegateID
_client
_accountID
T@"DADClient",W,N,V_client
T@"NSString",&,N,V_accountID
TB,N,V_consumerCancelled
T@"NSString",&,N,V_delegateID
shareResponseFinishedWithError:
initWithAccountID:client:calendarID:
respondToShareRequestWithResponse:
reportAsJunk
_doResponseWithBlock:
calendarID
setCalendarID:
shareID
setShareID:
_calendarID
_shareID
T@"NSString",&,N,V_calendarID
T@"NSString",&,N,V_shareID
clerkWithContactStore:
clerkWithAddressBook:
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSString"24@0:8@"DAReachability"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
v56@0:8@16@24@32@40@?48
v24@0:8@16
d16@0:8
v24@0:8d16
@?16@0:8
@"DAAccount"
i16@0:8
v40@0:8@16@24@32
B40@0:8@16@24@32
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
v32@0:8@16@24
v32@0:8@"NSArray"16@"NSError"24
@"NSArray"
@24@0:8^v16
^v16@0:8
B32@0:8@16@24
@32@0:8@16@24
B32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
B32@0:8^v16@24
@32@0:8@16^@24
v24@0:8Q16
B40@0:8@16q24B32B36
B44@0:8@16@24q32B40
B36@0:8@16q24B32
v64@0:8@16@24@32@40@48@?56
B32@0:8@16q24
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
B40@0:8@16@24@?32
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
^{IONotificationPort=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@"NSDictionary"
Q24@0:8@16
v20@0:8i16
v44@0:8@16@24q32B40
v40@0:8@16q24B32B36
@"NSString"
@"NSCountedSet"
v24@0:8@"NSDictionary"16
v24@0:8@"NSError"16
@64@0:8@16@24@32@40@48@56
@"NSDate"
q24@0:8@16
q16@0:8
@"NSObject<OS_dispatch_source>"
v32@0:8@?16@?24
v24@0:8^B16
@"NSTimer"
v32@0:8@"DASearchQuery"16@"NSArray"24
v32@0:8@"DASearchQuery"16@"NSError"24
v32@0:8@"DASearchQuery"16@"NSNumber"24
@40@0:8@16@24@32
@"DASearchQuery"
@"NSData"
v40@0:8@16@24@?32
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalDATask"24@?<v@?q@"NSURLCredential">32
v56@0:8@16@24@32@40@48
v40@0:8@16q24q32
v56@0:8@"SubCalValidationTask"16@"NSError"24@"NSString"32@"ICSDocument"40@"NSData"48
v40@0:8@"SubCalValidationTask"16q24q32
v40@0:8@"SubCalDATask"16@"NSString"24@?<v@?@"NSString"@"NSString">32
I24@0:8^{__SecTrust=}16
@"NSURL"
@"DATaskManager"
@32@0:8@16B24B28
@"DAFolder"
@"CNContactStore"
i24@0:8@16
v44@0:8@16@24d32i40
@"NSMutableSet"
@"APSConnection"
v32@0:8@16d24
@"CalDAVCalendarSearchTask"
@48@0:8@16@24@32@40
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v32@0:8@16@?24
@"<DATokenRegistrationDelegate>"
@"DARefreshWrapper"
@"NSMutableURLRequest"
@"NSURLSession"
@"NSURLSessionDataTask"
@"AKAppleIDSession"
v40@0:8@"NSString"16@"NSArray"24@"NSError"32
v32@0:8@"NSString"16@"NSError"24
v36@0:8@16@24B32
@"NSHashTable"
v32@0:8@"DATokenRegistrationRequest"16@"NSError"24
r*16@0:8
@20@0:8i16
@24@0:8q16
v24@0:8q16
v28@0:8@16i24
v36@0:8@16d24i32
@"<DARefreshManagerDelegate>"
v40@0:8@16q24@32
v40@0:8@"DAOofParams"16q24@"NSError"32
@44@0:8@16@24B32@36
@"DAOofParams"
v28@0:8@16B24
v28@0:8@"NSError"16B24
@56@0:8@16@24@32@40Q48
@"NSSet"
v32@0:8@"NSDictionary"16@"NSError"24
v32@0:8q16q24
@"DAEGrantedDelegate"
@44@0:8@16i24d28@?36
@"CoreDAVOptionsTask"
@"DADClient"
