gameCenterClient
serviceWithTransport:forClient:localPlayer:
primaryPlayerInContainer:handler:
init
decodeObjectOfClass:forKey:
setIdentifier:
setName:
identifier
encodeObject:forKey:
name
alloc
isEqualToString:
hash
description
stringWithFormat:
getCurrentSignedInPlayerForContainer:completionHandler:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
isEqual:
playerID
displayName
.cxx_destruct
_identifier
_name
mainRunLoop
containerWithIdentifier:
publicCloudDatabase
privateCloudDatabase
tournamentCache
dispatchGroup
cacheQueue
setError:
updateUserRecordWithHandler:
perform:
error
notifyOnMainQueueWithBlock:
dispatchGroupWithName:
userRecordID
_gkUserErrorForTournamentErrorCode:reason:userInfo:
tournamentDefinitionInternalWithID:
tournamentInternalWithID:
sharedController
sharedManager
currentEnvironment
primaryCredentialForEnvironment:
playerInternal
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
customTournamentCreator
addObject:
localParticipant
arrayWithArray:
tournamentDefinitionRecordsWithBundleID:
initWithRecord:action:
predicateWithFormat:
arrayWithObjects:count:
andPredicateWithSubpredicates:
tournamentInternalsMatchingPredicate:
setResult:
result
firstObject
filterCustomTournamentsForLocalPlayer:
predicateFormat
tournamentRecordWithID:
objectForKeyedSubscript:
integerValue
localPlayerParticipantPlayerInternalForTournamentWithID:
numberWithLong:
setObject:forKeyedSubscript:
copy
localPlayerParticipantRecordForTournamentWithID:
numberWithInteger:
numberWithInt:
processedRecordIDsForBulletins
recordID
recordName
removeObject:
createParticipantRecordForTournamentRecord:playerID:
incrementPlayerCountForTournamentRecord:by:
publicDatabase
code
registerLocalPlayerForTournamentWithID:handler:
saveTournamentRecords:deleteTournamentRecordIDs:database:handler:
tournamentState
maxReplays
_gkUUIDString
currentDevice
udid
beginPlayInTournamentWithID:handler:
tryTokenIsValid:forTournamentParticipantRecord:
resumePlayInTournamentWithID:withTryToken:handler:
resignLocalPlayerFromTournamentWithID:handler:
deviceIsValidForTournamentParticipantRecord:
scoringMethod
updateScoreDataForParticipantRecord:newScore:tournamentScoringMethod:
reportScore:withTryToken:forLocalPlayerInTournamentWithID:handler:
updatePlayerRanksForTournamentWithID:handler:
reportProgressScore:withTryToken:forLocalPlayerInTournamentWithID:handler:
internalRepresentation
setTournamentsPlayed:
objectAtIndexedSubscript:
setLatestScore:
setLatestRank:
addObjectsFromArray:
setHistoricalRanks:
valueForKeyPath:
setHighestRank:
setAverageRank:
setBestScore:
setAverageScore:
tournamentQueue
initWithZoneName:ownerName:
initWithRecordName:zoneID:
initWithRecordID:action:
tournamentID
initWithRecordType:predicate:
sortDescriptorWithKey:ascending:
setSortDescriptors:
initWithQuery:
setZoneID:
cloudKitOperationConfiguration
setConfiguration:
setRecordFetchedBlock:
computeHistoricalDataFromParticipationRecords:
setPlayer:
setTournamentDefinitionID:
setQueryCompletionBlock:
addOperation:
tournamentsMatchingPredicate:bundleID:handler:
participantRecordNameForTournamentID:playerID:
tournamentWithID:containsRecordForParticipantWithID:
messagesID
numberWithBool:
dictionaryWithObjects:forKeys:count:
archivedDataWithRootObject:requiringSecureCoding:error:
addInvitees:toCustomTournamentWithID:handler:
createPrivateContactInviteRecordsForPlayers:tournamentID:handler:
addCreator:forTournamentWithID:handler:
decrementPlayerCountForTournamentRecord:by:
removeCreator:forTournamentWithID:handler:
contactInviteRecordNameForTournamentID:playerID:
contactInviteDataRecordWithID:
privateDatabase
declineLocalPlayerInvitationInTournamentWithID:handler:
setPlayerID:
setFirstName:
setLastName:
firstName
lastName
compositeNameForFirstName:lastName:
setCompositeName:
setAlias:
participantsRecordsForTournamentWithID:
allValues
boolValue
contactPlayerInternalForPlayerID:tournamentID:
friendsOnly
isFriend
setTournamentID:
setScore:
setPlayerGroup:
setReplayCount:
setParticipantState:
setCheatingIndicator:
sortParticipants:
startIndex
removeObjectsInRange:
getProfilesForPlayerIDs:handler:
score
participantState
sortUsingComparator:
date
currentCalendar
components:fromDate:
minute
hour
timePeriod:
second
dateByAddingTimeInterval:
timeIntervalSince1970
dateWithTimeIntervalSince1970:
frequency
interval
currentLocale
setLocale:
setDateFormat:
localTimeZone
setTimeZone:
stringFromDate:
tournamentNameFormat
tournamentName
autoTournamentIndex
tournamentDuration
typicalGameplayDuration
compare:
initWithRecordType:zoneID:
maxPlayers
minPlayers
seedingMethod
numberWithDouble:
automaticTournamentNameFromDefinition:startDate:
tournamentDefinitionID
tournamentDefinitionRecordWithID:
startTime
duration
zoneID
tournamentDefinition
customMaxPlayers
customMinPlayers
customScoringMethods
customSeedingMethods
isCreatorInTournament
tournamentCreator
wait
customTournamentRecordsForRequest:definitionReference:
recordType
setInviteURLForMessages:
shareURLForCustomTournament:clientProxy:handler:
setContainer:
setDiscretionaryNetworkBehavior:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
setAtomic:
checkForServerRecordChangedErrorsInModifyRecordsOperationError:
updateWithChangedTournamentDefinitionRecords:removedTournamentDefinitionRecordIDs:handler:
updateWithChangedTournamentRecords:removedTournamentRecordIDs:changedParticipantRecords:removedParticipantRecordIDs:handler:
updateWithChangedContactInviteRecords:removedContactRecordIDs:handler:
valueForKey:
fetchAndUpdateRecordsWithIDs:database:handler:
setModifyRecordsCompletionBlock:
stringWithUTF8String:
lastPathComponent
UTF8String
raise:format:
initWithRecordType:recordID:
arrayWithObject:
lastObject
participantRecordsSortedByScoreForTournamentWithID:
enumerateObjectsUsingBlock:
lastUsedBundleID
setValid:
updateCacheForPublicDatabaseForBundleID:handler:
updateCacheForDatabase:zoneIDs:handler:
subscribeToDatabaseChangesWithHandler:
clearPublicTournamentDataForUpdateWithHandler:
localPlayerTournamentRecordsForBundleID:handler:
allTournamentDefintionRecordsWithHandler:
dictionaryWithCapacity:
array
zoneName
tokenForZoneID:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
setRecordChangedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setRecordWithIDWasDeletedBlock:
lookForCustomTournamentInvitesInParticipantRecords:
updateWithChangedTokens:removedTokensWithZoneIDs:handler:
setFetchRecordZoneChangesCompletionBlock:
predicateWithValue:
setResultsLimit:
activeAutomaticTournamentsForTournamentDefinition:handler:
allParticipantRecordsForTournamentReferences:handler:
isValid
haveSubscription
initWithZoneID:subscriptionID:
saveSubscription:completionHandler:
initWithSubscriptionID:
setHaveSubscription:
userInfo
initWithRecordIDs:
setFetchRecordsCompletionBlock:
allTournamentRecordsForTournamentDefinitionWithID:ofType:
lastManagementDate
timeIntervalSinceNow
setLastUsedBundleID:
updateCacheForDatabaseWithScope:bundleID:handler:
canManageTournaments
setLastManagementDate:
manageStatesForTournamentsWithDefinitionID:handler:
recurrenceRule
nextAutomaticTournamentStartDateForDefinitionRecurrenceRule:
createAutomaticTournamentFromDefinition:startDate:handler:
sharedCloudDatabase
bundleIdentifier
bundleVersion
bundleShortVersion
adamID
inviteDictionaryForTournament:originatingPlayerID:clientProxy:
inviteURLForCustomTournamentWithID:
shareRecordIDForTournamentID:zoneID:
privateDatabaseForInviteContainer
inviteRecordWithDataForSharingTournament:clientProxy:
updateForCustomTournament:inviteURL:
createShareWithShareRecordID:rootRecord:handler:
fetchExistingShareWithRecordID:fromDatabase:handler:
cloudKitOperationConfigurationForCustomInvite
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithRootRecord:shareID:
setPublicPermission:
setPerRecordCompletionBlock:
createCustomInviteZoneWithHandler:
inProgressAcceptShareRecordIDs
setInProgressAcceptShareRecordIDs:
rootRecordID
containsObject:
participantStatus
acceptShareMetadata:completionHandler:
addInviteeAndGenerateBulletinForShareMetadata:
ownerName
sharedDatabaseForInviteContainer
databaseForZoneID:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
findContactParticipantRecordToRemoveForTournamentID:
fetchTournamentRecordIfNeededWithID:handler:
share
packFakeTournamentBulletinWithSharedInviteDictionary:
processIncomingiMessageInvite:
initWithShareMetadatas:
setAcceptSharesCompletionBlock:
getAssociatedAccounts
aliases
stringWithString:
substringToIndex:
substringFromIndex:
createZoneForPrivateContactDataWithHandler:
allParticipantsRecordsForTournamentWithID:
allKeys
isMessagesIDForLocalUser:
setProcessedRecordIDsForBulletins:
creationDate
clientForBundleID:
processIncomingMessage:
tournamentDefinitionsWithHandler:
tournamentDefinitionWithID:handler:
tournamentWithID:handler:
getTotalPlayerCountInTournamentWithID:forGroup:handler:
getFriendCountInTournamentWithID:forGroup:handler:
getLocalParticipantForTournamentWithID:handler:
historicalDataForPlayer:tournamentDefinitionWithID:handler:
removeInvitees:fromCustomTournamentWithID:handler:
loadParticipantsForTournament:request:handler:
createCustomTournamentWithRequest:clientProxy:handler:
localPlayerParticipantRecordsForTournaments:handler:
resetDataForTournamentsWithTournamentDefinitionID:handler:
manageTournamentsForBundleID:handler:
removeCustomTournament:handler:
handleCloudKitShareMetadata:completionHandler:
domain
_gkUserErrorForGameSessionErrorCode:userInfo:
_gkGameSessionErrorForCloudKitError:
initWithFamiliarity:toPlayer:language:databaseConnection:
setLocalPlayerID:
setLanguage:
setConnection:
dealloc
address
addressPrefix
addressSHA1
verified
appendFormat:
resourceID
representedItem
isPurpleBuddyAccount
isDefaultNickname
facebookUserID
iCloudUserID
alias
accountName
friendLevel
friendBiDirectional
friendPlayedWith
friendPlayedNearby
status
numberOfAchievementPoints
numberOfAchievements
numberOfFriends
numberOfGames
isPhotoPending
photos
lastPlayedDate
numberOfFriendsInCommon
numberOfGamesInCommon
getStatement:forSQL:
exceptionWithName:reason:userInfo:
profileInsertSQL
profileUpdateSQLForResource:
bindParametersForProfileStatement:resource:
writeToDatabase:statementStore:withInsertSQL:updateSQL:bindOperation:
relationshipInsertSQL
relationshipUpdateSQL
bindParametersForRelationshipStatement:resource:
emailAddresses
emailInsertSQL
emailUpdateSQL
bindParametersForEmailStatement:email:ofPlayer:
performAsyncTransaction:handler:
notifyOnQueue:block:
writerWithFamiliarity:toPlayer:language:databaseConnection:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
writeResources:handler:
writeResourcesToCacheOnly:handler:
familiarity
setFamiliarity:
localPlayerID
language
connection
_familiarity
_localPlayerID
_language
_connection
challenge
environment
pushCredentialForEnvironment:
transactionGroupForPlayer:
localPlayerInManagedObjectContext:
challengeList
invalidate
performOnManagedObjectContext:
defaultWorkspace
compatibleBundleIDs
applicationProxyForBundleID:
isInstalled
isRestricted
gameDescriptor
setBundleIdentifier:
setBundleVersion:
setShortBundleVersion:
setGameLocation:
gameLocation
shared
isAppInstallationRestricted
loadStoreItemWithCompletionHandler:
replyQueue
bundleID
game
shortBundleVersion
gameDescriptorWithBundleID:bundleVersion:shortBundleVersion:adamID:
receivingPlayer
issuingPlayer
refreshContentsForDataType:userInfo:
notifyClient:
setTitle:
setHasSound:
customChallengeSoundPathForBundleID:
setSoundPath:
setDate:
bundleWithPath:
_gkPathForChallengeSound
launchEventType
setLaunchEvent:withContext:
expireChallengeList
URLContext
determineGameLocationOnDeviceOrInStoreWithCompletionHandler:
receiverPlayerID
setReceiverPlayerID:
receiverPlayer
setReceiverPlayer:
originatorPlayerID
setOriginatorPlayerID:
originatorPlayer
setOriginatorPlayer:
gameName
setGameName:
refreshData
isAppRunning
notifyApp
assembleBulletin
handleAcceptAction
setChallenge:
challengeID
setChallengeID:
storeItem
setStoreItem:
_challenge
_challengeID
_storeItem
reporter
report:
objectForKey:
initWithCapacity:
null
setObject:forKey:
objectsMatchingPredicate:context:
makeObjectsPerformSelector:
initWithPushNotification:
isPushFromLocalPlayers
isPushForLocalPlayers
getChallengesForGameDescriptor:handler:
getChallengeDetailsForChallengeIDs:receiverID:handler:
challengeCompleted:
setType:
storeURL
absoluteString
setInfo:
setCategoryIdentifier:
setDefaultAction:
setDismissAction:
displayNameWithOptions:
setMessage:
loadBulletinsForPushNotification:withHandler:
handleAction:
_gkValuesForKeyPath:
setWithArray:
allObjects
getChallengeDetailsForChallengeIDs:handler:
challengeReceived:
setIsDestructive:
setDeclineAction:
message
handleDeclineAction
abortChallenges:handler:
rangeOfString:
setIdsDelegateQueue:
initWithService:
setIdsService:
addDelegate:queue:
setConnectionsBySessionID:
setConnectionErrorBySessionID:
removeDelegate:
accounts
loginID
containsString:
isBusyChangingConnectionState
saveConnectionStateForLostPlayerWithCloudID:sessionIdentifier:handler:
record
anyObject
initWithClient:gameSession:account:
connectToGameSessionUsingDelegateQueue:handler:
propertyListWithData:options:format:error:
state
declineInvitationWithData:
shouldAllowAddingAnotherConnection
acceptReliableInviteForIDSSession:fromID:context:
acceptUnreliableInviteForIDSSession:fromID:withData:
updateCloudGameSession:
setWithCapacity:
hasPrefix:
handleDisconnectForClient:reason:handler:
players
session:player:didChangeConnectionState:
setConnectionState:forSessionWithIdentifier:handler:
sendData:reliably:handler:
emailsByCKID
primaryPlayerWithHandler:
getShareURLWithHandler:
numberWithUnsignedChar:
deviceTypeForNotification
dictionaryWithDictionary:
friendEmailsByID
sendNotificationMessage:toIDSIDs:handler:
dataWithPropertyList:format:options:error:
idsDestinationsFromCKIDs:containerName:
sendData:toDestinations:priority:options:identifier:error:
errorWithDomain:code:userInfo:
setValue:forKey:
didReceiveIncomingIDSMessage:
clientEnteredBackgroundState:
clientEnteredForegroundState:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
primaryEmailAddress
isBusyChangingConnectionStateForSession:handler:
gameSession:forClient:lostConnectionFromCKID:
connectToGameSession:forClient:handler:
cloudGameSessionUpdated:
disconnectConnectionsForClient:reason:handler:
connection:didDisconnectForGameSessionWithID:client:playerID:reason:
sendData:reliably:forGameSessionWithIdentifier:handler:
sendNotificationMessageOfType:forSession:localizedFormatKey:arguments:userMessage:data:recipientIDs:handler:
requestGKPlayerIDforiCloud:handler:
sendGKPlayerIDtoiCloud:handler:
connectionErrorBySessionID
idsService
connectionsBySessionID
idsDelegateQueue
_connectionErrorBySessionID
_idsService
_connectionsBySessionID
_idsDelegateQueue
setClientForSession:
setCloudSession:
setLocalIDSAccount:
setPendingSessions:
setReliableSessions:
setUnreliableSessions:
setStreamConnections:
setDatagramConnections:
setHeartbeatTimeForCloudIDs:
setConnectionState:
cancelConnection
removeAllObjects
endSession
connectionCompleteHandler
disconnectCompleteHandler
primaryPlayerCKID
setPrimaryPlayerCKID:
connectedPlayerIDs
setConnectionCompleteHandler:
connectToPlayersWithIdentifiers:
initWithAccount:destinations:transportType:
setDelegate:queue:
sendInvitationWithData:declineOnError:
setConnectTimeoutTimer:
invitationAcceptedForIDSSession:fromID:withData:
sendUnreliableIDSSessionInviteToIdentifier:
maxConnectedPlayers
allKeysForObject:
setupStreamForIDSSession:fromID:
startHeartbeatToMonitorConnections
handleIDSSessionStatusChange
setupDatagramForIDSSession:fromID:
acceptInvitationWithData:
socket
streamConnectionForSocketDescriptor:error:
initWithStreamConnection:connectionID:delegate:delegateQueue:
datagramConnectionForSocketDescriptor:error:
initWithDatagramConnection:connectionID:delegate:delegateQueue:
clientPacketWithData:isReliable:error:
_sendData:usingConnections:handler:
sendData:
processInternalMessage:
playersByEmail
createGKGameSession
session:didReceiveData:fromPlayer:
receivedHeartbeatFromID:
heartbeatTimer
sendHeartbeatToConnections
setHeartbeatTimer:
shouldSaveConnectionStateForLostConnectionWithCKID:
internalPacketWithMessage:error:
setDisconnectCompleteHandler:
cancelConnectTimeoutTimer
cancelBackgroundTimer
handleIDSSessionStatusChangeWhileDisconnecting
removeObjectsForKeys:
cancelHeartbeatTimer
setBackgroundTimer:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:
sessionStarted:
sessionEnded:
sessionEnded:withReason:error:
session:didReceiveData:
session:didReceiveReport:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationCancelFromID:withData:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
session:invitationSentToTokens:shouldBreakBeforeMake:
connectionWrapper:didReceiveData:
connectionWrapper:didFailWithError:
clientForSession
localIDSAccount
cloudSession
connectionState
reasonForDisconnect
setReasonForDisconnect:
connectTimeoutTimer
backgroundTimer
heartbeatTimeForCloudIDs
pendingSessions
reliableSessions
unreliableSessions
streamConnections
datagramConnections
_clientForSession
_localIDSAccount
_primaryPlayerCKID
_cloudSession
_connectionState
_reasonForDisconnect
_connectionCompleteHandler
_disconnectCompleteHandler
_connectTimeoutTimer
_backgroundTimer
_heartbeatTimer
_heartbeatTimeForCloudIDs
_pendingSessions
_reliableSessions
_unreliableSessions
_streamConnections
_datagramConnections
length
bytes
inviteVersionFromMessage:
dataFrom64String:
clientDictionary
parseClientData:
initWithPushDictionary:
setGameDescriptor:
decodeObjectOfClasses:forKey:
sessionToken
selfNatType
serverHosted
peerPushToken
peerNatType
peerNatIP
peerBlob
selfTicket
declineReason
inviteVersion
clientNotification
updateDeclineInviteTrackingForReason:
inviteWithBulletin:
serviceForBundleID:localPlayer:
declineGameInvite:reason:handler:
_gkPathForInviteSound
stringByAppendingFormat:
clientNotificationWithiCloudID:
declineInviteWithReason:
customInviteSoundPathForBundleID:
setSessionToken:
setSelfNatType:
setServerHosted:
setPeerPushToken:
setPeerNatType:
setPeerNatIP:
setPeerBlob:
setSelfTicket:
setDeclineReason:
setClientDictionary:
setInviteVersion:
_serverHosted
_sessionToken
_selfNatType
_peerPushToken
_peerNatType
_peerNatIP
_peerBlob
_selfTicket
_declineReason
_clientDictionary
_inviteVersion
reportMessageInviteProcessingDuration
recordAppLaunchAndTotalTimestamp
reportEvent:payload:
isReconnect
natType
setGameInviteMessage
loadDataWithHandler:
execute:
subdataWithRange:
initWithData:encoding:
setInAlertView:
dateWithTimeIntervalSinceNow:
setExpirationDate:
expireBulletin:
acceptedInviteManager
addMultiplayerInvite:
acceptMultiplayerGameInvite
loadLocalizedGameNameForBundleID:handler:
loadOriginatorPlayerWithCompletionHandler:
setIsReconnect:
_isReconnect
debugLine
aggregateDictionaryKey
setInvitedPlayerRespondedWithCompletionHandler:
clientForInviteSessionToken:
inviteSession
referencesForInvitee:
removeInvitee:reference:
isAccept
cancelInvitationForSession:playerID:pushTokens:handler:
shareInvitees
shareRecordID
unarchivedObjectOfClass:fromData:error:
fetchShareRecordsWithRecordIDs:inDatabase:handler:
addResponse:
acceptInviteWithNotification:
declineInviteWithNotification:
shouldBeCleared
deleteInviteSession
performAsync:
getDebugLine
getNotificationName
notificationName
_debugLine
_notificationName
blobType
relayType
relayConnectionID
relayTranscationID
selfRelayIP
selfRelayPort
peerRelayIP
peerRelayPort
relayToken
setBlobType:
setRelayType:
setRelayConnectionID:
setRelayTranscationID:
setSelfRelayIP:
setSelfRelayPort:
setPeerRelayIP:
setPeerRelayPort:
setRelayToken:
_blobType
_relayType
_relayConnectionID
_relayTranscationID
_selfRelayIP
_selfRelayPort
_peerRelayIP
_peerRelayPort
_relayToken
removeAndReturnAssociatedInvite
removeAndReturnInviteWithSessionToken:
copyDataFromAssociatedBulletin:
withdrawBulletin:
getBulletinsOfType:
isEqualToData:
intValue
initWithBase64EncodedString:options:
mutableCopy
initWithBag:clientProxy:credential:
named:
activity
child
credential
_gkPlistXMLDataForClient:player:
_gkDictionaryWithServerData:error:
resourceWithID:representedItem:TTL:
errorForBagError:serverError:
readDataForBagKey:method:postData:client:credential:completion:
named:execute:
postRequest:method:forBagKey:response:
transportWithBag:clientProxy:credential:
postRequest:forBagKey:response:
postRequest:forBagKey:result:
storeBag
setStoreBag:
clientProxy
setClientProxy:
setCredential:
setActivity:
_storeBag
_clientProxy
_credential
_activity
sharedLoginController
presentWithUsername:completionHandler:
dismiss
setEnvironment:
_environment
initWithObjectClass:context:predicate:
uniqueAttributeName
initWithName:
defaultCenter
removeObserver:
callStackSymbols
fetchRequestForContext:
setPredicate:
setResultType:
expressionForEvaluatedObject
setExpression:
setExpressionResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
executeFetchRequest:error:
writeToDictionary:
objectWithID:
deleteObject:
_populateWithContext:
readFromDictionary:
objectRegisteredForID:
enumerateKeysAndObjectsUsingBlock:
entityName
initWithEntityName:
relationshipKeyPathsForPrefetch
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
obtainPermanentIDsForObjects:error:
_gkMapDictionaryWithKeyPath:valueKeyPath:
addEntriesFromDictionary:
_gkMapWithBlock:
initWithObjectClass:context:
uniqueObjectsForKeys:context:newObject:
insertObjectsForServerRepresentations:context:newObject:
_objectClass
_lookup
_predicate
_semaphore
_valid
entityForName:inManagedObjectContext:
entityInManagedObjectContext:
initWithEntity:insertIntoManagedObjectContext:
fetchRequestWithEntityName:
setIncludesSubentities:
setIncludesPropertyValues:
setIncludesPendingChanges:
fetchSortDescriptors
countForFetchRequest:error:
setFetchLimit:
objectAtIndex:
uniqueObjectIDLookupKey
managedObjectModel
entitiesByName
attributesByName
allObjectsInContext:
countObjectsMatchingPredicate:context:
firstObjectMatchingPredicate:context:
deleteObjectsMatchingPredicate:context:
uniqueObjectIDLookupWithContext:
attributesDescriptionsForAttributesWithKeys:
updateWithServerRepresentation:
initWithManagedObjectContext:
image64
setImage64:
image128
setImage128:
image256
setImage256:
image512
setImage512:
imageTemplate
setImageTemplate:
imageCacheKeyPathsByKey
setValue:forKeyPath:
deleteCachedImage:
defaultManager
removeItemAtPath:error:
updateImagesWithImageURLs:
imageURLDictionary
clearImages
hasImages
purgeable
managedObjectContext
purgeFromManagedObjectContext:level:
purge
expirationDate
updateWithServerRepresentation:expirationDate:
setTimeStamp:
awakeFromInsert
expire
expireObjectsMatchingPredicate:context:
invalidateObjectsMatchingPredicate:context:
expired
availablePieces
setAvailablePieces:
primitiveValueForKey:
deleteCachedAvatars
URLWithString:
isFileURL
removeItemAtURL:error:
selfPlayerID
playerProfilesWithPlayerIDs:inManagedObjectContext:
playerProfileWithPlayerID:inManagedObjectContext:
_gkFilterWithBlock:
updateWithServerRepresentation:expirationDate:pieces:
setStatus:
setPurpleBuddyAccount:
setAccountName:
setUnderage:
setFindable:
isLocalPlayer
photoPendingExpirationDate
setPhotoPending:
photoPending
path
fileExistsAtPath:
setAvatarType:
setFriendLevel:
setNumberOfFriends:
setNumberOfGames:
setNumberOfAchievements:
setNumberOfAchievementPoints:
orderedSet
setOrderedEmailAddresses:
setNumberOfFriendsInCommon:
setNumberOfGamesInCommon:
setFacebookUserID:
setICloudUserID:
initWithCacheObject:
setEmailAddresses:
internalRepresentationWithPieces:
profileForPlayer:context:
playerProfilesWithPlayers:inManagedObjectContext:
isUnderage
isFindable
expireRecentMatchesWithGame:
friendList
playerIDs
friendRequestList
friendRecommendationList
_familiarityLookup
familiarityForPlayerID:
playersByFamiliarity:
setByAddingObjectsFromArray:
buildFamiliarilyLookupForProfile:
addFamiliarPlayerIDs:familiarity:
removeFamiliarPlayerIDs:familiarity:
setFamiliarPlayerIDs:familiarity:
piecesToLoadForFamiliarity:
filterPlayerIDs:familiarity:includeSelf:
setAddress:
setAddressSHA1:
setAddressPrefix:
setVerified:
setPrimary:
gamesForGameDescriptors:context:
gamesForBundleIDs:context:
gameDescriptorsWithInstalledBundleVersionsForBundleIDs:
_gamesForFullGameDescriptors:context:
gameDescriptorsWithInstalledBundleVersionsForGameDescriptors:
updateWithGameDescriptor:
_gkMapDictionaryWithKeyPath:
storePiecesValid
stringValue
longLongValue
numberWithLongLong:
setBundleID:
setAdamID:
externalVersion
isEqualToNumber:
setExternalVersion:
gamePlatformFromServerGameDescriptorString:
setPlatform:
setSoftwareType:
setPrerendered:
setSupportsLeaderboards:
setHasAggregateLeaderboard:
setNumberOfCategories:
setNumberOfLeaderboardSets:
numberOfLeaderboardSets
setSupportsLeaderboardSets:
setDefaultCategory:
setSupportsAchievements:
setSupportsMultiplayer:
setSupportsTurnBasedMultiplayer:
setMaxAchievementPoints:
setStorePiecesExpirationDate:
setArtistName:
setViewItemURL:
setShortViewItemURL:
unsignedLongLongValue
setNumberOfUserRatings:
floatValue
setAverageUserRating:
indexOfObjectPassingTest:
setPriceDisplay:
setOwned:
_gkFirstObject
storePiecesExpirationDate
viewItemURL
internalRepresentationForCacheObject:
platform
platformStringForServerRequest:
gameForGameDescriptor:context:
gameForBundleID:context:
updateStorePiecesWithServerRepresentation:expirationDate:
storePiecesExpired
leaderboardSetWithIdentifier:
updateEntriesWithRepresentations:entryForRepresentation:reuseEntriesByIndex:
setGroupIdentifier:
setAchievedDescription:
setUnachievedDescription:
setMaximumPoints:
setHidden:
setReplayable:
title
groupIdentifier
achievedDescription
unachievedDescription
maximumPoints
unsignedIntegerValue
hidden
replayable
setIcons:
achievementDescriptionList
entries
player
lastReportedDate
setLastReportedDate:
percentComplete
setPercentComplete:
_gkDateFromServerTimestamp:
gameRecords
setGame:
recordsForGames:playerProfile:
setLastPlayedDate:
setRank:
setMaxRank:
setFriendRank:
setMaxFriendRank:
setAchievements:
setAchievementPoints:
gamePlayerID
setGamePlayerID:
teamPlayerID
setTeamPlayerID:
setDefaultLeaderboardIdentifier:
arrayWithObjects:
recordForGame:playerProfile:
updateIDsWithServerRepresentation:
updateAchievementsWithServerRepresentation:
numberWithFloat:
setRating:
ratingForGameDescriptor:context:
entryClass
leaderboardTitleMapList
setLeaderboardTitleMapList:
setLocalizedTitle:
setLeaderboardIdentifiers:
UUID
UUIDString
setSeed:
list
mutableOrderedSetValueForKey:
insertObject:atIndex:
updateSeed
filteredArrayUsingPredicate:
_gkDeleteObjects:
orderedSetWithCapacity:
weakToWeakObjectsMapTable
orderedSetWithOrderedSet:
minusOrderedSet:
setEntries:
indexesOfObjectsPassingTest:
objectsAtIndexes:
reorderEntry:toIndex:
removeEntriesMatchingPredicate:
findEntry:
entryPassingTest:
entriesPassingTest:
setCommon:
populateFriendNamesFromServerRepresentationDictionary:
setFriendBiDirectional:
setFriendPlayedWith:
setFriendPlayedNearby:
setLastPlayedGame:
_gkDistinctValuesForKeyPath:
lastPlayedGame
cacheFriendList:withTimeToLive:forProfile:managedObjectContext:commonFriends:
versions
version
setVersions:
shortVersions
shortVersion
setShortVersions:
setVersion:
setShortVersion:
setViewed:
setDisplayedToUser:
reason
setReason:
reason2
setReason2:
setRid:
source
setSource:
setReasonID:
setWasViewed:
setBadgeCount:forBundleID:badgeType:
setEmail:
internalRepresentationIncludingInstalledGames:
filteredSetUsingPredicate:
softwareType
purchaseDate
sortDescriptorWithKey:ascending:comparator:
sortedArrayUsingDescriptors:
setScoreType:
setLastSubmittedDate:
localizedTitle
rank
setOverallRank:
maxRank
setOverallRankCount:
friendRank
maxFriendRank
setFriendRankCount:
otherPlayer
internalRepresentationForPlayer:
applicationIsInstalled:
engineID
setEngineID:
setGameRecord:
gameRecord
deleteGameData
prepareForDeletion
sessionID
dataWithContentsOfFile:
setDataExpirationDate:
writeToFile:options:error:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
participants
setSessionID:
setCreationDate:
setCurrentPlayerID:
setCurrentGuestID:
setLastTurnDate:
setUnusedID:
setDeletionDate:
setLocalizableMessage:
setMinPlayers:
setMaxPlayers:
setCurrentParticipant:
turnNumber
setTurnNumber:
setLastTurnPlayerID:
numberWithUnsignedInteger:
removeObjectForKey:
exchanges
updateWithServerRepresentation:participants:
saveGameData:expirationDate:
setMatchDataVersion:
sessionsWithSessionIDs:inContext:
sessionWithID:inManagedObjectContext:
isActive
gameData
expireGameData
participantWithPlayerID:
participantAtIndex:
setInvitedBy:
setInviteMessage:
setOutcome:
setGuestID:
setTimeoutDate:
setExchangeID:
setStatusString:
setData:
setSendDate:
setCompletionDate:
setSenderIndex:
setRecipients:
replies
setExchange:
setReplies:
setRecipientIndex:
setReplyDate:
sessionIDs
sessions
expireListsForSessionID:context:
challengesWithChallengeIDs:context:
challengeWithServerRepresentation:context:
setReceivingPlayerID:
classForInternalRepresentation
issuingPlayerID
setIssuingPlayer:
receivingPlayerID
setReceivingPlayer:
issueDate
setIssueDate:
completionDate
setState:
setCompatibleBundleIDs:
setIssuingPlayerID:
unsignedIntValue
detailsExpirationDate
setDetailsExpirationDate:
orderedSetOfCompatibleBundleIDs
hasDetails
value
setLeaderboardIdentifier:
setGroupLeaderboardIdentifier:
setValue:
formattedValue
setFormattedValue:
context
setContext:
setLeaderboard:
setAchievement:
subarrayWithRange:
authenticatePlayerWithExistingCredentialsWithHandler:
generateIdentityVerificationSignatureWithHandler:
authenticationWasCancelled
signOutPlayerWithHandler:
resetCredentialsWithHandler:
setLastPrivacyNoticeVersionDisplayedForSignedInPlayer:
getLastPrivacyNoticeVersionDisplayedForSignedInPlayerWithHandler:
setLastPersonalizationVersionDisplayedForSignedInPlayer:
getLastPersonalizationVersionDisplayedForSignedInPlayerWithHandler:
interfaceProtocol
authenticatePlayerWithUsername:password:rawPassword:altDSID:usingFastPath:handler:
authenticatePlayerWithUsername:password:handler:
accountCreated:playerID:authenticationToken:alias:finished:handler:
accountCreated:playerID:authenticationToken:alias:altDSID:finished:handler:
validateAccountWithUsername:password:handler:
getAccountAuthTokenWithHandler:
setupAccountForParameters:handler:
authenticationCancelled
accountEdited:alias:firstName:lastName:handler:
setLoginStatus:handler:
isICloudAvailableWithHandler:
secureCodedPropertyKeys
loginDisabled
setLoginDisabled:
passwordChangeRequired
setPasswordChangeRequired:
passwordChangeURL
setPasswordChangeURL:
shouldShowLinkAccountsUI
setShouldShowLinkAccountsUI:
alertTitle
setAlertTitle:
alertMessage
setAlertMessage:
lastPersonalizationVersionDisplayed
setLastPersonalizationVersionDisplayed:
lastPrivacyNoticeVersionDisplayed
setLastPrivacyNoticeVersionDisplayed:
_loginDisabled
_passwordChangeRequired
_shouldShowLinkAccountsUI
_passwordChangeURL
_alertTitle
_alertMessage
_lastPersonalizationVersionDisplayed
_lastPrivacyNoticeVersionDisplayed
mainBundle
initWithoutUIKitNotifications
logFilter
setParent:
setMode:
initWithName:parent:mode:
createActivity
detached
currentOrNew
mode
parent
_mode
_parent
callStackReturnAddresses
localizedCaseInsensitiveContainsString:
type
_gkIsGameCenterQuickAction
finishStartup
updateActivePushEnvironment
loadConnectivitySettingsAndStartNATObserver
syncQueue
initWithMachServiceName:
setDelegate:
setOptions:
_gkReachabilityForInternetConnection
setReachability:
_gkStartNotifier
reachabilityDidChange:
addObserver:selector:name:object:
iCloudAccountAvailabilityChanged:
setTransactionBag:
setTransactionCounts:
updateUserWithHandler:
_gkCurrentReachabilityStatus
performDelayedRequestsForEnvironment:
supportsForceTouch
_gkBundleWithIdentifier:
_gkShouldAddQuickActions
staticApplicationShortcutItems
dynamicApplicationShortcutItems
loadImageDataForDesiredSize:scale:handler:
shortcutItem
setBundleIdentifierToLaunch:
setActivationMode:
imageData
updateDynamicApplicationShortcutItems:forBundleIdentifier:
fetchApplicationShortcutItemsOfTypes:forBundleIdentifier:withCompletionHandler:
updateQuickItems:forBundleID:
allQuickActionsWithCompletionHandler:
quickActionsForBundleID:completionHandler:
processAction
numberWithUnsignedInt:
updateQuickActionsForbundleID:
standardUserDefaults
migrateOldAccountInformation
preferredEnvironment
isStoreDemoModeEnabled
integerForKey:
setInteger:forKey:
preferredLanguages
initWithMemoryCapacity:diskCapacity:diskPath:
setSharedURLCache:
setPushToken:
updateNotificationTopics
isGameCenterRestricted
gameCenterDidBecomeRestricted
setPreferencesDelegate:
setUpCloudKitNotificationTopics
updateAllQuickActions
startup
appStateChanged:
applicationStateMonitor
setHandler:
startObservingStateChangesForBundleID:
storeBagChanged:
startBulletinController
setReceivesMemoryWarnings:
addLockStatusObserver:
resume
synchronizeBagWithPreferences
object
activePushEnvironment
pushConnectionForEnvironment:
setEnabledTopics:ignoredTopics:
setEnabledTopics:
publicToken
_setPushToken:
sendPushTokenForClient:
_clearPushConnections
_updateNotificationTopics
_setActivePushEnvironment:
removeLockStatusObserver:
removeAllCredentialsForEnvironment:completionHandler:
removeAllBulletins
removeAllCaches
initWithConnection:
hasAnyEntitlement
processIdentifier
clientForProcessIdentifier:
fullEntitlements
setEntitlements:
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
setInterruptionHandler:
terminateClient:
setInvalidationHandler:
setPid:
allowProductionForProcess:
setDeniedProductionEnvironment:
wasProductionSignedForProcess:
setProductionSigned:
isGameCenter
isUIService
isExtension
setLogBits:
observingStateChangesForBundleID:
applicationState
didEnterForeground
dictionaryWithObjectsAndKeys:
setServerAddresses:
dictionary
setClientOptions:
_waitForValidNATType
performSync:
setNatType:
synchronize
pushEnvironment
_updatePushEnvironmentWithStoreBag:
getValuesForKeys:queue:handler:
_setConnectivitySettings:
_resetNATObserverWithSettings:
setMaxRecentPlayersCount:
setMaxRecentPlayersTime:
cancelGameInviteWithHandler:
cancelOutstandingMatchRequestWithHandler:
clearAllNearbyInvites
removeClient:
terminateWithCompletionHandler:
clientForBundleID:pid:createIfNecessary:
setPreviousApplicationState:
setApplicationState:
setAuthenticatingWithSettingsBundleID:
backgroundWithCompletionHandler:
getGameMetadataForBundleIDs:handler:
resetEnvironment
openGameCenterSettings
acceptAction
defaultAction
info
openURL:
bulletinsForPushNotification:withHandler:
topic
stringByAppendingString:
notificationFromRemoteNotificationDictionary:
containerIdentifier
databaseScope
updateCacheForDatabaseScope:handler:
beginTransaction:
executeBulletinWithBulletinController:
endTransaction:
transactionCounts
countForObject:
transactionBag
storeBagForEnvironment:
clientQueue
pushQueue
allowSelfSignedCertForEnvironment:
statsQueue
ratingsQueue
listener:shouldAcceptNewConnection:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
NATTypeDidChange:
NATTypeDictionaryUpdated:
triggerInterfaceChange
lockStatusDidChange
processQuickAction:
clientProxy:didRefreshContentsForDataType:userInfo:
activePushConnection
clearPushEnvironment
getValidNATTypeWithHandler:
setActivePushEnvironment:
pushToken
terminate
receivesMemoryWarnings
nearbyQueryLastCheckDate
setNearbyQueryLastCheckDate:
nearbyQueryAllowance
setNearbyQueryAllowance:
apsConnection
setApsConnection:
pushConnectionProd
setPushConnectionProd:
pushConnectionDev
setPushConnectionDev:
setApplicationStateMonitor:
authenticatingWithSettingsBundleID
reachability
applicationShortcutService
setApplicationShortcutService:
_publicListener
_currentEnvironment
_natType
_natObserver
_natSemaphore
_natQueue
_pushToken
_receivesMemoryWarnings
_activePushEnvironment
_nearbyQueryLastCheckDate
_nearbyQueryAllowance
_apsConnection
_pushConnectionProd
_pushConnectionDev
_transactionBag
_transactionCounts
_applicationStateMonitor
_authenticatingWithSettingsBundleID
_reachability
_applicationShortcutService
gameList
eventEmitterForProtocols:shouldQueue:
initWithSupportedProtocols:shouldQueue:
weakObjectsHashTable
setListeners:
setSupportedProtocols:
setQueuedEvents:
selector
invokeWithTarget:
removeObjectAtIndex:
dispatchQueuedEventsToListener:
signatureWithObjCTypes:
methodSignatureForProtocol:selector:
invocationWithMethodSignature:
setSelector:
methodSignatureForSelector:
listeners
retainArguments
eventEmitterForProtocols:
registerListener:
unregisterListener:
unregisterAllListeners
invocationForProtocol:selector:
forwardInvocation:
listenerRegisteredForSelector:
supportedProtocols
shouldQueue
setShouldQueue:
queuedEvents
_listeners
_supportedProtocols
_shouldQueue
_queuedEvents
initWithReaderConnection:writerConnection:transport:
readerWithReaderConnection:writerConnection:transport:delegate:
setListReader:
readResources:handler:
readerWithDatabaseConnection:
readerWithTransport:
writerWithDatabaseConnection:
_gkResourceWithID:
readerWithReaderConnection:writerConnection:transport:
listCacheReaderWithLanguage:connection:
listNetworkReaderWithTransport:cachedListResponse:
listCacheWriterWithLanguage:connection:
mergeNetworkLoadedProfileResources:withSparseListResources:
familiarityForProfileLoadWithRelativePlayer:
localPlayerForLoadingProfileRelativeToPlayer:
listReader
_listReader
initWithDatabaseConnection:localPlayer:filterFriendsInCommon:
initWithDatabaseConnection:
getFriendPlayerGCIDsStatement
getExpirationDateStatement
bindParametersForStatement:withPlayer:
_gkErrorForDatabase:
readerWithFamiliarity:toPlayer:language:databaseConnection:
_gkSetOfResourcesWithIDs:
readResources:inDatabase:statementStore:handler:
resourceWithID:
readerWithDatabaseConnection:localPlayer:filterFriendsInCommon:
shouldFilter
setShouldFilter:
_shouldFilter
stringWithCapacity:
localPlayer
allowEvaluation
interfaceClass
requiredEntitlements
reportScore:withTryToken:forTournament:completionHandler:
reportProgressScore:withTryToken:forTournament:completionHandler:
registerPlayerInTournament:playerGroup:completionHandler:
resignFromTournament:completionHandler:
beginPlayInTournament:completionHandler:
resumePlayInTournament:withTryToken:completionHandler:
getTotalPlayerCountInTournament:forGroup:completionHandler:
getFriendCountInTournament:forGroup:completionHandler:
getLocalParticipantForTournament:completionHandler:
loadParticipantsForTournament:request:completionHandler:
getTournamentStateForTournament:completionHandler:
createCustomTournamentWithRequest:completionHandler:
acceptInvitationForTournament:completionHandler:
declineInvitationForTournament:completionHandler:
addInvitees:forTournament:completionHandler:
removeInvitees:forTournament:completionHandler:
addCreator:forTournament:completionHandler:
removeCreator:forTournament:completionHandler:
loadTournamentDefinitionsWithCompletionHandler:
loadTournamentDefinitionWithID:completionHandler:
loadTournamentsWithPredicate:completionHandler:
loadHistoricalDataForPlayer:tournamentDefinition:completionHandler:
getShareURLForCustomTournament:completionHandler:
getAcceptedCustomTournamentWithCompletionHandler:
tournamentForID:completionHandler:
loadTournamentWithID:completionHandler:
resetTournamentDataForTournamentsWithTournamentDefinitionIdentifier:completionHandler:
bulletins
stringByAppendingPathComponent:
bulletinQueue
bulletinStorageFilePathForEnvironment:
moveItemAtPath:toPath:error:
writeToFile:atomically:
setClass:forClassName:
matchID
clearSavedBulletins
updateSavedBulletins
loadBulletins
clearTurnBasedBulletinsForMatchID:
clearChallengeBulletinsForChallengeID:
infoDictionary
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
bundlePath
pathComponents
_gkFrameworkVersionDescription
initWithPath:
localizedStringWithFormat:
dateFormatFromTemplate:options:locale:
addObserverForName:object:queue:usingBlock:
setUnitsStyle:
components:fromDate:toDate:options:
setAllowedUnits:
stringFromDateComponents:
setDateStyle:
setTimeStyle:
doesRelativeDateFormatting
setDoesRelativeDateFormatting:
_gkUpdateLocale
_gkFormattedStringWithDateStyle:timeStyle:
_gkFormattedDateForStyle:relative:
_gkFormattedWhenStringWithOptions:
_gkFormattedTimeIntervalStringWithStartDate:endDate:calendarUnits:style:
_gkLocalizedStringForKey:value:table:language:
_gkSystemLocalizedStringForKey:value:table:
data
lengthOfBytesUsingEncoding:
dataUsingEncoding:
appendData:
appendBytes:length:
stringWithCString:encoding:
_gkPerformSelector:withNullableObject:
instanceMethodSignatureForSelector:
numberOfArguments
setArgument:atIndex:
setTarget:
invoke
_gkInvokeSelector:withNullableObject:
getReturnValue:
_gkPopulateWithObject:keymap:
_gkPerformSelector:
_gkPerformSelector:withObject:
_gkInvokeSelector:
_gkInvokeSelector:withObject:
_gkDefaultKeymap
initWithObjects:
scheme
query
stringByReplacingOccurrencesOfString:withString:
stringByRemovingPercentEncoding
componentsSeparatedByString:
substringWithRange:
_gkIsValidServerURL
_gkIsSecure
_gkURLByAddingQueryParameters:
_gkURLByReplacingSchemeWithScheme:
_gkQueryDictionary
setMaxConcurrentOperationCount:
sharedSession
dataTaskWithRequest:completionHandler:
_gkSendAsynchronousRequest:completionHandler:
locale
setGroupingSize:
setUsesGroupingSeparator:
stringFromNumber:
gkRankFormatter
gk_formatInteger:withGrouping:
gk_formatUnsignedInteger:withGrouping:
getCharacters:
processUTF16CharactersForBidi:
rangeOfString:options:
enumerateSubstringsInRange:options:usingBlock:
_gkIsMixedDirection
stringForPercentileWithRank:totalScores:asPercentile:isTop:
stringForPercentileRankingWithRank:totalScores:
scannerWithString:
setCharactersToBeSkipped:
scanLocation
characterAtIndex:
scanString:intoString:
scanUpToString:intoString:
scanUpToCharactersFromSet:intoString:
scanCharactersFromSet:intoString:
dataWithLength:
mutableBytes
base64EncodedStringWithOptions:
_gkIsNaturallyRTL
_gkSearchMatchesItem:withSearchTerms:
_gkTruncationSymbolWithFormat:
_gkLocaleSensitiveUppercaseString
_gkStringByUnescapingFromURLQuery
_gkArrayByTokenizingString
_gkSHA256Hash
stringForParanthenticalPercentileRankingWithRank:totalScores:
stringForRankAndPercentileWithRank:totalScores:
stringForScoreAndPercentileWithRank:totalScores:formattedScore:
doubleValue
_gkServerTimestamp
_gkServerTimeInterval:
_gkDateFromScalarServerTimestamp:
orderedSetWithArray:
enumerateIndexesUsingBlock:
_gkOrderedSet
_gkArrayWithIndexSet:
_gkMutableOrderedSet
_gkSortedOrderedSetUsingDescriptors:
_gkFilteredOrderedSetUsingPredicate:
indexSet
addIndex:
initWithIndexSet:
_gkIndexSetWithArray:
applicationProxyForIdentifier:
bundleURL
localizedShortName
_gkTypesafePropertyListWithData:withClass:
initWithBase64EncodedString_gk:
_gkBase64EncodedString
string
_gkDescription
_gkDescriptionWithChildren:
_gkViewDebuggingChildKeys
_gkRecursiveDescription
_gkViewDebuggingChildren
whitespaceCharacterSet
appendString:
replaceOccurrencesOfString:withString:options:range:
characterSetWithCharactersInString:
stringByReplacingCharactersInRange:withString:
setNumberStyle:
initWithDatabaseConnection:gameDescriptor:
requestsInsertSQL
bindParametersForRequestsStatement:playerID:digest:
ratingsInsertSQL
bindParametersForRatingsStatement:payload:requestsRowID:
writerWithDatabaseConnection:gameDescriptor:
databaseConnection
refreshDataType
_gameDescriptor
resourceWithID:representedItem:
resourceForSubmitRating:forBundleID:
contextKeyForPlayer:
newManagedObjectContextForClient:player:
objectForKey:objectProducerBlock:
_managedObjectContextForPlayer:
resourceManager
transactionGroupWithContext:resourceManager:client:
_existingManagedObjectContextForPlayer:
cacheFileQueue
cacheDirectoryForBundleID:environment:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
cacheDirectoryURLForClient:player:
URLByAppendingPathComponent:isDirectory:
closeDatabaseFromManagedObjectContextForPlayer:
closeDatabaseFromManagedObjectContextForMOC:
resetCache:
enumerateClientsUsingBlock:
URLForResource:withExtension:
initWithContentsOfURL:
cacheFileURLForClient:player:
initWithConcurrencyType:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
persistentStores
setPersistentStoreCoordinator:
setMergePolicy:
setRetainsRegisteredObjects:
performBlockAndWait:
_newManagedObjectContextForPlayer:
persistentStoreCoordinator
removePersistentStore:error:
transactionGroupIfCacheExistsForPlayer:
invalidateStoreFrontDependentObjects
removeCacheForPlayer:
playerWithRecordID:
playerWithIdentity:
shouldProcessNotification
isMultiplayerGamingRestricted
setReceiverGuestPlayerID:
setOriginatorGuestPlayerID:
setCompatibleVersions:
setCompatibleShortVersions:
addSuiteNamed:
initWithUIKitNotifications
_shouldSynchronizeOnNextRead
set_shouldSynchronizeOnNextRead:
removeOverrideForKey:
preferencesValueForKey:
booleanValueForKey:defaultValue:
_didWriteKey:
setOverrideValues:
integerValueForKey:defaultValue:
setIntegerValue:forKey:
booleanValueForKey:
setBooleanValue:forKey:
unsignedIntegerValueForKey:defaultValue:
setUnsignedIntegerValue:forKey:
timeIntervalForKey:defaultValue:
setTimeInterval:forKey:
stringValueForKey:defaultValue:
setStringValue:forKey:
maxDefaultPlayersP2P
maxDefaultPlayersHosted
maxDefaultPlayersTurnBased
maxDefaultGameStateSizeTurnBased
exchangeDataDefaultMaximumSize
exchangeDefaultMaxInitiatedExchangesPerPlayer
archivedProfileForEnvironment:
setLogFilter:
hostNameForEnvironment:
displayNameForEnvironment:
isInternalBuild
storeBagURL
setStoreBagURL:
allowUnsignedBag
setAllowUnsignedBag:
useTestProtocols
setUseTestProtocols:
forceDefaultNickname
setForceDefaultNickname:
mescalSetupRetries
setMescalSetupRetries:
loginDisableThreshold
setLoginDisableThreshold:
operationTimeout
setOperationTimeout:
operationRetryDelay
setOperationRetryDelay:
operationRetryCount
setOperationRetryCount:
debugRequestTimeout
setDebugRequestTimeout:
isNotificationCenterEnabled
setNotificationCenterEnabled:
notificationBadgesEnabled
setNotificationBadgesEnabled:
notificationSoundsEnabled
setNotificationSoundsEnabled:
notificationAlertsEnabled
setNotificationAlertsEnabled:
verboseLogging
setVerboseLogging:
testRunID
setTestRunID:
forceRelay
setForceRelay:
preemptiveRelay
setPreemptiveRelay:
setPushEnvironment:
pipeliningSetting
setPipeliningSetting:
restrictToAutomatch
setRestrictToAutomatch:
recentNumberOfPlayers
setRecentNumberOfPlayers:
maxPlayersP2P
setMaxPlayersP2P:
maxPlayersHosted
setMaxPlayersHosted:
maxPlayersTurnBased
setMaxPlayersTurnBased:
maxGameStateSizeTurnBased
setMaxGameStateSizeTurnBased:
exchangeDataMaximumSize
setExchangeDataMaximumSize:
exchangeMaxInitiatedExchangesPerPlayer
setExchangeMaxInitiatedExchangesPerPlayer:
useInternalHeader
setUseInternalHeader:
terminationInterval
setTerminationInterval:
garbageCollectionInterval
setGarbageCollectionInterval:
minimumCacheTTL
setMinimumCacheTTL:
cacheTTLOverride
setCacheTTLOverride:
shouldAnnotateImageUsage
setShouldAnnotateImageUsage:
shouldTrackAtlasImageUsage
setShouldTrackAtlasImageUsage:
shouldUseTestIcons
setShouldUseTestIcons:
shouldLinkPlayerToICloud
setShouldLinkPlayerToICloud:
shouldLinkPlayerToTwitter
setShouldLinkPlayerToTwitter:
shouldLinkPlayerToFacebook
setShouldLinkPlayerToFacebook:
shouldDisallowInvitesFromStrangers
shouldAllowNearbyMultiplayer
setShouldAllowNearbyMultiplayer:
shouldAddPlayerInfoToAddressBook
setShouldAddPlayerInfoToAddressBook:
maxRecentPlayersCount
maxRecentPlayersTime
HTTPShouldUsePipelining
isClipGestureEnabled
setClipGestureEnabled:
isComprehensiveLoggingEnabled
setComprehensiveLoggingEnabled:
tournamentsDebuggingEnabled
setTournamentsDebuggingEnabled:
tournamentDemoModeEnabled
setTournamentDemoModeEnabled:
tournamentMaxSimulatedPlayers
setTournamentMaxSimulatedPlayers:
tournamentMaxSimulatedFriends
setTournamentMaxSimulatedFriends:
setTournamentState:
tournamentParticipantState
setTournamentParticipantState:
tournamentPlayers
setTournamentPlayers:
tournamentReplays
setTournamentReplays:
setTournamentDuration:
tournamentStartDate
setTournamentStartDate:
tournamentEndDate
setTournamentEndDate:
tournamentMinPlayers
setTournamentMinPlayers:
tournamentMaxPlayers
setTournamentMaxPlayers:
tournamentMaxReplays
setTournamentMaxReplays:
tournamentAutoDuration
setTournamentAutoDuration:
tournamentCustomMinPlayers
setTournamentCustomMinPlayers:
tournamentCustomMaxPlayers
setTournamentCustomMaxPlayers:
tournamentCustomMaxReplays
setTournamentCustomMaxReplays:
tournamentCustomDuration
setTournamentCustomDuration:
tournamentUIAppearanceStyle
setTournamentUIAppearanceStyle:
tournamentCreationMethod
setTournamentCreationMethod:
restrictToTournamentPlayers
setRestrictToTournamentPlayers:
tournamentServer
setTournamentServer:
isWebKitInspectElementEnabled
setWebKitInspectElementEnabled:
overrideValues
_webKitInspectElementEnabled
_overrideValues
codedPropertyKeys
descriptionSubstitutionMap
sortedArrayUsingComparator:
serverRepresentation
mergePropertiesFrom:
updateInterestedBundleIDs:
handler
interestedBundleIDs
arrayByAddingObject:
initWithBundleIDs:states:
applicationStateForApplication:
reportAppLaunchDuration
sharedService
openApplication:options:withResult:
enumerateBundlesOfType:block:
setPhotos:
setNumberOfTurns:
setNumberOfChallenges:
setNumberOfRequests:
setDefaultNickname:
playerEmailsSQLString
rowIDForProfileStatementResult:
bindParametersForEmailsStatement:playerRowID:
emailForPlayerEmailStatementResult:
challengesTTLForProfileStatementResult:
friendRequestsTTLForProfileStatementResult:
lastPlayedGameRowIDForProfileStatementResult:
playerProfileSQLString
bindParametersForProfileStatement:playerGCID:
playerForProfileStatementResult:
availablePiecesForProfileStatementResult:
TTLForProfileStatementResult:
photoPendingTTLForProfileStatementResult:
processAvailableResource:retrievedWithStatement:fromDatabase:statementStore:
interfaceWithProtocol:
configureInterface:
plistClasses
setOcelotStateForCurrentApp
getOcelotStateForCurrentAppWithHandler:
setClasses:forSelector:argumentIndex:ofReply:
setStatus:handler:
cachePhotos:avatarType:fileNames:handler:
setPhotoData:avatarType:handler:
deletePhotoWithHandler:
setFindable:handler:
setPlayerNickname:suggestionsCount:handler:
getSuggestionsForNickname:suggestionsCount:handler:
getTermsAndConditionsURLWithHandler:
getFriendSupportPageURLWithHandler:
invalidateCachedProfileForLocalPlayerWithHandler:
pathWithComponents:
cacheKeyRepresentation
allHeaderFields
_maxAge
fileSystemRepresentation
_gkReadXattrBytes:count:withName:path:
_gkWriteXattrBytes:count:withName:path:
_gkRemoveXattrNamed:path:
_gkExpirationIntervalOfFileAtPath:
_gkSetExpirationInterval:ofFileAtPath:
isDestructive
inAlertView
inBannerView
allocWithZone:
initWithDictionary:
actionDictionary
setInBannerView:
_isDestructive
_inAlertView
_inBannerView
_type
_title
_info
initWithFormat:
setRange:
setPlayerInternals:
decodeInt32ForKey:
decodeBoolForKey:
minimalInternal
encodeInt32:forKey:
encodeBool:forKey:
requestForRankRange:
requestForPlayerInternals:
setPlayerInternal:
gameBundleID
setGameBundleID:
setFriendsOnly:
timeScope
setTimeScope:
isPrefetch
setPrefetch:
_playerInternal
_gameBundleID
_groupIdentifier
_friendsOnly
_timeScope
_prefetch
decodeIntegerForKey:
encodeInteger:forKey:
range
_range
playerInternals
_playerInternals
_initPlatform
setEmitter:
beginObservingKeyBagStatusWithCallback:
_platformUDID
stopObservingKeyBagStatus
userAgentWithProcessName:protocolVersion:
processNameHeader
deviceName
osVersion
buildVersion
gameKitVersion
decimalDigitCharacterSet
rangeOfCharacterFromSet:
userAgent
storeUserAgent
protocolVersionHeader
buildVersionHeader
platformBuildVersion
setDeviceName:
isGameKitAvailable
emitter
_udid
_deviceName
_osVersion
_buildVersion
_gameKitVersion
_gameKitAvailable
_emitter
join:queue:block:
_remainingResourceAfterJoiningResources:group:queue:
_registerForResources:group:
_deregisterForResources:group:
queueName
_queueForResource:
wait:
signal
group:joinResources:queue:performBlock:
writeResources:group:queue:block:
readResources:group:queue:block:
_syncQueue
_groupForResources
_resourceQueues
initWithKeys:
resourceIdentifierForKeys:
keys
resourceIdentifiersForBagKeys:
setKeys:
semaphore
_keys
_queueName
initWithTransport:forBagKey:
setTransport:
setBagKey:
bagKey
transport
uploadImageData:toURL:handler:
requestWithURL:
setValue:forHTTPHeaderField:
setHTTPMethod:
setHTTPBody:
HTTPBody
valueForHTTPHeaderField:
_gkUnzippedData
allHTTPHeaderFields
statusCode
localizedStringForStatusCode:
JSONObjectWithData:options:error:
uploadProfileImageMetadata:fromUploadURL:handler:
avatarType
writerWithTransport:forBagKey:
_bagKey
_transport
_avatarType
loadQuickActionData
setQuickActionBundleIdentifiers:
quickActionQueue
storageFilePathForEnvironment:
quickActionBundleIdentifiers
setWithSet:
updateQuickActionData
sortQuickActionArray:
addQuickAction:toDictionary:forBundleID:
getGamesForPlayer:includeInstalled:handler:
initWithChallenge:
initWithMatch:
getTurnBasedMatchesAndCompatibleBundleID:handler:
initWithInvite:
loginStatusForCredential:
previousError
dateOfPreviousError
timeIntervalSinceDate:
loadGamesIntoDictionary:group:
loadChallengesIntoDictionary:group:
loadMultiplayerTurnsIntoDictionary:group:
loadMultiplayerInvitesIntoDictionary:group:
updateFriendsOfLocalPlayerWithHandler:
setPreviousError:
setDateOfPreviousError:
sortQuickActionDictionary:
addKeysToQuickActionData:
clearSavedQuickActionData
_quickActionBundleIdentifiers
_previousError
_dateOfPreviousError
sharedInstance
listener
addHandler:
blockUntilConnected
hasListenerForID:
addListenerCapabilities:
removeListenerID:
addListenerID:capabilities:
setCapabilities:forListenerID:
daemonControllerWillConnect
daemonControllerDidConnect
daemonControllerDidDisconnect
daemonConnectionLost
connect
disconnect
removeListenerCapabilities:
_caps
getPlayersForGameDescriptor:leaderboardIdentifier:handler:
getPlayersForGameDescriptor:achievementIdentifier:handler:
getPlayersForGameDescriptor:includeCompatibleMultiplayerGames:handler:
getRecentMatchesForGameDescriptor:otherPlayer:handler:
getRecentPlayersWithHandler:
getAchievementDescriptionsForGameDescriptor:handler:
getAchievementsForGameDescriptor:players:handler:
submitAchievements:whileScreeningChallenges:withEligibleChallenges:handler:
resetAchievementsWithHandler:
getLeaderboadForRequest:handler:
submitScores:whileScreeningChallenges:withEligibleChallenges:handler:
getLeaderboardsForGameDescriptor:player:setIdentifier:handler:
getLeaderboardSetsForGameDescriptor:handler:
setDefaultLeaderboardID:handler:
getDefaultLeaderboardIDWithHandler:
getAchievementLeaderboardForRequest:handler:
getHypotheticalLeaderboardRanksForScores:forGameDescriptor:handler:
accountStoreDidChange:
accountStoreEmailDidChange:
accessQueue
setLoginCancelledCount:
migratePreSundanceAccountInformation
migratePreBlacktailAccountInformation
primaryCredentialCache
allCredentialsCache
invalidateCredentialCaches
_gkSaveCredential:completionHandler:
_transact:complete:
scope
setScope:
_gkAllCredentialsForEnvironment:
_getAltDSIDFromIDMSForCredential:completionHandler:
_transactAndWait:
_gkDeleteCredential:completionHandler:
_gkPrimaryCredentialForEnvironment:
allCredentialsForEnvironment:
_gkCredentialForUsername:environment:
aa_recommendedAppleIDForAccountSignInWithTypeIdentifier:
loginCancelledCount
setCredential:completionHandler:
setPrimaryCredential:completionHandler:
getAltDSIDFromIDMSForCredential:completionHandler:
removeCredential:completionHandler:
replaceCredential:withCredential:completionHandler:
credentialForPlayer:environment:
credentialForUsername:environment:
suggestedUsername
store
setStore:
setPrimaryCredentialCache:
setAllCredentialsCache:
_loginCancelledCount
_store
_primaryCredentialCache
_allCredentialsCache
serverEnvironment
authMachineForEnvironment:
setAuthenticationToken:
setServerEnvironment:
_accountName
_serverEnvironment
_gkStopNotifier
_gkReachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
_gkReachabilityWithHostName:
_gkReachabilityForLocalWiFi
_gkConnectionRequired
localWiFiRef
reachabilityRef
setHostName:
hostName
_hostName
_error
currentHandler
handleFailureInFunction:file:lineNumber:description:
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
getOldPhotosSQL
deleteOldPhotosSQL
bindParametersForGetOldPhotosStatement:playerID:
bindParametersForDeleteOldPhotosStatement:requestsRowID:
bindParametersForRequestsStatement:playerID:
photosInsertSQL
bindParametersForPhotoStatement:requestsRowID:
getOldStatusesSQL
deleteOldStatusesSQL
bindParametersForGetOldStatusesStatement:playerID:
bindParametersForDeleteOldStatusesStatement:requestsRowID:
statusInsertSQL
bindParametersForStatusStatement:status:requestsRowID:
setLocalPlayerGCID:
setRepresentedItem:
setTTL:
setInvalid:
localPlayerGCID
_localPlayerGCID
userErrorForCode:userInfo:
userErrorForServerError:userInfo:
serverErrorForCode:withReason:
userErrorForServerError:
serverErrorForCode:withUserInfo:
_gkIsUnauthenticatedError
userErrorForCode:underlyingError:
userErrorForServerCode:reason:
userErrorForServerCode:reason:userInfo:
_gkUnauthenticatedError
recoveryAttempterUsingHandler:
attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:
attemptRecoveryFromError:optionIndex:
_attemptRecovery
initWithDisplayedPlayerIDs:transport:
setRecentlyDisplayedPlayerIDs:
poolName
deduperForPool:
requestBody
friendRecommendationForRepresentation:
openRequestForResources:processCallback:
setWithObject:
readerWithDisplayedPlayerIDs:transport:
recentlyDisplayedPlayerIDs
_recentlyDisplayedPlayerIDs
getPlayersForMatchRequest:connectionData:connectedPeers:rematchID:handler:
getFlowRateForPlayerGroup:handler:
getOverallFlowRateWithHandler:
getCompatibilityMatrix:handler:
invitePlayersForMatchRequest:onlineConnectionData:nearbyConnectionData:handler:
loadURLWithData:player:matchRequest:handler:
setShareInvitees:
removePlayersFromGameInviteV2:handler:
acceptGameInvite:connectionData:handler:
getAcceptedGameInviteWithHandler:
getPlayersToInviteWithHandlerV2:
getInviteSessionTokenWithHandler:
sendReconnectInvitation:toPlayer:connectionData:sessionToken:pushToken:handler:
initiateRelayRequest:handler:
updateRelayRequest:handler:
cancelRelayRequest:handler:
updateCacheWithNearbyProfileDictionary:handler:
presentNearbyInvite:
nearbyInviteWasCancelled:
invitePlayersV2:toGame:handler:
setClass:forSelector:argumentIndex:ofReply:
_incrementSequence
isFinished
isCancelled
transitionToState:
matches
setMatches:
relayPushes
setRelayPushes:
cdxTicket
setCdxTicket:
serverRequest
setServerRequest:
matchRequest
setMatchRequest:
matchingGroup
setMatchingGroup:
sequence
_sequence
_rid
_matches
_relayPushes
_cdxTicket
_state
_serverRequest
_matchRequest
_matchingGroup
initWithWorkspace:
setLsWorkspace:
initWithBundleID:
openSensitiveURL:withOptions:
openSettings
currentPlatformServerString
lsWorkspace
requiredDeviceCapabilities
isGameCenterEnabled
initWithProxy:
itemName
_gkBundleWithPID:
profileValidated
openICloudSettings
availableGameIdentifiers
availableGamesAndIdentifiers
_lsWorkspace
setLsProxy:
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
dictionaryWithContentsOfURL:
foundBackingBundle
bundleWithURL:
applicationIdentifier
metadata
initWithLocaleIdentifier:
timeZoneForSecondsFromGMT:
dateFromString:
appState
installType
shortVersionString
metadataForBundleURL:
bundle
lsProxy
setMetadata:
_lsProxy
_metadata
getRemoveFriendDescriptorStatement
bindParametersForStatement:playerID:
removeFriendDescriptorForExecutedStatement:
dataWithBytes:length:
willAcceptShareAtURL:
setHostPID:reply:
setTestGame:reply:
getServicesForPID:localPlayer:reply:
getPrivateServicesForPID:localPlayer:reply:
getAccountNameWithHandler:
getAuthenticatedPlayerIDWithHandler:
getAuthenticatedPlayerInfo:
getAuthenticatedLocalPlayersWithStatus:handler:
localizedMessageFromDictionary:forBundleID:handler:
loadRemoteImageDataForURL:reply:
resetLoginCancelCount
setInterface:forSelector:argumentIndex:ofReply:
initWithTransport:forClient:localPlayer:credential:
_buildSignatureLookupForProtocol:
authQueue
initWithService:queue:
authenticateWithService:username:password:handler:
verifyAuthorized
authenticateWithService:username:password:rawPassword:altDSID:usingFastPath:displayAuthUI:handler:
initWithoutCredentialWithTransport:forClient:
appInitState
setAppInitState:
authenticateWithService:username:password:rawPassword:altDSID:usingFastPath:handler:
serviceFromService:
requiresAuthenticationForSelector:
_gkReplyHandlerInvocation
_gkCallbackWithError:queue:
authenticationWrapperForService:
serviceForClient:player:
serviceForBundleID:player:
initWithClient:
authenticatePlayerWithUsername:password:rawPassword:usingFastPath:displayAuthUI:handler:
_service
_authQueue
_signatureLookup
beginNetworkActivity
endNetworkActivity
resetNetworkActivity
setPreferencesValues:
setCurrentGame:serverEnvironment:reply:
authenticatedPlayersDidChange:reply:
completedOptimisticAuthenticationWithResponse:error:
friendRequestSelected:
respondedToNearbyInvite:
cancelGameInvite:
relayPushNotification:
didConnectToParticipantWithID:
didDisconnectFromParticipantWithID:
didReceiveData:reliably:forRecipients:fromSender:
localPlayerAcceptedCustomTournamentInvite
session:addedPlayer:
session:removedPlayer:
session:player:didSaveData:
session:didReceiveMessage:withData:fromPlayer:
fetchTurnBasedData
receivedChallengeSelected:
completedChallengeSelected:
scoreSelected:
achievementSelected:
setBadgeCount:forType:
pushDescriptor
setResolvedBundleID:
setGameTitle:
setGoalText:
loadGoalTextForGameDescriptor:handler:
getStoreItemsForAdamIDs:handler:
achievement
leaderboardIdentifier
groupLeaderboardIdentifier
challengeInternalObject
loadDetailsWithHandler:
goalText
gameTitle
resolvedBundleID
setPushDescriptor:
_receivingPlayer
_issuingPlayer
_goalText
_pushDescriptor
_gameTitle
_resolvedBundleID
appSessionForPlayer:
_gkDictionaryWithServerData:serverStatus:error:
_gkDictionaryWithXMLPlistData:
initWithBytes:length:encoding:
_gkSHA1HashString
_gkMD5HashString
_gkSHA1HashData
_gkMD5HashData
_gkImageCacheKeyPathsByKey
_gkImageURLForSize:scale:foundSize:
_gkImageURLForSize:scale:
_gkClientImageDictionaryForServerImageURLs:
setImageURLDictionary:
setTitleText:
setSubText:
setLaunchURL:
setImageData:
titleText
subtitleText
previousParticipantIndex
currentParticipant
lastTurnDate
localizedSubtitle
subText
_gkLoadRemoteImageDataForORBForURL:queue:handler:
setPendingQuickAction:
launchURL
setUserInfo:
setLocalizedSubtitle:
initWithFirstName:lastName:imageData:
setIcon:
initWithSBSApplicationShortcutItem:
_imageURLDictionary
_firstName
_lastName
_titleText
_subText
_date
_launchURL
_imageData
initWithRequest:
request
HTTPMethod
keyWithRequest:
setRequest:
_request
_gkSAPSession
_gkSetSAPSession:
_gkDictionaryKey
requestWithURL:cachePolicy:timeoutInterval:
setInternal:
setHTTPUserAgent:
setHTTPShouldHandleCookies:
hashForPlayerID:
isAddingFriendsRestricted
canonicalLocaleIdentifierFromString:
localeIdentifier
canonicalLanguageIdentifierFromString:
setPlayerID:hash:authToken:
setStoreMode:
setRestrictions:
setDeviceUniqueID:
setProcessName:
setProtocolVersion:
setBuildVersion:
setSAPSignature:
setSAPversion:
_gkHTTPRequestWithURL:method:postData:
lock
unlock
group
setGroup:
setResult:error:
setLock:
updateQueue
setUpdateQueue:
_group
_lock
_updateQueue
initWithName:targetQueue:
leftNotifiers
rightNotifiers
performLeftOnQueue:block:
performRightOnQueue:block:
applyUpdates
_join:
aggregateJoin:
aggregateJoinLeft:
aggregateJoinRight:
setLeftResults:
setRightResults:
joinGroup
joinGroupWithName:
joinGroupForTargetQueue:
joinGroupWithName:taregetQueue:
performLeft:
performRight:
join:
joinLeft:
joinRight:
setLeftNotifiers:
setRightNotifiers:
leftResults
rightResults
_targetQueue
_leftNotifiers
_rightNotifiers
_leftResults
_rightResults
_dispatchGroup
setCacheQueue:
setUserRecordQueue:
setTokensByZoneID:
setTournamentDefinitionsByRecordID:
setTournamentsByRecordID:
setTournamentRecordIDByParticipantRecordID:
setTournamentParticipantsGroupedByTournamentID:
setInviteURLByTournamentRecordID:
setContactInviteByRecordID:
userRecordQueue
setUserRecordID:
clearWithHandler:
fetchUserRecordIDWithCompletionHandler:
tournamentsByRecordID
tournamentParticipantsGroupedByTournamentID
tournamentRecordIDByParticipantRecordID
tournamentDefinitionsByRecordID
contactInviteByRecordID
inviteURLByTournamentRecordID
stringByAppendingPathExtension:
fileURLWithPath:
setTournamentName:
setTournamentIcon:
setTournamentNameFormat:
setTournamentDescription:
setTournamentType:
setCreationMethod:
setSeedingMethod:
setParticipationType:
setScoringMethod:
setTypicalGameplayDuration:
setMaxReplays:
setAutoTournamentIndex:
initWithInterval:frequency:
setRecurrenceRule:
setCustomTournamentIcon:
setCustomTournamentNameFormat:
setCustomTournamentName:
setCustomScoringMethods:
setCustomSeedingMethods:
setCustomMaxPlayers:
setCustomMinPlayers:
setCustomMaxReplays:
setCustomTournamentDuration:
setCustomTournamentAllowIcon:
createTournamentDefinitionInternalWithIdentifierWithoutDispatch:
setTournamentDefinition:
setTournamentBeginDate:
setRegistrationBeginDate:
setRegistrationEndDate:
setTournamentNumber:
setDuration:
setRandomSeed:
localParticipantInternalNoDispatchForTournamentWithID:
setLocalParticipant:
setPlayerCount:
setCustomTournamentCreator:
setWinningPlayer:
tournamentBeginDate
registrationBeginDate
tournamentInternalFromRecordNoDispatch:
tournamentInternalsFromTournamentRecords:
replayCount
cacheURL
tokensByZoneID
expiration
setExpiration:
_haveSubscription
_userRecordID
_cacheQueue
_userRecordQueue
_tokensByZoneID
_tournamentDefinitionsByRecordID
_tournamentsByRecordID
_tournamentRecordIDByParticipantRecordID
_tournamentParticipantsGroupedByTournamentID
_inviteURLByTournamentRecordID
_contactInviteByRecordID
_expiration
issueChallenge:toPlayers:handler:
getCountOfChallengesWithHandler:
startGame:withChallenge:
playerRelationshipTTLForProfileStatementResult:
storeBagURLForEnvironment:
storeBagForURL:
initWithURL:
_isLastProtocolVersionUsedValid
_storeBagForData:error:
SAPSession
_setupSAPSessionWithRetries:
_setupAPNSRequired:
_setupSignatureRequired:
_setupResponseSignatureRequired:
internalBag
isEqualToDictionary:
setInternalBag:
_updatePlayerIDHashParameters
setRequestPriority:
_isValid
_fetchFromServerWithHandler:
_isValidAndNotExpired
_fetchFromCacheWithHandler:
updateURLPatternCache
_fetchBagWithHandler:
setAPNSRequired:
setSignatureRequired:
setResponseSignatureRequired:
getBagWithHandler:
_gkSubDictionaryWithKeys:
_shouldUseHTTPPipelining
_gkSessionRateLimiting
_achievementsThrottleThreshold
_scoresThrottleThreshold
host
_createTrustForCertificates:host:
_checkData:againstSignature:withTrust:
setMescalSetupStartTimeStamp:
_setupSAPSession:group:retries:
setSAPSession:
exchangeData:error:
setSAPVersion:
mescalSetupStartTimeStamp
isTimeSpanValid:
reportDistributionValue:domain:
readDataForURL:postData:client:credential:includeUDID:includeAPNS:completion:
URLForKey:
setURL:forKey:
productionSigned
setHTTPShouldUsePipelining:
_gkZippedData
signatureForData:error:
SAPVersion
initWithIdentifier:
appleIDHeadersForRequest:
_sendOneAsyncTryWithRequest:responseMustBeSigned:session:retryCount:completionHandler:
handleResponse:forRequest:shouldRetry:
getSAPSignature
processSignedData:withSignature:error:
_bagKeyValidationDict
authenticationToken
_requestWithURL:method:playerID:authToken:pushToken:client:postData:includeUDID:includeAPNS:sapSession:
_sendAsynchronousRequest:responseMustBeSigned:completion:
getURLForKey:queue:handler:
isLoadValidForBagKey:date:
_networkSynchonizationQueue
_loadDataForBagKey:method:postData:client:credential:completion:
_isExpired
_isFetching
valueForUndefinedKey:
omnitureQueryParametersForContext:
shouldUseHTTPPipelining
gkSessionRateLimiting
achievementsThrottleThreshold
scoresThrottleThreshold
invalidateBagKeys:
writeDataForBagKey:postData:client:credential:completion:
setUrl:
APNSRequired
signatureRequired
responseSignatureRequired
_fetchGroup
_playerIDHashMod
_playerIDHashAdd
_url
_SAPSession
_APNSRequired
_signatureRequired
_responseSignatureRequired
_internalBag
_mescalSetupStartTimeStamp
createTurnBasedGameForMatchRequest:individualMessages:handler:
getDetailsForTurnBasedMatchIDs:includeGameData:handler:
acceptInviteForTurnBasedMatch:handler:
declineInviteForTurnBasedMatch:handler:
removeTurnBasedMatch:handler:
submitTurnForTurnBasedMatch:nextParticipantIndexes:turnTimeout:handler:
saveDataForTurnBasedMatch:resolvedExchangeIDs:handler:
resignFromTurnBasedGame:outcome:handler:
completeTurnBasedMatch:scores:achievements:handler:
sendExchangeToParticipants:data:message:timeout:match:handler:
cancelExchange:withMessage:match:handler:
replyToExchange:withMessage:data:match:handler:
getNextTurnBasedEventWithHandler:
sendReminderToParticipants:message:match:handler:
loadURLWithTBGMatch:player:matchRequest:handler:
reserveShareParticipantSlots:minPlayerCount:maxPlayerCount:andInvitePlayers:withMessage:forMatch:handler:
getTurnBasedBadgeCountWithHandler:
showMatch:
initWithPlayer:localizedGameName:inviteDictionary:
presentBulletin:
nearbyInviteIDForPlayerID:deviceID:bundleID:
handleNearbyInviteResponse:
createSessionInContainer:withTitle:maxConnectedPlayers:handler:
loadSessionsInContainer:handler:
loadSessionWithIdentifier:handler:
removeSessionWithIdentifier:handler:
removePlayers:forSessionWithIdentifier:handler:
loadDataForSessionWithIdentifier:handler:
saveData:forSessionWithIdentifier:changeTag:handler:
sendData:reliably:forSessionWithIdentifier:handler:
fetchShareURLForSessionWithIdentifier:handler:
setBadged:forPlayerIDs:forSessionWithIdentifier:handler:
sendMessageForSessionWithID:withLocalizedFormatKey:arguments:userMessage:data:recipientIDs:badgePlayers:handler:
getZonesWithCompletionHandler:
getFriendPlayersWithCompletionHandler:
sendInvitePushForSessionWithID:userMessage:recipientIDs:handler:
recommendationTTLForProfileStatementResult:
recommendationWasDisplayedForStatementResult:
updateStoreFront
ams_sharedAccountStore
ams_activeiTunesAccount
bagKeySet
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
gameCenterBag
initWithBag:caller:keyProfile:
performLookupWithBundleIdentifiers:itemIdentifiers:
resultWithError:
allItems
iTunesStoreIdentifier
itemDictionary
initWithBag:
requestWithMethod:URL:parameters:
defaultSession
dataTaskPromiseWithRequest:
responseHeaders
response
textEncodingName
lookupStoreItemsForAdamIDs:withCompletionHandler:
accountIsLoggedIntoAStore
loadTellAFriendMessageForGameWithAdamID:withCompletionHandler:
bindParametersForPhotoStatement:photo:avatarType:requestsRowID:
initWithDatabaseConnection:bundleID:
getAllScoreRequestIDsStatement
bindParametersForStatement:playerID:daysAgo:
getSubmitScoreDescriptorsStatementForDaysAgo:
scoreForExecutedStatement:
eligibleChallengeIDsForExecutedStatement:
digestForSubmitScore:forBundleID:shouldScreen:eligibleChallenges:
digest:matchesHash:
numberWithUnsignedLongLong:
readerWithDatabaseConnection:bundleID:
_bundleID
registrationEndDate
playerCount
tournamentInviteForGame:
listExpirationDateInsertSQL
listExpirationDateUpdateSQL
bindParametersForListStatement:relativeToPlayer:ttl:
requestingPlayerInsertSQL
bindParametersForRequestingPlayerStatement:player:
requestRelationshipInsertSQL
requestRelationshipUpdateSQL
bindParametersForRelationshipStatement:resource:relativeToPlayer:
requestDetailsInsertSQL
requestDetailsUpdateSQL
bindParametersForRequestStatement:resource:relativeToPlayer:
pathForResource:ofType:
_gkPathForImageWithName:
_gkPathForSoundWithName:
localizations
preferredLocalizationsFromArray:forPreferences:
autoupdatingCurrentLocale
languageCode
_gkLocalizedStringFromLocaleName:key:tableName:value:
localizedStringForKey:value:table:
URLForResource:withExtension:subdirectory:localization:
_gkLocalizedStringForKey:defaultValue:arguments:
executablePath
_gkIsGameCenter
_gkIsGameCenterExtension
_gkIsPreferences
_gkIsDaemon
_gkIsGameCenterEnabled
_gkIsBadgingEnabled
_gkPathForMessageImage
_gkBundleVersion
_gkBundleShortVersion
_gkLocalizedName
_gkPreferredLanguage
_gkBundleIdentifierOrProcessNameForPID:
_gkLocalizedMessageFromDictionary:
_gkLocalizedMessageFromDictionary:forBundleID:
_gkLocalizedMessageFromPushDictionary:forBundleID:
_gkMainBundleIsGameCenterSystemProcess
getFriendsForPlayer:commonFriends:handler:
getFriendIDsForPlayer:commonFriends:handler:
getFriendIDsForPlayer:withPredicate:commonFriends:handler:
transactionGroup
performAndJoinForResources:queue:block:
writeResources:queue:block:
getFriendsForPlayer:handler:
getChallengableFriendsForPlayer:handler:
getNearbyTokenForLocalPlayerWithHandler:
establishNearbyRelationshipsUsingPlayerTokens:handler:
removeFriendWriterWithCredential:
removeAllFriendsWriterWithCredential:
unsignedLongValue
setConcernID:
concernID
requestGKPlayerIDForiCloudIDs:withHandler:
expireFriendList
getPlayerIDFromFriendCode:handler:
createFriendRequestWithIdentifier:handler:
cancelFriendRequestWithIdentifier:handler:
acceptFriendRequestWithIdentifier:handler:
getCommonFriendsForPlayer:handler:
removeFriendWithPlayer:handler:
removeAllFriendsWithHandler:
getConcernsForPlayer:handler:
reportConcern:handler:
requestGKPlayerIDforiCloudIDs:handler:
hostClient
setViewService:
setHostClient:
currentGame
credentialForPlayer:
transportWithCredential:
getServicesWithTransport:forClient:reply:
getPrivateServicesWithTransport:forClient:reply:
existingViewService
setExtensionProxy:forBundleID:
_weakHostClient
initWithCacheWriter:cacheReader:networkWriter:batchSubmissionInterval:
setCacheWriter:
setCacheReader:
setNetworkWriter:
readAndSubmitDelayedRequestsOfResources:handler:
unionSet:
doubleForKey:
dateWithTimeIntervalSinceReferenceDate:
deleteSubmittedRequestsWithIDs:onConnection:
timeIntervalSinceReferenceDate
setDouble:forKey:
shouldWaitForNetworkError
resourcesPending
setByAddingObjectsFromSet:
setResourcesPending:
setAchievementsRateLimitedCurrentState:
setAchievementsRateLimitingCurrentNumberOfRequests:
setScoresRateLimitedCurrentState:
setScoresRateLimitingCurrentNumberOfRequests:
batchAndPerformInGroup:block:
writerWithCacheWriter:cacheReader:networkWriter:batchSubmissionInterval:
submitDelayedRequestsForPlayer:handler:
setShouldWaitForNetworkError:
intervalInSeconds
setIntervalInSeconds:
operationQueue
setOperationQueue:
cacheWriter
cacheReader
networkWriter
_shouldWaitForNetworkError
_intervalInSeconds
_operationQueue
_resourcesPending
_cacheWriter
_cacheReader
_networkWriter
invitees
conciseDescription
setResponses:
initWithSessionToken:
addInvitee:reference:
allInvitees
removeAllInvitees
removeAllResponses
setShareRecordID:
responses
setSyncQueue:
setInvitees:
invitedPlayers
setInvitedPlayers:
_shareInvitees
_shareRecordID
_responses
_invitees
_invitedPlayers
objectForKeyWillReplace:objectProducerBlock:
dictionaryCopy
setDictionary:
_queue
_dictionary
_insertBulletin:atFrontOfArray:
_addBulletin:toArray:
_fetchAndRemoveBulletinFromArray:passingTest:
multiplayerInviteForGameDescriptor:
isCompatibleWithGameDescriptor:
turnBasedInviteForGameDescriptor:
addTurnBasedEvent:
addTournamentInvite:
removeAndReturnTurnBasedInviteWithMatchID:
multiplayerInviteForGame:
turnBasedInviteForGame:
acceptedMultiplayerInvites
setAcceptedMultiplayerInvites:
acceptedTurnBased
setAcceptedTurnBased:
acceptedTournamentInvites
setAcceptedTournamentInvites:
_acceptedMultiplayerInvites
_acceptedTurnBased
_acceptedTournamentInvites
setDelegateQueue:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
cancel
delegateQueue
readData
delegate
observeValueForKeyPath:ofObject:change:context:
_sendData:
initWithConnection:delegate:delegateQueue:
writeQueue
setWriteQueue:
_delegate
_delegateQueue
_writeQueue
writeData:completionHandler:
readDataWithMinimumLength:maximumLength:completionHandler:
writeDatagrams:completionHandler:
readDatagramsWithMinimumCount:maximumCount:completionHandler:
enumerateObjectsWithOptions:usingBlock:
_gkMapConcurrentlyWithBlock:
_gkSubarraysByKeyWithBlock:
_gkFoldWithInitialValue:block:
_gkSetByRemovingObject:
removeIndex:
_gkIndexSetByRemovingIndex:
_gkIndexSetByAddingIndex:
getObjects:range:
_gkIsEqualToOrderedSet:
_gkAddEntriesFromFormEncodedString:
_gkDictionaryByRemovingObjectsForKeys:
_gkDictionaryByRemovingObjectForKey:
_gkSubDictionaryWithKeys:mappedToNewKeys:
_gkValuesForKeys:
_gkDictionaryWithFormEncodedString:
_gkEnumerateKeysAndObjectsUsingBlock:
computeHashForDigest:withSugar:
verifyHash:forDigest:withSugar:
computeVerificationHashForDigest:
digestForSubmitAchievement:forBundleID:shouldScreen:eligibleChallenges:
getAllAchievementRequestIDsStatement
getSubmitAchievementsDescriptorsStatement
achievementForExecutedStatement:
isHidden
readerWithDatabaseConnection:forChallengeRequestType:bundleID:
initWithDatabaseConnection:forChallengeRequestType:bundleID:
getChallengeDescriptorStatement
challengeDescriptorForExecutedStatement:
requestType
setRequestType:
_requestType
deletePhotoDescriptorStatement
deletePhotoDescriptorForExecutedStatement:
removeFriendInsertSQL
bindParametersForStatement:payload:requestsRowID:
getAllRemoveGamesRequestIDsStatement
bindParametersForStatement:playerID:bundleID:
getRemoveGamesDescriptorsStatement
removeGamesForExecutedStatement:
valueForEntitlement:
_entitlementForName:
initWithArray:
_valuesForEntitlement:forConnection:
hasEntitlements:
hasAnyPrivateEntitlement
_shouldBypasAuthenticationForConnection:
_entitlements
_expireCachesForKey:context:
currentMatchResponse
foregroundClient
setMatchID:
checkMatchStatus
_matchID
assembleBulletinFromPushNotification:
removeGamesInsertSQL
bindParametersForRemoveGamesStatement:forRemovedBundleID:requestsRowID:
resourceForRemoveGames:
isDevelopmentDevice
isFocusDevice
isProductType:
update
displayNotification
saveTurnBasedEvent
invalidateTurnCache
declineTurnBasedInviteWithReason:
updateBadgeCount
expireAndLoadCaches
turnCount
userTapped
localizableMessage
exchangeID
guestID
timeoutDate
receiverGuestPlayerID
removePreviousTurnBulletins
bulletinMessage
shouldLoadCacheList
shouldLoadCacheDetails
shouldLoadCacheData
shouldExpirePlayerList
setUserTapped:
acceptTurnBasedTurn
setTurnCount:
_userTapped
_turnCount
_localizableMessage
_exchangeID
_guestID
_aggregateDictionaryKey
setClearType:
clearType
_clearType
loadBulletinMessageWithHandler:
componentsJoinedByString:
initWithTransport:filterFriendsInCommon:
requestBodyForPlayer:
friendForRepresentation:
readerWithTransport:filterFriendsInCommon:
markAllBadgesAsViewedForType:
fetchBadgeCountsForBundleID:handler:
clearBulletinsForReceivedChallenges:
clearBulletinsForTurnBasedTurn:exchangeID:
fetchMessageImageForBundleID:handler:
senderID
setSenderID:
_senderID
processResponseForiCloudID:withPlayerID:
_playerID
_tournamentID
initWithDatabasePath:
setPath:
open
close
cStringUsingEncoding:
connectionWithDatabasePath:
checkAndOpenDatabase
database
setDatabase:
databaseQueue
setDatabaseQueue:
_stmtCache
_path
_database
_databaseQueue
updatedAchievement:
postedScore:
declinedChallenge:
wantsToPlayChallenge:
completedChallenge:
acceptedInvite:
acceptedInviteForTurnBasedMatch:
declinedInviteForTurnBasedMatch:
declinedInvite:
sentMatchRequest:
rematchedWithMatchRequest:
disconnectedMatchWithID:
quitMatch:withOutcome:
purchasedGame:
respondedToBulletin:
requiresAuthentication
beganPlayingGame
stoppedPlayingGame
cloudContainer
session
bundleIDsForContainerName:handler:
originatingDeviceType
sender
setLocalizedMessage:
assembledMessage
distributeData
localizeMessage
setCloudContainer:
setOriginatingDeviceType:
localizedMessage
setSession:
setSender:
_cloudContainer
_game
_originatingDeviceType
_data
_localizedMessage
_assembledMessage
_session
_sender
sessionURL
userMessage
senderName
acceptShareURL:handler:
setSessionURL:
setSenderName:
setUserMessage:
_sessionURL
_senderName
_userMessage
containerName
updateBadgeCountsForContainerName:
loadSessionWithHandler:
sessionIdentifier
playersByIdentifier
sessionForIdentifier:handler:
obfuscatedIdentifierForPlayerIdentifier:containerName:
setSessionIdentifier:
_sessionIdentifier
pushCommand
hasSound
soundPath
dismissAction
declineAction
showInListOnly
categoryIdentifier
setPushCommand:
setRecordID:
setAcceptAction:
setShowInListOnly:
_bulletinRecordID
_pushCommand
_hasSound
_showInListOnly
_recordID
_message
_expirationDate
_soundPath
_acceptAction
_defaultAction
_dismissAction
_declineAction
_gameName
_categoryIdentifier
preferencesDelegate
sharedConnection
addObserver:
restrictionEnabledForKey:
isUIAppInstallationAllowed
effectiveRestrictedBoolValueForSetting:
isAccountModificationRestricted
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
setOwner:
setPlayers:
setLastModifiedDate:
setLastModifiedPlayer:
setServerChangeTag:
setPlayerStates:
setMaxNumberOfConnectedPlayers:
owner
lastModifiedDate
lastModifiedPlayer
serverChangeTag
playerStates
maxNumberOfConnectedPlayers
createSessionInContainer:withTitle:maxConnectedPlayers:completionHandler:
loadSessionsInContainer:completionHandler:
loadSessionWithIdentifier:completionHandler:
removeSessionWithIdentifier:completionHandler:
updateWithSession:
getShareURLWithCompletionHandler:
loadDataWithCompletionHandler:
saveData:completionHandler:
setConnectionState:completionHandler:
playersWithConnectionState:
sendData:withTransportType:completionHandler:
sendMessageWithLocalizedFormatKey:arguments:data:toPlayers:badgePlayers:completionHandler:
clearBadgeForPlayers:completionHandler:
badgedPlayers
_owner
_players
_lastModifiedDate
_lastModifiedPlayer
_maxNumberOfConnectedPlayers
_serverChangeTag
_playerStates
getSessionsForZone:completionHandler:
initWithLanguage:databaseConnection:
recommendedPlayerInsertSQL
recommendedPlayerUpdateSQL
bindParametersForRecommendedPlayerStatement:resource:
recommendationRelationshipInsertSQL
recommendationRelationshipUpdateSQL
recommendationInsertSQL
recommendationUpdateSQL
bindParametersForRecommendationStatement:resource:relativeToPlayer:
localizationInsertSQL
localizationUpdateSQL
bindParametersForLocalizationStatement:resource:relativeToPlayer:
writerWithLanguage:databaseConnection:
removeAllPendingNotificationRequests
removeAllDeliveredNotifications
setBulletins:
initWithBundleIdentifier:
setUserNotificationCenter:
userNotificationCenter
setWantsNotificationResponsesDelivered
registeredCategories
setNotificationCategories:
requestAuthorizationWithOptions:completionHandler:
categoryWithIdentifier:defaultActionTitle:dismissActionTitle:
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
notification
actionIdentifier
content
launchBulletin:
removeDeliveredNotificationsWithIdentifiers:
removePendingNotificationRequestsWithIdentifiers:
removeBulletin:
setBody:
userInfoFromBulletin:
setShouldBackgroundDefaultAction:
setDefaultActionURL:
soundWithAlertType:
setToneFileURL:
setSound:
requestWithIdentifier:content:trigger:
notificationRequestFromBulletin:
addNotificationRequest:withCompletionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
clearBulletin:
setAcceptedInviteManager:
_bulletins
_acceptedInviteManager
_userNotificationCenter
initWithReaderConnection:writerConnection:transport:delegate:
setReaderConnection:
setWriterConnection:
readerWithFamiliarity:transport:
_gkContainsInvalidResource
_gkInvalidOrExpiredResources
objectsPassingTest:
_gkValidAndNonExpiredResources
isExpired
readerWithLocalPlayer:language:readerConnection:writerConnection:transport:
_gkContainsInvalidOrExpiredResource
shouldUseFastPathForCachedListResponse:
shouldLoadProfilesForCachedListResponse:
loadAndMergeRecommendedProfilesInResponse:inGroup:
loadNetworkPlayerListAndProfilesRelativeToPlayer:inGroup:waitForNetwork:listFromCache:
readerConnection
writerConnection
_readerConnection
_writerConnection
getStoreBagValuesForKeys:handler:
requestImageDataForURL:subdirectory:fileName:handler:
cacheImageData:inSubdirectory:withFileName:handler:
loadCachedImageDataFromSubdirectory:withFileName:handler:
deleteCachedImageDataFromSubdirectory:withFileName:handler:
pingWithHandler:
refreshPreferences
loadDataForURL:postBody:completionHandler:
save:
rollback
_gkSafeSave
getRecommendedPlayerGCIDsStatement
readerWithLanguage:databaseConnection:
getFriendRequestsDescriptorStatement
rejectFriendRequestsDescriptorForExecutedStatement:
getRequestingPlayerGCIDsStatement
accountPropertyForKey:
_gkCredentialsForEnvironment:
token
setToken:
setAccountProperty:forKey:
_gkTokenForEnvironment:
_gkPerEnvironmentTokens
_gkPlayerInternal
username
_gkPropertyForKey:environment:
setAltDSID:
setDSID:
setLoginStatus:
_gkModifiedDateForProperty:environment:
setScopeModificationDate:
_gkCredentials
_gkIsPrimaryForEnvironment:
_gkSetToken:forEnvironment:
_gkSetPlayerInternal:
_gkCredentialForEnvironment:
_gkSetProperty:forKey:environment:
accountsWithAccountType:
removeAccount:withCompletionHandler:
requestAccessToAccountsWithType:options:completion:
accountTypeWithIdentifier:completion:
waitUntilDone:
_gkAccountForAppleID:
saveVerifiedAccount:withCompletionHandler:
_gkMapAccountsWithBlock:
scopeModificationDate
sortedArrayWithOptions:usingComparator:
aa_altDSID
rawPassword
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
setUsername:
_aa_setRawPassword:
accountDescription
setAccountDescription:
altDSID
DSID
_gkSetScope:forCredential:completionHandler:
_gkAllCredentials
signatureStringForData:error:
isComplete
_complete
_SAPVersion
getTopGamesWithHandler:
removeGameForBundleID:handler:
getGameStatsForPlayer:bundleIDs:handler:
getGamesWithAchievementStatsForPlayer:handler:
getRatingForGameDescriptor:handler:
submitRating:forGame:handler:
loadTellAFriendMessageForGameWithAdamID:handler:
connectExternalService:handler:
disconnectExternalService:handler:
availableExternalServicesWithHandler:
getAuthTokenForExternalService:handler:
notifyAvailableExternalServicesWithHandler:
initWithLength:
setLength:
_gkLoadRemoteImageDataForUrl:subdirectory:filename:queue:imageQueue:handler:
initWithContentsOfFile:
_gkRequestClientsRemoteImageDataForURL:queue:reply:
_gkWriteToImageCacheWithURLString:
_gkLoadRemoteImageDataForURL:subdirectory:filename:queue:handler:
tournamentDescription
tournamentIcon
tournamentType
creationMethod
participationType
maxPlayerShards
setMaxPlayerShards:
PreRegistrationTime
setPreRegistrationTime:
customTournamentName
customTournamentNameFormat
customTournamentIcon
customTournamentAllowIcon
customTournamentDuration
customMaxReplays
_customTournamentAllowIcon
_tournamentDefinitionID
_tournamentName
_tournamentNameFormat
_tournamentDescription
_tournamentIcon
_tournamentType
_creationMethod
_seedingMethod
_participationType
_scoringMethod
_maxPlayers
_minPlayers
_maxPlayerShards
_typicalGameplayDuration
_tournamentDuration
_PreRegistrationTime
_recurrenceRule
_maxReplays
_autoTournamentIndex
_customTournamentName
_customTournamentNameFormat
_customTournamentIcon
_customSeedingMethods
_customScoringMethods
_customMaxPlayers
_customMinPlayers
_customTournamentDuration
_customMaxReplays
setTournamentCreator:
setStartTime:
customTournamentRequestWithTournamentDefinition:player:
icon
setIsCreatorInTournament:
_isCreatorInTournament
_tournamentDefinition
_tournamentCreator
_icon
_duration
_startTime
playerGroup
cheatingIndicator
_cheatingIndicator
_player
_score
_playerGroup
_replayCount
_participantState
participantStates
setParticipantStates:
setStartIndex:
setCount:
_participantStates
_startIndex
_count
tournamentsPlayed
highestRank
latestRank
averageRank
bestScore
latestScore
averageScore
historicalRanks
_tournamentsPlayed
_highestRank
_latestRank
_averageRank
_bestScore
_latestScore
_averageScore
_historicalRanks
topScore
setTopScore:
friendCount
setFriendCount:
globalRank
setGlobalRank:
globalPlayerCount
setGlobalPlayerCount:
_topScore
_friendRank
_friendCount
_globalRank
_globalPlayerCount
defaultCustomTournamentForTournamentDefinition:
randomSeed
winningPlayer
leaderboard
tournamentError
setTournamentError:
inviteURLForMessages
tournamentNumber
nextTournamentID
setNextTournamentID:
nextTournamentBeginDate
setNextTournamentBeginDate:
_randomSeed
_registrationBeginDate
_registrationEndDate
_tournamentBeginDate
_tournamentEndDate
_tournamentState
_winningPlayer
_playerCount
_localParticipant
_leaderboard
_tournamentError
_inviteURLForMessages
_tournamentNumber
_customTournamentCreator
_nextTournamentID
_nextTournamentBeginDate
friendRequestsDescriptorForExecutedStatement:
inviteDictionary
setInviteDictionary:
_inviteDictionary
performBlock:
initWithName:context:resourceManager:client:
client
setResourceManager:
setClient:
reset
readResources:queue:block:
_client
_context
_weakResourceManager
setStatusDescriptorStatement
setStatusDescriptorForExecutedStatement:
currentPlatform
gamePlatformFromServerPushString:
dictionaryForRequest
_bundleIdentifier
_bundleVersion
_adamID
_externalVersion
_shortBundleVersion
_platform
bindParametersForRequestsStatement:achievevement:digest:
achievementsInsertSQL
bindParametersForAchievementsStatement:achievement:shouldScreen:eligibleChallenges:requestsRowID:
resourceForSubmitAchievement:forBundleID:shouldScreen:eligibleChallenges:
originatorGuestPlayerID
receiverGuestPlayer
originatorGuestPlayer
compatibleVersions
compatibleShortVersions
playerIsLocal:
determineGameLocationOnDeviceOnly
determineGameLocationOnDeviceViaCompatibilityMatrixWithCompletionHandler:
gamePlatformForBundleID:handler:
setStoreURL:
storeItemURLForGamePlatform:withContext:withHandler:
gamePlatformWithHandler:
setReceiverGuestPlayer:
setOriginatorGuestPlayer:
_gameLocation
_receiverPlayerID
_originatorPlayerID
_receiverPlayer
_originatorPlayer
_receiverGuestPlayerID
_originatorGuestPlayerID
_receiverGuestPlayer
_originatorGuestPlayer
_storeURL
_compatibleVersions
_compatibleShortVersions
_setCurrentState:
currentState
shouldLogStateTransitions
_validateTransitionFromState:toState:
stateWillChange
_performTransitionFromState:toState:
missingTransitionFromState:toState:
validTransitions
stateDidChange
applyState:
setCurrentState:
setShouldLogStateTransitions:
setValidTransitions:
_currentState
_validTransitions
_shouldLogStateTransitions
_plistKeyForBadgeType:
_badgeCountURL
writeToURL:options:error:
dataWithContentsOfURL:options:error:
isBadgingEnabledForBundleID:
badgeBundleID:badgeCount:
registerBadgePermissionForBundleID:completionHandler:
_badgeCountForBundleID:badgeType:
setBadgeValue:
_dictionaryForBadgeType:
_totalBadgeCountForBundleID:
badgeApplicationWithBundleID:badgeCount:
badgeCountForBundleID:badgeType:
badgeAllApplications
unbadgeAllApplications
_badgeDictionaries
_dirty
setAcceptingInProgressRecordIDs:
setInviteManagerQueue:
mostRecentInviteShareRootRecordID
inviteManagerQueue
isRecordEqualToMostRecentInviteShare:
setMostRecentInviteShareRootRecordID:
acceptingInProgressRecordIDs
_mostRecentInviteShareRootRecordID
_acceptingInProgressRecordIDs
_inviteManagerQueue
initWithRecord:
setRecord:
setPlayersByIdentifier:
creatorUserRecordID
playerIdentifierForUserRecordName:
isOwnRecordID:
sessionIdentifierForRecordID:
modificationDate
lastModifiedUserRecordID
sessionCache
userPlayer
recordChangeTag
playersForGKGameSession
mutablePlistFromPlayerStatesData:error:
AES128EncryptedVersionOfData:withKey:
AES128DecryptedVersionOfData:withKey:
AES128Operation:key:data:
getCString:maxLength:encoding:
dataWithBytesNoCopy:length:
updateSessionCacheWithHandler:
sessionWithIdentifier:
sessionsInContainer:
setIsValid:
updateSessionCacheDatabasesWithHandler:
updateFriendRecordIfNeeded
subscribeToAllDBwithHandler:
privateDBToken
sharedDatabase
sharedDBToken
initWithPreviousServerChangeToken:
cloudKitOperationConfigurationForSocialGamingSessionsContainer
updateCacheForFriendZoneID:handler:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
updateWithChangedTokens:removedTokenZoneIDs:
sessionsInContainer:ownerName:
reportChangesForSessions:shareChangedSessions:removedSessions:zoneID:handler:
updateWithChangedSessions:removedSessions:handler:
setFetchDatabaseChangesCompletionBlock:
setPrivateDBToken:
setSharedDBToken:
initWithRecordZoneIDs:optionsByRecordZoneID:
generateAndStoreInviteBulletinForRecord:database:
sessionWithRecordID:
allChangedSessionsFromRecordChangedSessions:shareChangedSessions:
updateBadgeCountsForContainerName:useCacheDirectly:
updatePlayersForSessions:sharesByRecordID:inDatabase:handler:
arrayByAddingObjectsFromArray:
reportPlayerStateChangesToClients:forUpdatedSession:oldSession:
determinePlayerChangesIn:newSession:notifyClients:
isEqualToSet:
waitWithTimeout:
updatePlayersWithIdentities:
nicknamesByIdentifier
predicateForContactsMatchingEmailAddress:
descriptorForRequiredKeysForStyle:
unifiedContactsMatchingPredicate:keysToFetch:error:
stringFromContact:style:
previousServerChangeToken
updateFriendsWithRecord:
setToken:forZoneID:
setFriendPlayers:withEmails:
friendRecordNeedsUpdate
friendPlayers
setFriendRecordNeedsUpdate:
saveRecord:completionHandler:
createZoneWithName:handler:
URLPathAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
allowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
isOwnZoneID:
isOwnedByUser
initWithContainerName:
setMaxConnectedPlayers:
setNicknamesByIdentifier:
setEmailsByCKID:
deleteRecordWithID:completionHandler:
deleteShareWithHandler:
bundleIDsForContainerName:
cloudKitOperationConfigurationForContainer:
updateBundleIDs:forContainerName:
setFetchWhitelistedBundleIDsCompletionBlock:
lastSaveTimeStamp
setLastSaveTimeStamp:
databaseForSession:
fetchRecordWithID:completionHandler:
saveWithHandler:
initWithZoneName:
fetchAllRecordZonesWithCompletionHandler:
userHasSubscription
setUserHasSubscription:
setAutomaticallyRetryNetworkFailures:
setQualityOfService:
setupShareWithRecordID:handler:
fetchShareRecordWithRecordID:handler:
saveShare:isNewShare:handler:
initWithShareURLs:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
sessionForShareMetadata:handler:
localPlayerAlias
saveInformationForPrimaryUserForSessionWithShareMetadata:handler:
updateCacheForZoneID:handler:
fetchShareMetadataForURL:handler:
recordMessageInviteProcessingTimestamp
handleLegacyShareMetadata:needsAccept:completionHandler:
handleSessionShareMetadata:needsAccept:completionHandler:
showAcceptAlertWithHandler:
launchOrOpenAppStoreForBundleID:
openStoreForBundleID:
userIdentity
removeParticipant:
setObject:atIndexedSubscript:
tempEmailFixForPlayerID:
dataWithCapacity:
packFakeTurnBasedBulletinWithZoneData:
packFakeRealTimeBulletinWithZoneData:
searchAndSaveIdentityForRecord:database:completionHandler:
iMessageService
accountsForService:
smsService
saveInviteRecord:database:completionHandler:
lowercaseString
badgeCountForContainerName:useCacheDirectly:handler:
sessionsForContainerName:handler:
playerIdentifierForObfuscatedIdentifier:containerName:
fetchUserRecordIDWithHandler:
getFriendPlayersWithHandler:
recordIDForSessionIdentifier:
isCloudDriveEnabledForBundleID:
createSessionWithContainerName:title:maxConnectedPlayers:handler:
getZoneNamesWithCompletionHandler:
deleteInviteRecordWithRecordID:fromDatabase:
saveData:changeTag:handler:
removePlayers:handler:
saveConnectionState:forPlayerWithID:handler:
setBadged:forPlayerIDs:handler:
_record
_playersByIdentifier
_waitWithDispatchTimeout:
defaultConcurrentQueue
_values
backgroundConcurrentQueue
mainQueue
enter
leave
isLoggingEnabled
setLoggingEnabled:
_loggingEnabled
_result
loadLocalGamesList
pushDataToDataDetectors:
loadStoreGamesListWithCompletionHandler:
dataDetectorsStorageFilePath
dataDetectorsKeywords
dataDetectorsEntitiesForDictionary:
updateData
clearData
stringWithContentsOfFile:encoding:error:
runSQL:
runnerWithConnection:
runSQLFromFileAtPath:
validateContainer:
actualIdentifiersForObsfucatedPlayerIDs:inSession:
_setConnectionState:forSessionWithIdentifier:handler:
didSaveConnectionState:forGameSession:handler:
sharedAggregateDictionary
incrementKey:
setValue:forScalarKey:
pushValue:forKey:
_nativeReport:signature:result:
_nativeReportValue:signature:domain:
_nativeReportDistributionValue:signature:domain:
supportsAchievements
supportsLeaderboards
supportsLeaderboardSets
supportsMultiplayer
supportsTurnBasedMultiplayer
isPrerendered
hasAggregateLeaderboard
canBeIndexed
flags
setFlags:
icons
defaultLeaderboardIdentifier
numberOfLeaderboards
setNumberOfLeaderboards:
maxAchievementPoints
_icons
_defaultLeaderboardIdentifier
_flags
_numberOfLeaderboards
_numberOfLeaderboardSets
_numberOfAchievements
_maxAchievementPoints
numberOfCategories
defaultCategory
storeItemURLForURL:gamePlatform:extraQueryParams:
artistName
priceDisplay
shortViewItemURL
tellAFriendMessageContentsUrl
setTellAFriendMessageContentsUrl:
numberOfUserRatings
averageUserRating
owned
_artistName
_priceDisplay
_viewItemURL
_shortViewItemURL
_tellAFriendMessageContentsUrl
_numberOfUserRatings
_averageUserRating
_owned
updateWithGame:
gameRecordForGame:
setPurchaseDate:
achievements
achievementPoints
_lastPlayedDate
_purchaseDate
_achievements
_achievementPoints
_maxFriendRank
_rank
_maxRank
initWithGame:
_reason
_engineID
scopeAsString
setRawPassword:
_authenticationToken
_scope
_scopeModificationDate
_altDSID
_DSID
_rawPassword
initWithReaderConnection:writerConnection:transport:localPlayer:filterFriendsInCommon:
compositeName
resourceForPlayer:
readerWithReaderConnection:writerConnection:transport:localPlayer:filterFriendsInCommon:
relationshipDetailsTTLProfileStatementResult:
setTestGame:
testGame
_testGame
setSet:
issueFriendRequestsInsertSQL
methodSignature
getArgumentTypeAtIndex:
getArgument:atIndex:
_gkTakesBlockAtIndex:
_gkInvocationWithBlock:
_gkPrepareForCallWithError:
_gkInvokeOnce
_gkClearTarget
_gkPrintBlockSignature
_gkCopyArguments
_gkClearCopiedArguments
__gkPrepareForFakeCallbackWithNoData:orError:
_gkClearArgumentAtIndex:
_gkInvokeOnceWithTarget:
_gkHasReplyBlock
aa_personID
aa_authToken
isEnabledForDataclass:
initWithInternalAccount:
personID
authToken
isEnabledForDataClass:
internalAccount
_internalAccount
aa_primaryAppleAccount
primaryAccount
internalStore
_internalStore
setContactType:
setGivenName:
setFamilyName:
displayNameWithOptions:alias:composite:
classForFamiliarity:
cacheKey
defaultFamiliarity
isLoaded
isAutomatchPlayer
isUnknownPlayer
isAnonymousPlayer
isGuestPlayer
setMessagesID:
friends
setFriends:
allowNearbyMultiplayer
setAllowNearbyMultiplayer:
numberOfRequests
numberOfTurns
numberOfChallenges
guestIdentifier
monogramComponents
setMonogramComponents:
_gamePlayerID
_teamPlayerID
_alias
_photos
_messagesID
_friendLevel
_friendBiDirectional
_friendPlayedWith
_friendPlayedNearby
_numberOfFriends
_numberOfGames
_numberOfFriendsInCommon
_numberOfGamesInCommon
_numberOfAchievementPoints
_monogramComponents
_encodingCount
_compositeName
_status
_lastPlayedGame
loginStatus
_emailAddresses
_facebookUserID
_iCloudUserID
_numberOfRequests
_numberOfTurns
_numberOfChallenges
_loginStatus
_address
_addressSHA1
_addressPrefix
_verified
_reason2
_source
automatchPosition
setAutomatchPosition:
_automatchPosition
initWithHostPlayerInternal:guestIdentifier:
hostPlayerInternal
setHostPlayerInternal:
setGuestIdentifier:
_hostPlayerInternal
_guestIdentifier
_concernID
writerWithDatabaseConnection:forChallengeRequestType:gameDescriptor:
initWithDatabaseConnection:forChallengeRequestType:gameDescriptor:
serverRepresentationForReceivingPlayer:
challengesInsertSQL
bindParametersForStatement:forIssuingChallenge:requestsRowID:
bindParametersForStatement:forAbortingChallenge:requestsRowID:
attributes
setAttributes:
isReplayable
_achievedDescription
_unachievedDescription
_attributes
_lastReportedDate
_percentComplete
mergePropertiesFromDescription:
leaderboardSetIdentifier
setLeaderboardSetIdentifier:
lastSubmittedDate
scores
setScores:
playerScore
setPlayerScore:
overallRank
overallRankCount
friendRankCount
_leaderboardSetIdentifier
_lastSubmittedDate
_overallRank
_overallRankCount
_friendRankCount
_scores
_playerScore
category
setCategory:
maxRange
leaderboardIdentifiers
_leaderboardIdentifiers
setIdentifier
setSetIdentifier:
setGroupCategory:
decodeInt64ForKey:
containsValueForKey:
setValueSet:
valueSet
_leaderboardIdentifier
_groupLeaderboardIdentifier
_formattedValue
_value
_valueSet
groupCategory
updateError:
updateCount
addUpdate:error:
addUpdatesFromGroup:
notifiers
performOnQueue:block:
joinApplyUpdatesAndDo:
updateGroup
updateGroupWithName:
updateGroupForTargetQueue:
updateGroupWithName:taregetQueue:
joinAndApplyUpdates
cancelUpdates
setNotifiers:
_notifiers
directoryForEnvironment:
pathForDatabaseName:environment:
setDatabasePath:
factoryWithDatabaseName:environment:
connectionForReaderWithName:
connectionForWriterWithName:
databasePath
_databasePath
findLocalGameBundleID
_issueDate
_completionDate
_compatibleBundleIDs
_achievement
initWithFamiliarity:transport:
profileRequestForPlayerIDs:
playerForServerRepresentation:
initWithTransport:
friendRequestForRepresentation:
friendPlayerInsertSQL
friendPlayerUpdateSQL
bindParametersForFriendPlayerStatement:resource:
friendRelationshipInsertSQL
friendRelationshipUpdateSQL
initWithLocalPlayer:language:readerConnection:writerConnection:transport:
familiarityForPlayer:
_gkContainsExpiredResource
minusSet:
_gkExpiredResources
isEqualToDate:
indexOfObject:
localPlayerParticipantIndex
statusString
recipientIndex
activeExchangeCount
currentPlayer
setCurrentPlayer:
deletionDate
lastTurnPlayerID
matchData
setMatchData:
setParticipants:
matchDataVersion
setExchanges:
_creationDate
_lastTurnDate
_deletionDate
_currentPlayer
_lastTurnPlayerID
_matchData
_matchDataVersion
_participants
_exchanges
_turnNumber
_currentParticipant
slot
matchOutcome
isAutomatchParticipant
invitedBy
inviteMessage
setMatchOutcome:
setSlot:
_sessionID
_invitedBy
_inviteMessage
_timeoutDate
_matchOutcome
_slot
senderIndex
recipientIndexes
setRecipientIndexes:
sendDate
_recipientIndexes
_statusString
_sendDate
_replies
_senderIndex
replyDate
_replyDate
_recipientIndex
defaultNumberOfPlayers
matchType
playerAttributes
recipients
isEqualToArray:
recipientPlayerIDs
localizableInviteMessage
isPreloadedMatch
tournamentForInvitePool
hasGuestPlayers
setPlayerAttributes:
setRecipientPlayerIDs:
setLocalizableInviteMessage:
setMatchType:
setPreloadedMatch:
setDefaultNumberOfPlayers:
setTournamentForInvitePool:
_matchType
_recipients
_recipientPlayerIDs
_localizableInviteMessage
_version
_preloadedMatch
_playerAttributes
_defaultNumberOfPlayers
_restrictToAutomatch
_tournamentForInvitePool
setInviteID:
unsignedCharValue
setPeerID:
setPeerNATType:
setPeerNATIP:
setParticipantID:
setDeviceID:
inviteID
inviteFromNearbyPlayer:participantID:deviceID:bundleID:connectionData:
isNearby
peerNATType
peerID
participantID
peerNATIP
deviceID
_inviteID
_deviceID
_peerID
_peerNATIP
_peerNATType
_participantID
_versions
_shortVersions
updateWithCacheObject:
initWithProperties:
updateWithProperties:
propertiesToFetch
internalRepresentationWithProperties:
prerendered
distantPast
expressionForKeyPath:
attributeType
_gameProperties
piecesToLoad
purpleBuddyAccount
defaultNickname
orderedEmailAddresses
expressionForFunction:arguments:
currentPlayerID
outcome
initWithPool:
setDispatchGroup:
setPoolName:
processedResources
getTransactionPool:
deduper
setProcessedResources:
_processedResources
_poolName
eventType
setEventType:
_eventType
setInitAppStateMachine:
initializeInitializationStateMachine
initWithKeyOptions:valueOptions:capacity:
installed
setBundleShortVersion:
setInstalled:
viewService
preferencesFromBag
extensionProxies
setPreferencesFromBag:
launchEvent
setLaunchEvent:
processMatchResponse:
setInviteSession:
initWithBundleIdentifier:bundleOrNil:pid:
updateIfRecentlyInstalled
_setupCache
updatePreferencesFromBag:
setAuthQueue:
entitlements
deniedProductionEnvironment
supportsMultipleActivePlayers
setSupportsMultipleActivePlayers:
achievementsRateLimitingStartDate
setAchievementsRateLimitingStartDate:
achievementsRateLimitingCurrentNumberOfRequests
achievementsRateLimitedCurrentState
scoresRateLimitingStartDate
setScoresRateLimitingStartDate:
scoresRateLimitingCurrentNumberOfRequests
scoresRateLimitedCurrentState
setCurrentGame:
previousApplicationState
pendingQuickAction
setCurrentMatchResponse:
initialized
setInitialized:
initAppStateMachine
appSessions
setAppSessions:
delayedRequestsQueue
setDelayedRequestsQueue:
delayedRequestsDBConnection
setDelayedRequestsDBConnection:
pendingDataTypesForRefresh
setPendingDataTypesForRefresh:
setExtensionProxies:
_deniedProductionEnvironment
_productionSigned
_installed
_supportsMultipleActivePlayers
_achievementsRateLimitedCurrentState
_scoresRateLimitedCurrentState
_initialized
_pid
_applicationState
_previousApplicationState
_weakViewService
_replyQueue
_bundleShortVersion
_achievementsRateLimitingStartDate
_achievementsRateLimitingCurrentNumberOfRequests
_scoresRateLimitingStartDate
_scoresRateLimitingCurrentNumberOfRequests
_currentGame
_launchEvent
_pendingQuickAction
_inviteSession
_currentMatchResponse
_initAppStateMachine
_appSessions
_delayedRequestsQueue
_delayedRequestsDBConnection
_resourceManager
_pendingDataTypesForRefresh
_extensionProxies
_preferencesFromBag
clientForBundleID:bundle:pid:createIfNecessary:
factoryQueue
_clientLookup
isExtensionBundleID:
clientsToBeEnumerated
clientForMatchmakingRID:
isSubclassOfClass:
serviceWithTransport:forClient:credential:
serviceForClass:transport:client:credential:
updateAppInitState
lastPrivacyNoticeVersionDisplayedForPlayer:
lastPersonalizationVersionDisplayedForPlayer:
sendAuthenticationDidChangeNotificationWithCompletionHandler:
saveAppInitState:forBundleID:pid:
lastKnownAppInitStateForClientWithBundleID:pid:
authenticationDidChange
remoteObjectProxyWithErrorHandler:
remoteObjectProxy
addAppSession:forCredential:
refreshPendingDataTypes
removeAppSessionForPlayer:
initializeWithCredential:completionHandler:
bgInitializeWithCredential:completionHandler:
storeAndForwardDirectoryPathForEnvironment:
stringByDeletingPathExtension
pathExtension
requestsCacheForEnvironment:
_setupDelayedRequestsWriters
_delayedRequestWriterWithCacheWriterClass:cacheReaderClass:networkWriterClass:bagKey:batchSubmissionInterval:credential:
contentsOfDirectoryAtPath:error:
submitAchievementsWriterWithCredential:
submitScoresWriterWithCredential:
performDelayedRequestsForCredential:
issueChallengesWriterWithCredential:
abortChallengesWriterWithCredential:
setPlayerStatusWriterWithCredential:
setPlayerPhotoWriterWithCredential:
deletePlayerPhotoWriterWithCredential:
submitRatingsWriterWithCredential:
removeGameWriterWithCredential:
_removeDelayedRequestStore
performPassThroughAchievementRequestsForEnvironment:
performPassThroughScoreRequestsForEnvironment:
_coreInitWithTransport:forClient:localPlayer:credential:
setLocalPlayer:
_localPlayer
validateEnvironment
_profileArchiveURLForEnvironment:
dataWithContentsOfURL:
archiveProfile:environment:
setAppleIDWithAltDSID:inUse:forService:
setAppleIDWithDSID:inUse:forService:
stringForKey:
gameRecommendationList
mutableOrderedSetValueForKeyPath:
achievementPointsList
_removeRecommendationForBundleID:profile:moc:
_addGameListEntryForGame:profile:moc:
_addAchievementPointsEntryForGame:record:profile:moc:
_postLaunchEventsForGame:moc:
loadStorePiecesForGames:context:handler:
renewAuthToken
_authenticateUsername:password:rawPassword:altDSID:validateOnly:handler:
_fetchCredentialsForUsername:password:rawPassword:altDSID:handler:
updateBadgeCounts
_continueAuthenticationWithHandler:
notifyClient:authenticationDidChangeWithError:handler:
_constructAuthenticationResponseWithError:handler:
_initGameWithHandler:
updateClientSettings:
_loadProfileWithGroup:
_appInitWithGroup:
_primeCacheWithGroup:
_authenticatedLocalPlayerWithUsername:inContext:isValid:
postNotificationName:object:
_notifyAllClientsPlayerAuthenticatedFromClient:withCredential:replyGroup:
_preloadDataForGameCenterTabs
serverTimeScope
serverPlayerScope
serverRequestWithService:
leaderboardForServerRepresentations:
scoreForServerRepresentation:leaderboard:
updatePlayersForLeaderboard:service:handler:
generateScoresFromServerResponse:service:context:timeToLive:handler:
loadScoresWithService:context:handler:
resourceIdentifier
sanitizeRange
_updateLastPlayedGames:forPlayers:group:
_profileRequestForPlayerIDs:pieces:
refreshObject:mergeChanges:
asd_isOcelot
fetchProfilesForPlayerIDs:familiarity:responseKind:context:handler:
loadProfilesForPlayerIDs:pieces:context:handler:
initWithDomain:code:userInfo:
_gkAllRepresentedItems
initWithResourceID:representedItem:TTL:
setMetadataLookup:
isInvalid
mutableCopyWithZone:
setResourceID:
metadataLookup
_invalid
_metadataLookup
_resourceID
_representedItem
_TTL
resourceForPlayer:TTL:
member:
_gkContainsObjectPassingPredicate:
_gkResourcesWithIDs:
_gkInvalidResources
_gkAllResourceIDs
seed
loadTopGamesWithContext:handler:
fetchTopGamesInContext:handler:
loadGameMetadataForBundleIDs:context:handler:
fetchGameStatsForPlayer:bundleIdentifiers:responseKind:context:handler:
setDetailsLoaded:
scanInstalledGamesForPlayer:transaction:
loadGamesForPlayer:context:handler:
fetchGamesForPlayer:includeInstalled:responseKind:context:handler:
valid
loadGameStatsForPlayer:bundleIdentifiers:context:handler:
fetchGameMetadataForBundleIDs:responseKind:context:handler:
rating
loadRatingForGameDescriptor:context:handler:
fetchRatingForGameDescriptor:context:handler:
detailsLoaded
setAchievementPointsList:
loadGamesWithAchievementStatsForPlayer:context:handler:
fetchGamesWithAchievementStatsForPlayer:context:handler:
fetchGameRecommendationsInContext:responseKind:handler:
getAllRatingRequestIDsStatement
getSubmitRatingsDescriptorsStatement
payloadForExecutedStatement:
setReference:
_getPlayersForGameDescriptor:type:reference:handler:
setSinceDate:
setOtherPlayer:
loadRecentPlayersWithPlayer:game:context:handler:
fetchRecentPlayersWithPlayer:game:context:handler:
loadRecentGamesBetweenPlayer:otherPlayer:context:handler:
fetchRecentGamesBetweenPlayer:otherPlayer:context:handler:
getRecentGamesWithPlayer:handler:
getRecentPlayersForGameDescriptor:handler:
loadAchievementDescriptionsForGame:context:handler:
fetchAchievementDescriptionsForGame:context:handler:
achievementLists
intersectSet:
loadAchievementsForGame:players:context:handler:
fetchAchievementsForGame:players:context:handler:
resourceForSubmitScore:forBundleID:shouldScreen:eligibleChallenges:
cleanUpLeaderboardTitles:set:context:
loadLeaderboardsForGameDescriptor:player:setIdentifier:context:handler:
fetchLeaderboardsForGameDescriptor:player:setIdentifier:context:handler:
leaderboardSetList
setLeaderboardSetList:
predicateWithBlock:
loadChallengesForGameDescriptor:context:handler:
fetchChallengesForGameDescriptor:context:handler:
_filterChallenges:compatibleWithBundleID:
_determineCompatibleGamesForChallenges:dispatchGroup:
_updatePlayersForChallenges:dispatchGroup:
_updateGamesForChallenges:dispatchGroup:
wasViewed
report:signature:result:
caseInsensitiveCompare:
setAuthenticateResponseTimestamp:
authenticateResponseTimestamp
reportDurationForEventType:withStartTimestamp:
setInviteeUILaunchTimestamp:
inviteeUILaunchTimestamp
setMessageInviteProcessingTimestamp:
messageInviteProcessingTimestamp
setConnectingDevicesTimestamp:
connectingDevicesTimestamp
setProgramaticInviteTimestamp:
programaticInviteTimestamp
setAppLaunchTimestamp:
setTotalInviteReceivedTimestamp:
appLaunchTimestamp
totalInviteReceivedTimestamp
report:signature:
reportValue:domain:
recordAuthenticateResponseTimestamp
reportAuthenticateResponseDuration
recordInviteeUILaunchTimestamp
reportInviteeUILaunchDuration
recordConnectingDevicesTimestamp
reportConnectingDevicesDuration
recordProgramaticInviteTimestamp
reportProgramaticInviteDuration
reportTotalInviteReceivedDuration
_authenticateResponseTimestamp
_inviteeUILaunchTimestamp
_connectingDevicesTimestamp
_programaticInviteTimestamp
_appLaunchTimestamp
_totalInviteReceivedTimestamp
_messageInviteProcessingTimestamp
idsRequests
responseDictionaryQueue
cancellRequestsforiCloudIDs:
setIdsRequests:
_idsRequests
requestDetailsTTLProfileStatementResult:
bindParametersForRequestsStatement:score:digest:
scoresInsertSQL
bindParametersForScoresStatement:score:shouldScreen:eligibleChallenges:requestsRowID:
setPhotoDescriptorStatement
setPhotoDescriptorForExecutedStatement:
externalAddressForSelfConnectionData:
playersPerMinute
setPlayersPerMinute:
saveRecord:withHandler:
setupInviteShareWithRecordID:rootRecord:handler:
initiateInvitationForMatchRequest:connectionData:recipients:handler:
_performRelayAction:request:handler:
updateRequestWithPushToken:
turnBasedSessionList
getTurnBasedMatchesWithHandler:
_determineCompatibleBundleIDForAppID:bundleVersion:shortBundleVersion:platform:withCompletionHandler:
_updateGamesForTurnBasedMatches:dispatchGroup:
setTurnBasedSessionList:
_determineTurnBasedBadgeCountFromList:context:completionHandler:
loadTurnBasedMatchesForGame:loadDetails:prefetchOnly:context:handler:
fetchTurnBasedMatchesForGame:context:handler:
_determineCompatibleGamesForMatches:dispatchGroup:
getDetailsForTurnBasedMatchIDs:includeGameData:prefetchOnly:handler:
dataExpirationDate
_updatePlayersForMatches:group:
loadDetailsForTurnBasedMatchIDs:includeGameData:context:handler:
fetchDetailsForTurnBasedMatchIDs:includeGameData:responseKind:context:handler:
turnsForParticipantIndexes:turnTimeout:
_requestForTurnBasedSubmitValues:withServerLabel:sessionID:
sendRequest:forBagKey:exchange:matchID:responseHandler:
rejectFriendRequestsInsertSQL
createDatabaseIfNeeded
openDatabase
executeStatement:
closeDatabase
updateDatabasePath
readUserInfoFromDatabase
readBundleIDsFromDisk
writeBundleIDsToDisk
bundleIDCacheURL
setBundleIDsByContainerName:
setBundleIDExpirations:
intFromRowStatement:column:
doubleFromRowStatement:column:
stepStatement:parameters:rowHandler:
saveUserInfo
initForReadingFromData:error:
finishDecoding
tokenForContainerName:ownerName:
setToken:forContainerName:ownerName:
dataFromRowStatement:column:
tokenFromData:
_setToken:forContainerName:ownerName:
stringFromRowStatement:column:
sessionFromData:
bundleIDsByContainerName
bundleIDExpirations
_cacheUserQueue
_userHasSubscription
_friendRecordNeedsUpdate
_lastSaveTimeStamp
_bundleIDsByContainerName
_bundleIDExpirations
identifier
name
%@, id: %@, name: %@
supportsSecureCoding
TB,R
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_name
^^^^^^^^^^^^^^^^^^
| GAMED STARTING |
vvvvvvvvvvvvvvvvvv
v8@?0
com.apple.socialgaming.gkcloudtournament.cache
com.apple.socialgaming.gkcloudtournament
com.apple.ckcode.tournaments
v20@?0B8@"NSError"12
v16@?0@?<v@?>8
tournamentDefinitionWithID
No tournament found for tournament with tournamentID %@
tournamentsMatchingPredicate
tournamentDefinition IN %@
GKCloudTournament - No tournament records found for predicate %@
No tournament found with identifier when getting total player count: %@
playerCount
No record found for local player in tournament.
registerLocalPlayerForTournament
tournamentState
Tournament record for tournamentID does not exist.
playerState
tryNumber
Could not register for tournament because participant state is %@
GKCloudTournament - Error saving participant record for registration %@
GKCloudTournament - retrying registration for tournament %@.
v16@?0@"NSError"8
GKCloudTournament - Successfully registered player for tournament %@: %@
v24@?0@"NSArray"8@"NSError"16
Tournament registration state is %@
GKCloudTournament - Error registering local player for tournament (%@): %@
beginPlayInTournament
tryToken
deviceID
Cannot begin play in tournament due to invalid player state %@
Tournament must be in started state in order to begin play, current state is %@
GKCloudTournament - Error saving participant record for begin play %@
GKCloudTournament - retrying begin play for tournament %@.
v24@?0@"NSString"8@"NSError"16
GKCloudTournament - Successfully began play for tournament %@: %@
GKCloudTournament - Error beginning play in tournament %@: %@
resumePlayInTournament
Cannot resume play in tournament due to invalid player state %@
Cannot resume play because of an invalid try token.
Tournament must be in started state in order to resume play, current state is %@
GKCloudTournament - Error saving participant record for resume play %@
GKCloudTournament - retrying resume play for tournament %@.
GKCloudTournament - Successfully resumed play for tournament %@: %@
GKCloudTournament - Error resuming play in tournament %@: %@
resignLocalPlayerFromTournament
Cannot resign from tournament because player state is %@
GKCloudTournament - Error saving participant record for resigning %@
GKCloudTournament - retrying resigning from tournament %@.
GKCloudTournament - Successfully resigned player from tournament %@
GKCloudTournament - Error resigning local player from tournament (%@): %@
reportScoreForLocalPlayerInTournament
Could not submit score because player's current state is %@
Cannot report score because of invalid try token or device.
GKCloudTournament - Error saving participant record when reporting score %@
GKCloudTournament - retrying score report for tournament %@.
GKCloudTournament - Successfully reported score for tournament %@
GKCloudTournament - Error reporting score for local player: %@
periodicScoringPatternForLocalPlayerInTournament
Could not submit periodic scoring pattern because player's current state is %@
Cannot submit periodic scoring pattern because of invalid try token or device.
GKCloudTournament - Error saving participant record when submitting periodic scoring pattern %@
GKCloudTournament - retrying periodic scoring pattern submission for tournament %@.
GKCloudTournament - Successfully submitted periodic scoring pattern for tournament %@
score
rank
scores
@min.integerValue
@avg.integerValue
@max.integerValue
historicalDataForPlayer
TournamentZone
tournamentDefinition == %@
tournament IN %@ && playerID == %@
TournamentPlayer
modificationDate
v16@?0@"CKRecord"8
GKCloudTournament - Error querying participant information for tournament reference records %@: %@
v24@?0@"CKQueryCursor"8@"NSError"16
%@%@%@
addInviteesToCustomTournament
Cannot invite players to custom tournament with tournamentState: %@
isContact
inviteData
GKCloudTournament - Already invited these players to custom tournament %@: %@.
GKCloudTournament - Error saving invitee records for custom tournament %@
GKCloudTournament - retrying adding invitees for tournament %@.
GKCloudTournament - Successfully added invitees for tournament %@:
GKCloudTournament - No invitees for custom tournament to be saved to CloudKit database.
GKCloudTournament - Error creating private contact invite record %@
GKCloudTournament - Error adding invitees to custom tournament: %@
addCreator
Cannot add creator for tournament because player state is %@
GKCloudTournament - Error saving participant record for adding creator %@
GKCloudTournament - retrying adding creator for tournament %@.
GKCloudTournament - Successfully added creator for tournament %@
GKCloudTournament - Error adding creator for tournament (%@): %@
removeCreator
Cannot remove creator from tournament because player state is %@
GKCloudTournament - Error saving participant record for removing creator %@
GKCloudTournament - retrying removing creator for tournament %@.
GKCloudTournament - Successfully removed creator for tournament %@
GKCloudTournament - Error removing creator for tournament (%@): %@
removeInviteesFromCustomTournament
Cannot remove players from custom tournament with tournamentState: %@
participantPlayerIDs
GKCloudTournament - Error deleting invitee participant records.
GKCloudTournament - Error deleting contact invite records.
GKCloudTournament - No participant records found for the invitees to be removed from tournament.
GKCloudTournament - Error removing invitees from custom tournament: %@
declineLocalPlayerInvitationInTournamentWithID
Cannot decline tournament invitation because player state is %@
GKCloudTournament - Error saving participant record for declining %@
GKCloudTournament - retrying declining from tournament %@.
GKCloudTournament - Successfully decline player tournament invitation in tournament %@
GKCloudTournament - Error declining player tournament invitation in tournament (%@): %@
firstName
lastName
Anonymous
playerID
GKCloudTournament: - Failed to get profiles for Player IDs due to error: %@
playerGroup
q24@?0@"GKTournamentParticipantInternal"8@"GKTournamentParticipantInternal"16
yyyyMMddHHmm
%@ %@
GKCloudTournament - Will create tournament with definition %@, start date %@
GKCloudTournament - No need to create an auto tournament since we are outside the time range
Tournament
maxPlayers
maxReplays
minPlayers
registrationBeginDate
registrationEndDate
scoringMethod
seedingMethod
tournamentBeginDate
duration
tournamentEndDate
tournamentName
tournamentNumber
AUTO_ID
customTournamentCreatorID
lame.game.tournament%02ld
leaderboardID
tournamentDefinition
autoTournamentIndex
GKCloudTournament - Error creating automatic tournament: %@
createCustomTournamentWithRequest
tournamentDefinition == %@ && customTournamentCreatorID BEGINSWITH %@ && tournamentState IN %@
GKCloudTournament - Error checking for existing custom tournament for definition %@: %@
There is already an active tournament for local player %@
v24@?0@"NSURL"8@"NSError"16
GKCloudTournament - No tournament internal found to create shareURL after creating custom tournament???
GKCloudTournament - Error creating custom tournament record: %@
saveTournamentRecords
GKCloudTournament - Successfully saved tournament records, records will be saved to cache. %@
TournamentDefinition
TournamentContactInvite
GKCloudTournament - records failed to save, fetching from server. %@
Could not save records because local records were out of date with server record. %@
recordName
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
%@ (playerID != nil)
[%s (%s:%d)]
GKCloudTournament - nil playerID when creating participant record for tournament.
+[GKCloudTournament createParticipantRecordForTournamentRecord:playerID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKCloudTournament.m
GameKit Exception
tournament
@sum.integerValue
v32@?0@"CKRecord"8Q16^B24
GKCloudTournament - Error saving records while updating player ranks for tournament: %@
GKCloudTournament - Retrying updating player ranks for tournament %@.
GKCloudTournament - Successfully updated player ranks for tournament %@
GKCloudTournament - Error updating player ranks for tournament %@
GKCloudTournament - Refreshing cache in updateCacheForDatabaseWithScope: (%@)
updateCacheWithHandler
TournamentPrivateInviteZone
GKCloudTournament - Error updating cache for database (%@): %@
Public
Private
updateCacheForPublicDatabaseWithHandler
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecordID"8@"NSString"16
updateCacheForDatabaseZoneIDs
GKCloudTournament - updateCacheForDatabase error %@
allTournamentDefintionRecordsWithHandler
GKCloudTournament - Error querying all tournament defintion records: %@
participantRecordsForLocalPlayer
playerID == %@ && tournament IN %@
GKCloudTournament - Error querying localPlayerParticipantRecordsForTournaments: %@
localPlayerTournamentRecordsForBundleID
participantPlayerIDs CONTAINS %@
GKCloudTournament - Error querying tournament records for local player: %@
tournaments
tournamentRefs
autoTournaments
participantsForTournaments
allParticipantRecordsForTournaments
tournament IN %@
GKCloudTournament - Error querying participant records for tournaments: %@
activeAutomaticTournamentWithHandler
customTournamentCreatorID BEGINSWITH %@ && tournamentState IN %@
GKCloudTournament - Error querying active automatic tournament: %@
subscribeToDatabaseChangesWithHandler
publicTournamentZoneSubscription
GKCloudTournament - Error saving subscription to public database tournament zone: %@
v24@?0@"CKSubscription"8@"NSError"16
privateTournamentDatabaseSubscription
GKCloudTournament - Error saving subscription to private database: %@
GKCloudTournament - successfully subscribed to database changes.
GKCloudTournament - Error saving record in modify records operation: %@
fetchRecordsWithIDs
v24@?0@"NSDictionary"8@"NSError"16
resetDataForTournamentsWithTournamentDefinitionID
recordID
GKCloudTournament - Error resetting Data for definition %@: %@
com.apple.socialgaming.tournaments.manage_state_
queue
updateCacheGroup
manageStatesGroup
manageStatesForTournamentsWithDefinition
winningPlayer
GKCloudTournament - Error updating and saving changed tournament records when managing states: %@
GKCloudTournament - Successfully updated and saved changed tournament records when managing states.
GKCloudTournament - Error creating a new automatic tournament for %@: %@
GKCloudTournament - Successfully created a new automatic tournament.
GKCloudTournament - createAutomaticTournamentFromDefinition was invoked without error but no internal was created
v24@?0@"GKTournamentInternal"8@"NSError"16
Tournament is not a custom tournament, no custom tournament creator.
com.apple.socialgaming.sessions
%@%@
inviteShare
tournamentID
bundleID
bundleVersion
shortBundleVersion
adamID
com.apple.legacygaming.invites
LegacyMultiplayerInvites
connectionData
GKCloudTournament - Found existing shareURL for tournament %@
GKCloudTournament - Error creating new CKShare: %@
v24@?0@"CKShare"8@"NSError"16
GKCloudTournament - Error creating record zone for custom tournament invite %@
v24@?0@"CKRecord"8@"NSError"16
GKCloudTournament - Error saving record for shareURL %@
GKCloudTournament - Currently handling CKShareMetadata and thus no need to process, returning.
GKCloudTournament - Error handling CKShareMetadata %@
GKCloudTournament - Error deleting temporary contact participant record %@
GKCloudTournament - Error adding invitee and generating bulletin after processing CKShareMetadata for invite: %@
GKCloudTournament - handled share metadata and now can send bulletin to launch game.
%@_%@
contactID
messagesID
GKCloudTournament - Record zone not found in private database %@
GKCloudTournament - Error creating zone in private database %@
GKCloudTournament - Error saving private contact invite data %@
GKCloudTournament - Error creating record zone for private contact invite data %@
bundleIdentifiers
inProgressAcceptShareRecordIDs
T@"NSMutableSet",&,N
processedRecordIDsForBulletins
lastUsedBundleID
T@"NSString",&,N
lastManagementDate
T@"NSDate",&,N
                     INSERT OR IGNORE INTO player_emails (                         player_id,                          address,                          address_prefix,                          address_sha1,                          is_primary,                          verified)                      SELECT                         (SELECT player_id FROM players WHERE player_gcid = %s), %s, %s, %s, %s, %s;
:player_gcid
:address
:address_prefix
:address_sha1
:is_primary
:verified
                    UPDATE player_emails SET                         address = %s,                         address_prefix = %s,                         address_sha1 = %s,                         is_primary = %s,                         verified = %s                     WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                         AND (address = %s OR                             address_sha1 = %s);
            INSERT OR IGNORE INTO players (                 player_gcid,                 purple_buddy_account,                 account_name,                 default_nickname,                 facebook_user_id,                 icloud_user_id,                 alias,                 first_name,                 last_name,                 friend_level,                 friend_bi_directional,                 friend_played_with,                 friend_played_nearby,                 status,                 underage,                 number_of_achievement_points,                 number_of_achievements,                 number_of_friends,                 number_of_games,                 photo_pending,                 image_64,                 image_128,                 image_256,                 image_512,                 last_played_date,                 available_pieces,                 expiration_date             )            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s);
:purple_buddy_account
:account_name
:default_nickname
:facebook_user_id
:icloud_user_id
:alias
:first_name
:last_name
:friend_level
:friend_bi_directional
:friend_played_with
:friend_played_nearby
:status
:underage
:number_of_achievement_points
:number_of_achievements
:number_of_friends
:number_of_games
:photo_pending
:image_64
:image_128
:image_256
:image_512
:last_played_date
:available_pieces
:expiration_date
UPDATE players SET 
alias = %s,
status = %s,
account_name = %s,
         image_64 = %s,         image_128 = %s,         image_256 = %s,         image_512 = %s,
number_of_friends = %s,
number_of_games = %s,
number_of_achievements = %s,
number_of_achievement_points = %s,
last_played_date = %s,
purple_buddy_account = %s,
photo_pending = %s,
underage = %s,
default_nickname = %s,
first_name = %s,
last_name = %s,
friend_level = %s,
friend_bi_directional = %s,
friend_played_with = %s,
friend_played_nearby = %s,
facebook_user_id = %s,
icloud_user_id = %s,
available_pieces = (%s|available_pieces), expiration_date = %s 
WHERE player_gcid = %s;
image64
image128
image256
image512
            INSERT OR IGNORE INTO player_relationships (                player_id,                 relative_to_player_id,                 familiarity,                 number_of_friends_in_common,                 number_of_games_in_common,                 expiration_date)             SELECT                 (SELECT player_id FROM players WHERE player_gcid = %s), (SELECT player_id FROM players WHERE player_gcid = %s), %s, %s, %s, %s;
:local_player_gcid
:familiarity
:number_of_friends_in_common
:number_of_games_in_common
            UPDATE player_relationships SET                familiarity = %s,                number_of_friends_in_common = %s,                number_of_games_in_common = %s,                expiration_date = %s             WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s) AND                relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s);
i16@?0@"NSString"8
UPDATE statement didn't affect any rows, meaning record unsuccessfully inserted
v16@?0^{sqlite3_stmt=}8
v24@?0^{sqlite3=}8@"<GKSQLiteStatementStore>"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
familiarity
Ti,N,V_familiarity
localPlayerID
T@"NSString",&,N,V_localPlayerID
language
T@"NSString",&,N,V_language
connection
T@"GKDatabaseConnection",&,N,V_connection
challenge
GKChallengeBulletin expireChallengeList
v24@?0@"NSManagedObjectContext"8@?<v@?>16
GKChallengeBulletin determineGameLocationOnDeviceOrInStoreWithCompletionHandler:
determineGameLocationOnDeviceOrInStoreWithCompletionHandler - Error loading store item: %@
GKChallengeBulletin gameDescriptor
%@ does not set players manually, they are all derived from the set challenge
%@ does not set gameName manually, they are all derived from the set challenge
GKChallengeBulletin refreshData
scroll
GKChallengeBulletin isAppRunning
presentChallengeReceived: got appState of %d for %@
GKChallengeBulletin notifyApp
telling the client %@ about challenge %@
GKChallengeBulletin notifyClient:
%@ Only to be used by derived classes
GKChallengeBulletin assembleBulletin
CHALLENGE_NOTIFICATION_TITLE
GKChallengeBulletin customChallengeSoundPathForBundleID:
%@ doesn't implement %@; Subclasses should set launch event
GKChallengeBulletin handleAcceptAction
GKChallenge Notification: challenge received handling accept action %@
GKChallenge Notification: set launch event for client %@
T@"GKChallengeInternal",&,N,V_challenge
challengeID
T@"NSString",&,N,V_challengeID
storeItem
T@"GKStoreItemInternal",&,N,V_storeItem
GKChallengeCompletedBulletin loadBulletinsForPushNotification: withHandler:
GKChallengeCompletedBulletin clearing challenge cache
challengeID IN %@
challengeID = %@
v32@?0@"GKChallengeCacheObject"8Q16^B24
We received a challenge with a nil ID back from getChallengeDetailsForChallengeIDs, and we're going to crash because of it. %@
loadBulletinsForPushNotification - Error getting game location: %@
loadBulletinsForPushNotification - failed to load challenge details: %@
GKChallengeCompletedBulletin notifyClient:
GKChallengeCompletedBulletin assembleBulletin
CHALLENGE_RECEIVED_LAUNCH_STORE
CHALLENGE_RECEIVED_LAUNCH_GAME
CHALLENGE_RECEIVED_IGNORE
CHALLENGE_REMOTELY_COMPLETED_BANNER_OUT_OF_GAME_1_GAME_2_PLAYER_FORMAT
GKChallengeCompletedBulletin handleAction:
bulletin handle challenge action: %@
GKChallengeReceivedBulletin loadBulletinsForPushNotification: withHandler:
loadBulletinsForPushNotification - Error determining game location: %@
loadBulletinsForPushNotification: failed to load challenge details: %@
GKChallengeReceivedBulletin notifyClient:
GKChallengeReceivedBulletin assembleBulletin
CHALLENGE_RECEIVED_DECLINE
CHALLENGE_RECEIVED_OUT_OF_GAME_BANNER_FORMAT
CHALLENGE_NOTIFICATION_COMBINED_MESSAGE_FORMAT
GKChallengeReceivedBulletin handleAction:
GKChallengeReceivedBulletin handleDeclineAction
challenge received handling decline action %@
com.apple.private.alloy.gamecenter
GKIDSInviteSessionID
GKIDSInviteTransportType
type
transport
message
senderCKID
recipients
data
urn:ck:
com.apple.gamed.ids.delegateQueue
Declining IDSSesion because state == IDSSessionStateEnded
Declining IDSSession because too many connections in match
%@:%@
disconnectClient
GKConnectionManager:: didDisconnectForGameSessionWithID for reason %ld
didDisconnectForGameSession
sessionID
GKConnectionManager:: did save connection state for background or app termination.
v24@?0@"GKGameSession"8@"NSError"16
sendNotificationMessageOfType
playerName
SESSION_PLAYER
v24@?0@"GKCloudPlayer"8@"NSError"16
shareURL
loc-key
loc-default
loc-args
Error sending localized message over IDSService %@
gamed
idsService
T@"IDSService",&,N,V_idsService
connectionsBySessionID
T@"NSMutableDictionary",&,N,V_connectionsBySessionID
idsDelegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_idsDelegateQueue
connectionErrorBySessionID
T@"NSMutableDictionary",&,N,V_connectionErrorBySessionID
GKIDSConnection: connectToGameSessionUsingDelegateQueue:handler:
connectToGameSession
GKIDSConnection: error getting primary player from game session %@
GKIDSConnection: First player with connection state connected, no one to connect to.
GKIDSConnection: connectToPlayersWithIdentifiers:
GKIDSConnection connection timeout timer fired.  Failure while attempting to connect to other players.
GKIDSConnection::connectToPlayersWithIdentifiers - Already connected to player identifiers in parameter.
IDSSession Invite accepted for session from %s
Received IDSSession invitation decline from %s
Received IDSSession invitation cancel from %s
invitationAcceptedForIDSSession: Error processing NSData for IDSSession invite response.
setupStreamForIDSSession: Error obtaining NWStreamConnection for IDSSession %@
setupDatagramForIDSSession: Error obtaining NWDatagramConnection for IDSSession %@
NWConnection did fail with error %@
sendData:reliability:handler: Error creating data packet for sending match data %@
sendData:reliability:handler: No handler and Error creating data packet for sending match data %@
GKIDSConnection received internal messgae %ld
IDSConnection received unknown internal message %ld
q24@?0@"NSString"8@"NSString"16
Have not received heartbeat, IDSSession lost connection with %s
Saving connection state to disconnected for lost connection
sessionEnded: GKIDSConnection IDS session ended with %s for reason %d with error %@
GKIDSConnection IDS session ended with %s for reason %d with error %ld
GKIDSConnection client in background, disconnecting IDSSessions
clientForSession
T@"GKClientProxy",W,N,V_clientForSession
localIDSAccount
T@"IDSAccount",&,N,V_localIDSAccount
primaryPlayerCKID
T@"NSString",C,N,V_primaryPlayerCKID
cloudSession
T@"GKCloudGameSession",&,N,V_cloudSession
connectionState
Tq,N,V_connectionState
reasonForDisconnect
Tq,N,V_reasonForDisconnect
connectionCompleteHandler
T@?,C,N,V_connectionCompleteHandler
disconnectCompleteHandler
T@?,C,N,V_disconnectCompleteHandler
connectTimeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_connectTimeoutTimer
backgroundTimer
T@"NSObject<OS_dispatch_source>",&,N,V_backgroundTimer
heartbeatTimer
T@"NSObject<OS_dispatch_source>",&,N,V_heartbeatTimer
heartbeatTimeForCloudIDs
T@"NSMutableDictionary",&,N,V_heartbeatTimeForCloudIDs
pendingSessions
T@"NSMutableDictionary",&,N,V_pendingSessions
reliableSessions
T@"NSMutableDictionary",&,N,V_reliableSessions
unreliableSessions
T@"NSMutableDictionary",&,N,V_unreliableSessions
streamConnections
T@"NSMutableDictionary",&,N,V_streamConnections
datagramConnections
T@"NSMutableDictionary",&,N,V_datagramConnections
GKRealTimeMultiplayerBulletin inviteVersionFromMessage:
GKRealTimeMultiplayerBulletin parseClientData:
GKRealTimeMultiplayerBulletin initWithPushNotification:
GKRealTimeMultiplayerBulletin initWithCoder:
sessionToken
selfNatType
serverHosted
peerPushToken
peerNatType
peerNatIP
peerBlob
selfTicket
declineReason
clientDictionary
inviteVersion
GKRealTimeMultiplayerBulletin encodeWithCoder:
iCloudID
GKRealTimeMultiplayerBulletin clientNotification
session-token
self-id
peer-id
peer-push-token
peer-nat-type
peer-nat-ip
peer-blob
invite-version
GKRealTimeMultiplayerBulletin updateDeclineInviteTrackingForReason:
GKRealTimeMultiplayerBulletin: declineInviteWithReason:
GKRealTimeMultiplayerBulletin: customInviteSoundPathForBundleID:
sessionToken:%@
T@"NSData",&,V_sessionToken
T@"NSNumber",&,V_selfNatType
TB,V_serverHosted
T@"NSData",&,V_peerPushToken
T@"NSNumber",&,V_peerNatType
T@"NSData",&,V_peerNatIP
T@"NSData",&,V_peerBlob
T@"NSData",&,V_selfTicket
T@"NSNumber",&,V_declineReason
T@"NSDictionary",&,V_clientDictionary
T@"NSNumber",&,V_inviteVersion
GKRealTimeMultiplayerInitiateBulletin loadBulletinsForPushNotification:
is-messages-invite
eventType
NAT types can't connect: own is %d and inviter has %d
GKRealTimeMultiplayerInitiateBulletin - assembled bulletin with sessionToken %@
GKRealTimeMultiplayerInitiateBulletin - Error loading data: %@
GKRealTimeMultiplayerInitiateBulletin Declining invite due to no compatible game found
GKRealTimeMultiplayerInitiateBulletin - Error determining game location: %@
GKRealTimeMultiplayerInitiateBulletin loadBulletinsForPushNotification: push is not for local players
Ignoring initiate push not intended for this player. InviteID: %@ LocalPlayer: %@
GKRealTimeMultiplayerInitiateBulletin initWithPushNotification:
GKRealTimeMultiplayerInitiateBulletin initWithCoder:
isReconnect
GKRealTimeMultiplayerInitiateBulletin encodeWithCoder:
GKRealTimeMultiplayerInitiateBulletin parseClientData:
GKRealTimeMultiplayerInitiateBulletin assembleBulletin:
GAME_RECONNECT_MESSAGE
GAME_INVITE_NOTIFICATION_TITLE
APP_STORE
ACCEPT_INVITE_BUTTON_TITLE
DECLINE_INVITE_BUTTON_TITLE
assembleBulletin: - Bulletin Action Set
assembleBulletin: - Bulletin Data Set
GKRealTimeMultiplayerInitiateBulletin handleAction:
bulletin handle multiplayer action: %@ bulletin: %@
GKRealTimeMultiplayerInitiateBulletin handleAcceptAction
GKRealTimeMultiplayerInitiateBulletin handleDeclineAction
GKRealTimeMultiplayerInitiateBulletin loadDataWithHandler:
loadLocalizedGameNameForBundleID - Error getting localized game name for bulletin: %@
loadLocalizedGameNameForBundleID - Error getting originator player of bulletin: %@
TB,V_isReconnect
GKRealTimeMultiplayerActionBulletin loadBulletinsForPushNotification withHandler:
Will post bulletin: %@
v12@?0B8
Error loading data for GKRealTimeMultiplayerActionBulletin: %@
GKRealTimeMultiplayerActionBulletin loadDataWithHandler
loadDataWithHandler - Error getting localized game name: %@
loadDataWithHandler - Error getting originator player: %@
No Game Client found for sessionToken
GKMultiplayerInvite
GKRealTimeMultiplayerActionBulletin: setInvitedPlayerRespondedWithCompletionHandler
setInvitedPlayerRespondedWithCompletionHandler: Received Accept for unkown Session Token
Received accept for unknown sessionToken %@
setInvitedPlayerRespondedWithCompletionHandler: starting invite session
Have a push token for peer: %@
Push tokens for %@: %@
setInvitedPlayerRespondedWithCompletionHandler - failed to cancel invitation for session: %@
Have share invitees %@
invitedPlayers
error:%@ while decoding invitedPlayers archive in %@
Remove %@ from shareInvitees %@
Remaining share invitees after response %@
GKRealTimeMultiplayerActionBulletin: assembleBulletin
for subclasses only
aggregateDictionaryKey
T@"NSString",R
debugLine
T@"NSString",R,V_debugLine
notificationName
T@"NSString",R,V_notificationName
accept push
GKRealTimeMultiplayerAcceptBulletin initWithPushNotification:
GKRealTimeMultiplayerAcceptBulletin initWithCoder:
blobType
relayType
relayConnectionID
relayTranscationID
selfRelayIP
selfRelayPort
peerRelayIP
peerRelayPort
relayToken
GKRealTimeMultiplayerAcceptBulletin encodeWithCoder:
GKRealTimeMultiplayerAcceptBulletin assembleBulletin:
INVITEE_ACCEPTED_ALERT_HEADER
INVITEE_ACCEPTED_ALERT_MESSAGE_ALIAS_1_GAMENAME_2_FORMAT
INVITEE_ACCEPTED_ALERT_MESSAGE_ALIAS_ONLY_FORMAT
INVITEE_ACCEPTED_ALERT_MESSAGE_GAME_NAME_ONLY_FORMAT
INVITEE_ACCEPTED_ALERT_MESSAGE
GKRealTimeMultiplayerAcceptBulletin handleAction:
bulletin handle multiplayer action: %@
T@"NSNumber",&,V_blobType
T@"NSNumber",&,V_relayType
T@"NSData",&,V_relayConnectionID
T@"NSData",&,V_relayTranscationID
T@"NSData",&,V_selfRelayIP
T@"NSNumber",&,V_selfRelayPort
T@"NSData",&,V_peerRelayIP
T@"NSNumber",&,V_peerRelayPort
T@"NSData",&,V_relayToken
decline push
GKRealTimeMultiplayerDeclineBulletin assembleBulletin
INVITEE_DECLINED_ALERT_MESSAGE_ALIAS_1_GAMENAME_2_FORMAT
INVITEE_DECLINED_ALERT_MESSAGE_ALIAS_ONLY_FORMAT
INVITEE_DECLINED_ALERT_HEADER
GKRealTimeMultiplayerCancelBulletin loadBulletinsForPushNotification withHandler:
cancel push
Did Removed Invite from inviteManager?: %@
GKRealTimeMultiplayerCancelBulletin: loadBulletinsForPushNotification - attempting to display bulletin
Cancel Bulletin: %@
GKRealTimeMultiplayerCancelBulletin copyDataFromAssociatedBulletin
GKRealTimeMultiplayerCancelBulletin assembleBulletin
GAME_INVITE_CANCELED_ALERT_MESSAGE_ALIAS_1_GAME_2_FORMAT
GAME_INVITE_CANCELED_ALERT_MESSAGE_ALIAS_ONLY_FORMAT
GAME_INVITE_CANCELED_ALERT_HEADER
GKRealTimeMultiplayerCancelBulletin removeAndReturnAssociatedInvite
GKRealTimeMultiplayerSendBulletin loadBulletinsForPushNotification: withHandler:
GKRealTimeMultiplayerSendBulletin GKClearInvitationReason
GKRealTimeMultiplayerSendBulletin GKReconnectInvitationReason
GKDataTransport: initWithBag:
GKDataTransport - %@
postRequest method:%@ bagKey:%@
default
postRequest:Failed to read data for bag key (%@) due to error: %@
postRequest:Response handler exist for read data for bag key call
v32@?0@"NSData"8d16@"NSError"24
postRequest: forBagKey: result:
storeBag
T@"GKStoreBag",&,N,V_storeBag
clientProxy
T@"GKClientProxy",&,N,V_clientProxy
credential
T@"GKPlayerCredential",&,N,V_credential
activity
T@"GKActivity",&,N,V_activity
environment
Tq,N,V_environment
%@ (uniqueKey != nil)
[%s (%s:%d)]
Class %@ must define a attribute for uniquing.
-[GKUniqueObjectIDLookup initWithObjectClass:context:predicate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKCacheObject.m
%s.%@
com.apple.gamed.cachequeue
%@ (_queueContext == GKCacheQueueID)
[%s (%s:%d)]
%s not invoked on managed object context queue at %@
-[GKUniqueObjectIDLookup _populateWithContext:]
objectID
Fetch error: %@
%@ (_lookup != ((void *)0))
[%s (%s:%d)]
Assertion failed
-[GKUniqueObjectIDLookup _populateWithContext:]_block_invoke
UNIQUENESS FAILURE for %s:%@ and %@ found for %@
v16@?0@"NSMutableDictionary"8
GKCacheObject: uniqueObjectsForKeys:
-[GKUniqueObjectIDLookup uniqueObjectsForKeys:context:newObject:]
v16@?0@"NSDictionary"8
v32@?0@8@"NSManagedObjectID"16^B24
Fetching unique objects for IDs %@
self IN %@
v32@?0@8Q16^B24
-[GKUniqueObjectIDLookup insertObjectsForServerRepresentations:context:newObject:]
@24@?0@"NSDictionary"8Q16
Inserting newObjects into lookup %@
-[GKCacheObject updateWithServerRepresentation:]
%@ (NO)
[%s (%s:%d)]
Subclasses must provide a valid entityName
+[GKCacheObject entityName]
GKCacheObject: entityInManagedObjectContext
%@ (entityName != nil)
[%s (%s:%d)]
+[GKCacheObject entityInManagedObjectContext:]
GKCacheObject: initWithManagedObjectContext:
-[GKCacheObject initWithManagedObjectContext:]
GKCacheObject: fetchRequestForContext
+[GKCacheObject objectsMatchingPredicate:context:]
+[GKCacheObject countObjectsMatchingPredicate:context:]
Error counting: %@
+[GKCacheObject firstObjectMatchingPredicate:context:]
+[GKCacheObject deleteObjectsMatchingPredicate:context:]
Deleting objects %@
Subclass %@ must override uniqueAttributeName
+[GKCacheObject uniqueAttributeName]
Subclass %@ must override uniqueObjectIDLookupKey
+[GKCacheObject uniqueObjectIDLookupKey]
GKCacheObject: uniqueObjectIDLookupWithContext:
@24@?0@8Q16
-[GKCacheObject(GKCacheObjectImageProtocol) imageCacheKeyPathsByKey]
template
imageTemplate
GKCacheObject: updateImagesWithImageURLs:
-[GKCacheObject(GKCacheObjectImageProtocol) updateImagesWithImageURLs:]
%@ ([self conformsToProtocol:@protocol(GKCacheObjectImageProtocol)])
[%s (%s:%d)]
v32@?0@8@16^B24
-[GKCacheObject(GKCacheObjectImageProtocol) imageURLDictionary]
GKCacheObject: deleteCachedImage:
Attempting to delete image at path: %@
Deleted image: %@
Error deleting cached image (%@): %@
-[GKCacheObject(GKCacheObjectImageProtocol) clearImages]
-[GKCacheObject(GKCacheObjectImageProtocol) hasImages]
UNABLE TO PURGE OBJECT: %@
timeStamp
-[GKExpiringCacheObject invalidate]
-[GKExpiringCacheObject expire]
EXPIRED %@
-[GKExpiringCacheObject expired]
GKCacheObject: updateWithServerRepresentation:
-[GKExpiringCacheObject updateWithServerRepresentation:expirationDate:]
GKCacheObject: expireObjectsMatchingPredicate
+[GKExpiringCacheObject expireObjectsMatchingPredicate:context:]
+[GKExpiringCacheObject invalidateObjectsMatchingPredicate:context:]
T@"NSDate",&,D,N
expirationDate
expired
TB,R,N
GKPlayerProfileCacheObjectUniqueObjectIDLookupKey
underage
findable
-[GKPlayerProfileCacheObject clearImages]
GKPlayerProfileCacheObject: deleteCachedAvatars
-[GKPlayerProfileCacheObject deleteCachedAvatars]
GKPlayerProfileCacheObject: deleteCachedImage:
-[GKPlayerProfileCacheObject deleteCachedImage:]
Attempting to delete image at URL: %@
GKLocalPlayerObjectIDKey
+[GKPlayerProfileCacheObject localPlayerInManagedObjectContext:]
playerID = %@
+[GKPlayerProfileCacheObject playerProfileWithPlayerID:inManagedObjectContext:]
@24@?0@"GKPlayerInternal"8Q16
GKCacheObject: playerProfilesWithPlayerIDs:
+[GKPlayerProfileCacheObject playerProfilesWithPlayerIDs:inManagedObjectContext:]
@"GKPlayerProfileCacheObject"16@?0@"NSString"8
GKPlayerProfileCacheObject: updateImagesWithImageURLs:
-[GKPlayerProfileCacheObject updateImagesWithImageURLs:]
-[GKPlayerProfileCacheObject updateWithServerRepresentation:expirationDate:pieces:]
No playerID in response
pb-account
v32@?0@8@"NSString"16^B24
Updated the friend level based on the server response. New friendLevel:%@
email-addresses
facebook-user-id
icloud-user-id
-[GKPlayerProfileCacheObject internalRepresentationWithPieces:]
-[GKPlayerProfileCacheObject internalRepresentation]
PlayerProfile
player = %@ AND game = %@
player = %@ && game == nil
player = %@ OR otherPlayer = %@
availablePieces
Ti,D,N
valid
TB,R,N,GisValid
T@"NSString",&,D,N
gamePlayerID
teamPlayerID
alias
status
purpleBuddyAccount
TB,D,N
defaultNickname
accountName
TB,D,N,GisUnderage
avatarType
T@"NSNumber",&,D,N
photoPending
photoPendingExpirationDate
TB,D,N,GisFindable
numberOfFriends
numberOfGames
numberOfAchievements
numberOfAchievementPoints
lastPlayedDate
lastPlayedGame
numberOfFriendsInCommon
numberOfGamesInCommon
numberOfTurns
facebookUserID
iCloudUserID
friendLevel
friendBiDirectional
friendPlayedWith
friendPlayedNearby
orderedEmailAddresses
T@"NSOrderedSet",&,D,N
gameRecords
T@"NSSet",&,D,N
achievementLists
leaderboardLists
friendLeaderboards
friendList
T@"GKFriendListCacheObject",&,D,N
gameList
T@"GKGameListCacheObject",&,D,N
friendRequestList
T@"GKFriendRequestListCacheObject",&,D,N
friendRecommendationList
T@"GKFriendRecommendationListCacheObject",&,D,N
gameRecommendationList
T@"GKGameRecommendationListCacheObject",&,D,N
achievementPointsList
T@"GKAchievementPointsListCacheObject",&,D,N
challengeList
T@"GKChallengeListCacheObject",&,D,N
recentPlayerLists
otherRecentGameLists
ownedRecentGameLists
+[GKPlayerProfileCacheObject(GKPlayerFamiliarity) _familiarityLookup]
com.apple.gamed.GKPlayerProfileCacheObject.familiarityLookup
%@ (familiarity != GKPlayerFamiliaritySelf)
[%s (%s:%d)]
+[GKPlayerProfileCacheObject(GKPlayerFamiliarity) addFamiliarPlayerIDs:familiarity:]
+[GKPlayerProfileCacheObject(GKPlayerFamiliarity) removeFamiliarPlayerIDs:familiarity:]
unsupported object class passed to removeFamiliarPlayerIDs:%@
+[GKPlayerProfileCacheObject(GKPlayerFamiliarity) setFamiliarPlayerIDs:familiarity:]
v32@?0@"NSString"8Q16^B24
@24@?0@"NSString"8Q16
Ti,R,D,N
isLocalPlayer
TB,R,D,N
-[GKPlayerEmailCacheObject internalRepresentation]
-[GKPlayerEmailCacheObject updateWithServerRepresentation:]
email-address
email-hash
email-prefix
verified
primary
PlayerEmail
address
addressSHA1
addressPrefix
player
T@"GKPlayerProfileCacheObject",&,D,N
GKGameCacheObjectUniqueObjectIDLookupKey
gameForBunDleID:context: was called with no bundleID. Stack trace:%@
GKCacheObject: gamesForBundleIDs:
GKCacheObject: gamesForGameDescriptors:
bundle-id
v32@?0@"NSDictionary"8Q16^B24
@"GKGameCacheObject"16@?0@"NSString"8
short-bundle-version
bundle-version
GKCacheObject: updateWithGameDescriptor:
-[GKGameCacheObject updateWithGameDescriptor:]
adam-id
external-version
platform
-[GKGameCacheObject updateWithServerRepresentation:expirationDate:]
game
software-type
is-prerendered
supports-leaderboards
has-aggregate-leaderboard
num-leaderboard-categories
num-leaderboard-sets
default-leaderboard-category
supports-achievements
max-achievements
supports-multi-player
supports-turn-based-multi-player
max-achievements-score
image-urls
GKCacheObject: updateStorePiecesWithServerRepresentation:
-[GKGameCacheObject updateStorePiecesWithServerRepresentation:expirationDate:]
artistName
shortUrl
userRating
ratingCountCurrentVersion
valueCurrentVersion
%@ (0.0 <= rating && rating <= 1.0)
[%s (%s:%d)]
Rating(%f) must be normalized to 1.0
offers
B32@?0@8Q16^B24
redownload
actionText
short
priceFormatted
-[GKGameCacheObject internalRepresentation]
list.game = %@ && identifier = %@
-[GKGameCacheObject gameDescriptor]
Game
externalVersion
softwareType
T@"NSString",D,N
prerendered
supportsLeaderboards
hasAggregateLeaderboard
numberOfCategories
TI,D,N
supportsLeaderboardSets
numberOfLeaderboardSets
defaultCategory
supportsAchievements
maxAchievementPoints
supportsMultiplayer
supportsTurnBasedMultiplayer
storePiecesExpirationDate
numberOfUserRatings
Tq,D,N
averageUserRating
Tf,D,N
priceDisplay
viewItemURL
tellAFriendMessageContentsUrl
owned
shortViewItemURL
achievementDescriptionList
T@"GKAchievementDescriptionListCacheObject",&,D,N
leaderboardSetList
T@"GKLeaderboardSetListCacheObject",&,D,N
leaderboards
turnBasedSessionList
T@"GKTurnBasedSessionListCacheObject",&,D,N
turnBasedSessions
playerLists
topGameEntries
recommendationEntries
flowRates
invites
playersToInvite
players
listEntries
AchievementDescriptionList
results
@"GKListEntryCacheObject"24@?0@8@"NSManagedObjectContext"16
T@"GKGameCacheObject",&,D,N
-[GKAchievementDescriptionCacheObject updateWithServerRepresentation:]
achievement-id
group-achievement-id
achievement-title
achievement-desc-after
achievement-desc-before
achievement-max-value
achievement-display-unachieved
is-recyclable
achievement-image-urls
-[GKAchievementDescriptionCacheObject internalRepresentation]
AchievementDescription
groupIdentifier
title
achievedDescription
unachievedDescription
maximumPoints
hidden
replayable
AchievementList
-[GKAchievementListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKAchievementListCacheObject internalRepresentation]
v32@?0@"GKAchievementCacheObject"8Q16^B24
@24@?0@"GKAchievementDescriptionCacheObject"8Q16
-[GKAchievementCacheObject updateWithServerRepresentation:]
achievement-pct
timestamp
Achievement
lastReportedDate
percentComplete
+[GKGameRecordCacheObject recordsForGames:playerProfile:]
game.bundleID
@24@?0@"GKGameCacheObject"8Q16
-[GKGameRecordCacheObject updateWithServerRepresentation:expirationDate:]
leaderboard-size
friend-rank
num-friends-ranked
num-achieved
achievements-score
scoped:updateWithServerRepresentation Updated gamePlayerID in the cached gameRecord for for the localPlayer. Current value in the game record is:%@
 and cached localPlayer:%@
scoped:not updating gamePlayerID as it is not currently part of the response of get-games-played. Current value in the game record is:%@
scoped:not updating gamePlayerID as it is already part of the game record:%@
scoped:updateWithServerRepresentation Updated teamPlayerID in the cached gameRecord for the localPlayer. Current value in the game record is teamPlayerID:%@
 and cached localPlayer:%@
scoped:not updating teamPlayerID as it is not currently part of the response of get-games-played. Current value in the game record is:%@
scoped:not updating teamPlayerID as it is already part of the game record:%@
scoped:not updating the scoped IDs for non local players
user-default-leaderboard-category
game-metadata
-[GKGameRecordCacheObject updateIDsWithServerRepresentation:]
scoped:updateIDsWithServerRepresentation Updated gamePlayerID in the cached gameRecord for the localPlayer. Current value in the game record is:%@
 and cached localPlayer:%@
scoped:updateIDsWithServerRepresentation Updated teamPlayerID in the cached gameRecord for the localPlayer. Current value in the game record is teamPlayerID:%@
 and cached localPlayer:%@
-[GKGameRecordCacheObject updateAchievementsWithServerRepresentation:]
-[GKGameRecordCacheObject internalRepresentation]
GameRecord
purchaseDate
achievements
achievementPoints
maxRank
friendRank
maxFriendRank
defaultLeaderboardIdentifier
achievementPointsEntry
T@"GKAchievementPointsEntryCacheObject",&,D,N
+[GKGameRatingCacheObject ratingForGameDescriptor:context:]
bundleID = %@ && bundleVersion = %@
-[GKGameRatingCacheObject updateWithServerRepresentation:expirationDate:]
rating
GameRating
LeaderboardSetList
-[GKLeaderboardSetCacheObject updateWithServerRepresentation:]
set-name
set-group-name
set-title
set-image-urls
category-name
category-title
-[GKLeaderboardSetCacheObject internalRepresentation]
localizedTitle
LeaderboardSet
leaderboardTitleMapList
T@"GKLeaderboardTitleMapListCacheObject",&,D,N
leaderboardList
T@"GKLeaderboardListCacheObject",&,D,N
LeaderboardTitleMapList
T@"GKLeaderboardSetCacheObject",&,D,N
LeaderboardTitleMap
LeaderboardList
entries
-[GKListCacheObject internalRepresentation]
-[GKListCacheObject reorderEntry:toIndex:]
-[GKListCacheObject removeEntriesMatchingPredicate:]
-[GKListCacheObject updateEntriesWithRepresentations:entryForRepresentation:reuseEntriesByIndex:]
-[GKListCacheObject findEntry:]
-[GKListCacheObject entryPassingTest:]
-[GKListCacheObject entriesPassingTest:]
seed
detailsLoaded
list
T@"GKListCacheObject",&,D,N
FriendList
-[GKFriendListCacheObject playerIDs]
+[GKFriendListCacheObject cacheFriendList:withTimeToLive:forProfile:managedObjectContext:commonFriends:]
%@ (profile != nil)
[%s (%s:%d)]
A friend list must be related to a profile
received an empty playerID while updating a player friend's cache
player-id
player ID missing from info dictionary:%@
unexpected result class in server friend list:%@
GKFriendCache:cached friend list:%@
-[GKFriendListCacheObject populateFriendNamesFromServerRepresentationDictionary:]
populating friend profile cache info with info from server:%@
%@ ([playerInfo isKindOfClass:[NSDictionary class]])
[%s (%s:%d)]
got %@ from %@ %@
-[GKFriendListCacheObject populateFriendNamesFromServerRepresentationDictionary:]_block_invoke
first-name
last-name
bi-directional
played-with
played-nearby
last-played-game
last-played-timestamp
a friend list came back with no info on friend relationship. Tracking by assigning a friend level of 512
GKFriendCache:populated player pieces with server info: player alias:%@ with first and last name:%@ %@ and friendLevel:%@
%@ missing from dictionary
v32@?0@"GKPlayerProfileCacheObject"8Q16^B24
-[GKFriendListCacheObject internalRepresentation]
common
-[GKFriendListEntryCacheObject internalRepresentation]
FriendEntry
-[GKFriendListEntryCacheObject updateWithServerRepresentation:]
CompatibilityMatrixList
-[GKCompatibilityListCacheObject updateWithServerRepresentation:expirationDate:]
version
shortVersion
CompatibilityMatrixEntry
-[GKCompatibilityEntryCacheObject internalRepresentation]
-[GKCompatibilityEntryCacheObject updateWithServerRepresentation:]
versions
short-versions
shortVersions
CompatibilityMatrixVersion
matrixEntry
T@"GKCompatibilityEntryCacheObject",&,D,N
CompatibilityMatrixShortVersion
RecommendationEntry
displayedToUser
viewed
FriendRecommendationList
-[GKFriendRecommendationListCacheObject updateWithServerRepresentation:expirationDate:]
recommendations
-[GKFriendRecommendationListCacheObject internalRepresentation]
-[GKFriendRecommendationListEntryCacheObject internalRepresentation]
FriendRecommendationEntry
-[GKFriendRecommendationListEntryCacheObject updateWithServerRepresentation:]
reason
alt-reason
reason-id
source
reasonID
reason2
FriendRequestList
-[GKFriendRequestListCacheObject updateWithServerRepresentation:expirationDate:]
wasViewed == NO
-[GKFriendRequestListCacheObject internalRepresentation]
-[GKFriendRequestListEntryCacheObject updateWithServerRepresentation:]
email
-[GKFriendRequestListEntryCacheObject internalRepresentation]
FriendRequestEntry
date
wasViewed
GameList
-[GKGameListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKGameListCacheObject internalRepresentation]
-[GKGameListCacheObject internalRepresentationIncludingInstalledGames:]
game.bundleID IN %@
self
q24@?0@8@16
internalRepresentation
GameEntry
-[GKLeaderboardCacheObject updateWithServerRepresentation:]
score-type
global-alltime-info
group-category-name
last-submitted
category-image-urls
-[GKLeaderboardCacheObject internalRepresentation]
Leaderboard
lastSubmittedDate
scoreType
RecentPlayerList
-[GKRecentPlayerListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKRecentPlayerListCacheObject internalRepresentation]
@24@?0@"GKRecentPlayerListEntryCacheObject"8Q16
sinceDate
RecentPlayerEntry
-[GKRecentPlayerListEntryCacheObject updateWithServerRepresentation:]
-[GKRecentPlayerListEntryCacheObject internalRepresentation]
RecentGameList
-[GKRecentGameListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKRecentGameListCacheObject internalRepresentation]
bundleIDs
@24@?0@"GKRecentGameListEntryCacheObject"8Q16
otherPlayer
RecentGameEntry
-[GKRecentGameListEntryCacheObject updateWithServerRepresentation:]
game.bundle-id
-[GKTopGamesListCacheObject updateWithServerRepresentation:expirationDate:]
@"GKListEntryCacheObject"24@?0@"NSDictionary"8@"NSManagedObjectContext"16
TopGamesList
-[GKTopGamesListEntryCacheObject internalRepresentation]
TopGamesListEntry
FlowRate
playersPerMinute
GameRecommendationList
-[GKGameRecommendationListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKGameRecommendationListCacheObject internalRepresentation]
GameRecommendationEntry
-[GKGameRecommendationEntryCacheObject updateWithServerRepresentation:]
engine-id
-[GKGameRecommendationEntryCacheObject internalRepresentation]
engineID
AchievementPointsList
-[GKAchievementPointsListCacheObject updateWithServerRepresentation:expirationDate:]
gameRecord.game.bundleID
AchievementPointsEntry
-[GKAchievementPointsEntryCacheObject updateWithServerRepresentation:]
-[GKAchievementPointsEntryCacheObject internalRepresentation]
gameRecord
T@"GKGameRecordCacheObject",&,D,N
TurnBasedSession
exchanges
participants
Active
Invited
-[GKTurnBasedSessionCacheObject gameData]
-[GKTurnBasedSessionCacheObject deleteGameData]
Deleted game data: %@
-[GKTurnBasedSessionCacheObject expireGameData]
-[GKTurnBasedSessionCacheObject saveGameData:expirationDate:]
-[GKTurnBasedSessionCacheObject participantWithPlayerID:]
-[GKTurnBasedSessionCacheObject updateWithServerRepresentation:expirationDate:]
session-id
created-at
session-status
current-player-id
current-guest-id
last-turn-at
slots
match-id
taken-at
delete-at
localized-message
min-players
max-players
whose-turn
turn-on-slot
turn-number
submitted-by
exchangeID
request-id
game-state
game-state-version
GKTurnBasedSessionCacheObjectUniqueObjectIDLookupKey
GKCacheObject: sessionsWithSessionIDs
+[GKTurnBasedSessionCacheObject sessionsWithSessionIDs:inContext:]
@"GKTurnBasedSessionCacheObject"16@?0@"NSString"8
-[GKTurnBasedSessionCacheObject participantAtIndex:]
-[GKTurnBasedSessionCacheObject internalRepresentation]
creationDate
currentPlayerID
currentGuestID
lastTurnDate
localizableMessage
T@"NSData",&,D,N
unusedID
deletionDate
currentParticipant
turnNumber
lastTurnPlayerID
dataExpirationDate
matchDataVersion
TurnBasedParticipant
-[GKTurnBasedParticipantCacheObject updateWithServerRepresentation:]
invited-by
invite-message
player-status-code
player-status
guest-id
player-last-turn-at
player-timeout-at
timeoutDate
guestID
invitedBy
inviteMessage
outcome
session
T@"GKTurnBasedSessionCacheObject",&,D,N
TurnBasedExchange
-[GKTurnBasedExchangeCacheObject updateWithServerRepresentation:participants:]
sent-at
timeout-at
completed-at
from-slot
to-slots
replies
senderIndex
statusString
sendDate
completionDate
TurnBasedExchangeReply
-[GKTurnBasedExchangeReplyCacheObject updateWithServerRepresentation:]
slot
recipientIndex
replyDate
exchange
T@"GKTurnBasedExchangeCacheObject",&,D,N
TurnBasedSessionList
-[GKTurnBasedSessionListCacheObject sessions]
-[GKTurnBasedSessionListCacheObject internalRepresentation]
-[GKTurnBasedSessionListCacheObject updateWithServerRepresentation:expirationDate:]
sessions
+[GKTurnBasedSessionListCacheObject expireListsForSessionID:context:]
sessionID = %@
v32@?0@"GKTurnBasedSessionEntryCacheObject"8Q16^B24
TurnBasedSessionEntry
-[GKTurnBasedSessionEntryCacheObject internalRepresentation]
Invite
inviteID
PlayerToInvite
PlayerList
-[GKPlayerListCacheObject updateWithServerRepresentation:expirationDate:]
-[GKPlayerListCacheObject internalRepresentation]
@24@?0@"GKPlayerEntryCacheObject"8Q16
-[GKPlayerEntryCacheObject updateWithServerRepresentation:]
PlayerEntry
ChallengeList
-[GKChallengeListCacheObject updateWithServerRepresentation:expirationDate:]
challenge-id
GKChallengeCacheObjectUniqueObjectIDLookupKey
+[GKChallengeCacheObject challengesWithChallengeIDs:context:]
+[GKChallengeCacheObject challengeWithServerRepresentation:context:]
challenge-type
@"GKCacheObject"16@?0@"NSDictionary"8
issueDate
-[GKChallengeCacheObject internalRepresentation]
-[GKChallengeCacheObject orderedSetOfCompatibleBundleIDs]
-[GKChallengeCacheObject updateWithServerRepresentation:]
issue-timestamp
issuing-player-id
receiving-player-id
completion-timestamp
completion-status
compatible-games
Challenge
-[GKChallengeCacheObject hasDetails]
issuingPlayerID
receivingPlayerID
state
detailsExpirationDate
compatibleBundleIDs
ChallengeCompatibleBundleID
-[GKChallengeCompatibleBundleID internalRepresentation]
T@"GKChallengeCacheObject",&,D,N
ScoreChallenge
-[GKScoreChallengeCacheObject internalRepresentation]
-[GKScoreChallengeCacheObject updateWithServerRepresentation:]
leaderboard-id
leaderboard-group-id
value
formatted-score-value
context
leaderboard-category
formattedValue
AchievementChallenge
-[GKAchievementChallengeCacheObject hasDetails]
-[GKAchievementChallengeCacheObject internalRepresentation]
-[GKAchievementChallengeCacheObject updateWithServerRepresentation:]
achievement
achievement-group-id
achievement-description
CompatiblePlayerList
-[GKCompatiblePlayerListCacheObject updateWithServerRepresentation:expirationDate:]
reference
CompatiblePlayerEntry
<no stack frames>
loginDisabled
TB,N,V_loginDisabled
passwordChangeRequired
TB,N,V_passwordChangeRequired
passwordChangeURL
T@"NSURL",&,N,V_passwordChangeURL
shouldShowLinkAccountsUI
TB,N,V_shouldShowLinkAccountsUI
alertTitle
T@"NSString",&,N,V_alertTitle
alertMessage
T@"NSString",&,N,V_alertMessage
lastPersonalizationVersionDisplayed
T@"NSString",&,N,V_lastPersonalizationVersionDisplayed
lastPrivacyNoticeVersionDisplayed
TQ,N,V_lastPrivacyNoticeVersionDisplayed
com.apple.GameKit
General
Error
Match
Daemon
Cache
Perf
HTTP
Hosted
Dispatch
Developer
Trace
Account
Account Error
Default
stack-traces
<no stack stored for identifer>
GKActivity
activity:%@
mode
TI,N,V_mode
parent
T@"NSObject<OS_os_activity>",&,N,V_parent
T@"NSObject<OS_os_activity>",&,N,V_activity
<not available>
os_activity
<not available> %@
%s %+ld
<redacted>
<%@ %p %@ %@>
environmentName
connectionPortName
com.apple.gamed.clientQueue
com.apple.GameKit.GKDataRequestManager.push
com.apple.GameKit.GKDataRequestManager.sync
%@ (dispatch_get_current_queue() != queue)
[%s (%s:%d)]
%s invoked on the same queue("%s"), would deadlock at %@
-[GKDataRequestManager performSync:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKDataRequestManager.m
gamed - init
com.apple.gamed
com.apple.com.apple.GameKit.GKDataRequestManager.natType
GKNetworkReachabilityChangedNotification
updateQuickItems:forBundleID was called with no bundleID. We shouldn't see null bundle ID: %@
shouldAddQuickActions[%@] = %@
v16@?0@"NSData"8
v32@?0@"GKQuickAction"8Q16^B24
com.apple.gamecenter.GameCenterUIService
    addingQuickAction[%@]: %@ - image: %p[%@]
v16@?0@"SBSApplicationShortcutServiceFetchResult"8
v32@?0@"NSString"8@"NSArray"16^B24
v16@?0@"NSArray"8
processing quickAction: %@
refreshContents -> updateQuickActions: %@
gamed - finishStartup
%s elapsed seconds:%g
standardUserDefaults
gkSharedPrefrences
finishStartupEnvironment
finishStartupURLCache
finishStartupPushToken
finishStartupNotifications
finishStartupQuickActions
Installing language change notification
finishStartupMoreNotifications
finishStartup
Received store bag did change notification
Updating connectivity and push environment
Clearing gamed topic for %@
prod
Enabling gamed topic for %@
Enabling topic (%@) for %@
connection: %@ publicToken: %@
Clearing topics for prod %@
Clearing topics for dev %@
Resetting environment
Could not get client for pid (%d)
accepted client connection (pid:%d, bundleID:%@ with entitlements:%@
Connection (%@) to client (%@) INTERRUPTED.
Connection (%@) to client (%@) INVALID.
acceptConnection
Received NAT type %d
GKDataRequestManager: getValidNATTypeWithHandler:
Changing push environment from %d to %d
pushToken: %@ activePushEnvironment: %d
default pushEnvironment = %d
gk-apns-env
using bag pushEnvironment %@ (%d)
%@ (_actualCurrentQueue == [[self class] syncQueue])
[%s (%s:%d)]
%s invoked on the wrong queue (got:%s expected:%s) at %@
-[GKDataRequestManager updateActivePushEnvironment]_block_invoke
no apns environment in bag, error = %@
CommNAT Settings:%@
-[GKDataRequestManager loadConnectivitySettingsAndStartNATObserver]_block_invoke
NO CommNAT settings in bag, error = %@
v24@?0@"GKResource"8@"NSError"16
GKApplicationStatePIDKey
appState for client %@ changed from %d to %d -- userinfo = %@
GKDataRequestManager: loadLocalizedGameNameForBundleID
GKDataRequestManager: gameCenterDidBecomeRestricted
Processing incoming Messages invite data dictionary: %@
Got bulletins from invite data : %@
GKLaunchApplicationWithIdentifier: %@
openURL: %@
GKDataRequestManager: connection:didReceivePublicToken:
GKDataRequestManager: connection:didReceiveIncomingMessage:
Received push: %@
received push for topic %@, userInfo = %@
com.apple.icloud-container.
Cloud Tournament error updating tournament cache from push, %@
Cloud Tournament success updating cache from push.
Cloud Game Session Cache Failed to update. Error: %@
Cloud Game Session Cache Updated!
GKDataRequestManager: PUSH FAILED: unknown topic
PUSH FAILED: Unknown topic (%@)
processMessage
GKDataRequestManager: endTransaction:
GKDataRequestManager: beginTransaction:
com.apple.gamed.%@
GKDataRequestManager: Forced termination
Forced termination. Goodbye.
com.apple.gamecenter.statsQueue
com.apple.gamecenter.ratingsQueue
receivesMemoryWarnings
TB,N,V_receivesMemoryWarnings
apsConnection
T@"APSConnection",&,N,V_apsConnection
pushConnectionProd
T@"APSConnection",&,N,V_pushConnectionProd
pushConnectionDev
T@"APSConnection",&,N,V_pushConnectionDev
activePushConnection
T@"APSConnection",R,D,N
reachability
T@"GKReachability",&,N,V_reachability
transactionBag
T@"NSMutableDictionary",&,N,V_transactionBag
transactionCounts
T@"NSCountedSet",&,N,V_transactionCounts
applicationShortcutService
T@"SBSApplicationShortcutService",&,N,V_applicationShortcutService
applicationStateMonitor
T@"GKApplicationStateMonitor",&,N,V_applicationStateMonitor
natType
Ti,V_natType
currentEnvironment
Tq,R,V_currentEnvironment
activePushEnvironment
Tq,V_activePushEnvironment
pushToken
T@"NSData",&,V_pushToken
preferredEnvironment
Tq,R,N
authenticatingWithSettingsBundleID
T@"NSString",&,V_authenticatingWithSettingsBundleID
nearbyQueryLastCheckDate
T@"NSDate",&,V_nearbyQueryLastCheckDate
nearbyQueryAllowance
Td,V_nearbyQueryAllowance
GKLanguageObserver
Terminating due to language change notification
com.apple.language.changed
GKApplicationObserver
Applications changed.
listeners
T@"NSHashTable",&,N,V_listeners
supportedProtocols
T@"NSMutableArray",&,N,V_supportedProtocols
shouldQueue
TB,N,V_shouldQueue
queuedEvents
T@"NSMutableArray",&,N,V_queuedEvents
Asked to read friend requests for more than a single player. This is not supported.
resources
listReader
T@"GKPlayerListReader",&,N,V_listReader
        SELECT %@         FROM players         INNER JOIN player_relationships ON (players.player_id = player_relationships.player_id AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s))         WHERE EXISTS             (SELECT 1             FROM player_relationships             WHERE familiarity = %s                 AND player_relationships.player_id = players.player_id                 AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s))
        SELECT %@         FROM players         LEFT OUTER JOIN player_relationships ON (players.player_id = player_relationships.player_id AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s))         WHERE EXISTS             (SELECT 1             FROM player_relationships             WHERE familiarity = %s                 AND player_relationships.player_id = players.player_id                 AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s))
:relativeToPlayerGCID
:playerGCID
    SELECT %@ FROM players     WHERE player_gcid = %s
resourceID
%@ is being asked to get friends for multiple players. This is not currently supported.
v24@?0@"NSSet"8@"NSError"16
shouldFilter
TB,N,V_shouldFilter
player_gcid
friends_expiration_date
Error obtaining player historical data for all tournaments associated with %@ in game %@: %@
Error submitting score for tournament %@ and player %@: %@
Error submitting periodic scoring pattern for tournament %@ and player %@: %@
Error creating custom tournament for %@: %@
Error adding invitees with owner %@ to tournament %@: %@
Error removing invitees with owner %@ from tournament %@: %@
Error adding creator %@ for tournament %@: %@
Error removing creator %@ for tournament %@: %@
Error local player %@ accepting invitation for tournament %@: %@
Error local player %@ declining invitation for tournament %@: %@
Error resigning local player %@ from tournament %@: %@
Error beginning play in game session for local player %@ in tournament %@: %@
Error resuming play in game session for local player %@ in tournament %@: %@
Error getting friend count in tournament %@: %@
Error getting total player count in tournament %@: %@
Error getting data for local player %@ in tournament %@: %@
Error loading participants for tournament %@: %@
Error getting tournament state for tournament %@: %@
Error registering local player %@ in tournament %@: %@
Error loading tournament definitions: %@
Error loading tournament definition for definition ID %@: %@
Error obtaining list of tournaments using predicate (%@) for game %@: %@
Error getting share URL for custom tournament %@
getAcceptedGameInvite
GKTournamentService - Error getting accepted custom tournament %@
Error obtaining tournament for id %@: %@
Ignoring to reset tournament data on the server
Error removing custom tournament %@
GKBulletinController+Common getBulletinsOfType:
GKBulletinController+Common bulletinQueue
com.apple.gamed.GKBulletinController.file.queue
GKBulletinController+Common bulletinStorageFilePathForEnvironment:
Bulletins-Sandbox.bulletins
Bulletins.bulletins
GKBulletinController+Common clearSavedBulletins
.doomed
Removing bulletin store "%@".
Failed to remove delayed requests store "%@". ERROR: %@
Failed to move delayed requests store "%@" to "%@". ERROR: %@
GKBulletinController+Common updateSavedBulletins
GKBulletinController+Common: updateSavedBulletins - Writing Bulletin Store
writing bulletin store "%@".
GKBulletinController+Common updateSavedBulletins - Failed to write bulletin store
Failed to write bulletin store at: "%@" with error:%@
GKBulletinController+Common loadBulletins
Reading bulletin store "%@".
GKGameInviteBulletinMultiplayerTurnBased
GKPlayerTurnTurnBasedMultiplayerBulletin
GKCompletedGameTurnBasedMultiplayerBulletinBased
GKUpdateTurnCountTurnBasedMultiplayerBulletin
GKClearTurnBasedMultiplayerBulletin
GKMatchChangedTurnBasedMultiplayerBulletin
GKRequestedExchangeTurnBasedMultiplayerBulletin
GKCompletedExchangeTurnBasedMultiplayerBulletin
GKCanceledExchangeTurnBasedMultiplayerBulletin
GKTurnReminderTurnBasedMultiplayerBulletin
GKBulletinChallengeReceive
GKBulletinChallengeComplete
GKBulletinMultiplayerTurnBasedInvite
GKBulletinMultiplayerTurnBasedTurn
GKBulletinMultiplayerTurnBasedCompleted
GKBulletinMultiplayerTurnBasedTurnCount
GKBulletinMultiplayerTurnBasedClear
GKBulletinMultiplayerTurnBasedMatchChanged
GKBulletinMultiplayerTurnBasedExchangeRequested
GKBulletinMultiplayerTurnBasedExchangeCompleted
GKBulletinMultiplayerTurnBasedExchangeCanceled
GKBulletinMultiplayerTurnBasedReminder
GKBulletinMultiplayerInviteInitiate
GKBulletinMultiplayerInviteAccept
GKBulletinMultiplayerInviteDecline
GKBulletinMultiplayerInviteCancel
GKFriendRequestReceivedBulletin
GKFriendRequestBulletin
GKFriendRequestAcceptedBulletin
GKFriendRequestCancelBulletin
error:%@ while decoding result archive in %@
No result after unarchiving file at "%@".
GKBulletinController+Common clearTurnBasedBulletinsForMatchID:
v32@?0@"NSString"8@"GKTurnBasedMultiplayerBulletin"16^B24
GKBulletinController+Common clearChallengeBulletinsForChallengeID:
v32@?0@"NSString"8@"GKChallengeBulletin"16^B24
com.apple.gamed.note
com.apple.gamecenter
com.apple.gamecenterctl
com.apple.purplebuddy
com.apple.Accounts
com.apple.Preferences
com.apple.preferences.internetaccounts.remoteservice
com.apple.gamecenter.GameCenterUIService.GameCenterMessageExtension
com.apple.GameCenterUI.GameCenterDashboardExtension
com.apple.GameCenterUI.GameCenterMatchmakerExtension
com.apple.GameCenterUI.GameCenterTurnBasedMatchmakerExtension
com.apple.GameCenterUI.GameCenterChallengeIssueExtension
com.apple.GameCenterUI.GameCenterFriendRequestExtension
com.apple.GameCenterUI.GameCenterAuthenticateExtension
com.apple.GameCenterUI.GameCenterTournamentExtension
com.apple.TVSettings
com.apple.gamecenter.TodayWidget
gamecenterctl
com.apple.springboard
com.apple.PineBoard
GKErrorInvalidRecipient
GKErrorUnderlyingErrors
x-gk-bundle-id
x-gk-bundle-version
x-gk-short-bundle-version
alert
gk-account-setup-page
gk-account-authorize
gk-account-edit-page
gk-report-concern-page
gk-password-change
gk-account-authorize-ui
gk-profile-edit-ui
gk-report-concern-ui
gk-password-change-ui
gk-link-accounts-ui
gk-terms-url-ui
sandboxed
username
is-child
is-player-invitable
is-invitable
game-scoped-player-id
team-scoped-player-id
avatar-type
is-friend
default-alias
player-descriptor
game-descriptor
gameMetadata
apple-id
pending-image-approval
last-seen-timestamp
num-friends
num-games-played
num-achievements
achievement-points
last-played-adam-id
friend-level
num-common-friends
num-common-games
GKPushTokenKeyV2
GKActiveEnvironmentKeyV2
GKPushEnvironmentKeyV2
GKLastProtocolVersionUsedKeyV2
GKLeaderboardTimeScopeKey
aliases
player-ids
twitter-screennames
thunderhill-ids
phone-numbers
messenger-ids
requests
alias-results
player-id-results
email-address-results
twitter-screenname-results
thunderhill-results
phonenumber-results
messenger-results
invite-id
originatorPlayer
server-based
client-data
push-token
isReinvite
match-rid
Identifier
ShareURL
Container
DeviceType
LocalizableMessage
SenderID
SenderName
UserMessage
Data
SenderiCloudID
PlayerID
GKAcceptedGameInvite
GKInviteeAcceptedGameInvite
GKInviteeDeclinedGameInvite
GKInviterCancelledGameInvite
GKRelayPushNotification
GKAcceptedTurnBasedGameEvent
GKInternalTurnBasedGameEvent
GKPlayersToInviteNotification
GKGameInstalledGamesDidChangeNotification
GKBagKey
gk-get-friend-player-ids
gk-find-friends-meta
gk-get-games-played-descriptor
gk-get-leaderboard
gk-get-achievement
GKPhotosChangedKey
gk-commnat-main0
gk-commnat-main1
gk-commnat-cohort
gk-cdx
gk-p2p-ice-timeout
gk-p2p-nat-type-timeout
gk-p2p-blob-size-max
gk-player-id-hash-mod
gk-player-id-hash-add
gk-sap-setup
gk-sap-setup-cert-url
gk-sap-version
gk-sap-signed-response-include-patterns
gk-sap-signed-response-exclude-patterns
gk-gksession-rate-limiting
gk-find-games-v3
ds-iforgot-url
https://iforgot.apple.com
gk-disable-send-contacts
gk-profile-friend-finder
#predicate
gk-store-url-query-params-v3
invite
top-games
friends-games
player-games
game-recommendations
challenges
gk-max-players-p2p
gk-max-players-hosted
gk-max-players-turn-based
gk-recent-match-count
gk-recent-match-time-limit-seconds
GKHTTPShouldUsePipelining
gk-tb-max-game-state-size-bytes
gk-tb-max-exch-data-size-bytes
gk-tb-max-exch-per-player
participant-index
participant-status
gk-achievements-throttle-threshold
gk-scores-throttle-threshold
gk-friends-fallback
CFBundleVersion
bundle:%@
(ad-hoc build)
GKRepositoryVersion
repo:%@
 no versions found
<no info plist for %@>
%@/System/Library/Frameworks/GameKit.framework
%@/System/Library/PrivateFrameworks/GameCenterFoundation.framework
%@/System/Library/PrivateFrameworks/GameCenterUI.framework
/System/iOSSupport/System/Library/PrivateFrameworks/GameCenterUI.framework
%@/Applications/GameCenterUIService.app
%@/System/Library/UserNotifications/Bundles/com.apple.gamecenter.bundle
NOW_TIME
RELATIVE_SECONDS_AGO_FORMAT
RELATIVE_MINUTES_AGO_FORMAT
RELATIVE_HOURS_AGO_FORMAT
v16@?0@"NSNotification"8
EEEEjmm
EEEjmm
MMMdy
MM/dd/yyyy HH:mm:ss.SSS
GKLocaleSyncObject
%@ (formatStringChars[length] == 0)
[%s (%s:%d)]
NSString * _Nonnull GKFormatNetworkStringWithArguments(NSString *__strong _Nonnull, NSArray *__strong _Nullable)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKUtils.m
key: %@ not defined in keymap: %@
%@%@=%@
com.apple.gamed.networkReplyHandler
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v28@?0^{UBiDi=}8i16^S20
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
ELLIPSIS_FOR_TRUNCATION
PERCENT_TOP_FORMAT
PERCENT_BOTTOM_FORMAT
PARENTHETICAL_FORMAT
RANK_WITH_SYMBOL_FORMAT
RANK_1_TOP_BOTTOM_2_FORMAT
SCORE_1_TOP_BOTTOM_2_FORMAT
v24@?0Q8^B16
UIApplicationDidEnterBackgroundNotification
%@ (sName != nil)
[%s (%s:%d)]
dlerror says:%s
NSString * _Nonnull GKGetApplicationDidEnterBackgroundNotificationName(void)_block_invoke
%@ (sName != ((void *)0))
[%s (%s:%d)]
NSString * _Nonnull GKGetApplicationDidEnterBackgroundNotificationName(void)
UIApplicationWillEnterForegroundNotification
NSString * _Nonnull GKGetApplicationWillEnterForegroundNotificationName(void)_block_invoke
NSString * _Nonnull GKGetApplicationWillEnterForegroundNotificationName(void)
UIApplicationWillTerminateNotification
NSString * _Nonnull GKGetApplicationWillTerminateNotificationName(void)_block_invoke
NSString * _Nonnull GKGetApplicationWillTerminateNotificationName(void)
unexpected class %@ encountered during property list deserialization to %@. will return a nil result
%@<%@ %p> {
(null)
%@    %@ : %@
%@<%@ %p> {(
%@    %@
%@)}
    
self.
/System/Library/Frameworks/UIKit.framework/UIKit
%@ (handle != nil)
[%s (%s:%d)]
void *GKdlopenHandleForUIKitFramework(void)_block_invoke
                           INSERT INTO requests (                           adam_id,                            bundle_id,                            bundle_version,                            external_version,                            player_gcid,                            time_stamp)                            VALUES (%s, %s, %s, %s, %s, %s)
:adam_id
:bundle_id
:bundle_version
:external_version
:time_stamp
                           INSERT INTO ratings (                           request_id,                            rating,                            payload)                           VALUES (%s, %s, %s);
:request_id
:rating
:payload
databaseConnection
T@"GKDatabaseConnection",R,N
gameDescriptor
T@"NSDictionary",&,N,V_gameDescriptor
<global>
com.apple.gamed.per-player-context
@8@?0
Data-Sandbox
%@ (_actualCurrentQueue == [self cacheFileQueue])
[%s (%s:%d)]
+[GKClientProxy(Cache) cacheDirectoryURLForClient:player:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKClientProxy+Cache.m
global
%@-%@.gcdata
FAILED to create cache directory %@ %@
Created cache directory %@
database.sqlite3
closing database for the player cache
Deleting cache dir %@
Unable to remove cache directory %@ : %@
Deleting image cache directory %@
Error removing images cache directory: %@
Resetting all caches
v24@?0@"GKClientProxy"8^B16
GKCentralCache
momd
Invalidating store front dependent objects
v32@?0@"GKGameCacheObject"8Q16^B24
com.apple.gamed.GKClientProxy.cache.file.queue
+[GKClientProxy(Cache) _newManagedObjectContextForPlayer:]
addPersistentStoreInit
cache_size
journal_mode
Setting up cache for client %@ at %@
Error adding persistent store at %@ : %@
DELETING PREVIOUS CACHE
Error removing cache file at %@ : %@
addPersistentStore
FATAL: Failed to add persistent store at %@ : %@
Creating managed object context with persistent store %@
Unable to remove persistent store while removing cache for player due to error:%@
resourceManager
T@"GKResourceManager",R,&,D,N
cacheQueue
T@"NSObject<OS_dispatch_queue>",R,D,N
GKMultiplayerBulletin shouldProcessNotification
GKMultiplayerBulletin initWithPushNotification:
GKMultiplayerBulletin loadLocalizedGameNameForBundleID: handler:
loadLocalizedGameNameForBundleID was called with no handler - returning -bundleID was:%@
loadLocalizedGameNameForBundleID (%@) - Error getting localized game name: %@
GKMultiplayerBulletin setGameInviteMessage:
GAME_INVITE_NOTIFICATION_1_GAME_2_INIVITER_3_MESSAGE_STORE_FORMAT
GAME_INVITE_NOTIFICATION_1_GAME_2_INIVITER_STORE_FORMAT
GAME_INVITE_NOTIFICATION_1_GAME_2_INIVITER_3_MESSAGE_FORMAT
GAME_INVITE_NOTIFICATION_1_GAME_2_INIVITER_FORMAT
GKMultiplayerBulletin customInviteSoundPathForBundleID:
friends
games
games/store
friendRequest
gamecenter
http
https
itms-gc
itms-gcs
static.gc.apple.com
sandbox.gc.apple.com
td1.apple.com
z2r0y.apple.com
td2.apple.com
df6ed.apple.com
td3.apple.com
cp7vi.apple.com
td4.apple.com
gz8rm.apple.com
com.apple.demo-settings
InternalBuild
GKStoreBagEnvironment
GKCustomStoreBagURL
GKAllowUnsignedBag
GKUseTestProtocols
GKForceDefaultNickname
GKMescalSetupRetries
GKLoginDisabledThreshold
GKOperationTimout
GKOperationRetryDelay
GKOperationRetryCount
GKDebugRequestTimeout
GKNotificationCenter
GKNotificationBadges
GKNotificationSounds
GKNotificationAlerts
GKVerboseLogging
GKGeneralLogFilter
GKErrorLogFilter
GKMatchMakingLogFilter
GKDaemonLogFilter
GKCacheLogFilter
GKPerfLogFilter
GKHTTPLogFilter
GKHostedLogFilter
GKDeveloperLogFilter
GKDispatchLogFilter
GKTraceLogFilter
GKTestRunID
GKForceRelay
GKPreemptiveRelay
GKPushEnvironment
GKHTTPPipelining
GKRestrictToAutomatch
com.apple.gamecenter.recentnumberofplayers
GKMaxPlayersP2P
GKMaxPlayersHosted
GKMaxPlayersTurnBased
GKMaxGameStateSizeTurnBased
GKExchangeDataMaximumSize
GKExchangeMaxPerPlayer
GKInternalHeader
GKTerminationInterval
GKGarbageCollectionInterval
GKMinimumCacheTTL
GKCacheTTLOverride
Production
Sandbox
TD1x
TD2x
TD3x
TD4x
unknown (%d)
GKAnnotateImageUsage
GKTrackAtlasUsage
GKUseTestGameIcons
GKLinkICloud
GKLinkTwitter
GKLinkFacebook
IncomingMessageAlertFiltration
%@-%@
GKAllowNearbyMultiplayer
GKShouldAddGameCenterToAddressBook
GKMaxRecentPlayersCount
GKMaxRecentPlayersTime
maxDefaultPlayersP2P
maxDefaultPlayersHosted
maxDefaultPlayersTurnBased
maxDefaultGameStateSizeTurnBased
exchangeDataDefaultMaximumSize
exchangeDefaultMaxInitiatedExchangesPerPlayer
GKUseClipGesture
com.apple.VideoConference
com.apple.persistentconnection
VRTraceErrorLogLevel
errorLogLevel
VRTraceLogToFile
VRTraceMonitorNSLog
VRTraceStreamOutputFormat
PCWriteLogs
PCLoggingSettingsDidChangeNotification
GameKit
com.apple.logging
GameKit.AllCategories
GKTournamentsDebuggingEnabled
GKTournamentsDemoModeEnabled
GKTournamentMaxSimulatedPlayers
GKTournamentMaxSimulatedFriends
GKTournamentState
GKTournamentParticipantState
GKTournamentPlayers
GKTournamentReplays
GKTournamentDuration
GKTournamentStartDate
GKTournamentEndDate
GKTournamentMinPlayers
GKTournamentMaxPlayers
GKTournamentMaxReplays
GKTournamentAutoDuration
GKTournamentCustomMinPlayers
GKTournamentCustomMaxPlayers
GKTournamentCustomMaxReplays
GKTournamentCustomDuration
GKTournamentUIAppearanceStyle
GKTournamentCreationMethod
GKRestrictToTournamentPlayers
GKTournamentServer
shared
T@"GKPreferences",R
_shouldSynchronizeOnNextRead
TB,N,V_shouldSynchronizeOnNextRead
overrideValues
T@"NSDictionary",C,V_overrideValues
Tq,N
storeBagURL
mescalSetupRetries
TQ,N
loginDisableThreshold
allowUnsignedBag
TB,N
useTestProtocols
forceDefaultNickname
terminationInterval
Td,N
garbageCollectionInterval
minimumCacheTTL
cacheTTLOverride
operationTimeout
operationRetryDelay
operationRetryCount
debugRequestTimeout
notificationCenterEnabled
TB,N,GisNotificationCenterEnabled
notificationBadgesEnabled
notificationSoundsEnabled
notificationAlertsEnabled
verboseLogging
logFilter
TI,N
comprehensiveLoggingEnabled
TB,N,GisComprehensiveLoggingEnabled
testRunID
T@"NSString",C,N
clipGestureEnabled
TB,N,GisClipGestureEnabled
forceRelay
preemptiveRelay
pushEnvironment
pipeliningSetting
restrictToAutomatch
recentNumberOfPlayers
maxPlayersP2P
maxPlayersHosted
maxPlayersTurnBased
maxGameStateSizeTurnBased
exchangeDataMaximumSize
exchangeMaxInitiatedExchangesPerPlayer
HTTPShouldUsePipelining
TQ,R,N
useInternalHeader
webKitInspectElementEnabled
TB,N,GisWebKitInspectElementEnabled,V_webKitInspectElementEnabled
shouldAnnotateImageUsage
shouldTrackAtlasImageUsage
shouldUseTestIcons
shouldLinkPlayerToICloud
shouldLinkPlayerToTwitter
shouldLinkPlayerToFacebook
shouldDisallowInvitesFromStrangers
shouldAllowNearbyMultiplayer
shouldAddPlayerInfoToAddressBook
maxRecentPlayersCount
maxRecentPlayersTime
tournamentsDebuggingEnabled
tournamentParticipantState
tournamentPlayers
tournamentReplays
tournamentDuration
tournamentStartDate
tournamentMinPlayers
tournamentMaxPlayers
tournamentMaxReplays
tournamentAutoDuration
tournamentCustomMinPlayers
tournamentCustomMaxPlayers
tournamentCustomMaxReplays
tournamentCustomDuration
tournamentUIAppearanceStyle
tournamentCreationMethod
restrictToTournamentPlayers
tournamentServer
tournamentDemoModeEnabled
tournamentMaxSimulatedPlayers
tournamentMaxSimulatedFriends
%@    %@.%@ : %@
    %@%@ : <%@:%p> {
%@        %@ : %@
    %@}
%@    
, %@
 : (null)
%@ ([self isKindOfClass:[other class]])
[%s (%s:%d)]
%@ is not a %@
-[GKInternalRepresentation mergePropertiesFrom:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKInternalRepresentation.m
T@"BKSApplicationStateMonitor",&,N,V_applicationStateMonitor
handler
T@?,C,N
v24@?0@"LSBundleProxy"8^B16
GKPlayerChallengesTTL
GKPlayerFriendRequestsTTL
GKPlayerLastPlayedGameRowID
            SELECT %@            FROM players                 LEFT OUTER JOIN (SELECT COUNT(*) AS number_of_challenges, receiving_player_id FROM challenges WHERE state = %d GROUP BY receiving_player_id) challenge_sum ON (challenge_sum.receiving_player_id = players.player_id)                 LEFT OUTER JOIN (SELECT COUNT(*) AS number_of_requests, relative_to_player_id FROM player_relationships WHERE familiarity = %s GROUP BY relative_to_player_id) request_sum ON (request_sum.relative_to_player_id = players.player_id)             WHERE player_gcid = %s;
:requestFamiliarity
            SELECT %@             FROM player_emails             WHERE player_id = %s;
:playerRowID
players.player_id
image_64
image_128
image_256
image_512
number_of_friends
number_of_games
number_of_achievements
number_of_achievement_points
available_pieces
last_name
first_name
friend_level
friend_bi_directional
friend_played_with
friend_played_nearby
last_played_date
last_played_game_id
account_name
facebook_user_id
icloud_user_id
number_of_turns
challenges_expiration_date
friend_requests_expiration_date
expiration_date
number_of_challenges
number_of_requests
photo_pending
photo_pending_expiration_date
purple_buddy_account
default_nickname
address_sha1
address_prefix
%s, 
biDirectional
playedWith
Concrete subclasses must override +[GKServer interfaceProtocol].
+[GKServiceInterface interfaceProtocol]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKServiceInterface.m
avatars__
Library
Caches
error while trying to create the cache root directory at path:%@ due to:%@
Images
TurnBasedSessions
Logs
error while trying to create the support root directory at:%@ due to %@
Cache-Control
max-age
-- Xattr: %@ -- count requested %ld is greater than actual byte count %ld so we're truncating. path = %@
gamekit-cache-expiration
GKRefreshSeedKey
GKBulletinAction initWithCoder:
info
isDestructive
inAlertView
inBannerView
GKBulletinAction encodeWithCoder:
GKBulletinAction actionDictionary
LaunchApp
LaunchURL
NoAction
NO TYPE
title:%@
type:%@
info:%@
isDestructive:%@
inBannerView:%@
inAlertView:%@
Tq,V_type
T@"NSString",&,V_title
T@"NSString",&,V_info
TB,V_isDestructive
actionDictionary
T@"NSDictionary",R
TB,V_inAlertView
TB,V_inBannerView
%d.%d.%d.%d.%d.%d.%d.%d.%d
playerInternal
gameBundleID
timeScope
friendsOnly
T@"GKPlayerInternal",C,N,V_playerInternal
T@"NSString",C,N,V_gameBundleID
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_groupIdentifier
TB,N,V_friendsOnly
Tq,N,V_timeScope
prefetch
TB,N,GisPrefetch,V_prefetch
location
length
range
T{_NSRange=QQ},N,V_range
playerInternals
@"GKPlayerInternal"24@?0@"GKPlayerInternal"8Q16
T@"NSArray",C,N,V_playerInternals
com.apple.gamecenter.achievement.points
GameKit-%@
Unknown
GameCenter-%1$@/%2$@ (%3$@)
emitter
T@"GKEventEmitter<GKLockStatusObserver>",&,N,V_emitter
deviceName
T@"NSString",&,N,V_deviceName
udid
T@"NSString",R,N
osVersion
T@"NSString",R,N,V_osVersion
buildVersion
T@"NSString",R,N,V_buildVersion
gameKitVersion
T@"NSString",R,N,V_gameKitVersion
gameKitAvailable
TB,R,N,GisGameKitAvailable,V_gameKitAvailable
com.apple.gamed.resourceManagerSync
GKResourceManager: _registerForResources:
%@ (_actualCurrentQueue == _syncQueue)
[%s (%s:%d)]
-[GKResourceManager _registerForResources:group:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKResourceManager.m
v32@?0@"GKResourceIdentifier"8Q16^B24
Transaction(%@) registered for resources %@
-[GKResourceManager _deregisterForResources:group:]
GKResourceManager: _remainingResourceAfterJoiningResources:
-[GKResourceManager _remainingResourceAfterJoiningResources:group:queue:]
Avoiding redundant load of %@ for group %@ waiting for group %@
GKResourceManager: group: joinResources: queue:
Transaction(%@) completed for resources %@
-[GKResourceManager _queueForResource:]
GKResourceManager: writeResources: group: queue:
%@ (block != ((void *)0))
[%s (%s:%d)]
-[GKResourceManager writeResources:group:queue:block:]
%s < %@
GKResourceManager
%@ (queue != resourceQueue)
[%s (%s:%d)]
Writes must be executed on a different queue(%@) than the %@ resource queue(%@)
-[GKResourceManager writeResources:group:queue:block:]_block_invoke_4
write resource (%@) READY
write resource (%@) WAITING
write resource (%@) FREE
write resource (%@) finished
GKResourceManager: readResources: group: queue:
-[GKResourceManager readResources:group:queue:block:]
Reads must be executed on a different queue than the resource queue
Reads must be executed on a different queue(%@) than the %@ resource queue(%@)
-[GKResourceManager readResources:group:queue:block:]_block_invoke
read resource (%@) READY
read resource (%@) WAITING
read resource (%@) FREE
read resource (%@) finished
%@ (0 < [keys count])
[%s (%s:%d)]
A GKResourceIdentifier must have at least one key
-[GKResourceIdentifier initWithKeys:]
com.apple.gamed.resourceQueue
%@ keys: %@
keys
T@"NSArray",&,N,V_keys
queueName
T@"NSString",R,N,V_queueName
semaphore
T@"NSObject<OS_dispatch_semaphore>",R,N,V_semaphore
%@ is being asked to submit a delayed request for multiple players:%@. This is not currently supported. Bag key: %@
GKDelayedSetPhotoNetworkWriter: starting avatar image upload process.
image-data
file-size
Error getting upload URL for profile image %@
upload-url
image/png
content-type
POST
content-encoding
gzip
Upload avatar image data: Received HTTP Response
REQUEST {
header: %@
body: %@}
RESPONSE (error:%@) {
status: (%@) %@
header: %@
body: %@ }
singleFile
Error creating dictionary from profile image upload response's data %@
Error uploading profile image data to url:  %@, status code:  %@, error:  %@
v32@?0@"NSURLResponse"8@"NSData"16@"NSError"24
asset-metadata
gk-set-profile-image-metadata
Error uploading profile image metadata %@
GKDelayedSetPhotoNetworkWriter: Successfully uploaded player avatar image and metadata to server for %@
bagKey
T@"NSString",&,N,V_bagKey
T@"GKDataTransport",&,N,V_transport
T@"NSNumber",C,N,V_avatarType
eQd5mlz0BN0amTp/2ccMoA
com.apple.gamed.GKQuickActionService.file.queue
GKQuickActionService storageFilePathForEnvironment:
QuickActionBundleIdentifiers.quickactions
GKQuickActionService clearSavedQuickActionData
Removing QuickAction bundleID store "%@".
Failed to remove QuickAction bundleID store "%@". ERROR: %@
Failed to move QuickAction bundleID store "%@" to "%@". ERROR: %@
GKQuickActionService updateQuickActionData
GKQuickActionService: updateQuickActionData - Writing quickActionData Store
writing quickActionData store "%@".
GKQuickActionService updateQuickActionData - Failed to archive quickActionData store due to error:%@
Failed to archive quickActionData at: "%@" with error:%@
GKQuickActionService loadQuickActionData
Reading quickActionData store "%@".
error while decoding QuickActionData archive:%@
Failed to read "%@".
q24@?0@"GKQuickAction"8@"GKQuickAction"16
GKQuickActionService sortQuickActionDictionary:
v32@?0^{NSMutableArray=#}8Q16^B24
GKQuickActionService loadGamesIntoDictionary: group:
loadGamesIntoDictionary: group: Failed to load games.bubbling up error: %@
v32@?0@"NSArray"8@"NSString"16@"NSError"24
GKQuickActionService loadChallengesIntoDictionary: group:
Challenge Missing bundleID: %@
loadChallengesIntoDictionary: group: No bundleID for challenge
v32@?0@"GKChallengeInternal"8Q16^B24
Error retrieving challenges for Quick Actions. Bubbling up error: %@
GKQuickActionService loadMultiplayerTurnsIntoDictionary: group:
Turn Based Match missing bundleID: %@
loadMultiplayerTurnsIntoDictionary: group: No bundleID for match
v32@?0@"GKTurnBasedMatchInternal"8Q16^B24
Error retrieving multiplayer Turns for Quick Actions.Bubbling up error: %@
GKQuickActionService loadMultiplayerInvitesIntoDictionary:
v32@?0@"GKRealTimeMultiplayerInitiateBulletin"8Q16^B24
GKQuickActionService quickActionsForBundleID: completionHandler:
GKQuickActionService allQuickActionsWithCompletionHandler:
signin status: %@ had a recent error date:%@ error: %@ 
not signed in - removing quickactions for keys: %@
quickActionBundleIdentifiers
T@"NSMutableSet",&,V_quickActionBundleIdentifiers
previousError
T@"NSError",&,V_previousError
dateOfPreviousError
T@"NSDate",&,V_dateOfPreviousError
_GKIMToolControllerTokenGamed
GKPrimaryCredentialDidChangeNotification
primaryCredentialCache
allCredentialsCache
com.apple.gamed.credentialController
GKLoginCancelled
object
v16@?0@8
the main account store attached to the account has changed.The notification is:%@
the email address attached to the account has changed.The notification is:%@
CRED: save credential (%@) start
CRED: save credential (%@) finished (error:%@)
v24@?0@"ACAccountStore"8@?<v@?@"NSError">16
CRED: set primary credential (%@) start
CRED: set primary credential (%@) finished (error:%@)
%s - cached all credentials: %@
-[GKPlayerCredentialController setPrimaryCredential:completionHandler:]_block_invoke
CRED: clear primary credential on other credential (%@) start
CRED: clear primary credential on other credential (%@) finished (error:%@)
got missing altDSID from IDMS
CRED: delete credential (%@) finished (error:%@)
v32@?0@"GKPlayerCredential"8Q16^B24
CRED: delete credential (%@) start
CRED: replace credential old:(%@) new:(%@) start
CRED: replace credential (%@) delete finished (error:%@)
CRED: replace credential (%@) save finished (error:%@)
%s - cached primary credential: %@
-[GKPlayerCredentialController loginStatusForCredential:]_block_invoke
v24@?0@"ACAccountStore"8@?<v@?@>16
-[GKPlayerCredentialController allCredentialsForEnvironment:]_block_invoke
-[GKPlayerCredentialController primaryCredentialForEnvironment:]_block_invoke
CRED: loginCancelledCount is %d
store
T@"ACAccountStore",&,N,V_store
T@"GKThreadsafeDictionary",&,N,V_primaryCredentialCache
T@"GKThreadsafeDictionary",&,N,V_allCredentialsCache
loginCancelledCount
Tq,V_loginCancelledCount
serverEnvironment
error while decoding GKProductionMachine archive:%@
TRANSFER PRE-OKEMO PLAYER username:%@ set primary
TRANSFER PRE-OKEMO -- no ACAccount credential found:%@
TRANSFER PRE-SUNDANCE PLAYER username:%@
GKAuthenticatedPlayerKeyV2
GKAuthenticatedTokenKeyV2
GKAuthenticatedTokenKey
GKAuthenticatedPlayerKey
TRANSFER PRE-SUNDANCE PLAYER AUTH: playerID:%@ token:%@
TRANSFER PRE-SUNDANCE: failed to set credential: %@
--> INCOMPLETE TRANSFER PRE-SUNDANCE playerID:%@ token:%@
GKLoginDisabledKey
GKHasAuthenticatedUserKey
GKHasAuthenticatedUserKeyV2
GKAuthenticatedPlayerKeyV3
GKAuthenticatedTokenKeyV3
Tq,N,V_loginCancelledCount
T@"NSString",&,N,V_accountName
Tq,N,V_serverEnvironment
GKAuthentication-Primary-%d
hostName
T@"NSString",&,N,V_hostName
error
T@"NSError",&,N,V_error
void ReachabilityCallback(SCNetworkReachabilityRef, SCNetworkReachabilityFlags, void *)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKReachability.m
<Unknown File>
info was NULL in ReachabilityCallback
info was wrong class in ReachabilityCallback
GKNetworkStatusKey
INSERT INTO requests (            player_gcid,             time_stamp)             VALUES (%s, %s);
INSERT INTO delete_photos (            request_id)             VALUES (%s);
DELETE FROM requests WHERE request_id = %s;
            SELECT request_id             FROM requests             INNER JOIN delete_photos USING (request_id)             WHERE player_gcid = %s;
%@ is being asked to write photos for multiple players. This is not currently supported.
INSERT INTO statuses (            request_id,             status)             VALUES (%s, %s);
            SELECT request_id             FROM requests                 INNER JOIN statuses USING (request_id)             WHERE player_gcid = %s;
%@ is being asked to write statuses for multiple players. This is not currently supported.
GKPlayerAvailablePieces
%@ hasn't implemented me
BEGIN
COMMIT
localPlayerGCID
T@"NSString",C,N,V_localPlayerGCID
T@"NSString",C,N,V_language
GKErrorDomain
GKServerErrorDomain
GKServerStatusCode
ERROR_CANCELED_DESCRIPTION
ERROR_COMMUNICATIONSFAILURE_DESCRIPTION
ERROR_USERDENIED_DESCRIPTION
ERROR_INVALIDCREDENTIALS_DESCRIPTION
ERROR_NOTAUTHENTICATED_DESCRIPTION
ERROR_AUTHENTICATIONINPROGRESS_DESCRIPTION
ERROR_INVALIDPLAYER_DESCRIPTION
ERROR_SCORENOTSET_DESCRIPTION
ERROR_PARENTALCONTROLSBLOCKED_DESCRIPTION
ERROR_MATCHREQUESTINVALID_DESCRIPTION
ERROR_MATCHNOTCONNECTED_DESCRIPTION
ERROR_UNDERAGE_DESCRIPTION
ERROR_GAMEUNRECOGNIZED_DESCRIPTION
GAME_CENTER_IS_NOT_SUPPORTED
ERROR_INVALIDPARAMETER_DESCRIPTION
ERROR_UNEXPECTEDCONNECTION_DESCRIPTION
ERROR_INVALID_CHALLENGE
ERROR_TBG_MATCH_DATA_TO_LARGE
ERROR_TBG_TOO_MANY_SESSIONS
ERROR_TBG_INVALID_PARTICIPANT
ERROR_TBG_INVALID_TURN
ERROR_TBG_INVALID_STATE
ERROR_INVITATIONS_DISABLED_DESCRIPTION
ERROR_PLAYERPHOTOFAILURE_DESCRIPTION
ERROR_UBIQUITY_CONTAINER_INVALID
RESTRICTED_TO_AUTOMATCH
ERROR_API_NOT_AVAILABLE
ERROR_UNKNOWN_DESCRIPTION
gk-get-friend-recommendations
recently-shown-player-ids
semantically-tagged-reason
%@ is being asked to get incoming friend recommendations for multiple players. This is not currently supported.
error while loading data for friend recommendations: %@
v24@?0@"NSArray"8@?<v@?@"NSDictionary"@"NSError">16
recentlyDisplayedPlayerIDs
T@"NSSet",&,N,V_recentlyDisplayedPlayerIDs
Tq,N,V_state
T@"NSString",&,V_rid
matches
T@"NSArray",&,V_matches
relayPushes
T@"NSArray",&,V_relayPushes
cdxTicket
T@"NSData",&,V_cdxTicket
matchingGroup
T@"GKDispatchGroup",V_matchingGroup
matchRequest
T@"GKMatchRequestInternal",&,V_matchRequest
serverRequest
T@"NSDictionary",&,V_serverRequest
sequence
Ti,R,V_sequence
com.apple.LaunchServices.ApplicationsChanged
prefs:root=GAMECENTER
prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE
gamekit
Application(%@) is not allowed to run in production
lsWorkspace
T@"LSApplicationWorkspace",&,N,V_lsWorkspace
iTunesMetadata.plist
itemId
softwareVersionExternalIdentifier
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
com.apple.iTunesStore.downloadInfo
gameCenterEnabled
lsProxy
T@"LSApplicationProxy",&,N,V_lsProxy
metadata
T@"NSDictionary",&,N,V_metadata
bundle
T@"NSBundle",R,&,N
T@"NSString",R,&,N
bundleShortVersion
T@"NSNumber",R,&,N
T@"NSDate",R,&,N
restricted
TB,R,N,GisRestricted
TB,R,N,GisGameCenterEnabled
installed
TB,R,N,GisInstalled
LSApplicationWorkspace
Unable to find class %s
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSApplicationProxy
SELECT %@     FROM requests     INNER JOIN remove_friend USING (request_id)     WHERE player_gcid = %s;
error:%@ while decoding removeFriend archive in %@
request_id
payload
initWithClient: is not the designated initialier for GKAuthenticationWrapperService, use initWithService:queue: instead.
-[GKAuthenticationWrapperService initWithClient:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKAuthenticationWrapperService.m
serviceForClient: is not a valid factory for GKAuthenticationWrapperService, use authenticationWrapperForService:queue: instead.
+[GKAuthenticationWrapperService serviceForClient:player:]
serviceForBundleID: is not a valid factory for GKAuthenticationWrapperService, use authenticationWrapperForService:queue: instead.
+[GKAuthenticationWrapperService serviceForBundleID:player:]
%@ ([_service conformsToProtocol:@protocol(GKAccountService)])
[%s (%s:%d)]
Wrapped service must conform to the GKAccountService protocol!
-[GKAuthenticationWrapperService authenticatePlayerWithExistingCredentialsWithHandler:]
wrapper generateIdentityVerificationSignatureWithHandler:
-[GKAuthenticationWrapperService generateIdentityVerificationSignatureWithHandler:]
-[GKAuthenticationWrapperService authenticationWasCancelled]
wrapper signOutPlayerWithHandler:
Wrapped service must conform to the GKAccountServicePrivate protocol!
-[GKAuthenticationWrapperService signOutPlayerWithHandler:]
wrapper setupAccountForParameters:handler:
%@ ([_service conformsToProtocol:@protocol(GKAccountServicePrivate)])
[%s (%s:%d)]
-[GKAuthenticationWrapperService setupAccountForParameters:handler:]
wrapper authenticateWithService:
v24@?0@"GKAuthenticateResponse"8@"NSError"16
wrapper app-init state not set, returning not-authenticated
AppInit state is not set, returning not-authenticated error
actuallyDoAuth
authenticate
-[GKAuthenticationWrapperService authenticatePlayerWithUsername:password:rawPassword:usingFastPath:displayAuthUI:handler:]
-[GKAuthenticationWrapperService authenticatePlayerWithUsername:password:rawPassword:altDSID:usingFastPath:handler:]
-[GKAuthenticationWrapperService authenticatePlayerWithUsername:password:handler:]
-[GKAuthenticationWrapperService validateAccountWithUsername:password:handler:]
-[GKAuthenticationWrapperService getAccountAuthTokenWithHandler:]
-[GKAuthenticationWrapperService isICloudAvailableWithHandler:]
-[GKAuthenticationWrapperService authenticationCancelled]
-[GKAuthenticationWrapperService resetCredentialsWithHandler:]
-[GKAuthenticationWrapperService setLastPrivacyNoticeVersionDisplayedForSignedInPlayer:]
-[GKAuthenticationWrapperService getLastPrivacyNoticeVersionDisplayedForSignedInPlayerWithHandler:]
-[GKAuthenticationWrapperService setLastPersonalizationVersionDisplayedForSignedInPlayer:]
-[GKAuthenticationWrapperService getLastPersonalizationVersionDisplayedForSignedInPlayerWithHandler:]
wrapper accountCreated:
-[GKAuthenticationWrapperService accountCreated:playerID:authenticationToken:alias:finished:handler:]
-[GKAuthenticationWrapperService accountCreated:playerID:authenticationToken:alias:altDSID:finished:handler:]
wrapper accountEdited:
-[GKAuthenticationWrapperService accountEdited:alias:firstName:lastName:handler:]
wrapper setLoginStatus:
-[GKAuthenticationWrapperService setLoginStatus:handler:]
GKNoSuchServiceException
Attempted to dispatch a selector which is not recognized by any service
selector
verifyAuthorized failed, we might be authenticating or authorizing: %@
receivingPlayer
issuingPlayer
goalText
gameTitle
resolvedBundleID
GKChallengeInvite: %@
v16@?0@"NSString"8
no bundleID found for challenge, causing us to display empty goal text
SCORE_CHALLENGE_RECEIVED_ALERT_GOAL_FORMAT
T@"GKPlayerInternal",&,N,V_receivingPlayer
T@"GKPlayerInternal",&,N,V_issuingPlayer
T@"NSString",&,N,V_goalText
T@"NSString",&,N,V_gameTitle
T@"NSString",&,N,V_resolvedBundleID
pushDescriptor
T@"NSDictionary",&,N,V_pushDescriptor
app-session
%@ (serverStatus != ((void*)0))
[%s (%s:%d)]
+[NSDictionary(GKDaemonAdditions) _gkDictionaryWithServerData:serverStatus:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/NSDictionary+GKDaemonAdditions.m
Received unexpected data format in server response.
No server data to decode, raising a communication failure error with reason:no data received from server
No data received from the server.
0123456789ABCDEF
The server only provides 64, 128, 256 and 512. %d is not valid.
NSString *GKImageURLKeyForSize(NSInteger)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/NSDictionary+GKImageAdditions.m
%@ (scale != 0)
[%s (%s:%d)]
-[NSDictionary(GKImageAdditions) _gkImageURLForSize:scale:foundSize:]
com.apple.gamecenter.invite
com.apple.gamecenter.challenge
com.apple.gamecenter.turn
imageURLDictionary
titleText
subText
launchURL
SHORT_TURN_TITLE_YOUR_TURN
SHORT_TURN_TITLE_ACTION_REQUESTED
SHORT_INVITED_SUBTITLE_FORMAT
SHORT_AUTOMATCH_SUBTITLE
SHORT_FROM_SUBTITLE_FORMAT
SHORT_INVITATION_TITLE
    titleText:%@ subText:%@
    type:%@ identifier:%@
    date:%@
GKQuickAction: set launch event for client %@
Error loading challenge for quickAction: %@ (error:%@)
GKQuickAction: no bundleID for quickAction: %@
T@"NSString",&,V_type
T@"NSString",&,V_identifier
T@"NSDictionary",&,V_imageURLDictionary
T@"NSString",&,V_firstName
T@"NSString",&,V_lastName
T@"NSString",&,V_titleText
T@"NSString",&,V_subText
T@"NSDate",&,V_date
T@"NSString",&,V_gameBundleID
T@"NSString",&,V_launchURL
imageData
T@"NSData",&,V_imageData
<%@ %p> %@ %@
request
T@"NSURLRequest",&,N,V_request
SAPSession
_gkSAPSession
T@"GKFairPlaySAPSession",&,N,G_gkSAPSession,S_gkSetSAPSession:
application/x-apple-plist
X-Apple-Request-UUID
x-gk-test-run-id
x-gk-player-id
x-gk-player-id-hash
x-gk-auth-token
x-gk-adam-id
x-gk-external-version
true
x-gk-store-mode
x-gk-restrict-multiplayer
x-gk-restrict-friend-add
x-gk-udid
x-gk-process-name
x-gk-protocol-version
x-gk-build-version
x-gk-push-token
x-gk-internal
accept-language
x-gk-region-format
x-gk-sap-signature
x-gk-sap-version
%02X
%@ (retainCount == afterRetainCount)
[%s (%s:%d)]
update block is not allowed to reference notifier
-[GKJoinGroupNotifier setResult:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKJoinGroup.m
group
T@"GKJoinGroup",N,V_group
lock
T@"NSLock",&,V_lock
updateQueue
T@"NSMutableArray",&,N,V_updateQueue
T@"NSError",&,V_error
v24@?0@"NSArray"8@"NSArray"16
leftNotifiers
T@"NSMutableArray",&,N,V_leftNotifiers
rightNotifiers
T@"NSMutableArray",&,N,V_rightNotifiers
leftResults
T@"NSMutableArray",&,V_leftResults
rightResults
T@"NSMutableArray",&,V_rightResults
com.apple.socialgaming.tournament_cache
com.apple.socialgaming.tournament_cache_user_record
updateUserWithHandler
read
v24@?0@"CKRecordID"8@"NSError"16
Error getting user record for tournament container %@
tournaments-%@
tournamentIcon
tournamentNameFormat
tournamentDescription
tournamentType
supportedCreationMethod
participationType
typicalGameplayDuration
tournamentInterval
tournamentFrequency
customTournamentIcon
customTournamentNameFormat
customTournamentName
customScoringMethods
customSeedingMethods
customMaxPlayers
customMinPlayers
customMaxReplays
customTournamentDuration
customTournamentAllowIcon
randomSeed
GKCloudTournamentCache: - Failed to get profiles for Player IDs due to error: %@
v32@?0@"NSString"8@"CKRecord"16^B24
userRecordID
T@"CKRecordID",&,N,V_userRecordID
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheQueue
userRecordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_userRecordQueue
tokensByZoneID
T@"NSMutableDictionary",&,N,V_tokensByZoneID
tournamentDefinitionsByRecordID
T@"NSMutableDictionary",&,N,V_tournamentDefinitionsByRecordID
tournamentsByRecordID
T@"NSMutableDictionary",&,N,V_tournamentsByRecordID
tournamentRecordIDByParticipantRecordID
T@"NSMutableDictionary",&,N,V_tournamentRecordIDByParticipantRecordID
tournamentParticipantsGroupedByTournamentID
T@"NSMutableDictionary",&,N,V_tournamentParticipantsGroupedByTournamentID
inviteURLByTournamentRecordID
T@"NSMutableDictionary",&,N,V_inviteURLByTournamentRecordID
contactInviteByRecordID
T@"NSMutableDictionary",&,N,V_contactInviteByRecordID
expiration
T@"NSDate",&,N,V_expiration
TB,D,N,GisValid
haveSubscription
TB,N,V_haveSubscription
GKPlayerRelationshipTTL
SELECT %@     FROM players         INNER JOIN player_relationships USING (player_id)     WHERE player_gcid = %s         AND player_relationships.relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)         AND familiarity = %s;
:localPlayerGCID
players.expiration_date
number_of_friends_in_common
number_of_games_in_common
player_relationships.expiration_date
GKStoreBagUpdatedNotification
-[GKStoreBag performSync:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKStoreBag.m
%@ : %@
com.apple.GameKit.GKStoreBag.lookup
com.apple.GameKit.GKStoreBag.sync
-[GKStoreBag _fetchFromCacheWithHandler:]
StoreBag
-[GKStoreBag _fetchFromServerWithHandler:]
Loaded new store bag %@
Game Center store bag couldn't be loaded with url:%@, status code returned:%ld with error:%@
GKStorebag: _fetchBagWithHandler:
-[GKStoreBag _fetchBagWithHandler:]
GKStorebag: getBagWithHandler
gk-push-token-required
gk-tb-create-session
gk-tb-accept
gk-tb-decline
gk-tb-remove-session
gk-tb-resign
gk-tb-turn
gk-tb-reminder
gk-tb-send-request
gk-tb-cancel-request
gk-tb-send-reply
gk-tb-remove-request
gk-tb-update-game-state
gk-tb-complete
gk-app-init
gk-logout-user
%@ ([APNSRequiredArray isKindOfClass:[NSArray class]])
[%s (%s:%d)]
got %@, expected NSArray
-[GKStoreBag _setupAPNSRequired:]
gk-sap-signed-requests
http://sandbox.gc.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://td1.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://z2r0y.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://td2.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://df6ed.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://td3.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://cp7vi.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://td4.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
http://gz8rm.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
https://init.gc.apple.com/WebObjects/GKInit.woa/wa/getBag?ix=2
GKStoreBag: getValuesForKeys
gk-disable-http-pipelining
GKStoreBag:DATA verification failed
GKStoreBag: %@: bad responseDict: %@
GKStoreBag: %@: bad bagData
GKStoreBag: %@: Could not unserialize the URL bag: %@
certs
signature
GKStoreBag: %@: Insufficient data to parse URL bag
GKStoreBag: %@: data not good against signature
GKStoreBag: %@: self trust is not valid
GKStoreBag: FAILED to create cert
GKStoreBag:Security Error: %ld
GKStoreBag:trust is not valid error: %ld
GKStoreBag:TRUST validation failed with result %ld
-[GKStoreBag _setupSAPSessionWithRetries:]
MESCAL:preparing to set up SAP session
No SAP setting keys in the bag
MESCAL: Skipping setup because network is not reachable
MESCAL:could not exchange cert data: %@
MESCAL:did exchange initialize cert data: %@
sap-version
sap-setup-buffer
MESCAL:got the setup data from the server: %@ with error %@
MESCAL:did finish exchanging cert data after %ld seconds
Received update for bag that isn't current. Ignoring. See <rdar://problem/12960277>.
gk-launch-gamecenter-host-patterns
gk-launch-gamecenter-path-patterns
GKURLPatternCacheBagURLUserDefaultsKey
GKURLPatternCacheExpirationDateUserDefaultsKey
Updating URL pattern cache
^/(me|players|friends|games|requests|challenges|htmlResources)($|/.*)
Library/Caches/com.apple.gamed/url-resolution.plist
Failed to create folder for url pattern cache: %@
Failed to decode data for url pattern cache: %@
Failed to write url pattern cache: %@
com.apple.gamed.changed-url-resolution
x-gk-production-signed
MESCAL:signed body of request:%@ %@
sendAsynchronousRequest
v32@?0@"NSString"8@"NSString"16^B24
timestamp at which REQUEST %@ was sent
Exhausted retry count for _sendOneAsyncTryWithRequest.
Failed _gkSendAsynchronous Request due to error: %@
Retry-After
statusCode
retryTime
_sendAsynchronousRequest:Received HTTP Response
RESPONSE (error:%@) {
status: (%d) %@
header: %@
body: %@ }
_sendAsynchronousRequest:HTTP Response was signed and logged
RESPONSE was signed:%@}
SIGNATURE ERROR:%@}
_sendAsynchronousRequest:Signature error:%@
SIGNATURE ERROR: A SIGNED RESPONSE WAS EXPECTED BUT NONE WAS AVAILABLE}
_sendAsynchronousRequest:Signature Error: A signed response was expected but non was available
com.apple.GameKit.invalidationDates
com.apple.GameKit.networkSynchronization
gk-post-data
_loadDataForBagKey:Starting GKDataRequestManager transation
loadDataForBagKey
gk-authenticate-user
_loadDataForBagKey:No SAPSession found during appInit/Authenticate
Trying to authenticate or appInit without a SAPSession, Going to give it another try before making the call
_loadDataForBagKey:Failed to get URL from bag for bagKey:%@.Error is: %@
_loadDataForBagKey:Failed to send Asynchronous Request for bagKey:%@. Error: %@
_loadDataForBagKey:No request for NSURLRequest, likely due to invalid URL. This will result to an alert showing '...error communicating with the server'. bagKey was:%@
STALE LOAD(%@) started: %@ invalidated: %@
GKStoreBag: writeDataForBagKey
Error - This will result showing an alert '...error communicating with the server'. Invalid request when reading data for url: %@
internalBag
T@"NSDictionary",&,N,V_internalBag
T@"NSURL",&,N,V_url
mescalSetupStartTimeStamp
Td,N,V_mescalSetupStartTimeStamp
T@"GKFairPlaySAPSession",&,V_SAPSession
APNSRequired
T@"NSSet",&,V_APNSRequired
signatureRequired
T@"NSSet",&,V_signatureRequired
responseSignatureRequired
T@"NSSet",&,V_responseSignatureRequired
GKStoreBag:ISSHA1DataForBytes failed
(null: empty body)
<html
<xml
(probably JPEG data)
(probably PNG data)
(couldn't decode data of length:%ld as plist/html or xml) %@
password
PASSWORD REDACTED
GKDataRequestManager+Nearby: presentNearbyInvite
presenting nearby invite:%@
presentNearbyInvite
begun presentNearbyInvite:
got localized name for game:%@
GKDataRequestManager+Nearby: presentNearbyInvite - Presented Nearby Invite
presented nearby invite:%@
end presentNearbyInvite:
GKDataRequestManager+Nearby: presentNearbyInvite - Ended Nearby Invite
v16@?0@"GKPlayerInternal"8
GKDataRequestManager: nearbyInviteWasCancelled
GKDataRequestManager: nearbyInviteWasCancelled - Telling Client
GKDataRequestManager+Nearby: handleNearbyInviteResponse
nearby invite NC response: %@
inviteDictionary
GKDataRequestManager+Nearby: handleNearbyInviteResponse: - No Client Proxy Found for incoming dictionary:%@
buttonPressed
accepted
GKDataRequestManager+Nearby - Nearby invite NC response type not handled: %ld for incoming dictionary:%@
GKDataRequestManager+Nearby: clearAllNearbyInvites
GKRecommendationDetailsTTL
GKRecommendationWasDisplayed
    SELECT %@         FROM players             INNER JOIN                 (SELECT recommendation_id, player_id, number_of_friends_in_common, number_of_games_in_common, expiration_date, reason_gcid, source, was_displayed                     FROM player_relationships                         INNER JOIN friend_recommendations USING (relationship_id)                     WHERE player_relationships.relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                         AND player_relationships.player_id = (SELECT player_id FROM players WHERE player_gcid = %s)) recommendation                 USING (player_id)            INNER JOIN friend_recommendation_localizations USING (recommendation_id)         WHERE player_gcid = %s             AND friend_recommendation_localizations.language = %s             AND friend_recommendation_localizations.recommendation_id = recommendation.recommendation_id
:language
reason_gcid
primary_reason
secondary_reason
recommendation.expiration_date
recommendation.was_displayed
GameCenter
GKAppStoreManager: lookupStoreItemsForAdamIDs:
lookupStoreItemsForAdamIDs
itemLookup
com.apple.gamekit
gamecenter-link
omni
loadTellAFriendMessageForGameWithAdamID
x-apple-email-mime-type
x-apple-email-subject
v32@?0@"NSDate"8@"NSDictionary"16@"NSError"24
INSERT INTO photos (            request_id,             photo_data,             avatar_type)             VALUES (%s, %s, %s);
:photo_data
:avatar_type
            SELECT request_id             FROM requests             INNER JOIN photos USING (request_id)             WHERE player_gcid = %s;
photo-data
(julianday('now', %s) - 2440587.5)*86400.0*1000
:days_ago
SELECT %@         FROM requests top_r             INNER JOIN scores top_s USING (request_id)         WHERE player_gcid = %s             AND bundle_id = %s            AND (value = (SELECT MAX(value)                             FROM requests INNER JOIN scores USING (request_id)                             WHERE player_gcid = top_r.player_gcid                                 AND bundle_id = top_r.bundle_id                                 AND leaderboard_id = top_s.leaderboard_id                                 AND (time_stamp > (%@)))                OR value = (SELECT MIN(value)                             FROM requests INNER JOIN scores USING (request_id)                             WHERE player_gcid = top_r.player_gcid                                 AND bundle_id = top_r.bundle_id                                 AND leaderboard_id = top_s.leaderboard_id                                 AND (time_stamp > (%@))));
SELECT %@         FROM requests top_r         INNER JOIN scores USING (request_id)         WHERE player_gcid = %s         AND bundle_id = %s         AND time_stamp IN (SELECT MAX(time_stamp) FROM requests INNER JOIN scores USING (request_id) WHERE player_gcid = top_r.player_gcid AND bundle_id = top_r.bundle_id GROUP BY leaderboard_id);
SELECT %@     FROM requests INNER JOIN scores USING (request_id)     WHERE player_gcid = %s         AND bundle_id = %s;
-%llu days
error while decoding submitScore delayed request archive:%@
score-value
category
eligible-challenges
%@ (score != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: - score is nil, will result in nil values set in dictionary literal for bundleID: %@
-[GKSubmitScoresCacheReader readResources:handler:]_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKSubmitScoresCacheReader.mm
%@ (scoreValue != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: - score.value = %@
%@ (scoreContext != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: - score.context = %@
%@ (score.date != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: -  score.date = %@
%@ (scoreTimestamp != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: - timestamp = %@
%@ (score.leaderboardIdentifier != nil)
[%s (%s:%d)]
GKSubmitScoresCacheReader readResources:handler: - score.leaderboardIdentifier = %@, bundleID = %@
Failed to verify score: %@
T@"NSString",&,N,V_bundleID
time_stamp
verification_hash
eligible_challenge_ids
leaderboard_id
should_screen_challenges
v24@?0@"GKTournamentParticipantHistoricalDataInternal"8@"NSError"16
v24@?0q8@"NSError"16
v24@?0@"GKTournamentParticipantInternal"8@"NSError"16
definitions
v24@?0@"GKTournamentDefinitionInternal"8@"NSError"16
GKTournamentService - No bulletin found for accepted custom tournament invite.
Error reseting tournament CloudKit data: %@
                        INSERT OR IGNORE INTO players (                             player_gcid,                             friend_requests_expiration_date)                         VALUES (%s, %s);
:friend_requests_expiration_date
                        UPDATE players SET                             friend_requests_expiration_date = %s                         WHERE player_gcid = %s;
                        INSERT OR IGNORE INTO players (                             player_gcid)                         VALUES (%s);
                        INSERT OR IGNORE INTO player_relationships (                             player_id,                             relative_to_player_id,                             familiarity,                             expiration_date)                         VALUES (                            (SELECT player_id FROM players WHERE player_gcid = %s),                             (SELECT player_id FROM players WHERE player_gcid = %s),                             %s, %s);
                        UPDATE player_relationships SET                             familiarity = %s,                             expiration_date = %s                         WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                             AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s);
                        INSERT OR IGNORE INTO friend_request_details (                             relationship_id,                             creation_date,                             message)                         VALUES ((SELECT relationship_id FROM player_relationships                                     WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                                         AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)),                         %s, %s);
:creation_date
:message
                        UPDATE friend_request_details SET                             creation_date = %s,                             message = %s                         WHERE relationship_id = (SELECT relationship_id FROM player_relationships                                                     WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                                                         AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s));
%@ is being asked to write incoming friend requests for multiple players. This is not currently supported.
Getting bundleId from bundleURL %@
CFBundleIdentifier
Getting bundleId from plist in binary %@
Getting bundleID from gamecenterctl %@
Getting bundleID in debug from pid/procname %@
Getting bundleId from process name %@
GKGameCenterBadgingDisabled
GKGameCenterSpringBoardShortcutActionsDisabled
GKMessageImage
GKInvite
GKChallenge
CFBundleShortVersionString
InfoPlist
AppleLanguages
Localizable
stringsdict
strings
/usr/local/bin/gamecenterctl
@"NSPredicate"28@?0@"NSString"8B16@"NSDate"20
expirationDate != nil && common = %d && player.playerID = %@
expirationDate > %@ && common = %d && player.playerID = %@
expirationDate != nil && common = %d && player.playerID = %@ && player.friendBiDirectional = %@
expirationDate > %@ && common = %d && player.playerID = %@ && player.friendBiDirectional = %@
getFriendIDsForPlayer: internal without playerID:%@: %@
gk-get-profile-info
list = %@
playerIDs
common-friends
friend-type
GKFriendList
No profile for playerID(%@)
v24@?0@"NSArray"8@?<v@?>16
gk-get-nearby-friend-token
friend-token
NEARBY_TOKEN_%@
getNearbyTokenForLocalPlayerWithHandler: nearby token received:%@
getNearbyTokenForLocalPlayerWithHandler server error: %@
establishNearbyRelationshipsUsingPlayerTokens: nearby tokens:%@
friend-tokens
gk-establish-nearby-relationship
establishNearbyRelationshipsUsingPlayerTokens: server error: %@
gk-get-recently-matched
removeFriendWithPlayer: Removing a friend with playerID %@
playerID == %@
player.playerID IN %@
gk-remove-friend
removeFriendWithPlayer server error: %@
removeFriendWriterWithCredential server error: %@
removeFriendWithPlayer: Removing a friend succeed
reported-player-id
gk-report-a-concern-metadata
reported-player
nickname
concerns
comments
concern-id
gk-report-a-concern
friend-code
gk-view-friend-code-details
creator-player-id
gk-get-friend-code
gk-cancel-friend-code
gk-use-friend-code
Invalid attempt to set extension proxy(%@) on viewService(%@)
-[GKUIServiceClientProxy setExtensionProxy:forBundleID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKUIServiceClientProxy.m
%@ (hostClient != nil)
[%s (%s:%d)]
Unable to find host with pid %d
-[GKUIServiceClientProxy setHostPID:reply:]
Associating view service %@ with client %@ : pid(%d)
%@ (hostClient != ((void *)0))
[%s (%s:%d)]
-[GKUIServiceClientProxy getPrivateServicesForPID:localPlayer:reply:]
%@ (hostClient.pid == pid)
[%s (%s:%d)]
hostClient
T@"GKClientProxy",N
T@"GKClientProxy",N,V_weakHostClient
GKRequestIDs
cacheReader.databaseConnection (%@) is not shared by the cacheWriter.databaseConnection (%@) Exiting to reset
com.apple.gamed.delayedRequests.batchQueue
Unable to delete delayed request with id: %@
Unable to delete delayed requests with ids: %@
GKRetryAfter-%@
%@ - Not submitting delayed requests because retry time interval has not expired. Will try again
v24@?0@"NSError"8Q16
operationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_operationQueue
resourcesPending
T@"NSSet",&,V_resourcesPending
cacheWriter
T@"<GKDatabaseWriter>",&,N,V_cacheWriter
cacheReader
T@"<GKDatabaseReader>",&,N,V_cacheReader
networkWriter
T@"<GKDataWriter>",&,N,V_networkWriter
shouldWaitForNetworkError
TB,V_shouldWaitForNetworkError
intervalInSeconds
Td,N,V_intervalInSeconds
com.apple.gamed.invitesession
GKInviteSession: performAsync
inviteInvitee.%@
GKInviteSession: removeInvitee: %@ refrence: %@
GKInviteSession: removeInvitee: reference exist and player has been removed from _invitees/_invitedPlayers
No more invitees, clearing session token %@
GKInviteSession - Still have invitees in invite session, %@
invitees %@
shareInvitees %@
GKInviteSession: removeAllInvitees
GKInviteSession: removeAllResponses
GKInviteSession - SHOULD NOT be cleared because still have items:
responses %@
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
invitees
T@"NSMutableDictionary",&,N,V_invitees
responses
T@"NSArray",&,N,V_responses
T@"NSMutableArray",&,N,V_invitedPlayers
T@"NSData",&,N,V_sessionToken
shareInvitees
T@"NSMutableArray",&,N,V_shareInvitees
shareRecordID
T@"CKRecordID",&,N,V_shareRecordID
%@ %@ %@
dictionary
T@"NSMutableDictionary",&,N,V_dictionary
GKAcceptedInviteManager syncQueue
com.apple.GameKit.GKAcceptedInviteManager.sync
GKAcceptedInviteManager performSync:
-[GKAcceptedInviteManager performSync:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKAcceptedInviteManager.m
GKAcceptedInviteManager _addBulletin: toArray:
GKAcceptedInviteManager _insertBulletin:toFrontOfArray:
GKAcceptedInviteManager _fetchAndRemoveBulletinFromArray: passingTest:
GKAcceptedInviteManager addMultiplayerInvite:
GKAcceptedInviteManager addTurnBasedEvent:
GKAcceptedInviteManager addTournamentInvite:
GKAcceptedInviteManager removeAndReturnInviteWithSessionToken:
B16@?0@"GKRealTimeMultiplayerInitiateBulletin"8
GKAcceptedInviteManager removeAndReturnTurnBasedInviteWithMatchID:
B16@?0@"GKTurnBasedMultiplayerBulletin"8
GKAcceptedInviteManager multiplayerInviteForGame:
GKAcceptedInviteManager multiplayerInviteForGameDescriptor:
GKAcceptedInviteManager - accepted invite bulletins %@
GKAcceptedInviteManager turnBasedInviteForGame:
GKAcceptedInviteManager turnBasedInviteForGameDescriptor:
B16@?0@"GKTurnBasedMultiplayerInviteBulletin"8
GKAcceptedInviteManager tournamentInviteForGame:
B16@?0@"GKTournamentInviteBulletin"8
AcceptedInvites: 
MultiplayerInvites: %@ 
TurnBased: %@
acceptedMultiplayerInvites
T@"NSMutableArray",&,V_acceptedMultiplayerInvites
acceptedTurnBased
T@"NSMutableArray",&,V_acceptedTurnBased
acceptedTournamentInvites
T@"NSMutableArray",&,V_acceptedTournamentInvites
delegate
T@"<GKNWConnectionWrapperDelegate>",W,N,V_delegate
T@"NWConnection",&,N,V_connection
delegateQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_delegateQueue
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_writeQueue
com.apple.gamed.ids.streamwriteq_%@
_sendData: Error writing data to NWConnectionStream %@
readData  Error reading data on NWStreamConnection %@
v24@?0@"NSData"8@"NSError"16
com.apple.gamed.ids.datagramwriteq_%@
_sendData: Error writing data to NWDatagramConnection %@
readData  Error reading data on NWDatagramConnection %@
v24@?0@8^B16
%@ ([newKeys count] == [keys count])
[%s (%s:%d)]
-[NSDictionary(GKCollectionUtils) _gkSubDictionaryWithKeys:mappedToNewKeys:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKCollectionUtils.m
%@ (block)
[%s (%s:%d)]
No block passed to NSMapTable's %@
-[NSMapTable(GKAdditions) _gkEnumerateKeysAndObjectsUsingBlock:]
%@%@%llu%llu%llu%@
An achievement is being submitted without a playerID, transient data:%@
%@%@%llu%llu%@
deadbeef
SELECT %@     FROM requests top_r         INNER JOIN achievements top_a USING (request_id)     WHERE player_gcid = %s         AND bundle_id = %s         AND percent_complete = (SELECT MAX(percent_complete)                             FROM requests INNER JOIN achievements USING (request_id)                             WHERE player_gcid = top_r.player_gcid                                 AND bundle_id = top_r.bundle_id                                 AND identifier = top_a.identifier);
SELECT %@     FROM requests INNER JOIN achievements USING (request_id)     WHERE player_gcid = %s     AND bundle_id = %s;
error while decoding SubmitAchievement delayed request archive:%@
is-hidden
Failed to verify achievement: %@
achievement-ids
percent_complete
SELECT %@     FROM requests         INNER JOIN challenges USING (request_id)     WHERE player_gcid = %s         AND bundle_id = %s         AND request_type = %s;
:request_type
error while decoding challenge delayed request archive:%@
challenge-ids
requestType
Ti,N,V_requestType
    SELECT %@     FROM requests     INNER JOIN delete_photos USING (request_id)     WHERE player_gcid = %s     ORDER BY time_stamp DESC;
delete-approved
delete-pending
%@ is being asked to read photos for multiple players. This is not currently supported.
                           INSERT INTO requests (                           player_gcid,                            time_stamp)                           VALUES (%s, %s)
                           INSERT INTO remove_friend (                           request_id,                            payload)                           VALUES (%s, %s);
setting up removal of %@ as a friend in database cache
SELECT %@     FROM requests     INNER JOIN remove_games USING (request_id)     WHERE player_gcid = %s;
SELECT %@     FROM requests INNER JOIN remove_games USING (request_id)     WHERE player_gcid = %s;
removed_bundle_id
com.apple.private.game-center
com.apple.developer.game-center
com.apple.private.game-center.bypass-authentication
 -- (%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s)
Profile
Friends
Games
GameStats
Challenges
Multiplayer
TurnBasedMultiplayer
Tournaments
Media
BypassAuthentication
AccountPrivate
ProfilePrivate
FriendsPrivate
GamesPrivate
GameStatsPrivate
ChallengesPrivate
MultiplayerPrivate
TurnBasedMultiplayerPrivate
TournamentsPrivate
MediaPrivate
GKSystemBulletin loadBulletinsForPushNotification: withHandler:
Invalid system push (%d)
GKSystemBulletin _expireCachesForKey: context:
Expiring caches for store bag key %@
+[GKSystemBulletin _expireCachesForKey:context:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKSystemBulletin.m
gk-get-games-played
player = %@
gk-get-player-achievements
player == %@
GKRelayBulletin loadBulletinsForPushNotification: withHandler:
GKProfileUpdateBulletin loadBulletinsForPushNotification: withHandler:
Profile Update Push Notification has no player.
GKMatchmakerBulletin loadBulletinsForPushNotification: withHandler:
didReceiveMatchmakingPush: %@
GKMatchmakerBulletin - matchmaking push missing match-rid, did not create bulletin.
GKMatchmakerBulletin executeBulletinWithBulletinController:
matchmaking push:%@ for unknown rid
matchID
T@"NSString",&,N,V_matchID
GKGenericBulletin loadBulletinsForPushNotification: withHandler:
GKGenericBulletin assembleBulletinFromPushNotification:
                           INSERT INTO remove_games (                           request_id,                            removed_bundle_id)                            VALUES (%s,%s);
:removed_bundle_id
ProductType
ProductVersion
BuildVersion
ipad
iPad Simulator
iPhone Simulator
Game Center DeviceName:%@, OS:%@ Build:%@
UniqueDeviceID
/Developer
GKTurnBasedMultiplayerBulletin loadBulletinsForPushNotification:
Notify the App, do not display bulletin
Assemble Bulletin
Error loading data for turn based bulletin: %@
GKTurnBasedMultiplayerBulletin Declining invite due to no compatible game found
Error determining game location: %@
Received a push that is not for the local player
GKTurnBasedMultiplayerBulletin update:
GKTurnBasedMultiplayerBulletin initWithPushNotification:
GKTurnBasedMultiplayerBulletin initWithCoder:
turnCount
userTapped
GKTurnBasedMultiplayerBulletin encodeWithCoder:
GKTurnBasedMultiplayerBulletin loadDataWithHandler:
Error getting localized game name: %@
loadDataWithHandler - Error loading info about originator player (%@): %@
loadBulletinMessageWithHandler - Error getting expiration date for match: %@
GKTurnBasedMultiplayerBulletin updateBadgeCount
GKTurnBasedMultiplayerBulletin saveTurnBasedEvent
GKTurnBasedMultiplayerBulletin invalidateTurnCache
game.bundleID = %@ OR game.adamID = %@
GKTurnBasedMultiplayerBulletin acceptTurnBasedTurn
Accept Turn Based Invite
GKTurnBasedMultiplayerBulletin declineTurnBasedInviteWithReason:
Decline Turn Based Invite
GKTurnBasedMultiplayerBulletin removePreviousTurnBulletins
GKTurnBasedMultiplayerBulletin bulletinMessage
TURN_BASED_YOUR_GUESTS_TURN_NOTIFICATION_MESSAGE_FORMAT
TURN_BASED_YOUR_TURN_NOTIFICATION_MESSAGE_FORMAT
GKTurnBasedMultiplayerBulletin assembleBulletin
PLAY_TURN_BASED_TURN_BUTTON_TITLE
CLOSE_TURN_BASED_ALERT_BUTTON_TITLE
TURN_BASED_NOTIFICATION_CUSTOM_1_GAME_2_MESSAGE
TURN_BASED_NOTIFICATION_TITLE
GKTurnBasedMultiplayerBulletin expireAndLoadCaches
game = %@ AND type = %d
game.bundleID = %@
GKTurnBasedMultiplayerBulletin handleAcceptAction
GKTurnBasedMultiplayerBulletin handleAction:
bulletin handle turn based action: %@
matchID:%@
T@"NSString",&,V_matchID
T@"NSNumber",&,V_turnCount
TB,V_userTapped
T@"NSDictionary",&,V_localizableMessage
T@"NSString",&,V_exchangeID
T@"NSString",&,V_guestID
T@"NSString",R,V_aggregateDictionaryKey
GKTurnBasedMultiplayerInviteBulletin loadBulletinsForPushNotification: withHandler:
loadLocalizedGameNameForBundleID - Error loading data for the bulletin: %@
GKTurnBasedMultiplayerInviteBulletin Declining invite due to no compatible game found
GKTurnBasedMultiplayerInviteBulletin - Error determining game location: %@
GKTurnBasedMultiplayerInviteBulletin assembleBulletin
GKTurnBasedMultiplayerInviteBulletin handleAction:
GKTurnBasedMultiplayerInviteBulletin handleAcceptAction
GKTurnBasedMultiplayerInviteBulletin handleDeclineAction
GKTurnBasedMultiplayerInviteBulletin loadDataWithHandler:
loadLocalizedGameNameForBundleID - Error getting localized game name: %@
loadLocalizedGameNameForBundleID - Error getting originator player: %@
GKTurnBasedMultiplayerClearBulletin loadBulletinsForPushNotification: withHandler:
GKTurnBasedMultiplayerClearBulletin initWithPushNotification:
GKTurnBasedMultiplayerClearBulletin initWithCoder:
clearType
GKTurnBasedMultiplayerClearBulletin encodeWithCoder:
Tq,V_clearType
GKTurnBasedMultiplayerTurnCountBulletin loadBulletinsForPushNotification: withHandler:
GKTurnBasedMultiplayerTurnBulletin update
GKTurnBasedMultiplayerTurnBulletin handleAcceptAction
GKTurnBasedMultiplayerTurnReminderBulletin update
TURN_BASED_GAME_OVER_NOTIFICATION_MESSAGE_FORMAT
TURN_BASED_MATCH_EXCHANGE_REQUEST_NOTIFICATION_MESSAGE_FORMAT
TURN_BASED_MATCH_EXCHANGE_COMPLETED_NOTIFICATION_MESSAGE_FORMAT_ZERO
GKTurnBasedMultiplayerCanceledExchangeBulletin loadDataWithHandler:
loadLocalizedGameNameForBundleID - Error getting bulletin message: %@
GKTurnBasedMultiplayerCanceledExchangeBulletin loadBulletinMessageWithHandler:
loadBulletinMessageWithHandler
loadBulletinMessageWithHandler - Error getting details for match: %@
gk-get-friend-player-ids_common-friends%d
server -or cache- didn't return friend state values, assigning %@ to friend %@
GKIDSLookupBulletin initWithPushNotification:
senderID
T@"NSString",&,N,V_senderID
GKIDSLookupRequestBulletin initWithPushNotification:
GKIDSLookupBulletin loadBulletinsForPushNotification: withHandler:
GKIDSRequestManager: Error sending GKPlayerID iCloudID
T@"NSString",&,N,V_playerID
GKTournamentBulletin: declineInviteWithReason:
isMessagesInvite
GKTournamentBulletin initWithPushNotification:
GKTournamentInviteBulletin loadBulletinsForPushNotification:
GKTournamentInviteBulletin - Error loading data: %@
GKTournamentInviteBulletin - Declining invite due to no compatible game found.
GKTournamentInviteBulletin - Error determining game location: %@
GKTournamentInviteBulletin loadBulletinsForPushNotification: push is not for local player or not from Messages.
Ignoring initiate push. Receiver PlayerID: %@ LocalPlayer: %@
GKTournamentInviteBulletin assembleBulletin
GKTournamentInviteBulletin: %@ handleAction: %@
GKTournamentInviteBulletin handleAcceptAction
GKTournamentInviteBulletin handleDeclineAction
GKTournamentInviteBulletin loadDataWithHandler:
GKTournamentInviteBulletin - Error getting localized game name: %@
GKTournamentInviteBulletin - Error getting originator player: %@
T@"NSString",&,V_tournamentID
GKDatabaseInaccessibleException
com.apple.gamecenter.GKDatabaseConnection
not opening the database at this time, as the device is currently locked
unable to create prepared statement for SQL: %@ due to result=%@
unable to reset prepared statement for SQL: %@ due to result = %@
GKDatabaseConnection can't open database due to rc=%d
GKDatabaseConnection can't open database due to rc=%d, throwing exception
failed to open database (%d)
:memory:
PRAGMA journal_mode=WAL; PRAGMA foreign_keys=ON;
GKDatabaseConnection can't exec on database due to rc2=%d - closing and retrying
failed to set pragmas for database connection and to remove existing database.(%d)
GKDatabaseConnection couldn't recreate the database due to returnFlagFileOpen=%d - closing and throwing exception
GKDatabaseConnection couldn't exec on the database due to rc2=%d - closing and returning
unable to sqlite3_exec  due to error %s
GKDatabaseConnection couldn't exec on the database due to rc1=%d or rc2=%d - closing and throwing an exception
failed to set pragmas for database connection.(%d %d)
unable to close database connection to %@due to result = %@
databaseCloseReentrancyCount out of sync
sqlite database was closed by another process, reopening (performSync)
cannot perform operation on unopened database. Tried to re-open and failed. Restarting gamed
sqlite database was closed by another process, reopening(performAsync)
sqlite database was closed by another process, reopening(performAsyncTransaction)
Database not available at this time
Unable to write record to cache. Rolling back transaction: %@
ROLLBACK
path
T@"NSString",C,N,V_path
database
T^{sqlite3=},N,V_database
databaseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_databaseQueue
GKSessionBulletin determineGameLocationOnDeviceOrInStoreWithCompletionHandler:
finding compataible BundleID for session %@, bundleIDs = %@
found compatible app: bundleID = %@, short version = %@, version = %@
determineGameLocationOnDeviceViaCompatibilityMatrixWithCompletionHandler - Error getting compatibilty matrix: %@
GKSessionBulletin loadDataWithHandler:
GKSessionBulletin initWithPushNotification:
GKSessionBulletin initWithCoder:
cloudContainer
originatingDeviceType
sender
GKSessionBulletin encodeWithCoder:
GKSessionBulletin assembleBulletin
PLAY_BUTTON_TITLE
SESSION_MESSAGE_NOTIFICATION_TITLE
cloudContainer:%@ originatingDeviceType:%ld localizableMessage:%@ sender:%@
T@"NSString",&,N,V_cloudContainer
T@"GKGameDescriptor",&,N,V_game
Tq,N,V_originatingDeviceType
T@"NSDictionary",&,N,V_localizableMessage
T@"NSData",&,N,V_data
localizedMessage
T@"NSString",&,N,V_localizedMessage
assembledMessage
T@"NSString",R,N,V_assembledMessage
T@"GKCloudGameSession",&,N,V_session
T@"GKCloudPlayer",&,N,V_sender
GKSessionBulletin loadBulletinsForPushNotification:
GKSessionBulletin - Error determining game location: %@
sessionURL
userMessage
senderName
SESSION_INVITE_NOTIFICATION_1_INVITER_2_GAME_3_MESSAGE_FORMAT
SESSION_INVITE_NOTIFICATION_1_INVITER_2_GAME_FORMAT
GKSessionBulletin handleAcceptAction
GKSessionBulletin Error Accepting ShareURL: %@
GKSessionBulletin handleAction:
SESSION_INVITE_NOTIFICATION_TITLE
T@"NSURL",&,N,V_sessionURL
T@"NSString",&,N,V_senderName
T@"NSString",&,N,V_userMessage
loadSessionWithHandler - Error getting session: %@
GKSessionBulletin loadSessionWithIdentifier: handler:
loadSessionWithIdentifier - returning, no handler found
loadSessionWithID - Error getting session: %@
v24@?0@"GKCloudGameSession"8@"NSError"16
sessionIdentifier
GKSessionMessageBulletin distributeData
SESSION_MESSAGE_NOTIFICATION_1_SESSION_2_GAME_3_GAME_MESSAGE_FORMAT
SESSION_MESSAGE_NOTIFICATION_1_GAME_2_GAME_MESSAGE_FORMAT
T@"NSString",&,N,V_sessionIdentifier
GKAccepted
GKDefault
GKDismissed
GKDeclined
GKExpired
GKNotificationCategoryActionsAppStoreClose
GKNotificationCategoryActionsAppStoreDecline
GKNotificationCategoryActionsAppStoreIgnore
GKNotificationCategoryActionsAcceptDecline
GKNotificationCategoryActionsPlayClose
GKNotificationCategoryActionsLaunchGameIgnore
GKNotificationCategoryActionsLaunchGameDecline
com.apple.GameKit.GKBulletin.sync
GKBulletin bulletinsForPushNotification: withHandler:
PUSH FAILED: Invalid payload
%@ doesn't implement %@; Will not load or process information in the bulletin
GKBulletin initWithCoder:
pushCommand
hasSound
soundPath
acceptAction
defaultAction
dismissAction
declineAction
showInListOnly
gameName
categoryIdentifier
GKBulletin encodeWithCoder:
GKBulletin dataFrom64String:
GKBulletin initWithPushNotification:
GKBulletin shouldProcessNotification
GKBulletin executeBulletinWithBulletinController:
GKBulletin performAsync:
%@ doesn't implement %@; dropping action %@
recordID:%@
title:%@
message:%@
date:%@
expirationDate:%@
hasSound:%@
soundPath:%@
defaultAction:%@
acceptAction:%@
dismissAction:%@
declineAction:%@
showInListOnly:%@
categoryIdentifier:%@
TC,V_pushCommand
T@"NSString",&,V_recordID
T@"NSString",&,V_message
T@"NSDate",&,V_expirationDate
TB,V_hasSound
T@"NSString",&,V_soundPath
T@"GKBulletinAction",&,V_acceptAction
T@"GKBulletinAction",&,V_defaultAction
T@"GKBulletinAction",&,V_dismissAction
T@"GKBulletinAction",&,V_declineAction
TB,V_showInListOnly
T@"NSString",&,V_gameName
T@"GKGameDescriptor",&,V_gameDescriptor
T@"NSString",&,V_categoryIdentifier
GKPreferencesDelegate
storeDemoModeEnabled
StoreDemoMode
preferencesDelegate
T@"<GKPreferencesDelegate>",N
TB,R,N,GisStoreDemoModeEnabled
addingFriendsRestricted
TB,R,N,GisAddingFriendsRestricted
multiplayerGamingRestricted
TB,R,N,GisMultiplayerGamingRestricted
appInstallationRestricted
TB,R,N,GisAppInstallationRestricted
accountModificationRestricted
TB,R,N,GisAccountModificationRestricted
gameCenterRestricted
TB,R,N,GisGameCenterRestricted
owner
lastModifiedDate
lastModifiedPlayer
serverChangeTag
playerStates
maxNumberOfConnectedPlayers
%@, id: %@, title: %@, date: %@
T@"NSString",&,N,V_title
T@"GKCloudPlayer",&,N,V_owner
T@"NSArray",&,N,V_players
T@"NSDate",&,N,V_lastModifiedDate
T@"GKCloudPlayer",&,N,V_lastModifiedPlayer
T@"NSString",&,N,V_serverChangeTag
Tq,N,V_maxNumberOfConnectedPlayers
T@"NSMutableDictionary",&,N,V_playerStates
badgedPlayers
T@"NSArray",R,N
T@"GKCloudPlayer",&,N
T@"NSArray",&,N
T@"NSMutableDictionary",&,N
                        INSERT OR IGNORE INTO players (                             player_gcid,                             friend_recommendations_expiration_date)                         VALUES (%s, %s);
:friend_recommendations_expiration_date
                        UPDATE players SET                             friend_recommendations_expiration_date = %s                         WHERE player_gcid = %s;
                        INSERT OR IGNORE INTO players (                             player_gcid,                             first_name,                             last_name,                             friend_level,                             friend_bi_directional,                             friend_played_with,                             friend_played_nearby,                             alias)                         VALUES (%s, %s, %s, %s, %s, %s, %s, %s);
                        UPDATE players SET                             first_name = %s,                             last_name = %s,                             friend_level = %s,                             friend_bi_directional = %s,                             friend_played_with = %s,                             friend_played_nearby = %s,                             alias = %s                         WHERE player_gcid = %s;
            INSERT OR IGNORE INTO friend_recommendations (                relationship_id,                reason_gcid,                source)            SELECT                 (SELECT relationship_id FROM player_relationships                     WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                         AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)),                 %s, %s;
:reason
:source
            UPDATE friend_recommendations SET                reason_gcid = %s,                source = %s             WHERE relationship_id =                 (SELECT relationship_id FROM player_relationships                     WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                         AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s));
            INSERT OR IGNORE INTO friend_recommendation_localizations (                recommendation_id,                language,                primary_reason,                secondary_reason)             SELECT                 (SELECT recommendation_id FROM friend_recommendations                     WHERE relationship_id =                         (SELECT relationship_id FROM player_relationships                             WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                                 AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s))),                 %s, %s, %s;
:primary_reason
:secondary_reason
            UPDATE friend_recommendation_localizations SET                primary_reason = %s,                secondary_reason = %s             WHERE recommendation_id = (SELECT recommendation_id FROM friend_recommendations                 WHERE relationship_id =                     (SELECT relationship_id FROM player_relationships                         WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                             AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)))                     AND language = %s;
%@ is being asked to write incoming friend recommendations for multiple players. This is not currently supported.
com.apple.gamed.bulletinboard
GKBulletins
com.apple.TVAppStore
GKBulletinActionAcceptKey
GKBulletinDefaultAcceptKey
GKBulletinActionDeclineKey
GKBulletinRecordID
GKBulletinCategoryID
GKBulletinController startBulletinController
Starting up the bulletin controller
GKBulletinController sharedController
Error requesting authorization
Please make sure you read instructions in DEDUserNotificationNotifier.h
[error info] %@
The user denied notification privileges.
GKBulletinController launchBulletin:
Launching: %@
Launching App: %@
Launching Store: %@
Error: No Action: %@
GKBulletinControlleriOS userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
response: %@
bulletin: %@
no action for bulletin: %@
no bulletin for ID: %@
GKBulletinController removeBulletin:
GKBulletinControlleriOS withdrawBullentin
GKBulletinControlleriOS expireBulletin:
GKBulletinController userInfoFromBulletin:
GKBulletinController userNotificationFromBulletin:
GKBulletinControlleriOS presentBulletin:
GKBulletinController: presenting notification request:%@
GKBulletinControlleriOS removeAllBulletins
GKBulletinControlleriOS clearBulletin:
userNotificationCenter
T@"UNUserNotificationCenter",&,N,V_userNotificationCenter
bulletins
T@"NSMutableDictionary",&,N,V_bulletins
acceptedInviteManager
T@"GKAcceptedInviteManager",&,V_acceptedInviteManager
B24@?0@"GKResource"8^B16
readerConnection
T@"GKDatabaseConnection",&,N,V_readerConnection
writerConnection
T@"GKDatabaseConnection",&,N,V_writerConnection
T@"<GKPlayerListReaderDelegate>",N,V_delegate
GKInvalidParameter
objects parameter must be of kind NSSet, NSOrderedSet or NSArray
-[NSManagedObjectContext(GKAdditions) _gkSafeSave]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/NSManagedObjectContext+GKAdditions.m
we will rollback to last known good state because we FAILED TO SAVE(%@), ERROR: %@
SUCCESFULLY SAVED(%@)
CAUGHT EXCEPTION DURING SAVE(%@): %@ at %@
GKTournamentErrorDomain
The tournament could not be loaded.
Registration for tournament is not open.
Player is not registered in tournament.
Tournament is in invalid state for requested operation.
Could not complete operation requested due to invalid tournament player state.
Player has already registered for this tournament.
Play in tournament currently in progress on another device. Must end play in tournament on that device before playing on this device.
Player is not signed into iCloud.
CloudKit server record changed.
Cannot create a custom tournament, local player already has an active custom tournament for this tournament definition.
    SELECT %@     FROM players     INNER JOIN player_relationships USING (player_id)     WHERE relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)         AND familiarity = %s
friend_recommendations_expiration_date
SELECT %@     FROM requests         INNER JOIN reject_friend_requests USING (request_id)     WHERE player_gcid = %s;
error while decoding rejectFriendRequest delayed request archive:%@
    SELECT %@     FROM players         INNER JOIN player_relationships USING (player_id)     WHERE relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)         AND familiarity = %s
%@ is being asked to get incoming friend requests for multiple players. This is not currently supported.
<gone>
setting token:%@ for environment:%d
GKPlayerInternal
error while decoding playerInternal archive:%@ and playerInternal:%@
LOADING ACCOUNT:%@: no credential
LOADING ACCOUNT:%@: no player ID in this account
LOADING ACCOUNT:%@: No auth tokens
altDSID
dsid
GKCredentialScope
ACCOUNT:%@: auth token for environment:%@ authToken:%@
ACCOUNT:%@: filtering environment:%@
v32@?0@"NSNumber"8@"NSString"16^B24
-%d-mod-date
NOT GRANTED ACCESS TO GAME CENTER ACCOUNTS DUE TO AN ACCOUNT INTERNAL ERROR
NOT GRANTED ACCESS TO GAME CENTER ACCOUNTS
DELETE ACCOUNT(%@): success:%d error:%@
v24@?0@"ACAccountType"8@"NSError"16
%@: No account for credential %@
%@: set bits:%lX cred:%@ 
%@: Failed to save credential %@ (%@)
@"NSArray"16@?0@"ACAccount"8
q24@?0@"GKPlayerCredential"8@"GKPlayerCredential"16
%@: More than one existing account for username %@. Shouldn't be possible.
NOT GRANTED ACCESS TO IDMS ACCOUNTS DUE TO AN ACCOUNT INTERNAL ERROR - NOT FATAL
NOT GRANTED ACCESS TO IDMS ACCOUNTS. PLEASE VERIFY ENTITLEMENTS FOR CURRENT DAEMON
STORING ACCOUNT: account:%@ environment:%d scope:%lX
STORING ACCOUNT: account:%@ does not exist, creating
STORING ACCOUNT: SAVING TOKEN (if not nil):%@ environment:%d
STORING ACCOUNT will save: account:%@ player:%@ token:%@
GKEnvironment
STORING ACCOUNT: SAVING ACCOUNT:%@
SAVED ACCOUNT: %@ success:%d error:%@
DELETE ACCOUNT: account %@ doesn't exist, ignoring
DELETE ACCOUNT: removing %@
DELETE ACCOUNT(%@): REMOVED:%@ success:%d error:%@
GKSandboxTokenID
GKEnvToken-
X-Apple-ActionSignature
GKFairPlay
complete
TB,R,N,GisComplete,V_complete
SAPVersion
T@"NSString",&,V_SAPVersion
1.2.11
error while creating cache directory:%@
Error writing new local player avatar image (%@) to image cache: %@
Saved new local player avatar image to image cache: %@
%@:%@: error loading image data:%@
   but we received image data anyway
%@:%@: no image data received, but no error received either
%@: Did not receive http status OK (received %@) for url: %@
com.apple.gamecenter.loadRemoteImage.queue
_gkLoadRemoteImageDataForUrl: %@
Loaded cached image from file cache path: %@
Did not find image at cache path %@, will load from server.
_gkLoadRemoteImageDataForUrl:subdirectory:filename:queue:imageQueue:handler: error creating directory:%@
Loaded and cached image data from server: %@
Error writing image data to image cache %@: %@
tournamentDefinitionID
creationMethod
maxPlayerShards
PreRegistrationTime
recurrenceRule
T@"NSString",&,N,V_tournamentDefinitionID
T@"NSString",&,N,V_tournamentName
Tq,N,V_tournamentNameFormat
T@"NSString",&,N,V_tournamentDescription
T@"NSString",&,N,V_tournamentIcon
Tq,N,V_tournamentType
Tq,N,V_creationMethod
Tq,N,V_seedingMethod
Tq,N,V_participationType
Tq,N,V_scoringMethod
Tq,N,V_maxPlayers
Tq,N,V_minPlayers
Tq,N,V_maxPlayerShards
Td,N,V_typicalGameplayDuration
Td,N,V_tournamentDuration
Td,N,V_PreRegistrationTime
T@"GKRecurrenceRule",&,N,V_recurrenceRule
Tq,N,V_maxReplays
Tq,N,V_autoTournamentIndex
T@"NSString",&,N,V_customTournamentName
Tq,N,V_customTournamentNameFormat
T@"NSString",&,N,V_customTournamentIcon
TB,N,V_customTournamentAllowIcon
Tq,N,V_customSeedingMethods
Tq,N,V_customScoringMethods
Tq,N,V_customMaxPlayers
Tq,N,V_customMinPlayers
Td,N,V_customTournamentDuration
Tq,N,V_customMaxReplays
tournamentCreator
icon
startTime
isCreatorInTournament
T@"GKTournamentDefinitionInternal",&,N,V_tournamentDefinition
T@"GKPlayerInternal",&,N,V_tournamentCreator
T@"NSString",&,N,V_icon
Td,N,V_duration
T@"NSDate",&,N,V_startTime
TB,N,V_isCreatorInTournament
replayCount
participantState
cheatingIndicator
T@"NSString",&,N,V_tournamentID
T@"GKPlayerInternal",&,N,V_player
Tq,N,V_score
Tq,N,V_playerGroup
Tq,N,V_replayCount
Tq,N,V_participantState
TB,N,V_cheatingIndicator
participantStates
startIndex
count
T@"NSArray",&,N,V_participantStates
Tq,N,V_startIndex
Tq,N,V_count
tournamentsPlayed
highestRank
latestRank
averageRank
bestScore
latestScore
averageScore
historicalRanks
Tq,N,V_tournamentsPlayed
Tq,N,V_highestRank
Tq,N,V_latestRank
Tq,N,V_averageRank
Tq,N,V_bestScore
Tq,N,V_latestScore
Tq,N,V_averageScore
T@"NSMutableArray",&,N,V_historicalRanks
topScore
friendCount
globalRank
globalPlayerCount
Tq,N,V_topScore
Tq,N,V_friendRank
Tq,N,V_friendCount
Tq,N,V_globalRank
Tq,N,V_globalPlayerCount
localParticipant
leaderboard
tournamentError
customTournamentCreator
nextTournamentID
nextTournamentBeginDate
inviteURLForMessages
Tq,N,V_randomSeed
T@"NSDate",&,N,V_registrationBeginDate
T@"NSDate",&,N,V_registrationEndDate
T@"NSDate",&,N,V_tournamentBeginDate
T@"NSDate",&,N,V_tournamentEndDate
Tq,N,V_tournamentState
T@"GKScoreInternal",&,N,V_bestScore
T@"GKPlayerInternal",&,N,V_winningPlayer
Tq,N,V_playerCount
T@"GKTournamentParticipantInternal",&,N,V_localParticipant
T@"GKLeaderboardInternal",&,N,V_leaderboard
Tq,N,V_tournamentError
T@"NSURL",&,N,V_inviteURLForMessages
Tq,N,V_tournamentNumber
T@"GKPlayerInternal",&,N,V_customTournamentCreator
T@"NSString",&,N,V_nextTournamentID
T@"NSDate",&,N,V_nextTournamentBeginDate
SELECT %@     FROM requests         INNER JOIN friend_requests USING (request_id)     WHERE player_gcid = %s;
error:%@ while decoding IssueFriendRequest archive in %@
GKBulletinNearbyInvite: initWithPlayer: localizedGameName: inviteDictionary
GKBulletinNearbyInvite: initWithPlayer: - No message in Nearby Invite. Dropping on the floor
no message in nearby invite -- displayName:%@ gameName:%@ message:%@ from dict:%@
GKBulletinNearbyInvite: handleAction:
bulletin handle nearby invite action: %@
T@"NSDictionary",&,V_inviteDictionary
Cannot use dispatchGroup with GKCacheTransactionGroup
+[GKCacheTransactionGroup dispatchGroup]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKCacheTransactionGroup.m
Cannot use dispatchGroupWithName with GKCacheTransactionGroup
+[GKCacheTransactionGroup dispatchGroupWithName:]
GKCacheTransactionGroup: transactionGroupWithContext
transactionGroup
Cannot use initWithName: with GKCacheTransactionGroup
-[GKCacheTransactionGroup initWithName:]
GKCacheTransactionGroup: initWithName:
%@ (context != ((void *)0))
[%s (%s:%d)]
-[GKCacheTransactionGroup initWithName:context:resourceManager:client:]
Resetting cache of idle client %@
v16@?0Q8
GKCacheTransactionGroup: performOnManagedObjectContext
GKCacheTransactionGroup: performAndJoinForResources:
-[GKCacheTransactionGroup writeResources:queue:block:]
GKCacheTransactionGroup
-[GKCacheTransactionGroup readResources:queue:block:]
client
T@"GKClientProxy",&,N,V_client
T@"NSManagedObjectContext",&,N,V_context
T@"GKResourceManager",N,V_weakResourceManager
GKManagedObjectContextTransactionCountKey
    SELECT %@     FROM requests         INNER JOIN statuses USING (request_id)     WHERE player_gcid = %s     ORDER BY time_stamp DESC;
%@ is being asked to read statuses for multiple players. This is not currently supported.
macos
appletvos
watchos
GKGameDescriptor: initWithPushDictionary
bundleIdentifier
No platform string for specified GKGamePlatform value (%@), defaulting to iOS.
bundleIdentifier:%@
bundleVersion:%@
adamID:%@
externalVersion:%@
shortBundleVersion:%@
platform:%@
T@"NSNumber",&,N,V_adamID
T@"NSNumber",&,N,V_externalVersion
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_bundleVersion
T@"NSString",C,N,V_shortBundleVersion
Tq,N,V_platform
T@"NSString",R,&,D,N
displayName
T@"NSString",R,D,N
                           INSERT INTO requests (                           adam_id,                            bundle_id,                            bundle_version,                            external_version,                            player_gcid,                            time_stamp,                            verification_hash)                           VALUES (%s, %s, %s, %s, %s, %s, %s)
:verification_hash
                           INSERT INTO achievements (                           request_id,                            eligible_challenge_ids,                            should_screen_challenges,                            identifier,                            percent_complete)                           VALUES (%s, %s, %s, %s, %s);
:eligible_challenge_ids
:should_screen_challenges
:identifier
:percent_complete
GKGameplayBulletin initWithCoder:
receiverPlayerID
originatorPlayerID
receiverPlayer
receiverGuestPlayerID
originatorGuestPlayerID
receiverGuestPlayer
originatorGuestPlayer
storeURL
compatibleVersions
compatibleShortVersions
gameLocation
GKGameplayBulletin encodeWithCoder:
GKGameplayBulletin playerIsLocal:
GKGameplayBulletin isPushForLocalPlayers
GKGameplayBulletin isPushFromLocalPlayers
GKGameplayBulletin isCompatibleWithGameDescriptor:
GKGameplayBulletin determineGameLocationOnDeviceOnly
GKGameplayBulletin determineGameLocationOnDeviceViaCompatibilityMatrixWithCompletionHandler:
checking compatibility for app %@, compatibility matrix = %@
determineGameLocationOnDeviceViaCompatibilityMatrixWithCompletionHandler - Compatible app found
Cannot get compatibility matrix due to: %@
GKGamePlayerBulletin determineGameLocationOnDeviceOrInStoreWithCompletionHandler:
determineGameLocationOnDeviceOrInStoreWithCompletionHandler - Compatible App Installed
determineGameLocationOnDeviceOrInStoreWithCompletionHandler - No compatible App Installed
No compatible app installed
Error determining compatible game due to error loading store item: %@
Error determining compatible game with matrix: %@
GKGameplayBulletin gamePlatformWithHandler:
GKGameplayBulletin gamePlatformForBundleID:handler:
Error geting game metadata: %@
GKGameplayBulletin loadStoreItemWithCompletionHandler
Error loading store URL: %@
Error loading store items: %@
Error getting compatibility matrix: %@
Did not find a compatible game for the current platform. Not showing store page
GKGameplayBulletin loadOriginatorPlayerWithCompletionHandler:
loadOriginatorPlayerWithCompletionHandler: failed to load player profiles: %@
T@"NSString",&,V_receiverPlayerID
T@"NSString",&,V_originatorPlayerID
T@"GKPlayerInternal",&,V_receiverPlayer
T@"GKPlayerInternal",&,V_originatorPlayer
T@"NSString",&,V_receiverGuestPlayerID
T@"NSString",&,V_originatorGuestPlayerID
T@"GKPlayerInternal",&,V_receiverGuestPlayer
T@"GKPlayerInternal",&,V_originatorGuestPlayer
T@"NSURL",&,V_storeURL
T@"NSArray",&,V_compatibleVersions
T@"NSArray",&,V_compatibleShortVersions
TC,V_gameLocation
URLContext
T@"NSString",R,&
IllegalStateTransition
cannot transition from %@ to %@
@"NSString"8@?0
shouldEnter
didExit
didEnter
stateDidChangeFrom%@To%@
currentState
T@"NSString",&,V_currentState
validTransitions
T@"NSDictionary",&,V_validTransitions
T@"<_GKStateMachineDelegate>",V_delegate
shouldLogStateTransitions
TB,N,V_shouldLogStateTransitions
%@ didn't implement %@
badgeCounts
com.apple.badgecontroller.syncqueue
Failed to write badge counts %@
Failed to serialize badge counts %@
Failed to deserialize badge counts %@
GKBadgeController: badgeApplicationWithBundleID
GKBadgeController - RegisterBadgePermission denied
GKBadgeController: badgeApplicationWithBundleID - Badging enabled
Setting badge count for bundleID: %@ count: %@
-[GKBadgeController _dictionaryForBadgeType:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKBadgeController.m
-[GKBadgeController _badgeCountForBundleID:badgeType:]
%@ (dispatch_get_current_queue() != _syncQueue)
[%s (%s:%d)]
-[GKBadgeController badgeCountForBundleID:badgeType:]
-[GKBadgeController _totalBadgeCountForBundleID:]
GKBadgeController: setBadgeCount
setBadgeCount: Ignoring TB and sessions badge count, multiplayer is restricted
ignoring turn-based and sessions badge count update for %@ as multiplayer is restricted
GKBadgeController: registerBadgePermissionForBundleID:
GKInviteURLManager sharedManager
com.apple.gamecenter.inviteurlmanager
mostRecentInviteShareRootRecordID
T@"CKRecordID",&,N,V_mostRecentInviteShareRootRecordID
acceptingInProgressRecordIDs
T@"NSMutableSet",&,N,V_acceptingInProgressRecordIDs
inviteManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_inviteManagerQueue
Session
record
%@: recordID = %@, maxConnectedPlayers = %d, playersByIdentifier = %@, owner = %@
maxConnectedPlayers
emails
nicknames
com.apple.GameCenter.GKCloudGameSession.cache
sessionForIdentifier
sessionsForContainerName
updateSessionCacheWithHandler
updateSessionCacheDatabasesWithHandler
updateCacheForZoneID
updateCacheForDatabaseScope
com.apple.socialgaming.friendplayers
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
Error fetching changes when updating cloud game session cache for database scope %@ 
error %@
Did not find CloudKit change token expired error in partial error dictionary.
v28@?0@"CKServerChangeToken"8B16@"NSError"20
share
userIdentity
q24@?0@"GKCloudPlayer"8@"GKCloudPlayer"16
identifiers
names
error while decoding names archive in cloudGameSession:%@
error while decoding emails archive in cloudGameSession:%@
FriendPlayers
Error saving friends record: %@
getFriendPlayersWithHandler
%@%@%@%@%@
createSession
removeSessionWithIdentifier
bundleIDsForContainerName
iCloud.
saveData
getShareURLWithHandler
zoneID.zoneName
private
subscribeToAllDBWithHandler
privateDBSubscription
sharedDBSubscription
SESSION_SHARE_INVITE_TITLE
GKNotificationCenter@2x
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
saveInformationForPrimaryUserForSessionWithShareMetadata
acceptShareURL %@
Error accepting share URL %@
v24@?0@"CKShareMetadata"8@"NSError"16
handle CloudKit share metadata - %@
Already processing same share metadata, returning.
acceptShareWithShareMetadata
launch
Accepting CKShareMetadata for Messages multiplayer invite.
Error accepting share for multiplayer invite: %@
Fetching share record for multiplayer invite to generate initiate bulletin.
Error fetching share record for multiplayer invite %@
SESSION_INVITE_ALERT_TITLE
SESSION_INVITE_ALERT_BODY
SESSION_INVITE_ALERT_YES_BUTTON
SESSION_INVITE_ALERT_NO_BUTTON
Error updating cache after accepting CloudKit share metadata %@
Error accepting CloudKit share metadata %@ %@
openStoreForBundleID
deleteShareWithHandler
removePlayers
saveConnectionStateForSession
packFakeRealTimeBulletinWithZoneData: %@
self-push-token
self-nat-type
self-nat-ip
self-blob
blob-type
matchType
Error unarchiving connectionData from multiplayer invite record %@ 
Unarchived recordDictionary from invite record: %@
invite-type
Updated Messages invite record save completed: %@
Error searching for identity and/or saving invite CKRecord %@
MESSAGE_BASED_INVITEE_ERROR_ALERT_TITLE
MESSAGE_BASED_INVITEE_NOT_FOUND_ALERT_BODY
MESSAGE_BASED_INVITEE_ERROR_ALERT_BUTTON
Could not generate invite bulletin from CKRecord, recordID (%@) does not equal most recent invite share root recordID %@
Could not generate invite bulletin from CKRecord %@
Error saving CKRecord (for Messages Invite) because server record changed. Will fetch updated record from CloudKit and retry save.
GK-InviteMessage: begin searchAndSaveIdentityForRecord
no player is signed in to Game Center
GK-InviteMessage: got IM accounts: %@
Error decoding invitedPlayer archive in cloudGameSession from record %@ 
GK-InviteMessage:playerContacts: %@
GK-InviteMessage:checking (local) account: %@
GK-InviteMessage:checking (local) account alias(formatted): %@ against playerContacts
GK-InviteMessage: Found a match (formatted)->saving into invite CKRecord: %@ <- %@
GK-InviteMessage:checking (local) account alias (formatted): %@ against playerContacts
GK-InviteMessage:Found a match->saving into player: %@ <- %@
Error deleting invite record: %@
Inivte record: %@
GKCloudGameSession updateBadgeCountsForContainerName
v24@?0Q8@"NSError"16
badgeCountForContainerName
saveBadgeStateForSession
T@"CKRecord",&,N,V_record
playersByIdentifier
T@"NSDictionary",&,N,V_playersByIdentifier
connectedPlayerIDs
T@"NSData",&,N
T@"NSDate",R,N
T@"GKCloudPlayer",R,N
nicknamesByIdentifier
T@"NSMutableDictionary",&,D,N
containerName
playersByEmail
T@"NSDictionary",R,N
emailsByCKID
Group
<%s:%p>, %@
GKDispatchGroup: perform
-[GKDispatchGroup perform:]
GKDispatchGroup
%@, PERFORM, %@, %f, 
%@, DONE, %@, %f, %f
-[GKDispatchGroup notifyOnQueue:block:]
GKDispatchGroup: notifyOnQueue
%@, NOTIFY WAITING, %@, %f, 
%@, NOTIFY CALLED, %@, %f, %f
-[GKDispatchGroup _waitWithDispatchTimeout:]
%@, WAITING, %@, %f, 
%@, WAITED, %@, %f, %f
%@, TIMED OUT, %@, %f, %f
GKDispatchGroup: join
GKDispatchGroup<%p>
T@"GKActivity",&,V_activity
result
T@,&,V_result
loggingEnabled
TB,N,GisLoggingEnabled,V_loggingEnabled
GKDataDetectorsService dataDetectorsStorageFilePath
dataDetectors.data
DATA_DECTECTOR_KEY_PLAY
DATA_DECTECTOR_KEY_PLAYED
DATA_DECTECTOR_KEY_JOIN
DATA_DECTECTOR_KEY_TRY
GKDataDetectorsUpdateData
v24@?0@"NSString"8^B16
v32@?0@"GKGameInternal"8Q16^B24
Error retrieving games for Data Detectors: %@
com.apple.developer.icloud-container-identifiers
createSessionInContainer
loadSessionsInContainer
removeSession
conflictingData
setConnectionStateForSession
isBusy
didSaveConnectionStateForGameSession
Invalid SGConnectionState (%ld) attempted to be set for player
setBadgesForSession
sendMessageForSession
saveConnectionStateForLostPlayer
Saved connection state for lost player: %s, error.code: %ld
Unavailable Player Identification
icons
flags
numberOfLeaderboards
unknown
macOS
tvOS
watchOS
 (%@)
T@"NSDictionary",&,N,V_icons
TB,D,N,GisPrerendered
TS,N,V_numberOfLeaderboards
T@"NSString",&,N,V_defaultLeaderboardIdentifier
TS,N,V_numberOfLeaderboardSets
TS,N,V_numberOfAchievements
TS,N,V_maxAchievementPoints
canBeIndexed
T@"GKGameDescriptor",R,N
itunes
macappstore
GKGameInternal: storeItemURLForGamePlatform:
%@ (0.0 <= averageUserRating && averageUserRating <= 1.0)
[%s (%s:%d)]
-[GKStoreItemInternal setAverageUserRating:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKGameInternal.m
T@"NSString",&,N,V_artistName
T@"NSString",&,N,V_priceDisplay
T@"NSURL",&,N,V_viewItemURL
T@"NSURL",&,N,V_shortViewItemURL
T@"NSURL",&,N,V_tellAFriendMessageContentsUrl
T@"NSDate",&,N,V_expirationDate
TI,N,V_numberOfUserRatings
Tf,N,V_averageUserRating
TB,N,V_owned
T@"GKScoreInternal",&,N,V_score
T@"NSDate",&,N,V_lastPlayedDate
T@"NSDate",&,N,V_purchaseDate
TS,N,V_achievements
Ts,N,V_achievementPoints
TS,N,V_friendRank
TS,N,V_maxFriendRank
TI,N,V_rank
TI,N,V_maxRank
T@"NSString",&,N,V_reason
T@"NSString",&,N,V_engineID
T@"GKGameRecordInternal",&,N,V_game
T@"NSDate",&,N,V_date
Authorized 
Active 
Primary 
<%@ %p> account:%@ player:(%@) scope:<%@> (%@) environment:%d token:%@ altDSID:%@ DSID:%@
authenticationToken
scope
scopeModificationDate
DSID
T@"NSString",&,V_accountName
T@"NSString",&,V_authenticationToken
T@"NSString",&,V_altDSID
T@"NSString",&,V_DSID
rawPassword
T@"NSString",&,V_rawPassword
T@"GKPlayerInternal",&,V_playerInternal
Tq,V_environment
TI,V_scope
scopeAsString
T@"NSDate",&,V_scopeModificationDate
Asked to read friends for more than a single player. This is not supported.
GKRelationshipDetailsTTL
    SELECT %@     FROM players         LEFT OUTER JOIN (SELECT player_id, number_of_friends_in_common, number_of_games_in_common, expiration_date FROM player_relationships WHERE relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)) relationship USING (player_id)     WHERE player_gcid = %s;
relationship.expiration_date
com.iosframeworksqa.GameKitTester
apple.BattleJack2
com.apple.sample
com.apple.onword
com.device-services.danil
setTestGame: %@
Game Center (default)
setTestGame: rejected non-whitelisted bundleID: %@
testGame
T@"GKGameInternal",&,N,V_testGame
                           INSERT INTO friend_requests (                           request_id,                            payload)                           VALUES (%s, %s);
More than one store and forward entry for friend requests
Block signature %s
Block is nil!!!
kGKArgumentIndexesCopied
%@ (indexesCopied == nil)
[%s (%s:%d)]
Must only copy arguments once per invocation : %@
-[NSInvocation(GKProxyHelpers) _gkCopyArguments]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/NSInvocation+GKAdditions.m
%@ (indexesCopied != nil)
[%s (%s:%d)]
Must release arguments only once per invocation for which _gkCopyArguments has been called : %@
-[NSInvocation(GKProxyHelpers) _gkClearCopiedArguments]
fake reply: %@ %@
noData
internalAccount
T@"ACAccount",R,&,N,V_internalAccount
personID
authToken
internalStore
T@"ACAccountStore",R,&,N,V_internalStore
photos
playerID:%@ alias:%@ FL%@
serverRepresentation doesn't do what we think it should do
NAME_DESCRIPTION
T@"NSString",&,N,V_teamPlayerID
T@"NSString",&,N,V_gamePlayerID
T@"NSString",&,N,V_alias
T@"NSNumber",&,N,V_avatarType
monogramComponents
T@"NSArray",&,N,V_monogramComponents
T@"NSDictionary",&,N,V_photos
isFriend
isAnonymousPlayer
isUnknownPlayer
isAutomatchPlayer
isLoaded
isGuestPlayer
TS,N,V_numberOfFriendsInCommon
TS,N,V_numberOfGamesInCommon
T@"NSNumber",&,N,V_friendLevel
T@"NSNumber",&,N,V_friendBiDirectional
T@"NSNumber",&,N,V_friendPlayedWith
T@"NSNumber",&,N,V_friendPlayedNearby
compositeName
T@"GKGameInternal",&,D,N
guestIdentifier
T@"NSString",&,N,V_messagesID
TS,N,V_numberOfFriends
TS,N,V_numberOfGames
TI,N,V_numberOfAchievements
TI,N,V_numberOfAchievementPoints
emailAddresses
T@"NSArray",&,D,N
TB,D,N,GisPurpleBuddyAccount
TB,D,N,GisDefaultNickname
TB,D,N,GisPhotoPending
numberOfRequests
TS,D,N
numberOfChallenges
asking for GKLocalPlayer playerID when player is not authenticated. Might be in the process of being authenticated or this is a race condition.Call stack:%@
asking for GKLocalPlayer playerID when player is not authenticated.Might be in the process of being authenticated or this is a race condition.Call stack:%@
loginStatus
TQ,V_loginStatus
T@"NSString",&,N,V_address
T@"NSString",&,N,V_addressSHA1
T@"NSString",&,N,V_addressPrefix
TB,N,V_verified
T@"NSString",&,N,V_message
T@"NSString",&,N,V_reason2
TI,N,V_rid
Ti,N,V_source
AnonymousID
UnknownID
AutoMatchID
ANONYMOUS_PLAYER_NICKNAME
AUTO_MATCH_PLAYER
automatchPosition
Tq,N,V_automatchPosition
GUEST_DEFAULT_ALIAS_FORMAT
hostPlayerInternal
T@"GKPlayerInternal",&,N,V_hostPlayerInternal
concernID
TI,N,V_concernID
T@"NSString",C,N,V_message
                           INSERT INTO requests (                           adam_id,                            bundle_id,                            bundle_version,                            external_version,                            player_gcid,                            time_stamp)                           VALUES (%s, %s, %s, %s, %s, %s)
                           INSERT INTO challenges (                           request_id,                            request_type,                            payload)                           VALUES (%s, %s, %s);
attributes
hasFullPlayer
T@"NSString",&,N,V_groupIdentifier
T@"NSString",&,N,V_achievedDescription
T@"NSString",&,N,V_unachievedDescription
TB,D,N,GisHidden
TB,D,N,GisReplayable
T@"NSDate",&,N,V_lastReportedDate
Td,N,V_percentComplete
leaderboardSetIdentifier
overallRank
overallRankCount
friendRankCount
playerScore
T@"NSString",&,N,V_leaderboardSetIdentifier
T@"NSDate",&,N,V_lastSubmittedDate
TI,N,V_overallRank
TI,N,V_overallRankCount
TS,N,V_friendRankCount
T@"NSArray",&,N,V_scores
T@"GKScoreInternal",&,N,V_playerScore
maxRange
leaderboardIdentifiers
T@"NSDictionary",&,N,V_leaderboardIdentifiers
setIdentifier
leaderboardIdentifier
groupLeaderboardIdentifier
groupCategory
valueSet
T@"NSString",&,N,V_leaderboardIdentifier
T@"NSString",&,N,V_groupLeaderboardIdentifier
T@"NSString",&,N,V_formattedValue
Tq,N,V_value
TQ,N,V_context
TB,N,V_valueSet
-[GKUpdateGroupNotifier addUpdate:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKUpdateGroup.m
notifiers
T@"NSMutableArray",&,N,V_notifiers
updateCount
GKDataCacheName
GKDelayedRequestCacheName
GKEnvironmentProduction
GKEnvironmentSandbox
GKEnvironmentTD1
GKEnvironmentTD1External
GKEnvironmentTD2
GKEnvironmentTD2External
GKEnvironmentTD3
GKEnvironmentTD3External
GKEnvironmentTD4
GKEnvironmentTD4External
GKEnvironmentCustom
GKEnvironmentUninitialized
databasePath
T@"NSString",C,N,V_databasePath
GKGameSessionErrorDomain
ERROR_ICLOUD_NOT_AUTHENTICATED_DESCRIPTION
ERROR_SESSION_CONFLICT_DESCRIPTION
ERROR_SESSION_NOT_SHARED_DESCRIPTION
ERROR_SESSION_CONNECTION_CANCELLED_BY_USER
ERROR_SESSION_CONNECTION_FAILED_DESCRIPTION
ERROR_SESSION_HAS_MAX_CONNECTED_PLAYERS_DESCRIPTION
ERROR_SEND_DATA_NOT_CONNECTED_DESCRIPTION
ERROR_SEND_DATA_NO_RECIPIENTS_DESCRIPTION
ERROR_SEND_DATA_PLAYERS_NOT_REACHABLE
ERROR_SEND_RATE_LIMIT_REACHED
ERROR_BAD_CONTAINER
ERROR_CLOUD_QUOTA_EXCEEDED
ERROR_NETWORK_FAILURE
ERROR_CLOUD_DRIVE_DISABLED
ERROR_SESSION_INVALID
%@ needs to implement me!
T@"NSDate",&,N,V_issueDate
T@"NSDate",&,N,V_completionDate
T@"NSOrderedSet",&,N,V_compatibleBundleIDs
T@"GKGameInternal",&,N,V_game
subtitleText
SHORT_CHALLENGE_SCORE_TITLE_FORMAT
T@"GKScoreInternal",C,N,V_score
SHORT_CHALLENGE_ACHIEVEMENT_TITLE_FORMAT
T@"GKAchievementInternal",C,N,V_achievement
show-details
show-real-name
show-emails-hashed
show-emails
show-accounts
gk-get-profile-info_0x%x
profile-infos
error while loading data for player profiles: %@
received incomplete response from server; expected a player record for %@ but didn't get anything back
gk-get-incoming-friend-requests
error while loading data for friend requests: %@
Invalid attempt to set extension proxy(%@) on extension(%@)
-[GKExtensionClientProxy setExtensionProxy:forBundleID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKExtensionClientProxy.m
-[GKExtensionClientProxy setHostPID:reply:]
Associating extension %@ with client %@ : pid(%d)
                        INSERT OR IGNORE INTO players (                         player_gcid,                         friends_expiration_date)                         VALUES (%s, %s);
:friends_expiration_date
                        UPDATE players SET                         friends_expiration_date = %s                         WHERE player_gcid = %s;
                        INSERT OR IGNORE INTO players (                         player_gcid,                         first_name,                         last_name,                         friend_level,                         friend_bi_directional,                         friend_played_with,                         friend_played_nearby,                         alias)                         VALUES (%s, %s, %s, %s, %s, %s, %s, %s);
                        UPDATE players SET                         first_name = %s,                         last_name = %s,                         friend_level = %s,                         friend_bi_directional = %s,                         friend_played_with = %s,                         friend_played_nearby = %s,                         alias = %s                         WHERE player_gcid = %s;
:relative_to_player_gcid
%@ is being asked to write friends for multiple players. This is not currently supported.
SELECT familiarity FROM player_relationships WHERE player_id = (SELECT player_id FROM players WHERE player_gcid = %s) AND relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s);
reader-%@-localplayer-%@-language-%@
v24@?0@"GKResource"8^B16
currentPlayer
matchData
B32@?0@"GKTurnBasedParticipantInternal"8Q16^B24
Matching
Inactive
Complete
GKTurnBasedMatchInternal->state Unexpected match status encountered: %@
T@"NSString",&,N,V_status
TI,N,V_state
T@"NSDate",&,N,V_creationDate
T@"NSDate",&,N,V_lastTurnDate
TC,N,V_minPlayers
TC,N,V_maxPlayers
T@"NSDate",&,N,V_deletionDate
Tc,N,V_currentParticipant
TI,N,V_turnNumber
T@"NSString",&,N,V_lastTurnPlayerID
T@"NSData",&,N,V_matchData
T@"NSString",&,N,V_matchDataVersion
T@"NSArray",&,N,V_participants
T@"NSString",&,N,V_bundleVersion
T@"NSString",&,N,V_shortBundleVersion
T@"NSArray",&,N,V_exchanges
T@"GKPlayerInternal",&,N,V_currentPlayer
matchOutcome
T@"NSString",&,N,V_sessionID
T@"GKPlayerInternal",&,N,V_invitedBy
T@"NSString",&,N,V_inviteMessage
T@"NSDate",&,N,V_timeoutDate
TI,N,V_matchOutcome
TC,N,V_slot
isAutomatchParticipant
recipientIndexes
T@"NSString",&,N,V_exchangeID
TC,N,V_senderIndex
T@"NSArray",&,N,V_recipientIndexes
T@"NSString",&,N,V_statusString
T@"NSDate",&,N,V_sendDate
T@"NSArray",&,N,V_replies
TC,N,V_recipientIndex
T@"NSDate",&,N,V_replyDate
defaultNumberOfPlayers
playerAttributes
recipientPlayerIDs
localizableInviteMessage
preloadedMatch
tournamentForInvitePool
v32@?0@"GKPlayerInternal"8Q16^B24
TC,N,V_defaultNumberOfPlayers
TQ,N,V_playerGroup
TI,N,V_playerAttributes
T@"NSArray",&,N,V_recipients
T@"NSArray",&,N,V_recipientPlayerIDs
T@"NSString",C,N,V_inviteMessage
T@"NSDictionary",&,N,V_localizableInviteMessage
TB,N,V_restrictToAutomatch
T@"GKTournamentInternal",&,N,V_tournamentForInvitePool
TQ,N,V_matchType
T@"NSString",&,N,V_rid
TI,N,V_version
TB,N,GisPreloadedMatch,V_preloadedMatch
GKMultiplayer Internal: inviteWithBulletin:
inviteWithBulletin: Invite has been set up
%@-%@-%@
participantID
peerID
peerNATType
peerNATIP
T@"NSString",&,N,V_inviteID
T@"NSString",&,N,V_peerID
T@"NSData",&,N,V_peerPushToken
Tq,N,V_peerNATType
T@"NSData",&,N,V_peerNATIP
T@"NSData",&,N,V_peerBlob
TC,N,V_version
T@"NSString",&,N,V_participantID
T@"NSString",&,N,V_deviceID
isNearby
T@"NSSet",&,N,V_versions
T@"NSSet",&,N,V_shortVersions
-[GKInternalRepresentation(Cache) initWithCacheObject:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/GKInternalRepresentation+Cache.m
-[GKInternalRepresentation(Cache) updateWithCacheObject:]
%@ must override +propertiesToFetch
+[GKInternalRepresentation(Cache) propertiesToFetch]
%@ must override -updateWithProperties:
-[GKInternalRepresentation(Cache) updateWithProperties:]
-[GKGameInternal(Cache) updateWithCacheObject:]
%@ ([property isKindOfClass:[NSString class]])
[%s (%s:%d)]
+[GKGameRecordInternal(Cache) propertiesToFetch]_block_invoke_2
game.
-[GKStoreItemInternal(Cache) updateWithCacheObject:]
-[GKStoreItemInternal(Cache) updateWithServerRepresentation:]
long
-[GKPlayerInternal(Cache) updateWithCacheObject:]
count:
friendRequestList.entries
challengeList.entries
-[GKTurnBasedMatchInternal(Cache) updateWithCacheObject:]
participant is a guest with identifier = %@
@24@?0@"GKTurnBasedParticipantCacheObject"8Q16
@24@?0@"GKTurnBasedExchangeCacheObject"8Q16
-[GKTurnBasedParticipantInternal(Cache) updateWithCacheObject:]
-[GKTurnBasedExchangeInternal(Cache) updateWithCacheObject:]
B32@?0@"GKTurnBasedParticipantCacheObject"8Q16^B24
%@ (index != NSNotFound)
[%s (%s:%d)]
invalid recipientIndex %ld encountered %@ searching in participants:%@
-[GKTurnBasedExchangeInternal(Cache) updateWithCacheObject:]_block_invoke
@24@?0@"GKTurnBasedExchangeReplyCacheObject"8Q16
-[GKTurnBasedExchangeReplyInternal(Cache) updateWithCacheObject:]
GKProcessedResourceKeyTTL
com.apple.gamecenter.GKRequestDeduper.%p.processedResults
com.apple.gamecenter.GKRequestDeduper.requestPools
namedPool.%@
defaultPool
com.apple.gamecenter.GKRequestDeduper.%@
Avoiding redundant load for %@
v24@?0@"GKRequestDeduper"8^B16
Request(%@) opened for resources %@
Request(%@) completed for resources %@
v16@?0@"GKThreadsafeDictionary"8
dispatchGroup
T@"GKDispatchGroup",&,N,V_dispatchGroup
processedResources
T@"GKThreadsafeDictionary",&,N,V_processedResources
poolName
T@"NSString",C,N,V_poolName
GKAppInitUnknown
GKAppInitInProgress
GKAppInitialized
TQ,N,V_eventType
T@,C,N,V_context
%@ (bundleIdentifier != nil)
[%s (%s:%d)]
GKClientProxy MUST have a bundleIdentifier
-[GKClientProxy initWithBundleIdentifier:bundleOrNil:pid:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKClientProxy.m
com.apple.gamecenter.clientproxy.authQueue
com.apple.gamecenter.clientproxy.replyQueue
com.apple.gamecenter.clientproxy.cacheQueue
com.apple.gamecenter.clientproxy.delayedRequestsQueue
com.apple.gamed.gk-app-sessions-%@-%d
GKClientProxy: updateIfRecentlyInstalled
GKClientProxy: updateIfRecentlyInstalled - workspace and appProxy exist, updating
%@ (identifier:%@ version:%@ pid:%d)
New launch event(%d) context %@ for client %@
com.apple.GameKit.GKClient.sync
-[GKClientProxy performSync:]
gk-check-match-status
poll-delay-ms
ticket
SUCCESS matches: %@
peers
gk-invitation-cancel
GKClientProxy - deleteInviteSession
initialized
TB,V_initialized
initAppStateMachine
T@"_GKStateMachine",&,V_initAppStateMachine
appSessions
T@"GKThreadsafeDictionary",&,N,V_appSessions
delayedRequestsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delayedRequestsQueue
delayedRequestsDBConnection
T@"GKDatabaseConnection",&,N,V_delayedRequestsDBConnection
T@"GKResourceManager",&,N,V_resourceManager
pendingDataTypesForRefresh
T@"NSMutableSet",&,N,V_pendingDataTypesForRefresh
extensionProxies
T@"NSMapTable",&,N,V_extensionProxies
preferencesFromBag
T@"NSDictionary",C,N,V_preferencesFromBag
authQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_authQueue
replyQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_replyQueue
Ti,N,V_pid
T@"NSXPCConnection",N,V_connection
entitlements
T@"GKEntitlements",&,V_entitlements
T@"NSString",&,N,V_bundleIdentifier
T@"NSString",&,N,V_bundleShortVersion
deniedProductionEnvironment
TB,N,V_deniedProductionEnvironment
productionSigned
TB,N,V_productionSigned
TB,N,V_installed
supportsMultipleActivePlayers
TB,N,V_supportsMultipleActivePlayers
achievementsRateLimitingStartDate
T@"NSDate",&,N,V_achievementsRateLimitingStartDate
achievementsRateLimitingCurrentNumberOfRequests
Tq,N,V_achievementsRateLimitingCurrentNumberOfRequests
achievementsRateLimitedCurrentState
TC,N,V_achievementsRateLimitedCurrentState
scoresRateLimitingStartDate
T@"NSDate",&,N,V_scoresRateLimitingStartDate
scoresRateLimitingCurrentNumberOfRequests
Tq,N,V_scoresRateLimitingCurrentNumberOfRequests
scoresRateLimitedCurrentState
TC,N,V_scoresRateLimitedCurrentState
locale
T@"NSLocale",R,D,N
viewService
T@"GKClientProxy<GKUIViewService>",N,V_weakViewService
currentGame
T@"GKGameInternal",&,N,V_currentGame
applicationState
TI,V_applicationState
previousApplicationState
TI,V_previousApplicationState
launchEvent
T@"GKEventTuple",&,N,V_launchEvent
pendingQuickAction
T@"GKQuickAction",&,N,V_pendingQuickAction
inviteSession
T@"GKInviteSession",&,V_inviteSession
currentMatchResponse
T@"GKMatchResponse",&,V_currentMatchResponse
GKClientProxy: clientForBundleID:
GKClientProxy: clientForBundleID: - Obtained bundleID
in clientForBundleID:bundle:pid:createIfNecessary: with no bundleID. Cannot get GKClientProxy without a bundleID
clientInit
clientForInviteSessionToken: incoming session token %@
Client candidate session token %@
v32@?0@"NSNumber"8@"GKClientProxy"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"GKClientProxy"8Q16^B24
%@ ([serviceClass isSubclassOfClass:[GKService class]])
[%s (%s:%d)]
-[GKClientProxy(GKDaemonProtocol) serviceForClass:transport:client:credential:]
GKClientProxy: client requests services for pid %d
%@ (pid == _pid)
[%s (%s:%d)]
-[GKClientProxy(GKDaemonProtocol) getServicesForPID:localPlayer:reply:]
credential: %@
alloc services for %@:%@
GKClientProxy: client requests private services for pid %d
-[GKClientProxy(GKDaemonProtocol) getPrivateServicesForPID:localPlayer:reply:]
alloc private services for %@:%@
response
@24@?0@"GKPlayerCredential"8Q16
v32@?0@"GKLocalPlayerInternal"8Q16^B24
reset loginCancelCount to 0
handleCloudKitShareMetadata
Received CloudKit share metadata from Messages for multiplayer invite.
sendAuthenticationDidChangeNotification:Failed to get authenticated Local players with status. error: %@
INVALID TRANSITION from %@ to %@
com.apple.gamed.GKSavedAppInitState
Auth state resolved %@ for client %@ : %d
Ignoring old appInit state -- %@ does not match client %@ : %d
saveAppInitState: saved: %@
saveAppInitState: cleared for client %@
saveAppInitState: ignoring old state -- %@ does not match client %@
did enter foreground: %@
Sending notification with bulletin %@
beginNetworkActivity encountered an error:%@
endNetworkActivity encountered an error:%@
resetNetworkActivity encountered an error:%@
 respondedToNearbyInvite encountered an error:%@
friendRequestSelected encounterd an error:%@
receivedChallengeSelected encountered an error:%@
completedChallengeSelected encounterred an error:%@
challengeReceived encountered an error:%@
challengeCompleted encountered an error:%@
scoreSelected encountered an error:%@
 achievement encountered an error:%@
fetchTurnBasedData encountered an error:%@
acceptMultiplayerGameInvite encountered an error:%@
v32@?0@8@"GKExtensionClientProxy"16^B24
 acceptInviteWithNotification encountered an error:%@
 declineInviteWithNotification encountered an error:%@
 cancelGameInvite encountered an error:%@
relayPushNotification encountered an error:%@
didConnectToParticipantWithID encountered an error:%@
didDisconnectFromParticipantWithID encountered an error:%@
didReceiveData encountered an error:%@
session:addedPlayer encountered an error:%@
session:removedPlayer: encountered an error:%@
 session:player:didChangeConnectionState: encountered an error:%@
session:player:didSaveData encountered an error:%@
session:didReceiveData:fromPlayer: encountered an error:%@
session:didReceiveMessage:withData:fromPlayer: encountered an error:%@
setBadgeCount:forType: encountered an error:%@
App is backgrounded, defering refresh until app is running in foreground for data type = %i
refreshContentsForDataType encountered an error:%@
Refreshing contents(%ld) userInfo: %@
setCurrentGame:serverEnvrionment:reply: encountered an error:%@
authenticatedPlayersDidChange: proxy send failed due to error: %@
authenticatedPlayersDidChange: sent to Client
authenticatedPlayersDidChange: sent to client:%@ <%@ %p>)
setLogBits: encountered an error:%@
background
gk-app-terminate
Terminated (exiting) client %@
Terminated (backgrounding) client %@
gk-bg-init
DelayedRequests-Sandbox
DelayedRequests
DelayedRequests-%@
%@.delayedRequests
delayed_requests.schema
%@ (_actualCurrentQueue == _delayedRequestsQueue)
[%s (%s:%d)]
-[GKClientProxy(DelayedRequests) _setupDelayedRequestsWriters]
-[GKClientProxy(DelayedRequests) _removeDelayedRequestStore]
Removing delayed request store "%@".
Deleted delayed request store file at path %@
gk-submit-scores
gk-submit-game-rating
gk-submit-achievements
gk-issue-challenges
gk-abort-challenges
gk-set-player-status
gk-get-image-upload-url
gk-delete-profile-image
gk-remove-game
gk-remove-all-friends
store and forward reentry count out of sync
Game Center not sending store and forward as achievements or scores are being sent on another thread
Game Center not sending achievements as they are being sent on another thread
Game Center not sending scores as they are being sent on another thread
Error submitting delayed requests for scores %@
Error submitting delayed requests for achievements %@
Error submitting delayed requests for challenges %@
Error submitting delayed requests for aborted challenges %@
Error submitting delayed requests for set player status %@
Error submitting delayed requests for set player photo %@
Error submitting delayed requests for delete player photo %@
Error submitting delayed requests for ratings %@
Error submitting delayed requests for remove game %@
Error submitting delayed requests for remove friend %@
GKSavedAppInitState
Subclasses must override +requiredEntitlements.
+[GKService requiredEntitlements]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKService.m
Subclasses must override +interfaceClass.
+[GKService interfaceClass]
T@"GKClientProxy",&,V_clientProxy
T@"GKDataTransport",&,V_transport
localPlayer
T@"GKPlayerInternal",&,V_localPlayer
T@"GKPlayerCredential",&,V_credential
SANDBOX_PRODUCTION_ERROR_MESSAGE
ENVIRONMENT FAIL:%@
GKUtilityService: getStoreBagValuesForKeys:
Error deleting cached image (%@) %@
Exiting in response to termination request
GKLocalPlayer.offline
Failure to save profile to %@ error %@
error while decoding GKPlayerInternal archive:%@
gk-get-auth-token-for-third-party
signOutPlayerWithHandler:%@
GKAccountService signOutPlayerWithHandler:
gk-logout-user result:%@
GKAccountService signOutPlayerWithHandler: removeCred (error:%d)
telling authkit DSID %@ is no longer in use
GKAuth:telling authkit account is not in use using altDSID:%@
GKAuth:telling authkit account is not in use using DSID:%@
GKLastPushTokenPlayerID
GKLastPushTokenEnvironment
GKLastPushTokenKey
GKLastPushTokenDateKey
GKAccountService signOutPlayerWithHandler: notify
setLastPrivacyNoticeVersionDisplayedForSignedInPlayer: %@
GKLastPrivacyNoticeVersionDisplayedForHashedPlayerID_%@
getLastPrivacyNoticeVersionDisplayedForSignedInPlayerWithHandler: Privacy notice version displayed: %@
setLastPersonalizationVersionDisplayedForSignedInPlayer: %@
GKLastPersonalizationVersionDisplayedForHashedPlayerID_%@
getLastPersonalizationVersionDisplayedForSignedInPlayerWithHandler: personalization version displayed: %@
isICloudAvailable
gk-tb-get-turn-counts
turn-counts
turn-count
GKAccountService _authenticateUsername
_authenticateUsername:%@
validatePasswordOnly
_authenticateUsername:Failed to post Request for gk-authenticate-user. Error: %@
_authenticateUsername:Result present for post request call for gk-authenticate-user
auth-token
missing altDSID for credential:%@ will try to get it from IDMS
Error when trying to get the full credential:%@
fixed the credential (%@) with a missing altDSID
_authenticateUsername:Server Error when posting request for gk-authenticat-user
no error, but missing playerID or token
_authenticateUsername:No result for Post request call
_authenticateUsername: notify
ds-password-change-url
_constructAuthenticationResponseWithError: no credential -- clearing appInit state
B16@?0@"GKGameRecommendationEntryCacheObject"8
B16@?0@"GKGameListEntryCacheObject"8
B16@?0@"GKAchievementPointsEntryCacheObject"8
GKAccountService _postLaunchEventsForGame:
Launch event(%d) context %@ for client %@
No launch event for client %@
GKAccountService renewAuthToken
GKAccountService renewAuthToken old token:%@
gk-renew-auth-token
GKAccountService renewAuthToken server error:%@
GKAccountService renewAuthToken server response:%@
GKAccountService renewAuthToken new auth token:%@
Error from setCredential:%@
Error renewing auth token: %@
GKAccountService _initGame
is-default-nickname
v24@?0d8@"NSError"16
renew-auth-token
%@ (username != ((void *)0))
[%s (%s:%d)]
-[GKAccountServicePrivate _authenticatedLocalPlayerWithUsername:inContext:isValid:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKAccountService.m
GKAccountService _authenticatedLocalPlayerWithUsername:
Cached local player incomplete, using archived local player (%@)
Cached local player incomplete, archived local player (%@) doesn't match %@
local player djinned up:%@ for %@
authGetFriendIDs
authGetCountOfChallenges
authGetCountOfTurns
_fetchCredentialsForUsername: failed to authenticate username and password. Error: %@
telling authkit altDSID %@ is in use
GKAuth:telling authkit account is in use using altDSID:%@
GKAuth:telling authkit account is in use using DSID:%@
v24@?0@"GKPlayerCredential"8@"NSError"16
_fetchCredentialsForUsername: no username or password; attempt to grab credentials
preloaded stats for %@ games for the current player
Could not preload stats for the current player due to:%@
GKAccountService auth username:%@
validateEnvironment
authenticatePlayerWithUsername: environment validation error: %@
fetch credentials with username:%@ 
error fetching credentials: %@
authenticatePlayerWithUsername: failed to fetch creds. Error: %@
authenticatePlayerWithUsername: creds(%d) error(%d)
_constructAuth
authenticatePlayerWithUsername:Failed send authentication did change notification. Error: %@
GKAccountService _loadProfile
%@ cred:%@
%@ (playerID)
[%s (%s:%d)]
-[GKAccountServicePrivate _loadProfileWithGroup:]
authGetProfile
GKAccountService _appInit
EVIL: don't know how to handle server error code (%@) for server error %@
_initGame login scope change new:%lX old:%lX
EVIL: _initGame without player logged in
authAppInit
v32@?0@"GKGameInternal"8@"NSError"16q24
Error attempting to init game: %@
%@ (credential.accountName)
[%s (%s:%d)]
-[GKAccountServicePrivate _continueAuthenticationWithHandler:]
%@ (credential.playerInternal.playerID)
[%s (%s:%d)]
authLoad
authenticated LocalPlayerInternal:%@
%@ profileIsValid:%@ PlayerIsAuthorized:%@
authenticated
unauthenticated -- clearing appInit state
error while trying to set primary credential:%@
Game Center account will not be saved as accounts are restricted
Game Center accounts are disabled
Account setup parameters: %@
Account setup (No existing player): Switching environment(%ld) and recording player credentials, will terminate
Account setup (Player did not change): Recording new credentials and updating profile. Previous player:%@ credential:%@
Account setup (Player did not change): saving the received credentials:%@
Account setup (Player did not change): current profile:%@
Account setup (Player did not change): updated profile:%@
Account setup not new and no change:
SetupAccountForParameters: Missing expected account setup parameters playerID:%@ token:%@ accountName:%@
Missing expected account setup parameters
setLoginStatus cred:(%@) new:%lX old:%lX
setLoginStatus: error from setCredential:%@
today
this-week
all-time
The concrete subclass must override -[GKLeaderboardScoreRequest bagKey]
-[GKLeaderboardScoreRequest(GKGameStatService) bagKey]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKLeaderboardScoreRequest+GKGameStatService.m
The concrete subclass must override -[GKLeaderboardScoreRequest serverRequestWithService:]
-[GKLeaderboardScoreRequest(GKGameStatService) serverRequestWithService:]
player.playerID
No internal or displayName for playerID:%@ (score:%@).Will be changed to anonymous
v32@?0@"GKScoreInternal"8Q16^B24
The concrete subclass must override -[GKLeaderboardScoreRequest generateScoresFromServerResponse:service:context:timeToLive:handler:]
-[GKLeaderboardScoreRequest(GKGameStatService) generateScoresFromServerResponse:service:context:timeToLive:handler:]
The concrete subclass must override -[GKLeaderboardScoreRequest loadScoresForClient:context:handler:]
-[GKLeaderboardScoreRequest(GKGameStatService) loadScoresWithService:context:handler:]
time-scope
player-scope
starting-rank
player-score
v16@?0@"GKLeaderboardInternal"8
gk-get-leaderboard-rank
@"NSString"24@?0@"GKPlayerInternal"8Q16
gk-get-achievement-leaderboard
points
TD.termsOfServiceURL
show-stats
GKProfileService: _updateLastPlayedGames:
GKProfileService: fetchProfilesForPlayerIDs
expirationDate > %@ && ((availablePieces & %d) = %d) && playerID in %@
expirationDate != nil && ((availablePieces & %d) = %d) && playerID in %@
Cache validity error! Missing results for %@
Cache Validity Error! Missing results
@16@?0@8
@24@?0@"GKResourceIdentifier"8Q16
input-id
GKProfileService: getProfilesForPlayerIDs
com.apple.gamed.getProfiles.results
Cache miss - %s %@
-[GKProfileService getProfilesForPlayerIDs:handler:]_block_invoke_4
-[GKProfileService getProfilesForPlayerIDs:handler:]_block_invoke
v32@?0@"NSArray"8@"NSString"16B24B28
v32@?0@"NSNumber"8@"NSArray"16^B24
gk-set-findable
player-nickname
suggestions-count
gk-set-player-nickname
suggestions
player-nickname-update-status
updateStatus
setPlayerNickname - server returned zero nickname suggestions
setPlayerNickname - server error: %@
gk-get-suggested-player-nickname
getSuggestionsForNickname - server returned zero nickname suggestions
getSuggestionsForNickname - server error: %@
gk-get-localized-key
getTermsAndConditionsWithHandler - server returned invalid url
getTermsAndConditionsWithHandler - server error: %@
getFriendSupportPageURLWithHandler - no friend support page url in bag, error = %@
GKDatabaseErrorDomain
sqlite3 error: %s
Asked to read friend recommendations for more than a single player. This is not supported.
representedItem.playerID
Can't use init on GKDataResource. Use resourceWithID: instead.
%@ ID: %@ TTL: %@
item: %@
representedItem
T@,&,N,V_representedItem
T@"<NSObject><NSCopying>",&,N,V_resourceID
Td,N,V_TTL
invalid
TB,N,GisInvalid,V_invalid
metadataLookup
T@"NSMutableDictionary",&,N,V_metadataLookup
TB,R,N,GisExpired
T@,&,D,N
Td,D,N
TB,D,N,GisInvalid
B16@?0@"GKResource"8
GKTopGameList
number-of-entries
device-type
iPad
gk-get-top-game-list
GKGameInternal
scan installed games
%@ Scanning installed apps
v32@?0@"GKGameRecordCacheObject"8Q16^B24
expirationDate > %@ && player.playerID = %@
expirationDate != nil && player.playerID = %@
GKGameList
friend-player-id
@24@?0@"GKGameListEntryCacheObject"8Q16
Error getting the stats for player:%@ error:%@
Cannot load games with no playerID and no localPlayer for %@
-[GKGameServicePrivate getGamesForPlayer:includeInstalled:handler:]_block_invoke_3
-[GKGameServicePrivate getGamesForPlayer:includeInstalled:handler:]_block_invoke
v32@?0d8@"NSString"16@"NSError"24
expirationDate > %@ && player.playerID = %@ && game.bundleID in %@
expirationDate != nil && player.playerID = %@ && game.bundleID in %@
player.playerID = %@ && game.bundleID in %@
games-played
Unrecognized game(%d) %@
gk-get-scoped-ids
records
Cache miss - %s %@ %@
-[GKGameServicePrivate getGameStatsForPlayer:bundleIDs:handler:]_block_invoke_3
-[GKGameServicePrivate getGameStatsForPlayer:bundleIDs:handler:]_block_invoke
GKGameService: fetchGameMetadataForBundleIDs:
expirationDate > %@ && storePiecesExpirationDate > %@ && name != nil && bundleID in %@
expirationDate != nil && storePiecesExpirationDate != nil && name != nil && bundleID in %@
Cache Validity Error! Missing Results
GKGameService: loadGameMetadataForBundleIDs:
gk-get-game-metadata
GKGameService: getGameMetadataForBundleIDs:
-[GKGameServicePrivate getGameMetadataForBundleIDs:handler:]_block_invoke_2
-[GKGameServicePrivate getGameMetadataForBundleIDs:handler:]_block_invoke
v24@?0@"NSArray"8B16B20
gk-get-game-ratings
ratings
v20@?0f8B12B16
GKGameService: loadStorePiecesForGames:
GKStorePieces
GKGameService: loadStorePiecesForGames: - Failed lookupStoreItemsForAdamIDs due to error: %@
GKStoreItemInternal
@24@?0@"NSNumber"8Q16
storeItems
gk-get-games-played-descriptors-with-achievements
gk-get-game-recommendations
player = %@ && game.bundleID = %@
@24@?0@"GKGameRecommendationEntryCacheObject"8Q16
@24@?0@"GKGameInternal"8Q16
SELECT %@     FROM requests top_r         INNER JOIN ratings top_a USING (request_id)     WHERE player_gcid = %s         AND bundle_id = %s         AND rating = (SELECT MAX(rating)                             FROM requests INNER JOIN ratings USING (request_id)                             WHERE player_gcid = top_r.player_gcid                                 AND bundle_id = top_r.bundle_id);
SELECT %@     FROM requests INNER JOIN ratings USING (request_id)     WHERE player_gcid = %s     AND bundle_id = %s;
error while decoding submitRating delayed request archive:%@
game.bundleID = %@ AND type = %d
match-type
multiplayer-compatible
game.bundleID = %@ AND type = %d AND reference = %@
leaderboard-compatible
achievement-compatible
exact-match
gk-get-friends-who-played-game
@24@?0@"GKRecentMatchInternal"8Q16
player == %@ && game == %@
player == %@ && otherPlayer == %@
since-time
recent Player profiles:%@
other-player-id
GKFriendList:list from cache is not valid/good going to server:%@
GKFriendList:recent list of players:%@
GKGameAchievements
gk-get-game-achievements
missingPlayers
GKPlayerAchievements
@"GKResourceIdentifier"24@?0@"NSString"8Q16
friend-player-ids
v28@?0@"NSDictionary"8B16@"NSArray"20
Unable to get achievements for game descriptor with no bundle-id: %@
An achievement without a playerID has been submitted and will be ignored:%@
gk-reset-achievements
game = %@ AND player = %@
v24@?0@"GKLeaderboardInternal"8@"NSError"16
gk-get-leaderboard-categories
-[GKGameStatService cleanUpLeaderboardTitles:set:context:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/GameCenter_Sim/GameCenter-665.8/GameCenterFoundation/gamed/GKGameStatService.m
game.bundleID = %@ AND player.playerID = %@ AND set.identifier = %@
game.bundleID = %@ AND player.playerID = %@ AND set.identifier = nil
%@ (player.playerID != ((void *)0))
[%s (%s:%d)]
-[GKGameStatService loadLeaderboardsForGameDescriptor:player:setIdentifier:context:handler:]
GKLeaderboardList
default-category-name
getLeaderboardsForGameDescriptor: no player given, and no authenticated player
no playerID for internal %@
gk-set-default-leaderboard
sets
gk-get-leaderboard-sets
@"NSDictionary"24@?0@"GKScoreInternal"8Q16
gk-get-hypothetical-score-rank
B24@?0@"GKChallengeInternal"8@"NSDictionary"16
GKChallengeList
gk-get-challenge-ids
gk-get-challenges
challengeIDs
GKChallengeInternal
challengeID in %@
profile
com.apple.GameKit.login.appInit
com.apple.GameKit.login.signIn
com.apple.GameKit.login.signOut
com.apple.GameKit.login.cancelled
com.apple.GameKit.login.disabled
com.apple.GameKit.pushCount.challenge.completed
com.apple.GameKit.pushCount.challenge.received
com.apple.GameKit.pushCount.matchmaking
com.apple.GameKit.pushCount.invite.accept
com.apple.GameKit.pushCount.invite.decline
com.apple.GameKit.pushCount.invite.cancel
com.apple.GameKit.pushCount.invite.initiate
com.apple.GameKit.pushCount.turnBased
com.apple.GameKit.pushCount.turnBased.turn
com.apple.GameKit.pushCount.turnBased.matchChanged
com.apple.GameKit.pushCount.turnBased.reminder
com.apple.GameKit.pushCount.turnBased.completed
com.apple.GameKit.pushCount.turnBased.exchangedRequested
com.apple.GameKit.pushCount.turnBased.exchangeCompleted
com.apple.GameKit.pushCount.turnBased.exchangeCanceled
com.apple.GameKit.pushCount.turnBased.clear
com.apple.GameKit.pushCount.turnBased.initiate
com.apple.GameKit.pushCount.turnBased.turnCount
com.apple.GameKit.pushCount.all
com.apple.GameKit.pushCount.session
com.apple.GameKit.pushCount.session.invite
com.apple.GameKit.pushCount.session.message
com.apple.GameKit.pushCount.session.dataUpdate
com.apple.GameKit.pushCount.session.clear
com.apple.GameKit.pushCount.profileUpdate
com.apple.GameKit.pushCount.relay
com.apple.GameKit.invite.decline.user
com.apple.GameKit.invite.decline.noAnswer
com.apple.GameKit.invite.decline.incompatible
com.apple.GameKit.invite.decline.cantConnect
com.apple.GameKit.invite.decline.doNotDisturb
com.apple.GameKit.invite.accept.user
com.apple.GameKit.invite.fail
com.apple.GameKit.invite.initiate
com.apple.GameKit.invite.uninvite
com.apple.GameKit.invite.cancel
com.apple.GameKit.invite.accept.app
com.apple.GameKit.invite.initiate.nearby
com.apple.GameKit.invite.cancel.nearby
com.apple.GameKit.invite.accept.nearby
com.apple.GameKit.invite.decline.nearby
com.apple.GameKit.turnBased.decline
com.apple.GameKit.turnBased.accept
com.apple.GameKit.turnBasedMatch.find
com.apple.GameKit.turnBasedMatch.accept
com.apple.GameKit.turnBasedMatch.decline
com.apple.GameKit.tbgTurns.showMatch
com.apple.GameKit.challenge.issue
com.apple.GameKit.challenge.abort
com.apple.GameKit.match.connect
com.apple.GameKit.match.disconnect
com.apple.GameKit.match.connectionFail
com.apple.GameKit.match.fail
com.apple.GameKit.match.find
com.apple.GameKit.match.findHosted
com.apple.GameKit.match.add
com.apple.GameKit.match.addHosted
com.apple.GameKit.match.cancel
com.apple.GameKit.match.queryGroup
com.apple.GameKit.match.query
com.apple.GameKit.relay.initiate
com.apple.GameKit.relay.update
com.apple.GameKit.relay.cancel
com.apple.GameKit.uploadContacts
com.apple.GameKit.challengeDetail.playGame.ingame
com.apple.GameKit.gameDetail.playersTab.playGame
com.apple.GameKit.gameDetail.showStorePage
com.apple.GameKit.gameDetail.playGame
com.apple.GameKit.profile.changePhoto
com.apple.GameKit.photoPicker.setPhoto
com.apple.GameKit.Settings.FriendList
com.apple.GameKit.Settings.FriendListLoadTime
com.apple.GameKit.Settings.GameCenterProfile
com.apple.GameKit.Settings.RemoveFriend
com.apple.GameKit.Dashboard.AchievementList
com.apple.GameKit.Dashboard.AchievementDetail
com.apple.GameKit.Dashboard.ShareAchievement
com.apple.GameKit.Dashboard.LeaderboardList
com.apple.GameKit.Dashboard.ScoreList
com.apple.GameKit.Dashboard.FriendsOnScoreList
com.apple.GameKit.Dashboard.MeScoreDetail
com.apple.GameKit.Dashboard.RankOnMeScoreDetail
com.apple.GameKit.Dashboard.FriendScoreDetail
com.apple.GameKit.Dashboard.RankOnFriendScoreDetail
com.apple.GameKit.Dashboard.OthersScoreDetail
com.apple.GameKit.Dashboard.RankOnOthersScoreDetail
com.apple.GameKit.Dashboard.ShareMeScore
com.apple.GameKit.Dashboard.RankOnShareMeScore
com.apple.GameKit.Dashboard.ShareFriendScore
com.apple.GameKit.Dashboard.RankOnShareFriendScore
com.apple.GameKit.Dashboard.ChallengeList
com.apple.GameKit.Dashboard.ChallengeDetail
com.apple.GameKit.PlayerAuthentication.ElapsedTime
com.apple.GameKit.PlayerAuthentication.ElapsedTimeWithUI
com.apple.GameKit.PlayerAuthentication.DRMResponseTime
com.apple.GameKit.PlayerAuthentication.Start
com.apple.GameKit.PlayerAuthentication.PlayerAuthenticated
com.apple.GameKit.PlayerAuthentication.Failure
com.apple.GameKit.PlayerAuthentication.DeviceOffline
com.apple.GameKit.PlayerAuthentication.LoginCancel
com.apple.GameKit.PlayerAuthentication.AuthKitInvocation
com.apple.GameKit.PlayerAuthentication.GreenBuddyInvocation
com.apple.GameKit.InviteFlow.Start
com.apple.GameKit.InviteFlow.InviteFriends
com.apple.GameKit.InviteFlow.PlayNow
com.apple.GameKit.InviteFlow.InitialCancel
com.apple.GameKit.InviteFlow.ComposeCancel
com.apple.GameKit.InviteFlow.DetailSelection
com.apple.GameKit.InviteFlow.SendMessage
com.apple.GameKit.InviteFlow.DetailAdd
com.apple.GameKit.InviteFlow.DetailCancel
com.apple.GameKit.InviteFlow.ConnectingCancel
com.apple.GameKit.InviteFlow.SelectContactPlayer
com.apple.GameKit.InviteFlow.SelectFriendPlayer
com.apple.GameKit.InviteFlow.SelectNearByPlayer
com.apple.GameKit.InviteFlow.TypedInContact
com.apple.GameKit.InviteFlow.PushedBasedInvites
com.apple.GameKit.InviteFlow.MessageBasedInvites
com.apple.GameKit.InviteFlow.RTNoOfInvitees
com.apple.GameKit.InviteFlow.RTGameFailed
com.apple.GameKit.InviteFlow.RTInviteeConnectionTime
com.apple.GameKit.Onboarding
AvatarChanged
AvatarDeleted
AvatarEditingCanceled
AvatarTapped
CompletionStatus
Duration
NicknameChanged
NicknameEditingCanceled
NicknameTapped
PersonalizationAcknowledged
PersonalizationDismissed
PersonalizationScreenDisplayed
PrivacyAcknowledged
PrivacyLinkTapped
SignedOut
SignOutCanceled
SignOutTapped
WelcomeScreenDisplayed
Completed
Terminated
com.apple.GameKit.ManualFriending
GKAddFriendFromSettings
GKAddFriendFromFriendList
GKAddFriendFromLeaderboard
GKFriendRequestAccepted
GKFriendRequestCreated
GKFriendRequestCancelled
GKFriendRequestSent
GKFriendRequestCancelSending
GKFriendRequestFailSending
GKFriendRequestOpenSettings
GKFriendRequestExpiredError
GKFriendRequestRestrictedError
GKFriendRequestCannotSendError
GKFriendRequestGroupRecipientError
com.apple.GameKit.InviteFlow
GKPickerSearchBarClicked
com.apple.GameKit.Invite.ReceivedTime
GKAuthenticateResponseTime
GKInviteeUILaunchTime
GKMessageInviteProcessingTime
GKConnectingDevicesTime
GKProgramaticInviteTime
GKAppLaunchTime
GKTotalInviteReceivedTime
com.apple.GameKit.Invite.InitiateType
GKPushInviteInitiate
GKMessageInviteInitiate
GKNearbyInviteInitiate
com.apple.GameKit.Invite.NearbyResponse
GKInviteAccepted
GKDeclinedDoNotDisturb
GKDeclinedUser
GKDeclinedIncompatible
GKDeclinedNoAnswer
GKDeclinedCannotConnect
GKDeclinedUnknown
com.apple.GameKit.Tournament.Action
com.apple.GameKit.Tournament.View
com.apple.GameKit.CustomTournament.Action
com.apple.GameKit.CustomTournament.Response
Auto
Custom
Register
Play
SubmitScore
Resign
AutoList
HistoryList
CustomList
AutoDetail
CustomDetail
Standings
Creation
Create
AddInvitees
RemoveInvitees
AddCreator
RemoveCreator
Accept
Decline
GKReporter: report
com.apple.chess
Chess
3rd Party
timeSpan
authenticateResponseTimestamp
Td,N,V_authenticateResponseTimestamp
inviteeUILaunchTimestamp
Td,N,V_inviteeUILaunchTimestamp
connectingDevicesTimestamp
Td,N,V_connectingDevicesTimestamp
programaticInviteTimestamp
Td,N,V_programaticInviteTimestamp
appLaunchTimestamp
Td,N,V_appLaunchTimestamp
totalInviteReceivedTimestamp
Td,N,V_totalInviteReceivedTimestamp
messageInviteProcessingTimestamp
Td,N,V_messageInviteProcessingTimestamp
GKIDSRequestManager sharedManager
GKIDSRequestManager responseDictionaryQueue
com.apple.gamed.GKIDSRequestManager.dictionary.queue
v28@?0@"NSString"8@"NSError"16B24
idsRequests
T@"NSMutableDictionary",&,V_idsRequests
GKFriendRequestDetailsTTL
    SELECT %@     FROM players         INNER JOIN             (SELECT relationship_id, player_id, number_of_friends_in_common, number_of_games_in_common, expiration_date, creation_date, message                 FROM player_relationships                     INNER JOIN friend_request_details USING (relationship_id)                 WHERE player_relationships.relative_to_player_id = (SELECT player_id FROM players WHERE player_gcid = %s)                     AND player_relationships.player_id = (SELECT player_id FROM players WHERE player_gcid = %s)) request_details            USING (player_id);
request_details.expiration_date
creation_date
shouldScreen
                           INSERT INTO requests (                           adam_id,                            bundle_id,                            bundle_version,                            external_version,                            player_gcid,                            time_stamp,                            verification_hash)                           VALUES (%s, %s, %s, %s, %s, %s, %s);
                           INSERT INTO scores (                           request_id,                            context,                            eligible_challenge_ids,                            leaderboard_id,                            should_screen_challenges,                            value)                           VALUES(%s, %s, %s, %s, %s, %s);
:context
:leaderboard_id
:value
    SELECT %@     FROM requests     INNER JOIN photos USING (request_id)     WHERE player_gcid = %s     ORDER BY time_stamp DESC;
photo_data
avatar_type
request: %@
bucket-id
min-peers
max-peers
%#.8x
conn-info
requires-guest-player-capability
num-players
client-data-version
match-version
conn-blob
nat-ip
nat-type
gk-request-match
v12@?0i8
GKMultiplayerMatchService - cancel outstanding match request
gk-cancel-match
game == %@ && playerGroup == %d
gk-get-flow-rate
players-per-min
game == %@ && playerGroup == nil
bundleID = %@ AND shortVersion = %@
bundleID = %@ AND version = %@
List of compatible games:%@
gk-get-compatible-games
saveInvitedPlayers
Error saving record with share invitees %@
Saved invitee record to CloudKit, where invitedPlayers entry maps [MessagesID : playerID].
setShareInvitees - No CKRecord found fetching shareRecordID %@ error: %@
Created a new GKInviteSession
Already have GKInviteSession: %@
Session token for initiate request: %@
gk-invitation-initiate request: %@
gk-invitation-initiate
initiateInvitationForMatchRequest:connectionData:recipients:handler error while initiating invitation: %@ 
gk-invitation-initiate response: %@
Session token from initiate response: %@
session.sessionToken %@
loadRecordURL
Loading a CloudKit share URL for matchRequest: %@
Error while initiating invitation for share URL: %@
Created new GKInviteSession.
Session token for CloudKit record: %@
GK-InviteMessges: loadDataForURL connectionDictionary: %@
Error archiving connection dictionary for share record: %@
GK-InviteMessges: loadDataForURL record for inviteData: %@
Setting up CKShare for record: %@
Error while setting up invite share recordID: %@
v28@?0@"NSDictionary"8i16@"NSError"20
raw-id
invite for match request failed with error: %@
invite to %@ failed with status %ld
players: %@
GKMultiplayerMatchService - cancel game invite
GKMultiplayerMatchService - acceptGameInvite: %@
Created data request for gk-invitation-accept request: %@
gk-invitation-accept
gk-invitation-reject
GKMatchMaker invite manager and bullentin are set
GKGetAcceptedInviteHandler invite: %@
game = %@
gk-invitation-send
relayInit serverRequest:%@
gk-invitation-relay-initiate
relayUpdate serverRequest:%@
gk-invitation-relay-update
relayCancel serverRequest:%@
gk-invitation-relay-cancel
photoData
while trying to create path error/warning while updating cache with nearby:%@
next-turn-on-slot
turn-timeout
player-attributes
can-match-existing-session
gk-tb-find-sessions
_determineCompatibleGamesForMatches:dispatchGroup: Missing bundleID for match %@
_determineCompatibleGamesForMatches:dispatchGroup: Missing bundleVersion for match %@
bundle version dict %@
v40@?0@"NSString"8@"NSString"16@"NSString"24@"NSNumber"32
compatibility matrix result %@
sessionID IN %@ && currentPlayerID = %@ && status IN %@
GKTurnBasedService: loadTurnBasedMatchesForGame:
GKTurnBasedSessionList
GKTurnBasedService: fetchTurnBasedMatchesForGame:
GKTurnBasedService: getTurnBasedMatchesAndCompatibleBundleID:
GKTurnBasedService: getTurnBasedMatchesAndCompatibleBundleID: fetching TB match for games
GKTurnBasedService: getTurnBasedMatchesAndCompatibleBundleID: loading TB match for games
GKTurnBasedService: getTurnBasedMatchesAndCompatibleBundleID: get details for TB match for games
v32@?0@"GKTurnBasedParticipantInternal"8Q16^B24
@"GKPlayerInternal"16@?0@"GKPlayerInternal"8
fetchDetailsForTurnBasedMatchIDs:Session Valid for match ID, returning sessionID
@24@?0@"GKTurnBasedSessionCacheObject"8Q16
fetchDetailsForTurnBasedMatchIDs:Group Matches with SessionIDs have been set
session-ids
get-game-state
get-exchanges
gk-tb-get-session
getDetailsForTurnBasedMatchIDs:Failed to Load Details for TBG Match ID.Error: %@
current-turn-number
turns
turn-at
turn-message
localized-turn-message
resolve-exchanges
completion-message
localized-completion-message
@24@?0@"GKTurnBasedParticipantInternal"8Q16
Game Over
gk-submit-session-scores
gk-submit-session-achievements
message-timeout
notification-message
match
getNextTurnBasedEventWithHandler called
getNextTurnBasedEventWithHandler - usingQuickAction - %@
getNextTurnBasedEventWithHandler matchID: %@ exchangeID:%@ command: %ld userTapped:%@
gk-tb-reserve-slots
num-reservations
                           INSERT INTO reject_friend_requests (                           request_id,                            payload)                           VALUES (%s, %s);
More than one store and forward entry for reject friend requests
USER
SESSIONS
FRIENDS
TOKENS
IDENTIFIER
CONTAINER
OWNER
ARCHIVE
HAS_SUBSCRIPTION
NEEDS_FRIEND_UPDATE
LAST_SAVE_DATE
NAME
EMAIL
:archive
com.apple.socialgaming.privateToken
com.apple.socialgaming.sharedToken
com.apple.GameCenter.GKSessionCache
com.apple.GameCenter.GKSessionCache.User
sessions-%@
CREATE TABLE %@ (ID INTEGER PRIMARY KEY, %@ INTEGER, %@ INTEGER, %@ REAL)
INSERT INTO %@ (%@, %@, %@) VALUES ("%d", "%d", "%f")
CREATE TABLE %@ (%@ TEXT PRIMARY KEY, %@ TEXT, %@ BLOB)
CREATE TABLE %@ (%@ TEXT PRIMARY KEY, %@ TEXT, %@ TEXT)
CREATE TABLE %@ (ID INTEGER PRIMARY KEY, %@ TEXT, %@ TEXT, %@ BLOB)
CREATE UNIQUE INDEX token_idx ON %@ (%@, %@)
Failed to open/create database for GKSession at path:%@
sessions-bundleIDs
expirations
SELECT %@, %@, %@ FROM %@
UPDATE %@ SET %@="%d", %@="%d", %@="%f"
DB Save User Info Error: %s
SELECT %@ FROM %@ WHERE %@="%@" AND %@="%@"
INSERT OR REPLACE INTO %@ (%@, %@, %@) VALUES ("%@", "%@", %@)
DELETE FROM %@ WHERE %@="%@" AND %@="%@"
DB Set Token Error: %s
SELECT %@, %@ FROM %@
INSERT OR REPLACE INTO %@ (%@, %@, %@) VALUES ("%@", "%@", "%@")
Database - Set Friends Error: %s
DELETE FROM %@ WHERE %@="%@"
DB Remove Session Error: %s
DB Insert Session Error: %s
Error archiving session %@
SELECT %@ FROM %@ WHERE %@="%@"
DB Execute Error: %s
DB Parameter Error: %s
v32@?0@"NSData"8Q16^B24
DB Step Error: %s
bundleIDsByContainerName
T@"NSMutableDictionary",&,N,V_bundleIDsByContainerName
bundleIDExpirations
T@"NSMutableDictionary",&,N,V_bundleIDExpirations
T@"NSString",&,N,V_databasePath
isValid
userPlayer
T@"GKCloudPlayer",R,D,N
userHasSubscription
TB,N,V_userHasSubscription
lastSaveTimeStamp
Td,N,V_lastSaveTimeStamp
privateDBToken
T@"CKServerChangeToken",&,D,N
sharedDBToken
friendPlayers
T@"NSArray",R,D,N
friendEmailsByID
T@"NSDictionary",R,D,N
friendRecordNeedsUpdate
TB,N,V_friendRecordNeedsUpdate
GKCloudPlayer
NSSecureCoding
NSCoding
NSCopying
GKGamekitDaemon
2 1@
2 1A
GKCloudTournament
GKGameSessionErrorCloudKit
GKPlayerProfileCacheWriter
GKDataWriter
NSObject
GKChallengeBulletin
GKChallengeCompletedBulletin
GKChallengeReceivedBulletin
GKConnectionManager
IDSServiceDelegate
GKIDSConnection
IDSSessionDelegatePrivate
IDSSessionDelegate
GKNWConnectionWrapperDelegate
GKRealTimeMultiplayerBulletin
GKRealTimeMultiplayerInitiateBulletin
GKRealTimeMultiplayerActionBulletin
GKRealTimeMultiplayerAcceptBulletin
GKRealTimeMultiplayerDeclineBulletin
GKRealTimeMultiplayerCancelBulletin
GKRealTimeMultiplayerSendBulletin
GKDataTransport
GKLoginController
GKUniqueObjectIDLookup
GKCacheObject
GKCacheObjectImageProtocol
GKPurgeableCacheObject
GKExpiringCacheObject
GKPlayerProfileCacheObject
GKPlayerFamiliarity
GKPlayerEmailCacheObject
GKGameCacheObject
GKAchievementDescriptionListCacheObject
GKAchievementDescriptionCacheObject
GKAchievementListCacheObject
GKAchievementCacheObject
GKGameRecordCacheObject
GKGameRatingCacheObject
GKLeaderboardSetListCacheObject
GKLeaderboardSetCacheObject
GKLeaderboardTitleMapListCacheObject
GKLeaderboardTitleMapCacheObject
GKLeaderboardListCacheObject
GKListCacheObject
GKListEntryCacheObject
GKPlayerOwnedListCacheObject
GKFriendListCacheObject
GKFriendListEntryCacheObject
GKCompatibilityListCacheObject
GKCompatibilityEntryCacheObject
GKCompatibilityVersionCacheObject
GKCompatibilityShortVersionCacheObject
GKRecommendationEntryCacheObject
GKFriendRecommendationListCacheObject
GKFriendRecommendationListEntryCacheObject
GKFriendRequestListCacheObject
GKFriendRequestListEntryCacheObject
GKGameListCacheObject
GKGameListEntryCacheObject
GKLeaderboardCacheObject
GKRecentPlayerListCacheObject
GKRecentPlayerListEntryCacheObject
GKRecentGameListCacheObject
GKRecentGameListEntryCacheObject
GKTopGamesListCacheObject
GKTopGamesListEntryCacheObject
GKFlowRateCacheObject
GKGameRecommendationListCacheObject
GKGameRecommendationEntryCacheObject
GKAchievementPointsListCacheObject
GKAchievementPointsEntryCacheObject
GKTurnBasedSessionCacheObject
GKTurnBasedParticipantCacheObject
GKTurnBasedExchangeCacheObject
GKTurnBasedExchangeReplyCacheObject
GKTurnBasedSessionListCacheObject
GKTurnBasedSessionEntryCacheObject
GKInviteCacheObject
GKPlayerToInviteCacheObject
GKPlayerListCacheObject
GKPlayerEntryCacheObject
GKChallengeListCacheObject
GKChallengeCacheObject
GKChallengeCompatibleBundleID
GKScoreChallengeCacheObject
GKAchievementChallengeCacheObject
GKCompatiblePlayerListCacheObject
GKCompatiblePlayerEntryCacheObject
GKAccountService
GKAccountServiceInterface
GKAccountServicePrivate
GKAccountServicePrivateInterface
GKAuthenticateResponse
GKActivity
GKBetterDescription
GKQuickAction
GKDataRequestManager
NSXPCListenerDelegate
APSConnectionDelegate
GKNATObserverDelegate
GKPreferencesDelegate
GKLockStatusObserver
GKEventEmitter
GKFriendRequestsReader
GKPlayerListReaderDelegate
GKDataReader
GKFriendsCacheReader
GKTournamentService
GKTournamentServicePrivate
GKDeprecated
Common
GKVersioning
GKExtensions
GKAdditions
GKServerTimestamp
GKBase64
PrintDebugging
GKSubmitRatingsCacheWriter
GKDatabaseWriter
RatingDescriptors
Cache
CloudKit
GKMultiplayerBulletin
GKPreferences
GKInternalRepresentation
GKApplicationStateMonitor
GKPlayerProfileSelfCacheReader
GKServiceInterface
GKProfileService
GKProfileServiceInterface
GKProfileServicePrivate
GKProfileServicePrivateInterface
GKCachingAdditions
GKBulletinAction
GKLeaderboardScoreRequest
GKLeaderboardScoreRangeRequest
GKLeaderboardScorePlayersRequest
GKAchievementLeaderboardScoreRangeRequest
GKDevice
GKResourceManager
GKResourceIdentifier
GKDelayedSetPhotoNetworkWriter
GKQuickActionService
GKIMToolController
GKGameStatService
GKGameStatServiceInterface
GKGameStatServicePrivate
GKGameStatServicePrivateInterface
GKPlayerCredentialController
GKAuthenticationMachine
GKReachability
GKHostReachability
GKDelayedDeletePhotoCacheWriter
GKDelayedSetPlayerStatusCacheWriter
GKPlayerProfileCacheReader
GameKitErrors
GKRecoveryAttempter
GKFriendRecommendationsNetworkReader
GKMultiplayerService
GKMultiplayerServiceInterface
GKMultiplayerServicePrivate
GKMultiplayerServicePrivateInterface
GKMatchResponse
GKApplicationWorkspace
GKApplicationProxy
GKRemoveFriendCacheReader
GKDatabaseReader
GKDaemonProtocol
CKXPCShareDaemon
GKDaemonInterface
GKAuthenticationWrapperService
GKClientProtocol
GKClientInterface
GKChallengeInvite
GKDaemonAdditions
GKDigestUtils
GKImageAdditions
_GKURLRequestDictionaryKey
GKSAPSession
GKJoinGroupNotifier
GKJoinGroup
GKCloudTournamentCache
GKChallengeService
GKChallengeServiceInterface
GKChallengeServicePrivate
GKChallengeServicePrivateInterface
GKPlayerProfileFriendCacheReader
GKStoreBag
GKTurnBasedService
GKTurnBasedServiceInterface
GKTurnBasedServicePrivate
GKTurnBasedServicePrivateInterface
Nearby
GKGameSessionService
GKGameSessionServiceInterface
GKGameSessionServicePrivate
GKGameSessionServicePrivateInterface
GKPlayerProfileRecommendationCacheReader
GKAppStoreManager
GKDelayedSetPhotoCacheWriter
GKSubmitScoresCacheReader
GKCloudTournamentService
GKCloudTournamentServicePrivate
GKFriendRequestsCacheWriter
GKFriendService
GKFriendServicePrivate
GKUIServiceClientProxy
GKUIViewService
GKDelayedRequestWriter
GKInviteSession
GKThreadsafeDictionary
GKAcceptedInviteManager
GKNWConnectionWrapper
GKNWStreamConnectionWrapper
GKNWDatagramConnectionWrapper
GKCollectionUtils
GKDigestVerification
DelayedRequests
PlatformSpecific
GKSubmitAchievementsCacheReader
GKFriendServiceInterface
GKFriendServicePrivateInterface
GKDelayedChallengeCacheIssueReader
GKDelayedChallengeCacheAbortReader
GKDelayedChallengeCacheReader
GKDelayedDeletePhotoCacheReader
GKRemoveFriendCacheWriter
GKRemoveGamesCacheReader
GKEntitlements
GKSystemBulletin
GKRelayBulletin
GKProfileUpdateBulletin
GKMatchmakerBulletin
GKGenericBulletin
GKTournamentServiceInterface
GKTournamentServicePrivateInterface
GKRemoveGamesCacheWriter
RemoveGamesDescriptors
PlatformDependent
GKTurnBasedMultiplayerBulletin
GKTurnBasedMultiplayerInviteBulletin
GKTurnBasedMultiplayerClearBulletin
GKTurnBasedMultiplayerTurnCountBulletin
GKTurnBasedMultiplayerTurnBulletin
GKTurnBasedMultiplayerMatchChangedBulletin
GKTurnBasedMultiplayerTurnReminderBulletin
GKTurnBasedMultiplayerCompletedBulletin
GKTurnBasedMultiplayerRequestedExchangeBulletin
GKTurnBasedMultiplayerCompletedExchangeBulletin
GKTurnBasedMultiplayerCanceledExchangeBulletin
GKFriendsNetworkReader
GKBulletinService
GKBulletinServiceInterface
GKBulletinServicePrivate
GKBulletinServicePrivateInterface
GKIDSLookupBulletin
GKIDSLookupRequestBulletin
GKIDSLookupResponseBulletin
GKTournamentBulletin
GKTournamentInviteBulletin
GKDatabaseConnection
GKSQLiteStatementStore
GKAnalyticsService
GKAnalyticsServicePrivate
GKSessionBulletin
GKSessionInviteBulletin
GKSessionMessageBulletin
GKBulletin
GKDeprecatedBulletin
Restrictions
GKGameSession
Private
GKFriendRecommendationsCacheWriter
GKBulletinController
UNUserNotificationCenterDelegate
GKPlayerListReader
GKUtilityService
GKUtilityServiceInterface
GKUtilityServicePrivate
GKUtilityServicePrivateInterface
GKTournamentError
GKFriendRecommendationsCacheReader
GKDelayedRejectFriendRequestsCacheReader
GKFriendRequestsCacheReader
GameCenter
GKFairPlaySAPSession
GKGameService
GKGameServiceInterface
GKGameServicePrivate
GKGameServicePrivateInterface
GKLinkedAccountsService
GKLinkedAccountsServiceInterface
GKLinkedAccountsServicePrivate
GKLinkedAccountsServicePrivateInterface
GKSpoofingClientProxy
GKTournamentDefinitionInternal
GKCustomTournamentRequestInternal
GKTournamentParticipantInternal
GKTournamentParticipantRequestInternal
GKTournamentParticipantHistoricalDataInternal
GKTournamentPlayerStandingsInternal
GKTournamentInternal
GKDelayedIssueFriendRequestsCacheReader
GKBulletinNearbyInvite
GKCacheTransactionGroup
GKDelayedSetPlayerStatusCacheReader
GKGameDescriptor
GKBasePlayer
GKSubmitAchievementsCacheWriter
AchievementDescriptors
GKGameplayBulletin
_GKStateMachine
GKCacheReader
GKBadgeController
GKInviteURLManager
2 2A
GKCloudGameSession
GKRecurrenceRule
GKDispatchGroup
GKDataDetectorsService
GKSQLRunner
GKDelayedRequestsNetworkWriter
GKGameInternal
Compatibility
GKStoreItemInternal
GKGameRecordInternal
GKGameRecommendationInternal
GKRecentMatchInternal
GKPlayerCredential
GKFriendsReader
GKPlayerProfileNoneCacheReader
GKTestToolClientProxy
GKDelayedIssueFriendRequestsCacheWriter
GKProxyHelpers
GKAccount
GKAccountManager
GKPlayerInternal
GKUnauthenticatedPlayerInternal
GKFamiliarPlayerInternal
GKFriendPlayerInternal
GKLocalPlayerInternal
GKPlayerEmailInternal
GKFriendRequestInternal
GKFriendRecommendationInternal
GKSpecialPlayerInternal
GKAnonymousPlayerInternal
GKUnknownPlayerInternal
GKAutomatchPlayerInternal
GKAnonymousGuestPlayerInternal
GKConcernInternal
GKDelayedChallengeCacheIssueWriter
GKDelayedChallengeCacheAbortWriter
GKDelayedChallengeCacheWriter
GKAchievementInternal
Merge
GKLeaderboardInternal
GKLeaderboardSetInternal
GKScoreInternal
GKUpdateGroupNotifier
GKUpdateGroup
GKDatabaseConnectionFactory
GKGameSessionError
GKAnalyticsServiceInterface
GKAnalyticsServicePrivateInterface
GKChallengeInternal
GKScoreChallengeInternal
GKAchievementChallengeInternal
GKPlayerProfileNetworkReader
GKFriendRequestsNetworkReader
GKExtensionClientProxy
GKFriendsCacheWriter
GKPlayerProfileReader
GKTurnBasedMatchInternal
GKTurnBasedParticipantInternal
GKTurnBasedExchangeInternal
GKTurnBasedExchangeReplyInternal
GKMatchRequestInternal
GKInviteInternal
GKCompatibilityEntryInternal
GKRequestDeduper
GKEventTuple
GKClientProxy
_GKStateMachineDelegate
Factories
Authentication
GKService
OfflinePersistence
GKSQLiteHelpers
GKDelayedNonBatchedRequestsNetworkWriter
GKFriendRecommendationsReader
GKResource
NSMutableCopying
GKMutableResource
GKSubmitRatingsCacheReader
GKReporter
GKIDSRequestManager
GKPlayerProfileRequestCacheReader
GKSubmitScoresCacheWriter
ScoreDescriptors
GKDelayedSetPhotoCacheReader
GKMultiplayerMatchService
GKMultiplayerMatchServicePrivate
GKDelayedRejectFriendRequestsCacheWriter
GKSessionCache
v32@0:8@16@?24
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
B24@0:8@16
Q16@0:8
@16@0:8
v16@0:8
@"NSString"
v24@0:8@?16
v40@0:8@16@24@?32
v40@0:8@16q24@?32
v32@0:8@16q24
B32@0:8@16@24
v48@0:8q16@24@32@?40
@32@0:8@16@24
q24@0:8@16
v48@0:8@16@24@32@?40
v40@0:8@16q24q32
v40@0:8q16@24@?32
@40@0:8@16@24@32
@44@0:8i16@20@28@36
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v40@0:8^{sqlite3_stmt=}16@24@32
v32@0:8^{sqlite3_stmt=}16@24
v56@0:8^{sqlite3=}16@24@32@40@?48
i16@0:8
v20@0:8i16
@"GKDatabaseConnection"
@"GKChallengeInternal"
@"GKStoreItemInternal"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v56@0:8@16@24@32@40q48
v44@0:8@16B24@28@?36
q16@0:8
v76@0:8C16@20@28@36@44@52@60@?68
@"NSMutableDictionary"
@"IDSService"
@"NSObject<OS_dispatch_queue>"
v36@0:8@16I24@28
v32@0:8@"IDSSession"16@"NSString"24
v24@0:8@"IDSSession"16
v36@0:8@"IDSSession"16I24@"NSError"28
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"IDSSession"16@"NSArray"24
v36@0:8@16@24B32
v40@0:8@"IDSSession"16@"NSString"24@"NSData"32
v32@0:8@"IDSSession"16@"NSSet"24
v36@0:8@"IDSSession"16@"NSSet"24B32
v32@0:8@"GKNWConnectionWrapper"16@"NSData"24
v32@0:8@"GKNWConnectionWrapper"16@"NSError"24
@32@0:8q16^@24
@36@0:8@16B24^@28
v36@0:8@16B24@?28
v24@0:8q16
@?16@0:8
@"GKClientProxy"
@"IDSAccount"
@"GKCloudGameSession"
@"NSObject<OS_dispatch_source>"
v20@0:8B16
@"NSData"
@"NSNumber"
@"NSDictionary"
@"GKStoreBag"
@"GKPlayerCredential"
@"GKActivity"
@32@0:8#16@24
@40@0:8#16@24@32
@40@0:8@16@24@?32
@"GKThreadsafeDictionary"
@"NSPredicate"
@"NSObject<OS_dispatch_semaphore>"
Q32@0:8@16@24
r^v16@0:8
v24@0:8@"NSString"16
v28@0:8@16i24
v36@0:8@16@24C32
@20@0:8C16
i24@0:8@16
C20@0:8i16
@32@0:8@16i24B28
v36@0:8@16@?24B32
@24@0:8@?16
@52@0:8@16d24@32@40B48
@20@0:8B16
@24@0:8q16
Vv24@0:8@?16
Vv24@0:8Q16
Vv24@0:8@16
Vv24@0:8@?<v@?@"GKAuthenticateResponse"@"NSError">16
Vv24@0:8@?<v@?@"NSDictionary"@"NSError">16
Vv24@0:8@?<v@?@"NSError">16
Vv24@0:8@?<v@?Q@"NSError">16
Vv24@0:8@"NSString"16
Vv24@0:8@?<v@?@"NSString"@"NSError">16
Vv60@0:8@16@24@32@40B48@?52
Vv40@0:8@16@24@?32
Vv68@0:8@16@24@32@40@48B56@?60
Vv32@0:8@16@?24
Vv56@0:8@16@24@32@40@?48
Vv32@0:8Q16@?24
Vv60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"GKAuthenticateResponse"@"NSError">52
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"GKAuthenticateResponse"@"NSError">32
Vv68@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48B56@?<v@?@"GKAuthenticateResponse"@"NSError">60
Vv32@0:8@"NSDictionary"16@?<v@?@"NSError">24
Vv56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?>48
Vv32@0:8Q16@?<v@?@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
v24@0:8Q16
@"NSURL"
@36@0:8@16@24I32
I16@0:8
v20@0:8I16
@"NSObject<OS_os_activity>"
B24@0:8q16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v24@0:8@"NSDictionary"16
d16@0:8
v24@0:8d16
@"NSXPCListener"
@"GKNATObserver"
@"NSDate"
@"APSConnection"
@"NSCountedSet"
@"GKApplicationStateMonitor"
@"GKReachability"
@"SBSApplicationShortcutService"
@28@0:8@16B24
@32@0:8@16:24
@"NSHashTable"
@"NSMutableArray"
@"<GKDataReader>"32@0:8@"NSString"16@"GKDatabaseConnection"24
@"<GKDataReader>"32@0:8@"GKDataTransport"16@"NSSet"24
@"<GKDataWriter>"32@0:8@"NSString"16@"GKDatabaseConnection"24
@"NSSet"32@0:8@"NSSet"16@"NSSet"24
i24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
v32@0:8@"NSSet"16@?<v@?@"NSSet"@"NSError">24
@"GKPlayerListReader"
@36@0:8@16@24B32
v48@0:8@16^{sqlite3=}24@32@?40
Vv48@0:8q16@24@32@?40
Vv40@0:8@16q24@?32
Vv48@0:8q16@"NSString"24@"NSString"32@?<v@?@"NSError">40
Vv40@0:8@"NSString"16q24@?<v@?@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"NSString"16q24@?<v@?q@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"GKTournamentParticipantInternal"@"NSError">24
Vv40@0:8@"NSString"16@"GKTournamentParticipantRequestInternal"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?q@"NSError">24
Vv32@0:8@"GKCustomTournamentRequestInternal"16@?<v@?@"GKTournamentInternal"@"NSError">24
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
Vv40@0:8@"GKPlayerInternal"16@"NSString"24@?<v@?@"NSError">32
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"GKTournamentDefinitionInternal"@"NSError">24
Vv32@0:8@"NSPredicate"16@?<v@?@"NSArray"@"NSError">24
Vv40@0:8@"GKPlayerInternal"16@"NSString"24@?<v@?@"GKTournamentParticipantHistoricalDataInternal"@"NSError">32
Vv32@0:8@"GKTournamentInternal"16@?<v@?@"NSURL"@"NSError">24
Vv24@0:8@?<v@?@"GKTournamentInternal"@"NSError">16
Vv32@0:8@"NSString"16@?<v@?@"GKTournamentInternal"@"NSError">24
Vv32@0:8@"GKTournamentInternal"16@?<v@?@"NSError">24
@24@0:8#16
@32@0:8Q16Q24
@28@0:8Q16B24
@24@0:8Q16
@48@0:8@16@24Q32q40
v24@0:8:16
v32@0:8:16@24
@28@0:8q16B24
@36@0:8f16f20B24^B28
@24@0:8f16f20
@32@0:8f16f20@24
@24@0:8d16
@32@0:8@16#24
@20@0:8i16
@"GKDatabaseConnection"16@0:8
v40@0:8^{sqlite3_stmt=}16@24q32
@32@0:8@16q24
v24@0:8^{__CFString=}16
B28@0:8^{__CFString=}16B24
B24@0:8^{__CFString=}16
v28@0:8B16^{__CFString=}20
q32@0:8^{__CFString=}16q24
v32@0:8q16^{__CFString=}24
d32@0:8^{__CFString=}16d24
v32@0:8d16^{__CFString=}24
@32@0:8^{__CFString=}16@24
v32@0:8@16^{__CFString=}24
@"BKSApplicationStateMonitor"
@24@0:8^{sqlite3_stmt=}16
i24@0:8^{sqlite3_stmt=}16
d24@0:8^{sqlite3_stmt=}16
v28@0:8^{sqlite3_stmt=}16i24
@48@0:8@16^{sqlite3_stmt=}24^{sqlite3=}32@40
Vv32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
Vv24@0:8@?<v@?B>16
Vv48@0:8@16@24@32@?40
Vv28@0:8B16@?20
Vv48@0:8@"NSDictionary"16@"NSNumber"24@"NSDictionary"32@?<v@?>40
Vv40@0:8@"NSData"16@"NSNumber"24@?<v@?@"NSError">32
Vv28@0:8B16@?<v@?@"NSError">20
Vv40@0:8@"NSString"16q24@?<v@?@"NSArray"Q@"NSError">32
Vv40@0:8@"NSString"16q24@?<v@?@"NSArray"@"NSError">32
Vv24@0:8@?<v@?>16
q48@0:8^v16Q24@32@40
v48@0:8^v16Q24@32@40
d24@0:8@16
v32@0:8d16@24
@32@0:8{_NSRange=QQ}16
@"GKPlayerInternal"
{_NSRange=QQ}16@0:8
v32@0:8{_NSRange=QQ}16
{_NSRange="location"Q"length"Q}
@"NSArray"
v24@0:8^?16
@"GKEventEmitter<GKLockStatusObserver>"
B24@0:8d16
@"GKDataTransport"
v24@0:8^{NSMutableArray=#}16
v24@0:8^{NSMutableDictionary=#}16
v40@0:8@16^{NSMutableDictionary=#}24@32
v32@0:8^{NSMutableDictionary=#}16@24
@"NSMutableSet"
@"NSError"
Vv36@0:8@16B24@?28
Vv40@0:8@"GKGameDescriptor"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv36@0:8@"GKGameDescriptor"16B24@?<v@?@"NSArray"@"NSError">28
Vv40@0:8@"GKGameDescriptor"16@"GKPlayerInternal"24@?<v@?@"NSArray"@"NSString"@"NSError">32
Vv32@0:8@"GKGameDescriptor"16@?<v@?@"NSArray"@"NSError">24
Vv40@0:8@"GKGameDescriptor"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v44@0:8@"NSArray"16B24@"NSArray"28@?<v@?@"NSError">36
Vv32@0:8@"GKLeaderboardScoreRequest"16@?<v@?@"GKLeaderboardInternal"@"NSError">24
Vv48@0:8@"GKGameDescriptor"16@"GKPlayerInternal"24@"NSString"32@?<v@?@"NSArray"@"NSError">40
Vv40@0:8@"NSArray"16@"GKGameDescriptor"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@?16@?24
v32@0:8q16@?24
Q24@0:8@16
@"ACAccountStore"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
i20@0:8I16
^{__SCNetworkReachability=}
v32@0:8^{sqlite3_stmt=}16q24
@32@0:8q16@24
@40@0:8q16@24@32
v56@0:8@16Q24@32:40^v48
B32@0:8@16Q24
@"NSSet"
Vv56@0:8@16@24q32@40@?48
Vv32@0:8q16@?24
Vv64@0:8@16@24@32@40@48@?56
Vv56@0:8@"GKMatchRequestInternal"16@"NSData"24q32@"NSString"40@?<v@?@"GKMatchResponse"@"NSError">48
Vv32@0:8q16@?<v@?Q@"NSError">24
Vv32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
Vv48@0:8@"GKMatchRequestInternal"16@"NSData"24@"NSData"32@?<v@?@"NSDictionary"@"NSError">40
Vv48@0:8@"NSData"16@"GKPlayerInternal"24@"GKMatchRequestInternal"32@?<v@?@"NSURL"@"NSError">40
Vv24@0:8@"NSArray"16
Vv32@0:8@"NSArray"16@?<v@?>24
Vv40@0:8@"GKInviteInternal"16@"NSData"24@?<v@?@"NSDictionary"@"NSError">32
Vv40@0:8@"GKInviteInternal"16q24@?<v@?>32
Vv24@0:8@?<v@?@"GKInviteInternal"@"NSError">16
Vv24@0:8@?<v@?@"NSData"@"NSError">16
Vv64@0:8@"NSString"16@"GKPlayerInternal"24@"NSData"32@"NSData"40@"NSData"48@?<v@?@"NSError">56
Vv32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
Vv32@0:8@"NSDictionary"16@?<v@?@"GKPlayerInternal">24
Vv24@0:8@"NSDictionary"16
Vv40@0:8@"NSArray"16@"GKGameInternal"24@?<v@?>32
@"GKMatchRequestInternal"
@"GKDispatchGroup"
B20@0:8i16
@"LSApplicationWorkspace"
@"LSApplicationProxy"
v32@0:8@"CKShareMetadata"16@?<v@?@"NSError">24
Vv24@0:8@"NSURL"16
Vv28@0:8i16@?20
Vv36@0:8i16@20@?28
Vv28@0:8i16@?<v@?>20
Vv32@0:8@"GKGameInternal"16@?<v@?>24
Vv36@0:8i16@"GKPlayerInternal"20@?<v@?@"<GKAccountService>"@"<GKProfileService>"@"<GKFriendService>"@"<GKGameService>"@"<GKGameStatService>"@"<GKChallengeService>"@"<GKMultiplayerService>"@"<GKTurnBasedService>"@"<GKUtilityService>"@"<GKBulletinService>"@"<GKAnalyticsService>"@"<GKGameSessionService>"@"<GKTournamentService>">28
Vv36@0:8i16@"GKPlayerInternal"20@?<v@?@"<GKAccountServicePrivate>"@"<GKProfileServicePrivate>"@"<GKFriendServicePrivate>"@"<GKGameServicePrivate>"@"<GKGameStatServicePrivate>"@"<GKChallengeServicePrivate>"@"<GKMultiplayerServicePrivate>"@"<GKTurnBasedServicePrivate>"@"<GKUtilityServicePrivate>"@"<GKBulletinServicePrivate>"@"<GKAnalyticsServicePrivate>"@"<GKGameSessionServicePrivate>"@"<GKTournamentServicePrivate>">28
Vv24@0:8@?<v@?@"NSString">16
Vv32@0:8Q16@?<v@?@"NSArray"@"NSError">24
Vv40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSString">32
Vv32@0:8@"NSURL"16@?<v@?@"NSData">24
Vv24@0:8@"GKQuickAction"16
v68@0:8@16@24@32@40@48B56@?60
v72@0:8@16@24@32@40@48B56B60@?64
Vv56@0:8@16@24@32B40B44@?48
@"GKService"
Vv32@0:8@16@24
Vv44@0:8@16B24@28@36
Vv40@0:8@16@24q32
Vv40@0:8@16@24@32
Vv48@0:8@16@24@32@40
Vv32@0:8Q16Q24
Vv28@0:8I16@20
Vv20@0:8i16
Vv40@0:8@"GKGameInternal"16q24@?<v@?>32
Vv32@0:8@"GKAuthenticateResponse"16@"NSError"24
Vv24@0:8@"GKFriendRequestInternal"16
Vv44@0:8@"NSData"16B24@"NSArray"28@"NSString"36
Vv32@0:8@"GKGameSession"16@"GKCloudPlayer"24
Vv40@0:8@"GKGameSession"16@"GKCloudPlayer"24q32
Vv40@0:8@"GKGameSession"16@"GKCloudPlayer"24@"NSData"32
Vv40@0:8@"GKGameSession"16@"NSData"24@"GKCloudPlayer"32
Vv48@0:8@"GKGameSession"16@"NSString"24@"NSData"32@"GKCloudPlayer"40
Vv24@0:8@"GKChallengeInternal"16
Vv24@0:8@"GKScoreInternal"16
Vv24@0:8@"GKAchievementInternal"16
Vv28@0:8I16@"NSDictionary"20
@40@0:8@16o^q24o^@32
@32@0:8@16o^@24
@40@0:8q16d24o^Q32
@32@0:8q16d24
v40@0:8q16d24@?32
@"NSURLRequest"
v36@0:8@16i24@28
v32@0:8@?16@24
@"GKJoinGroup"
@"NSLock"
@"NSObject<OS_dispatch_group>"
v56@0:8@16@24@32@40@?48
@"CKRecordID"
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
Vv40@0:8@"GKChallengeInternal"16@"NSArray"24@?<v@?@"NSError">32
Vv32@0:8@"NSString"16@"GKChallengeInternal"24
B40@0:8@16@24^{__SecTrust=}32
@32@0:8@16^@24
^{__SecTrust=}32@0:8@16@24
v40@0:8@16@24q32
@88@0:8@16@24@32@40@48@56@64B72B76@80
v48@0:8@16B24@28i36@?40
v64@0:8@16@24@32@40@48@?56
v64@0:8@16@24@32@40B48B52@?56
@"GKFairPlaySAPSession"
Vv48@0:8@16@24d32@?40
Vv40@0:8@16Q24@?32
Vv64@0:8@16@24@32d40@48@?56
Vv72@0:8q16q24q32@40@48@56@?64
Vv40@0:8@"GKMatchRequestInternal"16@"NSDictionary"24@?<v@?@"GKTurnBasedMatchInternal"@"NSError">32
Vv28@0:8B16@?<v@?@"NSArray"@"NSError">20
Vv36@0:8@"NSArray"16B24@?<v@?@"NSArray"@"NSError">28
Vv32@0:8@"GKTurnBasedMatchInternal"16@?<v@?@"GKTurnBasedMatchInternal"@"NSError">24
Vv32@0:8@"GKTurnBasedMatchInternal"16@?<v@?@"NSError">24
Vv48@0:8@"GKTurnBasedMatchInternal"16@"NSArray"24d32@?<v@?@"GKTurnBasedMatchInternal"@"NSError">40
Vv40@0:8@"GKTurnBasedMatchInternal"16@"NSArray"24@?<v@?@"GKTurnBasedMatchInternal"@"NSError">32
Vv40@0:8@"GKTurnBasedMatchInternal"16Q24@?<v@?@"GKTurnBasedMatchInternal"@"NSError">32
Vv48@0:8@"GKTurnBasedMatchInternal"16@"NSArray"24@"NSArray"32@?<v@?@"GKTurnBasedMatchInternal"@"NSError">40
Vv64@0:8@"NSArray"16@"NSData"24@"NSDictionary"32d40@"GKTurnBasedMatchInternal"48@?<v@?@"NSString"@"GKTurnBasedMatchInternal"@"NSError">56
Vv48@0:8@"NSString"16@"NSDictionary"24@"GKTurnBasedMatchInternal"32@?<v@?@"GKTurnBasedMatchInternal"@"NSError">40
Vv56@0:8@"NSString"16@"NSDictionary"24@"NSData"32@"GKTurnBasedMatchInternal"40@?<v@?@"GKTurnBasedMatchInternal"@"NSError">48
Vv24@0:8@?<v@?@"NSString"@"NSString"qB@"NSError">16
Vv48@0:8@"NSArray"16@"NSDictionary"24@"GKTurnBasedMatchInternal"32@?<v@?@"NSError">40
Vv48@0:8@"GKTurnBasedMatchInternal"16@"GKPlayerInternal"24@"GKMatchRequestInternal"32@?<v@?@"NSURL"@"NSError">40
Vv72@0:8q16q24q32@"NSArray"40@"NSString"48@"GKTurnBasedMatchInternal"56@?<v@?@"NSError">64
Vv24@0:8@"GKTurnBasedMatchInternal"16
Vv48@0:8@16@24q32@?40
Vv40@0:8q16@24@?32
Vv44@0:8@16B24@28@?36
Vv44@0:8B16@20@28@?36
Vv76@0:8@16@24@32@40@48@56B64@?68
Vv32@0:8@"NSString"16@?<v@?@"GKCloudPlayer"@"NSError">24
Vv48@0:8@"NSString"16@"NSString"24q32@?<v@?@"GKGameSession"@"NSError">40
Vv32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSString"16@?<v@?@"GKGameSession"@"NSError">24
Vv40@0:8@"NSArray"16@"NSString"24@?<v@?@"GKGameSession"@"NSError">32
Vv32@0:8@"NSString"16@?<v@?@"GKGameSession"@"NSData"@"NSError">24
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?@"GKGameSession"@"NSData"@"NSError">40
Vv40@0:8q16@"NSString"24@?<v@?@"GKGameSession"@"NSError">32
Vv44@0:8@"NSData"16B24@"NSString"28@?<v@?@"NSError">36
Vv32@0:8@"NSString"16@?<v@?@"NSURL"@"NSError">24
Vv44@0:8B16@"NSArray"20@"NSString"28@?<v@?@"GKGameSession"@"NSError">36
Vv76@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSString"40@"NSData"48@"NSArray"56B64@?<v@?@"GKGameSession"@"NSError">68
Vv48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"NSError">40
B24@0:8^{sqlite3_stmt=}16
v48@0:8^{sqlite3_stmt=}16@24@32q40
v40@0:8^{sqlite3_stmt=}16@24Q32
v40@0:8^{sqlite3_stmt=}16@24d32
@48@0:8@16@24@32@40
Vv32@0:8@"GKPlayerInternal"16@?<v@?@"NSArray"@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSError">24
v44@0:8@16@?24B32@?36
Vv32@0:8@"GKPlayerInternal"16@?<v@?@"NSError">24
Vv32@0:8@"GKConcernInternal"16@?<v@?@"NSError">24
Vv32@0:8@"NSArray"16@?<v@?@"NSString"@"NSError">24
@"GKClientProxy"16@0:8
v24@0:8@"GKClientProxy"16
@48@0:8@16@24@32d40
@"<GKDatabaseWriter>"
@"<GKDatabaseReader>"
@"<GKDataWriter>"
@32@0:8@16@?24
v48@0:8@16@24@32^v40
@"<GKNWConnectionWrapperDelegate>"
@"NWConnection"
@44@0:8@16@24B32@36
B40@0:8@16@24@32
@36@0:8@16i24@28
B24@0:8Q16
B20@0:8I16
^v16@0:8
Vv32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
Vv32@0:8@"NSString"16@"NSString"24
Vv32@0:8@"NSString"16@?<v@?@"NSData">24
i32@0:8^^{sqlite3_stmt}16@24
i32@0:8^^{sqlite3_stmt}16@"NSString"24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{__CFDictionary=}
^{sqlite3=}
v24@0:8@"GKAchievementInternal"16
v24@0:8@"GKScoreInternal"16
v24@0:8@"GKChallengeInternal"16
v24@0:8@"GKInviteInternal"16
v24@0:8@"GKTurnBasedMatchInternal"16
v24@0:8@"GKMatchRequestInternal"16
v32@0:8@"GKTurnBasedMatchInternal"16q24
@"GKGameDescriptor"
@"GKCloudPlayer"
C16@0:8
v20@0:8C16
@"GKBulletinAction"
v48@0:8@16@24q32@?40
v60@0:8@16@24@32@40B48@?52
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"GKAcceptedInviteManager"
@"UNUserNotificationCenter"
v44@0:8@16@24B32@36
@"<GKPlayerListReaderDelegate>"
Vv32@0:8@"NSArray"16@?<v@?@"NSString"@"NSString"@"NSString"@"NSData"@"NSDictionary"@"NSError">24
Vv48@0:8@"NSURL"16@"NSString"24@"NSString"32@?<v@?@"NSData">40
Vv48@0:8@"NSData"16@"NSString"24@"NSString"32@?<v@?>40
Vv40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData">32
Vv40@0:8@"NSString"16@"NSString"24@?<v@?>32
Vv40@0:8@"NSURL"16@"NSData"24@?<v@?@"NSData"@"NSError">32
v36@0:8I16@20@?28
@40@0:8@16@24^@32
Vv36@0:8f16@20@?28
Vv32@0:8@"NSString"16@?<v@?>24
Vv36@0:8@"GKPlayerInternal"16B24@?<v@?@"NSArray"@"NSString"@"NSError">28
Vv40@0:8@"GKPlayerInternal"16@"NSArray"24@?<v@?@"NSArray"@"NSError">32
Vv32@0:8@"GKPlayerInternal"16@?<v@?@"NSArray"@"NSString"@"NSError">24
Vv32@0:8@"NSDictionary"16@?<v@?f@"NSError">24
Vv36@0:8f16@"GKGameInternal"20@?<v@?>28
Vv32@0:8@"NSNumber"16@?<v@?@"NSString"@"NSString"@"NSString"@"NSError">24
Vv28@0:8c16@?20
Vv28@0:8c16@?<v@?@"NSError">20
Vv28@0:8c16@?<v@?@"NSString"@"NSError">20
@"GKRecurrenceRule"
@"GKTournamentDefinitionInternal"
@"GKScoreInternal"
@"GKTournamentParticipantInternal"
@"GKLeaderboardInternal"
@"NSManagedObjectContext"
@"GKResourceManager"
^{NSDictionary=#}16@0:8
v52@0:8^{sqlite3_stmt=}16@24B32@36q44
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<_GKStateMachineDelegate>"
v32@0:8@16Q24
Q32@0:8@16Q24
v40@0:8Q16@24Q32
[4@"NSMutableDictionary"]
@36@0:8I16@20@28
v36@0:8B16@20@?28
@"CKRecord"
q24@0:8d16
q24@0:8Q16
v40@0:8@16@24^B32
v40@0:8q16@24@32
S16@0:8
v20@0:8S16
(?=""{?="_platform_unused"b8"_prerendered"b1"_supportsLeaderboards"b1"_supportsLeaderboardSets"b1"_hasAggregateLeaderboard"b1"_supportsAchievements"b1"_supportsMultiplayer"b1"_valid"b1"_unused"b1"_supportsTurnBasedMultiplayer"b1"_reserved"b15}"_value"I)
@40@0:8@16q24@32
v20@0:8f16
f16@0:8
s16@0:8
v20@0:8s16
@"GKGameRecordInternal"
@52@0:8@16@24@32@40B48
@"GKGameInternal"
v28@0:8B16@20
@"ACAccount"
@36@0:8C16@20@28
#20@0:8i16
(?=""{?="_unused"b8"_purpleBuddyAccount"b1"_underage"b1"_photoPending"b1"_findable"b1"_defaultNickname"b1"_reserved"b18}"_value"I)
(?=""{?="_maximumPoints"b16"_hidden"b1"_replayable"b1"_reserved"b14}"_value"I)
@"GKUpdateGroup"
@"NSOrderedSet"
@"GKAchievementInternal"
@28@0:8i16@20
@56@0:8@16@24@32@40@48
c16@0:8
v20@0:8c16
@"GKTournamentInternal"
@"NSString"32@0:8@"NSString"16@"NSString"24
@36@0:8@16@24i32
v32@0:8Q16@24
@"GKClientProxy<GKUIViewService>"
@"NSXPCConnection"
@"GKEntitlements"
@"GKEventTuple"
@"GKQuickAction"
@"GKInviteSession"
@"GKMatchResponse"
@"_GKStateMachine"
@"NSMapTable"
@40@0:8@16@24i32B36
@48@0:8#16@24@32@40
@28@0:8@16i24
v36@0:8@16@24i32
@64@0:8#16#24#32@40q48@56
@40@0:8@16@24^B32
v56@0:8@16@24@32d40@?48
@28@0:8@16C24
v48@0:8@16i24i28@32@?40
v44@0:8@16C24@28@?36
@24@0:8^{sqlite3=}16
@40@0:8@16@24d32
@"<NSObject><NSCopying>"
@32@0:8@16d24
B24@0:8@?16
v48@0:8@16B24i28@32@?40
v52@0:8@16@24i32@36@?44
v44@0:8@16i24@28@?36
v36@0:8@16i24@?28
v32@0:8q16@24
v32@0:8@16d24
v48@0:8@16B24B28@32@?40
Vv40@0:8@16B24B28@?32
B40@0:8@16@24@?32
@28@0:8^{sqlite3_stmt=}16i24
i28@0:8^{sqlite3_stmt=}16i24
d28@0:8^{sqlite3_stmt=}16i24
%{public}@
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391012</string>
<key>CFBundleAllowMixedLocalizations</key>
<string>YES</string>
<key>CFBundleIdentifier</key>
<string>com.apple.gamed</string>
<key>CFBundleName</key>
<string>gamed</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>2</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>17B5059e</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.2</string>
<key>DTSDKBuild</key>
<string>17B5059e</string>
<key>DTSDKName</key>
<string>iphonesimulator13.2.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>13.2</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CKContainer.sourceApplicationBundleIdentifier</key>
<string>com.apple.gamed</string>
<key>application-identifier</key>
<string>com.apple.gamed</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreTelephony.DataUsageInfo.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCDynamicStore-write-access</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.facebook.defaultaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.gamed</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.bulletinboard.dataprovider</key>
<true/>
<key>com.apple.coretelephony.Calls.allow</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.datadetectors.source-write.user</key>
<true/>
<key>com.apple.developer.icloud-container-development-container-identifiers</key>
<array>
<string>com.apple.ckcode.tournaments</string>
</array>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-database-environment</key>
<string>development</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.networking.route_nc_read</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.communicationsfilter</key>
<true/>
<key>com.apple.private.contactsui</key>
<string>YES</string>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.hsa-authentication-processing</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.gamecenter</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.gamecenter</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.gamecenter</string>
</array>
<key>com.apple.private.ids.session-private</key>
<array>
<string>com.apple.private.alloy.gamecenter</string>
</array>
<key>com.apple.private.ids.urgent-priority</key>
<array>
<string>com.apple.private.alloy.gamecenter</string>
</array>
<key>com.apple.private.imcore.imagent</key>
<true/>
<key>com.apple.private.imcore.imdpersistence.database-access</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.imcore.imtranscoderservice</key>
<true/>
<key>com.apple.private.logging.admin</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>UninstallForLaunchServices</string>
<string>Lookup</string>
<string>Uninstall</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.gamecenter</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/containers/Bundle/Application/</string>
<string>/Applications/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/usr/local/bin/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/usr/local/bin/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.DataDetectorsSourceAccess</string>
<string>com.apple.cloudd</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.springboard.remotenotifications</string>
<string>com.apple.cdp.daemon</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.usernotifications.usernotificationservice</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.setBadgeNumberForOtherApps</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.uikitservices.app.value-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>465671667</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>ichat</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>gamed</string>
</array>
</dict>
</plist>
