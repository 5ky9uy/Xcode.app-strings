@333333
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
[AP] - Audio tap reported samples before we had an appropriately sized buffer
%{public}@ didUpdateQueue:
%{public}@ _transitionToBuildState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToBuildState %{public}@ -> %{public}@
build:replace
%{public}@: calling completion intent=%{public}@ status=%{public}@
intent=%{public}@ status=%{public}@
build
%{public}@ _transitionToSourceState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToSourceState %{public}@ -> %{public}@
source:getPlaybackContext
error=%{public}@
%{public}@ _transitionToLiveLinkState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToLiveLinkState %{public}@ -> %{public}@
link:start
 enableTelemetry=YES 
PlaybackStackInitialSetup
PlaybackStackSetup
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
QueueControllerReload
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
reloadWithPlaybackContext failed - error: %{public}@ - resolution: %ld
QueueControllerInsert
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
replaceCurrentItemWithPlaybackContext failed with error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
[%{public}@]-MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@ - play: %{BOOL}u - mode: %{public}@
shouldPlay=%{BOOL}u
InitialItem
PrepareForRate
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
[%{public}@]-MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
[%{public}@]-Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
[%{public}@]-endPlaybackWithIdentifier %{public}@ - Received: clearing all playback queue
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
[%{public}@]-Pause for lease prevention %{public}@ completed - error=%{public}@
[%{public}@]-Pause command %{public}@ completed - error=%{public}@
[%{public}@]-Play command %{public}@ completed - error=%{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
[%{public}@]-Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
[%{public}@]-Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
[%{public}@]-End seek command %{public}@ completed - error=%{public}@
[%{public}@]-Set rate command %{public}@ completed - rate=%f - error=%{public}@
[%{public}@]-Set current time command %{public}@ completed - time=%f - error=%{public}@
[%{public}@]-%{public}@ - _logTimeJumpForItem - jumpIdentifier: %ld - userInitiated:%{BOOL}u - %.2fs -> %.2fs [D:%.2fs]- timeStamp:%{public}@
Unexpected _logTimeJumpForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected _playbackDidStopForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-Triggering MR command %{public}@ from userAction: %{public}@
[%{public}@]-Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - currentItemWillChangeFromItem - %{public}@ -> %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidBecomeCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidResignCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - FF or RW [ignoring time change to avoid time snaps] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - rate: %.2f - effectiveRate: %2f - state: %{public}@ - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - userSeekCompletedForItem - item=%{public}@ - [%.2fs -> %.2fs]- timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
Unexpected itemDidFailToPlayToEnd: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - No existing formats on item
[%{public}@]-%{public}@ - active audio format from AV: %{public}@
[%{public}@]-%{public}@ - [AF] - Updating active format : %{public}@
[%{public}@]-Event %{public}@: startup time: %lfs - bitrates: [observed:%lf, indicated:%lf, average audio:%lf, switch:%lf] - entry reason:%ld
[%{public}@]-%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - from stalling:%{BOOL}u - timeStamp:%{public}@
[%{public}@]-PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
Unexpected playbackDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackDidStopForItem- item=%{public}@ - source:%{public}@ - reason:%{public}@   - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeNotifiedForItem - item=%{public}@ - rate:%1.2f - reason:%{public}@ - participant:%{public}@ - timeStamp:%{public}@
Unexpected playbackRateDidChangeNotifiedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - firstFrameWillRenderForItem - item=%{public}@ - startTime:%{public}.2f
Unexpected firstFrameWillRenderForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - timeControlStatusDidChange - status:%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - stateDidChange - [%{public}@/MP:%ld/NP:%ld -> %{public}@/MP:%ld/NP:%ld] - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
Unexpected playbackBufferStateDidChangeToState:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackIsLikelyToKeepUp:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - tracksDidChange: - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - end of queue reached [%{public}@]
[%{public}@]-%{public}@ - Media Services were interrupted - item:%{public}@ - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were interrupted - no item at death - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were restored - timeStamp:%{public}@
[%{public}@]-%{public}@ - Playback stuck on non-playable item: %{public}@
[%{public}@]-%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
Unexpected firstVideoFrameWasRenderedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - relativeVolumeDidChangeTo: - volume=%{public}f - timeStamp:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidStartForItem: - item=%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidEndForItem: - item=%{public}@ - error:%{public}@ - resolution:%{public}@
Unexpected assetLoadingDidCompleteForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected assetLoadingDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Playback failed due to age verification requirement: %{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Cancelling download request [dealloc] - request:%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to clean up downloaded asset %{public}@
%{public}@: Missing DSID in delegated identity properties - skipping playback
[%{public}@]-%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
[%{public}@]-[AL] - %{public}@: Preferred audio: %{public}@ - HLSContentPolicy: %{public}@ - Selector: %{public}@, playbackAuthorizationToken=%{public}@, fileAsset=%p, storeAsset=%p
[%{public}@]-[AL] - %{public}@: Starting asset load...
[AL] - %{public}@: Returning asset load early with error: %{public}@
[AL][Bag Loading] - %{public}@: Failed to load the bag. err=%{public}@.
[%{public}@]-[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Finished loading url bag.
[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Timed out loading url bag.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Subscription lease properties already loaded.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Loading subscription lease properties.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished loading subscription lease properties.
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out loading subscription lease properties.
LoadAssetGetSubscriptionLeaseProperties
[%{public}@]-[AL] - %{public}@: preloading subscription status.
[%{public}@]-[AL] - %{public}@: Asset is %{public}@ - Preferred audio: %{private}@, isDelegatedPlayback=%{BOOL}u, allowsStreamingPlayback=%{BOOL}u, HLSContentPolicy=%{public}@}, endpointType=%d
[%{public}@]-[AL] - %{public}@: Using local file asset at path: %{public}@.
[AL] - %{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
LoadAssetLocalFileLoadOperation
[%{public}@]-[AL] - %{public}@: Using home sharing asset.
[AL] - %{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
LoadAssetHomeSharingLoadOperation
[%{public}@]-[AL] - %{public}@: Using existing Radio cached playback response: %{public}@
[%{public}@]-[AL] - %{public}@: No cached Radio playback response found.
LoadAssetAssetInfoCacheRequest
[%{public}@]-[AL] - %{public}@: No local file of appropriate quality, using cloud streaming.
[AL] - %{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
[AL] - %{public}@: Subscription is required, and we failed to load the subscription status.
[AL] - %{public}@: Playback authorization token is required for playback.
[AL] - %{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
LoadAssetSubscriptionAssetLoadOperation
[AL] - %{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
LoadAssetMediaRedownloadOperation
[AL] - %{public}@: No valid endpoint type (%ld), skipping streaming redownload.
[AL] - %{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
LoadAssetLowQualityFileLoadOperation
[%{public}@]-[AL] - %{public}@: Ready to process asset load result: %{public}@
[%{public}@]-[AL] - %{public}@: not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
[%{public}@]-[AL] - %{public}@: Using iTunes Store Content Info: %@
[%{public}@]-[AL] - %{public}@: Non HLS Asset - Reloading playback keys if required
[%{public}@]-[AL] - %{public}@: Radio station does not require a subscription, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Protection type is %li, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Not subscription content, skipping playback key check.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Lease session invalid, skipping key loading.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Reloading FairPlay key status to ensure the latest value is known...
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@ with error: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
LoadAssetLoadFairPlayKeyStatus
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Already have playback keys from lease status: %{public}@, no need to do another request.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the asset requires online keys
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the lease status indicates none available: %{public}@
contentType=%{public, signpost.telemetry:string1, name=contentType}s
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished subscription lease request for playback keys with error: %{public}@.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
 enableTelemetry=YES isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAssetLeaseSessionPlaybackRequest
[%{public}@]-[AL] - %{public}@: AVURLAsset %{public}@ - options: %{public}@
[%{public}@]-[AL] - %{public}@: Initiating full online key retrieval [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Using purchase bundle: %{public}@
[%{public}@]-[AL] - %{public}@: Attempting to load full subscription asset [first asset requires online keys]
[AL] - %{public}@: Full subscription asset loading completed [first asset requires online keys]
[AL] - %{public}@: [Asset caching: CRABS] Initiating caching
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Asset download completed successfully.
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Writing placeholder purchase bundle at path: %{public}@
[AL] - %{public}@: [Asset caching: CRABS] Asset download completed with error: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Loaded full subscription asset, updated purchaseBundle = %@
[AL] - %{public}@: [Asset caching: CRABS] Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
[AL] - %{public}@: [Asset caching: CRABS] Failed to load full subscription asset: %{public}@.
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Writing purchase bundle at path: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
[AL] - %{public}@: [Asset caching: CRABS] Error caching file asset: %{public}@.
[AL] - %{public}@: [Asset caching: CRABS] Finished caching file asset.
[AL] - %{public}@: [Asset caching: CRABS] Removed incomplete download at URL: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
LoadAssetCRABSAssetDownload
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Initiating download to destination file %{public}@
LoadAssetHLSAssetDownload
LoadAssetCreateAVPlayerItem
[%{public}@]-[AL] - %{public}@: Starting Suze lease session...
[AL] - %{public}@: Failed to create suze lease with error: %{public}@.
[AL] - %{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
LoadAssetSuzeLeaseSession
[%{public}@]-[AL] - %{public}@: Asset loading failed with error: %{public}@
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s result=%{public, signpost.telemetry:string2, name=result}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
[%{public}@]-[AL] - %{public}@: Asset load finished.
[%{public}@]-[AL] - %{public}@: Non-decorated asset load results for HLS playback: %{public}@
[%{public}@]-[AL] - %{public}@: Decorated asset load results for HLS playback: %{public}@
[%{public}@]-[AL] - %{public}@: HLS content without proper URLs: not setting-up a content key session
[%{public}@]-[AL] - %{public}@: Forcing a refresh of the hls keys due to a certificate mismatch
[AL] - %{public}@: Failed to fetch FairPlayKeyStatus for offline key determination error: %{public}@
[%{public}@]-[AL] - %{public}@: Not requesting offline keys because Fairplay does not have offline subscription keys
[AL] - %{public}@: [Asset caching: HLS] Failed to create download url session for HLS asset
[AL] - %{public}@: [Asset caching: HLS] Attempting to cache asset of type %{public}@ using HLS caching logic
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Setting cache properties of HLS asset with traits: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to update cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Caching of HLS asset completed successfully
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Asset download complete. url:%{public}@ err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Removed previous file at URL: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to remove previous file at URL: %{public}@ error: %{public}@.
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to clear cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Clearing cached asset file [fatal download error]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Clearing cached asset [asset is corrupted]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to destination URL: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ and linked to destination URL: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ but failed to link to shared cache URL: %{public}@ error: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ but failed to link to destination URL: %{public}@ error: %{public}@
[%{public}@]-%{public}@: [AF] - Updating preferred audio format: %{public}@ -> %{public}@
[%{public}@]-%{public}@: [AF] - Updating active audio format: %{public}@ -> %{public}@ - Justification: %ld
[%{public}@]-%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
[%{public}@]-%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
[%{public}@]-%{public}@: Transforming error network unavailable instead of original: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Getting subscription lease session
[%{public}@]-[LeaseRatePreparation] - %{public}@: Sending subscription lease request
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status: %{public}@ error: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Subscription lease not required]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Playback keys not required] - someKeysAreRequired:%{BOOL}u - isDownloadedAndHasOfflineKeys: %{BOOL}u - requiresOnlineKeys: %{BOOL}u - hasNeitherOnlineNorOfflineKeys: %{BOOL}u
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [No subscription lease session available]
[%{public}@]-%{public}@ Using start time: %f
[%{public}@]-%{public}@ Using stop time: %f
[%{public}@]-%{public}@ Using bookmark start time: %f
%{public}@: setupWithPlaybackInfo called without an asset loaded
%{public}@: setupWithPlaybackInfo called without an asset loaded and isAssetLoaded is TRUE
%{public}@: Uninitialized MPModelPropertyAlbumTraits - album=%{public}@.
%{public}@: Uninitialized MPModelPropertyPlaylistTraits properties - playlist=%{public}@.
%{public}@: Unwrapped playback error with type=%@ error=%{public}@.
%{public}@: Subscription lease request failed [error during resolution] - error=%{public}@.
[%{public}@]-%{public}@: Finished sending subscription lease request for error resolution
%{public}@: Finished reloading FairPlayKey status - error=%{public}@
[%{public}@]-%{public}@: Finished reloading FairPlayKey status
%{public}@: Finished authorize machine request for error resolution with error: %{public}@.
[%{public}@]-%{public}@: Finished authorize machine request successfully.
[%{public}@]-%{public}@: Purging cached content key(s) for invalid user error.
%{public}@: Failed to remove cached hls keys. err=%{public}@.
[%{public}@]-%{public}@ - BackgroundTask: Took assertion (%lli) at %{public}s:%d
[%{public}@]-%{public}@ Using adamID %lld for key server requests from identifier set %{public}@
[%{public}@]-%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
[%{public}@]-%{public}@: Enabling album loudness on player item %{public}@
[%{public}@]-%{public}@: Setting loudness info %{public}@ on player item %{public}@
[%{public}@]-%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Loading subscription status...
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Skipping subscription lease load since the subscription status indicated it shouldn't be used
[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@ with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Loading subscription lease session...
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Finished loading subscription lease session: %{public}@
[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Failed to load subscription lease session with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Posting ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification: %{public}@
[%{public}@]-%{public}@ - BackgroundTask: End assertion (%lli) at %{public}s:%d
[%{public}@]-[Bookmarking] - %{public}@: _handlePlaybackFinishedTime:didFinishByHittingEnd - Updating bookmark with entity %{public}@ - bookmarkTime: %.2f - hasBeenPlayed: %{BOOL}u
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - updating prevention status - lease status: %{public}@
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - Lease playback prevention state did change to: %li [status: %{public}@
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] completion %{public}@
|%{public}@ %{public}@  
 STREAM START 
 %{public}@ [%d] 
|%{public}@ %{public}@ %{public}@
 SESSION BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION END                %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE END        %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 SESSION RESET [BOUNDARY]   %{public}@
|%{public}@ %{public}@ %{public}@
 APPLICATION TERMINATION
|%{public}@ %{public}@ %{public}@
 APPLICATION FOREGROUND
|%{public}@ %{public}@ %{public}@
 APPLICATION BACKGROUND
|%{public}@ %{public}@ %{public}@
 DEVICE CHANGED
|%{public}@ %{public}@ %{public}@ 
 name: %{private}@; model: %{public}@
|%{public}@ %{public}@ %{public}@  
 application: %{public}@/%{public}@; bundleID: %{public}@; uuid: %{public}@; version: %{public}@
|%{public}@ %{public}@ %{public}@  
 root: %{public}-26@; uuid: %{public}@; version: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 os: %{public}@ [%{public}@]/%{public}@ %{public}@; internalCarry: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 NET REACHABILITY CHANGED   %{public}@
Unexpected signalStrength values: %{public}@
|%{public}@ %{public}@ %{public}@
 NETWORK TYPE CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 strength: %{public}@
|%{public}@ %{public}@ %{public}@  
 constrained: %{BOOL}u; high quality: %{BOOL}u; expensive: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 COMMAND BEGIN              %{public}@ 
|%{public}@ %{public}@ %{public}@ 
  source: %{public}@
|%{public}@ %{public}@ %{public}@  
 nowPlayingContentItemID: %{public}@
|%{public}@ %{public}@ %{public}@  
 commandSendTime: %{public}@
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@
 COMMAND TIMEOUT            %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@ 
|%{public}@ %{public}@ %{public}@
 COMMAND END                %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@  
 dialog.title: "%{public}@"; dialog.message: "%{public}@"
|%{public}@ %{public}@ %{public}@  
 dialog-action: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
   error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@
 COMMANDS CHANGED
|%{public}@ %{public}@ %{public}@ 
 commands:
|%{public}@ %{public}@ %{public}@  
%{public}@ %{public}-40@ [%{public}@]
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 added: %lld; removed: %lld; updated: %lld
|%{public}@ %{public}@ %{public}@
 COMMANDS CHANGED           [no change]
|%{public}@ %{public}@ %{public}@
 QUEUE ADD                  %{public}@
|%{public}@ %{public}@ %{public}@ 
 queue: %{public}@
|%{public}@ %{public}@ %{public}@  
 feature: %{public}@
|%{public}@ %{public}@ %{public}@  
 queue-grouping-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 account: %{public}@
|%{public}@ %{public}@ %{public}@  
 requesting-application: %{public}@/%{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedAccount: %{public}@; delegatedDeviceName: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedDeviceOSVariant: %{public}@; delegatedDeviceUserAgent: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegated-private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 private-listening-source: %{public}@; private-listening-override: %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM ADD             %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REMOVE          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REORDER         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD BEGIN           %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD END             %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@ 
 title: %{public}@
|%{public}@ %{public}@ %{public}@  
 playlistVersionHash: %{public}@
|%{public}@ %{public}@ %{public}@  
 stationType: %{public}@; stationSubtype: %{public}@
|%{public}@ %{public}@ %{public}@  
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER END              %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BEGIN                 %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 duration: %0.2f; initialPosition: %0.2f; startBoundary: %0.2f; endBoundary: %0.2f
|%{public}@ %{public}@ %{public}@  
 requiresPAF: %{BOOL}u; video: %{BOOL}u; artistUploaded: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM UPDATE                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM JUMP                  %{public}@ %{public}@ [%{public}@]
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f; end: %0.2f
|%{public}@ %{public}@ %{public}@  
 userInitiated: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM PAUSE                 %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 end: %0.2f
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@  
 source: %{public}@
|%{public}@ %{public}@ %{public}@
 RATE CHANGED               %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 position: %0.2f
|%{public}@ %{public}@ %{public}@  
 participant: %{public}@
|%{public}@ %{public}@ %{public}@  
 rate: %0.2f
|%{public}@ %{public}@ %{public}@
 FIRST AUDIO FRAME          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %{public}@
|%{public}@ %{public}@ %{public}@  
 wait time: %0.2fs
|%{public}@ %{public}@ %{public}@  
 gap: %0.2fs
|%{public}@ %{public}@ %{public}@
 ITEM RESUME                %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f
|%{public}@ %{public}@ %{public}@
 READY TO PLAY              %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER READY          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER STALL          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER FINISH         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 skd: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM METADATA PING          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 data: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM END                   %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 didPlayToEnd: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 AUDIO CHANGE               %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 activeFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 targetFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification: %{public}@; preferences: %{public}@
|%{public}@ %{public}@ %{public}@  
 alternate: %{public}@
|%{public}@ %{public}@ %{public}@  
 audioRoute: %{public}@
|%{public}@ %{public}@ %{public}@
 ASSET TYPE SELECTION       %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@
|%{public}@ %{public}@ %{public}@  
 explanation: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification:
|%{public}@ %{public}@ %{public}@      
 %{public}@: %{public}@
|%{public}@ %{public}@ %{public}@  
 explanation: %{public}@
|%{public}@ %{public}@ %{public}@
 AUDIO FORMAT SELECTION     %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 format: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET BEGIN           %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET END             %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM ASSET INFO            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@; subscription: %{BOOL}u; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 networkOperations: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM CONFIG BEGIN          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@
 ITEM CONFIG END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 EQ: %{public}@
|%{public}@ %{public}@ %{public}@  
 soundCheckVolumeNormalization: %.3f
|%{public}@ %{public}@ %{public}@  
 loudnessInfo: %{public}@
|%{public}@ %{public}@ %{public}@  
 hlsMetadataWaitTime: %0.3fs
|%{public}@ %{public}@ %{public}@  
 route: %{public}@ (%{public}@)
|%{public}@ %{public}@ %{public}@
 ITEM FAILED                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER END            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 HLS BEGIN                  %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 hasIndeterminateDuration: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 HLS END                    %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA BEGIN       %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA END         %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM TRANSITION SETUP      %{public}@ => %{public}@
|%{public}@ %{public}@ %{public}@  
 parameters: %{public}@
|%{public}@ %{public}@ %{public}@
 ERROR RESOLUTION           %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT END              %{public}@
|%{public}@ %{public}@ %{public}@ 
 resume: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 POLICY BEGIN
|%{public}@ %{public}@ %{public}@
 POLICY END
|%{public}@ %{public}@ %{public}@
 BEHAVIOR CHANGED           %{public}@
|%{public}@ %{public}@ %{public}@ 
 shuffle:  %{public}@
|%{public}@ %{public}@ %{public}@  
 repeat:   %{public}@
|%{public}@ %{public}@ %{public}@  
 autoplay: %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES LOST       %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES RESET      %{public}@
|%{public}@ %{public}@ %{public}@
 ROUTE CHANGED              %{public}@
|%{public}@ %{public}@ %{public}@ 
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 isAirPlay: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 shouldPause: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED       %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED       %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@
 SHARED SESSION BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 PARTICIPANTS CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 localUserIdentifier: %{public}@
|%{public}@ %{public}@ %{public}@  
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@  
 participants.count: %ld
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC BEGIN  %{public}@
|%{public}@ %{public}@ %{public}@ 
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC END    %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT UPDATE             %{public}@
|%{public}@ %{public}@ %{public}@ 
 store-id: %{private}llu; storefront: %{public}@; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 household-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 subscription: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
[PIA] %p will not run requests for itemIdentifiers=%{public}@
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
[PIA] %p skipping item [store lookup failed] itemID=%{public}@
[PIA] %p skipping item [not eligible] allowExplicitContent=%{BOOL}u item=%{public}@ 
[PIA] %p computed accumulatorResult didFinishEntireRequest=%{BOOL}u didFinishBatch=%{BOOL}u hasCollectionItemsWithPlaybackAuthTokens=%{BOOL}u pendingStoreIDs=%{public}@
[PIA] %p Failed to import response %p. error=%{public}@
[PIA] %p Handling SP response=%p isFatalError=%{BOOL}u error=%{public}@
[PIA] %p Adding identifiers=%{public}@ as permanently failed items
%p Could not import response=%p to SOD. Error=%{public}@
MPCModelStorePlaybackItemsRequestAccumulator _updatedObjectWithPlaybackAuthorizationToken: is using vac token from the request. Object: %@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
[PIA] %p Found %d childIdentifierSets for %{public}@ with parentVersionHash=%{public}@, childKey=%d
[PIA] %p Error creating identifierSet for itemID=%{public}@ as _personID is nil
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackQueueReceived
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackReady
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPMusicPlayerControllerServer: startServer: resummed systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: startServer: deferred resume waiting for canBeNowPlaying systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: stopServer
getNowPlaying
getNowPlayingsForContentItemIDs
getNowPlayingAtIndex
setNowPlayingItem
getTimeSnapshot
MPCMusicPlayerControllerServer: play: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
play
MPCMusicPlayerControllerServer: pause: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
pauseWithFadeDuration
MPCMusicPlayerControllerServer: nextTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: previousTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
skipWithBehavior
reshuffle
MPCMusicPlayerControllerServer: reshuffle: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekForward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekBackward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
beginSeekWithDirection
endSeek
MPCMusicPlayerControllerServer: seekForward: endSeeking: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: changeRepeatMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setRepeatMode
getRepeatMode
MPCMusicPlayerControllerServer: changeShuffleMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setShuffleMode
getShuffleMode
MPCMusicPlayerControllerServer: changePlaybackPosition: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setElapsedTime
setPlaybackRate
MPCMusicPlayerControllerServer: changePlaybackRate: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getUserQueueModificationsDisabled
setUserQueueModificationsDisabled
MPMusicPlayerControllerServer: prerollWithCompletion FAILED [not implemented]
MPMusicPlayerControllerServer: beginPlaybackAtHostTime FAILED [not implemented]
MPMusicPlayerControllerServer: engine:didChangeToItem: - %{public}@ - reloading:%{BOOL}u
MPMusicPlayerControllerServer: connection invalidated: pid=%u
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
[Publisher] publishIfNeeded: first publish
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
[Publisher] Updating active account requires authorization tokens: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
SessionActivation
_MPCMediaRemotePublisher: Failed to bless application
success=%{BOOL}u
publisher:bless
_MPCMediaRemotePublisher: Delaying audio activation [internal setting]: %gs
_MPCMediaRemotePublisher: Finished delaying audio activation [internal setting]
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [contextID does not match queueControllerUniqueID]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [command option to disable]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p is in shared listening mode]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
UpdateSupportedCommands
[Publisher] performCommandEvent: _homeAccessorySettingsPrivateListeningOverride homeUserPrivateListeningOverride=%{public}@ userMonitor=%{public}@ destinationUIDs=%{private}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
PerformCommandSetPlaybackQueue
PerformCommandPlay
command=%{public, signpost.telemetry:string1, name=command}s
PerformCommandOther
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: BackgroundTask: End assertion (%lli)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: BackgroundTask: Took assertion (%lli)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
 enableTelemetry=YES status=%{public, signpost.telemetry:string2, name=status}s
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [allowing command] type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [failing command] type=%{public}@ id=%{public}@ interface=%{public}@
Cannot skip backwards from current item: %{public}@ [%{public}@]
Cannot skip forwards from current item: %{public}@ [%{public}@]
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=KeepUpNext [in shared listening]
Play queue verification failed with error: %{public}@
EndPlayback
Create playback context failed with error: %{public}@
Cannot override manually curated queue.
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=LeaveSharedSession [received shared listening intent while already in shared listening]
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
AccountRectification
type=replaceCurrentItem
SetQueue
 SetPlaybackQueue (keeping up next with no current item) recovered
type=reload
Radio station getPlaybackContext failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Add to playback context failed: %{public}@
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: cannot preload playback session with immediate priority, please send followup MRMediaRemoteCommandSetPriorityForPlaybackSession command.
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: SetPriorityForPlaybackSession [ignoring non-Immediate priority]
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
Change rate failed. (error = %{public}@)
shareQueue:getTracklist
shareQueue:buildIntent
status=%{public}@
Unsupported command: %{public}@ id=%{public}@
MPCMediaRemotePublisher: %p - [Lease] - Session migration will begin - identifier:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end with error [Stealing the lease back] - identifier:%{public}@ - error:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end - identifier:%{public}@
[AL] - %{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
[AL] - %{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
stationPlaybackAuthorizationToken=%{public}@ for identifier=%{public}@
%{public}@: File asset missing file path, finishing.
[AL] - %{public}@: File traits translation from MPFileAsset to MPMediaItem: %{public}@ -> %{public}@ - Existing file traits: %{public}@
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
[AL] - %{public}@: [Asset caching] - Unusable local file asset [No cached or downloaded file]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [Missing cached or downloaded file]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [Cached assets not allowed]
[AL] - %{public}@: [Asset caching] - Local file asset is usable as is [Purchased or matched content]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [HLS file not allowed for playback]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [HLS file with missing hls keys]
[AL] - %{public}@: [Asset caching] - Local asset of acceptable quality [File format differs from requirements but quality is available]
[AL] - %{public}@: [Asset caching] - Local asset of incorrect quality [File format differs from requirements]
[AL] - %{public}@: [Asset caching] - %{public}@
[AL] - %{public}@: [Asset caching] - %{public}@ file is CRABS
[AL] - %{public}@: [Asset caching] - %{public}@ file is HLS file - Traits: %{public}@
[AL] - %{public}@: [Asset caching] - Upgrade on play decision process - localFileIsDownloaded: %{BOOL}u - localFileShouldBeUpdated: %{BOOL}u - userExpectsSpatialDownload: %{BOOL}u - userExpectsLosslessDownload: %{BOOL}u => shouldUpgradeDownloadOnPlay: %{BOOL}u.
[AL] - %{public}@: [Asset caching] - Caching decision process - assetCachingIsAllowed: %{BOOL}u - localFileDoesNotExist: %{BOOL}u - localFileIsCachedAndNeedsUpdating: %{BOOL}u => shouldUpgradeCacheOnPlay:%{BOOL}u.
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
MPCPlaybackHistoryController %p - Previous track does not meet playback history threshold - previous:%{public}@
item=%{public}@
LoadAsset
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
ConfigureItem
Device supports streaming
Network connection is available
No network connection available
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
MPCRTCEventConsumer: testingDelegate set. RTC messages will not be sent.
MPCRTCEventConsumer: Cannot send RTC message. Missing queueAddEvent for event=%@ with time=%@
MPCRTCEventConsumer: No itemBeginEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: Missing MPCPlaybackEngineEventPayloadKeyItemRTCHierarchyToken for MPCPlaybackEngineEventTypeItemBegin with time=%@
MPCRTCEventConsumer: Generated new RTC session. category=%@ serviceName=%@
MPCRTCEventConsumer: _payloadForSessionStart: Invalid item start event. type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: No QueueLoadEndEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionSummary: sessionStartItemEvent=nil event.type=%{public}@ event.date=%{public}@
MPCRTCEventConsumer: _payloadForItemAssetLoad: firstAudioFrame=nil
MPCRTCEventConsumer: _itemStartIncitingEvent: itemStartEvent=nil
MPCRTCEventConsumer: _itemStartIncitingEvent: sessionStartEvent=nil
MPCRTCEventConsumer: _updateAssetLoadInfoEvent requires MPCPlaybackEngineEventTypeItemAssetLoadEnd type
MPCRTCEventConsumer: [RTCReporting startConfigurationWithCompletionHandler:] failed with no backends
MPCRTCEventConsumer: Can't send RTC message. session=nil. category=%{public}@
MPCRTCEventConsumer: Sent RTC message. category=%{public}@ type=%{public}@
MPCRTCEventConsumer: RTC Message send failed. category=%{public}@ error=%{public}@
MPCRTCEventConsumer: Sent one message. serviceName=%{public}@ category=%{public}@ type=%{public}@ error: %{public}@
MPCRTCEventConsumer: Sent one message. serviceName=%{public}@ category=%{public}@ type=%{public}@
WaitForLikelyToKeepUp
%{public, signpost.description:end_time}llu, enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
WaitForReadyToPlay
PlayToSetRate
SetRateToEffectiveRate
seekToTime: %{public}@ currentTime: %{public}@ currentSceneIndex: %ld currentLoopCount: %ld URL: %{public}@ signpostID: %llu
SeekToTime
finished: %{BOOL}d
MPCScriptedLooper %p: Cancelled preloading metadata.
MPCScriptedLooper %p: metadataStatus was %ld.
MPCScriptedLooper %p: Cancelled preloading playable.
MPCScriptedLooper %p: playableStatus was %ld.
MPCScriptedLooper %p: Failed to preload duration. error=%{public}@
MPCScriptedLooper %p: Cancelled preloading duration.
PlayPerfJSON: %{public}@
PlayPerf: %{public}@
PlayPerfEvent: Logging CoreAnalytics event %{public}@ with payload:
%{public}@
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
[AL] Error retrieving HLS session metadata - Asset:%{public}@ - Error:%{public}@
[AL] Time-out while retrieving HLS session metadata - Asset:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d error=%{public, signpost.telemetry:string1, name=error}s
ErrorResolution
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable playback failure [resource unavailable] - Actual resolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable failure [subscription required for playback] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Processing fatal playback error - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - nil item received [Queue failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Playback has not yet succeeded [Adding to queue failure set]
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Playback has succeeded for at least one item [Ignoring queue failure]
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Stopping playback for a first item or unrecoverable asset loading error. error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Failed to queue any items] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure - nil item] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Specified first item failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Entire queue loading failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Subscription required] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure] error=%{public}@
[AL] - %{public}@: Using subscription playback endpoint with operation type: %li
[AL] - %{public}@: Short-circuiting Item Subscription Asset Loading [offline] - SOD/Cached Response/Server requests are unusable
[AL] - %{public}@: Loading subscription lease session...
[AL] - %{public}@: Failed loading subscription asset due to missing lease session.
[AL][Lease] - %{public}@: Has subscription lease session, using it. Lease status: %{public}@
[AL] - %{public}@: Loading %{public}@ asset from Mini Sinf...
[AL] %{public}@: MPCModelGenericAVItemSubscriptionAssetLoadOperation execute [loading asset from cache] prefersVideoContent=%{BOOL}u preferredAudio=%{private}@
[AL] - %{public}@: Loading %{public}@ asset - Preferred audio: %{private}@
[AL] - %{public}@: Using existing cached playback response: %{public}@
[AL] - %{public}@: Performing subscription playback request...
[AL] - %{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Performing subscription accountless playback request...
[AL] - %{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Skipping miniSINF in the server object database [HLS playback]
[AL] - %{public}@: Skipping miniSINF in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Skipping miniSINF in the server object database [delegated lease]
[AL] - %{public}@: Skipping miniSINF in the server object database [no online lease]
[AL] - %{public}@: Skipping miniSINF in the server object database [no assets found]
[AL] - %{public}@: Skipping assets in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Skipping assets in the server object database [delegated lease]
[AL] - %{public}@: Skipping assets in the server object database [no online lease]
[AL] - %{public}@: Skipping assets in the server object database [no HLS assets found]
[AL] - %{public}@: Found an asset with no sinf, skipping assets in server object database
[AL] - %{public}@: Skipping assets in the server object database [no assets found]
MPCModelQueueFeeder applyVolumeNormalizationForItem: soundCheckEnabled=%{BOOL}u
MQF %p: setting override start time: %{public}@ for item: %{public}@
MQF %p: setting override stop time: %{public}@ for item: %{public}@
MQF %p: Supplemental playback context created: %{public}@ - reason: %ld
MQF %p: defersResponseReplacement: crashing [exception while computing change details] exception=%{public}@
MQF %p: defersResponseReplacement: change details out of sync [identifierRegistry count mismatch] countDuringDiff=%ld countDuringApply=%ld
MQF %p: Crashing [invalid change details] reason=%{public}@ changeDetails=%{public}@
NoValidItems
MQF %p: Siri asset info: %@
MQF %p: loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
MQF %p: Failed to load identity properties. error: %{public}@
ModelShimRequest
MQF - loadPlaybackContext - SiriAssetInfo results contain items not in the queue startItemIdentifiers=%{public}@ storeItems=%{public}@
MQF %p: Setting trustProvider=%p, trustIdentifier=%{public}@ on request=%p
MQF %p: Retaining trustProvider=%p, trustIdentifier=%{public}@ on request=%p
MQF %p: itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
MQF %p: [BackgroundTasks] %{public}@ Expired.
MQF %p: [BackgroundTasks] %{public}@ Background Task Failed to Start.
MQF %p: [BackgroundTasks] %{public}@ Start [%lu]
MQF %p: [BackgroundTasks] End [%lu]
ModelRadioPersonalizationRequest
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag. error: %{public}@
PlayActivityFeedEventConsumer %p: _handleItemResumeEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPositionJumpEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPauseEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemEndEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleApplicationTerminationEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueItemIdentifier - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find accountIdentifier event=%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier for delegated playback] - event:%{public}@ - cursor:%{public}@
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
com.apple.mediaplaybackcore.videodebug: %@
Deallocating future that wasn't finalized or invalidated: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
[%{public}@]-MPCPlayerItemConfigurator %p - Setting EQ to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Processing user default audio quality change
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reloading all queued items] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reconfiguring all queued items & player] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayer setup: %{public}@ - currentItem: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving audio formats - item:%{public}@ - error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No audio formats in HLS session data [Setting up player item using preferred audio asset type] - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Audio formats available in HLS session data [Setting up player item] - item:%{public}@ - Preferred format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - AVPlayerItem setup:%{public}@ - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No enhanced audio format [Using pre-defined lossy formats] - item:%{public}@ - Preferred/active format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving HLS metadata - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error decoding HLS metadata [Clearing audioFormatsDictionary] - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Route changed to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no player item]
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no preferred format on item] - item: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred audio format changed [configuring player item] - item:%{public}@ - downloaded:%{BOOL}u - audio format: %@ -> %@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayerItem setup: %{public}@ - item:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Screen mirroring is on for an audio item - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - We prefer buffered audio over url flinging for audio items - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Dispatching %{public}@ command to destination: %{public}@
Command %{public}@ to destination: %{public}@
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Send to originating device: Not remote controllable.
Send to originating device: Unable to discover
Cannot send command: no output devices specified in destination: %{public}@
Cannot decode active identity
Searching for output devices matching UIDs: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@
Sent %{public}@ to %{public}@: %{public}@
Send to external destination: No matching account.
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p - initWithCoder: error detected [dataSources failed to decode] decoder.error=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
queueController %p: clearUpNext: reloading items [queue updated]
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
queueController %p: finalizeStateRestorationWithCompletion: restored dataSource=%p section=%{public}@
section=%{public}@
QC-FinalizeDataSource
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
reasons=%{public}@
QC-FinalizeDataSource-Original-Rectify
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: moveContentItemID: reloading items [update for move after]
queueController %p: moveContentItemID: reloading items [update for move before]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: reset: error detected [dataSources is nil]
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: ignoring setAutoPlayEnabled:%{BOOL}u [autoPlayState=%@]
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: resetSharedListening disconnecting interposingHost on dataSource: %{public}@
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: removeContentItemID: reloading items [update removed item]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
[ITFIT] queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID mismatch] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: [missingIDSet intersects nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
queueController %p: itemToFollowItem: [missingIDSet does not intersect nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
[ITFIT] queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
[ITFIT] queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [no enumerated items]
queueController %p: queueReferencesWithMaxCount [enumerating items] maxCount=%ld
queueController %p: didReachEndOfQueueWithReason: calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: didReachEndOfQueueWithReason: publisher.leaveSharedSession complete status=%{public}@
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: sessionDidEnd: [InterposingHost] calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] publisher.leaveSharedSession complete status=%{public}@
queueController %p: jumpToItem:inSection: ignoring request to jump to item that is already current [InterposingHost] currentContentItemID=%{public}@
queueController %p: jumpToItem:inSection: setting nextContentItemID [InterposingHost] nextContentItemID=%{public}@
queueController %p: jumpToItem:inSection: reloading items [jump to item]
queueController %p: jumpToItem:inSection: failed [content item not in SIL] contentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to queueCoordinator:itemToFollowItem:] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [rootItem for offset zero] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [returning nil] contentItemID=%{public}@ jumpToItem=%{BOOL}u reachedEnd=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to _contentItemIDWithOffset:%ld] item=%{public}@
queueController %p: updatePlayerPlaybackCoordinator: %@
queueController %p: _queueIDPairForIdentifierListIDPair: failed to convert to queueID [dataSource did not have containerInfo] inSharedListeningMode=YES itemIdentifier=%{public}@
queueController %p: _identifierListIDPairForQueueIDPair: failed to convert to identifierListID [invalid container ID (queueSectionID)] inSharedListeningMode=YES queueIDSection=%{public}@ queueIDItem=%{public}@
queueController %p: _addPlaybackContext: reloading items [interpose queue modification] keepCurrentItem=NO
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addPlaybackContext: [entering shared listening mode] SLQF=<%{public}@ %p>
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: _emitEventsForItemChangeFromItem:toCurrentItem: skipping MPCPlaybackEngineEventTypeContainerBegin [placeholder container] containerIdentifiers=%{public}@
queueController %p: _highQualityMusicStreamingOnCellularDidChange: reloading items [pref changed] keepCurrentItem=YES
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@ identifierListSection=%{public}@
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [tailPlaceholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [datasource specified placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item from previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item not from current nor previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [failed to create item] missingContentItemID=%{public}@
queueController %p: _removeContentItemID: load items if needed [preloading] section=%{public}@
queueController %p: _removeContentItemID: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: loading more items in autoplay section after items deleted reloading items [finished preloading] keepCurrentItem=%{BOOL}u
MPCQueueController: _soundCheckEnabledChangedNotification soundCheckEnabled=%{BOOL}u
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: AutoPlay disabled in bag
queueController %p: _transitionToAutoPlayState: reloading items [invalidateQueue] keepCurrentItem=%{BOOL}u
queueController %p: autoplay loading [triggered]
[SLQF] %p loadPlaybackContext:completion [allocating live link] liveLink=%p sessionID=%{public}@
[SLQF] %p loadPlaybackContext:completion [reusing live link] liveLink=%p sessionID=%{public}@
[SLQF] %p removeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p removeItems: [ignoring unknown itemIDs] itemIdentifiers=%{public}@ sharedListeningIdentifiers=%{public}@
[SLQF] %p removeItemsAfterItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown beforeItemID] beforeItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown afterItemID] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: [ignoring unknown itemID, adding to beginning] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [received direct current item change while PlayNow request in flight] startItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [server omitted startItemID] startItemID=%{public}@ resolvedStartItemID=%{public}@
[SLQF] %p didJumpToItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p liveLink:didEncounterError: [attempting retry] error=%{public}@
[SLQF] %p liveLink:didEncounterError: [not attempting retry] error=%{public}@
[SLQF] %p liveLinkDidReconnect
[SLQF] %p liveLink:didUpdateParticipants: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didUpdateQueue [state=MPCSharedListeningQueueFeederStateLiveLinkWaitingForFirstQueue, isAutoPlayAvailable=(%{BOOL}u --> %{BOOL}u), isAutoPlayEnabled(%{BOOL}u --> %{BOOL}u)]
[SLQF] %p liveLink:didUpdateQueue: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didReceiveDirectCurrentItemChanged:fromParticipant: [setting shouldRefreshBeforeActive] state=%{public}@ deferredCurrentItemID=%{public}@ participant=%{publich}@
[SLQF] %p liveLink:didReceiveEvent: [converted to MPCSharedListeningEvent] icEvent=%{public}@ mpcEvent=%{public}@
[SLQF] %p liveLink:didReceiveEvent: dropping event  [state not Active] state=%{public}@ event=%{public}@
[SLQF] %p playbackCoordinator:identifierForPlayerItem: [ignoring unknown itemID] itemID=%{public}@ avPlayerItem=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [expired] action=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [no such item] missingItemID=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [placeholder item] idSet=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [satisfied] action=%{public}@
[SLQF] %p _enqueuePendingActionWithLabel: enqueuing action=%{public}@
[SLQF] %p _ICSharedListeningForMPSILItemIdentifier [unknown SIL ItemID] id=%{public}@ IDRegistry=%{public}@
[SLQF] %p _MPSILItemIdentifierForICSharedListeningItemIdentifier [unknown SharedListening ID] id=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentAdded item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReordered item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReplaced item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=Reaction item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [unknown item] event=Reaction itemIdentifier=%{public}@
[SLQF] %p _sectionedCollectionForQueue: nil value for ICSharedListeningItem playbackParams["kind"]
[SLQF] %p _sectionedCollectionForQueue: unhandled value for ICSharedListeningItem playbackParams["kind"]=%{public}@
[SLQF] %p _updatePlayerLiveLinkConnection _playbackCoordinator=%{public}@
[SLQF] %p _transitionToState: from=%{public}@ to=%{public}@
[SLQF] %p callSuperLoad failed to get expectedCurrentItem error=%{public}@
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from MPHomeUserMonitor privateListeningEnabledForCurrentUserAndAccessory - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: Failed to load private listenting value from account. err=%{public}@
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No matching account for dsid=%{private}@ (enabling private listening as the fallback)
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No userMonitor for account with identifiers=%{private}@ (using MPHomeUserPreferencePrivateListeningFallbackValue)
[KAOS] <%p> Resolved devices: %@
[KAOS] <%p> Sending discovered local endpoint to caller
Modify context: slow error: %{public}@
Modify context: slow
[KAOS] <%p> Routing to devices
[KAOS] <%p> Routing completed with error %@
Discover devices of group: %{public}@
Discover devices: %{public}@
[KAOS] <%p> Sending default local endpoint to caller
Discover logical devices: %{public}@
Using local endpoint.
Not a home theater.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover discovered endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, failing because device requires command redirection
No discovered endpoint, use local
Searching for endpoint, pilot %{public}@
Searching endpoint for leader: %{public}@
Pair is not group leader. Endpoint: %{public}@
No discoverable pair
Not being airplayed to
Not a stereo pair
Failed to set output devices on primary endpoint: %{public}@
sharedListeningTracklist:modelRequest:perform
items=%lld; error=%{public}@
[SLQF] %p getSharedListeningTracklist unexpected failure [intersectsSet returned NO] startItemIdentifiers=%{public}@ itemIdentifierSet=%{public}@
section=%ld
sharedListeningTracklist:modelRequest:scramble
items=%lld
sharedListeningTracklist:modelRequest:enumerate
[SLQF] %p getSharedListeningTracklist failed (1/3) [invalid start item IDs] startItemIdentifiers=%{public}@
[SLQF] %p getSharedListeningTracklist failed (2/3) [invalid start item IDs] request=%{public}@
[SLQF] %p getSharedListeningTracklist failed (3/3) [invalid start item IDs] response=%{public}@
[SLQF] %p getSharedListeningTracklist [dropping unsupported IDs] unsupportedIDs=%{public}@
%{public}@: started enqueueing event with id: %{public}@
Event: %{public}@
%{public}@: Finished enqueueing event with id: %{public}@. error: %{public}@
%{public}@: Finished enqueueing event with id: %{public}@.
[AL] - MPCAudioAssetTypeSelector - Starting Audio type selection [from preferences] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - No enhanced audio available on this store front
[AL] - MPCAudioAssetTypeSelector - Audio type selection [from preferences]: %{public}@
[AL] - MPCAudioAssetTypeSelector - %{public}@: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting audio format selection [from preferences & route] - item:%{public}@
MPCExplicitContentAuthorizationManager %p - Music Video playback is not allowed for item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ status=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Could not find metadata dictionary in the payload. Will default to store platform response
[MPCModelStorePlaybackItemsRequest] Found metadata dictionary (%{public}@), but unexpected format
[MPCModelStorePlaybackItemsRequest] Siri asset info has payload type=%d.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
Siri asset info contains %lu assets.
Siri asset info resulting in preferred shuffled starting with identifier=%{public}@
Siri asset info expected to have results dictionary, found %{public}@ instead.
Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info relevant to HLS playback: item %ld - audioTraits: %{public}@ - assetURLs keys: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info - Updating response for item %ld with HLS info: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info %{public}@ HLS asset info
Failed to import payload - error=%{public}@.
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVS: Executing create database statement: %{public}@
EVS: Unable to create events table. statement: '%{public}@' error: %{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: invalidate: Removing database at url=%{public}@ error: %{public}@
EVS: invalidate: Removing database at url=%{public}@
EVS: addConsumer consumer=%{public}@:%p
EVS: removeConsumer %{public}@:%p
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: emitEventType - Dropping event. (EVS is invalidated) time=%{time_t}zd type=%{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@ jumpIdentifier=%{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVS: lastEventsWithCount - returning empty array. (EVS is invalidated)
EVS: Unable to retrieve contents of directory. url=%{private}@ error=%{public}@
EVS: Removing database package at url=%{public}@ error: %{public}@
EVS: Removing database package at url=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: cancelSubscription consumer=%{public}@:%p
EVS: flushEvents consumer=%{public}@:%p
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
consumer=%{public, signpost.telemetry:string1}s
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
count=%{public, signpost.telemetry:number1}ld
PlaybackEventStreamConsumerFlush
EVC: returning count of 0. (datebase invalidated)
EVC: unable to enumerate events. (datebase invalidated)
EVC: step error: %{public}@
EVC: returning nil. (datebase invalidated)
EVC: statement error %{public}@ : %{public}@
EVC: json decode error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - trustID=%p.
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p starting with userIdentity=%{public}@, subscriptionStatusResponse=%{public}@.
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: re-running personalization [previousResponse.isInvalidForPersonalization] previousResponse=%p userIdentity=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ requestedStoreIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ sectionedModelObjects=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: completing without using store metadata controller [no remaining IDs to request] unpersonalizedContentDescriptors=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: first batch complete without using store metadata controller [prioritized IDs initially loaded]
MPCModelStorePlaybackItemsRequestOperation %p initialResultHasItemsWithPlaybackAuthorizationToken=%{BOOL}u, useMediaAPILookup=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p starting to load container item metadata using Media API endpoint (shouldBatchResultsWithPlaceholderObjects=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionItemRequest=%p with totalItemCount=%d]
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemMetadataRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemMetadataRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for renewalRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemAuthTokenRenewalRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p all requests have finished]
MPCModelStorePlaybackItemsRequestOperation %p requesting store metadata for %ld items itemIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p got response=%p for SP request=%p with error=%{public}@ 
MPCModelStorePlaybackItemsRequestOperation %p got subscription status=%{public}@ for identity: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
[AL] - %{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
[AL] - %{public}@: Skipping redownload asset request [offline]
[AL] - %{public}@: Performing media redownload request...
[AL] - %{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Unable to extract valid load result from extracted media redownload asset response - Response:%{public}@ - Error:%{public}@
[AL] - %{public}@: Missing response item in media redownload request response
[AL] - %{public}@: Missing asset URL in media redownload request response
[AL] - %{public}@: Missing redownload parameters.
[AL] - %{public}@: Missing store request context.
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
setting stationPlaybackAuthorizationToken=%{public}@ for context=%{public}@
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from local identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - identical to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
[FPPC] engine:didChangeAccounts: removing account=%{public}@
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
fetched lease
already had lease
fppc:fetchMiniSINFs
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@
fppc:fetchMiniSINFs:account
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
hasMoreAssets=%{BOOL}u
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [subscription type is glide]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
account=%{public}@ error=%{public}@
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
[AP] - MPCProcessAudioTap %p - Desired refresh rate for process tap: %luHz - Actual refresh rate: %3.1fHz [%u samples @ %uHz] - FFT Info: dt=%3.1fms df=%3.1fHz
[AP] - MPCProcessAudioTap %p - Starting processing audio queue error: %{public}@
[AP] - MPCProcessAudioTap %p - Starting processing audio queue
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue error: %{public}@
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue
[AP] - MPCProcessAudioTap %p - Error creating new audio queue for processing: %{public}@
[AP] - MPCProcessAudioTap %p - ASBD for process tap: %{public}@
[AP] - MPCProcessAudioTap %p - Error adding processing tap to audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - Error allocating buffer for audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - Error Enqueuing buffer for audio queue: %{public}@
MPCProcessAudioTap %p - Audio tap - Error freeing AQ buffer: %{public}@
MPCProcessAudioTap %p - Audio tap - Error disposing of processing audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - mediaserverd died - clearing AQ
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue [mediaserverd death] error: %{public}@
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue [mediaserverd death]
[AP] - MPCProcessAudioTap %p - mediaserverd restarted - creating AQ
PSP: Requested playback state restoration for player: %{public}@
StateRestore-WaitingForAccounts
StateRestore-MRCheck
shouldRestore=%{BOOL}u
didRestore=%{BOOL}u
StateRestore
PSP: Finished playback state restoration for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state restoration for player: %{public}@ didRestore=%{BOOL}u
PSP: Clearing state restoration identifier for player: %{public}@ [state restoration failed]
PSP: Skipping playback state restoration for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state restoration for player: %{public}@
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
Starting playback preheating...
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
SELFLoggerSendMetrics
Finished sending SELF checkpoints and metadata with siriReferenceIdentifier=%{public}@ firstAudioFrameTimeStamp=%@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MRCPPC: Registering for endpoint topology changes with unresolved player path: %@, endpoint identifier: %@
MRCPPC: Received endpoint invalidation for unresolved player path: %@.
[Lease] - MPCLeaseManager: %p - prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
[Lease] - MPCLeaseManager: %p - prepareForPlayback: preparing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [no subscription lease session] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: renewing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished
[Lease] - MPCLeaseManager: %p - Can steal lease if needed
[Lease] - MPCLeaseManager: %p - State for lease playback prevention [evaluation] - item:%{public}@ - shouldPreventPlayback:%{BOOL}u - playbackState:%ld - isPlaying:%{BOOL}u
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [pending reasons %{public}@]
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [lease being acquired] - item:%{public}@
[Lease] - MPCLeaseManager: %p - Pausing [current item (%{public}@) requested playback prevention]
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engine:didPauseForLeaseEndWithError:] - item: %{public}@ - userInfo: %{public}@
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engineDidPauseForLeaseEnd:] - item: %{public}@
[AccountManager] - Dropped account refresh because too many (%{public}ld) attempts have been made
[AccountManager] - Clearing glide subscription data for %{public}@
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Updated accounts [silent]: %{public}@
[AccountManager] - Refreshing due to previous timeout
UpdateAccounts
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
[AccountManager] - will purge playback authorization tokens for %{public}@ as subscription status has changed (new status= %{public}@)
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForMetadataItems: Well-defined string script data corresponding to %{public}@ not found [returning nil] metadataItems=%{public}@
Error serializing JSONObject with scriptData. error=%{public}@ scriptData=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForScriptData: Well-formatted V1 scene script not found [returning nil] JSONObject=%{public}@
Cannot decode override user identity. Using active account.
[Lease] - MPCLeaseController: %p -  Requesting lease for %{public}@
[Lease] - MPCLeaseController: %p -  Relinquishing lease for %{public}@
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p -  Discarding returned item and requesting a new one [item cannot be reused] - Discarded item:%{public}@
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
%@ (%x): %@
%@_BEGIN (%x): %@
%@_END (%x): %.3fs %@
%@_END (%x) CANCELLED: %.3fs %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@ AVItemAtIndex: returning nil [no stationTracks] globalIndex=%ld
%{public}@
discovering UIDs: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
no application on target
removing devices from origin %{public}@
remove failed with error: %{public}@
force remove for output devices: %{public}@
result: %{public}@
completed error: %{public}@
completed
Send Command: %{public}@
[KAOS] <%p> sendCommandWithResult %@
Encoding device IDs: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
[KAOS] <%p> Completing with error %@, commandResult: %@
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
[KAOS] <%p> Sending command %@ to destination %@ endpoint %@
[KAOS] <%p> Command %@ completed with result: %@
[KAOS] <%p> Checking existing devices on target endpoint: %@ 
[KAOS] <%p> Creating hosted endpoint for local because we have unmatched existing devices: %@ 
[KAOS] <%p> Removing unmatched existing devices: %@ 
[KAOS] <%p> Removal completed with error %@ 
[KAOS] <%p> Found suitable endpoint %@ 
Expected to find devices for destination %@, but none found.
[KAOS] <%p> Create hosted endpoint for routes %@ 
Command completed
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Originating device destination: %{public}@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
[MPCAssistantGetVolume] Completing with error: %{public}@
MPCItemBookmarker %p - Previous loaded item bookmark data updated %{public}@ - PlaybackStoppedTime:%.2fs
MPCItemBookmarker %p - Current loaded item bookmark data updated %{public}@
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
Unbalanced call `_setupBookmarkingTimerForItem/`tearDownBookmarkingTimer` [Check the logs] - Item %{public}@
RQF %p: Updating current item: %{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
rqf:loadPlaybackContext
allowsRadioService=%d error=%{public}@
allowsRadioService=%d
rqf:loadPlaybackContext:allowsRadioService
RQF %p: loadPlaybackContext: context=%{public}@, Siri asset info:%@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
rqf:loadPlaybackContext:getTracks
reasonType=%d error=%{public}@
reasonType=%d
rqf:loadPlaybackContext:getHistory
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
%{public}@ itemForItem:inSection: returning nil [no playbackQueue] item=%{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
changes=%{public}@
rqf:reloadSection:diff
rqf:reloadSection:apply
rqf:reloadSection
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
[BackgroundTasks] %{public}@ Expired [%lu]
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
RQF %p: _defaultGetTracksRequestWithContext: failed to get userMonitor for dsid=%{private}@
RQF %p: _defaultGetTracksRequestWithContext: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: error: %{public}@
RQF %p: _detectSignOutForIdentityStore: clearing tracklist [nil active account]
[BackgroundTasks] %{public}@ End [%lu]
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
 error=%{public}@
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
rqf:_handlePersonalizationResponse
RQF %p: adding get tracks operation operationCount=%lld
RQF %p: personalization response is invalid
rqf:_removeAllTracks:diff
rqf:_removeAllTracks:apply
RQF %p: Removing %ld restricted tracks from section
rqf:_removeRestrictedTracks:diff
applying
rqf:_removeRestrictedTracks:apply
FirstAudioFrame event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
%@ event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
%@ event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
identifier: %{public}@
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
LoadSession
timeout
LoadSession-Finalize
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [InSharedListeningMode] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - skipping artwork [failed to get artwork] error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to encode with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@ error: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [out of disk space] deleted old archives attempting to save again
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: created archive identifier=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
MPCSharedListeningPlaybackIntentDataSource.m
Deallocated without calling live link completion
Build shared intent timeout
Live link connection failed
Canceling intent loading because live link already had content %@
Unexpected state transition %@ -> %@
Content type is not supported in live link
Missing required parameters (tracklist) [error == nil]
WaitingOnSourceAndLinkToSendQueue
SourceFailed
InitialQueueSending
InitialQueueFailed
BuildSucceeded
BuildTimedOut
Unknown/state=%ld
Loading
FailedToLoad
Loaded
Connecting
Failed
WaitingForFirstQueueUpdate
WaitingToSendQueue
mediaType
excludeFromShuffle
_MPCPlaybackEngineMediaFrameworkImplementation
^v17@?0{_MSVLogStateHints=B}8@?<^v@?@"NSDictionary">9
Q8@?0
com.apple.amp.mediaplaybackcore.prewarm_mf
Playback engine implementation no longer exists
Unable to find a start item in the playback context %@
Playback engine stack has not been setup yet. Set a playback queue first before calling %s.
-[_MPCPlaybackEngineMediaFoundationImplementation replaceCurrentItemWithPlaybackContext:identifier:completionHandler:]
Playback engine implementation no longer exist
InternalPauseWithFadeout_%@
InternalEndPlayback_%@
-[_MPCPlaybackEngineMediaFoundationImplementation playWithRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithFadeout:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseForLeasePreventionWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation togglePlaybackWithIdentifier:completion:]
Attemping to toggle playback with incompatible state - CurrentState:%@
-[_MPCPlaybackEngineMediaFoundationImplementation skipWithDirection:identifier:completion:]
next
previous
-[_MPCPlaybackEngineMediaFoundationImplementation beginScanningWithDirection:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation endScanningWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation setRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation jumpToTime:identifier:completion:]
_MPCPlaybackEngineMediaFoundationImplementation.m
_setupPlaybackStackWithPlaybackEngine failed to create a new MFPlaybackStackController
playbackState
currentItem
currentRate
currentTime
targetRate
MediaFoundationStack
engineID
Invalid parameter not satisfying: %@
AVMusicAppBehavior
Queue Controller Contents Changed
Error resolution paused
previous == nil || [(MPAVItem *)previous isKindOfClass:[MPAVItem class]]
current == nil || [(MPAVItem *)current isKindOfClass:[MPAVItem class]]
source == MFItemChangeSourceQueue
queueItem != nil
Waiting First Audio Frame
%0.9fs
Unspecified explanation
Play Queue Identifiers Changed
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
Playing Identifier Changed
Failed to get playing identifier
v24@?0@"NSString"8@"NSError"16
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
CoreMediaErrorDomain
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ [repeatIteration=%ld] %@
%@: Missing DSID in delegated identity properties - skipping playback
 not
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
audio
Missing subscription for playback
Missing playback authorization token for playback
CRABS
DisableOptimizeAccessForLinearMoviePlayback
match
purchaseHistory
MPCModelGenericAVItem.m
Asset download destination URL can't be nil
StorefrontID
isPlaceholder
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
host mismatch
path mismatch
v16@?0@"MPModelFileAsset"8
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
key server URL
key certificate URL
Missing key URLs: %@
Unexpected nil keyServerURL
Unexpected nil keyCertificateURL
com.apple.MediaPlayer.MPCModelGenericAVItem.streaming_playback.
wifi.
@"ICURLSession"8@?0
availableMediaCharacteristicsWithMediaSelectionOptions
q24@?0@"MPCPlayerAudioFormat"8@"MPCPlayerAudioFormat"16
v16@?0@"ICMusicSubscriptionLeaseSession"8
stream-provider-id
AssetLoadingBug
setupWithPlaybackInfo.isAssetLoaded==NO
setupWithPlaybackInfo._asset==nil
playEvent
album
ModelBug
album.traits=nil
playlist
playlist.traits=nil
@16@?0@"MPCPlayerAudioFormat"8
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlaybackCore/Engine/Implementation/Model/MPCModelGenericAVItem.m
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
tilt.stream-track
tilt.track
uploaded-content
purchase
subscription
synced
.cloud
%@.%@
info
com.apple.radio.ping.jingle
%@,%ldkbps,%ld
%@,%ldkhz,%ld
HLS [spatial]
HLS [lossless]
Tolerated
Expected
Forbidden
lossless
ExpiredLease
RevokedLease
UnauthorizedDevice
InvalidUser
Bluetooth
WiFi
Wired Ethernet
%c%c%c%c
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
containerIndex
itemIndex
v28@?0^v8@"NSString"16f24
com.apple.MediaPlaybackCore/logging
q24@?0@"MSVFrameworkDescription"8@"MSVFrameworkDescription"16
<unknown>
kMRMediaRemote
supported
unsupportedReasons
disabledReasons
options
unsupported: %@
disabled: %@
v24@?0@"NSString"8@"NSDictionary"16
q24@?0@"NSString"8@"NSString"16
Bag [%.3fs]
Lease [%.3fs]
SuzeLease [%.3fs]
MediaRedownload [%.3fs]
SubscriptionAssetLoad [%.3fs]
Waiting
Playing
FailSilently
StopPlayback
RetryLastAction
Unreachable
Likely Reachable
Reachable
Cellular
Bridged WiFi
Other
Device
Account
Queue
File
Home Sharing
Asset Info Cache
Server Object Database (SINF/HLS)
Server Object Database (MiniSINF)
Server
Unsupported
Unexpected implementation class found: %@
## PlaybackStack
MPCModelStorePlaybackItemsRequestAccumulatorItemIdentifierSetKey
MPCModelStorePlaybackItemsRequestAccumulatorCollectionPlaybackAuthorizationTokenKey
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"MPModelGenericObject"8Q16^B24
MPCModelStorePlaybackItemsRequestAccumulator.m
Unknown playlist entry: %@
@32@?0@8q16^B24
Found unplayable object in SOD: %@
@32@?0@8@"NSIndexPath"16^B24
Attempting to populate items for non model object: %@
Glide
v24@?0Q8^B16
Unknown item to request metadata
section playbackAuthorizationToken cannot be nil
Unknown request type = %d
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
com.apple.MediaPlaybackCore/Siri
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
contentType
Duration
refId
endTimeReciever
 playerPath=%@
%@ %@
delegateInfoID
storeSubscriptionAdamID
purchaseHistoryID
cloudUniversalLibraryID
@"MPMusicPlayerControllerNowPlaying"16@?0@"NSString"8
No item provided to setNowPlayingItem
Unable to play item %@
PlayItemInQueue is currently not enabled or the playback engine is not ready
%@:%@ did not provide image data.
%@:%@ does not support artwork.
Queue descriptor was not provided.
Queue was interrupted by another queue
Preparing queue timed out
iapd
Failed to prepare to play
SetPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for prepend
InsertIntoPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for append
_MPCMusicPlayerControllerServer.m
performQueueModifications is not supported for the system music application
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
Failed to apply queue modifications
Prepare queue failed with unexpected start item
DelayMusicServerConnection
MPCMusicPlayerControllerServer
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
Playback response has no valid file asset: %@
allows caching: %@
HLS: %@
cloud streaming: %@
online keys required: %@
path extension: %@
audio asset type: %@
downloaded: %@
Overview
Purchase bundle dictionary
assetURL
alt. HLS playlist URL
protected content support storage URL
URLs
alt. HLS key certificate URL
alt. HLS key server URL
key server protocol type
streaming key adam ID
Unspecified
Progressive
HLS [stereo]
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
@"MPArtworkCatalog"16@?0d8
app.music.media-clip
tracks
AlwaysUse64kbpsQuality
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore.playbackSession-v4.opack
com.apple.mobileipod
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
_MPCSkipNextStateRestoration
Cannot leave shared session [not in shared session] queueController=%@
LeaveSharedSession is not supported in the legacy engine
Failed to end playback
Failed to load previous session
Unable to restore state [no state restoration session ID]
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
_MPCMediaRemotePublisher.m
Playback engine implementation is nil
v16@?0@?<v@?B@"NSError">8
Failed to build fallback playback context from intent %@
Failed to load fallback playback context %@
Failing due to no content in the player and no fallback intent.
v16@?0@"MPRemoteCommandCenter"8
live streaming content
-[_MPCMediaRemotePublisher _updateSupportedCommands]
Must provide reason for unsupported command
item does not support rate changes
hidden
AV does not support FF
AV does not support RW
item prefers seek over skip
uninitialized queueController
loading item
queue does not allow modification
active account does not allow subscription playback
queue does not allow modifications
queue does not support any insertion positions
QHO disabled by defaults
engine not configured for QHO
no supported session types
no preloaded sessions
Item not addable
-[_MPCMediaRemotePublisher _updateSupportedCommands]_block_invoke
item does not have media item ready
MediaItemLoading
_updateSupportedCommands
item does not support ratings
not in shared listening mode
already in shared listening mode
item doesn't have subscription adam id
com.apple.Music.performance
com.apple.Music.queue
%@&currentItem=%@
@16@?0@"NSDictionary"8
commandType
com.public.text
No queueController
com.apple.Music.events
 (%@)
Handling Command %@
kMRMediaRemoteOptionSenderID
mediaserverd not available to perform command
Failed to activate audio session
Failed to playWithRate:1.0
v20@?0B8@"MPRemoteCommandStatus"12
Failed to pauseWithFadeout:%g
Cannot pause because there is no current item.
Cannot toggle play/pause because audio session activation failed.
Failed to toggle playback
Current item forbids skipping backwards: %@ [%@]
Current item forbids skipping forwards: %@ [%@]
Cannot play item in queue due to item policy: %@
Cannot find item by trackID: %lld
newPlaybackImplementation must implement skipWithDirectionShouldJumpToItemStart:
Failed jumpToTime:%lf
endOfQueuePause_%@
nextTrack
Failed to begin rewinding
Failed to begin fast-forwarding
Attempting to stop scanning without scanning
Failed to end scanning
Failed to jumpToTime:%g
Cannot jumpToTime without a current item.
Cannot modify queue with playback authorization token protected content
SharedQueue feature requires a subscription
Failed to build playback context from queue: %@
Cannot modify queue due to iAP lockout
Failed to insert playback context: %@
Insert operation indicated specific insertion position type, but no content item ID provided.
Failed to move item: %@
Unsupported repeatType %ld
Failed to remove item: %@
Cannot find item to remove: %@
Account is not authenticated: %@
Account failed to prepareToPlay: %@
Failed to verify play queue: %@
Cannot override mutated queue without override.
Failed to load playback context: %@
Failed to reload playback context: %@
siri
Failed to build radio context from playback intent: %@
Failed to build intent into playbackContext: %@
Failed to add radio station to queue: %@
Failed to get radio intent from song: %@
Cannot create station with seed item without current item
Failed to finalize queue controller
No current item or session load failure: %@
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
Failed to decode queue data
Unsupported sessionType %@
Command did not contain queue data.
session does not exist for identifier: %@
ignoring unimplemented non-immediate priority: %ld
Cannot find session with identifier: %@
Unable to find item to add to library: trackID=%lld currentItem=%@
Failed to setRate:%g
Failed to share queue [no current item]
Unable to build shared queue tracklist from current queue.
com.apple.music.live-link-identity-json
Failed to build shared queue intent from current queue.
?id=%@&key=%@
com.apple.music.shared-session-url-components
v24@?0@"MPCPlaybackIntent"8@"MPCPlayerCommandStatus"16
Unsupported command event: %@
requestImageWithCompletionHandler: called with nil image.
Session is empty
Transportable representations only available for queue controller.
Session contains non-transportable content
cloudLibrary
storeFront
voiceOnly
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
v16@?0@"MPModelPlaybackPosition"8
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
com.apple.MediaPlaybackCore
NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Engagement
Engagement_Oversize
Middleware
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Preferences
Reporting
QueueController
QueueController_Oversize
SDKPlayback
SDKPlayback_Oversize
Session
Delegation
Video
SharedSession
Analytics
Analytics_Oversize
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
Sharedlistening playback context cannot be used for remote set queue.
No player found for %@
Unexpected queueController class found: %@
# Player: %@
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
high-res lossless
spatial
atmos
surround
lossy stereo
deviceGUID
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
 source=%@
MPCPlaybackIntent.m
completion
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
%@ did not produce representative model object or error
modelObject
No matching properties for reprentative object: %@
v24@?0@"MPModelGenericObject"8@"NSError"16
Metadata Object did not produce nowPlayingInfo: metadataObject=%@ contentItem=%@
sessionID
supplemental
<ARCHIVE LOADER>
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
v16@?0@"<MPMutablePlaybackArchive>"8
now_playing
Cannot handle unknown generic object metadata.
Expected a flattened generic object.
com.apple.MediaPlayer
SEASON_DISPLAY_FORMAT_%@
Cannot handle unknown playlist entry when capturing metadata.
skey
<%@ %p: sessionID=%@>
<%@: %p %@>
missing file
missing asset
missing hls keys
cached assets not allowed
cached assets not allowed for playback
downloaded
cached
HLS format
CRABS format
%@ quality
%@ audio
[url: %@]
[HLSContentPolicy: %@]
File: %@
Expectation: %@
Upgrade cached asset on play
Upgrade downloaded asset on play
%@ - %@ -> %@
Downloaded
Cached
Unknown
High
radioStationURLString
seedContentReference
nowPlayingContentReference
playActivityFeatureName
playActivityQueueGroupingID
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
PlaybackEngine.implementation.currentItem.type didChange
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
isExecuting
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
isFinished
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
MPCAssetLoadingOperation - Asset loading failed [AVPlayerItem status failed] - Item:%@
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssetLoader.m
MPCAssetLoader must have a configurator set to work properly
Attempting to load an item which has no loadable asset: %@
v32@?0@"MPAVItem"8q16@"NSError"24
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
%lli
Store Front Local Equivalency Metadata Response Finished
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
v16@?0@"MPCPlayerCommandStatus"8
<%@: %p commands=(%@)>
B16@?0@"MPCPlayerCommandStatus"8
No commands provided.
MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
@16@?0@"MPCMediaRemoteCommandOperation"8
<%@: %p command=%@>
Command was cancelled before it was performed.
Did not attempt command because dependent command failed.
Either Controller or PlayerPath is required to perform a change request.
Queue is user curated and requires override
Feature requires active subscription
Unsupported content type
Failed to perform command %@
MPCPlayerCommandRequest player path resolution completion not called
PlayerPath did not resolve route to origin: %@
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.music.playbackqueue.sharedlistening
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
tracklistRange
playerPath
playingItemProperties
v16@?0@"ICLiveLinkIdentity<ICMutableLiveLinkIdentity>"8
B16@?0@"NSURLQueryItem"8
@"MPRemoteCommandStatus"16@?0@"MPRemoteCommandStatus"8
state
tracklist
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
ContinueListening
CL_MaxQueueReferences
CL_PrefetchThreshold
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
StationPlaybackAuthorizationToken
playbackRequestEnvironment
continueListening
nowPlaying
seed
stationID
stationName
stationURL
%@=%@,
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSString"16^B24
app.music
com.apple.music.classical
app.music.classical
app.musickit
YYYY-MM-dd HH:mm:ss.SSSXX
com.apple.MediaPlaybackCore/RTC
com.apple.MediaPlayer.MPCRTCEventConsumer
app.music.unknown
v16@?0@"RTCReporting"8
migrationPlaybackSession
nominal
error
NetworkInterfaceChange
SecureKeyLoad
SessionStart
SessionSummary
ItemAssetLoad
ItemSummary
UnexpectedCategory:%d
%@ timed out
%@ deallocated
MPCAnalyticsSignpost.m
Subclass %@ must implement -%@ defined in %@.
MPCAnalyticsSignpost
MPCScriptedLooperErrorDomain
status
metadata
duration
playable
MPCScriptedLooper.m
Scene collection frame rate cannot be 0.
com.apple.Music
playbackRequestEnvironment=%@
 storeIDs=[ %@ ]
 tokens=[ %@ ]
 sectionedModelObjects=[ <%ld sections>
  %2ld <%ld items> %@: [
  %2ld,%2ld %@
    ... (%ld remaining items)
  ... (%ld remaining sections)
 trustProvider=[ %p ]
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
MPCModelStorePlaybackItemsRequestCodingKeyStoreIDsToPlaybackTokens
_MPCModelStorePlaybackItemsRequestCodingKeyTrustProvider
MPCModelStorePlaybackItemsRequest.m
Cannot encode MPCModelStorePlaybackItemsRequest that contains a SharedListeningQueue
<%@:%p>
playbackEngine
MPC_PLAY_ONLY_FOR_ME
<%@: %p title="%@" type=%@ commandRequest=%@>
DialogAction:%@
<%@: %p title="%@" message="%@" actions=%@>
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
com.apple.MediaPlaybackCore/PlayPerf
Command:%@:%@
Command:%@:Timeout
AssetLoad
QueueLoad
SessionMigrate
SessionRestore
SharedSessionSynchronization
SessionActivation
ErrorResolution
ItemPause:%@:%@
ItemRateChange:%@:%@
%@:%@
com.apple.amp.mediaplayer.playperf.FirstItem
com.apple.amp.mediaplayer.playperf.NextItem
com.apple.amp.mediaplayer.playperf.PlayError
assetCacheAge
assetLoadWaitTime
file
http
assetLocation
assetSource
assetType
avTime
errorResolutionApplied
errorSignature
featureName
firstAudioFrameWaitTime
formatInfoBitDepth
formatInfoBitrate
formatInfoChannelLayout
formatInfoCodec
formatInfoMultiChannel
formatInfoSampleRate
formatInfoSpartialized
formatInfoTier
hasGetTracksWaitTime
hasLeaseWaitTime
hasLookupWaitTime
hasMediaRedownloadWaitTime
hasOfflinePlaybackKeys
hasOnlinePlaybackKeys
hasSubscriptionAssetLoadWaitTime
hasSuzeLeaseWaitTime
hlsMetadataWaitTime
isActiveAccount
isAutoPlayEnabled
isDelegatedPlayback
isFirstItem
isFirstPlay
isRemoteSetQueue
isReplacingPlayback
isSharePlay
lookupWaitTime
mediaPlayerTime
musicWaitTime
networkType
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfoType
sessionActivationTime
setQueueCommandSendTime
subscriptionType
totalTime
gapTime
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
OutOfMemory
SessionNotRunning
DeviceAlreadyUsedByAnotherSession
NoDataCaptured
SessionConfigurationChanged
DiskFull
DeviceWasDisconnected
MediaChanged
MaximumDurationReached
MaximumFileSizeReached
MediaDiscontinuity
MaximumNumberOfSamplesForFileFormatReached
DeviceNotConnected
DeviceInUseByAnotherApplication
DeviceLockedForConfigurationByAnotherProcess
SessionWasInterrupted
MediaServicesWereReset
ExportFailed
DecodeFailed
InvalidSourceMedia
FileAlreadyExists
CompositionTrackSegmentsNotContiguous
InvalidCompositionTrackSegmentDuration
InvalidCompositionTrackSegmentSourceStartTime
InvalidCompositionTrackSegmentSourceDuration
FileFormatNotRecognized
FileFailedToParse
MaximumStillImageCaptureRequestsExceeded
ContentIsProtected
NoImageAtTime
DecoderNotFound
EncoderNotFound
ContentIsNotAuthorized
ApplicationIsNotAuthorized
DeviceIsNotAvailableInBackground
OperationNotSupportedForAsset
DecoderTemporarilyUnavailable
EncoderTemporarilyUnavailable
InvalidVideoComposition
ReferenceForbiddenByReferencePolicy
InvalidOutputURLPathExtension
ScreenCaptureFailed
DisplayWasDisabled
TorchLevelUnavailable
OperationInterrupted
IncompatibleAsset
FailedToLoadMediaData
ServerIncorrectlyConfigured
ApplicationIsNotAuthorizedToUseDevice
FailedToParse
FileTypeDoesNotSupportSampleReferences
UndecodableMediaData
AirPlayControllerRequiresInternet
AirPlayReceiverRequiresInternet
VideoCompositorFailed
RecordingAlreadyInProgress
CreateContentKeyRequestFailed
UnsupportedOutputSettings
OperationNotAllowed
ContentIsUnavailable
FormatUnsupported
MalformedDepth
ContentNotUpdated
NoLongerPlayable
NoCompatibleAlternatesForExternalDisplay
NoSourceTrack
ExternalPlaybackNotSupportedForAsset
OperationNotSupportedForPreset
SessionHardwareCostOverage
UnsupportedDeviceActiveFormat
IncorrectlyConfigured
SegmentStartedWithNonSyncSample
RosettaNotInstalled
OperationCancelled
ContentKeyRequestCancelled
InvalidSampleCursor
FailedToLoadSampleData
AirPlayReceiverTemporarilyUnavailable
UnknownAVError/code=%lld
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_TITLE
MediaPlaybackCore
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_ACTION
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
B16@?0@"NSError"8
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Informational: Command required stopping playback on a primary device.
Informational: Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
Informational: Output context modification requested no topology change
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
account-begin
account-rectification
account-update
application-termination
application-foreground
application-background
audio-route-changed
media-server-died
media-server-reset
time-control-status-changed
container-begin
container-end
device-changed
error-resolution
interrupt-begin
interrupt-end
audio-asset-type-selection
audio-format-selection
audio-format-changed
asset-load-begin
asset-load-end
asset-load-info
item-key-request-begin
item-key-request-end
item-begin
item-update
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-configuration-begin
item-configuration-end
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-rate-changed
item-ready-to-play
item-resume
item-timed-metadata-ping
item-transition-created
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-timeout
remote-control-end
remote-control-commands-changed
session-activation-begin
session-activation-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
session-reset
shared-session-begin
shared-session-participants-changed
shared-session-synchronization-begin
shared-session-synchronization-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
audio-route
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
queue-section-id
event-time-offset
error-for-resolution
resolution-type
interrupt-name
interrupt-should-resume
asset-load-error
asset-skd
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
item-jump-identifier
item-audio-asset-type-selection-metadata
item-audio-format-selection-metadata
item-audio-format-metadata
queue-item-id
radio-track-info
item-rate-change-participant-id
item-rate-change-position
item-rate-change-reason
item-rate-change-source
item-rate
item-rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
transition-start-item-id
transition-end-item-id
transition-type
transition-parameters
playback-behavior-metadata
network-constrained
network-expensive
network-high-quality
network-reachability
network-type
network-signal-strength
network-signal-info
queue-load-error
queue-load-networking-wait-time
private-listening-source
queue-reporting-metadata
queue-rtc-hierarchy-token
queue-rtc-service-id
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-commands
remote-control-internal-status
remote-control-type
session-activation-error
device-metadata
session-id
session-migration-error
session-restoration-error
session-rtc-hierarchy-token
time-control-status
time-control-status-reason
queue-account-id
queue-description
queue-delegated-account-id
queue-delegated-account-metadata
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
application-source-version
application-uuid
device-guid
internal-carry
media-frameworks
user-agent
queue-grouping-id
feature-name
reco-data
siri-ref-id
siri-wha-metrics
playback-context-class-name
item-duration
item-has-video
item-initial-position
item-start-boundary
item-end-boundary
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
item-asset-cache-age
item-asset-source
item-asset-location
item-asset-type
item-asset-endpoint-type
item-asset-has-offline-keys
item-asset-has-online-keys
item-asset-is-delegated-playback
item-asset-is-subscription-content
item-asset-bag-wait-time
item-asset-lease-wait-time
item-asset-redownload-wait-time
item-asset-subscription-load-wait-time
item-asset-suze-lease-wait-time
audio-asset-type-selection-type
audio-asset-type-selection-explanation
audio-asset-type-selection-justification
audio-format-selection-format
audio-format-selection-explanation
audio-format-selection-justification
active-format
active-format-justification
alternate-formats
target-format
preferred-tiers
route
repeat-type
shuffle-type
autoplay-mode
shared-session-id
local-user-identifier
participants
originating-participant
shared-sync-error
item-configured-eq
item-configured-sc-vol-normalization
item-configured-loudness
hls-metadata-wait-time
MPCPlaybackEngineEventMonotonicTimeWithHostTime
time.machAbsoluteTime > machAbsoluteTime
MPCPlaybackEngineEvent.m
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
com.apple.MediaPlaybackCore/ABC
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
command:%@
%.3f
Performance
CommandTimeout
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
com.apple.hls.audioAssetMetadata
_skippedMetadata
controller
invalidationObservers
MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
Could not find content item at indexPath: %@ queueContentItems: %p queueContentItems.totalItemCount: %ld
@16@?0@"MPNowPlayingInfoAudioFormat"8
MPCError
UnableToPerformRequest
UnsupportedCommand
MissingBag
UnknownCustomQueueIdentifier
MissingTracklistData
MissingModelRequest
DelegatedAccountCreationFailure
MissingCreationPropertiesData
InvalidSuzeLeaseSessionToken
CellularRestricted
NetworkUnavailable
ExceededBagFileSizeLimit
FailedToDecodePlaylistManagerArchive
RequestTimeout
InvalidResponse
InvalidDelegatedIdentity
SubscriptionRequired
MissingSubscriptionAdamID
MissingLeaseSession
MissingLocalFilePath
AssetQualityTooLow
InvalidCachedAsset
InvalidAssetURL
AssetUnavailable
MissingRedownloadParameters
MissingStoreRequestContext
SubscriptionRequiredForSharedQueue
Cancelled
MissingArtwork
SubscriptionLeaseTaken
ExplicitContentRequiresAgeVerification
ExplicitContentIsNotAllowed
ExplicitContentAgeVerificationFailed
ExplicitContentAgeGatingFailed
DroppedCompletion
SubscriptionAssetResponseMissingItem
FailedToResolveStartItem
NoNetworkConnection
UserIdentityNotSupported
UnsupportedPlaybackContext
UnrestorableArchive
UninitializedPlaybackStack
EmptyModelResponse
FailedToQueueItems
MissingPlaybackAuthorizationToken
RadioServiceNotAllowed
HLSAssetMissingKeyURLs
UnknownCode/%lld
MPCSharedListeningError
ConnectionFailure
ContentUnavailable
ContentFailedToResolve
ContentFailedToAdd
MPCPlaybackSessionManagerError
FailedToSaveBeforeFirstUnlock
InvalidMetadataForEncoding
UnsupportedMetadataForEncoding
SessionFailedToDecode
SessionDoesNotExist
LoadSessionTimeout
MPCPlayerRequestError
UnableToSendCommand
CommandFailed
FailedToLoadMetadata
FailedToLoadArtwork
FailedToLoadSupportedCommands
FailedToResolve
FailedToPlaybackState
MPCModelRadioQueueFeederError
GetTracksFailed
AccountSignOut
MPCPlayerEnqueueError
HasUserCuratedQueue
ContentNotSupportedForSharePlay
CannotModifyQueueWithItemWithPlaybackToken
MPCPlaybackEngineInternalError
NoContentToPlay
NoCurrentItem
CannotFindReferencedItem
FeatureDisabled
CommandInvalid
CommandRequiresOverride
AccountMissing
AccountMissingSubscription
AccountMissingAuthentication
AccountNotPrepared
MediaServicesUnavailable
AudioSessionActivationFailed
FailedToPlayRate
FailedToPauseRate
FailedToToggleRate
FailedToChangeRate
FailedToJumpToTime
FailedToBeginScanning
FailedToStopScanning
FailedToEndPlayback
CannotStopScanningIfNotScanning
CannotSkipUnskippableItem
FailedToPlaySharedListeningItem
SharedListeningSessionDisconnected
FailedToBuildPlaybackContext
FailedToLoadPlaybackContext
FailedToMoveItem
FailedToRemoveItem
FailedToLoadSession
FailedToDecodeSession
FailedToFinalizeSession
SessionRestoredUnexpectedCurrentItem
Unrecoverable AirPlay failure [rental requires download]
SetQueue failed to load any assets
Shared listening playback failure
v24@?0q8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
<%@: %p followUp>
Failed to send subscription playback request (lease)
-[MPCModelGenericAVItemSubscriptionAssetLoadOperation execute]_block_invoke
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
An error is expected for the failure to create a loadResult
Failed to send subscription playback request (accountless stream)
Invalid operation type: %li
assets.count > 0
flavor
fileExtension
sinfs
sinf2
assets.count > 0 || hlsAsset != nil
Response did not contain asset for item identifiers: %@
HLS [hr lossless]
LWHQ
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
Unable to obtain metadata for shuffled context: %@
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
B24@?0q8q16
registryWantsChanges
sectionWantsChanges
ModelQueueFeederDiffing
existingCollection
newCollection
Unable to apply changes [missing identifier set in new collection] index=%ld/%ld changeDetails=%@
newCollection failed to produce identifierSet for indexPath: %@
indexPathForItemWithIdentifiersIntersectingSet returned nil
startIndex out of bounds (startIndex/registry.count = %ld/%ld)
No valid items found [empty model response] for %@
Failed to resolve startItemIdentifiers [%@]: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Invalid request item class: %@ for %@
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
SiriAssetInfoBug
itemsNotInQueue
startItemIdentifiers
sectionedModelObjects
v24@?0@"MPIdentifierSet"8@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"16
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
v32@?0@"MPModelObject"8q16^B24
Could not discern required properties for %@
section
v32@?0@"ICRadioStationTrack"8q16^B24
_MPCQueueControllerDataSourceState.m
Failed to instantiate queueFeederClass: %@
SHARED_LISTENING
spcb
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
No active context for datasoure state for section: %@
Cannot encode MPCSharedListeningPlaybackContext
showInternalSections
UpdatedPlaybackContext is not compatible: reason = %@
com.apple.MediaPlaybackCore/PAF
metrics
treatmentProfiles.bundleIdAllowList.treatments
fieldActions.bundle-id.allowedValues
B16@?0@8
Internal
ENGINE_V2
SEED
CARRY
9000
9100
-Debug
9999.99.99
ROOTS
DEBUG
play-activity-feed-post-all-play-starts
PAFDurationBug
Playback greater than 12 hours
PAF Event
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
radioStationID
playbackState [nullcontroller - init]
supportedCommands [nullcontroller - init]
queueIdentifier [nullcontroller - init]
playingItemIdentifier [nullcontroller - init]
playQueueIdentifiers [nullcontroller - init]
contentItemForIdentifier [nullcontroller - init]
contentItemArtworkForIdentifier [nullcontroller - init]
ContextID
ShouldOverrideManuallyCuratedQueue
ShouldImmediatelyStartPlayback
SiriRecommendationID
SiriAssetInfo
FeatureName
QueueGroupingID
SiriWHAMetricsInfo
UserIdentity
HomeKitUserIdentifier
%@ query=%@
%@ station=%@
%@ collection=%@ identifiers=%@
%@ seed=%@
%@ identifier=%@
MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 deviceUID=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
Missing external device for endpoint %@.
Could not discover endpoint for device UID (%@).
Could not get active origin.
v20@?0C8^v12
MPCPlayerPath
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
MPCVideoViewControllerMediaFoundationImplementation
com.apple.mediaplaybackcore.videodebug
v12@?0i8
<%@: %p internalViewController=%@>
internalController.showsPlaybackControls
internalController.player.currentItem.presentationSize
internalController.videoGravity
internalController.videoBounds
internalController.isReadyForDisplay
internalController.isPictureInPictureActive
internalController.allowsPictureInPicturePlayback
_obj
videoOutputDelegate
video
isReadyForDisplay
presentationSize
videoBounds
view
internalViewController.view
parentViewController.view.recursiveDescription
recursiveDescription
view.superview
view.superview.recursiveDescription
viewController
playbackEngine.implementation.playerViewController
internalViewController
parentViewController
internalController
playerViewController
videoOutput
Updating Accounts
com.apple.MediaPlaybackCore/environment
Updating NetworkReachability
Updating NetworkType
Updating Device
ReleaseType
CFBundleVersion
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
<MPCFutureInvalidationToken %p %@>
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 disconnected=YES
 error=%@
Personalization response did invalidate
v16@?0@"NSNotification"8
tshlp
MPCPlayerItemConfigurator.m
Attempting to configure a non-loaded player item.
Default device capability
Forced stereo
queueItem.isAssetLoaded
 Error retrieving audio formats
Error
No audio formats in HLS session data [Attempting setup with preferred type]
accountID
uuid
deviceName
timeZoneName
privateListeningEnabled
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
usesExternalPlaybackWhileExternalScreenIsActive
isExternalPlaybackAllowed
usesAudioOnlyMode
Audio
Undefined
Streaming
None
AirPlay
TVOut
Picked route has no restrictions
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play non-cloud item
MPCPlayActivityUtilitiesPlayStartNotification
MPCPlayActivityUtilitiesPlayEndNotification
MPCPlayActivityUtilitiesPlayEndEventStartTimeKey
MPCPlayActivityUtilitiesPlayEndEventEndTimeKey
artistName
representativeItemCloudID
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
<MPCSharedListeningEvent: %p unknown/invalid>
<MPCSharedListeningEvent: %p participant=%@ sessionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ playbackEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ queueEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ reactionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ customEvent=%@>
<MPCSharedListeningEvent: %p unknown/eventType=%ld>
<MPCSharedListeningEventParticipant: %p id=%@ externalID=%@>
<MPCSharedListeningCustomEvent: %p localizedMessage="%@">
<MPCSharedListeningPlaybackEvent: %p kind=%@>
<MPCSharedListeningQueueEvent: %p unknown/invalid>
<MPCSharedListeningQueueEvent: %p addedContent=%@>
<MPCSharedListeningQueueEvent: %p playedNowContent=%@>
<MPCSharedListeningQueueEvent: %p removedContent=%@>
<MPCSharedListeningQueueEvent: %p reorderedContent=%@>
<MPCSharedListeningQueueEvent: %p replacedContent=%@>
<MPCSharedListeningQueueEvent: %p contentUpdatedMessage=%@>
<MPCSharedListeningQueueEvent: %p playbackMode=%@>
<MPCSharedListeningQueueEvent: %p unknown/kind=%ld>
<MPCSharedListeningQueueEventContentAdded: %p container=%@ items=%@>
<MPCSharedListeningQueueEventContentAdded: %p items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p container=%@ startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentRemoved: %p item=%@>
<MPCSharedListeningQueueEventContentReordered: %p item=%@>
<MPCSharedListeningQueueEventContentReplaced: %p startItem=%@>
<MPCSharedListeningQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
B8@?0
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/invalid>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p shuffleType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p repeatType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<MPCSharedListeningReactionEvent: %p reaction="%@" reactionID=%@ item=%@>
<MPCSharedListeningSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.assistant.SendCommand
v24@?0@"MRCommandResult"8@"NSError"16
v32@?0@"MRCommandResult"8@"NSError"16Q24
com.apple.mediaplayer.assistant.grouping
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
B16@?0@"NSNumber"8
Cannot append to unknown hasher algorithm
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
queue-source.library
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
<missing queue identifier>
uniqueID
lastChangeDirection
<NONE>
v32@?0@"MPCPlayerResponseSection"8q16^B24
MPCPlayerResponseTracklist.m
Count mismatch: sections=%@ sectionRangeMap=%@
Missing section range for section: %@
Non-contiguous range detected: location=%ld expectedLocation=%ld
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Provided display index path is out of bounds for this collection: %@ (section count %@)
Provided display index path is out of bounds for this collection: %@ (item count %@)
structureIndexPath did not produce a valid global index: %@
Could not find a displayIndexPath for structuredIndexPath: %@
Potluck
presumptuous command
Invalid section collection (2).
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
_PLACEHOLDER_AUTOPLAY_
queueStructures
dataSources
MPCQueueController
## Queue <%p> [%@]
## AutoPlay Queue
### State
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
apil
dncia
apep
apit
MPCQueueController.m
Attempt to encode QueueController without _dataSources
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
AutoPlayPlaceholderArtworkVisualIdenticality
Cannot insert after unknown item: %@
Cannot insert at Last position in AutoPlay.
no item
in shared listening mode
live streaming item
tail placeholder
end of shared listening
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state ready]
ContentItemID was nil [tail placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state loading]
ContentItemID was nil [loading placeholder]
Missing data sources for sectionIDs: %@
contentItemID (%@) not found
Invalid shared listening state [too many datasources]
Invalid shared listening state [dataSource must conform to MPCQueueControllerCommandInterposing]
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Unexpected entry type when reverse enumerating for before item: %d
User default should be resolved before setting on queue controller.
queue=%@&dataSources=%@
Requested removing content item that is not in the queue.
in autoplay
datasource %@ does not support shuffle
datasource %@ does not support repeat (infinite tracklist)
datasource %@ does not support repeat
AutoPlay unavailable in this SharePlay session
unknown state
unsupported content
waiting for items
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
Unexpected inSharedListeningMode=YES in itemToFollowItem: [deferredNext tail section - still loading - shuffled]
v16@?0B8B12
Unexpected inSharedListeningMode=YES in itemToFollowItem: [enumerating to tail section - still loading - shuffled]
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unknown asset failure reason
EndOfQueue-%@
 %@=%@
emitEventsForParticipants can only be called inSharedListeningMode
emitEventsForAddedSharedListeningContainerInfo can only be called inSharedListeningMode
InterposingHost-%@
LiveLink unexpectedly disconnected
Unexpected sharedCurrentItemChange not in shared listening
jumpToItem:inSection: failed [content item not in SIL] contentItemID=%@
_addPlaybackContext unsupported insertion position for CommandInterposing data source: %ld
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Cannot insert after unknown item (in identifier list): %@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Should not modify AutoPlay identifier list while in shared listening mode.
Cannot insert after unknown item (in autoplay identifier list): %@
The autoplay identifierList changed before the data source finished loading.
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Unexpected inSharedListeningMode=YES in contentItemIDWithOffset: [returning tail placeholder with SIL ID]
v32@?0q8@"NSString"16@"_MPCQueueControllerDataSourceState"24
Cannot get a shared queue tracklist from an existing shared queue.
Current item was missing a media identifier while building shared queue tracklist: currentItem=%@ identifiers=%@
Current item was found multiple times while building shared queue tracklist.
Failed to find the current item in the shared queue tracklist.
AutoPlayPlaceholder
Unexpected state: missing dataSourceState for section: %@ dataSources: %@
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_currentItem
_autoPlayState
_autoPlayEndPosition
_inSharedListeningMode
_identifierList
_autoPlayIdentifierList
We only want QC's concept of autoplay state when we're NOT in shared listening
Unexpected state transition from: %@ to: %@
Failed to create AutoPlay playbackContext: %@
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
Paused
Stopped
Interrupted
Restore
Carrier
Beta
ExplicitRestrictionChangedToTrue
ExplicitRestrictionChangedToFalse
MPCSharedListeningQueueFeeder.m
Unexpected shared listening request: %@
containerIdentifier
B16@?0@"ICSharedListeningContainer"8
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
startingItemIndexPath section out of bounds (%ld/%ld)
startingItemIndexPath item out of bounds (%ld/%ld)
addPlaybackContext:afterItem:
Pending action expired [startItem not found in IDRegistry] startItemIdentifier=%@
Pending action expired [startItemIdentifier not found in live link queue] startItemIdentifier=%@
[SLQF] addPlaybackContext unsupported insertion position: %ld
v32@?0@"MSVSectionedCollection"8@"NSIndexPath"16@"NSError"24
Event-%@
@16@?0@"MPQueueFeederIdentifierRegistry"8
ChangeCurrentItem
Pending action flushed but item was still not found: %@
Unexpected request type: %@
v16@?0@"MPModelRequest"8
B32@?0@"_MPCSLQFPendingAction"8Q16^B24
kind
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
live_link
v24@?0@"ICSharedListeningItem"8@"NSError"16
<%@: %p label="%@" itemID=%@ expiration=%@>
LiveLinkConnecting
LiveLinkFailed
LiveLinkWaitingForFirstQueue
CallingSuper
SuperCompleted
SuperFailed
LiveLinkRetryingFromConnecting
LiveLinkRetryingFromWaitingForFirstQueue
LiveLinkRetryingFromCallingSuper
LiveLinkRetryingFromSuperCompleted
LiveLinkRetryingFromActive
LiveLinkActive
LiveLinkDisconnected
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
v16@?0@"NSArray"8
@16@?0@"MRAVOutputDevice"8
B16@?0@"MRAVOutputDevice"8
MPCAssistantEndpointContext
Home
cce7c4ecef404121ae8971
contentItemID
revision
metadataObject
indexPath
explicitBadge
localizedDurationString
languageOptionGroups
REMOTE_CONTROL_LIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
@16@?0@"MPCReportingPlaybackActivityEvent"8
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
albumArtistName
composerName
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
title
albumTrackCount
trackNumber
year
Unsupported content (unknown subclass %@)
MPPlaybackContext+MPCSharedListening.m
Cancelled while performing request: %@
Failed to load request: %@
Request did not produce any items: %@
Intent produced unsupported section (genericObject.type=%@) %@
v16@?0@"MPIdentifierSet"8
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
v32@?0q8@"MPIdentifierSet"16^B24
v32@?0@8q16^B24
Intent did not produce any store items: %@ %@
Intent did not produce start item for identifiers: %@
@16@?0@"MPIdentifierSet"8
Unsupported content [Radio] %@
Unsupported content [Shared Listening Session] %@
com.apple.MediaPlaybackCore/AMSEngagement
device
account
enqueuer-account
related-events
v24@?0@"AMSEngagementEnqueueResult"8@"NSError"16
event-type
time
payload
containerType
identifierSet
item
Live or radio streaming playback
Object type is not a song
Object is a video without traits
Enhanced audio is not available - type selected randomly
Audio type selected from traits & preferences
0.Environment
1.Traits
2.Preferences
3.Outcome
No available audio formats
No enhanced audio available on this store front
B16@?0@"MPCPlayerAudioFormat"8
Audio format selection [from preferences & route]
1.Formats
3.Route
4.Outcome
Audio format selection [from audio asset type & route]
2.Audio type
4.Matched tier
5.Outcome
%@ <%p>: %@
Lossless: %@
HRLossless: %@
Spatial: %@
LQStereo: %@
HQStereo: %@
HighResLossless: %@
Network: %@
Expensive: %@
Constrained: %@
HighBandwidth: %@
Always On
Automatic
Unknown preference:%ld
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
Multichannel
allowedAudioSpatializationFormats
MonoAndStereo
MonoStereoAndMultichannel
GaplessAudioTransitions
BinauralAudioForUnknownAudioDeviceTypes
ScalabilityToLosslessAudio
UnconstrainedAudioSampleRate
[%@]
variantPreferences
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
MediaPlayer
cross_fade
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
controllerForPlayerPath
Failed to send command %ld
v28@?0I8@"NSError"12@"MRSendCommandResultStatus"20
v32@?0@"MRCommandResult"8@"NSError"16@"NSString"24
MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
v16@?0@"MPRemoteCommandStatus"8
{_MSVSignedRange=qq}
<MPCMediaRemoteController: %p>
playQueueIdentifiersForRequest[%@]
PlaybackQueue Response failed to include now playing item
playingIdentifier
queueIdentifier
contentItem - %@
Requested content item %@ state does not exist.
contentItemArtwork[%@] - %@
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"8@?0
playingItemIdentifier [mergeContentItems]
contentItemIDs
contentItemChanges:keys
<EMPTY>
<NULL>
optimisticStateContentItems
supportedCommands
loadedRange
requestedRange
playingItemIdentifier
playingItem
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
commandName
enabled
%@ (%d)
continue-listening
station
MPCSiriPlaybackAdditionsMetadataCountFromResponseKey
MPCSiriPlaybackAdditionsMetadataOrderedPlaybackCacheRequestsKey
MPCSiriPlaybackAdditionsMetadataOrderedPlayableAssetIdentifiersKey
MPCSiriPlaybackAdditionsMetadataPlaybackAuthTokenTrustIdentifierKey
v16@?0@"ICRequestContext"8
meta.api
format.resources
results
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
audioTraits
assetUrls
enhancedHls
hls-playlist-url
hls-key-cert-url
hls-key-server-url
key-server-protocol-type
songId
offers
type
downloadAssets
contains
does not contain
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
MPCAssistantConnection
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
MPCPlaybackEngineEventStream.m
EVS: Unable to generate SQL statement: %@ error:%@
B16@?0@"NSString"8
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
CREATE UNIQUE INDEX IF NOT EXISTS events_ns ON events (_ns)
CREATE INDEX IF NOT EXISTS events_type ON events (type, _ns)
PlaybackEventStreams
%@-%@.sqlpkg
_MPC_CLEAR_EVS
Database
@"MSVSQLDatabase"8@?0
EVS: deallocated before invalidation
 - Database: %@
 - Subscriptions: %@
 - Cache Misses: %@
 - Cache Hits: %@
 - Assertions: %@
reason
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
@identifier
@type
@monoAbsolute
@monoContinuous
@monoTimebaseNS
@userNS
@payload
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@count
v32@?0@8@16^B24
B16@?0@"MPCPlaybackEngineEvent"8
<%@: %p consumer=%@ events=%@>
Consumer %@ already has a mutating subscription to %@
Consumer %@ already has a subscription to %@
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
@lastNS
@maximumNS
<%@: %p %@ -> %@>
startEvent
Start event must be chronologically AFTER the limiting event.
COUNT(DISTINCT events.identifier)
eventType
Must provide event types to enumerate.
Query too large
SELECT %@ FROM events
, json_tree(events.payload, @payload_key_%d) AS payload_%d
(payload_%d.value = @payload_value_%d)
events.type = @type
events.type IN (
@type_%d
_ns < @startNS
_ns > @endNS
 WHERE 
 AND 
 ORDER BY _ns DESC
 LIMIT %lld
@startNS
@payload_key_%d
@payload_value_%d
Unable to convert payload value to JSON: %@
Unknown payload value type for query: %@
v32@?0@"NSString"8@16^B24
@endNS
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
<%@: %p reason=%@ invalidated=%d>
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time out of bounds: %llu < %llu < %llu
Event %@ time overflows int64 size: %llu < %lld
com.apple.MediaPlaybackCore.MPCModelStorePlaybackItemsRequestOperation.accessQueue
Request must contain either storeIDs or sectionedModelObjects
v32@?0@"ICUserIdentity"8@"ICMusicSubscriptionStatusResponse"16@"NSError"24
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
No network connection
-[MPCModelGenericAVItemMediaRedownloadOperation execute]_block_invoke
MPCModelGenericAVItemMediaRedownloadOperation.m
Missing asset URL in media redownload request response
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
Missing redownload parameters
Missing store request context
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
v16@?0@"MPModelRadioStation"8
v24@?0@"MPPlaybackContext"8@"NSError"16
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
Missing tracklist data in playback queue.
v16@?0@"<MPMutableRadioIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
Missing creation properties data in playback queue.
original
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Unknown queue identifier: %@
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
unknown-guid
v24@?0@"ICUserIdentity"8@"NSError"16
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPRemotePlaybackQueue+MPCAdditions.m
Attempted to decode container identifier set without personID
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
ClearUpNext [MPC]
ShareQueue [MPC]
Debug [MPC]
<Unrecognized Command>
Unrecognized [%lld]
clearUpNextQueueCommand
shareQueueCommand
debugCommand
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
v24@?0@"MPServerObjectDatabaseAsset"8^B16
POST
guid
flavors
adamIds
application/json
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
max-mini-sinf-batch-size
https://itunes.apple.com/
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.mediaplaybackcore.audiotap
Sample Rate: %1.0fHz - Format ID: %u - Bytes/Packet: %u - Frames/Packet: %u - Bytes/Frame: %u - Channels/Frame: %u - Bits/Channel: %u
com.apple.iBooks
com.apple.podcasts
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@, originatingOutputDeviceUID = %@, singleGroup = %@, originatingControl = %@>
v16@?0@"NSDictionary"8
OriginatingOutputDeviceUID
AppBundleID
PlayerID
MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
Unable to restore state. Too many failed attempts.
v20@?0B8@?<v@?>12
audioSessionCategory
stateRestoration-%@
attempts
identifier
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
Age Gating
Age Verification
MPCSiriSelfLogger.m
MPCSiriSelfLogger: siriReferenceIdentifier is not recognized by SASelfLogger: %@
SASelfLogger
Class getSASelfLoggerClass(void)_block_invoke
Unable to find class %s
void *SiriAudioSupportLibrary(void)
SASelfLoggerMWTMusicMetadata
Class getSASelfLoggerMWTMusicMetadataClass(void)_block_invoke
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath
v16@?0@"MPCPlayerPath"8
resolvedPlayerPath and error was nil
v24@?0@"MPCPlayerPath"8@"NSError"16
v16@?0^v8
VERSION
BIT-RATE
SAMPLE-RATE
BIT-DEPTH
CHANNEL-COUNT
ORIGIN-CHANNEL-COUNT
CHANNEL-USAGE
AUDIO-FORMAT-ID
GROUP-ID
IS-ATMOS
ORIGIN-IS-ATMOS
tier
codec
chlay
ochlay
chlayd
Stereo
LQ-Stereo
Synthesized format
HQ-Stereo
tier: %@
bitrate: %@
groupID: %@
bitDepth: %@
sampleRate: %@
codec: %@
channels: %@
layout: %@
origin channels: %@ [%@]
origin channels: %@
multichannel
stableVariantID: %@
%ldkbps
%d-bit
%ldkhz
BINAURAL
Mono
Binaural
5.1.2
5.1.4
7.1.2
7.1.4
9.1.6
bitDepth
channelCount
layout
sampleRate
name
rmcs
spzs
spze
spzcs
spzcr
type: %@
name: %@
multichannel suppport: %@
supportsSpatialization
spatializationIsEnabled
canRenderSpatialAudio
canStreamSpatialAudio
Unavailable
UserPreference
UserDownload
RouteIncompatible
RouteUnknownCompatibility
BandwidthInsufficient
Unknown-%ld
LowBandwidthStereo
HighQualityStereo
Lossless
HighResolutionLossless
Spatial
DeviceSpeaker
LineOut
Headphones
BluetoothHeadphones
BluetoothSpeaker
USBAudio
CarAudio
HDMI
Unknown [CM-driven]
Available
properties
identity
queueEndAction
ReplacementContext is unsupported type %@ != MPCModelPlaybackContext
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
domain
code
userInfo
@24@?0@8@16
@16@?0@8
prefix
given
middle
family
suffix
nick
modelClass
_empty
db-id
contained-pid
sync
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
personal
person-id
cloud
cloud-album
reco-id
universal
global-playlist
adam
former-ids
ulid
purchased
social-profile
media-clip
static-asset
reporting-adam-id
asset-adam-id
radio
station-string
station-hash
station-id
serverID
externalID
nameComponents
imageURL
v16@?0@"<_ICMutableLiveLinkIdentityPrivate>"8
root
debug
dialog
data
dataType
message
actions
@16@?0@"MPRemoteCommandHandlerDialogAction"8
event
mrCommand
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
MPCPlaybackEngineEventPayload.m
Unexpected type for key %@ actual=%@ expected=%@
Unexpected type for element in array for key %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)
Attempt to JSON coerce unsupported value type: %@ %@
albumName
storeAdamID
playbackAuthorizationToken
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
LeasePreventionPause_%@
errorDomain
errorCode
date
formattedTime
queueLoadDuration
queueLoadNetworkTime
queueEndpoint
initialQueue
items
queueBundleID
queueType
createAssetDuration
assetPreloaded
urlScheme
audioType
itemConfigWaitTime
itemConfigHLSWaitTime
endpointType
hasOfflineKeys
hasOnlineKeys
assetInfoSource
isDelegated
isSubscription
redownloadTime
readyToPlayTime
subscriptionWaitTime
suzeLeaseTime
queueStartItem
itemQueueSize
sessionStartItem
MediaIdentifier
networkChangeCount
endReason
initialItemLoadDuration
initialItemPreloaded
initialQueueType
initialQueuePreloaded
initialQueueLoadDuration
initialQueueFeatureName
initialNetworkType
isHLS
perceivedPlayStartTime
previousItemAssetType
previousItemEndReason
finalNetworkType
stateRestoration
queuesAdded
queuesFailed
itemsPlayed
itemsFailed
commandSendTime
unknown
natural
skip
select-song
endSession
fail
originUnknown
library
typeUnknown
song
musicVideo
tvEpisode
movie
playlistEntry
adamid
padamid
sadamid
aadamid
raid
raidev
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
MSVHasher+Algorithms.h
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ requirePlaybackAuthorizationToken=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
request.playbackRequestEnvironment
request
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v24@?0@"NSArray"8@"NSError"16
MPCPlaybackHistoryRecordChangeRequestOperation.m
Unsupported request type: %ld
overridePlayingItem
com.apple.music.scenes
motion-timeline
versions
version
scenes
start_frame
end_frame
iterations
MPCNullPlaybackContextCodingKeyLabel
actionAfterQueueLoad
repeat/shuffle
label
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
@"NSString"16@?0q8
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
accountInfo
container
startingItemIndexPath
shuffleMode
MPCMediaFoundationTranslator.m
queueItem == nil || [(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
[(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
B16@?0@"ICStoreDialogResponseButton"8
v16@?0@"MSVSystemDialogResponse"8
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
queue-source.catalog
AirMusic
Music
<MPCPlaybackRequestEnvironment: %p identity=%@>
clientIdentifier
clientVersion
delegationProperties
requestingBundleIdentifier
requestingBundleVersion
userIdentity
v16@?0@"ICStoreRequestContext"8
v16@?0@"ICMusicKitRequestContext"8
[delegated account missing]
[promoting delegated account]
[base account missing]
[base account is delegated]
MPCSharedListeningLiveLinkReusePool.m
sessionIdentifier must not be nil
EncodeSerialQueue
v24@?0@"NSData"8@"NSError"16
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
Class getAFSecurityConnectionClass(void)_block_invoke
MPCAssistantEncodings.m
void *AssistantServicesLibrary(void)
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v20@?0B8@"NSError"12
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v32@?0@"MPModelGenericObject"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
Radio
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
DeviceClassNumber
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPAD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPOD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPHONE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
requestDeviceCount
source
com.apple.MediaAssistant.siri
no UIDs provided
success
errorMessage
com.apple.mediaplaybackcore.assistant.pause
@"NSDictionary"8@?0
no origin for endpoint
v24@?0@"NSError"8@"NSArray"16
@"NSString"16@?0@"MRAVOutputDeviceDescription"8
MPCAssistantPause
v24@?0^v8^{__CFError=}16
v24@?0@"NSArray"8@"NSArray"16
removedDeviceCount
pausedDeviceCount
removedEndpointCount
pausedEndpointCount
appleTVsAffected
homepodsAffected
forceRemoveDeviceCount
v16@?0^{__CFError=}8
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
v16@?0@"MPCAssistantSendCommandResult"8
command
appBundleID
resultCodes
com.apple.mediaplayer.assistant.command
actualDestination
local
MediaRemote
new_siri_behavior
v16@?0@"MRAVEndpoint"8
%@ - %@
v24@?0@"MRAVEndpoint"8@"NSError"16
MPCAssistantCommand-removeUnwantedDevices
v32@?0@"MRAVEndpoint"8@"NSArray"16@?<v@?@"MRAVEndpoint">24
actualDeviceCount
When processing %@ if we are the group leader, pause our now-playing app if we have one
v16@?0^{__CFArray=}8
v12@?0B8
requestedUIDs
outputGroups
outputGroupIDPresent
formGroup
remote
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0@"MRCommandResult"8
proxy promotion
group leader
errorString
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
MPCItemBookmarker.m
item == nil || [(MPAVItem *)item isKindOfClass:[MPAVItem class]]
fromItem == nil || [(MPAVItem *)fromItem isKindOfClass:[MPAVItem class]]
toItem == nil || [(MPAVItem *)toItem isKindOfClass:[MPAVItem class]]
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
Could not convert station into metadata: %@
v32@?0@"NSString"8d16@"NSError"24
v16@?0@"ICMutableRadioPlaybackHistory"8
vacToken
station track not skippable
station is a stream
cannot find item: %@
Radio service is restricted
v24@?0d8@"NSError"16
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
LOADING_AUDIO_LABEL
RADIO_LABEL
queue-source.tilt
RadioStationID
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
FirstItem
NextItem
PlayError
bitrate
channelLayout
spatialized
multiChannel
eventTime
sectionIdentifier
itemIdentifier
itemMetadata
siriRefId
isShuffled
formatInfo
routeInfo
errorResolution
hasAccountInfo
nextItemWaitTime
getTracksWaitTime
bagWaitTime
leaseWaitTime
suzeLeaseWaitTime
subscriptionAssetLoadWaitTime
mediaRedownloadWaitTime
sessionActivationWaitTime
checkpointMRSetQueueBegin
checkpointSetQueueBegin
checkpointRateZero
checkpointSetQueueEnd
checkpointMRPlay
checkpointPlay
checkpointAssetLoadBegin
checkpointItemConfigBegin
checkpointItemBegin
checkpointLikelyToKeepUp
checkpointReadyToPlay
checkpointRateOne
checkpointFirstAudioFrame
MPCPlayPerfMetrics.m
Section identifier in first audio frame event can't be nil
Item identifier in first audio frame event can't be nil
v24@?0@"MPCPlaybackEngineEvent"8^B16
FirstAudioFrameBug
FirstAudioFrameBeforeItemBegin
%@-%@-%@
networkTime
<%@:%p %@>
<%@:%p>
EventType: %@
Item: %@ %@ (%@)
  - TotalTime (MPP):        % 3.3fs (Total time spent to get music to play)
  - MusicWaitTime (MWT):    % 3.3fs (User-perceived wait time)
  - MediaPlayerTime (MPT):  % 3.3fs (Total time spent in MediaPlayer frameworks)
  - NetworkTime (NWT):      % 3.3fs (Blocking Network Time)
  - AVTime (AVT):           % 3.3fs (Time spent waiting on AV)
  - GapTime (GAP):          % 3.3fs (Next item wait time)
Components
  - SetQueueCommandSend:    % 3.3fs [MR] (SendCommand -> PerformSetQueue)
  - QueueLoad:              % 3.3fs [MP] (PerformSetQueue -> AssetLoadBegin)
  - AssetLoad:              % 3.3fs [MP] (AssetLoadBegin -> AssetLoadEnd)
  - ReadyToPlayStatus:      % 3.3fs [AV] (AssetLoadEnd -> ReadyToPlay)
  - RateChange:             % 3.3fs [MP] (Play -> RateChanged)
  - FirstAudioFrame:        % 3.3fs [AV] (RateChanged -> FirstAudioFrame)
Network
  - Lookup:                 % 3.3fs
  - GetTracks:              % 3.3fs
  - Bag:                    % 3.3fs
  - Lease:                  % 3.3fs
  - SuzeLease:              % 3.3fs
  - SubscriptionAssetLoad:  % 3.3fs
  - MediaRedownload:        % 3.3fs
  - HLSMetadata:            % 3.3fs
Misc
  - PlayCommandWait:        % 3.3fs [UI] (ReadyToPlay -> Play)
  - PlayCommandSend:        % 3.3fs [MR] (SendCommand -> PerformSetQueue)
  - SessionActivation:      % 3.3fs [AV] (AVAudioSession activation) 
Error
  - Error:                  %@
  - Resolution:             %@
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Playback engine doesn't support state restoration
v8@?0
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
Failed to load session due to %gs timeout.
v16@?0q8
v16@?0@"NSError"8
v16@?0@?<v@?@"NSError">8
_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Opting not to save an archive for a shared listening session
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
queueController
PlaybackSessions
v24@?0@"UIImage"8@"NSError"16
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelObject"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelSong"8
MPCModelGenericAVItemTimedMetadataRequest.m
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
v16@?0@"MPModelObject"8
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
v24@?0@"MPModelResponse"8@"NSError"16
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
softlink:r:path:/System/Library/PrivateFrameworks/SiriAudioSupport.framework/SiriAudioSupport
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
MPCAudioSpectrumAnalyzer
MPCPlaybackEngineEventObserving
NSObject
MPCProcessAudioTapDelegate
MPCAudioSpectrumObserver
_MPCAudioSpectrumAnalyzerStorage
MPCSharedListeningPlaybackIntentDataSource
ICLiveLinkDelegate
MPCPlaybackIntentDataSource
_MPCSharedListeningTracklistPlaybackContext
_MPCProtoItem
NSCopying
MPCStoreLibraryPersonalizationMiddleware
MPMiddleware
MPCPlayerResponseBuilder
MPCResponseMediaRemoteControllerChaining
_MPCAudioSessionController
_MPCPlaybackEngineMediaFoundationImplementation
MFPlaybackStackControllerDelegate
MPCQueueControllerDelegate
MPCAssetLoaderDelegate
MPCPlaybackEngineImplementation
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
ICStoreResponseProtocol
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
_MPCProtoTracklistIndexPath
MPCAssistantSetVolume
MPCPlaybackEngineLoggingConsumer
MPCPlaybackEngineEventConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
_MPCProtoRadioContentReference
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCPlayerSessionResponse
_MPCProtoItemIdentifierSet
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerClient
_MPCMusicPlayerControllerServer
NSXPCListenerDelegate
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
MPRTCReportingItemSessionCreating
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
_MPCMediaRemotePublisher
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCPlaybackIntent
ForShortcutsOnly
MPCPlaybackSharedListeningProperties
_MPCPlaybackContextPlaybackIntentDataSource
MPCAssetLoadPropertiesLocalFileEvaluation
MPCAssetLoadPropertiesLocalFileEvaluator
_MPCProtoRadioCreationProperties
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCAnalyticsSignpost
MPCWaitForLikelyToKeepUp
MPCWaitForReadyToPlaySignpost
MPCPlayToSetRateSignpost
MPCSetRateToEffectiveRateSignpost
MPCScene
MPCSceneCollection
MPCScriptedLooper
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddleware
MPCPlayerCommandDialogAction
MPCPlayerCommandDialog
MPCPlayerCommandStatus
MPCPlayPerfConsumer
MPCDialogs
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCAutoBugCaptureEventConsumer
MPCMediaRemoteMiddlewareCommandsOperation
MPCHLSSessionData
MPCMediaRemoteMiddleware
MPCErrorController
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MQFDebugging
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCProtoContainerIdentifierSet
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
AVPlayerViewControllerDelegate
_MPCVideoViewControllerMediaFoundationImplementation
MPCVideoOutput
MPCVideoOutputDelegate
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCSharedListeningPlaybackIntentTracklistToken
MPCPlayerItemConfigurator
MPAVRoutingControllerDelegate
_MPCProtoDelegateInfo
MPCExternalPlaybackControllerImplementation
MFExternalPlaybackController
MPCExternalPlaybackRouter
_MPCProtoRadioContentReferenceLibraryArtistContentReference
MPCRadioArtworkDataSource
MPCSharedListeningEvent
MPCSharedListeningEventParticipant
MPCSharedListeningCustomEvent
MPCSharedListeningPlaybackEvent
MPCSharedListeningQueueEvent
MPCSharedListeningQueueEventContentAdded
MPCSharedListeningQueueEventContentPlayedNow
MPCSharedListeningQueueEventContentRemoved
MPCSharedListeningQueueEventContentReordered
MPCSharedListeningQueueEventContentReplaced
MPCSharedListeningQueueEventContentUpdatedMessage
MPCSharedListeningQueueEventPlaybackModeChanged
MPCSharedListeningReactionEvent
MPCSharedListeningSessionEvent
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCModelStorePlaybackItemsRequestAccumulatorImportResponse
MPCAdditions
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDisplayDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
MPCQueueControllerCommandInterposing
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPCContinueListeningRadioQueueProviding
MPArtworkDataSource
MPStartItemInfoProviding
MPCQueueItemProviding
MSVSegmentedCoding
MPCQueueControllerCommandInterposingHost
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCReportingPlaybackEnvironmentPropertiesLoader
MPCSharedListeningQueueFeeder
AVPlayerPlaybackCoordinatorDelegate
MPCSharedListeningContainerInfo
_MPCSLQFPendingAction
MPCPlaybackDefaultsImplementation
MFPlaybackDefaults
MPCPlayPerfAnalytics
_MPCProtoRadioContentReferenceStoreContentReference
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCAssistantEndpointContext
MPCPlayerResponseItem
MPCPlayerResponseItemMusicAudio
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
_MPCProtoRadioContentReferenceLibraryItemContentReference
MPCSharedListening
MPCAMSEngagementEventConsumer
_MPCProtoContainer
MPCAudioAssetTypeSelection
MPCPlayerAudioFormatSelection
MPCAudioAssetTypeSelector
MPCExplicitContentAuthorizationManager
MediaPlaybackCore
MPCItemIdentifierImplementation
MPCItemIdentifier
MPCCrossFadeParameters
MFCrossFadeParameters
MFQueuePlayerItem
MFPlayerItem
MFTransitionInformationProviding
MPCMediaRemoteController
_MPArtworkCatalogOverlayDelegate
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
MPCModelStorePlaybackItemsRequestOperation
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
MPCDebugCommand
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCProcessAudioTap
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
_MPCPlaybackEnginePlayerIDInitializationParameters
MPCPlaybackEngineInitializationParameters
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
_MPCPlaybackEngineEventStreamInitializationParameters
MPCPlaybackEngineEventStreamInitializationParameters
MPCSiriSelfLogger
MPCPlayerPathCache
MPCPlayerAudioFormat
MPCPlayerAudioRoute
MPCSharedListeningPlaybackContext
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayload
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
RTCOldEngineSupport
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCReportingEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
MPCScriptedSceneCollectionParser
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
_MPCProtoTracklist
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCAVItemTrace
MPCModelGenericAVItemHomeSharingLoadOperation
MPCAudioProcessor
MPCAudioProcessing
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCSharedListeningLiveLinkReusePool
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPCQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
MPCPlayPerfMetrics
_MPCPlaybackEngineSessionManager
MPCPlayerResponseParticipant
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
initWithPlaybackEngine:refreshRate:
init
_createAudioTap
setStorage:
_destroyAudioTap
dealloc
_shouldAttachAudioTap
setAudioTapProcessor:
observers
count
processAudioTap
start
stop
initWithCapacity:
addObject:
removeObject:
registerObserver:
unregisterObserver:
playerPath
route
isDeviceRoute
isAirPlayingToDevice
standardUserDefaults
isProcessTapEnabled
_createProcessTap
_createQueueTap
initWithRefreshRate:delegate:
numberOfFrames
sampleRate
initWithMaximumNumberOfFrames:sampleRate:
addEngineObserver:
_destroyProcessTap
_destroyQueueTap
copy
storage
maxNumberOfFrames
analyzeFrequencies:numberFrames:observers:
analyzeAudioData:numberFrames:observers:
_analyzeAudioData:numberOfFrames:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didEndPlaybackOfItem:
engine:didChangeItemElapsedTime:rate:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didReachEndOfQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeActionAtQueueEnd:
engine:didChangeAccounts:
engine:didChangeCurrentItemVariantID:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
engineDidLoseMediaServices:
engineDidResetMediaServices:
processAudioTapDidReceiveAudioSamples:numberOfSamples:
initWithPlaybackEngine:
configurePlayerItem:
addObserver:
removeObserver:
_analyzeSamples:numberFrames:
_prepareTap:maxFrames:processingFormat:
playbackEngine
refreshRate
setObservers:
setProcessAudioTap:
selfRef
setSelfRef:
.cxx_destruct
_audioProcessingTap
_processingQueue
_aqBuffer
_playbackEngine
_refreshRate
_storage
_observers
_processAudioTap
_selfRef
T@"_MPCAudioSpectrumAnalyzerStorage",&,N,V_storage
T@"NSMutableArray",&,N,V_observers
T@"MPCProcessAudioTap",&,N,V_processAudioTap
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"NSNumber",R,C,N,V_refreshRate
addFrequencyBand:
_resizeBandStorage
setPowerLevel:
onUpdate
defaultObserver
numberOfBands
addAnalysisBand:
averagePowerOfBandAtIndex:band:
averagePowerOfFrequencyBandAtIndex:frequencyBand:
beginReport
finishReport
powerLevel
setOnUpdate:
_bands
_bandsStorageSize
_powerLevel
_numberOfBands
_onUpdate
Tf,N,V_powerLevel
Tq,R,N,V_numberOfBands
T@?,C,N,V_onUpdate
_prepareBuffers
_freeBuffers
_destroyFFTSetup
countByEnumeratingWithState:objects:count:
setSampleRate:
setMaxNumberOfFrames:
halfN
setHalfN:
log2N
setLog2N:
_intermediateBuffer
_fftBuffer
_fftSetup
_processing
_sampleRate
_maxNumberOfFrames
_halfN
_log2N
Tf,N,V_sampleRate
Tq,N,V_maxNumberOfFrames
Tq,N,V_halfN
Tq,N,V_log2N
setStrongSelf:
setInitialIntent:
shuffleMode
setShuffleMode:
setIdentity:
setCompletion:
setLock:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
msv_errorWithDomain:code:debugDescription:
_transitionToBuildState:intent:error:
liveLink
initWithTimeout:interruptionHandler:
setGuard:
_transitionToBuildState:
tracklistToken
sharedListeningProperties
setSharedListeningProperties:
identity
_transitionToLiveLinkState:
sharedReusePool
identifier
storeLiveLink:forSessionID:
msv_errorWithDomain:code:underlyingError:debugDescription:
_transitionToLiveLinkState:error:
linkState
items
_transitionToSourceState:
queue
initialTracklist
startIndexPath
sessionKey
propertiesWithSessionIdentifier:sessionKey:
setLiveLink:
sharedSessionIntentWithProperties:identity:
replaceTracklist:preferredStartIndexPath:completion:
guard
disarm
mpc_remoteCommandStatus
initWithMPStatus:request:
completion
_transitionToSourceState:error:
setInitialTracklist:
setStartIndexPath:
getSharedListeningTracklistWithCompletion:
getPlaybackContextWithCompletion:
buildState
linkWithIdentity:
setDelegate:
sourceState
didStartLiveLink:
liveLink:didEncounterError:willRetry:
liveLinkDidReconnect:
didStopLiveLink:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveEvent:
liveLink:didReceiveDirectCurrentItemChanged:
getPlaybackContextForIntent:withCompletion:
buildSharedSessionIntentWithIntent:identity:completion:
strongSelf
lock
setBuildState:
setSourceState:
initialIntent
setLinkState:
_lock
_guard
_shuffleMode
_strongSelf
_completion
_buildState
_sourceState
_initialIntent
_startIndexPath
_initialTracklist
_linkState
_liveLink
_identity
T@"MSVBlockGuard",&,N,V_guard
Tq,N,V_shuffleMode
T@,&,N,V_strongSelf
T@?,C,N,V_completion
T{os_unfair_lock_s=I},N,V_lock
Tq,N,V_buildState
Tq,N,V_sourceState
T@"MPCPlaybackIntent",&,N,V_initialIntent
T@"NSIndexPath",C,N,V_startIndexPath
T@"MSVSectionedCollection",&,N,V_initialTracklist
Tq,N,V_linkState
T@"ICLiveLink",&,N,V_liveLink
T@"ICLiveLinkIdentity",&,N,V_identity
tracklist
setTracklist:
startItemIndexPath
setStartItemIndexPath:
_tracklist
_startItemIndexPath
T@"MSVSectionedCollection",&,N,V_tracklist
T@"NSIndexPath",&,N,V_startItemIndexPath
stringWithFormat:
dictionaryRepresentation
dictionary
numberWithInt:
setObject:forKey:
numberWithBool:
allocWithZone:
copyWithZone:
readFrom:
writeTo:
_identifierSet
_mediaType
_excludeFromShuffle
_has
operationsForPlayerRequest:
initWithMiddleware:playerRequest:
arrayWithObjects:count:
operationsForRequest:
invalidationObservers
setInvalidationObservers:
T@"NSArray",&,N
personalizedModelObjects
setPersonalizedModelObjects:
_invalidationObservers
_personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
length
section
sectionAtIndex:
itemAtIndexPath:
nextObject
playerModelObject:propertySet:atIndexPath:chain:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerExplicitContentState:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerItemShouldDisableJumpToItem:atIndexPath:boundsCheck:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerIsSharedListeningSession:chain:
preferredAudioFormat:chain:
activeAudioFormat:chain:
activeAudioFormatJustification:chain:
audioFormatPreference:chain:
audioRoute:chain:
alternateAudioFormats:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
sharedInstance
setAudioSession:
setupObservations
tearDownObservations
audioSession
setCategory:mode:routeSharingPolicy:options:error:
category
setCategory:
categoryOptions
setCategoryOptions:
routeSharingPolicy
setRouteSharingPolicy:
updateAudioSession:options:routeSharingPolicy:
defaultCenter
snapshotSessionSettings
addObserverForName:object:queue:usingBlock:
setLostObserver:
restoreSessionSettingsFromSnapshot
setResetObserver:
lostObserver
resetObserver
_audioSession
_lostObserver
_resetObserver
_category
_categoryOptions
_routeSharingPolicy
T@"AVAudioSession",&,N,V_audioSession
T@,&,N,V_lostObserver
T@,&,N,V_resetObserver
T@"NSString",N,V_category
TQ,N,V_categoryOptions
TQ,N,V_routeSharingPolicy
_stateDictionary
prewarm
_resetPlaybackStack
_setupPlaybackStackWithPlaybackEngine:queueController:
engineID
actionAfterQueueLoad
playPerfAnalyticsWithIdentifier:willPlayImmediately:
setPlayPerfAnalytics:
takeEVSDeferralAssertionForFirstAudioFrame
invalidateEVSDeferralAssertionForFirstAudioFrame
setupPlaybackStackIfNeeded
queueController
resetSharedListening
errorController
reset
playbackStackController
translator
resetMapping
playerID
preferredFirstContentItemID
setPreferredFirstContentItemID:
resolveError:forItem:completion:
currentQueueItem
setQueueWithPlaybackContext:identifier:completionHandler:
reloadWithPlaybackContext:completionHandler:
currentState
playWithRate:identifier:completion:
addPlaybackContext:atPosition:jumpToIt:completion:
contentItemID
restoreQueue:
isModeSolo
setupForShared
isModeShared
setupForSolo
modeDescription
eventObserver
setQueueWithInitialItem:andPlay:identifier:completion:
isAssetLoaded
canUseLoadedAsset
canReusePlayerItem
prepareForRate:completionHandler:
activateAudioSessionWithCompletion:
currentTime
UUIDString
skipWithDirection:identifier:completion:
jumpTo:identifier:completion:
pauseWithFadeout:
pauseWithFadeOut:identifier:completion:
play
audioSessionCategory
audioSessionOptions
isEqualToString:
transientAudioSessionController
initWithCategory:routeSharingPolicy:options:
updateAudioSessionWithConfiguration:
_MPAVItemForMFQueuePlayerItem:
rate
interruptedState
videoViewController
itemsHavePlayed
endPlaybackWithIdentifier:completion:
playPerfAnalytics
didReceivePlayRequest
pauseWithIdentifier:completion:
pauseForLeasePreventionWithIdentifier:completion:
shouldSkipJumpToItemStart:
bookmarker
currentItem
userDidSkipDuringPlaybackFromItem:direction:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
_setCurrentPlaybackRate:
setRate:identifier:completion:
numberWithFloat:
setCurrentRelativeVolume:
setRelativeVolume:
setPlaybackEngine:
initWithQueueController:
initWithDelegate:
initWithPlaybackEngine:translator:
initWithPlaybackEngine:translator:externalPlaybackRouter:
initWithTranslator:
leaseManager
initWithTranslator:leaseManager:
initWithPlaybackUserDefaults:
initWithPlayerID:engineID:queueController:assetLoader:errorController:externalPlaybackController:leaseController:defaults:queue:
setPlaybackStackController:
setMaximumPlayerQueueLength:
initializationParameters
setupForManagedSessionWithAudioSession:
setStackController:
initWithPlaybackEngine:stackController:translator:
setConfigurator:
initWithStackController:
setQueueCoordinator:
updateAudioSession
currentRelativeVolume
floatValue
numberWithInteger:
numberWithDouble:
targetRate
stateDictionary
dictionaryWithObjects:forKeys:count:
eventStream
sectionIdentifier
itemIdentifier
emitEventType:payload:atTime:
currentItemTransition
setCurrentItemTransition:
playbackDidStopForItem:time:
emitEventType:payload:
type
sourceID
_isAVKitSkipAction:
mediaRemotePublisher
commandCenter
nextTrackCommand
previousTrackCommand
eventWithCommand:mediaRemoteType:options:
invokeCommandWithEvent:completion:
effectiveRate
updateDurationSnapshotWithTime:forItem:rate:
schedulePlaybackStatePreservation
setObject:forKeyedSubscript:
itemError
errorWithDomain:code:userInfo:
forItemChangeSource:
time
currentItemWillChangeFromItem:toItem:time:
_willResignActivePlayerItem
_willBecomeActivePlayerItem
playbackStartTrace
item
cancel
setPlaybackStartTrace:
playerItemDidBecomeCurrent:
_didBecomeActivePlayerItem
configurator
updatePlayerConfiguration
prepareForCurrentItemPlayback
itemDidBecomeCurrent:
itemDidBecomeCurrent:time:
_didResignActivePlayerItem
itemDidResignCurrent:time:
playerItemDidResignCurrent:
repeatType
setMPAVItem:forMFPlayerItem:
isAlwaysLive
contentItem
elapsedTimeTimestamp
calculatedElapsedTime
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
itemDidFailToLoad:error:
null
timeControlStatus
itemDidPlayToEnd:time:
itemIsReadyToPlay:
reevaluateHasProtectedContent
reevaluateType
_logPlayerEventsForQueueItem:
_updateActiveFormatForQueueItem:
availableSortedFormats
currentPlayerAudioFormat
tier
preferredFormat
updateActiveFormat:justification:
stableVariantID
avPlayerItem
accessLog
events
startupTime
observedBitrate
indicatedBitrate
averageAudioBitrate
switchBitrate
entryReasonCode
endInterval
setItemsHavePlayed:
playbackDidStartForItem:time:rate:
_playbackDidStopForItem:source:reason:time:
playbackDidStopForItem:
playbackRateDidChangeToRate:forItem:time:
playbackRateDidChangeForItem:rate:
timebase
firstFrameWillRenderForItem:machAbsoluteTime:
routeDescription
isAirplay
playbackStateDidChangeFromState:toState:forItem:time:rate:
playbackIsLikelyToKeepUp:forItem:
uniqueIdentifier
source
_performSkipForUserAction:
timeStamp
numberWithUnsignedInt:
options
successStatus
statusWithCode:error:
rtcReportingServiceIdentifier
modelGenericObject
anyObject
identifiers
modelPlayEvent
genericObjectRepresentation
song
isArtistUploadedContent
modelKind
isVideoContent
durationFromExternalMetadata
initialPlaybackStartTime
isStartItem
evsDeferralAssertionForFirstAudioFrame
eventDeliveryDeferralAssertionForReason:timeout:
setEvsDeferralAssertionForFirstAudioFrame:
invalidate
currentItemWillChangeFromItem:toItem:source:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:source:timeStamp:
itemDidResignCurrent:source:timeStamp:
playbackDidStartForItem:rate:fromStalling:timeStamp:
playbackDidStopForItem:source:reason:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
playbackRateDidChangeNotifiedForItem:newRate:reason:participantIdentifier:timeStamp:
relativeVolumeDidChangeTo:timeStamp:
firstFrameWillRenderForItem:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
tracksDidChangeForItem:timeStamp:
timeControlStatusDidChange:waitingReason:timeStamp:
didReachEndOfQueueWithReason:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithItemAtDeath:timeAtDeath:timeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
userSeekCompletedForItem:fromTime:toTime:timeStamp:
didReportSignpostWithType:
errorResolutionDidStartForItem:error:
errorResolutionDidEndForItem:error:resolution:
stackControllerDidCreateTransitionFrom:to:type:parameters:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
reloadWithPlaybackContext:identifier:completionHandler:
replaceCurrentItemWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithCompletion:
setQueueController:
currentRate
state
stateBeforeInterruption
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
isReloadingPlaybackContext
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
playWithOptions:
pause
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
pauseWithFadeout:identifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
jumpToTime:identifier:completion:
T@"MPCPlaybackEngine",R,W,N
T@"MPCQueueController",&,N
T@"MPAVItem",R,N
Td,R,N
Tf,R,N
Tq,R,N
TB,R,N
TB,N
Tq,N
reloadingPlaybackContext
TB,R,N,GisReloadingPlaybackContext
playerViewController
playbackDidReachQueueEndWithTimeStamp:
firstVideoFrameWasRenderedForItem:timeStamp:
jumpIdentifier
setJumpIdentifier:
setBookmarker:
setTranslator:
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
stateHandle
setStateHandle:
setTransientAudioSessionController:
_autoPlayWhenLikelyToKeepUp
_reloadingPlaybackContext
_queueController
_actionAtQueueEnd
_jumpIdentifier
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_configurator
_stateHandle
_playbackStartTrace
_playPerfAnalytics
_transientAudioSessionController
_evsDeferralAssertionForFirstAudioFrame
_currentRelativeVolume
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
T@"MPCItemBookmarker",&,N,V_bookmarker
T@"MPCMediaFoundationTranslator",&,N,V_translator
T@"MPCErrorControllerImplementation",&,N,V_errorController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
T@"<MFAssetLoading>",&,N,V_assetLoader
T@"MPCLeaseController",&,N,V_leaseController
T@"MPCPlayerItemConfigurator",&,N,V_configurator
TQ,N,V_stateHandle
T@"MPCAVItemTrace",&,N,V_playbackStartTrace
T@"MPCPlayPerfAnalytics",&,N,V_playPerfAnalytics
T@"_MPCAudioSessionController",&,N,V_transientAudioSessionController
T@"<MPCPlaybackEngineEventStreamDeferralAssertion>",&,N,V_evsDeferralAssertionForFirstAudioFrame
Tq,N,V_jumpIdentifier
T@"NSNumber",C,N,V_currentRelativeVolume
T@"AVPlayerViewController",R,N
T@"NSDictionary",R,N
T@"MPCQueueController",&,N,V_queueController
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
TB,R,N,GisReloadingPlaybackContext,V_reloadingPlaybackContext
hostTime
userSecondsSinceReferenceDate
forPlayerState:
forPlaybackTimeChangeReason:
doubleValue
lastChangeDirection
forTimeControlStatus:
forErrorResolution:
serverError
domain
code
userInfo
mutableCopy
dialog
responseDictionary
_isAgeVerificationError:
removeObjectForKey:
objectForKeyedSubscript:
errorForICError:response:
request
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
queueItemProperties
label
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
isCancelled
finish
arrayWithCapacity:
contentItemForIdentifier:
stringByAppendingString:
replaceObjectAtIndex:withObject:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
controllerFuture
isInvalid
_loadItemsWithCompletion:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
finishWithError:
queueSectionProperties
translatorForMPModelClass:
setArtworkGenerator:
appendSection:
sectionObjectForPropertySet:contentItem:context:
emptyIdentifierSet
initWithIdentifiers:block:
firstObject
objectAtIndexedSubscript:
collectionIdentifier
collectionInfo
isEqualToDictionary:
playingIndexPath
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
setPlayingIndexPath:
_itemGenericObjectPropertySetForContentItem:propertySet:
objectForPropertySet:contentItem:context:
appendItem:
setQueueContentItems:
setQueueModelObjects:
queueIdentifier
setQueueIdentifierFuture:
queueIdentifierFuture
setQueueIdentifier:
_loadPlayingIdentifierWithCompletion:
sharedCache
observationTokenDescriptionForPlayerPath:
sourceContentItems
modelObjects
T@"MPSectionedCollection",R,N
T@"NSIndexPath",R,C,N
requiredStoreLibraryPersonalizationProperties
dictionaryWithCapacity:
emptyPropertySet
propertySetByCombiningWithPropertySet:
initWithProperties:relationships:
deviceSpecificUserInfo
mediaType
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
timeoutDescription
T@"NSError",R,N
T@?,C,N
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
initWithMiddleware:request:
execute
setMiddleware:
setRequest:
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSMapTable",&,N,V_inputOperations
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
queueModelObjects
queueContentItems
flattenedGenericObject
library
persistentID
_createStoreRequestContext
setRtcReportingParentHierarchyToken:
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
_ageVerificationStateDidChangeNotification:
removeObserver:name:object:
isHLSAsset
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
cancelRequest:
defaultManager
removeItemAtURL:error:
repeatIndex
mainTitle
album
title
year
artist
name
tvEpisode
season
show
universalStore
adamID
purchasedAdamID
subscriptionAdamID
trackNumber
trackCount
loadedAudioAssetType
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
storeSubscriptionAdamID
genre
_radioStation
subtype
performWithoutEnforcement:
isRadioStreamPlayback
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isExplicitTrack
activeAccount
ageVerificationStateForUserIdentity:
treatment
isRadioPlayback
_storeRequestContext
delegatedIdentity
delegatedIdentityProperties
DSID
unsignedLongLongValue
isDelegated
sharedMonitor
networkType
lastKnownNetworkType
hasVideo
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
personalizedStore
playbackAuthorizationToken
sharedSelector
preferredAudioAssetTypeForItem:
homeSharingAsset
localFileAsset
storeAsset
shouldRequirePlaybackAuthorizationTokensForPlayback
setPreferredAudioAssetType:
setAudioAssetTypeSelection:
setHLSContentPolicy:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
_prefersHighQualityContent
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
setHomeSharingAsset:
setAccountID:
storefrontIdentifier
setStorefrontID:
setDelegatedAccountID:
setPlaybackAuthorizationToken:
gaplessInfo
volumeAdjustment
sharedManager
isItemAuthorized:shouldAskForAuthorization:
identityProperties
_delegatedUserIdentityProperties:
setItemError:
_allowsStreamingPlayback
_timeoutValues
_iTunesStorePurchasedMediaKind
_loudnessInfoMediaKind
_volumeAdjustment
rtcReportingParentHierarchyToken
newHierarchyTokenFromParentToken:
timeIntervalSinceReferenceDate
sharedBagProvider
getBagForRequestContext:withCompletionHandler:
requestDate
_getSubscriptionLeasePropertiesWithCompletion:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
_allowsAssetCaching
_shouldPreloadSubscriptionStatus
_assetLoadPropertiesWithUserIdentityProperties:delegatedUserIdentityProperties:subscriptionPlaybackInfo:
endpointType
prefersVideoContent
preferredAudioAssetType
HLSContentPolicy
evaluateAssetLoadProperties:allowingCachedAssets:defaults:
initWithEvaluation:properties:
setRequirePreferredAssetQuality:
setResponseHandler:
addOperation:
assetURL
hasValidAsset
setAssetLoadProperties:
accountID
delegatedAccountID
setRequestType:
itemIdentifiers
setStoreRadioAdamID:
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:source:error:
isSubscriptionRequired
hasPlaybackCapability
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
_decorateAssetLoadResult:withURLBag:
_isAssetLoadResultValidForPlayback:error:
assetProtectionType
purchaseBundleDictionary
protectedContentSupportStorageFileURL
isCloudStreamingAsset
userAgent
isTrustedHostForURL:
clientInfo
initWithClientInfo:
isHomeSharingAsset
cloudID
numberWithUnsignedLongLong:
numberWithLongLong:
redownloadParameters
accountIdentifier
alternateHLSPlaylistURL
absoluteString
UTF8String
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
onlineSubscriptionKeysRequired
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
assetCacheProvider
allowsAssetCaching
isFileURL
recommendation
UUID
lowercaseString
assetPathExtension
getPlaybackAssetDestinationURL:sharedCacheURL:purgeable:purchaseBundleDestinationURL:assetQualityType:fileName:pathExtension:
path
fileExistsAtPath:isDirectory:
_linkAssetIfNeededAtURL:toDestinationURL:shareCacheURL:
_createOrUpdateDatabaseEntry:loadResult:urlBag:destinationURL:purgeable:
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
preferredMusicLowBandwidthResolution
_rtcReportingServiceIdentifierWithAssetURL:
_rtcReportingMediaIdentifierWithAssetLoadProperties:
storefrontID
URLAssetWithURL:options:
objectForKey:
setFollowUp:
downloadDestinationURL
dataWithPropertyList:format:options:error:
writeToURL:options:error:
host
fileExistsAtPath:
identityKind
initWithModelKind:block:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
setTraits:
setHLSKeyServerURL:
setHLSKeyServerProtocol:
setHLSKeyCertificateURL:
genericObject
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
mpc_addDownloadCompletionHandler:
_prepareAssetForHLSPlayback:loadResult:destinationURL:storeRequestContext:urlBag:identityProperties:
_downloadHLSAssetWhilePlaying:assetLoadProperties:assetLoadResult:destinationURL:sharedCacheURL:storeRequestContext:urlBag:fileUpgradeRecommendation:
playerItemWithAsset:
setVolumeAdjustment:
setMediaKind:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
initWithIdentifiers:
setDelegate:queue:
addOutput:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setAllowedAudioSpatializationFormats:
setPlayerItem:
willBecomeActivePlayerItemHandler
alternateHLSKeyCertificateURL
streamingKeyCertificateURL
alternateHLSKeyServerURL
streamingKeyServerURL
isiTunesStoreStream
audioAssetTypeSelection
audioAssetType
isDownloadedAsset
_emitAudioAssetTypeSelection:
suzeLeaseID
_suzeLeaseMediaType
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
scheme
timeIntervalSinceNow
msv_analyticSignature
analyticsContentType
_getHLSServerDataForLoadResults:bag:keyCertificateURL:keyServerURL:keyServerAdamID:keyServerProtocolType:
streamingKeyAdamID
setStreamingKeyCertificateURL:
setStreamingKeyServerURL:
setStreamingKeyAdamID:
componentsJoinedByString:
initWithPath:
keyServerProtocolType
lastPathComponent
initWithRequestContext:keyStore:delegate:nonreusableTokens:
setAdamID:
setKeyServerURL:
setKeyCertificateURL:
setKeyServerProtocolType:
isRemoteServerLikelyReachable
setBypassCache:
mediaItem
setValue:forProperty:
longLongValue
getKeyStatusForAccountUniqueIdentifier:error:
setRequestOfflineKeys:
addAsset:shouldPreloadKeys:
stringWithString:
appendString:
sharedSessionManager
backgroundSessionConfigurationWithIdentifier:
setAllowsCellularAccess:
setDiscretionary:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
initWithConfiguration:
sessionWithIdentifier:creationBlock:
_downloadHLSAsset:destinationURL:sharedCacheURL:assetLoadProperties:loadResult:storeRequestContext:urlBag:fileUpgradeRecommendation:
enhancedAudioConfiguration
certificateURL
urlForBagKey:
keyServerURL
_keyServerAdamID
preferredMusicHighBandwidthResolution
numberWithLong:
requestWithURL:
setTimeoutInterval:
initWithURLRequest:requestContext:
_hlsDownloadOptionsDictionary:
fileAsset
filePath
fileURLWithPath:
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
_checkDownloadErrorAndValidityOfDownloadedHLSAsset:downloadLocationURL:completion:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
initWithURL:options:
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
linkItemAtURL:toURL:error:
currentStableVariantID
audioFormatForStableVariantID:
audioFormatsDictionary
setAudioFormatsDictionary:
allValues
bitrate
bitDepth
sortedArrayUsingComparator:
setAvailableSortedFormats:
invalidateContentItemAudioFormatInfo
_emitAudioFormatChangeEvent
_updateActiveFormatJustification:
mpc_setupWithPlayerAudioFormat:forceSpatial:downloadedAsset:
activeFormat
setActiveFormatJustification:
activeFormatJustification
_audioFormatPreference
numberWithUnsignedInteger:
alternateFormats
audioRoute
explanation
justification
mediaLibrary
itemWithPersistentID:verifyExistence:
itemFromModelObject:
databaseID
personID
universalCloudLibraryID
cloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
playbackError
shouldShowComposer
waitForKeyRenewalsWithCompletionHandler:
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
leaseState
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
supportsRating
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
radio
stationID
stationHash
stationStringID
lyrics
text
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfo
_startTime
_stopTime
_bookmarkTime
addEntriesFromDictionary:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
setupWithPlaybackInfo
userRating
_updateAudioFormatInfoForContentItem:
traits
setSongTraits:
itemType
hasLoadedValueForKey:
setAlbumTraits:
playlist
setPlaylistTraits:
nowPlayingAudioFormat
setPreferredFormat:
setActiveFormat:
nowPlayingAudioRoute
setAudioRoute:
setFormatTierPreference:
msv_map:
setAlternativeFormats:
isItemAuthorized:
msv_errorByUnwrappingDomain:
isHomeSharingLibrary
errorResolverForItem:
initWithErrorResolver:
setResolutionHandler:
resolveError:
_unwrapPlaybackError:
didReceiveFairPlayError:
setShouldPreventLeaseAcquisition:
specificAccountWithDSID:
initWithIdentity:
setReason:
performWithResponseHandler:
setWithObjects:
valuesForProperties:
removeAllKeys
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
includeContentItemDebugFields
privateListeningStateSource
currentValue
boolValue
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
controllerWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
assetAdamID
reportingAdamID
artworkCatalog
equivalencySourceAdamID
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
shouldReportPlayEventsToStore
_isPrivateListeningEnabled
isSiriInitiated
trackInfoData
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
contentURI
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
setLastMetadataChangeTime:
observer
didSignificantlyChangeItem:
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
isFirstResponse
_currentPlaybackRate
_updateDurationSnapshotWithElapsedTime:playbackRate:
newOperationWithResponseHandler:
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
deviceMediaLibraryWithUserIdentity:
invalidateContentItemDeviceSpecificUserInfo
explicitBadge
setExplicitBadge:
object
currentDeviceInfo
isWatch
isNetworkConstrained
isCurrentNetworkLinkExpensive
preferredVideoHighBandwidthResolution
preferredVideoLowBandwidthResolution
isAudioAccessory
isAppleTV
disableAssetCaching
setLoudnessInfo:
mediaKind
loudnessInfoVolumeNormalization
preferredMaximumResolution
setPreferredMaximumResolution:
preferredPeakBitRate
setPreferredPeakBitRate:
audioFormatPreference
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
_storeUbiquitousIdentifier
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
setBookmarkTime:
setHasBeenPlayed:
sharedUbiquitousPlaybackPositionController
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
playbackPosition
postNotificationName:object:
updatePlayerItemMetadata
radioStation
rtcIdentifiersFromUniversalIdentifiers:
rtcIdentifiersFromRadioIdentifiers:
identifierStringFromItemIdentifiers:radioIdentifiers:
isRedownloadable
isNonPurgeable
playerServiceNameWithPlayerID:
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
userSkippedPlayback
keySpace
extraAttributes
dataValue
hasInflightLeaseAcquisition
shouldPreventPlayback
codec
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
channelLayout
pauseAutomaticKeyRenewal
resumeAutomaticKeyRenewal
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
updateAudioFormatsDictionary:
updatePreferredFormat:
configureAVPlayerItemWithAudioFormat:forceSpatial:
mediaItemNeedsLoading
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
prefersSeekOverSkip
setRating:
stationName
stationProviderID
supportsLikedState
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
nowPlayingInfoCenter:lyricsForContentItem:completion:
_applyLoudnessInfo
analyticsFormatType
pauseContentKeySession
resumeContentKeySession
leasePlaybackPreventionState
preferredAudioAssetTypeSelection
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
setSiriInitiated:
setRadioStreamPlayback:
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
setPlayerID:
setEventStream:
setAlternateFormats:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingServiceIdentifier
_identityPropertySet
_contentKeySession
_hlsDownloadURLSession
_hlsDownloadURLRequest
_genericObjectLock
_mediaItemNeedsLoading
_tempFileURLToCleanup
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_hlsAsset
_downloadedAsset
_leasePlaybackPreventionState
_leaseStatus
_audioFormatsDictionary
_preferredAudioAssetType
_preferredAudioAssetTypeSelection
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_playerID
_eventStream
_preferredFormat
_activeFormat
_activeFormatJustification
_alternateFormats
_availableSortedFormats
_audioRoute
_loadedAudioAssetType
T@"NSDictionary",C,N,V_audioFormatsDictionary
T@"NSArray",&,N,V_availableSortedFormats
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
T@"NSString",C,N,V_assetSourceStoreFrontID
Tq,N,V_equivalencySourceAdamID
T@"MPModelGenericObject",&,N,V_genericObject
T@"NSData",R,C,N,V_jingleTimedMetadata
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
Tq,N,V_stationItemLikedState
T@"NSDictionary",&,N,V_trackInfo
T@"NSData",R,N
T@"MPGaplessInfo",R,N
T@"NSString",&,N,V_playerID
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
T@"MPCPlayerAudioFormat",&,N,V_preferredFormat
T@"MPCPlayerAudioFormat",&,N,V_activeFormat
Tq,N,V_activeFormatJustification
T@"NSArray",&,N,V_alternateFormats
T@"MPCPlayerAudioRoute",&,N,V_audioRoute
Tq,R,N,V_preferredAudioAssetType
T@"MPCAudioAssetTypeSelection",R,N,V_preferredAudioAssetTypeSelection
Tq,R,N,V_loadedAudioAssetType
hlsAsset
TB,R,N,GisHLSAsset,V_hlsAsset
downloadedAsset
TB,R,N,GisDownloadedAsset,V_downloadedAsset
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
asset
_asset
_completionHandler
T@"AVURLAsset",R,W,N,V_asset
T@?,C,N,V_completionHandler
attributesOfItemAtPath:error:
fileModificationDate
fileCreationDate
stopDiscovery
_discoverAirplayDevices:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
waitForCompleteClusters
setWaitForCompleteClusters:
_reconSession
_waitForCompleteClusters
TB,N,V_waitForCompleteClusters
identityStore
initWithIdentityProperties:delegatedIdentityProperties:
getPropertiesForUserIdentity:completionHandler:
identityPropertySetFromRequestContext:completion:
setIdentityProperties:
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
setOffline:
modelSong
displayType
visibleDuration
activeAccountRequestEnvironment
setIdentityPropertiesLoader:
setItemGenericObject:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
lyricsID
setLyricsID:
newPlayActivityEvent
setEventType:
setItemEndTime:
displayedCharacterCount
setLyricsDisplayedCharacterCount:
language
setLyricsLanguage:
sourceType
setSourceType:
setDisplayType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
reportingPlaybackObserver
setReportingPlaybackObserver:
_reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
_containerIndex
_itemIndex
executeWithUIDs:action:volumeValue:completion:
containsUID:
connectToEndpoint:completion:
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
dateWithTimeIntervalSince1970:
stringFromDate:
streamID
mainBundle
infoDictionary
payload
subscribeToEventType:handler:
findPreviousEventWithType:matchingPayload:
durationSinceEvent:
compare:
isRoot
uuid
version
integerValue
stringWithCapacity:
_logAccountEvent:subscription:cursor:
unsignedIntValue
stringByReplacingOccurrencesOfString:withString:
enumerateKeysAndObjectsUsingBlock:
dateWithTimeIntervalSinceReferenceDate:
msv_compactDescription
statusCode
localizedTitle
localizedMessage
actions
msv_description
componentsSeparatedByString:
reverseObjectEnumerator
humanDescription
dateByAddingTimeInterval:
enumeratePreviousEventsWithTypes:usingBlock:
timeIntervalSinceDate:
allKeys
intValue
string
appendFormat:
settingWithPreset:
findPreviousEventWithTypes:matchingPayload:
serverID
externalIdentifier
containsObject:
subscribeToEventStream:
unsubscribeFromEventStream:
T@"NSString",R,C,N
subscription
lastTimeControlStatusEvent
setLastTimeControlStatusEvent:
_chartState
_chartStatus
_subscription
_lastTimeControlStatusEvent
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
T@"MPCPlaybackEngineEvent",&,N,V_lastTimeControlStatusEvent
infoCenterForPlayerID:
playbackQueueDataSource
implementation
describePlayer:
sharedServerObjectDatabase
initWithRequest:serverObjectDatabase:
trustProvider
sectionedModelObjects
delegationProperties
userIdentity
defaultIdentityStore
DSIDForUserIdentity:outError:
array
sharedRestrictionsMonitor
allowsExplicitContent
needsPersonalization
preferredStoreStringIdentifierForPersonID:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
storeIDs
_resolveContentDescriptorsUsingServerObjectDatabase
genericObjectWithModelObject:
copyWithPropertySet:
setPlaceholder:
copyWithBlock:
copyWithIdentifiers:
initWithModel:personalizationStyle:
setWithCapacity:
copyWithIdentifiers:propertySet:
_eligibilityForItem:
countForObject:
_playlistEntryForObject:containerUniqueID:
totalItemCount
playbackPrioritizedIndexPaths
isPlaceholder
allStoreItemDictionaries
initWithPayload:
_userIdentityWithRequest:
setUserIdentity:
importObjectsFromRequest:options:trustID:error:
_isFatalError:
lastBatchItemIdentifiers
storeItemMetadataForItemIdentifier:
_addEquivalencyForMetadata:requestStoreIdentifier:
isFinalResponse
removeAllObjects
performanceMetrics
networkingTimeFromMetrics:
accumulatorResult
response
initWitDatabaseImportResult:accumulatorImportResult:
clientIdentifier
setClientIdentifier:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
indexOfObject:
objectAtIndex:
removeObjectAtIndex:
addObjectsFromArray:
setClientInfo:
setDelegatedUserIdentity:
setUserIdentityStore:
_createMusicKitRequestContext
setCollectionPlaybackAuthorizationToken:
initWithItemIdentifiers:personID:requestContext:sparseRequest:trustProvider:
initWithStoreID:collectionType:requestContext:
initWithItemIdentifiers:personID:requestContext:trustProvider:
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
playlistEntry
storeIDsToPlaybackAuthorizationTokensMap
modelGenericObjectFromObject:playbackAuthorizationToken:
_addPendingChildItem:identifiers:atSectionIndex:collectionPlaybackAuthorizationToken:requestType:
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
setContainerUniqueID:
kindWithKinds:
unionSet:
setMovie:
setTvEpisode:
indexSet
orderedSet
_serverObjectFromPlaceholderContentDescriptor:propertySet:
indexPathWithIndex:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
addIndex:
replaceSectionsUsingBlock:
_updatedModelObjectFromOriginalObject:sectionPlaybackAuthorizationToken:itemSectionIndex:
replaceItemsUsingBlock:
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
insertSection:atIndex:
moveItemFromIndexPath:toIndexPath:
shiftIndexesStartingAtIndex:by:
relatedIdentifierSetsForParentIdentifierSet:childKey:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
versionHash
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
modelObjectMatchingIdentifierSet:propertySet:trustID:
insertItem:atIndexPath:
enumerateIndexesUsingBlock:
minusSet:
setSubscriptionAdamID:
setUniversalCloudLibraryID:
setUniversalStoreIdentifiersWithBlock:
setPersonalStoreIdentifiersWithPersonID:block:
orderedSetWithObject:
setGlobalPlaylistID:
setStationStringID:
setRadioIdentifiersWithBlock:
indexAtPosition:
mergeWithObject:
identityAllowingDelegation:
initWithRequest:
unpersonalizedContentDescriptors
handleResponse:error:
handleMediaAPIResponse:trustID:isFinalResponse:
newStoreItemMetadataRequest
newMediaAPICollectionItemMetadataRequestInfo
equivalencyMapping
lastBatchNetworkingTime
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_storePersonalizationStyle
_sectionIndexToCollectionItemMetadataRequestMap
_sectionIndexToCollectionItemAuthTokenRequestMap
_sectionIndexToTokenRenewalRequestMap
_storeIDToCollectionMetadataRequestMap
_pendingCollectionMetadataRequests
_pendingCollectionItemMetadataRequests
_pendingCollectionItemTokenRenewalRequests
_pendingCollectionItemAuthorizationTokenRequests
_trustProvider
_progressiveContentDescriptors
_lastBatchNetworkingTime
T@"NSDictionary",R,C,N,V_equivalencyMapping
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N
Td,R,N,V_lastBatchNetworkingTime
sectionProperties
sectionKind
modelClass
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
propertySetWithProperties:
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:firstResponse:finalResponse:
setFirstResponse:
setFinalResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_firstResponse
_finalResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
firstResponse
TB,N,GisFirstResponse,V_firstResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSData",C,N,V_adamIDData
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
T@"NSArray",C,N,V_artworkDictionaries
_contextWithEvent:
sharedAnalytics
monotonicTime
logEventWithType:machAbsoluteTime:context:
cursorUntilEvent:
countOfPreviousEventsWithType:matchingPayload:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
analyticsFormatInfo
_handleAssetLoadEnd:cursor:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
responseClass
T@"MPCPlayerPath",R,N
T{?=qq},R
T@"MPPropertySet",R,N
T@"NSString",R,N
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
T@"MPCPlayerPath",&,N,V_playerPath
T@"MPPropertySet",C,N,V_sessionProperties
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builder
chain
initWithModelGenericObject:indexPath:response:
builderProtocol
_items
_controller
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
T@"MPCMediaRemoteController",R,N,V_controller
T@"MPSectionedCollection",R,N,V_items
_cloudID
_delegateInfoID
_purchaseHistoryID
_storeAdamID
_storeSubscriptionAdamID
_cloudUniversalLibraryID
_contentItemID
_playbackAuthorizationToken
_registerForCommandHandlersRegisteredNotification
isSystemMusicApplication
initWithMachServiceName:
anonymousListener
resumeIfNeeded
commandHandlersRegistered
resume
endpoint
_nowPlayingWithItem:
itemForContentItemID:
msv_compactMap:
modelObject
setContentItemID:
copyWithIdentifiers:block:
initWithModelObject:
displayIndexForContentItemID:
displayCount
artworkIdentifier
nowPlayingWithItem:audioFormat:itemIdentifier:artworkIdentifier:index:count:
contentItemIDAtIndex:
playItemInQueueCommand
isSupportedAndEnabled
newCommandEventWithCommandType:options:
serverCopy
setFittingSize:
requestImageWithCompletion:
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_timeSnapshotWithElapsedTime:rate:
playbackContexts
setQueueEndAction:
currentConnection
auditToken
hasSuffix:
setPlaybackQueueCommand
setActionAfterQueueLoad:
initWithPlaybackContext:
setReplaceIntent:
initWithCommand:playbackQueue:
_appendPlaybackContexts:completion:
_prependPlaybackContexts:completion:
lastObject
insertIntoPlaybackQueueCommand
initWithCommand:playbackQueue:options:
removeLastObject
playCommand
newCommandEvent
isEnabled
isSupported
pauseCommand
pauseWithFadeDuration:
changePlaybackPositionCommand
newCommandEventWithPositionTime:
reshuffleCommand
seekForwardCommand
seekBackwardCommand
newSeekCommandEventWithType:
changeRepeatModeCommand
newCommandEventWithType:
currentRepeatType
changeShuffleModeCommand
currentShuffleType
changePlaybackRateCommand
newCommandEventWithPlaybackRate:
allowsQueueModifications
setAllowsQueueModifications:
publishIfNeeded
removedItemIdentifiers
removeContentItemID:completion:
insertedDescriptors
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
addPlaybackContext:afterContentItemID:completion:
setDisableAutomaticCanBeNowPlaying:
setHasTimeSnapshot:
setTimeSnapshot:
_applyServerStateUpdateRecord:
setNowPlaying:
setHasNowPlaying:
setQueueDidChange:
_addContentItemIDsToUpdateRecord:
matchesStartItem:
queueDescriptor
setQueueDescriptor:
setHasQueueDescriptor:
autoPlayEnabled
setHasRepeatMode:
setRepeatMode:
setHasShuffleMode:
setQueueDidEnd:
setItemDidEnd:
setAudioFormatDidChange:
processIdentifier
skipWithBehavior:
reshuffle
beginSeekWithDirection:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
interfaceWithProtocol:
setExportedInterface:
performQueueModifications:completion:
prerollWithCompletion:
beginPlaybackAtHostTime:
getNowPlayingsForContentItemIDs:reply:
exportedInterface
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
remoteObjectInterface
protocol
proxyWithObject:protocol:
setExportedObject:
applyServerStateUpdateRecord:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
setRemoteObjectInterface:
integerForKey:
_handleCommandHandlersRegistered:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
setHasContentItemIDs:
setContentItemIDs:
remoteObjectProxy
listener:shouldAcceptNewConnection:
isRunning
startServer
stopServer
systemCache
listener
activeConnections
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_resumed
_systemCache
_listener
_activeConnections
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
T@"NSXPCListener",R,N,V_listener
T@"NSMutableArray",R,N,V_activeConnections
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
mediaRemoteOptions
command
mediaRemoteCommandType
initWithCommand:mediaRemoteType:options:
isLiveRadioStream
prefersHighQualityContent
predicateWithFormat:
radioStreamAssetInfoList
filteredArrayUsingPredicate:
flavor
sortUsingComparator:
streamURL
setAssetURL:
keyCertificateURL
setITunesStoreStream:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
streamProtocol
setIsHLSAsset:
hlsAssetInfo
keyServerAdamID
allowsHLSContent
playlistURL
alternatePlaylistURL
setAlternateHLSPlaylistURL:
alternateKeyServerURL
setAlternateHLSKeyServerURL:
alternateKeyCertificateURL
setAlternateHLSKeyCertificateURL:
setAllowsAssetCaching:
setAssetPathExtension:
setAssetQualityType:
fileAssetInfoList
flavorType
fileExtension
setOnlineSubscriptionKeysRequired:
fairPlayInfoList
purchaseBundleSinfDictionary
setPurchaseBundleDictionary:
protectionType
setAssetProtectionType:
setSuzeLeaseID:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
setAudioAssetType:
setSource:
descriptionDictionary
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
setDownloadedAsset:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isHLSAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_keyServerProtocolType
_streamingKeyAdamID
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
_audioAssetType
_source
TB,N,V_allowsAssetCaching
TB,N,V_allowsAssetInfoCaching
T@"NSString",C,N,V_assetPathExtension
Tq,N,V_assetProtectionType
Tq,N,V_assetQualityType
T@"NSURL",C,N,V_assetURL
TB,N,V_isHomeSharingAsset
TB,N,V_isHLSAsset
TB,N,V_isCloudStreamingAsset
TB,N,V_onlineSubscriptionKeysRequired
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSDictionary",C,N,V_purchaseBundleDictionary
T@"NSURL",C,N,V_streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_streamingKeyAdamID
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
T@?,C,N,V_willBecomeActivePlayerItemHandler
T@"NSString",C,N,V_playbackAuthorizationToken
Tq,N,V_audioAssetType
TB,N,GisDownloadedAsset,V_downloadedAsset
Tq,N,V_source
setStoreAccountID:
localStoreAccountProperties
setStoreFrontID:
cloudServiceStatusControllerWithUserIdentity:
musicSubscriptionStatus
hasCapability:
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
T@"MPCReportingDeviceIdentityPropertiesLoader",R,N
_calloutQueue
_serialWorkQueue
staticAssets
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
tracks
requiredMediaClipProperties
rtcReportingAssetType
initWithMediaClip:
supportsRateChange
_modelGenericObject
_mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
_updateSupportedCommands
remoteCommandCenter
setWantsSerializedEventDelivery:
nowPlayingInfoCenter
setPlaybackQueueDataSource:
initWithSuiteName:
_durationAvailableNotification:
_likedStateChangedNotification:
_commandEventDidTimeoutNotification:
_updateLaunchCommands
becomeActive
systemRoute
pathWithRoute:mediaRemotePlayerPath:isResolved:
isEngineRestoringState
isStarted
isQueueHandoffSupported
accountManager
hasLoadedInitialAccounts
hasInitializedSupportedCommands
_performCommandEvent:completion:
setUnsupportedReasons:
hasTargets
removeTarget:action:
addTarget:action:usingExtendedStatus:
stopCommand
togglePlayPauseCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
setTimeout:
setPlaybackSessionCommand
prepareForSetPlaybackQueueCommand
setSkipSerializedEventDelivery:
clearUpNextQueueCommand
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
changeQueueEndActionCommand
likeCommand
mediaPlaybackCoreBundle
localizedStringForKey:value:table:
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
setInitializedSupportedCommands:
boolForKey:
getPendingCommandTypesWithCompletion:
isInSharedListeningMode
sessionManager
stateRestorationSessionIdentifier
loadSessionWithIdentifier:completion:
musicTotalTime
nextItemWaitTime
setLastPlayPerformanceTime:
invalidatePlaybackQueue
setPlaybackState:
setCurrentRepeatType:
setCurrentShuffleType:
setCurrentQueueEndAction:
isEqualToArray:
isActiveAccount
hasCatalogPlaybackCapability
requiresAuthorizationTokenForPlayback
startDate
token
endDate
setModelSong:
setVisibleDuration:
reportingController
containsCommand:
commandID
delegate
engine:prepareForActivationWithCompletion:
initWithDeallocHandler:
engine:didFailToActivateWithError:resolution:
activationDelay
contextID
fallbackPlaybackIntent
containsTransportableContent
isCurrentItemFromAutoPlay
accountForDSID:
hasCloudLibraryEnabled
hashedDSID
setEnabled:
_supportedSessionTypes
disableQHO
setSupportedSessionTypes:
preloadPlaybackSessionCommand
updateLaunchCommandsWithConfigurationHandler:
setCurrentPlaybackSessionIdentifier:
setCanBeControlledByScrubbing:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setDisabledReasons:
supportsFastForward
supportsRewind
canPreviousTrackForItem:reason:
canNextTrackForItem:reason:
isTailPlaceholder
createRadioStationCommand
reorderQueueCommand
removeFromPlaybackQueueCommand
canUserChangeRepeatTypeWithReason:
advanceRepeatModeCommand
canUserChangeShuffleModeWithReason:
shuffleType
advanceShuffleModeCommand
canUserEnableAutoPlayWithReason:
setSupportedQueueEndActions:
supportedInsertionPositions
setSupportedInsertionPositions:
_exportableSessionTypes
setExportableSessionTypes:
stagedQueueControllerIdentifiers
queueControllerForIdentifier:
revisionString
commandInfoWithIdentifier:revision:priority:
setPriorityForPlaybackSessionCommand
setPreloadedSessions:
discardPlaybackSessionCommand
stationAllowsItemLiking
setPresentationStyle:
likedState
setActive:
setStatusBlock:
configureWithModelObject:
ratingCommand
leaveSharedPlaybackSessionCommand
shareQueueCommand
debugCommand
_performDebugEvent:completion:
setSupportedSubsystems:
setSubsystemRevisions:
_debugCommandDescriptions
accountForUserIdentity:
statusType
_isRestrictedSubscriptionUser:
statusWithCode:
dataUsingEncoding:
statusWithCode:customData:type:
isCurrentDeviceValidHomeAccessory
initWithUUIDString:
userMonitorWithHomeIdentifier:
unarchivedObjectOfClasses:fromData:error:
privateListeningEnabledForGroupWithRouteIDs:
isNegative
stringByAppendingFormat:
interfaceID
analyticSignature
isMediaServerAvailable
setCanStealLeaseIfNeeded
_enqueueFallbackIntentIfNeededForCommandEvent:play:completion:
_becomeActiveIfNeededWithCompletion:
defaultMediaLibrary
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
firstContentItemIDForItemIntersectingIdentifierSet:
setContainedPersistentID:
canJumpToContentItemID:reason:
jumpToContentItemID:userInitiated:
isRequestingDefermentToPlaybackQueuePosition
playbackInfoStartTime
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
jumpToFirstContentItem
positionTime
playbackQueue
_canInsertPlaybackContext:forUser:
privateListeningOverride
setPrivateListeningOverride:
T@"NSNumber",C,N
setSiriReferenceIdentifier:
insertionPosition
insertAfterContentItemID
allowsJumpToIt
startItemIdentifiers
insertBeforeContextItemID
moveContentItemID:beforeContentItemID:completion:
insertAfterContextItemID
moveContentItemID:afterContentItemID:completion:
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
queueEndAction
setAutoPlayEnabled:
preservesQueueEndAction
setAutoPlayEnabled:forUserIdentity:
prepareForPlaybackWithAccount:completion:
replaceIntent
verifyWithError:
hasUserMutations
supportsAccountRectification
setPlaybackRequestEnvironment:
T@"MPCPlaybackRequestEnvironment",C,N
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
_homeAccessorySettingsPrivateListeningOverride:
sessionIdentifierOverride
setSessionIdentifier:
shouldBecomeActive
stationURL
radioPlaybackIntentWithStationURL:
setPlayActivityFeatureName:
isRequestingPlaybackInitialization
_playbackStateIsIdle:
radioPlaybackIntentFromSong:
addPlaybackContext:atPosition:completion:
playbackSessionData
decodedObjectOfClass:fromData:error:
_emitEventsForPlaybackBehaviorChange
infoCenter
invalidatePlaybackQueueWithCompletion:
finalizeStateRestorationWithCompletion:
playbackSessionDataFilePath
dataWithContentsOfURL:
stageQueueController:forIdentifier:
priority
unstageQueueControllerForIdentifier:
durationIsValid
durationInSeconds
interval
setLikedState:forUserIdentity:
rating
kindWithVariants:
currentStatus
setModelObject:
setShouldLibraryAdd:
setModelObjects:
clearUpNext
playbackRate
leaveSharedSessionWithCommandID:completion:
setTracklistToken:
setTracklistSource:
payloadValueFromJSONValue:
sessionIdentifier
buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:
_getSharedQueueTracklistWithCompletion:
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
updatePlaybackMetrics:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
setEngineRestoringState:
setMediaServerAvailable:
lastPerformanceMetrics
setLastPerformanceMetrics:
_libraryAddStatusObserver
_libraryAddStatusObserverLock
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountRequiresAuthorizationTokensForPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_nextPreviousTrackCooldownTimer
_deferredTrackChangeDelta
_lastCommandDescriptions
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
_lastPerformanceMetrics
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
T@"MPCPlayPerfMetrics",&,N,V_lastPerformanceMetrics
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
isPlaceholderItemForContentItemID:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
updateLocationDependentPropertiesForItem:
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setCompletedUnitCount:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:userInfo:error:
responseWithIdentifier:sessionType:data:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
substringToIndex:
requestedProperties
initWithRequestedProperties:
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:userIdentity:
storeAdamID
formerStoreAdamIDs
setFormerAdamIDs:
offerWithType:
accountDSID
setTrackNumber:
setTrackCount:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
fileAssetEvaluation
fileIsValid
fileMatchesRequiredQuality
fileIsHLS
purchaseBundleFilePath
initWithContentsOfFile:
propertyListWithData:options:format:error:
fileURLWithPath:isDirectory:
pathExtension
qualityType
hlsKeyServerURL
URLWithString:
hlsKeyCertificateURL
hlsKeyServerProtocol
fileAssetType
fileIsDownloaded
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_fileAssetEvaluation
_responseHandler
T@"MPCModelGenericAVItemAssetLoadProperties",R,N,V_assetLoadProperties
T@"MPCAssetLoadPropertiesLocalFileEvaluation",R,N,V_fileAssetEvaluation
TB,N,V_requirePreferredAssetQuality
T@?,C,N,V_responseHandler
bundleWithIdentifier:
getRemotePlaybackQueueRepresentationWithCompletion:
musicShuffleType
itemKind
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
setLabel:
playActivityFeatureName
playActivityQueueGroupingID
mpc_protoContainerRepresentation
intersectsSet:
mpc_protoItemRepresentation
addDelegationUUIDs:forUserIdentity:completionHandler:
currentDeviceDelegateInfo
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
playActivityRecommendationData
initWithData:encoding:
setSiriRecommendationIdentifier:
seedContentReference
ICRadioContentReference
nowPlayingContentReference
originalIdentifierSet
globalPlaylistID
cloudVersionHash
shouldExcludeFromShuffle
_initWithMediaLibrary:
_persistentIDForModelObject:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
_downloadedAssetDestinationDirectoryForMediaLibrary:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
cloudAssetsSharedCacheFolderPath
ml3Library
autoupdatingSharedLibrary
pathForResourceFileOrFolder:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProviderWithUserIdentity:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
deviceGUID
deviceName
systemReleaseType
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
setPlayActivityRecommendationData:
queueGroupingID
setPlayActivityQueueGroupingID:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
archivedDataWithRootObject:requiringSecureCoding:error:
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
setExpirationDate:
sharedService
addAssertion:
queueFeederClass
msv_errorWithDomain:code:userInfo:debugDescription:
getRepresentativeMetadataForPlaybackContext:properties:completion:
generateNowPlayingContentItemWithMetadataObject:
nowPlayingInfo
artworkCatalogForMetadataModelObject:
getRepresentativeObjectWithProperties:completion:
firstModelPlayEvent
preferredArtworkSize
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
encodedDataWithRootObject:error:
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
modelPlayEventForItem:inSection:
identifiersForItem:inSection:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
itemDidBeginPlayback:
canJumpToItem:reason:
canSkipItem:reason:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
supportsAutoPlay
setType:
setSessionIdentifier:type:data:
bundleIdentifier
setBundleIdentifier:
setSupportedOptions:
setFallbackStoreIdentifier:
subtitle
setSubtitle:
setArtworkImageData:
initWithBlock:
setDisplayProperties:
setContinueListeningStation:
setSeedContentReference:
referenceWithMPModelObject:
radioPlaybackIntentFromReference:
setRadioStation:
setRadioStationURL:
tracklistSource
number
stringValue
podcast
author
podcastEpisode
radioStationEvent
curator
socialPerson
recordLabel
group
tracksTiledArtworkCatalogWithRows:columns:
editorialArtworkCatalog
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
setQueueGroupingID:
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_startTimeModifications
_endTimeModifications
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_repeatMode
_queueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
T@"<MPCPlaybackIntentDataSource>",R,N
T@"NSString",C,N,V_localizedTitle
Tq,N,V_tracklistSource
T@"<NSSecureCoding>",&,N,V_tracklistToken
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatMode
TB,N,V_prefersEnqueuingUsingAirPlay
T@"NSString",C,N,V_queueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_siriReferenceIdentifier
T@"MPCPlaybackSharedListeningProperties",R,N
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
playbackSessionType
decodedObjectOfClasses:fromData:error:
containsAppleMusicRadioContent
_sessionIdentifier
_sessionKey
T@"NSString",R,N,V_sessionIdentifier
T@"NSString",R,N,V_sessionKey
fileIsCached
fileQualityType
expectedQualityType
expectedAssetType
fileMatchesRequiredFileFormat
initWithFileAsset:
fileShouldBeUpdated
setStatus:
setRecommendation:
setFileMatchesRequiredFileFormat:
setFileMatchesRequiredQuality:
setFileIsDownloaded:
setFileIsCached:
setFileIsHLS:
setFileAssetType:
setExpectedAssetType:
setFileQualityType:
setExpectedQualityType:
_fileMatchesRequiredFileFormat
_fileMatchesRequiredQuality
_fileIsDownloaded
_fileIsCached
_fileIsHLS
_fileAsset
_status
_recommendation
_fileAssetType
_expectedAssetType
_fileQualityType
_expectedQualityType
_filePath
_HLSContentPolicy
Tq,N,V_status
Tq,N,V_recommendation
T@"NSString",C,N,V_filePath
TB,N,V_fileMatchesRequiredFileFormat
TB,N,V_fileMatchesRequiredQuality
TB,N,V_fileIsDownloaded
TB,N,V_fileIsCached
TB,N,V_fileIsHLS
Tq,N,V_HLSContentPolicy
Tq,N,V_fileAssetType
Tq,N,V_expectedAssetType
Tq,N,V_fileQualityType
Tq,N,V_expectedQualityType
T@"MPModelFileAsset",R,C,N,V_fileAsset
_recommendationForEvaluation:assetCachingIsAllowed:userDefaults:
isHLSFileAsset:
_loadedAudioAssetTypeForFileAsset:
_shouldUpgradeCacheOnPlay:assetCachingIsAllowed:
_shouldUpgradeDownloadOnPlay:defaults:
prefersSpatialDownloads
preferredMusicDownloadResolution
_accountInfo
_nowPlayingContentReference
_playActivityQueueGroupingID
_radioStationID
_radioStationURLString
_seedContentReference
setStationHash:
setStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseArray
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
allowsItemLiking
setAllowsItemLiking:
attributionLabel
setAttributionLabel:
setSubtype:
providerResource
setProviderUniversalLink:
setProviderBundleIdentifier:
modelRadioStationForMetadata:userIdentity:
_requestedRadioStationProperties
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
resolvedPlayerPath
isInProcess
playerRequest
initWithName:object:handler:
setPlayerRequest:
_playerRequest
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"MPCPlayerRequest",&,N,V_playerRequest
lastRecordedPlayEvent
meetsPlaybackHistoryThreshold
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
T@"NSOperationQueue",&,N,V_operationQueue
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
initWithMiddleware:
_playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
willChangeValueForKey:
didChangeValueForKey:
callbackQueue
setError:
main
hasLoadableAsset
_configureItem:error:
configureQueuePlayerItem:error:
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
isExecuting
isFinished
_isExecuting
_isFinished
_item
_delegate
_token
_callbackQueue
_error
T@"MPAVItem",R,C,N,V_item
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
Tq,R,N,V_token
T@?,R,C,N,V_completion
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
T@"NSError",&,N,V_error
loadingQueue
cancelAllOperations
loadAssetFor:token:completion:
cancelLoading
_loadingQueue
T@"NSOperationQueue",R,N,V_loadingQueue
artworkProperties
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_artworkIdentifier
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
_urlForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
sharedDataSource
T@"MPCRemotePlayerArtworkDataSource",R,N
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
CGSizeValue
assistantStreamingGetAvailability:
assistantRadioGetAvailability:completion:
hasLoadedRadioAvailability
isRadioAvailable
getRadioAvailabilityWithCompletionHandler:
assistantStreamingGetAvailability
assistantRadioGetAvailability:
objectForInfoDictionaryKey:
initWithBundleIdentifier:allowPlaceholder:error:
shortVersionString
bundleVersion
MPC_storeFrontIdentifierKey
setShouldRequireCachedResults:
defaultInfo
setClientVersion:
setShouldIgnoreExpiration:
sharedStoreItemMetadataRequestController
cacheMissItemIdentifiers
getStoreItemMetadataForRequest:responseHandler:
initWithRequestedPropertySet:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:userIdentity:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
setOverridePlayingItem:
setPlayingItemIndexPath:
overridePlayingItem
playingItemIndexPath
T@"MPModelGenericObject",R,N
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
setPurchasedAdamID:
setCloudAlbumID:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setSeason:
rangeOfString:
performRequest:options:extendedStatusCompletion:
requestWithCommandRequests:
setOptions:
performWithExtendedStatusCompletion:
initWithCommandRequests:
msv_firstWhere:
blockOperationWithBlock:
initWithCommandRequest:options:sendDate:
addDependency:
performRequest:completion:
performRequest:options:completion:
performRequest:extendedStatusCompletion:
performWithCompletion:
commands
setCommands:
_options
_commands
T@"NSArray",&,N,V_commands
TQ,N,V_options
initWithMediaRemoteCommand:options:playerPath:label:
initWithMediaRemoteCommand:options:controller:label:
setCommandOptionValue:forKey:
originalLabel
userInitiatedOptions
setUserInitiatedOptions:
statusTransformer
setStatusTransformer:
_command
_label
_originalLabel
_userInitiatedOptions
_statusTransformer
T@"NSString",R,C,N,V_originalLabel
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
T@?,C,N,V_statusTransformer
T@"NSString",C,N,V_label
dependencies
msv_errorByUnwrappingDomain:code:
sendCommand:options:completion:
sendCommand:options:toPlayerPath:completion:
resolveWithRouteResolvedHandler:completion:
sendDate
_sendDate
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
T@"NSDate",R,N,V_sendDate
T@"MPCPlayerCommandStatus",R,N,V_status
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
isEmpty
arrayByAddingObjectsFromArray:
_stateDumpObject
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_userIdentity
_tracklistRange
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
TB,N,V_disablePlaybackStateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T@"ICUserIdentity",&,N,V_userIdentity
T{?=qq},N,V_tracklistRange
initWithResponse:
_commandRequestForMediaRemoteCommand:
createSharedSessionWithIdentity:intentHandler:
mpc_jsonValue
customDataType
customData
componentsWithString:
queryItems
value
createSharedSessionWithIntentHandler:
leaveSession
participants
isSharedListeningSession
videoView
setVideoView:
videoOutput
setVideoOutput:
_sharedListeningSession
_state
_participants
_videoView
_videoOutput
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
T@"NSArray",R,N,V_participants
sharedListeningSession
TB,R,N,GisSharedListeningSession,V_sharedListeningSession
initWithPlayerPath:
_response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
decodeBoolForKey:
encodeBool:forKey:
setNowPlayingContentReference:
setStationURL:
continueListeningStation
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
continueListeningQueueProvider
setContinueListeningQueueProvider:
stationPlaybackAuthorizationToken
setStationPlaybackAuthorizationToken:
descriptionComponents
requestEnvironmentWithUserIdentity:
overrideValue
setOverrideValue:
T@"ICUserIdentity",C,N
_continueListeningStation
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_stationURL
_stationPlaybackAuthorizationToken
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
TB,N,V_continueListeningStation
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
Tq,N,V_continueListeningMaxQueueReferences
Tq,N,V_continueListeningPrefetchThreshold
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
msv_enumerateKeysAndObjectsOrderedByKeyComparator:usingBlock:
stationEventID
setDateFormat:
_sendReportForSessionSummary:event:withType:
_sendReportForItemSummaryWithEndReason:cursor:event:
_sendReportForSessionStart:event:withType:
_handleReportingForItemStartEvent:event:
_sendReportForItemSummary:event:
_payloadForQueueLoad:fromQueueLoadEndEvent:
_sendOneMessageWithToken:serviceName:category:type:payload:
_sendSessionStartIfNeeded:forItemEvent:
_sendQueueLoadEventIfNeeded:forItemEvent:
_sendReportForItemAssetLoad:event:
_payloadForSessionSummary:fromEvent:
playbackSessionRTCSession
_sendReportWithSession:category:type:payload:
_payloadForSessionStart:fromEvent:
cursorFromEvent:untilEvent:
dateFormatter
setPlaybackSessionRTCSession:
_generateConfiguredReportingSessionWithToken:serviceName:completion:
setPlaybackQueueRTCSession:
_payloadForItemAssetLoad:fromItemEvent:
setPlaybackItemRTCSession:
_payloadForItemSummary:fromEvent:
playbackItemRTCSession
_tapToPlayMetrics:fromItemStartEvent:
_itemWasPreviouslyLoaded:cursor:
_updateAssetLoadInfoEvent:fromAssetLoadEndEvent:cursor:
_mediaIdentifierFromItemAssetLoadEndEvent:cursor:
_itemAssetTypeFromItemAssetLoadEvent:cursor:
_reasonForEndEvent:cursor:
_payloadForItemSummary:fromItemEvent:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
countOfPreviousEventsWithTypes:matchingPayload:
insertObject:atIndex:
containsString:
_itemStartIncitingEvent:fromItemStartEvent:
arrayWithObjects:
isValidJSONObject:
dataWithJSONObject:options:error:
previousItemEventWithCursor:type:
monotonicDate
_rtcSessionInfoWithToken:
_rtcUserInfoWithServiceName:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
processInfo
processName
performOnPayload:withCategory:type:
sendMessageWithCategory:type:payload:error:
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
NSStringFromMPCRTCReportingEventCategory:
setTestingDelegate:
testingDelegate
playbackQueueRTCSession
_rtcGroup
_rtcQueue
_testingDelegate
_playbackSessionRTCSession
_playbackQueueRTCSession
_playbackItemRTCSession
T@"RTCReporting",&,V_playbackSessionRTCSession
T@"RTCReporting",&,V_playbackQueueRTCSession
T@"RTCReporting",&,V_playbackItemRTCSession
T@"<MPCRTCEventConsumerTestingDelegate>",W,N,V_testingDelegate
setIdentifier:
endWithIdentifier:error:
initWithIdentifier:timeout:
beginWithIdentifier:
endWithError:
endWithIdentifier:item:machContinuousTime:
instanceMethodForSelector:
initWithIdentifier:
begin
endWithItem:
endWithItem:machContinuousTime:
TQ,N,V_identifier
startFrame
setStartFrame:
endFrame
setEndFrame:
iterations
setIterations:
_startFrame
_endFrame
_iterations
Tq,N,V_startFrame
Tq,N,V_endFrame
Tq,N,V_iterations
setVersion:
frameRate
setFrameRate:
scenes
setScenes:
_version
_frameRate
_scenes
T@"NSString",C,N,V_version
Td,N,V_frameRate
T@"NSArray",C,N,V_scenes
_sharedInitWithItem:
_createSceneCollectionForAssetWithPreloadedKeys:
assetWithURL:
initWithAsset:sceneCollection:
_executeSceneCollection
playerWithPlayerItem:
setActionAtItemEnd:
addObserver:forKeyPath:options:context:
setExecutingPauseScene:
_updateRateIfNeeded
_advanceScene
player
removeObserver:forKeyPath:
timeObserver
removeTimeObserver:
setCurrentSceneIndex:
setCurrentLoopCount:
isExecutingPauseScene
pauseFinishedBlock
setSceneExecutionPaused:
pauseScenes
_pause
sceneCollection
currentSceneIndex
frameForCMTime:
_CMTimeForFrame:
currentLoopCount
isSceneExecutionPaused
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
isPlayable
metadata
sceneCollectionForMetadataItems:
setSceneCollection:
isScriptedLoopingDisabled
seekToFrameIfNeeded:completionHandler:
setItemDidPlayToEndObserver:
_executeCurrentScene
currentScene
_loopIfNeeded
valueWithCMTime:
addBoundaryTimeObserverForTimes:queue:usingBlock:
setTimeObserver:
restartScenes
setScriptedLoopingDisabled:
scriptedLoopingDisabled
TB,N,GisScriptedLoopingDisabled
initWithURL:sceneCollection:
playScenes
observeValueForKeyPath:ofObject:change:context:
setPauseFinishedBlock:
itemDidPlayToEndObserver
_executingPauseScene
_sceneExecutionPaused
_player
_pauseFinishedBlock
_sceneCollection
_timeObserver
_itemDidPlayToEndObserver
_currentSceneIndex
_currentLoopCount
T@?,C,N,V_pauseFinishedBlock
T@"MPCSceneCollection",&,N,V_sceneCollection
T@,&,N,V_timeObserver
T@"MPNotificationObserver",&,N,V_itemDidPlayToEndObserver
Tq,N,V_currentSceneIndex
Tq,N,V_currentLoopCount
executingPauseScene
TB,N,GisExecutingPauseScene,V_executingPauseScene
sceneExecutionPaused
TB,N,GisSceneExecutionPaused,V_sceneExecutionPaused
T@"AVPlayer",R,N,V_player
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
deleteCharactersInRange:
initWithRequest:responseHandler:
decodeObjectOfClasses:forKey:
isSubclassOfClass:
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
disableImplicitSectioning
setDisableImplicitSectioning:
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
setSectionedModelObjects:
setStoreIDs:
setStoreIDsToPlaybackAuthorizationTokensMap:
setTrustProvider:
setPlaybackPrioritizedIndexPaths:
sharedListeningQueue
setSharedListeningQueue:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_storeIDsToPlaybackAuthorizationTokensMap
_playbackPrioritizedIndexPaths
_sharedListeningQueue
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"ICSharedListeningQueue",&,N,V_sharedListeningQueue
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_allowLocalEquivalencies
T@"NSString",C,N,V_clientIdentifier
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
T@"NSArray",C,N,V_storeIDs
T@"NSDictionary",C,N,V_storeIDsToPlaybackAuthorizationTokensMap
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",C,N,V_trustProvider
T@"MPCPlaybackEngine",&,N,V_playbackEngine
commandRequest
event
initWithMPAction:request:
_action
initWithMPDialog:request:
_dialog
_actions
T@"NSArray",R,N,V_actions
mediaRemoteType
T@"MPRemoteCommandStatus",R,N,V_status
T@"MPCPlayerCommandDialog",R,N,V_dialog
playMetricsWithFirstFrameEvent:cursor:
handleMetrics:
playMetricsWithErrorSignature:event:cursor:
setupErrorHandlerForEventType:errorKey:prefix:
sendMetricsToCoreAnalytics:
eventType
siriRefId
sendMetricsToSiriSelfLogger:
coreAnalyticsEventNameWithEventType:
assetCacheAge
assetLoadWaitTime
assetLocation
assetSource
assetType
avTime
bagWaitTime
errorResolution
errorSignature
firstAudioFrameWaitTime
formatInfo
getTracksWaitTime
hasAccountInfo
leaseWaitTime
lookupWaitTime
mediaRedownloadWaitTime
subscriptionAssetLoadWaitTime
suzeLeaseWaitTime
hlsMetadataWaitTime
isAutoPlayEnabled
isDelegatedPlayback
itemMetadata
isFirstPlay
isRemoteSetQueue
isReplacingPlayback
isSharePlay
isShuffled
mediaPlayerTime
musicWaitTime
networkTime
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
queueType
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfo
sessionActivationWaitTime
setQueueCommandSendTime
subscriptionType
sendMetrics:
_lastSiriReferenceIdentifier
mpc_remoteCommandDialog
statusWithCode:dialog:
localizedDescription
dialogWithTitle:message:
actionWithTitle:type:commandEvent:
addAction:
T@"MPRemoteCommandStatus",R,N
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
equivalencySourceStoreAdamIDForLocalStoreAdamID:
TB,R,N,GisFinalResponse
initWithRequest:personalizationResponse:results:networkingTime:
setInvalidationDate:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
networkingTime
setNetworkingTime:
_invalidationTimer
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
_networkingTime
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
T@"NSDate",C,N,V_invalidationDate
Td,N,V_networkingTime
initWithDomain:code:userInfo:
underlyingErrors
assetSourceStorefrontID
isFollowUp
householdID
setHouseholdID:
_prefersVideoContent
_followUp
_assetSourceStorefrontID
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
_audioAssetTypeSelection
T@"NSString",C,N,V_assetSourceStorefrontID
TB,N,V_prefersVideoContent
T@"MPModelFileAsset",&,N,V_fileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPIdentifierSet",&,N,V_itemIdentifiers
TB,N,V_prefersHighQualityContent
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
T@"NSString",C,N,V_householdID
T@"NSString",C,N,V_storefrontID
Tq,N,V_preferredAudioAssetType
T@"MPCAudioAssetTypeSelection",&,N,V_audioAssetTypeSelection
controllerForPlayerPath:
setControllerFuture:
setController:
initWithMiddleware:playerPath:
_controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
defaultTimeZone
stringFromDate:timeZone:formatOptions:
MSVBase64UUIDString
initWithType:payload:monotonicTime:identifier:
monotonicTimeNanoSeconds
earlierEvent:
timeIntervalSinceEvent:
machAbsoluteTime
_type
_payload
_machAbsoluteTime
_monotonicTime
T{?=QQQQd},R,N,V_monotonicTime
TQ,R,N,V_machAbsoluteTime
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
T@"NSDate",R,N
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
metadataForFormat:
mpc_HLSAVMetadataItemInMetadata:
mpc_synchronousHLSSessionDataWithTimeout:error:
operationsForSessionRequest:
pathByAppendingPlayerIDSuffix:
playerState
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
T@"MPSectionedCollection",&,N,V_queueContentItems
T@"MPSectionedCollection",&,N,V_queueModelObjects
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
T@"NSString",C,N,V_queueIdentifier
Tq,N,V_playerState
_supportedCommands:infoValueForKey:
unsignedIntegerValue
commandInfoForCommand:
isLoading
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
localizedDurationString
editingStyleFlags
auxiliaryNowPlayingInfo
availableLanguageOptions
currentLanguageOptions
initWithNowPlayingInfoAudioFormat:
formatTierPreference
alternativeFormats
initWithNowPlayingInfoAudioRoute:
_mediaRemoteContentItem
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
mpc_isResourceUnavailableError
mpc_isSubscriptionRequiredError
setLastItemUsedForErrorResolution:
failedItemsIdentifiers
MPAVItemForMFPlayerItem:
externalPlaybackRouter
pickBestDeviceRoute
errorLog
lastItemUsedForErrorResolution
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
errorDomain
_notifyObserversForError:item:
hasPerformedErrorResolution
setHasPerformedErrorResolution:
_resolutionForPlaybackError:item:
shouldHandleFirstItemFailure:item:
isUnrecoverableAssetLoadingError:
canHandleFirstItemFailure
isQueueLoadingFailure:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
isFirstItemFailure:item:
isAssetUnavailableFailure:
reportCriticalError:forItem:
setFailedItemsIdentifiers:
setExternalPlaybackRouter:
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
T@"NSString",C,N,VpreferredFirstContentItemID
TB,N,VitemsHavePlayed
cancellationHandler
operationType
subscriptionLeaseSession
_canRetrieveLoadResultsFromMiniSinfWithAssets:
_loadResultsFromServerObjectDatabaseAssetsWithMiniSinf:playbackAuthorizationToken:
_canRetrieveLoadResultsFromServerObjectDatabaseWithAssets:hlsAsset:
_loadResultsFromServerObjectDatabaseAssets:hlsAsset:playbackAuthorizationToken:
setStoreSubscriptionAdamID:
isDelegatedLeaseSession
setStoreCloudID:
setStorePurchasedAdamID:
setCloudUniversalLibraryID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
initWithRequestContext:storeSubscriptionAdamID:
disableMiniSINF
assetsWithMiniSINFsMatchingIdentifierSet:
hlsAssetMatchingIdentifierSet:
assetsMatchingIdentifierSet:
sinfs
miniSINF
initWithFileAssetResponseDictionary:
setExpectedProtectionType:
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
setPlaylistURL:
setKeyServerAdamID:
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
assetExpirationDate
setDialogDictionary:
fileAssets
addCachedResponse:forRequest:
initWithIdentifiers:playbackResponse:
importAssetsFromRequest:error:
_cancellationHandler
_operationType
_requestContext
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
Tq,N,V_operationType
T@"ICStoreRequestContext",C,N,V_requestContext
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
setRequestingBundleIdentifier:
setRequestingBundleVersion:
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
query
setLegacyMediaQuery:
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setStartItemIdentifiers:
startTimes
endTimes
initWithSystemApplicationType:
clientVersion
isPrivate
staticSourceWithValue:
startItemID
storeItemID
playParametersQueue
isLibraryContent
staticEntitiesForPlayParameters:
playbackContextForStoreIDs:staticEntities:radioPlaybackContext:containsStartItem:
startItemPlayParameters
catalogID
itemID
initWithEntities:entityType:
setAllowsJumpToIt:
predicateWithValue:forProperty:
setWithObject:
initWithFilterPredicates:
setGroupingType:
collections
localizedName
playbackArchive
soundCheckEnabled
_equivalencySourceAdamIDForIdentifierSet:
forceLibrarySupplementalContexts
_sectionedModelObjectsRepresentationForSectionedCollection:
firstSection
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
enumerateSectionIdentifiersUsingBlock:
_supplementalLibraryRequest
setSkipEncodingMediaLibraryUniqueID:
playEventWithModelObject:featureName:
indexForItem:
identifierRegistryWithExclusiveAccessReturningInteger:
indexPathForGlobalIndex:
itemAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
modelResponse
identifierSetAtIndex:
identifiersForItemAtIndexPath:
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
_safeStateDumpObject
identifierRegistryWithExclusiveAccess:
isValidForPreviousCount:finalCount:reason:
applyChanges:identifierSetLookupBlock:
applyChanges:itemLookupBlock:
updateSection
_didUpdateToResponse:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
unlock
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
fallbackSectionRepresentation
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
assetStoreFronts
mqf_requiredItemPlaybackProperties
genericObjectType
relationshipKeyForGenericObjectType:
mqf_requiredSectionPlaybackProperties
isEqualToIdentity:inStore:
setModelRequest:
setNeedsReload
enumerateItemIdentifiersUsingBlock:
beginAutomaticResponseLoading
trustID
MPC_consumeSiriAssetInfo:playActivityFeatureName:userIdentity:completion:
weakObjectsHashTable
setFeeder:
playbackInfoForItem:
setPlaybackInfo:
beginBackgroundTaskWithName:expirationHandler:
allowedSectionIdentifiers
setCloudID:
setAllowedSectionIdentifiers:
allowedItemIdentifiers
setAllowedItemIdentifiers:
scopedContainers
setScopedContainers:
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
updatedPlaybackContext
_performRequestUpdate:
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_section
_playbackContext
_representativeMetadataPropertySet
_backgroundTaskIdentifier
_backgroundTasks
_fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
T@"MPModelResponse<MPCModelPlaybackResponse>",R,N,V_response
mpc_identifiersAsJsonValue
initWithRadioStationTracks:
analyticsSignpostsEnabled
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithRequest:personalizationResponse:
initWithStartHandler:
setAnalyticsSignpostsEnabled:
_radioStationTracks
_analyticsSignpostsEnabled
TB,N,V_analyticsSignpostsEnabled
representedObjectResults
setRadioStationTracks:
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
T@"MPSectionedCollection",R,C,D,N
updatePlaybackCoordinator:
playbackContext
originalPlaybackContext
supplementalPlaybackContext
replaceIdentifierRegistry:
containsRestorableContent
msv_userInfo
shouldRequestAdditionalItemsAtTail
_buildPlaceholder
_inLock_buildPlaceholder
_rtcSourceServiceName
isCompatibleWithReplacementContext:incompatibleReason:
_updateRadioStationPlaybackAuthorizationTokenIfNeeded
setTailPlaceholder:
getTailPlaceholderItemAndState:
shouldAddOriginalPlaybackContextAfterReplacement
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
dataSource
setState:
isFrozen
setFrozen:
preferredStartItemIdentifier
rtcSectionHierarchyToken
setRtcSectionHierarchyToken:
stateLock
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_rtcSectionHierarchyToken
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
T{os_unfair_lock_s=I},R,N,V_stateLock
Tq,R,N,V_supplementalPlaybackContextBehavior
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
T@"MPPlaybackContext",R,N,V_playbackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
T@,&,N,V_rtcSectionHierarchyToken
_updateAllowedBundleIdsIfNecessary:
_handleURLBagProviderDidUpdateBagNotification:
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_handleApplicationTerminationEvent:cursor:
dictionaryForBagKey:
valueForKeyPath:
msv_filter:
setEventDate:
setEndReasonType:
setReasonHintType:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:containerBeginEvent:cursor:
setItemStartTime:
setTimedMetadata:
setItemDuration:
_clampTimeValuesForPAFEvent:withDuration:
isSBEnabled
_updatePAFEvent:withSharedListeningInfoFromCursor:
_finalizePAFEvents:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
itemStartTime
itemEndTime
_updatePAFEvent:withAudioChangeEvent:
_generateAggregateNoncatalogEndEventForCursor:
_itemIsPlayingFromQueueSectionIdentifier:itemIdentifier:cursor:
enumeratePreviousEventsWithType:usingBlock:
_getPlaybackDurationForHLSStreamFromStartEvent:toEndEvent:withLimitedCursor:
_generatePlaybackEndEventFromEvent:withQueueSectionIdentifier:itemIdentifier:cursor:
_itemIsPlaceholderFromQueueSectionIdentifier:itemIdentifier:cursor:
setItemType:
_updatePAFEvent:withAccountIdentifier:cursor:
setRepeatPlayMode:
setShufflePlayMode:
setAutoPlayMode:
timeZoneWithAbbreviation:
setEventTimeZone:
setPrivateListeningEnabled:
_updatePAFEvent:withEnqueuerAccountIdentifier:queueAddEvent:cursor:
setMediaType:
setContainerType:
setCloudPlaylistID:
setPlaylistVersionHash:
setContainerIDs:
setRadioAdamID:
radioAdamID
setReportingAdamID:
setItemIDs:
setSBEnabled:
setBuildVersion:
systemTimeZone
setEnqueuerProperties:
isDebug
hasPrefix:
setBuildFeatures:
setBitDepth:
setBitRate:
audioChannelLayoutDescription
setChannelLayoutDescription:
setCodec:
isMultiChannel
setSpatialized:
setTargetedAudioQuality:
setProvidedAudioQuality:
setAudioQualityPreference:
setPlaybackFormatPreference:
setSharedActivityGroupSizeCurrent:
setSharedActivityGroupSizeMax:
numberForBagKey:
endReasonType
reasonHintType
containerType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
radioPlayActivityEvents
playActivityController
_allowedBundleIds
_radioPlayActivityEvents
_playActivityController
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
T@"ICPlayActivityController",R,N,V_playActivityController
_cloudCollectionID
_storePlaylistGlobalID
_storePlaylistVersionHash
_init
initWithQueue:
setDebugLabel:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
shouldOverrideManuallyCuratedQueue
shouldImmediatelyStartPlayback
siriRecommendationID
homeKitUserIdentifier
initWithContextID:
createRemotePlaybackQueue
supportedOnCurrentPlatform
setShouldOverrideManuallyCuratedQueue:
setShouldImmediatelyStartPlayback:
setSiriRecommendationID:
setHomeKitUserIdentifier:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_homeKitUserIdentifier
T@"NSString",R,C,N,V_contextID
TB,N,V_shouldOverrideManuallyCuratedQueue
TB,N,V_shouldImmediatelyStartPlayback
T@"NSString",C,N,V_siriRecommendationID
T@"NSString",C,N,V_featureName
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"ICUserIdentity",C,N,V_userIdentity
T@"NSString",C,N,V_homeKitUserIdentifier
initWithContextID:query:
protobufferEncodableObjectFromLibrary:
multiverseIdentifier
queryQueueWithContextID:query:
setFirstItem:
_query
_firstItem
_shuffleType
T@"MPMediaQuery",R,N,V_query
T@"MPMediaItem",&,N,V_firstItem
Tq,N,V_shuffleType
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
_stationStringID
T@"NSString",R,N,V_stationStringID
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
T@"NSArray",R,N,V_storeItemIDs
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
initWithContextID:seedTrack:
geniusQueueWithContextID:seedTrack:
seedTrack
_seedTrack
T@"NSURL",R,N,V_seedTrack
initWithContextID:identifier:customData:
customDataQueueWithContextID:identifier:customData:
_customData
T@"NSString",R,N,V_identifier
T@"NSData",R,N,V_customData
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
_autoPlaySection
_metadataObject
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
T@"MPModelGenericObject",R,N,V_metadataObject
initWithRoute:bundleID:playerID:
initWithDeviceUID:bundleID:pid:playerID:
pathWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
bundleID
decodeInt32ForKey:
encodeInt32:forKey:
representedBundleID
initWithEndpoint:
initWithExternalDevice:
setConnection:
localDeviceUID
sharedLocalEndpoint
connection
externalDevice
isConnected
isInvalidated
connectWithUserInfo:completion:
systemMusicPathWithRoute:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithDeviceUID:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
isFullyResolved
isSystemMusicPath
representedBundleDisplayName
resolveWithCompletion:
origin
mediaRemotePlayerPath
isResolved
deviceUID
_pid
_resolved
_bundleID
_mediaRemotePlayerPath
_route
_deviceUID
T^v,R,N,V_mediaRemotePlayerPath
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
T^v,R,N
T@"NSString",R,N,V_deviceUID
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
_updateViewControllerHierarchyForPlaybackEngine:
internalController
view
layer
borderWidth
clearColor
setBackgroundColor:
setBorderWidth:
setAlpha:
systemPinkColor
redColor
CGColor
setBorderColor:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
videoOutputDelegate
selector
setSelector:
setArgument:atIndex:
invokeWithTarget:
forwardInvocation:
viewDidLoad
viewDidLayoutSubviews
bounds
setFrame:
showsPlaybackControls
setShowsPlaybackControls:
presentationSize
videoGravity
setVideoGravity:
videoBounds
isReadyForDisplay
isPictureInPictureActive
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
stopPictureInPicture
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
parentViewController
valueForKey:
superview
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
addSubview:
didMoveToParentViewController:
keyPathsForValuesAffectingShowsPlaybackControls
keyPathsForValuesAffectingPresentationSize
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingIsReadyForDisplay
keyPathsForValuesAffectingIsPictureInPictureActive
keyPathsForValuesAffectingAllowsPictureInPicturePlayback
setVideoOutputDelegate:
T@"<MPCVideoOutputDelegate>",W,N
T@"UIViewController",R,N
T{CGSize=dd},R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
readyForDisplay
TB,R,N,GisReadyForDisplay
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
_videoDebugToken
_videoOutputDelegate
_internalController
T@"AVPlayerViewController",R,N,V_internalController
T@"<MPCVideoOutputDelegate>",W,N,V_videoOutputDelegate
videoOutput:willBeginFullScreenPresentationWithAnimationCoordinator:
videoOutput:willEndFullScreenPresentationWithAnimationCoordinator:
videoOutputShouldAutomaticallyDismissAtPictureInPictureStart:
videoOutputWillStartPictureInPicture:
videoOutputDidStartPictureInPicture:
videoOutputWillStopPictureInPicture:
videoOutputDidStopPictureInPicture:
videoOutput:failedToStartPictureInPictureWithError:
videoOutputShouldDismiss:
eventDeliveryDeferralAssertionForReason:
_snapshotAccount:eventType:atTime:
_devicePrivateListeningDidChange:
_applicationWillTerminate:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_snapshotDeviceWithEvent:nudge:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkTypeWithEvent:nudge:
subscribeToEventType:options:handler:
_addEventForAccountIdentifier:cursor:event:nudge:
removeEngineObserver:
_snapshotNetworkReachabilityAtTime:force:
_snapshotNetworkTypeAtTime:
flushEvents
_snapshotDeviceAtTime:
_snapshotAccount:eventType:event:nudge:
accountForHashedDSID:
lastKnownHouseholdID
isPrivateListeningEnabled
isDevicePrivateListeningEnabled
deviceModel
productPlatform
productVersion
buildVersion
isRemoteServerReachable
signalInfo
signalStrength
isCurrentNetworkLinkHighQuality
_reachability
requiredPropertiesForStaticMediaClips
T@"MPModelRequest",C,N,V_request
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
referenceWithMPModelObject:containerModelPlayEvent:
mpc_radioContentReference
containerID
setContainerID:
initWithStoreIdentifier:trackInfo:
referenceWithStoreIdentifier:trackInfo:
initWithICRadioContentReference:
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
future
setFuture:
_future
T@"MPCFuture",&,N,V_future
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
disconnect
result
isFinalized
isDisconnected
debugLabel
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_disconnected
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSMutableArray",R,N,V_successBlocks
T@"NSMutableArray",R,N,V_failureBlocks
T@"NSMutableArray",R,N,V_completionBlocks
T@"NSMapTable",R,N,V_invalidBlocks
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
disconnected
TB,R,N,GisDisconnected,V_disconnected
T@"NSString",C,N,V_debugLabel
initWithUnpersonalizedContentDescriptors:
setProperties:forItemAtIndexPath:
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
_sharedListeningProperties
T@"MPCPlaybackSharedListeningProperties",C,N,V_sharedListeningProperties
T@"ICLiveLinkIdentity",C,N,V_identity
musicEQSetting
_setupNotifications
_setupRoutingController
_setupPlayer
setRepeatIndex:
setPrefersSeekOverSkip:
resetBookkeeping
eqSetting
avPreset
setupEQPresetWithDefaultPreset:
isAudioAnalyzerEnabled
audioAnalyzer
_setupQueueItemForEnhancedAudioHLSPlayback:metadataWaitTime:error:
_setupQueueItemForLossyAudioPlayback:
preset
soundCheckVolumeNormalization
loudnessInfo
currentAudioRoute
setFetchAvailableRoutesSynchronously:
_playbackUserDefaultsEQPresetDidChangeNotification:
_preferredResolutionDidChange:
setEqSetting:
stackController
setupDefaultsDebouncer
tearDownDefaultsDebouncer
userDefaultsDebouncer
setUserDefaultsDebouncer:
processAudioQualityChanges
_shouldReloadEntireQueue
queuedItems
reloadCurrentItemWithReason:completion:
_updateQueueItemsAndPlayerForFormatChangeIfRequired
spatialIsOff
setSpatializationFormat:
_audioFormatsDictionaryWithHLSMetadataFromAsset:metadataWaitTime:error:
initWithExplanation:justification:
_emitAudioFormatSelection:item:
spatialIsAlwaysOn
mpc_setupWithAudioAssetType:forceSpatial:
audioFormatMatchingAudioAssetType:formats:route:
preferredAudioFormatForAudioFormats:route:
format
mpc_setupDescription
lossyLowQualityStereoFormat
lossyHighQualityStereoFormat
_HLSMetadataForAsset:error:
_audioFormatsDictionaryWithHLSMetadata:
msv_dictionaryWithContentsOfBase64EncodedJSONString:error:
initWithJSONDictionaryRepresentation:stableVariantID:
updateCurrentAudioRouteWithPickedRoutes:
pickedRoutes
initWithRoute:spatialIsAlwaysOn:
_modeObjectForPlayerItem:
nextItems
_updatePreferredAudioFormatIfRequiredForItem:route:
preferredPlayerAudioFormatForItem:route:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
routingController
currenItem
_currentAudioRoute
_routingController
_eqSetting
_stackController
_userDefaultsDebouncer
_currenItem
T@"MPPlaybackEQSetting",&,N,V_eqSetting
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_stackController
T@"NSObject<OS_dispatch_source>",&,N,V_userDefaultsDebouncer
T@"MPAVRoutingController",R,N,V_routingController
T@"MPCPlayerAudioRoute",R,N,V_currentAudioRoute
T@"MPCModelGenericAVItem",R,W,N,V_currenItem
_timeZoneName
_uuid
_privateListeningEnabled
pickedRoute
externalScreenType
hasProtectedContent
playbackMode
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
isExternalPlaybackAllowedForItem:
playerShouldUseAudiOnlyMode:item:externalScreenType:
exernalPlaybackRouteRestrictionForItem:route:isScreenMirroringActive:
usesAudioOnlyModeForExternalPlayback
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
setExternalDisplay:
canAccessRemoteAssets
configureExternalPlaybackForPlayer:queueItem:
_representativeItemCloudID
_artistName
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
visualIdenticalityIdentifier
representationForVisualIdentity:withSize:image:
_cacheArtworkRepresentation:forKey:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
_initWithType:participant:
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_participant
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"MPCSharedListeningEventParticipant",R,N,V_participant
Tq,R,N,V_type
T@"MPCSharedListeningSessionEvent",R,N,V_sessionEvent
T@"MPCSharedListeningPlaybackEvent",R,N,V_playbackEvent
T@"MPCSharedListeningQueueEvent",R,N,V_queueEvent
T@"MPCSharedListeningReactionEvent",R,N,V_reactionEvent
T@"MPCSharedListeningCustomEvent",R,N,V_customEvent
participantWithSharedListeningIdentifier:externalIdentifier:
sharedListeningIdentifier
_sharedListeningIdentifier
_externalIdentifier
T@"NSUUID",R,C,N,V_sharedListeningIdentifier
T@"NSString",R,C,N,V_externalIdentifier
initWithLocalizedMessage:
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
initWithKind:item:
initWithKind:
kind
_kind
Tq,R,N,V_kind
T@"MPModelGenericObject",R,N,V_item
queueEventWithAddedContent:
queueEventWithPlayedNowContent:
queueEventWithRemovedContent:
queueEventWithReorderedContent:
queueEventWithReplacedContent:
queueEventWithContentUpdatedMessage:
queueEventWithPlaybackModeChanged:
addedContent
removedContent
reorderedContent
replacedContent
playedNowContent
contentUpdatedMessage
_addedContent
_removedContent
_reorderedContent
_replacedContent
_playedNowContent
_contentUpdatedMessage
_playbackMode
T@"MPCSharedListeningQueueEventContentAdded",R,N,V_addedContent
T@"MPCSharedListeningQueueEventContentRemoved",R,N,V_removedContent
T@"MPCSharedListeningQueueEventContentReordered",R,N,V_reorderedContent
T@"MPCSharedListeningQueueEventContentReplaced",R,N,V_replacedContent
T@"MPCSharedListeningQueueEventContentPlayedNow",R,N,V_playedNowContent
T@"MPCSharedListeningQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"MPCSharedListeningQueueEventPlaybackModeChanged",R,N,V_playbackMode
initWithItems:container:
container
_container
T@"MPModelGenericObject",R,N,V_container
T@"NSArray",R,C,N,V_items
initWithItems:container:startItem:
_startItem
T@"MPModelGenericObject",R,C,N,V_startItem
initWithItem:
T@"MPModelGenericObject",R,C,N,V_item
initWithStartItem:
initWithLocalizedTitle:localizedMessage:
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
initWithReaction:reactionIdentifier:item:
reactionIdentifier
reaction
_reactionIdentifier
_reaction
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
createPlayerPath
initWithCommandResult:error:
outputDeviceUIDs
setDevicesControlled:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
singleGroup
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
originatingDeviceControl
_isAnyDeviceControllable:
outputGroups
_sendCommand:path:options:queue:completion:
initWithReturnStatuses:error:
isLocallyHosted
localOrigin
appBundleID
unarchivedObjectOfClass:fromData:error:
dictionaryWithDictionary:
currentSettings
isMultiplayerHost
_findEndpointFromEndpoints:byGroupLeader:
unsignedShortValue
_checkForAccount:destination:origin:queue:completion:
client
initWithOrigin:client:player:
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
sendCommand:withOptions:toEndpoint:toDestination:completion:
_connection
_discovery
handlerReturnStatuses
sendError
returnStatuses
commandResult
devicesControlled
_returnStatuses
_commandResult
_devicesControlled
T@"NSArray",R,N,V_returnStatuses
T@"MRCommandResult",R,N,V_commandResult
T@"NSNumber",C,N,V_devicesControlled
initWithBytesNoCopy:length:encoding:freeWhenDone:
serverObjectDatabaseImportResult
accumulatorImportResult
_accumulatorImportResult
_serverObjectDatabaseImportResult
T@"MPServerObjectDatabaseImportResult",R,C,N,V_serverObjectDatabaseImportResult
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N,V_accumulatorImportResult
deviceInfo
isPrivateListeningEnabledForCurrentUserAndAccessory
setDevices:
initWithResponse:playingItemIndexPath:
initWithDataSource:
initWithTracklistItems:playingItemIndexPath:
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsCreateStation:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportedActions:
_determineChangeItemSupport
initWithResponse:changeItemSupport:
playingItem
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
upNextItemCount
explicitContentState
displayItems
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_explicitContentState
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
T@"MPSectionedCollection",R,C,N,V_displayItems
Tq,R,N,V_playingItemGlobalIndex
Tq,R,N,V_globalItemCount
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
Tq,R,N,V_upNextItemCount
Tq,R,N,V_explicitContentState
T@"MPCPlayerResponseItem",R,N
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
identifiersForSectionAtIndex:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
T@"NSIndexPath",&,N,V_playingItemIndexPath
valueWithBytes:objCType:
isAutoPlay
signedRangeValue
sectionRanges
sections
_sections
_sectionRanges
T@"NSArray",R,N,V_sections
T@"NSDictionary",R,N,V_sectionRanges
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
clearUpNextItems
replaceWithPlaybackIntent:
specializedIntents
devices
supportedSpecializedQueues
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
T@"NSArray",C,N,V_devices
T@"NSDictionary",&,N,V_supportedSpecializedQueues
TB,N,V_supportsSetQueueCommand
T@"NSSet",&,N,V_supportedQueueTypes
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
_createRadioStationCommandRequest
contentItemIdentifier
_insertWithOptions:
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportsCreateStation
_supportedInsertionPositions
TB,N,V_supportsCreateStation
T@"NSSet",&,N,V_supportedInsertionPositions
indexPath
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
TB,N,V_supportsChangeRepeat
TB,N,V_supportsAdvanceRepeat
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
TB,N,V_supportsChangeShuffle
TB,N,V_supportsAdvanceShuffle
supportedActions
_supportedActions
T@"NSArray",&,N,V_supportedActions
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
TQ,R,N,V_changeItemSupport
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
_stateDictionaryIncludingIdentifierList:
identifierList
autoPlayIdentifierList
itemCount
maximumQueueHandOffSize
_isAutoPlayItem:inSection:
setAnnotationDelegate:
decodeDoubleForKey:
_identifierListForSection:
hasItem:inSection:
encodeDouble:forKey:
_transitionToAutoPlayState:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_identifierListIDPairForQueueIDPair:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
isValidContainerIdentifier:
containerInfoForItem:
hasActiveRadioStation
isAutoPlayAvailable
setAutoPlayEnabled:completion:
isAutoPlayItem:
removeItem:
removeItems:
removeAllItemsAfterItem:
addPlaybackContext:atPosition:afterItem:actions:completion:
didJumpToItem:
endSynchronizedPlayback
interposingHost
setInterposingHost:
sharedSessionIdentifier
queueExplicitContentState
T@"<MPCQueueControllerCommandInterposingHost>",W,N
positionForItem:inSection:
enumeratorWithQueueController:mode:options:startPosition:endPosition:
itemResult
removeItem:fromSection:
incrementVersionForSegment:
reloadItemsKeepingCurrentItem:
_queueIDPairForIdentifierListIDPair:
isDeletedItem:inSection:
positionForTailOfSection:
entryType
trackingEntryResult
hasSection:
clearStartItem
identifierSetForItem:
_emitEventsForAddingPlaybackContext:sectionIdentifier:sharedListeningContainerInfo:
replaceDataSource:forSection:completion:
allSectionIdentifiers
setByAddingObjectsFromSet:
msv_errorWithDomain:code:underlyingErrors:debugDescription:
setCurrentStartItemIdentifier:
setNowPlayingInfo:
_itemForContentItemID:allowReuse:
_firstContentItemID
setNextContentItemIDReason:
moveItem:fromSection:afterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
_currentItemDidChangeFromItem:toItem:
performChangeImmediately:
setShuffleType:startingItem:inSection:
commandInterposingDataSource
_allDataSourcesSupportInsertionPositionLast
setShouldExpectEmptyQueue:
resetWithIdentifier:
_loadItemsForAutoplaySessionWithDeletedItemsCount:
_loadItemsAfterItemsDeletedIfNeededDeletedItemsCount:
queueCoordinator:itemToFollowItem:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_itemForPair:
_loadAdditionalItemsIfNeededForDataSourceState:preferredItemCount:completion:
_accountForAutoPlay
engine:didEndSharedListeningSessionWithError:
disablePeriodicStateRestore
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
queueReferencesWithMaxCount:
previousContentItemID
_emitEventsForItemChangeFromItem:toCurrentItem:
engine:didReceiveSharedListeningEvent:
setExplicitContentState:
requestedPropertySetForEngine:
currentStartItemIdentifier
canAutoPlay
musicRepeatType
autoPlayEnabledForUserIdentity:
_firstContentItemIDInSection:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:afterTailOfSection:completion:
feeder
_applyVolumeNormalizationForQueuedItems
deferredNextContentItemAnchorID
radioConfiguration
continueListeningLoadStationThreshold
continueListeningMaxUpcomingTracksSizeToMaintain
_findDataSourceToLoadItemsAfterItem:sectionIdentifier:withLoadingBlock:
_privateListeningSourceForContext:
lastMetadataChangeTime
didReachEnd
_autoplayMode
_findDataSourceToLoadItemsAfterItem:deletedItemsCount:sectionIdentifier:withLoadingBlock:
enumeratorWithOptions:
albumContainerWithMediaIdentifier:featureName:
playlistContainerWithMediaIdentifier:featureName:
autoPlayContainerWithMediaIdentifier:featureName:
radioContainerWithMediaIdentifier:featureName:
groupWithFeatureName:
itemWithMediaIdentifier:
msv_indexPathForItem:inSection:
queueCoordinator
disableItemReuse
setSharedListeningItem:
setAutoPlayItem:
setStartItemInfoProvider:
setInitialPlaybackStartTimeOverride:
setPreferredItemCount:
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
isStartItem:
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:allowReuse:
canSkipInDirection:fromQueueItem:
setCurrentItem:
updatePlayerPlaybackCoordinator:
T@"MPAVItem",&,N
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
emitEventsForParticipants:localUserIdentifier:
emitEventsForAddedSharedListeningContainerInfo:
emitSharedListeningEvent:
explicitContentStateDidChange:
autoPlayEnabledDidChange:
requestedPropertySetForEvents
sessionDidEnd
sharedCurrentItemChangedToItem:inSection:byParticipant:
jumpToContentItemID:
currentItemDidChangeFromItem:toItem:
queueCoordinatorDidChangeItems:
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
nextContentItemID
setNextContentItemID:
setDeferredNextContentItemAnchorID:
coderVersions
setCoderVersions:
nextContentItemIDReason
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
missingIdentifierSetForDebugging
setMissingIdentifierSetForDebugging:
previousSectionIDsForDebugging
setPreviousSectionIDsForDebugging:
setInSharedListeningMode:
rtcSessionHierarchyToken
setRtcSessionHierarchyToken:
setIdentifierList:
setAutoPlayIdentifierList:
dataSources
setDataSources:
_playbackCoordinator
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_inSharedListeningMode
_preferredFirstContentItemID
_currentItem
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_missingIdentifierSetForDebugging
_previousSectionIDsForDebugging
_currentStartItemIdentifier
_rtcSessionHierarchyToken
_identifierList
_autoPlayIdentifierList
_dataSources
T@"NSString",C,N,V_nextContentItemID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
T@"NSMutableDictionary",&,N,V_coderVersions
Tq,N,V_nextContentItemIDReason
Tq,N,V_autoPlayState
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
TB,N,V_autoPlayIsTriggered
T@"<MPCQueueControllerCommandInterposing>",R,N
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
Td,R,N,V_lastSavedTime
T@"MPIdentifierSet",C,N,V_missingIdentifierSetForDebugging
T@"NSArray",C,N,V_previousSectionIDsForDebugging
T@"NSString",C,N,V_currentStartItemIdentifier
inSharedListeningMode
TB,N,GisInSharedListeningMode,V_inSharedListeningMode
T@,&,N,V_rtcSessionHierarchyToken
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
TB,R,N,V_hasUserMutations
T@"MPAVItem",R,N,V_currentItem
T@"<MPCQueueControllerDelegate>",W,N,V_delegate
T@"<MPCQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
_buildEnumerator
initWithSectionIdentifier:
mode
enumerator
startPosition
endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
T@"MPCQueueController",R,W,N,V_queueController
Tq,R,N,V_mode
T@"NSEnumerator",R,N,V_enumerator
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
branchDepth
isRemoved
removed
TB,R,N,GisRemoved
preferredItemCount
_preferredItemCount
Tq,N,V_preferredItemCount
substringFromIndex:
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
setPlaybackCoordinator:
_updatePlayerLiveLinkConnection
liveLinkForSessionID:
linkWithSessionIdentifier:identity:
updateWithIdentity:
_transitionToState:
_emitNewContainerIfNeededForResponse:
_dequeuePendingActions
reconnectWithReason:options:
_responseQueue
allSections
_ICSharedListeningForMPSILItemIdentifier:
enumerateItemsUsingBlock:
msv_section
itemForIdentifier:
isAutoPlayItem
removeItemIdentifier:
_ICSharedListeningForMPSILItemIdentifiers:
removeItemIdentifiers:
removeAllItemIdentifiersAfterItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
msv_item
_MPSILItemIdentifierForICSharedListeningItemIdentifier:
_enqueuePendingActionWithLabel:itemIdentifier:block:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
playNextPositionWithAfterItemIdentifierHint:
specifiedPositionAfterItemIdentifier:
playLastPositionWithAfterItemIdentifierHint:
insertTracklist:atPosition:completionEx:
broadcastDirectCurrentItemChangedToItemIdentifier:
_handleUpdatedSharedListeningQueue:
setDeferredDirectCurrentItemIdentifier:
setDeferredDirectCurrentItemParticipant:
_handleDirectCurrentItemChangedToItemIdentifier:participant:
_requiredItemIdentifierForEvent:
_mpcSharedListeningEventForICLiveLinkEvent:
expirationDate
laterDate:
block
removeObjectsInRange:
vendorID
containerForIdentifier:
setItemIdentifier:
setBlock:
_purgePendingActionsWithLabel:
_sectionedCollectionForQueue:
setVendorID:
itemForIdentifierSet:
contentAdded
containerIdentifier
contentPlayedNow
startItemIdentifier
contentRemoved
contentReordered
contentReplaced
playbackModeChanged
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
mediaIdentifier
playParams
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
_playbackItemsRequestForQueue:
getExpectedCurrentItemWithCompletion:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
completionStartItemIdentifier
setCompletionStartItemIdentifier:
completionError
setCompletionError:
initialQueueCompletion
requestedPropertySet
setRequestedPropertySet:
pendingActions
setPendingActions:
knownContainerIDs
setKnownContainerIDs:
lastKnownExplicitContentState
setLastKnownExplicitContentState:
lastKnownAutoPlayEnabled
setLastKnownAutoPlayEnabled:
lastKnownAutoPlayAvailable
setLastKnownAutoPlayAvailable:
shouldRefreshBeforeActive
setShouldRefreshBeforeActive:
deferredDirectCurrentItemIdentifier
deferredDirectCurrentItemParticipant
hasPendingPlayNowInFlight
setHasPendingPlayNowInFlight:
deferredPlayNowCurrentItemIdentifier
setDeferredPlayNowCurrentItemIdentifier:
playbackCoordinator
_lastKnownAutoPlayEnabled
_lastKnownAutoPlayAvailable
_shouldRefreshBeforeActive
_hasPendingPlayNowInFlight
_interposingHost
_completionStartItemIdentifier
_completionError
_initialQueueCompletion
_requestedPropertySet
_pendingActions
_knownContainerIDs
_lastKnownExplicitContentState
_deferredDirectCurrentItemIdentifier
_deferredDirectCurrentItemParticipant
_deferredPlayNowCurrentItemIdentifier
T@"NSString",C,N,V_completionStartItemIdentifier
T@"NSError",&,N,V_completionError
T@?,R,C,N,V_initialQueueCompletion
T@"MPCPlaybackRequestEnvironment",&,N,V_playbackRequestEnvironment
T@"MPPropertySet",C,N,V_requestedPropertySet
T@"NSMutableArray",&,N,V_pendingActions
T@"NSMutableSet",&,N,V_knownContainerIDs
Tq,N,V_lastKnownExplicitContentState
TB,N,V_lastKnownAutoPlayEnabled
TB,N,V_lastKnownAutoPlayAvailable
TB,N,V_shouldRefreshBeforeActive
T@"NSString",C,N,V_deferredDirectCurrentItemIdentifier
T@"ICLiveLinkIdentity",&,N,V_deferredDirectCurrentItemParticipant
TB,N,V_hasPendingPlayNowInFlight
T@"NSString",C,N,V_deferredPlayNowCurrentItemIdentifier
T@"AVPlayerPlaybackCoordinator",W,N,V_playbackCoordinator
T@"<MPCQueueControllerCommandInterposingHost>",W,N,V_interposingHost
_modelObject
T@"NSString",C,N,V_identifier
T@"MPModelGenericObject",&,N,V_modelObject
_itemIdentifier
_expirationDate
_block
T@"NSString",C,N,V_itemIdentifier
T@"NSDate",C,N,V_expirationDate
T@?,C,N,V_block
setUserDefaults:
userDefaults
prerollEnabled
allowScreenRecording
shouldPreroll
_userDefaults
T@"MPPlaybackUserDefaults",&,N,V_userDefaults
setPlayToSetRateSignpost:
setWaitForLikelyToKeepUpSignpost:
setWaitForReadyToPlaySignpost:
waitForLikelyToKeepUpSignpost
waitForReadyToPlaySignpost
playToSetRateSignpost
setRateToEffectiveRateSignpost
setSetRateToEffectiveRateSignpost:
_waitForLikelyToKeepUpSignpost
_waitForReadyToPlaySignpost
_playToSetRateSignpost
_setRateToEffectiveRateSignpost
T@"NSString",&,N,V_identifier
T@"MPCWaitForLikelyToKeepUp",&,N,V_waitForLikelyToKeepUpSignpost
T@"MPCWaitForReadyToPlaySignpost",&,N,V_waitForReadyToPlaySignpost
T@"MPCPlayToSetRateSignpost",&,N,V_playToSetRateSignpost
T@"MPCSetRateToEffectiveRateSignpost",&,N,V_setRateToEffectiveRateSignpost
_initWithValue:
localDeviceSource
_initWithUserIdentity:
sourceWithUserIdentity:
_overrideValue
_currentValue
T@"NSNumber",R,C,N,V_currentValue
T@"NSNumber",C,N,V_overrideValue
_value
_handleUserIdentityStoreDidChangeNotification:
_handleHomeUserPrivateListeningDidChangeNotification:
_loadCurrentValueFromIdentityProperties
getPropertiesForUserIdentity:error:
homeUserIdentifiers
userMonitorWithHomeIdentifiers:
isPrivateListeningEnabledForCurrentAccessory
privateListeningEnabled
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
_cachedValue
modifySystemMusicContextForEndpointDestination:completion:
_modifyOutputDevices:onEndpoint:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
outputGroupID
_updateDiscoverableDeviceList:deviceInfo:completion:
tightSyncUID
shouldSearchForLogicalDevices
clusterType
_discoverLocalEndpointFromStereoPairUsingDeviceInfo:completion:
outputDevicesMatchingPredicate:
designatedGroupLeader
groupContainsGroupLeader
needsCommandRedirection
isAirPlayActive
outputDevices
isGroupLeader
clusterComposition
setOutputDevices:initiator:withReplyQueue:completion:
modifySystemMusicContextForDestination:completion:
modifySystemMusicContextForEndpointDestination:discoveryHandler:completion:
modificationInProgress
setModificationInProgress:
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
_buildLanguageOptionGroups:currentLanguageOptions:
_determineSeekSupport
initWithResponse:seekSupport:
seekSupport
setPreferredForwardJumpIntervals:
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithLanguageOptionGroups:currentLanguageOptions:response:
initWithResponse:mediaRemoteCommand:
setValue:
switchToAlternativeFormat:
preferredTiers
T@"MPCPlayerAudioFormat",R,N
T@"MPCPlayerAudioRoute",R,N
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
musicAudio
revision
languageOptionGroups
enqueueingParticipant
_seekSupport
_placeholder
_autoPlay
_preferredTiers
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_enqueueingParticipant
_duration
T@"NSIndexPath",R,N,V_indexPath
T@"MPCPlayerResponseParticipant",R,N,V_enqueueingParticipant
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,C,N,V_localizedDurationString
T@"NSString",R,C,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"<MPCPlayerResponseItemMusicAudio>",R,N
T@"MPCPlayerAudioFormat",R,N,V_preferredFormat
T@"MPCPlayerAudioFormat",R,N,V_activeFormat
TQ,R,N,V_preferredTiers
Tq,R,N,V_activeFormatJustification
T@"NSArray",R,N,V_alternateFormats
T@"MPCPlayerAudioRoute",R,N,V_audioRoute
T@"NSString",C,N,V_contentItemID
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
T@"NSArray",R,C,N
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
TQ,R,N,V_seekSupport
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
changeValue:
localizedShortTitle
presentationStyle
_localizedShortTitle
_presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
_minimumValue
_maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
initWithWritingStyle:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
timedMetadata
storeFrontID
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
playActivityEvent
setPlayActivityEvent:
setShouldReportToStore:
isOffline
_recordEventOperationQueue
_reportingController
_offline
offline
TB,N,GisOffline,V_offline
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
Td,N,V_eventDuration
TQ,N,V_overrideItemType
T@"NSString",C,N,V_lyricsID
T@"MPModelGenericObject",&,N,V_itemGenericObject
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
T@"NSData",C,N,V_recommendationData
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
_fileSize
_albumArtistName
_albumDiscCount
_albumName
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
legacyMediaQuery
clearLibraryIdentifiers
initWithRandomSource:lowestValue:highestValue:
nextIntWithUpperBound:
appendItems:
preferredQueue
radioContainerWithSeedItem:featureName:
_enqueueDataForPlaybackChangingEvent:cursor:
_JSONEncodableEvent:
enqueueData:
addFinishBlock:
engagement
_engagement
T@"AMSEngagement",R,N,V_engagement
_containerType
setExplanation:
setJustification:
_explanation
_justification
Tq,N,V_type
T@"NSString",C,N,V_explanation
T@"NSDictionary",C,N,V_justification
setFormat:
_format
T@"MPCPlayerAudioFormat",&,N,V_format
initWithPlaybackUsersDefaults:environmentMonitor:probabilityOfProgressiveDownloadAssets:
initWithProbabilityForOutcomeA:
outcomeGenerator
updateProbabilityForOutcomeA:
prefersSpatialOverStereo:
prefersHighResolutionLossless
prefersLossless
prefersHighQualityStereo
prefersLowQualityStereo
preferredAudioAssetTypeForSongWithTrait:
sharedCloudController
isEnhancedAudioAvailable
nextOutcome
prefersSpatialOverLossless
environmentDescription
descriptionForTraits:
preferencesDescription
descriptionForTiers:
tierMatchingAudioAssetType:
defaults
spatialAudioPreference
multiChannelSupport
spatialIsAutomatic
isSpatializationEnabled
canStreamSpatial
canRenderSpatial
networkBandwidthIsHigh
environmentMonitor
T@"MPCAudioAssetTypeSelector",R,N
updateProbabilityOfProgressiveDownloadAssets:
userPrefersMultichannelAudioOverStereo:
setDefaults:
setEnvironmentMonitor:
_defaults
_environmentMonitor
_outcomeGenerator
T@"MPPlaybackUserDefaults",&,N,V_defaults
T@"ICEnvironmentMonitor",&,N,V_environmentMonitor
T@"MSVABTestGenerator",R,N,V_outcomeGenerator
allowsMusicVideos
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
authorizationError
_explicitContentErrorWithUnderlyingError:message:
authorizationReason
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
getAgeVerificationStateWithCompletion:
_setupWithAgeVerificationState:
_setupWithAgeGateForItem:
explicitRating
maximumTVShowRatingForAgeGate
maximumMovieRatingForAgeGate
isExplicitContentAllowed
requestAuthorizationForExplicitItem:reason:completion:
T@"MPCExplicitContentAuthorizationManager",R,N
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_authorizationError
_lastKnownAgeVerificationState
T@"NSError",C,N,V_authorizationError
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
mpc_updateAVAudioSpatializationFormatsForAudioAssetType:
mpc_updateAVVariantPreferenceForAudioAssetType:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForAudioAssetType:
mpc_updatePreferredForwardBufferDurationForAudioAssetType:
mpc_updateAVAudioSpatializationFormatsForPlayerAudioFormat:
mpc_updateAVVariantPreferenceForPlayerAudioFormat:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForPlayerAudioFormat:
mpc_updatePrefersOfflinePlayableVariantForPlayerAudioFormat:isDownloadedAsset:
mpc_updatePreferredForwardBufferDurationForPlayerAudioFormat:
setVariantPreferences:
setAutoSwitchAtmosStreamVariants:
setPreferredMaximumAudioSampleRate:
forwardBufferDuration
setPreferredForwardBufferDuration:
setPrefersOfflinePlayableVariants:
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
allowedAudioSpatializationFormats
variantPreferences
initWithContentItemID:repeatIndex:
identifierForMFQueuePlayerItem:
_repeatIndex
Tq,N,V_repeatIndex
initWithDuration:
Td,R,N,V_duration
initialPlaybackStartTimeOverride
setLastChangeDirection:
_clearAssetNow
crossfadeDuration
_isInContiguousAlbumWith:
gaplessParameters
crossFadeParameters
isFullyDownloaded
setIsVideoContent:
isMovieOrTVShow
playbackStartTimeOverride
setPlaybackStartTimeOverride:
playbackStartTime
setItemID:
shouldPerformGaplessTransitionWith:
shouldPerformCrossFadeTransitionWith:
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
T@"<MFGaplessParameters>",R,N
T@"<MFCrossFadeParameters>",R,N
Td,N
T@"<MPCItemIdentifier>",R,C,N
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
mediaRemoteReplyQueue
resultStatuses
strongToWeakObjectsMapTable
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_onQueue_stateDictionary
initWithController:
initWithKeyOptions:valueOptions:capacity:
_legacyCommands
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:requestRange:
endTransaction
pokeKey:
_mergeContentItem:
initWithData:
_initWithMediaRemoteContentItem:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
_artworkCatalogBlockForContentItem:
showDebugUI
placeholderCatalogWithSymbolName:
setOverlayDelegate:
setOverlayToken:
overlayToken
traitCollection
userInterfaceIdiom
_lastArtworkCatalog
overlayStorage
setOverlayStorage:
viewController
setTag:
viewWithTag:
setUserInteractionEnabled:
imageRepresentation
image
setImage:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_createExportableArtworkPropertiesForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaLibraryArtworkType:
subarrayWithRange:
maximumCapacity
setMaximumCapacity:
performTransaction:
replaceObjectsInRange:withObjectsFromArray:
allCommandInfos
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
setElapsedTime:
performSuppressingChangeNotifications:
overlayVisualIdenticalityForCatalog:
overlayScaledFittingSizeForCatalog:scaledFittingSize:
artworkCatalog:willConfigureView:
artworkCatalog:didConfigureView:withRepresentation:
artworkCatalog:didClearFromView:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
contentItemArtworkCacheStateForArtworkIdentifier:size:
queueIdentifierCacheState
_onQueue_setOptimisticPlayingItemIdentifier:
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@,&,N,V_invalidationToken
Tq,R,N,V_playbackStateCacheState
Tq,R,N,V_supportedCommandsCacheState
Tq,R,N,V_playingIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
radioStationURL
_radioStationURL
T@"NSURL",C,N,V_radioStationURL
setAllowsExpiredBags:
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
playableAssetIdentifiers
isLocalEndpoint
connectToExternalDeviceWithUserInfo:completion:
hashTableWithOptions:
statementWithString:error:
executeStatement:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
originID
setBool:forKey:
initWithURL:error:
initWithMemory
initWithDatabaseCreationBlock:
cancelSubscription
consumer
databaseURL
initWithConsumer:eventStream:
initWithEventStream:reason:timeout:
timeIntervalSince1970
msv_UUIDData
bindDataValue:toParameterNamed:
bindStringValue:toParameterNamed:
bindUInt64Value:toParameterNamed:
bindJSONValue:toParameterNamed:error:
eventStream:didFailToEmitEvent:error:
lastEventSuccessTimestamp
mutatingEventHandlers
initWithEventStream:startEvent:endEvent:
_onQueue_flush
setLastEventSuccessTimestamp:
setMaximumEventDeliveryTimestamp:
lastEventsWithCount:
bindInt64Value:toParameterNamed:
resultsForStatement:
startEvent
endEvent
sortUsingSelector:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
reason
initWithParameters:
addConsumer:
removeConsumer:
flushEventsWithConsumer:fromTimestamp:untilTimestamp:
lastEvent
resetConsumerEventDeliveryToTimestamp:
_deferralAssertionsLock
_invalidated
_engineID
_subscriptions
_deferralAssertions
_cachedEvents
_cacheMisses
_cacheHits
_database
_queue
_scheduledFlushes
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
T@"MPCPlaybackEngineEvent",R,N
T@"NSString",R,N,V_engineID
stringValueAtColumnIndex:
uint64ValueAtColumnIndex:
flushEventsWithCompletion:
maximumEventDeliveryTimestamp
eventHandlers
_consumer
_streamID
_lastEventSuccessTimestamp
_maximumEventDeliveryTimestamp
_mutatingEventHandlers
_eventHandlers
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
T@"NSString",R,C,N,V_streamID
TQ,N,V_lastEventSuccessTimestamp
TQ,N,V_maximumEventDeliveryTimestamp
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
int64ValueAtColumnIndex:
nextObjectWithError:
_statementForColumnsExpression:eventTypes:payload:limit:
bindNullValueToParameterNamed:
_startNS
_endNS
_startEvent
_endEvent
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
T@"MPCPlaybackEngineEvent",R,N,V_startEvent
T@"MPCPlaybackEngineEvent",R,N,V_endEvent
dataValueAtColumnIndex:
msv_UUIDWithData:
jsonValueAtColumnIndex:error:
invalidated
timeoutGuard
_reason
_timeoutGuard
T@"NSString",R,C,N,V_reason
TB,R,N,V_invalidated
T@"MSVBlockGuard",R,N,V_timeoutGuard
_executeWithUserIdentity:useMediaAPILookup:
_validateUserIdentityForRequestWithCompletion:
currentThread
_runPersonalizationWithSectionCollection:localEquivalencyMapping:expirationDate:userIdentity:error:isFinalResponse:isInvalidForPersonalization:networkingTime:
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:
_runMediaAPIRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_runStorePlatformRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
totalRequestItemCount
collectionItemRequests
requestItemCount
progress
addChild:withPendingUnitCount:
fractionCompleted
completedUnitCount
_importMediaAPICollectionItemMetadataResponse:withError:usingAccumulator:userIdentity:trustID:previousResponse:shouldBatchResultsWithPlaceholderObjects:
enqueueRequest:withBatchProgressHandler:
collectionRequests
tokenRenewalRequests
_handleItemMetadataBactchRequestCompletedWithAccumulator:previousResponse:userIdentity:error:isFinalResponse:
playbackAuthorizationTokenHalfLifeExpiration
setPlaybackAuthorizationTokenHalfLifeDuration:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
setIdentityStore:
initWithUserInteractionLevel:
setAuthenticationProvider:
_runSubscriptionStatusWithRequestContext:completion:
userIdentitiesForManageableAccountsWithError:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
_activeProgress
_previousModelResponse
_hasReceivedFinalResponse
_hasCalledResponseHandler
_errors
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
_runStep:withFinishHandler:
flattenedTracksWithTracks:
trackType
setLiveRadioStream:
radioStreamAssets
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
tracklistActionType
_cacheTracksForStep:
initWithTracks:tracklistAction:networkingTime:
performWithCompletionHandler:
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_radioQueueFeederPointerForLogging
tracklistAction
_tracklistAction
_tracks
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
Td,R,N,V_networkingTime
stationMetadata
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
isRequestingImmediatePlayback
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
setSupportsAccountRectification:
mediaQuery
trackIdentifiers
firstTrackIdentifier
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
setDelegationProperties:
kindWithModelClass:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
T@"MPRemoteCommand",R,N
T@"MPCDebugCommand",R,N
initWithMediaRemoteCommandType:
notifyPropagatablePropertyChanged
_mediaRemoteCommandInfoOptions
supportedSubsystems
subsystemRevisions
_supportedSubsystems
_subsystemRevisions
T@"NSArray",C,N,V_supportedSubsystems
T@"NSDictionary",C,N,V_subsystemRevisions
_applicationWillEnterForegroundNotification:
_prewarmSAPSigningForAccount:
applicationState
_optimisticallyFetchLeaseForAccount:
_prewarmMiniSINFEndpointForAccount:
scheduleMiniSINFFetch
usesLease
getHasPreparedLeaseForAccount:completion:
_fetchMiniSINFsWithCompletion:
maximumBatchSize
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
endpointURL
initWithURL:
setHTTPMethod:
setHTTPBody:
addValue:forHTTPHeaderField:
defaultSession
parsedBodyDictionary
initWithPayload:requestPayload:hashedPersonID:
enqueueDataRequest:withCompletionHandler:
int64ValueForBagKey:
initWithEndpointURL:maximumBatchSize:requestContext:
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
_endpointURL
_maximumBatchSize
T@"NSURL",R,C,N,V_endpointURL
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
initWithPID:refreshRate:delegate:
audioAnalysisRefreshRate
_createProcessTapWithNumberOfFrames:sampleRate:
setupNotifications
initWithCommonFormat:sampleRate:channels:interleaved:
streamDescription
initProcessTapWithFormat:PID:
initWithTapDescription:
mediaServerDidDie:
mediaServerDidRestart:
tearDownNotifications
setNumberOfFrames:
_monoAudioBuffer
_enabled
_numberOfFrames
TI,N,V_numberOfFrames
T@"<MPCProcessAudioTapDelegate>",W,N,V_delegate
TI,R,N,V_sampleRate
enabled
TB,N,GisEnabled,V_enabled
initWithAppBundleID:
systemMediaApplicationDestination
initWithAppBundleID:playerID:origin:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
decodeHashedRouteUIDs:completion:
_copyWithZone:usingConcreteClass:
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
resolveWithHashedRouteIdentifiers:completion:
resolveWithRouteIdentifiers:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
_getCompanionOrigin:
hashedOutputDeviceUIDs
originatingOutputDeviceUID
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_originatingOutputDeviceUID
_singleGroup
_originatingDeviceControl
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
T@"NSArray",R,N,V_outputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
T@"NSArray",R,N,V_outputGroups
T@"NSString",R,N,V_outputGroupID
T@"NSString",R,N,V_originatingOutputDeviceUID
TB,R,N,V_singleGroup
TB,R,N,V_originatingDeviceControl
setAppBundleID:
setOrigin:
setOutputGroups:
setOutputGroupID:
setOriginatingOutputDeviceUID:
setSingleGroup:
setOriginatingDeviceControl:
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
initWithPlayerID:
T@"MPNowPlayingInfoCenter",R,N
T@"MPRemoteCommandCenter",R,N
T@"AVAudioSession",R,N
_nowPlayingInfoCenter
_remoteCommandCenter
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
T@"AVAudioSession",R,N,V_audioSession
requiresMainThread
isMainThread
callStackSymbols
_initializePlaybackStack
_screenBrightnessDidChangeNotification:
preheatPlayback
setStateRestorationSessionIdentifier:
performAfterLoadingAccounts:
_detectCrashLoopForSessionIdentifier:block:
objects
disableAudioAnalysis
ubiquitousIdentifierWithStoreAdamID:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
isStateRestorationSupported
_updateUISnapshotIfNeeded
_shouldIgnorePlaybackSessionError:
saveSessionWithCompletion:
brightness
needsUISnapshot
dictionaryForKey:
initWithPlaybackEngineParameters:engineID:
proxyForObjects:protocol:
progressiveDownloadAssetRatio
_updateSnapshotForBackgroundApplication:
setNeedsUISnapshot:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
restoreStateWithCompletion:
setQueueHandoffSupported:
setAudioSessionCategory:
setAudioSessionOptions:
reportUserSeekFromTime:toTime:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
isPictureInPictureSupported
setPictureInPictureSupported:
isVideoSupported
setVideoSupported:
setFallbackPlaybackIntent:
musicPlayerControllerServer
fairPlayPerformanceController
_started
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_initializationParameters
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
TB,N,V_needsUISnapshot
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"<MPCVideoOutput>",R,N,V_videoOutput
T@"<MPCPlaybackEngineInitializationParameters>",R,N,V_initializationParameters
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"NSString",R,C,N,V_engineID
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
started
TB,R,N,GisStarted,V_started
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
T@"MPCPlaybackEngine",W,N
_originID
T@"NSString",R,C,N,V_originID
getSiriRequestUUIDFor:
emitVMCPUStatsWithStage:requestId:
checkpointMRSetQueueBegin
emitMWTCheckPointWithMwtCheckpoint:requestId:timeStamp:
checkpointRateZero
checkpointSetQueueEnd
checkpointMRPlay
checkpointAssetLoadBegin
checkpointItemConfigBegin
checkpointItemBegin
checkpointLikelyToKeepUp
checkpointReadyToPlay
checkpointRateOne
checkpointFirstAudioFrame
setIsShuffled:
setPrefetchedMetadataSource:
setAssetEndPoint:
setStreamingContentType:
setFormatCodec:
setFormatBitrate:
setFormatBitDepth:
setFormatChannels:
setFormatSampleRate:
setFormatTier:
setRouteConfiguration:
setIsAccountDataReady:
setIsLeaseReady:
setIsOnlineKeyReady:
setIsOfflineKeyReady:
setIsInterruptingPlayback:
setIsRemoteSetQueue:
setIsDelegatedPlayback:
setIsAutoPlay:
setIsFirstPlayAfterAppLaunch:
setIsMiniSinfAvailable:
setIsSharePlayPlayback:
setIsSuzeLease:
setNetworkConnectionType:
setIsPrimaryUser:
setErrorResolutionType:
emitMWTMusicMetadata:requestId:
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:routeResolvedPlayerPath:
T@"MPCPlayerPathCache",R,N
playerPathResolutions
playerPathObservers
endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
_isHLSVersion:greatherThanOrEqualTo:
_isSpatialFormat:
_computedTierFromHLSDataWithChannelCount:
_computedChannelLayoutTagFromHLSData:channelCount:
_descriptionForChannelLayoutTag:
_isMultichannelFormat:
groupID
isSpatialized
setTier:
setBitrate:
setMultiChannel:
setChannelLayout:
setAudioChannelLayoutDescription:
setGroupID:
setStableVariantID:
initWithDictionaryRepresentation:
debugTierDescription
debugBitRateDescription
debugBitDepthDescription
debugSampleRateDescription
debugCodecDescription
debugChannelCountDescription
debugChannelLayoutDescription
debugOriginChannelLayoutDescription
debugOriginChannelCountDescription
_isDerivedFromSpatialFormat:
_isBinauralFormat:
originChannelLayout
setOriginChannelLayout:
_spatialized
_multiChannel
_codec
_channelLayout
_originChannelLayout
_tier
_bitrate
_bitDepth
_audioChannelLayoutDescription
_groupID
_stableVariantID
TI,N,V_originChannelLayout
T@"MPNowPlayingInfoAudioFormat",R,N
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_stableVariantID
Tq,R,N,V_tier
Tq,R,N,V_bitrate
Tq,R,N,V_sampleRate
Tq,R,N,V_bitDepth
TI,R,N,V_codec
spatialized
TB,R,N,GisSpatialized,V_spatialized
multiChannel
TB,R,N,GisMultiChannel,V_multiChannel
TI,R,N,V_channelLayout
T@"NSString",R,N,V_audioChannelLayoutDescription
supportsSpatialization
isAirPlayRoute
isB515Route
isB298Route
isW1Route
isH1Route
isB507Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isDeviceSpeakerRoute
routeName
isCarplayRoute
setSupportsSpatialization:
setSpatializationEnabled:
_supportsSpatialization
_isSpatializationEnabled
_canStreamSpatial
_canRenderSpatial
_name
_multiChannelSupport
T@"MPNowPlayingInfoAudioRoute",R,N
TB,R,N,V_canStreamSpatial
TB,R,N,V_canRenderSpatial
Tq,R,N,V_multiChannelSupport
T@"NSString",R,C,N,V_name
TB,R,N,V_supportsSpatialization
TB,R,N,V_isSpatializationEnabled
leaseID
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
T@"MPCSuzeLeaseSessionController",R,N
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
Tq,N,V_clientCount
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
TB,N,V_shouldStopWhenFinished
initWithBase64EncodedString:options:
base64EncodedStringWithOptions:
mpc_errorByRemovingUnserializableUserInfo
msv_compactMapValues:
setNamePrefix:
setGivenName:
setMiddleName:
setFamilyName:
setNameSuffix:
setNickname:
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
setSyncID:
setRecommendationID:
setSocialProfileID:
setInformalMediaClipID:
setInformalStaticAssetID:
setAssetAdamID:
containedPersistentID
syncID
recommendationID
formerAdamIDs
socialProfileID
informalMediaClipID
informalStaticAssetID
setServerID:
setExternalIdentifier:
setNameComponents:
setImageURL:
_initWithBlock:
nameComponents
imageURL
initWithResponseDictionary:
initWithName:uuid:version:root:debug:
setDisplayedCharacterCount:
setLanguage:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
Td,N,V_visibleDuration
Tq,N,V_displayType
Tq,N,V_displayedCharacterCount
T@"NSString",C,N,V_language
Tq,N,V_sourceType
_icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
initWithUserIdentity:
_updateStateForPlaybackPrevention
receivedUserInteractionEvent
_itemShouldPreventPlaybackDidChangeNotification:
engine:didPauseForLeaseEndWithError:
stateReasonDialog
stateReasonDialogMetricsDictionary
engineDidPauseForLeaseEnd:
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
_leaseEndIgnoreReasons
_prepareCompletions
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
T@"NSMutableDictionary",&,N,V_prepareCompletions
_hasSubscriptionPlaybackCapability
_storeFrontID
_enqueuerProperties
TQ,N,V_storeAccountID
T@"NSString",C,N,V_storeFrontID
TB,N,V_hasSubscriptionPlaybackCapability
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
setNeedsInfoDictionaryUpdate
packageURL
deleteWithError:
saveWithError:
writeWithError:
createExternalRepresentation
initWithExternalRepresentation:
packageTypeIdentifier
initWithURL:identifier:
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
T@"MPNowPlayingContentItem",C,N,V_contentItem
T@"UIImage",C,N,V_artworkImage
T@"NSDate",R,C,N,V_lastModifiedDate
bytes
hashInStore:
initWithDelegatedUserIdentity:
initWithUserIdentity:subscriptionStatus:
setHashedDSID:
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
setActiveAccount:
setBag:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
T@"NSString",C,N,V_hashedDSID
TB,N,V_hasCloudLibraryEnabled
T@"NSString",C,N,V_storeFrontIdentifier
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
delegated
TB,R,N,GisDelegated,V_delegated
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_homeUserSettingsChangeNotification:
_updateAccounts
_updateAccountsWithAttemptCount:
_shouldPurgeGlideSubscriptionDataForAccount:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
purgeGlideSubscriptionDataForHashedAccoundID:
accounts
_enumerateIdentitiesWithCompletion:
isActiveLocker
setShouldReturnLastKnownStatusOnly:
shouldReturnLastKnownStatusOnly
_needsRefreshDueToTimeout
_initialAccountGroup
T@"MPCPlaybackAccount",R,N
playOnPlayerPath:
T@"MPCPlayerSessionResponse",R,W,N,V_response
T@"NSString",R,N,V_contentItemIdentifier
setAssetStoreFronts:
skipEncodingMediaLibraryUniqueID
updateRequestPlaybackEnvironment
encodedMediaLibraryUniqueID
_skipEncodingMediaLibraryUniqueID
_allowsJumpToIt
_encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
TB,N,V_allowsJumpToIt
T@"NSDictionary",C,N,V_assetStoreFronts
isValidReportingEvent
reportingEventType
shouldReportToStore
_shouldReportToStore
_playActivityEvent
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
TB,N,V_shouldReportToStore
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
indexSetWithIndexesInRange:
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
_overridePlayingItem
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
albumName
representativeCloudIdentifier
storeIdentifier
artistName
albumArtistName
composerName
copyright
genreName
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
sceneCollectionForScriptData:
_instructionsForSceneDictionaries:
T@"ICUserIdentity",R,N
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_playbackHistoryController
_lyricsReportingController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
T@"<MFPlaybackStackController>",W,N,V_stackController
allowEmptySelection
languageOptions
isEqualToLanguageOption:
indexOfObjectPassingTest:
languageOptionType
displayName
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
copyExternalRepresentation
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
_currentIndex
_allowEmptySelection
T@"NSArray",R,N,V_options
T@"MPNowPlayingInfoLanguageOption",R,N
TB,R,N,V_allowEmptySelection
_accountInfos
_containers
_startingItemIndexPath
_MPAVItemForMFPlayerItem:allowReuse:
mapping
itemToFollowItem:direction:distance:reason:
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
_mapping
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
mpcReporting_isValidReportingItem
T@"<MPCReportingIdentityPropertiesLoading>",R,N
T@"NSData",R,C,N
T@"NSNumber",R,C,N
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
buttons
buttonIdentifier
presentWithCompletion:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
getVerificationContextForUserIdentity:error:
setInteractionLevel:
initWithVerificationContext:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
setItem:
setEndEvent:
setStarted:
ended
setEnded:
traceWithName:item:event:
traceIntervalWithName:item:beginEvent:endEvent:
_ended
T@"NSString",&,N,V_name
T@"MPAVItem",W,N,V_item
TI,N,V_endEvent
Td,N,V_started
Td,N,V_ended
isAvailable
shouldAttachAudioTapToItem:
prepareTap:maxFrames:processingFormat:
unprepareTap:
processTap:trackID:numberFrames:flags:audioBufferList:numberFramesOut:flagsOut:
finalizeTap:
T@"<MPCAudioProcessing>",&,N
configureQueueItem:
T@"<MPCAudioProcessing>",&,N,V_selfRef
_copyWithPlaybackRequestEnvironmentClass:
setAllowsHandlingNonAuthenticationDialogs:
setStoreDialogResponseHandler:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
T@"MPCPlaybackRequestEnvironment",R,N
_clientVersion
_delegationProperties
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
T@"MPCSharedListeningLiveLinkReusePool",R,N
_sessionIDLiveLinkMap
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByRemovingPercentEncoding
processData:usingProcedure:completion:
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeAllItems
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
trackForItemAtIndex:
updateWithPersonalizedResponse:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_playbackHistoryStore
_stationTracks
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
T@"ICRadioPlaybackHistory",R,C,N
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
serverTrackInfo
likeState
parentTrack
_playbackHistory
_trackModels
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
initWithInteger:
contentType
mediaPlayerBundle
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
removeObjectsForKeys:
isLocalDevice
sendCommand:toDestination:withOptions:completion:
removeOutputDevices:initiator:withReplyQueue:completion:
localizedFailureReason
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
deviceUIDsQueue
sendCommandWithResult:toDestination:withOptions:completion:
_applyOriginatingDeviceUIDs:
_setAnalyticsKey:value:
_setAnalyticsError:
canHostMultiplayerStream
hostedEndpointForOutputDeviceUIDs:queue:completion:
initWithFormat:
sendPlaybackQueueWithResult:toDestination:completion:
sendPlaybackQueueWithResult:toDestination:withOptions:completion:
_findOutputDevicesForDestination:completion:
sendPlaybackArchive:toDestination:withOptions:completion:
sendPlaybackArchiveWithResult:toDestination:withOptions:completion:
boolValueForOption:
supportedOptions
playbackSessionIdentifier
arrayWithObject:
sendPlaybackQueue:toDestination:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendPlaybackArchive:toDestination:completion:
sendPlaybackArchiveWithResult:toDestination:completion:
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
_allowsStoreContainerImport
_playEvent
TB,N,V_allowsStoreContainerImport
T@"MPModelPlayEvent",&,N,V_playEvent
getVolumeLevelForUID:completion:
clearPlaybackQueue
shouldExpectEmptyQueue
shouldDeferItemLoading
setShouldDeferItemLoading:
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
_teardownBookmarkingTimer
_setupBookmarkingTimerForItem:
setHasPlayedThisSession:
bookmarkingTimer
setBookmarkingTimer:
_bookmarkingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
hasCellularDataCapability
_allowCellularStreamingDidChangeNotification:
_updateAdditionalLoadingSupport
userAdvancedDuringPlayback
setObserver:
setSkipDate:
replaceTrackAtIndex:withTrack:
isSkippable
replaceItemAndIdentifierSet:atIndex:
setPreviousContentItemID:
insertItems:afterItem:
allItems
allowsRadioService
_endObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
setReasonType:
setQueueContentReferences:
_loadTracksWithRequest:completion:
setPreservingCurrentlyPlayingItem:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
setRequestedTrackCount:
setMainTitle:
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
userMonitorWithUserIdentity:fromUserIdentityStore:
isExplicitSettingEnabled
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
_removeAllTracks
_errorForRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
_beginObservingIdentityStoreForSignOut
pairWithFirst:second:
first
second
_handleGetTracksResponse:getTracksError:fromRequest:completion:
sharedQueue
operationCount
_responseDidInvalidateNotification:
_removeRestrictedTracks
_repersonalizeCurrentTracks
_isTransientLoadingError:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
_hasSignedOut
setData:
set_eventType:
set_eventTime:
set_sectionIdentifier:
set_itemIdentifier:
set_isRemoteSetQueue:
addQueueMetadata:
addPlaybackBehaviorWithCursor:
addSharePlayWithCursor:
addEnvironmentInfoWithCursor:
addAssetLoadInfoWithCursor:itemIDPayload:
set_itemMetadata:
set_queueType:
set_isFirstPlay:
set_isReplacingPlayback:
set_errorResolution:
set_errorSignature:
set_hasAccountInfo:
set_isActiveAccount:
set_subscriptionType:
set_getTracksWaitTime:
set_lookupWaitTime:
set_sessionActivationWaitTime:
set_setQueueCommandSendTime:
set_playCommandSendTime:
set_queueLoadWaitTime:
set_assetLoadWaitTime:
set_readyToPlayStatusWaitTime:
set_playCommandWaitTime:
set_rateChangeWaitTime:
set_firstAudioFrameWaitTime:
set_checkpointMRSetQueueBegin:
set_checkpointSetQueueBegin:
set_checkpointSetQueueEnd:
set_checkpointRateZero:
set_checkpointMRPlay:
set_checkpointPlay:
set_checkpointAssetLoadBegin:
set_checkpointItemConfigBegin:
set_checkpointItemBegin:
set_checkpointLikelyToKeepUp:
set_checkpointReadyToPlay:
set_checkpointRateOne:
set_checkpointFirstAudioFrame:
set_nextItemWaitTime:
set_featureName:
set_siriRefId:
set_isShuffled:
set_isAutoPlayEnabled:
set_isSharePlay:
set_assetType:
set_assetSource:
set_assetLocation:
set_assetCacheAge:
set_endpointType:
set_isDelegatedPlayback:
set_hasOnlinePlaybackKeys:
set_hasOfflinePlaybackKeys:
set_bagWaitTime:
set_leaseWaitTime:
set_suzeLeaseWaitTime:
set_subscriptionAssetLoadWaitTime:
set_mediaRedownloadWaitTime:
set_formatInfo:
set_hlsMetadataWaitTime:
set_routeInfo:
set_networkType:
eventTime
checkpointSetQueueBegin
checkpointPlay
_data
T@"NSMutableDictionary",&,N,V_data
T@"NSString",&,D,N,Sset_eventType:
T@"NSNumber",&,D,N,Sset_eventTime:
T@"NSString",&,D,N,Sset_sectionIdentifier:
T@"NSString",&,D,N,Sset_itemIdentifier:
T@"NSDictionary",&,D,N,Sset_itemMetadata:
T@"NSString",&,D,N,Sset_featureName:
T@"NSString",&,D,N,Sset_siriRefId:
T@"NSString",&,D,N,Sset_queueType:
T@"NSNumber",&,D,N,Sset_isRemoteSetQueue:
T@"NSNumber",&,D,N,Sset_isShuffled:
T@"NSNumber",&,D,N,Sset_isAutoPlayEnabled:
T@"NSNumber",&,D,N,Sset_isSharePlay:
T@"NSNumber",&,D,N,Sset_assetType:
T@"NSNumber",&,D,N,Sset_assetSource:
T@"NSString",&,D,N,Sset_assetLocation:
T@"NSNumber",&,D,N,Sset_assetCacheAge:
T@"NSNumber",&,D,N,Sset_endpointType:
T@"NSNumber",&,D,N,Sset_subscriptionType:
T@"NSNumber",&,D,N,Sset_isDelegatedPlayback:
T@"NSNumber",&,D,N,Sset_hasOnlinePlaybackKeys:
T@"NSNumber",&,D,N,Sset_hasOfflinePlaybackKeys:
T@"NSDictionary",&,D,N,Sset_formatInfo:
T@"NSDictionary",&,D,N,Sset_routeInfo:
T@"NSNumber",&,D,N,Sset_networkType:
T@"NSNumber",&,D,N,Sset_isFirstPlay:
T@"NSNumber",&,D,N,Sset_isReplacingPlayback:
T@"NSNumber",&,D,N,Sset_errorResolution:
T@"NSString",&,D,N,Sset_errorSignature:
T@"NSNumber",&,D,N,Sset_hasAccountInfo:
T@"NSNumber",&,D,N,Sset_isActiveAccount:
T@"NSNumber",&,D,N,Sset_setQueueCommandSendTime:
T@"NSNumber",&,D,N,Sset_playCommandSendTime:
T@"NSNumber",&,D,N,Sset_queueLoadWaitTime:
T@"NSNumber",&,D,N,Sset_assetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_readyToPlayStatusWaitTime:
T@"NSNumber",&,D,N,Sset_playCommandWaitTime:
T@"NSNumber",&,D,N,Sset_rateChangeWaitTime:
T@"NSNumber",&,D,N,Sset_firstAudioFrameWaitTime:
T@"NSNumber",&,D,N,Sset_nextItemWaitTime:
T@"NSNumber",&,D,N,Sset_lookupWaitTime:
T@"NSNumber",&,D,N,Sset_getTracksWaitTime:
T@"NSNumber",&,D,N,Sset_bagWaitTime:
T@"NSNumber",&,D,N,Sset_leaseWaitTime:
T@"NSNumber",&,D,N,Sset_suzeLeaseWaitTime:
T@"NSNumber",&,D,N,Sset_subscriptionAssetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_mediaRedownloadWaitTime:
T@"NSNumber",&,D,N,Sset_hlsMetadataWaitTime:
T@"NSNumber",&,D,N,Sset_sessionActivationWaitTime:
T@"NSNumber",&,D,N,Sset_checkpointMRSetQueueBegin:
T@"NSNumber",&,D,N,Sset_checkpointSetQueueBegin:
T@"NSNumber",&,D,N,Sset_checkpointRateZero:
T@"NSNumber",&,D,N,Sset_checkpointSetQueueEnd:
T@"NSNumber",&,D,N,Sset_checkpointMRPlay:
T@"NSNumber",&,D,N,Sset_checkpointPlay:
T@"NSNumber",&,D,N,Sset_checkpointAssetLoadBegin:
T@"NSNumber",&,D,N,Sset_checkpointItemConfigBegin:
T@"NSNumber",&,D,N,Sset_checkpointItemBegin:
T@"NSNumber",&,D,N,Sset_checkpointLikelyToKeepUp:
T@"NSNumber",&,D,N,Sset_checkpointReadyToPlay:
T@"NSNumber",&,D,N,Sset_checkpointRateOne:
T@"NSNumber",&,D,N,Sset_checkpointFirstAudioFrame:
T@"NSNumber",R,N
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
distantPast
_playbackSessionsDirectory
archivesAtURL:
setDataSourceQueue:
addTarget:action:
removeTarget:
initWithCodingPackage:error:
decodeRootObjectOfClasses:error:
sharedSecurityInfo
isContentProtectionEnabled
isDeviceClassCUnlocked
nowPlayingContentItem
archiveSessionArtwork
imageByPreparingForDisplay
initWithCodingPackage:userInfo:
encodeRootObject:
removeObjectIdenticalTo:
_cachesDirectory
stringWithContentsOfURL:encoding:error:
writeToURL:atomically:encoding:error:
deleteSessionWithIdentifier:completion:
copyWithNewIdentifier:
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSMutableArray",R,N,V_sessionArchives
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
T@"NSString",&,N
initWithModelObject:response:
T@"MPModelSharedListeningParticipant",R,N,V_modelObject
setArtworkIdentifier:
T@"NSString",C,N,V_artworkIdentifier
T@"MPCMediaRemoteController",R,W,N,V_controller
timedMetadataGroups
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithArtworkResponseArray:
tokenWithImageArtworkInfo:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
metadataIdentifiers
_timedMetadataGroups
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
T@"NSArray",R,C,N,V_timedMetadataGroups
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16@24@32
v32@0:8@16@24
v36@0:8@16d24f32
v32@0:8@16q24
v24@0:8@16
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
v28@0:8^v16I24
@24@0:8@16
@32@0:8@16@24
v16@0:8
v32@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24
v40@0:8^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
^{opaqueMTAudioProcessingTap=}
^{OpaqueAudioQueue=}
^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}
@"MPCPlaybackEngine"
@"NSNumber"
@"_MPCAudioSpectrumAnalyzerStorage"
@"NSMutableArray"
@"MPCProcessAudioTap"
@"MPCAudioSpectrumAnalyzer"
q16@0:8
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
q24@0:8{MPCAudioFrequencyBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
f32@0:8q16o^{MPCAudioFrequencyBand=ff}24
f16@0:8
v20@0:8f16
@?16@0:8
v24@0:8@?16
^{_MPCAudioFrequencyBandInternal={MPCAudioFrequencyBand=ff}fffQ}
@28@0:8q16f24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16Q24@32
v36@0:8^v16I24@28
v24@0:8q16
{DSPSplitComplex="realp"^f"imagp"^f}
^{OpaqueFFTSetup=}
v36@0:8@16@24B32
v24@0:8@"ICLiveLink"16
v36@0:8@"ICLiveLink"16@"NSError"24B32
v32@0:8@"ICLiveLink"16@"NSArray"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningQueue"24
v40@0:8@"ICLiveLink"16@"ICSharedListeningItem"24@"ICLiveLinkIdentity"32
v32@0:8@"ICLiveLink"16@"ICLiveLinkEvent"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningItem"24
v32@0:8@16@?24
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v40@0:8@16@24@?32
v40@0:8q16@24@32
v32@0:8q16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MSVBlockGuard"
@"MPCPlaybackIntent"
@"NSIndexPath"
@"MSVSectionedCollection"
@"ICLiveLink"
@"ICLiveLinkIdentity"
@24@0:8^{_NSZone=}16
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSArray"
@"MPSectionedCollection"
@48@0:8@16@24@32@40
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
B40@0:8B16@20B28@32
B36@0:8B16q20@28
B28@0:8B16@20
B32@0:8B16I20@24
@44@0:8@16@24I32@36
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B40@0:8B16@"NSIndexPath"20B28@"MPMiddlewareChain"32
B36@0:8B16q20@"MPMiddlewareChain"28
B28@0:8B16@"MPMiddlewareChain"20
@"MPCPlayerAudioFormat"32@0:8@"MPCPlayerAudioFormat"16@"MPMiddlewareChain"24
@"MPCPlayerAudioRoute"32@0:8@"MPCPlayerAudioRoute"16@"MPMiddlewareChain"24
@"NSArray"32@0:8@"NSArray"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
v40@0:8@16Q24Q32
v24@0:8Q16
@"AVAudioSession"
@"NSString"
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16f24B28@32
v48@0:8@16@24@32@40
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v52@0:8@16f24@28@36@44
v28@0:8f16@20
v36@0:8B16@20@28
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@16d24@32
v48@0:8@16d24d32@40
v40@0:8@16@24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16q24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16f24B28@"<MFTimeStamp>"32
v48@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"NSString"32@"<MFTimeStamp>"40
v40@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v52@0:8@"<MFQueuePlayerItem>"16f24@"NSString"28@"NSString"36@"<MFTimeStamp>"44
v28@0:8f16@"<MFTimeStamp>"20
v36@0:8B16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFQueuePlayerItem>"24@"<MFTimeStamp>"32
v40@0:8q16@"NSString"24@"<MFTimeStamp>"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16d24@"<MFTimeStamp>"32
v24@0:8@"<MFTimeStamp>"16
v24@0:8@"<MFQueuePlayerItem>"16
v48@0:8@"<MFQueuePlayerItem>"16d24d32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"NSDictionary"40
v24@0:8@"MPCQueueController"16
v32@0:8@"MPCQueueController"16@"MPAVItem"24
v32@0:8@"MPCQueueController"16@"MPPlaybackContext"24
v32@0:8@"MPCQueueController"16q24
v32@0:8@"MPCQueueController"16@"NSString"24
d16@0:8
v20@0:8B16
B48@0:8q16q24B32B36^@40
B28@0:8f16@?20
v20@0:8i16
v24@0:8d16
v36@0:8f16@20@?28
v40@0:8d16@24@?32
B24@0:8q16
v40@0:8q16@24@?32
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"MPCQueueController"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@"MPCPlaybackEngine"16@0:8
@"MPCQueueController"16@0:8
@"MPAVItem"16@0:8
B28@0:8f16@?<v@?>20
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v52@0:8@16d24d32B40@44
v48@0:8@16@24@32d40
@"MPCQueueController"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPCPlayerItemConfigurator"
@"MPCAVItemTrace"
@"MPCPlayPerfAnalytics"
@"_MPCAudioSessionController"
@"<MPCPlaybackEngineEventStreamDeferralAssertion>"
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"ICStoreDialogResponse"16@0:8
q24@0:8@16
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8^@16
B32@0:8@16^@24
v64@0:8@16@24@32@40@48@56
v80@0:8@16@24@32@40@48@56@64q72
v64@0:8@16@24^@32^@40^@48^q56
@52@0:8@16@24@32@40B48
B40@0:8@16@24@32
B32@0:8@16q24
v28@0:8@16B24
v28@0:8f16@?20
{?=qqqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICContentKeySession"
@"ICAVAssetDownloadURLSession"
@"ICURLRequest"
@"ICMusicSubscriptionLeaseStatus"
@"NSDictionary"
@"MPCAudioAssetTypeSelection"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"MPCPlaybackEngineEventStream"
@"MPCPlayerAudioFormat"
@"MPCPlayerAudioRoute"
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCReportingPlaybackObserver"
{?="containerIndex"b1"itemIndex"b1}
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
{_MPCLoggingConsumerChartState="command"q"session"q"container"q"item"q"asset"q}
{_MPCLoggingConsumerChartStatus="userExpectsAudio"B"timeControlStatus"q}
@"<MPCPlaybackEngineEventStreamSubscription>"
@"MPCPlaybackEngineEvent"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}16@0:8
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}32@0:8@16@24
@36@0:8@16@24B32
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@40@0:8@16@24q32
v56@0:8@16@24@32@40Q48
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@"MPMutableSectionedCollection"
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
@40@0:8@16@24B32B36
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@"MPCPlayerPath"
q40@0:8q16q24@32
@40@0:8@16q24@32
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@28@0:8d16f24
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
@48@0:8@16@24q32^@40
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
v36@0:8@16B24@?28
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"NSObject<OS_dispatch_source>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@"MPCPlayPerfMetrics"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
@"MPCAssetLoadPropertiesLocalFileEvaluation"
v68@0:8^@16^@24B32^@36q44@52@60
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v68@0:8^@16^@24B32^@36q44@"NSString"52@"NSString"60
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"d@"NSError">24
@"MPModelPlayEvent"32@0:8@"NSString"16@"NSString"24
@"MPIdentifierSet"32@0:8@"NSString"16@"NSString"24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B32@0:8@"NSString"16^@24
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
v40@0:8@?16@?24@?32
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
@"MPModelFileAsset"
@36@0:8@16B24@28
q36@0:8@16B24@28
B28@0:8@16B24
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@64@0:8@16@24@32q40@48@?56
@"MPAVItem"
@"<MPCAssetLoaderDelegate>"
@"NSError"
v40@0:8@16q24@?32
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
@44@0:8I16@20@28@36
I16@0:8
@40@0:8@16Q24@32
@"MPCPlayerCommandRequest"
@"NSDate"
@"MPCPlayerCommandStatus"
v32@0:8{?=qq}16
@"ICUserIdentity"
{?="reverseCount"q"forwardCount"q}
@24@0:8@?16
@32@0:8@16@?24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
v48@0:8@16q24q32@40
v56@0:8@16@24q32q40@48
@"NSObject<OS_dispatch_group>"
@"<MPCRTCEventConsumerTestingDelegate>"
@"RTCReporting"
v40@0:8Q16@24Q32
v32@0:8Q16@24
@32@0:8Q16d24
@24@0:8Q16
v48@0:8@16@24@32^v40
q40@0:8{?=qiIq}16
{?=qiIq}24@0:8q16
@"AVPlayer"
@"MPCSceneCollection"
@"MPNotificationObserver"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@"ICSharedListeningQueue"
@"MPRemoteCommandHandlerDialogAction"
@"MPRemoteCommandHandlerDialog"
@"MPCPlayerCommandDialog"
@"MPRemoteCommandStatus"
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@48@0:8@16@24@32d40
@"MPStoreLibraryPersonalizationResponse"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@32@0:8q16^@24
@"<MPCSupportedCommands>"
@28@0:8I16@20
f24@0:8@16
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v32@0:8@"NSError"16@"<MFPlayerItem>"24
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"NSMutableSet"
@"<MPCExternalPlaybackRouter>"
B24@0:8^@16
B32@0:8^@16^@24
@40@0:8@16@24^@32
@44@0:8@16@24@32B40
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
@"MPModelResponse<MPCModelPlaybackResponse>"
@24@0:8^q16
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanJumpToItem"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
d48@0:8@16@24@32@40
d40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v32@0:8@16d24
@"ICPlayActivityController"
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
^{_MRSystemAppPlaybackQueue=}16@0:8
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@"UIView"16@?<v@?>24
v24@0:8@?<v@?>16
@"<MPCVideoOutputDelegate>"16@0:8
v24@0:8@"<MPCVideoOutputDelegate>"16
@"UIViewController"16@0:8
@"<MPCVideoOutputDelegate>"
@"AVPlayerViewController"
v32@0:8@"<MPCVideoOutput>"16@"<UIViewControllerTransitionCoordinator>"24
B24@0:8@"<MPCVideoOutput>"16
v24@0:8@"<MPCVideoOutput>"16
v32@0:8@"<MPCVideoOutput>"16@"NSError"24
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
v60@0:8{?=QQQQd}16B56
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCStoreLibraryPersonalizationMiddleware"
@"MPCPlaybackSharedListeningProperties"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
B40@0:8@16^d24^@32
@40@0:8@16^d24^@32
@32@0:8@16^@24
@"MPAVRoutingController"
@"MPPlaybackEQSetting"
@"MPCModelGenericAVItem"
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
B40@0:8@16@24q32
q36@0:8@16@24B32
{?="representativeItemCloudID"b1"storeAdamID"b1}
v28@0:8Q16B24
@"MSVLRUDictionary"
@32@0:8q16@24
@"MPCSharedListeningEventParticipant"
@"MPCSharedListeningSessionEvent"
@"MPCSharedListeningPlaybackEvent"
@"MPCSharedListeningQueueEvent"
@"MPCSharedListeningReactionEvent"
@"MPCSharedListeningCustomEvent"
@"MPCSharedListeningQueueEventContentAdded"
@"MPCSharedListeningQueueEventContentRemoved"
@"MPCSharedListeningQueueEventContentReordered"
@"MPCSharedListeningQueueEventContentReplaced"
@"MPCSharedListeningQueueEventContentPlayedNow"
@"MPCSharedListeningQueueEventContentUpdatedMessage"
@"MPCSharedListeningQueueEventPlaybackModeChanged"
@20@0:8B16
v44@0:8I16@20@28@?36
v52@0:8I16@20@28@36@?44
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
@"MRCommandResult"
@27@0:8@16{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}24
{MPCModelStorePlaybackItemsRequestAccumulatorResult="didFinishEntireRequest"B"didFinishBatch"B"hasCollectionItemsWithPlaybackAuthorizationToken"B}
@"MPServerObjectDatabaseImportResult"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@32@0:8@16Q24
v28@0:8B16@?20
v56@0:8@16q24@32Q40@?48
@"MPCSharedListeningContainerInfo"24@0:8@"NSString"16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSString"16@"NSString"24
v56@0:8@"MPPlaybackContext"16q24@"NSString"32Q40@?<v@?@"NSString"@"NSError">48
@"<MPCQueueControllerCommandInterposingHost>"16@0:8
v24@0:8@"<MPCQueueControllerCommandInterposingHost>"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSArray"24@0:8q16
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
B24@0:8@"MPAVItem"16
@28@0:8@16B24
@48@0:8@16q24q32B40B44
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"48@0:8@"MPAVItem"16q24q32B40B44
B32@0:8q16@"MPAVItem"24
v24@0:8@"AVPlayerPlaybackCoordinator"16
v32@0:8q16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"MPCSharedListeningContainerInfo"16
v24@0:8@"MPCSharedListeningEvent"16
v40@0:8@"NSString"16@"NSString"24@"ICLiveLinkIdentity"32
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@40@0:8q16q24^q32
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
v48@0:8@16@24@32@?40
@32@0:8@16^B24
@"AVPlayerPlaybackCoordinator"
@"<MPCQueueControllerDelegate>"
@"<MPCQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
@56@0:8@16q24Q32@40@48
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"NSArray"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"<MPCQueueControllerCommandInterposingHost>"
@"MPPlaybackUserDefaults"
v28@0:8@16f24
@"MPCWaitForLikelyToKeepUp"
@"MPCWaitForReadyToPlaySignpost"
@"MPCPlayToSetRateSignpost"
@"MPCSetRateToEffectiveRateSignpost"
{?="storeAdamID"b1}
v40@0:8@16@?24@?32
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerAudioFormat"16
@"MPCPlayerAudioFormat"16@0:8
@"MPCPlayerAudioRoute"16@0:8
{?=dddddffBB}16@0:8
@"MPCPlayerResponseParticipant"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@24@0:8d16
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@"MPCPlayerCommandRequest"20@0:8B16
@28@0:8@16I24
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
@"AMSEngagement"
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
@36@0:8@16@24f32
@"ICEnvironmentMonitor"
@"MSVABTestGenerator"
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
v28@0:8q16B24
v32@0:8@16B24B28
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
B24@0:8@"<MFQueuePlayerItem>"16
@"<MFGaplessParameters>"16@0:8
@"<MFCrossFadeParameters>"16@0:8
v48@0:8I16@20I28@32@?40
{CGSize=dd}40@0:8@16{CGSize=dd}24
{CGSize=dd}40@0:8@"MPArtworkCatalog"16{CGSize=dd}24
v32@0:8@"MPArtworkCatalog"16@"UIView"24
v40@0:8@"MPArtworkCatalog"16@"UIView"24@"MPArtworkRepresentationCollection"32
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"<MPArtworkDataSource>"
^v20@0:8I16
v32@0:8^v16@?24
@32@0:8@16d24
@"NSCountedSet"
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@"MPCPlaybackEngineEvent"16@0:8
@40@0:8@16@24d32
v44@0:8@16@24@32B40
v68@0:8@16@24@32@40@48@56B64
v72@0:8@16@24@32@40@48B56B60d64
v52@0:8@16@24@32@40B48
@"NSProgress"
@"MPCModelStorePlaybackItemsResponse"
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
@40@0:8@16q24d32
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@36@0:8i16@20@28
v28@0:8I16d20
v20@0:8I16
@"<MPCProcessAudioTapDelegate>"
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
@"MPNowPlayingInfoCenter"16@0:8
@"MPRemoteCommandCenter"16@0:8
@"AVAudioSession"16@0:8
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
v32@0:8d16d24
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
@"<MPCPlaybackEngineInitializationParameters>"
v32@0:8@16^v24
I32@0:8@16q24
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
@"MPNowPlayingContentItem"
@"UIImage"
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@"<MFPlaybackStackController>"
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
@48@0:8@16q24q32q40
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFQueuePlayerItem>"24
@"<MPCQueueItemProviding>"
@"ICRadioGetTracksResponse"
v36@0:8@16@24I32
@40@0:8@16@24I32I36
v40@0:8r^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
v24@0:8r^{opaqueMTAudioProcessingTap=}16
v64@0:8r^{opaqueMTAudioProcessingTap=}16i24q28I36^{AudioBufferList=I[1{AudioBuffer=II^v}]}40^q48^I56
B24@0:8@"MPCModelGenericAVItem"16
@"<MPCAudioProcessing>"16@0:8
v24@0:8@"<MPCAudioProcessing>"16
v24@0:8^{opaqueMTAudioProcessingTap=}16
v64@0:8^{opaqueMTAudioProcessingTap=}16i24q28I36^{AudioBufferList=I[1{AudioBuffer=II^v}]}40^q48^I56
@"<MPCAudioProcessing>"
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v40@0:8@16@24d32
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPModelSharedListeningParticipant"
@333333
````
---------'*--
!!$!!!'*-03
6!!!9<
#)Hg
048H[
+KOSGW^bf
jnuy}
(>DJ
 #&)
?BEHKN
ILORUX
]`cfil
"%(+.
TWZ]`
NQTWZ]`
#BHNmsy
#BHNTsy
!(/6
Fpppd{
,(*,,
$7LR
&=@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
[AP] - Audio tap reported samples before we had an appropriately sized buffer
build
link:start
%{public}@ didUpdateQueue:
%{public}@ _transitionToBuildState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToBuildState %{public}@ -> %{public}@
build:replace
%{public}@: calling completion intent=%{public}@ status=%{public}@
intent=%{public}@ status=%{public}@
%{public}@ _transitionToSourceState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToSourceState %{public}@ -> %{public}@
source:getPlaybackContext
error=%{public}@
%{public}@ _transitionToLiveLinkState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToLiveLinkState %{public}@ -> %{public}@
 enableTelemetry=YES 
PlaybackStackInitialSetup
PlaybackStackSetup
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
QueueControllerReload
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
reloadWithPlaybackContext failed - error: %{public}@ - resolution: %ld
QueueControllerInsert
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
replaceCurrentItemWithPlaybackContext failed with error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
[%{public}@]-MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@ - play: %{BOOL}u - mode: %{public}@
shouldPlay=%{BOOL}u
InitialItem
PrepareForRate
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
[%{public}@]-MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
[%{public}@]-Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
[%{public}@]-endPlaybackWithIdentifier %{public}@ - Received: clearing all playback queue
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
[%{public}@]-Pause for lease prevention %{public}@ completed - error=%{public}@
[%{public}@]-Pause command %{public}@ completed - error=%{public}@
[%{public}@]-Play command %{public}@ completed - error=%{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
[%{public}@]-Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
[%{public}@]-Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
[%{public}@]-End seek command %{public}@ completed - error=%{public}@
[%{public}@]-Set rate command %{public}@ completed - rate=%f - error=%{public}@
[%{public}@]-Set current time command %{public}@ completed - time=%f - error=%{public}@
[%{public}@]-%{public}@ - _logTimeJumpForItem - jumpIdentifier: %ld - userInitiated:%{BOOL}u - %.2fs -> %.2fs [D:%.2fs]- timeStamp:%{public}@
Unexpected _logTimeJumpForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected _playbackDidStopForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-Triggering MR command %{public}@ from userAction: %{public}@
[%{public}@]-Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - currentItemWillChangeFromItem - %{public}@ -> %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidBecomeCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidResignCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - FF or RW [ignoring time change to avoid time snaps] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - rate: %.2f - effectiveRate: %2f - state: %{public}@ - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - userSeekCompletedForItem - item=%{public}@ - [%.2fs -> %.2fs]- timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
Unexpected itemDidFailToPlayToEnd: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - No existing formats on item
[%{public}@]-%{public}@ - active audio format from AV: %{public}@
[%{public}@]-%{public}@ - [AF] - Updating active format : %{public}@
[%{public}@]-Event %{public}@: startup time: %lfs - bitrates: [observed:%lf, indicated:%lf, average audio:%lf, switch:%lf] - entry reason:%ld
[%{public}@]-%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - from stalling:%{BOOL}u - timeStamp:%{public}@
[%{public}@]-PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
Unexpected playbackDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackDidStopForItem- item=%{public}@ - source:%{public}@ - reason:%{public}@   - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeNotifiedForItem - item=%{public}@ - rate:%1.2f - reason:%{public}@ - participant:%{public}@ - timeStamp:%{public}@
Unexpected playbackRateDidChangeNotifiedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - firstFrameWillRenderForItem - item=%{public}@ - startTime:%{public}.2f
Unexpected firstFrameWillRenderForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - timeControlStatusDidChange - status:%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - stateDidChange - [%{public}@/MP:%ld/NP:%ld -> %{public}@/MP:%ld/NP:%ld] - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
Unexpected playbackBufferStateDidChangeToState:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackIsLikelyToKeepUp:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - tracksDidChange: - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - end of queue reached [%{public}@]
[%{public}@]-%{public}@ - Media Services were interrupted - item:%{public}@ - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were interrupted - no item at death - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were restored - timeStamp:%{public}@
[%{public}@]-%{public}@ - Playback stuck on non-playable item: %{public}@
[%{public}@]-%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
Unexpected firstVideoFrameWasRenderedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - relativeVolumeDidChangeTo: - volume=%{public}f - timeStamp:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidStartForItem: - item=%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidEndForItem: - item=%{public}@ - error:%{public}@ - resolution:%{public}@
Unexpected assetLoadingDidCompleteForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected assetLoadingDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Playback failed due to age verification requirement: %{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Cancelling download request [dealloc] - request:%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to clean up downloaded asset %{public}@
%{public}@: Missing DSID in delegated identity properties - skipping playback
[%{public}@]-%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
[%{public}@]-[AL] - %{public}@: Preferred audio: %{public}@ - HLSContentPolicy: %{public}@ - Selector: %{public}@, playbackAuthorizationToken=%{public}@, fileAsset=%p, storeAsset=%p
[%{public}@]-[AL] - %{public}@: Starting asset load...
[AL] - %{public}@: Returning asset load early with error: %{public}@
[AL][Bag Loading] - %{public}@: Failed to load the bag. err=%{public}@.
[%{public}@]-[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Finished loading url bag.
[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Timed out loading url bag.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Subscription lease properties already loaded.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Loading subscription lease properties.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished loading subscription lease properties.
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out loading subscription lease properties.
LoadAssetGetSubscriptionLeaseProperties
[%{public}@]-[AL] - %{public}@: preloading subscription status.
[%{public}@]-[AL] - %{public}@: Asset is %{public}@ - Preferred audio: %{private}@, isDelegatedPlayback=%{BOOL}u, allowsStreamingPlayback=%{BOOL}u, HLSContentPolicy=%{public}@}, endpointType=%d
[%{public}@]-[AL] - %{public}@: Using local file asset at path: %{public}@.
[AL] - %{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
LoadAssetLocalFileLoadOperation
[%{public}@]-[AL] - %{public}@: Using home sharing asset.
[AL] - %{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
LoadAssetHomeSharingLoadOperation
[%{public}@]-[AL] - %{public}@: Using existing Radio cached playback response: %{public}@
[%{public}@]-[AL] - %{public}@: No cached Radio playback response found.
LoadAssetAssetInfoCacheRequest
[%{public}@]-[AL] - %{public}@: No local file of appropriate quality, using cloud streaming.
[AL] - %{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
[AL] - %{public}@: Subscription is required, and we failed to load the subscription status.
[AL] - %{public}@: Playback authorization token is required for playback.
[AL] - %{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
LoadAssetSubscriptionAssetLoadOperation
[AL] - %{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
LoadAssetMediaRedownloadOperation
[AL] - %{public}@: No valid endpoint type (%ld), skipping streaming redownload.
[AL] - %{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
LoadAssetLowQualityFileLoadOperation
[%{public}@]-[AL] - %{public}@: Ready to process asset load result: %{public}@
[%{public}@]-[AL] - %{public}@: not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
[%{public}@]-[AL] - %{public}@: Using iTunes Store Content Info: %@
[%{public}@]-[AL] - %{public}@: Non HLS Asset - Reloading playback keys if required
[%{public}@]-[AL] - %{public}@: Radio station does not require a subscription, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Protection type is %li, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Not subscription content, skipping playback key check.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Lease session invalid, skipping key loading.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Reloading FairPlay key status to ensure the latest value is known...
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@ with error: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
LoadAssetLoadFairPlayKeyStatus
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Already have playback keys from lease status: %{public}@, no need to do another request.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the asset requires online keys
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the lease status indicates none available: %{public}@
contentType=%{public, signpost.telemetry:string1, name=contentType}s
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished subscription lease request for playback keys with error: %{public}@.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
 enableTelemetry=YES isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAssetLeaseSessionPlaybackRequest
[%{public}@]-[AL] - %{public}@: AVURLAsset %{public}@ - options: %{public}@
[%{public}@]-[AL] - %{public}@: Initiating full online key retrieval [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Using purchase bundle: %{public}@
[%{public}@]-[AL] - %{public}@: Attempting to load full subscription asset [first asset requires online keys]
[AL] - %{public}@: Full subscription asset loading completed [first asset requires online keys]
[AL] - %{public}@: [Asset caching: CRABS] Initiating caching
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Asset download completed successfully.
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Writing placeholder purchase bundle at path: %{public}@
[AL] - %{public}@: [Asset caching: CRABS] Asset download completed with error: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Loaded full subscription asset, updated purchaseBundle = %@
[AL] - %{public}@: [Asset caching: CRABS] Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
[AL] - %{public}@: [Asset caching: CRABS] Failed to load full subscription asset: %{public}@.
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Writing purchase bundle at path: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
[AL] - %{public}@: [Asset caching: CRABS] Error caching file asset: %{public}@.
[AL] - %{public}@: [Asset caching: CRABS] Finished caching file asset.
[AL] - %{public}@: [Asset caching: CRABS] Removed incomplete download at URL: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: CRABS] Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
LoadAssetCRABSAssetDownload
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Initiating download to destination file %{public}@
LoadAssetHLSAssetDownload
LoadAssetCreateAVPlayerItem
[%{public}@]-[AL] - %{public}@: Starting Suze lease session...
[AL] - %{public}@: Failed to create suze lease with error: %{public}@.
[AL] - %{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
LoadAssetSuzeLeaseSession
[%{public}@]-[AL] - %{public}@: Asset loading failed with error: %{public}@
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s result=%{public, signpost.telemetry:string2, name=result}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAsset
[%{public}@]-[AL] - %{public}@: Asset load finished.
[%{public}@]-[AL] - %{public}@: Non-decorated asset load results for HLS playback: %{public}@
[%{public}@]-[AL] - %{public}@: Decorated asset load results for HLS playback: %{public}@
[%{public}@]-[AL] - %{public}@: HLS content without proper URLs: not setting-up a content key session
[%{public}@]-[AL] - %{public}@: Forcing a refresh of the hls keys due to a certificate mismatch
[AL] - %{public}@: Failed to fetch FairPlayKeyStatus for offline key determination error: %{public}@
[%{public}@]-[AL] - %{public}@: Not requesting offline keys because Fairplay does not have offline subscription keys
[AL] - %{public}@: [Asset caching: HLS] Failed to create download url session for HLS asset
[AL] - %{public}@: [Asset caching: HLS] Attempting to cache asset of type %{public}@ using HLS caching logic
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Setting cache properties of HLS asset with traits: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to update cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Caching of HLS asset completed successfully
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Asset download complete. url:%{public}@ err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Removed previous file at URL: %{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to remove previous file at URL: %{public}@ error: %{public}@.
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Failed to clear cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Clearing cached asset file [fatal download error]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: [Asset caching: HLS] Clearing cached asset [asset is corrupted]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to destination URL: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ and linked to destination URL: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ but failed to link to shared cache URL: %{public}@ error: %{public}@
[%{public}@]-[AL] - %{public}@: Asset downloaded to %{public}@ but failed to link to destination URL: %{public}@ error: %{public}@
[%{public}@]-%{public}@: [AF] - Updating preferred audio format: %{public}@ -> %{public}@
[%{public}@]-%{public}@: [AF] - Updating active audio format: %{public}@ -> %{public}@ - Justification: %ld
[%{public}@]-%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
[%{public}@]-%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
[%{public}@]-%{public}@: Transforming error network unavailable instead of original: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Getting subscription lease session
[%{public}@]-[LeaseRatePreparation] - %{public}@: Sending subscription lease request
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status: %{public}@ error: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Subscription lease not required]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Playback keys not required] - someKeysAreRequired:%{BOOL}u - isDownloadedAndHasOfflineKeys: %{BOOL}u - requiresOnlineKeys: %{BOOL}u - hasNeitherOnlineNorOfflineKeys: %{BOOL}u
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [No subscription lease session available]
[%{public}@]-%{public}@ Using start time: %f
[%{public}@]-%{public}@ Using stop time: %f
[%{public}@]-%{public}@ Using bookmark start time: %f
%{public}@: setupWithPlaybackInfo called without an asset loaded
%{public}@: setupWithPlaybackInfo called without an asset loaded and isAssetLoaded is TRUE
%{public}@: Uninitialized MPModelPropertyAlbumTraits - album=%{public}@.
%{public}@: Uninitialized MPModelPropertyPlaylistTraits properties - playlist=%{public}@.
%{public}@: Unwrapped playback error with type=%@ error=%{public}@.
%{public}@: Subscription lease request failed [error during resolution] - error=%{public}@.
[%{public}@]-%{public}@: Finished sending subscription lease request for error resolution
%{public}@: Finished reloading FairPlayKey status - error=%{public}@
[%{public}@]-%{public}@: Finished reloading FairPlayKey status
%{public}@: Finished authorize machine request for error resolution with error: %{public}@.
[%{public}@]-%{public}@: Finished authorize machine request successfully.
[%{public}@]-%{public}@: Purging cached content key(s) for invalid user error.
%{public}@: Failed to remove cached hls keys. err=%{public}@.
[%{public}@]-%{public}@ - BackgroundTask: Took assertion (%lli) at %{public}s:%d
[%{public}@]-%{public}@ Using adamID %lld for key server requests from identifier set %{public}@
[%{public}@]-%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
[%{public}@]-%{public}@: Enabling album loudness on player item %{public}@
[%{public}@]-%{public}@: Setting loudness info %{public}@ on player item %{public}@
[%{public}@]-%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Loading subscription status...
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Skipping subscription lease load since the subscription status indicated it shouldn't be used
[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@ with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Loading subscription lease session...
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Finished loading subscription lease session: %{public}@
[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Failed to load subscription lease session with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Posting ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification: %{public}@
[%{public}@]-%{public}@ - BackgroundTask: End assertion (%lli) at %{public}s:%d
[%{public}@]-[Bookmarking] - %{public}@: _handlePlaybackFinishedTime:didFinishByHittingEnd - Updating bookmark with entity %{public}@ - bookmarkTime: %.2f - hasBeenPlayed: %{BOOL}u
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - updating prevention status - lease status: %{public}@
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - Lease playback prevention state did change to: %li [status: %{public}@
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] completion %{public}@
|%{public}@ %{public}@  
 STREAM START 
 %{public}@ [%d] 
|%{public}@ %{public}@ %{public}@
 SESSION BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION END                %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE END        %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 SESSION RESET [BOUNDARY]   %{public}@
|%{public}@ %{public}@ %{public}@
 APPLICATION TERMINATION
|%{public}@ %{public}@ %{public}@
 APPLICATION FOREGROUND
|%{public}@ %{public}@ %{public}@
 APPLICATION BACKGROUND
|%{public}@ %{public}@ %{public}@
 DEVICE CHANGED
|%{public}@ %{public}@ %{public}@ 
 name: %{private}@; model: %{public}@
|%{public}@ %{public}@ %{public}@  
 application: %{public}@/%{public}@; bundleID: %{public}@; uuid: %{public}@; version: %{public}@
|%{public}@ %{public}@ %{public}@  
 root: %{public}-26@; uuid: %{public}@; version: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 os: %{public}@ [%{public}@]/%{public}@ %{public}@; internalCarry: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 NET REACHABILITY CHANGED   %{public}@
Unexpected signalStrength values: %{public}@
|%{public}@ %{public}@ %{public}@
 NETWORK TYPE CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 strength: %{public}@
|%{public}@ %{public}@ %{public}@  
 constrained: %{BOOL}u; high quality: %{BOOL}u; expensive: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 COMMAND BEGIN              %{public}@ 
|%{public}@ %{public}@ %{public}@ 
  source: %{public}@
|%{public}@ %{public}@ %{public}@  
 nowPlayingContentItemID: %{public}@
|%{public}@ %{public}@ %{public}@  
 commandSendTime: %{public}@
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@
 COMMAND TIMEOUT            %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@ 
|%{public}@ %{public}@ %{public}@
 COMMAND END                %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
 dialog.title: "%{public}@"; dialog.message: "%{public}@"
|%{public}@ %{public}@ %{public}@  
 dialog-action: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
   error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@
 COMMANDS CHANGED
|%{public}@ %{public}@ %{public}@ 
 commands:
|%{public}@ %{public}@ %{public}@  
%{public}@ %{public}-40@ [%{public}@]
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 added: %lld; removed: %lld; updated: %lld
|%{public}@ %{public}@ %{public}@
 COMMANDS CHANGED           [no change]
|%{public}@ %{public}@ %{public}@
 QUEUE ADD                  %{public}@
|%{public}@ %{public}@ %{public}@ 
 queue: %{public}@
|%{public}@ %{public}@ %{public}@  
 feature: %{public}@
|%{public}@ %{public}@ %{public}@  
 queue-grouping-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 account: %{public}@
|%{public}@ %{public}@ %{public}@  
 requesting-application: %{public}@/%{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedAccount: %{public}@; delegatedDeviceName: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedDeviceOSVariant: %{public}@; delegatedDeviceUserAgent: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegated-private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 private-listening-source: %{public}@; private-listening-override: %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM ADD             %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REMOVE          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REORDER         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD BEGIN           %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD END             %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@ 
 title: %{public}@
|%{public}@ %{public}@ %{public}@  
 playlistVersionHash: %{public}@
|%{public}@ %{public}@ %{public}@  
 stationType: %{public}@; stationSubtype: %{public}@
|%{public}@ %{public}@ %{public}@  
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER END              %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BEGIN                 %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 duration: %0.2f; initialPosition: %0.2f; startBoundary: %0.2f; endBoundary: %0.2f
|%{public}@ %{public}@ %{public}@  
 requiresPAF: %{BOOL}u; video: %{BOOL}u; artistUploaded: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM UPDATE                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM JUMP                  %{public}@ %{public}@ [%{public}@]
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f; end: %0.2f
|%{public}@ %{public}@ %{public}@  
 userInitiated: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM PAUSE                 %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 end: %0.2f
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@  
 source: %{public}@
|%{public}@ %{public}@ %{public}@
 RATE CHANGED               %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 position: %0.2f
|%{public}@ %{public}@ %{public}@  
 participant: %{public}@
|%{public}@ %{public}@ %{public}@  
 rate: %0.2f
|%{public}@ %{public}@ %{public}@
 FIRST AUDIO FRAME          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %{public}@
|%{public}@ %{public}@ %{public}@  
 wait time: %0.2fs
|%{public}@ %{public}@ %{public}@  
 gap: %0.2fs
|%{public}@ %{public}@ %{public}@
 ITEM RESUME                %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f
|%{public}@ %{public}@ %{public}@
 READY TO PLAY              %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER READY          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER STALL          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER FINISH         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 skd: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM METADATA PING          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 data: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM END                   %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 didPlayToEnd: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 AUDIO CHANGE               %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 activeFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 targetFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification: %{public}@; preferences: %{public}@
|%{public}@ %{public}@ %{public}@  
 alternate: %{public}@
|%{public}@ %{public}@ %{public}@  
 audioRoute: %{public}@
|%{public}@ %{public}@ %{public}@
 ASSET TYPE SELECTION       %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@
|%{public}@ %{public}@ %{public}@  
 explanation: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification:
|%{public}@ %{public}@ %{public}@      
 %{public}@: %{public}@
|%{public}@ %{public}@ %{public}@  
 explanation: %{public}@
|%{public}@ %{public}@ %{public}@
 AUDIO FORMAT SELECTION     %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 format: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET BEGIN           %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET END             %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM ASSET INFO            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@; subscription: %{BOOL}u; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 networkOperations: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM CONFIG BEGIN          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@
 ITEM CONFIG END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 EQ: %{public}@
|%{public}@ %{public}@ %{public}@  
 soundCheckVolumeNormalization: %.3f
|%{public}@ %{public}@ %{public}@  
 loudnessInfo: %{public}@
|%{public}@ %{public}@ %{public}@  
 hlsMetadataWaitTime: %0.3fs
|%{public}@ %{public}@ %{public}@  
 route: %{public}@ (%{public}@)
|%{public}@ %{public}@ %{public}@
 ITEM FAILED                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER END            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 HLS BEGIN                  %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 hasIndeterminateDuration: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 HLS END                    %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA BEGIN       %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA END         %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM TRANSITION SETUP      %{public}@ => %{public}@
|%{public}@ %{public}@ %{public}@  
 parameters: %{public}@
|%{public}@ %{public}@ %{public}@
 ERROR RESOLUTION           %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT END              %{public}@
|%{public}@ %{public}@ %{public}@ 
 resume: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 POLICY BEGIN
|%{public}@ %{public}@ %{public}@
 POLICY END
|%{public}@ %{public}@ %{public}@
 BEHAVIOR CHANGED           %{public}@
|%{public}@ %{public}@ %{public}@ 
 shuffle:  %{public}@
|%{public}@ %{public}@ %{public}@  
 repeat:   %{public}@
|%{public}@ %{public}@ %{public}@  
 autoplay: %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES LOST       %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES RESET      %{public}@
|%{public}@ %{public}@ %{public}@
 ROUTE CHANGED              %{public}@
|%{public}@ %{public}@ %{public}@ 
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 isAirPlay: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 shouldPause: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED       %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 TIME CONTROL CHANGED       %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@
 SHARED SESSION BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 PARTICIPANTS CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 localUserIdentifier: %{public}@
|%{public}@ %{public}@ %{public}@  
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@  
 participants.count: %ld
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC BEGIN  %{public}@
|%{public}@ %{public}@ %{public}@ 
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC END    %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT UPDATE             %{public}@
|%{public}@ %{public}@ %{public}@ 
 store-id: %{private}llu; storefront: %{public}@; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 household-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 subscription: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
[PIA] %p will not run requests for itemIdentifiers=%{public}@
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
[PIA] %p skipping item [store lookup failed] itemID=%{public}@
[PIA] %p skipping item [not eligible] allowExplicitContent=%{BOOL}u item=%{public}@ 
[PIA] %p computed accumulatorResult didFinishEntireRequest=%{BOOL}u didFinishBatch=%{BOOL}u hasCollectionItemsWithPlaybackAuthTokens=%{BOOL}u pendingStoreIDs=%{public}@
[PIA] %p Failed to import response %p. error=%{public}@
[PIA] %p Handling SP response=%p isFatalError=%{BOOL}u error=%{public}@
[PIA] %p Adding identifiers=%{public}@ as permanently failed items
%p Could not import response=%p to SOD. Error=%{public}@
MPCModelStorePlaybackItemsRequestAccumulator _updatedObjectWithPlaybackAuthorizationToken: is using vac token from the request. Object: %@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
[PIA] %p Found %d childIdentifierSets for %{public}@ with parentVersionHash=%{public}@, childKey=%d
[PIA] %p Error creating identifierSet for itemID=%{public}@ as _personID is nil
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackQueueReceived
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackReady
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPMusicPlayerControllerServer: startServer: resummed systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: startServer: deferred resume waiting for canBeNowPlaying systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: stopServer
getNowPlaying
getNowPlayingsForContentItemIDs
getNowPlayingAtIndex
setNowPlayingItem
getTimeSnapshot
MPCMusicPlayerControllerServer: play: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
play
MPCMusicPlayerControllerServer: pause: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
pauseWithFadeDuration
MPCMusicPlayerControllerServer: nextTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: previousTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
skipWithBehavior
MPCMusicPlayerControllerServer: reshuffle: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
reshuffle
MPCMusicPlayerControllerServer: seekForward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekBackward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
beginSeekWithDirection
MPCMusicPlayerControllerServer: seekForward: endSeeking: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
endSeek
MPCMusicPlayerControllerServer: changeRepeatMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setRepeatMode
getRepeatMode
MPCMusicPlayerControllerServer: changeShuffleMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setShuffleMode
getShuffleMode
setElapsedTime
MPCMusicPlayerControllerServer: changePlaybackPosition: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setPlaybackRate
MPCMusicPlayerControllerServer: changePlaybackRate: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getUserQueueModificationsDisabled
setUserQueueModificationsDisabled
MPMusicPlayerControllerServer: prerollWithCompletion FAILED [not implemented]
MPMusicPlayerControllerServer: beginPlaybackAtHostTime FAILED [not implemented]
MPMusicPlayerControllerServer: engine:didChangeToItem: - %{public}@ - reloading:%{BOOL}u
MPMusicPlayerControllerServer: connection invalidated: pid=%u
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
[Publisher] publishIfNeeded: first publish
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
[Publisher] Updating active account requires authorization tokens: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
SessionActivation
_MPCMediaRemotePublisher: Failed to bless application
success=%{BOOL}u
publisher:bless
_MPCMediaRemotePublisher: Delaying audio activation [internal setting]: %gs
_MPCMediaRemotePublisher: Finished delaying audio activation [internal setting]
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [contextID does not match queueControllerUniqueID]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [command option to disable]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p is in shared listening mode]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
UpdateSupportedCommands
[Publisher] performCommandEvent: _homeAccessorySettingsPrivateListeningOverride homeUserPrivateListeningOverride=%{public}@ userMonitor=%{public}@ destinationUIDs=%{private}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
PerformCommandSetPlaybackQueue
PerformCommandPlay
command=%{public, signpost.telemetry:string1, name=command}s
PerformCommandOther
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: BackgroundTask: End assertion (%lli)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: BackgroundTask: Took assertion (%lli)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
 enableTelemetry=YES status=%{public, signpost.telemetry:string2, name=status}s
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [allowing command] type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [failing command] type=%{public}@ id=%{public}@ interface=%{public}@
Cannot skip backwards from current item: %{public}@ [%{public}@]
Cannot skip forwards from current item: %{public}@ [%{public}@]
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=KeepUpNext [in shared listening]
Play queue verification failed with error: %{public}@
EndPlayback
Create playback context failed with error: %{public}@
Cannot override manually curated queue.
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=LeaveSharedSession [received shared listening intent while already in shared listening]
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
AccountRectification
type=replaceCurrentItem
 SetPlaybackQueue (keeping up next with no current item) recovered
type=reload
SetQueue
Radio station getPlaybackContext failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Add to playback context failed: %{public}@
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: cannot preload playback session with immediate priority, please send followup MRMediaRemoteCommandSetPriorityForPlaybackSession command.
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: SetPriorityForPlaybackSession [ignoring non-Immediate priority]
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
Change rate failed. (error = %{public}@)
shareQueue:getTracklist
shareQueue:buildIntent
status=%{public}@
Unsupported command: %{public}@ id=%{public}@
MPCMediaRemotePublisher: %p - [Lease] - Session migration will begin - identifier:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end with error [Stealing the lease back] - identifier:%{public}@ - error:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end - identifier:%{public}@
[AL] - %{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
[AL] - %{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
stationPlaybackAuthorizationToken=%{public}@ for identifier=%{public}@
%{public}@: File asset missing file path, finishing.
[AL] - %{public}@: File traits translation from MPFileAsset to MPMediaItem: %{public}@ -> %{public}@ - Existing file traits: %{public}@
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
[AL] - %{public}@: [Asset caching] - Unusable local file asset [No cached or downloaded file]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [Missing cached or downloaded file]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [Cached assets not allowed]
[AL] - %{public}@: [Asset caching] - Local file asset is usable as is [Purchased or matched content]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [HLS file not allowed for playback]
[AL] - %{public}@: [Asset caching] - Unusable local file asset [HLS file with missing hls keys]
[AL] - %{public}@: [Asset caching] - Local asset of acceptable quality [File format differs from requirements but quality is available]
[AL] - %{public}@: [Asset caching] - Local asset of incorrect quality [File format differs from requirements]
[AL] - %{public}@: [Asset caching] - %{public}@
[AL] - %{public}@: [Asset caching] - %{public}@ file is CRABS
[AL] - %{public}@: [Asset caching] - %{public}@ file is HLS file - Traits: %{public}@
[AL] - %{public}@: [Asset caching] - Upgrade on play decision process - localFileIsDownloaded: %{BOOL}u - localFileShouldBeUpdated: %{BOOL}u - userExpectsSpatialDownload: %{BOOL}u - userExpectsLosslessDownload: %{BOOL}u => shouldUpgradeDownloadOnPlay: %{BOOL}u.
[AL] - %{public}@: [Asset caching] - Caching decision process - assetCachingIsAllowed: %{BOOL}u - localFileDoesNotExist: %{BOOL}u - localFileIsCachedAndNeedsUpdating: %{BOOL}u => shouldUpgradeCacheOnPlay:%{BOOL}u.
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
MPCPlaybackHistoryController %p - Previous track does not meet playback history threshold - previous:%{public}@
item=%{public}@
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
ConfigureItem
Device supports streaming
Network connection is available
No network connection available
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
MPCRTCEventConsumer: testingDelegate set. RTC messages will not be sent.
MPCRTCEventConsumer: Cannot send RTC message. Missing queueAddEvent for event=%@ with time=%@
MPCRTCEventConsumer: No itemBeginEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: Missing MPCPlaybackEngineEventPayloadKeyItemRTCHierarchyToken for MPCPlaybackEngineEventTypeItemBegin with time=%@
MPCRTCEventConsumer: Generated new RTC session. category=%@ serviceName=%@
MPCRTCEventConsumer: _payloadForSessionStart: Invalid item start event. type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: No QueueLoadEndEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionSummary: sessionStartItemEvent=nil event.type=%{public}@ event.date=%{public}@
MPCRTCEventConsumer: _payloadForItemAssetLoad: firstAudioFrame=nil
MPCRTCEventConsumer: _itemStartIncitingEvent: itemStartEvent=nil
MPCRTCEventConsumer: _itemStartIncitingEvent: sessionStartEvent=nil
MPCRTCEventConsumer: _updateAssetLoadInfoEvent requires MPCPlaybackEngineEventTypeItemAssetLoadEnd type
MPCRTCEventConsumer: [RTCReporting startConfigurationWithCompletionHandler:] failed with no backends
MPCRTCEventConsumer: Can't send RTC message. session=nil. category=%{public}@
MPCRTCEventConsumer: Sent RTC message. category=%{public}@ type=%{public}@
MPCRTCEventConsumer: RTC Message send failed. category=%{public}@ error=%{public}@
MPCRTCEventConsumer: Sent one message. serviceName=%{public}@ category=%{public}@ type=%{public}@ error: %{public}@
MPCRTCEventConsumer: Sent one message. serviceName=%{public}@ category=%{public}@ type=%{public}@
WaitForLikelyToKeepUp
%{public, signpost.description:end_time}llu, enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
WaitForReadyToPlay
PlayToSetRate
SetRateToEffectiveRate
seekToTime: %{public}@ currentTime: %{public}@ currentSceneIndex: %ld currentLoopCount: %ld URL: %{public}@ signpostID: %llu
SeekToTime
finished: %{BOOL}d
MPCScriptedLooper %p: Cancelled preloading metadata.
MPCScriptedLooper %p: metadataStatus was %ld.
MPCScriptedLooper %p: Cancelled preloading playable.
MPCScriptedLooper %p: playableStatus was %ld.
MPCScriptedLooper %p: Failed to preload duration. error=%{public}@
MPCScriptedLooper %p: Cancelled preloading duration.
PlayPerfJSON: %{public}@
PlayPerf: %{public}@
PlayPerfEvent: Logging CoreAnalytics event %{public}@ with payload:
%{public}@
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
[AL] Error retrieving HLS session metadata - Asset:%{public}@ - Error:%{public}@
[AL] Time-out while retrieving HLS session metadata - Asset:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d error=%{public, signpost.telemetry:string1, name=error}s
ErrorResolution
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable playback failure [resource unavailable] - Actual resolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable failure [subscription required for playback] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Processing fatal playback error - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - nil item received [Queue failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Playback has not yet succeeded [Adding to queue failure set]
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Playback has succeeded for at least one item [Ignoring queue failure]
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Stopping playback for a first item or unrecoverable asset loading error. error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Failed to queue any items] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure - nil item] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Specified first item failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Entire queue loading failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Subscription required] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure] error=%{public}@
[AL] - %{public}@: Using subscription playback endpoint with operation type: %li
[AL] - %{public}@: Short-circuiting Item Subscription Asset Loading [offline] - SOD/Cached Response/Server requests are unusable
[AL] - %{public}@: Loading subscription lease session...
[AL] - %{public}@: Failed loading subscription asset due to missing lease session.
[AL][Lease] - %{public}@: Has subscription lease session, using it. Lease status: %{public}@
[AL] - %{public}@: Loading %{public}@ asset from Mini Sinf...
[AL] %{public}@: MPCModelGenericAVItemSubscriptionAssetLoadOperation execute [loading asset from cache] prefersVideoContent=%{BOOL}u preferredAudio=%{private}@
[AL] - %{public}@: Loading %{public}@ asset - Preferred audio: %{private}@
[AL] - %{public}@: Using existing cached playback response: %{public}@
[AL] - %{public}@: Performing subscription playback request...
[AL] - %{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Performing subscription accountless playback request...
[AL] - %{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Skipping miniSINF in the server object database [HLS playback]
[AL] - %{public}@: Skipping miniSINF in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Skipping miniSINF in the server object database [delegated lease]
[AL] - %{public}@: Skipping miniSINF in the server object database [no online lease]
[AL] - %{public}@: Skipping miniSINF in the server object database [no assets found]
[AL] - %{public}@: Skipping assets in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Skipping assets in the server object database [delegated lease]
[AL] - %{public}@: Skipping assets in the server object database [no online lease]
[AL] - %{public}@: Skipping assets in the server object database [no HLS assets found]
[AL] - %{public}@: Found an asset with no sinf, skipping assets in server object database
[AL] - %{public}@: Skipping assets in the server object database [no assets found]
MPCModelQueueFeeder applyVolumeNormalizationForItem: soundCheckEnabled=%{BOOL}u
MQF %p: setting override start time: %{public}@ for item: %{public}@
MQF %p: setting override stop time: %{public}@ for item: %{public}@
MQF %p: Supplemental playback context created: %{public}@ - reason: %ld
MQF %p: defersResponseReplacement: crashing [exception while computing change details] exception=%{public}@
MQF %p: defersResponseReplacement: change details out of sync [identifierRegistry count mismatch] countDuringDiff=%ld countDuringApply=%ld
MQF %p: Crashing [invalid change details] reason=%{public}@ changeDetails=%{public}@
NoValidItems
MQF %p: Siri asset info: %@
MQF %p: loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
MQF %p: Failed to load identity properties. error: %{public}@
ModelShimRequest
MQF - loadPlaybackContext - SiriAssetInfo results contain items not in the queue startItemIdentifiers=%{public}@ storeItems=%{public}@
MQF %p: Setting trustProvider=%p, trustIdentifier=%{public}@ on request=%p
MQF %p: Retaining trustProvider=%p, trustIdentifier=%{public}@ on request=%p
MQF %p: itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
MQF %p: [BackgroundTasks] %{public}@ Expired.
MQF %p: [BackgroundTasks] %{public}@ Background Task Failed to Start.
MQF %p: [BackgroundTasks] %{public}@ Start [%lu]
MQF %p: [BackgroundTasks] End [%lu]
ModelRadioPersonalizationRequest
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag. error: %{public}@
PlayActivityFeedEventConsumer %p: _handleItemResumeEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPositionJumpEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPauseEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemEndEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleApplicationTerminationEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueItemIdentifier - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find accountIdentifier event=%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier for delegated playback] - event:%{public}@ - cursor:%{public}@
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
com.apple.mediaplaybackcore.videodebug: %@
Deallocating future that wasn't finalized or invalidated: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
[%{public}@]-MPCPlayerItemConfigurator %p - Setting EQ to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Processing user default audio quality change
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reloading all queued items] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reconfiguring all queued items & player] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayer setup: %{public}@ - currentItem: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving audio formats - item:%{public}@ - error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No audio formats in HLS session data [Setting up player item using preferred audio asset type] - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Audio formats available in HLS session data [Setting up player item] - item:%{public}@ - Preferred format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - AVPlayerItem setup:%{public}@ - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No enhanced audio format [Using pre-defined lossy formats] - item:%{public}@ - Preferred/active format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving HLS metadata - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error decoding HLS metadata [Clearing audioFormatsDictionary] - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Route changed to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no player item]
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no preferred format on item] - item: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred audio format changed [configuring player item] - item:%{public}@ - downloaded:%{BOOL}u - audio format: %@ -> %@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayerItem setup: %{public}@ - item:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Screen mirroring is on for an audio item - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - We prefer buffered audio over url flinging for audio items - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Dispatching %{public}@ command to destination: %{public}@
Command %{public}@ to destination: %{public}@
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Send to originating device: Not remote controllable.
Send to originating device: Unable to discover
Cannot send command: no output devices specified in destination: %{public}@
Cannot decode active identity
Searching for output devices matching UIDs: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@
Sent %{public}@ to %{public}@: %{public}@
Send to external destination: No matching account.
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p - initWithCoder: error detected [dataSources failed to decode] decoder.error=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
queueController %p: clearUpNext: reloading items [queue updated]
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
queueController %p: finalizeStateRestorationWithCompletion: restored dataSource=%p section=%{public}@
section=%{public}@
QC-FinalizeDataSource
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
reasons=%{public}@
QC-FinalizeDataSource-Original-Rectify
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: moveContentItemID: reloading items [update for move after]
queueController %p: moveContentItemID: reloading items [update for move before]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: reset: error detected [dataSources is nil]
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: ignoring setAutoPlayEnabled:%{BOOL}u [autoPlayState=%@]
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: resetSharedListening disconnecting interposingHost on dataSource: %{public}@
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: removeContentItemID: reloading items [update removed item]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
[ITFIT] queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID mismatch] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: [missingIDSet intersects nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
queueController %p: itemToFollowItem: [missingIDSet does not intersect nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
[ITFIT] queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
[ITFIT] queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [no enumerated items]
queueController %p: queueReferencesWithMaxCount [enumerating items] maxCount=%ld
queueController %p: didReachEndOfQueueWithReason: calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: didReachEndOfQueueWithReason: publisher.leaveSharedSession complete status=%{public}@
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: sessionDidEnd: [InterposingHost] calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] publisher.leaveSharedSession complete status=%{public}@
queueController %p: jumpToItem:inSection: ignoring request to jump to item that is already current [InterposingHost] currentContentItemID=%{public}@
queueController %p: jumpToItem:inSection: setting nextContentItemID [InterposingHost] nextContentItemID=%{public}@
queueController %p: jumpToItem:inSection: reloading items [jump to item]
queueController %p: jumpToItem:inSection: failed [content item not in SIL] contentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to queueCoordinator:itemToFollowItem:] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [rootItem for offset zero] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [returning nil] contentItemID=%{public}@ jumpToItem=%{BOOL}u reachedEnd=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to _contentItemIDWithOffset:%ld] item=%{public}@
queueController %p: updatePlayerPlaybackCoordinator: %@
queueController %p: _queueIDPairForIdentifierListIDPair: failed to convert to queueID [dataSource did not have containerInfo] inSharedListeningMode=YES itemIdentifier=%{public}@
queueController %p: _identifierListIDPairForQueueIDPair: failed to convert to identifierListID [invalid container ID (queueSectionID)] inSharedListeningMode=YES queueIDSection=%{public}@ queueIDItem=%{public}@
queueController %p: _addPlaybackContext: reloading items [interpose queue modification] keepCurrentItem=NO
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addPlaybackContext: [entering shared listening mode] SLQF=<%{public}@ %p>
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: _emitEventsForItemChangeFromItem:toCurrentItem: skipping MPCPlaybackEngineEventTypeContainerBegin [placeholder container] containerIdentifiers=%{public}@
queueController %p: _highQualityMusicStreamingOnCellularDidChange: reloading items [pref changed] keepCurrentItem=YES
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@ identifierListSection=%{public}@
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [tailPlaceholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [datasource specified placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item from previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item not from current nor previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [failed to create item] missingContentItemID=%{public}@
queueController %p: _removeContentItemID: load items if needed [preloading] section=%{public}@
queueController %p: _removeContentItemID: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: loading more items in autoplay section after items deleted reloading items [finished preloading] keepCurrentItem=%{BOOL}u
MPCQueueController: _soundCheckEnabledChangedNotification soundCheckEnabled=%{BOOL}u
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: AutoPlay disabled in bag
queueController %p: _transitionToAutoPlayState: reloading items [invalidateQueue] keepCurrentItem=%{BOOL}u
queueController %p: autoplay loading [triggered]
[SLQF] %p loadPlaybackContext:completion [allocating live link] liveLink=%p sessionID=%{public}@
[SLQF] %p loadPlaybackContext:completion [reusing live link] liveLink=%p sessionID=%{public}@
[SLQF] %p removeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p removeItems: [ignoring unknown itemIDs] itemIdentifiers=%{public}@ sharedListeningIdentifiers=%{public}@
[SLQF] %p removeItemsAfterItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown beforeItemID] beforeItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown afterItemID] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: [ignoring unknown itemID, adding to beginning] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [received direct current item change while PlayNow request in flight] startItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [server omitted startItemID] startItemID=%{public}@ resolvedStartItemID=%{public}@
[SLQF] %p didJumpToItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p liveLink:didEncounterError: [attempting retry] error=%{public}@
[SLQF] %p liveLink:didEncounterError: [not attempting retry] error=%{public}@
[SLQF] %p liveLinkDidReconnect
[SLQF] %p liveLink:didUpdateParticipants: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didUpdateQueue [state=MPCSharedListeningQueueFeederStateLiveLinkWaitingForFirstQueue, isAutoPlayAvailable=(%{BOOL}u --> %{BOOL}u), isAutoPlayEnabled(%{BOOL}u --> %{BOOL}u)]
[SLQF] %p liveLink:didUpdateQueue: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didReceiveDirectCurrentItemChanged:fromParticipant: [setting shouldRefreshBeforeActive] state=%{public}@ deferredCurrentItemID=%{public}@ participant=%{publich}@
[SLQF] %p liveLink:didReceiveEvent: [converted to MPCSharedListeningEvent] icEvent=%{public}@ mpcEvent=%{public}@
[SLQF] %p liveLink:didReceiveEvent: dropping event  [state not Active] state=%{public}@ event=%{public}@
[SLQF] %p playbackCoordinator:identifierForPlayerItem: [ignoring unknown itemID] itemID=%{public}@ avPlayerItem=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [expired] action=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [no such item] missingItemID=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [placeholder item] idSet=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [satisfied] action=%{public}@
[SLQF] %p _enqueuePendingActionWithLabel: enqueuing action=%{public}@
[SLQF] %p _ICSharedListeningForMPSILItemIdentifier [unknown SIL ItemID] id=%{public}@ IDRegistry=%{public}@
[SLQF] %p _MPSILItemIdentifierForICSharedListeningItemIdentifier [unknown SharedListening ID] id=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentAdded item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReordered item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReplaced item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=Reaction item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [unknown item] event=Reaction itemIdentifier=%{public}@
[SLQF] %p _sectionedCollectionForQueue: nil value for ICSharedListeningItem playbackParams["kind"]
[SLQF] %p _sectionedCollectionForQueue: unhandled value for ICSharedListeningItem playbackParams["kind"]=%{public}@
[SLQF] %p _updatePlayerLiveLinkConnection _playbackCoordinator=%{public}@
[SLQF] %p _transitionToState: from=%{public}@ to=%{public}@
[SLQF] %p callSuperLoad failed to get expectedCurrentItem error=%{public}@
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from MPHomeUserMonitor privateListeningEnabledForCurrentUserAndAccessory - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: Failed to load private listenting value from account. err=%{public}@
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No matching account for dsid=%{private}@ (enabling private listening as the fallback)
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No userMonitor for account with identifiers=%{private}@ (using MPHomeUserPreferencePrivateListeningFallbackValue)
[KAOS] <%p> Resolved devices: %@
[KAOS] <%p> Sending discovered local endpoint to caller
Modify context: slow error: %{public}@
Modify context: slow
[KAOS] <%p> Routing to devices
[KAOS] <%p> Routing completed with error %@
Discover devices of group: %{public}@
Discover devices: %{public}@
[KAOS] <%p> Sending default local endpoint to caller
Discover logical devices: %{public}@
Using local endpoint.
Not a home theater.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover discovered endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, failing because device requires command redirection
No discovered endpoint, use local
Searching for endpoint, pilot %{public}@
Searching endpoint for leader: %{public}@
Pair is not group leader. Endpoint: %{public}@
No discoverable pair
Not being airplayed to
Not a stereo pair
Failed to set output devices on primary endpoint: %{public}@
sharedListeningTracklist:modelRequest:perform
items=%lld; error=%{public}@
[SLQF] %p getSharedListeningTracklist unexpected failure [intersectsSet returned NO] startItemIdentifiers=%{public}@ itemIdentifierSet=%{public}@
section=%ld
sharedListeningTracklist:modelRequest:scramble
items=%lld
sharedListeningTracklist:modelRequest:enumerate
[SLQF] %p getSharedListeningTracklist failed (1/3) [invalid start item IDs] startItemIdentifiers=%{public}@
[SLQF] %p getSharedListeningTracklist failed (2/3) [invalid start item IDs] request=%{public}@
[SLQF] %p getSharedListeningTracklist failed (3/3) [invalid start item IDs] response=%{public}@
[SLQF] %p getSharedListeningTracklist [dropping unsupported IDs] unsupportedIDs=%{public}@
%{public}@: started enqueueing event with id: %{public}@
Event: %{public}@
%{public}@: Finished enqueueing event with id: %{public}@. error: %{public}@
%{public}@: Finished enqueueing event with id: %{public}@.
[AL] - MPCAudioAssetTypeSelector - Starting Audio type selection [from preferences] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - No enhanced audio available on this store front
[AL] - MPCAudioAssetTypeSelector - Audio type selection [from preferences]: %{public}@
[AL] - MPCAudioAssetTypeSelector - %{public}@: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting audio format selection [from preferences & route] - item:%{public}@
MPCExplicitContentAuthorizationManager %p - Music Video playback is not allowed for item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ status=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Could not find metadata dictionary in the payload. Will default to store platform response
[MPCModelStorePlaybackItemsRequest] Found metadata dictionary (%{public}@), but unexpected format
[MPCModelStorePlaybackItemsRequest] Siri asset info has payload type=%d.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
Siri asset info contains %lu assets.
Siri asset info resulting in preferred shuffled starting with identifier=%{public}@
Siri asset info expected to have results dictionary, found %{public}@ instead.
Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info relevant to HLS playback: item %ld - audioTraits: %{public}@ - assetURLs keys: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info - Updating response for item %ld with HLS info: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info %{public}@ HLS asset info
Failed to import payload - error=%{public}@.
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVS: Executing create database statement: %{public}@
EVS: Unable to create events table. statement: '%{public}@' error: %{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: invalidate: Removing database at url=%{public}@ error: %{public}@
EVS: invalidate: Removing database at url=%{public}@
EVS: addConsumer consumer=%{public}@:%p
EVS: removeConsumer %{public}@:%p
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: emitEventType - Dropping event. (EVS is invalidated) time=%{time_t}zd type=%{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@ jumpIdentifier=%{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVS: lastEventsWithCount - returning empty array. (EVS is invalidated)
EVS: Unable to retrieve contents of directory. url=%{private}@ error=%{public}@
EVS: Removing database package at url=%{public}@ error: %{public}@
EVS: Removing database package at url=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: cancelSubscription consumer=%{public}@:%p
EVS: flushEvents consumer=%{public}@:%p
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
consumer=%{public, signpost.telemetry:string1}s
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
count=%{public, signpost.telemetry:number1}ld
PlaybackEventStreamConsumerFlush
EVC: returning count of 0. (datebase invalidated)
EVC: unable to enumerate events. (datebase invalidated)
EVC: step error: %{public}@
EVC: returning nil. (datebase invalidated)
EVC: statement error %{public}@ : %{public}@
EVC: json decode error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - trustID=%p.
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p starting with userIdentity=%{public}@, subscriptionStatusResponse=%{public}@.
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: re-running personalization [previousResponse.isInvalidForPersonalization] previousResponse=%p userIdentity=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ requestedStoreIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ sectionedModelObjects=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: completing without using store metadata controller [no remaining IDs to request] unpersonalizedContentDescriptors=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: first batch complete without using store metadata controller [prioritized IDs initially loaded]
MPCModelStorePlaybackItemsRequestOperation %p initialResultHasItemsWithPlaybackAuthorizationToken=%{BOOL}u, useMediaAPILookup=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p starting to load container item metadata using Media API endpoint (shouldBatchResultsWithPlaceholderObjects=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionItemRequest=%p with totalItemCount=%d]
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemMetadataRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemMetadataRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for renewalRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemAuthTokenRenewalRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p all requests have finished]
MPCModelStorePlaybackItemsRequestOperation %p requesting store metadata for %ld items itemIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p got response=%p for SP request=%p with error=%{public}@ 
MPCModelStorePlaybackItemsRequestOperation %p got subscription status=%{public}@ for identity: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
[AL] - %{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
[AL] - %{public}@: Skipping redownload asset request [offline]
[AL] - %{public}@: Performing media redownload request...
[AL] - %{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Unable to extract valid load result from extracted media redownload asset response - Response:%{public}@ - Error:%{public}@
[AL] - %{public}@: Missing response item in media redownload request response
[AL] - %{public}@: Missing asset URL in media redownload request response
[AL] - %{public}@: Missing redownload parameters.
[AL] - %{public}@: Missing store request context.
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
setting stationPlaybackAuthorizationToken=%{public}@ for context=%{public}@
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from local identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - identical to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
[FPPC] engine:didChangeAccounts: removing account=%{public}@
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
fetched lease
already had lease
fppc:fetchMiniSINFs
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@
fppc:fetchMiniSINFs:account
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
hasMoreAssets=%{BOOL}u
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [subscription type is glide]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
account=%{public}@ error=%{public}@
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
[AP] - MPCProcessAudioTap %p - Desired refresh rate for process tap: %luHz - Actual refresh rate: %3.1fHz [%u samples @ %uHz] - FFT Info: dt=%3.1fms df=%3.1fHz
[AP] - MPCProcessAudioTap %p - Starting processing audio queue error: %{public}@
[AP] - MPCProcessAudioTap %p - Starting processing audio queue
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue error: %{public}@
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue
[AP] - MPCProcessAudioTap %p - Error creating new audio queue for processing: %{public}@
[AP] - MPCProcessAudioTap %p - ASBD for process tap: %{public}@
[AP] - MPCProcessAudioTap %p - Error adding processing tap to audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - Error allocating buffer for audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - Error Enqueuing buffer for audio queue: %{public}@
MPCProcessAudioTap %p - Audio tap - Error freeing AQ buffer: %{public}@
MPCProcessAudioTap %p - Audio tap - Error disposing of processing audio queue: %{public}@
[AP] - MPCProcessAudioTap %p - mediaserverd died - clearing AQ
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue [mediaserverd death] error: %{public}@
[AP] - MPCProcessAudioTap %p - Stopping processing audio queue [mediaserverd death]
[AP] - MPCProcessAudioTap %p - mediaserverd restarted - creating AQ
StateRestore
PSP: Requested playback state restoration for player: %{public}@
StateRestore-WaitingForAccounts
StateRestore-MRCheck
shouldRestore=%{BOOL}u
didRestore=%{BOOL}u
PSP: Finished playback state restoration for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state restoration for player: %{public}@ didRestore=%{BOOL}u
PSP: Clearing state restoration identifier for player: %{public}@ [state restoration failed]
PSP: Skipping playback state restoration for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state restoration for player: %{public}@
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
Starting playback preheating...
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
SELFLoggerSendMetrics
Finished sending SELF checkpoints and metadata with siriReferenceIdentifier=%{public}@ firstAudioFrameTimeStamp=%@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MRCPPC: Registering for endpoint topology changes with unresolved player path: %@, endpoint identifier: %@
MRCPPC: Received endpoint invalidation for unresolved player path: %@.
[Lease] - MPCLeaseManager: %p - prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
[Lease] - MPCLeaseManager: %p - prepareForPlayback: preparing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [no subscription lease session] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: renewing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished
[Lease] - MPCLeaseManager: %p - Can steal lease if needed
[Lease] - MPCLeaseManager: %p - State for lease playback prevention [evaluation] - item:%{public}@ - shouldPreventPlayback:%{BOOL}u - playbackState:%ld - isPlaying:%{BOOL}u
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [pending reasons %{public}@]
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [lease being acquired] - item:%{public}@
[Lease] - MPCLeaseManager: %p - Pausing [current item (%{public}@) requested playback prevention]
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engine:didPauseForLeaseEndWithError:] - item: %{public}@ - userInfo: %{public}@
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engineDidPauseForLeaseEnd:] - item: %{public}@
[AccountManager] - Dropped account refresh because too many (%{public}ld) attempts have been made
UpdateAccounts
[AccountManager] - Clearing glide subscription data for %{public}@
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Updated accounts [silent]: %{public}@
[AccountManager] - Refreshing due to previous timeout
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
[AccountManager] - will purge playback authorization tokens for %{public}@ as subscription status has changed (new status= %{public}@)
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForMetadataItems: Well-defined string script data corresponding to %{public}@ not found [returning nil] metadataItems=%{public}@
Error serializing JSONObject with scriptData. error=%{public}@ scriptData=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForScriptData: Well-formatted V1 scene script not found [returning nil] JSONObject=%{public}@
Cannot decode override user identity. Using active account.
[Lease] - MPCLeaseController: %p -  Requesting lease for %{public}@
[Lease] - MPCLeaseController: %p -  Relinquishing lease for %{public}@
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p -  Discarding returned item and requesting a new one [item cannot be reused] - Discarded item:%{public}@
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
%@ (%x): %@
%@_BEGIN (%x): %@
%@_END (%x): %.3fs %@
%@_END (%x) CANCELLED: %.3fs %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@ AVItemAtIndex: returning nil [no stationTracks] globalIndex=%ld
%{public}@
discovering UIDs: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
no application on target
removing devices from origin %{public}@
remove failed with error: %{public}@
force remove for output devices: %{public}@
result: %{public}@
completed error: %{public}@
completed
Send Command: %{public}@
[KAOS] <%p> sendCommandWithResult %@
Encoding device IDs: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
[KAOS] <%p> Completing with error %@, commandResult: %@
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
[KAOS] <%p> Sending command %@ to destination %@ endpoint %@
[KAOS] <%p> Command %@ completed with result: %@
[KAOS] <%p> Checking existing devices on target endpoint: %@ 
[KAOS] <%p> Creating hosted endpoint for local because we have unmatched existing devices: %@ 
[KAOS] <%p> Removing unmatched existing devices: %@ 
[KAOS] <%p> Removal completed with error %@ 
[KAOS] <%p> Found suitable endpoint %@ 
Expected to find devices for destination %@, but none found.
[KAOS] <%p> Create hosted endpoint for routes %@ 
Command completed
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Originating device destination: %{public}@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
[MPCAssistantGetVolume] Completing with error: %{public}@
MPCItemBookmarker %p - Previous loaded item bookmark data updated %{public}@ - PlaybackStoppedTime:%.2fs
MPCItemBookmarker %p - Current loaded item bookmark data updated %{public}@
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
Unbalanced call `_setupBookmarkingTimerForItem/`tearDownBookmarkingTimer` [Check the logs] - Item %{public}@
RQF %p: Updating current item: %{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
rqf:loadPlaybackContext
allowsRadioService=%d error=%{public}@
allowsRadioService=%d
rqf:loadPlaybackContext:allowsRadioService
RQF %p: loadPlaybackContext: context=%{public}@, Siri asset info:%@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
reasonType=%d
rqf:loadPlaybackContext:getTracks
reasonType=%d error=%{public}@
rqf:loadPlaybackContext:getHistory
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
%{public}@ itemForItem:inSection: returning nil [no playbackQueue] item=%{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
changes=%{public}@
rqf:reloadSection:diff
rqf:reloadSection:apply
rqf:reloadSection
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
[BackgroundTasks] %{public}@ Expired [%lu]
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
RQF %p: _defaultGetTracksRequestWithContext: failed to get userMonitor for dsid=%{private}@
RQF %p: _defaultGetTracksRequestWithContext: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: error: %{public}@
RQF %p: _detectSignOutForIdentityStore: clearing tracklist [nil active account]
[BackgroundTasks] %{public}@ End [%lu]
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
 error=%{public}@
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
rqf:_handlePersonalizationResponse
RQF %p: adding get tracks operation operationCount=%lld
RQF %p: personalization response is invalid
rqf:_removeAllTracks:diff
rqf:_removeAllTracks:apply
RQF %p: Removing %ld restricted tracks from section
rqf:_removeRestrictedTracks:diff
applying
rqf:_removeRestrictedTracks:apply
FirstAudioFrame event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
%@ event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
%@ event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
identifier: %{public}@
LoadSession
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
timeout
LoadSession-Finalize
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [InSharedListeningMode] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - skipping artwork [failed to get artwork] error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to encode with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@ error: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [out of disk space] deleted old archives attempting to save again
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: created archive identifier=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
MPCSharedListeningPlaybackIntentDataSource.m
Deallocated without calling live link completion
Build shared intent timeout
Live link connection failed
Canceling intent loading because live link already had content %@
Unexpected state transition %@ -> %@
Content type is not supported in live link
Missing required parameters (tracklist) [error == nil]
Unknown
WaitingOnSourceAndLinkToSendQueue
SourceFailed
LiveLinkFailed
InitialQueueSending
InitialQueueFailed
BuildSucceeded
BuildTimedOut
Unknown/state=%ld
Loading
FailedToLoad
Loaded
Connecting
Failed
WaitingForFirstQueueUpdate
WaitingToSendQueue
%@ %@
mediaType
identifierSet
excludeFromShuffle
_MPCPlaybackEngineMediaFrameworkImplementation
^v17@?0{_MSVLogStateHints=B}8@?<^v@?@"NSDictionary">9
Q8@?0
com.apple.amp.mediaplaybackcore.prewarm_mf
Playback engine implementation no longer exists
Unable to find a start item in the playback context %@
Playback engine stack has not been setup yet. Set a playback queue first before calling %s.
-[_MPCPlaybackEngineMediaFoundationImplementation replaceCurrentItemWithPlaybackContext:identifier:completionHandler:]
Playback engine implementation no longer exist
InternalPauseWithFadeout_%@
InternalEndPlayback_%@
-[_MPCPlaybackEngineMediaFoundationImplementation playWithRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithFadeout:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseForLeasePreventionWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation togglePlaybackWithIdentifier:completion:]
Attemping to toggle playback with incompatible state - CurrentState:%@
-[_MPCPlaybackEngineMediaFoundationImplementation skipWithDirection:identifier:completion:]
next
previous
-[_MPCPlaybackEngineMediaFoundationImplementation beginScanningWithDirection:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation endScanningWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation setRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation jumpToTime:identifier:completion:]
_MPCPlaybackEngineMediaFoundationImplementation.m
_setupPlaybackStackWithPlaybackEngine failed to create a new MFPlaybackStackController
playbackState
currentItem
currentRate
currentTime
targetRate
MediaFoundationStack
engineID
Invalid parameter not satisfying: %@
item == nil || [(MPAVItem *)item isKindOfClass:[MPAVItem class]]
AVMusicAppBehavior
Queue Controller Contents Changed
Error resolution paused
previous == nil || [(MPAVItem *)previous isKindOfClass:[MPAVItem class]]
current == nil || [(MPAVItem *)current isKindOfClass:[MPAVItem class]]
source == MFItemChangeSourceQueue
queueItem != nil
Waiting First Audio Frame
%0.9fs
Unspecified explanation
Play Queue Identifiers Changed
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
Playing Identifier Changed
Failed to get playing identifier
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
CoreMediaErrorDomain
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ [repeatIteration=%ld] %@
%lli
%@: Missing DSID in delegated identity properties - skipping playback
 not
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
video
audio
Missing subscription for playback
Missing playback authorization token for playback
CRABS
DisableOptimizeAccessForLinearMoviePlayback
com.apple.mobileipod
match
purchaseHistory
MPCModelGenericAVItem.m
Asset download destination URL can't be nil
StorefrontID
isPlaceholder
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
host mismatch
path mismatch
v16@?0@"MPModelFileAsset"8
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
key server URL
key certificate URL
Missing key URLs: %@
Unexpected nil keyServerURL
Unexpected nil keyCertificateURL
com.apple.MediaPlayer.MPCModelGenericAVItem.streaming_playback.
wifi.
@"ICURLSession"8@?0
availableMediaCharacteristicsWithMediaSelectionOptions
q24@?0@"MPCPlayerAudioFormat"8@"MPCPlayerAudioFormat"16
v16@?0@"ICMusicSubscriptionLeaseSession"8
stream-provider-id
AssetLoadingBug
setupWithPlaybackInfo.isAssetLoaded==NO
setupWithPlaybackInfo._asset==nil
playEvent
item
album
ModelBug
album.traits=nil
playlist
playlist.traits=nil
@16@?0@"MPCPlayerAudioFormat"8
v24@?0@"ICAuthorizeMachineResponse"8@"NSError"16
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MediaPlaybackCore/Engine/Implementation/Model/MPCModelGenericAVItem.m
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse64kbpsQuality
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
unknown
tilt.stream-track
tilt.track
uploaded-content
purchase
subscription
synced
.cloud
%@.%@
info
com.apple.radio.ping.jingle
%@,%ldkbps,%ld
%@,%ldkhz,%ld
Unspecified
Progressive
HLS [stereo]
HLS [spatial]
HLS [lossless]
HLS [hr lossless]
Tolerated
Expected
Forbidden
lossless
high-res lossless
spatial
atmos
surround
None
ExpiredLease
RevokedLease
UnauthorizedDevice
InvalidUser
Cellular
Bluetooth
WiFi
Bridged WiFi
Wired Ethernet
Other
%c%c%c%c
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
containerIndex
itemIndex
v28@?0^v8@"NSString"16f24
com.apple.MediaPlaybackCore/logging
q24@?0@"MSVFrameworkDescription"8@"MSVFrameworkDescription"16
<unknown>
kMRMediaRemote
commandType
supported
enabled
unsupportedReasons
disabledReasons
options
unsupported: %@
disabled: %@
v24@?0@"NSString"8@"NSDictionary"16
q24@?0@"NSString"8@"NSString"16
Bag [%.3fs]
Lease [%.3fs]
SuzeLease [%.3fs]
MediaRedownload [%.3fs]
SubscriptionAssetLoad [%.3fs]
Stopped
Waiting
Playing
FailSilently
StopPlayback
RetryLastAction
Unreachable
Likely Reachable
Reachable
Device
Account
Queue
File
Home Sharing
Asset Info Cache
Server Object Database (SINF/HLS)
Server Object Database (MiniSINF)
Server
Unsupported
No player found for %@
Unexpected implementation class found: %@
# Player: %@
## PlaybackStack
MPCModelStorePlaybackItemsRequestAccumulatorItemIdentifierSetKey
MPCModelStorePlaybackItemsRequestAccumulatorCollectionPlaybackAuthorizationTokenKey
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"MPModelGenericObject"8Q16^B24
MPCModelStorePlaybackItemsRequestAccumulator.m
Unknown playlist entry: %@
@32@?0@8q16^B24
Found unplayable object in SOD: %@
@32@?0@8@"NSIndexPath"16^B24
Attempting to populate items for non model object: %@
Glide
v24@?0Q8^B16
Unknown item to request metadata
section playbackAuthorizationToken cannot be nil
Unknown request type = %d
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
com.apple.MediaPlaybackCore/Siri
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
contentType
Duration
refId
endTimeReciever
 playerPath=%@
delegateInfoID
contentItemID
storeAdamID
storeSubscriptionAdamID
cloudID
purchaseHistoryID
cloudUniversalLibraryID
playbackAuthorizationToken
@"MPMusicPlayerControllerNowPlaying"16@?0@"NSString"8
No item provided to setNowPlayingItem
Unable to play item %@
PlayItemInQueue is currently not enabled or the playback engine is not ready
%@:%@ did not provide image data.
%@:%@ does not support artwork.
Queue descriptor was not provided.
Queue was interrupted by another queue
Preparing queue timed out
iapd
Failed to prepare to play
SetPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for prepend
InsertIntoPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for append
_MPCMusicPlayerControllerServer.m
performQueueModifications is not supported for the system music application
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
Failed to apply queue modifications
Prepare queue failed with unexpected start item
DelayMusicServerConnection
MPCMusicPlayerControllerServer
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
sinfs
Playback response has no valid file asset: %@
<%@: %p %@>
allows caching: %@
HLS: %@
cloud streaming: %@
online keys required: %@
path extension: %@
audio asset type: %@
downloaded: %@
Overview
Purchase bundle dictionary
assetURL
alt. HLS playlist URL
protected content support storage URL
URLs
alt. HLS key certificate URL
alt. HLS key server URL
key server protocol type
streaming key adam ID
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
@"MPArtworkCatalog"16@?0d8
app.music.media-clip
tracks
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore.playbackSession-v4.opack
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
_MPCSkipNextStateRestoration
Cannot leave shared session [not in shared session] queueController=%@
LeaveSharedSession is not supported in the legacy engine
Failed to end playback
Failed to load previous session
Unable to restore state [no state restoration session ID]
now_playing
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
_MPCMediaRemotePublisher.m
Playback engine implementation is nil
v16@?0@?<v@?B@"NSError">8
Failed to build fallback playback context from intent %@
Failed to load fallback playback context %@
Failing due to no content in the player and no fallback intent.
v16@?0@"MPRemoteCommandCenter"8
live streaming content
-[_MPCMediaRemotePublisher _updateSupportedCommands]
Must provide reason for unsupported command
item does not support rate changes
hidden
AV does not support FF
AV does not support RW
item prefers seek over skip
uninitialized queueController
loading item
queue does not allow modification
active account does not allow subscription playback
queue does not allow modifications
queue does not support any insertion positions
QHO disabled by defaults
engine not configured for QHO
no supported session types
no preloaded sessions
Item not addable
-[_MPCMediaRemotePublisher _updateSupportedCommands]_block_invoke
item does not have media item ready
Performance
MediaItemLoading
_updateSupportedCommands
item does not support ratings
not in shared listening mode
already in shared listening mode
item doesn't have subscription adam id
com.apple.Music.performance
com.apple.Music.queue
%@&currentItem=%@
@16@?0@"NSDictionary"8
com.public.text
No queueController
com.apple.Music.events
 (%@)
Handling Command %@
kMRMediaRemoteOptionSenderID
mediaserverd not available to perform command
Failed to activate audio session
Failed to playWithRate:1.0
v20@?0B8@"MPRemoteCommandStatus"12
Failed to pauseWithFadeout:%g
Cannot pause because there is no current item.
Cannot toggle play/pause because audio session activation failed.
Failed to toggle playback
Current item forbids skipping backwards: %@ [%@]
Current item forbids skipping forwards: %@ [%@]
Cannot play item in queue due to item policy: %@
Cannot find item by trackID: %lld
newPlaybackImplementation must implement skipWithDirectionShouldJumpToItemStart:
Failed jumpToTime:%lf
endOfQueuePause_%@
nextTrack
Failed to begin rewinding
Failed to begin fast-forwarding
Attempting to stop scanning without scanning
Failed to end scanning
Failed to jumpToTime:%g
Cannot jumpToTime without a current item.
Cannot modify queue with playback authorization token protected content
SharedQueue feature requires a subscription
Failed to build playback context from queue: %@
Cannot modify queue due to iAP lockout
Failed to insert playback context: %@
Insert operation indicated specific insertion position type, but no content item ID provided.
Failed to move item: %@
Unsupported repeatType %ld
Failed to remove item: %@
Cannot find item to remove: %@
Account is not authenticated: %@
Account failed to prepareToPlay: %@
Failed to verify play queue: %@
Cannot override mutated queue without override.
Failed to load playback context: %@
Failed to reload playback context: %@
siri
Failed to build radio context from playback intent: %@
Failed to build intent into playbackContext: %@
Failed to add radio station to queue: %@
Failed to get radio intent from song: %@
Cannot create station with seed item without current item
Failed to finalize queue controller
No current item or session load failure: %@
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
Failed to decode queue data
Unsupported sessionType %@
Command did not contain queue data.
session does not exist for identifier: %@
ignoring unimplemented non-immediate priority: %ld
Cannot find session with identifier: %@
Unable to find item to add to library: trackID=%lld currentItem=%@
Failed to setRate:%g
Failed to share queue [no current item]
Unable to build shared queue tracklist from current queue.
com.apple.music.live-link-identity-json
Failed to build shared queue intent from current queue.
?id=%@&key=%@
com.apple.music.shared-session-url-components
v24@?0@"MPCPlaybackIntent"8@"MPCPlayerCommandStatus"16
Unsupported command event: %@
requestImageWithCompletionHandler: called with nil image.
Session is empty
Transportable representations only available for queue controller.
Session contains non-transportable content
cloudLibrary
storeFront
voiceOnly
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
v16@?0@"MPModelPlaybackPosition"8
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
com.apple.MediaPlaybackCore
NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Engagement
Engagement_Oversize
Middleware
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Preferences
Reporting
QueueController
QueueController_Oversize
SDKPlayback
SDKPlayback_Oversize
Session
Delegation
Video
SharedSession
Analytics
Analytics_Oversize
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
Sharedlistening playback context cannot be used for remote set queue.
Unexpected queueController class found: %@
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
lossy stereo
deviceGUID
deviceName
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
 source=%@
MPCPlaybackIntent.m
completion
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
%@ did not produce representative model object or error
modelObject
No matching properties for reprentative object: %@
v24@?0@"MPModelGenericObject"8@"NSError"16
Metadata Object did not produce nowPlayingInfo: metadataObject=%@ contentItem=%@
original
sessionID
supplemental
<ARCHIVE LOADER>
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
v16@?0@"<MPMutablePlaybackArchive>"8
Cannot handle unknown generic object metadata.
Expected a flattened generic object.
com.apple.MediaPlayer
SEASON_DISPLAY_FORMAT_%@
Cannot handle unknown playlist entry when capturing metadata.
skey
<%@ %p: sessionID=%@>
missing file
missing asset
missing hls keys
cached assets not allowed
cached assets not allowed for playback
downloaded
cached
HLS format
CRABS format
%@ quality
%@ audio
[url: %@]
[HLSContentPolicy: %@]
File: %@
Expectation: %@
Upgrade cached asset on play
Upgrade downloaded asset on play
%@ - %@ -> %@
Downloaded
Cached
High
radioStationID
radioStationURLString
seedContentReference
nowPlayingContentReference
accountInfo
playActivityFeatureName
playActivityQueueGroupingID
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
PlaybackEngine.implementation.currentItem.type didChange
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
isExecuting
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
isFinished
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
MPCAssetLoadingOperation - Asset loading failed [AVPlayerItem status failed] - Item:%@
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssetLoader.m
MPCAssetLoader must have a configurator set to work properly
Attempting to load an item which has no loadable asset: %@
v32@?0@"MPAVItem"8q16@"NSError"24
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
Store Front Local Equivalency Metadata Response Finished
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
v16@?0@"MPCPlayerCommandStatus"8
<%@: %p commands=(%@)>
B16@?0@"MPCPlayerCommandStatus"8
No commands provided.
MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
@16@?0@"MPCMediaRemoteCommandOperation"8
<%@: %p command=%@>
Command was cancelled before it was performed.
Did not attempt command because dependent command failed.
Either Controller or PlayerPath is required to perform a change request.
Queue is user curated and requires override
Feature requires active subscription
Unsupported content type
Failed to perform command %@
MPCPlayerCommandRequest player path resolution completion not called
PlayerPath did not resolve route to origin: %@
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.music.playbackqueue.sharedlistening
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
tracklistRange
playerPath
playingItemProperties
v16@?0@"ICLiveLinkIdentity<ICMutableLiveLinkIdentity>"8
B16@?0@"NSURLQueryItem"8
@"MPRemoteCommandStatus"16@?0@"MPRemoteCommandStatus"8
state
tracklist
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
ContinueListening
CL_MaxQueueReferences
CL_PrefetchThreshold
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
StationPlaybackAuthorizationToken
playbackRequestEnvironment
repeat/shuffle
queueEndAction
continueListening
nowPlaying
seed
stationID
stationName
stationURL
%@=%@,
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSString"16^B24
Music
app.music
com.apple.music.classical
app.music.classical
app.musickit
YYYY-MM-dd HH:mm:ss.SSSXX
com.apple.MediaPlaybackCore/RTC
com.apple.MediaPlayer.MPCRTCEventConsumer
app.music.unknown
v16@?0@"RTCReporting"8
migrationPlaybackSession
nominal
error
NetworkInterfaceChange
SecureKeyLoad
SessionStart
SessionSummary
QueueLoad
ItemAssetLoad
ItemSummary
UnexpectedCategory:%d
%@ timed out
%@ deallocated
MPCAnalyticsSignpost.m
Subclass %@ must implement -%@ defined in %@.
MPCAnalyticsSignpost
MPCScriptedLooperErrorDomain
status
metadata
duration
playable
MPCScriptedLooper.m
Scene collection frame rate cannot be 0.
com.apple.Music
playbackRequestEnvironment=%@
 storeIDs=[ %@ ]
 tokens=[ %@ ]
 sectionedModelObjects=[ <%ld sections>
  %2ld <%ld items> %@: [
  %2ld,%2ld %@
    ... (%ld remaining items)
  ... (%ld remaining sections)
 trustProvider=[ %p ]
queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
MPCModelStorePlaybackItemsRequestCodingKeyStoreIDsToPlaybackTokens
_MPCModelStorePlaybackItemsRequestCodingKeyTrustProvider
MPCModelStorePlaybackItemsRequest.m
Cannot encode MPCModelStorePlaybackItemsRequest that contains a SharedListeningQueue
_obj
<%@:%p>
playbackEngine
<NULL>
invalidationObservers
MPC_PLAY_ONLY_FOR_ME
<%@: %p title="%@" type=%@ commandRequest=%@>
DialogAction:%@
<%@: %p title="%@" message="%@" actions=%@>
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
com.apple.MediaPlaybackCore/PlayPerf
Command:%@:%@
Command:%@:Timeout
AssetLoad
SessionMigrate
SessionRestore
SharedSessionSynchronization
SessionActivation
ErrorResolution
ItemPause:%@:%@
ItemRateChange:%@:%@
%@:%@
com.apple.amp.mediaplayer.playperf.FirstItem
com.apple.amp.mediaplayer.playperf.NextItem
com.apple.amp.mediaplayer.playperf.PlayError
assetCacheAge
assetLoadWaitTime
file
http
assetLocation
assetSource
assetType
avTime
bagWaitTime
endpointType
errorResolutionApplied
errorSignature
featureName
firstAudioFrameWaitTime
formatInfoBitDepth
formatInfoBitrate
formatInfoChannelLayout
formatInfoCodec
formatInfoMultiChannel
formatInfoSampleRate
formatInfoSpartialized
formatInfoTier
getTracksWaitTime
hasAccountInfo
hasGetTracksWaitTime
hasLeaseWaitTime
hasLookupWaitTime
hasMediaRedownloadWaitTime
hasOfflinePlaybackKeys
hasOnlinePlaybackKeys
hasSubscriptionAssetLoadWaitTime
hasSuzeLeaseWaitTime
hlsMetadataWaitTime
isActiveAccount
isAutoPlayEnabled
isDelegatedPlayback
isFirstItem
isFirstPlay
isRemoteSetQueue
isReplacingPlayback
isSharePlay
isShuffled
leaseWaitTime
lookupWaitTime
mediaPlayerTime
mediaRedownloadWaitTime
musicWaitTime
networkType
networkTime
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
queueType
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfoType
sessionActivationTime
setQueueCommandSendTime
subscriptionAssetLoadWaitTime
subscriptionType
suzeLeaseWaitTime
totalTime
gapTime
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
OutOfMemory
SessionNotRunning
DeviceAlreadyUsedByAnotherSession
NoDataCaptured
SessionConfigurationChanged
DiskFull
DeviceWasDisconnected
MediaChanged
MaximumDurationReached
MaximumFileSizeReached
MediaDiscontinuity
MaximumNumberOfSamplesForFileFormatReached
DeviceNotConnected
DeviceInUseByAnotherApplication
DeviceLockedForConfigurationByAnotherProcess
SessionWasInterrupted
MediaServicesWereReset
ExportFailed
DecodeFailed
InvalidSourceMedia
FileAlreadyExists
CompositionTrackSegmentsNotContiguous
InvalidCompositionTrackSegmentDuration
InvalidCompositionTrackSegmentSourceStartTime
InvalidCompositionTrackSegmentSourceDuration
FileFormatNotRecognized
FileFailedToParse
MaximumStillImageCaptureRequestsExceeded
ContentIsProtected
NoImageAtTime
DecoderNotFound
EncoderNotFound
ContentIsNotAuthorized
ApplicationIsNotAuthorized
DeviceIsNotAvailableInBackground
OperationNotSupportedForAsset
DecoderTemporarilyUnavailable
EncoderTemporarilyUnavailable
InvalidVideoComposition
ReferenceForbiddenByReferencePolicy
InvalidOutputURLPathExtension
ScreenCaptureFailed
DisplayWasDisabled
TorchLevelUnavailable
OperationInterrupted
IncompatibleAsset
FailedToLoadMediaData
ServerIncorrectlyConfigured
ApplicationIsNotAuthorizedToUseDevice
FailedToParse
FileTypeDoesNotSupportSampleReferences
UndecodableMediaData
AirPlayControllerRequiresInternet
AirPlayReceiverRequiresInternet
VideoCompositorFailed
RecordingAlreadyInProgress
CreateContentKeyRequestFailed
UnsupportedOutputSettings
OperationNotAllowed
ContentIsUnavailable
FormatUnsupported
MalformedDepth
ContentNotUpdated
NoLongerPlayable
NoCompatibleAlternatesForExternalDisplay
NoSourceTrack
ExternalPlaybackNotSupportedForAsset
OperationNotSupportedForPreset
SessionHardwareCostOverage
UnsupportedDeviceActiveFormat
IncorrectlyConfigured
SegmentStartedWithNonSyncSample
RosettaNotInstalled
OperationCancelled
ContentKeyRequestCancelled
InvalidSampleCursor
FailedToLoadSampleData
AirPlayReceiverTemporarilyUnavailable
UnknownAVError/code=%lld
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_TITLE
MediaPlaybackCore
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_ACTION
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
B16@?0@"NSError"8
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Informational: Command required stopping playback on a primary device.
Informational: Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
Informational: Output context modification requested no topology change
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
account-begin
account-rectification
account-update
application-termination
application-foreground
application-background
audio-route-changed
media-server-died
media-server-reset
time-control-status-changed
container-begin
container-end
device-changed
error-resolution
interrupt-begin
interrupt-end
audio-asset-type-selection
audio-format-selection
audio-format-changed
asset-load-begin
asset-load-end
asset-load-info
item-key-request-begin
item-key-request-end
item-begin
item-update
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-configuration-begin
item-configuration-end
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-rate-changed
item-ready-to-play
item-resume
item-timed-metadata-ping
item-transition-created
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-timeout
remote-control-end
remote-control-commands-changed
session-activation-begin
session-activation-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
session-reset
shared-session-begin
shared-session-participants-changed
shared-session-synchronization-begin
shared-session-synchronization-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
audio-route
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
queue-section-id
event-time-offset
error-for-resolution
resolution-type
interrupt-name
interrupt-should-resume
asset-load-error
asset-skd
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
item-jump-identifier
item-audio-asset-type-selection-metadata
item-audio-format-selection-metadata
item-audio-format-metadata
queue-item-id
radio-track-info
item-rate-change-participant-id
item-rate-change-position
item-rate-change-reason
item-rate-change-source
item-rate
item-rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
transition-start-item-id
transition-end-item-id
transition-type
transition-parameters
playback-behavior-metadata
network-constrained
network-expensive
network-high-quality
network-reachability
network-type
network-signal-strength
network-signal-info
queue-load-error
queue-load-networking-wait-time
private-listening-source
queue-reporting-metadata
queue-rtc-hierarchy-token
queue-rtc-service-id
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-commands
remote-control-internal-status
remote-control-type
session-activation-error
device-metadata
session-id
session-migration-error
session-restoration-error
session-rtc-hierarchy-token
time-control-status
time-control-status-reason
queue-account-id
queue-description
queue-delegated-account-id
queue-delegated-account-metadata
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
application-source-version
application-uuid
device-guid
internal-carry
media-frameworks
user-agent
queue-grouping-id
feature-name
reco-data
siri-ref-id
siri-wha-metrics
playback-context-class-name
item-duration
item-has-video
item-initial-position
item-start-boundary
item-end-boundary
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
item-asset-cache-age
item-asset-source
item-asset-location
item-asset-type
item-asset-endpoint-type
item-asset-has-offline-keys
item-asset-has-online-keys
item-asset-is-delegated-playback
item-asset-is-subscription-content
item-asset-bag-wait-time
item-asset-lease-wait-time
item-asset-redownload-wait-time
item-asset-subscription-load-wait-time
item-asset-suze-lease-wait-time
audio-asset-type-selection-type
audio-asset-type-selection-explanation
audio-asset-type-selection-justification
audio-format-selection-format
audio-format-selection-explanation
audio-format-selection-justification
active-format
active-format-justification
alternate-formats
target-format
preferred-tiers
route
repeat-type
shuffle-type
autoplay-mode
shared-session-id
local-user-identifier
participants
originating-participant
shared-sync-error
item-configured-eq
item-configured-sc-vol-normalization
item-configured-loudness
hls-metadata-wait-time
MPCPlaybackEngineEventMonotonicTimeWithHostTime
MPCPlaybackEngineEvent.m
time.machAbsoluteTime > machAbsoluteTime
type
payload
identifier
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
com.apple.MediaPlaybackCore/ABC
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
command:%@
%.3f
CommandTimeout
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
com.apple.hls.audioAssetMetadata
_skippedMetadata
controller
MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
Could not find content item at indexPath: %@ queueContentItems: %p queueContentItems.totalItemCount: %ld
@16@?0@"MPNowPlayingInfoAudioFormat"8
MPCError
UnableToPerformRequest
UnsupportedCommand
MissingBag
UnknownCustomQueueIdentifier
MissingTracklistData
MissingModelRequest
DelegatedAccountCreationFailure
MissingCreationPropertiesData
InvalidSuzeLeaseSessionToken
CellularRestricted
NetworkUnavailable
ExceededBagFileSizeLimit
FailedToDecodePlaylistManagerArchive
RequestTimeout
InvalidResponse
InvalidDelegatedIdentity
SubscriptionRequired
MissingSubscriptionAdamID
MissingLeaseSession
MissingLocalFilePath
AssetQualityTooLow
InvalidCachedAsset
InvalidAssetURL
AssetUnavailable
MissingRedownloadParameters
MissingStoreRequestContext
SubscriptionRequiredForSharedQueue
Cancelled
MissingArtwork
SubscriptionLeaseTaken
ExplicitContentRequiresAgeVerification
ExplicitContentIsNotAllowed
ExplicitContentAgeVerificationFailed
ExplicitContentAgeGatingFailed
DroppedCompletion
SubscriptionAssetResponseMissingItem
FailedToResolveStartItem
NoNetworkConnection
UserIdentityNotSupported
UnsupportedPlaybackContext
UnrestorableArchive
UninitializedPlaybackStack
EmptyModelResponse
FailedToQueueItems
MissingPlaybackAuthorizationToken
RadioServiceNotAllowed
HLSAssetMissingKeyURLs
UnknownCode/%lld
MPCSharedListeningError
ConnectionFailure
ContentUnavailable
ContentFailedToResolve
ContentFailedToAdd
MPCPlaybackSessionManagerError
FailedToSaveBeforeFirstUnlock
InvalidMetadataForEncoding
UnsupportedMetadataForEncoding
SessionFailedToDecode
SessionDoesNotExist
LoadSessionTimeout
MPCPlayerRequestError
UnableToSendCommand
CommandFailed
FailedToLoadMetadata
FailedToLoadArtwork
FailedToLoadSupportedCommands
FailedToResolve
FailedToPlaybackState
MPCModelRadioQueueFeederError
GetTracksFailed
AccountSignOut
MPCPlayerEnqueueError
HasUserCuratedQueue
ContentNotSupportedForSharePlay
CannotModifyQueueWithItemWithPlaybackToken
MPCPlaybackEngineInternalError
NoContentToPlay
NoCurrentItem
CannotFindReferencedItem
FeatureDisabled
CommandInvalid
CommandRequiresOverride
AccountMissing
AccountMissingSubscription
AccountMissingAuthentication
AccountNotPrepared
MediaServicesUnavailable
AudioSessionActivationFailed
FailedToPlayRate
FailedToPauseRate
FailedToToggleRate
FailedToChangeRate
FailedToJumpToTime
FailedToBeginScanning
FailedToStopScanning
FailedToEndPlayback
CannotStopScanningIfNotScanning
CannotSkipUnskippableItem
FailedToPlaySharedListeningItem
SharedListeningSessionDisconnected
FailedToBuildPlaybackContext
FailedToLoadPlaybackContext
FailedToMoveItem
FailedToRemoveItem
FailedToLoadSession
FailedToDecodeSession
FailedToFinalizeSession
SessionRestoredUnexpectedCurrentItem
Unrecoverable AirPlay failure [rental requires download]
SetQueue failed to load any assets
Shared listening playback failure
v24@?0q8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
<%@: %p followUp>
Failed to send subscription playback request (lease)
-[MPCModelGenericAVItemSubscriptionAssetLoadOperation execute]_block_invoke
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
An error is expected for the failure to create a loadResult
Failed to send subscription playback request (accountless stream)
Invalid operation type: %li
assets.count > 0
flavor
fileExtension
sinf2
vacToken
assets.count > 0 || hlsAsset != nil
Response did not contain asset for item identifiers: %@
LWHQ
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
Unable to obtain metadata for shuffled context: %@
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
B24@?0q8q16
registryWantsChanges
sectionWantsChanges
ModelQueueFeederDiffing
existingCollection
newCollection
Unable to apply changes [missing identifier set in new collection] index=%ld/%ld changeDetails=%@
newCollection failed to produce identifierSet for indexPath: %@
indexPathForItemWithIdentifiersIntersectingSet returned nil
startIndex out of bounds (startIndex/registry.count = %ld/%ld)
No valid items found [empty model response] for %@
Failed to resolve startItemIdentifiers [%@]: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Invalid request item class: %@ for %@
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
SiriAssetInfoBug
itemsNotInQueue
startItemIdentifiers
sectionedModelObjects
v24@?0@"MPIdentifierSet"8@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"16
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
v32@?0@"MPModelObject"8q16^B24
Could not discern required properties for %@
section
items
v32@?0@"ICRadioStationTrack"8q16^B24
_MPCQueueControllerDataSourceState.m
Failed to instantiate queueFeederClass: %@
SHARED_LISTENING
spcb
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
No active context for datasoure state for section: %@
Cannot encode MPCSharedListeningPlaybackContext
showInternalSections
UpdatedPlaybackContext is not compatible: reason = %@
com.apple.MediaPlaybackCore/PAF
metrics
treatmentProfiles.bundleIdAllowList.treatments
fieldActions.bundle-id.allowedValues
B16@?0@8
Carrier
Beta
Internal
ENGINE_V2
SEED
CARRY
9000
9100
-Debug
9999.99.99
ROOTS
DEBUG
play-activity-feed-post-all-play-starts
PAFDurationBug
Playback greater than 12 hours
PAF Event
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
playbackState [nullcontroller - init]
supportedCommands [nullcontroller - init]
queueIdentifier [nullcontroller - init]
playingItemIdentifier [nullcontroller - init]
playQueueIdentifiers [nullcontroller - init]
contentItemForIdentifier [nullcontroller - init]
contentItemArtworkForIdentifier [nullcontroller - init]
ContextID
ShouldOverrideManuallyCuratedQueue
ShouldImmediatelyStartPlayback
SiriRecommendationID
SiriAssetInfo
FeatureName
QueueGroupingID
SiriWHAMetricsInfo
UserIdentity
HomeKitUserIdentifier
%@ query=%@
%@ station=%@
%@ collection=%@ identifiers=%@
%@ seed=%@
%@ identifier=%@
MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 deviceUID=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
Missing external device for endpoint %@.
Could not discover endpoint for device UID (%@).
Could not get active origin.
v20@?0C8^v12
MPCPlayerPath
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
MPCVideoViewControllerMediaFoundationImplementation
com.apple.mediaplaybackcore.videodebug
v12@?0i8
<%@: %p internalViewController=%@>
internalController.showsPlaybackControls
internalController.player.currentItem.presentationSize
internalController.videoGravity
internalController.videoBounds
internalController.isReadyForDisplay
internalController.isPictureInPictureActive
internalController.allowsPictureInPicturePlayback
videoOutputDelegate
isReadyForDisplay
presentationSize
videoBounds
view
internalViewController.view
parentViewController.view.recursiveDescription
recursiveDescription
view.superview
view.superview.recursiveDescription
viewController
playbackEngine.implementation.playerViewController
internalViewController
parentViewController
internalController
playerViewController
videoOutput
Updating Accounts
com.apple.MediaPlaybackCore/environment
Updating NetworkReachability
Updating NetworkType
Updating Device
ReleaseType
CFBundleVersion
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
<MPCFutureInvalidationToken %p %@>
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 disconnected=YES
 error=%@
Personalization response did invalidate
v16@?0@"NSNotification"8
tshlp
MPCPlayerItemConfigurator.m
Attempting to configure a non-loaded player item.
Default device capability
Forced stereo
queueItem.isAssetLoaded
 Error retrieving audio formats
Error
No audio formats in HLS session data [Attempting setup with preferred type]
accountID
uuid
timeZoneName
privateListeningEnabled
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
usesExternalPlaybackWhileExternalScreenIsActive
isExternalPlaybackAllowed
usesAudioOnlyMode
Audio
Undefined
Streaming
AirPlay
TVOut
Picked route has no restrictions
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play non-cloud item
MPCPlayActivityUtilitiesPlayStartNotification
MPCPlayActivityUtilitiesPlayEndNotification
MPCPlayActivityUtilitiesPlayEndEventStartTimeKey
MPCPlayActivityUtilitiesPlayEndEventEndTimeKey
artistName
representativeItemCloudID
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
<MPCSharedListeningEvent: %p unknown/invalid>
<MPCSharedListeningEvent: %p participant=%@ sessionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ playbackEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ queueEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ reactionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ customEvent=%@>
<MPCSharedListeningEvent: %p unknown/eventType=%ld>
<MPCSharedListeningEventParticipant: %p id=%@ externalID=%@>
<MPCSharedListeningCustomEvent: %p localizedMessage="%@">
<MPCSharedListeningPlaybackEvent: %p kind=%@>
<MPCSharedListeningQueueEvent: %p unknown/invalid>
<MPCSharedListeningQueueEvent: %p addedContent=%@>
<MPCSharedListeningQueueEvent: %p playedNowContent=%@>
<MPCSharedListeningQueueEvent: %p removedContent=%@>
<MPCSharedListeningQueueEvent: %p reorderedContent=%@>
<MPCSharedListeningQueueEvent: %p replacedContent=%@>
<MPCSharedListeningQueueEvent: %p contentUpdatedMessage=%@>
<MPCSharedListeningQueueEvent: %p playbackMode=%@>
<MPCSharedListeningQueueEvent: %p unknown/kind=%ld>
<MPCSharedListeningQueueEventContentAdded: %p container=%@ items=%@>
<MPCSharedListeningQueueEventContentAdded: %p items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p container=%@ startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentRemoved: %p item=%@>
<MPCSharedListeningQueueEventContentReordered: %p item=%@>
<MPCSharedListeningQueueEventContentReplaced: %p startItem=%@>
<MPCSharedListeningQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
B8@?0
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/invalid>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p shuffleType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p repeatType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<MPCSharedListeningReactionEvent: %p reaction="%@" reactionID=%@ item=%@>
<MPCSharedListeningSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.assistant.SendCommand
v24@?0@"MRCommandResult"8@"NSError"16
v32@?0@"MRCommandResult"8@"NSError"16Q24
com.apple.mediaplayer.assistant.grouping
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
B16@?0@"NSNumber"8
MSVHasher+Algorithms.h
Cannot append to unknown hasher algorithm
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
queue-source.library
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
<missing queue identifier>
uniqueID
lastChangeDirection
playingItem
<NONE>
v32@?0@"MPCPlayerResponseSection"8q16^B24
MPCPlayerResponseTracklist.m
Count mismatch: sections=%@ sectionRangeMap=%@
Missing section range for section: %@
Non-contiguous range detected: location=%ld expectedLocation=%ld
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Provided display index path is out of bounds for this collection: %@ (section count %@)
Provided display index path is out of bounds for this collection: %@ (item count %@)
structureIndexPath did not produce a valid global index: %@
Could not find a displayIndexPath for structuredIndexPath: %@
Potluck
presumptuous command
Invalid section collection (2).
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
_PLACEHOLDER_AUTOPLAY_
queueStructures
dataSources
MPCQueueController
## Queue <%p> [%@]
## AutoPlay Queue
### State
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
apil
dncia
apep
apit
MPCQueueController.m
Attempt to encode QueueController without _dataSources
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
AutoPlayPlaceholderArtworkVisualIdenticality
Cannot insert after unknown item: %@
Cannot insert at Last position in AutoPlay.
no item
in shared listening mode
live streaming item
tail placeholder
end of shared listening
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state ready]
ContentItemID was nil [tail placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state loading]
ContentItemID was nil [loading placeholder]
Missing data sources for sectionIDs: %@
contentItemID (%@) not found
Invalid shared listening state [too many datasources]
Invalid shared listening state [dataSource must conform to MPCQueueControllerCommandInterposing]
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Unexpected entry type when reverse enumerating for before item: %d
User default should be resolved before setting on queue controller.
queue=%@&dataSources=%@
Requested removing content item that is not in the queue.
in autoplay
datasource %@ does not support shuffle
datasource %@ does not support repeat (infinite tracklist)
datasource %@ does not support repeat
AutoPlay unavailable in this SharePlay session
unknown state
unsupported content
waiting for items
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
Unexpected inSharedListeningMode=YES in itemToFollowItem: [deferredNext tail section - still loading - shuffled]
v16@?0B8B12
Unexpected inSharedListeningMode=YES in itemToFollowItem: [enumerating to tail section - still loading - shuffled]
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unknown asset failure reason
EndOfQueue-%@
 %@=%@
emitEventsForParticipants can only be called inSharedListeningMode
emitEventsForAddedSharedListeningContainerInfo can only be called inSharedListeningMode
InterposingHost-%@
LiveLink unexpectedly disconnected
Unexpected sharedCurrentItemChange not in shared listening
jumpToItem:inSection: failed [content item not in SIL] contentItemID=%@
_addPlaybackContext unsupported insertion position for CommandInterposing data source: %ld
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Cannot insert after unknown item (in identifier list): %@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Should not modify AutoPlay identifier list while in shared listening mode.
Cannot insert after unknown item (in autoplay identifier list): %@
The autoplay identifierList changed before the data source finished loading.
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Unexpected inSharedListeningMode=YES in contentItemIDWithOffset: [returning tail placeholder with SIL ID]
v32@?0q8@"NSString"16@"_MPCQueueControllerDataSourceState"24
%@-%@-%@
Cannot get a shared queue tracklist from an existing shared queue.
Current item was missing a media identifier while building shared queue tracklist: currentItem=%@ identifiers=%@
Current item was found multiple times while building shared queue tracklist.
Failed to find the current item in the shared queue tracklist.
AutoPlayPlaceholder
Unexpected state: missing dataSourceState for section: %@ dataSources: %@
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_currentItem
_autoPlayState
_autoPlayEndPosition
_inSharedListeningMode
_identifierList
_autoPlayIdentifierList
We only want QC's concept of autoplay state when we're NOT in shared listening
Unexpected state transition from: %@ to: %@
Failed to create AutoPlay playbackContext: %@
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
Paused
Interrupted
Restore
v24@?0@"NSString"8@"NSError"16
ExplicitRestrictionChangedToTrue
ExplicitRestrictionChangedToFalse
MPCSharedListeningQueueFeeder.m
Unexpected shared listening request: %@
containerIdentifier
B16@?0@"ICSharedListeningContainer"8
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
startingItemIndexPath section out of bounds (%ld/%ld)
startingItemIndexPath item out of bounds (%ld/%ld)
addPlaybackContext:afterItem:
Pending action expired [startItem not found in IDRegistry] startItemIdentifier=%@
Pending action expired [startItemIdentifier not found in live link queue] startItemIdentifier=%@
[SLQF] addPlaybackContext unsupported insertion position: %ld
v32@?0@"MSVSectionedCollection"8@"NSIndexPath"16@"NSError"24
Event-%@
@16@?0@"MPQueueFeederIdentifierRegistry"8
ChangeCurrentItem
Pending action flushed but item was still not found: %@
Unexpected request type: %@
v16@?0@"MPModelRequest"8
B32@?0@"_MPCSLQFPendingAction"8Q16^B24
kind
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
live_link
v24@?0@"ICSharedListeningItem"8@"NSError"16
<%@: %p label="%@" itemID=%@ expiration=%@>
LiveLinkConnecting
LiveLinkWaitingForFirstQueue
CallingSuper
SuperCompleted
SuperFailed
LiveLinkRetryingFromConnecting
LiveLinkRetryingFromWaitingForFirstQueue
LiveLinkRetryingFromCallingSuper
LiveLinkRetryingFromSuperCompleted
LiveLinkRetryingFromActive
LiveLinkActive
LiveLinkDisconnected
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
userIdentity
v16@?0@"NSArray"8
@16@?0@"MRAVOutputDevice"8
%@ - %@
B16@?0@"MRAVOutputDevice"8
MPCAssistantEndpointContext
Home
cce7c4ecef404121ae8971
revision
metadataObject
indexPath
explicitBadge
localizedDurationString
languageOptionGroups
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
@16@?0@"MPCReportingPlaybackActivityEvent"8
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
albumArtistName
albumName
composerName
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
title
albumTrackCount
trackNumber
year
Unsupported content (unknown subclass %@)
MPPlaybackContext+MPCSharedListening.m
Cancelled while performing request: %@
Failed to load request: %@
Request did not produce any items: %@
Intent produced unsupported section (genericObject.type=%@) %@
v16@?0@"MPIdentifierSet"8
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
v32@?0q8@"MPIdentifierSet"16^B24
v32@?0@8q16^B24
Intent did not produce any store items: %@ %@
Intent did not produce start item for identifiers: %@
@16@?0@"MPIdentifierSet"8
Unsupported content [Radio] %@
Unsupported content [Shared Listening Session] %@
com.apple.MediaPlaybackCore/AMSEngagement
device
account
enqueuer-account
related-events
v24@?0@"AMSEngagementEnqueueResult"8@"NSError"16
event-type
time
containerType
Live or radio streaming playback
Object type is not a song
Object is a video without traits
Enhanced audio is not available - type selected randomly
Audio type selected from traits & preferences
0.Environment
1.Traits
2.Preferences
3.Outcome
No available audio formats
No enhanced audio available on this store front
B16@?0@"MPCPlayerAudioFormat"8
Audio format selection [from preferences & route]
1.Formats
3.Route
4.Outcome
Audio format selection [from audio asset type & route]
2.Audio type
4.Matched tier
5.Outcome
%@ <%p>: %@
Lossless: %@
HRLossless: %@
Spatial: %@
LQStereo: %@
HQStereo: %@
HighResLossless: %@
Network: %@
Expensive: %@
Constrained: %@
HighBandwidth: %@
Always On
Automatic
Unknown preference:%ld
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
Multichannel
allowedAudioSpatializationFormats
MonoAndStereo
MonoStereoAndMultichannel
GaplessAudioTransitions
BinauralAudioForUnknownAudioDeviceTypes
ScalabilityToLosslessAudio
UnconstrainedAudioSampleRate
[%@]
variantPreferences
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
MediaPlayer
cross_fade
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
controllerForPlayerPath
Failed to send command %ld
v28@?0I8@"NSError"12@"MRSendCommandResultStatus"20
v32@?0@"MRCommandResult"8@"NSError"16@"NSString"24
MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
v16@?0@"MPRemoteCommandStatus"8
{_MSVSignedRange=qq}
<MPCMediaRemoteController: %p>
playQueueIdentifiersForRequest[%@]
PlaybackQueue Response failed to include now playing item
playingIdentifier
queueIdentifier
contentItem - %@
Requested content item %@ state does not exist.
contentItemArtwork[%@] - %@
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"8@?0
playingItemIdentifier [mergeContentItems]
resolvedPlayerPath
contentItemIDs
contentItemChanges:keys
<EMPTY>
optimisticStateContentItems
supportedCommands
loadedRange
requestedRange
playingItemIdentifier
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
command
commandName
%@ (%d)
continue-listening
station
MPCSiriPlaybackAdditionsMetadataCountFromResponseKey
MPCSiriPlaybackAdditionsMetadataOrderedPlaybackCacheRequestsKey
MPCSiriPlaybackAdditionsMetadataOrderedPlayableAssetIdentifiersKey
MPCSiriPlaybackAdditionsMetadataPlaybackAuthTokenTrustIdentifierKey
v16@?0@"ICRequestContext"8
meta.api
format.resources
results
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
audioTraits
assetUrls
enhancedHls
hls-playlist-url
hls-key-cert-url
hls-key-server-url
key-server-protocol-type
songId
offers
downloadAssets
contains
does not contain
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
MPCAssistantConnection
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
MPCPlaybackEngineEventStream.m
EVS: Unable to generate SQL statement: %@ error:%@
B16@?0@"NSString"8
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
CREATE UNIQUE INDEX IF NOT EXISTS events_ns ON events (_ns)
CREATE INDEX IF NOT EXISTS events_type ON events (type, _ns)
PlaybackEventStreams
%@-%@.sqlpkg
_MPC_CLEAR_EVS
Database
@"MSVSQLDatabase"8@?0
EVS: deallocated before invalidation
 - Database: %@
 - Subscriptions: %@
 - Cache Misses: %@
 - Cache Hits: %@
 - Assertions: %@
reason
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
@identifier
@type
@monoAbsolute
@monoContinuous
@monoTimebaseNS
@userNS
@payload
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@count
v32@?0@8@16^B24
B16@?0@"MPCPlaybackEngineEvent"8
<%@: %p consumer=%@ events=%@>
Consumer %@ already has a mutating subscription to %@
Consumer %@ already has a subscription to %@
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
@lastNS
@maximumNS
<%@: %p %@ -> %@>
startEvent
Start event must be chronologically AFTER the limiting event.
COUNT(DISTINCT events.identifier)
eventType
Must provide event types to enumerate.
Query too large
SELECT %@ FROM events
, json_tree(events.payload, @payload_key_%d) AS payload_%d
(payload_%d.value = @payload_value_%d)
events.type = @type
events.type IN (
@type_%d
_ns < @startNS
_ns > @endNS
 WHERE 
 AND 
 ORDER BY _ns DESC
 LIMIT %lld
@startNS
@payload_key_%d
@payload_value_%d
Unable to convert payload value to JSON: %@
Unknown payload value type for query: %@
v32@?0@"NSString"8@16^B24
@endNS
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
<%@: %p reason=%@ invalidated=%d>
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time out of bounds: %llu < %llu < %llu
Event %@ time overflows int64 size: %llu < %lld
com.apple.MediaPlaybackCore.MPCModelStorePlaybackItemsRequestOperation.accessQueue
Request must contain either storeIDs or sectionedModelObjects
v32@?0@"ICUserIdentity"8@"ICMusicSubscriptionStatusResponse"16@"NSError"24
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
No network connection
-[MPCModelGenericAVItemMediaRedownloadOperation execute]_block_invoke
MPCModelGenericAVItemMediaRedownloadOperation.m
Missing asset URL in media redownload request response
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
Missing redownload parameters
Missing store request context
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
v16@?0@"MPModelRadioStation"8
v24@?0@"MPPlaybackContext"8@"NSError"16
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
Missing tracklist data in playback queue.
v16@?0@"<MPMutableRadioIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
Missing creation properties data in playback queue.
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Unknown queue identifier: %@
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
unknown-guid
v24@?0@"ICUserIdentity"8@"NSError"16
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPRemotePlaybackQueue+MPCAdditions.m
Attempted to decode container identifier set without personID
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
ClearUpNext [MPC]
ShareQueue [MPC]
Debug [MPC]
<Unrecognized Command>
Unrecognized [%lld]
clearUpNextQueueCommand
shareQueueCommand
debugCommand
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
v24@?0@"MPServerObjectDatabaseAsset"8^B16
POST
guid
flavors
adamIds
application/json
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
max-mini-sinf-batch-size
https://itunes.apple.com/
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.mediaplaybackcore.audiotap
Sample Rate: %1.0fHz - Format ID: %u - Bytes/Packet: %u - Frames/Packet: %u - Bytes/Frame: %u - Channels/Frame: %u - Bits/Channel: %u
com.apple.iBooks
com.apple.podcasts
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@, originatingOutputDeviceUID = %@, singleGroup = %@, originatingControl = %@>
v16@?0@"NSDictionary"8
OriginatingOutputDeviceUID
AppBundleID
PlayerID
MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
Unable to restore state. Too many failed attempts.
v20@?0B8@?<v@?>12
audioSessionCategory
stateRestoration-%@
attempts
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
Age Gating
Age Verification
MPCSiriSelfLogger.m
MPCSiriSelfLogger: siriReferenceIdentifier is not recognized by SASelfLogger: %@
SASelfLogger
Class getSASelfLoggerClass(void)_block_invoke
Unable to find class %s
void *SiriAudioSupportLibrary(void)
SASelfLoggerMWTMusicMetadata
Class getSASelfLoggerMWTMusicMetadataClass(void)_block_invoke
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
v16@?0@"MPCPlayerPath"8
resolvedPlayerPath and error was nil
v24@?0@"MPCPlayerPath"8@"NSError"16
v16@?0^v8
VERSION
BIT-RATE
SAMPLE-RATE
BIT-DEPTH
CHANNEL-COUNT
ORIGIN-CHANNEL-COUNT
CHANNEL-USAGE
AUDIO-FORMAT-ID
GROUP-ID
IS-ATMOS
ORIGIN-IS-ATMOS
tier
codec
chlay
ochlay
chlayd
Stereo
LQ-Stereo
Synthesized format
HQ-Stereo
tier: %@
bitrate: %@
groupID: %@
bitDepth: %@
sampleRate: %@
codec: %@
channels: %@
layout: %@
origin channels: %@ [%@]
origin channels: %@
spatialized
multichannel
stableVariantID: %@
%ldkbps
%d-bit
%ldkhz
BINAURAL
Mono
Binaural
5.1.2
5.1.4
7.1.2
7.1.4
9.1.6
bitrate
bitDepth
channelCount
layout
sampleRate
name
rmcs
spzs
spze
spzcs
spzcr
type: %@
name: %@
multichannel suppport: %@
supportsSpatialization
spatializationIsEnabled
canRenderSpatialAudio
canStreamSpatialAudio
Unavailable
UserPreference
UserDownload
RouteIncompatible
RouteUnknownCompatibility
BandwidthInsufficient
Unknown-%ld
LowBandwidthStereo
HighQualityStereo
Lossless
HighResolutionLossless
Spatial
DeviceSpeaker
LineOut
Headphones
BluetoothHeadphones
BluetoothSpeaker
USBAudio
CarAudio
HDMI
Unknown [CM-driven]
Available
properties
identity
ReplacementContext is unsupported type %@ != MPCModelPlaybackContext
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
domain
code
userInfo
@24@?0@8@16
@16@?0@8
prefix
given
middle
family
suffix
nick
modelClass
_empty
library
db-id
contained-pid
sync
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
personal
person-id
cloud
cloud-album
reco-id
universal
global-playlist
adam
former-ids
ulid
purchased
social-profile
media-clip
static-asset
reporting-adam-id
asset-adam-id
radio
station-string
station-hash
station-id
serverID
externalID
nameComponents
imageURL
v16@?0@"<_ICMutableLiveLinkIdentityPrivate>"8
version
root
debug
dialog
data
dataType
message
actions
@16@?0@"MPRemoteCommandHandlerDialogAction"8
event
mrCommand
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
MPCPlaybackEngineEventPayload.m
Unexpected type for key %@ actual=%@ expected=%@
Unexpected type for element in array for key %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)
Attempt to JSON coerce unsupported value type: %@ %@
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
LeasePreventionPause_%@
errorDomain
errorCode
date
formattedTime
queueLoadDuration
queueLoadNetworkTime
queueEndpoint
initialQueue
queueBundleID
createAssetDuration
assetPreloaded
urlScheme
audioType
itemConfigWaitTime
itemConfigHLSWaitTime
hasOfflineKeys
hasOnlineKeys
assetInfoSource
isDelegated
isSubscription
redownloadTime
readyToPlayTime
subscriptionWaitTime
suzeLeaseTime
queueStartItem
itemQueueSize
sessionStartItem
MediaIdentifier
networkChangeCount
endReason
initialItemLoadDuration
initialItemPreloaded
initialQueueType
initialQueuePreloaded
initialQueueLoadDuration
initialQueueFeatureName
initialNetworkType
isHLS
perceivedPlayStartTime
previousItemAssetType
previousItemEndReason
finalNetworkType
stateRestoration
queuesAdded
queuesFailed
itemsPlayed
itemsFailed
commandSendTime
natural
skip
select-song
endSession
fail
originUnknown
typeUnknown
song
musicVideo
tvEpisode
playlistEntry
adamid
padamid
sadamid
aadamid
raid
raidev
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ requirePlaybackAuthorizationToken=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
request.playbackRequestEnvironment
request
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v24@?0@"NSArray"8@"NSError"16
MPCPlaybackHistoryRecordChangeRequestOperation.m
Unsupported request type: %ld
overridePlayingItem
com.apple.music.scenes
motion-timeline
versions
scenes
start_frame
end_frame
iterations
MPCNullPlaybackContextCodingKeyLabel
actionAfterQueueLoad
label
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
@"NSString"16@?0q8
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
container
startingItemIndexPath
shuffleMode
MPCMediaFoundationTranslator.m
queueItem == nil || [(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
[(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
B16@?0@"ICStoreDialogResponseButton"8
v16@?0@"MSVSystemDialogResponse"8
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
AirMusic
<MPCPlaybackRequestEnvironment: %p identity=%@>
clientIdentifier
clientVersion
delegationProperties
requestingBundleIdentifier
requestingBundleVersion
v16@?0@"ICStoreRequestContext"8
v16@?0@"ICMusicKitRequestContext"8
[delegated account missing]
[promoting delegated account]
[base account missing]
[base account is delegated]
MPCSharedListeningLiveLinkReusePool.m
sessionIdentifier must not be nil
EncodeSerialQueue
v24@?0@"NSData"8@"NSError"16
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
Class getAFSecurityConnectionClass(void)_block_invoke
MPCAssistantEncodings.m
void *AssistantServicesLibrary(void)
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v20@?0B8@"NSError"12
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v32@?0@"MPModelGenericObject"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
DeviceClassNumber
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPAD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPOD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPHONE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
requestDeviceCount
source
com.apple.MediaAssistant.siri
com.apple.mediaplaybackcore.assistant.pause
no UIDs provided
success
errorMessage
@"NSDictionary"8@?0
no origin for endpoint
v24@?0@"NSError"8@"NSArray"16
@"NSString"16@?0@"MRAVOutputDeviceDescription"8
MPCAssistantPause
v24@?0@"NSArray"8@"NSArray"16
removedDeviceCount
pausedDeviceCount
removedEndpointCount
pausedEndpointCount
appleTVsAffected
homepodsAffected
forceRemoveDeviceCount
v16@?0^{__CFError=}8
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
v16@?0@"MPCAssistantSendCommandResult"8
appBundleID
resultCodes
com.apple.mediaplayer.assistant.command
actualDestination
local
MediaRemote
new_siri_behavior
v16@?0@"MRAVEndpoint"8
v24@?0@"MRAVEndpoint"8@"NSError"16
MPCAssistantCommand-removeUnwantedDevices
v32@?0@"MRAVEndpoint"8@"NSArray"16@?<v@?@"MRAVEndpoint">24
actualDeviceCount
When processing %@ if we are the group leader, pause our now-playing app if we have one
v16@?0^{__CFArray=}8
v12@?0B8
requestedUIDs
outputGroups
outputGroupIDPresent
formGroup
remote
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0@"MRCommandResult"8
proxy promotion
group leader
v24@?0^v8^{__CFError=}16
errorString
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
MPCItemBookmarker.m
fromItem == nil || [(MPAVItem *)fromItem isKindOfClass:[MPAVItem class]]
toItem == nil || [(MPAVItem *)toItem isKindOfClass:[MPAVItem class]]
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
Could not convert station into metadata: %@
v32@?0@"NSString"8d16@"NSError"24
v16@?0@"ICMutableRadioPlaybackHistory"8
station track not skippable
station is a stream
cannot find item: %@
Radio service is restricted
v24@?0d8@"NSError"16
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
LOADING_AUDIO_LABEL
RADIO_LABEL
queue-source.tilt
RadioStationID
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
FirstItem
NextItem
PlayError
channelLayout
multiChannel
eventTime
sectionIdentifier
itemIdentifier
itemMetadata
siriRefId
formatInfo
routeInfo
errorResolution
nextItemWaitTime
sessionActivationWaitTime
checkpointMRSetQueueBegin
checkpointSetQueueBegin
checkpointRateZero
checkpointSetQueueEnd
checkpointMRPlay
checkpointPlay
checkpointAssetLoadBegin
checkpointItemConfigBegin
checkpointItemBegin
checkpointLikelyToKeepUp
checkpointReadyToPlay
checkpointRateOne
checkpointFirstAudioFrame
MPCPlayPerfMetrics.m
Section identifier in first audio frame event can't be nil
Item identifier in first audio frame event can't be nil
v24@?0@"MPCPlaybackEngineEvent"8^B16
FirstAudioFrameBug
FirstAudioFrameBeforeItemBegin
<%@:%p %@>
<%@:%p>
EventType: %@
Item: %@ %@ (%@)
  - TotalTime (MPP):        % 3.3fs (Total time spent to get music to play)
  - MusicWaitTime (MWT):    % 3.3fs (User-perceived wait time)
  - MediaPlayerTime (MPT):  % 3.3fs (Total time spent in MediaPlayer frameworks)
  - NetworkTime (NWT):      % 3.3fs (Blocking Network Time)
  - AVTime (AVT):           % 3.3fs (Time spent waiting on AV)
  - GapTime (GAP):          % 3.3fs (Next item wait time)
Components
  - SetQueueCommandSend:    % 3.3fs [MR] (SendCommand -> PerformSetQueue)
  - QueueLoad:              % 3.3fs [MP] (PerformSetQueue -> AssetLoadBegin)
  - AssetLoad:              % 3.3fs [MP] (AssetLoadBegin -> AssetLoadEnd)
  - ReadyToPlayStatus:      % 3.3fs [AV] (AssetLoadEnd -> ReadyToPlay)
  - RateChange:             % 3.3fs [MP] (Play -> RateChanged)
  - FirstAudioFrame:        % 3.3fs [AV] (RateChanged -> FirstAudioFrame)
Network
  - Lookup:                 % 3.3fs
  - GetTracks:              % 3.3fs
  - Bag:                    % 3.3fs
  - Lease:                  % 3.3fs
  - SuzeLease:              % 3.3fs
  - SubscriptionAssetLoad:  % 3.3fs
  - MediaRedownload:        % 3.3fs
  - HLSMetadata:            % 3.3fs
Misc
  - PlayCommandWait:        % 3.3fs [UI] (ReadyToPlay -> Play)
  - PlayCommandSend:        % 3.3fs [MR] (SendCommand -> PerformSetQueue)
  - SessionActivation:      % 3.3fs [AV] (AVAudioSession activation) 
Error
  - Error:                  %@
  - Resolution:             %@
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Playback engine doesn't support state restoration
v8@?0
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
Failed to load session due to %gs timeout.
v16@?0q8
v16@?0@"NSError"8
v16@?0@?<v@?@"NSError">8
_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Opting not to save an archive for a shared listening session
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
queueController
PlaybackSessions
v24@?0@"UIImage"8@"NSError"16
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelObject"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelSong"8
MPCModelGenericAVItemTimedMetadataRequest.m
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
v16@?0@"MPModelObject"8
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
v24@?0@"MPModelResponse"8@"NSError"16
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
softlink:r:path:/System/Library/PrivateFrameworks/SiriAudioSupport.framework/SiriAudioSupport
softlink:r:path:/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
MPCAudioSpectrumAnalyzer
MPCPlaybackEngineEventObserving
NSObject
MPCProcessAudioTapDelegate
MPCAudioSpectrumObserver
_MPCAudioSpectrumAnalyzerStorage
MPCSharedListeningPlaybackIntentDataSource
ICLiveLinkDelegate
MPCPlaybackIntentDataSource
_MPCSharedListeningTracklistPlaybackContext
_MPCProtoItem
NSCopying
MPCStoreLibraryPersonalizationMiddleware
MPMiddleware
MPCPlayerResponseBuilder
MPCResponseMediaRemoteControllerChaining
_MPCAudioSessionController
_MPCPlaybackEngineMediaFoundationImplementation
MFPlaybackStackControllerDelegate
MPCQueueControllerDelegate
MPCAssetLoaderDelegate
MPCPlaybackEngineImplementation
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
ICStoreResponseProtocol
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
_MPCProtoTracklistIndexPath
MPCAssistantSetVolume
MPCPlaybackEngineLoggingConsumer
MPCPlaybackEngineEventConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
_MPCProtoRadioContentReference
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCPlayerSessionResponse
_MPCProtoItemIdentifierSet
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerClient
_MPCMusicPlayerControllerServer
NSXPCListenerDelegate
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
MPRTCReportingItemSessionCreating
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
_MPCMediaRemotePublisher
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCPlaybackIntent
ForShortcutsOnly
MPCPlaybackSharedListeningProperties
_MPCPlaybackContextPlaybackIntentDataSource
MPCAssetLoadPropertiesLocalFileEvaluation
MPCAssetLoadPropertiesLocalFileEvaluator
_MPCProtoRadioCreationProperties
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCAnalyticsSignpost
MPCWaitForLikelyToKeepUp
MPCWaitForReadyToPlaySignpost
MPCPlayToSetRateSignpost
MPCSetRateToEffectiveRateSignpost
MPCScene
MPCSceneCollection
MPCScriptedLooper
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddleware
MPCPlayerCommandDialogAction
MPCPlayerCommandDialog
MPCPlayerCommandStatus
MPCPlayPerfConsumer
MPCDialogs
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCAutoBugCaptureEventConsumer
MPCMediaRemoteMiddlewareCommandsOperation
MPCHLSSessionData
MPCMediaRemoteMiddleware
MPCErrorController
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MQFDebugging
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCProtoContainerIdentifierSet
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
AVPlayerViewControllerDelegate
_MPCVideoViewControllerMediaFoundationImplementation
MPCVideoOutput
MPCVideoOutputDelegate
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCSharedListeningPlaybackIntentTracklistToken
MPCPlayerItemConfigurator
MPAVRoutingControllerDelegate
_MPCProtoDelegateInfo
MPCExternalPlaybackControllerImplementation
MFExternalPlaybackController
MPCExternalPlaybackRouter
_MPCProtoRadioContentReferenceLibraryArtistContentReference
MPCRadioArtworkDataSource
MPCSharedListeningEvent
MPCSharedListeningEventParticipant
MPCSharedListeningCustomEvent
MPCSharedListeningPlaybackEvent
MPCSharedListeningQueueEvent
MPCSharedListeningQueueEventContentAdded
MPCSharedListeningQueueEventContentPlayedNow
MPCSharedListeningQueueEventContentRemoved
MPCSharedListeningQueueEventContentReordered
MPCSharedListeningQueueEventContentReplaced
MPCSharedListeningQueueEventContentUpdatedMessage
MPCSharedListeningQueueEventPlaybackModeChanged
MPCSharedListeningReactionEvent
MPCSharedListeningSessionEvent
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCModelStorePlaybackItemsRequestAccumulatorImportResponse
MPCAdditions
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDisplayDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
MPCQueueControllerCommandInterposing
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPCContinueListeningRadioQueueProviding
MPArtworkDataSource
MPStartItemInfoProviding
MPCQueueItemProviding
MSVSegmentedCoding
MPCQueueControllerCommandInterposingHost
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCReportingPlaybackEnvironmentPropertiesLoader
MPCSharedListeningQueueFeeder
AVPlayerPlaybackCoordinatorDelegate
MPCSharedListeningContainerInfo
_MPCSLQFPendingAction
MPCPlaybackDefaultsImplementation
MFPlaybackDefaults
MPCPlayPerfAnalytics
_MPCProtoRadioContentReferenceStoreContentReference
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCAssistantEndpointContext
MPCPlayerResponseItem
MPCPlayerResponseItemMusicAudio
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
_MPCProtoRadioContentReferenceLibraryItemContentReference
MPCSharedListening
MPCAMSEngagementEventConsumer
_MPCProtoContainer
MPCAudioAssetTypeSelection
MPCPlayerAudioFormatSelection
MPCAudioAssetTypeSelector
MPCExplicitContentAuthorizationManager
MediaPlaybackCore
MPCItemIdentifierImplementation
MPCItemIdentifier
MPCCrossFadeParameters
MFCrossFadeParameters
MFQueuePlayerItem
MFPlayerItem
MFTransitionInformationProviding
MPCMediaRemoteController
_MPArtworkCatalogOverlayDelegate
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
MPCModelStorePlaybackItemsRequestOperation
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
MPCDebugCommand
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCProcessAudioTap
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
_MPCPlaybackEnginePlayerIDInitializationParameters
MPCPlaybackEngineInitializationParameters
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
_MPCPlaybackEngineEventStreamInitializationParameters
MPCPlaybackEngineEventStreamInitializationParameters
MPCSiriSelfLogger
MPCPlayerPathCache
MPCPlayerAudioFormat
MPCPlayerAudioRoute
MPCSharedListeningPlaybackContext
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayload
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
RTCOldEngineSupport
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCReportingEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
MPCScriptedSceneCollectionParser
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
_MPCProtoTracklist
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCAVItemTrace
MPCModelGenericAVItemHomeSharingLoadOperation
MPCAudioProcessor
MPCAudioProcessing
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCSharedListeningLiveLinkReusePool
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPCQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
MPCPlayPerfMetrics
_MPCPlaybackEngineSessionManager
MPCPlayerResponseParticipant
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
avPreset
writeToURL:options:error:
writeToURL:atomically:encoding:error:
willMoveToParentViewController:
willChangeValueForKey:
whitespaceCharacterSet
weakToStrongObjectsMapTable
weakObjectsHashTable
waitForKeyRenewalsWithCompletionHandler:
volumeNormalization
volumeAdjustment
visualIdenticalityIdentifier
viewWithTag:
viewController
view
videoViewController
versionHash
verifyWithError:
vendorID
variantPreferences
valuesForProperties:
valueWithCMTime:
valueWithCGSize:
valueWithBytes:objCType:
valueForKeyPath:
valueForKey:
uuid
usesAudioOnlyModeForExternalPlayback
userSkippedPlayback
userSecondsSinceReferenceDate
userMonitorWithUserIdentity:fromUserIdentityStore:
userMonitorWithHomeIdentifiers:
userMonitorWithHomeIdentifier:
userInterfaceIdiom
userInfo
userIdentitiesForManageableAccountsWithError:
userAgent
userAdvancedDuringPlayback
urlForBagKey:
updateWithIdentity:
updateSection
updateProbabilityForOutcomeA:
updateLaunchCommandsWithConfigurationHandler:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
updateForPlaybackOfFileAsset:fromResponse:
updateAudioSessionWithConfiguration:
unsignedShortValue
unsignedLongLongValue
unsignedIntegerValue
unsignedIntValue
unlock
universalStore
universalCloudLibraryID
unionSet:
underlyingErrors
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectOfClass:fromData:error:
uint64ValueAtColumnIndex:
ubiquitousIdentifierWithStoreAdamID:
tvEpisode
trustID
treatment
translatorForMPModelClass:
traits
traitCollection
tracksTiledArtworkCatalogWithRows:columns:
tracklistActionType
trackType
trackNumber
trackIdentifiers
trackCount
totalRequestItemCount
totalItemCount
tokenWithImageArtworkInfo:
tokenRenewalRequests
togglePlayPauseCommand
timedMetadata
timebase
timeZoneWithName:
timeZoneWithAbbreviation:
timeStamp
timeIntervalSinceReferenceDate
timeIntervalSinceNow
timeIntervalSinceDate:
timeIntervalSince1970
timeControlStatus
tightSyncUID
text
tasteTypeForModel:
targetRate
systemTimeZone
systemRoute
systemPinkColor
systemConfiguration
syncID
switchBitrate
supportsRewind
supportsRating
supportsKeepLocalStatusObservation
supportsHeadTrackedSpatialAudio
supportsFastForward
supportsArtworkCatalogLoading
supportsAccountRectification
supportedSizesForMediaType:artworkType:
supportedSizes
supportedOptions
superview
successStatus
subtype
subtitle
substringToIndex:
substringFromIndex:
subscriptionAdamID
subarrayWithRange:
strongToWeakObjectsMapTable
strongToStrongObjectsMapTable
stringWithUTF8String:
stringWithString:
stringWithFormat:
stringWithContentsOfURL:encoding:error:
stringWithCapacity:
stringValueAtColumnIndex:
stringValue
stringFromDate:timeZone:formatOptions:
stringFromDate:
stringByTrimmingCharactersInSet:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingCharactersInRange:withString:
stringByRemovingPercentEncoding
stringByAppendingString:
stringByAppendingPathExtension:
stringByAppendingPathComponent:
stringByAppendingFormat:
stringByAddingPercentEncodingWithAllowedCharacters:
string
streamURL
streamProtocol
streamDescription
storefrontIdentifier
storefrontHeaderSuffix
storeUbiquitousIdentifier
storePlatformMetadata
storeItemWithIdentifier:
storeItemMetadataForItemIdentifier:
storeItemID
storeIdentifier
storeCloudIdentifier
storeAdamIdentifier
storeAdamID
stopTime
stopLeaseSessionWithCompletionHandler:
stopCommand
statusWithCode:error:
statusWithCode:dialog:
statusWithCode:customData:type:
statusWithCode:
statusType
statusOfValueForKey:error:
stationMetadata
stationIdentifier
stationEventID
stationAllowsItemLiking
staticAssets
statementWithString:error:
stateReasonDialogMetricsDictionary
stateReasonDialog
stateDictionary
startupTime
startTimes
startTime
startLeaseSessionWithCompletionHandler:
startItemPlayParameters
startItemIdentifier
startItemID
startDate
startConfigurationWithCompletionHandler:
standardUserDefaults
specifiedPositionAfterItemIdentifier:
specificAccountWithDSID:
spatialAudioPreference
sourceID
soundCheckVolumeNormalization
soundCheckEnabled
sortedArrayUsingSelector:
sortedArrayUsingComparator:
sortUsingSelector:
sortUsingComparator:
song
socialProfileID
socialPerson
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
skipForwardCommand
skipBackwardCommand
sizeInfo
siriRecommendationIdentifier
sinfs
signedRangeValue
signalStrength
signalInfo
signData:withCompletionHandler:
showDebugUI
show
shouldUseLease
shouldUseAccountLessStreaming
shouldSkipJumpToItemStart:
shouldReturnLastKnownStatusOnly
shouldRequirePlaybackAuthorizationTokensForPlayback
shouldReportPlayEvents
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
shouldRememberBookmarkTime
shouldPlaybackRequireOnlineKeys
shouldExcludeFromShuffle
shouldBecomeActive
shortVersionString
shiftIndexesStartingAtIndex:by:
sharedUbiquitousPlaybackPositionController
sharedStoreItemMetadataRequestController
sharedStoreArtworkDataSource
sharedStatusController
sharedSessionManager
sharedService
sharedServerObjectDatabase
sharedSecurityInfo
sharedSAPSessionWithVersion:URLBag:requestContext:
sharedRestrictionsMonitor
sharedMonitor
sharedLocalEndpoint
sharedInstance
sharedCloudController
sharedBagProvider
sharedApplication
sharedAnalytics
setupForSolo
setupForShared
setupForManagedSessionWithAudioSession:
setupEQPresetWithDefaultPreset:
settingWithPreset:
setYear:
setWithObjects:
setWithObject:
setWithCapacity:
setWithArray:
setWantsSerializedEventDelivery:
setVolumeAdjustment:
setVendorID:
setVariantPreferences:
setValue:forProperty:withCompletionBlock:
setValue:forProperty:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setUsesAudioOnlyModeForExternalPlayback:
setUserSkippedPlayback:
setUserPlayCount:
setUserInteractionEnabled:
setUserIdentityStore:
setUserChangedItemsDuringPlayback:
setUserAdvancedDuringPlayback:
setUsePrioritizedURLSession:
setUnsupportedReasons:
setUniversalStoreIdentifiersWithBlock:
setUniversalCloudLibraryID:
setTvEpisode:
setTraits:
setTracks:
setTrackNumber:
setTrackCount:
setTimeoutInterval:
setTimeout:
setTimedMetadataData:
setTimedMetadata:
setTimeSnapshot:
setTier:
setTasteType:forModel:withCompletionHandler:
setTargetedAudioQuality:
setTailPlaceholder:
setTag:
setSyncID:
setSupportsSpatialization:
setSupportsAccountRectification:
setSupportedSessionTypes:
setSupportedQueueEndActions:
setSupportedOptions:
setSubtype:
setSubtitle:
setSubscriptionAdamID:
setStreamingContentType:
setStoreUbiquitousIdentifier:
setStoreSubscriptionAdamID:
setStoreRequestContext:
setStoreRadioAdamID:
setStorePurchasedAdamID:
setStoreIdentifier:
setStoreDialogResponseHandler:
setStoreCloudIdentifier:
setStoreCloudID:
setStoreAdamIdentifier:
setStopTime:
setStatusBlock:
setStationStringID:
setStationID:
setStationHash:
setStartTime:
setStartItemInfoProvider:
setStableVariantID:
setSpatialized:
setSpatializationFormat:
setSpatializationEnabled:
setSourceItemIdentifiers:
setSoundCheckVolumeNormalization:
setSongTraits:
setSong:
setSocialProfileID:
setSkippedRentalCheckout:
setSkipSerializedEventDelivery:
setSkipDate:
setSiriRecommendationIdentifier:
setShuffleType:startingItem:inSection:
setShufflePlayMode:
setShouldUsePlaylistEntry:
setShouldReturnLastKnownStatusOnly:
setShouldResponseContainStationMetadata:
setShouldRequireLeaseAcquisition:
setShouldRequireCachedResults:
setShouldRememberBookmarkTime:
setShouldPreventLeaseAcquisition:
setShouldLibraryAdd:
setShouldIncludeDeviceGUID:
setShouldIgnoreExpiration:
setShouldIgnoreCache:
setShortEditorNotes:
setSharedListeningItem:
setSharedActivityGroupSizeMax:
setSharedActivityGroupSizeCurrent:
setSessionIdentifier:type:data:
setSessionIdentifier:
setServerID:
setSelector:
setSectionProperties:
setSectionKind:
setSeason:
setScopedContainers:
setSBEnabled:
setRtcReportingParentHierarchyToken:
setRouteConfiguration:
setRetryDelay:
setResults:
setResolvedURLString:
setResolutionHandler:
setRequestingImmediatePlayback:
setRequestedTrackCount:
setRequestType:
setRequestOfflineKeys:
setRequestCachePolicy:
setRepresentedObjects:
setRepresentativeCloudIdentifier:
setReportingAdamID:
setReplaceIntent:
setRepeatPlayMode:
setRentalID:
setRemoteObjectInterface:
setRedownloadParameters:
setRecommendationID:
setReasonType:
setReasonHintType:
setReason:
setRadioStreamAssetInfoList:
setRadioIdentifiersWithBlock:
setRadioAdamID:
setQueueWithInitialItem:andPlay:identifier:completion:
setQueueDidEnd:
setQueueDidChange:
setQueueDescriptor:
setQueueContentReferences:
setQualityType:
setQualityOfService:
setPurchasedAdamID:
setPurchaseBundleFilePath:
setProviderUniversalLink:
setProviderBundleIdentifier:
setProvidedAudioQuality:
setProtectionType:
setProperties:forItemAtIndexPath:
setPriorityForPlaybackSessionCommand
setPreviousContentItemID:
setPreservingCurrentlyPlayingItem:
setPreloadedSessions:
setPrefetchedMetadataSource:
setPrefersSeekOverSkip:
setPrefersOfflinePlayableVariants:
setPreferredPeakBitRate:
setPreferredMaximumResolution:
setPreferredMaximumAudioSampleRate:
setPreferredIntervals:
setPreferredForwardBufferDuration:
setPlaylistVersionHash:
setPlaylistURL:
setPlaylistTraits:
setPlaylistEntry:
setPlayerItem:
setPlaybackState:
setPlaybackSessionCommand
setPlaybackRequest:
setPlaybackQueueDataSource:
setPlaybackQueueCommand
setPlaybackPosition:
setPlaybackLikelyToKeepUpTrigger:
setPlaybackInfo:
setPlaybackFormatPreference:
setPlaybackContext:
setPlaybackAuthorizationTokenHalfLifeDuration:
setPlayActivityQueueGroupingID:
setPlayActivityEvents:
setPlaceholder:
setPersonalizationStyle:
setPersonalStoreIdentifiersWithPersonID:block:
setPersistentID:
setOverlayToken:
setOverlayStorage:
setOverlayDelegate:
setOutputDevices:initiator:withReplyQueue:completion:
setObserver:
setObject:forKeyedSubscript:
setObject:forKey:
setNumberOfSkips:
setNowPlayingInfo:
setNowPlaying:
setNonPurgeable:
setNickname:
setNetworkConnectionType:
setNeedsReload
setNeedsInfoDictionaryUpdate
setNameSuffix:
setNamePrefix:
setNameComponents:
setMusicShuffleType:
setMusicRepeatType:
setMultiChannel:
setMovie:
setModelRequest:
setModelObjects:
setMiddleName:
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
setMediaType:
setMediaLibraryArtworkType:
setMediaKind:
setMediaClip:
setMaximumPlayerQueueLength:
setMaximumCapacity:
setMaxConcurrentOperationCount:
setMainTitle:
setLyricsLanguage:
setLyricsDisplayedCharacterCount:
setLoudnessInfoVolumeNormalization:
setLoudnessInfo:
setLiveRadioStream:
setLikedState:forUserIdentity:
setLibraryIdentifiersWithDatabaseID:block:
setLibraryAddEligible:
setLegacyMediaQuery:
setLeaseActionType:
setLastPlayPerformanceTime:
setLastMetadataChangeTime:
setLastChangeDirection:
setKind:
setKeyServerURL:
setKeyServerAdamID:
setKeyCertificateURL:
setItemType:
setItemStartTime:
setItemProperties:
setItemKind:
setItemIDs:
setItemError:
setItemEndTime:
setItemDuration:
setItemDidEnd:
setIsSuzeLease:
setIsShuffled:
setIsSharePlayPlayback:
setIsRemoteSetQueue:
setIsPrimaryUser:
setIsOnlineKeyReady:
setIsOfflineKeyReady:
setIsMiniSinfAvailable:
setIsLeaseReady:
setIsInterruptingPlayback:
setIsFirstPlayAfterAppLaunch:
setIsDelegatedPlayback:
setIsAutoPlay:
setIsAccountDataReady:
setInteractionLevel:
setInitialPlaybackStartTimeOverride:
setInformalStaticAssetID:
setInformalMediaClipID:
setImageURL:
setImage:
setIdentityStore:
setITunesStoreRequest:
setHlsAssetInfo:
setHasTimeSnapshot:
setHasShuffleMode:
setHasRepeatMode:
setHasQueueDescriptor:
setHasPlayedThisSession:
setHasPerformedErrorResolution:
setHasNowPlaying:
setHasExplicitContent:
setHasContentItemIDs:
setHasBeenPlayed:
setHTTPShouldUsePipelining:
setHTTPShouldSetCookies:
setHTTPMethod:
setHTTPCookieAcceptPolicy:
setHTTPBody:
setHLSKeyServerURL:
setHLSKeyServerProtocol:
setHLSKeyCertificateURL:
setGroupingType:
setGroupID:
setGlobalPlaylistID:
setGivenName:
setGenreName:
setFrame:
setFormerAdamIDs:
setFormatTierPreference:
setFormatTier:
setFormatSampleRate:
setFormatCodec:
setFormatChannels:
setFormatBitrate:
setFormatBitDepth:
setFittingSize:
setFileSize:
setFileAssetInfoList:
setFetchAvailableRoutesSynchronously:
setFeeder:
setFamilyName:
setFallbackStoreIdentifier:
setExternalIdentifier:
setExternalDisplay:
setExportedObject:
setExportedInterface:
setExportableSessionTypes:
setExplicitSong:
setExplicitContentState:
setExplicitBadge:
setExpectedProtectionType:
setEventType:
setEventTimeZone:
setEventDate:
setErrorResolutionType:
setEndReasonType:
setElapsedTime:
setEditorNotes:
setDuration:
setDisplayProperties:
setDiscretionary:
setDiscNumber:
setDiscCount:
setDisabledReasons:
setDialogDictionary:
setDelegatedUserIdentity:
setDelegatedPrivateListeningEnabled:
setDelegatedIdentity:
setDelegated:
setDelegate:queue:
setDateFormat:
setDataSourceQueue:
setCurrentTrack:
setCurrentQueueEndAction:
setCurrentPlaybackSessionIdentifier:
setCopyright:
setContentItemIDs:
setContainerUniqueID:
setContainerType:
setContainerIDs:
setContainedPersistentID:
setConnection:
setComposerName:
setCompletedUnitCount:
setCompilation:
setCollectionPlaybackAuthorizationToken:
setCodec:
setCloudVersionHash:
setCloudPlaylistID:
setCloudID:
setCloudAlbumID:
setClientInfo:
setClasses:forSelector:argumentIndex:ofReply:
setChannelLayoutDescription:
setChannelLayout:
setCertificateURL:
setCategory:mode:routeSharingPolicy:options:error:
setCategory:error:
setCanBeControlledByScrubbing:
setBypassCache:
setByAddingObjectsFromSet:
setBundleIdentifier:
setBuildVersion:
setBuildFeatures:
setBorderWidth:
setBorderColor:
setBool:forKey:
setBookmarkTimestamp:
setBookmarkTime:
setBitrate:
setBitRate:
setBitDepth:
setBeats1:
setBackgroundColor:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
setAutoSwitchAtmosStreamVariants:
setAutoPlayMode:
setAutoPlayItem:
setAutoPlayEnabled:forUserIdentity:
setAuthenticationProvider:
setAudioTimePitchAlgorithm:
setAudioTapProcessor:
setAudioQualityPreference:
setAudioFormatDidChange:
setAudioChannelLayoutDescription:
setAttributionLabel:
setAssetEndPoint:
setAssetAdamID:
setArtworkTemplateItems:
setArtworkImageData:
setArtworkGenerator:
setArtworkCatalogBlock:
setArtistName:
setArgument:atIndex:
setAnnotationDelegate:
setAlternativeFormats:
setAlpha:
setAllowsItemLiking:
setAllowsHandlingNonAuthenticationDialogs:
setAllowsFallbackToStatusNeedingReload:
setAllowsFallbackToExpiredStatus:
setAllowsExternalPlayback:
setAllowsExplicitContent:
setAllowsExpiredBags:
setAllowsCellularAccess:
setAllowedSectionIdentifiers:
setAllowedItemIdentifiers:
setAllowedAudioSpatializationFormats:
setAllowInCar:
setAlbumTraits:
setAlbumName:
setAlbumArtistName:
setAdditionalRequestParameters:
setAdamID:
setActive:
setActionAtItemEnd:
sessionWithIdentifier:creationBlock:
sessionIdentifierOverride
serverTrackInfo
serverID
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
sendMessageWithCategory:type:payload:error:
sendError
selector
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
seekForwardCommand
seekBackwardCommand
sectionProperties
sectionObjectForPropertySet:contentItem:context:
sectionKind
section
second
season
scopedContainers
scheme
scannerWithString:
scanUpToString:intoString:
scanString:intoString:
scaledFittingSize
scale
rtcReportingParentHierarchyToken
routeSubtype
routeName
routeDescription
reverseObjectEnumerator
resumeAutomaticKeyRenewal
resume
resultsForStatement:
resultStatuses
restoreQueue:
responseWithIdentifier:sessionType:data:
responseDictionary
responseArray
resolveError:
reshuffleCommand
resetBookkeeping
requiredStoreLibraryPersonalizationProperties
requiredKeepLocalStatusObservationProperties
requestWithURL:cachePolicy:timeoutInterval:
requestWithURL:
requestItemCount
requestImageWithCompletion:
requestDate
representedObjectResults
representativeCloudIdentifier
representationSize
representationForVisualIdentity:withSize:image:
reportingAdamID
replaceTracklist:preferredStartIndexPath:completion:
replaceTrackAtIndex:withTrack:
replaceSectionsUsingBlock:
replaceSectionAtIndex:withObject:
replaceObjectsInRange:withObjectsFromArray:
replaceObjectAtIndex:withObject:
replaceItemsUsingBlock:
replaceItemAndIdentifierSet:atIndex:
replaceIntent
replaceIdentifierRegistry:
replaceDataSource:forSection:completion:
reorderQueueCommand
removedItemIdentifiers
removeTracksAtIndexes:
removeTimeObserver:
removeTarget:action:
removeTarget:
removeOutputDevices:initiator:withReplyQueue:completion:
removeObserver:name:object:
removeObserver:forKeyPath:
removeObjectsInRange:
removeObjectsForKeys:
removeObjectsAtIndexes:
removeObjectIdenticalTo:
removeObjectForKey:
removeObjectAtIndex:
removeObject:
removeLastObject
removeItems:atFilteredIndexes:completionBlock:
removeItemIdentifiers:
removeItemIdentifier:
removeItemAtURL:error:
removeItemAtIndexPath:
removeItem:fromSection:
removeFromSuperview
removeFromPlaybackQueueCommand
removeFromParentViewController
removeAllObjects
removeAllKeys
removeAllItemIdentifiersAfterItemIdentifier:
remoteObjectProxy
remoteObjectInterface
reloadFairPlayKeyStatusWithCompletionHandler:
reloadCurrentItemWithReason:completion:
relativePath
relationships
relationshipKeyForGenericObjectType:
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
relatedIdentifierSetsForParentIdentifierSet:childKey:
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
reevaluateHasProtectedContent
redownloadParameters
redColor
recordPlayEventForPlaylistPersistentID:
recordPlayEventForAlbumPersistentID:
recordPlayActivityEvents:withCompletionHandler:
recordLabel
reconnectWithReason:options:
recommendationID
receivedUserInteractionEvent
reasonType
reasonHintType
ratingCommand
rating
rate
rangeOfString:
radioStreamAssets
radioStreamAssetInfoList
radioStationEvent
radioContainerWithSeedItem:featureName:
radioContainerWithMediaIdentifier:featureName:
radioConfiguration
radioAdamID
radio
queueDescriptor
queue
queryItems
qualityType
qualityOfService
purgeGlideSubscriptionDataForHashedAccoundID:
purchasedAdamID
purchaseBundleSinfDictionary
purchaseBundleFilePath
proxyWithObject:protocol:
proxyForObjects:protocol:
providerResource
protocol
protobufferEncodableObjectFromLibrary:
protectionType
propertySetWithProperties:
propertySetByIntersectingWithPropertySet:
propertySetByCombiningWithPropertySet:
propertyListWithData:options:format:error:
properties
progressiveDownloadAssetRatio
progressWithTotalUnitCount:
progress
productVersion
productPlatform
processName
processInfo
processIdentifier
processData:usingProcedure:completion:
privateListeningEnabledForGroupWithRouteIDs:
priority
previousTrackCommand
previousContentItemID
previewArtworkCatalog
preset
preservesShuffleMode
preservesRepeatMode
preservesQueueEndAction
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
presentWithCompletion:
prerollEnabled
prepareForSetPlaybackQueueCommand
preloadPlaybackSessionCommand
prefersSpatialDownloads
prefersOfflinePlayableVariants
preferredVideoLowBandwidthResolution
preferredVideoHighBandwidthResolution
preferredStoreStringIdentifierForPersonID:
preferredQueue
preferredPeakBitRate
preferredMusicLowBandwidthResolution
preferredMusicHighBandwidthResolution
preferredMusicDownloadResolution
preferredMaximumResolution
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
preferredArtworkSize
predicateWithValue:forProperty:
predicateWithFormat:
postNotificationName:object:userInfo:
postNotificationName:object:
positionTime
positionForTailOfSection:
positionForItem:inSection:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
pokeKey:
podcastEpisode
podcast
playlistURL
playlistEntry
playlistContainerWithMediaIdentifier:featureName:
playlist
playerWithPlayerItem:
playerItemWithAsset:
playerItem
playbackSessionType
playbackSessionIdentifier
playbackSessionDataFilePath
playbackSessionData
playbackRate
playbackQueueDataSource
playbackQueue
playbackPosition
playbackModeChanged
playbackInfoStartTime
playbackHistoryPlaylist
playbackAuthorizationTokenHalfLifeExpiration
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
playbackArchive
playableAssetIdentifiers
playParams
playParametersQueue
playNextPositionWithAfterItemIdentifierHint:
playLastPositionWithAfterItemIdentifierHint:
playItemInQueueCommand
playEventWithModelObject:featureName:
playCommand
playActivityQueueGroupingID
playActivityEvents
placeholderCatalogWithSymbolName:
pixelSize
pickedRoutes
pickedRoute
personalizedStore
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
performanceMetrics
performWithoutEnforcement:
performWithResponseHandler:
performTransaction:
performSuppressingChangeNotifications:
performSubscriptionStatusRequest:withCompletionHandler:
performRequestWithResponseHandler:
performPlaybackRequest:completionHandler:
performOnPayload:withCategory:type:
performChangeImmediately:
pauseWithFadeOut:identifier:completion:
pauseCommand
pauseAutomaticKeyRenewal
pathForResourceFileOrFolder:
pathExtension
path
parsedBodyDictionary
parentViewController
parentTrack
pairWithFirst:second:
packageURL
overlayToken
overlayStorage
outputDevicesMatchingPredicate:
outputDevices
originalIdentifierSet
orderedSetWithObject:
orderedSet
operationCount
opaqueSessionID
offerWithType:
observer
observedBitrate
objects
objectForPropertySet:contentItem:context:
objectForKeyedSubscript:
objectForKey:
objectForInfoDictionaryKey:
objectEnumerator
objectAtIndexedSubscript:
objectAtIndex:
object
numberWithUnsignedLongLong:
numberWithUnsignedInteger:
numberWithUnsignedInt:
numberWithLongLong:
numberWithLong:
numberWithInteger:
numberWithInt:
numberWithFloat:
numberWithDouble:
numberWithBool:
numberOfSkips
numberForBagKey:
number
null
nowPlayingWithItem:audioFormat:itemIdentifier:artworkIdentifier:index:count:
nowPlayingInfo
nowPlayingContentItem
notifyPropagatablePropertyChanged
nickname
nextTrackCommand
nextOutcome
nextObjectWithError:
nextItems
nextIntWithUpperBound:
newSeekCommandEventWithType:
newHierarchyTokenFromParentToken:
newCommandEventWithType:
newCommandEventWithPositionTime:
newCommandEventWithPlaybackRate:
newCommandEventWithCommandType:options:
newCommandEvent
networkingTimeFromMetrics:
needsPersonalization
needsCommandRedirection
nameSuffix
namePrefix
nameComponents
mutableCopy
musicSubscriptionStatus
musicShuffleType
musicRepeatType
musicEQSetting
multiverseIdentifier
msv_userInfo
msv_section
msv_map:
msv_item
msv_indexPathForItem:inSection:
msv_firstWhere:
msv_filter:
msv_errorWithDomain:code:userInfo:debugDescription:
msv_errorWithDomain:code:underlyingErrors:debugDescription:
msv_errorWithDomain:code:underlyingError:debugDescription:
msv_errorWithDomain:code:debugDescription:
msv_errorByUnwrappingDomain:code:
msv_errorByUnwrappingDomain:
msv_enumerateKeysAndObjectsOrderedByKeyComparator:usingBlock:
msv_dictionaryWithContentsOfBase64EncodedJSONString:error:
msv_description
msv_compactMapValues:
msv_compactMap:
msv_compactDescription
msv_analyticSignature
msv_UUIDWithData:
msv_UUIDData
movie
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
moveItemFromIndexPath:toIndexPath:
moveItem:fromSection:afterTailOfSection:
moveItem:fromSection:afterItem:inSection:
moveItem:fromSection:afterHeadOfSection:
modelResponse
modelObjectWithStoreItemMetadata:userIdentity:
modelObjectMatchingIdentifierSet:propertySet:trustID:
modelKind
modelGenericObjectFromObject:playbackAuthorizationToken:
modelClass
modeDescription
ml3Library
minusSet:
miniSINF
middleName
metadataForFormat:
metadata
mergeWithObject:
meetsPlaybackHistoryThreshold
mediaRemoteType
mediaRemoteOptions
mediaRemoteCommandType
mediaQuery
mediaPlayerBundle
mediaLibraryArtworkType
mediaKind
mediaIdentifier
maximumTVShowRatingForAgeGate
maximumQueueHandOffSize
maximumMovieRatingForAgeGate
maximumCapacity
maxSupportedSize
mainScreen
mainBundle
lyrics
lowercaseString
loudnessInfoVolumeNormalization
loudnessInfo
logEventWithType:machAbsoluteTime:context:
localizedStringForKey:value:table:
localizedName
localizedFailureReason
localizedDescription
localStoreAccountProperties
localOrigin
localFileAsset
localDeviceUID
loadValuesAsynchronouslyForKeys:completionHandler:
loadImageForRadioArtwork:withCompletionHandler:
liveSnapshotWithRate:state:
linkWithSessionIdentifier:identity:
linkWithIdentity:
linkItemAtURL:toURL:error:
likedState
likeState
lightweightPersonalizationPropertiesForModelClass:
library
length
legacyMediaQuery
leaveSharedPlaybackSessionCommand
leaseState
leaseID
layer
laterDate:
lastPathComponent
lastObject
lastMetadataChangeTime
lastKnownNetworkType
lastKnownHouseholdID
lastBatchItemIdentifiers
languageOptions
languageOptionType
kindWithVariants:playlistEntryKind:options:
kindWithVariants:
kindWithSongKind:
kindWithRelationshipKinds:
kindWithModelClass:
kindWithKinds:
keySpace
keyServerURL
keyServerAdamID
keyCertificateURL
jumpTo:identifier:completion:
jsonValueAtColumnIndex:error:
itemWithPersistentID:verifyExistence:
itemWithMediaIdentifier:
itemType
itemStartTime
itemProperties
itemKind
itemFromModelObject:
itemForIdentifierSet:
itemForIdentifier:
itemExistsInDatabaseWithPersistentID:
itemError
itemEndTime
itemAtIndex:
isWatch
isW1Route
isValidJSONObject:
isValidForPreviousCount:finalCount:reason:
isValid
isTrustedHostForURL:
isTailPlaceholder
isSuspendedUnderLock
isSupportedAndEnabled
isSubclassOfClass:
isStartItem
isSkippable
isSBEnabled
isRoot
isRequestingPlaybackInitialization
isRequestingImmediatePlayback
isRequestingDefermentToPlaybackQueuePosition
isRemoteServerReachable
isRemoteServerLikelyReachable
isRedownloadable
isRadioAvailable
isProcessTapEnabled
isPrivateListeningEnabledForCurrentUserAndAccessory
isPrivateListeningEnabledForCurrentAccessory
isPrivate
isPlaylistItemsQuery
isPlayable
isNonPurgeable
isNetworkConstrained
isNegative
isMultiplayerHost
isModeSolo
isModeShared
isMainThread
isLocallyHosted
isLocalEndpoint
isLocalDevice
isLoading
isLiveRadioStream
isLibraryContent
isLibraryAddEligible
isInvalidated
isHomeSharingLibrary
isH1Route
isGroupLeader
isFileURL
isExplicitSong
isExplicitSettingEnabled
isExplicitContentAllowed
isEqualToString:
isEqualToLanguageOption:
isEqualToIdentity:inStore:
isEqualToDictionary:
isEqualToArray:
isEnhancedAudioAvailable
isEmpty
isDeviceSpeakerRoute
isDeviceRoute
isDevicePrivateListeningEnabled
isDeviceClassCUnlocked
isDeletedItem:inSection:
isDelegatedLeaseSession
isDebug
isCurrentNetworkLinkHighQuality
isCurrentNetworkLinkExpensive
isCurrentDeviceValidHomeAccessory
isContinueListeningAvailable
isContentProtectionEnabled
isConnected
isCompilation
isCarplayRoute
isCancelled
isB515Route
isB507Route
isB298Route
isAvailable
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
isAutoPlayItem
isAudioAccessory
isAtEnd
isAppleTVRoute
isAppleTV
isAlwaysLiveItem
isAirplay
isAirPlayingToDevice
isAirPlayRoute
isAirPlayActive
isActiveLocker
invokeWithTarget:
invokeCommandWithEvent:completion:
invalidatePlaybackQueueWithCompletion:
invalidatePlaybackQueue
invalidateContentItemDeviceSpecificUserInfo
invalidateContentItemAudioFormatInfo
interval
intersectsSet:
interruptedState
interfaceWithProtocol:
interfaceID
integerForKey:
intValue
int64ValueForBagKey:
int64ValueAtColumnIndex:
instanceMethodForSelector:
insertionPosition
insertedDescriptors
insertTracklist:atPosition:completionEx:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
insertString:atIndex:
insertSection:atIndex:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
insertObject:atIndex:
insertItems:afterItem:
insertItem:atIndexPath:
insertIntoPlaybackQueueCommand
insertBeforeContextItemID
insertAfterContextItemID
insertAfterContentItemID
initialPlaybackStartTimeOverride
initialPlaybackStartTime
initWithiTunesCloudStoreRadioStreamAssetInfo:
initWithiTunesCloudStoreHLSAssetInfo:
initWithiTunesCloudStoreFileAssetInfo:
initWithWritingStyle:
initWithVerificationContext:
initWithUserInteractionLevel:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
initWithUnpersonalizedContentDescriptors:
initWithUbiquitousIdentifier:
initWithUUIDString:
initWithURLRequest:requestContext:
initWithURL:requestContext:
initWithURL:options:
initWithURL:error:
initWithTrack:
initWithToken:dataSource:
initWithTimeout:interruptionHandler:
initWithTapDescription:
initWithSystemApplicationType:
initWithSuiteName:
initWithStoreRequestContext:
initWithStorePlatformDictionary:expirationDate:
initWithStoreIdentifier:trackInfo:
initWithStoreID:collectionType:requestContext:
initWithStoreDialog:
initWithStationIdentifier:
initWithStartHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
initWithResponseDictionary:expirationDate:
initWithResponseDictionary:
initWithRequestedPropertySet:
initWithRequestContext:storeSubscriptionAdamID:
initWithRequestContext:redownloadParametersString:
initWithRequestContext:leaseID:mediaType:
initWithRequestContext:keyStore:delegate:nonreusableTokens:
initWithRequestContext:
initWithRandomSource:lowestValue:highestValue:
initWithProperties:relationships:
initWithProbabilityForOutcomeA:
initWithPlayerID:engineID:queueController:assetLoader:errorController:externalPlaybackController:leaseController:defaults:queue:
initWithPayload:requestPayload:hashedPersonID:
initWithPayload:
initWithPath:
initWithOrigin:client:player:
initWithObjectsAndKeys:
initWithName:uuid:version:root:debug:
initWithName:object:handler:
initWithName:
initWithModelObject:
initWithModelKind:block:
initWithModel:personalizationStyle:
initWithModel:
initWithMemory
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
initWithMaximumCapacity:
initWithMachServiceName:
initWithLyrics:userProvided:token:
initWithKeyOptions:valueOptions:capacity:
initWithItemResponseDictionary:urlBag:
initWithItemIdentifiers:personID:requestContext:trustProvider:
initWithItemIdentifiers:personID:requestContext:sparseRequest:trustProvider:
initWithInteger:
initWithIndexesInRange:
initWithIdentityStore:
initWithIdentity:
initWithIdentifiers:playbackResponse:
initWithIdentifiers:block:
initWithIdentifiers:
initWithIdentifier:userInfo:
initWithIdentifier:data:
initWithICSubscriptionStatus:
initWithFormat:
initWithFilterPredicates:
initWithFileAssetResponseDictionary:
initWithFileAsset:sourceItemIdentifiers:
initWithExternalRepresentation:
initWithExternalDevice:
initWithErrorResolver:
initWithEntities:entityType:
initWithEndpoint:
initWithDomain:code:userInfo:
initWithDeallocHandler:
initWithDataSource:
initWithData:encoding:
initWithData:
initWithContentsOfFile:
initWithConfiguration:
initWithCommonFormat:sampleRate:channels:interleaved:
initWithCommand:playbackQueue:options:
initWithCommand:playbackQueue:
initWithCommand:mediaRemoteType:options:
initWithCodingPackage:userInfo:
initWithCodingPackage:error:
initWithClientInfo:
initWithCategory:routeSharingPolicy:options:
initWithCapacity:
initWithCFUserNotification:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBundleIdentifier:allowPlaceholder:error:
initWithBlock:
initWithBase64EncodedString:options:
initWithArtworkResponseArray:
initProcessTapWithFormat:PID:
informalStaticAssetID
informalMediaClipID
infoDictionary
infoCenterForPlayerID:
indicatedBitrate
indexesOfObjectsPassingTest:
indexSetWithIndexesInRange:
indexSet
indexPathWithIndex:
indexPathForItem:inSection:
indexPathForGlobalIndex:
indexOfObjectPassingTest:
indexOfObject:
indexForItem:
indexAtPosition:
includeContentItemDebugFields
importObjectsFromRequest:options:trustID:error:
importAssetsFromRequest:error:
imageWithData:scale:
imageURL
imageRepresentation
imageByPreparingForDisplay
image
identityStore
identityKind
identityAllowingDelegation:
identifiers
identifierSetForItem:
identifierSetAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
identifierRegistryWithExclusiveAccessReturningInteger:
identifierRegistryWithExclusiveAccess:
hostedEndpointForOutputDeviceUIDs:queue:completion:
hostTime
host
homeUserIdentifiers
hlsKeyServerURL
hlsKeyServerProtocol
hlsKeyCertificateURL
hlsAssetMatchingIdentifierSet:
hlsAssetInfo
headTrackedSpatialAudioEnabled
hashTableWithOptions:
hashInStore:
hasTargets
hasSuffix:
hasSection:
hasProtectedContent
hasPrefix:
hasPlaybackCapability
hasPerformedErrorResolution
hasMaxSupportedSize
hasLoadedValueForKey:
hasLoadedRadioAvailability
hasItem:inSection:
hasInflightLeaseAcquisition
hasCellularDataCapability
hasCapability:
handlerReturnStatuses
handleFailureInMethod:object:file:lineNumber:description:
handleFailureInFunction:file:lineNumber:description:
handleButtonAction:usingRequestContext:withCompletionHandler:
groupWithFeatureName:
groupContainsGroupLeader
group
globalPlaylistID
globalIndexForIndexPath:
givenName
getVerificationContextForUserIdentity:error:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
getStoreItemMetadataForRequest:responseHandler:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
getSiriRequestUUIDFor:
getResourceValue:forKey:error:
getRadioAvailabilityWithCompletionHandler:
getPropertiesForUserIdentity:error:
getPropertiesForUserIdentity:completionHandler:
getPendingCommandTypesWithCompletion:
getLeaseSessionWithRequestContext:completionHandler:
getLastKnownHouseholdIDWithCompletion:
getKeyStatusForAccountUniqueIdentifier:error:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
getExpectedCurrentItemWithCompletion:
getDelegationUUIDsForUserIdentity:completionHandler:
getBytes:length:
getBagForRequestContext:withCompletionHandler:
getAgeVerificationStateWithCompletion:
genreName
genericObjectWithModelObject:
genericObjectType
genericObjectRepresentation
genericObjectForStorePlatformMetadata:userIdentity:
fractionCompleted
forwardBufferDuration
formerStoreAdamIDs
formerAdamIDs
formatTierPreference
forceLibrarySupplementalContexts
forTimeControlStatus:
forPlayerState:
forPlaybackTimeChangeReason:
forItemChangeSource:
forErrorResolution:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
floatValue
flavorType
flavor
flattenedTracksWithTracks:
flattenedGenericObject
firstTrackIdentifier
firstSection
firstObject
first
finishAssetResourceLoadingRequest:withError:
finish
filteredArrayUsingPredicate:
fileURLWithPath:isDirectory:
fileURLWithPath:
fileSize
fileModificationDate
fileExtension
fileExistsAtPath:isDirectory:
fileExistsAtPath:
fileCreationDate
fileAssets
fileAssetInfoList
feeder
familyName
fairPlayInfoList
extraAttributes
externalScreenType
externalDevice
exportedInterface
explicitRating
executeStatement:error:
events
eventWithCommand:mediaRemoteType:options:
eventStream:didFailToEmitEvent:error:
event
errorWithDomain:code:userInfo:
errorResolverForItem:
errorLog
errorDomain
enumeratorWithOptions:startPosition:endPosition:
enumeratorWithOptions:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
enumerateSectionsUsingBlock:
enumerateSectionIdentifiersUsingBlock:
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateItemsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
enumerateIndexesUsingBlock:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
entryReasonCode
enqueueRequest:withBatchProgressHandler:
enqueueDataRequest:withCompletionHandler:
enqueueData:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
enhancedAudioConfiguration
endTransaction
endTimes
endReasonType
endDate
endBackgroundTask:
encodedDataWithRootObject:userInfo:error:
encodedDataWithRootObject:error:
encodeRootObject:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt64:forKey:
encodeInt32:forKey:
encodeDouble:forKey:
encodeBool:forKey:
emptyPropertySet
emptyIdentifierSet
emitVMCPUStatsWithStage:requestId:
emitMWTMusicMetadata:requestId:
emitMWTCheckPointWithMwtCheckpoint:requestId:timeStamp:
elapsedTimeTimestamp
elapsedTime
effectiveRate
editorialArtworkCatalog
editingStyleFlags
durationIsValid
durationInSeconds
durationIfAvailable
downloadDestinationURL
doubleValue
domain
distantPast
displayName
discardPlaybackSessionCommand
discNumber
discCount
disarm
disableQHO
disablePeriodicStateRestore
disableMiniSINF
disableItemReuse
disableAudioAnalysis
disableAssetCaching
didReceiveFairPlayError:
didReachEnd
didMoveToParentViewController:
didChangeValueForKey:
didAttemptToLoadAsset
dictionaryWithObjects:forKeys:count:
dictionaryWithDictionary:
dictionaryWithCapacity:
dictionaryForKey:
dictionaryForBagKey:
dictionary
dialogWithTitle:message:
deviceSpecificUserInfo
deviceModel
deviceMediaLibraryWithUserIdentity:
deviceInfo
destinationScale
designatedGroupLeader
descriptionText
dependencies
deleteWithError:
deleteCharactersInRange:
delegatedIdentity
defaultTimeZone
defaultSession
defaultPlaybackRate
defaultMediaLibrary
defaultManager
defaultInfo
defaultIdentityStore
defaultCenter
decodedObjectOfClasses:fromData:error:
decodedObjectOfClass:fromData:error:
decodeRootObjectOfClasses:error:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeInt64ForKey:
decodeInt32ForKey:
decodeDoubleForKey:
decodeBoolForKey:
dateWithTimeIntervalSinceReferenceDate:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSince1970:
dateByAddingTimeInterval:
databaseURL
dataWithPropertyList:format:options:error:
dataWithJSONObject:options:error:
dataWithContentsOfURL:
dataValueAtColumnIndex:
dataValue
dataUsingEncoding:
currentTrack
currentThread
currentStatus
currentState
currentStableVariantID
currentSettings
currentQueueItem
currentLanguageOptions
currentItemTransition
currentHandler
currentDeviceInfo
currentConnection
curator
crossfadeDuration
createRadioStationCommand
createExternalRepresentation
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createCFUserNotification
countForObject:
countByEnumeratingWithState:objects:count:
count
copyright
copyWithPropertySet:
copyWithNewIdentifier:
copyWithIdentifiers:propertySet:
copyWithIdentifiers:block:
copyWithIdentifiers:
copyWithBlock:
copyExternalRepresentation
copy
controllerWithUserIdentity:
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningMaxQueueSizeInRequest
continueListeningLoadStationThreshold
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
contentURI
contentType
contentReplaced
contentReordered
contentRemoved
contentPlayedNow
contentAdded
containsUID:
containsString:
containsObject:
containsCommand:
containerType
containerIdentifier
containerForIdentifier:
containedPersistentID
connection
connectWithUserInfo:completion:
connectToExternalDeviceWithUserInfo:completion:
configureWithModelObject:
configureUsingAssetResourceLoadingRequest:
configuration
composerName
componentsWithString:
componentsSeparatedByString:
componentsJoinedByString:
completedUnitCount
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
commandInfoWithIdentifier:revision:priority:
commandID
commandHandlersRegistered
collections
collectionRequests
collectionItemRequests
collectionInfo
collectionIdentifier
code
clusterType
clusterComposition
cloudVersionHash
cloudServiceStatusControllerWithUserIdentity:
cloudAssetsSharedCacheFolderPath
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
clientInfo
client
clearPlaybackQueue
clearLibraryIdentifiers
clearColor
changeShuffleModeCommand
changeRepeatModeCommand
changeQueueEndActionCommand
changePlaybackRateCommand
changePlaybackPositionCommand
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
chain
certificateURL
catalogID
cancelRequest:
cancelAllOperations
canReusePlayerItem
canPlayEncryptedProgressiveDownloadAssets
canHostMultiplayerStream
canFetchMediaDataFromSender
canAccessRemoteAssets
callStackSymbols
calculatedElapsedTime
cachedResponseForRequest:
cachedImageDataForRadioArtwork:MIMEType:
cacheMissItemIdentifiers
bytes
buttons
buttonIdentifier
bundleWithIdentifier:
bundleVersion
bundleIdentifier
buildVersion
buildURLRequestWithCompletionHandler:
broadcastDirectCurrentItemChangedToItemIdentifier:
brightness
bounds
borderWidth
boolValueForOption:
boolForKey:
blockOperationWithBlock:
bindUInt64Value:toParameterNamed:
bindStringValue:toParameterNamed:
bindNullValueToParameterNamed:
bindJSONValue:toParameterNamed:error:
bindInt64Value:toParameterNamed:
bindDataValue:toParameterNamed:
bestArtworkForPixelSize:
beginTransaction
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
beginBackgroundTaskWithName:expirationHandler:
beginBackgroundTaskWithExpirationHandler:
beginAutomaticResponseLoading
base64EncodedStringWithOptions:
backgroundSessionConfigurationWithIdentifier:
averageAudioBitrate
availableLanguageOptions
year
auxiliarySession
auxiliaryNowPlayingInfo
autoupdatingSharedLibrary
autoPlayEnabledForUserIdentity:
autoPlayContainerWithMediaIdentifier:featureName:
author
auditToken
audioAnalysisRefreshRate
attributionLabel
attributesOfItemAtPath:error:
assetsWithMiniSINFsMatchingIdentifierSet:
assetsMatchingIdentifierSet:
assetWithURL:
assetExpirationDate
assetAdamID
artworks
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
artworkURLTemplates
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
artworkInfo
artworkCatalogForPlaybackTime:
artistName
arrayWithObjects:count:
arrayWithObjects:
arrayWithObject:
arrayWithCapacity:
arrayByAddingObjectsFromArray:
arrayByAddingObject:
array
archivedDataWithRootObject:requiringSecureCoding:error:
archiveSessionArtwork
applyChanges:itemLookupBlock:
applyChanges:identifierSetLookupBlock:
applicationState
appendString:
appendSection:
appendItems:completion:
appendItems:
appendItem:
appendFormat:
anyObject
anonymousListener
analyticSignature
alternativeFormats
alternatePlaylistURL
alternateKeyServerURL
alternateKeyCertificateURL
allowsRadioService
allowsMusicVideos
allowsItemLiking
allowsExplicitContent
allowedSectionIdentifiers
allowedItemIdentifiers
allowedAudioSpatializationFormats
allocWithZone:
allValues
allStorePlatformMetadata
allStoreItemDictionaries
allSections
allSectionIdentifiers
allObjects
allKeys
allItems
albumName
albumContainerWithMediaIdentifier:featureName:
albumArtistName
ageVerificationStateForUserIdentity:
advanceShuffleModeCommand
advanceRepeatModeCommand
addValue:forHTTPHeaderField:
addTrack:
addTarget:action:usingExtendedStatus:
addTarget:action:
addSubview:
addStoreItemMetadata:
addOutput:
addOperation:
addObserverForName:object:queue:usingBlock:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
addObjectsFromArray:
addObject:
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
addIndex:
addFinishBlock:
addEntriesFromDictionary:
addDependency:
addDelegationUUIDs:forUserIdentity:completionHandler:
addDataSourceAtStart:section:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSource:section:afterTailOfSection:completion:
addDataSource:section:afterItem:inSection:completion:
addChildViewController:
addChild:withPendingUnitCount:
addCachedResponse:forRequest:
addBoundaryTimeObserverForTimes:queue:usingBlock:
addAsset:shouldPreloadKeys:
addAssertion:
addAction:
adamID
activationDelay
activateAudioSessionWithCompletion:
actionWithTitle:type:commandEvent:
actionDictionary
action
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
accountIdentifier
accountDSID
accessLog
absoluteString
_updateSnapshotForBackgroundApplication:
_updateDurationSnapshotWithElapsedTime:playbackRate:
_setNeedsPersistedLikedStateUpdate
_setCurrentPlaybackRate:
_safeStateDumpObject
_playlistItemPersistentIDForItemPersistentID:
_playerItemDurationIfAvailable
_mergeContentItem:
_mediaRemotePlaybackQueue
_mediaRemoteContentItem
_lastArtworkCatalog
_initWithMediaRemoteContentItem:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
_initWithBlock:
_expectedStopTimeWithPlaybackInfo:
_expectedStartTimeWithPlaybackInfo:
_debugCommandDescriptions
_currentPlaybackRate
_createRemoteCommandWithConcreteClass:mediaRemoteType:
_clearAssetNow
_artworkCatalogForContentItem:
UUIDString
UUID
UTF8String
URLsForDirectory:inDomains:
URLWithString:
URLPathAllowedCharacterSet
URLByAppendingPathComponent:isDirectory:
URLAssetWithURL:options:
MSVBase64UUIDString
JSONObjectWithData:options:error:
DSIDForUserIdentity:outError:
DSID
CGSizeValue
CGColor
CGImage
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didEndPlaybackOfItem:
engine:didChangeItemElapsedTime:rate:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didReachEndOfQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeActionAtQueueEnd:
engine:didChangeAccounts:
engine:didChangeCurrentItemVariantID:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
engineDidLoseMediaServices:
engineDidResetMediaServices:
processAudioTapDidReceiveAudioSamples:numberOfSamples:
initWithPlaybackEngine:
initWithPlaybackEngine:refreshRate:
configurePlayerItem:
registerObserver:
unregisterObserver:
addObserver:
removeObserver:
_shouldAttachAudioTap
_createAudioTap
_createProcessTap
_createQueueTap
_destroyAudioTap
_destroyProcessTap
_destroyQueueTap
_analyzeSamples:numberFrames:
_analyzeAudioData:numberOfFrames:
_prepareTap:maxFrames:processingFormat:
playbackEngine
refreshRate
storage
setStorage:
observers
setObservers:
processAudioTap
setProcessAudioTap:
selfRef
setSelfRef:
.cxx_destruct
_audioProcessingTap
_processingQueue
_aqBuffer
_playbackEngine
_refreshRate
_storage
_observers
_processAudioTap
_selfRef
T@"_MPCAudioSpectrumAnalyzerStorage",&,N,V_storage
T@"NSMutableArray",&,N,V_observers
T@"MPCProcessAudioTap",&,N,V_processAudioTap
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"NSNumber",R,C,N,V_refreshRate
defaultObserver
numberOfBands
addAnalysisBand:
addFrequencyBand:
averagePowerOfBandAtIndex:band:
averagePowerOfFrequencyBandAtIndex:frequencyBand:
_resizeBandStorage
beginReport
finishReport
powerLevel
setPowerLevel:
onUpdate
setOnUpdate:
_bands
_bandsStorageSize
_powerLevel
_numberOfBands
_onUpdate
Tf,N,V_powerLevel
Tq,R,N,V_numberOfBands
T@?,C,N,V_onUpdate
initWithMaximumNumberOfFrames:sampleRate:
_prepareBuffers
_destroyFFTSetup
_freeBuffers
analyzeFrequencies:numberFrames:observers:
analyzeAudioData:numberFrames:observers:
sampleRate
setSampleRate:
maxNumberOfFrames
setMaxNumberOfFrames:
halfN
setHalfN:
log2N
setLog2N:
_intermediateBuffer
_fftBuffer
_fftSetup
_processing
_sampleRate
_maxNumberOfFrames
_halfN
_log2N
Tf,N,V_sampleRate
Tq,N,V_maxNumberOfFrames
Tq,N,V_halfN
Tq,N,V_log2N
didStartLiveLink:
liveLink:didEncounterError:willRetry:
liveLinkDidReconnect:
didStopLiveLink:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveEvent:
liveLink:didReceiveDirectCurrentItemChanged:
getPlaybackContextForIntent:withCompletion:
buildSharedSessionIntentWithIntent:identity:completion:
_transitionToBuildState:
_transitionToBuildState:intent:error:
_transitionToSourceState:
_transitionToSourceState:error:
_transitionToLiveLinkState:
_transitionToLiveLinkState:error:
guard
setGuard:
shuffleMode
setShuffleMode:
strongSelf
setStrongSelf:
completion
setCompletion:
lock
setLock:
buildState
setBuildState:
sourceState
setSourceState:
initialIntent
setInitialIntent:
startIndexPath
setStartIndexPath:
initialTracklist
setInitialTracklist:
linkState
setLinkState:
liveLink
setLiveLink:
identity
setIdentity:
_lock
_guard
_shuffleMode
_strongSelf
_completion
_buildState
_sourceState
_initialIntent
_startIndexPath
_initialTracklist
_linkState
_liveLink
_identity
T@"MSVBlockGuard",&,N,V_guard
Tq,N,V_shuffleMode
T@,&,N,V_strongSelf
T@?,C,N,V_completion
T{os_unfair_lock_s=I},N,V_lock
Tq,N,V_buildState
Tq,N,V_sourceState
T@"MPCPlaybackIntent",&,N,V_initialIntent
T@"NSIndexPath",C,N,V_startIndexPath
T@"MSVSectionedCollection",&,N,V_initialTracklist
Tq,N,V_linkState
T@"ICLiveLink",&,N,V_liveLink
T@"ICLiveLinkIdentity",&,N,V_identity
tracklist
setTracklist:
startItemIndexPath
setStartItemIndexPath:
_tracklist
_startItemIndexPath
T@"MSVSectionedCollection",&,N,V_tracklist
T@"NSIndexPath",&,N,V_startItemIndexPath
copyWithZone:
dictionaryRepresentation
readFrom:
writeTo:
_identifierSet
_mediaType
_excludeFromShuffle
_has
operationsForRequest:
invalidationObservers
setInvalidationObservers:
T@"NSArray",&,N
operationsForPlayerRequest:
personalizedModelObjects
setPersonalizedModelObjects:
_invalidationObservers
_personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
playerModelObject:propertySet:atIndexPath:chain:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerExplicitContentState:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerItemShouldDisableJumpToItem:atIndexPath:boundsCheck:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerIsSharedListeningSession:chain:
preferredAudioFormat:chain:
activeAudioFormat:chain:
activeAudioFormatJustification:chain:
audioFormatPreference:chain:
audioRoute:chain:
alternateAudioFormats:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
updateAudioSession:options:routeSharingPolicy:
snapshotSessionSettings
restoreSessionSettingsFromSnapshot
setupObservations
tearDownObservations
audioSession
setAudioSession:
lostObserver
setLostObserver:
resetObserver
setResetObserver:
category
setCategory:
categoryOptions
setCategoryOptions:
routeSharingPolicy
setRouteSharingPolicy:
_audioSession
_lostObserver
_resetObserver
_category
_categoryOptions
_routeSharingPolicy
T@"AVAudioSession",&,N,V_audioSession
T@,&,N,V_lostObserver
T@,&,N,V_resetObserver
T@"NSString",N,V_category
TQ,N,V_categoryOptions
TQ,N,V_routeSharingPolicy
currentItemWillChangeFromItem:toItem:source:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:source:timeStamp:
itemDidResignCurrent:source:timeStamp:
playbackDidStartForItem:rate:fromStalling:timeStamp:
playbackDidStopForItem:source:reason:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
playbackRateDidChangeNotifiedForItem:newRate:reason:participantIdentifier:timeStamp:
relativeVolumeDidChangeTo:timeStamp:
firstFrameWillRenderForItem:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
tracksDidChangeForItem:timeStamp:
timeControlStatusDidChange:waitingReason:timeStamp:
didReachEndOfQueueWithReason:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithItemAtDeath:timeAtDeath:timeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
userSeekCompletedForItem:fromTime:toTime:timeStamp:
didReportSignpostWithType:
errorResolutionDidStartForItem:error:
errorResolutionDidEndForItem:error:resolution:
stackControllerDidCreateTransitionFrom:to:type:parameters:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
reloadWithPlaybackContext:identifier:completionHandler:
replaceCurrentItemWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithCompletion:
updateAudioSession
queueController
setQueueController:
currentItem
currentTime
currentRate
state
stateBeforeInterruption
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
isReloadingPlaybackContext
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
play
playWithOptions:
pause
pauseWithFadeout:
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
setQueueWithPlaybackContext:identifier:completionHandler:
endPlaybackWithIdentifier:completion:
playWithRate:identifier:completion:
pauseWithIdentifier:completion:
pauseWithFadeout:identifier:completion:
pauseForLeasePreventionWithIdentifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
skipWithDirection:identifier:completion:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
setRate:identifier:completion:
jumpToTime:identifier:completion:
setRelativeVolume:
T@"MPCPlaybackEngine",R,W,N
T@"MPCQueueController",&,N
T@"MPAVItem",R,N
Td,R,N
Tf,R,N
Tq,R,N
TB,R,N
TB,N
Tq,N
reloadingPlaybackContext
TB,R,N,GisReloadingPlaybackContext
prewarm
setupPlaybackStackIfNeeded
playerViewController
_resetPlaybackStack
_setupPlaybackStackWithPlaybackEngine:queueController:
_stateDictionary
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
_MPAVItemForMFQueuePlayerItem:
_playbackDidStopForItem:source:reason:time:
_isAVKitSkipAction:
_performSkipForUserAction:
playbackDidReachQueueEndWithTimeStamp:
_updateActiveFormatForQueueItem:
_logPlayerEventsForQueueItem:
firstVideoFrameWasRenderedForItem:timeStamp:
takeEVSDeferralAssertionForFirstAudioFrame
invalidateEVSDeferralAssertionForFirstAudioFrame
jumpIdentifier
setJumpIdentifier:
playbackStackController
setPlaybackStackController:
bookmarker
setBookmarker:
translator
setTranslator:
errorController
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
configurator
setConfigurator:
stateHandle
setStateHandle:
playbackStartTrace
setPlaybackStartTrace:
playPerfAnalytics
setPlayPerfAnalytics:
transientAudioSessionController
setTransientAudioSessionController:
evsDeferralAssertionForFirstAudioFrame
setEvsDeferralAssertionForFirstAudioFrame:
currentRelativeVolume
setCurrentRelativeVolume:
_autoPlayWhenLikelyToKeepUp
_reloadingPlaybackContext
_queueController
_actionAtQueueEnd
_jumpIdentifier
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_configurator
_stateHandle
_playbackStartTrace
_playPerfAnalytics
_transientAudioSessionController
_evsDeferralAssertionForFirstAudioFrame
_currentRelativeVolume
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
T@"MPCItemBookmarker",&,N,V_bookmarker
T@"MPCMediaFoundationTranslator",&,N,V_translator
T@"MPCErrorControllerImplementation",&,N,V_errorController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
T@"<MFAssetLoading>",&,N,V_assetLoader
T@"MPCLeaseController",&,N,V_leaseController
T@"MPCPlayerItemConfigurator",&,N,V_configurator
TQ,N,V_stateHandle
T@"MPCAVItemTrace",&,N,V_playbackStartTrace
T@"MPCPlayPerfAnalytics",&,N,V_playPerfAnalytics
T@"_MPCAudioSessionController",&,N,V_transientAudioSessionController
T@"<MPCPlaybackEngineEventStreamDeferralAssertion>",&,N,V_evsDeferralAssertionForFirstAudioFrame
Tq,N,V_jumpIdentifier
T@"NSNumber",C,N,V_currentRelativeVolume
T@"AVPlayerViewController",R,N
T@"NSDictionary",R,N
T@"MPCQueueController",&,N,V_queueController
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
TB,R,N,GisReloadingPlaybackContext,V_reloadingPlaybackContext
errorForICError:response:
_isAgeVerificationError:
sourceContentItems
modelObjects
playingIndexPath
T@"MPSectionedCollection",R,N
T@"NSIndexPath",R,C,N
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
timeoutDescription
T@"NSError",R,N
T@?,C,N
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
initWithMiddleware:request:
_loadItemsWithCompletion:
_loadPlayingIdentifierWithCompletion:
execute
rangeFromTracklistRange:
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
_itemGenericObjectPropertySetForContentItem:propertySet:
middleware
setMiddleware:
request
setRequest:
playQueueIdentifiersFuture
setPlayQueueIdentifiersFuture:
playingIdentifierFuture
setPlayingIdentifierFuture:
queueIdentifierFuture
setQueueIdentifierFuture:
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSMapTable",&,N,V_inputOperations
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
_contentTasteControllerDidChangeNotification:
_ageVerificationStateDidChangeNotification:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_suzeLeaseSessionRenewDidFailNotification:
notePlaybackFinishedByHittingEnd
playbackError
serverError
dialog
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
longLongValue
playbackInfo
setupWithPlaybackInfo
type
_updateAudioFormatInfoForContentItem:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setPlaybackStoppedTime:
_currentPlaybackRateDidChange:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
mpcReporting_itemType
_timedMetadataResponseDidInvalidateNotification:
_subscriptionLeaseStatusDidChangeNotification:
_unwrapPlaybackError:
_prefersHighQualityAudioContentForNetworkType:
_prefersHighQualityVideoContentForNetworkType:
_utilitySerialQueue
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
album
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artist
isArtistUploadedContent
artworkTimeMarkers
composer
chapterTimeMarkers
copyrightText
durationFromExternalMetadata
externalContentIdentifier
genre
isAlwaysLive
isAssetURLValid
isExplicitTrack
explicitBadge
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
_delegatedUserIdentityProperties:
_prefersHighQualityContent
hasVideo
_shouldPreloadSubscriptionStatus
_assetLoadPropertiesWithUserIdentityProperties:delegatedUserIdentityProperties:subscriptionPlaybackInfo:
_suzeLeaseMediaType
_iTunesStorePurchasedMediaKind
gaplessInfo
_loudnessInfoMediaKind
_volumeAdjustment
loadAssetAndPlayerItem
_decorateAssetLoadResult:withURLBag:
_isAssetLoadResultValidForPlayback:error:
_prepareAssetForHLSPlayback:loadResult:destinationURL:storeRequestContext:urlBag:identityProperties:
_downloadHLSAssetWhilePlaying:assetLoadProperties:assetLoadResult:destinationURL:sharedCacheURL:storeRequestContext:urlBag:fileUpgradeRecommendation:
_getHLSServerDataForLoadResults:bag:keyCertificateURL:keyServerURL:keyServerAdamID:keyServerProtocolType:
_hlsDownloadOptionsDictionary:
_createOrUpdateDatabaseEntry:loadResult:urlBag:destinationURL:purgeable:
_downloadHLSAsset:destinationURL:sharedCacheURL:assetLoadProperties:loadResult:storeRequestContext:urlBag:fileUpgradeRecommendation:
_checkDownloadErrorAndValidityOfDownloadedHLSAsset:downloadLocationURL:completion:
_linkAssetIfNeededAtURL:toDestinationURL:shareCacheURL:
currentPlayerAudioFormat
audioFormatForStableVariantID:
updateAudioFormatsDictionary:
updatePreferredFormat:
updateActiveFormat:justification:
setAudioRoute:
configureAVPlayerItemWithAudioFormat:forceSpatial:
_updateActiveFormatJustification:
_emitAudioFormatChangeEvent
_emitAudioAssetTypeSelection:
updatePlayerItemMetadata
mainTitle
mediaItem
mediaItemNeedsLoading
modelGenericObject
mediaType
persistentID
databaseID
cloudID
personID
cloudUniversalLibraryID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
shouldShowComposer
prefersSeekOverSkip
prepareForRate:completionHandler:
setRating:
shouldReportPlayEventsToStore
stationID
stationHash
stationName
stationStringID
stationProviderID
storeItemInt64ID
storeSubscriptionAdamID
supportsLikedState
libraryLyrics
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
urlTimeMarkers
useEmbeddedChapterData
userRating
canUseLoadedAsset
allowsAirPlayFromCloud
allowsExternalPlayback
bookmarkTime
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
shouldPreventPlayback
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
_didResignActivePlayerItem
_didBecomeActivePlayerItem
_keyServerAdamID
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
trackInfoData
rtcReportingServiceIdentifier
_reloadTimedMetadataRequest
nowPlayingInfoCenter:lyricsForContentItem:completion:
mediaLibrary
setGenericObject:
_timeoutValues
_allowsAssetCaching
_allowsStreamingPlayback
_applyLoudnessInfo
_applyPreferredPeakBitRateToPlayerItem:withItemType:
_audioFormatPreference
_bookmarkTime
_getSubscriptionLeasePropertiesWithCompletion:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
_handlePlaybackFinishedTime:didFinishByHittingEnd:
_updateHasBeenPlayedWithElapsedTime:completion:
_invalidateContentItem
_isPrivateListeningEnabled
_modelPlaybackPosition
_postInvalidationNotifications
_radioStation
_rtcReportingMediaIdentifierWithAssetLoadProperties:
_rtcReportingServiceIdentifierWithAssetURL:
_shouldRememberBookmarkTime
_storeRequestContext
_startTime
_stopTime
_storeUbiquitousIdentifier
_updateAutomaticSubscriptionLeaseRefresh
_updateBookmarkTime:isCheckpoint:
_updateJingleTimedMetadata
_updatePreventionStatusWithLeaseSession:
analyticsContentType
analyticsFormatType
pauseContentKeySession
resumeContentKeySession
leasePlaybackPreventionState
leaseStatus
audioFormatsDictionary
setAudioFormatsDictionary:
preferredAudioAssetType
preferredAudioAssetTypeSelection
assetCacheProvider
setAssetCacheProvider:
assetSourceStoreFrontID
setAssetSourceStoreFrontID:
equivalencySourceAdamID
setEquivalencySourceAdamID:
genericObject
jingleTimedMetadata
setMediaLibrary:
isSiriInitiated
setSiriInitiated:
isRadioPlayback
setRadioPlayback:
isRadioStreamPlayback
setRadioStreamPlayback:
isSubscriptionRequired
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
playerID
setPlayerID:
eventStream
setEventStream:
preferredFormat
setPreferredFormat:
activeFormat
setActiveFormat:
activeFormatJustification
setActiveFormatJustification:
alternateFormats
setAlternateFormats:
availableSortedFormats
setAvailableSortedFormats:
audioRoute
loadedAudioAssetType
isHLSAsset
isDownloadedAsset
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingServiceIdentifier
_identityPropertySet
_contentKeySession
_hlsDownloadURLSession
_hlsDownloadURLRequest
_genericObjectLock
_mediaItemNeedsLoading
_tempFileURLToCleanup
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_hlsAsset
_downloadedAsset
_leasePlaybackPreventionState
_leaseStatus
_audioFormatsDictionary
_preferredAudioAssetType
_preferredAudioAssetTypeSelection
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_playerID
_eventStream
_preferredFormat
_activeFormat
_activeFormatJustification
_alternateFormats
_availableSortedFormats
_audioRoute
_loadedAudioAssetType
T@"NSDictionary",C,N,V_audioFormatsDictionary
T@"NSArray",&,N,V_availableSortedFormats
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
T@"NSString",C,N,V_assetSourceStoreFrontID
Tq,N,V_equivalencySourceAdamID
T@"MPModelGenericObject",&,N,V_genericObject
T@"NSData",R,C,N,V_jingleTimedMetadata
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
Tq,N,V_stationItemLikedState
T@"NSDictionary",&,N,V_trackInfo
T@"NSData",R,N
T@"MPGaplessInfo",R,N
T@"NSString",&,N,V_playerID
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
T@"MPCPlayerAudioFormat",&,N,V_preferredFormat
T@"MPCPlayerAudioFormat",&,N,V_activeFormat
Tq,N,V_activeFormatJustification
T@"NSArray",&,N,V_alternateFormats
T@"MPCPlayerAudioRoute",&,N,V_audioRoute
Tq,R,N,V_preferredAudioAssetType
T@"MPCAudioAssetTypeSelection",R,N,V_preferredAudioAssetTypeSelection
Tq,R,N,V_loadedAudioAssetType
hlsAsset
TB,R,N,GisHLSAsset,V_hlsAsset
downloadedAsset
TB,R,N,GisDownloadedAsset,V_downloadedAsset
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
initWithAsset:
_notifyCompletionHandlerWithSuccess:error:
asset
completionHandler
setCompletionHandler:
_asset
_completionHandler
T@"AVURLAsset",R,W,N,V_asset
T@?,C,N,V_completionHandler
mpc_addDownloadCompletionHandler:
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
stopDiscovery
_discoverAirplayDevices:
waitForCompleteClusters
setWaitForCompleteClusters:
_reconSession
_waitForCompleteClusters
TB,N,V_waitForCompleteClusters
identityPropertySetFromRequestContext:completion:
initWithIdentityProperties:delegatedIdentityProperties:
identityProperties
setIdentityProperties:
delegatedIdentityProperties
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
recordLyricsViewEvent:
reportingPlaybackObserver
setReportingPlaybackObserver:
_reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
_containerIndex
_itemIndex
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
executeWithUIDs:action:volumeValue:completion:
identifier
subscribeToEventStream:
unsubscribeFromEventStream:
T@"NSString",R,C,N
_logAccountEvent:subscription:cursor:
subscription
lastTimeControlStatusEvent
setLastTimeControlStatusEvent:
_chartState
_chartStatus
_subscription
_lastTimeControlStatusEvent
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
T@"MPCPlaybackEngineEvent",&,N,V_lastTimeControlStatusEvent
describePlayer:
initWithRequest:
initWithRequest:serverObjectDatabase:
unpersonalizedContentDescriptors
accumulatorResult
handleResponse:error:
handleMediaAPIResponse:trustID:isFinalResponse:
newStoreItemMetadataRequest
newMediaAPICollectionItemMetadataRequestInfo
_addEquivalencyForMetadata:requestStoreIdentifier:
_eligibilityForItem:
_updatedModelObjectFromOriginalObject:sectionPlaybackAuthorizationToken:itemSectionIndex:
_playlistEntryForObject:containerUniqueID:
_resolveContentDescriptorsUsingServerObjectDatabase
_addPendingChildItem:identifiers:atSectionIndex:collectionPlaybackAuthorizationToken:requestType:
_serverObjectFromPlaceholderContentDescriptor:propertySet:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
_userIdentityWithRequest:
_isFatalError:
equivalencyMapping
lastBatchNetworkingTime
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_storePersonalizationStyle
_sectionIndexToCollectionItemMetadataRequestMap
_sectionIndexToCollectionItemAuthTokenRequestMap
_sectionIndexToTokenRenewalRequestMap
_storeIDToCollectionMetadataRequestMap
_pendingCollectionMetadataRequests
_pendingCollectionItemMetadataRequests
_pendingCollectionItemTokenRenewalRequests
_pendingCollectionItemAuthorizationTokenRequests
_trustProvider
_progressiveContentDescriptors
_lastBatchNetworkingTime
T@"NSDictionary",R,C,N,V_equivalencyMapping
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N
Td,R,N,V_lastBatchNetworkingTime
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
_personalizationResponseDidInvalidateNotification:
initWithRequest:personalizationResponse:firstResponse:finalResponse:
isFirstResponse
setFirstResponse:
isFinalResponse
setFinalResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_firstResponse
_finalResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
firstResponse
TB,N,GisFirstResponse,V_firstResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSData",C,N,V_adamIDData
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
title
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
T@"NSArray",C,N,V_artworkDictionaries
_handleAssetLoadEnd:cursor:
_contextWithEvent:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
responseClass
playerPath
tracklistRange
playingItemProperties
queueItemProperties
queueSectionProperties
T@"MPCPlayerPath",R,N
T{?=qq},R
T@"MPPropertySet",R,N
T@"NSString",R,N
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
T@"MPCPlayerPath",&,N,V_playerPath
T@"MPPropertySet",C,N,V_sessionProperties
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builderProtocol
items
controller
_items
_controller
builder
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
T@"MPCMediaRemoteController",R,N,V_controller
T@"MPSectionedCollection",R,N,V_items
_cloudID
_delegateInfoID
_purchaseHistoryID
_storeAdamID
_storeSubscriptionAdamID
_cloudUniversalLibraryID
_contentItemID
_playbackAuthorizationToken
artworkCatalog
pauseWithFadeDuration:
stop
skipWithBehavior:
reshuffle
beginSeekWithDirection:
setRepeatMode:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
performQueueModifications:completion:
setDisableAutomaticCanBeNowPlaying:
prerollWithCompletion:
beginPlaybackAtHostTime:
getNowPlayingsForContentItemIDs:reply:
applyServerStateUpdateRecord:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
_handleCommandHandlersRegistered:
listener:shouldAcceptNewConnection:
isRunning
startServer
resumeIfNeeded
stopServer
endpoint
_nowPlayingWithItem:
_timeSnapshotWithElapsedTime:rate:
_prependPlaybackContexts:completion:
_appendPlaybackContexts:completion:
_registerForCommandHandlersRegisteredNotification
_addContentItemIDsToUpdateRecord:
_applyServerStateUpdateRecord:
systemCache
listener
activeConnections
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_resumed
_systemCache
_listener
_activeConnections
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
T@"NSXPCListener",R,N,V_listener
T@"NSMutableArray",R,N,V_activeConnections
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
serverCopy
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:source:error:
hasValidAsset
descriptionDictionary
allowsAssetCaching
setAllowsAssetCaching:
allowsAssetInfoCaching
setAllowsAssetInfoCaching:
assetPathExtension
setAssetPathExtension:
assetProtectionType
setAssetProtectionType:
assetQualityType
setAssetQualityType:
assetURL
setAssetURL:
isHomeSharingAsset
setIsHomeSharingAsset:
setIsHLSAsset:
isCloudStreamingAsset
setIsCloudStreamingAsset:
onlineSubscriptionKeysRequired
setOnlineSubscriptionKeysRequired:
protectedContentSupportStorageFileURL
setProtectedContentSupportStorageFileURL:
purchaseBundleDictionary
setPurchaseBundleDictionary:
streamingKeyCertificateURL
setStreamingKeyCertificateURL:
streamingKeyServerURL
setStreamingKeyServerURL:
keyServerProtocolType
setKeyServerProtocolType:
streamingKeyAdamID
setStreamingKeyAdamID:
alternateHLSPlaylistURL
setAlternateHLSPlaylistURL:
alternateHLSKeyServerURL
setAlternateHLSKeyServerURL:
alternateHLSKeyCertificateURL
setAlternateHLSKeyCertificateURL:
suzeLeaseID
setSuzeLeaseID:
isiTunesStoreStream
setITunesStoreStream:
willBecomeActivePlayerItemHandler
setWillBecomeActivePlayerItemHandler:
playbackAuthorizationToken
setPlaybackAuthorizationToken:
audioAssetType
setAudioAssetType:
setDownloadedAsset:
source
setSource:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isHLSAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_keyServerProtocolType
_streamingKeyAdamID
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
_audioAssetType
_source
TB,N,V_allowsAssetCaching
TB,N,V_allowsAssetInfoCaching
T@"NSString",C,N,V_assetPathExtension
Tq,N,V_assetProtectionType
Tq,N,V_assetQualityType
T@"NSURL",C,N,V_assetURL
TB,N,V_isHomeSharingAsset
TB,N,V_isHLSAsset
TB,N,V_isCloudStreamingAsset
TB,N,V_onlineSubscriptionKeysRequired
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSDictionary",C,N,V_purchaseBundleDictionary
T@"NSURL",C,N,V_streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_streamingKeyAdamID
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
T@?,C,N,V_willBecomeActivePlayerItemHandler
T@"NSString",C,N,V_playbackAuthorizationToken
Tq,N,V_audioAssetType
TB,N,GisDownloadedAsset,V_downloadedAsset
Tq,N,V_source
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
T@"MPCReportingDeviceIdentityPropertiesLoader",R,N
_calloutQueue
_serialWorkQueue
reevaluateType
requiredMediaClipProperties
rtcReportingAssetType
initWithMediaClip:
supportsRateChange
_allowsCellularPlayback
_currentPreferredStaticAsset
_isVideoAsset
mediaClip
_modelGenericObject
_mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
_durationAvailableNotification:
_likedStateChangedNotification:
_commandEventDidTimeoutNotification:
_performCommandEvent:completion:
engine:prepareForActivationWithCompletion:
engine:didFailToActivateWithError:resolution:
_performDebugEvent:completion:
privateListeningOverride
setPrivateListeningOverride:
T@"NSNumber",C,N
setPlaybackRequestEnvironment:
T@"MPCPlaybackRequestEnvironment",C,N
becomeActive
publishIfNeeded
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
leaveSharedSessionWithCommandID:completion:
updatePlaybackMetrics:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
_becomeActiveIfNeededWithCompletion:
_enqueueFallbackIntentIfNeededForCommandEvent:play:completion:
_exportableSessionTypes
_supportedSessionTypes
_updateLaunchCommands
_playbackStateIsIdle:
_updateSupportedCommands
_isRestrictedSubscriptionUser:
_canInsertPlaybackContext:forUser:
_homeAccessorySettingsPrivateListeningOverride:
hasInitializedSupportedCommands
setInitializedSupportedCommands:
infoCenter
commandCenter
isEngineRestoringState
setEngineRestoringState:
isMediaServerAvailable
setMediaServerAvailable:
lastPerformanceMetrics
setLastPerformanceMetrics:
_libraryAddStatusObserver
_libraryAddStatusObserverLock
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountRequiresAuthorizationTokensForPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_nextPreviousTrackCooldownTimer
_deferredTrackChangeDelta
_lastCommandDescriptions
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
_lastPerformanceMetrics
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
T@"MPCPlayPerfMetrics",&,N,V_lastPerformanceMetrics
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:artworkCatalogForContentItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
initWithRequestedProperties:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
requestedProperties
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
initWithEvaluation:properties:
assetLoadProperties
fileAssetEvaluation
requirePreferredAssetQuality
setRequirePreferredAssetQuality:
responseHandler
setResponseHandler:
_requirePreferredAssetQuality
_assetLoadProperties
_fileAssetEvaluation
_responseHandler
T@"MPCModelGenericAVItemAssetLoadProperties",R,N,V_assetLoadProperties
T@"MPCAssetLoadPropertiesLocalFileEvaluation",R,N,V_fileAssetEvaluation
TB,N,V_requirePreferredAssetQuality
T@?,C,N,V_responseHandler
mediaPlaybackCoreBundle
getRemotePlaybackQueueRepresentationWithCompletion:
mpc_protoContainerRepresentation
mpc_protoItemRepresentation
mpc_remotePlaybackQueueRequiredProperties
deviceLibraryProviderWithUserIdentity:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
_downloadedAssetDestinationDirectoryForMediaLibrary:
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
getPlaybackAssetDestinationURL:sharedCacheURL:purgeable:purchaseBundleDestinationURL:assetQualityType:fileName:pathExtension:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
_initWithMediaLibrary:
_persistentIDForModelObject:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
_copyWithClass:zone:
deviceGUID
deviceName
privateListeningStateSource
systemReleaseType
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
setStoreAccountID:
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
modelPlayEventForItem:inSection:
identifiersForItem:inSection:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
containsTransportableContent
itemDidBeginPlayback:
canJumpToItem:reason:
canSkipItem:reason:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromReference:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentFromSong:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
radioPlaybackIntentWithStationURL:
buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:
sharedSessionIntentWithProperties:identity:
tracklistDataSourceForSource:
tracklistDataSource
getPlaybackContextWithCompletion:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getRepresentativeObjectWithProperties:completion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
sharedListeningProperties
generateNowPlayingContentItemWithMetadataObject:
artworkCatalogForMetadataModelObject:
localizedTitle
setLocalizedTitle:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
tracklistSource
setTracklistSource:
tracklistToken
setTracklistToken:
actionAfterQueueLoad
setActionAfterQueueLoad:
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
queueGroupingID
setQueueGroupingID:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
setSiriReferenceIdentifier:
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_startTimeModifications
_endTimeModifications
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_repeatMode
_queueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
T@"<MPCPlaybackIntentDataSource>",R,N
T@"NSString",C,N,V_localizedTitle
Tq,N,V_tracklistSource
T@"<NSSecureCoding>",&,N,V_tracklistToken
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatMode
TB,N,V_prefersEnqueuingUsingAirPlay
T@"NSString",C,N,V_queueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_siriReferenceIdentifier
T@"MPCPlaybackSharedListeningProperties",R,N
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
containsAppleMusicRadioContent
propertiesWithSessionIdentifier:sessionKey:
sessionIdentifier
sessionKey
_sessionIdentifier
_sessionKey
T@"NSString",R,N,V_sessionIdentifier
T@"NSString",R,N,V_sessionKey
initWithFileAsset:
humanDescription
fileIsValid
fileShouldBeUpdated
fileAsset
status
setStatus:
recommendation
setRecommendation:
fileMatchesRequiredFileFormat
setFileMatchesRequiredFileFormat:
fileMatchesRequiredQuality
setFileMatchesRequiredQuality:
fileIsDownloaded
setFileIsDownloaded:
fileIsCached
setFileIsCached:
fileIsHLS
setFileIsHLS:
fileAssetType
setFileAssetType:
expectedAssetType
setExpectedAssetType:
fileQualityType
setFileQualityType:
expectedQualityType
setExpectedQualityType:
filePath
setFilePath:
HLSContentPolicy
setHLSContentPolicy:
_fileMatchesRequiredFileFormat
_fileMatchesRequiredQuality
_fileIsDownloaded
_fileIsCached
_fileIsHLS
_fileAsset
_status
_recommendation
_fileAssetType
_expectedAssetType
_fileQualityType
_expectedQualityType
_filePath
_HLSContentPolicy
Tq,N,V_status
Tq,N,V_recommendation
T@"NSString",C,N,V_filePath
TB,N,V_fileMatchesRequiredFileFormat
TB,N,V_fileMatchesRequiredQuality
TB,N,V_fileIsDownloaded
TB,N,V_fileIsCached
TB,N,V_fileIsHLS
Tq,N,V_HLSContentPolicy
Tq,N,V_fileAssetType
Tq,N,V_expectedAssetType
Tq,N,V_fileQualityType
Tq,N,V_expectedQualityType
T@"MPModelFileAsset",R,C,N,V_fileAsset
evaluateAssetLoadProperties:allowingCachedAssets:defaults:
_loadedAudioAssetTypeForFileAsset:
isHLSFileAsset:
_recommendationForEvaluation:assetCachingIsAllowed:userDefaults:
_shouldUpgradeDownloadOnPlay:defaults:
_shouldUpgradeCacheOnPlay:assetCachingIsAllowed:
_accountInfo
_nowPlayingContentReference
_playActivityQueueGroupingID
_radioStationID
_radioStationURLString
_seedContentReference
modelRadioStationForMetadata:userIdentity:
_requestedRadioStationProperties
controllerFuture
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
initWithMiddleware:playerRequest:
playerRequest
setPlayerRequest:
_playerRequest
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"MPCPlayerRequest",&,N,V_playerRequest
operationQueue
setOperationQueue:
lastRecordedPlayEvent
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
T@"NSOperationQueue",&,N,V_operationQueue
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
initWithMiddleware:
playbackStateFuture
setPlaybackStateFuture:
_playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
start
isExecuting
isFinished
main
_configureItem:error:
item
delegate
setDelegate:
token
callbackQueue
setError:
_isExecuting
_isFinished
_item
_delegate
_token
_callbackQueue
_error
T@"MPAVItem",R,C,N,V_item
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
Tq,R,N,V_token
T@?,R,C,N,V_completion
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
T@"NSError",&,N,V_error
loadAssetFor:token:completion:
cancelLoading
initWithDelegate:
loadingQueue
_loadingQueue
T@"NSOperationQueue",R,N,V_loadingQueue
stringRepresentation
initWithIdentifier:artworkProperties:artworkIdentifier:
artworkIdentifier
artworkProperties
_identifier
_artworkIdentifier
_artworkProperties
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_artworkIdentifier
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
sharedDataSource
bestArtworkSizes
T@"MPCRemotePlayerArtworkDataSource",R,N
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
_urlForCatalog:size:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
assistantStreamingGetAvailability
assistantStreamingGetAvailability:
assistantRadioGetAvailability:
assistantRadioGetAvailability:completion:
overridePlayingItem
playingItemIndexPath
T@"MPModelGenericObject",R,N
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
MPC_storeFrontIdentifierKey
performRequest:completion:
performRequest:options:completion:
performRequest:extendedStatusCompletion:
performRequest:options:extendedStatusCompletion:
requestWithCommandRequests:
initWithCommandRequests:
performWithCompletion:
performWithExtendedStatusCompletion:
options
setOptions:
commands
setCommands:
_options
_commands
T@"NSArray",&,N,V_commands
TQ,N,V_options
initWithMediaRemoteCommand:options:controller:label:
initWithMediaRemoteCommand:options:playerPath:label:
setCommandOptionValue:forKey:
setLabel:
label
originalLabel
command
userInitiatedOptions
setUserInitiatedOptions:
statusTransformer
setStatusTransformer:
_command
_label
_originalLabel
_userInitiatedOptions
_statusTransformer
T@"NSString",R,C,N,V_originalLabel
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
T@?,C,N,V_statusTransformer
T@"NSString",C,N,V_label
initWithCommandRequest:options:sendDate:
sendDate
_sendDate
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
T@"NSDate",R,N,V_sendDate
T@"MPCPlayerCommandStatus",R,N,V_status
_stateDumpObject
setUserIdentity:
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
userIdentity
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_userIdentity
_tracklistRange
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
TB,N,V_disablePlaybackStateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T@"ICUserIdentity",&,N,V_userIdentity
T{?=qq},N,V_tracklistRange
createSharedSessionWithIntentHandler:
createSharedSessionWithIdentity:intentHandler:
leaveSession
_commandRequestForMediaRemoteCommand:
participants
isSharedListeningSession
videoView
setVideoView:
videoOutput
setVideoOutput:
_sharedListeningSession
_state
_participants
_videoView
_videoOutput
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
T@"NSArray",R,N,V_participants
sharedListeningSession
TB,R,N,GisSharedListeningSession,V_sharedListeningSession
initWithResponse:
initWithPlayerPath:
response
_response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
descriptionComponents
queueFeederClass
T@"ICUserIdentity",C,N
stationPlaybackAuthorizationToken
shuffleType
repeatType
queueEndAction
continueListeningStation
setContinueListeningStation:
continueListeningQueueProvider
setContinueListeningQueueProvider:
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
nowPlayingContentReference
setNowPlayingContentReference:
seedContentReference
setSeedContentReference:
radioStation
setRadioStation:
stationURL
setStationURL:
setStationPlaybackAuthorizationToken:
_continueListeningStation
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_stationURL
_stationPlaybackAuthorizationToken
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
TB,N,V_continueListeningStation
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
Tq,N,V_continueListeningMaxQueueReferences
Tq,N,V_continueListeningPrefetchThreshold
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
identifierStringFromItemIdentifiers:radioIdentifiers:
playerServiceNameWithPlayerID:
rtcIdentifiersFromRadioIdentifiers:
rtcIdentifiersFromUniversalIdentifiers:
NSStringFromMPCRTCReportingEventCategory:
dateFormatter
setTestingDelegate:
_handleReportingForItemStartEvent:event:
_sendReportForSessionSummary:event:withType:
_sendSessionStartIfNeeded:forItemEvent:
_sendReportForSessionStart:event:withType:
_sendQueueLoadEventIfNeeded:forItemEvent:
_sendReportForItemAssetLoad:event:
_sendReportForItemSummary:event:
_sendReportForItemSummaryWithEndReason:cursor:event:
_payloadForSessionStart:fromEvent:
_payloadForSessionSummary:fromEvent:
_payloadForQueueLoad:fromQueueLoadEndEvent:
_payloadForItemAssetLoad:fromItemEvent:
_payloadForItemSummary:fromEvent:
_payloadForItemSummary:fromItemEvent:
_reasonForEndEvent:cursor:
_itemStartIncitingEvent:fromItemStartEvent:
_tapToPlayMetrics:fromItemStartEvent:
_mediaIdentifierFromItemAssetLoadEndEvent:cursor:
_itemAssetTypeFromItemAssetLoadEvent:cursor:
_itemWasPreviouslyLoaded:cursor:
_updateAssetLoadInfoEvent:fromAssetLoadEndEvent:cursor:
_generateConfiguredReportingSessionWithToken:serviceName:completion:
_rtcSessionInfoWithToken:
_rtcUserInfoWithServiceName:
_sendReportWithSession:category:type:payload:
_sendOneMessageWithToken:serviceName:category:type:payload:
testingDelegate
playbackSessionRTCSession
setPlaybackSessionRTCSession:
playbackQueueRTCSession
setPlaybackQueueRTCSession:
playbackItemRTCSession
setPlaybackItemRTCSession:
_rtcGroup
_rtcQueue
_testingDelegate
_playbackSessionRTCSession
_playbackQueueRTCSession
_playbackItemRTCSession
T@"RTCReporting",&,V_playbackSessionRTCSession
T@"RTCReporting",&,V_playbackQueueRTCSession
T@"RTCReporting",&,V_playbackItemRTCSession
T@"<MPCRTCEventConsumerTestingDelegate>",W,N,V_testingDelegate
previousItemEventWithCursor:type:
beginWithIdentifier:
endWithIdentifier:item:machContinuousTime:
endWithIdentifier:error:
initWithIdentifier:timeout:
initWithIdentifier:
begin
endWithItem:
endWithItem:machContinuousTime:
endWithError:
setIdentifier:
TQ,N,V_identifier
startFrame
setStartFrame:
endFrame
setEndFrame:
iterations
setIterations:
_startFrame
_endFrame
_iterations
Tq,N,V_startFrame
Tq,N,V_endFrame
Tq,N,V_iterations
version
setVersion:
frameRate
setFrameRate:
scenes
setScenes:
_version
_frameRate
_scenes
T@"NSString",C,N,V_version
Td,N,V_frameRate
T@"NSArray",C,N,V_scenes
isScriptedLoopingDisabled
setScriptedLoopingDisabled:
scriptedLoopingDisabled
TB,N,GisScriptedLoopingDisabled
initWithURL:sceneCollection:
initWithAsset:sceneCollection:
_sharedInitWithItem:
restartScenes
playScenes
pauseScenes
observeValueForKeyPath:ofObject:change:context:
currentScene
setTimeObserver:
seekToFrameIfNeeded:completionHandler:
frameForCMTime:
_createSceneCollectionForAssetWithPreloadedKeys:
_CMTimeForFrame:
_executeSceneCollection
_executeCurrentScene
_loopIfNeeded
_advanceScene
_pause
_updateRateIfNeeded
player
pauseFinishedBlock
setPauseFinishedBlock:
sceneCollection
setSceneCollection:
timeObserver
itemDidPlayToEndObserver
setItemDidPlayToEndObserver:
currentSceneIndex
setCurrentSceneIndex:
currentLoopCount
setCurrentLoopCount:
isExecutingPauseScene
setExecutingPauseScene:
isSceneExecutionPaused
setSceneExecutionPaused:
_executingPauseScene
_sceneExecutionPaused
_player
_pauseFinishedBlock
_sceneCollection
_timeObserver
_itemDidPlayToEndObserver
_currentSceneIndex
_currentLoopCount
T@?,C,N,V_pauseFinishedBlock
T@"MPCSceneCollection",&,N,V_sceneCollection
T@,&,N,V_timeObserver
T@"MPNotificationObserver",&,N,V_itemDidPlayToEndObserver
Tq,N,V_currentSceneIndex
Tq,N,V_currentLoopCount
executingPauseScene
TB,N,GisExecutingPauseScene,V_executingPauseScene
sceneExecutionPaused
TB,N,GisSceneExecutionPaused,V_sceneExecutionPaused
T@"AVPlayer",R,N,V_player
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
disableImplicitSectioning
setDisableImplicitSectioning:
wantsDetailedKeepLocalRequestableResponse
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
setPreviousResponse:
T@"MPModelResponse",&,N
clientIdentifier
newOperationWithResponseHandler:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setClientIdentifier:
sectionedModelObjects
setSectionedModelObjects:
storeIDs
setStoreIDs:
storeIDsToPlaybackAuthorizationTokensMap
setStoreIDsToPlaybackAuthorizationTokensMap:
trustProvider
setTrustProvider:
playbackPrioritizedIndexPaths
setPlaybackPrioritizedIndexPaths:
sharedListeningQueue
setSharedListeningQueue:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_storeIDsToPlaybackAuthorizationTokensMap
_playbackPrioritizedIndexPaths
_sharedListeningQueue
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"ICSharedListeningQueue",&,N,V_sharedListeningQueue
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_allowLocalEquivalencies
T@"NSString",C,N,V_clientIdentifier
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
T@"NSArray",C,N,V_storeIDs
T@"NSDictionary",C,N,V_storeIDsToPlaybackAuthorizationTokensMap
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",C,N,V_trustProvider
setPlaybackEngine:
T@"MPCPlaybackEngine",&,N,V_playbackEngine
initWithMPAction:request:
commandRequest
_action
initWithMPDialog:request:
localizedMessage
actions
_dialog
_actions
T@"NSArray",R,N,V_actions
initWithMPStatus:request:
statusCode
customData
customDataType
T@"MPRemoteCommandStatus",R,N,V_status
T@"MPCPlayerCommandDialog",R,N,V_dialog
coreAnalyticsEventNameWithEventType:
setupErrorHandlerForEventType:errorKey:prefix:
handleMetrics:
sendMetricsToCoreAnalytics:
sendMetricsToSiriSelfLogger:
_lastSiriReferenceIdentifier
mpc_remoteCommandStatus
mpc_remoteCommandDialog
T@"MPRemoteCommandStatus",R,N
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
_invalidate
equivalencySourceStoreAdamIDForLocalStoreAdamID:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
TB,R,N,GisFinalResponse
initWithRequest:personalizationResponse:results:networkingTime:
setInvalidationDate:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
networkingTime
setNetworkingTime:
_invalidationTimer
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
_networkingTime
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
T@"NSDate",C,N,V_invalidationDate
Td,N,V_networkingTime
allowsHLSContent
assetSourceStorefrontID
setAssetSourceStorefrontID:
prefersVideoContent
setPrefersVideoContent:
setFileAsset:
homeSharingAsset
setHomeSharingAsset:
itemIdentifiers
setItemIdentifiers:
prefersHighQualityContent
setPrefersHighQualityContent:
storeAsset
setStoreAsset:
isFollowUp
setFollowUp:
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
householdID
setHouseholdID:
storefrontID
setStorefrontID:
setPreferredAudioAssetType:
audioAssetTypeSelection
setAudioAssetTypeSelection:
_prefersVideoContent
_followUp
_assetSourceStorefrontID
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
_audioAssetTypeSelection
T@"NSString",C,N,V_assetSourceStorefrontID
TB,N,V_prefersVideoContent
T@"MPModelFileAsset",&,N,V_fileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPIdentifierSet",&,N,V_itemIdentifiers
TB,N,V_prefersHighQualityContent
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
T@"NSString",C,N,V_householdID
T@"NSString",C,N,V_storefrontID
Tq,N,V_preferredAudioAssetType
T@"MPCAudioAssetTypeSelection",&,N,V_audioAssetTypeSelection
initWithMiddleware:playerPath:
setControllerFuture:
_controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
initWithType:payload:monotonicTime:identifier:
date
monotonicDate
monotonicTimeNanoSeconds
durationSinceEvent:
earlierEvent:
compare:
timeIntervalSinceEvent:
payload
monotonicTime
machAbsoluteTime
_type
_payload
_machAbsoluteTime
_monotonicTime
T{?=QQQQd},R,N,V_monotonicTime
TQ,R,N,V_machAbsoluteTime
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
T@"NSDate",R,N
supportedCommandsFuture
setSupportedCommandsFuture:
_supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
mpc_synchronousHLSSessionDataWithTimeout:error:
mpc_HLSAVMetadataItemInMetadata:
operationsForSessionRequest:
setController:
queueContentItems
setQueueContentItems:
queueModelObjects
setQueueModelObjects:
supportedCommands
setSupportedCommands:
setPlayingIndexPath:
queueIdentifier
setQueueIdentifier:
playerState
setPlayerState:
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
T@"MPSectionedCollection",&,N,V_queueContentItems
T@"MPSectionedCollection",&,N,V_queueModelObjects
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
T@"NSString",C,N,V_queueIdentifier
Tq,N,V_playerState
_supportedCommands:infoValueForKey:
_playbackRateForContentItem:
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
mpc_isResourceUnavailableError
mpc_isSubscriptionRequiredError
engine:didFailToPlayItem:withError:
engine:didFailToPlayFirstItem:withError:
reset
resolveError:forItem:completion:
reportCriticalError:forItem:
initWithPlaybackEngine:translator:externalPlaybackRouter:
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
_resolutionForPlaybackError:item:
_notifyObserversForError:item:
canHandleFirstItemFailure
isFirstItemFailure:item:
isQueueLoadingFailure:
isUnrecoverableAssetLoadingError:
isAssetUnavailableFailure:
shouldHandleFirstItemFailure:item:
preferredFirstContentItemID
setPreferredFirstContentItemID:
itemsHavePlayed
setItemsHavePlayed:
failedItemsIdentifiers
setFailedItemsIdentifiers:
externalPlaybackRouter
setExternalPlaybackRouter:
lastItemUsedForErrorResolution
setLastItemUsedForErrorResolution:
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
T@"NSString",C,N,VpreferredFirstContentItemID
TB,N,VitemsHavePlayed
cancel
_canRetrieveLoadResultsFromMiniSinfWithAssets:
_canRetrieveLoadResultsFromServerObjectDatabaseWithAssets:hlsAsset:
_loadResultsFromServerObjectDatabaseAssetsWithMiniSinf:playbackAuthorizationToken:
_loadResultsFromServerObjectDatabaseAssets:hlsAsset:playbackAuthorizationToken:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
cancellationHandler
setCancellationHandler:
setAssetLoadProperties:
operationType
setOperationType:
requestContext
setRequestContext:
subscriptionLeaseSession
setSubscriptionLeaseSession:
_cancellationHandler
_operationType
_requestContext
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
Tq,N,V_operationType
T@"ICStoreRequestContext",C,N,V_requestContext
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
playbackContexts
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
matchesStartItem:
playbackContextForStoreIDs:staticEntities:radioPlaybackContext:containsStartItem:
staticEntitiesForPlayParameters:
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
playbackInfoForItem:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
updatedPlaybackContext
uniqueIdentifier
firstModelPlayEvent
getRepresentativeMetadataForPlaybackContext:properties:completion:
_performRequestUpdate:
_didUpdateToResponse:
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
_equivalencySourceAdamIDForIdentifierSet:
_sectionedModelObjectsRepresentationForSectionedCollection:
_supplementalLibraryRequest
fallbackSectionRepresentation
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_section
_playbackContext
_representativeMetadataPropertySet
_backgroundTaskIdentifier
_backgroundTasks
_fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
T@"MPModelResponse<MPCModelPlaybackResponse>",R,N,V_response
mqf_requiredItemPlaybackProperties
mqf_requiredSectionPlaybackProperties
mpc_identifiersAsJsonValue
initWithRadioStationTracks:
analyticsSignpostsEnabled
setAnalyticsSignpostsEnabled:
_radioStationTracks
_analyticsSignpostsEnabled
TB,N,V_analyticsSignpostsEnabled
initWithRequest:personalizationResponse:
radioStationTracks
setRadioStationTracks:
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
initWithPlaybackContext:
updatePlaybackCoordinator:
getTailPlaceholderItemAndState:
shouldAddOriginalPlaybackContextAfterReplacement
shouldRequestAdditionalItemsAtTail
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
_buildPlaceholder
_inLock_buildPlaceholder
_updateRadioStationPlaybackAuthorizationTokenIfNeeded
_rtcSourceServiceName
dataSource
playbackContext
originalPlaybackContext
setState:
isFrozen
setFrozen:
sectionIdentifier
preferredStartItemIdentifier
rtcSectionHierarchyToken
setRtcSectionHierarchyToken:
stateLock
supplementalPlaybackContext
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_rtcSectionHierarchyToken
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
T{os_unfair_lock_s=I},R,N,V_stateLock
Tq,R,N,V_supplementalPlaybackContextBehavior
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
T@"MPPlaybackContext",R,N,V_playbackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
T@,&,N,V_rtcSectionHierarchyToken
_handleURLBagProviderDidUpdateBagNotification:
boolValue
_updateAllowedBundleIdsIfNecessary:
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_generatePlaybackEndEventFromEvent:withQueueSectionIdentifier:itemIdentifier:cursor:
_handleApplicationTerminationEvent:cursor:
_itemIsPlayingFromQueueSectionIdentifier:itemIdentifier:cursor:
_itemIsPlaceholderFromQueueSectionIdentifier:itemIdentifier:cursor:
_generateAggregateNoncatalogEndEventForCursor:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:containerBeginEvent:cursor:
_getPlaybackDurationForHLSStreamFromStartEvent:toEndEvent:withLimitedCursor:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType:
_updatePAFEvent:withAccountIdentifier:cursor:
_updatePAFEvent:withEnqueuerAccountIdentifier:queueAddEvent:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_updatePAFEvent:withAudioChangeEvent:
_updatePAFEvent:withSharedListeningInfoFromCursor:
_clampTimeValuesForPAFEvent:withDuration:
_finalizePAFEvents:
radioPlayActivityEvents
playActivityController
_allowedBundleIds
_radioPlayActivityEvents
_playActivityController
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
T@"ICPlayActivityController",R,N,V_playActivityController
_cloudCollectionID
_storePlaylistGlobalID
_storePlaylistVersionHash
_init
_shouldRegisterForNotifications
playbackStateCacheState
playbackState
supportedCommandsCacheState
sendCommand:options:completion:
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playQueueIdentifiersForRequest:
playingIdentifierCacheState
playingIdentifier
contentItemCacheStateForIdentifier:
contentItemForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
initWithContextID:
createRemotePlaybackQueue
supportedOnCurrentPlatform
contextID
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
shouldImmediatelyStartPlayback
setShouldImmediatelyStartPlayback:
siriRecommendationID
setSiriRecommendationID:
featureName
setFeatureName:
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
homeKitUserIdentifier
setHomeKitUserIdentifier:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_homeKitUserIdentifier
T@"NSString",R,C,N,V_contextID
TB,N,V_shouldOverrideManuallyCuratedQueue
TB,N,V_shouldImmediatelyStartPlayback
T@"NSString",C,N,V_siriRecommendationID
T@"NSString",C,N,V_featureName
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"ICUserIdentity",C,N,V_userIdentity
T@"NSString",C,N,V_homeKitUserIdentifier
queryQueueWithContextID:query:
initWithContextID:query:
query
firstItem
setFirstItem:
setShuffleType:
_query
_firstItem
_shuffleType
T@"MPMediaQuery",R,N,V_query
T@"MPMediaItem",&,N,V_firstItem
Tq,N,V_shuffleType
radioQueueWithContextID:stationStringID:
initWithContextID:stationStringID:
_stationStringID
T@"NSString",R,N,V_stationStringID
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
T@"NSArray",R,N,V_storeItemIDs
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
geniusQueueWithContextID:seedTrack:
initWithContextID:seedTrack:
seedTrack
_seedTrack
T@"NSURL",R,N,V_seedTrack
customDataQueueWithContextID:identifier:customData:
initWithContextID:identifier:customData:
_customData
T@"NSString",R,N,V_identifier
T@"NSData",R,N,V_customData
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
_autoPlaySection
_metadataObject
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
T@"MPModelGenericObject",R,N,V_metadataObject
deviceActivePlayerPath
systemMusicPathWithRoute:playerID:
pathWithRoute:bundleID:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithDeviceUID:bundleID:pid:playerID:
pathWithRoute:mediaRemotePlayerPath:isResolved:
pathWithCustomOrigin:bundleID:playerID:
initWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
initWithDeviceUID:bundleID:pid:playerID:
isFullyResolved
isInProcess
isSystemMusicPath
representedBundleDisplayName
representedBundleID
resolveWithCompletion:
resolveWithRouteResolvedHandler:completion:
origin
pathByAppendingPlayerIDSuffix:
bundleID
mediaRemotePlayerPath
route
isResolved
deviceUID
_pid
_resolved
_bundleID
_mediaRemotePlayerPath
_route
_deviceUID
T^v,R,N,V_mediaRemotePlayerPath
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
T^v,R,N
T@"NSString",R,N,V_deviceUID
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
playerViewController:willPresentInterstitialTimeRange:
playerViewController:didPresentInterstitialTimeRange:
forwardInvocation:
viewDidLoad
viewDidLayoutSubviews
keyPathsForValuesAffectingShowsPlaybackControls
keyPathsForValuesAffectingPresentationSize
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingIsReadyForDisplay
keyPathsForValuesAffectingIsPictureInPictureActive
keyPathsForValuesAffectingAllowsPictureInPicturePlayback
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
stopPictureInPicture
videoOutputDelegate
setVideoOutputDelegate:
showsPlaybackControls
setShowsPlaybackControls:
presentationSize
videoGravity
setVideoGravity:
videoBounds
isReadyForDisplay
isPictureInPictureActive
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
T@"<MPCVideoOutputDelegate>",W,N
T@"UIViewController",R,N
T{CGSize=dd},R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
readyForDisplay
TB,R,N,GisReadyForDisplay
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
_updateViewControllerHierarchyForPlaybackEngine:
internalController
_videoDebugToken
_videoOutputDelegate
_internalController
T@"AVPlayerViewController",R,N,V_internalController
T@"<MPCVideoOutputDelegate>",W,N,V_videoOutputDelegate
videoOutput:willBeginFullScreenPresentationWithAnimationCoordinator:
videoOutput:willEndFullScreenPresentationWithAnimationCoordinator:
videoOutputShouldAutomaticallyDismissAtPictureInPictureStart:
videoOutputWillStartPictureInPicture:
videoOutputDidStartPictureInPicture:
videoOutputWillStopPictureInPicture:
videoOutputDidStopPictureInPicture:
videoOutput:failedToStartPictureInPictureWithError:
videoOutputShouldDismiss:
_devicePrivateListeningDidChange:
_applicationWillTerminate:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_addEventForAccountIdentifier:cursor:event:nudge:
_snapshotAccount:eventType:event:nudge:
_snapshotAccount:eventType:atTime:
_snapshotDeviceWithEvent:nudge:
_snapshotDeviceAtTime:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkReachabilityAtTime:force:
_snapshotNetworkTypeWithEvent:nudge:
_snapshotNetworkTypeAtTime:
_reachability
requiredPropertiesForStaticMediaClips
startItemIdentifiers
setStartItemIdentifiers:
T@"MPModelRequest",C,N,V_request
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
containerID
setContainerID:
referenceWithMPModelObject:
referenceWithMPModelObject:containerModelPlayEvent:
referenceWithStoreIdentifier:trackInfo:
initWithICRadioContentReference:
ICRadioContentReference
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
mpc_radioContentReference
playbackIntentWithStartItemIdentifiers:
future
setFuture:
_future
T@"MPCFuture",&,N,V_future
initWithQueue:
onSuccess:
onFailure:
onCompletion:
onInvalid:
finishWithValue:
finishWithError:
invalidate
disconnect
_onQueue_finalize
result
isFinalized
isInvalid
isDisconnected
debugLabel
setDebugLabel:
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_disconnected
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSMutableArray",R,N,V_successBlocks
T@"NSMutableArray",R,N,V_failureBlocks
T@"NSMutableArray",R,N,V_completionBlocks
T@"NSMapTable",R,N,V_invalidBlocks
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
disconnected
TB,R,N,GisDisconnected,V_disconnected
T@"NSString",C,N,V_debugLabel
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
setSharedListeningProperties:
_sharedListeningProperties
T@"MPCPlaybackSharedListeningProperties",C,N,V_sharedListeningProperties
T@"ICLiveLinkIdentity",C,N,V_identity
_playbackUserDefaultsEQPresetDidChangeNotification:
_preferredResolutionDidChange:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
initWithPlaybackEngine:stackController:translator:
configureQueuePlayerItem:error:
updatePlayerConfiguration
_setupRoutingController
_setupNotifications
setupDefaultsDebouncer
tearDownDefaultsDebouncer
processAudioQualityChanges
_setupPlayer
_setupQueueItemForEnhancedAudioHLSPlayback:metadataWaitTime:error:
_setupQueueItemForLossyAudioPlayback:
_emitAudioFormatSelection:item:
_audioFormatsDictionaryWithHLSMetadataFromAsset:metadataWaitTime:error:
_HLSMetadataForAsset:error:
_audioFormatsDictionaryWithHLSMetadata:
currentAudioRoute
updateCurrentAudioRouteWithPickedRoutes:
queuedItems
_modeObjectForPlayerItem:
_shouldReloadEntireQueue
_updateQueueItemsAndPlayerForFormatChangeIfRequired
_updatePreferredAudioFormatIfRequiredForItem:route:
routingController
eqSetting
setEqSetting:
stackController
userDefaultsDebouncer
setUserDefaultsDebouncer:
currenItem
_currentAudioRoute
_routingController
_eqSetting
_stackController
_userDefaultsDebouncer
_currenItem
T@"MPPlaybackEQSetting",&,N,V_eqSetting
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_stackController
T@"NSObject<OS_dispatch_source>",&,N,V_userDefaultsDebouncer
T@"MPAVRoutingController",R,N,V_routingController
T@"MPCPlayerAudioRoute",R,N,V_currentAudioRoute
T@"MPCModelGenericAVItem",R,W,N,V_currenItem
_timeZoneName
_uuid
_privateListeningEnabled
configureExternalPlaybackForPlayer:queueItem:
pickBestDeviceRoute
initWithPlaybackEngine:translator:
isExternalPlaybackAllowedForItem:
playerShouldUseAudiOnlyMode:item:externalScreenType:
exernalPlaybackRouteRestrictionForItem:route:isScreenMirroringActive:
_representativeItemCloudID
_artistName
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_cacheArtworkRepresentation:forKey:
_clearCache
_setCacheSize:preserveExisting:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
_initWithType:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_participant
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"MPCSharedListeningEventParticipant",R,N,V_participant
Tq,R,N,V_type
T@"MPCSharedListeningSessionEvent",R,N,V_sessionEvent
T@"MPCSharedListeningPlaybackEvent",R,N,V_playbackEvent
T@"MPCSharedListeningQueueEvent",R,N,V_queueEvent
T@"MPCSharedListeningReactionEvent",R,N,V_reactionEvent
T@"MPCSharedListeningCustomEvent",R,N,V_customEvent
participantWithSharedListeningIdentifier:externalIdentifier:
sharedListeningIdentifier
externalIdentifier
_sharedListeningIdentifier
_externalIdentifier
T@"NSUUID",R,C,N,V_sharedListeningIdentifier
T@"NSString",R,C,N,V_externalIdentifier
initWithLocalizedMessage:
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
initWithKind:
initWithKind:item:
kind
_kind
Tq,R,N,V_kind
T@"MPModelGenericObject",R,N,V_item
queueEventWithAddedContent:
queueEventWithPlayedNowContent:
queueEventWithRemovedContent:
queueEventWithReorderedContent:
queueEventWithReplacedContent:
queueEventWithContentUpdatedMessage:
queueEventWithPlaybackModeChanged:
addedContent
removedContent
reorderedContent
replacedContent
playedNowContent
contentUpdatedMessage
playbackMode
_addedContent
_removedContent
_reorderedContent
_replacedContent
_playedNowContent
_contentUpdatedMessage
_playbackMode
T@"MPCSharedListeningQueueEventContentAdded",R,N,V_addedContent
T@"MPCSharedListeningQueueEventContentRemoved",R,N,V_removedContent
T@"MPCSharedListeningQueueEventContentReordered",R,N,V_reorderedContent
T@"MPCSharedListeningQueueEventContentReplaced",R,N,V_replacedContent
T@"MPCSharedListeningQueueEventContentPlayedNow",R,N,V_playedNowContent
T@"MPCSharedListeningQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"MPCSharedListeningQueueEventPlaybackModeChanged",R,N,V_playbackMode
initWithItems:container:
container
_container
T@"MPModelGenericObject",R,N,V_container
T@"NSArray",R,C,N,V_items
initWithItems:container:startItem:
startItem
_startItem
T@"MPModelGenericObject",R,C,N,V_startItem
initWithItem:
T@"MPModelGenericObject",R,C,N,V_item
initWithStartItem:
initWithLocalizedTitle:localizedMessage:
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
autoPlayEnabled
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
initWithReaction:reactionIdentifier:item:
reactionIdentifier
reaction
_reactionIdentifier
_reaction
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
sendCommand:withOptions:toEndpoint:toDestination:completion:
_checkForAccount:destination:origin:queue:completion:
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
_sendCommand:path:options:queue:completion:
_isAnyDeviceControllable:
_findEndpointFromEndpoints:byGroupLeader:
_connection
_discovery
initWithReturnStatuses:error:
initWithCommandResult:error:
returnStatuses
commandResult
devicesControlled
setDevicesControlled:
_returnStatuses
_commandResult
_devicesControlled
T@"NSArray",R,N,V_returnStatuses
T@"MRCommandResult",R,N,V_commandResult
T@"NSNumber",C,N,V_devicesControlled
initWitDatabaseImportResult:accumulatorImportResult:
serverObjectDatabaseImportResult
accumulatorImportResult
_accumulatorImportResult
_serverObjectDatabaseImportResult
T@"MPServerObjectDatabaseImportResult",R,C,N,V_serverObjectDatabaseImportResult
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N,V_accumulatorImportResult
currentDeviceDelegateInfo
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
playingItem
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
_determineChangeItemSupport
lastChangeDirection
upNextItemCount
explicitContentState
displayItems
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_explicitContentState
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
T@"MPSectionedCollection",R,C,N,V_displayItems
Tq,R,N,V_playingItemGlobalIndex
Tq,R,N,V_globalItemCount
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
Tq,R,N,V_upNextItemCount
Tq,R,N,V_explicitContentState
T@"MPCPlayerResponseItem",R,N
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
indexPathForItemWithIdentifiersIntersectingSet:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
initWithResponse:playingItemIndexPath:
setPlayingItemIndexPath:
T@"NSIndexPath",&,N,V_playingItemIndexPath
initWithTracklistItems:playingItemIndexPath:
sections
sectionRanges
_sections
_sectionRanges
T@"NSArray",R,N,V_sections
T@"NSDictionary",R,N,V_sectionRanges
clear
clearUpNextItems
replaceWithPlaybackIntent:
replaceWithPlaybackIntent:replaceIntent:
specializedIntents
devices
setDevices:
supportedSpecializedQueues
setSupportedSpecializedQueues:
supportsSetQueueCommand
setSupportsSetQueueCommand:
supportedQueueTypes
setSupportedQueueTypes:
supportedCustomDataQueueIdentifiers
setSupportedCustomDataQueueIdentifiers:
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
T@"NSArray",C,N,V_devices
T@"NSDictionary",&,N,V_supportedSpecializedQueues
TB,N,V_supportsSetQueueCommand
T@"NSSet",&,N,V_supportedQueueTypes
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_insertWithOptions:
_createRadioStationCommandRequest
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
setSupportsCreateStation:
supportedInsertionPositions
setSupportedInsertionPositions:
_supportsCreateStation
_supportedInsertionPositions
TB,N,V_supportsCreateStation
T@"NSSet",&,N,V_supportedInsertionPositions
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
setRepeatType:
advance
supportedRepeatTypes
currentRepeatType
setCurrentRepeatType:
setSupportedRepeatTypes:
supportsChangeRepeat
setSupportsChangeRepeat:
supportsAdvanceRepeat
setSupportsAdvanceRepeat:
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
TB,N,V_supportsChangeRepeat
TB,N,V_supportsAdvanceRepeat
supportedShuffleTypes
currentShuffleType
setCurrentShuffleType:
setSupportedShuffleTypes:
supportsChangeShuffle
setSupportsChangeShuffle:
supportsAdvanceShuffle
setSupportsAdvanceShuffle:
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
TB,N,V_supportsChangeShuffle
TB,N,V_supportsAdvanceShuffle
setQueueEndAction:
supportedActions
setSupportedActions:
_supportedActions
T@"NSArray",&,N,V_supportedActions
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
initWithResponse:changeItemSupport:
changeItemSupport
TQ,R,N,V_changeItemSupport
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
isValidContainerIdentifier:
containerInfoForItem:
hasActiveRadioStation
isAutoPlayEnabled
isAutoPlayAvailable
setAutoPlayEnabled:completion:
isAutoPlayItem:
removeItem:
removeItems:
removeAllItemsAfterItem:
addPlaybackContext:atPosition:afterItem:actions:completion:
didJumpToItem:
endSynchronizedPlayback
interposingHost
setInterposingHost:
sharedSessionIdentifier
queueExplicitContentState
T@"<MPCQueueControllerCommandInterposingHost>",W,N
engine:didEndSharedListeningSessionWithError:
localizedCaseInsensitiveCompare:
engine:didReceiveSharedListeningEvent:
requestedPropertySetForEngine:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
queueReferencesWithMaxCount:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
isStartItem:
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:allowReuse:
playerItemDidResignCurrent:
playerItemDidBecomeCurrent:
canSkipInDirection:fromQueueItem:
setCurrentItem:
updatePlayerPlaybackCoordinator:
T@"MPAVItem",&,N
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
emitEventsForParticipants:localUserIdentifier:
emitEventsForAddedSharedListeningContainerInfo:
emitSharedListeningEvent:
explicitContentStateDidChange:
autoPlayEnabledDidChange:
requestedPropertySetForEvents
sessionDidEnd
sharedCurrentItemChangedToItem:inSection:byParticipant:
isCurrentItemFromAutoPlay
incrementVersionForSegment:
setAllowsQueueModifications:
addPlaybackContext:afterContentItemID:completion:
addPlaybackContext:atPosition:completion:
addPlaybackContext:atPosition:jumpToIt:completion:
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
canPreviousTrackForItem:reason:
canNextTrackForItem:reason:
clearUpNext
contentItemIDAtIndex:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
finalizeStateRestorationWithCompletion:
displayCount
displayIndexForContentItemID:
isPlaceholderItemForContentItemID:
updateLocationDependentPropertiesForItem:
itemForContentItemID:
canJumpToContentItemID:reason:
jumpToContentItemID:
jumpToContentItemID:userInitiated:
jumpToFirstContentItem
moveContentItemID:afterContentItemID:completion:
moveContentItemID:beforeContentItemID:completion:
currentItemDidChangeFromItem:toItem:
setQueueCoordinator:
resetWithIdentifier:
revisionString
setAutoPlayEnabled:
reloadItemsKeepingCurrentItem:
resetSharedListening
reloadWithPlaybackContext:completionHandler:
removeContentItemID:completion:
canUserChangeShuffleModeWithReason:
canUserChangeRepeatTypeWithReason:
canUserEnableAutoPlayWithReason:
queueCoordinator:itemToFollowItem:
queueCoordinatorDidChangeItems:
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
firstContentItemIDForItemIntersectingIdentifierSet:
_queueIDPairForIdentifierListIDPair:
_identifierListIDPairForQueueIDPair:
_accountForAutoPlay
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_applyVolumeNormalizationForQueuedItems
_allDataSourcesSupportInsertionPositionLast
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
_currentItemDidChangeFromItem:toItem:
_emitEventsForAddingPlaybackContext:sectionIdentifier:sharedListeningContainerInfo:
_emitEventsForItemChangeFromItem:toCurrentItem:
_autoplayMode
_emitEventsForPlaybackBehaviorChange
_findDataSourceToLoadItemsAfterItem:sectionIdentifier:withLoadingBlock:
_findDataSourceToLoadItemsAfterItem:deletedItemsCount:sectionIdentifier:withLoadingBlock:
_firstContentItemID
_firstContentItemIDInSection:
_getSharedQueueTracklistWithCompletion:
_isAutoPlayItem:inSection:
_identifierListForSection:
_itemForContentItemID:allowReuse:
_itemForPair:
_loadAdditionalItemsIfNeededForDataSourceState:preferredItemCount:completion:
_loadItemsAfterItemsDeletedIfNeededDeletedItemsCount:
_loadItemsForAutoplaySessionWithDeletedItemsCount:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_privateListeningSourceForContext:
_stateDictionaryIncludingIdentifierList:
commandInterposingDataSource
_transitionToAutoPlayState:
hasUserMutations
allowsQueueModifications
queueCoordinator
nextContentItemID
setNextContentItemID:
deferredNextContentItemAnchorID
setDeferredNextContentItemAnchorID:
coderVersions
setCoderVersions:
nextContentItemIDReason
setNextContentItemIDReason:
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
missingIdentifierSetForDebugging
setMissingIdentifierSetForDebugging:
previousSectionIDsForDebugging
setPreviousSectionIDsForDebugging:
currentStartItemIdentifier
setCurrentStartItemIdentifier:
isInSharedListeningMode
setInSharedListeningMode:
rtcSessionHierarchyToken
setRtcSessionHierarchyToken:
identifierList
setIdentifierList:
autoPlayIdentifierList
setAutoPlayIdentifierList:
dataSources
setDataSources:
_playbackCoordinator
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_inSharedListeningMode
_preferredFirstContentItemID
_currentItem
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_missingIdentifierSetForDebugging
_previousSectionIDsForDebugging
_currentStartItemIdentifier
_rtcSessionHierarchyToken
_identifierList
_autoPlayIdentifierList
_dataSources
T@"NSString",C,N,V_nextContentItemID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
T@"NSMutableDictionary",&,N,V_coderVersions
Tq,N,V_nextContentItemIDReason
Tq,N,V_autoPlayState
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
TB,N,V_autoPlayIsTriggered
T@"<MPCQueueControllerCommandInterposing>",R,N
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
Td,R,N,V_lastSavedTime
T@"MPIdentifierSet",C,N,V_missingIdentifierSetForDebugging
T@"NSArray",C,N,V_previousSectionIDsForDebugging
T@"NSString",C,N,V_currentStartItemIdentifier
inSharedListeningMode
TB,N,GisInSharedListeningMode,V_inSharedListeningMode
T@,&,N,V_rtcSessionHierarchyToken
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
TB,R,N,V_hasUserMutations
T@"MPAVItem",R,N,V_currentItem
T@"<MPCQueueControllerDelegate>",W,N,V_delegate
T@"<MPCQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
enumeratorWithQueueController:mode:options:startPosition:endPosition:
nextObject
_buildEnumerator
mode
enumerator
startPosition
endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
T@"MPCQueueController",R,W,N,V_queueController
Tq,R,N,V_mode
T@"NSEnumerator",R,N,V_enumerator
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
itemResult
trackingEntryResult
branchDepth
entryType
itemIdentifier
isRemoved
removed
TB,R,N,GisRemoved
initWithSectionIdentifier:
preferredItemCount
setPreferredItemCount:
_preferredItemCount
Tq,N,V_preferredItemCount
initWithPlaybackRequestEnvironment:
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
_responseQueue
_dequeuePendingActions
_emitNewContainerIfNeededForResponse:
_enqueuePendingActionWithLabel:itemIdentifier:block:
_handleDirectCurrentItemChangedToItemIdentifier:participant:
_handleUpdatedSharedListeningQueue:
_ICSharedListeningForMPSILItemIdentifier:
_ICSharedListeningForMPSILItemIdentifiers:
_MPSILItemIdentifierForICSharedListeningItemIdentifier:
_mpcSharedListeningEventForICLiveLinkEvent:
_playbackItemsRequestForQueue:
_purgePendingActionsWithLabel:
_requiredItemIdentifierForEvent:
_sectionedCollectionForQueue:
_updatePlayerLiveLinkConnection
_transitionToState:
completionStartItemIdentifier
setCompletionStartItemIdentifier:
completionError
setCompletionError:
initialQueueCompletion
requestedPropertySet
setRequestedPropertySet:
pendingActions
setPendingActions:
knownContainerIDs
setKnownContainerIDs:
lastKnownExplicitContentState
setLastKnownExplicitContentState:
lastKnownAutoPlayEnabled
setLastKnownAutoPlayEnabled:
lastKnownAutoPlayAvailable
setLastKnownAutoPlayAvailable:
shouldRefreshBeforeActive
setShouldRefreshBeforeActive:
deferredDirectCurrentItemIdentifier
setDeferredDirectCurrentItemIdentifier:
deferredDirectCurrentItemParticipant
setDeferredDirectCurrentItemParticipant:
hasPendingPlayNowInFlight
setHasPendingPlayNowInFlight:
deferredPlayNowCurrentItemIdentifier
setDeferredPlayNowCurrentItemIdentifier:
playbackCoordinator
setPlaybackCoordinator:
_lastKnownAutoPlayEnabled
_lastKnownAutoPlayAvailable
_shouldRefreshBeforeActive
_hasPendingPlayNowInFlight
_interposingHost
_completionStartItemIdentifier
_completionError
_initialQueueCompletion
_requestedPropertySet
_pendingActions
_knownContainerIDs
_lastKnownExplicitContentState
_deferredDirectCurrentItemIdentifier
_deferredDirectCurrentItemParticipant
_deferredPlayNowCurrentItemIdentifier
T@"NSString",C,N,V_completionStartItemIdentifier
T@"NSError",&,N,V_completionError
T@?,R,C,N,V_initialQueueCompletion
T@"MPCPlaybackRequestEnvironment",&,N,V_playbackRequestEnvironment
T@"MPPropertySet",C,N,V_requestedPropertySet
T@"NSMutableArray",&,N,V_pendingActions
T@"NSMutableSet",&,N,V_knownContainerIDs
Tq,N,V_lastKnownExplicitContentState
TB,N,V_lastKnownAutoPlayEnabled
TB,N,V_lastKnownAutoPlayAvailable
TB,N,V_shouldRefreshBeforeActive
T@"NSString",C,N,V_deferredDirectCurrentItemIdentifier
T@"ICLiveLinkIdentity",&,N,V_deferredDirectCurrentItemParticipant
TB,N,V_hasPendingPlayNowInFlight
T@"NSString",C,N,V_deferredPlayNowCurrentItemIdentifier
T@"AVPlayerPlaybackCoordinator",W,N,V_playbackCoordinator
T@"<MPCQueueControllerCommandInterposingHost>",W,N,V_interposingHost
modelObject
setModelObject:
_modelObject
T@"NSString",C,N,V_identifier
T@"MPModelGenericObject",&,N,V_modelObject
setItemIdentifier:
expirationDate
setExpirationDate:
block
setBlock:
_itemIdentifier
_expirationDate
_block
T@"NSString",C,N,V_itemIdentifier
T@"NSDate",C,N,V_expirationDate
T@?,C,N,V_block
shouldPreroll
allowScreenRecording
initWithPlaybackUserDefaults:
userDefaults
setUserDefaults:
_userDefaults
T@"MPPlaybackUserDefaults",&,N,V_userDefaults
playPerfAnalyticsWithIdentifier:willPlayImmediately:
didReceivePlayRequest
itemDidBecomeCurrent:
itemDidFailToLoad:error:
playbackDidStopForItem:
playbackRateDidChangeForItem:rate:
playbackIsLikelyToKeepUp:forItem:
itemIsReadyToPlay:
firstFrameWillRenderForItem:machAbsoluteTime:
waitForLikelyToKeepUpSignpost
setWaitForLikelyToKeepUpSignpost:
waitForReadyToPlaySignpost
setWaitForReadyToPlaySignpost:
playToSetRateSignpost
setPlayToSetRateSignpost:
setRateToEffectiveRateSignpost
setSetRateToEffectiveRateSignpost:
_waitForLikelyToKeepUpSignpost
_waitForReadyToPlaySignpost
_playToSetRateSignpost
_setRateToEffectiveRateSignpost
T@"NSString",&,N,V_identifier
T@"MPCWaitForLikelyToKeepUp",&,N,V_waitForLikelyToKeepUpSignpost
T@"MPCWaitForReadyToPlaySignpost",&,N,V_waitForReadyToPlaySignpost
T@"MPCPlayToSetRateSignpost",&,N,V_playToSetRateSignpost
T@"MPCSetRateToEffectiveRateSignpost",&,N,V_setRateToEffectiveRateSignpost
localDeviceSource
staticSourceWithValue:
sourceWithUserIdentity:
setOverrideValue:
overrideValue
sourceType
currentValue
_overrideValue
_currentValue
T@"NSNumber",R,C,N,V_currentValue
T@"NSNumber",C,N,V_overrideValue
_initWithValue:
_value
_handleUserIdentityStoreDidChangeNotification:
_handleHomeUserPrivateListeningDidChangeNotification:
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
_initWithUserIdentity:
_loadCurrentValueFromIdentityProperties
_cachedValue
modifySystemMusicContextForDestination:completion:
modifySystemMusicContextForEndpointDestination:completion:
modifySystemMusicContextForEndpointDestination:discoveryHandler:completion:
_updateDiscoverableDeviceList:deviceInfo:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
_discoverLocalEndpointFromStereoPairUsingDeviceInfo:completion:
_modifyOutputDevices:onEndpoint:completion:
shouldSearchForLogicalDevices
modificationInProgress
setModificationInProgress:
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
switchToAlternativeFormat:
preferredTiers
T@"MPCPlayerAudioFormat",R,N
T@"MPCPlayerAudioRoute",R,N
initWithModelGenericObject:indexPath:response:
seekCommand
playbackRateCommand
likeCommand
dislikeCommand
wishlistCommand
rateCommand
musicAudio
_determineSeekSupport
_buildLanguageOptionGroups:currentLanguageOptions:
_feedbackCommandWithMediaRemoteCommand:
contentItemIdentifier
revision
duration
localizedDurationString
languageOptionGroups
indexPath
enqueueingParticipant
isPlaceholder
isAutoPlay
_seekSupport
_placeholder
_autoPlay
_preferredTiers
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_enqueueingParticipant
_duration
T@"NSIndexPath",R,N,V_indexPath
T@"MPCPlayerResponseParticipant",R,N,V_enqueueingParticipant
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,C,N,V_localizedDurationString
T@"NSString",R,C,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"<MPCPlayerResponseItemMusicAudio>",R,N
T@"MPCPlayerAudioFormat",R,N,V_preferredFormat
T@"MPCPlayerAudioFormat",R,N,V_activeFormat
TQ,R,N,V_preferredTiers
Tq,R,N,V_activeFormatJustification
T@"NSArray",R,N,V_alternateFormats
T@"MPCPlayerAudioRoute",R,N,V_audioRoute
contentItemID
setContentItemID:
T@"NSString",C,N,V_contentItemID
jumpByInterval:
changePositionToElapsedInterval:
preferredBackwardJumpIntervals
preferredForwardJumpIntervals
T@"NSArray",R,C,N
initWithResponse:seekSupport:
_seekCommandWithMediaRemoteCommand:options:
seekSupport
prefersNegativeBackwardSkipIntervals
setPrefersNegativeBackwardSkipIntervals:
setPreferredBackwardJumpIntervals:
setPreferredForwardJumpIntervals:
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
TQ,R,N,V_seekSupport
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
setPlaybackRate:
supportedPlaybackRates
preferredPlaybackRate
setSupportedPlaybackRates:
setPreferredPlaybackRate:
_preferredPlaybackRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
changeValue:
localizedShortTitle
presentationStyle
value
initWithResponse:mediaRemoteCommand:
setLocalizedShortTitle:
setPresentationStyle:
setValue:
_localizedShortTitle
_presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
setMinimumValue:
setMaximumValue:
_minimumValue
_maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
setCloudUniversalLibraryID:
newPlayActivityEvent
recordPlayActivityEvents:forEventSource:
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
isOffline
setOffline:
_recordEventOperationQueue
_reportingController
_offline
offline
TB,N,GisOffline,V_offline
identityPropertiesLoader
setIdentityPropertiesLoader:
eventDuration
setEventDuration:
overrideItemType
setOverrideItemType:
lyricsID
setLyricsID:
itemGenericObject
setItemGenericObject:
isPrivateListeningEnabled
setPrivateListeningEnabled:
setShouldReportPlayEventsToStore:
modelPlayEvent
setModelPlayEvent:
setJingleTimedMetadata:
recommendationData
setRecommendationData:
requestingBundleIdentifier
setRequestingBundleIdentifier:
requestingBundleVersion
setRequestingBundleVersion:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
Td,N,V_eventDuration
TQ,N,V_overrideItemType
T@"NSString",C,N,V_lyricsID
T@"MPModelGenericObject",&,N,V_itemGenericObject
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
T@"NSData",C,N,V_recommendationData
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
_fileSize
_albumArtistName
_albumDiscCount
_albumName
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
getSharedListeningTracklistWithCompletion:
_enqueueDataForPlaybackChangingEvent:cursor:
_JSONEncodableEvent:
engagement
_engagement
T@"AMSEngagement",R,N,V_engagement
_containerType
setType:
explanation
setExplanation:
justification
setJustification:
_explanation
_justification
Tq,N,V_type
T@"NSString",C,N,V_explanation
T@"NSDictionary",C,N,V_justification
initWithExplanation:justification:
format
setFormat:
_format
T@"MPCPlayerAudioFormat",&,N,V_format
sharedSelector
T@"MPCAudioAssetTypeSelector",R,N
initWithPlaybackUsersDefaults:environmentMonitor:probabilityOfProgressiveDownloadAssets:
updateProbabilityOfProgressiveDownloadAssets:
userPrefersMultichannelAudioOverStereo:
audioFormatPreference
preferredAudioAssetTypeForItem:
preferredAudioAssetTypeForSongWithTrait:
preferredAudioFormatForAudioFormats:route:
preferredPlayerAudioFormatForItem:route:
audioFormatMatchingAudioAssetType:formats:route:
spatialIsAutomatic
spatialIsAlwaysOn
spatialIsOff
prefersSpatialOverStereo:
prefersSpatialOverLossless
prefersHighResolutionLossless
prefersLossless
prefersHighQualityStereo
prefersLowQualityStereo
networkBandwidthIsHigh
descriptionForTraits:
descriptionForTiers:
preferencesDescription
environmentDescription
tierMatchingAudioAssetType:
defaults
setDefaults:
environmentMonitor
setEnvironmentMonitor:
outcomeGenerator
_defaults
_environmentMonitor
_outcomeGenerator
T@"MPPlaybackUserDefaults",&,N,V_defaults
T@"ICEnvironmentMonitor",&,N,V_environmentMonitor
T@"MSVABTestGenerator",R,N,V_outcomeGenerator
sharedManager
T@"MPCExplicitContentAuthorizationManager",R,N
isItemAuthorized:
isItemAuthorized:shouldAskForAuthorization:
authorizationReason
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
_setupWithAgeGateForItem:
_setupWithAgeVerificationState:
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
_explicitContentErrorWithUnderlyingError:message:
authorizationError
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_authorizationError
_lastKnownAgeVerificationState
T@"NSError",C,N,V_authorizationError
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
mpc_setupWithAudioAssetType:forceSpatial:
mpc_setupWithPlayerAudioFormat:forceSpatial:downloadedAsset:
mpc_updateAVVariantPreferenceForAudioAssetType:forceSpatial:
mpc_updateAVAudioSpatializationFormatsForAudioAssetType:
mpc_updatePreferredMaximumAudioSampleRateForAudioAssetType:
mpc_updatePreferredForwardBufferDurationForAudioAssetType:
mpc_updateAVVariantPreferenceForPlayerAudioFormat:forceSpatial:
mpc_updateAVAudioSpatializationFormatsForPlayerAudioFormat:
mpc_updatePreferredMaximumAudioSampleRateForPlayerAudioFormat:
mpc_updatePrefersOfflinePlayableVariantForPlayerAudioFormat:isDownloadedAsset:
mpc_updatePreferredForwardBufferDurationForPlayerAudioFormat:
mpc_setupDescription
identifierForMFQueuePlayerItem:
repeatIndex
setRepeatIndex:
initWithContentItemID:repeatIndex:
_repeatIndex
Tq,N,V_repeatIndex
initWithDuration:
Td,R,N,V_duration
avPlayerItem
time
hasLoadableAsset
isFullyDownloaded
isVideoContent
setIsVideoContent:
isMovieOrTVShow
playbackStartTimeOverride
setPlaybackStartTimeOverride:
playbackStartTime
setCurrentItemTransition:
itemID
setItemID:
gaplessParameters
crossFadeParameters
shouldPerformGaplessTransitionWith:
shouldPerformCrossFadeTransitionWith:
_isInContiguousAlbumWith:
isAssetLoaded
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
T@"<MFGaplessParameters>",R,N
T@"<MFCrossFadeParameters>",R,N
Td,N
T@"<MPCItemIdentifier>",R,C,N
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
mediaRemoteReplyQueue
controllerForPlayerPath:
sendCommand:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
overlayVisualIdenticalityForCatalog:
overlayScaledFittingSizeForCatalog:scaledFittingSize:
artworkCatalog:willConfigureView:
artworkCatalog:didConfigureView:withRepresentation:
artworkCatalog:didClearFromView:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
contentItemArtworkCacheStateForArtworkIdentifier:size:
_artworkCatalogBlockForContentItem:
_createExportableArtworkPropertiesForContentItem:
_legacyCommands
_onQueue_identifiersForRange:
_onQueue_mergeContentItems:queueRange:requestRange:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_stateDictionary
queueIdentifierCacheState
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticPlayingItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
setAccessQueue:
setCalloutQueue:
resolvedPlayerPath
setResolvedPlayerPath:
invalidationToken
setInvalidationToken:
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@,&,N,V_invalidationToken
Tq,R,N,V_playbackStateCacheState
Tq,R,N,V_supportedCommandsCacheState
Tq,R,N,V_playingIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
commandInfoForCommand:
allCommandInfos
radioStationURL
setRadioStationURL:
_radioStationURL
T@"NSURL",C,N,V_radioStationURL
MPC_consumeSiriAssetInfo:playActivityFeatureName:userIdentity:completion:
connectToEndpoint:completion:
initWithDatabaseCreationBlock:
initWithParameters:
addConsumer:
removeConsumer:
eventDeliveryDeferralAssertionForReason:timeout:
eventDeliveryDeferralAssertionForReason:
emitEventType:payload:
emitEventType:payload:atTime:
flushEvents
flushEventsWithConsumer:fromTimestamp:untilTimestamp:
lastEvent
lastEventsWithCount:
setMaximumEventDeliveryTimestamp:
resetConsumerEventDeliveryToTimestamp:
engineID
_deferralAssertionsLock
_invalidated
_engineID
_subscriptions
_deferralAssertions
_cachedEvents
_cacheMisses
_cacheHits
_database
_queue
_scheduledFlushes
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
T@"MPCPlaybackEngineEvent",R,N
T@"NSString",R,N,V_engineID
subscribeToEventType:handler:
subscribeToEventType:options:handler:
flushEventsWithCompletion:
cancelSubscription
streamID
initWithConsumer:eventStream:
_onQueue_flush
consumer
lastEventSuccessTimestamp
setLastEventSuccessTimestamp:
maximumEventDeliveryTimestamp
mutatingEventHandlers
eventHandlers
_consumer
_streamID
_lastEventSuccessTimestamp
_maximumEventDeliveryTimestamp
_mutatingEventHandlers
_eventHandlers
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
T@"NSString",R,C,N,V_streamID
TQ,N,V_lastEventSuccessTimestamp
TQ,N,V_maximumEventDeliveryTimestamp
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
_statementForColumnsExpression:eventTypes:payload:limit:
enumeratePreviousEventsWithType:usingBlock:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
enumeratePreviousEventsWithTypes:usingBlock:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
findPreviousEventWithType:matchingPayload:
findPreviousEventWithTypes:matchingPayload:
countOfPreviousEventsWithType:matchingPayload:
countOfPreviousEventsWithTypes:matchingPayload:
cursorUntilEvent:
cursorFromEvent:untilEvent:
startEvent
endEvent
initWithEventStream:startEvent:endEvent:
_startNS
_endNS
_startEvent
_endEvent
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
T@"MPCPlaybackEngineEvent",R,N,V_startEvent
T@"MPCPlaybackEngineEvent",R,N,V_endEvent
reason
initWithEventStream:reason:timeout:
invalidated
timeoutGuard
_reason
_timeoutGuard
T@"NSString",R,C,N,V_reason
TB,R,N,V_invalidated
T@"MSVBlockGuard",R,N,V_timeoutGuard
initWithRequest:responseHandler:
_executeWithUserIdentity:useMediaAPILookup:
_runMediaAPIRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_importMediaAPICollectionItemMetadataResponse:withError:usingAccumulator:userIdentity:trustID:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_runStorePlatformRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_validateUserIdentityForRequestWithCompletion:
_runPersonalizationWithSectionCollection:localEquivalencyMapping:expirationDate:userIdentity:error:isFinalResponse:isInvalidForPersonalization:networkingTime:
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:
_handleItemMetadataBactchRequestCompletedWithAccumulator:previousResponse:userIdentity:error:isFinalResponse:
_runSubscriptionStatusWithRequestContext:completion:
_activeProgress
_previousModelResponse
_hasReceivedFinalResponse
_hasCalledResponseHandler
_errors
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
_mediaDownloadRequest
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_cacheTracksForStep:
_runStep:withFinishHandler:
_radioQueueFeederPointerForLogging
initWithTracks:tracklistAction:networkingTime:
tracklistAction
tracks
_tracklistAction
_tracks
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
Td,R,N,V_networkingTime
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
integerValue
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
clearUpNextQueueCommand
shareQueueCommand
debugCommand
T@"MPRemoteCommand",R,N
T@"MPCDebugCommand",R,N
initWithMediaRemoteCommandType:
setSupportedSubsystems:
setSubsystemRevisions:
_mediaRemoteCommandInfoOptions
supportedSubsystems
subsystemRevisions
_supportedSubsystems
_subsystemRevisions
T@"NSArray",C,N,V_supportedSubsystems
T@"NSDictionary",C,N,V_subsystemRevisions
_applicationWillEnterForegroundNotification:
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_optimisticallyFetchLeaseForAccount:
scheduleMiniSINFFetch
_fetchMiniSINFsWithCompletion:
_prewarmMiniSINFEndpointForAccount:
_prewarmSAPSigningForAccount:
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
initWithEndpointURL:maximumBatchSize:requestContext:
endpointURL
maximumBatchSize
_endpointURL
_maximumBatchSize
T@"NSURL",R,C,N,V_endpointURL
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
mediaServerDidDie:
mediaServerDidRestart:
initWithRefreshRate:delegate:
initWithPID:refreshRate:delegate:
_createProcessTapWithNumberOfFrames:sampleRate:
setupNotifications
tearDownNotifications
numberOfFrames
setNumberOfFrames:
isEnabled
setEnabled:
_monoAudioBuffer
_enabled
_numberOfFrames
TI,N,V_numberOfFrames
T@"<MPCProcessAudioTapDelegate>",W,N,V_delegate
TI,R,N,V_sampleRate
enabled
TB,N,GisEnabled,V_enabled
systemMediaApplicationDestination
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
initWithAppBundleID:playerID:origin:
initWithAppBundleID:
createPlayerPath
resolveWithHashedRouteIdentifiers:completion:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
_copyWithZone:usingConcreteClass:
_getCompanionOrigin:
appBundleID
outputDeviceUIDs
hashedOutputDeviceUIDs
outputGroups
outputGroupID
originatingOutputDeviceUID
singleGroup
originatingDeviceControl
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_originatingOutputDeviceUID
_singleGroup
_originatingDeviceControl
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
T@"NSArray",R,N,V_outputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
T@"NSArray",R,N,V_outputGroups
T@"NSString",R,N,V_outputGroupID
T@"NSString",R,N,V_originatingOutputDeviceUID
TB,R,N,V_singleGroup
TB,R,N,V_originatingDeviceControl
setAppBundleID:
setOrigin:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
setOutputGroups:
setOutputGroupID:
setOriginatingOutputDeviceUID:
setSingleGroup:
setOriginatingDeviceControl:
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
nowPlayingInfoCenter
remoteCommandCenter
T@"MPNowPlayingInfoCenter",R,N
T@"MPRemoteCommandCenter",R,N
T@"AVAudioSession",R,N
initWithPlayerID:
_nowPlayingInfoCenter
_remoteCommandCenter
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
T@"AVAudioSession",R,N,V_audioSession
_screenBrightnessDidChangeNotification:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
preheatPlayback
requiresMainThread
requestAuthorizationForExplicitItem:reason:completion:
restoreStateWithCompletion:
setQueueHandoffSupported:
setAudioSessionCategory:
setAudioSessionOptions:
addEngineObserver:
removeEngineObserver:
reportUserSeekFromTime:toTime:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
schedulePlaybackStatePreservation
_detectCrashLoopForSessionIdentifier:block:
_initializePlaybackStack
_shouldIgnorePlaybackSessionError:
_updateUISnapshotIfNeeded
isStarted
isPictureInPictureSupported
setPictureInPictureSupported:
isVideoSupported
setVideoSupported:
fallbackPlaybackIntent
setFallbackPlaybackIntent:
isStateRestorationSupported
isQueueHandoffSupported
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
needsUISnapshot
setNeedsUISnapshot:
eventObserver
implementation
mediaRemotePublisher
musicPlayerControllerServer
reportingController
sessionManager
leaseManager
accountManager
fairPlayPerformanceController
initializationParameters
isSystemMusicApplication
audioSessionCategory
audioSessionOptions
isAudioAnalyzerEnabled
audioAnalyzer
_started
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_initializationParameters
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
TB,N,V_needsUISnapshot
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"<MPCVideoOutput>",R,N,V_videoOutput
T@"<MPCPlaybackEngineInitializationParameters>",R,N,V_initializationParameters
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"NSString",R,C,N,V_engineID
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
started
TB,R,N,GisStarted,V_started
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
T@"MPCPlaybackEngine",W,N
originID
initWithPlaybackEngineParameters:engineID:
_originID
T@"NSString",R,C,N,V_originID
sendMetrics:
sharedCache
T@"MPCPlayerPathCache",R,N
observationTokenDescriptionForPlayerPath:
resolvedPlayerPathForPlayerPath:
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:routeResolvedPlayerPath:
playerPathResolutions
playerPathObservers
endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
lossyLowQualityStereoFormat
lossyHighQualityStereoFormat
initWithJSONDictionaryRepresentation:stableVariantID:
initWithNowPlayingInfoAudioFormat:
nowPlayingAudioFormat
initWithDictionaryRepresentation:
debugTierDescription
debugBitRateDescription
debugBitDepthDescription
debugSampleRateDescription
debugCodecDescription
debugChannelCountDescription
debugOriginChannelCountDescription
debugChannelLayoutDescription
debugOriginChannelLayoutDescription
_isSpatialFormat:
_isMultichannelFormat:
_isDerivedFromSpatialFormat:
_isBinauralFormat:
_computedTierFromHLSDataWithChannelCount:
_computedChannelLayoutTagFromHLSData:channelCount:
_isHLSVersion:greatherThanOrEqualTo:
_descriptionForChannelLayoutTag:
analyticsFormatInfo
tier
bitrate
bitDepth
codec
isSpatialized
isMultiChannel
channelLayout
audioChannelLayoutDescription
originChannelLayout
setOriginChannelLayout:
groupID
stableVariantID
_spatialized
_multiChannel
_codec
_channelLayout
_originChannelLayout
_tier
_bitrate
_bitDepth
_audioChannelLayoutDescription
_groupID
_stableVariantID
TI,N,V_originChannelLayout
T@"MPNowPlayingInfoAudioFormat",R,N
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_stableVariantID
Tq,R,N,V_tier
Tq,R,N,V_bitrate
Tq,R,N,V_sampleRate
Tq,R,N,V_bitDepth
TI,R,N,V_codec
spatialized
TB,R,N,GisSpatialized,V_spatialized
multiChannel
TB,R,N,GisMultiChannel,V_multiChannel
TI,R,N,V_channelLayout
T@"NSString",R,N,V_audioChannelLayoutDescription
initWithNowPlayingInfoAudioRoute:
initWithRoute:spatialIsAlwaysOn:
nowPlayingAudioRoute
name
supportsSpatialization
isSpatializationEnabled
canStreamSpatial
canRenderSpatial
multiChannelSupport
_supportsSpatialization
_isSpatializationEnabled
_canStreamSpatial
_canRenderSpatial
_name
_multiChannelSupport
T@"MPNowPlayingInfoAudioRoute",R,N
TB,R,N,V_canStreamSpatial
TB,R,N,V_canRenderSpatial
Tq,R,N,V_multiChannelSupport
T@"NSString",R,C,N,V_name
TB,R,N,V_supportsSpatialization
TB,R,N,V_isSpatializationEnabled
supportsAutoPlay
isCompatibleWithReplacementContext:incompatibleReason:
sharedController
suzeLeaseSession:leaseRenewalDidFailWithError:
T@"MPCSuzeLeaseSessionController",R,N
startLeaseSessionWithConfiguration:completion:
stopLeaseSession:completion:
_leaseIDToLeaseSessionInfo
initWithICLeaseSession:
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
Tq,N,V_clientCount
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
TB,N,V_shouldStopWhenFinished
mpc_jsonValue
payloadValueFromJSONValue:
mpc_errorByRemovingUnserializableUserInfo
modelSong
setModelSong:
visibleDuration
setVisibleDuration:
displayType
setDisplayType:
displayedCharacterCount
setDisplayedCharacterCount:
language
setLanguage:
setSourceType:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
Td,N,V_visibleDuration
Tq,N,V_displayType
Tq,N,V_displayedCharacterCount
T@"NSString",C,N,V_language
Tq,N,V_sourceType
initWithICSuzeLeaseSession:
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
icSuzeLeaseSession
_icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
_itemShouldPreventPlaybackDidChangeNotification:
engine:didPauseForLeaseEndWithError:
engineDidPauseForLeaseEnd:
getHasPreparedLeaseForAccount:completion:
prepareForPlaybackWithAccount:completion:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
prepareForCurrentItemPlayback
setCanStealLeaseIfNeeded
_updateStateForPlaybackPrevention
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
_leaseEndIgnoreReasons
_prepareCompletions
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
T@"NSMutableDictionary",&,N,V_prepareCompletions
storeFrontID
setStoreFrontID:
hasSubscriptionPlaybackCapability
setHasSubscriptionPlaybackCapability:
enqueuerProperties
setEnqueuerProperties:
_hasSubscriptionPlaybackCapability
_storeFrontID
_enqueuerProperties
TQ,N,V_storeAccountID
T@"NSString",C,N,V_storeFrontID
TB,N,V_hasSubscriptionPlaybackCapability
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
initWithURL:
saveWithError:
writeWithError:
packageTypeIdentifier
initWithURL:identifier:
contentItem
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
T@"MPNowPlayingContentItem",C,N,V_contentItem
T@"UIImage",C,N,V_artworkImage
T@"NSDate",R,C,N,V_lastModifiedDate
initWithUserIdentity:subscriptionStatus:
initWithDelegatedUserIdentity:
canAutoPlay
hasCatalogPlaybackCapability
usesLease
requiresAuthorizationTokenForPlayback
subscriptionStatus
hashedDSID
setHashedDSID:
hasCloudLibraryEnabled
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
isDelegated
isActiveAccount
setActiveAccount:
setBag:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
T@"NSString",C,N,V_hashedDSID
TB,N,V_hasCloudLibraryEnabled
T@"NSString",C,N,V_storeFrontIdentifier
activeAccount
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
delegated
TB,R,N,GisDelegated,V_delegated
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_homeUserSettingsChangeNotification:
accounts
hasLoadedInitialAccounts
performAfterLoadingAccounts:
accountForDSID:
accountForHashedDSID:
accountForUserIdentity:
_updateAccounts
_updateAccountsWithAttemptCount:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
_enumerateIdentitiesWithCompletion:
_shouldPurgeGlideSubscriptionDataForAccount:
_needsRefreshDueToTimeout
_initialAccountGroup
T@"MPCPlaybackAccount",R,N
playOnPlayerPath:
T@"MPCPlayerSessionResponse",R,W,N,V_response
T@"NSString",R,N,V_contentItemIdentifier
containsRestorableContent
isSupported
clearStartItem
updateRequestPlaybackEnvironment
assetStoreFronts
setAssetStoreFronts:
encodedMediaLibraryUniqueID
skipEncodingMediaLibraryUniqueID
setSkipEncodingMediaLibraryUniqueID:
allowsJumpToIt
setAllowsJumpToIt:
_skipEncodingMediaLibraryUniqueID
_allowsJumpToIt
_encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
TB,N,V_allowsJumpToIt
T@"NSDictionary",C,N,V_assetStoreFronts
isValidReportingEvent
reportingEventType
playActivityEvent
setPlayActivityEvent:
shouldReportToStore
setShouldReportToStore:
_shouldReportToStore
_playActivityEvent
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
TB,N,V_shouldReportToStore
_finishChangeRequestOperationWithError:
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
setOverridePlayingItem:
_overridePlayingItem
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
sceneCollectionForMetadataItems:
sceneCollectionForScriptData:
_instructionsForSceneDictionaries:
T@"ICUserIdentity",R,N
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_playbackHistoryController
_lyricsReportingController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
initWithTranslator:leaseManager:
setStackController:
T@"<MFPlaybackStackController>",W,N,V_stackController
initWithLanguageOptionGroups:currentLanguageOptions:response:
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
allowEmptySelection
_currentIndex
_allowEmptySelection
T@"NSArray",R,N,V_options
T@"MPNowPlayingInfoLanguageOption",R,N
TB,R,N,V_allowEmptySelection
_accountInfos
_containers
_startingItemIndexPath
itemToFollowItem:direction:distance:reason:
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
initWithQueueController:
MPAVItemForMFPlayerItem:
setMPAVItem:forMFPlayerItem:
resetMapping
_MPAVItemForMFPlayerItem:allowReuse:
mapping
_mapping
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
mpcReporting_isValidReportingItem
T@"<MPCReportingIdentityPropertiesLoading>",R,N
T@"NSData",R,C,N
T@"NSNumber",R,C,N
initWithGetTracksRequest:siriAssetInfo:playActivityController:
initWithPreviousStep:
nextStepWithError:
performWithCompletionHandler:
_fireAndForgetServerDialog:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
playActitySessionToken
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
nextStepWithIdentityProperties:delegatedIdentityProperties:
nextStepWithResponse:error:
nextStepByPerformingButtonAction:
traceWithName:item:event:
traceIntervalWithName:item:beginEvent:endEvent:
endInterval
setItem:
setName:
setEndEvent:
setStarted:
ended
setEnded:
_ended
T@"NSString",&,N,V_name
T@"MPAVItem",W,N,V_item
TI,N,V_endEvent
Td,N,V_started
Td,N,V_ended
shouldAttachAudioTapToItem:
prepareTap:maxFrames:processingFormat:
unprepareTap:
processTap:trackID:numberFrames:flags:audioBufferList:numberFramesOut:flagsOut:
finalizeTap:
T@"<MPCAudioProcessing>",&,N
configureQueueItem:
T@"<MPCAudioProcessing>",&,N,V_selfRef
activeAccountRequestEnvironment
requestEnvironmentWithUserIdentity:
T@"MPCPlaybackRequestEnvironment",R,N
initWithUserIdentity:
_createStoreRequestContext
_createMusicKitRequestContext
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
_copyWithPlaybackRequestEnvironmentClass:
clientVersion
delegationProperties
_clientVersion
_delegationProperties
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
setClientVersion:
setDelegationProperties:
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
sharedReusePool
T@"MPCSharedListeningLiveLinkReusePool",R,N
liveLinkForSessionID:
storeLiveLink:forSessionID:
_sessionIDLiveLinkMap
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
decodeHashedRouteUIDs:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeAllItems
removeExplicitItems
savePlaybackHistoryWithUpdates:
savePlaybackHistoryWithUpdates:completionHandler:
trackModels
trackForItemAtIndex:
tracksByApplyingTracksResponse:currentIndex:
updateWithPersonalizedResponse:
_playbackHistoryStore
_stationTracks
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
T@"ICRadioPlaybackHistory",R,C,N
_playbackHistory
_trackModels
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
deviceUIDsQueue
sendCommand:toDestination:withOptions:completion:
sendCommandWithResult:toDestination:withOptions:completion:
sendPlaybackQueue:toDestination:completion:
sendPlaybackQueueWithResult:toDestination:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendPlaybackQueueWithResult:toDestination:withOptions:completion:
sendPlaybackArchive:toDestination:completion:
sendPlaybackArchive:toDestination:withOptions:completion:
sendPlaybackArchiveWithResult:toDestination:completion:
sendPlaybackArchiveWithResult:toDestination:withOptions:completion:
_applyOriginatingDeviceUIDs:
_findOutputDevicesForDestination:completion:
_setAnalyticsKey:value:
_setAnalyticsError:
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
allowsStoreContainerImport
setAllowsStoreContainerImport:
playEvent
setPlayEvent:
_allowsStoreContainerImport
_playEvent
TB,N,V_allowsStoreContainerImport
T@"MPModelPlayEvent",&,N,V_playEvent
getVolumeLevelForUID:completion:
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
shouldDeferItemLoading
setShouldDeferItemLoading:
initWithStackController:
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
initWithTranslator:
userDidSkipDuringPlaybackFromItem:direction:
currentItemWillChangeFromItem:toItem:time:
itemDidBecomeCurrent:time:
itemDidResignCurrent:time:
itemDidPlayToEnd:time:
playbackDidStartForItem:time:rate:
playbackDidStopForItem:time:
playbackRateDidChangeToRate:forItem:time:
playbackStateDidChangeFromState:toState:forItem:time:rate:
updateDurationSnapshotWithTime:forItem:rate:
_setupBookmarkingTimerForItem:
_teardownBookmarkingTimer
bookmarkingTimer
setBookmarkingTimer:
_bookmarkingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
_allowCellularStreamingDidChangeNotification:
_detectSignOutForIdentityStoreChangeNotification:
_responseDidInvalidateNotification:
sharedQueue
didSignificantlyChangeItem:
itemCount
_updateAdditionalLoadingSupport
_beginObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
_detectSignOutForIdentityStore:
_endObservingIdentityStoreForSignOut
_errorForRequest:withError:
_handleGetTracksResponse:getTracksError:fromRequest:completion:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_isTransientLoadingError:
_loadTracksWithRequest:completion:
_observePersonalizationResponse:
_removeAllTracks
_removeRestrictedTracks
_responseDidInvalidate
_repersonalizeCurrentTracks
_savePlaybackHistoryWithCurrentIndex:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
_hasSignedOut
playMetricsWithFirstFrameEvent:cursor:
playMetricsWithErrorSignature:event:cursor:
eventType
set_eventType:
eventTime
set_eventTime:
set_sectionIdentifier:
set_itemIdentifier:
itemMetadata
set_itemMetadata:
set_featureName:
siriRefId
set_siriRefId:
queueType
set_queueType:
isRemoteSetQueue
set_isRemoteSetQueue:
isShuffled
set_isShuffled:
set_isAutoPlayEnabled:
isSharePlay
set_isSharePlay:
assetType
set_assetType:
assetSource
set_assetSource:
assetLocation
set_assetLocation:
assetCacheAge
set_assetCacheAge:
endpointType
set_endpointType:
subscriptionType
set_subscriptionType:
isDelegatedPlayback
set_isDelegatedPlayback:
hasOnlinePlaybackKeys
set_hasOnlinePlaybackKeys:
hasOfflinePlaybackKeys
set_hasOfflinePlaybackKeys:
formatInfo
set_formatInfo:
routeInfo
set_routeInfo:
networkType
set_networkType:
isFirstPlay
set_isFirstPlay:
isReplacingPlayback
set_isReplacingPlayback:
errorResolution
set_errorResolution:
errorSignature
set_errorSignature:
hasAccountInfo
set_hasAccountInfo:
set_isActiveAccount:
setQueueCommandSendTime
set_setQueueCommandSendTime:
playCommandSendTime
set_playCommandSendTime:
queueLoadWaitTime
set_queueLoadWaitTime:
assetLoadWaitTime
set_assetLoadWaitTime:
readyToPlayStatusWaitTime
set_readyToPlayStatusWaitTime:
playCommandWaitTime
set_playCommandWaitTime:
rateChangeWaitTime
set_rateChangeWaitTime:
firstAudioFrameWaitTime
set_firstAudioFrameWaitTime:
nextItemWaitTime
set_nextItemWaitTime:
lookupWaitTime
set_lookupWaitTime:
getTracksWaitTime
set_getTracksWaitTime:
bagWaitTime
set_bagWaitTime:
leaseWaitTime
set_leaseWaitTime:
suzeLeaseWaitTime
set_suzeLeaseWaitTime:
subscriptionAssetLoadWaitTime
set_subscriptionAssetLoadWaitTime:
mediaRedownloadWaitTime
set_mediaRedownloadWaitTime:
hlsMetadataWaitTime
set_hlsMetadataWaitTime:
sessionActivationWaitTime
set_sessionActivationWaitTime:
checkpointMRSetQueueBegin
set_checkpointMRSetQueueBegin:
checkpointSetQueueBegin
set_checkpointSetQueueBegin:
checkpointRateZero
set_checkpointRateZero:
checkpointSetQueueEnd
set_checkpointSetQueueEnd:
checkpointMRPlay
set_checkpointMRPlay:
checkpointPlay
set_checkpointPlay:
checkpointAssetLoadBegin
set_checkpointAssetLoadBegin:
checkpointItemConfigBegin
set_checkpointItemConfigBegin:
checkpointItemBegin
set_checkpointItemBegin:
checkpointLikelyToKeepUp
set_checkpointLikelyToKeepUp:
checkpointReadyToPlay
set_checkpointReadyToPlay:
checkpointRateOne
set_checkpointRateOne:
checkpointFirstAudioFrame
set_checkpointFirstAudioFrame:
musicTotalTime
musicWaitTime
mediaPlayerTime
networkTime
avTime
addQueueMetadata:
addPlaybackBehaviorWithCursor:
addSharePlayWithCursor:
addAssetLoadInfoWithCursor:itemIDPayload:
addEnvironmentInfoWithCursor:
data
setData:
_data
T@"NSMutableDictionary",&,N,V_data
T@"NSString",&,D,N,Sset_eventType:
T@"NSNumber",&,D,N,Sset_eventTime:
T@"NSString",&,D,N,Sset_sectionIdentifier:
T@"NSString",&,D,N,Sset_itemIdentifier:
T@"NSDictionary",&,D,N,Sset_itemMetadata:
T@"NSString",&,D,N,Sset_featureName:
T@"NSString",&,D,N,Sset_siriRefId:
T@"NSString",&,D,N,Sset_queueType:
T@"NSNumber",&,D,N,Sset_isRemoteSetQueue:
T@"NSNumber",&,D,N,Sset_isShuffled:
T@"NSNumber",&,D,N,Sset_isAutoPlayEnabled:
T@"NSNumber",&,D,N,Sset_isSharePlay:
T@"NSNumber",&,D,N,Sset_assetType:
T@"NSNumber",&,D,N,Sset_assetSource:
T@"NSString",&,D,N,Sset_assetLocation:
T@"NSNumber",&,D,N,Sset_assetCacheAge:
T@"NSNumber",&,D,N,Sset_endpointType:
T@"NSNumber",&,D,N,Sset_subscriptionType:
T@"NSNumber",&,D,N,Sset_isDelegatedPlayback:
T@"NSNumber",&,D,N,Sset_hasOnlinePlaybackKeys:
T@"NSNumber",&,D,N,Sset_hasOfflinePlaybackKeys:
T@"NSDictionary",&,D,N,Sset_formatInfo:
T@"NSDictionary",&,D,N,Sset_routeInfo:
T@"NSNumber",&,D,N,Sset_networkType:
T@"NSNumber",&,D,N,Sset_isFirstPlay:
T@"NSNumber",&,D,N,Sset_isReplacingPlayback:
T@"NSNumber",&,D,N,Sset_errorResolution:
T@"NSString",&,D,N,Sset_errorSignature:
T@"NSNumber",&,D,N,Sset_hasAccountInfo:
T@"NSNumber",&,D,N,Sset_isActiveAccount:
T@"NSNumber",&,D,N,Sset_setQueueCommandSendTime:
T@"NSNumber",&,D,N,Sset_playCommandSendTime:
T@"NSNumber",&,D,N,Sset_queueLoadWaitTime:
T@"NSNumber",&,D,N,Sset_assetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_readyToPlayStatusWaitTime:
T@"NSNumber",&,D,N,Sset_playCommandWaitTime:
T@"NSNumber",&,D,N,Sset_rateChangeWaitTime:
T@"NSNumber",&,D,N,Sset_firstAudioFrameWaitTime:
T@"NSNumber",&,D,N,Sset_nextItemWaitTime:
T@"NSNumber",&,D,N,Sset_lookupWaitTime:
T@"NSNumber",&,D,N,Sset_getTracksWaitTime:
T@"NSNumber",&,D,N,Sset_bagWaitTime:
T@"NSNumber",&,D,N,Sset_leaseWaitTime:
T@"NSNumber",&,D,N,Sset_suzeLeaseWaitTime:
T@"NSNumber",&,D,N,Sset_subscriptionAssetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_mediaRedownloadWaitTime:
T@"NSNumber",&,D,N,Sset_hlsMetadataWaitTime:
T@"NSNumber",&,D,N,Sset_sessionActivationWaitTime:
T@"NSNumber",&,D,N,Sset_checkpointMRSetQueueBegin:
T@"NSNumber",&,D,N,Sset_checkpointSetQueueBegin:
T@"NSNumber",&,D,N,Sset_checkpointRateZero:
T@"NSNumber",&,D,N,Sset_checkpointSetQueueEnd:
T@"NSNumber",&,D,N,Sset_checkpointMRPlay:
T@"NSNumber",&,D,N,Sset_checkpointPlay:
T@"NSNumber",&,D,N,Sset_checkpointAssetLoadBegin:
T@"NSNumber",&,D,N,Sset_checkpointItemConfigBegin:
T@"NSNumber",&,D,N,Sset_checkpointItemBegin:
T@"NSNumber",&,D,N,Sset_checkpointLikelyToKeepUp:
T@"NSNumber",&,D,N,Sset_checkpointReadyToPlay:
T@"NSNumber",&,D,N,Sset_checkpointRateOne:
T@"NSNumber",&,D,N,Sset_checkpointFirstAudioFrame:
T@"NSNumber",R,N
archivesAtURL:
loadSessionWithIdentifier:completion:
saveSessionWithCompletion:
deleteSessionWithIdentifier:completion:
stateRestorationSessionIdentifier
setStateRestorationSessionIdentifier:
unstageQueueControllerForIdentifier:
stageQueueController:forIdentifier:
queueControllerForIdentifier:
stagedQueueControllerIdentifiers
_cachesDirectory
_playbackSessionsDirectory
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSMutableArray",R,N,V_sessionArchives
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
T@"NSString",&,N
initWithModelObject:response:
T@"MPModelSharedListeningParticipant",R,N,V_modelObject
initWithIdentifier:artworkIdentifier:
setArtworkIdentifier:
T@"NSString",C,N,V_artworkIdentifier
initWithController:
T@"MPCMediaRemoteController",R,W,N,V_controller
charValue
metadataIdentifiers
initWithGenericObject:timedMetadataGroups:storeRequestContext:
storeRequestContext
timedMetadataGroups
_timedMetadataGroups
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
T@"NSArray",R,C,N,V_timedMetadataGroups
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16@24@32
v32@0:8@16@24
v36@0:8@16d24f32
v32@0:8@16q24
v24@0:8@16
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
v28@0:8^v16I24
@24@0:8@16
@32@0:8@16@24
v16@0:8
v32@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24
v40@0:8^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
^{opaqueMTAudioProcessingTap=}
^{OpaqueAudioQueue=}
^{AudioQueueBuffer=I^vI^vI^{AudioStreamPacketDescription}I}
@"MPCPlaybackEngine"
@"NSNumber"
@"_MPCAudioSpectrumAnalyzerStorage"
@"NSMutableArray"
@"MPCProcessAudioTap"
@"MPCAudioSpectrumAnalyzer"
q16@0:8
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
q24@0:8{MPCAudioFrequencyBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
f32@0:8q16o^{MPCAudioFrequencyBand=ff}24
f16@0:8
v20@0:8f16
@?16@0:8
v24@0:8@?16
^{_MPCAudioFrequencyBandInternal={MPCAudioFrequencyBand=ff}fffQ}
@28@0:8q16f24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16Q24@32
v36@0:8^v16I24@28
v24@0:8q16
{DSPSplitComplex="realp"^f"imagp"^f}
^{OpaqueFFTSetup=}
v36@0:8@16@24B32
v24@0:8@"ICLiveLink"16
v36@0:8@"ICLiveLink"16@"NSError"24B32
v32@0:8@"ICLiveLink"16@"NSArray"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningQueue"24
v40@0:8@"ICLiveLink"16@"ICSharedListeningItem"24@"ICLiveLinkIdentity"32
v32@0:8@"ICLiveLink"16@"ICLiveLinkEvent"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningItem"24
v32@0:8@16@?24
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v40@0:8@16@24@?32
v40@0:8q16@24@32
v32@0:8q16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MSVBlockGuard"
@"MPCPlaybackIntent"
@"NSIndexPath"
@"MSVSectionedCollection"
@"ICLiveLink"
@"ICLiveLinkIdentity"
@24@0:8^{_NSZone=}16
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSArray"
@"MPSectionedCollection"
@48@0:8@16@24@32@40
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
B40@0:8B16@20B28@32
B36@0:8B16q20@28
B28@0:8B16@20
B32@0:8B16I20@24
@44@0:8@16@24I32@36
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B40@0:8B16@"NSIndexPath"20B28@"MPMiddlewareChain"32
B36@0:8B16q20@"MPMiddlewareChain"28
B28@0:8B16@"MPMiddlewareChain"20
@"MPCPlayerAudioFormat"32@0:8@"MPCPlayerAudioFormat"16@"MPMiddlewareChain"24
@"MPCPlayerAudioRoute"32@0:8@"MPCPlayerAudioRoute"16@"MPMiddlewareChain"24
@"NSArray"32@0:8@"NSArray"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
v40@0:8@16Q24Q32
v24@0:8Q16
@"AVAudioSession"
@"NSString"
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16f24B28@32
v48@0:8@16@24@32@40
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v52@0:8@16f24@28@36@44
v28@0:8f16@20
v36@0:8B16@20@28
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@16d24@32
v48@0:8@16d24d32@40
v40@0:8@16@24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16q24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16f24B28@"<MFTimeStamp>"32
v48@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"NSString"32@"<MFTimeStamp>"40
v40@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v52@0:8@"<MFQueuePlayerItem>"16f24@"NSString"28@"NSString"36@"<MFTimeStamp>"44
v28@0:8f16@"<MFTimeStamp>"20
v36@0:8B16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFQueuePlayerItem>"24@"<MFTimeStamp>"32
v40@0:8q16@"NSString"24@"<MFTimeStamp>"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16d24@"<MFTimeStamp>"32
v24@0:8@"<MFTimeStamp>"16
v24@0:8@"<MFQueuePlayerItem>"16
v48@0:8@"<MFQueuePlayerItem>"16d24d32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"NSDictionary"40
v24@0:8@"MPCQueueController"16
v32@0:8@"MPCQueueController"16@"MPAVItem"24
v32@0:8@"MPCQueueController"16@"MPPlaybackContext"24
v32@0:8@"MPCQueueController"16q24
v32@0:8@"MPCQueueController"16@"NSString"24
d16@0:8
v20@0:8B16
B48@0:8q16q24B32B36^@40
B28@0:8f16@?20
v20@0:8i16
v24@0:8d16
v36@0:8f16@20@?28
v40@0:8d16@24@?32
B24@0:8q16
v40@0:8q16@24@?32
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"MPCQueueController"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@"MPCPlaybackEngine"16@0:8
@"MPCQueueController"16@0:8
@"MPAVItem"16@0:8
B28@0:8f16@?<v@?>20
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v52@0:8@16d24d32B40@44
v48@0:8@16@24@32d40
@"MPCQueueController"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPCPlayerItemConfigurator"
@"MPCAVItemTrace"
@"MPCPlayPerfAnalytics"
@"_MPCAudioSessionController"
@"<MPCPlaybackEngineEventStreamDeferralAssertion>"
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"ICStoreDialogResponse"16@0:8
q24@0:8@16
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8^@16
B32@0:8@16^@24
v64@0:8@16@24@32@40@48@56
v80@0:8@16@24@32@40@48@56@64q72
v64@0:8@16@24^@32^@40^@48^q56
@52@0:8@16@24@32@40B48
B40@0:8@16@24@32
B32@0:8@16q24
v28@0:8@16B24
v28@0:8f16@?20
{?=qqqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"NSObject<OS_dispatch_queue>"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICContentKeySession"
@"ICAVAssetDownloadURLSession"
@"ICURLRequest"
@"ICMusicSubscriptionLeaseStatus"
@"NSDictionary"
@"MPCAudioAssetTypeSelection"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"MPCPlaybackEngineEventStream"
@"MPCPlayerAudioFormat"
@"MPCPlayerAudioRoute"
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCReportingPlaybackObserver"
{?="containerIndex"b1"itemIndex"b1}
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
{_MPCLoggingConsumerChartState="command"q"session"q"container"q"item"q"asset"q}
{_MPCLoggingConsumerChartStatus="userExpectsAudio"B"timeControlStatus"q}
@"<MPCPlaybackEngineEventStreamSubscription>"
@"MPCPlaybackEngineEvent"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}16@0:8
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}32@0:8@16@24
@36@0:8@16@24B32
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@40@0:8@16@24q32
v56@0:8@16@24@32@40Q48
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@"MPMutableSectionedCollection"
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
@40@0:8@16@24B32B36
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@"MPCPlayerPath"
q40@0:8q16q24@32
@40@0:8@16q24@32
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@28@0:8d16f24
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
@48@0:8@16@24q32^@40
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
v36@0:8@16B24@?28
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"NSObject<OS_dispatch_source>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@"MPCPlayPerfMetrics"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
@"MPCAssetLoadPropertiesLocalFileEvaluation"
v68@0:8^@16^@24B32^@36q44@52@60
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v68@0:8^@16^@24B32^@36q44@"NSString"52@"NSString"60
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"d@"NSError">24
@"MPModelPlayEvent"32@0:8@"NSString"16@"NSString"24
@"MPIdentifierSet"32@0:8@"NSString"16@"NSString"24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B32@0:8@"NSString"16^@24
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
v40@0:8@?16@?24@?32
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
@"MPModelFileAsset"
@36@0:8@16B24@28
q36@0:8@16B24@28
B28@0:8@16B24
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@64@0:8@16@24@32q40@48@?56
@"MPAVItem"
@"<MPCAssetLoaderDelegate>"
@"NSError"
v40@0:8@16q24@?32
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
@44@0:8I16@20@28@36
I16@0:8
@40@0:8@16Q24@32
@"MPCPlayerCommandRequest"
@"NSDate"
@"MPCPlayerCommandStatus"
v32@0:8{?=qq}16
@"ICUserIdentity"
{?="reverseCount"q"forwardCount"q}
@24@0:8@?16
@32@0:8@16@?24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
v48@0:8@16q24q32@40
v56@0:8@16@24q32q40@48
@"NSObject<OS_dispatch_group>"
@"<MPCRTCEventConsumerTestingDelegate>"
@"RTCReporting"
v40@0:8Q16@24Q32
v32@0:8Q16@24
@32@0:8Q16d24
@24@0:8Q16
v48@0:8@16@24@32^v40
q40@0:8{?=qiIq}16
{?=qiIq}24@0:8q16
@"AVPlayer"
@"MPCSceneCollection"
@"MPNotificationObserver"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@"ICSharedListeningQueue"
@"MPRemoteCommandHandlerDialogAction"
@"MPRemoteCommandHandlerDialog"
@"MPCPlayerCommandDialog"
@"MPRemoteCommandStatus"
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@48@0:8@16@24@32d40
@"MPStoreLibraryPersonalizationResponse"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@32@0:8q16^@24
@"<MPCSupportedCommands>"
@28@0:8I16@20
f24@0:8@16
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v32@0:8@"NSError"16@"<MFPlayerItem>"24
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"NSMutableSet"
@"<MPCExternalPlaybackRouter>"
B24@0:8^@16
B32@0:8^@16^@24
@40@0:8@16@24^@32
@44@0:8@16@24@32B40
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
@"MPModelResponse<MPCModelPlaybackResponse>"
@24@0:8^q16
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanJumpToItem"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
d48@0:8@16@24@32@40
d40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v32@0:8@16d24
@"ICPlayActivityController"
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
^{_MRSystemAppPlaybackQueue=}16@0:8
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"AVInterstitialTimeRange"24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@"UIView"16@?<v@?>24
v24@0:8@?<v@?>16
@"<MPCVideoOutputDelegate>"16@0:8
v24@0:8@"<MPCVideoOutputDelegate>"16
@"UIViewController"16@0:8
@"<MPCVideoOutputDelegate>"
@"AVPlayerViewController"
v32@0:8@"<MPCVideoOutput>"16@"<UIViewControllerTransitionCoordinator>"24
B24@0:8@"<MPCVideoOutput>"16
v24@0:8@"<MPCVideoOutput>"16
v32@0:8@"<MPCVideoOutput>"16@"NSError"24
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
v60@0:8{?=QQQQd}16B56
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCStoreLibraryPersonalizationMiddleware"
@"MPCPlaybackSharedListeningProperties"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
B40@0:8@16^d24^@32
@40@0:8@16^d24^@32
@32@0:8@16^@24
@"MPAVRoutingController"
@"MPPlaybackEQSetting"
@"MPCModelGenericAVItem"
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
B40@0:8@16@24q32
q36@0:8@16@24B32
{?="representativeItemCloudID"b1"storeAdamID"b1}
v28@0:8Q16B24
@"MSVLRUDictionary"
@32@0:8q16@24
@"MPCSharedListeningEventParticipant"
@"MPCSharedListeningSessionEvent"
@"MPCSharedListeningPlaybackEvent"
@"MPCSharedListeningQueueEvent"
@"MPCSharedListeningReactionEvent"
@"MPCSharedListeningCustomEvent"
@"MPCSharedListeningQueueEventContentAdded"
@"MPCSharedListeningQueueEventContentRemoved"
@"MPCSharedListeningQueueEventContentReordered"
@"MPCSharedListeningQueueEventContentReplaced"
@"MPCSharedListeningQueueEventContentPlayedNow"
@"MPCSharedListeningQueueEventContentUpdatedMessage"
@"MPCSharedListeningQueueEventPlaybackModeChanged"
@20@0:8B16
v44@0:8I16@20@28@?36
v52@0:8I16@20@28@36@?44
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
@"MRCommandResult"
@27@0:8@16{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}24
{MPCModelStorePlaybackItemsRequestAccumulatorResult="didFinishEntireRequest"B"didFinishBatch"B"hasCollectionItemsWithPlaybackAuthorizationToken"B}
@"MPServerObjectDatabaseImportResult"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@32@0:8@16Q24
v28@0:8B16@?20
v56@0:8@16q24@32Q40@?48
@"MPCSharedListeningContainerInfo"24@0:8@"NSString"16
v28@0:8B16@?<v@?@"NSError">20
v32@0:8@"NSString"16@"NSString"24
v56@0:8@"MPPlaybackContext"16q24@"NSString"32Q40@?<v@?@"NSString"@"NSError">48
@"<MPCQueueControllerCommandInterposingHost>"16@0:8
v24@0:8@"<MPCQueueControllerCommandInterposingHost>"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSArray"24@0:8q16
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
B24@0:8@"MPAVItem"16
@28@0:8@16B24
@48@0:8@16q24q32B40B44
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"48@0:8@"MPAVItem"16q24q32B40B44
B32@0:8q16@"MPAVItem"24
v24@0:8@"AVPlayerPlaybackCoordinator"16
v32@0:8q16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"MPCSharedListeningContainerInfo"16
v24@0:8@"MPCSharedListeningEvent"16
v40@0:8@"NSString"16@"NSString"24@"ICLiveLinkIdentity"32
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@40@0:8q16q24^q32
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
v48@0:8@16@24@32@?40
@32@0:8@16^B24
@"AVPlayerPlaybackCoordinator"
@"<MPCQueueControllerDelegate>"
@"<MPCQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
@56@0:8@16q24Q32@40@48
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"NSArray"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"<MPCQueueControllerCommandInterposingHost>"
@"MPPlaybackUserDefaults"
v28@0:8@16f24
@"MPCWaitForLikelyToKeepUp"
@"MPCWaitForReadyToPlaySignpost"
@"MPCPlayToSetRateSignpost"
@"MPCSetRateToEffectiveRateSignpost"
{?="storeAdamID"b1}
v40@0:8@16@?24@?32
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerAudioFormat"16
@"MPCPlayerAudioFormat"16@0:8
@"MPCPlayerAudioRoute"16@0:8
{?=dddddffBB}16@0:8
@"MPCPlayerResponseParticipant"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@24@0:8d16
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@"MPCPlayerCommandRequest"20@0:8B16
@28@0:8@16I24
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
@"AMSEngagement"
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
@36@0:8@16@24f32
@"ICEnvironmentMonitor"
@"MSVABTestGenerator"
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
v28@0:8q16B24
v32@0:8@16B24B28
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
B24@0:8@"<MFQueuePlayerItem>"16
@"<MFGaplessParameters>"16@0:8
@"<MFCrossFadeParameters>"16@0:8
v48@0:8I16@20I28@32@?40
{CGSize=dd}40@0:8@16{CGSize=dd}24
{CGSize=dd}40@0:8@"MPArtworkCatalog"16{CGSize=dd}24
v32@0:8@"MPArtworkCatalog"16@"UIView"24
v40@0:8@"MPArtworkCatalog"16@"UIView"24@"MPArtworkRepresentationCollection"32
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"<MPArtworkDataSource>"
^v20@0:8I16
v32@0:8^v16@?24
@32@0:8@16d24
@"NSCountedSet"
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@"MPCPlaybackEngineEvent"16@0:8
@40@0:8@16@24d32
v44@0:8@16@24@32B40
v68@0:8@16@24@32@40@48@56B64
v72@0:8@16@24@32@40@48B56B60d64
v52@0:8@16@24@32@40B48
@"NSProgress"
@"MPCModelStorePlaybackItemsResponse"
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
@40@0:8@16q24d32
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@36@0:8i16@20@28
v28@0:8I16d20
v20@0:8I16
@"<MPCProcessAudioTapDelegate>"
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
@"MPNowPlayingInfoCenter"16@0:8
@"MPRemoteCommandCenter"16@0:8
@"AVAudioSession"16@0:8
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
v32@0:8d16d24
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
@"<MPCPlaybackEngineInitializationParameters>"
v32@0:8@16^v24
I32@0:8@16q24
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
@"MPNowPlayingContentItem"
@"UIImage"
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@"<MFPlaybackStackController>"
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
@48@0:8@16q24q32q40
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFQueuePlayerItem>"24
@"<MPCQueueItemProviding>"
@"ICRadioGetTracksResponse"
v36@0:8@16@24I32
@40@0:8@16@24I32I36
v40@0:8r^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
v24@0:8r^{opaqueMTAudioProcessingTap=}16
v64@0:8r^{opaqueMTAudioProcessingTap=}16i24q28I36^{AudioBufferList=I[1{AudioBuffer=II^v}]}40^q48^I56
B24@0:8@"MPCModelGenericAVItem"16
@"<MPCAudioProcessing>"16@0:8
v24@0:8@"<MPCAudioProcessing>"16
v24@0:8^{opaqueMTAudioProcessingTap=}16
v64@0:8^{opaqueMTAudioProcessingTap=}16i24q28I36^{AudioBufferList=I[1{AudioBuffer=II^v}]}40^q48^I56
@"<MPCAudioProcessing>"
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v40@0:8@16@24d32
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPModelSharedListeningParticipant"
