Playback failed due to age verification requirement: %{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
%{public}@: Starting asset load...
%{public}@: Missing DSID in delegated identity properties - skipping playback
%{public}@: Returning asset load early with error: %{public}@
%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
%{public}@: Finished loading subscription lease properties.
%{public}@: Timed out loading subscription lease properties.
%{public}@: Using local file asset at path: %{public}@.
%{public}@: Using home sharing asset.
%{public}@: Using existing Radio cached playback response: %{public}@
%{public}@: No cached Radio playback response found.
%{public}@: No local file of appropriate quality, using cloud streaming. endpointType: %ld
%{public}@: Loading network constraints...
%{public}@: Finished loading network constraints: %{public}@ with error: %{public}@.
%{public}@: Finished loading network constraints: %{public}@.
%{public}@: Timed out loading network constraints.
%{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
%{public}@: Subscription is required, and we failed to load the subscription status.
%{public}@: Timed out while attempting to load subscription asset.
%{public}@: Timed out while attempting to load media redownload asset.
%{public}@: No valid endpoint type (%ld), skipping streaming redownload.
not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
%{public}@: Using iTunes Store Content Info: %@
%{public}@: Radio station does not require a subscription, skipping subscription key check.
%{public}@: Protection type is %li, skipping subscription key check.
%{public}@: Not subscription content, skipping playback key check.
%{public}@: Lease session invalid, skipping key loading.
%{public}@: Reloading FairPlay key status to ensure the latest value is known...
%{public}@: Finished reload of FairPlay key status: %{public}@ with error: %{public}@
%{public}@: Finished reload of FairPlay key status: %{public}@
%{public}@: Timed out reloading FairPlay key status; using the last known status
%{public}@: Already have playback keys from lease status: %{public}@, no need to do another request.
%{public}@: Requesting playback keys because the lease status indicates none available: %{public}@
%{public}@: Finished subscription lease request for playback keys with error: %{public}@.
%{public}@: Timed out while attempting to acquire lease for playback keys.
%{public}@: Asset download completed successfully.
%{public}@: Asset download completed with error: %{public}@
%{public}@: Error caching file asset: %{public}@.
%{public}@: Finished caching file asset.
%{public}@: Removed incomplete download at URL: %{public}@
%{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
%{public}@: Setting gapless info: %{public}@
%{public}@: Starting Suze lease session...
%{public}@: Failed to create suze lease with error: %{public}@.
%{public}@: Timed out creating Suze lease session: %{public}@.
%{public}@: Asset load finished.
%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: Transforming error network unavailable instead of original: %{public}@
%{public}@: Preparing for rate: %f.
%{public}@: Finished preparing for rate: %f.
%{public}@: Getting subscription lease session for rate preparation.
%{public}@: Sending subscription lease request for rate preparation.
%{public}@: Finished sending subscription lease request for rate preparation.
%{public}@: Failed sending subscription lease request for rate preparation with error: %{public}@.
%{public}@ Using start time: %f
%{public}@ Using stop time: %f
%{public}@ Using bookmark start time: %f
BackgroundTask: End assertion (%lli) at %{public}s:%d
BackgroundTask: Took assertion (%lli) at %{public}s:%d
%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@: Setting loudness info %{public}@ on player item %{public}@
%{public}@: Setting preferred peak bit rate to %f due to last known network type of %li and %{public}@preferring high quality content
%{public}@: Loading subscription status...
%{public}@: Finished loading subscription status: %{public}@
%{public}@: Skipping subscription lease load since the subscription status indicated it shouldn't be used
%{public}@: Finished loading subscription status: %{public}@ with error: %{public}@
%{public}@: Loading subscription lease session...
%{public}@: Finished loading subscription lease session: %{public}@
%{public}@: Failed to load subscription lease session with error: %{public}@
%{public}@: Lease playback prevention state did change to: %li
Timed out with partial discovery. Found endpoints: %{public}@
Failed to discover output devices error: %{public}@
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
Did not report <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
AudioSessionActivation
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
Attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController: %{public}@ does not contain transportable content]
-[_MPCMediaRemotePublisher _performCommandEvent:]
%{public}s: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
%{public}s: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
%{public}s: type=%{public}@ id=%{public}@ interface=%{public}@ status=MPRemoteCommandHandlerStatusSuccess
Cannot skip current item: %{public}@
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
MPRemoteCommandHandlerStatus = %ld
%{public}@: status = MPRemoteCommandHandlerStatusSuccess
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
Create playback context failed with error: %{public}@
Reload with playback context failed with error: %{public}@
 SetPlaybackQueue (keeping up next with no current item) recovered
Radio station getPlaybackContext failed with error: %{public}@
Add to playback context failed: %ld
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
Unsupported PlaybackSessionType: %{public}@
Unsupported command: %{public}@ id=%{public}@
Error serializing state capture: %{public}@
%{public}@: File asset missing file path, finishing.
%{public}@: Writing path %{public}@ for media item: %{public}@
Device supports streaming
Network connection is available
No network connection available
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
Failed to establish a remote proxy connection: %{public}@
%{public}@: Using subscription playback endpoint with operation type: %li
%{public}@: Has subscription lease session, using it.
%{public}@: Using existing cached playback response: %{public}@
%{public}@: Performing subscription playback request...
%{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
%{public}@: Failed loading subscription asset due to missing lease session.
%{public}@: Performing subscription accountless playback request...
%{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
%{public}@ setting override start time: %{public}@ for item: %{public}@
%{public}@ setting override stop time: %{public}@ for item: %{public}@
%{public}@: Siri asset info: %@
%{public}@ Failed to load identity properties. error: %{public}@
[BackgroundTasks] %{public}@ Expired.
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
[BackgroundTasks] %{public}@ End [%lu]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %{public}@
Dispatching %{public}@ command to destination: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
Sent %{public}@ to %{public}@
Dispatching %{public}@ command to external destination: %{public}@
Cannot send command: no output devices specified in destination: %{public}@
Searching for output devices matching UIDs: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@: %{public}@
Attempting to send command %{public}@ to endpoint %{public}@...
Sending command to remote origin %@...
Successfully sent command to external device. Statuses = %@
Failed to send command to external device. err = %ld
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [delegated account missing] section: %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [promoting delegated account] section: %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [base account missing] section: %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [base account is delegated] section: %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@
queueController %p: jumpToContentItemID: reloading items [jump to item]
queueController %p: jumpToContentItemID: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: currentItemDidChangeFromItem:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: currentItemDidChangeFromItem:toItem: clearing deferred next content item anchor [item changed]
queueController %p: currentItemDidChangeFromItem:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: currentItemDidChangeFromItem:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: currentItemDidChangeFromItem:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: currentItemDidChangeFromItem:toItem: load items if needed [preloading] section=%{public}@
queueController %p: currentItemDidChangeFromItem:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: enumeration restart [repeat all]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addPlaybackContext: calling completion early keepCurrentItem=%{BOOL}u
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
Setting %{public}@ EQ to %d
Setting up EQ for %{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: nil item received [Queue failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Failed to queue any items] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure - nil item] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Ending playback [Entire queue failure]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has not yet succeeded [Adding to queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has succeeded for at least one item [Ignoring queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure] error=%{public}@
_MPCAVController %p - playbackHasStartedForItem: [marking play as successful] item=%{public}@
MPCPlaybackEngine: -[AVAudioSession setCategory:%{public}@ mode:%{public}@]
MPCPlaybackEngine: Unable to set audio session category to %{public}@: %{public}@. Retrying in 1s.
ConfigureAudioSession
Setting simulator volume to %f
%@ %p - itemDidChange: - setting first playback error item - firstPlaybackErrorItem=%{public}@
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
%{public}@ Failed to load private listenting value from account. err=%{public}@
[MPCReportingPlaybackObserver] DidReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification Item will change from: %p to: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, playbackState=%d, updatedPlaybackState=%d, willIgnoreItemChangeNotification=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification did not find valid end reason to post event
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification oldPlaybackState == playbackState (%d) - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification currentItem: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, oldPlaybackState=%d, playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _hasPendingContainerChange=%{BOOL}u, shouldPostPlayEndEvent=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification ignoring notification - playback state=%d, _isReloadingWithPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemDidChangeWhenReloadingPlaybackContextNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ error=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Failed to load identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Finished loading identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to have results dictionary, found %{public}@ instead.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
No device for %{public}@
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
%{public}@: Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
%{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
%{public}@: Performing media redownload request...
%{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
%{public}@: Missing redownload parameters.
%{public}@: Missing store request context.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
[RemotePlaybackQueue] Attempting to prepare Genius Playlist for store item %{public}@
[RemotePlaybackQueue] Could not set PlaybackContext for GeniusPlaybackQueue. %{public}@. <%{public}@>
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - idential to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
Starting playback preheating...
Finished preheating playback
Skipping playback state preservation for player: %{public}@
Skipping playback state preservation until playback begins for player: %{public}@
Unable to archive playback state for player: %{public}@ [ignoring] error: %{public}@
Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
Preparing for imminent playback intent...
Imminent playback preparation failed, error: %{public}@
Imminent playback preparation finished, subscription status is nil (error: %{public}@)
Imminent playback preparation finished, subscription status does not indicate lease should be used: %{public}@
Imminent playback preparation finished, subscription status session was nil with error: %{public}@
Imminent playback preparation failed to reload FairPlay key status: %{public}@
Imminent playback preparation had lease status with playback keys, skipping lease renewal. Status: %{public}@
Renewing lease for imminent playback preparation.
Imminent playback preparation finished subscription request error: %{public}@
Imminent playback preparation finished subscription request
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] Unable to get user identities: %{public}@
Cannot decode override user identity. Using active account.
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
Send Command: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
calling completion with success [optimistic response]
calling completion with actual statuses
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
%{public}@: Siri asset info present: %{BOOL}u
%{public}@: Failed to load identity properties. err: %{public}@
[BackgroundTasks] %{public}@ Expired [%lu]
radioQueueFeeder %p freezing tracklist [nil active account]
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed with error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
Unspecified explanation
Play Queue Identifiers Changed
v8@?0
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
v16@?0@"NSArray"8
v16@?0@"NSError"8
Playing Identifier Changed
Failed to get playing identifer
v24@?0@"NSString"8@"NSError"16
v16@?0@"MPModelGenericObject"8
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
v24@?0@"NSArray"8@"NSError"16
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sourceContentItems
T@"MPSectionedCollection",R,N
modelObjects
playingIndexPath
T@"NSIndexPath",R,C,N
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
invalidationObservers
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
middleware
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
request
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
playingIdentifierFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
queueIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
T@"NSMapTable",&,N,V_inputOperations
<%@ %p setupDuration:%f error:%@>
T@"NSError",&,N,V_error
setupDuration
Td,N,V_setupDuration
MPCModelGenericAVItemJingleTimedMetadataDidChangeNotification
MPCModelGenericAVItemPlaybackPreventionStateDidChangeNotification
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ %@
%lli
 not
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
DisableOptimizeAccessForLinearMoviePlayback
com.apple.mobileipod
match
purchaseHistory
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
v16@?0@"MPModelFileAsset"8
v20@?0B8@"NSError"12
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
v16@?0@"ICMusicSubscriptionLeaseSession"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/Model/Generic AV Item/MPCModelGenericAVItem.m
@"MPArtworkCatalog"16@?0d8
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse64kbpsQuality
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
tracks
not 
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v12@?0B8
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
info
com.apple.radio.ping.jingle
leasePlaybackPreventionState
Tq,R,N
leaseStatus
T@"ICMusicSubscriptionLeaseStatus",R,C,N
rtcReportingParentHierarchyToken
T@,R,N
rtcReportingServiceIdentifier
T@"NSString",R,C,N
rtcReportingAssetType
assetCacheProvider
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
genericObject
T@"MPModelGenericObject",&,N,V_genericObject
jingleTimedMetadata
T@"NSData",R,C,N,V_jingleTimedMetadata
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
shouldReportPlayEventsToStore
TB,R,N
playbackRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
stationItemLikedState
Tq,N,V_stationItemLikedState
trackInfo
T@"NSDictionary",&,N,V_trackInfo
supportsRadioTrackActions
TB,N,VsupportsRadioTrackActions
Tq,R,N,V_leasePlaybackPreventionState
T@"ICMusicSubscriptionLeaseStatus",R,C,N,V_leaseStatus
asset
T@"AVURLAsset",R,W,N,V_asset
completionHandler
T@?,C,N,V_completionHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/MPMoviePlayerController Legacy Support/MPCSingleMovieQueueFeeder.m
<Unknown File>
Movie QF was asked for an item that it never said it had.
B24@?0q8q16
@"NSString"16@?0q8
containsLiveStream
T@"MPMovie",&,N,V_movie
movieIdentifier
T@"NSString",&,N,V_movieIdentifier
section
T@"<MPMutableIdentifierListSection>",R,N,V_section
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v24@?0@"ICUserIdentityProperties"8@"NSError"16
identityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
needsPersonalization
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/Model/Store Playback Items Request/MPCModelStorePlaybackItemsRequestAccumulator.m
MPCModelStorePlaybackItemsRequestAccumulator - No section for specified store ID [unrecoverable error] - currentStoreID=%@ - currentStoreItemMetadata=%@
MPCModelStorePlaybackItemsRequestAccumulator - No model object for section [unrecoverable error] - currentStoreID=%@ - , currentStoreItemMetadata=%@ - currentSection=%ld
MPCModelStorePlaybackItemsRequestAccumulator - Section model objects should never be nil [unrecoverable error] - currentStoreID=%@ - currentStoreItemMetadata=%@ - currentSection=%ld - sourceModelObject=%@
v16@?0@"MPModelObject"8
v32@?0@"MPModelObject"8q16^B24
allowsExplicitContent
TB,R,N,V_allowsExplicitContent
batchSize
Tq,N,V_batchSize
earliestExpirationDate
T@"NSDate",R,C,N,V_earliestExpirationDate
equivalencyMapping
T@"NSDictionary",R,C,N
storePersonalizationStyle
Tq,R,N,V_storePersonalizationStyle
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
shouldLibraryPersonalize
TB,R,N,V_shouldLibraryPersonalize
unpersonalizedContentDescriptors
adamIDData
T@"NSData",C,N,V_adamIDData
streamFields
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
title
T@"NSString",C,N,V_title
artist
T@"NSString",C,N,V_artist
album
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
artworkDictionaries
T@"NSArray",C,N,V_artworkDictionaries
 playerPath=%@
playerPath
T@"MPCPlayerPath",R,N
tracklistRange
T{?=qq},R
playingItemProperties
T@"MPPropertySet",R,N
queueItemProperties
queueSectionProperties
preferredFallbackItemRelationship
T@"NSString",R,N
T@"MPCPlayerPath",&,N,V_playerPath
sessionProperties
T@"MPPropertySet",C,N,V_sessionProperties
builder
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
controller
T@"MPCMediaRemoteController",R,N,V_controller
items
T@"MPSectionedCollection",R,N,V_items
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
allowsAssetCaching
TB,N,V_allowsAssetCaching
allowsAssetInfoCaching
TB,N,V_allowsAssetInfoCaching
assetPathExtension
T@"NSString",C,N,V_assetPathExtension
assetProtectionType
Tq,N,V_assetProtectionType
assetQualityType
Tq,N,V_assetQualityType
assetURL
T@"NSURL",C,N,V_assetURL
isHomeSharingAsset
TB,N,V_isHomeSharingAsset
isHLSAsset
TB,N,V_isHLSAsset
isCloudStreamingAsset
TB,N,V_isCloudStreamingAsset
protectedContentSupportStorageFileURL
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
purchaseBundleDictionary
T@"NSDictionary",C,N,V_purchaseBundleDictionary
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSPlaylistURL
alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
alternateHLSKeyCertificateURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
suzeLeaseID
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
willBecomeActivePlayerItemHandler
T@?,C,N,V_willBecomeActivePlayerItemHandler
hasValidAsset
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
sharedLoader
T@"MPCReportingDeviceIdentityPropertiesLoader",R
HierarchyToken
app.music.media-clip
mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
now_playing
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
v16@?0@?<v@?B@"NSError">8
v24@?0@"MPPlaybackContext"8@"NSError"16
DisableQHO
v16@?0@"MPRemoteCommandCenter"8
v16@?0Q8
 (%lu)
 (%@)
StartPictureInPicture (MPC)
DisableQueueModifications (MPC)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]_block_invoke
v16@?0q8
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPModelSong"8
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
playbackEngine
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
infoCenter
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
requestImageWithCompletionHandler: called with nil image.
v16@?0@"UIImage"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Media Remote Integration/_MPCMediaRemotePublisher.m
Transportable representations only available for queue controller.
Session contains non-transportable content
subscription
cloudLibrary
storeFront
v16@?0@"MPModelPlaybackPosition"8
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
requirePreferredAssetQuality
TB,N,V_requirePreferredAssetQuality
responseHandler
T@?,C,N,V_responseHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Utilities/NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Assistant_Oversize
MediaRemote
MediaRemote_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
Queue
Queue_Oversize
Reporting
Reporting_Oversize
QueueController
QueueController_Oversize
Session
Session_Oversize
Delegation
Delegation_Oversize
v32@?0@8@16^B24
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
v32@?0@8q16^B24
v24@?0@"MPModelResponse"8@"NSError"16
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
No player found for %@
Unexpected queueController class found: %@
# Player: %@
## Queue <%p> [%@]
### State
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
deviceGUID
deviceName
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
supportsSecureCoding
TB,R
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
 source=%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Playback Intent/MPCPlaybackIntent.m
Invalid parameter not satisfying: %@
completion
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
Cannot provide representative metadata for a shuffled tracklist.
v16@?0@"<MPMutableRadioIdentifiers>"8
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
localizedTitle
T@"NSString",C,N,V_localizedTitle
tracklistSource
Tq,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
actionAfterQueueLoad
Tq,N,V_actionAfterQueueLoad
shuffleMode
Tq,N,V_shuffleMode
repeatMode
Tq,N,V_repeatMode
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
siriAssetInfo
T@"NSString",C,N,V_siriAssetInfo
siriReferenceIdentifier
T@"NSString",C,N,V_siriReferenceIdentifier
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"MPModelRadioStation"8
controllerFuture
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
PlaybackEngine.implementation.currentItem.type didChange
v16@?0@"NSNotification"8
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
playerRequest
T@"MPCPlayerRequest",&,N,V_playerRequest
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
lastRecordedPlayEvent
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
currentRepeatType
Tq,N,V_currentRepeatType
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
identifier
T@"NSString",R,C,N,V_identifier
artworkIdentifier
T@"NSString",R,C,N,V_artworkIdentifier
artworkProperties
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
sharedDataSource
T@"MPCRemotePlayerArtworkDataSource",R,N
RadioAvailabilityController
/System/Library/PrivateFrameworks/Radio.framework/Radio
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
Store Front Local Equivalency Metadata Response Finished
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
overridePlayingItem
T@"MPModelGenericObject",R,N
playingItemIndexPath
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
No commands provided.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Player Request/MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
commands
T@"NSArray",&,N,V_commands
options
TQ,N,V_options
command
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
userInitiatedOptions
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
label
T@"NSString",C,N,V_label
Either Controller or PlayerPath is required to perform a change request.
Failed to send command %ld
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
MPCRemotePlaybackEngineDidDisconnectNotification
MPCRemotePlaybackEnginePlayerPathDidChangeNotification
com.apple.MediaPlayer.RemotePlayerService
v16@?0@"MPCPlayerPath"8
connection
T@"NSXPCConnection",&,N,V_connection
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.mediaplayer.playbackcontext
MPCPlayerErrorKeyMediaRemoteCommandHandlerStatus
MPCPlayerRequestErrorDomain
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
disablePlaybackStateValidation
TB,N,V_disablePlaybackStateValidation
disablePlaybackRateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T{?=qq},N,V_tracklistRange
state
tracklist
T@"<MPCPlayerResponseBuilder>",R,D,N
videoView
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
repeat/shuffle
nowPlaying
seed
stationID
stationName
stationURL
userIdentity
T@"ICUserIdentity",C,N
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
seedContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
radioStation
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"ICUserIdentity",C,N,V_userIdentity
com.apple.Music
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
shouldBatchResultsWithPlaceholderObjects
TB,N
T@"MPCPlaybackRequestEnvironment",C,N
wantsDetailedKeepLocalRequestableResponse
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
playbackPrioritizedIndexPaths
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
sectionedModelObjects
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
storeIDs
T@"NSArray",C,N,V_storeIDs
readyForDisplay
isReadyForDisplay
playerLayer.readyForDisplay
playerLayer.player.currentItem.presentationSize
TB,R,N,GisReadyForDisplay
preferredContentSize
T{CGSize=dd},R,N
videoGravity
T@"NSString",C,N
playerLayer
T@"AVPlayerLayer",R,N
_obj
<%@:%p>
<NULL>
T@"NSArray",&,N
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSArray",&,N,V_invalidationObservers
T@"MPMovie",R,N,V_movie
MediaPlaybackCoreErrorDomain
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
finalResponse
TB,R,N,GisFinalResponse
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_personalizationResponse
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
TB,N,GisFinalResponse,V_finalResponse
invalidationDate
T@"NSDate",C,N,V_invalidationDate
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Command required stopping playback on a primary device.
Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
allowsHLSContent
TB,N,V_allowsHLSContent
assetSourceStorefrontID
T@"NSString",C,N,V_assetSourceStorefrontID
prefersVideoContent
TB,N,V_prefersVideoContent
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
homeSharingAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
itemIdentifiers
T@"MPIdentifierSet",&,N,V_itemIdentifiers
prefersHighQualityContent
TB,N,V_prefersHighQualityContent
storeAsset
T@"MPModelStoreAsset",&,N,V_storeAsset
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
householdID
T@"NSString",C,N,V_householdID
storefrontID
T@"NSString",C,N,V_storefrontID
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
T@"MPCFuture",&,N,V_controllerFuture
personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
{?=dddddffBB}
{?=dddddffBB}72@?0@8{?=dddddffBB}16
_skippedMetadata
skippedMetadata
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
queueContentItems
T@"MPSectionedCollection",&,N,V_queueContentItems
queueModelObjects
T@"MPSectionedCollection",&,N,V_queueModelObjects
supportedCommands
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
queueIdentifier
T@"NSString",C,N,V_queueIdentifier
playerState
Tq,N,V_playerState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Player Request/Middleware/MediaRemote/MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
serverError
T@"NSError",R,C,N
dialog
T@"ICStoreDialogResponse",R,C,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/Model/Generic AV Item/MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
Invalid operation type: %li
Response did not contain asset for item identifiers: %@
operationType
Tq,N,V_operationType
requestContext
T@"ICStoreRequestContext",C,N,V_requestContext
subscriptionLeaseSession
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
Music
v16@?0@"MPModelPlaylist"8
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
v16@?0@"MPModelPlayEvent"8
@16@?0@"MPQueueFeederIdentifierRegistry"8
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/Model/MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
Failed to resolve startIdentifier: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Invalid request item class: %@ for %@
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPIdentifierSet"8
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
v32@?0q8@"MPIdentifierSet"16^B24
rtcReportingSessionAdditionalUserInfo
requiredPropertiesForStaticMediaClips
fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
Could not discern required properties for %@
v32@?0@"ICRadioStationTrack"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
spcb
showInternalSections
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/_MPCQueueControllerDataSourceState.m
UpdatedPlaybackContext changed types %@ != %@
stateLock
T{os_unfair_lock_s=I},R,N,V_stateLock
supplementalPlaybackContextBehavior
Tq,R,N,V_supplementalPlaybackContextBehavior
supplementalPlaybackContext
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
dataSource
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
playbackContext
T@"MPPlaybackContext",R,N,V_playbackContext
shouldAddOriginalPlaybackContextAfterReplacement
originalPlaybackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
sectionIdentifier
T@"NSString",R,N,V_sectionIdentifier
preferredStartItemIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
tailPlaceholderItem
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
contextID
T@"NSString",R,C,N,V_contextID
supportedOnCurrentPlatform
shouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
shouldImmediatelyStartPlayback
TB,N,V_shouldImmediatelyStartPlayback
siriRecommendationID
T@"NSString",C,N,V_siriRecommendationID
featureName
T@"NSString",C,N,V_featureName
siriWHAMetricsInfo
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
%@ query=%@
query
T@"MPMediaQuery",R,N,V_query
firstItem
T@"MPMediaItem",&,N,V_firstItem
shuffleType
Tq,N,V_shuffleType
%@ station=%@
stationStringID
T@"NSString",R,N,V_stationStringID
%@ collection=%@ identifiers=%@
storeItemIDs
T@"NSArray",R,N,V_storeItemIDs
collectionIdentifierSet
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
%@ seed=%@
seedTrack
T@"NSURL",R,N,V_seedTrack
%@ identifier=%@
T@"NSString",R,N,V_identifier
customData
T@"NSData",R,N,V_customData
T@"MPCPlayerResponse",R,W,N,V_response
metadataObject
T@"MPModelGenericObject",R,N,V_metadataObject
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Player Request/MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
route
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
v24@?0^v8^{__CFError=}16
v16@?0^v8
Missing external device for endpoint %@.
v24@?0@"MPCPlayerPath"8@"NSError"16
Could not discover single group for route UIDs (%@). If you instantiated using pathWithRouteUIDs:bundleID:pid:playerID: please ensure all provided UIDs are grouped.
v24@?0@"NSArray"8@"NSArray"16
Could not get active origin.
v20@?0C8^v12
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
mediaRemotePlayerPath
T^v,R,N,V_mediaRemotePlayerPath
representedBundleDisplayName
representedBundleID
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
origin
T^v,R,N
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
ICRadioContentReference
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
referenceModelObjectIdentifiers
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Reporting/MPCReportingController.m
reportingController != nil
Reporting controller (%@) does not have correct parent (%@ expected, %@ actual)
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
future
T@"MPCFuture",&,N,V_future
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Utilities/MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
Deallocating future that wasn't finalized or invalidated
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 error=%@
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
successBlocks
T@"NSMutableArray",R,N,V_successBlocks
failureBlocks
T@"NSMutableArray",R,N,V_failureBlocks
completionBlocks
T@"NSMutableArray",R,N,V_completionBlocks
invalidBlocks
T@"NSMapTable",R,N,V_invalidBlocks
result
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
debugLabel
T@"NSString",C,N,V_debugLabel
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
shouldReportAggregateTimePlayActivityEvents
TB,N,V_shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
SSVPlayActivityController
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSVPlayActivityControllerEndpointIdentifierJingle
SSVMutablePlayActivityEvent
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
v20@?0I8^{__CFArray=}12
com.apple.assistant.SendCommand
sentAllCommands
com.apple.mediaplayer.assistant.grouping
v36@?0I8^{__CFError=}12^{__CFString=}20^{__CFArray=}28
v16@?0^{__CFArray=}8
v32@?0^v8^v16@"NSError"24
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
returnStatuses
T@"NSArray",R,N,V_returnStatuses
app.music.queue-source.library
MPCPlayerEnqueueErrorDomain
<missing queue identifier>
uniqueID
lastChangeDirection
playingItem
<NONE>
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
playingItemGlobalIndex
Tq,R,N,V_playingItemGlobalIndex
globalItemCount
Tq,R,N,V_globalItemCount
uniqueIdentifier
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
upNextItemCount
Tq,R,N,V_upNextItemCount
T@"MPCPlayerResponseItem",R,N
repeatType
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
T@"NSIndexPath",&,N,V_playingItemIndexPath
presumptuous command
specializedIntents
devices
T@"NSArray",C,N,V_devices
supportedSpecializedQueues
T@"NSDictionary",&,N,V_supportedSpecializedQueues
supportsSetQueueCommand
TB,N,V_supportsSetQueueCommand
supportedQueueTypes
T@"NSSet",&,N,V_supportedQueueTypes
supportedCustomDataQueueIdentifiers
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
supportsCreateStation
TB,N,V_supportsCreateStation
supportedInsertionPositions
T@"NSSet",&,N,V_supportedInsertionPositions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Player Request/MPCPlayerResponseTracklist.m
Invalid section collection.
Invalid section collection (2).
supportedRepeatTypes
T@"NSArray",&,N,V_supportedRepeatTypes
supportsChangeRepeat
TB,N,V_supportsChangeRepeat
supportsAdvanceRepeat
TB,N,V_supportsAdvanceRepeat
supportedShuffleTypes
currentShuffleType
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
supportsChangeShuffle
TB,N,V_supportsChangeShuffle
supportsAdvanceShuffle
TB,N,V_supportsAdvanceShuffle
changeItemSupport
TQ,R,N,V_changeItemSupport
disabled
TB,R,N,GisDisabled
TB,N,GisDisabled,S_setDisabled:,V_disabled
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
queueStructures
dataSources
metadata
MPCQueueController State
@"NSDictionary"16@?0^{os_state_hints_s=I*II}8
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
dncia
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/MPCQueueController.m
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
ContentItemID was nil [tail placeholder]
ContentItemID was nil [loading placeholder]
unknown-guid
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
User default should be resolved before setting on queue controller.
Requested removing content item that is not in the queue.
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
 %@=%@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_identifierList
hasUserMutations
currentItem
T@"MPAVItem",R,N
delegate
T@"<MPAVQueueControllerDelegate>",W,N
queueCoordinator
T@"<MPAVQueueCoordinating>",&,N
displayCount
Tq,N
TQ,R,N
userCanChangeShuffleAndRepeatType
allowsQueueModifications
nextContentItemID
T@"NSString",C,N,V_nextContentItemID
deferredNextContentItemAnchorID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
restorationError
T@"NSError",C,N,V_restorationError
coderVersions
T@"NSMutableDictionary",&,N,V_coderVersions
nextContentItemIDReason
Tq,N,V_nextContentItemIDReason
identifierList
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"NSMutableDictionary",&,N,V_dataSources
containsTransportableContent
TB,R,N,V_hasUserMutations
T@"MPAVItem",R,N,V_currentItem
T@"<MPAVQueueControllerDelegate>",W,N,V_delegate
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
v16@?0@"ICStoreRequestContext"8
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
SSVMutablePlayActivityEnqueuerProperties
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/_MPCAVController.m
MPCPlaybackEngine: AVAudioSessionCategory cannot be nil.
SIM_VOLUME
Queue Controller Contents Changed
allowsNewPlaybackErrorItem
TB,N,V_allowsNewPlaybackErrorItem
firstPlaybackErrorItem
T@"MPAVItem",W,N,V_firstPlaybackErrorItem
failedItemsIdentifiers
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
playedSuccessfully
TB,N,GhasPlayedSuccessfully,V_playedSuccessfully
overrideValue
T@"NSNumber",R,C,N,V_overrideValue
currentValue
T@"NSNumber",R,C,N,V_currentValue
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R
contentItemID
revision
duration
isPlaceholder
indexPath
localizedDurationString
languageOptionGroups
T@"NSIndexPath",R,N,V_indexPath
placeholder
TB,R,N,GisPlaceholder,V_placeholder
contentItemIdentifier
T@"NSString",R,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,N,V_localizedDurationString
T@"NSArray",R,N,V_languageOptionGroups
T@"NSString",C,N,V_contentItemID
preferredBackwardJumpIntervals
preferredForwardJumpIntervals
seekSupport
TQ,R,N,V_seekSupport
prefersNegativeBackwardSkipIntervals
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
preferredPlaybackRate
Tf,R,N
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
localizedShortTitle
presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
com.apple.MediaPlaybackCore.MPCUserIdentityPropertiesProactiveCache/accessQueue
com.apple.MediaPlaybackCore.MPCUserIdentityPropertiesProactiveCache/cacheQueue
sharedCache
T@"MPCUserIdentityPropertiesProactiveCache",R
MPCReportingPlaybackObserverPlayStartNotification
MPCReportingPlaybackObserverPlayEndNotification
MPCReportingPlaybackObserverPlayEndEventStartTimeKey
MPCReportingPlaybackObserverPlayEndEventEndTimeKey
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
player
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
reportingController
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
eventDuration
Td,N,V_eventDuration
overrideItemType
TQ,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
SSVMutablePlayActivityEventContainerIDs
SSVMutablePlayActivityEventItemIDs
powerLevel
Tf,N,V_powerLevel
sampleRate
Tf,N,V_sampleRate
fftSetup
T^{OpaqueFFTSetup=},N,V_fftSetup
observers
T@"NSMutableArray",&,N,V_observers
numberOfBands
Tq,R,N,V_numberOfBands
onUpdate
T@?,C,N,V_onUpdate
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Utilities/MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
sharedManager
T@"MPCExplicitContentAuthorizationManager",R,N
authorizationReason
status
Tq,N,V_status
authorizationError
T@"NSError",C,N,V_authorizationError
lastKnownAgeVerificationState
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
future controller
Failed to send command %ld (MRSendCommandError = %ld)
Failed to send command %ld (MRMediaRemoteCommandHandlerStatus = %ld)
v28@?0I8@"NSError"12@"NSArray"20
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Player Request/Middleware/MediaRemote/MediaRemoteController/MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Unsupported queue command %ld
NSDebugDescription
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
resolvedPlayerPath
contentItemIDs
contentItemChanges:keys
<EMPTY>
optimisticStateContentItems
playbackState
loadedRange
requestedRange
playingItemIdentifier
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
{_MSVSignedRange=qq}
<MPCMediaRemoteController: %p>
PlaybackQueue Response failed to include now playing item
Requested content item %@ state does not exist.
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"16@?0@"MPModelObject"8
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
mediaRemoteReplyQueue
T@"NSObject<OS_dispatch_queue>",R,N
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
remotePlayerArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
invalidationToken
T@,&,N,V_invalidationToken
playbackStateCacheState
Tq,R,N,V_playbackStateCacheState
supportedCommandsCacheState
Tq,R,N,V_supportedCommandsCacheState
playingIdentifierCacheState
Tq,R,N,V_playingIdentifierCacheState
playingIdentifier
queueIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
enabled
<DEFAULT>
%@ (%d)
station
radioStationURL
T@"NSURL",C,N,V_radioStationURL
radioStationPlaybackMetadata
T@"<MPCRadioPlaybackIntentTracklistTokenRadioStationMetadata>",&,N,V_radioStationPlaybackMetadata
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
kind
offers
type
downloadAssets
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
com.apple.mediaplayer.assistant.connectToEndpoint
v20@?0I8^{__CFError=}12
com.apple.MediaPlaybackCore/%@.activeprogress
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v32@?0@"NSString"8@"NSString"16^B24
T@?,R,C,N,V_responseHandler
containerType
identifierSet
item
hasContainerType
Ti,N,V_containerType
hasIdentifierSet
T@"_MPCProtoContainerIdentifierSet",&,N,V_identifierSet
T@"NSMutableArray",&,N,V_items
hasPlayActivityFeatureName
T@"NSString",&,N,V_playActivityFeatureName
delegateInfoID
storeAdamID
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
radioStationID
cloudUniversalLibraryID
hasDelegateInfoID
Tq,N,V_delegateInfoID
hasStoreAdamID
Tq,N,V_storeAdamID
hasStorePlaylistGlobalID
T@"NSString",&,N,V_storePlaylistGlobalID
hasStorePlaylistVersionHash
T@"NSString",&,N,V_storePlaylistVersionHash
hasCloudID
Tq,N,V_cloudID
hasCloudCollectionID
T@"NSString",&,N,V_cloudCollectionID
hasRadioStationID
T@"NSString",&,N,V_radioStationID
hasCloudUniversalLibraryID
T@"NSString",&,N,V_cloudUniversalLibraryID
uuid
timeZoneName
hasAccountID
hasUuid
T@"NSString",&,N,V_uuid
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasRequestUserAgent
T@"NSString",&,N,V_requestUserAgent
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasPrivateListeningEnabled
TB,N,V_privateListeningEnabled
mediaType
excludeFromShuffle
hasMediaType
Ti,N,V_mediaType
T@"_MPCProtoItemIdentifierSet",&,N,V_identifierSet
hasExcludeFromShuffle
TB,N,V_excludeFromShuffle
storeSubscriptionAdamID
purchaseHistoryID
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasStoreSubscriptionAdamID
Tq,N,V_storeSubscriptionAdamID
hasPurchaseHistoryID
Tq,N,V_purchaseHistoryID
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
hasLibraryAlbumContentReference
T@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference",&,N,V_libraryAlbumContentReference
hasLibraryArtistContentReference
T@"_MPCProtoRadioContentReferenceLibraryArtistContentReference",&,N,V_libraryArtistContentReference
hasLibraryItemContentReference
T@"_MPCProtoRadioContentReferenceLibraryItemContentReference",&,N,V_libraryItemContentReference
hasStoreContentReference
T@"_MPCProtoRadioContentReferenceStoreContentReference",&,N,V_storeContentReference
albumName
representativeItemCloudID
hasAlbumName
T@"NSString",&,N,V_albumName
hasRepresentativeItemCloudID
Tq,N,V_representativeItemCloudID
artistName
hasArtistName
T@"NSString",&,N,V_artistName
albumArtistName
composerName
contentType
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
albumTrackCount
trackNumber
year
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasComposerName
T@"NSString",&,N,V_composerName
hasContentType
Ti,N,V_contentType
hasCopyrightText
T@"NSString",&,N,V_copyrightText
hasAlbumDiscCount
Ti,N,V_albumDiscCount
hasDiscNumber
Ti,N,V_discNumber
hasFileSize
Td,N,V_fileSize
hasGenreName
T@"NSString",&,N,V_genreName
hasIsCompilation
TB,N,V_isCompilation
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTrackCount
Ti,N,V_albumTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasYear
Ti,N,V_year
radioStationURLString
accountInfo
hasRadioStationURLString
T@"NSString",&,N,V_radioStationURLString
hasSeedContentReference
T@"_MPCProtoRadioContentReference",&,N,V_seedContentReference
hasNowPlayingContentReference
T@"_MPCProtoRadioContentReference",&,N,V_nowPlayingContentReference
hasAccountInfo
T@"_MPCProtoDelegateInfo",&,N,V_accountInfo
container
startingItemIndexPath
accountInfos
T@"NSMutableArray",&,N,V_accountInfos
containers
T@"NSMutableArray",&,N,V_containers
hasStartingItemIndexPath
T@"_MPCProtoTracklistIndexPath",&,N,V_startingItemIndexPath
hasShuffleMode
Ti,N,V_shuffleMode
containerIndex
itemIndex
hasContainerIndex
Tq,N,V_containerIndex
hasItemIndex
Tq,N,V_itemIndex
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
tracklistAction
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
Missing tracklist data in playback queue.
Missing creation properties data in playback queue.
Unknown queue identifier: %@
Cannot play fuse content
Genius is Disabled
Genius is not avialable for this item
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
v24@?0@"ICUserIdentity"8@"NSError"16
%llu
startPictureInPictureCommand
disableQueueModificationsCommand
stagePlaybackSessionCommand
T@"MPRemoteCommand",R,N
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
v32@?0@"MPModelGenericObject"8q16^B24
Personalization response did invalidate
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
com.apple.iBooks
com.apple.podcasts
com.apple.NanoRadio
com.apple.NanoBooks
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@>
v16@?0@"NSDictionary"8
appBundleID
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
outputDeviceUIDs
T@"NSArray",R,N,V_outputDeviceUIDs
hashedOutputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
outputGroups
T@"NSArray",R,N,V_outputGroups
outputGroupID
T@"NSString",R,N,V_outputGroupID
singleGroup
TB,R,N,V_singleGroup
optimisticResponse
TB,R,N,V_optimisticResponse
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
audioSessionCategory
DisableAudioAnalysis
https://itunes.apple.com/
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSURLRequest"8@"NSError"16
Error while archiving playback state: %@
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
requiresMainThread
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
eventObserver
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
implementation
T@"_MPCAVController",R,N,V_implementation
mediaRemotePublisher
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCReportingController",R,N,V_reportingController
sessionManager
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
leaseManager
T@"_MPCLeaseManager",R,N,V_leaseManager
accountManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"UIView",R,N
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
audioSessionOptions
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
audioAnalyzer
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
T@"MPCPlaybackEngine",W,N
None
Age Gating
Age Verification
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath and error was nil
T@"MPCPlayerPathCache",R,N
playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_observers
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
sharedController
T@"MPCSuzeLeaseSessionController",R
clientCount
Tq,N,V_clientCount
icLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
mpcLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
shouldStopWhenFinished
TB,N,V_shouldStopWhenFinished
modelSong
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
visibleDuration
Td,N,V_visibleDuration
displayType
Tq,N,V_displayType
displayedCharacterCount
Tq,N,V_displayedCharacterCount
language
T@"NSString",C,N,V_language
sourceType
Tq,N,V_sourceType
icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
hasSubscriptionPlaybackCapability
TB,N,V_hasSubscriptionPlaybackCapability
enqueuerProperties
T@"SSVPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
<%@: %p %@>
T@"MPNowPlayingContentItem",C,N,V_contentItem
artworkImage
T@"UIImage",C,N,V_artworkImage
lastModifiedDate
T@"NSDate",R,C,N,V_lastModifiedDate
<%@:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ storeFront=%@ subscription=%@>
hashedDSID
T@"NSString",C,N,V_hashedDSID
hasCloudLibraryEnabled
TB,N,V_hasCloudLibraryEnabled
storeFrontIdentifier
T@"NSString",C,N,V_storeFrontIdentifier
delegated
TB,N,GisDelegated,V_delegated
activeAccount
TB,N,GisActiveAccount,V_activeAccount
T@"ICUserIdentity",R,N,V_userIdentity
subscriptionCapabilities
TQ,R,N,V_subscriptionCapabilities
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
accounts
T@"MPCPlayerSessionResponse",R,W,N,V_response
ForceLibrarySupplemental
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
startTimeModifications
T@"NSDictionary",C,N,V_startTimeModifications
endTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
assetStoreFronts
T@"NSDictionary",C,N,V_assetStoreFronts
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"SSVPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
MPCNullPlaybackContextCodingKeyLabel
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
T@"ICUserIdentity",R,N
assistantAnalyticsController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
rtcReportingController
T@"MPRTCReportingController",&,N,V_rtcReportingController
playbackHistoryController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
MediaPlaybackCore
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
numberOfOptions
indexOfSelectedOption
T@"NSArray",R,N,V_options
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",R,N
mpcReporting_equivalencySourceAdamID
mpcReporting_isValidReportingItem
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_privateListeningEnabled
T@"NSNumber",R,C,N
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_siriInitiated
mpcReporting_trackInfo
mpcReporting_itemType
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"SSVPlayActivityController",R,C,N,V_playActivityController
playActitySessionToken
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
siriAssetInfoGetTracksResponse
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
v24@?0@"ICUserVerificationContext"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
AirMusic
clientVersion
delegationProperties
activeAccountRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,N
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
EncodeSerialQueue
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
v16@?0^{__CFError=}8
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v16@?0@"ICMutableRadioPlaybackHistory"8
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
identityPropertySet
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
numberOfItems
playbackHistory
T@"ICRadioPlaybackHistory",R,C,N
trackModels
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
MediaPlayer
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
v16@?0@"MPCAssistantSendCommandResult"8
com.apple.mediaplayer.assistant.commandQueue
When processing %@ if we are the group leader, pause our now-playing app if we have one
v12@?0C8
v16@?0^{__CFString=}8
v24@?0@"NSError"8@"NSArray"16
v16@?0@"MPCAssistantRemoteControlDestination"8
v32@?0@"MPCAssistantRemoteControlDestination"8@"NSError"16@"NSArray"24
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
updateHistoryPlaylist
TB,N,V_updateHistoryPlaylist
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.diffQueue
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Implementation/Radio/MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
com.apple.MediaPlayer
LOADING_AUDIO_LABEL
RADIO_LABEL
app.music.queue-source.tilt
RadioStationID
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4017.200.20/MediaPlaybackCore/Engine/Session Management/_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
v24@?0@"UIImage"8@"NSError"16
We didn't implement this.
PlaybackSessions
serialQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
sessionArchives
T@"NSMutableArray",R,N,V_sessionArchives
sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
stagedArchive
T@"_MPCPlaybackSessionArchive",&,N,V_stagedArchive
stateRestorationSessionIdentifier
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_artworkIdentifier
T@"MPCMediaRemoteController",R,W,N,V_controller
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
metadataIdentifiers
T@"NSArray",R
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
storeRequestContext
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
timedMetadataGroups
T@"NSArray",R,C,N,V_timedMetadataGroups
@@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
NSObject
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
MPCReportingMescalSetupCompletionEvent
MPCReportingEvent
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
MPMusicSubscriptionLeasePlaybackParticipating
MPRTCReportingItemSessionCreating
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCSingleMovieQueueFeeder
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
BestStoreIdentifier
MPCModelStorePlaybackItemsRequestAccumulator
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCResponseMediaRemoteControllerChaining
MPCPlayerSessionResponse
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCAdditions
MPCModelMediaClipAVItem
MPCPlaybackContextPrivateListeningOverridable
_MPCMediaRemotePublisher
MPCPlaybackEngineEventObserving
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
Debugging
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCPlaybackIntent
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPRemotePlayerServiceProtocol
MPCRemotePlaybackEngine
MPCPlayerRequest
MPCPlayerResponseBuilder
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPCModelPlaybackRequestEnvironmentConsuming
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddlewareAdditions
MPCVideoView
MPCPlaybackEngineMiddleware
_MPCStateDumpPropertyListTransformable
MPMiddleware
MPCSingleMoviePlaybackContext
MPCErrorAdditions
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCStoreLibraryPersonalizationMiddleware
MPCMediaRemoteMiddlewareCommandsOperation
MPCMediaRemoteMiddleware
ICStoreResponseProtocol
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
MPCModelPlaybackIntentTracklistToken
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
_MPCPlayerDisableModificationsCommand
MPCPlayerDisableModificationsCommand
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPAVQueueController
MPAVQueueCoordinatingDataSource
MSVSegmentedCoding
MPCReportingPlaybackEnvironmentPropertiesLoader
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCPlayerResponseItem
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCUserIdentityPropertiesProactiveCache
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCAudioSpectrumAnalyzer
MPCAudioSpectrumObserver
MPCExplicitContentAuthorizationManager
MPCMediaRemoteController
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
_MPCSupportedCommands
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCModelStorePlaybackItemsRequestOperation
_MPCProtoContainer
_MPCProtoContainerIdentifierSet
_MPCProtoDelegateInfo
_MPCProtoItem
_MPCProtoItemIdentifierSet
_MPCProtoRadioContentReference
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
_MPCProtoRadioContentReferenceLibraryArtistContentReference
_MPCProtoRadioContentReferenceLibraryItemContentReference
_MPCProtoRadioContentReferenceStoreContentReference
_MPCProtoRadioCreationProperties
_MPCProtoTracklist
_MPCProtoTracklistIndexPath
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
MPCPlayerPathCache
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCPlayerLanguageOptionGroup
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCModelRadioQueueFeeder
MPAVItemObserver
_MPCPlaybackEngineSessionManager
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPArtworkDataSource
MPCModelGenericAVItemTimedMetadataRequest
serverError
domain
code
userInfo
mutableCopy
init
dialog
responseDictionary
count
setObject:forKey:
_isAgeVerificationError:
removeObjectForKey:
objectForKeyedSubscript:
errorWithDomain:code:userInfo:
errorForICError:response:
request
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
queueItemProperties
label
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
arrayWithObjects:count:
isCancelled
finish
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
MPCErrorWithDomain:code:debugDescription:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
MPCErrorWithDomain:code:underlyingError:debugDescription:
controllerFuture
isInvalid
_loadItemsWithCompletion:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
cancel
finishWithError:
queueSectionProperties
translatorForMPModelClass:
appendSection:
sectionObjectForPropertySet:contentItem:artworkGenerator:
emptyIdentifierSet
initWithIdentifiers:block:
firstObject
objectAtIndexedSubscript:
collectionIdentifier
isEqualToString:
collectionInfo
isEqualToDictionary:
playingIndexPath
identifier
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
setPlayingIndexPath:
_itemGenericObjectPropertySetForContentItem:propertySet:
objectForPropertySet:contentItem:artworkGenerator:
appendItem:
setQueueContentItems:
setQueueModelObjects:
queueIdentifier
setQueueIdentifierFuture:
queueIdentifierFuture
setQueueIdentifier:
_loadPlayingIdentifierWithCompletion:
sharedCache
playerPath
observationTokenDescriptionForPlayerPath:
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
sourceContentItems
modelObjects
requiredStoreLibraryPersonalizationProperties
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
emptyPropertySet
propertySetByCombiningWithPropertySet:
setObject:forKeyedSubscript:
initWithProperties:relationships:
deviceSpecificUserInfo
mediaType
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
dictionaryWithObjects:forKeys:count:
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
inputProtocols
outputProtocols
inputOperations
setInputOperations:
initWithMiddleware:request:
execute
.cxx_destruct
setMiddleware:
setRequest:
_invalidationHandler
_invalidationObservers
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
queueModelObjects
queueContentItems
isValidReportingEvent
reportingEventType
setError:
setupDuration
setSetupDuration:
_error
_setupDuration
flattenedGenericObject
copy
_createStoreRequestContext
defaultCenter
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
removeObserver:name:object:
standardUserDefaults
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
dealloc
mainTitle
type
song
album
title
artist
name
tvEpisode
season
show
identifiers
universalStore
adamID
purchasedAdamID
subscriptionAdamID
trackNumber
trackCount
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
storeSubscriptionAdamID
genre
isRadioStreamPlayback
isAssetLoaded
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isRadioPlayback
itemError
isExplicitTrack
sharedManager
isItemAuthorized:shouldAskForAuthorization:
_storeRequestContext
homeSharingAsset
localFileAsset
storeAsset
hasVideo
gaplessInfo
volumeAdjustment
isArtistUploadedContent
identityProperties
delegatedIdentity
delegatedIdentityProperties
DSID
unsignedLongLongValue
isDelegated
setItemError:
sharedMonitor
networkType
lastKnownNetworkType
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
newHierarchyTokenFromParentToken:
_getSubscriptionLeasePropertiesWithCompletion:
endpointType
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
setHomeSharingAsset:
setAccountID:
storefrontIdentifier
setStorefrontID:
setDelegatedAccountID:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setResponseHandler:
addOperation:
assetURL
_allowsStreamingPlayback
hasValidAsset
accountID
delegatedAccountID
setRequestType:
setStoreRadioAdamID:
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:error:
sharedBagProvider
mediaTypeNetworkConstraintsFromURLBag:
objectForKey:
getBagForRequestContext:withCompletionHandler:
isSubscriptionRequired
hasPlaybackCapability
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
assetProtectionType
numberWithBool:
purchaseBundleDictionary
protectedContentSupportStorageFileURL
isHLSAsset
isCloudStreamingAsset
userAgent
isHomeSharingAsset
personalizedStore
cloudID
numberWithUnsignedLongLong:
numberWithLongLong:
initWithCapacity:
redownloadParameters
accountIdentifier
alternateHLSPlaylistURL
absoluteString
length
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
_allowsAssetCaching
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
sharedNetworkObserver
isMusicCellularStreamingAllowed
_rtcReportingServiceIdentifierWithAssetURL:
URLAssetWithURL:options:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
identityKind
initWithModelKind:block:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
defaultManager
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
resourceLoader
setDelegate:queue:
playerItemWithAsset:
setVolumeAdjustment:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
setMediaKind:
heuristicInfo
numberWithUnsignedInt:
encodingDelayInFrames
encodingDrainInFrames
durationInFrames
lastPacketsResync
setGaplessInfo:
metadataIdentifiers
initWithIdentifiers:
addOutput:
addObserver:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setPlayerItem:
willBecomeActivePlayerItemHandler
alternateHLSKeyCertificateURL
streamingKeyCertificateURL
alternateHLSKeyServerURL
streamingKeyServerURL
isiTunesStoreStream
suzeLeaseID
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
library
databaseID
personID
universalCloudLibraryID
cloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
flushNowPlayingCaches
playbackError
shouldShowComposer
modelPlayEvent
itemType
radioStation
subtype
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
reevaluateType
_applyLoudnessInfo
mediaItem
numberWithFloat:
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
_radioStation
radio
stationID
stationHash
performWithoutEnforcement:
stationStringID
lyrics
text
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfoForItem:
_startTime
_stopTime
numberWithDouble:
doubleValue
durationFromExternalMetadata
_bookmarkTime
addEntriesFromDictionary:
userRating
isItemAuthorized:
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
includeContentItemDebugFields
privateListeningStateSource
currentValue
boolValue
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
controllerWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
artworkCatalog
equivalencySourceAdamID
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
isAlwaysLive
shouldReportPlayEventsToStore
_isPrivateListeningEnabled
isSiriInitiated
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setKeyServerURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
performWithResponseHandler:
urlForBagKey:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
newOperationWithResponseHandler:
anyObject
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
identity
deviceMediaLibraryWithUserIdentity:
invalidateContentItemDeviceSpecificUserInfo
object
isNetworkConstrained
allowsHighQualityMusicStreamingOnCellular
preferredVideosAssetQualityOnWifi
isVideoCellularStreamingAllowed
preferredVideosAssetQualityOnCellular
currentDeviceInfo
isAudioAccessory
asset
statusOfValueForKey:error:
mediaKind
loudnessInfoVolumeNormalization
tracks
setLoudnessInfo:
preferredPeakBitRate
setPreferredPeakBitRate:
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setMaximumRetryCount:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
_storeUbiquitousIdentifier
playbackInfo
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
shouldIncrementPlayCountForElapsedTime:startTime:stopTime:
setBookmarkTime:
hasNominalAmountBeenPlayedForElapsedTime:startTime:stopTime:
setHasBeenPlayed:
sharedUbiquitousPlaybackPositionController
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
observer
didSignificantlyChangeItem:
playbackPosition
postNotificationName:object:
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
_currentPlaybackRate
userSkippedPlayback
items
keySpace
extraAttributes
dataValue
isEqualToData:
hasPendingLeaseAcquisition
leaseState
shouldPreventPlayback
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
leasePlaybackPreventionState
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
modelGenericObject
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
prefersSeekOverSkip
prepareForRate:completionHandler:
setRating:
stationName
supportsLikedState
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
canUseLoadedAsset
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
nowPlayingInfoCenter:lyricsForContentItem:completion:
supportsRadioTrackActions
setSupportsRadioTrackActions:
assetCacheProvider
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
genericObject
setSiriInitiated:
setRadioStreamPlayback:
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isAssetSubscriptionProtectionType
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_isHLSAsset
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingParentHierarchyToken
_rtcReportingServiceIdentifier
_identityPropertySet
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_leasePlaybackPreventionState
_leaseStatus
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
_asset
_completionHandler
UUID
UUIDString
dictionary
endPlaybackTime
startPlaybackTime
MSVBase64UUIDString
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
item
sectionIdentifier
setContentItemID:
setFeeder:
itemIdentifiers
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
applyChanges:itemLookupBlock:
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
itemForItem:inSection:
containsLiveStream
itemDidBeginPlayback:
canSkipItem:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsForSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
uniqueIdentifier
setMovie:
movieIdentifier
setMovieIdentifier:
section
_uniqueIdentifier
_movie
_movieIdentifier
_section
stopDiscovery
_discoverAirplayDevices:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
_reconSession
identityStore
initWithIdentityProperties:delegatedIdentityProperties:
getPropertiesForUserIdentity:completionHandler:
identityPropertySetFromRequestContext:completion:
setIdentityProperties:
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
initWithWritingStyle:
setShouldReportPlayActivityEvents:
initWithPlayer:reportingController:
setOffline:
removeObserver:
modelSong
displayType
visibleDuration
activeAccountRequestEnvironment
setIdentityPropertiesLoader:
setItemGenericObject:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
lyricsID
setLyricsID:
newPlayActivityEvent
setEventType:
setItemEndTime:
displayedCharacterCount
setLyricsDisplayedCharacterCount:
language
setLyricsLanguage:
sourceType
setSourceType:
setDisplayType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
globalPlaylistID
socialProfileID
bestStoreIdentifierForPersonID:
needsPersonalization
sharedRestrictionsMonitor
allowsExplicitContent
_userIdentityWithRequest:
_prepareRequestInformation
lastBatchItemIdentifiers
sectionedModelObjects
null
_originalIndexPathsForStoreID:
storeItemMetadataForItemIdentifier:
itemAtIndexPath:
_shouldUsePlaylistEntriesForSectionAtIndex:
_modelObjectWithStoreItemMetadata:requestModelObject:shouldUsePlaylistEntries:
_eligibilityForItem:
initWithModel:personalizationStyle:
_indexPathAccountingForRemovalsWithOriginalIndexPath:
replaceObjectAtIndexPath:withObject:
_removeItemAtOriginalIndexPath:
sectionAtIndex:
replaceSectionAtIndex:withObject:
_addEquivalencyForMetadata:requestStoreIdentifier:
removeObject:
addObjectsFromArray:
indexOfObject:
_appendProgressiveContentDescriptorsWithStoreItemMetadata:
removeObjectAtIndex:
isFinalResponse
childStoreItemMetadatas
clientIdentifier
setClientIdentifier:
setReason:
setTimeoutInterval:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
clientInfo
setClientInfo:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
initWithObjects:
playlistEntry
numberWithInteger:
countOfIndexesInRange:
genericObjectWithModelObject:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:sourceModelObject:userIdentity:
totalItemCount
initWithStorePlatformDictionary:
defaultIdentityStore
DSIDForUserIdentity:outError:
longLongValue
playbackPrioritizedIndexPaths
indexPathWithIndex:
_addOriginalIndexPath:forStoreID:
setPlaceholder:
copyWithBlock:
copyWithIdentifiers:block:
containsObject:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
removeObjectsInArray:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
storeIDs
indexSetWithIndex:
addIndex:
delegationProperties
specificAccountWithDSID:
identityAllowingDelegation:
userIdentity
initWithRequest:shouldLibraryPersonalize:
equivalencyMapping
unpersonalizedContentDescriptors
handleResponse:
newStoreItemMetadataRequest
batchSize
setBatchSize:
earliestExpirationDate
storePersonalizationStyle
shouldLibraryPersonalize
_currentBatchCount
_defaultLibraryPersonalizationStyle
_equivalencyMapping
_lastStoreIDBasedSectionWasPlaylist
_orderedStoreIDs
_pendingOrderedStoreIDs
_pendingPrioritizedStoreIDs
_unprocessedItemIdentifiers
_progressiveContentDescriptors
_receivedStoreIDs
_resultsGenericObjectBuilder
_sectionIndexToDeletedIndexSet
_storeIDToIndexPathReference
_unknownEndpointLibraryPersonalizationStyle
_userIdentity
_allowsExplicitContent
_shouldLibraryPersonalize
_batchSize
_earliestExpirationDate
_storePersonalizationStyle
itemKind
sectionProperties
sectionKind
modelClass
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
propertySetWithProperties:
initWithRequestedPropertySet:
initWithRequest:
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
copyWithZone:
responseClass
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
controller:chain:
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builder
chain
initWithModelGenericObject:indexPath:response:
builderProtocol
_items
_controller
isLiveRadioStream
prefersHighQualityContent
predicateWithFormat:
radioStreamAssetInfoList
filteredArrayUsingPredicate:
flavor
sortUsingComparator:
alloc
streamURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
streamProtocol
setIsHLSAsset:
allowsHLSContent
hlsAssetInfo
playlistURL
alternatePlaylistURL
setAlternateHLSPlaylistURL:
alternateKeyServerURL
setAlternateHLSKeyServerURL:
alternateKeyCertificateURL
setAlternateHLSKeyCertificateURL:
prefersVideoContent
fileAssetInfoList
flavorType
setAssetQualityType:
fileExtension
setAssetPathExtension:
fairPlayInfoList
purchaseBundleSinfDictionary
setPurchaseBundleDictionary:
protectionType
setAssetProtectionType:
setSuzeLeaseID:
setAllowsAssetCaching:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isCloudStreamingAsset
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
activeAccount
setStoreAccountID:
standardDefaults
defaultStoreFront
setStoreFrontID:
cloudServiceStatusControllerWithUserIdentity:
musicSubscriptionStatus
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
_calloutQueue
_serialWorkQueue
defaultInfo
initWithClientInfo:
deviceInfo
deviceGUID
setDeviceGUID:
setDeviceName:
setRequestUserAgent:
systemReleaseType
setSystemReleaseType:
defaultTimeZone
setTimeZoneName:
isPrivateListeningEnabled
setPrivateListeningEnabled:
currentDeviceDelegateInfo
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
effectiveNetworkTypeForPlayback
requiredMediaClipProperties
initWithMediaClip:
_modelGenericObject
_mediaClip
addEngineObserver:
playerID
initWithPlayerID:
setPlaybackQueueDataSource:
setPlaybackEngine:
lastSiriPlaybackContextIDForPlayerID:
initWithSuiteName:
_durationAvailableNotification:
_likedStateChangedNotification:
_updateLaunchCommands
sharedCommandCenter
becomeActive
systemRoute
unwrappedValue
pathWithRoute:mediaRemotePlayerPath:isResolved:
isEngineRestoringState
hasInitializedSupportedCommands
_performCommandEvent:completion:
playCommand
hasTargets
removeTarget:action:
addTarget:action:
pauseCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
playItemInQueueCommand
setPlaybackQueueCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
numberWithInt:
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
bundleWithIdentifier:
localizedStringForKey:value:table:
likeCommand
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
_updateSupportedCommands
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
invalidatePlaybackQueue
setPlaybackState:
changeRepeatModeCommand
setCurrentRepeatType:
changeShuffleModeCommand
setCurrentShuffleType:
isEqualToArray:
isActiveAccount
subscriptionCapabilities
startDate
token
endDate
timeIntervalSinceDate:
playbackEngine
implementation
queueController
itemForContentItemID:
setModelSong:
setVisibleDuration:
reportingController
delegate
engine:prepareForActivationWithCompletion:
initWithDeallocHandler:
disarm
engine:didFailToActivateWithError:resolution:
becomeActiveWithError:
contextID
mediaRemoteOptions
fallbackPlaybackIntent
reloadWithPlaybackContext:completionHandler:
getPlaybackContextWithCompletion:
containsTransportableContent
array
currentItem
accountManager
accountForDSID:
hasCloudLibraryEnabled
hashedDSID
componentsSeparatedByString:
setEnabled:
boolForKey:
_supportedSessionTypes
setPlaybackSessionCommand
setSupportedSessionTypes:
updateLaunchCommandsWithConfigurationHandler:
isPictureInPictureSupported
startPictureInPictureCommand
setCurrentPlaybackSessionIdentifier:
changePlaybackPositionCommand
seekForwardCommand
seekBackwardCommand
setCanBeControlledByScrubbing:
allowsQueueModifications
isPlaceholder
createRadioStationCommand
isTailPlaceholder
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
reshuffleCommand
shuffleType
repeatType
supportedInsertionPositions
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
isSystemMusicApplication
disableQueueModificationsCommand
_exportableSessionTypes
setExportableSessionTypes:
stationAllowsItemLiking
setPresentationStyle:
likedState
setActive:
addNowPlayingItemToLibraryCommand
setStatusBlock:
configureWithModelObject:
addItemToLibraryCommand
ratingCommand
changePlaybackRateCommand
command
mediaRemoteCommandType
commandID
stringByAppendingFormat:
isNegative
interfaceID
contentItemID
play
_enqueueFallbackIntentIfNeededForCommandEvent:completion:
_becomeActiveIfNeededWithCompletion:
pauseWithFadeout:
pause
togglePlayback
isAd
defaultMediaLibrary
setPersistentID:
setContainedPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
firstContentItemIDForItemIntersectingIdentifierSet:
jumpToContentItemID:
isRequestingDefermentToPlaybackQueuePosition
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
beginSeek:
endSeek
positionTime
setCurrentTime:
playbackQueue
setPrivateListeningOverride:
privateListeningOverride
setSiriReferenceIdentifier:
insertionPosition
insertAfterContentItemID
addPlaybackContext:afterContentItemID:completion:
addPlaybackContext:atPosition:completion:
insertAfterContextItemID
moveContentItemID:afterContentItemID:completion:
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
reshuffle
removeContentItemID:completion:
leaseManager
prepareForPlaybackWithUserIdentity:
replaceIntent
hasUserMutations
verifyWithError:
endPlayback
setLastSiriPlaybackContextID:forPlayerID:
actionAfterQueueLoad
playWithOptions:
addPlaybackContext:atPosition:jumpToIt:completion:
shouldBecomeActive
shouldConnectToAVPlayer
stationURL
radioPlaybackIntentWithStationURL:
isRequestingPlaybackInitialization
setActionAfterQueueLoad:
state
_playbackStateIsIdle:
stateBeforeInterruption
radioPlaybackIntentFromSong:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
playbackSessionData
decodedObjectOfClass:fromData:error:
setQueueController:
infoCenter
invalidatePlaybackQueueWithCompletion:
finalizeStateRestorationWithAccountManager:completion:
durationIsValid
durationInSeconds
interval
currentTime
setLikedState:forUserIdentity:
rating
kindWithVariants:
setSubscriptionAdamID:
setUniversalStoreIdentifiersWithBlock:
currentStatus
setModelObject:
setShouldLibraryAdd:
setModelObjects:
pictureInPictureController
startPictureInPicture
setAllowsQueueModifications:
playbackRate
setRate:
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeAccounts:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
initWithPlaybackEngine:
publishIfNeeded
addSupportedSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
removeSupportedSpecializedQueueIdentifier:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
setEngineRestoringState:
commandCenter
_libraryAddStatusObserver
_lastContextID
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_initializedSupportedCommands
_engineRestoringState
_playbackEngine
_infoCenter
_commandCenter
isPlaceholderItemForContentItemID:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
updateLocationDependentPropertiesForItem:
contentItem
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setFittingSize:
setCompletedUnitCount:
requestImageWithCompletionHandler:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:error:
responseWithIdentifier:sessionType:data:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
substringToIndex:
componentsJoinedByString:
requestedProperties
initWithRequestedProperties:
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:userIdentity:
setContainerUniqueID:
storeAdamID
setAdamID:
formerStoreAdamIDs
setFormerAdamIDs:
offerWithType:
setTrackNumber:
setTrackCount:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
assetLoadProperties
fileAsset
qualityType
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
purchaseBundleFilePath
fileExistsAtPath:isDirectory:
fileURLWithPath:isDirectory:
pathExtension
initWithContentsOfFile:
propertyListWithData:options:format:error:
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_responseHandler
mediaPlaybackCoreBundle
dataUsingEncoding:
bytes
isNSArray__
isNSDictionary__
enumerateKeysAndObjectsUsingBlock:
_stateDumpObject
propertyList:isValidForFormat:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
musicShuffleType
setShuffleMode:
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
setLabel:
startItemIdentifiers
playActivityFeatureName
mpc_protoContainerRepresentation
setPlayActivityFeatureName:
identifierSet
setDelegateInfoID:
intersectsSet:
setContainerIndex:
setItemIndex:
mpc_protoItemRepresentation
setItems:
setContainers:
setStartingItemIndexPath:
addDelegationUUIDs:forUserIdentity:completionHandler:
setUuid:
addAccountInfo:
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
playActivityRecommendationData
initWithData:encoding:
setSiriRecommendationIdentifier:
setAccountInfo:
seedContentReference
ICRadioContentReference
setSeedContentReference:
nowPlayingContentReference
setNowPlayingContentReference:
setRadioStationID:
setRadioStationURLString:
setContainerType:
originalIdentifierSet
setStoreAdamID:
setIdentifierSet:
setCloudID:
setStorePlaylistGlobalID:
setCloudUniversalLibraryID:
cloudVersionHash
setStorePlaylistVersionHash:
setMediaType:
setStoreSubscriptionAdamID:
shouldExcludeFromShuffle
setExcludeFromShuffle:
infoCenterForPlayerID:
playbackQueueDataSource
string
appendFormat:
identifierList
_stateDictionaryIncludingIdentifierList:
describePlayer:
_initWithMediaLibrary:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
ml3Library
autoupdatingSharedLibrary
pathForResourceFileOrFolder:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProviderWithUserIdentity:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
allocWithZone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
deviceName
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
setPrivateListeningStateSource:
setTimeZone:
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
setPlayActivityRecommendationData:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
getPlaybackContextForIntent:withCompletion:
route
isDeviceRoute
archivedDataWithRootObject:requiringSecureCoding:error:
queueFeederClass
getRepresentativeMetadataForPlaybackContext:completion:
setTracklistToken:
setTracklistSource:
referenceWithMPModelObject:
setRadioStation:
setStationStringID:
setRadioIdentifiersWithBlock:
setRadioStationURL:
intentFromQueueDescriptor:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRepresentativeMetadataWithCompletion:
localizedTitle
tracklistSource
tracklistToken
shuffleMode
repeatMode
setRepeatMode:
_resolvedTracklistDataSource
_localizedTitle
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_shuffleMode
_repeatMode
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
setStationHash:
setStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseArray
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
allowsItemLiking
setAllowsItemLiking:
attributionLabel
setAttributionLabel:
setType:
setSubtype:
modelRadioStationForMetadata:
_requestedRadioStationProperties
resolvedPlayerPath
isInProcess
playerRequest
initWithName:object:handler:
initWithMiddleware:playerRequest:
setPlayerRequest:
_playerRequest
lastRecordedPlayEvent
playlist
isWatch
meetsPlaybackHistoryThreshold
currentRepeatType
setPlayEvent:
setAllowsStoreContainerImport:
setUpdateHistoryPlaylist:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
_currentRepeatType
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
initWithMiddleware:
_playbackStateFuture
artworkProperties
artworkIdentifier
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
_urlForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
sharedDataSource
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
CGSizeValue
assistantStreamingGetAvailability:
assistantRadioGetAvailability:completion:
hasLoadedRadioAvailability
isRadioAvailable
getRadioAvailabilityWithCompletionHandler:
assistantStreamingGetAvailability
assistantRadioGetAvailability:
mainBundle
bundleIdentifier
objectForInfoDictionaryKey:
applicationProxyForIdentifier:
shortVersionString
bundleVersion
MPC_storeFrontIdentifierKey
setShouldRequireCachedResults:
setClientVersion:
setShouldIgnoreExpiration:
sharedStoreItemMetadataRequestController
cacheMissItemIdentifiers
getStoreItemMetadataForRequest:responseHandler:
modelObjectWithStoreItemMetadata:userIdentity:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
setOverridePlayingItem:
setPlayingItemIndexPath:
overridePlayingItem
playingItemIndexPath
setPurchasedAdamID:
setCloudAlbumID:
setPersonalStoreIdentifiersWithPersonID:block:
hasLoadedValueForKey:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setTvEpisode:
setSeason:
rangeOfString:
performRequest:options:completion:
requestWithCommandRequests:
setOptions:
performWithCompletion:
initWithCommandRequests:
options
blockOperationWithBlock:
initWithCommandRequest:options:
addDependency:
performRequest:completion:
commands
setCommands:
_options
_commands
initWithMediaRemoteCommand:options:playerPath:label:
initWithMediaRemoteCommand:options:controller:label:
setCommandOptionValue:forKey:
userInitiatedOptions
setUserInitiatedOptions:
_command
_userInitiatedOptions
_label
dependencies
unsignedIntValue
sendCommand:options:completion:
sendCommand:options:toPlayerPath:completion:
initWithServiceName:
getPlayerPathForPlayerID:reply:
startPlayerForPlayerID:
becomeActiveForPlayerID:
setWantsReverseProcessAssertion:forPlayerID:
interfaceWithProtocol:
setRemoteObjectInterface:
_updatePlayerPath
setInterruptionHandler:
resume
invalidate
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxy
requiresMainThread
_initializePlaybackStack
start
setWantsReverseProcessAssertion:
connection
setConnection:
_connection
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
isEmpty
arrayByAddingObjectsFromArray:
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_tracklistRange
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerModelObject:propertySet:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
initWithResponse:
_commandRequestForMediaRemoteCommand:
stop
tracklist
videoView
setVideoView:
_tracklist
_state
_videoView
initWithPlayerPath:
response
_response
setPlaybackRequestEnvironment:
setStationURL:
descriptionComponents
requestEnvironmentWithUserIdentity:
setOverrideValue:
_nowPlayingContentReference
_seedContentReference
_stationURL
kindWithSongKind:
kindWithKinds:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
initWithRequest:responseHandler:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
objectAtIndex:
isSubclassOfClass:
encodeBool:forKey:
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
setSectionedModelObjects:
setStoreIDs:
setPlaybackPrioritizedIndexPaths:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_playbackPrioritizedIndexPaths
keyPathsForValuesAffectingValueForKey:
setByAddingObjectsFromArray:
playerLayer
player
presentationSize
isReadyForDisplay
videoGravity
setScaleMode:
preferredContentSize
setVideoGravity:
keyPathsForValuesAffectingPreferredContentSize
operationsForPlayerRequest:
operationsForRequest:
setInvalidationObservers:
nextObject
initWithMovie:
_MPCErrorWithDomain:code:underlyingError:debugDescriptionFormat:arguments:
initWithFormat:arguments:
_allowsExplicitContentDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
setInvalidationDate:
setFinalResponse:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
_invalidationTimer
_finalResponse
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
initWithDomain:code:userInfo:
assetSourceStorefrontID
householdID
setHouseholdID:
storefrontID
_allowsHLSContent
_prefersVideoContent
_prefersHighQualityContent
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
controllerForPlayerPath:
setControllerFuture:
setController:
initWithMiddleware:playerPath:
_controllerFuture
personalizedModelObjects
setPersonalizedModelObjects:
_personalizedModelObjects
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
registerReturnType:returnValueBlock:
operationsForSessionRequest:
pathByAppendingPlayerIDSuffix:
playerState
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
_supportedCommands:infoValueForKey:
unsignedIntegerValue
commandInfoForCommand:
elapsedTimeTimestamp
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
localizedDurationString
editingStyleFlags
auxiliaryNowPlayingInfo
integerValue
availableLanguageOptions
currentLanguageOptions
_mediaRemoteContentItem
cancellationHandler
operationType
subscriptionLeaseSession
isDelegatedLeaseSession
setStoreCloudID:
setStorePurchasedAdamID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
initWithRequestContext:storeSubscriptionAdamID:
assetExpirationDate
setExpirationDate:
setDialogDictionary:
fileAssets
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
hlsAsset
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_cancellationHandler
_operationType
_requestContext
setRequestingBundleIdentifier:
clientVersion
setRequestingBundleVersion:
playbackContext
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
query
setLegacyMediaQuery:
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setStartItemIdentifiers:
startTimes
setStartTimeModifications:
endTimes
setEndTimeModifications:
startItemID
playParametersQueue
startItemPlayParameters
localizedName
setDelegate:
_updateProactiveCaching
endProactiveCachingForUserIdentity:
soundCheckEnabled
_equivalencySourceAdamIDForIdentifierSet:
supplementalPlaybackContextBehavior
_sectionedModelObjectsRepresentationForSectionedCollection:
indexForItem:
identifierRegistryWithExclusiveAccessReturningInteger:
indexPathForGlobalIndex:
firstSection
setPlaylist:
itemAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
performSuppressingChangeNotifications:
lock
modelResponse
identifierSetAtIndex:
identifiersForItemAtIndexPath:
identifierRegistryWithExclusiveAccess:
applyChanges:identifierSetLookupBlock:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
unlock
updateSection
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
fallbackSectionRepresentation
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
startTimeModifications
endTimeModifications
assetStoreFronts
mqf_requiredPlaybackProperties
setModelRequest:
setNeedsReload
enumerateItemIdentifiersUsingBlock:
beginAutomaticResponseLoading
MPC_consumeSiriAssetInfo:withCompletion:
weakObjectsHashTable
identifierSetForItem:
beginBackgroundTaskWithName:expirationHandler:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
beginProactiveCachingForUserIdentity:
requiredPropertiesForStaticMediaClips
rtcReportingSessionAdditionalUserInfo
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
supplementalPlaybackContext
updatedPlaybackContext
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_backgroundTaskIdentifier
_backgroundTasks
_endTimeModifications
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_proactiveCacheIdentity
_startItemIdentifiers
_startTimeModifications
_currentItem
_playbackContext
_fallbackSectionRepresentation
mqf_newPlaybackItemMetadata
mqf_configurePlaybackItemMetadata:
mqf_playbackItemMetadataModelObject
requiredProperties
setEpisode:
episode
initWithRadioStationTracks:
setWithCapacity:
countForObject:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithStartHandler:
_radioStationTracks
representedObjectResults
setRadioStationTracks:
radioStationTracks
isSupported
initWithPlaybackContext:
replaceIdentifierRegistry:
containsRestorableContent
shouldRequestAdditionalItemsAtTail
_buildPlaceholder
_inLock_buildPlaceholder
setTailPlaceholder:
shouldAddOriginalPlaybackContextAfterReplacement
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithCompletion:
tailPlaceholderItem
updatePlaybackContext
dataSource
originalPlaybackContext
setState:
isFrozen
setFrozen:
preferredStartItemIdentifier
stateLock
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
_init
initWithQueue:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
initWithContextID:
createRemotePlaybackQueue
supportedOnCurrentPlatform
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
shouldImmediatelyStartPlayback
setShouldImmediatelyStartPlayback:
siriRecommendationID
setSiriRecommendationID:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
initWithContextID:query:
protobufferEncodableObjectFromLibrary:
multiverseIdentifier
queryQueueWithContextID:query:
setFirstItem:
_query
_firstItem
_shuffleType
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
_stationStringID
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
initWithContextID:seedTrack:
geniusQueueWithContextID:seedTrack:
seedTrack
_seedTrack
initWithContextID:identifier:customData:
customData
customDataQueueWithContextID:identifier:customData:
_customData
initWithModelGenericObject:response:
remove
metadataObject
_metadataObject
initWithRoute:bundleID:playerID:
initWithDeviceUIDs:bundleID:pid:playerID:
pathWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
bundleID
appendString:
decodeInt32ForKey:
encodeInt32:forKey:
representedBundleID
lastObject
resolveWithRouteResolvedHandler:completion:
initWithEndpoint:
initWithExternalDevice:
externalDevice
isConnected
isInvalidated
connectWithCompletion:
systemMusicPathWithRoute:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
isFullyResolved
isSystemMusicPath
representedBundleDisplayName
resolveWithCompletion:
origin
mediaRemotePlayerPath
isResolved
_pid
_routeUIDs
_resolved
_bundleID
_playerID
_mediaRemotePlayerPath
_route
processInfo
processIdentifier
mpc_radioContentReference
initWithICRadioContentReference:
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
year
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
_recordReportingEvents:
parentReportingController
childReportingControllers
addChildReportingController:
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
future
setFuture:
_future
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
result
isFinalized
debugLabel
setDebugLabel:
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
_applicationWillTerminateNotification:
playActivityEvent
eventType
shouldReportToStore
eventDate
timeIntervalSinceReferenceDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
isSBEnabled
buildVersion
storeFrontID
isOffline
endReasonType
itemEndTime
itemStartTime
initWithIdentity:
valueForBagKey:
reasonHintType
containerType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
setBuildVersion:
setEventDate:
setItemDuration:
setItemType:
setSBEnabled:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
playActivityController
shouldReportAggregateTimePlayActivityEvents
setShouldReportAggregateTimePlayActivityEvents:
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogStoreAccountID
_nonCatalogBuildVersion
_nonCatalogStoreFrontID
_nonCatalogSourceType
_shouldReportAggregateTimePlayActivityEvents
_shouldReportPlayActivityEvents
_playActivityController
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
representationWithSize:image:
_cacheArtworkRepresentation:forKey:
requestWithURL:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
removeAllObjects
allKeys
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
createPlayerPath
initWithReturnStatuses:error:
outputDeviceUIDs
_sendCommand:withOptions:toEndpoint:toDestination:completion:
singleGroup
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
outputGroups
_sendCommand:path:options:queue:completion:
dictionaryWithDictionary:
_isAnyDeviceControllable:
_findEndpointFromEndpoints:byGroupLeader:
unsignedShortValue
connectToEndpoint:completion:
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
_discovery
returnStatuses
_returnStatuses
setDevices:
initWithResponse:playingItemIndexPath:
initWithDataSource:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setWithArray:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsCreateStation:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
_determineChangeItemSupport
initWithResponse:changeItemSupport:
_setDisabled:
playingItem
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
changeItemCommand
disableModificationsCommand
lastChangeDirection
upNextItemCount
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_lastChangeDirection
_upNextItemCount
_repeatType
_playingItemIndexPath
_playingItemGlobalIndex
_globalItemCount
identifiersForSectionAtIndex:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
replaceWithPlaybackIntent:
specializedIntents
devices
supportedSpecializedQueues
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
_createRadioStationCommandRequest
contentItemIdentifier
_insertWithOptions:
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportsCreateStation
_supportedInsertionPositions
indexPath
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
canMoveItem:
moveItem:afterItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_supportedRepeatTypes
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
currentShuffleType
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
setDisabled:
isDisabled
_disabled
setAnnotationDelegate:
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
itemCount
itemIdentifier
hasItem:inSection:
numberWithLong:
queueController:didIncrementVersionForSegment:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
enumeratorWithOptions:startingAtTailOfSection:
enumeratorWithOptions:startingAtItem:inSection:
entryType
itemResult
trackingEntryResult
enumeratorWithOptions:
insertObject:atIndex:
hasSection:
clearStartItem
setDelegationProperties:
staticSourceWithValue:
replaceDataSource:forSection:completion:
restorationError
displayIndexForContentItemID:
displayCount
numberWithUnsignedInteger:
setNowPlayingInfo:
_itemForContentItemID:allowReuse:
reloadItemsKeepingCurrentItem:
incrementVersionForSegment:
_firstContentItemID
setNextContentItemIDReason:
moveItem:fromSection:afterItem:inSection:
_applyVolumeNormalizationForQueuedItems
deferredNextContentItemAnchorID
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
setShuffleType:startingItem:inSection:
performChangeImmediately:
_allDataSourcesSupportInsertionPositionLast
setShouldExpectEmptyQueue:
queueControllerDidChangeContents:
reset
removeItem:fromSection:
queueCoordinator:itemToFollowItem:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_itemForPair:
setStartItem:
allValues
queueController:failedToLoadItem:
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
isDeletedItem:inSection:
musicRepeatType
_firstContentItemIDInSectionWithIdentifier:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
feeder
queueCoordinator
disableItemReuse
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
queueCoordinator:failedToLoadItem:
queueCoordinator:willInsertItem:afterItem:
queueCoordinatorDidChangeItems:
handlePlaybackFailureForItem:
player:currentItemDidChangeFromItem:toItem:
jumpToFirstContentItem
setQueueCoordinator:
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
nextContentItemID
setNextContentItemID:
setDeferredNextContentItemAnchorID:
setRestorationError:
coderVersions
setCoderVersions:
nextContentItemIDReason
setIdentifierList:
dataSources
setDataSources:
_stateHandle
_hasUserMutations
_allowsQueueModifications
_delegate
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_restorationError
_coderVersions
_nextContentItemIDReason
_identifierList
_dataSources
hasPrefix:
substringFromIndex:
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
setIdentity:
setEnqueuerProperties:
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
initWithPlaybackEngine:options:
initWithOptions:
setManagesAirPlayBehaviors:
setShouldResetQueueWhenReachingEnd:
_playbackUserDefaultsEQPresetDidChangeNotification:
failedItemsIdentifiers
setPlayedSuccessfully:
eventObserver
setAllowsNewPlaybackErrorItem:
_configureAudioSession
changePlaybackIndexBy:deltaType:
musicEQPreset
avPlayer
_setEQPreset:
defaultItemEQPresetType
setupEQPresetWithDefaultPreset:
schedulePlaybackStatePreservation
handlePlaybackErrorWithUserInfo:
engine:didFailToPlayFirstItem:withError:
isStartItem
firstPlaybackErrorItem
engine:didFailToPlayItem:withError:
hasPlayedSuccessfully
playbackHasStartedForItem:
audioSessionCategory
audioSessionOptions
sharedInstance
setCategory:mode:routeSharingPolicy:options:error:
_connectAVPlayer
_player
setVolume:
_contentsChanged
_itemWillChange:
valueForKey:
updateAudioSession
_itemDidChange:
allowsNewPlaybackErrorItem
setFirstPlaybackErrorItem:
_setState:
prefersApplicationAudioSession
_networkPolicyItemCellularRestrictedNotification:
_expectedAssetTypesForPlaybackMode:
setFailedItemsIdentifiers:
_playedSuccessfully
_allowsNewPlaybackErrorItem
_firstPlaybackErrorItem
_failedItemsIdentifiers
_initWithValue:
localDeviceSource
_initWithUserIdentity:
isDevicePrivateListeningEnabled
sourceWithUserIdentity:
overrideValue
_overrideValue
_currentValue
_value
_handleUserIdentityStoreDidChangeNotification:
_loadCurrentValueFromIdentityProperties
sharedAccessQueue
privateListeningEnabled
_cachedValue
_buildLanguageOptionGroups:currentLanguageOptions:
_determineSeekSupport
initWithResponse:seekSupport:
seekSupport
setPreferredForwardJumpIntervals:
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
floatValue
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithLanguageOptionGroups:currentLanguageOptions:response:
initWithResponse:mediaRemoteCommand:
setValue:
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
revision
languageOptionGroups
_seekSupport
_placeholder
_contentItemIdentifier
_revision
_localizedDurationString
_languageOptionGroups
_indexPath
_duration
_contentItemID
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
beginSeekWithDirection:
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
changeValue:
localizedShortTitle
presentationStyle
value
_localizedShortTitle
_presentationStyle
minimumValue
maximumValue
_minimumValue
_maximumValue
dateWithTimeIntervalSinceReferenceDate:
_userIdentityStoreDidChangeNotification:
_proactivelyCacheUserIdentity:
_cacheQueue
_proactiveCachingIdentities
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
_playerItemDidChangeWhenReloadingPlaybackContextNotification:
systemTimeZone
setEventTimeZone:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
setGlobalPlaylistID:
setCloudPlaylistID:
setPlaylistVersionHash:
setRadioAdamID:
setContainerIDs:
setItemIDs:
timedMetadata
setTimedMetadata:
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
mpcReporting_isValidReportingItem
initWithAVItem:
setEndReasonType:
_itemStartTimeForItem:
setItemStartTime:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTimeForCurrentItem:
_reportPlaybackEndedForTimeoutWithItem:
_sendPlaybackEndNotification:endTime:
initialPlaybackStartTime
userChangedItemsDuringPlayback
lastDirection
setReasonHintType:
_sendPlaybackStartNotification
setPlayActivityEvent:
setShouldReportToStore:
notificationWithName:object:
postNotification:
notificationWithName:object:userInfo:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_itemDidChangeWhenReloadingPlaybackContext
_isScrubbing
_itemForCurrentTimeChange
_recordEventOperationQueue
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_reportingController
_storeFrontID
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_privateListeningEnabled
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_createAudioTap
_freeBuffers
_destroyAudioTap
audioMix
_attachAudioTapToPlayerItem:
loadValuesAsynchronouslyForKeys:completionHandler:
audioMixInputParametersWithTrack:
setAudioTapProcessor:
setInputParameters:
setAudioMix:
observers
setPowerLevel:
_analyzeFrequencies:numberFrames:timeRange:
_resizeOrResetBuffers:
beginReport
fftSetup
sampleRate
finishReport
configurePlayerItem:
_analyzeSamples:numberFrames:timeRange:
setSampleRate:
powerLevel
setFftSetup:
setObservers:
_frequencyBuffersSize
_frequencyData
_absoluteFrequencyData
_fftBuffer
_frequencyDataSize
_audioProcessingTap
_sampleRate
_powerLevel
_fftSetup
_observers
addAnalysisBand:
_resizeBandStorage
onUpdate
defaultObserver
numberOfBands
averagePowerOfBandAtIndex:band:
setOnUpdate:
_bands
_bandsStorageSize
_numberOfBands
_onUpdate
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
authorizationError
_explicitContentErrorWithUnderlyingError:message:
authorizationReason
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
ageVerificationStateForUserIdentity:
getAgeVerificationStateWithCompletion:
_setupWithAgeVerificationState:
_setupWithAgeGateForItem:
explicitRating
maximumTVShowRatingForAgeGate
setStatus:
maximumMovieRatingForAgeGate
isExplicitContentAllowed
requestAuthorizationForExplicitItem:reason:completion:
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_status
_authorizationError
_lastKnownAgeVerificationState
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
mediaRemoteReplyQueue
commandCenterForPlayerID:
setReplaceIntent:
initWithCommand:playbackQueue:
initWithCommand:playbackQueue:options:
dispatchCommandEvent:completion:
_mediaRemotePlaybackQueue
processName
initWithName:
dateWithTimeIntervalSinceNow:
sharedService
addAssertion:
strongToWeakObjectsMapTable
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_allCommandInfos
initWithController:
initWithKeyOptions:valueOptions:capacity:
_legacyCommands
_onQueue_updateOptimisticStateForCommand:options:
valueWithBytes:objCType:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:requestRange:
endTransaction
pokeKey:
_mergeContentItem:
imageWithData:
_initWithMediaRemoteContentItem:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_createExportableArtworkPropertiesForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaLibraryArtworkType:
subarrayWithRange:
maximumCapacity
setMaximumCapacity:
performTransaction:
replaceObjectsInRange:withObjectsFromArray:
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticPlayingItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
initWithIdentifier:
setElapsedTime:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
contentItemArtworkCacheStateForArtworkIdentifier:size:
queueIdentifierCacheState
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
intValue
radioStationURL
radioStationPlaybackMetadata
setRadioStationPlaybackMetadata:
_radioStationURL
_radioStationPlaybackMetadata
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
UTF8String
cancelAllOperations
currentThread
_activeProgress
_activeProgressQueue
dictionaryRepresentation
addItem:
mergeFrom:
setHasContainerType:
hasContainerType
hasIdentifierSet
clearItems
itemsCount
hasPlayActivityFeatureName
readFrom:
writeTo:
_containerType
_identifierSet
_has
setCloudCollectionID:
setHasDelegateInfoID:
hasDelegateInfoID
setHasStoreAdamID:
hasStoreAdamID
hasStorePlaylistGlobalID
hasStorePlaylistVersionHash
setHasCloudID:
hasCloudID
hasCloudCollectionID
hasRadioStationID
hasCloudUniversalLibraryID
delegateInfoID
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
radioStationID
_cloudID
_delegateInfoID
_storeAdamID
_cloudCollectionID
_cloudUniversalLibraryID
_radioStationID
_storePlaylistGlobalID
_storePlaylistVersionHash
setHasAccountID:
hasAccountID
hasUuid
hasDeviceGUID
hasDeviceName
setHasSystemReleaseType:
hasSystemReleaseType
hasRequestUserAgent
hasTimeZoneName
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
uuid
timeZoneName
_timeZoneName
_uuid
setHasMediaType:
hasMediaType
setHasExcludeFromShuffle:
hasExcludeFromShuffle
excludeFromShuffle
_mediaType
_excludeFromShuffle
hasContentItemID
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
setPurchaseHistoryID:
setHasPurchaseHistoryID:
hasPurchaseHistoryID
purchaseHistoryID
_purchaseHistoryID
_storeSubscriptionAdamID
setLibraryAlbumContentReference:
setLibraryArtistContentReference:
setLibraryItemContentReference:
setStoreContentReference:
hasLibraryAlbumContentReference
hasLibraryArtistContentReference
hasLibraryItemContentReference
hasStoreContentReference
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
hasAlbumName
setRepresentativeItemCloudID:
setHasRepresentativeItemCloudID:
hasRepresentativeItemCloudID
albumName
representativeItemCloudID
_representativeItemCloudID
_albumName
hasArtistName
artistName
_artistName
setCopyrightText:
hasAlbumArtistName
hasComposerName
contentType
setContentType:
setHasContentType:
hasContentType
hasCopyrightText
setAlbumDiscCount:
setHasAlbumDiscCount:
hasAlbumDiscCount
setHasDiscNumber:
hasDiscNumber
setHasFileSize:
hasFileSize
hasGenreName
setIsCompilation:
setHasIsCompilation:
hasIsCompilation
setHasDuration:
hasDuration
hasTitle
setAlbumTrackCount:
setHasAlbumTrackCount:
hasAlbumTrackCount
setHasTrackNumber:
hasTrackNumber
setHasYear:
hasYear
albumArtistName
composerName
albumDiscCount
genreName
_fileSize
_albumArtistName
_albumDiscCount
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
hasRadioStationURLString
hasSeedContentReference
hasNowPlayingContentReference
hasAccountInfo
radioStationURLString
accountInfo
_accountInfo
_radioStationURLString
addContainer:
accountInfoType
clearAccountInfos
accountInfosCount
accountInfoAtIndex:
clearContainers
containersCount
containerAtIndex:
hasStartingItemIndexPath
setHasShuffleMode:
hasShuffleMode
accountInfos
setAccountInfos:
containers
startingItemIndexPath
_accountInfos
_containers
_startingItemIndexPath
setHasContainerIndex:
hasContainerIndex
setHasItemIndex:
hasItemIndex
containerIndex
itemIndex
_containerIndex
_itemIndex
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
isAppleTV
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
trackType
setLiveRadioStream:
expirationDate
radioStreamAssets
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
isFinished
tracklistActionType
_cacheTracksForStep:
appendItems:
initWithTracks:tracklistAction:
performWithCompletionHandler:
tracklistAction
_tracklistAction
_tracks
stationMetadata
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
initWithData:
modelKind
isRequestingImmediatePlayback
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
URLWithString:
mediaQuery
trackIdentifiers
firstTrackIdentifier
_getPlaybackContextWithRecommendedContentWithSeedAdamID:completion:
isHomeSharingLibrary
stringByRemovingPercentEncoding
initWithBase64EncodedString:options:
initWithMultiverseIdentifier:library:
itemWithPersistentID:
valueForProperty:
isGeniusEnabled
_getPlaybackContextFromCloudControllerWithSeedItem:completion:
_getPlaybackContextFromMediaLibraryWithSeedItem:completion:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
songsQuery
predicateWithPersistentIDs:count:shouldContain:
addFilterPredicate:
geniusItemsForSeedItem:completion:
predicateWithProperty:values:
loadGeniusItemsForSagaID:completionHandler:
userIdentitiesForManageableAccountsWithError:
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
kindWithModelClass:
setUniversalCloudLibraryID:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
stagePlaybackSessionCommand
initWithUnpersonalizedContentDescriptors:
setProperties:forItemAtIndexPath:
initWithAppBundleID:
initWithAppBundleID:playerID:origin:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
decodeHashedRouteUIDs:completion:
_copyWithZone:usingConcreteClass:
systemMediaApplicationDestination
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
resolveWithHashedRouteIdentifiers:completion:
resolveWithRouteIdentifiers:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
_getCompanionOrigin:
appBundleID
hashedOutputDeviceUIDs
outputGroupID
optimisticResponse
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_singleGroup
_optimisticResponse
setAppBundleID:
setPlayerID:
setOrigin:
setOutputGroups:
setOutputGroupID:
setSingleGroup:
setOptimisticResponse:
initWithPlayerID:options:
isMainThread
callStackSymbols
_itemAssetLoadedNotification:
_itemInsertedNotification:
preheatPlayback
stateRestorationSessionIdentifier
loadSessionWithIdentifier:completion:
setWantsPictureInPicture:
beginUsingVideoLayer
endUsingVideoLayer
objects
reportUserSeekFromTime:toTime:
sharedAVSystemController
setAttribute:forKey:error:
setAutomaticallyHidesVideoLayersForMusicVideosWhenApplicationBackgrounds:
audioAnalyzer
autoupdatingActiveAccount
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
ubiquitousIdentifierWithStoreAdamID:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
isStateRestorationSupported
sessionManager
_shouldIgnorePlaybackSessionError:
saveSessionWithCompletion:
proxyForObjects:protocol:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
restoreStateWithCompletion:
setPictureInPictureSupported:
setVideoSupported:
setAudioSessionCategory:
setAudioSessionOptions:
removeEngineObserver:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
isVideoSupported
setFallbackPlaybackIntent:
setStateRestorationSupported:
mediaRemotePublisher
isAudioAnalyzerEnabled
_audioAnalyzer
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_scheduledPlaybackStatePreservation
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_sessionManager
_leaseManager
_accountManager
_audioSessionCategory
_audioSessionOptions
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
playerPathResolutions
_playerPathResolutions
leaseID
initWithConfiguration:
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
setDisplayedCharacterCount:
setLanguage:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
_icSuzeLeaseSession
addPlayer:
_playerDidPauseForPlaybackPreventionNotification:
setShouldPreventLeaseAcquisition:
engine:didPauseForLeaseEndWithError:
stateReasonDialog
stateReasonDialogMetricsDictionary
engineDidPauseForLeaseEnd:
_isPreparingForImminentPlaybackIntent
_hasSubscriptionPlaybackCapability
_enqueuerProperties
initWithURL:
infoDictionary
setNeedsInfoDictionaryUpdate
packageURL
deleteWithError:
saveWithError:
writeWithError:
URLByAppendingPathComponent:isDirectory:
createExternalRepresentation
linkItemAtURL:toURL:error:
dataWithContentsOfURL:
initWithExternalRepresentation:
path
imageWithContentsOfFile:
packageTypeIdentifier
initWithURL:identifier:
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
isEqualToIdentity:
initWithUserIdentity:subscriptionCapabilities:
setHashedDSID:
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
setActiveAccount:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_hashedDSID
_subscriptionCapabilities
_storeFrontIdentifier
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_updateAccounts
compare:
sortedArrayUsingComparator:
accountForHashedDSID:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
accounts
_enumerateIdentitiesWithCompletion:
isActiveLocker
setIdentityStore:
setAllowsExpiredBags:
initWithBlock:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
_lock
playOnPlayerPath:
humanDescription
setAssetStoreFronts:
encodedMediaLibraryUniqueID
_encodedMediaLibraryUniqueID
_shouldReportToStore
_playActivityEvent
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
updateHistoryPlaylist
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
_overridePlayingItem
representativeCloudIdentifier
storeIdentifier
copyright
kind
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
unarchivedObjectOfClass:fromData:error:
registerPlayer:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_rtcReportingController
_playbackHistoryController
_lyricsReportingController
allowEmptySelection
languageOptions
isEqualToLanguageOption:
indexOfObjectPassingTest:
languageOptionType
displayName
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
copyExternalRepresentation
numberOfOptions
indexOfSelectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
_allowEmptySelection
_currentIndex
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
setInteractionLevel:
initWithVerificationContext:
getVerificationContextForUserIdentity:completionHandler:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
isAvailable
initWithUserIdentity:
_copyWithPlaybackRequestEnvironmentClass:
setAllowsHandlingNonAuthenticationDialogs:
setStoreDialogResponseHandler:
_clientVersion
_delegationProperties
base64EncodedStringWithOptions:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
processData:usingProcedure:completion:
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
modifySystemMusicContextForDestination:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
trackForItemAtIndex:
enumerateItemsUsingBlock:
updateWithPersonalizedResponse:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_playbackHistoryStore
_stationTracks
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
serverTrackInfo
likeState
parentTrack
_playbackHistory
_trackModels
initWithInteger:
mediaPlayerBundle
currentDevice
model
initWithFormat:
sendPlaybackQueue:toDestination:withOptions:completion:
sendCommand:toDestination:withOptions:completion:
_findOutputDevicesForDestination:completion:
boolValueForOption:
supportedOptions
playbackSessionIdentifier
playbackSessionType
arrayWithObject:
sendPlaybackQueue:toDestination:completion:
sendPlaybackArchive:toDestination:completion:
_sendCommand
_context
_sendCommandQueue
_allowsStoreContainerImport
_updateHistoryPlaylist
_playEvent
userAdvancedDuringPlayback
setObserver:
setSkipDate:
replaceTrackAtIndex:withTrack:
isSkippable
replaceItemAndIdentifierSet:atIndex:
insertItems:afterItem:
removeItem:
allItems
_endObservingIdentityStoreForSignOut
_startPlaybackRequestWithPlaybackContext:
setReasonType:
_loadTracksWithRequest:completion:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
_defaultGetTracksRequestWithContext:radioStation:
setMainTitle:
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
_errorForRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
_beginObservingIdentityStoreForSignOut
itemForIdentifierSet:
pairWithFirst:second:
first
second
_handleGetTracksResponse:getTracksError:fromRequest:completion:
sharedQueue
_responseDidInvalidateNotification:
_removeRestrictedTracks
_repersonalizeCurrentTracks
synchronizeWithCompletionHandler:
setPreservingCurrentlyPlayingItem:
_playbackQueue
_hasReachedTracklistEnd
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
distantPast
_playbackSessionsDirectory
archivesAtURL:
setDataSourceQueue:
setDisableAutomaticCanBeNowPlaying:
initWithCodingPackage:error:
setWithObject:
decodeRootObjectOfClasses:error:
setAutoPlayWhenLikelyToKeepUp:
sharedSecurityInfo
isContentProtectionEnabled
isDeviceClassCUnlocked
nowPlayingContentItem
initWithCodingPackage:
encodeRootObject:
removeObjectIdenticalTo:
removeLastObject
setStateRestorationSessionIdentifier:
_cachesDirectory
stringWithContentsOfURL:encoding:error:
writeToURL:atomically:encoding:error:
deleteSessionWithIdentifier:completion:
setStagedArchive:
copyWithNewIdentifier:
URLsForDirectory:inDomains:
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedArchive
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedArchive
setIdentifier:
setArtworkIdentifier:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
timedMetadataGroups
stringValue
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithArtworkResponseDictionary:
setArtworkInfoEntries:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
_timedMetadataGroups
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@?16@0:8
v24@0:8@?16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSArray"16@0:8
^{NSMapTable=#}16@0:8
v24@0:8^{NSMapTable=#}16
v16@0:8
{_MSVSignedRange=qq}32@0:8{?=qq}16
@40@0:8@16@24@32
v24@0:8@16
@"NSArray"
^{NSMapTable=#}
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
d16@0:8
v24@0:8d16
@"NSError"
B24@0:8q16
B32@0:8@16@24
v32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@16@24@32
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
q16@0:8
@"ICMusicSubscriptionLeaseStatus"16@0:8
@48@0:8@16@24@32@40
v20@0:8B16
v28@0:8f16@?20
v20@0:8f16
f16@0:8
v32@0:8@16@?24
v40@0:8q16@24@?32
v40@0:8@16@24@?32
v32@0:8@16q24
v28@0:8d16B24
v32@0:8d16@?24
@24@0:8@16
v24@0:8q16
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"ICStoreRequestContext"
@"NSURL"
@"NSString"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICMusicSubscriptionLeaseStatus"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"NSDictionary"
v28@0:8B16@20
@"AVURLAsset"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@16q24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"@"NSError">24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSError">24
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
@"MPMovie"
@"<MPMutableIdentifierListSection>"
@"ICUserIdentityProperties"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
@28@0:8@16B24
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB}24@0:8@16
q24@0:8@16
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@36@0:8@16@24B32
@"NSMutableDictionary"
@"NSMutableArray"
@"MPMutableSectionedCollection"
@"MPStoreModelGenericObjectBuilder"
@"ICUserIdentity"
@"NSDate"
@"MPCModelStorePlaybackItemsRequest"
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
@"MPSectionedCollection"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@24@0:8^{_NSZone=}16
@"MPCPlayerPath"
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
q40@0:8q16q24@32
@40@0:8@16q24@32
q32@0:8q16@"MPMiddlewareChain"24
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
@40@0:8@16@24^@32
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
v24@0:8@"NSNumber"16
v32@0:8@16Q24
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v32@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
v48@0:8@16@24q32@40
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"MPCPlaybackEngine"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
v56@0:8^@16^@24@32q40@48
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v24@0:8Q16
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
v40@0:8@16Q24@?32
@44@0:8I16@20@28@36
I16@0:8
@32@0:8@16Q24
@"MPCPlayerCommandRequest"
v32@0:8@"NSString"16@?<v@?@"MPCPlayerPath">24
v24@0:8@"NSString"16
v28@0:8B16@"NSString"20
@"NSXPCConnection"
v32@0:8{?=qq}16
{?="reverseCount"q"forwardCount"q}
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
q40@0:8q16@24@32
B36@0:8B16@20@28
B32@0:8B16I20@24
@44@0:8@16@24I32@36
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@24@0:8@?16
{CGSize=dd}16@0:8
@"AVPlayerLayer"16@0:8
@"NSArray"24@0:8@"MPRequest"16
v24@0:8@"NSArray"16
@48@0:8@16q24@32@40
@56@0:8@16q24@32@40[1{__va_list_tag=II^v^v}]48
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@"NSObject<OS_dispatch_source>"
@"MPStoreLibraryPersonalizationResponse"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@"<MPCSupportedCommands>"
@"NSIndexPath"
@28@0:8I16@20
f24@0:8@16
@"ICStoreDialogResponse"16@0:8
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"MPModelResponse<MPCModelPlaybackResponse>"
@"MPAVItem"
@"MPCModelPlaybackContext"
{os_unfair_lock_s=I}16@0:8
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContext"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
^{_MRSystemAppPlaybackQueue=}16@0:8
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCReportingController"
@"NSMapTable"
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@24@0:8d16
@"SSVPlayActivityController"
v28@0:8Q16B24
@"CPLRUDictionary"
v44@0:8I16@20@28@?36
v52@0:8I16@20^v28@36@?44
v52@0:8I16^v20@28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@20@0:8B16
@"MPCPlayerCommandRequest"20@0:8B16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"MPAVItem"32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v40@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24@"MPAVItem"32
v24@0:8@"<MPAVQueueCoordinating>"16
v40@0:8@16q24@?32
v44@0:8@16q24B32@?36
@40@0:8q16q24^B32
@40@0:8q16q24^q32
B24@0:8@"MPAVItem"16
q24@0:8@"NSString"16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSError">24
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"MPPlaybackContext"16q24@?<v@?@"NSError">32
v44@0:8@"MPPlaybackContext"16q24B32@?<v@?@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"MPAVController"16@"MPAVItem"24@"MPAVItem"32
@"NSString"40@0:8q16q24^B32
@"MPAVItem"24@0:8@"NSString"16
@"MPAVItem"16@0:8
@"<MPAVQueueControllerDelegate>"16@0:8
v24@0:8@"<MPAVQueueControllerDelegate>"16
@"<MPAVQueueCoordinating>"16@0:8
@"NSArray"40@0:8q16q24^q32
v32@0:8q16@24
v32@0:8q16@"NSString"24
v64@0:8@16q24@32@40Q48@?56
@32@0:8@16^B24
@"<MPAVQueueControllerDelegate>"
@"<MPAVQueueCoordinating>"
@"MPShuffleableSectionedIdentifierList"
@"NSMutableSet"
{?=dddddffBB}16@0:8
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@28@0:8@16I24
@"NSCountedSet"
v40@0:8d16d24@32
v32@0:8d16d24
d32@0:8@16d24
d24@0:8@16
@"MPAVController"
v80@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24{?={?=qiIq}{?=qiIq}}32
^{OpaqueFFTSetup=}16@0:8
v24@0:8^{OpaqueFFTSetup=}16
{DSPSplitComplex="realp"^f"imagp"^f}
^{opaqueMTAudioProcessingTap=}
^{OpaqueFFTSetup=}
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
^{_MPCAudioSpectrumAnalyzerBandInternal={MPCAudioSpectrumAnalyzerBand=ff}fffQ}
B28@0:8@16B24
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
v48@0:8I16@20I28@32@?40
v52@0:8I16@20@28@36@?44
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?@"MPModelObject">24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"<MPArtworkDataSource>"
^{_MRMediaRemoteCommandInfo=}20@0:8I16
@"<MPCRadioPlaybackIntentTracklistTokenRadioStationMetadata>"
v32@0:8^v16@?24
@32@0:8@16@?24
@"NSProgress"
i16@0:8
v20@0:8i16
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
{?="representativeItemCloudID"b1"storeAdamID"b1}
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
{?="storeAdamID"b1}
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
{?="containerIndex"b1"itemIndex"b1}
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
v32@0:8q16@?24
@"MPCStoreLibraryPersonalizationMiddleware"
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
@"MPCAudioSpectrumAnalyzer"
@"<MPCPlaybackEngineDelegate>"
@"MPCPlaybackIntent"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"_MPCAVController"
@"_MPCMediaRemotePublisher"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
v32@0:8@16^v24
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"MPModelSong"
@"SSVPlayActivityEnqueuerProperties"
B24@0:8^@16
@"MPNowPlayingContentItem"
@"UIImage"
@"MPCPlayerSessionResponse"
@"SSVPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPRTCReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
@"ICRadioGetTracksResponse"
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v48@0:8@16@24@32@?40
@"MPCAssistantSendCommand"
@"MPCAssistantContext"
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"_MPCPlaybackSessionArchive"
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
