@333333
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
%{public}@ didUpdateQueue:
%{public}@ _transitionToBuildState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToBuildState %{public}@ -> %{public}@
build:replace
%{public}@: calling completion intent=%{public}@ status=%{public}@
intent=%{public}@ status=%{public}@
build
%{public}@ _transitionToSourceState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToSourceState %{public}@ -> %{public}@
source:getPlaybackContext
error=%{public}@
%{public}@ _transitionToLiveLinkState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToLiveLinkState %{public}@ -> %{public}@
link:start
PlaybackStackInitialSetup
 enableTelemetry=YES 
PlaybackStackSetup
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
QueueControllerReload
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
reloadWithPlaybackContext failed - error: %{public}@ - resolution: %ld
QueueControllerInsert
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
replaceCurrentItemWithPlaybackContext failed with error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
[%{public}@]-MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@ - play: %{BOOL}u - mode: %{public}@
shouldPlay=%{BOOL}u
InitialItem
PrepareForRate
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
[%{public}@]-MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
[%{public}@]-Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
[%{public}@]-endPlaybackWithIdentifier %{public}@ - Received: clearing all playback queue
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
[%{public}@]-Pause for lease prevention %{public}@ completed - error=%{public}@
[%{public}@]-Pause command %{public}@ completed - error=%{public}@
[%{public}@]-Play command %{public}@ completed - error=%{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
[%{public}@]-Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
[%{public}@]-Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
[%{public}@]-End seek command %{public}@ completed - error=%{public}@
[%{public}@]-Set rate command %{public}@ completed - rate=%f - error=%{public}@
[%{public}@]-Set current time command %{public}@ completed - time=%f - error=%{public}@
Unexpected _logTimeJumpForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected _playbackDidStopForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-Triggering MR command %{public}@ from userAction: %{public}@
[%{public}@]-Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - currentItemWillChangeFromItem - %{public}@ -> %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidBecomeCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidResignCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - rate: %.2f - effectiveRate: %2f - state: %{public}@ - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - userSeekCompletedForItem - item=%{public}@ - [%.2fs -> %.2fs]- timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
Unexpected itemDidFailToPlayToEnd: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - No existing formats on item
[%{public}@]-%{public}@ - active audio format from AV: %{public}@
[%{public}@]-%{public}@ - [AF] - Updating active format : %{public}@
[%{public}@]-Event %{public}@: startup time: %lfs - bitrates: [observed:%lf, indicated:%lf, average audio:%lf, switch:%lf] - entry reason:%ld
[%{public}@]-%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - from stalling:%{BOOL}u - timeStamp:%{public}@
[%{public}@]-PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
Unexpected playbackDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackDidStopForItem- item=%{public}@ - source:%{public}@ - reason:%{public}@   - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeNotifiedForItem - item=%{public}@ - rate:%1.2f - reason:%{public}@ - participant:%{public}@ - timeStamp:%{public}@
Unexpected playbackRateDidChangeNotifiedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - firstFrameWillRenderForItem - item=%{public}@ - startTime:%{public}.2f
Unexpected firstFrameWillRenderForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - timeControlStatusDidChange - status:%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - stateDidChange - [%{public}@/MP:%ld/NP:%ld -> %{public}@/MP:%ld/NP:%ld] - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
Unexpected playbackBufferStateDidChangeToState:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackIsLikelyToKeepUp:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - tracksDidChange: - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - end of queue reached [%{public}@]
[%{public}@]-%{public}@ - Media Services were interrupted - item:%{public}@ - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were interrupted - no item at death - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were restored - timeStamp:%{public}@
[%{public}@]-%{public}@ - Playback stuck on non-playable item: %{public}@
[%{public}@]-%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
Unexpected firstVideoFrameWasRenderedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - relativeVolumeDidChangeTo: - volume=%{public}f - timeStamp:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidStartForItem: - item=%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidEndForItem: - item=%{public}@ - error:%{public}@ - resolution:%{public}@
Unexpected assetLoadingDidCompleteForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected assetLoadingDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Playback failed due to age verification requirement: %{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Cancelling download request [dealloc] - request:%{public}@
%{public}@: Missing DSID in delegated identity properties - skipping playback
[%{public}@]-%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
[%{public}@]-[AL] - %{public}@: Preferred audio: %{public}@ - allowsHLSContent: %{BOOL}u - Selector: %{public}@, playbackAuthorizationToken=%{public}@, fileAsset=%p, storeAsset=%p
[%{public}@]-[AL] - %{public}@: Starting asset load...
[AL] - %{public}@: Returning asset load early with error: %{public}@
[%{public}@]-[AL] - %{public}@: Asset is %{public}@ - Preferred audio: %{private}@, isDelegatedPlayback=%{BOOL}u, allowsStreamingPlayback=%{BOOL}u, endpointType=%d
[AL][Bag Loading] - %{public}@: Failed to load the bag. err=%{public}@.
[%{public}@]-[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Finished loading url bag.
[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Timed out loading url bag.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Subscription lease properties already loaded.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Loading subscription lease properties.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished loading subscription lease properties.
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out loading subscription lease properties.
LoadAssetGetSubscriptionLeaseProperties
[%{public}@]-[AL] - %{public}@: Using local file asset at path: %{public}@.
[AL] - %{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
LoadAssetLocalFileLoadOperation
[%{public}@]-[AL] - %{public}@: Using home sharing asset.
[AL] - %{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
LoadAssetHomeSharingLoadOperation
[%{public}@]-[AL] - %{public}@: Using existing Radio cached playback response: %{public}@
[%{public}@]-[AL] - %{public}@: No cached Radio playback response found.
LoadAssetAssetInfoCacheRequest
[%{public}@]-[AL] - %{public}@: No local file of appropriate quality, using cloud streaming.
[AL] - %{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
[AL] - %{public}@: Subscription is required, and we failed to load the subscription status.
[AL] - %{public}@: Playback authorization token is required for playback.
[AL] - %{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
LoadAssetSubscriptionAssetLoadOperation
[AL] - %{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
LoadAssetMediaRedownloadOperation
[AL] - %{public}@: No valid endpoint type (%ld), skipping streaming redownload.
[AL] - %{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
LoadAssetLowQualityFileLoadOperation
[%{public}@]-[AL] - %{public}@: Ready to process asset load result: %{public}@
[%{public}@]-[AL] - not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
[%{public}@]-[AL] - %{public}@: Using iTunes Store Content Info: %@
[%{public}@]-[AL] - %{public}@: Non HLS Asset - Reloading playback keys if required
[%{public}@]-[AL] - %{public}@: Radio station does not require a subscription, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Protection type is %li, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Not subscription content, skipping playback key check.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Lease session invalid, skipping key loading.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Reloading FairPlay key status to ensure the latest value is known...
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@ with error: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
LoadAssetLoadFairPlayKeyStatus
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Already have playback keys from lease status: %{public}@, no need to do another request.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the asset requires online keys
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the lease status indicates none available: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished subscription lease request for playback keys with error: %{public}@.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
LoadAssetLeaseSessionPlaybackRequest
[%{public}@]-[AL] - %{public}@: AVURLAsset %{public}@ - options: %{public}@
[%{public}@]-[AL] - %{public}@: Initiating full online key retrieval [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Using purchase bundle: %{public}@
[%{public}@]-[AL] - %{public}@: Attempting to load full subscription asset [first asset requires online keys]
[AL] - %{public}@: Full subscription asset loading completed [first asset requires online keys]
[AL] - %{public}@: Initiating caching [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Asset download completed successfully.
[%{public}@]-[AL] - %{public}@: Writing placeholder purchase bundle at path: %{public}@
[AL] - %{public}@: Asset download completed with error: %{public}@
[%{public}@]-[AL] - %{public}@: Loaded full subscription asset, updated purchaseBundle = %@
[AL] - %{public}@: Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
[AL] - %{public}@: Failed to load full subscription asset: %{public}@.
[%{public}@]-[AL] - %{public}@: Writing purchase bundle at path: %{public}@
[%{public}@]-[AL] - %{public}@: Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
[AL] - %{public}@: Error caching file asset: %{public}@.
[AL] - %{public}@: Finished caching file asset.
[AL] - %{public}@: Removed incomplete download at URL: %{public}@
[%{public}@]-[AL] - %{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
LoadAssetCRABSAssetDownload
[%{public}@]-[AL] - %{public}@: Forcing a refresh of the hls keys due to a certificate mismatch
[AL] - %{public}@: Failed to fetch FairPlayKeyStatus for offline key determination error: %{public}@
[%{public}@]-[AL] - %{public}@: Not requesting offline keys because Fairplay does not have offline subscription keys
[%{public}@]-[AL] - %{public}@: Using ContentKeySession for SKD [New HLS audio tracks] %{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Initiating download to destination file %{public}@
[AL] - %{public}@: [HLS streaming cache] Failed to create download url session for HLS asset
[AL] - %{public}@: [HLS streaming cache] Attempting to cache asset of type %{public}@ using HLS caching logic
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Setting cache properties of HLS asset with traits: %{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Failed to update cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Caching of HLS asset completed successfully
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Asset download complete. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Clearing cached asset file [fatal download error]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Failed to clear cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Clearing cached asset [asset is corrupted]. Error=%{public}@
LoadAssetHLSAssetDownload
contentType=%{public, signpost.telemetry:string1, name=contentType}s
[%{public}@]-%{public}@: Setting gapless info: %{public}@
LoadAssetCreateAVPlayerItem
[%{public}@]-[AL] - %{public}@: Starting Suze lease session...
[AL] - %{public}@: Failed to create suze lease with error: %{public}@.
[AL] - %{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
 enableTelemetry=YES isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAssetSuzeLeaseSession
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s result=%{public, signpost.telemetry:string2, name=result}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
[%{public}@]-[AL] - %{public}@: Asset load finished.
[%{public}@]-%{public}@: [AF] - Updating preferred audio format: %{public}@ -> %{public}@
[%{public}@]-%{public}@: [AF] - Updating active audio format: %{public}@ -> %{public}@ - Justification: %ld
[%{public}@]-%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
[%{public}@]-%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
[%{public}@]-%{public}@: Transforming error network unavailable instead of original: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Getting subscription lease session
[%{public}@]-[LeaseRatePreparation] - %{public}@: Sending subscription lease request
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@ error: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Subscription lease not required]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Playback keys not required ]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [No subscription lease session available]
[%{public}@]-%{public}@ Using start time: %f
[%{public}@]-%{public}@ Using stop time: %f
[%{public}@]-%{public}@ Using bookmark start time: %f
%{public}@: setupWithPlaybackInfo called without an asset loaded
%{public}@: setupWithPlaybackInfo called without an asset loaded and isAssetLoaded is TRUE
%{public}@: Uninitialized MPModelPropertyAlbumTraits - album=%{public}@.
%{public}@: Uninitialized MPModelPropertyPlaylistTraits properties - playlist=%{public}@.
[%{public}@]-BackgroundTask: Took assertion (%lli) at %{public}s:%d
[%{public}@]-%{public}@ Using adamID %lld for key server requests from identifier set %{public}@
[%{public}@]-%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
[%{public}@]-%{public}@: Enabling album loudness on player item %{public}@
[%{public}@]-%{public}@: Setting loudness info %{public}@ on player item %{public}@
[%{public}@]-%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Loading subscription status...
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Skipping subscription lease load since the subscription status indicated it shouldn't be used
[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@ with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Loading subscription lease session...
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Finished loading subscription lease session: %{public}@
[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Failed to load subscription lease session with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Posting ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification: %{public}@
[%{public}@]-BackgroundTask: End assertion (%lli) at %{public}s:%d
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - updating prevention status - lease status: %{public}@
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - Lease playback prevention state did change to: %li [status: %{public}@
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
Did not report <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] completion %{public}@
|%{public}@ %{public}@  
 STREAM START 
 %{public}@ [%d] 
|%{public}@ %{public}@ %{public}@
 SESSION BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION END                %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE END        %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 SESSION RESET [BOUNDARY]   %{public}@
|%{public}@ %{public}@ %{public}@
 APPLICATION TERMINATION
|%{public}@ %{public}@ %{public}@
 APPLICATION FOREGROUND
|%{public}@ %{public}@ %{public}@
 APPLICATION BACKGROUND
|%{public}@ %{public}@ %{public}@
 DEVICE CHANGED
|%{public}@ %{public}@ %{public}@ 
 name: %{private}@; model: %{public}@
|%{public}@ %{public}@ %{public}@  
 application: %{public}@/%{public}@; bundleID: %{public}@; sourceVersion: %{public}@; uuid: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 root: %{public}@; uuid: %{public}@; debug: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 os: %{public}@ [%{public}@]/%{public}@ %{public}@; internalCarry: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 NET REACHABILITY CHANGED   %{public}@
Unexpected signalStrength values: %{public}@
|%{public}@ %{public}@ %{public}@
 NETWORK TYPE CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 strength: %{public}@
|%{public}@ %{public}@ %{public}@  
 constrained: %{BOOL}u; high quality: %{BOOL}u; expensive: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 COMMAND BEGIN              %{public}@ 
|%{public}@ %{public}@ %{public}@ 
  source: %{public}@
|%{public}@ %{public}@ %{public}@  
 nowPlayingContentItemID: %{public}@
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@
 COMMAND TIMEOUT            %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@ 
|%{public}@ %{public}@ %{public}@
 COMMAND END                %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@  
 dialog.title: "%{public}@"; dialog.message: "%{public}@"
|%{public}@ %{public}@ %{public}@  
 dialog-action: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
   error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ADD                  %{public}@
|%{public}@ %{public}@ %{public}@ 
 queue: %{public}@
|%{public}@ %{public}@ %{public}@  
 feature: %{public}@
|%{public}@ %{public}@ %{public}@  
 queue-grouping-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 account: %{public}@
|%{public}@ %{public}@ %{public}@  
 requesting-application: %{public}@/%{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedAccount: %{public}@; delegatedDeviceName: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedDeviceOSVariant: %{public}@; delegatedDeviceUserAgent: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegated-private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 private-listening-source: %{public}@; private-listening-override: %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM ADD             %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REMOVE          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REORDER         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD BEGIN           %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD END             %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@ 
 title: %{public}@
|%{public}@ %{public}@ %{public}@  
 playlistVersionHash: %{public}@
|%{public}@ %{public}@ %{public}@  
 stationType: %{public}@; stationSubtype: %{public}@
|%{public}@ %{public}@ %{public}@  
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER END              %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BEGIN                 %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 duration: %0.2f; initialPosition: %0.2f; startBoundary: %0.2f; endBoundary: %0.2f
|%{public}@ %{public}@ %{public}@  
 requiresPAF: %{BOOL}u; video: %{BOOL}u; artistUploaded: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM UPDATE                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM JUMP                  %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f; end: %0.2f
|%{public}@ %{public}@ %{public}@  
 userInitiated: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM PAUSE                 %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 end: %0.2f
|%{public}@ %{public}@ %{public}@  | reason: %{public}@
|%{public}@ %{public}@ %{public}@  | source: %{public}@
|%{public}@ %{public}@ %{public}@
 RATE CHANGED               %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 position: %0.2f
|%{public}@ %{public}@ %{public}@  | participant: %{public}@
|%{public}@ %{public}@ %{public}@  
 rate: %0.2f
|%{public}@ %{public}@ %{public}@
 FIRST AUDIO FRAME          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %{public}@
|%{public}@ %{public}@ %{public}@  
 wait time: %0.2fs
|%{public}@ %{public}@ %{public}@  
 gap: %0.2fs
|%{public}@ %{public}@ %{public}@
 ITEM RESUME                %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f
|%{public}@ %{public}@ %{public}@
 READY TO PLAY              %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER READY          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER STALL          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER FINISH         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 skd: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM METADATA PING          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 data: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM END                   %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 didPlayToEnd: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 AUDIO CHANGE               %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 activeFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 targetFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification: %{public}@; preferences: %{public}@
|%{public}@ %{public}@ %{public}@  
 alternate: %{public}@
|%{public}@ %{public}@ %{public}@  
 audioRoute: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET BEGIN           %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET END             %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM ASSET INFO            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@, subscription: %{BOOL}u, delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 network ops: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM CONFIGURED            %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@  
 hlsMetadataWaitTime: %0.3fs
|%{public}@ %{public}@ %{public}@
 ITEM FAILED                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER END            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 HLS BEGIN                  %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 hasIndeterminateDuration: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 HLS END                    %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA BEGIN       %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA END         %{public}@
|%{public}@ %{public}@ %{public}@
 ERROR RESOLUTION           %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT END              %{public}@
|%{public}@ %{public}@ %{public}@ 
 resume: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 POLICY BEGIN
|%{public}@ %{public}@ %{public}@
 POLICY END
|%{public}@ %{public}@ %{public}@
 BEHAVIOR CHANGED           %{public}@
|%{public}@ %{public}@ %{public}@ 
 shuffle:  %{public}@
|%{public}@ %{public}@ %{public}@  
 repeat:   %{public}@
|%{public}@ %{public}@ %{public}@  
 autoplay: %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES LOST       %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES RESET      %{public}@
|%{public}@ %{public}@ %{public}@
 ROUTE CHANGED              %{public}@
|%{public}@ %{public}@ %{public}@ 
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 isAirPlay: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 shouldPause: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 PLAYER TIME CONTROL STATUS
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@         [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@
 SHARED SESSION BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 PARTICIPANTS CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 localUserIdentifier: %{public}@
|%{public}@ %{public}@ %{public}@  
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@  
 participants.count: %ld
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC BEGIN  %{public}@
|%{public}@ %{public}@ %{public}@ 
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC END    %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT UPDATE             %{public}@
|%{public}@ %{public}@ %{public}@ 
 store-id: %{private}llu; storefront: %{public}@; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 household-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 subscription: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
[PIA] %p will not run requests for itemIdentifiers=%{public}@
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
[PIA] %p skipping item [store lookup failed] itemID=%{public}@
[PIA] %p Handling SP response=%p isFatalError=%{BOOL}u error=%{public}@
[PIA] %p Adding identifiers=%{public}@ as permanently failed items
%p Could not import response=%p to SOD. Error=%{public}@
MPCModelStorePlaybackItemsRequestAccumulator _updatedObjectWithPlaybackAuthorizationToken: is using vac token from the request. Object: %@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
[PIA] %p Found %d childIdentifierSets for %{public}@ with parentVersionHash=%{public}@, childKey=%d
[PIA] %p Error creating identifierSet for itemID=%{public}@ as _personID is nil
[PIA] %p Not updating identifiers=%{public}@ with vacToken=%{public}@ as personID on the request is nil
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackQueueReceived
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackReady
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPMusicPlayerControllerServer: startServer: resummed systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: startServer: deferred resume waiting for canBeNowPlaying systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: stopServer
getNowPlaying
getNowPlayingsForContentItemIDs
getNowPlayingAtIndex
setNowPlayingItem
getTimeSnapshot
MPCMusicPlayerControllerServer: play: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
play
MPCMusicPlayerControllerServer: pause: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
pauseWithFadeDuration
MPCMusicPlayerControllerServer: nextTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: previousTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
skipWithBehavior
reshuffle
MPCMusicPlayerControllerServer: reshuffle: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekForward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekBackward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
beginSeekWithDirection
endSeek
MPCMusicPlayerControllerServer: seekForward: endSeeking: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: changeRepeatMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setRepeatMode
getRepeatMode
MPCMusicPlayerControllerServer: changeShuffleMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setShuffleMode
getShuffleMode
MPCMusicPlayerControllerServer: changePlaybackPosition: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setElapsedTime
setPlaybackRate
MPCMusicPlayerControllerServer: changePlaybackRate: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getUserQueueModificationsDisabled
setUserQueueModificationsDisabled
MPMusicPlayerControllerServer: prerollWithCompletion FAILED [not implemented]
MPMusicPlayerControllerServer: beginPlaybackAtHostTime FAILED [not implemented]
MPMusicPlayerControllerServer: engine:didChangeToItem: - %{public}@ - reloading:%{BOOL}u
MPMusicPlayerControllerServer: connection invalidated: pid=%u
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
[Publisher] Updating active account requires authorization tokens: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
SessionActivation
_MPCMediaRemotePublisher: Failed to bless application
success=%{BOOL}u
publisher:bless
_MPCMediaRemotePublisher: Delaying audio activation [internal setting]: %gs
_MPCMediaRemotePublisher: Finished delaying audio activation [internal setting]
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [contextID does not match queueControllerUniqueID]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [command option to disable]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p is in shared listening mode]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
[Publisher] _updateSupportedCommands canFF=%{BOOL}u canRW=%{BOOL}u canSeek=%{BOOL}u canPreviousTrack=%{BOOL}u canNextTrack=%{BOOL}u prefersSeekOverSkip=%{BOOL}u
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportsCreateRadioStation=%{BOOL}u (activeAccountAllowsSubscriptionPlayback=%{BOOL}u, currentItemPlaceholder=%{BOOL}u)
[Publisher] _updateSupportedCommands canRepeatShuffle=%{BOOL}u shuffleType=%ld repeatType=%ld queueEndAction=%ld supportedActions=[%{public}@]
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportedPositions=[%{public}@]
[Publisher] _updateSupportedCommands disableQHO=%{BOOL}u supportedSessionTypes=%{public}@ exportableSessionTypes=%{public}@
[Publisher] _updateSupportedCommands libraryAddStatus=%{public}@ isAddable=%{BOOL}u
UpdateSupportedCommands
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
PerformCommandSetPlaybackQueue
PerformCommandPlay
command=%{public, signpost.telemetry:string1, name=command}s
PerformCommandOther
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
 enableTelemetry=YES status=%{public, signpost.telemetry:string2, name=status}s
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [allowing command] type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [failing command] type=%{public}@ id=%{public}@ interface=%{public}@
Cannot skip backwards from current item: %{public}@
Cannot skip forwards from current item: %{public}@
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=KeepUpNext [in shared listening]
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
EndPlayback
Create playback context failed with error: %{public}@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=LeaveSharedSession [received shared listening intent while already in shared listening]
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
AccountRectification
type=replaceCurrentItem
SetQueue
 SetPlaybackQueue (keeping up next with no current item) recovered
type=reload
Radio station getPlaybackContext failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Add to playback context failed: %{public}@
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: cannot preload playback session with immediate priority, please send followup MRMediaRemoteCommandSetPriorityForPlaybackSession command.
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: SetPriorityForPlaybackSession [ignoring non-Immediate priority]
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
Change rate failed. (error = %{public}@)
shareQueue:getTracklist
shareQueue:buildIntent
status=%{public}@
Unsupported command: %{public}@ id=%{public}@
MPCMediaRemotePublisher: %p - [Lease] - Session migration will begin - identifier:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end with error [Stealing the lease back] - identifier:%{public}@ - error:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end - identifier:%{public}@
[AL] - %{public}@: Skipping local asset [assets from cache not allowed]
[AL] - %{public}@: Downloaded file quality overrides preferred file quality - File: %{public}@ > Preference: %{public}@
[AL] - %{public}@: Downloaded file quality matches preferred file quality 
[AL] - %{public}@: Cached HLS file quality determination: audioAssetTypesMatch=%{BOOL}u - fileAssetHasKeyServerData:%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=%{BOOL}u
[AL] - %{public}@: Cached file quality determination: isHLSAsset=%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=NO
[AL] - %{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
[AL] - %{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
[AL] - %{public}@: %{public}@ file is CRABS
[AL] - %{public}@:  %{public}@ file is HLS file - Traits: %{public}@
stationPlaybackAuthorizationToken=%{public}@ for identifier=%{public}@
%{public}@: File asset missing file path, finishing.
[AL] - %{public}@: File traits translation from MPFileAsset to MPMediaItem: %{public}@ -> %{public}@ - Existing file traits: %{public}@
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
MPCPlaybackHistoryController %p - Previous track does not meet playback history threshold - previous:%{public}@
item=%{public}@
LoadAsset
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
ConfigureItem
Device supports streaming
Network connection is available
No network connection available
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
MPCRTCEventConsumer: testingDelegate set. RTC messages will not be sent.
MPCRTCEventConsumer: Cannot send RTC message. Missing queueAddEvent for event=%@ with time=%@
MPCRTCEventConsumer: No itemBeginEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: Missing MPCPlaybackEngineEventPayloadKeyItemRTCHierarchyToken for MPCPlaybackEngineEventTypeItemBegin with time=%@
MPCRTCEventConsumer: Generated new RTC session. category=%@ serviceName=%@
MPCRTCEventConsumer: _payloadForSessionStart: Invalid item start event. type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: No QueueLoadEndEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionSummary: sessionStartItemEvent=nil event.type=%{public}@ event.date=%{public}@
MPCRTCEventConsumer: _payloadForItemAssetLoad: firstItemResumeEvent=nil
MPCRTCEventConsumer: _perceivedItemStartTime: itemStartEvent=nil
MPCRTCEventConsumer: _perceivedItemStartTime: sessionStartEvent=nil
MPCRTCEventConsumer: _updateAssetLoadInfoEvent requires MPCPlaybackEngineEventTypeItemAssetLoadEnd type
MPCRTCEventConsumer: [RTCReporting startConfigurationWithCompletionHandler:] failed with no backends
MPCRTCEventConsumer: Can't send RTC message. session=nil. category=%{public}@
MPCRTCEventConsumer: Sent RTC message. category=%{public}@ type=%{public}@
MPCRTCEventConsumer: RTC Message send failed. category=%{public}@ error=%{public}@
WaitForLikelyToKeepUp
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
WaitForReadyToPlay
PlayToSetRate
SetRateToEffectiveRate
seekToTime: %{public}@ currentTime: %{public}@ currentSceneIndex: %ld currentLoopCount: %ld URL: %{public}@ signpostID: %llu
SeekToTime
finished: %{BOOL}d
MPCScriptedLooper %p: Cancelled preloading metadata.
MPCScriptedLooper %p: metadataStatus was %ld.
MPCScriptedLooper %p: Cancelled preloading playable.
MPCScriptedLooper %p: playableStatus was %ld.
MPCScriptedLooper %p: Failed to preload duration. error=%{public}@
MPCScriptedLooper %p: Cancelled preloading duration.
PlayPerfJSON: %{public}@
PlayPerf: %{public}@
Logging event %{public}@ to CoreAnalytics with payload:
%{public}@
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
[AL] Error retrieving HLS session metadata - Asset:%{public}@ - Error:%{public}@
[AL] Time-out while retrieving HLS session metadata - Asset:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d error=%{public, signpost.telemetry:string1, name=error}s
ErrorResolution
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable failure [subscription required for playback] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Processing fatal playback error - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - nil item received [Queue failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Playback has not yet succeeded [Adding to queue failure set]
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Playback has succeeded for at least one item [Ignoring queue failure]
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Stopping playback for a first item or unrecoverable asset loading error. error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Failed to queue any items] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure - nil item] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Specified first item failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Entire queue loading failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Subscription required] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure] error=%{public}@
[AL] - %{public}@: Using subscription playback endpoint with operation type: %li
[AL] - %{public}@: Loading subscription lease session...
[AL] - %{public}@: Failed loading subscription asset due to missing lease session.
[AL][Lease] - %{public}@: Has subscription lease session, using it. Lease status: %{public}@
[AL] - %{public}@: Loading %{public}@ asset from Mini Sinf...
[AL] %{public}@: MPCModelGenericAVItemSubscriptionAssetLoadOperation execute [loading asset from cache] prefersVideoContent=%{BOOL}u preferredAudio=%{private}@
[AL] - %{public}@: Loading %{public}@ asset - Preferred audio: %{private}@
[AL] - %{public}@: Using existing cached playback response: %{public}@
[AL] - %{public}@: Skipping subscription asset request [offline]
[AL] - %{public}@: Performing subscription playback request...
[AL] - %{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Performing subscription accountless playback request...
[AL] - %{public}@: Skipping accountless playback request [offline]
[AL] - %{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Skipping assets in the server object database [delegated lease]
[AL] - %{public}@: Skipping assets in the server object database [no online lease]
[AL] - %{public}@: Skipping assets in the server object database [no assets found]
[AL] - %{public}@: Skipping assets in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Found an asset with no sinf, skipping assets in server object database
MPCModelQueueFeeder applyVolumeNormalizationForItem: soundCheckEnabled=%{BOOL}u
MQF %p: setting override start time: %{public}@ for item: %{public}@
MQF %p: setting override stop time: %{public}@ for item: %{public}@
MQF %p: Supplemental playback context created: %{public}@ - reason: %ld
MQF %p: defersResponseReplacement: change details out of sync [identifierRegistry count mismatch] countDuringDiff=%ld countDuringApply=%ld
MQF %p: Crashing [invalid change details] reason=%{public}@ changeDetails=%{public}@
NoValidItems
MQF %p: Siri asset info: %@
MQF %p: loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
MQF %p: Failed to load identity properties. error: %{public}@
ModelShimRequest
MQF - loadPlaybackContext - SiriAssetInfo results contain items not in the queue startItemIdentifiers=%{public}@ storeItems=%{public}@
MQF %p: itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
MQF %p: [BackgroundTasks] %{public}@ Expired.
MQF %p: [BackgroundTasks] %{public}@ Background Task Failed to Start.
MQF %p: [BackgroundTasks] %{public}@ Start [%lu]
MQF %p: [BackgroundTasks] End [%lu]
ModelRadioPersonalizationRequest
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
PlayActivityFeedEventConsumer %p: _handleItemResumeEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPositionJumpEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPauseEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemEndEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleApplicationTerminationEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueItemIdentifier - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find accountIdentifier event=%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier for delegated playback] - event:%{public}@ - cursor:%{public}@
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
com.apple.mediaplaybackcore.videodebug: %@
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %{public}@
Deallocating future that wasn't finalized or invalidated: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
[%{public}@]-MPCPlayerItemConfigurator %p - Setting EQ to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Processing user default audio quality change
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reloading all queued items] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reconfiguring all queued items & player] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayer setup: %{public}@ - currentItem: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving audio formats - item:%{public}@ - error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No audio formats in HLS session data [Setting up player item using preferred audio asset type] - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Audio formats available in HLS session data [Setting up player item] - item:%{public}@ - Preferred format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - AVPlayerItem setup:%{public}@ - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving HLS metadata - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error decoding HLS metadata [Clearing audioFormatsDictionary] - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Route changed to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no player item]
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no preferred format on item] - item: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred audio format changed [configuring player item] - item:%{public}@ - downloaded:%{BOOL}u - audio format: %@ -> %@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayerItem setup: %{public}@ - item:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Screen mirroring is on for an audio item - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - We prefer buffered audio over url flinging for audio items - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Dispatching %{public}@ command to destination: %{public}@
Command %{public}@ to destination: %{public}@
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Send to originating device: Not remote controllable.
Send to originating device: Unable to discover
Cannot send command: no output devices specified in destination: %{public}@
Cannot decode active identity
Searching for output devices matching UIDs: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@
Sent %{public}@ to %{public}@: %{public}@
Send to external destination: No matching account.
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
queueController %p: clearUpNext: reloading items [queue updated]
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
queueController %p: finalizeStateRestorationWithCompletion: restored dataSource=%p section=%{public}@
section=%{public}@
QC-FinalizeDataSource
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
reasons=%{public}@
QC-FinalizeDataSource-Original-Rectify
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: moveContentItemID: reloading items [update for move after]
queueController %p: moveContentItemID: reloading items [update for move before]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset disconnecting interposingHost on dataSource: %{public}@
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: removeContentItemID: reloading items [update removed item]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
[ITFIT] queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID mismatch] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: [missingIDSet intersects nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
queueController %p: itemToFollowItem: [missingIDSet does not intersect nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
[ITFIT] queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
[ITFIT] queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [no enumerated items]
queueController %p: didReachEndOfQueueWithReason: calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: didReachEndOfQueueWithReason: publisher.leaveSharedSession complete status=%{public}@
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: sessionDidEnd: [InterposingHost] calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] publisher.leaveSharedSession complete status=%{public}@
queueController %p: jumpToItem:inSection: ignoring request to jump to item that is already current [InterposingHost] currentContentItemID=%{public}@
queueController %p: jumpToItem:inSection: setting nextContentItemID [InterposingHost] nextContentItemID=%{public}@
queueController %p: jumpToItem:inSection: reloading items [jump to item]
queueController %p: jumpToItem:inSection: failed [content item not in SIL] contentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to queueCoordinator:itemToFollowItem:] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [rootItem for offset zero] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [returning nil] contentItemID=%{public}@ jumpToItem=%{BOOL}u reachedEnd=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to _contentItemIDWithOffset:%ld] item=%{public}@
queueController %p: updatePlayerPlaybackCoordinator: %@
queueController %p: _queueIDPairForIdentifierListIDPair: failed to convert to queueID [dataSource did not have containerInfo] inSharedListeningMode=YES itemIdentifier=%{public}@
queueController %p: _identifierListIDPairForQueueIDPair: failed to convert to identifierListID [invalid container ID (queueSectionID)] inSharedListeningMode=YES queueIDSection=%{public}@ queueIDItem=%{public}@
queueController %p: _addPlaybackContext: reloading items [interpose queue modification] keepCurrentItem=NO
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addPlaybackContext: [entering shared listening mode] SLQF=<%{public}@ %p>
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: _emitEventsForItemChangeFromItem:toCurrentItem: skipping MPCPlaybackEngineEventTypeContainerBegin [placeholder container] containerIdentifiers=%{public}@
queueController %p: _highQualityMusicStreamingOnCellularDidChange: reloading items [pref changed] keepCurrentItem=YES
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@ identifierListSection=%{public}@
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [tailPlaceholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [datasource specified placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item from previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item not from current nor previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [failed to create item] missingContentItemID=%{public}@
queueController %p: _removeContentItemID: load items if needed [preloading] section=%{public}@
queueController %p: _removeContentItemID: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
MPCQueueController: _soundCheckEnabledChangedNotification soundCheckEnabled=%{BOOL}u
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: AutoPlay disabled in bag
queueController %p: _transitionToAutoPlayState: reloading items [invalidateQueue] keepCurrentItem=%{BOOL}u
queueController %p: autoplay loading [triggered]
[SLQF] %p loadPlaybackContext:completion [allocating live link] liveLink=%p sessionID=%{public}@
[SLQF] %p loadPlaybackContext:completion [reusing live link] liveLink=%p sessionID=%{public}@
[SLQF] %p removeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown beforeItemID] beforeItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown afterItemID] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: [ignoring unknown itemID, adding to beginning] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [received direct current item change while PlayNow request in flight] startItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [server omitted startItemID] startItemID=%{public}@ resolvedStartItemID=%{public}@
[SLQF] %p didJumpToItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p liveLink:didEncounterError: [attempting retry] error=%{public}@
[SLQF] %p liveLink:didEncounterError: [not attempting retry] error=%{public}@
[SLQF] %p liveLinkDidReconnect
[SLQF] %p liveLink:didUpdateParticipants: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didUpdateQueue: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didReceiveDirectCurrentItemChanged:fromParticipant: [setting shouldRefreshBeforeActive] state=%{public}@ deferredCurrentItemID=%{public}@ participant=%{publich}@
[SLQF] %p liveLink:didReceiveEvent: [converted to MPCSharedListeningEvent] icEvent=%{public}@ mpcEvent=%{public}@
[SLQF] %p liveLink:didReceiveEvent: dropping event  [state not Active] state=%{public}@ event=%{public}@
[SLQF] %p playbackCoordinator:identifierForPlayerItem: [ignoring unknown itemID] itemID=%{public}@ avPlayerItem=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [expired] action=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [no such item] missingItemID=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [placeholder item] idSet=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [satisfied] action=%{public}@
[SLQF] %p _enqueuePendingActionWithLabel: enqueuing action=%{public}@
[SLQF] %p _ICSharedListeningForMPSILItemIdentifier [unknown SIL ItemID] id=%{public}@ IDRegistry=%{public}@
[SLQF] %p _MPSILItemIdentifierForICSharedListeningItemIdentifier [unknown SharedListening ID] id=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentAdded item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReordered item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReplaced item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=Reaction item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [unknown item] event=Reaction itemIdentifier=%{public}@
[SLQF] %p _sectionedCollectionForQueue: nil value for ICSharedListeningItem playbackParams["kind"]
[SLQF] %p _sectionedCollectionForQueue: unhandled value for ICSharedListeningItem playbackParams["kind"]=%{public}@
[SLQF] %p _updatePlayerLiveLinkConnection _playbackCoordinator=%{public}@
[SLQF] %p _transitionToState: from=%{public}@ to=%{public}@
[SLQF] %p callSuperLoad failed to get expectedCurrentItem error=%{public}@
PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
Setting %{public}@ EQ to %{public}@}
Setting up EQ for %{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: nil item received [Queue failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Failed to queue any items] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure - nil item] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Ending playback [Entire queue failure]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has not yet succeeded [Adding to queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has succeeded for at least one item [Ignoring queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Stopping playback for a first item or unrecoverable error. error=%{public}@
_MPCAVController %p - playbackHasStartedForItem: [marking play as successful] item=%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackHasStartedForItem] playerID=%{public}@ item=%{public}@
MPCPlaybackEngine: -[AVAudioSession setCategory:%{public}@ mode:%{public}@]
MPCPlaybackEngine: Unable to set audio session category to %{public}@: %{public}@. Retrying in 1s.
AVController: queue boundary, restarting queue [%{public}@]
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from MPHomeUserMonitor privateListeningEnabledForCurrentUserAndAccessory - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: Failed to load private listenting value from account. err=%{public}@
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No matching account for dsid=%{private}@ (enabling private listening as the fallback)
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No userMonitor for account with identifiers=%{private}@ (using MPHomeUserPreferencePrivateListeningFallbackValue)
[KAOS] <%p> Resolved devices: %@
[KAOS] <%p> Sending discovered local endpoint to caller
Modify context: slow error: %{public}@
Modify context: slow
[KAOS] <%p> Routing to devices
[KAOS] <%p> Routing completed with error %@
Discover devices of group: %{public}@
Discover devices: %{public}@
[KAOS] <%p> Sending default local endpoint to caller
Discover logical devices: %{public}@
Using local endpoint.
Not a home theater.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, failing because device requires command redirection
No discovered endpoint, use local
Searching for endpoint, pilot %{public}@
Searching endpoint for leader: %{public}@
Pair is not group leader. Endpoint: %{public}@
No discoverable pair
Not being airplayed to
Not a stereo pair
Failed to set output devices on primary endpoint: %{public}@
[MPCReportingPlaybackObserver] DidReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification Item will change from: %p to: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, playbackState=%d, updatedPlaybackState=%d, willIgnoreItemChangeNotification=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification did not find valid end reason to post event
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification oldPlaybackState == playbackState (%d) - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification currentItem: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, oldPlaybackState=%d, playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _hasPendingContainerChange=%{BOOL}u, shouldPostPlayEndEvent=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification ignoring notification - playback state=%d, _isReloadingWithPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemDidChangeWhenReloadingPlaybackContextNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
Audio tap reported samples before we had an appropriately sized buffer
sharedListeningTracklist:modelRequest:perform
items=%lld; error=%{public}@
[SLQF] %p getSharedListeningTracklist unexpected failure [intersectsSet returned NO] startItemIdentifiers=%{public}@ itemIdentifierSet=%{public}@
section=%ld
sharedListeningTracklist:modelRequest:scramble
items=%lld
sharedListeningTracklist:modelRequest:enumerate
[SLQF] %p getSharedListeningTracklist failed (1/3) [invalid start item IDs] startItemIdentifiers=%{public}@
[SLQF] %p getSharedListeningTracklist failed (2/3) [invalid start item IDs] request=%{public}@
[SLQF] %p getSharedListeningTracklist failed (3/3) [invalid start item IDs] response=%{public}@
[SLQF] %p getSharedListeningTracklist [dropping unsupported IDs] unsupportedIDs=%{public}@
[AL] - MPCAudioAssetTypeSelector - Starting Audio type selection [from preferences] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - No enhanced audio available on this store front
[AL] - MPCAudioAssetTypeSelector - Audio type selection [from preferences]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from preferences & route]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting audio format selection [from preferences & route] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from audio asset type & route]: %{public}@
MPCExplicitContentAuthorizationManager %p - Music Video playback is not allowed for item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ status=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Could not find metadata dictionary in the payload. Will default to store platform response
[MPCModelStorePlaybackItemsRequest] Found metadata dictionary (%{public}@), but unexpected format
[MPCModelStorePlaybackItemsRequest] Siri asset info has payload type=%d.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
Siri asset info contains %lu assets.
Siri asset info resulting in preferred shuffled starting with identifier=%{public}@
Siri asset info expected to have results dictionary, found %{public}@ instead.
Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info relevant to HLS playback: item %ld - audioTraits: %{public}@ - assetURLs keys: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info - Updating response for item %ld with HLS info: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info %{public}@ HLS asset info
Failed to import payload - error=%{public}@.
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVS: Executing create database statement: %{public}@
EVS: Unable to create events table. statement: '%{public}@' error: %{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: invalidate: Removing database at url=%{public}@ error: %{public}@
EVS: invalidate: Removing database at url=%{public}@
EVS: addConsumer consumer=%{public}@:%p
EVS: removeConsumer %{public}@:%p
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: emitEventType - Dropping event. (EVS is invalidated) time=%{time_t}zd type=%{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVS: lastEventsWithCount - returning empty array. (EVS is invalidated)
EVS: Unable to retrieve contents of directory. url=%{private}@ error=%{public}@
EVS: Removing database package at url=%{public}@ error: %{public}@
EVS: Removing database package at url=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: cancelSubscription consumer=%{public}@:%p
EVS: flushEvents consumer=%{public}@:%p
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
EVC: returning count of 0. (datebase invalidated)
EVC: unable to enumerate events. (datebase invalidated)
EVC: step error: %{public}@
EVC: returning nil. (datebase invalidated)
EVC: statement error %{public}@ : %{public}@
EVC: json decode error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p starting with userIdentity=%{public}@, subscriptionStatusResponse=%{public}@.
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: re-running personalization [previousResponse.isInvalidForPersonalization] previousResponse=%p userIdentity=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ requestedStoreIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ sectionedModelObjects=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: completing without using store metadata controller [no remaining IDs to request] unpersonalizedContentDescriptors=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: first batch complete without using store metadata controller [prioritized IDs initially loaded]
MPCModelStorePlaybackItemsRequestOperation %p initialResultHasItemsWithPlaybackAuthorizationToken=%{BOOL}u, useMediaAPILookup=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p starting to load container item metadata using Media API endpoint (shouldBatchResultsWithPlaceholderObjects=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionItemRequest=%p with totalItemCount=%d]
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemMetadataRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemMetadataRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for renewalRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemAuthTokenRenewalRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p all requests have finished]
MPCModelStorePlaybackItemsRequestOperation %p requesting store metadata for %ld items itemIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p got response=%p for SP request=%p with error=%{public}@ 
MPCModelStorePlaybackItemsRequestOperation %p got subscription status=%{public}@ for identity: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
[AL] - %{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
[AL] - %{public}@: Skipping redownload asset request [offline]
[AL] - %{public}@: Performing media redownload request...
[AL] - %{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Unable to extract valid load result from extracted media redownload asset response - Response:%{public}@ - Error:%{public}@
[AL] - %{public}@: Missing response item in media redownload request response
[AL] - %{public}@: Missing asset URL in media redownload request response
[AL] - %{public}@: Missing redownload parameters.
[AL] - %{public}@: Missing store request context.
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
setting stationPlaybackAuthorizationToken=%{public}@ for context=%{public}@
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from local identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - identical to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
[FPPC] engine:didChangeAccounts: removing account=%{public}@
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
fetched lease
already had lease
fppc:fetchMiniSINFs
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@
fppc:fetchMiniSINFs:account
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
hasMoreAssets=%{BOOL}u
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [subscription type is glide]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
account=%{public}@ error=%{public}@
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
PSP: Requested playback state preservation for player: %{public}@
StateRestore-WaitingForAccounts
StateRestore-MRCheck
shouldRestore=%{BOOL}u
didRestore=%{BOOL}u
StateRestore
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u
PSP: Clearing state restoration identifier for player: %{public}@ [state restoration failed]
PSP: Skipping playback state preservation for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state preservation for player: %{public}@
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
Starting playback preheating...
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
Using new playback engine
Using legacy playback engine
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MRCPPC: Registering for endpoint topology changes with unresolved player path: %@, endpoint identifier: %@
MRCPPC: Received endpoint invalidation for unresolved player path: %@.
[Lease] - MPCLeaseManager: %p - prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
[Lease] - MPCLeaseManager: %p - prepareForPlayback: preparing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [no subscription lease session] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: renewing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished
[Lease] - MPCLeaseManager: %p - Can steal lease if needed
[Lease] - MPCLeaseManager: %p - engine:didChangeToState: - Received user interaction event - state:%lu
[Lease] - MPCLeaseManager: %p - State for lease playback prevention [evaluation] - item:%{public}@ - shouldPreventPlayback:%{BOOL}u - playbackState:%ld - isPlaying:%{BOOL}u
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [pending reasons %{public}@]
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [lease being acquired] - item:%{public}@
[Lease] - MPCLeaseManager: %p - Pausing [current item (%{public}@) requested playback prevention]
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engine:didPauseForLeaseEndWithError:] - item: %{public}@ - userInfo: %{public}@
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engineDidPauseForLeaseEnd:] - item: %{public}@
[AccountManager] - Dropped account refresh because too many (%{public}ld) attempts have been made
[AccountManager] - Clearing glide subscription data for %{public}@
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Updated accounts [silent]: %{public}@
[AccountManager] - Refreshing due to previous timeout
UpdateAccounts
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
[AccountManager] - will purge playback authorization tokens for %{public}@ as subscription status has changed (new status= %{public}@)
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForMetadataItems: Well-defined string script data corresponding to %{public}@ not found [returning nil] metadataItems=%{public}@
Error serializing JSONObject with scriptData. error=%{public}@ scriptData=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForScriptData: Well-formatted V1 scene script not found [returning nil] JSONObject=%{public}@
Cannot decode override user identity. Using active account.
[Lease] - MPCLeaseController: %p -  Requesting lease for %{public}@
[Lease] - MPCLeaseController: %p -  Relinquishing lease for %{public}@
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p -  Discarding returned item and requesting a new one [item cannot be reused] - Discarded item:%{public}@
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
%@ (%x): %@
%@_BEGIN (%x): %@
%@_END (%x): %.3fs %@
%@_END (%x) CANCELLED: %.3fs %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@
discovering UIDs: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
no application on target
removing devices from origin %{public}@
remove failed with error: %{public}@
force remove for output devices: %{public}@
result: %{public}@
completed error: %{public}@
completed
Send Command: %{public}@
[KAOS] <%p> sendCommandWithResult %@
Encoding device IDs: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
[KAOS] <%p> Completing with error %@, commandResult: %@
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
[KAOS] <%p> Sending command %@ to destination %@ endpoint %@
[KAOS] <%p> Command %@ completed with result: %@
[KAOS] <%p> Checking existing devices on target endpoint: %@ 
[KAOS] <%p> Creating hosted endpoint for local because we have unmatched existing devices: %@ 
[KAOS] <%p> Removing unmatched existing devices: %@ 
[KAOS] <%p> Removal completed with error %@ 
[KAOS] <%p> Found suitable endpoint %@ 
Expected to find devices for destination %@, but none found.
[KAOS] <%p> Create hosted endpoint for routes %@ 
Command completed
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
[MPCAssistantCommand sendPlaybackQueueWithResult:toDestination:withOptions:] - No MPHomeUserMonitor with userIdentifier=%@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Originating device destination: %{public}@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
[MPCAssistantGetVolume] Completing with error: %{public}@
MPCItemBookmarker %p - Previous loaded item bookmark data updated %{public}@ - PlaybackStoppedTime:%.2fs
MPCItemBookmarker %p - Current loaded item bookmark data updated %{public}@
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
Unbalanced call `_setupBoormarkingTimerForItem/`tearDownBookmarkingTimer` [Check the logs] - Item %{public}@
RQF %p: Updating current item: %{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
rqf:loadPlaybackContext
allowsRadioService=%d error=%{public}@
allowsRadioService=%d
rqf:loadPlaybackContext:allowsRadioService
RQF %p: loadPlaybackContext: context=%{public}@, Siri asset info:%@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
rqf:loadPlaybackContext:getTracks
reasonType=%d error=%{public}@
reasonType=%d
rqf:loadPlaybackContext:getHistory
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
rqf:reloadSection
rqf:reloadSection:diff
rqf:reloadSection:apply
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
[BackgroundTasks] %{public}@ Expired [%lu]
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
RQF %p: _defaultGetTracksRequestWithContext: failed to get userMonitor for dsid=%{private}@
RQF %p: _defaultGetTracksRequestWithContext: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
rqf:detectSignOut:getUserIdentityProperties
didSignOut=%{BOOL}u error=%{public}@
didSignOut=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: clearing tracklist [nil active account]
[BackgroundTasks] %{public}@ End [%lu]
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
 error=%{public}@
rqf:_handlePersonalizationResponse
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
RQF %p: adding get tracks operation operationCount=%lld
RQF %p: personalization response is invalid
rqf:_removeAllTracks:diff
rqf:_removeAllTracks:apply
RQF %p: Removing %ld restricted tracks from section
changes=%{public}@
rqf:_removeRestrictedTracks:diff
rqf:_removeRestrictedTracks:apply
applying
FirstAudioFrame event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event is of a following item in queue (eventID:%{public}@ item:%{public}@ %{public}@)
identifier: %{public}@
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
LoadSession
timeout
LoadSession-Finalize
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [InSharedListeningMode] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to get artwork with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to encode with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@ error: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [out of disk space] deleted old archives attempting to save again
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: created archive identifier=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
MPCSharedListeningPlaybackIntentDataSource.m
Deallocated without calling live link completion
Build shared intent timeout
Live link connection failed
Canceling intent loading because live link already had content %@
Unexpected state transition %@ -> %@
Content type is not supported in live link
Missing required parameters (tracklist) [error == nil]
WaitingOnSourceAndLinkToSendQueue
SourceFailed
LiveLinkFailed
InitialQueueSending
InitialQueueFailed
BuildSucceeded
BuildTimedOut
Unknown/state=%ld
Loading
FailedToLoad
Loaded
Connecting
Failed
WaitingForFirstQueueUpdate
WaitingToSendQueue
mediaType
identifierSet
excludeFromShuffle
_MPCPlaybackEngineMediaFrameworkImplementation
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
Q8@?0
Unable to find a start item in the playback context %@
Playback engine stack has not been setup yet. Set a playback queue first before calling %s.
-[_MPCPlaybackEngineMediaFoundationImplementation replaceCurrentItemWithPlaybackContext:identifier:completionHandler:]
Playback engine implementation no longer exist
InternalPauseWithFadeout_%@
InternalEndPlayback_%@
-[_MPCPlaybackEngineMediaFoundationImplementation playWithRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithFadeout:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseForLeasePreventionWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation togglePlaybackWithIdentifier:completion:]
Attemping to toggle playback with incompatible state - CurrentState:%@
-[_MPCPlaybackEngineMediaFoundationImplementation skipWithDirection:identifier:completion:]
next
previous
-[_MPCPlaybackEngineMediaFoundationImplementation beginScanningWithDirection:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation endScanningWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation setRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation jumpToTime:identifier:completion:]
_MPCPlaybackEngineMediaFoundationImplementation.m
_setupPlaybackStackWithPlaybackEngine failed to create a new MFPlaybackStackController
playbackState
currentItem
currentRate
currentTime
targetRate
MediaFoundationStack
engineID
item == nil || [(MPAVItem *)item isKindOfClass:[MPAVItem class]]
AVMusicAppBehavior
Queue Controller Contents Changed
Error resolution paused
previous == nil || [(MPAVItem *)previous isKindOfClass:[MPAVItem class]]
current == nil || [(MPAVItem *)current isKindOfClass:[MPAVItem class]]
source == MFItemChangeSourceQueue
queueItem != nil
MFAudioSessionConfiguration
%0.9fs
Unspecified explanation
Play Queue Identifiers Changed
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
Playing Identifier Changed
Failed to get playing identifier
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ [repeatIteration=%ld] %@
%lli
%@: Missing DSID in delegated identity properties - skipping playback
 not
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
Missing subscription for playback
Missing playback authorization token for playback
DisableOptimizeAccessForLinearMoviePlayback
match
purchaseHistory
isPlaceholder
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
host mismatch
path mismatch
v16@?0@"MPModelFileAsset"8
com.apple.MediaPlayer.MPCModelGenericAVItem.streaming_playback.
wifi.
@"ICURLSession"8@?0
availableMediaCharacteristicsWithMediaSelectionOptions
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
q24@?0@"MPCPlayerAudioFormat"8@"MPCPlayerAudioFormat"16
v16@?0@"ICMusicSubscriptionLeaseSession"8
stream-provider-id
AssetLoadingBug
setupWithPlaybackInfo.isAssetLoaded==NO
setupWithPlaybackInfo._asset==nil
Oasis
playEvent
item
album
ModelBug
album.traits=nil
playlist
playlist.traits=nil
@16@?0@"MPCPlayerAudioFormat"8
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.500.40/MediaPlaybackCore/Engine/Implementation/Model/MPCModelGenericAVItem.m
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse64kbpsQuality
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
q24@?0@"NSString"8@"NSString"16
%@=%@,
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSString"16^B24
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
com.apple.radio.ping.jingle
%@,%ldkbps,%ld
%@,%ldkhz,%ld
Unspecified
Progressive
HLS [stereo]
high-res lossless
spatial
atmos
surround
Bluetooth
Wired Ethernet
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
containerIndex
itemIndex
v28@?0^v8@"NSString"16f24
com.apple.MediaPlaybackCore/logging
q24@?0@"MSVFrameworkDescription"8@"MSVFrameworkDescription"16
<unknown>
kMRMediaRemote
Bag [%.3fs]
Lease [%.3fs]
SuzeLease [%.3fs]
MediaRedownload [%.3fs]
SubscriptionAssetLoad [%.3fs]
route: %@ (%@), 
eqPreset: %d
, soundCheckVolumeNormalization: %.3f
, loudnessInfo: %@
Waiting
Playing
FailSilently
StopPlayback
RetryLastAction
Unreachable
Likely Reachable
Reachable
WiFi
Device
Account
Queue
File
Home Sharing
Asset Info Cache
Server Object Database (SINF)
Server Object Database (MiniSINF)
Server
Unsupported
No player found for %@
Unexpected implementation class found: %@
# Player: %@
## PlaybackStack
MPCModelStorePlaybackItemsRequestAccumulatorItemIdentifierSetKey
MPCModelStorePlaybackItemsRequestAccumulatorCollectionPlaybackAuthorizationTokenKey
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"MPModelGenericObject"8Q16^B24
MPCModelStorePlaybackItemsRequestAccumulator.m
Unknown playlist entry: %@
@32@?0@8q16^B24
Found unplayable object in SOD: %@
@32@?0@8@"NSIndexPath"16^B24
Attempting to populate items for non model object: %@
v24@?0Q8^B16
Unknown item to request metadata
section playbackAuthorizationToken cannot be nil
Unknown request type = %d
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
com.apple.MediaPlaybackCore/Siri
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
CRABS
Duration
refId
endTimeReciever
delegateInfoID
storeSubscriptionAdamID
purchaseHistoryID
cloudUniversalLibraryID
@"MPMusicPlayerControllerNowPlaying"16@?0@"NSString"8
No item provided to setNowPlayingItem
Unable to play item %@
PlayItemInQueue is currently not enabled or the playback engine is not ready
%@:%@ did not provide image data.
%@:%@ does not support artwork.
Queue descriptor was not provided.
Queue was interrupted by another queue
Preparing queue timed out
iapd
Failed to prepare to play
SetPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for prepend
InsertIntoPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for append
_MPCMusicPlayerControllerServer.m
performQueueModifications is not supported for the system music application
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
Failed to apply queue modifications
Prepare queue failed with unexpected start item
DelayMusicServerConnection
MPCMusicPlayerControllerServer
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
Playback response has no valid file asset: %@
allows caching: %@
HLS: %@
cloud streaming: %@
online keys required: %@
path extension: %@
audio asset type: %@
downloaded: %@
Overview
Purchase bundle dictionary
assetURL
alt. HLS playlist URL
protected content support storage URL
URLs
key certificate URL
key server URL
alt. HLS key certificate URL
alt. HLS key server URL
key server protocol type
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
@"MPArtworkCatalog"16@?0d8
app.music.media-clip
tracks
com.apple.mobileipod
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore.playbackSession-v4.opack
REMOTE_CONTROL_LIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
_MPCSkipNextStateRestoration
Cannot leave shared session [not in shared session] queueController=%@
LeaveSharedSession is not supported in the legacy engine
Failed to end playback
Failed to load previous session
Unable to restore state [no state restoration session ID]
now_playing
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
_MPCMediaRemotePublisher.m
Playback engine implementation is nil
v16@?0@?<v@?B@"NSError">8
Failed to build fallback playback context from intent %@
Failed to load fallback playback context %@
Failing due to no content in the player and no fallback intent.
v16@?0@"MPRemoteCommandCenter"8
com.apple.Music.queue
%@&currentItem=%@
No queueController
com.public.text
com.apple.Music.events
 (%@)
kMRMediaRemoteOptionSenderID
mediaserverd not available to perform command
Failed to activate audio session
Failed to playWithRate:1.0
v20@?0B8@"MPRemoteCommandStatus"12
Failed to pauseWithFadeout:%g
Cannot pause because there is no current item.
Cannot toggle play/pause because audio session activation failed.
Failed to toggle playback
Current item forbids skipping backwards: %@
Current item forbids skipping forwards: %@
Cannot play item in queue due to item policy
Cannot find item by trackID: %lld
newPlaybackImplementation must implement skipWithDirectionShouldJumpToItemStart:
Failed jumpToTime:%lf
endOfQueuePause_%@
nextTrack
Failed to begin rewinding
Failed to begin fast-forwarding
Attempting to stop scanning without scanning
Failed to end scanning
Failed to jumpToTime:%g
Cannot jumpToTime without a current item.
Cannot modify queue with playback authorization token protected content
SharedQueue feature requires a subscription
Failed to build playback context from queue: %@
Cannot modify queue due to iAP lockout
Failed to insert playback context: %@
Insert operation indicated specific insertion position type, but no content item ID provided.
Failed to move item: %@
Unsupported repeatType %ld
Failed to remove item: %@
Cannot find item to remove: %@
Account is not authenticated: %@
Account failed to prepareToPlay: %@
Cannot override mutated queue without override.
Failed to verify play queue: %@
Failed to load playback context: %@
Failed to reload playback context: %@
siri
Failed to build radio context from playback intent: %@
Failed to build intent into playbackContext: %@
Failed to add radio station to queue: %@
Failed to get radio intent from song: %@
Cannot create station with seed item without current item
Failed to finalize queue controller
No current item or session load failure: %@
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
Failed to decode queue data
Unsupported sessionType %@
Command did not contain queue data.
session does not exist for identifier: %@
ignoring unimplemented non-immediate priority: %ld
Cannot find session with identifier: %@
Unable to find item to add to library: trackID=%lld currentItem=%@
Failed to setRate:%g
Failed to share queue [no current item]
Unable to build shared queue tracklist from current queue.
com.apple.music.live-link-identity-json
Failed to build shared queue intent from current queue.
?id=%@&key=%@
com.apple.music.shared-session-url-components
v24@?0@"MPCPlaybackIntent"8@"MPCPlayerCommandStatus"16
Unsupported command event: %@
requestImageWithCompletionHandler: called with nil image.
Transportable representations only available for queue controller.
Session contains non-transportable content
subscription
cloudLibrary
storeFront
voiceOnly
Added
Addable
AddableSomeExplicitContentRestricted
UnaddableAllExplicitContentRestricted
UnaddableCloudLibraryRequired
UnaddableCloudLibraryInitialImport
UnaddableLibraryAddIneligibleContent
UnaddableInvalidContentType
UnaddableSubscriptionAccountLinkingRequired
UnaddableSubscriptionRequired
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPModelPlaybackPosition"8
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
Downloaded
Cached
HLS [hr lossless
com.apple.MediaPlaybackCore
NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Middleware
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Preferences
Reporting
QueueController
QueueController_Oversize
SDKPlayback
SDKPlayback_Oversize
Session
Delegation
Video
SharedSession
Analytics
Analytics_Oversize
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
Unexpected queueController class found: %@
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
lossless
lossy stereo
AssistantPlaybackQueue
AssistantRemoteControlDestination
CommandOptionsIdentifier
v40@?0@"NSUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"@"NSError"B>32
deviceGUID
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
 source=%@
MPCPlaybackIntent.m
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
%@ did not produce representative model object or error
modelObject
No matching properties for reprentative object: %@
v24@?0@"MPModelGenericObject"8@"NSError"16
Metadata Object did not produce nowPlayingInfo: metadataObject=%@ contentItem=%@
original
sessionID
<ARCHIVE LOADER>
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
v16@?0@"<MPMutablePlaybackArchive>"8
Cannot handle unknown generic object metadata.
Expected a flattened generic object.
com.apple.MediaPlayer
SEASON_DISPLAY_FORMAT_%@
Cannot handle unknown playlist entry when capturing metadata.
skey
<%@ %p: sessionID=%@>
radioStationID
radioStationURLString
seedContentReference
nowPlayingContentReference
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
PlaybackEngine.implementation.currentItem.type didChange
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
isExecuting
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
isFinished
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
MPCAssetLoadingOperation - Asset loading failed [AVPlayerItem status failed] - Item:%@
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssetLoader.m
MPCAssetLoader must have a configurator set to work properly
Attempting to load an item which has no loadable asset: %@
v32@?0@"MPAVItem"8q16@"NSError"24
RadioAvailabilityController
/System/Library/PrivateFrameworks/Radio.framework/Radio
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
Store Front Local Equivalency Metadata Response Finished
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
v16@?0@"MPCPlayerCommandStatus"8
<%@: %p commands=(%@)>
B16@?0@"MPCPlayerCommandStatus"8
No commands provided.
MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
@16@?0@"MPCMediaRemoteCommandOperation"8
label
<%@: %p command=%@>
Command was cancelled before it was performed.
Did not attempt command because dependent command failed.
Either Controller or PlayerPath is required to perform a change request.
Queue is user curated and requires override
Feature requires active subscription
Unsupported content type
Failed to perform command %@
MPCPlayerCommandRequest player path resolution completion not called
PlayerPath did not resolve route to origin: %@
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.music.playbackqueue.sharedlistening
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
 playerPath=%@
tracklistRange
playerPath
playingItemProperties
v16@?0@"ICLiveLinkIdentity<ICMutableLiveLinkIdentity>"8
B16@?0@"NSURLQueryItem"8
@"MPRemoteCommandStatus"16@?0@"MPRemoteCommandStatus"8
tracklist
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
ContinueListening
CL_MaxQueueReferences
CL_PrefetchThreshold
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
StationPlaybackAuthorizationToken
playbackRequestEnvironment
queueEndAction
continueListening
nowPlaying
seed
stationID
stationName
stationURL
YYYY-MM-dd HH:mm:ss.SSSXX
com.apple.MediaPlaybackCore/RTC
com.apple.MediaPlayer.MPCRTCEventConsumer
app.music.unknown
v16@?0@"RTCReporting"8
migrationPlaybackSession
nominal
NetworkInterfaceChange
SecureKeyLoad
SessionStart
SessionSummary
QueueLoad
ItemAssetLoad
ItemSummary
UnexpectedCategory:%d
%@ timed out
%@ deallocated
MPCAnalyticsSignpost.m
Subclass %@ must implement -%@ defined in %@.
MPCAnalyticsSignpost
MPCScriptedLooperErrorDomain
status
metadata
playable
MPCScriptedLooper.m
Scene collection frame rate cannot be 0.
com.apple.Music
playbackRequestEnvironment=%@
 storeIDs=[ %@ ]
 tokens=[ %@ ]
 sectionedModelObjects=[ <%ld sections>
  %2ld <%ld items> %@: [
  %2ld,%2ld %@
    ... (%ld remaining items)
  ... (%ld remaining sections)
 trustID=[ %p ]
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
MPCModelStorePlaybackItemsRequestCodingKeyStoreIDsToPlaybackTokens
MPCModelStorePlaybackItemsRequest.m
Cannot encode MPCModelStorePlaybackItemsRequest that contains a SharedListeningQueue
<%@:%p>
playbackEngine
invalidationObservers
MPC_PLAY_ONLY_FOR_ME
<%@: %p title="%@" type=%@ commandRequest=%@>
DialogAction:%@
<%@: %p title="%@" message="%@" actions=%@>
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
com.apple.amp.mediaplayer.playperf.FirstItem
com.apple.MediaPlaybackCore/PlayPerf
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
file
http
assetSource
errorResolutionApplied
featureName
firstAudioFrameWaitTime
formatInfoBitDepth
formatInfoBitrate
formatInfoChannelLayout
formatInfoCodec
formatInfoMultiChannel
formatInfoSampleRate
formatInfoSpartialized
formatInfoTier
hasAccountInfo
hasGetTracksWaitTime
hasLeaseWaitTime
hasLookupWaitTime
hasMediaRedownloadWaitTime
hasOnlinePlaybackKeys
hasSubscriptionAssetLoadWaitTime
hasSuzeLeaseWaitTime
hlsMetadataWaitTime
isActiveAccount
isDelegatedPlayback
isReplacingPlayback
isSharePlay
isShuffled
lookupWaitTime
mediaPlayerTime
mediaRedownloadWaitTime
musicWaitTime
playCommandSendTime
queueLoadWaitTime
queueType
routeInfoType
sessionActivationTime
totalTime
@"NSDictionary"8@?0
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
OutOfMemory
SessionNotRunning
DeviceAlreadyUsedByAnotherSession
NoDataCaptured
SessionConfigurationChanged
DiskFull
DeviceWasDisconnected
MediaChanged
MaximumDurationReached
MaximumFileSizeReached
MediaDiscontinuity
MaximumNumberOfSamplesForFileFormatReached
DeviceNotConnected
DeviceInUseByAnotherApplication
DeviceLockedForConfigurationByAnotherProcess
SessionWasInterrupted
MediaServicesWereReset
ExportFailed
DecodeFailed
InvalidSourceMedia
FileAlreadyExists
CompositionTrackSegmentsNotContiguous
InvalidCompositionTrackSegmentDuration
InvalidCompositionTrackSegmentSourceStartTime
InvalidCompositionTrackSegmentSourceDuration
FileFormatNotRecognized
FileFailedToParse
MaximumStillImageCaptureRequestsExceeded
ContentIsProtected
NoImageAtTime
DecoderNotFound
EncoderNotFound
ContentIsNotAuthorized
ApplicationIsNotAuthorized
OperationNotSupportedForAsset
DecoderTemporarilyUnavailable
EncoderTemporarilyUnavailable
InvalidVideoComposition
ReferenceForbiddenByReferencePolicy
InvalidOutputURLPathExtension
ScreenCaptureFailed
DisplayWasDisabled
TorchLevelUnavailable
OperationInterrupted
IncompatibleAsset
FailedToLoadMediaData
ServerIncorrectlyConfigured
ApplicationIsNotAuthorizedToUseDevice
FailedToParse
FileTypeDoesNotSupportSampleReferences
UndecodableMediaData
AirPlayControllerRequiresInternet
AirPlayReceiverRequiresInternet
VideoCompositorFailed
RecordingAlreadyInProgress
CreateContentKeyRequestFailed
UnsupportedOutputSettings
OperationNotAllowed
ContentIsUnavailable
FormatUnsupported
MalformedDepth
ContentNotUpdated
NoLongerPlayable
NoCompatibleAlternatesForExternalDisplay
NoSourceTrack
ExternalPlaybackNotSupportedForAsset
OperationNotSupportedForPreset
SessionHardwareCostOverage
UnsupportedDeviceActiveFormat
IncorrectlyConfigured
SegmentStartedWithNonSyncSample
RosettaNotInstalled
OperationCancelled
ContentKeyRequestCancelled
UnknownAVError/code=%lld
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_TITLE
MediaPlaybackCore
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_ACTION
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
B16@?0@"NSError"8
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Informational: Command required stopping playback on a primary device.
Informational: Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
Informational: Output context modification requested no topology change
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
account-begin
account-rectification
account-update
application-termination
application-foreground
application-background
audio-route-changed
media-server-died
media-server-reset
time-control-status-changed
container-begin
container-end
device-changed
error-resolution
interrupt-begin
interrupt-end
audio-format-changed
asset-load-begin
asset-load-end
asset-load-info
item-begin
item-update
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-configured
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-rate-changed
item-ready-to-play
item-resume
item-timed-metadata-ping
item-key-request-begin
item-key-request-end
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-timeout
remote-control-end
session-activation-begin
session-activation-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
session-reset
shared-session-begin
shared-session-participants-changed
shared-session-synchronization-begin
shared-session-synchronization-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
audio-route
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
private-listening-source
queue-section-id
event-time-offset
error-for-resolution
resolution-type
interrupt-name
interrupt-should-resume
asset-load-error
asset-skd
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
item-audio-format-metadata
queue-item-id
radio-track-info
item-rate-change-participant-id
item-rate-change-position
item-rate-change-reason
item-rate-change-source
item-rate
item-rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
playback-behavior-metadata
network-constrained
network-expensive
network-high-quality
network-reachability
network-type
network-signal-strength
network-signal-info
queue-load-error
queue-load-networking-wait-time
queue-reporting-metadata
queue-rtc-hierarchy-token
queue-rtc-service-id
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-internal-status
remote-control-type
session-activation-error
device-metadata
session-id
session-migration-error
session-restoration-error
session-rtc-hierarchy-token
time-control-status
time-control-status-reason
queue-account-id
queue-description
queue-delegated-account-id
queue-delegated-account-metadata
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
application-source-version
application-uuid
device-guid
internal-carry
media-frameworks
user-agent
queue-grouping-id
feature-name
reco-data
siri-ref-id
siri-wha-metrics
playback-context-class-name
item-duration
item-has-video
item-initial-position
item-start-boundary
item-end-boundary
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
item-asset-source
item-asset-location
item-asset-type
item-asset-endpoint-type
item-asset-has-offline-keys
item-asset-has-online-keys
item-asset-is-delegated-playback
item-asset-is-subscription-content
item-asset-bag-wait-time
item-asset-lease-wait-time
item-asset-redownload-wait-time
item-asset-subscription-load-wait-time
item-asset-suze-lease-wait-time
active-format
active-format-justification
alternate-formats
target-format
preferred-tiers
route
repeat-type
shuffle-type
autoplay-mode
shared-session-id
local-user-identifier
participants
originating-participant
shared-sync-error
item-configured-eq
item-configured-sc-vol-normalization
item-configured-loudness
hls-metadata-wait-time
MPCPlaybackEngineEventMonotonicTimeWithHostTime
time.machAbsoluteTime > machAbsoluteTime
MPCPlaybackEngineEvent.m
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
com.apple.MediaPlaybackCore/ABC
command:%@
%.3f
Performance
CommandTimeout
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
com.apple.hls.audioAssetMetadata
_skippedMetadata
controller
<NULL>
MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
@16@?0@"MPNowPlayingInfoAudioFormat"8
MPCError
UnableToPerformRequest
UnsupportedCommand
MissingBag
UnknownCustomQueueIdentifier
MissingTracklistData
MissingModelRequest
DelegatedAccountCreationFailure
MissingCreationPropertiesData
InvalidSuzeLeaseSessionToken
CellularRestricted
NetworkUnavailable
ExceededBagFileSizeLimit
FailedToDecodePlaylistManagerArchive
RequestTimeout
InvalidResponse
InvalidDelegatedIdentity
SubscriptionRequired
MissingSubscriptionAdamID
MissingLeaseSession
MissingLocalFilePath
AssetQualityTooLow
InvalidCachedAsset
InvalidAssetURL
AssetUnavailable
MissingRedownloadParameters
MissingStoreRequestContext
SubscriptionRequiredForSharedQueue
Cancelled
MissingArtwork
SubscriptionLeaseTaken
ExplicitContentRequiresAgeVerification
ExplicitContentIsNotAllowed
ExplicitContentAgeVerificationFailed
ExplicitContentAgeGatingFailed
DroppedCompletion
SubscriptionAssetResponseMissingItem
FailedToResolveStartItem
NoNetworkConnection
UserIdentityNotSupported
UnsupportedPlaybackContext
UnrestorableArchive
UninitializedPlaybackStack
EmptyModelResponse
FailedToQueueItems
MissingPlaybackAuthorizationToken
RadioServiceNotAllowed
UnknownCode/%lld
MPCSharedListeningError
ConnectionFailure
ContentUnavailable
ContentFailedToResolve
ContentFailedToAdd
MPCPlaybackSessionManagerError
FailedToSaveBeforeFirstUnlock
InvalidMetadataForEncoding
UnsupportedMetadataForEncoding
SessionFailedToDecode
SessionDoesNotExist
LoadSessionTimeout
MPCPlayerRequestError
UnableToSendCommand
CommandFailed
FailedToLoadMetadata
FailedToLoadArtwork
FailedToLoadSupportedCommands
FailedToResolve
FailedToPlaybackState
MPCPlayerEnqueueError
HasUserCuratedQueue
ContentNotSupportedForSharePlay
CannotModifyQueueWithItemWithPlaybackToken
MPCPlaybackEngineInternalError
NoContentToPlay
NoCurrentItem
CannotFindReferencedItem
FeatureDisabled
CommandInvalid
CommandRequiresOverride
AccountMissing
AccountMissingSubscription
AccountMissingAuthentication
AccountNotPrepared
MediaServicesUnavailable
AudioSessionActivationFailed
FailedToPlayRate
FailedToPauseRate
FailedToToggleRate
FailedToChangeRate
FailedToJumpToTime
FailedToBeginScanning
FailedToStopScanning
FailedToEndPlayback
CannotStopScanningIfNotScanning
CannotSkipUnskippableItem
FailedToPlaySharedListeningItem
SharedListeningSessionDisconnected
FailedToBuildPlaybackContext
FailedToLoadPlaybackContext
FailedToMoveItem
FailedToRemoveItem
FailedToLoadSession
FailedToDecodeSession
FailedToFinalizeSession
SessionRestoredUnexpectedCurrentItem
Unrecoverable AirPlay failure [rental requires download]
SetQueue failed to load any assets
Shared listening playback failure
v24@?0q8@"NSError"16
MFDescription
MFPlaybackStackControllerImplementation
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
<%@: %p followUp>
video
audio
Failed to send subscription playback request (lease)
-[MPCModelGenericAVItemSubscriptionAssetLoadOperation execute]_block_invoke
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
Failed to send subscription playback request (accountless stream)
Invalid operation type: %li
assets.count > 0
flavor
fileExtension
sinfs
sinf2
vacToken
Response did not contain asset for item identifiers: %@
HLS [spatial]
HLS [lossless]
unknown
LWHQ
B16@?0@"MPMusicPlayerPlayParameters"8
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
Unable to obtain metadata for shuffled context: %@
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
B24@?0q8q16
Unable to apply changes [missing identifier set in new collection] index=%ld/%ld changeDetails=%@
newCollection failed to produce identifierSet for indexPath: %@
indexPathForItemWithIdentifiersIntersectingSet returned nil
startIndex out of bounds (startIndex/registry.count = %ld/%ld)
No valid items found [empty model response] for %@
Failed to resolve startItemIdentifiers [%@]: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
SiriAssetInfoBug
itemsNotInQueue
startItemIdentifiers
sectionedModelObjects
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
v32@?0@"MPModelObject"8q16^B24
Could not discern required properties for %@
v32@?0@"ICRadioStationTrack"8q16^B24
SHARED_LISTENING
spcb
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
_MPCQueueControllerDataSourceState.m
No active context for datasoure state for section: %@
Cannot encode MPCSharedListeningPlaybackContext
showInternalSections
UpdatedPlaybackContext is not compatible: reason = %@
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
com.apple.MediaPlaybackCore/PAF
Internal
ENGINE_V2
SEED
CARRY
9000
9100
9999.99.99
ROOTS
DEBUG
PAFDurationBug
Playback greater than 12 hours
PAF Event
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
playbackState [nullcontroller - init]
supportedCommands [nullcontroller - init]
queueIdentifier [nullcontroller - init]
playingItemIdentifier [nullcontroller - init]
playQueueIdentifiers [nullcontroller - init]
contentItemForIdentifier [nullcontroller - init]
contentItemArtworkForIdentifier [nullcontroller - init]
ContextID
ShouldOverrideManuallyCuratedQueue
ShouldImmediatelyStartPlayback
SiriRecommendationID
SiriAssetInfo
FeatureName
QueueGroupingID
SiriWHAMetricsInfo
UserIdentity
HomeKitUserIdentifier
%@ query=%@
%@ station=%@
%@ collection=%@ identifiers=%@
%@ seed=%@
%@ identifier=%@
MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 deviceUID=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
Missing external device for endpoint %@.
Could not discover endpoint for device UID (%@).
Could not get active origin.
v20@?0C8^v12
MPCPlayerPath
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
MPCVideoViewControllerMediaFoundationImplementation
com.apple.mediaplaybackcore.videodebug
v12@?0i8
<%@: %p internalViewController=%@>
internalController.showsPlaybackControls
internalController.player.currentItem.presentationSize
internalController.videoGravity
internalController.videoBounds
internalController.isReadyForDisplay
internalController.isPictureInPictureActive
internalController.allowsPictureInPicturePlayback
_obj
videoOutputDelegate
isReadyForDisplay
presentationSize
videoBounds
view
internalViewController.view
parentViewController.view.recursiveDescription
recursiveDescription
view.superview
view.superview.recursiveDescription
viewController
playbackEngine.implementation.playerViewController
internalViewController
parentViewController
internalController
playerViewController
videoOutput
Updating Accounts
com.apple.MediaPlaybackCore/environment
Updating NetworkReachability
Updating NetworkType
Updating Device
ReleaseType
CFBundleVersion
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
MPCReportingController.m
Invalid parameter not satisfying: %@
reportingController != nil
Reporting controller (%@) does not have correct parent (%@ expected, %@ actual)
<MPCFutureInvalidationToken %p %@>
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 disconnected=YES
 error=%@
Personalization response did invalidate
v16@?0@"NSNotification"8
tshlp
MPCPlayerItemConfigurator.m
Attempting to configure a non-loaded player item.
Default device capability
Forced stereo
queueItem.isAssetLoaded
accountID
deviceName
timeZoneName
privateListeningEnabled
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
usesExternalPlaybackWhileExternalScreenIsActive
isExternalPlaybackAllowed
usesAudioOnlyMode
Audio
Undefined
Streaming
None
TVOut
Picked route has no restrictions
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play non-cloud item
MPCPlayActivityUtilitiesPlayStartNotification
MPCPlayActivityUtilitiesPlayEndNotification
MPCPlayActivityUtilitiesPlayEndEventStartTimeKey
MPCPlayActivityUtilitiesPlayEndEventEndTimeKey
representativeItemCloudID
playbackAuthorizationToken
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
<MPCSharedListeningEvent: %p unknown/invalid>
<MPCSharedListeningEvent: %p participant=%@ sessionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ playbackEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ queueEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ reactionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ customEvent=%@>
<MPCSharedListeningEvent: %p unknown/eventType=%ld>
<MPCSharedListeningEventParticipant: %p id=%@ externalID=%@>
<MPCSharedListeningCustomEvent: %p localizedMessage="%@">
<MPCSharedListeningPlaybackEvent: %p kind=%@>
<MPCSharedListeningQueueEvent: %p unknown/invalid>
<MPCSharedListeningQueueEvent: %p addedContent=%@>
<MPCSharedListeningQueueEvent: %p playedNowContent=%@>
<MPCSharedListeningQueueEvent: %p removedContent=%@>
<MPCSharedListeningQueueEvent: %p reorderedContent=%@>
<MPCSharedListeningQueueEvent: %p replacedContent=%@>
<MPCSharedListeningQueueEvent: %p contentUpdatedMessage=%@>
<MPCSharedListeningQueueEvent: %p playbackMode=%@>
<MPCSharedListeningQueueEvent: %p unknown/kind=%ld>
<MPCSharedListeningQueueEventContentAdded: %p container=%@ items=%@>
<MPCSharedListeningQueueEventContentAdded: %p items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p container=%@ startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentRemoved: %p item=%@>
<MPCSharedListeningQueueEventContentReordered: %p item=%@>
<MPCSharedListeningQueueEventContentReplaced: %p startItem=%@>
<MPCSharedListeningQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
B8@?0
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/invalid>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p shuffleType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p repeatType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<MPCSharedListeningReactionEvent: %p reaction="%@" reactionID=%@ item=%@>
<MPCSharedListeningSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.assistant.SendCommand
v24@?0@"MRCommandResult"8@"NSError"16
v32@?0@"MRCommandResult"8@"NSError"16Q24
com.apple.mediaplayer.assistant.grouping
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
B16@?0@"NSNumber"8
MSVHasher+Algorithms.h
app.music.queue-source.library
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
<missing queue identifier>
uniqueID
lastChangeDirection
playingItem
<NONE>
v32@?0@"MPCPlayerResponseSection"8q16^B24
MPCPlayerResponseTracklist.m
Count mismatch: sections=%@ sectionRangeMap=%@
Missing section range for section: %@
Non-contiguous range detected: location=%ld expectedLocation=%ld
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Provided display index path is out of bounds for this collection: %@ (section count %@)
Provided display index path is out of bounds for this collection: %@ (item count %@)
structureIndexPath did not produce a valid global index: %@
Could not find a displayIndexPath for structuredIndexPath: %@
Potluck
presumptuous command
Invalid section collection (2).
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
_PLACEHOLDER_AUTOPLAY_
queueStructures
dataSources
MPCQueueController
## Queue <%p> [%@]
## AutoPlay Queue
### State
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
apil
dncia
state
apep
apit
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
AutoPlayPlaceholderArtworkVisualIdenticality
Cannot insert after unknown item: %@
Cannot insert at Last position in AutoPlay.
MPCQueueController.m
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state ready]
ContentItemID was nil [tail placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state loading]
ContentItemID was nil [loading placeholder]
Invalid shared listening state [too many datasources]
Invalid shared listening state [dataSource must conform to MPCQueueControllerCommandInterposing]
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Unexpected entry type when reverse enumerating for before item: %d
User default should be resolved before setting on queue controller.
queue=%@&dataSources=%@
Requested removing content item that is not in the queue.
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
Unexpected inSharedListeningMode=YES in itemToFollowItem: [deferredNext tail section - still loading - shuffled]
v16@?0B8B12
Unexpected inSharedListeningMode=YES in itemToFollowItem: [enumerating to tail section - still loading - shuffled]
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unknown asset failure reason
EndOfQueue-%@
 %@=%@
emitEventsForParticipants can only be called inSharedListeningMode
emitEventsForAddedSharedListeningContainerInfo can only be called inSharedListeningMode
InterposingHost-%@
LiveLink unexpectedly disconnected
Unexpected sharedCurrentItemChange not in shared listening
jumpToItem:inSection: failed [content item not in SIL] contentItemID=%@
completion
_addPlaybackContext unsupported insertion position for CommandInterposing data source: %ld
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Cannot insert after unknown item (in identifier list): %@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Cannot modify auto play in shared listening mode
Cannot insert after unknown item (in autoplay identifier list): %@
The autoplay identifierList changed before the data source finished loading.
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Unexpected inSharedListeningMode=YES in contentItemIDWithOffset: [returning tail placeholder with SIL ID]
v32@?0q8@"NSString"16@"_MPCQueueControllerDataSourceState"24
%@-%@-%@
Cannot get a shared queue tracklist from an existing shared queue.
Cannot create shared queue tracklist from infinite datasource (current item from auto play).
Current item was missing a media identifier while building shared queue tracklist: currentItem=%@ identifiers=%@
Current item was found multiple times while building shared queue tracklist.
Cannot create shared queue tracklist from infinite datasource (radio).
Failed to find the current item in the shared queue tracklist.
AutoPlayPlaceholder
Unexpected state: missing dataSourceState for section: %@ dataSources: %@
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_currentItem
_autoPlayState
_autoPlayEndPosition
_inSharedListeningMode
_identifierList
_autoPlayIdentifierList
Unexpected state transition from: %@ to: %@
Failed to create AutoPlay playbackContext: %@
Paused
Stopped
Interrupted
NSString * _Nonnull NSStringFromMPNowPlayingPlaybackState(MPNowPlayingPlaybackState)
MPNowPlayingInfoCenter_Private.h
Unknown MPNowPlayingPlaybackState value %ld
Restore
Carrier
Beta
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
v24@?0@"NSString"8@"NSError"16
ExplicitRestrictionChangedToTrue
ExplicitRestrictionChangedToFalse
MPCSharedListeningQueueFeeder.m
Unexpected shared listening request: %@
containerIdentifier
B16@?0@"ICSharedListeningContainer"8
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
addPlaybackContext:afterItem:
Pending action expired [startItem not found in IDRegistry] startItemIdentifier=%@
Pending action expired [startItemIdentifier not found in live link queue] startItemIdentifier=%@
[SLQF] addPlaybackContext unsupported insertion position: %ld
v32@?0@"MSVSectionedCollection"8@"NSIndexPath"16@"NSError"24
Event-%@
@16@?0@"MPQueueFeederIdentifierRegistry"8
ChangeCurrentItem
Pending action flushed but item was still not found: %@
Unexpected request type: %@
v16@?0@"MPModelRequest"8
B32@?0@"_MPCSLQFPendingAction"8Q16^B24
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
live_link
v24@?0@"ICSharedListeningItem"8@"NSError"16
<%@: %p label="%@" itemID=%@ expiration=%@>
Unknown
LiveLinkConnecting
LiveLinkWaitingForFirstQueue
CallingSuper
SuperCompleted
SuperFailed
LiveLinkRetryingFromConnecting
LiveLinkRetryingFromWaitingForFirstQueue
LiveLinkRetryingFromCallingSuper
LiveLinkRetryingFromSuperCompleted
LiveLinkRetryingFromActive
LiveLinkActive
LiveLinkDisconnected
First frame time stamp is too far in the past
%@ %@
Playback engine implementation no longer exists
_MPCAVController.m
MPCPlaybackEngine: AVAudioSessionCategory cannot be nil.
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
v16@?0@"NSArray"8
@16@?0@"MRAVOutputDevice"8
%@ - %@
B16@?0@"MRAVOutputDevice"8
MPCAssistantEndpointContext
Home
cce7c4ecef404121ae8971
revision
metadataObject
indexPath
explicitBadge
localizedDurationString
languageOptionGroups
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
MPCReportingPlaybackObserverPlayStartNotification
MPCReportingPlaybackObserverPlayEndNotification
MPCReportingPlaybackObserverPlayEndEventStartTimeKey
MPCReportingPlaybackObserverPlayEndEventEndTimeKey
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
albumArtistName
albumName
artistName
composerName
contentType
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
storeAdamID
albumTrackCount
trackNumber
year
Unsupported content (unknown subclass %@)
MPPlaybackContext+MPCSharedListening.m
Invalid request item class: %@ for %@
Cancelled while performing request: %@
Failed to load request: %@
Request did not produce any items: %@
Intent produced unsupported section (genericObject.type=%@) %@
v16@?0@"MPIdentifierSet"8
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
v32@?0q8@"MPIdentifierSet"16^B24
v32@?0@8q16^B24
Intent did not produce any store items: %@ %@
Intent did not produce start item for identifiers: %@
@16@?0@"MPIdentifierSet"8
Unsupported content [Radio] %@
Unsupported content [Shared Listening Session] %@
containerType
playActivityFeatureName
playActivityQueueGroupingID
0.Environment
1.Traits
2.Preferences
3.Outcome
B16@?0@"MPCPlayerAudioFormat"8
1.Formats
3.Route
4.Outcome
2.Audio type
4.Matched tier
5.Outcome
%@ <%p>: %@
Lossless: %@
HRLossless: %@
Spatial: %@
LQStereo: %@
HQStereo: %@
HighResLossless: %@
Network: %@
Expensive: %@
Constrained: %@
HighBandwidth: %@
Always On
Automatic
Unknown preference:%ld
Cellular
Bridged WiFi
Other
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
Multichannel
allowedAudioSpatializationFormats
MonoAndStereo
MonoStereoAndMultichannel
GaplessAudioTransitions
BinauralAudioForUnknownAudioDeviceTypes
ScalabilityToLosslessAudio
UnconstrainedAudioSampleRate
[%@]
variantPreferences
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
controllerForPlayerPath
Failed to send command %ld
v28@?0I8@"NSError"12@"MRSendCommandResultStatus"20
v32@?0@"MRCommandResult"8@"NSError"16@"NSString"24
MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
v16@?0@"MPRemoteCommandStatus"8
{_MSVSignedRange=qq}
<MPCMediaRemoteController: %p>
playQueueIdentifiersForRequest[%@]
PlaybackQueue Response failed to include now playing item
playingIdentifier
queueIdentifier
contentItem - %@
Requested content item %@ state does not exist.
contentItemArtwork[%@] - %@
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"8@?0
playingItemIdentifier [mergeContentItems]
contentItemIDs
contentItemChanges:keys
<EMPTY>
optimisticStateContentItems
supportedCommands
loadedRange
requestedRange
playingItemIdentifier
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
v32@?0@8@16^B24
MFDebugOverlayController
Class getMFDebugOverlayControllerClass(void)_block_invoke
Unable to find class %s
void *MediaFoundationLibrary(void)
/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
/System/Library/PrivateFrameworks/MediaFoundation.framework/Contents/MacOS/MediaFoundation
command
commandName
enabled
options
%@ (%d)
continue-listening
station
MPCSiriPlaybackAdditionsMetadataCountFromResponseKey
MPCSiriPlaybackAdditionsMetadataOrderedPlaybackCacheRequestsKey
MPCSiriPlaybackAdditionsMetadataOrderedPlayableAssetIdentifiersKey
MPCSiriPlaybackAdditionsMetadataPlaybackAuthTokenTrustIdentifierKey
meta.api
format.resources
results
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
kind
audioTraits
assetUrls
enhancedHls
hls-playlist-url
hls-key-cert-url
hls-key-server-url
key-server-protocol-type
offers
downloadAssets
contains
does not contain
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
MPCAssistantConnection
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
MPCPlaybackEngineEventStream.m
EVS: Unable to generate SQL statement: %@ error:%@
B16@?0@"NSString"8
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
CREATE UNIQUE INDEX IF NOT EXISTS events_ns ON events (_ns)
CREATE INDEX IF NOT EXISTS events_type ON events (type, _ns)
PlaybackEventStreams
%@-%@.sqlpkg
_MPC_CLEAR_EVS
Database
@"MSVSQLDatabase"8@?0
EVS: deallocated before invalidation
 - Database: %@
 - Assertions: %@
 - Subscriptions: %@
reason
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
@identifier
@type
@monoAbsolute
@monoContinuous
@monoTimebaseNS
@userNS
@payload
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@count
<%@: %p consumer=%@ events=%@>
Consumer %@ already has a mutating subscription to %@
Consumer %@ already has an immediate subscription to %@
Consumer %@ already has a subscription to %@
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
@lastNS
@maximumNS
<%@: %p %@ -> %@>
startEvent
Start event must be chronologically AFTER the limiting event.
COUNT(DISTINCT events.identifier)
eventType
payload
Must provide event types to enumerate.
Query too large
SELECT %@ FROM events
, json_tree(events.payload, @payload_key_%d) AS payload_%d
(payload_%d.value = @payload_value_%d)
events.type = @type
events.type IN (
@type_%d
_ns < @startNS
_ns > @endNS
 WHERE 
 AND 
 ORDER BY _ns DESC
 LIMIT %lld
@startNS
@payload_key_%d
@payload_value_%d
Unable to convert payload value to JSON: %@
Unknown payload value type for query: %@
v32@?0@"NSString"8@16^B24
@endNS
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
<%@: %p reason=%@>
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time out of bounds: %llu < %llu < %llu
Event %@ time overflows int64 size: %llu < %lld
com.apple.MediaPlaybackCore.MPCModelStorePlaybackItemsRequestOperation.accessQueue
Request must contain either storeIDs or sectionedModelObjects
v32@?0@"ICUserIdentity"8@"ICMusicSubscriptionStatusResponse"16@"NSError"24
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
No network connection
-[MPCModelGenericAVItemMediaRedownloadOperation execute]_block_invoke
MPCModelGenericAVItemMediaRedownloadOperation.m
An error is expected for the failure to create a loadResult
Missing asset URL in media redownload request response
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
Missing redownload parameters
Missing store request context
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
v16@?0@"MPModelRadioStation"8
v24@?0@"MPPlaybackContext"8@"NSError"16
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
Missing tracklist data in playback queue.
v16@?0@"<MPMutableRadioIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
Missing creation properties data in playback queue.
supplemental
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Sharedlistening playback context cannot be used for remote set queue.
Unknown queue identifier: %@
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
unknown-guid
v24@?0@"ICUserIdentity"8@"NSError"16
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPRemotePlaybackQueue+MPCAdditions.m
Attempted to decode container identifier set without personID
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
DisableQueueModifications [MPC]
ClearUpNext [MPC]
ShareQueue [MPC]
Debug [MPC]
<Unrecognized Command>
Unrecognized [%lld]
disableQueueModificationsCommand
clearUpNextQueueCommand
shareQueueCommand
debugCommand
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
v24@?0@"MPServerObjectDatabaseAsset"8^B16
POST
guid
flavors
adamIds
application/json
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
Glide
max-mini-sinf-batch-size
https://itunes.apple.com/
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.iBooks
com.apple.podcasts
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@, originatingOutputDeviceUID = %@, singleGroup = %@, originatingControl = %@>
v16@?0@"NSDictionary"8
OriginatingOutputDeviceUID
AppBundleID
PlayerID
MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
Unable to restore state. Too many failed attempts.
v20@?0B8@?<v@?>12
audioSessionCategory
new_playback_engine
stateRestoration-%@
attempts
identifier
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
Age Gating
Age Verification
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath
v16@?0@"MPCPlayerPath"8
resolvedPlayerPath and error was nil
v24@?0@"MPCPlayerPath"8@"NSError"16
v16@?0^v8
VERSION
BIT-RATE
SAMPLE-RATE
BIT-DEPTH
CHANNEL-COUNT
ORIGIN-CHANNEL-COUNT
CHANNEL-USAGE
AUDIO-FORMAT-ID
GROUP-ID
IS-ATMOS
ORIGIN-IS-ATMOS
tier
codec
chlay
ochlay
chlayd
tier: %@
bitrate: %@
groupID: %@
bitDepth: %@
sampleRate: %@
codec: %@
channels: %@
layout: %@
origin channels: %@ [%@]
origin channels: %@
spatialized
multichannel
stableVariantID: %@
%ldkbps
%d-bit
%ldkhz
BINAURAL
Mono
Stereo
Binaural
5.1.2
5.1.4
7.1.2
7.1.4
9.1.6
bitrate
bitDepth
channelCount
layout
sampleRate
rmcs
spzs
spze
spzcs
spzcr
type: %@
name: %@
multichannel suppport: %@
supportsSpatialization
spatializationIsEnabled
canRenderSpatialAudio
canStreamSpatialAudio
Unavailable
UserPreference
UserDownload
RouteIncompatible
RouteUnknownCompatibility
BandwidthInsufficient
Unknown-%ld
LowBandwidthStereo
HighQualityStereo
Lossless
HighResolutionLossless
Spatial
DeviceSpeaker
LineOut
Headphones
BluetoothHeadphones
BluetoothSpeaker
USBAudio
CarAudio
HDMI
AirPlay
Unknown [CM-driven]
Available
%c%c%c%c
properties
identity
repeat/shuffle
ReplacementContext is unsupported type %@ != MPCModelPlaybackContext
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
domain
code
userInfo
prefix
given
middle
family
suffix
nick
modelClass
_empty
db-id
contained-pid
sync
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
personal
person-id
cloud
cloud-album
reco-id
universal
global-playlist
adam
former-ids
ulid
purchased
social-profile
media-clip
static-asset
reporting-adam-id
asset-adam-id
radio
station-string
station-hash
station-id
serverID
externalID
nameComponents
imageURL
v16@?0@"<_ICMutableLiveLinkIdentityPrivate>"8
uuid
root
debug
type
dialog
error
data
dataType
title
message
actions
@16@?0@"MPRemoteCommandHandlerDialogAction"8
mrCommand
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
MPCPlaybackEngineEventPayload.m
Unexpected type for key %@ actual=%@ expected=%@
Unexpected type for element in array for key %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)
Attempt to JSON coerce unsupported value type: %@ %@
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
LeasePreventionPause_%@
errorDomain
errorCode
event
date
formattedTime
queueLoadDuration
queueEndpoint
initialQueue
items
createAssetDuration
assetPreloaded
urlScheme
audioType
endpointType
hasOfflineKeys
hasOnlineKeys
assetInfoSource
isDelegated
isSubscription
leaseWaitTime
redownloadTime
subscriptionWaitTime
suzeLeaseTime
assetType
queueStartItem
networkChangeCount
endReason
initialItemLoadDuration
initialItemPreloaded
initialQueueType
initialQueuePreloaded
initialQueueLoadDuration
initialQueueFeatureName
initialNetworkType
isHLS
perceivedPlayStartTime
finalNetworkType
stateRestoration
queuesAdded
queuesFailed
itemsPlayed
itemsFailed
natural
skip
select-song
endSession
fail
originUnknown
library
typeUnknown
song
musicVideo
tvEpisode
playlistEntry
adamid
padamid
sadamid
aadamid
raid
raidev
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
<%@: %p %@>
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ requirePlaybackAuthorizationToken=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
Music
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
Cannot append to unknown hasher algorithm
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
request.playbackRequestEnvironment
request
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v24@?0@"NSArray"8@"NSError"16
MPCPlaybackHistoryRecordChangeRequestOperation.m
Unsupported request type: %ld
overridePlayingItem
com.apple.music.scenes
motion-timeline
versions
version
scenes
start_frame
end_frame
iterations
MPCNullPlaybackContextCodingKeyLabel
actionAfterQueueLoad
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
@"NSString"16@?0q8
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
accountInfo
container
startingItemIndexPath
shuffleMode
MPCMediaFoundationTranslator.m
queueItem == nil || [(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
[(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
AirMusic
<MPCPlaybackRequestEnvironment: %p identity=%@>
clientIdentifier
clientVersion
delegationProperties
requestingBundleIdentifier
requestingBundleVersion
userIdentity
v16@?0@"ICStoreRequestContext"8
v16@?0@"ICMusicKitRequestContext"8
[delegated account missing]
[promoting delegated account]
[base account missing]
[base account is delegated]
MPCSharedListeningLiveLinkReusePool.m
sessionIdentifier must not be nil
EncodeSerialQueue
v24@?0@"NSData"8@"NSError"16
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v20@?0B8@"NSError"12
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v32@?0@"MPModelGenericObject"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
MediaPlayer
DeviceClassNumber
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPAD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPOD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPHONE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
requestDeviceCount
source
com.apple.MediaAssistant.siri
no UIDs provided
duration
success
errorMessage
com.apple.mediaplaybackcore.assistant.pause
no origin for endpoint
v24@?0@"NSError"8@"NSArray"16
MPCAssistantPause
v24@?0@"NSArray"8@"NSArray"16
removedDeviceCount
pausedDeviceCount
removedEndpointCount
pausedEndpointCount
appleTVsAffected
homepodsAffected
forceRemoveDeviceCount
v16@?0^{__CFError=}8
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
v16@?0@"MPCAssistantSendCommandResult"8
appBundleID
resultCodes
com.apple.mediaplayer.assistant.command
actualDestination
local
MediaRemote
new_siri_behavior
new_siri_behavior_route_after_command
v16@?0@"MRAVEndpoint"8
v24@?0@"MRAVEndpoint"8@"NSError"16
MPCAssistantCommand-removeUnwantedDevices
v32@?0@"MRAVEndpoint"8@"NSArray"16@?<v@?@"MRAVEndpoint">24
actualDeviceCount
When processing %@ if we are the group leader, pause our now-playing app if we have one
v16@?0^{__CFArray=}8
v12@?0B8
requestedUIDs
outputGroups
outputGroupIDPresent
formGroup
remote
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0@"MRCommandResult"8
proxy promotion
group leader
v24@?0^v8^{__CFError=}16
errorString
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
MPCItemBookmarker.m
fromItem == nil || [(MPAVItem *)fromItem isKindOfClass:[MPAVItem class]]
toItem == nil || [(MPAVItem *)toItem isKindOfClass:[MPAVItem class]]
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.diffQueue
Could not convert station into metadata: %@
v32@?0@"NSString"8d16@"NSError"24
v16@?0@"ICMutableRadioPlaybackHistory"8
Radio service is restricted
v24@?0d8@"NSError"16
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
LOADING_AUDIO_LABEL
RADIO_LABEL
app.music.queue-source.tilt
RadioStationID
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
channelLayout
multiChannel
name
firstAudioFrameTimestamp
sectionIdentifier
itemIdentifier
itemMetadata
siriRefId
isAutoPlayEnabled
assetLocation
hasOfflinePlaybackKeys
formatInfo
routeInfo
networkType
isFirstPlay
errorResolution
errorSignature
setQueueCommandSendTime
assetLoadWaitTime
readyToPlayStatusWaitTime
playCommandWaitTime
rateChangeWaitTime
getTracksWaitTime
bagWaitTime
suzeLeaseWaitTime
subscriptionAssetLoadWaitTime
sessionActivationWaitTime
MPCPlayPerfMetrics.m
Section identifier in first audio frame event can't be nil
Item identifier in first audio frame event can't be nil
v24@?0@"MPCPlaybackEngineEvent"8^B16
<%@:%p %@>
<%@:%p> Item: %@ %@
Overall
  - TotalTime (MPP):        % 3.3fs (Total time spent to get music to play)
  - MusicWaitTime (MWT):    % 3.3fs (User-perceived wait time)
  - MediaPlayerTime (MPT):  % 3.3fs (Total time spent in MediaPlayer frameworks)
Components
  - SetQueueCommandSend:    % 3.3fs (SendCommand -> PerformSetQueue)
  - QueueLoad:              % 3.3fs (PerformSetQueue -> AssetLoadBegin)
  - AssetLoad:              % 3.3fs (AssetLoadBegin -> AssetLoadEnd)
  - ReadyToPlayStatus:      % 3.3fs (AssetLoadEnd -> ReadyToPlay)
  - RateChange:             % 3.3fs (Play -> RateChanged)
  - FirstAudioFrame:        % 3.3fs (RateChanged -> FirstAudioFrame)
Networking [%.3fs]
  - Lookup:                 % 3.3fs
  - GetTracks:              % 3.3fs
  - Bag:                    % 3.3fs
  - Lease:                  % 3.3fs
  - SuzeLease:              % 3.3fs
  - SubscriptionAssetLoad:  % 3.3fs
  - MediaRedownload:        % 3.3fs
  - HLSMetadata:            % 3.3fs
Misc
  - PlayCommandWait:        % 3.3fs (ReadyToPlay -> Play)
  - PlayCommandSend:        % 3.3fs
  - SessionActivation:      % 3.3fs
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Playback engine doesn't support state restoration
v8@?0
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
Failed to load session due to %gs timeout.
v16@?0q8
v16@?0@"NSError"8
v16@?0@?<v@?@"NSError">8
_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Opting not to save an archive for a shared listening session
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
queueController
PlaybackSessions
contentItemID
v24@?0@"UIImage"8@"NSError"16
com.apple.radio.adamid
com.apple.radio.explicit
info
artworkURL_
width
height
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelObject"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelSong"8
MPCModelGenericAVItemTimedMetadataRequest.m
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
v16@?0@"MPModelObject"8
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
v24@?0@"MPModelResponse"8@"NSError"16
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
softlink:r:path:/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
Q@,#
MPCSharedListeningPlaybackIntentDataSource
ICLiveLinkDelegate
NSObject
MPCPlaybackIntentDataSource
_MPCSharedListeningTracklistPlaybackContext
_MPCProtoItem
NSCopying
MPCStoreLibraryPersonalizationMiddleware
MPMiddleware
MPCPlayerResponseBuilder
MPCResponseMediaRemoteControllerChaining
_MPCAudioSessionController
_MPCPlaybackEngineMediaFoundationImplementation
MFPlaybackStackControllerDelegate
MPAVQueueControllerDelegate
MPCAssetLoaderDelegate
MPCPlaybackEngineImplementation
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
ICStoreResponseProtocol
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
_MPCProtoTracklistIndexPath
MPCAssistantSetVolume
MPCPlaybackEngineLoggingConsumer
MPCPlaybackEngineEventConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
_MPCProtoRadioContentReference
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCPlayerSessionResponse
_MPCProtoItemIdentifierSet
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerClient
_MPCMusicPlayerControllerServer
NSXPCListenerDelegate
MPCPlaybackEngineEventObserving
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
MPRTCReportingItemSessionCreating
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
_MPCMediaRemotePublisher
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MediaRemoteCommandAdditions
MPCPlaybackDelegationProperties
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCPlaybackIntent
ForShortcutsOnly
MPCPlaybackSharedListeningProperties
_MPCPlaybackContextPlaybackIntentDataSource
_MPCProtoRadioCreationProperties
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCAnalyticsSignpost
MPCWaitForLikelyToKeepUp
MPCWaitForReadyToPlaySignpost
MPCPlayToSetRateSignpost
MPCSetRateToEffectiveRateSignpost
MPCScene
MPCSceneCollection
MPCScriptedLooper
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddleware
MPCPlayerCommandDialogAction
MPCPlayerCommandDialog
MPCPlayerCommandStatus
MPCPlayPerfConsumer
MPCDialogs
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCAutoBugCaptureEventConsumer
MPCMediaRemoteMiddlewareCommandsOperation
MPCHLSSessionData
MPCMediaRemoteMiddleware
MPCErrorController
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCProtoContainerIdentifierSet
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
AVPlayerViewControllerDelegate
_MPCVideoViewControllerMediaFoundationImplementation
MPCVideoOutput
MPCVideoOutputDelegate
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCSharedListeningPlaybackIntentTracklistToken
MPCPlayerItemConfigurator
MPAVRoutingControllerDelegate
_MPCProtoDelegateInfo
MPCExternalPlaybackControllerImplementation
MFExternalPlaybackController
MPCExternalPlaybackRouter
_MPCProtoRadioContentReferenceLibraryArtistContentReference
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCSharedListeningEvent
MPCSharedListeningEventParticipant
MPCSharedListeningCustomEvent
MPCSharedListeningPlaybackEvent
MPCSharedListeningQueueEvent
MPCSharedListeningQueueEventContentAdded
MPCSharedListeningQueueEventContentPlayedNow
MPCSharedListeningQueueEventContentRemoved
MPCSharedListeningQueueEventContentReordered
MPCSharedListeningQueueEventContentReplaced
MPCSharedListeningQueueEventContentUpdatedMessage
MPCSharedListeningQueueEventPlaybackModeChanged
MPCSharedListeningReactionEvent
MPCSharedListeningSessionEvent
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCModelStorePlaybackItemsRequestAccumulatorImportResponse
MPCAdditions
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDisplayDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
_MPCPlayerDisableModificationsCommand
MPCPlayerDisableModificationsCommand
MPCQueueControllerCommandInterposing
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPCContinueListeningRadioQueueProviding
MPArtworkDataSource
MPCQueueItemProviding
MPAVQueueController
MPAVQueueCoordinatingDataSource
MSVSegmentedCoding
MPCQueueControllerCommandInterposingHost
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCReportingPlaybackEnvironmentPropertiesLoader
MPCSharedListeningQueueFeeder
AVPlayerPlaybackCoordinatorDelegate
MPCSharedListeningContainerInfo
_MPCSLQFPendingAction
MPCPlaybackDefaultsImplementation
MFPlaybackDefaults
MPCPlayPerfAnalytics
_MPCProtoRadioContentReferenceStoreContentReference
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCAssistantEndpointContext
MPCPlayerResponseItem
MPCPlayerResponseItemMusicAudio
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
_MPCProtoRadioContentReferenceLibraryItemContentReference
MPCAudioSpectrumAnalyzer
MPCAudioSpectrumObserver
_MPCAudioSpectrumAnalyzerStorage
MPCSharedListening
_MPCProtoContainer
MPCAudioAssetTypeSelector
MPCExplicitContentAuthorizationManager
MediaPlaybackCore
MPCItemIdentifierImplementation
MPCItemIdentifier
MFQueuePlayerItem
MFPlayerItem
MPCMediaRemoteController
_MPArtworkCatalogOverlayDelegate
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
MPCModelStorePlaybackItemsRequestOperation
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
MPCDebugCommand
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
_MPCPlaybackEnginePlayerIDInitializationParameters
MPCPlaybackEngineInitializationParameters
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
_MPCPlaybackEngineEventStreamInitializationParameters
MPCPlaybackEngineEventStreamInitializationParameters
MPCPlayerPathCache
MPCPlayerAudioFormat
MPCPlayerAudioRoute
MPCSharedListeningPlaybackContext
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayload
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
RTCOldEngineSupport
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCReportingEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
MPCScriptedSceneCollectionParser
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
_MPCProtoTracklist
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCAVItemTrace
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCSharedListeningLiveLinkReusePool
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPAVQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
MPCPlayPerfMetrics
_MPCPlaybackEngineSessionManager
MPCPlayerResponseParticipant
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
setStrongSelf:
setInitialIntent:
shuffleMode
setShuffleMode:
setIdentity:
setCompletion:
setLock:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
msv_errorWithDomain:code:debugDescription:
_transitionToBuildState:intent:error:
liveLink
stop
initWithTimeout:interruptionHandler:
setGuard:
_transitionToBuildState:
tracklistToken
sharedListeningProperties
setSharedListeningProperties:
identity
_transitionToLiveLinkState:
sharedReusePool
identifier
storeLiveLink:forSessionID:
msv_errorWithDomain:code:underlyingError:debugDescription:
_transitionToLiveLinkState:error:
linkState
items
count
_transitionToSourceState:
queue
initialTracklist
startIndexPath
sessionKey
propertiesWithSessionIdentifier:sessionKey:
setLiveLink:
sharedSessionIntentWithProperties:identity:
replaceTracklist:preferredStartIndexPath:completion:
guard
disarm
mpc_remoteCommandStatus
initWithMPStatus:request:
completion
_transitionToSourceState:error:
setInitialTracklist:
setStartIndexPath:
getSharedListeningTracklistWithCompletion:
getPlaybackContextWithCompletion:
buildState
linkWithIdentity:
setDelegate:
start
sourceState
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didStartLiveLink:
liveLink:didEncounterError:willRetry:
liveLinkDidReconnect:
didStopLiveLink:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveEvent:
liveLink:didReceiveDirectCurrentItemChanged:
getPlaybackContextForIntent:withCompletion:
buildSharedSessionIntentWithIntent:identity:completion:
strongSelf
lock
setBuildState:
setSourceState:
initialIntent
setLinkState:
.cxx_destruct
_lock
_guard
_shuffleMode
_strongSelf
_completion
_buildState
_sourceState
_initialIntent
_startIndexPath
_initialTracklist
_linkState
_liveLink
_identity
T@"MSVBlockGuard",&,N,V_guard
Tq,N,V_shuffleMode
T@,&,N,V_strongSelf
T@?,C,N,V_completion
T{os_unfair_lock_s=I},N,V_lock
Tq,N,V_buildState
Tq,N,V_sourceState
T@"MPCPlaybackIntent",&,N,V_initialIntent
T@"NSIndexPath",C,N,V_startIndexPath
T@"MSVSectionedCollection",&,N,V_initialTracklist
Tq,N,V_linkState
T@"ICLiveLink",&,N,V_liveLink
T@"ICLiveLinkIdentity",&,N,V_identity
tracklist
setTracklist:
startItemIndexPath
setStartItemIndexPath:
_tracklist
_startItemIndexPath
T@"MSVSectionedCollection",&,N,V_tracklist
T@"NSIndexPath",&,N,V_startItemIndexPath
stringWithFormat:
dictionaryRepresentation
dictionary
numberWithInt:
setObject:forKey:
numberWithBool:
allocWithZone:
init
copyWithZone:
readFrom:
writeTo:
_identifierSet
_mediaType
_excludeFromShuffle
_has
operationsForPlayerRequest:
initWithMiddleware:playerRequest:
arrayWithObjects:count:
operationsForRequest:
invalidationObservers
setInvalidationObservers:
T@"NSArray",&,N
personalizedModelObjects
setPersonalizedModelObjects:
_invalidationObservers
_personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
length
section
sectionAtIndex:
itemAtIndexPath:
nextObject
playerModelObject:propertySet:atIndexPath:chain:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerExplicitContentState:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerItemShouldDisableJumpToItem:atIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerIsSharedListeningSession:chain:
preferredAudioFormat:chain:
activeAudioFormat:chain:
activeAudioFormatJustification:chain:
audioFormatPreference:chain:
audioRoute:chain:
alternateAudioFormats:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
sharedInstance
setAudioSession:
setupObservations
tearDownObservations
dealloc
audioSession
setCategory:mode:routeSharingPolicy:options:error:
category
setCategory:
categoryOptions
setCategoryOptions:
routeSharingPolicy
setRouteSharingPolicy:
updateAudioSession:options:routeSharingPolicy:
defaultCenter
snapshotSessionSettings
addObserverForName:object:queue:usingBlock:
setLostObserver:
restoreSessionSettingsFromSnapshot
setResetObserver:
lostObserver
removeObserver:
resetObserver
_audioSession
_lostObserver
_resetObserver
_category
_categoryOptions
_routeSharingPolicy
T@"AVAudioSession",&,N,V_audioSession
T@,&,N,V_lostObserver
T@,&,N,V_resetObserver
T@"NSString",N,V_category
TQ,N,V_categoryOptions
TQ,N,V_routeSharingPolicy
_stateDictionary
actionAfterQueueLoad
playPerfAnalyticsWithIdentifier:willPlayImmediately:
setPlayPerfAnalytics:
_resetPlaybackStack
_setupPlaybackStackWithPlaybackEngine:queueController:
errorController
reset
playbackStackController
translator
resetMapping
playbackEngine
engineID
playerID
queueController
preferredFirstContentItemID
setPreferredFirstContentItemID:
resolveError:forItem:completion:
currentQueueItem
setQueueWithPlaybackContext:identifier:completionHandler:
reloadWithPlaybackContext:completionHandler:
currentState
playWithRate:identifier:completion:
addPlaybackContext:atPosition:jumpToIt:completion:
contentItemID
restoreQueue:
isModeSolo
setupForShared
isModeShared
setupForSolo
modeDescription
eventObserver
engine:didResetQueueWithPlaybackContext:error:
setQueueWithInitialItem:andPlay:identifier:completion:
isAssetLoaded
canUseLoadedAsset
canReusePlayerItem
prepareForRate:completionHandler:
activateAudioSessionWithCompletion:
currentTime
UUIDString
skipWithDirection:identifier:completion:
jumpTo:identifier:completion:
pauseWithFadeout:
pauseWithFadeOut:identifier:completion:
play
audioSessionCategory
audioSessionOptions
isEqualToString:
transientAudioSessionController
initWithCategory:routeSharingPolicy:options:
updateAudioSessionWithConfiguration:
_MPAVItemForMFQueuePlayerItem:
rate
interruptedState
videoViewController
itemsHavePlayed
endPlaybackWithIdentifier:completion:
playPerfAnalytics
didReceivePlayRequest
pauseWithIdentifier:completion:
pauseForLeasePreventionWithIdentifier:completion:
shouldSkipJumpToItemStart:
bookmarker
currentItem
userDidSkipDuringPlaybackFromItem:direction:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
_setCurrentPlaybackRate:
setRate:identifier:completion:
setRelativeVolume:
setPlaybackEngine:
initWithQueueController:
initWithDelegate:
initWithPlaybackEngine:translator:
initWithPlaybackEngine:translator:externalPlaybackRouter:
initWithTranslator:
leaseManager
initWithTranslator:leaseManager:
standardUserDefaults
initWithPlaybackUserDefaults:
initWithPlayerID:engineID:queueController:assetLoader:errorController:externalPlaybackController:leaseController:defaults:queue:
setPlaybackStackController:
setMaximumPlayerQueueLength:
initializationParameters
setupForManagedSessionWithAudioSession:
initWithPlaybackEngine:stackController:translator:
setConfigurator:
initWithStackController:
setQueueCoordinator:
updateAudioSession
numberWithInteger:
numberWithFloat:
numberWithDouble:
targetRate
stateDictionary
dictionaryWithObjects:forKeys:count:
eventStream
sectionIdentifier
itemIdentifier
emitEventType:payload:atTime:
currentItemTransition
setCurrentItemTransition:
playbackDidStopForItem:time:
emitEventType:payload:
engine:didChangeItemElapsedTime:rate:
type
sourceID
_isAVKitSkipAction:
mediaRemotePublisher
commandCenter
nextTrackCommand
previousTrackCommand
eventWithCommand:mediaRemoteType:options:
invokeCommandWithEvent:completion:
effectiveRate
updateDurationSnapshotWithTime:forItem:rate:
schedulePlaybackStatePreservation
engine:didChangeQueueWithReason:
setObject:forKeyedSubscript:
itemError
errorWithDomain:code:userInfo:
engine:didChangeRepeatType:
engine:didChangeShuffleType:
engine:didChangeActionAtQueueEnd:
forItemChangeSource:
time
currentItemWillChangeFromItem:toItem:time:
engine:willChangeToItem:fromItem:
_willResignActivePlayerItem
_willBecomeActivePlayerItem
playbackStartTrace
item
cancel
setPlaybackStartTrace:
engine:didChangeToItem:
playerItemDidBecomeCurrent:
_didBecomeActivePlayerItem
configurator
updatePlayerConfiguration
prepareForCurrentItemPlayback
itemDidBecomeCurrent:
itemDidBecomeCurrent:time:
_didResignActivePlayerItem
itemDidResignCurrent:time:
playerItemDidResignCurrent:
repeatType
setMPAVItem:forMFPlayerItem:
isAlwaysLive
contentItem
elapsedTimeTimestamp
calculatedElapsedTime
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
itemDidFailToLoad:error:
null
timeControlStatus
itemDidPlayToEnd:time:
engine:didEndPlaybackOfItem:
itemIsReadyToPlay:
reevaluateHasProtectedContent
reevaluateType
_logPlayerEventsForQueueItem:
_updateActiveFormatForQueueItem:
availableSortedFormats
currentPlayerAudioFormat
tier
preferredFormat
updateActiveFormat:justification:
stableVariantID
engine:didChangeCurrentItemVariantID:
avPlayerItem
accessLog
events
countByEnumeratingWithState:objects:count:
startupTime
observedBitrate
indicatedBitrate
averageAudioBitrate
switchBitrate
entryReasonCode
endInterval
setItemsHavePlayed:
playbackDidStartForItem:time:rate:
_playbackDidStopForItem:source:reason:time:
playbackDidStopForItem:
playbackRateDidChangeToRate:forItem:time:
playbackRateDidChangeForItem:rate:
timebase
dateWithTimeIntervalSinceReferenceDate:
firstFrameWillRenderForItem:atDate:
routeDescription
isAirplay
playbackStateDidChangeFromState:toState:forItem:time:rate:
engine:didChangeToState:
engine:didAchieveLikelyToKeepUpWithItem:
playbackIsLikelyToKeepUp:forItem:
engine:didReachEndOfQueueWithReason:
uniqueIdentifier
source
_performSkipForUserAction:
timeStamp
numberWithUnsignedInt:
successStatus
statusWithCode:error:
engineDidLoseMediaServices:
engineDidResetMediaServices:
rtcReportingServiceIdentifier
modelGenericObject
anyObject
identifiers
modelPlayEvent
genericObjectRepresentation
song
isArtistUploadedContent
modelKind
isVideoContent
durationFromExternalMetadata
initialPlaybackStartTime
isStartItem
currentItemWillChangeFromItem:toItem:source:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:source:timeStamp:
itemDidResignCurrent:source:timeStamp:
playbackDidStartForItem:rate:fromStalling:timeStamp:
playbackDidStopForItem:source:reason:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
playbackRateDidChangeNotifiedForItem:newRate:reason:participantIdentifier:timeStamp:
relativeVolumeDidChangeTo:timeStamp:
firstFrameWillRenderForItem:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
tracksDidChangeForItem:timeStamp:
timeControlStatusDidChange:waitingReason:timeStamp:
didReachEndOfQueueWithReason:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithItemAtDeath:timeAtDeath:timeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
userSeekCompletedForItem:fromTime:toTime:timeStamp:
didReportSignpostWithType:
errorResolutionDidStartForItem:error:
errorResolutionDidEndForItem:error:resolution:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
initWithPlaybackEngine:
reloadWithPlaybackContext:identifier:completionHandler:
replaceCurrentItemWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithCompletion:
setQueueController:
currentRate
state
stateBeforeInterruption
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
isReloadingPlaybackContext
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
playWithOptions:
pause
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
pauseWithFadeout:identifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
jumpToTime:identifier:completion:
T@"MPCPlaybackEngine",R,W,N
T@"<MPAVQueueController>",&,N
T@"MPAVItem",R,N
Td,R,N
Tf,R,N
Tq,R,N
TB,R,N
TB,N
Tq,N
reloadingPlaybackContext
TB,R,N,GisReloadingPlaybackContext
playerViewController
playbackDidReachQueueEndWithTimeStamp:
firstVideoFrameWasRenderedForItem:timeStamp:
setBookmarker:
setTranslator:
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
stateHandle
setStateHandle:
setTransientAudioSessionController:
_autoPlayWhenLikelyToKeepUp
_reloadingPlaybackContext
_playbackEngine
_queueController
_actionAtQueueEnd
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_configurator
_stateHandle
_playbackStartTrace
_playPerfAnalytics
_transientAudioSessionController
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
T@"MPCItemBookmarker",&,N,V_bookmarker
T@"MPCMediaFoundationTranslator",&,N,V_translator
T@"MPCErrorControllerImplementation",&,N,V_errorController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
T@"<MFAssetLoading>",&,N,V_assetLoader
T@"MPCLeaseController",&,N,V_leaseController
T@"MPCPlayerItemConfigurator",&,N,V_configurator
TQ,N,V_stateHandle
T@"MPCAVItemTrace",&,N,V_playbackStartTrace
T@"MPCPlayPerfAnalytics",&,N,V_playPerfAnalytics
T@"_MPCAudioSessionController",&,N,V_transientAudioSessionController
T@"AVPlayerViewController",R,N
T@"NSDictionary",R,N
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"<MPAVQueueController>",&,N,V_queueController
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
TB,R,N,GisReloadingPlaybackContext,V_reloadingPlaybackContext
hostTime
userSecondsSinceReferenceDate
forPlayerState:
forPlaybackTimeChangeReason:
doubleValue
lastChangeDirection
forTimeControlStatus:
forErrorResolution:
serverError
domain
code
userInfo
mutableCopy
dialog
responseDictionary
_isAgeVerificationError:
removeObjectForKey:
objectForKeyedSubscript:
errorForICError:response:
request
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
queueItemProperties
label
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
isCancelled
finish
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
controllerFuture
isInvalid
_loadItemsWithCompletion:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
finishWithError:
queueSectionProperties
translatorForMPModelClass:
setArtworkGenerator:
appendSection:
sectionObjectForPropertySet:contentItem:context:
emptyIdentifierSet
initWithIdentifiers:block:
firstObject
objectAtIndexedSubscript:
collectionIdentifier
collectionInfo
isEqualToDictionary:
playingIndexPath
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
setPlayingIndexPath:
_itemGenericObjectPropertySetForContentItem:propertySet:
objectForPropertySet:contentItem:context:
appendItem:
setQueueContentItems:
setQueueModelObjects:
queueIdentifier
setQueueIdentifierFuture:
queueIdentifierFuture
setQueueIdentifier:
_loadPlayingIdentifierWithCompletion:
sharedCache
playerPath
observationTokenDescriptionForPlayerPath:
sourceContentItems
modelObjects
T@"MPSectionedCollection",R,N
T@"NSIndexPath",R,C,N
requiredStoreLibraryPersonalizationProperties
dictionaryWithCapacity:
emptyPropertySet
propertySetByCombiningWithPropertySet:
initWithProperties:relationships:
deviceSpecificUserInfo
mediaType
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
timeoutDescription
T@"NSError",R,N
T@?,C,N
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
initWithMiddleware:request:
execute
setMiddleware:
setRequest:
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSMapTable",&,N,V_inputOperations
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
queueModelObjects
queueContentItems
flattenedGenericObject
copy
_createStoreRequestContext
setRtcReportingParentHierarchyToken:
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
_ageVerificationStateDidChangeNotification:
removeObserver:name:object:
isHLSAsset
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
cancelRequest:
repeatIndex
mainTitle
album
title
year
artist
name
tvEpisode
season
show
universalStore
adamID
purchasedAdamID
subscriptionAdamID
trackNumber
trackCount
loadedAudioAssetType
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
storeSubscriptionAdamID
genre
_radioStation
subtype
performWithoutEnforcement:
isRadioStreamPlayback
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isExplicitTrack
activeAccount
defaultManager
ageVerificationStateForUserIdentity:
treatment
isRadioPlayback
_storeRequestContext
delegatedIdentity
delegatedIdentityProperties
DSID
unsignedLongLongValue
isDelegated
sharedMonitor
networkType
lastKnownNetworkType
hasVideo
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
homeSharingAsset
localFileAsset
storeAsset
sharedSelector
preferredAudioAssetTypeForItem:
personalizedStore
playbackAuthorizationToken
setPreferredAudioAssetType:
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
_prefersHighQualityContent
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
setHomeSharingAsset:
setAccountID:
storefrontIdentifier
setStorefrontID:
setDelegatedAccountID:
setPlaybackAuthorizationToken:
gaplessInfo
volumeAdjustment
sharedManager
isItemAuthorized:shouldAskForAuthorization:
identityProperties
_delegatedUserIdentityProperties:
setItemError:
_allowsStreamingPlayback
_assetLoadPropertiesWithUserIdentityProperties:delegatedUserIdentityProperties:
endpointType
prefersVideoContent
preferredAudioAssetType
_timeoutValues
_iTunesStorePurchasedMediaKind
_gaplessInfo
_loudnessInfoMediaKind
_volumeAdjustment
rtcReportingParentHierarchyToken
newHierarchyTokenFromParentToken:
timeIntervalSinceReferenceDate
sharedBagProvider
getBagForRequestContext:withCompletionHandler:
requestDate
_getSubscriptionLeasePropertiesWithCompletion:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
_allowsAssetCaching
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setAllowsCachedAssets:
setResponseHandler:
addOperation:
assetURL
hasValidAsset
accountID
delegatedAccountID
setRequestType:
itemIdentifiers
setStoreRadioAdamID:
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:source:error:
isSubscriptionRequired
hasPlaybackCapability
shouldRequirePlaybackAuthorizationTokensForPlayback
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
isLoadedFromMiniSINF
assetProtectionType
purchaseBundleDictionary
protectedContentSupportStorageFileURL
isCloudStreamingAsset
userAgent
isTrustedHostForURL:
clientInfo
initWithClientInfo:
isHomeSharingAsset
cloudID
numberWithUnsignedLongLong:
numberWithLongLong:
initWithCapacity:
redownloadParameters
accountIdentifier
alternateHLSPlaylistURL
absoluteString
UTF8String
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
onlineSubscriptionKeysRequired
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
assetCacheProvider
genericObject
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
preferredMusicLowBandwidthResolution
_rtcReportingServiceIdentifierWithAssetURL:
_rtcReportingMediaIdentifierWithAssetLoadProperties:
URLAssetWithURL:options:
objectForKey:
setFollowUp:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
host
path
fileExistsAtPath:
identityKind
initWithModelKind:block:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
setTraits:
setHLSKeyServerURL:
setHLSKeyServerProtocol:
setHLSKeyCertificateURL:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
initWithPath:
enhancedAudioConfiguration
keyServerProtocolType
certificateURL
urlForBagKey:
streamingKeyServerURL
streamingKeyAdamID
_keyServerAdamID
initWithRequestContext:keyStore:
setAdamID:
setKeyServerURL:
setKeyCertificateURL:
setKeyServerProtocolType:
streamingKeyCertificateURL
isRemoteServerLikelyReachable
setBypassCache:
mediaItem
setValue:forProperty:
longLongValue
getKeyStatusForAccountUniqueIdentifier:error:
setRequestOfflineKeys:
addAsset:shouldPreloadKeys:
stringWithString:
appendString:
sharedSessionManager
backgroundSessionConfigurationWithIdentifier:
setAllowsCellularAccess:
setDiscretionary:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
initWithConfiguration:
sessionWithIdentifier:creationBlock:
preferredMusicHighBandwidthResolution
numberWithLong:
requestWithURL:
setTimeoutInterval:
initWithURLRequest:requestContext:
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
initWithURL:options:
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
playerItemWithAsset:
setVolumeAdjustment:
setMediaKind:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
heuristicInfo
encodingDelayInFrames
encodingDrainInFrames
durationInFrames
lastPacketsResync
setGaplessInfo:
initWithIdentifiers:
setDelegate:queue:
addOutput:
addObserver:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setAllowedAudioSpatializationFormats:
setPlayerItem:
willBecomeActivePlayerItemHandler
alternateHLSKeyCertificateURL
alternateHLSKeyServerURL
isiTunesStoreStream
audioAssetType
isDownloadedAsset
suzeLeaseID
_suzeLeaseMediaType
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
scheme
msv_analyticSignature
analyticsContentType
currentStableVariantID
audioFormatForStableVariantID:
audioFormatsDictionary
setAudioFormatsDictionary:
allValues
bitrate
bitDepth
sampleRate
sortedArrayUsingComparator:
setAvailableSortedFormats:
invalidateContentItemAudioFormatInfo
_emitAudioFormatChangeEvent
_updateActiveFormatJustification:
mpc_setupWithPlayerAudioFormat:forceSpatial:downloadedAsset:
activeFormat
setActiveFormatJustification:
activeFormatJustification
_audioFormatPreference
numberWithUnsignedInteger:
alternateFormats
audioRoute
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
itemFromModelObject:
library
databaseID
personID
universalCloudLibraryID
cloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
playbackError
shouldShowComposer
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
supportsRating
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
radio
stationID
stationHash
stationStringID
shouldReportPlayEventsToStore
lyrics
text
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfo
_startTime
_stopTime
_bookmarkTime
addEntriesFromDictionary:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
setupWithPlaybackInfo
userRating
_updateAudioFormatInfoForContentItem:
traits
setSongTraits:
itemType
hasLoadedValueForKey:
setAlbumTraits:
playlist
setPlaylistTraits:
nowPlayingAudioFormat
setPreferredFormat:
setActiveFormat:
nowPlayingAudioRoute
setAudioRoute:
setFormatTierPreference:
msv_map:
setAlternativeFormats:
isItemAuthorized:
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
includeContentItemDebugFields
privateListeningStateSource
currentValue
boolValue
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
_currentPlaybackRate
resumeAutomaticKeyRenewal
pauseAutomaticKeyRenewal
controllerWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
assetAdamID
reportingAdamID
artworkCatalog
equivalencySourceAdamID
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
_isPrivateListeningEnabled
isSiriInitiated
trackInfoData
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
contentURI
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
performWithResponseHandler:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
setLastMetadataChangeTime:
observer
didSignificantlyChangeItem:
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
isFirstResponse
_updateDurationSnapshotWithElapsedTime:playbackRate:
newOperationWithResponseHandler:
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
deviceMediaLibraryWithUserIdentity:
invalidateContentItemDeviceSpecificUserInfo
explicitBadge
setExplicitBadge:
object
currentDeviceInfo
isWatch
isNetworkConstrained
isCurrentNetworkLinkExpensive
preferredVideoHighBandwidthResolution
preferredVideoLowBandwidthResolution
isAudioAccessory
isAppleTV
disableAssetCaching
setLoudnessInfo:
mediaKind
loudnessInfoVolumeNormalization
preferredMaximumResolution
setPreferredMaximumResolution:
preferredPeakBitRate
setPreferredPeakBitRate:
audioFormatPreference
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
_storeUbiquitousIdentifier
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
setBookmarkTime:
setHasBeenPlayed:
sharedUbiquitousPlaybackPositionController
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
playbackPosition
postNotificationName:object:
updatePlayerItemMetadata
radioStation
string
rtcIdentifiersFromUniversalIdentifiers:
rtcIdentifiersFromRadioIdentifiers:
stringValue
appendFormat:
msv_enumerateKeysAndObjectsOrderedByKeyComparator:usingBlock:
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
userSkippedPlayback
keySpace
extraAttributes
dataValue
hasInflightLeaseAcquisition
leaseState
shouldPreventPlayback
codec
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
channelLayout
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
updateAudioFormatsDictionary:
updatePreferredFormat:
configureAVPlayerItemWithAudioFormat:forceSpatial:
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
prefersSeekOverSkip
setRating:
stationName
stationProviderID
supportsLikedState
supportsRateChange
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
nowPlayingInfoCenter:lyricsForContentItem:completion:
_applyLoudnessInfo
analyticsFormatType
leasePlaybackPreventionState
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
setSiriInitiated:
setRadioStreamPlayback:
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
setEventStream:
setAlternateFormats:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingServiceIdentifier
_identityPropertySet
_contentKeySession
_hlsDownloadURLSession
_hlsDownloadURLRequest
_genericObjectLock
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_hlsAsset
_downloadedAsset
_leasePlaybackPreventionState
_leaseStatus
_audioFormatsDictionary
_preferredAudioAssetType
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_eventStream
_preferredFormat
_activeFormat
_activeFormatJustification
_alternateFormats
_availableSortedFormats
_audioRoute
_loadedAudioAssetType
T@"NSDictionary",C,N,V_audioFormatsDictionary
T@"NSArray",&,N,V_availableSortedFormats
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
T@"NSString",C,N,V_assetSourceStoreFrontID
Tq,N,V_equivalencySourceAdamID
T@"MPModelGenericObject",&,N,V_genericObject
T@"NSData",R,C,N,V_jingleTimedMetadata
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
Tq,N,V_stationItemLikedState
T@"NSDictionary",&,N,V_trackInfo
T@"NSData",R,N
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
T@"MPCPlayerAudioFormat",&,N,V_preferredFormat
T@"MPCPlayerAudioFormat",&,N,V_activeFormat
Tq,N,V_activeFormatJustification
T@"NSArray",&,N,V_alternateFormats
T@"MPCPlayerAudioRoute",&,N,V_audioRoute
Tq,R,N,V_preferredAudioAssetType
Tq,R,N,V_loadedAudioAssetType
hlsAsset
TB,R,N,GisHLSAsset,V_hlsAsset
downloadedAsset
TB,R,N,GisDownloadedAsset,V_downloadedAsset
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
asset
_asset
_completionHandler
T@"AVURLAsset",R,W,N,V_asset
T@?,C,N,V_completionHandler
componentsJoinedByString:
stopDiscovery
_discoverAirplayDevices:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
waitForCompleteClusters
setWaitForCompleteClusters:
_reconSession
_waitForCompleteClusters
TB,N,V_waitForCompleteClusters
identityStore
initWithIdentityProperties:delegatedIdentityProperties:
getPropertiesForUserIdentity:completionHandler:
identityPropertySetFromRequestContext:completion:
setIdentityProperties:
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
initWithWritingStyle:
setShouldReportPlayActivityEvents:
initWithPlayer:reportingController:
setOffline:
modelSong
displayType
visibleDuration
activeAccountRequestEnvironment
setIdentityPropertiesLoader:
setItemGenericObject:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
lyricsID
setLyricsID:
newPlayActivityEvent
setEventType:
setItemEndTime:
displayedCharacterCount
setLyricsDisplayedCharacterCount:
language
setLyricsLanguage:
sourceType
setSourceType:
setDisplayType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
_containerIndex
_itemIndex
executeWithUIDs:action:volumeValue:completion:
containsUID:
connectToEndpoint:completion:
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
dateWithTimeIntervalSince1970:
stringFromDate:
streamID
mainBundle
infoDictionary
payload
subscribeToEventType:handler:
findPreviousEventWithType:matchingPayload:
durationSinceEvent:
compare:
isRoot
stringByPaddingToLength:withString:startingAtIndex:
uuid
isDebug
integerValue
stringWithCapacity:
_logAccountEvent:subscription:cursor:
unsignedIntValue
stringByReplacingOccurrencesOfString:withString:
enumerateKeysAndObjectsUsingBlock:
msv_compactDescription
statusCode
localizedTitle
localizedMessage
actions
msv_description
componentsSeparatedByString:
humanDescription
dateByAddingTimeInterval:
enumeratePreviousEventsWithTypes:usingBlock:
timeIntervalSinceDate:
intValue
serverID
externalIdentifier
cursorUntilEvent:
setLastTimeControlStatusEvent:
lastTimeControlStatusEvent
subscribeToEventStream:
unsubscribeFromEventStream:
T@"NSString",R,C,N
subscription
_subscription
_lastTimeControlStatusEvent
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
T@"MPCPlaybackEngineEvent",&,N,V_lastTimeControlStatusEvent
findPreviousEventWithTypes:matchingPayload:
infoCenterForPlayerID:
playbackQueueDataSource
implementation
describePlayer:
sharedServerObjectDatabase
initWithRequest:serverObjectDatabase:
sectionedModelObjects
delegationProperties
userIdentity
defaultIdentityStore
DSIDForUserIdentity:outError:
array
sharedRestrictionsMonitor
allowsExplicitContent
needsPersonalization
preferredStoreStringIdentifierForPersonID:
UUID
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
storeIDs
_resolveContentDescriptorsUsingServerObjectDatabase
genericObjectWithModelObject:
copyWithPropertySet:
setPlaceholder:
copyWithBlock:
copyWithIdentifiers:
initWithModel:personalizationStyle:
setWithCapacity:
containsObject:
copyWithIdentifiers:propertySet:
_eligibilityForItem:
countForObject:
_playlistEntryForObject:containerUniqueID:
totalItemCount
playbackPrioritizedIndexPaths
isPlaceholder
allStoreItemDictionaries
initWithPayload:
_userIdentityWithRequest:
setUserIdentity:
importObjectsFromRequest:options:trustID:error:
_isFatalError:
lastBatchItemIdentifiers
storeItemMetadataForItemIdentifier:
_addEquivalencyForMetadata:requestStoreIdentifier:
isFinalResponse
removeAllObjects
performanceMetrics
networkingTimeFromMetrics:
accumulatorResult
response
initWitDatabaseImportResult:accumulatorImportResult:
clientIdentifier
setClientIdentifier:
setReason:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
indexOfObject:
objectAtIndex:
removeObjectAtIndex:
addObjectsFromArray:
setClientInfo:
setDelegatedUserIdentity:
setUserIdentityStore:
_createMusicKitRequestContext
setCollectionPlaybackAuthorizationToken:
initWithItemIdentifiers:personID:requestContext:
initWithStoreID:collectionType:requestContext:
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
playlistEntry
storeIDsToPlaybackAuthorizationTokensMap
modelGenericObjectFromObject:playbackAuthorizationToken:
_addPendingChildItem:identifiers:atSectionIndex:collectionPlaybackAuthorizationToken:requestType:
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
setContainerUniqueID:
kindWithKinds:
unionSet:
setMovie:
setTvEpisode:
indexSet
orderedSet
_serverObjectFromPlaceholderContentDescriptor:propertySet:
indexPathWithIndex:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
addIndex:
replaceSectionsUsingBlock:
_updatedModelObjectFromOriginalObject:sectionPlaybackAuthorizationToken:itemSectionIndex:
replaceItemsUsingBlock:
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
insertSection:atIndex:
moveItemFromIndexPath:toIndexPath:
shiftIndexesStartingAtIndex:by:
relatedIdentifierSetsForParentIdentifierSet:childKey:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
versionHash
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
removeObject:
modelObjectMatchingIdentifierSet:propertySet:
insertItem:atIndexPath:
enumerateIndexesUsingBlock:
minusSet:
setSubscriptionAdamID:
setUniversalCloudLibraryID:
setUniversalStoreIdentifiersWithBlock:
setPersonalStoreIdentifiersWithPersonID:block:
orderedSetWithObject:
setGlobalPlaylistID:
indexAtPosition:
mergeWithObject:
specificAccountWithDSID:
identityAllowingDelegation:
msv_errorByUnwrappingDomain:
initWithRequest:
unpersonalizedContentDescriptors
handleResponse:error:
handleMediaAPIResponse:trustID:isFinalResponse:
newStoreItemMetadataRequest
newMediaAPICollectionItemMetadataRequestInfo
_newIdentifierSetFromOriginalIdentifierSet:playbackAuthorizationToken:
equivalencyMapping
lastBatchNetworkingTime
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_storePersonalizationStyle
_sectionIndexToCollectionItemMetadataRequestMap
_sectionIndexToTokenRenewalRequestMap
_storeIDToCollectionMetadataRequestMap
_pendingCollectionMetadataRequests
_pendingCollectionItemMetadataRequests
_pendingCollectionItemTokenRenewalRequests
_progressiveContentDescriptors
_lastBatchNetworkingTime
T@"NSDictionary",R,C,N,V_equivalencyMapping
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N
Td,R,N,V_lastBatchNetworkingTime
sectionProperties
sectionKind
modelClass
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
propertySetWithProperties:
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:firstResponse:finalResponse:
setFirstResponse:
setFinalResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_firstResponse
_finalResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
firstResponse
TB,N,GisFirstResponse,V_firstResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSData",C,N,V_adamIDData
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
T@"NSArray",C,N,V_artworkDictionaries
_contextWithEvent:
sharedAnalytics
monotonicTime
logEventWithType:machAbsoluteTime:context:
countOfPreviousEventsWithType:matchingPayload:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
analyticsFormatInfo
_handleAssetLoadEnd:cursor:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
responseClass
T@"MPCPlayerPath",R,N
T{?=qq},R
T@"MPPropertySet",R,N
T@"NSString",R,N
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
T@"MPCPlayerPath",&,N,V_playerPath
T@"MPPropertySet",C,N,V_sessionProperties
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builder
chain
initWithModelGenericObject:indexPath:response:
builderProtocol
_items
_controller
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
T@"MPCMediaRemoteController",R,N,V_controller
T@"MPSectionedCollection",R,N,V_items
_cloudID
_delegateInfoID
_purchaseHistoryID
_storeAdamID
_storeSubscriptionAdamID
_cloudUniversalLibraryID
_contentItemID
_playbackAuthorizationToken
addEngineObserver:
_registerForCommandHandlersRegisteredNotification
isSystemMusicApplication
initWithMachServiceName:
anonymousListener
resumeIfNeeded
commandHandlersRegistered
resume
invalidate
endpoint
_nowPlayingWithItem:
itemForContentItemID:
msv_compactMap:
modelObject
setContentItemID:
copyWithIdentifiers:block:
initWithModelObject:
displayIndexForContentItemID:
displayCount
artworkIdentifier
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
contentItemIDAtIndex:
playItemInQueueCommand
isSupportedAndEnabled
newCommandEventWithCommandType:options:
serverCopy
setFittingSize:
requestImageWithCompletion:
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_timeSnapshotWithElapsedTime:rate:
playbackContext
setQueueEndAction:
currentConnection
auditToken
hasSuffix:
setPlaybackQueueCommand
setActionAfterQueueLoad:
initWithPlaybackContext:
setReplaceIntent:
initWithCommand:playbackQueue:
insertIntoPlaybackQueueCommand
initWithCommand:playbackQueue:options:
playCommand
newCommandEvent
isEnabled
isSupported
pauseCommand
pauseWithFadeDuration:
changePlaybackPositionCommand
newCommandEventWithPositionTime:
reshuffleCommand
seekForwardCommand
seekBackwardCommand
newSeekCommandEventWithType:
changeRepeatModeCommand
newCommandEventWithType:
currentRepeatType
changeShuffleModeCommand
currentShuffleType
changePlaybackRateCommand
newCommandEventWithPlaybackRate:
allowsQueueModifications
setAllowsQueueModifications:
publishIfNeeded
removedItemIdentifiers
removeContentItemID:completion:
insertedDescriptors
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
addPlaybackContext:afterContentItemID:completion:
setDisableAutomaticCanBeNowPlaying:
setHasTimeSnapshot:
setTimeSnapshot:
_applyServerStateUpdateRecord:
setNowPlaying:
setHasNowPlaying:
setQueueDidChange:
_addContentItemIDsToUpdateRecord:
matchesStartItem:
queueDescriptor
setQueueDescriptor:
setHasQueueDescriptor:
autoPlayEnabled
setHasRepeatMode:
setRepeatMode:
setHasShuffleMode:
setQueueDidEnd:
setItemDidEnd:
processIdentifier
skipWithBehavior:
reshuffle
beginSeekWithDirection:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
interfaceWithProtocol:
setExportedInterface:
performQueueModifications:completion:
prerollWithCompletion:
beginPlaybackAtHostTime:
getNowPlayingsForContentItemIDs:reply:
exportedInterface
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
remoteObjectInterface
protocol
proxyWithObject:protocol:
setExportedObject:
applyServerStateUpdateRecord:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
setRemoteObjectInterface:
integerForKey:
_handleCommandHandlersRegistered:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
setHasContentItemIDs:
setContentItemIDs:
remoteObjectProxy
listener:shouldAcceptNewConnection:
engine:didChangeAccounts:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
isRunning
startServer
stopServer
systemCache
listener
activeConnections
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_resumed
_systemCache
_listener
_activeConnections
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
T@"NSXPCListener",R,N,V_listener
T@"NSMutableArray",R,N,V_activeConnections
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
mediaRemoteOptions
command
mediaRemoteCommandType
initWithCommand:mediaRemoteType:options:
isLiveRadioStream
prefersHighQualityContent
predicateWithFormat:
radioStreamAssetInfoList
filteredArrayUsingPredicate:
flavor
sortUsingComparator:
streamURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
streamProtocol
setIsHLSAsset:
allowsHLSContent
hlsAssetInfo
playlistURL
alternatePlaylistURL
setAlternateHLSPlaylistURL:
alternateKeyServerURL
setAlternateHLSKeyServerURL:
alternateKeyCertificateURL
setAlternateHLSKeyCertificateURL:
setAllowsAssetCaching:
setAssetPathExtension:
setAssetQualityType:
keyServerAdamID
setStreamingKeyAdamID:
fileAssetInfoList
flavorType
fileExtension
setOnlineSubscriptionKeysRequired:
fairPlayInfoList
purchaseBundleSinfDictionary
setPurchaseBundleDictionary:
protectionType
setAssetProtectionType:
setSuzeLeaseID:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
setAudioAssetType:
setSource:
descriptionDictionary
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
setDownloadedAsset:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isHLSAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_keyServerProtocolType
_streamingKeyAdamID
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
_audioAssetType
_source
TB,N,V_allowsAssetCaching
TB,N,V_allowsAssetInfoCaching
T@"NSString",C,N,V_assetPathExtension
Tq,N,V_assetProtectionType
Tq,N,V_assetQualityType
T@"NSURL",C,N,V_assetURL
TB,N,V_isHomeSharingAsset
TB,N,V_isHLSAsset
TB,N,V_isCloudStreamingAsset
TB,N,V_onlineSubscriptionKeysRequired
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSDictionary",C,N,V_purchaseBundleDictionary
T@"NSURL",C,N,V_streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_streamingKeyAdamID
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
T@?,C,N,V_willBecomeActivePlayerItemHandler
T@"NSString",C,N,V_playbackAuthorizationToken
Tq,N,V_audioAssetType
TB,N,GisDownloadedAsset,V_downloadedAsset
Tq,N,GisLoadedFromMiniSINF,V_source
setStoreAccountID:
localStoreAccountProperties
setStoreFrontID:
cloudServiceStatusControllerWithUserIdentity:
musicSubscriptionStatus
hasCapability:
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
T@"MPCReportingDeviceIdentityPropertiesLoader",R,N
_calloutQueue
_serialWorkQueue
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
tracks
effectiveNetworkTypeForPlayback
requiredMediaClipProperties
rtcReportingAssetType
initWithMediaClip:
_modelGenericObject
_mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
_updateSupportedCommands
remoteCommandCenter
setWantsSerializedEventDelivery:
nowPlayingInfoCenter
setPlaybackQueueDataSource:
initWithSuiteName:
_durationAvailableNotification:
_likedStateChangedNotification:
_commandEventDidTimeoutNotification:
_updateLaunchCommands
becomeActive
systemRoute
pathWithRoute:mediaRemotePlayerPath:isResolved:
isEngineRestoringState
isQueueHandoffSupported
accountManager
hasLoadedInitialAccounts
hasInitializedSupportedCommands
_performCommandEvent:completion:
hasTargets
removeTarget:action:
addTarget:action:usingExtendedStatus:
stopCommand
togglePlayPauseCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
setTimeout:
setPlaybackSessionCommand
prepareForSetPlaybackQueueCommand
setSkipSerializedEventDelivery:
clearUpNextQueueCommand
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
mediaPlaybackCoreBundle
localizedStringForKey:value:table:
likeCommand
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
boolForKey:
getPendingCommandTypesWithCompletion:
isInSharedListeningMode
_endSynchronizedPlayback
sessionManager
stateRestorationSessionIdentifier
loadSessionWithIdentifier:completion:
invalidatePlaybackQueue
setPlaybackState:
setCurrentRepeatType:
setCurrentShuffleType:
changeQueueEndActionCommand
setCurrentQueueEndAction:
isEqualToArray:
isActiveAccount
hasCatalogPlaybackCapability
requiresAuthorizationTokenForPlayback
startDate
token
endDate
setModelSong:
setVisibleDuration:
reportingController
containsCommand:
commandID
delegate
engine:prepareForActivationWithCompletion:
initWithDeallocHandler:
engine:didFailToActivateWithError:resolution:
activationDelay
contextID
fallbackPlaybackIntent
containsTransportableContent
isCurrentItemFromAutoPlay
accountForDSID:
hasCloudLibraryEnabled
hashedDSID
setEnabled:
_supportedSessionTypes
disableQHO
setSupportedSessionTypes:
preloadPlaybackSessionCommand
updateLaunchCommandsWithConfigurationHandler:
setCurrentPlaybackSessionIdentifier:
supportsFastForward
supportsRewind
setCanBeControlledByScrubbing:
canPreviousTrackForItem:
canNextTrackForItem:
isTailPlaceholder
createRadioStationCommand
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
shuffleType
userCanEnableAutoPlay
setSupportedQueueEndActions:
supportedInsertionPositions
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
disableQueueModificationsCommand
_exportableSessionTypes
setExportableSessionTypes:
stagedQueueControllerIdentifiers
queueControllerForIdentifier:
revisionString
commandInfoWithIdentifier:revision:priority:
setPriorityForPlaybackSessionCommand
setPreloadedSessions:
discardPlaybackSessionCommand
stationAllowsItemLiking
setPresentationStyle:
likedState
setActive:
addNowPlayingItemToLibraryCommand
setStatusBlock:
configureWithModelObject:
addItemToLibraryCommand
ratingCommand
leaveSharedPlaybackSessionCommand
shareQueueCommand
debugCommand
_performDebugEvent:completion:
setSupportedSubsystems:
setSubsystemRevisions:
accountForUserIdentity:
statusType
_isRestrictedSubscriptionUser:
dataUsingEncoding:
statusWithCode:customData:type:
statusWithCode:
isNegative
stringByAppendingFormat:
interfaceID
analyticSignature
isMediaServerAvailable
setCanStealLeaseIfNeeded
_enqueueFallbackIntentIfNeededForCommandEvent:play:completion:
_becomeActiveIfNeededWithCompletion:
defaultMediaLibrary
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
firstContentItemIDForItemIntersectingIdentifierSet:
setContainedPersistentID:
canJumpToContentItemID:
jumpToContentItemID:userInitiated:
isRequestingDefermentToPlaybackQueuePosition
usesNewPlaybackImplementation
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
jumpToFirstContentItem
positionTime
playbackQueue
_canInsertPlaybackContext:forUser:
privateListeningOverride
setPrivateListeningOverride:
T@"NSNumber",C,N
setSiriReferenceIdentifier:
insertionPosition
insertAfterContentItemID
addPlaybackContext:atPosition:completion:
insertBeforeContextItemID
moveContentItemID:beforeContentItemID:completion:
insertAfterContextItemID
moveContentItemID:afterContentItemID:completion:
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
queueEndAction
setAutoPlayEnabled:
preservesQueueEndAction
setAutoPlayEnabled:forUserIdentity:
prepareForPlaybackWithAccount:completion:
replaceIntent
hasUserMutations
verifyWithError:
supportsAccountRectification
setPlaybackRequestEnvironment:
T@"MPCPlaybackRequestEnvironment",C,N
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
sessionIdentifierOverride
setSessionIdentifier:
shouldBecomeActive
stationURL
radioPlaybackIntentWithStationURL:
setPlayActivityFeatureName:
isRequestingPlaybackInitialization
_playbackStateIsIdle:
radioPlaybackIntentFromSong:
playbackSessionData
decodedObjectOfClass:fromData:error:
_emitEventsForPlaybackBehaviorChange
infoCenter
invalidatePlaybackQueueWithCompletion:
finalizeStateRestorationWithCompletion:
playbackSessionDataFilePath
dataWithContentsOfURL:
stageQueueController:forIdentifier:
priority
unstageQueueControllerForIdentifier:
durationIsValid
durationInSeconds
interval
setLikedState:forUserIdentity:
rating
kindWithVariants:
currentStatus
setModelObject:
setShouldLibraryAdd:
setModelObjects:
clearUpNext
playbackRate
leaveSharedSessionWithCommandID:completion:
setTracklistToken:
setTracklistSource:
payloadValueFromJSONValue:
sessionIdentifier
buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:
_getSharedQueueTracklistWithCompletion:
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
setEngineRestoringState:
setMediaServerAvailable:
_libraryAddStatusObserver
_libraryAddStatusObserverLock
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountRequiresAuthorizationTokensForPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_nextPreviousTrackCooldownTimer
_deferredTrackChangeDelta
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
isPlaceholderItemForContentItemID:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
updateLocationDependentPropertiesForItem:
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setCompletedUnitCount:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:userInfo:error:
responseWithIdentifier:sessionType:data:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
substringToIndex:
requestedProperties
initWithRequestedProperties:
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:userIdentity:
storeAdamID
formerStoreAdamIDs
setFormerAdamIDs:
offerWithType:
accountDSID
setTrackNumber:
setTrackCount:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
fileAsset
allowsCachedAssets
isHLSFileAsset:
_loadedAudioAssetTypeForFileAsset:
qualityType
hlsKeyServerURL
hlsKeyCertificateURL
fileExistsAtPath:isDirectory:
purchaseBundleFilePath
initWithContentsOfFile:
propertyListWithData:options:format:error:
fileURLWithPath:isDirectory:
pathExtension
URLWithString:
hlsKeyServerProtocol
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_allowsCachedAssets
_assetLoadProperties
_responseHandler
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
TB,N,V_requirePreferredAssetQuality
TB,N,V_allowsCachedAssets
T@?,C,N,V_responseHandler
bundleWithIdentifier:
getRemotePlaybackQueueRepresentationWithCompletion:
musicShuffleType
itemKind
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
setLabel:
startItemIdentifiers
playActivityFeatureName
playActivityQueueGroupingID
mpc_protoContainerRepresentation
intersectsSet:
mpc_protoItemRepresentation
addDelegationUUIDs:forUserIdentity:completionHandler:
currentDeviceDelegateInfo
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
playActivityRecommendationData
initWithData:encoding:
setSiriRecommendationIdentifier:
seedContentReference
ICRadioContentReference
nowPlayingContentReference
originalIdentifierSet
globalPlaylistID
cloudVersionHash
shouldExcludeFromShuffle
_initWithMediaLibrary:
_persistentIDForModelObject:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
ml3Library
autoupdatingSharedLibrary
pathForResourceFileOrFolder:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProviderWithUserIdentity:
_objectForIdentifier:
_fetchObjectFromPayloadWithIdentifier:
_setObjectInPayload:withIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
_setPayloadIdentifier:object:withBlock:
_payloadForIdentifier:
unarchivedObjectOfClass:fromData:error:
_setPayload:object:identifier:
_addObjectToPayload:withIdentifier:
mpc_commandOptions
mpc_destination
mpc_playbackQueue
mpc_setCommandOptions:
mpc_setDestination:
mpc_setPlaybackQueue:
T@"MPCAssistantPlaybackQueue",C,N,Smpc_setPlaybackQueue:
T@"MPCAssistantRemoteControlDestination",C,N,Smpc_setDestination:
T@"NSDictionary",C,N,Smpc_setCommandOptions:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
deviceGUID
deviceName
systemReleaseType
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
setPlayActivityRecommendationData:
queueGroupingID
setPlayActivityQueueGroupingID:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
route
isDeviceRoute
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
setExpirationDate:
sharedService
addAssertion:
queueFeederClass
msv_errorWithDomain:code:userInfo:debugDescription:
getRepresentativeMetadataForPlaybackContext:properties:completion:
generateNowPlayingContentItemWithMetadataObject:
nowPlayingInfo
artworkCatalogForMetadataModelObject:
getRepresentativeObjectWithProperties:completion:
firstModelPlayEvent
preferredArtworkSize
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
encodedDataWithRootObject:error:
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
modelPlayEventForItem:inSection:
identifiersForItem:inSection:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
itemDidBeginPlayback:
canJumpToItem:
canSkipItem:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
supportsAutoPlay
setType:
setSessionIdentifier:type:data:
bundleIdentifier
setBundleIdentifier:
setSupportedOptions:
setFallbackStoreIdentifier:
subtitle
setSubtitle:
setArtworkImageData:
initWithBlock:
setDisplayProperties:
setContinueListeningStation:
setSeedContentReference:
referenceWithMPModelObject:
radioPlaybackIntentFromReference:
setRadioStation:
setStationStringID:
setRadioIdentifiersWithBlock:
setRadioStationURL:
tracklistSource
number
podcast
author
podcastEpisode
radioStationEvent
curator
socialPerson
recordLabel
group
tracksTiledArtworkCatalogWithRows:columns:
editorialArtworkCatalog
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
setQueueGroupingID:
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_startTimeModifications
_endTimeModifications
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_repeatMode
_queueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
T@"<MPCPlaybackIntentDataSource>",R,N
T@"NSString",C,N,V_localizedTitle
Tq,N,V_tracklistSource
T@"<NSSecureCoding>",&,N,V_tracklistToken
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatMode
TB,N,V_prefersEnqueuingUsingAirPlay
T@"NSString",C,N,V_queueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_siriReferenceIdentifier
T@"MPCPlaybackSharedListeningProperties",R,N
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
playbackSessionType
decodedObjectOfClasses:fromData:error:
containsAppleMusicRadioContent
_sessionIdentifier
_sessionKey
T@"NSString",R,N,V_sessionIdentifier
T@"NSString",R,N,V_sessionKey
_accountInfo
_nowPlayingContentReference
_playActivityQueueGroupingID
_radioStationID
_radioStationURLString
_seedContentReference
setStationHash:
setStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseArray
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
allowsItemLiking
setAllowsItemLiking:
attributionLabel
setAttributionLabel:
setSubtype:
providerResource
setProviderUniversalLink:
setProviderBundleIdentifier:
modelRadioStationForMetadata:userIdentity:
_requestedRadioStationProperties
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
resolvedPlayerPath
isInProcess
playerRequest
initWithName:object:handler:
setPlayerRequest:
_playerRequest
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"MPCPlayerRequest",&,N,V_playerRequest
lastRecordedPlayEvent
meetsPlaybackHistoryThreshold
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
T@"NSOperationQueue",&,N,V_operationQueue
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
initWithMiddleware:
_playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
willChangeValueForKey:
didChangeValueForKey:
callbackQueue
setError:
main
hasLoadableAsset
_configureItem:error:
configureQueuePlayerItem:error:
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
isExecuting
isFinished
_isExecuting
_isFinished
_item
_delegate
_token
_callbackQueue
_error
T@"MPAVItem",R,C,N,V_item
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
Tq,R,N,V_token
T@?,R,C,N,V_completion
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
T@"NSError",&,N,V_error
loadingQueue
cancelAllOperations
loadAssetFor:token:completion:
cancelLoading
_loadingQueue
T@"NSOperationQueue",R,N,V_loadingQueue
artworkProperties
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_artworkIdentifier
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
_urlForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
sharedDataSource
T@"MPCRemotePlayerArtworkDataSource",R,N
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
CGSizeValue
assistantStreamingGetAvailability:
assistantRadioGetAvailability:completion:
hasLoadedRadioAvailability
isRadioAvailable
getRadioAvailabilityWithCompletionHandler:
assistantStreamingGetAvailability
assistantRadioGetAvailability:
objectForInfoDictionaryKey:
initWithBundleIdentifier:allowPlaceholder:error:
shortVersionString
bundleVersion
MPC_storeFrontIdentifierKey
setShouldRequireCachedResults:
defaultInfo
setClientVersion:
setShouldIgnoreExpiration:
sharedStoreItemMetadataRequestController
cacheMissItemIdentifiers
getStoreItemMetadataForRequest:responseHandler:
initWithRequestedPropertySet:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:userIdentity:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
setOverridePlayingItem:
setPlayingItemIndexPath:
overridePlayingItem
playingItemIndexPath
T@"MPModelGenericObject",R,N
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
setPurchasedAdamID:
setCloudAlbumID:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setSeason:
rangeOfString:
performRequest:options:extendedStatusCompletion:
requestWithCommandRequests:
setOptions:
performWithExtendedStatusCompletion:
initWithCommandRequests:
msv_firstWhere:
options
blockOperationWithBlock:
initWithCommandRequest:options:sendDate:
addDependency:
performRequest:completion:
performRequest:options:completion:
performRequest:extendedStatusCompletion:
performWithCompletion:
commands
setCommands:
_options
_commands
T@"NSArray",&,N,V_commands
TQ,N,V_options
originatingOutputDeviceUID
appBundleID
pathWithDeviceUID:bundleID:pid:playerID:
createRemotePlaybackQueue
initWithMediaRemoteCommand:options:playerPath:label:
initWithSiriUserActivity:
initWithMediaRemoteCommand:options:controller:label:
setCommandOptionValue:forKey:
originalLabel
userInitiatedOptions
setUserInitiatedOptions:
statusTransformer
setStatusTransformer:
_command
_label
_originalLabel
_userInitiatedOptions
_statusTransformer
T@"NSString",R,C,N,V_originalLabel
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
T@?,C,N,V_statusTransformer
T@"NSString",C,N,V_label
dependencies
msv_errorByUnwrappingDomain:code:
sendCommand:options:completion:
sendCommand:options:toPlayerPath:completion:
resolveWithRouteResolvedHandler:completion:
sendDate
_sendDate
_status
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
T@"NSDate",R,N,V_sendDate
T@"MPCPlayerCommandStatus",R,N,V_status
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
isEmpty
arrayByAddingObjectsFromArray:
_stateDumpObject
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_tracklistRange
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
TB,N,V_disablePlaybackStateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T{?=qq},N,V_tracklistRange
initWithResponse:
_commandRequestForMediaRemoteCommand:
createSharedSessionWithIdentity:intentHandler:
mpc_jsonValue
customDataType
customData
componentsWithString:
queryItems
value
createSharedSessionWithIntentHandler:
leaveSession
participants
isSharedListeningSession
videoView
setVideoView:
videoOutput
setVideoOutput:
_sharedListeningSession
_state
_participants
_videoView
_videoOutput
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
T@"NSArray",R,N,V_participants
sharedListeningSession
TB,R,N,GisSharedListeningSession,V_sharedListeningSession
initWithPlayerPath:
_response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
decodeBoolForKey:
encodeBool:forKey:
setNowPlayingContentReference:
setStationURL:
continueListeningStation
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
continueListeningQueueProvider
setContinueListeningQueueProvider:
stationPlaybackAuthorizationToken
setStationPlaybackAuthorizationToken:
descriptionComponents
requestEnvironmentWithUserIdentity:
overrideValue
setOverrideValue:
T@"ICUserIdentity",C,N
_continueListeningStation
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_stationURL
_stationPlaybackAuthorizationToken
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
TB,N,V_continueListeningStation
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
Tq,N,V_continueListeningMaxQueueReferences
Tq,N,V_continueListeningPrefetchThreshold
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
stationEventID
setDateFormat:
_sendReportForSessionSummary:event:withType:
_sendReportForItemSummaryWithEndReason:cursor:event:
_sendReportForSessionStart:event:withType:
_handleReportingForItemStartEvent:event:
_sendReportForItemSummary:event:
_sendSessionStartIfNeeded:forItemEvent:
_sendQueueLoadEventIfNeeded:forItemEvent:
_sendReportForItemAssetLoad:event:
_payloadForSessionSummary:fromEvent:
playbackSessionRTCSession
_sendReportWithSession:category:type:payload:
_payloadForSessionStart:fromEvent:
cursorFromEvent:untilEvent:
dateFormatter
setPlaybackSessionRTCSession:
_generateConfiguredReportingSessionWithToken:serviceName:completion:
_payloadForQueueLoad:fromQueueLoadEndEvent:
setPlaybackQueueRTCSession:
_payloadForItemAssetLoad:fromItemEvent:
setPlaybackItemRTCSession:
_payloadForItemSummary:fromEvent:
playbackItemRTCSession
_perceivedItemStartTime:fromItemStartEvent:
_updateAssetLoadInfoEvent:fromAssetLoadEndEvent:cursor:
arrayWithObjects:
_payloadForItemSummary:fromItemEvent:
countOfPreviousEventsWithTypes:matchingPayload:
insertObject:atIndex:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
containsString:
isValidJSONObject:
dataWithJSONObject:options:error:
previousItemEventWithCursor:type:
monotonicDate
_rtcSessionInfoWithToken:
_rtcUserInfoWithServiceName:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
processInfo
processName
performOnPayload:withCategory:type:
sendMessageWithCategory:type:payload:error:
NSStringFromMPCRTCReportingEventCategory:
setTestingDelegate:
testingDelegate
playbackQueueRTCSession
_rtcGroup
_rtcQueue
_testingDelegate
_playbackSessionRTCSession
_playbackQueueRTCSession
_playbackItemRTCSession
T@"RTCReporting",&,V_playbackSessionRTCSession
T@"RTCReporting",&,V_playbackQueueRTCSession
T@"RTCReporting",&,V_playbackItemRTCSession
T@"<MPCRTCEventConsumerTestingDelegate>",W,N,V_testingDelegate
setIdentifier:
endWithIdentifier:error:
initWithIdentifier:timeout:
beginWithIdentifier:
endWithError:
endWithIdentifier:item:
instanceMethodForSelector:
initWithIdentifier:
begin
endWithItem:
TQ,N,V_identifier
startFrame
setStartFrame:
endFrame
setEndFrame:
iterations
setIterations:
_startFrame
_endFrame
_iterations
Tq,N,V_startFrame
Tq,N,V_endFrame
Tq,N,V_iterations
version
setVersion:
frameRate
setFrameRate:
scenes
setScenes:
_version
_frameRate
_scenes
T@"NSString",C,N,V_version
Td,N,V_frameRate
T@"NSArray",C,N,V_scenes
_sharedInitWithItem:
_createSceneCollectionForAssetWithPreloadedKeys:
assetWithURL:
initWithAsset:sceneCollection:
_executeSceneCollection
playerWithPlayerItem:
setActionAtItemEnd:
addObserver:forKeyPath:options:context:
setExecutingPauseScene:
_updateRateIfNeeded
_advanceScene
player
removeObserver:forKeyPath:
timeObserver
removeTimeObserver:
setCurrentSceneIndex:
setCurrentLoopCount:
isExecutingPauseScene
pauseFinishedBlock
setSceneExecutionPaused:
setStatus:
pauseScenes
_pause
sceneCollection
currentSceneIndex
frameForCMTime:
_CMTimeForFrame:
currentLoopCount
isSceneExecutionPaused
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
isPlayable
metadata
sceneCollectionForMetadataItems:
setSceneCollection:
isScriptedLoopingDisabled
seekToFrameIfNeeded:completionHandler:
setItemDidPlayToEndObserver:
_executeCurrentScene
currentScene
_loopIfNeeded
valueWithCMTime:
addBoundaryTimeObserverForTimes:queue:usingBlock:
setTimeObserver:
restartScenes
setScriptedLoopingDisabled:
scriptedLoopingDisabled
TB,N,GisScriptedLoopingDisabled
initWithURL:sceneCollection:
playScenes
observeValueForKeyPath:ofObject:change:context:
setPauseFinishedBlock:
itemDidPlayToEndObserver
_executingPauseScene
_sceneExecutionPaused
_player
_pauseFinishedBlock
_sceneCollection
_timeObserver
_itemDidPlayToEndObserver
_currentSceneIndex
_currentLoopCount
Tq,N,V_status
T@?,C,N,V_pauseFinishedBlock
T@"MPCSceneCollection",&,N,V_sceneCollection
T@,&,N,V_timeObserver
T@"MPNotificationObserver",&,N,V_itemDidPlayToEndObserver
Tq,N,V_currentSceneIndex
Tq,N,V_currentLoopCount
executingPauseScene
TB,N,GisExecutingPauseScene,V_executingPauseScene
sceneExecutionPaused
TB,N,GisSceneExecutionPaused,V_sceneExecutionPaused
T@"AVPlayer",R,N,V_player
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
deleteCharactersInRange:
initWithRequest:responseHandler:
decodeObjectOfClasses:forKey:
isSubclassOfClass:
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
setSectionedModelObjects:
setStoreIDs:
setStoreIDsToPlaybackAuthorizationTokensMap:
trustID
setTrustID:
setPlaybackPrioritizedIndexPaths:
sharedListeningQueue
setSharedListeningQueue:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_storeIDsToPlaybackAuthorizationTokensMap
_trustID
_playbackPrioritizedIndexPaths
_sharedListeningQueue
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"ICSharedListeningQueue",&,N,V_sharedListeningQueue
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_allowLocalEquivalencies
T@"NSString",C,N,V_clientIdentifier
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
T@"NSArray",C,N,V_storeIDs
T@"NSDictionary",C,N,V_storeIDsToPlaybackAuthorizationTokensMap
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",C,N,V_trustID
T@"MPCPlaybackEngine",&,N,V_playbackEngine
commandRequest
event
initWithMPAction:request:
_action
initWithMPDialog:request:
_dialog
_actions
T@"NSArray",R,N,V_actions
mediaRemoteType
T@"MPRemoteCommandStatus",R,N,V_status
T@"MPCPlayerCommandDialog",R,N,V_dialog
firstPlayMetricsWithFirstFrameEvent:cursor:
sendFirstItemMetrics:
assetLoadWaitTime
assetLocation
assetSource
assetType
bagWaitTime
errorResolution
errorSignature
firstAudioFrameWaitTime
formatInfo
getTracksWaitTime
hasAccountInfo
leaseWaitTime
lookupWaitTime
mediaRedownloadWaitTime
subscriptionAssetLoadWaitTime
suzeLeaseWaitTime
hlsMetadataWaitTime
isAutoPlayEnabled
isDelegatedPlayback
isFirstPlay
isReplacingPlayback
isSharePlay
isShuffled
mediaPlayerTime
musicWaitTime
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
queueType
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfo
sessionActivationWaitTime
setQueueCommandSendTime
musicTotalTime
mpc_remoteCommandDialog
statusWithCode:dialog:
localizedDescription
dialogWithTitle:message:
actionWithTitle:type:commandEvent:
addAction:
T@"MPRemoteCommandStatus",R,N
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
TB,R,N,GisFinalResponse
initWithRequest:personalizationResponse:networkingTime:
setInvalidationDate:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
networkingTime
setNetworkingTime:
_invalidationTimer
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
_networkingTime
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
T@"NSDate",C,N,V_invalidationDate
Td,N,V_networkingTime
initWithDomain:code:userInfo:
underlyingErrors
assetSourceStorefrontID
isFollowUp
householdID
setHouseholdID:
storefrontID
_allowsHLSContent
_prefersVideoContent
_followUp
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
TB,N,V_allowsHLSContent
T@"NSString",C,N,V_assetSourceStorefrontID
TB,N,V_prefersVideoContent
T@"MPModelFileAsset",&,N,V_fileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPIdentifierSet",&,N,V_itemIdentifiers
TB,N,V_prefersHighQualityContent
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
T@"NSString",C,N,V_householdID
T@"NSString",C,N,V_storefrontID
Tq,N,V_preferredAudioAssetType
controllerForPlayerPath:
setControllerFuture:
setController:
initWithMiddleware:playerPath:
_controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
defaultTimeZone
stringFromDate:timeZone:formatOptions:
MSVBase64UUIDString
initWithType:payload:monotonicTime:identifier:
monotonicTimeNanoSeconds
machAbsoluteTime
_type
_payload
_machAbsoluteTime
_monotonicTime
T{?=QQQQd},R,N,V_monotonicTime
TQ,R,N,V_machAbsoluteTime
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
T@"NSDate",R,N
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
metadataForFormat:
mpc_HLSAVMetadataItemInMetadata:
mpc_synchronousHLSSessionDataWithTimeout:error:
operationsForSessionRequest:
pathByAppendingPlayerIDSuffix:
playerState
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
T@"MPSectionedCollection",&,N,V_queueContentItems
T@"MPSectionedCollection",&,N,V_queueModelObjects
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
T@"NSString",C,N,V_queueIdentifier
Tq,N,V_playerState
_supportedCommands:infoValueForKey:
unsignedIntegerValue
commandInfoForCommand:
isLoading
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
localizedDurationString
editingStyleFlags
auxiliaryNowPlayingInfo
availableLanguageOptions
currentLanguageOptions
initWithNowPlayingInfoAudioFormat:
formatTierPreference
alternativeFormats
initWithNowPlayingInfoAudioRoute:
_mediaRemoteContentItem
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
mpc_isSubscriptionRequiredError
setLastItemUsedForErrorResolution:
failedItemsIdentifiers
MPAVItemForMFPlayerItem:
externalPlaybackRouter
pickBestDeviceRoute
lastItemUsedForErrorResolution
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
errorDomain
_notifyObserversForError:item:
hasPerformedErrorResolution
setHasPerformedErrorResolution:
_resolutionForPlaybackError:item:
shouldHandleFirstItemFailure:item:
isUnrecoverableAssetLoadingError:
canHandleFirstItemFailure
isQueueLoadingFailure:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
isAssetUnavailableFailure:
isFirstItemFailure:item:
reportCriticalError:forItem:
setFailedItemsIdentifiers:
setExternalPlaybackRouter:
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
T@"NSString",C,N,VpreferredFirstContentItemID
TB,N,VitemsHavePlayed
cancellationHandler
operationType
subscriptionLeaseSession
_canRetrieveLoadResultsFromMiniSinf
_loadResultsFromMiniSinfWithPlaybackAuthorizationToken:
_canRetrieveLoadResultsFromServerObjectDatabase
_loadResultsFromLocalAssetCacheWithPlaybackAuthorizationToken:
setStoreSubscriptionAdamID:
isDelegatedLeaseSession
setStoreCloudID:
setStorePurchasedAdamID:
setCloudUniversalLibraryID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithRequestContext:storeSubscriptionAdamID:
disableMiniSINF
assetsWithMiniSINFsMatchingIdentifierSet:
assetsMatchingIdentifierSet:
sinfs
miniSINF
initWithFileAssetResponseDictionary:
setExpectedProtectionType:
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
assetExpirationDate
setDialogDictionary:
fileAssets
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_cancellationHandler
_operationType
_requestContext
Tq,N,V_operationType
T@"ICStoreRequestContext",C,N,V_requestContext
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
setRequestingBundleIdentifier:
setRequestingBundleVersion:
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
query
setLegacyMediaQuery:
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setStartItemIdentifiers:
startTimes
endTimes
isPrivate
staticSourceWithValue:
startItemID
storeItemID
playParametersQueue
isLibraryContent
itemID
predicateWithValue:forProperty:
setWithObject:
initWithFilterPredicates:
setGroupingType:
collections
catalogID
initWithEntities:entityType:
startItemPlayParameters
localizedName
playbackArchive
soundCheckEnabled
_equivalencySourceAdamIDForIdentifierSet:
forceLibrarySupplementalContexts
_sectionedModelObjectsRepresentationForSectionedCollection:
firstSection
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
enumerateSectionIdentifiersUsingBlock:
_supplementalLibraryRequest
setSkipEncodingMediaLibraryUniqueID:
playEventWithModelObject:featureName:
indexForItem:
identifierRegistryWithExclusiveAccessReturningInteger:
indexPathForGlobalIndex:
itemAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
modelResponse
identifierSetAtIndex:
identifiersForItemAtIndexPath:
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
identifierRegistryWithExclusiveAccess:
isValidForPreviousCount:finalCount:reason:
applyChanges:identifierSetLookupBlock:
applyChanges:itemLookupBlock:
updateSection
_didUpdateToResponse:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
unlock
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
fallbackSectionRepresentation
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
assetStoreFronts
mqf_requiredItemPlaybackProperties
genericObjectType
relationshipKeyForGenericObjectType:
mqf_requiredSectionPlaybackProperties
isEqualToIdentity:inStore:
setModelRequest:
setNeedsReload
enumerateItemIdentifiersUsingBlock:
beginAutomaticResponseLoading
MPC_consumeSiriAssetInfo:userIdentity:completion:
weakObjectsHashTable
setFeeder:
playbackInfoForItem:
setPlaybackInfo:
beginBackgroundTaskWithName:expirationHandler:
allowedSectionIdentifiers
setCloudID:
setAllowedSectionIdentifiers:
allowedItemIdentifiers
setAllowedItemIdentifiers:
scopedContainers
setScopedContainers:
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
updatedPlaybackContext
_performRequestUpdate:
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_section
_currentItem
_playbackContext
_representativeMetadataPropertySet
_backgroundTaskIdentifier
_backgroundTasks
_fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
T@"MPModelResponse<MPCModelPlaybackResponse>",R,N,V_response
initWithRadioStationTracks:
analyticsSignpostsEnabled
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithRequest:personalizationResponse:
initWithStartHandler:
setAnalyticsSignpostsEnabled:
_radioStationTracks
_analyticsSignpostsEnabled
TB,N,V_analyticsSignpostsEnabled
representedObjectResults
setRadioStationTracks:
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
T@"MPSectionedCollection",R,C,D,N
updatePlaybackCoordinator:
originalPlaybackContext
supplementalPlaybackContext
replaceIdentifierRegistry:
containsRestorableContent
msv_userInfo
shouldRequestAdditionalItemsAtTail
_buildPlaceholder
_inLock_buildPlaceholder
isCompatibleWithReplacementContext:incompatibleReason:
_updateRadioStationPlaybackAuthorizationTokenIfNeeded
setTailPlaceholder:
shouldAddOriginalPlaybackContextAfterReplacement
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
dataSource
setState:
isFrozen
setFrozen:
preferredStartItemIdentifier
rtcSectionHierarchyToken
setRtcSectionHierarchyToken:
stateLock
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_rtcSectionHierarchyToken
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
T{os_unfair_lock_s=I},R,N,V_stateLock
Tq,R,N,V_supplementalPlaybackContextBehavior
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
T@"MPPlaybackContext",R,N,V_playbackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
T@,&,N,V_rtcSectionHierarchyToken
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_handleApplicationTerminationEvent:cursor:
setEventDate:
setEndReasonType:
setReasonHintType:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:containerBeginEvent:cursor:
setItemStartTime:
setTimedMetadata:
setItemDuration:
_clampTimeValuesForPAFEvent:withDuration:
isSBEnabled
_updatePAFEvent:withSharedListeningInfoFromCursor:
_finalizePAFEvents:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
itemStartTime
itemEndTime
_updatePAFEvent:withAudioChangeEvent:
_generateAggregateNoncatalogEndEventForCursor:
_itemIsPlayingFromQueueSectionIdentifier:itemIdentifier:cursor:
enumeratePreviousEventsWithType:usingBlock:
_getPlaybackDurationForHLSStreamFromStartEvent:toEndEvent:withLimitedCursor:
_generatePlaybackEndEventFromEvent:withQueueSectionIdentifier:itemIdentifier:cursor:
_itemIsPlaceholderFromQueueSectionIdentifier:itemIdentifier:cursor:
setItemType:
_updatePAFEvent:withAccountIdentifier:cursor:
setRepeatPlayMode:
setShufflePlayMode:
setAutoPlayMode:
timeZoneWithAbbreviation:
setEventTimeZone:
setPrivateListeningEnabled:
_updatePAFEvent:withEnqueuerAccountIdentifier:queueAddEvent:cursor:
setMediaType:
setContainerType:
setCloudPlaylistID:
setPlaylistVersionHash:
setContainerIDs:
setRadioAdamID:
radioAdamID
setReportingAdamID:
setItemIDs:
setSBEnabled:
setBuildVersion:
systemTimeZone
setEnqueuerProperties:
setBuildFeatures:
setBitDepth:
setBitRate:
audioChannelLayoutDescription
setChannelLayoutDescription:
setCodec:
setSampleRate:
isMultiChannel
setSpatialized:
setTargetedAudioQuality:
setProvidedAudioQuality:
setAudioQualityPreference:
setPlaybackFormatPreference:
setSharedActivityGroupSizeCurrent:
setSharedActivityGroupSizeMax:
initWithIdentity:
valueForBagKey:
eventType
endReasonType
reasonHintType
containerType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
radioPlayActivityEvents
playActivityController
_radioPlayActivityEvents
_playActivityController
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
T@"ICPlayActivityController",R,N,V_playActivityController
_cloudCollectionID
_storePlaylistGlobalID
_storePlaylistVersionHash
_init
initWithQueue:
setDebugLabel:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
shouldOverrideManuallyCuratedQueue
shouldImmediatelyStartPlayback
siriRecommendationID
homeKitUserIdentifier
initWithContextID:
supportedOnCurrentPlatform
setShouldOverrideManuallyCuratedQueue:
setShouldImmediatelyStartPlayback:
setSiriRecommendationID:
setHomeKitUserIdentifier:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_userIdentity
_homeKitUserIdentifier
T@"NSString",R,C,N,V_contextID
TB,N,V_shouldOverrideManuallyCuratedQueue
TB,N,V_shouldImmediatelyStartPlayback
T@"NSString",C,N,V_siriRecommendationID
T@"NSString",C,N,V_featureName
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"ICUserIdentity",C,N,V_userIdentity
T@"NSString",C,N,V_homeKitUserIdentifier
initWithContextID:query:
protobufferEncodableObjectFromLibrary:
multiverseIdentifier
queryQueueWithContextID:query:
setFirstItem:
_query
_firstItem
_shuffleType
T@"MPMediaQuery",R,N,V_query
T@"MPMediaItem",&,N,V_firstItem
Tq,N,V_shuffleType
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
_stationStringID
T@"NSString",R,N,V_stationStringID
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
T@"NSArray",R,N,V_storeItemIDs
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
initWithContextID:seedTrack:
geniusQueueWithContextID:seedTrack:
seedTrack
_seedTrack
T@"NSURL",R,N,V_seedTrack
initWithContextID:identifier:customData:
customDataQueueWithContextID:identifier:customData:
_customData
T@"NSString",R,N,V_identifier
T@"NSData",R,N,V_customData
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
_autoPlaySection
_metadataObject
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
T@"MPModelGenericObject",R,N,V_metadataObject
initWithRoute:bundleID:playerID:
initWithDeviceUID:bundleID:pid:playerID:
pathWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
bundleID
decodeInt32ForKey:
encodeInt32:forKey:
representedBundleID
lastObject
initWithEndpoint:
initWithExternalDevice:
setConnection:
localDeviceUID
sharedLocalEndpoint
connection
externalDevice
isConnected
isInvalidated
connectWithUserInfo:completion:
systemMusicPathWithRoute:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
isFullyResolved
isSystemMusicPath
representedBundleDisplayName
resolveWithCompletion:
origin
mediaRemotePlayerPath
isResolved
deviceUID
_pid
_resolved
_bundleID
_playerID
_mediaRemotePlayerPath
_route
_deviceUID
T^v,R,N,V_mediaRemotePlayerPath
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
T^v,R,N
T@"NSString",R,N,V_deviceUID
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
_updateViewControllerHierarchyForPlaybackEngine:
internalController
view
layer
borderWidth
clearColor
setBackgroundColor:
setBorderWidth:
setAlpha:
systemPinkColor
redColor
CGColor
setBorderColor:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
videoOutputDelegate
selector
setSelector:
setArgument:atIndex:
invokeWithTarget:
forwardInvocation:
viewDidLoad
viewDidLayoutSubviews
bounds
setFrame:
showsPlaybackControls
setShowsPlaybackControls:
presentationSize
videoGravity
setVideoGravity:
videoBounds
isReadyForDisplay
isPictureInPictureActive
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
stopPictureInPicture
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
parentViewController
valueForKey:
superview
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
addSubview:
didMoveToParentViewController:
keyPathsForValuesAffectingShowsPlaybackControls
keyPathsForValuesAffectingPresentationSize
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingIsReadyForDisplay
keyPathsForValuesAffectingIsPictureInPictureActive
keyPathsForValuesAffectingAllowsPictureInPicturePlayback
setVideoOutputDelegate:
T@"<MPCVideoOutputDelegate>",W,N
T@"UIViewController",R,N
T{CGSize=dd},R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
readyForDisplay
TB,R,N,GisReadyForDisplay
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
_videoDebugToken
_videoOutputDelegate
_internalController
T@"AVPlayerViewController",R,N,V_internalController
T@"<MPCVideoOutputDelegate>",W,N,V_videoOutputDelegate
videoOutput:willBeginFullScreenPresentationWithAnimationCoordinator:
videoOutput:willEndFullScreenPresentationWithAnimationCoordinator:
videoOutputShouldAutomaticallyDismissAtPictureInPictureStart:
videoOutputWillStartPictureInPicture:
videoOutputDidStartPictureInPicture:
videoOutputWillStopPictureInPicture:
videoOutputDidStopPictureInPicture:
videoOutput:failedToStartPictureInPictureWithError:
videoOutputShouldDismiss:
eventDeliveryDeferralAssertionForReason:
_snapshotAccount:eventType:atTime:
_devicePrivateListeningDidChange:
_applicationWillTerminate:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_snapshotDeviceWithEvent:nudge:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkTypeWithEvent:nudge:
subscribeToEventType:options:handler:
_addEventForAccountIdentifier:cursor:event:nudge:
removeEngineObserver:
_snapshotNetworkReachabilityAtTime:force:
_snapshotNetworkTypeAtTime:
flushEvents
_snapshotDeviceAtTime:
_snapshotAccount:eventType:event:nudge:
accountForHashedDSID:
lastKnownHouseholdID
isPrivateListeningEnabled
isDevicePrivateListeningEnabled
deviceModel
clientVersion
productPlatform
productVersion
buildVersion
isRemoteServerReachable
signalInfo
signalStrength
isCurrentNetworkLinkHighQuality
_reachability
requiredPropertiesForStaticMediaClips
T@"MPModelRequest",C,N,V_request
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
referenceWithMPModelObject:containerModelPlayEvent:
mpc_radioContentReference
containerID
setContainerID:
initWithStoreIdentifier:trackInfo:
referenceWithStoreIdentifier:trackInfo:
initWithICRadioContentReference:
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
isValidReportingEvent
_recordReportingEvents:
parentReportingController
childReportingControllers
addChildReportingController:
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
T@"MPCReportingController",W,N
T@"NSArray",R,C,N
future
setFuture:
_future
T@"MPCFuture",&,N,V_future
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
disconnect
result
isFinalized
isDisconnected
debugLabel
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_disconnected
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSMutableArray",R,N,V_successBlocks
T@"NSMutableArray",R,N,V_failureBlocks
T@"NSMutableArray",R,N,V_completionBlocks
T@"NSMapTable",R,N,V_invalidBlocks
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
disconnected
TB,R,N,GisDisconnected,V_disconnected
T@"NSString",C,N,V_debugLabel
initWithUnpersonalizedContentDescriptors:
setProperties:forItemAtIndexPath:
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
_sharedListeningProperties
T@"MPCPlaybackSharedListeningProperties",C,N,V_sharedListeningProperties
T@"ICLiveLinkIdentity",C,N,V_identity
musicEQSetting
avPreset
_setupNotifications
_setupRoutingController
_setupPlayer
setRepeatIndex:
setPrefersSeekOverSkip:
resetBookkeeping
defaultEQPresetType
setupEQPresetWithDefaultPreset:
audioAnalyzer
configurePlayerItem:
_setupQueueItemForEnhancedAudioHLSPlayback:metadataWaitTime:error:
soundCheckVolumeNormalization
loudnessInfo
currentAudioRoute
setFetchAvailableRoutesSynchronously:
_playbackUserDefaultsEQPresetDidChangeNotification:
_preferredResolutionDidChange:
setDefaultEQPresetType:
stackController
setupDefaultsDebouncer
tearDownDefaultsDebouncer
userDefaultsDebouncer
setUserDefaultsDebouncer:
processAudioQualityChanges
_shouldReloadEntireQueue
queuedItems
reloadCurrentItemWithReason:completion:
_updateQueueItemsAndPlayerForFormatChangeIfRequired
spatialIsOff
setSpatializationFormat:
_audioFormatsDictionaryWithHLSMetadataFromAsset:metadataWaitTime:error:
spatialIsAlwaysOn
mpc_setupWithAudioAssetType:forceSpatial:
audioFormatMatchingAudioAssetType:formats:route:
preferredAudioFormatForAudioFormats:route:
mpc_setupDescription
_HLSMetadataForAsset:error:
_audioFormatsDictionaryWithHLSMetadata:
msv_dictionaryWithContentsOfBase64EncodedJSONString:error:
initWithJSONDictionaryRepresentation:stableVariantID:
updateCurrentAudioRouteWithPickedRoutes:
pickedRoutes
initWithRoute:spatialIsAlwaysOn:
_modeObjectForPlayerItem:
nextItems
_updatePreferredAudioFormatIfRequiredForItem:route:
preferredPlayerAudioFormatForItem:route:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
routingController
currenItem
_currentAudioRoute
_routingController
_defaultEQPresetType
_stackController
_userDefaultsDebouncer
_currenItem
Tq,N,V_defaultEQPresetType
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_stackController
T@"NSObject<OS_dispatch_source>",&,N,V_userDefaultsDebouncer
T@"MPAVRoutingController",R,N,V_routingController
T@"MPCPlayerAudioRoute",R,N,V_currentAudioRoute
T@"MPCModelGenericAVItem",R,W,N,V_currenItem
_timeZoneName
_uuid
_privateListeningEnabled
pickedRoute
externalScreenType
hasProtectedContent
playbackMode
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
isExternalPlaybackAllowedForItem:
playerShouldUseAudiOnlyMode:item:externalScreenType:
exernalPlaybackRouteRestrictionForItem:route:isScreenMirroringActive:
usesAudioOnlyModeForExternalPlayback
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
setExternalDisplay:
canAccessRemoteAssets
configureExternalPlaybackForPlayer:queueItem:
_representativeItemCloudID
_artistName
_applicationWillTerminateNotification:
reportingEventType
playActivityEvent
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
storeFrontID
isOffline
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogStoreAccountID
_nonCatalogBuildVersion
_nonCatalogStoreFrontID
_nonCatalogSourceType
_shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
visualIdenticalityIdentifier
representationForVisualIdentity:withSize:image:
_cacheArtworkRepresentation:forKey:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
allKeys
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
_initWithType:participant:
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_participant
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"MPCSharedListeningEventParticipant",R,N,V_participant
Tq,R,N,V_type
T@"MPCSharedListeningSessionEvent",R,N,V_sessionEvent
T@"MPCSharedListeningPlaybackEvent",R,N,V_playbackEvent
T@"MPCSharedListeningQueueEvent",R,N,V_queueEvent
T@"MPCSharedListeningReactionEvent",R,N,V_reactionEvent
T@"MPCSharedListeningCustomEvent",R,N,V_customEvent
participantWithSharedListeningIdentifier:externalIdentifier:
sharedListeningIdentifier
_sharedListeningIdentifier
_externalIdentifier
T@"NSUUID",R,C,N,V_sharedListeningIdentifier
T@"NSString",R,C,N,V_externalIdentifier
initWithLocalizedMessage:
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
initWithKind:item:
initWithKind:
kind
_kind
Tq,R,N,V_kind
T@"MPModelGenericObject",R,N,V_item
queueEventWithAddedContent:
queueEventWithPlayedNowContent:
queueEventWithRemovedContent:
queueEventWithReorderedContent:
queueEventWithReplacedContent:
queueEventWithContentUpdatedMessage:
queueEventWithPlaybackModeChanged:
addedContent
removedContent
reorderedContent
replacedContent
playedNowContent
contentUpdatedMessage
_addedContent
_removedContent
_reorderedContent
_replacedContent
_playedNowContent
_contentUpdatedMessage
_playbackMode
T@"MPCSharedListeningQueueEventContentAdded",R,N,V_addedContent
T@"MPCSharedListeningQueueEventContentRemoved",R,N,V_removedContent
T@"MPCSharedListeningQueueEventContentReordered",R,N,V_reorderedContent
T@"MPCSharedListeningQueueEventContentReplaced",R,N,V_replacedContent
T@"MPCSharedListeningQueueEventContentPlayedNow",R,N,V_playedNowContent
T@"MPCSharedListeningQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"MPCSharedListeningQueueEventPlaybackModeChanged",R,N,V_playbackMode
initWithItems:container:
container
_container
T@"MPModelGenericObject",R,N,V_container
T@"NSArray",R,C,N,V_items
initWithItems:container:startItem:
_startItem
T@"MPModelGenericObject",R,C,N,V_startItem
initWithItem:
T@"MPModelGenericObject",R,C,N,V_item
initWithStartItem:
initWithLocalizedTitle:localizedMessage:
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
initWithReaction:reactionIdentifier:item:
reactionIdentifier
reaction
_reactionIdentifier
_reaction
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
createPlayerPath
initWithCommandResult:error:
outputDeviceUIDs
setDevicesControlled:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
singleGroup
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
originatingDeviceControl
_isAnyDeviceControllable:
outputGroups
_sendCommand:path:options:queue:completion:
initWithReturnStatuses:error:
isLocallyHosted
localOrigin
dictionaryWithDictionary:
currentSettings
isMultiplayerHost
_findEndpointFromEndpoints:byGroupLeader:
unsignedShortValue
_checkForAccount:destination:origin:queue:completion:
client
initWithOrigin:client:player:
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
sendCommand:withOptions:toEndpoint:toDestination:completion:
_connection
_discovery
handlerReturnStatuses
sendError
returnStatuses
commandResult
devicesControlled
_returnStatuses
_commandResult
_devicesControlled
T@"NSArray",R,N,V_returnStatuses
T@"MRCommandResult",R,N,V_commandResult
T@"NSNumber",C,N,V_devicesControlled
initWithBytesNoCopy:length:encoding:freeWhenDone:
serverObjectDatabaseImportResult
accumulatorImportResult
_accumulatorImportResult
_serverObjectDatabaseImportResult
T@"MPServerObjectDatabaseImportResult",R,C,N,V_serverObjectDatabaseImportResult
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N,V_accumulatorImportResult
deviceInfo
isCurrentDeviceValidHomeAccessory
isPrivateListeningEnabledForCurrentUserAndAccessory
setDevices:
initWithResponse:playingItemIndexPath:
initWithDataSource:
initWithTracklistItems:playingItemIndexPath:
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsCreateStation:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportedActions:
_determineChangeItemSupport
initWithResponse:changeItemSupport:
_setDisabled:
playingItem
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
disableModificationsCommand
upNextItemCount
explicitContentState
displayItems
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_explicitContentState
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
T@"MPSectionedCollection",R,C,N,V_displayItems
Tq,R,N,V_playingItemGlobalIndex
Tq,R,N,V_globalItemCount
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
Tq,R,N,V_upNextItemCount
Tq,R,N,V_explicitContentState
T@"MPCPlayerResponseItem",R,N
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
identifiersForSectionAtIndex:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
T@"NSIndexPath",&,N,V_playingItemIndexPath
valueWithBytes:objCType:
isAutoPlay
signedRangeValue
sectionRanges
sections
_sections
_sectionRanges
T@"NSArray",R,N,V_sections
T@"NSDictionary",R,N,V_sectionRanges
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
clearUpNextItems
replaceWithPlaybackIntent:
specializedIntents
devices
supportedSpecializedQueues
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
T@"NSArray",C,N,V_devices
T@"NSDictionary",&,N,V_supportedSpecializedQueues
TB,N,V_supportsSetQueueCommand
T@"NSSet",&,N,V_supportedQueueTypes
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
_createRadioStationCommandRequest
contentItemIdentifier
_insertWithOptions:
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportsCreateStation
_supportedInsertionPositions
TB,N,V_supportsCreateStation
T@"NSSet",&,N,V_supportedInsertionPositions
indexPath
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
TB,N,V_supportsChangeRepeat
TB,N,V_supportsAdvanceRepeat
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
TB,N,V_supportsChangeShuffle
TB,N,V_supportsAdvanceShuffle
supportedActions
_supportedActions
T@"NSArray",&,N,V_supportedActions
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
TQ,R,N,V_changeItemSupport
setDisabled:
isDisabled
disabled
TB,R,N,GisDisabled
_disabled
TB,N,GisDisabled,S_setDisabled:,V_disabled
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
_stateDictionaryIncludingIdentifierList:
identifierList
autoPlayIdentifierList
itemCount
maximumQueueHandOffSize
_isAutoPlayItem:inSection:
setAnnotationDelegate:
decodeDoubleForKey:
_identifierListForSection:
hasItem:inSection:
encodeDouble:forKey:
_transitionToAutoPlayState:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_identifierListIDPairForQueueIDPair:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
positionForItem:inSection:
enumeratorWithQueueController:mode:options:startPosition:endPosition:
itemResult
removeItem:fromSection:
incrementVersionForSegment:
reloadItemsKeepingCurrentItem:
_queueIDPairForIdentifierListIDPair:
isDeletedItem:inSection:
positionForTailOfSection:
entryType
trackingEntryResult
hasSection:
clearStartItem
identifierSetForItem:
_emitEventsForAddingPlaybackContext:sectionIdentifier:sharedListeningContainerInfo:
replaceDataSource:forSection:completion:
restorationError
setNowPlayingInfo:
_itemForContentItemID:allowReuse:
isValidContainerIdentifier:
containerInfoForItem:
removeItem:
addPlaybackContext:atPosition:afterItem:actions:completion:
didJumpToItem:
endSynchronizedPlayback
interposingHost
setInterposingHost:
sharedSessionIdentifier
queueExplicitContentState
T@"<MPCQueueControllerCommandInterposingHost>",W,N
_firstContentItemID
setNextContentItemIDReason:
moveItem:fromSection:afterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
_currentItemDidChangeFromItem:toItem:
performChangeImmediately:
setShuffleType:startingItem:inSection:
_allDataSourcesSupportInsertionPositionLast
setShouldExpectEmptyQueue:
initWithUUIDString:
resetWithIdentifier:
_loadItemsAfterItemsDeletedIfNeededDeletedItemsCount:
allSectionIdentifiers
queueCoordinator:itemToFollowItem:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_itemForPair:
setStartItem:
_loadAdditionalItemsIfNeededForDataSourceState:preferredItemCount:completion:
_accountForAutoPlay
engine:didEndSharedListeningSessionWithError:
disablePeriodicStateRestore
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
queueReferencesWithMaxCount:
previousContentItemID
_emitEventsForItemChangeFromItem:toCurrentItem:
engine:didReceiveSharedListeningEvent:
setExplicitContentState:
requestedPropertySetForEngine:
canAutoPlay
setPreferredItemCount:
musicRepeatType
autoPlayEnabledForUserIdentity:
_firstContentItemIDInSection:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:afterTailOfSection:completion:
feeder
_applyVolumeNormalizationForQueuedItems
deferredNextContentItemAnchorID
radioConfiguration
continueListeningLoadStationThreshold
continueListeningMaxUpcomingTracksSizeToMaintain
_findDataSourceToLoadItemsAfterItem:sectionIdentifier:withLoadingBlock:
_privateListeningSourceForContext:
lastMetadataChangeTime
didReachEnd
_autoplayMode
_findDataSourceToLoadItemsAfterItem:deletedItemsCount:sectionIdentifier:withLoadingBlock:
enumeratorWithOptions:
albumContainerWithMediaIdentifier:featureName:
playlistContainerWithMediaIdentifier:featureName:
groupWithFeatureName:
itemWithMediaIdentifier:
msv_indexPathForItem:inSection:
queueCoordinator
disableItemReuse
setSharedListeningItem:
setAutoPlayItem:
setInitialPlaybackStartTimeOverride:
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:allowReuse:
canSkipInDirection:fromQueueItem:
setCurrentItem:
updatePlayerPlaybackCoordinator:
T@"MPAVItem",&,N
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
queueCoordinator:willInsertItem:afterItem:
queueCoordinatorDidChangeItems:
currentItemDidChangeFromItem:toItem:
jumpToContentItemID:
T@"<MPAVQueueControllerDelegate>",W,N
T@"<MPAVQueueCoordinating>",&,N
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
emitEventsForParticipants:localUserIdentifier:
emitEventsForAddedSharedListeningContainerInfo:
emitSharedListeningEvent:
explicitContentStateDidChange:
requestedPropertySetForEvents
sessionDidEnd
sharedCurrentItemChangedToItem:inSection:byParticipant:
_loadAdditionalItemsIfNeededForDataSourceState:withCount:withCompletion:
nextContentItemID
setNextContentItemID:
setDeferredNextContentItemAnchorID:
setRestorationError:
coderVersions
setCoderVersions:
nextContentItemIDReason
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
missingIdentifierSetForDebugging
setMissingIdentifierSetForDebugging:
previousSectionIDsForDebugging
setPreviousSectionIDsForDebugging:
setInSharedListeningMode:
rtcSessionHierarchyToken
setRtcSessionHierarchyToken:
setIdentifierList:
setAutoPlayIdentifierList:
dataSources
setDataSources:
_playbackCoordinator
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_inSharedListeningMode
_preferredFirstContentItemID
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_restorationError
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_missingIdentifierSetForDebugging
_previousSectionIDsForDebugging
_rtcSessionHierarchyToken
_identifierList
_autoPlayIdentifierList
_dataSources
T@"NSString",C,N,V_nextContentItemID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
T@"NSError",C,N,V_restorationError
T@"NSMutableDictionary",&,N,V_coderVersions
Tq,N,V_nextContentItemIDReason
Tq,N,V_autoPlayState
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
TB,N,V_autoPlayIsTriggered
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
Td,R,N,V_lastSavedTime
T@"MPIdentifierSet",C,N,V_missingIdentifierSetForDebugging
T@"NSArray",C,N,V_previousSectionIDsForDebugging
inSharedListeningMode
TB,N,GisInSharedListeningMode,V_inSharedListeningMode
T@,&,N,V_rtcSessionHierarchyToken
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
T@"MPAVItem",&,N,V_currentItem
TB,R,N,V_hasUserMutations
T@"<MPAVQueueControllerDelegate>",W,N,V_delegate
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
_buildEnumerator
initWithSectionIdentifier:
mode
enumerator
startPosition
endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
T@"MPCQueueController",R,W,N,V_queueController
Tq,R,N,V_mode
T@"NSEnumerator",R,N,V_enumerator
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
branchDepth
isRemoved
removed
TB,R,N,GisRemoved
preferredItemCount
_preferredItemCount
Tq,N,V_preferredItemCount
hasPrefix:
substringFromIndex:
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
setPlaybackCoordinator:
_updatePlayerLiveLinkConnection
liveLinkForSessionID:
linkWithSessionIdentifier:identity:
updateWithIdentity:
isStarted
_transitionToState:
_emitNewContainerIfNeededForResponse:
_dequeuePendingActions
reconnectWithReason:options:
_responseQueue
allSections
_ICSharedListeningForMPSILItemIdentifier:
enumerateItemsUsingBlock:
msv_section
removeItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
itemForIdentifier:
_MPSILItemIdentifierForICSharedListeningItemIdentifier:
_enqueuePendingActionWithLabel:itemIdentifier:block:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
playNextPositionWithAfterItemIdentifierHint:
specifiedPositionAfterItemIdentifier:
playLastPositionWithAfterItemIdentifierHint:
insertTracklist:atPosition:completionEx:
broadcastDirectCurrentItemChangedToItemIdentifier:
_handleUpdatedSharedListeningQueue:
setDeferredDirectCurrentItemIdentifier:
setDeferredDirectCurrentItemParticipant:
_handleDirectCurrentItemChangedToItemIdentifier:participant:
_requiredItemIdentifierForEvent:
_mpcSharedListeningEventForICLiveLinkEvent:
expirationDate
laterDate:
block
removeObjectsInRange:
vendorID
containerForIdentifier:
setItemIdentifier:
setBlock:
_purgePendingActionsWithLabel:
_sectionedCollectionForQueue:
setVendorID:
itemForIdentifierSet:
contentAdded
containerIdentifier
contentPlayedNow
startItemIdentifier
contentRemoved
contentReordered
contentReplaced
playbackModeChanged
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
mediaIdentifier
playParams
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
_playbackItemsRequestForQueue:
getExpectedCurrentItemWithCompletion:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
completionStartItemIdentifier
setCompletionStartItemIdentifier:
completionError
setCompletionError:
initialQueueCompletion
requestedPropertySet
setRequestedPropertySet:
pendingActions
setPendingActions:
knownContainerIDs
setKnownContainerIDs:
lastKnownExplicitContentState
setLastKnownExplicitContentState:
shouldRefreshBeforeActive
setShouldRefreshBeforeActive:
deferredDirectCurrentItemIdentifier
deferredDirectCurrentItemParticipant
hasPendingPlayNowInFlight
setHasPendingPlayNowInFlight:
deferredPlayNowCurrentItemIdentifier
setDeferredPlayNowCurrentItemIdentifier:
playbackCoordinator
_shouldRefreshBeforeActive
_hasPendingPlayNowInFlight
_interposingHost
_completionStartItemIdentifier
_completionError
_initialQueueCompletion
_requestedPropertySet
_pendingActions
_knownContainerIDs
_lastKnownExplicitContentState
_deferredDirectCurrentItemIdentifier
_deferredDirectCurrentItemParticipant
_deferredPlayNowCurrentItemIdentifier
T@"NSString",C,N,V_completionStartItemIdentifier
T@"NSError",&,N,V_completionError
T@?,R,C,N,V_initialQueueCompletion
T@"MPCPlaybackRequestEnvironment",&,N,V_playbackRequestEnvironment
T@"MPPropertySet",C,N,V_requestedPropertySet
T@"NSMutableArray",&,N,V_pendingActions
T@"NSMutableSet",&,N,V_knownContainerIDs
Tq,N,V_lastKnownExplicitContentState
TB,N,V_shouldRefreshBeforeActive
T@"NSString",C,N,V_deferredDirectCurrentItemIdentifier
T@"ICLiveLinkIdentity",&,N,V_deferredDirectCurrentItemParticipant
TB,N,V_hasPendingPlayNowInFlight
T@"NSString",C,N,V_deferredPlayNowCurrentItemIdentifier
T@"AVPlayerPlaybackCoordinator",W,N,V_playbackCoordinator
T@"<MPCQueueControllerCommandInterposingHost>",W,N,V_interposingHost
_modelObject
T@"NSString",C,N,V_identifier
T@"MPModelGenericObject",&,N,V_modelObject
_itemIdentifier
_expirationDate
_block
T@"NSString",C,N,V_itemIdentifier
T@"NSDate",C,N,V_expirationDate
T@?,C,N,V_block
setUserDefaults:
userDefaults
prerollEnabled
shouldPreroll
_userDefaults
T@"MPPlaybackUserDefaults",&,N,V_userDefaults
setPlayToSetRateSignpost:
setWaitForLikelyToKeepUpSignpost:
setWaitForReadyToPlaySignpost:
waitForLikelyToKeepUpSignpost
waitForReadyToPlaySignpost
playToSetRateSignpost
setRateToEffectiveRateSignpost
setSetRateToEffectiveRateSignpost:
_waitForLikelyToKeepUpSignpost
_waitForReadyToPlaySignpost
_playToSetRateSignpost
_setRateToEffectiveRateSignpost
T@"NSString",&,N,V_identifier
T@"MPCWaitForLikelyToKeepUp",&,N,V_waitForLikelyToKeepUpSignpost
T@"MPCWaitForReadyToPlaySignpost",&,N,V_waitForReadyToPlaySignpost
T@"MPCPlayToSetRateSignpost",&,N,V_playToSetRateSignpost
T@"MPCSetRateToEffectiveRateSignpost",&,N,V_setRateToEffectiveRateSignpost
setManagesAirPlayBehaviors:
_setQueueController:deferItemLoading:
setFirstPlaybackItemIdentifier:
queuePlayer
isReloadingForPlaybackContextChange
_configureAudioSession
shouldDeferItemLoading
setShouldDeferItemLoading:
togglePlaybackWithOptions:
changePlaybackIndexBy:deltaType:
avPlayer
_setEQPreset:
defaultItemEQPresetType
handlePlaybackErrorWithUserInfo:
firstPlaybackItemIdentifier
playbackHasStartedForItem:
_connectAVPlayerDeferringItemLoading:
_contentsChanged
_itemWillChange:
_enforcingPolicy:
_itemDidSignificantlyChangeElapsedTime:rate:
_itemDidChange:
_setState:
_itemPlaybackDidEndNotification:
MPAVItem
_streamLikelyToKeepUp:
_streamBufferFull:
prefersApplicationAudioSession
_networkPolicyItemCellularRestrictedNotification:
_connectAVPlayer
_expectedAssetTypesForPlaybackMode:
_queueDidEndWithReason:lastItem:
_updateStateForPlaybackPrevention
playerLayer
_hasPlayedSuccessfully
_playerLayer
_firstPlaybackItemIdentifier
T@"NSString",C,N,V_firstPlaybackItemIdentifier
T@"AVPlayerLayer",R,N,V_playerLayer
TB,R,N,V_hasPlayedSuccessfully
_initWithValue:
localDeviceSource
_initWithUserIdentity:
sourceWithUserIdentity:
_overrideValue
_currentValue
T@"NSNumber",R,C,N,V_currentValue
T@"NSNumber",C,N,V_overrideValue
_value
_handleUserIdentityStoreDidChangeNotification:
_handleHomeUserPrivateListeningDidChangeNotification:
_loadCurrentValueFromIdentityProperties
getPropertiesForUserIdentity:error:
homeUserIdentifiers
userMonitorWithHomeIdentifiers:
isPrivateListeningEnabledForCurrentAccessory
privateListeningEnabled
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
_cachedValue
modifySystemMusicContextForEndpointDestination:completion:
_modifyOutputDevices:onEndpoint:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
outputGroupID
_updateDiscoverableDeviceList:deviceInfo:completion:
tightSyncUID
shouldSearchForLogicalDevices
valueForKeyPath:
clusterType
_discoverLocalEndpointFromStereoPairUsingDeviceInfo:completion:
outputDevicesMatchingPredicate:
designatedGroupLeader
groupContainsGroupLeader
needsCommandRedirection
isAirPlayActive
outputDevices
isGroupLeader
clusterComposition
setOutputDevices:initiator:withReplyQueue:completion:
modifySystemMusicContextForDestination:completion:
modifySystemMusicContextForEndpointDestination:discoveryHandler:completion:
modificationInProgress
setModificationInProgress:
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
_buildLanguageOptionGroups:currentLanguageOptions:
_determineSeekSupport
initWithResponse:seekSupport:
seekSupport
setPreferredForwardJumpIntervals:
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
floatValue
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithLanguageOptionGroups:currentLanguageOptions:response:
initWithResponse:mediaRemoteCommand:
setValue:
switchToAlternativeFormat:
preferredTiers
T@"MPCPlayerAudioFormat",R,N
T@"MPCPlayerAudioRoute",R,N
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
musicAudio
revision
languageOptionGroups
enqueueingParticipant
_seekSupport
_placeholder
_autoPlay
_preferredTiers
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_enqueueingParticipant
_duration
T@"NSIndexPath",R,N,V_indexPath
T@"MPCPlayerResponseParticipant",R,N,V_enqueueingParticipant
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,C,N,V_localizedDurationString
T@"NSString",R,C,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"<MPCPlayerResponseItemMusicAudio>",R,N
T@"MPCPlayerAudioFormat",R,N,V_preferredFormat
T@"MPCPlayerAudioFormat",R,N,V_activeFormat
TQ,R,N,V_preferredTiers
Tq,R,N,V_activeFormatJustification
T@"NSArray",R,N,V_alternateFormats
T@"MPCPlayerAudioRoute",R,N,V_audioRoute
T@"NSString",C,N,V_contentItemID
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
TQ,R,N,V_seekSupport
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
changeValue:
localizedShortTitle
presentationStyle
_localizedShortTitle
_presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
_minimumValue
_maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
_playerItemDidChangeWhenReloadingPlaybackContextNotification:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
timedMetadata
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
mpcReporting_isValidReportingItem
initWithAVItem:
_itemStartTimeForItem:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTime:forItemContentItemID:
_reportPlaybackEndedForTimeoutWithItem:
isEqualToData:
_sendPlaybackEndNotification:endTime:
userChangedItemsDuringPlayback
lastDirection
_sendPlaybackStartNotification
setPlayActivityEvent:
setShouldReportToStore:
notificationWithName:object:
postNotification:
notificationWithName:object:userInfo:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_itemDidChangeWhenReloadingPlaybackContext
_isScrubbing
_currentItemIsHLS
_itemForCurrentTimeChange
_recordEventOperationQueue
_itemContentItemIDForLastPlayEventEndTime
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_reportingController
_storeFrontID
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
T@"NSString",C,N,V_storeFrontID
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
Td,N,V_eventDuration
TQ,N,V_overrideItemType
T@"NSString",C,N,V_lyricsID
T@"MPModelGenericObject",&,N,V_itemGenericObject
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
T@"NSData",C,N,V_recommendationData
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
_fileSize
_albumArtistName
_albumDiscCount
_albumName
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
_createAudioTap
_itemInsertedNotification:
setStorage:
_destroyAudioTap
_shouldAttachAudioTap
setAudioTapProcessor:
isAirPlayingToDevice
observers
storage
maxNumberOfFrames
analyzeFrequencies:numberFrames:observers:
initWithMaximumNumberOfFrames:sampleRate:
_analyzeSamples:numberFrames:
_prepareTap:maxFrames:processingFormat:
setObservers:
selfRef
setSelfRef:
_audioProcessingTap
_storage
_observers
_selfRef
T@"_MPCAudioSpectrumAnalyzerStorage",&,N,V_storage
T@"NSMutableArray",&,N,V_observers
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
addAnalysisBand:
_resizeBandStorage
setPowerLevel:
onUpdate
defaultObserver
numberOfBands
averagePowerOfBandAtIndex:band:
beginReport
finishReport
powerLevel
setOnUpdate:
_bands
_bandsStorageSize
_powerLevel
_numberOfBands
_onUpdate
Tf,N,V_powerLevel
Tq,R,N,V_numberOfBands
T@?,C,N,V_onUpdate
_prepareBuffers
_freeBuffers
_destroyFFTSetup
setMaxNumberOfFrames:
_intermediateBuffer
_window
_windowSize
_fftBuffer
_fftSetup
_processing
_sampleRate
_maxNumberOfFrames
Tf,N,V_sampleRate
TQ,N,V_maxNumberOfFrames
legacyMediaQuery
clearLibraryIdentifiers
initWithRandomSource:lowestValue:highestValue:
msv_item
nextIntWithUpperBound:
appendItems:
preferredQueue
_containerType
initWithPlaybackUsersDefaults:environmentMonitor:probabilityOfProgressiveDownloadAssets:
initWithProbabilityForOutcomeA:
outcomeGenerator
updateProbabilityForOutcomeA:
prefersSpatialOverStereo:
prefersHighResolutionLossless
prefersLossless
prefersHighQualityStereo
prefersLowQualityStereo
preferredAudioAssetTypeForSongWithTrait:
sharedCloudController
isEnhancedAudioAvailable
nextOutcome
prefersSpatialOverLossless
spatialIsAutomatic
environmentDescription
descriptionForTraits:
preferencesDescription
descriptionForTiers:
tierMatchingAudioAssetType:
defaults
spatialAudioPreference
isSpatializationEnabled
multiChannelSupport
canStreamSpatial
canRenderSpatial
networkBandwidthIsHigh
environmentMonitor
T@"MPCAudioAssetTypeSelector",R,N
updateProbabilityOfProgressiveDownloadAssets:
userPrefersMultichannelAudioOverStereo:
setDefaults:
setEnvironmentMonitor:
_defaults
_environmentMonitor
_outcomeGenerator
T@"MPPlaybackUserDefaults",&,N,V_defaults
T@"ICEnvironmentMonitor",&,N,V_environmentMonitor
T@"MSVABTestGenerator",R,N,V_outcomeGenerator
allowsMusicVideos
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
authorizationError
_explicitContentErrorWithUnderlyingError:message:
authorizationReason
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
getAgeVerificationStateWithCompletion:
_setupWithAgeVerificationState:
_setupWithAgeGateForItem:
explicitRating
maximumTVShowRatingForAgeGate
maximumMovieRatingForAgeGate
isExplicitContentAllowed
requestAuthorizationForExplicitItem:reason:completion:
T@"MPCExplicitContentAuthorizationManager",R,N
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_authorizationError
_lastKnownAgeVerificationState
T@"NSError",C,N,V_authorizationError
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
mpc_updateAVAudioSpatializationFormatsForAudioAssetType:
mpc_updateAVVariantPreferenceForAudioAssetType:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForAudioAssetType:
mpc_updatePreferredForwardBufferDurationForAudioAssetType:
mpc_updateAVAudioSpatializationFormatsForPlayerAudioFormat:
mpc_updateAVVariantPreferenceForPlayerAudioFormat:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForPlayerAudioFormat:
mpc_updatePrefersOfflinePlayableVariantForPlayerAudioFormat:isDownloadedAsset:
mpc_updatePreferredForwardBufferDurationForPlayerAudioFormat:
setVariantPreferences:
setAutoSwitchAtmosStreamVariants:
setPreferredMaximumAudioSampleRate:
forwardBufferDuration
setPreferredForwardBufferDuration:
setPrefersOfflinePlayableVariants:
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
allowedAudioSpatializationFormats
variantPreferences
initWithContentItemID:repeatIndex:
identifierForMFQueuePlayerItem:
_repeatIndex
Tq,N,V_repeatIndex
initialPlaybackStartTimeOverride
setLastChangeDirection:
_clearAssetNow
isFullyDownloaded
setIsVideoContent:
isMovieOrTVShow
playbackStartTimeOverride
setPlaybackStartTimeOverride:
setItemID:
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
Td,N
T@"<MPCItemIdentifier>",R,C,N
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
mediaRemoteReplyQueue
resultStatuses
strongToWeakObjectsMapTable
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_onQueue_stateDictionary
initWithController:
initWithKeyOptions:valueOptions:capacity:
_legacyCommands
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:requestRange:
endTransaction
pokeKey:
_mergeContentItem:
initWithData:
_initWithMediaRemoteContentItem:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
_artworkCatalogBlockForContentItem:
showDebugUI
placeholderCatalogWithSymbolName:
setOverlayDelegate:
setOverlayToken:
overlayToken
_lastArtworkCatalog
overlayStorage
setOverlayStorage:
viewController
setTag:
viewWithTag:
setUserInteractionEnabled:
imageRepresentation
image
setImage:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_createExportableArtworkPropertiesForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaLibraryArtworkType:
subarrayWithRange:
maximumCapacity
setMaximumCapacity:
performTransaction:
replaceObjectsInRange:withObjectsFromArray:
allCommandInfos
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
setElapsedTime:
performSuppressingChangeNotifications:
overlayVisualIdenticalityForCatalog:
overlayScaledFittingSizeForCatalog:scaledFittingSize:
artworkCatalog:willConfigureView:
artworkCatalog:didConfigureView:withRepresentation:
artworkCatalog:didClearFromView:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
contentItemArtworkCacheStateForArtworkIdentifier:size:
queueIdentifierCacheState
_onQueue_setOptimisticPlayingItemIdentifier:
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@,&,N,V_invalidationToken
Tq,R,N,V_playbackStateCacheState
Tq,R,N,V_supportedCommandsCacheState
Tq,R,N,V_playingIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
radioStationURL
_radioStationURL
T@"NSURL",C,N,V_radioStationURL
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
playableAssetIdentifiers
isLocalEndpoint
connectToExternalDeviceWithUserInfo:completion:
hashTableWithOptions:
statementWithString:error:
executeStatement:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
originID
setBool:forKey:
initWithURL:error:
initWithMemory
initWithDatabaseCreationBlock:
databaseURL
initWithConsumer:eventStream:
consumer
initWithEventStream:reason:
timeIntervalSince1970
msv_UUIDData
bindDataValue:toParameterNamed:
bindStringValue:toParameterNamed:
bindUInt64Value:toParameterNamed:
bindJSONValue:toParameterNamed:error:
eventStream:didFailToEmitEvent:error:
lastEventSuccessTimestamp
mutatingEventHandlers
immediateEventHandlers
initWithEventStream:startEvent:endEvent:
_onQueue_flush
setLastEventSuccessTimestamp:
setMaximumEventDeliveryTimestamp:
lastEventsWithCount:
bindInt64Value:toParameterNamed:
resultsForStatement:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
reason
initWithParameters:
addConsumer:
removeConsumer:
flushEventsWithConsumer:fromTimestamp:untilTimestamp:
lastEvent
resetConsumerEventDeliveryToTimestamp:
_invalidated
_engineID
_subscriptions
_deferralAssertions
_database
_queue
_scheduledFlushes
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
T@"MPCPlaybackEngineEvent",R,N
T@"NSString",R,N,V_engineID
stringValueAtColumnIndex:
uint64ValueAtColumnIndex:
flushEventsWithCompletion:
cancelSubscription
maximumEventDeliveryTimestamp
eventHandlers
_consumer
_streamID
_lastEventSuccessTimestamp
_maximumEventDeliveryTimestamp
_mutatingEventHandlers
_immediateEventHandlers
_eventHandlers
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
T@"NSString",R,C,N,V_streamID
TQ,N,V_lastEventSuccessTimestamp
TQ,N,V_maximumEventDeliveryTimestamp
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_immediateEventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
earlierDate:
int64ValueAtColumnIndex:
nextObjectWithError:
_statementForColumnsExpression:eventTypes:payload:limit:
bindNullValueToParameterNamed:
startEvent
endEvent
_startNS
_endNS
_startEvent
_endEvent
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
T@"MPCPlaybackEngineEvent",R,N,V_startEvent
T@"MPCPlaybackEngineEvent",R,N,V_endEvent
dataValueAtColumnIndex:
msv_UUIDWithData:
jsonValueAtColumnIndex:error:
invalidated
_reason
T@"NSString",R,C,N,V_reason
TB,R,N,V_invalidated
_executeWithUserIdentity:useMediaAPILookup:
_validateUserIdentityForRequestWithCompletion:
currentThread
_runPersonalizationWithSectionCollection:localEquivalencyMapping:expirationDate:userIdentity:error:isFinalResponse:isInvalidForPersonalization:networkingTime:
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:
_runMediaAPIRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_runStorePlatformRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
totalRequestItemCount
collectionItemRequests
requestItemCount
progress
addChild:withPendingUnitCount:
fractionCompleted
completedUnitCount
_importMediaAPICollectionItemMetadataResponse:withError:usingAccumulator:userIdentity:trustID:previousResponse:shouldBatchResultsWithPlaceholderObjects:
enqueueRequest:withBatchProgressHandler:
collectionRequests
tokenRenewalRequests
_handleItemMetadataBactchRequestCompletedWithAccumulator:previousResponse:userIdentity:error:isFinalResponse:
playbackAuthorizationTokenHalfLifeExpiration
setPlaybackAuthorizationTokenHalfLifeDuration:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
setIdentityStore:
setAllowsExpiredBags:
initWithUserInteractionLevel:
setAuthenticationProvider:
_runSubscriptionStatusWithRequestContext:completion:
userIdentitiesForManageableAccountsWithError:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
_activeProgress
_previousModelResponse
_hasReceivedFinalResponse
_hasCalledResponseHandler
_errors
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
trackType
setLiveRadioStream:
radioStreamAssets
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
tracklistActionType
_cacheTracksForStep:
initWithTracks:tracklistAction:networkingTime:
performWithCompletionHandler:
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_radioQueueFeederPointerForLogging
tracklistAction
_tracklistAction
_tracks
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
Td,R,N,V_networkingTime
stationMetadata
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
isRequestingImmediatePlayback
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
setSupportsAccountRectification:
mediaQuery
trackIdentifiers
firstTrackIdentifier
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
setDelegationProperties:
kindWithModelClass:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
T@"MPRemoteCommand",R,N
T@"MPCDebugCommand",R,N
initWithMediaRemoteCommandType:
notifyPropagatablePropertyChanged
_mediaRemoteCommandInfoOptions
supportedSubsystems
subsystemRevisions
_supportedSubsystems
_subsystemRevisions
T@"NSArray",C,N,V_supportedSubsystems
T@"NSDictionary",C,N,V_subsystemRevisions
_applicationWillEnterForegroundNotification:
_prewarmSAPSigningForAccount:
applicationState
_optimisticallyFetchLeaseForAccount:
_prewarmMiniSINFEndpointForAccount:
scheduleMiniSINFFetch
usesLease
getHasPreparedLeaseForAccount:completion:
_fetchMiniSINFsWithCompletion:
maximumBatchSize
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
endpointURL
initWithURL:
setHTTPMethod:
setHTTPBody:
addValue:forHTTPHeaderField:
defaultSession
parsedBodyDictionary
initWithPayload:requestPayload:hashedPersonID:
importAssetsFromRequest:error:
enqueueDataRequest:withCompletionHandler:
int64ValueForBagKey:
initWithEndpointURL:maximumBatchSize:requestContext:
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
_endpointURL
_maximumBatchSize
T@"NSURL",R,C,N,V_endpointURL
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
initWithAppBundleID:
systemMediaApplicationDestination
initWithAppBundleID:playerID:origin:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
decodeHashedRouteUIDs:completion:
_copyWithZone:usingConcreteClass:
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
resolveWithHashedRouteIdentifiers:completion:
resolveWithRouteIdentifiers:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
_getCompanionOrigin:
hashedOutputDeviceUIDs
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_originatingOutputDeviceUID
_singleGroup
_originatingDeviceControl
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
T@"NSArray",R,N,V_outputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
T@"NSArray",R,N,V_outputGroups
T@"NSString",R,N,V_outputGroupID
T@"NSString",R,N,V_originatingOutputDeviceUID
TB,R,N,V_singleGroup
TB,R,N,V_originatingDeviceControl
setAppBundleID:
setPlayerID:
setOrigin:
setOutputGroups:
setOutputGroupID:
setOriginatingOutputDeviceUID:
setSingleGroup:
setOriginatingDeviceControl:
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
initWithPlayerID:
T@"MPNowPlayingInfoCenter",R,N
T@"MPRemoteCommandCenter",R,N
T@"AVAudioSession",R,N
_nowPlayingInfoCenter
_remoteCommandCenter
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
T@"AVAudioSession",R,N,V_audioSession
requiresMainThread
isMainThread
callStackSymbols
_initializePlaybackStack
_screenBrightnessDidChangeNotification:
preheatPlayback
setStateRestorationSessionIdentifier:
performAfterLoadingAccounts:
_detectCrashLoopForSessionIdentifier:block:
objects
reportUserSeekFromTime:toTime:
disableAudioAnalysis
ubiquitousIdentifierWithStoreAdamID:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
isStateRestorationSupported
_updateUISnapshotIfNeeded
_shouldIgnorePlaybackSessionError:
saveSessionWithCompletion:
brightness
needsUISnapshot
dictionaryForKey:
initWithPlaybackEngineParameters:engineID:
proxyForObjects:protocol:
progressiveDownloadAssetRatio
_updateSnapshotForBackgroundApplication:
setNeedsUISnapshot:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
restoreStateWithCompletion:
setQueueHandoffSupported:
setAudioSessionCategory:
setAudioSessionOptions:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
isPictureInPictureSupported
setPictureInPictureSupported:
isVideoSupported
setVideoSupported:
setFallbackPlaybackIntent:
musicPlayerControllerServer
fairPlayPerformanceController
isAudioAnalyzerEnabled
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_initializationParameters
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
TB,N,V_needsUISnapshot
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"<MPCVideoOutput>",R,N,V_videoOutput
T@"<MPCPlaybackEngineInitializationParameters>",R,N,V_initializationParameters
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"NSString",R,C,N,V_engineID
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
T@"MPCPlaybackEngine",W,N
_originID
T@"NSString",R,C,N,V_originID
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:routeResolvedPlayerPath:
T@"MPCPlayerPathCache",R,N
playerPathResolutions
playerPathObservers
endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
_isHLSVersion:greatherThanOrEqualTo:
_isSpatialFormat:
_computedTierFromHLSDataWithChannelCount:
_computedChannelLayoutTagFromHLSData:channelCount:
_descriptionForChannelLayoutTag:
_isMultichannelFormat:
groupID
isSpatialized
setTier:
setBitrate:
setMultiChannel:
setChannelLayout:
setAudioChannelLayoutDescription:
setGroupID:
setStableVariantID:
debugTierDescription
debugBitRateDescription
debugBitDepthDescription
debugSampleRateDescription
debugCodecDescription
debugChannelCountDescription
debugChannelLayoutDescription
debugOriginChannelLayoutDescription
debugOriginChannelCountDescription
_isDerivedFromSpatialFormat:
_isBinauralFormat:
initWithDictionaryRepresentation:
originChannelLayout
setOriginChannelLayout:
_spatialized
_multiChannel
_codec
_channelLayout
_originChannelLayout
_tier
_bitrate
_bitDepth
_audioChannelLayoutDescription
_groupID
_stableVariantID
TI,N,V_originChannelLayout
T@"MPNowPlayingInfoAudioFormat",R,N
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_stableVariantID
Tq,R,N,V_tier
Tq,R,N,V_bitrate
Tq,R,N,V_sampleRate
Tq,R,N,V_bitDepth
TI,R,N,V_codec
spatialized
TB,R,N,GisSpatialized,V_spatialized
multiChannel
TB,R,N,GisMultiChannel,V_multiChannel
TI,R,N,V_channelLayout
T@"NSString",R,N,V_audioChannelLayoutDescription
supportsSpatialization
isAirPlayRoute
isB515Route
isB298Route
isW1Route
isH1Route
isB507Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isDeviceSpeakerRoute
routeName
isCarplayRoute
setSupportsSpatialization:
setSpatializationEnabled:
_supportsSpatialization
_isSpatializationEnabled
_canStreamSpatial
_canRenderSpatial
_name
_multiChannelSupport
T@"MPNowPlayingInfoAudioRoute",R,N
TB,R,N,V_canStreamSpatial
TB,R,N,V_canRenderSpatial
Tq,R,N,V_multiChannelSupport
T@"NSString",R,C,N,V_name
TB,R,N,V_supportsSpatialization
TB,R,N,V_isSpatializationEnabled
leaseID
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
T@"MPCSuzeLeaseSessionController",R,N
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
Tq,N,V_clientCount
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
TB,N,V_shouldStopWhenFinished
initWithBase64EncodedString:options:
base64EncodedStringWithOptions:
setNamePrefix:
setGivenName:
setMiddleName:
setFamilyName:
setNameSuffix:
setNickname:
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
setSyncID:
setRecommendationID:
setSocialProfileID:
setInformalMediaClipID:
setInformalStaticAssetID:
setAssetAdamID:
containedPersistentID
syncID
recommendationID
formerAdamIDs
socialProfileID
informalMediaClipID
informalStaticAssetID
setServerID:
setExternalIdentifier:
setNameComponents:
setImageURL:
_initWithBlock:
nameComponents
imageURL
initWithResponseDictionary:
initWithName:uuid:root:debug:
setDisplayedCharacterCount:
setLanguage:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
Td,N,V_visibleDuration
Tq,N,V_displayType
Tq,N,V_displayedCharacterCount
T@"NSString",C,N,V_language
Tq,N,V_sourceType
_icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
initWithUserIdentity:
setShouldPreventLeaseAcquisition:
receivedUserInteractionEvent
_itemShouldPreventPlaybackDidChangeNotification:
engine:didPauseForLeaseEndWithError:
stateReasonDialog
stateReasonDialogMetricsDictionary
engineDidPauseForLeaseEnd:
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
_leaseEndIgnoreReasons
_prepareCompletions
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
T@"NSMutableDictionary",&,N,V_prepareCompletions
_hasSubscriptionPlaybackCapability
_enqueuerProperties
TB,N,V_hasSubscriptionPlaybackCapability
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
setNeedsInfoDictionaryUpdate
packageURL
deleteWithError:
saveWithError:
writeWithError:
createExternalRepresentation
initWithExternalRepresentation:
packageTypeIdentifier
initWithURL:identifier:
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
T@"MPNowPlayingContentItem",C,N,V_contentItem
T@"UIImage",C,N,V_artworkImage
T@"NSDate",R,C,N,V_lastModifiedDate
bytes
hashInStore:
initWithDelegatedUserIdentity:
initWithUserIdentity:subscriptionStatus:
setHashedDSID:
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
setActiveAccount:
setBag:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
T@"NSString",C,N,V_hashedDSID
TB,N,V_hasCloudLibraryEnabled
T@"NSString",C,N,V_storeFrontIdentifier
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
delegated
TB,R,N,GisDelegated,V_delegated
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_homeUserSettingsChangeNotification:
_updateAccounts
_updateAccountsWithAttemptCount:
_shouldPurgeGlideSubscriptionDataForAccount:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
purgeGlideSubscriptionDataForHashedAccoundID:
accounts
_enumerateIdentitiesWithCompletion:
isActiveLocker
setShouldReturnLastKnownStatusOnly:
shouldReturnLastKnownStatusOnly
_needsRefreshDueToTimeout
_initialAccountGroup
T@"MPCPlaybackAccount",R,N
playOnPlayerPath:
T@"MPCPlayerSessionResponse",R,W,N,V_response
T@"NSString",R,N,V_contentItemIdentifier
setAssetStoreFronts:
skipEncodingMediaLibraryUniqueID
updateRequestPlaybackEnvironment
encodedMediaLibraryUniqueID
_skipEncodingMediaLibraryUniqueID
_encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
T@"NSDictionary",C,N,V_assetStoreFronts
_shouldReportToStore
_playActivityEvent
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
TB,N,V_shouldReportToStore
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
indexSetWithIndexesInRange:
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
_overridePlayingItem
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
albumName
representativeCloudIdentifier
storeIdentifier
artistName
albumArtistName
composerName
copyright
genreName
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
sceneCollectionForScriptData:
_instructionsForSceneDictionaries:
T@"ICUserIdentity",R,N
registerPlayer:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_rtcReportingController
_playbackHistoryController
_lyricsReportingController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
T@"MPRTCReportingController",&,N,V_rtcReportingController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
allowEmptySelection
languageOptions
isEqualToLanguageOption:
indexOfObjectPassingTest:
languageOptionType
displayName
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
copyExternalRepresentation
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
_currentIndex
_allowEmptySelection
T@"NSArray",R,N,V_options
T@"MPNowPlayingInfoLanguageOption",R,N
TB,R,N,V_allowEmptySelection
_accountInfos
_containers
_startingItemIndexPath
_MPAVItemForMFPlayerItem:allowReuse:
mapping
itemToFollowItem:direction:distance:reason:
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
_mapping
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
T@"<MPCReportingIdentityPropertiesLoading>",R,N
T@"NSData",R,C,N
T@"NSNumber",R,C,N
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
getVerificationContextForUserIdentity:error:
setInteractionLevel:
initWithVerificationContext:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
setItem:
setEndEvent:
setStarted:
ended
setEnded:
started
traceWithName:item:event:
traceIntervalWithName:item:beginEvent:endEvent:
_started
_ended
T@"NSString",&,N,V_name
T@"MPAVItem",W,N,V_item
TI,N,V_endEvent
Td,N,V_started
Td,N,V_ended
isAvailable
_copyWithPlaybackRequestEnvironmentClass:
setAllowsHandlingNonAuthenticationDialogs:
setStoreDialogResponseHandler:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
T@"MPCPlaybackRequestEnvironment",R,N
_clientVersion
_delegationProperties
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
T@"MPCSharedListeningLiveLinkReusePool",R,N
_sessionIDLiveLinkMap
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByRemovingPercentEncoding
processData:usingProcedure:completion:
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeAllItems
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
trackForItemAtIndex:
updateWithPersonalizedResponse:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_playbackHistoryStore
_stationTracks
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
T@"ICRadioPlaybackHistory",R,C,N
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
serverTrackInfo
likeState
parentTrack
_playbackHistory
_trackModels
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
initWithInteger:
contentType
mediaPlayerBundle
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
removeObjectsForKeys:
isLocalDevice
sendCommand:toDestination:withOptions:completion:
removeOutputDevices:initiator:withReplyQueue:completion:
localizedFailureReason
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
deviceUIDsQueue
sendCommandWithResult:toDestination:withOptions:completion:
_applyOriginatingDeviceUIDs:
_setAnalyticsKey:value:
_setAnalyticsError:
canHostMultiplayerStream
hostedEndpointForOutputDeviceUIDs:queue:completion:
initWithFormat:
sendPlaybackQueueWithResult:toDestination:completion:
sendPlaybackQueueWithResult:toDestination:withOptions:completion:
userMonitorWithHomeIdentifier:
privateListeningEnabledForGroupWithRouteIDs:
_findOutputDevicesForDestination:completion:
sendPlaybackArchive:toDestination:withOptions:completion:
sendPlaybackArchiveWithResult:toDestination:withOptions:completion:
boolValueForOption:
supportedOptions
playbackSessionIdentifier
arrayWithObject:
sendPlaybackQueue:toDestination:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendPlaybackArchive:toDestination:completion:
sendPlaybackArchiveWithResult:toDestination:completion:
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
_allowsStoreContainerImport
_playEvent
TB,N,V_allowsStoreContainerImport
T@"MPModelPlayEvent",&,N,V_playEvent
Tq,N,V_type
getVolumeLevelForUID:completion:
clearPlaybackQueue
shouldExpectEmptyQueue
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_teardownBookmarkingTimer
_setupBookmarkingTimerForItem:
setHasPlayedThisSession:
bookmarkingTimer
setBookmarkingTimer:
_bookmarkingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
hasCellularDataCapability
_allowCellularStreamingDidChangeNotification:
_updateAdditionalLoadingSupport
userAdvancedDuringPlayback
setObserver:
setSkipDate:
replaceTrackAtIndex:withTrack:
isSkippable
replaceItemAndIdentifierSet:atIndex:
setPreviousContentItemID:
insertItems:afterItem:
allItems
allowsRadioService
_endObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
setReasonType:
setQueueContentReferences:
_loadTracksWithRequest:completion:
setPreservingCurrentlyPlayingItem:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
setRequestedTrackCount:
setMainTitle:
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
userMonitorWithUserIdentity:fromUserIdentityStore:
isExplicitSettingEnabled
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
autoupdatingActiveAccount
_removeAllTracks
_errorForRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
_beginObservingIdentityStoreForSignOut
pairWithFirst:second:
first
second
_handleGetTracksResponse:getTracksError:fromRequest:completion:
sharedQueue
operationCount
_responseDidInvalidateNotification:
_removeRestrictedTracks
_repersonalizeCurrentTracks
_isTransientLoadingError:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
setData:
set_firstAudioFrameTimestamp:
set_sectionIdentifier:
set_itemIdentifier:
set_featureName:
set_siriRefId:
set_isShuffled:
set_isAutoPlayEnabled:
set_isSharePlay:
set_assetType:
set_assetSource:
set_assetLocation:
set_isDelegatedPlayback:
set_hasOnlinePlaybackKeys:
set_hasOfflinePlaybackKeys:
set_bagWaitTime:
set_leaseWaitTime:
set_suzeLeaseWaitTime:
set_subscriptionAssetLoadWaitTime:
set_mediaRedownloadWaitTime:
set_formatInfo:
set_hlsMetadataWaitTime:
set_routeInfo:
set_itemMetadata:
set_isFirstPlay:
set_isReplacingPlayback:
set_errorResolution:
set_errorSignature:
set_networkType:
set_hasAccountInfo:
set_isActiveAccount:
set_queueType:
set_getTracksWaitTime:
set_lookupWaitTime:
set_sessionActivationWaitTime:
set_setQueueCommandSendTime:
set_playCommandSendTime:
set_queueLoadWaitTime:
set_assetLoadWaitTime:
set_readyToPlayStatusWaitTime:
set_playCommandWaitTime:
set_rateChangeWaitTime:
set_firstAudioFrameWaitTime:
firstAudioFrameTimestamp
itemMetadata
siriRefId
_data
T@"NSMutableDictionary",&,N,V_data
T@"NSNumber",&,D,N,Sset_firstAudioFrameTimestamp:
T@"NSString",&,D,N,Sset_sectionIdentifier:
T@"NSString",&,D,N,Sset_itemIdentifier:
T@"NSDictionary",&,D,N,Sset_itemMetadata:
T@"NSString",&,D,N,Sset_featureName:
T@"NSString",&,D,N,Sset_siriRefId:
T@"NSString",&,D,N,Sset_queueType:
T@"NSNumber",&,D,N,Sset_isShuffled:
T@"NSNumber",&,D,N,Sset_isAutoPlayEnabled:
T@"NSNumber",&,D,N,Sset_isSharePlay:
T@"NSNumber",&,D,N,Sset_assetType:
T@"NSNumber",&,D,N,Sset_assetSource:
T@"NSString",&,D,N,Sset_assetLocation:
T@"NSNumber",&,D,N,Sset_isDelegatedPlayback:
T@"NSNumber",&,D,N,Sset_hasOnlinePlaybackKeys:
T@"NSNumber",&,D,N,Sset_hasOfflinePlaybackKeys:
T@"NSDictionary",&,D,N,Sset_formatInfo:
T@"NSDictionary",&,D,N,Sset_routeInfo:
T@"NSNumber",&,D,N,Sset_networkType:
T@"NSNumber",&,D,N,Sset_isFirstPlay:
T@"NSNumber",&,D,N,Sset_isReplacingPlayback:
T@"NSNumber",&,D,N,Sset_errorResolution:
T@"NSString",&,D,N,Sset_errorSignature:
T@"NSNumber",&,D,N,Sset_hasAccountInfo:
T@"NSNumber",&,D,N,Sset_isActiveAccount:
T@"NSNumber",&,D,N,Sset_setQueueCommandSendTime:
T@"NSNumber",&,D,N,Sset_playCommandSendTime:
T@"NSNumber",&,D,N,Sset_queueLoadWaitTime:
T@"NSNumber",&,D,N,Sset_assetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_readyToPlayStatusWaitTime:
T@"NSNumber",&,D,N,Sset_playCommandWaitTime:
T@"NSNumber",&,D,N,Sset_rateChangeWaitTime:
T@"NSNumber",&,D,N,Sset_firstAudioFrameWaitTime:
T@"NSNumber",&,D,N,Sset_lookupWaitTime:
T@"NSNumber",&,D,N,Sset_getTracksWaitTime:
T@"NSNumber",&,D,N,Sset_bagWaitTime:
T@"NSNumber",&,D,N,Sset_leaseWaitTime:
T@"NSNumber",&,D,N,Sset_suzeLeaseWaitTime:
T@"NSNumber",&,D,N,Sset_subscriptionAssetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_mediaRedownloadWaitTime:
T@"NSNumber",&,D,N,Sset_hlsMetadataWaitTime:
T@"NSNumber",&,D,N,Sset_sessionActivationWaitTime:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
distantPast
_playbackSessionsDirectory
archivesAtURL:
setDataSourceQueue:
addTarget:action:
removeTarget:
initWithCodingPackage:error:
decodeRootObjectOfClasses:error:
sharedSecurityInfo
isContentProtectionEnabled
isDeviceClassCUnlocked
nowPlayingContentItem
imageByPreparingForDisplay
initWithCodingPackage:userInfo:
encodeRootObject:
removeLastObject
removeObjectIdenticalTo:
_cachesDirectory
stringWithContentsOfURL:encoding:error:
writeToURL:atomically:encoding:error:
deleteSessionWithIdentifier:completion:
copyWithNewIdentifier:
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSMutableArray",R,N,V_sessionArchives
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
T@"NSString",&,N
initWithModelObject:response:
T@"MPModelSharedListeningParticipant",R,N,V_modelObject
setArtworkIdentifier:
T@"NSString",C,N,V_artworkIdentifier
T@"MPCMediaRemoteController",R,W,N,V_controller
timedMetadataGroups
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithArtworkResponseArray:
tokenWithImageArtworkInfo:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
metadataIdentifiers
_timedMetadataGroups
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
T@"NSArray",R,C,N,V_timedMetadataGroups
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v36@0:8@16@24B32
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@"ICLiveLink"16
v36@0:8@"ICLiveLink"16@"NSError"24B32
v32@0:8@"ICLiveLink"16@"NSArray"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningQueue"24
v40@0:8@"ICLiveLink"16@"ICSharedListeningItem"24@"ICLiveLinkIdentity"32
v32@0:8@"ICLiveLink"16@"ICLiveLinkEvent"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningItem"24
v32@0:8@16@?24
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v40@0:8@16@24@?32
v24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
q16@0:8
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MSVBlockGuard"
@"MPCPlaybackIntent"
@"NSIndexPath"
@"MSVSectionedCollection"
@"ICLiveLink"
@"ICLiveLinkIdentity"
@24@0:8^{_NSZone=}16
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
@24@0:8@16
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSArray"
@"MPSectionedCollection"
@48@0:8@16@24@32@40
@32@0:8@16@24
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
B36@0:8B16q20@28
B28@0:8B16@20
B32@0:8B16I20@24
@44@0:8@16@24I32@36
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B36@0:8B16q20@"MPMiddlewareChain"28
B28@0:8B16@"MPMiddlewareChain"20
@"MPCPlayerAudioFormat"32@0:8@"MPCPlayerAudioFormat"16@"MPMiddlewareChain"24
@"MPCPlayerAudioRoute"32@0:8@"MPCPlayerAudioRoute"16@"MPMiddlewareChain"24
@"NSArray"32@0:8@"NSArray"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
v40@0:8@16Q24Q32
v24@0:8Q16
@"AVAudioSession"
@"NSString"
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16f24B28@32
v48@0:8@16@24@32@40
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v52@0:8@16f24@28@36@44
v28@0:8f16@20
v36@0:8B16@20@28
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@16d24@32
v48@0:8@16d24d32@40
v40@0:8@16@24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16q24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16f24B28@"<MFTimeStamp>"32
v48@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"NSString"32@"<MFTimeStamp>"40
v40@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v52@0:8@"<MFQueuePlayerItem>"16f24@"NSString"28@"NSString"36@"<MFTimeStamp>"44
v28@0:8f16@"<MFTimeStamp>"20
v36@0:8B16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFQueuePlayerItem>"24@"<MFTimeStamp>"32
v40@0:8q16@"NSString"24@"<MFTimeStamp>"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16d24@"<MFTimeStamp>"32
v24@0:8@"<MFTimeStamp>"16
v24@0:8@"<MFQueuePlayerItem>"16
v48@0:8@"<MFQueuePlayerItem>"16d24d32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24q32
v32@0:8@16q24
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
d16@0:8
f16@0:8
v20@0:8B16
B48@0:8q16q24B32B36^@40
v20@0:8f16
B28@0:8f16@?20
v20@0:8i16
v24@0:8d16
v36@0:8f16@20@?28
v40@0:8d16@24@?32
B24@0:8q16
v40@0:8q16@24@?32
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"<MPAVQueueController>"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@"MPCPlaybackEngine"16@0:8
@"<MPAVQueueController>"16@0:8
@"MPAVItem"16@0:8
B28@0:8f16@?<v@?>20
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v52@0:8@16d24d32B40@44
v48@0:8@16@24@32d40
@"MPCPlaybackEngine"
@"<MPAVQueueController>"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPCPlayerItemConfigurator"
@"MPCAVItemTrace"
@"MPCPlayPerfAnalytics"
@"_MPCAudioSessionController"
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"ICStoreDialogResponse"16@0:8
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8^@16
B32@0:8@16q24
v28@0:8@16B24
v28@0:8f16@?20
{?=qqqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICContentKeySession"
@"ICAVAssetDownloadURLSession"
@"ICURLRequest"
@"ICMusicSubscriptionLeaseStatus"
@"NSDictionary"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"MPCPlaybackEngineEventStream"
@"MPCPlayerAudioFormat"
@"MPCPlayerAudioRoute"
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
{?="containerIndex"b1"itemIndex"b1}
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
B40@0:8@16@24@32
@"<MPCPlaybackEngineEventStreamSubscription>"
@"MPCPlaybackEngineEvent"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}16@0:8
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}32@0:8@16@24
@36@0:8@16@24B32
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@40@0:8@16@24q32
v56@0:8@16@24@32@40Q48
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableArray"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"MPMutableSectionedCollection"
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
@40@0:8@16@24B32B36
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@"MPCPlayerPath"
q40@0:8q16q24@32
@40@0:8@16q24@32
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16Q24
v36@0:8@16d24f32
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
@28@0:8d16f24
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
@48@0:8@16@24q32^@40
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
v36@0:8@16B24@?28
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"NSObject<OS_dispatch_source>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
q24@0:8@16
@"MPCModelGenericAVItemAssetLoadProperties"
v56@0:8^@16^@24@32q40@48
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"d@"NSError">24
@"MPModelPlayEvent"32@0:8@"NSString"16@"NSString"24
@"MPIdentifierSet"32@0:8@"NSString"16@"NSString"24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
v40@0:8@?16@?24@?32
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@64@0:8@16@24@32q40@48@?56
B32@0:8@16^@24
@"MPAVItem"
@"<MPCAssetLoaderDelegate>"
@"NSError"
v40@0:8@16q24@?32
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
@44@0:8I16@20@28@36
I16@0:8
@40@0:8@16Q24@32
@"MPCPlayerCommandRequest"
@"NSDate"
@"MPCPlayerCommandStatus"
v32@0:8{?=qq}16
{?="reverseCount"q"forwardCount"q}
@24@0:8@?16
@32@0:8@16@?24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
v48@0:8@16q24q32@40
@"NSObject<OS_dispatch_group>"
@"<MPCRTCEventConsumerTestingDelegate>"
@"RTCReporting"
v32@0:8Q16@24
@32@0:8Q16d24
@24@0:8Q16
v48@0:8@16@24@32^v40
q40@0:8{?=qiIq}16
{?=qiIq}24@0:8q16
@"AVPlayer"
@"MPCSceneCollection"
@"MPNotificationObserver"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@"ICSharedListeningQueue"
@"MPRemoteCommandHandlerDialogAction"
@"MPRemoteCommandHandlerDialog"
@"MPCPlayerCommandDialog"
@"MPRemoteCommandStatus"
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@40@0:8@16@24d32
@"MPStoreLibraryPersonalizationResponse"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@32@0:8q16^@24
@"<MPCSupportedCommands>"
@28@0:8I16@20
f24@0:8@16
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v32@0:8@"NSError"16@"<MFPlayerItem>"24
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"NSMutableSet"
@"<MPCExternalPlaybackRouter>"
@40@0:8@16@24^@32
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
@"MPModelResponse<MPCModelPlaybackResponse>"
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanJumpToItem"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
d48@0:8@16@24@32@40
d40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v32@0:8@16d24
@"ICPlayActivityController"
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
^{_MRSystemAppPlaybackQueue=}16@0:8
@"ICUserIdentity"
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@"UIView"16@?<v@?>24
v24@0:8@?<v@?>16
@"<MPCVideoOutputDelegate>"16@0:8
v24@0:8@"<MPCVideoOutputDelegate>"16
@"UIViewController"16@0:8
@"<MPCVideoOutputDelegate>"
@"AVPlayerViewController"
v32@0:8@"<MPCVideoOutput>"16@"<UIViewControllerTransitionCoordinator>"24
B24@0:8@"<MPCVideoOutput>"16
v24@0:8@"<MPCVideoOutput>"16
v32@0:8@"<MPCVideoOutput>"16@"NSError"24
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
v60@0:8{?=QQQQd}16B56
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCReportingController"
@"MPCStoreLibraryPersonalizationMiddleware"
@"MPCPlaybackSharedListeningProperties"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
B40@0:8@16^d24^@32
@40@0:8@16^d24^@32
@32@0:8@16^@24
@"MPAVRoutingController"
@"MPCModelGenericAVItem"
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
B40@0:8@16@24q32
q36@0:8@16@24B32
{?="representativeItemCloudID"b1"storeAdamID"b1}
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@24@0:8d16
v28@0:8Q16B24
@"MSVLRUDictionary"
@32@0:8q16@24
@"MPCSharedListeningEventParticipant"
@"MPCSharedListeningSessionEvent"
@"MPCSharedListeningPlaybackEvent"
@"MPCSharedListeningQueueEvent"
@"MPCSharedListeningReactionEvent"
@"MPCSharedListeningCustomEvent"
@"MPCSharedListeningQueueEventContentAdded"
@"MPCSharedListeningQueueEventContentRemoved"
@"MPCSharedListeningQueueEventContentReordered"
@"MPCSharedListeningQueueEventContentReplaced"
@"MPCSharedListeningQueueEventContentPlayedNow"
@"MPCSharedListeningQueueEventContentUpdatedMessage"
@"MPCSharedListeningQueueEventPlaybackModeChanged"
@20@0:8B16
v44@0:8I16@20@28@?36
v52@0:8I16@20@28@36@?44
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
@"MRCommandResult"
@27@0:8@16{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}24
{MPCModelStorePlaybackItemsRequestAccumulatorResult="didFinishEntireRequest"B"didFinishBatch"B"hasCollectionItemsWithPlaybackAuthorizationToken"B}
@"MPServerObjectDatabaseImportResult"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@32@0:8@16Q24
@"MPCPlayerCommandRequest"20@0:8B16
v56@0:8@16q24@32Q40@?48
@"MPCSharedListeningContainerInfo"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
v56@0:8@"MPPlaybackContext"16q24@"NSString"32Q40@?<v@?@"NSString"@"NSError">48
@"<MPCQueueControllerCommandInterposingHost>"16@0:8
v24@0:8@"<MPCQueueControllerCommandInterposingHost>"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSArray"24@0:8q16
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@28@0:8@16B24
@48@0:8@16q24q32B40B44
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"48@0:8@"MPAVItem"16q24q32B40B44
B32@0:8q16@"MPAVItem"24
v24@0:8@"AVPlayerPlaybackCoordinator"16
@"MPAVItem"32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v40@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24@"MPAVItem"32
v24@0:8@"<MPAVQueueCoordinating>"16
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@40@0:8q16q24^q32
B24@0:8@"MPAVItem"16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSError">24
v40@0:8@"MPPlaybackContext"16q24@?<v@?@"NSError">32
v44@0:8@"MPPlaybackContext"16q24B32@?<v@?@"NSError">36
v48@0:8@"MPPlaybackContext"16q24B32B36@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"MPAVItem"16@"MPAVItem"24
v28@0:8@"NSString"16B24
@"NSString"24@0:8q16
@"NSString"40@0:8q16q24^B32
@"MPAVItem"24@0:8@"NSString"16
@"<MPAVQueueControllerDelegate>"16@0:8
v24@0:8@"<MPAVQueueControllerDelegate>"16
@"<MPAVQueueCoordinating>"16@0:8
@"NSArray"40@0:8q16q24^q32
v32@0:8q16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"MPCSharedListeningContainerInfo"16
v24@0:8@"MPCSharedListeningEvent"16
v40@0:8@"NSString"16@"NSString"24@"ICLiveLinkIdentity"32
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
v48@0:8@16@24@32@?40
@32@0:8@16^B24
@"AVPlayerPlaybackCoordinator"
@"<MPAVQueueControllerDelegate>"
@"<MPAVQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
@56@0:8@16q24Q32@40@48
@"MPCQueueController"
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"NSArray"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"<MPCQueueControllerCommandInterposingHost>"
@"MPPlaybackUserDefaults"
v28@0:8@16f24
@"MPCWaitForLikelyToKeepUp"
@"MPCWaitForReadyToPlaySignpost"
@"MPCPlayToSetRateSignpost"
@"MPCSetRateToEffectiveRateSignpost"
{?="storeAdamID"b1}
v28@0:8d16f24
@"AVPlayerLayer"
v40@0:8@16@?24@?32
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerAudioFormat"16
@"MPCPlayerAudioFormat"16@0:8
@"MPCPlayerAudioRoute"16@0:8
{?=dddddffBB}16@0:8
@"MPCPlayerResponseParticipant"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@28@0:8@16I24
v40@0:8d16d24@32
v32@0:8d16d24
v32@0:8d16@24
d32@0:8@16d24
@"MPAVController"
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
v32@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24
v40@0:8^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
^{opaqueMTAudioProcessingTap=}
@"_MPCAudioSpectrumAnalyzerStorage"
@"MPCAudioSpectrumAnalyzer"
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
^{_MPCAudioSpectrumAnalyzerBandInternal={MPCAudioSpectrumAnalyzerBand=ff}fffQ}
@28@0:8Q16f24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16Q24@32
{DSPSplitComplex="realp"^f"imagp"^f}
^{OpaqueFFTSetup=}
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
@36@0:8@16@24f32
q24@0:8Q16
@"ICEnvironmentMonitor"
@"MSVABTestGenerator"
B28@0:8@16B24
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
v28@0:8q16B24
v32@0:8@16B24B28
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
v48@0:8I16@20I28@32@?40
{CGSize=dd}40@0:8@16{CGSize=dd}24
{CGSize=dd}40@0:8@"MPArtworkCatalog"16{CGSize=dd}24
v32@0:8@"MPArtworkCatalog"16@"UIView"24
v40@0:8@"MPArtworkCatalog"16@"UIView"24@"MPArtworkRepresentationCollection"32
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"<MPArtworkDataSource>"
^v20@0:8I16
v32@0:8^v16@?24
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@"MPCPlaybackEngineEvent"16@0:8
v44@0:8@16@24@32B40
v68@0:8@16@24@32@40@48@56B64
v72@0:8@16@24@32@40@48B56B60d64
v52@0:8@16@24@32@40B48
@"NSProgress"
@"MPCModelStorePlaybackItemsResponse"
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
@40@0:8@16q24d32
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
@"MPNowPlayingInfoCenter"16@0:8
@"MPRemoteCommandCenter"16@0:8
@"AVAudioSession"16@0:8
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
@"<MPCPlaybackEngineInitializationParameters>"
v32@0:8@16^v24
I32@0:8@16q24
v20@0:8I16
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
B24@0:8^@16
@"MPNowPlayingContentItem"
@"UIImage"
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPRTCReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
@48@0:8@16q24q32q40
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFQueuePlayerItem>"24
@"<MPCQueueItemProviding>"
@"ICRadioGetTracksResponse"
v36@0:8@16@24I32
@40@0:8@16@24I32I36
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v40@0:8@16@24d32
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPModelSharedListeningParticipant"
@333333
HKNQTW 
knqtwza
llll
147:
---------'*--
!!$!!!'*-03
6!!!9<
'.Qt
^UaX
8beh_kux{
*@GN
LORUX[
^adgjm
"%(+.
TWZ]`
NQTWZ]`
47:=
'JQX{
'JQX_
"+4=F
Eqqqez
CFILORUX[^ad
B&B03
 #&),
 #&),/25
5-155"""""9
(;PW
&77,
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
build
link:start
%{public}@ didUpdateQueue:
%{public}@ _transitionToBuildState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToBuildState %{public}@ -> %{public}@
build:replace
%{public}@: calling completion intent=%{public}@ status=%{public}@
intent=%{public}@ status=%{public}@
%{public}@ _transitionToSourceState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToSourceState %{public}@ -> %{public}@
source:getPlaybackContext
error=%{public}@
%{public}@ _transitionToLiveLinkState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToLiveLinkState %{public}@ -> %{public}@
PlaybackStackInitialSetup
 enableTelemetry=YES 
PlaybackStackSetup
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
QueueControllerReload
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
reloadWithPlaybackContext failed - error: %{public}@ - resolution: %ld
QueueControllerInsert
[%{public}@]-MPCPlaybackEngineImplementation: %p - 
replaceCurrentItemWithPlaybackContext failed with error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
[%{public}@]-MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@ - play: %{BOOL}u - mode: %{public}@
shouldPlay=%{BOOL}u
InitialItem
PrepareForRate
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
[%{public}@]-MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
[%{public}@]-Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
[%{public}@]-Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
[%{public}@]-endPlaybackWithIdentifier %{public}@ - Received: clearing all playback queue
[%{public}@]-PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
[%{public}@]-Pause for lease prevention %{public}@ completed - error=%{public}@
[%{public}@]-Pause command %{public}@ completed - error=%{public}@
[%{public}@]-Play command %{public}@ completed - error=%{public}@
[%{public}@]-MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
[%{public}@]-Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
[%{public}@]-Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
[%{public}@]-End seek command %{public}@ completed - error=%{public}@
[%{public}@]-Set rate command %{public}@ completed - rate=%f - error=%{public}@
[%{public}@]-Set current time command %{public}@ completed - time=%f - error=%{public}@
Unexpected _logTimeJumpForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected _playbackDidStopForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-Triggering MR command %{public}@ from userAction: %{public}@
[%{public}@]-Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - currentItemWillChangeFromItem - %{public}@ -> %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidBecomeCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidResignCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - rate: %.2f - effectiveRate: %2f - state: %{public}@ - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - userSeekCompletedForItem - item=%{public}@ - [%.2fs -> %.2fs]- timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
Unexpected itemDidFailToPlayToEnd: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - No existing formats on item
[%{public}@]-%{public}@ - active audio format from AV: %{public}@
[%{public}@]-%{public}@ - [AF] - Updating active format : %{public}@
[%{public}@]-Event %{public}@: startup time: %lfs - bitrates: [observed:%lf, indicated:%lf, average audio:%lf, switch:%lf] - entry reason:%ld
[%{public}@]-%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - from stalling:%{BOOL}u - timeStamp:%{public}@
[%{public}@]-PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
Unexpected playbackDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackDidStopForItem- item=%{public}@ - source:%{public}@ - reason:%{public}@   - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackRateDidChangeNotifiedForItem - item=%{public}@ - rate:%1.2f - reason:%{public}@ - participant:%{public}@ - timeStamp:%{public}@
Unexpected playbackRateDidChangeNotifiedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - firstFrameWillRenderForItem - item=%{public}@ - startTime:%{public}.2f
Unexpected firstFrameWillRenderForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - timeControlStatusDidChange - status:%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - stateDidChange - [%{public}@/MP:%ld/NP:%ld -> %{public}@/MP:%ld/NP:%ld] - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
Unexpected playbackBufferStateDidChangeToState:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackIsLikelyToKeepUp:forItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-%{public}@ - tracksDidChange: - item=%{public}@ - timeStamp:%{public}@
[%{public}@]-
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
[%{public}@]-%{public}@ - end of queue reached [%{public}@]
[%{public}@]-%{public}@ - Media Services were interrupted - item:%{public}@ - time:%.3fs - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were interrupted - no item at death - timeStamp:%{public}@
[%{public}@]-%{public}@ - Media Services were restored - timeStamp:%{public}@
[%{public}@]-%{public}@ - Playback stuck on non-playable item: %{public}@
[%{public}@]-%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
Unexpected firstVideoFrameWasRenderedForItem: without a SIL pair ID: %{public}@ %{public}@
[%{public}@]-%{public}@ - relativeVolumeDidChangeTo: - volume=%{public}f - timeStamp:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidStartForItem: - item=%{public}@ - error:%{public}@
[%{public}@]-%{public}@ - errorResolutionDidEndForItem: - item=%{public}@ - error:%{public}@ - resolution:%{public}@
Unexpected assetLoadingDidCompleteForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected assetLoadingDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Playback failed due to age verification requirement: %{public}@
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Cancelling download request [dealloc] - request:%{public}@
%{public}@: Missing DSID in delegated identity properties - skipping playback
[%{public}@]-%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
[%{public}@]-[AL] - %{public}@: Preferred audio: %{public}@ - allowsHLSContent: %{BOOL}u - Selector: %{public}@, playbackAuthorizationToken=%{public}@, fileAsset=%p, storeAsset=%p
[%{public}@]-[AL] - %{public}@: Starting asset load...
[AL] - %{public}@: Returning asset load early with error: %{public}@
[%{public}@]-[AL] - %{public}@: Asset is %{public}@ - Preferred audio: %{private}@, isDelegatedPlayback=%{BOOL}u, allowsStreamingPlayback=%{BOOL}u, endpointType=%d
[AL][Bag Loading] - %{public}@: Failed to load the bag. err=%{public}@.
[%{public}@]-[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Finished loading url bag.
[AL][Bag Loading] - %{public}@: loadAssetAndPlayerItem - Timed out loading url bag.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Subscription lease properties already loaded.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Loading subscription lease properties.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished loading subscription lease properties.
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out loading subscription lease properties.
LoadAssetGetSubscriptionLeaseProperties
[%{public}@]-[AL] - %{public}@: Using local file asset at path: %{public}@.
[AL] - %{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
LoadAssetLocalFileLoadOperation
[%{public}@]-[AL] - %{public}@: Using home sharing asset.
[AL] - %{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
LoadAssetHomeSharingLoadOperation
[%{public}@]-[AL] - %{public}@: Using existing Radio cached playback response: %{public}@
[%{public}@]-[AL] - %{public}@: No cached Radio playback response found.
LoadAssetAssetInfoCacheRequest
[%{public}@]-[AL] - %{public}@: No local file of appropriate quality, using cloud streaming.
[AL] - %{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
[AL] - %{public}@: Subscription is required, and we failed to load the subscription status.
[AL] - %{public}@: Playback authorization token is required for playback.
[AL] - %{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
LoadAssetSubscriptionAssetLoadOperation
[AL] - %{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
LoadAssetMediaRedownloadOperation
[AL] - %{public}@: No valid endpoint type (%ld), skipping streaming redownload.
[AL] - %{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
LoadAssetLowQualityFileLoadOperation
[%{public}@]-[AL] - %{public}@: Ready to process asset load result: %{public}@
[%{public}@]-[AL] - not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
[%{public}@]-[AL] - %{public}@: Using iTunes Store Content Info: %@
[%{public}@]-[AL] - %{public}@: Non HLS Asset - Reloading playback keys if required
[%{public}@]-[AL] - %{public}@: Radio station does not require a subscription, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Protection type is %li, skipping subscription key check.
[%{public}@]-[AL] - %{public}@: Not subscription content, skipping playback key check.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Lease session invalid, skipping key loading.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Reloading FairPlay key status to ensure the latest value is known...
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@ with error: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished reload of FairPlay key status: %{public}@
[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
LoadAssetLoadFairPlayKeyStatus
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Already have playback keys from lease status: %{public}@, no need to do another request.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the asset requires online keys
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Requesting playback keys because the lease status indicates none available: %{public}@
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Finished subscription lease request for playback keys with error: %{public}@.
[%{public}@]-[AL][Lease] - %{public}@: loadAssetAndPlayerItem - Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
LoadAssetLeaseSessionPlaybackRequest
[%{public}@]-[AL] - %{public}@: AVURLAsset %{public}@ - options: %{public}@
[%{public}@]-[AL] - %{public}@: Initiating full online key retrieval [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Using purchase bundle: %{public}@
[%{public}@]-[AL] - %{public}@: Attempting to load full subscription asset [first asset requires online keys]
[AL] - %{public}@: Full subscription asset loading completed [first asset requires online keys]
[AL] - %{public}@: Initiating caching [Non HLS Asset]
[%{public}@]-[AL] - %{public}@: Asset download completed successfully.
[%{public}@]-[AL] - %{public}@: Writing placeholder purchase bundle at path: %{public}@
[AL] - %{public}@: Asset download completed with error: %{public}@
[%{public}@]-[AL] - %{public}@: Loaded full subscription asset, updated purchaseBundle = %@
[AL] - %{public}@: Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
[AL] - %{public}@: Failed to load full subscription asset: %{public}@.
[%{public}@]-[AL] - %{public}@: Writing purchase bundle at path: %{public}@
[%{public}@]-[AL] - %{public}@: Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
[AL] - %{public}@: Error caching file asset: %{public}@.
[AL] - %{public}@: Finished caching file asset.
[AL] - %{public}@: Removed incomplete download at URL: %{public}@
[%{public}@]-[AL] - %{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
LoadAssetCRABSAssetDownload
[%{public}@]-[AL] - %{public}@: Forcing a refresh of the hls keys due to a certificate mismatch
[AL] - %{public}@: Failed to fetch FairPlayKeyStatus for offline key determination error: %{public}@
[%{public}@]-[AL] - %{public}@: Not requesting offline keys because Fairplay does not have offline subscription keys
[%{public}@]-[AL] - %{public}@: Using ContentKeySession for SKD [New HLS audio tracks] %{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Initiating download to destination file %{public}@
[AL] - %{public}@: [HLS streaming cache] Failed to create download url session for HLS asset
[AL] - %{public}@: [HLS streaming cache] Attempting to cache asset of type %{public}@ using HLS caching logic
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Setting cache properties of HLS asset with traits: %{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Failed to update cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Caching of HLS asset completed successfully
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Asset download complete. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Clearing cached asset file [fatal download error]. Error=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Failed to clear cache properties. err=%{public}@
[%{public}@]-[AL] - %{public}@: [HLS streaming cache] Clearing cached asset [asset is corrupted]. Error=%{public}@
LoadAssetHLSAssetDownload
contentType=%{public, signpost.telemetry:string1, name=contentType}s
[%{public}@]-%{public}@: Setting gapless info: %{public}@
LoadAssetCreateAVPlayerItem
[%{public}@]-[AL] - %{public}@: Starting Suze lease session...
[AL] - %{public}@: Failed to create suze lease with error: %{public}@.
[AL] - %{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
 enableTelemetry=YES isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAssetSuzeLeaseSession
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s result=%{public, signpost.telemetry:string2, name=result}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
LoadAsset
[%{public}@]-[AL] - %{public}@: Asset load finished.
[%{public}@]-%{public}@: [AF] - Updating preferred audio format: %{public}@ -> %{public}@
[%{public}@]-%{public}@: [AF] - Updating active audio format: %{public}@ -> %{public}@ - Justification: %ld
[%{public}@]-%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
[%{public}@]-%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
[%{public}@]-%{public}@: Transforming error network unavailable instead of original: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished preparing for rate: %f.
[%{public}@]-[LeaseRatePreparation] - %{public}@: Getting subscription lease session
[%{public}@]-[LeaseRatePreparation] - %{public}@: Sending subscription lease request
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@ error: %{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Subscription lease not required]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [Playback keys not required ]
[%{public}@]-[LeaseRatePreparation] - %{public}@: Early completion [No subscription lease session available]
[%{public}@]-%{public}@ Using start time: %f
[%{public}@]-%{public}@ Using stop time: %f
[%{public}@]-%{public}@ Using bookmark start time: %f
%{public}@: setupWithPlaybackInfo called without an asset loaded
%{public}@: setupWithPlaybackInfo called without an asset loaded and isAssetLoaded is TRUE
%{public}@: Uninitialized MPModelPropertyAlbumTraits - album=%{public}@.
%{public}@: Uninitialized MPModelPropertyPlaylistTraits properties - playlist=%{public}@.
[%{public}@]-BackgroundTask: Took assertion (%lli) at %{public}s:%d
[%{public}@]-%{public}@ Using adamID %lld for key server requests from identifier set %{public}@
[%{public}@]-%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
[%{public}@]-%{public}@: Enabling album loudness on player item %{public}@
[%{public}@]-%{public}@: Setting loudness info %{public}@ on player item %{public}@
[%{public}@]-%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Loading subscription status...
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@
[%{public}@]-[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Skipping subscription lease load since the subscription status indicated it shouldn't be used
[Lease] - %{public}@: getSubscriptionLeasePropertiesWithCompletion - Finished loading subscription status: %{public}@ with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Loading subscription lease session...
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Finished loading subscription lease session: %{public}@
[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Failed to load subscription lease session with error: %{public}@
[%{public}@]-[Lease] - %{public}@: getUnverifiedSubscriptionLeaseSessionWithCompletion - Posting ICMusicSubscriptionLeaseSessionLeaseStatusDidChangeNotification: %{public}@
[%{public}@]-BackgroundTask: End assertion (%lli) at %{public}s:%d
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - updating prevention status - lease status: %{public}@
[%{public}@]-[Lease] - %{public}@: _updatePreventionStatusWithLeaseSession - Lease playback prevention state did change to: %li [status: %{public}@
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
Audio session category failed: %{public}@ (AirPlay devices may be missed)
%{public}@: Failed to load delegated user identity properties. err: %{public}@
%{public}@: Failed to load user identity properties. err=%{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
Did not report <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] completion %{public}@
|%{public}@ %{public}@  
 STREAM START 
 %{public}@ [%d] 
|%{public}@ %{public}@ %{public}@
 SESSION BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION END                %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 SESSION RESTORE END        %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 SESSION RESET [BOUNDARY]   %{public}@
|%{public}@ %{public}@ %{public}@
 APPLICATION TERMINATION
|%{public}@ %{public}@ %{public}@
 APPLICATION FOREGROUND
|%{public}@ %{public}@ %{public}@
 APPLICATION BACKGROUND
|%{public}@ %{public}@ %{public}@
 DEVICE CHANGED
|%{public}@ %{public}@ %{public}@ 
 name: %{private}@; model: %{public}@
|%{public}@ %{public}@ %{public}@  
 application: %{public}@/%{public}@; bundleID: %{public}@; sourceVersion: %{public}@; uuid: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 root: %{public}@; uuid: %{public}@; debug: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 os: %{public}@ [%{public}@]/%{public}@ %{public}@; internalCarry: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 NET REACHABILITY CHANGED   %{public}@
Unexpected signalStrength values: %{public}@
|%{public}@ %{public}@ %{public}@
 NETWORK TYPE CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 strength: %{public}@
|%{public}@ %{public}@ %{public}@  
 constrained: %{BOOL}u; high quality: %{BOOL}u; expensive: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 COMMAND BEGIN              %{public}@ 
|%{public}@ %{public}@ %{public}@ 
  source: %{public}@
|%{public}@ %{public}@ %{public}@  
 nowPlayingContentItemID: %{public}@
|%{public}@ %{public}@ %{public}@  
 options: %{public}@
|%{public}@ %{public}@ %{public}@  
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@
 COMMAND TIMEOUT            %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@ 
|%{public}@ %{public}@ %{public}@
 COMMAND END                %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 command: %{public}@  %{public}@
|%{public}@ %{public}@ %{public}@  
 dialog.title: "%{public}@"; dialog.message: "%{public}@"
|%{public}@ %{public}@ %{public}@  
 dialog-action: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %{public}@ %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
   error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@  
             %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ADD                  %{public}@
|%{public}@ %{public}@ %{public}@ 
 queue: %{public}@
|%{public}@ %{public}@ %{public}@  
 feature: %{public}@
|%{public}@ %{public}@ %{public}@  
 queue-grouping-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 account: %{public}@
|%{public}@ %{public}@ %{public}@  
 requesting-application: %{public}@/%{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedAccount: %{public}@; delegatedDeviceName: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegatedDeviceOSVariant: %{public}@; delegatedDeviceUserAgent: %{public}@
|%{public}@ %{public}@ %{public}@  
 delegated-private-listening: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 private-listening-source: %{public}@; private-listening-override: %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM ADD             %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REMOVE          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE ITEM REORDER         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD BEGIN           %{public}@
|%{public}@ %{public}@ %{public}@
 QUEUE LOAD END             %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 error: 
 %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@  
           %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@ 
 title: %{public}@
|%{public}@ %{public}@ %{public}@  
 playlistVersionHash: %{public}@
|%{public}@ %{public}@ %{public}@  
 stationType: %{public}@; stationSubtype: %{public}@
|%{public}@ %{public}@ %{public}@  
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 CONTAINER END              %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BEGIN                 %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 duration: %0.2f; initialPosition: %0.2f; startBoundary: %0.2f; endBoundary: %0.2f
|%{public}@ %{public}@ %{public}@  
 requiresPAF: %{BOOL}u; video: %{BOOL}u; artistUploaded: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM UPDATE                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 identifiers: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM JUMP                  %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f; end: %0.2f
|%{public}@ %{public}@ %{public}@  
 userInitiated: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 ITEM PAUSE                 %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 end: %0.2f
|%{public}@ %{public}@ %{public}@  | reason: %{public}@
|%{public}@ %{public}@ %{public}@  | source: %{public}@
|%{public}@ %{public}@ %{public}@
 RATE CHANGED               %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 position: %0.2f
|%{public}@ %{public}@ %{public}@  | participant: %{public}@
|%{public}@ %{public}@ %{public}@  
 rate: %0.2f
|%{public}@ %{public}@ %{public}@
 FIRST AUDIO FRAME          %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %{public}@
|%{public}@ %{public}@ %{public}@  
 wait time: %0.2fs
|%{public}@ %{public}@ %{public}@  
 gap: %0.2fs
|%{public}@ %{public}@ %{public}@
 ITEM RESUME                %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
 start: %0.2f
|%{public}@ %{public}@ %{public}@
 READY TO PLAY              %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER READY          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER STALL          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM BUFFER FINISH         %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 skd: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM SECKEY END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM METADATA PING          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 data: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM END                   %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@  
 didPlayToEnd: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 AUDIO CHANGE               %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 activeFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 targetFormat: %{public}@
|%{public}@ %{public}@ %{public}@  
 justification: %{public}@; preferences: %{public}@
|%{public}@ %{public}@ %{public}@  
 alternate: %{public}@
|%{public}@ %{public}@ %{public}@  
 audioRoute: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET BEGIN           %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM ASSET END             %{public}@ %{public}@ [%.3fs]
|%{public}@ %{public}@ %{public}@
 ITEM ASSET INFO            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 type: %{public}@, subscription: %{BOOL}u, delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 network ops: %{public}@
|%{public}@ %{public}@ %{public}@
 ITEM CONFIGURED            %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@ 
|%{public}@ %{public}@ %{public}@  
 hlsMetadataWaitTime: %0.3fs
|%{public}@ %{public}@ %{public}@
 ITEM FAILED                %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER BEGIN          %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 PLACEHOLDER END            %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 HLS BEGIN                  %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@ 
 hasIndeterminateDuration: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 HLS END                    %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA BEGIN       %{public}@
|%{public}@ %{public}@ %{public}@
 TIMED METADATA END         %{public}@
|%{public}@ %{public}@ %{public}@
 ERROR RESOLUTION           %{public}@ %{public}@ %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT BEGIN            %{public}@
|%{public}@ %{public}@ %{public}@
 INTERRUPT END              %{public}@
|%{public}@ %{public}@ %{public}@ 
 resume: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 POLICY BEGIN
|%{public}@ %{public}@ %{public}@
 POLICY END
|%{public}@ %{public}@ %{public}@
 BEHAVIOR CHANGED           %{public}@
|%{public}@ %{public}@ %{public}@ 
 shuffle:  %{public}@
|%{public}@ %{public}@ %{public}@  
 repeat:   %{public}@
|%{public}@ %{public}@ %{public}@  
 autoplay: %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES LOST       %{public}@
|%{public}@ %{public}@ %{public}@
MEDIASERVICES RESET      %{public}@
|%{public}@ %{public}@ %{public}@
 ROUTE CHANGED              %{public}@
|%{public}@ %{public}@ %{public}@ 
 %{public}@
|%{public}@ %{public}@ %{public}@  
 %{public}@
|%{public}@ %{public}@ %{public}@  
 isAirPlay: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 shouldPause: %{BOOL}u
|%{public}@ %{public}@ %{public}@
 PLAYER TIME CONTROL STATUS
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@         [%.3fs]
|%{public}@ %{public}@ %{public}@ 
 status: %{public}@
|%{public}@ %{public}@ %{public}@  
 reason: %{public}@
|%{public}@ %{public}@ %{public}@
 SHARED SESSION BEGIN      %{public}@
|%{public}@ %{public}@ %{public}@
 PARTICIPANTS CHANGED       %{public}@
|%{public}@ %{public}@ %{public}@ 
 localUserIdentifier: %{public}@
|%{public}@ %{public}@ %{public}@  
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@  
 participants.count: %ld
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC BEGIN  %{public}@
|%{public}@ %{public}@ %{public}@ 
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %{public}@ %{public}@
 SHARED SESSION SYNC END    %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT BEGIN              %{public}@
|%{public}@ %{public}@ %{public}@
 ACCOUNT UPDATE             %{public}@
|%{public}@ %{public}@ %{public}@ 
 store-id: %{private}llu; storefront: %{public}@; delegated: %{BOOL}u
|%{public}@ %{public}@ %{public}@  
 household-id: %{public}@
|%{public}@ %{public}@ %{public}@  
 subscription: %{public}@
|%{public}@ %{public}@ %{public}@  
 private-listening: %{BOOL}u
[PIA] %p will not run requests for itemIdentifiers=%{public}@
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
[PIA] %p skipping item [store lookup failed] itemID=%{public}@
[PIA] %p Handling SP response=%p isFatalError=%{BOOL}u error=%{public}@
[PIA] %p Adding identifiers=%{public}@ as permanently failed items
%p Could not import response=%p to SOD. Error=%{public}@
MPCModelStorePlaybackItemsRequestAccumulator _updatedObjectWithPlaybackAuthorizationToken: is using vac token from the request. Object: %@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
[PIA] %p Found %d childIdentifierSets for %{public}@ with parentVersionHash=%{public}@, childKey=%d
[PIA] %p Error creating identifierSet for itemID=%{public}@ as _personID is nil
[PIA] %p Not updating identifiers=%{public}@ with vacToken=%{public}@ as personID on the request is nil
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackQueueReceived
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackReady
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPMusicPlayerControllerServer: startServer: resummed systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: startServer: deferred resume waiting for canBeNowPlaying systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: stopServer
getNowPlaying
getNowPlayingsForContentItemIDs
getNowPlayingAtIndex
setNowPlayingItem
getTimeSnapshot
MPCMusicPlayerControllerServer: play: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
play
MPCMusicPlayerControllerServer: pause: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
pauseWithFadeDuration
MPCMusicPlayerControllerServer: nextTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: previousTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
skipWithBehavior
MPCMusicPlayerControllerServer: reshuffle: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
reshuffle
MPCMusicPlayerControllerServer: seekForward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekBackward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
beginSeekWithDirection
MPCMusicPlayerControllerServer: seekForward: endSeeking: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
endSeek
MPCMusicPlayerControllerServer: changeRepeatMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setRepeatMode
getRepeatMode
MPCMusicPlayerControllerServer: changeShuffleMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setShuffleMode
getShuffleMode
setElapsedTime
MPCMusicPlayerControllerServer: changePlaybackPosition: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setPlaybackRate
MPCMusicPlayerControllerServer: changePlaybackRate: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getUserQueueModificationsDisabled
setUserQueueModificationsDisabled
MPMusicPlayerControllerServer: prerollWithCompletion FAILED [not implemented]
MPMusicPlayerControllerServer: beginPlaybackAtHostTime FAILED [not implemented]
MPMusicPlayerControllerServer: engine:didChangeToItem: - %{public}@ - reloading:%{BOOL}u
MPMusicPlayerControllerServer: connection invalidated: pid=%u
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
Invalidating playback queue because %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
[Publisher] Updating active account requires authorization tokens: %{BOOL}u
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
SessionActivation
_MPCMediaRemotePublisher: Failed to bless application
success=%{BOOL}u
publisher:bless
_MPCMediaRemotePublisher: Delaying audio activation [internal setting]: %gs
_MPCMediaRemotePublisher: Finished delaying audio activation [internal setting]
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [contextID does not match queueControllerUniqueID]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [command option to disable]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p is in shared listening mode]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
[Publisher] _updateSupportedCommands canFF=%{BOOL}u canRW=%{BOOL}u canSeek=%{BOOL}u canPreviousTrack=%{BOOL}u canNextTrack=%{BOOL}u prefersSeekOverSkip=%{BOOL}u
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportsCreateRadioStation=%{BOOL}u (activeAccountAllowsSubscriptionPlayback=%{BOOL}u, currentItemPlaceholder=%{BOOL}u)
[Publisher] _updateSupportedCommands canRepeatShuffle=%{BOOL}u shuffleType=%ld repeatType=%ld queueEndAction=%ld supportedActions=[%{public}@]
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportedPositions=[%{public}@]
[Publisher] _updateSupportedCommands disableQHO=%{BOOL}u supportedSessionTypes=%{public}@ exportableSessionTypes=%{public}@
[Publisher] _updateSupportedCommands libraryAddStatus=%{public}@ isAddable=%{BOOL}u
UpdateSupportedCommands
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
PerformCommandSetPlaybackQueue
PerformCommandPlay
command=%{public, signpost.telemetry:string1, name=command}s
PerformCommandOther
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
 enableTelemetry=YES status=%{public, signpost.telemetry:string2, name=status}s
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [allowing command] type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [failing command] type=%{public}@ id=%{public}@ interface=%{public}@
Cannot skip backwards from current item: %{public}@
Cannot skip forwards from current item: %{public}@
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. error: %{public}@
Insert playback context failed. Specific insertion position, but no content item ID provided.
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=KeepUpNext [in shared listening]
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
EndPlayback
Create playback context failed with error: %{public}@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=LeaveSharedSession [received shared listening intent while already in shared listening]
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
AccountRectification
type=replaceCurrentItem
 SetPlaybackQueue (keeping up next with no current item) recovered
type=reload
SetQueue
Radio station getPlaybackContext failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Add to playback context failed: %{public}@
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: cannot preload playback session with immediate priority, please send followup MRMediaRemoteCommandSetPriorityForPlaybackSession command.
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: SetPriorityForPlaybackSession [ignoring non-Immediate priority]
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
Change rate failed. (error = %{public}@)
shareQueue:getTracklist
shareQueue:buildIntent
status=%{public}@
Unsupported command: %{public}@ id=%{public}@
MPCMediaRemotePublisher: %p - [Lease] - Session migration will begin - identifier:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end with error [Stealing the lease back] - identifier:%{public}@ - error:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end - identifier:%{public}@
[AL] - %{public}@: Skipping local asset [assets from cache not allowed]
[AL] - %{public}@: Downloaded file quality overrides preferred file quality - File: %{public}@ > Preference: %{public}@
[AL] - %{public}@: Downloaded file quality matches preferred file quality 
[AL] - %{public}@: Cached HLS file quality determination: audioAssetTypesMatch=%{BOOL}u - fileAssetHasKeyServerData:%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=%{BOOL}u
[AL] - %{public}@: Cached file quality determination: isHLSAsset=%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=NO
[AL] - %{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
[AL] - %{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
[AL] - %{public}@: %{public}@ file is CRABS
[AL] - %{public}@:  %{public}@ file is HLS file - Traits: %{public}@
stationPlaybackAuthorizationToken=%{public}@ for identifier=%{public}@
%{public}@: File asset missing file path, finishing.
[AL] - %{public}@: File traits translation from MPFileAsset to MPMediaItem: %{public}@ -> %{public}@ - Existing file traits: %{public}@
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
MPCPlaybackHistoryController %p - Previous track does not meet playback history threshold - previous:%{public}@
item=%{public}@
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s isStartItem=%{public, signpost.telemetry:number1, name=isStartItem}d
ConfigureItem
Device supports streaming
Network connection is available
No network connection available
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
PlayerChangeRequest
MPCRTCEventConsumer: testingDelegate set. RTC messages will not be sent.
MPCRTCEventConsumer: Cannot send RTC message. Missing queueAddEvent for event=%@ with time=%@
MPCRTCEventConsumer: No itemBeginEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: Missing MPCPlaybackEngineEventPayloadKeyItemRTCHierarchyToken for MPCPlaybackEngineEventTypeItemBegin with time=%@
MPCRTCEventConsumer: Generated new RTC session. category=%@ serviceName=%@
MPCRTCEventConsumer: _payloadForSessionStart: Invalid item start event. type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: No QueueLoadEndEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionSummary: sessionStartItemEvent=nil event.type=%{public}@ event.date=%{public}@
MPCRTCEventConsumer: _payloadForItemAssetLoad: firstItemResumeEvent=nil
MPCRTCEventConsumer: _perceivedItemStartTime: itemStartEvent=nil
MPCRTCEventConsumer: _perceivedItemStartTime: sessionStartEvent=nil
MPCRTCEventConsumer: _updateAssetLoadInfoEvent requires MPCPlaybackEngineEventTypeItemAssetLoadEnd type
MPCRTCEventConsumer: [RTCReporting startConfigurationWithCompletionHandler:] failed with no backends
MPCRTCEventConsumer: Can't send RTC message. session=nil. category=%{public}@
MPCRTCEventConsumer: Sent RTC message. category=%{public}@ type=%{public}@
MPCRTCEventConsumer: RTC Message send failed. category=%{public}@ error=%{public}@
WaitForLikelyToKeepUp
 enableTelemetry=YES contentType=%{public, signpost.telemetry:string1, name=contentType}s format=%{public, signpost.telemetry:string2, name=format}s
WaitForReadyToPlay
PlayToSetRate
SetRateToEffectiveRate
seekToTime: %{public}@ currentTime: %{public}@ currentSceneIndex: %ld currentLoopCount: %ld URL: %{public}@ signpostID: %llu
SeekToTime
finished: %{BOOL}d
MPCScriptedLooper %p: Cancelled preloading metadata.
MPCScriptedLooper %p: metadataStatus was %ld.
MPCScriptedLooper %p: Cancelled preloading playable.
MPCScriptedLooper %p: playableStatus was %ld.
MPCScriptedLooper %p: Failed to preload duration. error=%{public}@
MPCScriptedLooper %p: Cancelled preloading duration.
PlayPerfJSON: %{public}@
PlayPerf: %{public}@
Logging event %{public}@ to CoreAnalytics with payload:
%{public}@
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
[AL] Error retrieving HLS session metadata - Asset:%{public}@ - Error:%{public}@
[AL] Time-out while retrieving HLS session metadata - Asset:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
 enableTelemetry=YES type=%{public, signpost.telemetry:number1, name=type}d error=%{public, signpost.telemetry:string1, name=error}s
ErrorResolution
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable failure [subscription required for playback] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Processing fatal playback error - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - nil item received [Queue failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Playback has not yet succeeded [Adding to queue failure set]
[%{public}@]-MPCErrorControllerImplementation %p <%{public}@> - Playback has succeeded for at least one item [Ignoring queue failure]
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Stopping playback for a first item or unrecoverable asset loading error. error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Failed to queue any items] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure - nil item] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Specified first item failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Entire queue loading failure] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Subscription required] error=%{public}@
[%{public}@]-
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure] error=%{public}@
[AL] - %{public}@: Using subscription playback endpoint with operation type: %li
[AL] - %{public}@: Loading subscription lease session...
[AL] - %{public}@: Failed loading subscription asset due to missing lease session.
[AL][Lease] - %{public}@: Has subscription lease session, using it. Lease status: %{public}@
[AL] - %{public}@: Loading %{public}@ asset from Mini Sinf...
[AL] %{public}@: MPCModelGenericAVItemSubscriptionAssetLoadOperation execute [loading asset from cache] prefersVideoContent=%{BOOL}u preferredAudio=%{private}@
[AL] - %{public}@: Loading %{public}@ asset - Preferred audio: %{private}@
[AL] - %{public}@: Using existing cached playback response: %{public}@
[AL] - %{public}@: Skipping subscription asset request [offline]
[AL] - %{public}@: Performing subscription playback request...
[AL] - %{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Performing subscription accountless playback request...
[AL] - %{public}@: Skipping accountless playback request [offline]
[AL] - %{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Skipping assets in the server object database [delegated lease]
[AL] - %{public}@: Skipping assets in the server object database [no online lease]
[AL] - %{public}@: Skipping assets in the server object database [no assets found]
[AL] - %{public}@: Skipping assets in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Found an asset with no sinf, skipping assets in server object database
MPCModelQueueFeeder applyVolumeNormalizationForItem: soundCheckEnabled=%{BOOL}u
MQF %p: setting override start time: %{public}@ for item: %{public}@
MQF %p: setting override stop time: %{public}@ for item: %{public}@
MQF %p: Supplemental playback context created: %{public}@ - reason: %ld
MQF %p: defersResponseReplacement: change details out of sync [identifierRegistry count mismatch] countDuringDiff=%ld countDuringApply=%ld
MQF %p: Crashing [invalid change details] reason=%{public}@ changeDetails=%{public}@
NoValidItems
MQF %p: Siri asset info: %@
MQF %p: loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
MQF %p: Failed to load identity properties. error: %{public}@
ModelShimRequest
MQF - loadPlaybackContext - SiriAssetInfo results contain items not in the queue startItemIdentifiers=%{public}@ storeItems=%{public}@
MQF %p: itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
MQF %p: [BackgroundTasks] %{public}@ Expired.
MQF %p: [BackgroundTasks] %{public}@ Background Task Failed to Start.
MQF %p: [BackgroundTasks] %{public}@ Start [%lu]
MQF %p: [BackgroundTasks] End [%lu]
ModelRadioPersonalizationRequest
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
PlayActivityFeedEventConsumer %p: _handleItemResumeEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPositionJumpEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPauseEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemEndEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleApplicationTerminationEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueItemIdentifier - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find accountIdentifier event=%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier for delegated playback] - event:%{public}@ - cursor:%{public}@
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
com.apple.mediaplaybackcore.videodebug: %@
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %{public}@
Deallocating future that wasn't finalized or invalidated: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
[%{public}@]-MPCPlayerItemConfigurator %p - Setting EQ to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - Processing user default audio quality change
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reloading all queued items] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reconfiguring all queued items & player] - items:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayer setup: %{public}@ - currentItem: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving audio formats - item:%{public}@ - error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - No audio formats in HLS session data [Setting up player item using preferred audio asset type] - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Audio formats available in HLS session data [Setting up player item] - item:%{public}@ - Preferred format:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - AVPlayerItem setup:%{public}@ - item:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error retrieving HLS metadata - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AL] - Error decoding HLS metadata [Clearing audioFormatsDictionary] - Error:%{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Route changed to %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no player item]
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no preferred format on item] - item: %{public}@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - Preferred audio format changed [configuring player item] - item:%{public}@ - downloaded:%{BOOL}u - audio format: %@ -> %@
[%{public}@]-MPCPlayerItemConfigurator %p - [AF] - AVPlayerItem setup: %{public}@ - item:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Screen mirroring is on for an audio item - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - We prefer buffered audio over url flinging for audio items - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
[%{public}@]-MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Dispatching %{public}@ command to destination: %{public}@
Command %{public}@ to destination: %{public}@
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Send to originating device: Not remote controllable.
Send to originating device: Unable to discover
Cannot send command: no output devices specified in destination: %{public}@
Cannot decode active identity
Searching for output devices matching UIDs: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Sent %{public}@ to %{public}@
Sent %{public}@ to %{public}@: %{public}@
Send to external destination: No matching account.
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
queueController %p: clearUpNext: reloading items [queue updated]
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
queueController %p: finalizeStateRestorationWithCompletion: restored dataSource=%p section=%{public}@
section=%{public}@
QC-FinalizeDataSource
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
reasons=%{public}@
QC-FinalizeDataSource-Original-Rectify
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: moveContentItemID: reloading items [update for move after]
queueController %p: moveContentItemID: reloading items [update for move before]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: reset
queueController %p: reset disconnecting interposingHost on dataSource: %{public}@
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: removeContentItemID: reloading items [update removed item]
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
[ITFIT] queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID mismatch] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: [missingIDSet intersects nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
queueController %p: itemToFollowItem: [missingIDSet does not intersect nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
[ITFIT] queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
[ITFIT] queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [no enumerated items]
queueController %p: didReachEndOfQueueWithReason: calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: didReachEndOfQueueWithReason: publisher.leaveSharedSession complete status=%{public}@
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: sessionDidEnd: [InterposingHost] calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] publisher.leaveSharedSession complete status=%{public}@
queueController %p: jumpToItem:inSection: ignoring request to jump to item that is already current [InterposingHost] currentContentItemID=%{public}@
queueController %p: jumpToItem:inSection: setting nextContentItemID [InterposingHost] nextContentItemID=%{public}@
queueController %p: jumpToItem:inSection: reloading items [jump to item]
queueController %p: jumpToItem:inSection: failed [content item not in SIL] contentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to queueCoordinator:itemToFollowItem:] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [rootItem for offset zero] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [returning nil] contentItemID=%{public}@ jumpToItem=%{BOOL}u reachedEnd=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to _contentItemIDWithOffset:%ld] item=%{public}@
queueController %p: updatePlayerPlaybackCoordinator: %@
queueController %p: _queueIDPairForIdentifierListIDPair: failed to convert to queueID [dataSource did not have containerInfo] inSharedListeningMode=YES itemIdentifier=%{public}@
queueController %p: _identifierListIDPairForQueueIDPair: failed to convert to identifierListID [invalid container ID (queueSectionID)] inSharedListeningMode=YES queueIDSection=%{public}@ queueIDItem=%{public}@
queueController %p: _addPlaybackContext: reloading items [interpose queue modification] keepCurrentItem=NO
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addPlaybackContext: [entering shared listening mode] SLQF=<%{public}@ %p>
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: adding dataSource=%p section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: _emitEventsForItemChangeFromItem:toCurrentItem: skipping MPCPlaybackEngineEventTypeContainerBegin [placeholder container] containerIdentifiers=%{public}@
queueController %p: _highQualityMusicStreamingOnCellularDidChange: reloading items [pref changed] keepCurrentItem=YES
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@ identifierListSection=%{public}@
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [tailPlaceholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [datasource specified placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item from previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item not from current nor previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [failed to create item] missingContentItemID=%{public}@
queueController %p: _removeContentItemID: load items if needed [preloading] section=%{public}@
queueController %p: _removeContentItemID: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
MPCQueueController: _soundCheckEnabledChangedNotification soundCheckEnabled=%{BOOL}u
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: AutoPlay disabled in bag
queueController %p: _transitionToAutoPlayState: reloading items [invalidateQueue] keepCurrentItem=%{BOOL}u
queueController %p: autoplay loading [triggered]
[SLQF] %p loadPlaybackContext:completion [allocating live link] liveLink=%p sessionID=%{public}@
[SLQF] %p loadPlaybackContext:completion [reusing live link] liveLink=%p sessionID=%{public}@
[SLQF] %p removeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown beforeItemID] beforeItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown afterItemID] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: [ignoring unknown itemID, adding to beginning] afterItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [received direct current item change while PlayNow request in flight] startItemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: overriding startItemID [server omitted startItemID] startItemID=%{public}@ resolvedStartItemID=%{public}@
[SLQF] %p didJumpToItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p liveLink:didEncounterError: [attempting retry] error=%{public}@
[SLQF] %p liveLink:didEncounterError: [not attempting retry] error=%{public}@
[SLQF] %p liveLinkDidReconnect
[SLQF] %p liveLink:didUpdateParticipants: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didUpdateQueue: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didReceiveDirectCurrentItemChanged:fromParticipant: [setting shouldRefreshBeforeActive] state=%{public}@ deferredCurrentItemID=%{public}@ participant=%{publich}@
[SLQF] %p liveLink:didReceiveEvent: [converted to MPCSharedListeningEvent] icEvent=%{public}@ mpcEvent=%{public}@
[SLQF] %p liveLink:didReceiveEvent: dropping event  [state not Active] state=%{public}@ event=%{public}@
[SLQF] %p playbackCoordinator:identifierForPlayerItem: [ignoring unknown itemID] itemID=%{public}@ avPlayerItem=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [expired] action=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [no such item] missingItemID=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [placeholder item] idSet=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [satisfied] action=%{public}@
[SLQF] %p _enqueuePendingActionWithLabel: enqueuing action=%{public}@
[SLQF] %p _ICSharedListeningForMPSILItemIdentifier [unknown SIL ItemID] id=%{public}@ IDRegistry=%{public}@
[SLQF] %p _MPSILItemIdentifierForICSharedListeningItemIdentifier [unknown SharedListening ID] id=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentAdded item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReordered item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReplaced item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=Reaction item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [unknown item] event=Reaction itemIdentifier=%{public}@
[SLQF] %p _sectionedCollectionForQueue: nil value for ICSharedListeningItem playbackParams["kind"]
[SLQF] %p _sectionedCollectionForQueue: unhandled value for ICSharedListeningItem playbackParams["kind"]=%{public}@
[SLQF] %p _updatePlayerLiveLinkConnection _playbackCoordinator=%{public}@
[SLQF] %p _transitionToState: from=%{public}@ to=%{public}@
[SLQF] %p callSuperLoad failed to get expectedCurrentItem error=%{public}@
PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
Setting %{public}@ EQ to %{public}@}
Setting up EQ for %{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: nil item received [Queue failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Failed to queue any items] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure - nil item] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Ending playback [Entire queue failure]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has not yet succeeded [Adding to queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has succeeded for at least one item [Ignoring queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Stopping playback for a first item or unrecoverable error. error=%{public}@
_MPCAVController %p - playbackHasStartedForItem: [marking play as successful] item=%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackHasStartedForItem] playerID=%{public}@ item=%{public}@
MPCPlaybackEngine: -[AVAudioSession setCategory:%{public}@ mode:%{public}@]
MPCPlaybackEngine: Unable to set audio session category to %{public}@: %{public}@. Retrying in 1s.
AVController: queue boundary, restarting queue [%{public}@]
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
MPCPrivateListeningStateSource %p - Value from MPHomeUserMonitor privateListeningEnabledForCurrentUserAndAccessory - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: Failed to load private listenting value from account. err=%{public}@
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No matching account for dsid=%{private}@ (enabling private listening as the fallback)
MPCPrivateListeningStateSource %p - _loadCurrentValueFromIdentityProperties: No userMonitor for account with identifiers=%{private}@ (using MPHomeUserPreferencePrivateListeningFallbackValue)
[KAOS] <%p> Resolved devices: %@
[KAOS] <%p> Sending discovered local endpoint to caller
Modify context: slow error: %{public}@
Modify context: slow
[KAOS] <%p> Routing to devices
[KAOS] <%p> Routing completed with error %@
Discover devices of group: %{public}@
Discover devices: %{public}@
[KAOS] <%p> Sending default local endpoint to caller
Discover logical devices: %{public}@
Using local endpoint.
Not a home theater.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, failing because device requires command redirection
No discovered endpoint, use local
Searching for endpoint, pilot %{public}@
Searching endpoint for leader: %{public}@
Pair is not group leader. Endpoint: %{public}@
No discoverable pair
Not being airplayed to
Not a stereo pair
Failed to set output devices on primary endpoint: %{public}@
[MPCReportingPlaybackObserver] DidReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification Item will change from: %p to: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, playbackState=%d, updatedPlaybackState=%d, willIgnoreItemChangeNotification=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification did not find valid end reason to post event
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification oldPlaybackState == playbackState (%d) - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification currentItem: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, oldPlaybackState=%d, playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _hasPendingContainerChange=%{BOOL}u, shouldPostPlayEndEvent=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification ignoring notification - playback state=%d, _isReloadingWithPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemDidChangeWhenReloadingPlaybackContextNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
Audio tap reported samples before we had an appropriately sized buffer
sharedListeningTracklist:modelRequest:perform
items=%lld; error=%{public}@
[SLQF] %p getSharedListeningTracklist unexpected failure [intersectsSet returned NO] startItemIdentifiers=%{public}@ itemIdentifierSet=%{public}@
section=%ld
sharedListeningTracklist:modelRequest:scramble
items=%lld
sharedListeningTracklist:modelRequest:enumerate
[SLQF] %p getSharedListeningTracklist failed (1/3) [invalid start item IDs] startItemIdentifiers=%{public}@
[SLQF] %p getSharedListeningTracklist failed (2/3) [invalid start item IDs] request=%{public}@
[SLQF] %p getSharedListeningTracklist failed (3/3) [invalid start item IDs] response=%{public}@
[SLQF] %p getSharedListeningTracklist [dropping unsupported IDs] unsupportedIDs=%{public}@
[AL] - MPCAudioAssetTypeSelector - Starting Audio type selection [from preferences] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - No enhanced audio available on this store front
[AL] - MPCAudioAssetTypeSelector - Audio type selection [from preferences]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from preferences & route]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting audio format selection [from preferences & route] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from audio asset type & route]: %{public}@
MPCExplicitContentAuthorizationManager %p - Music Video playback is not allowed for item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ status=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Could not find metadata dictionary in the payload. Will default to store platform response
[MPCModelStorePlaybackItemsRequest] Found metadata dictionary (%{public}@), but unexpected format
[MPCModelStorePlaybackItemsRequest] Siri asset info has payload type=%d.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
Siri asset info contains %lu assets.
Siri asset info resulting in preferred shuffled starting with identifier=%{public}@
Siri asset info expected to have results dictionary, found %{public}@ instead.
Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info relevant to HLS playback: item %ld - audioTraits: %{public}@ - assetURLs keys: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info - Updating response for item %ld with HLS info: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info %{public}@ HLS asset info
Failed to import payload - error=%{public}@.
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVS: Executing create database statement: %{public}@
EVS: Unable to create events table. statement: '%{public}@' error: %{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: invalidate: Removing database at url=%{public}@ error: %{public}@
EVS: invalidate: Removing database at url=%{public}@
EVS: addConsumer consumer=%{public}@:%p
EVS: removeConsumer %{public}@:%p
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: emitEventType - Dropping event. (EVS is invalidated) time=%{time_t}zd type=%{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVS: lastEventsWithCount - returning empty array. (EVS is invalidated)
EVS: Unable to retrieve contents of directory. url=%{private}@ error=%{public}@
EVS: Removing database package at url=%{public}@ error: %{public}@
EVS: Removing database package at url=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: cancelSubscription consumer=%{public}@:%p
EVS: flushEvents consumer=%{public}@:%p
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
EVC: returning count of 0. (datebase invalidated)
EVC: unable to enumerate events. (datebase invalidated)
EVC: step error: %{public}@
EVC: returning nil. (datebase invalidated)
EVC: statement error %{public}@ : %{public}@
EVC: json decode error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p starting with userIdentity=%{public}@, subscriptionStatusResponse=%{public}@.
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: re-running personalization [previousResponse.isInvalidForPersonalization] previousResponse=%p userIdentity=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ requestedStoreIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: starting userIdentity=%{public}@ sectionedModelObjects=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: completing without using store metadata controller [no remaining IDs to request] unpersonalizedContentDescriptors=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p _executeWithUserIdentity: first batch complete without using store metadata controller [prioritized IDs initially loaded]
MPCModelStorePlaybackItemsRequestOperation %p initialResultHasItemsWithPlaybackAuthorizationToken=%{BOOL}u, useMediaAPILookup=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p starting to load container item metadata using Media API endpoint (shouldBatchResultsWithPlaceholderObjects=%{BOOL}u
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionItemRequest=%p with totalItemCount=%d]
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for collectionRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemMetadataRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemMetadataRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p Adding progress for renewalRequest=%p with totalItemCount=%d]
MPMediaAPICollectionItemAuthTokenRenewalRequest %p finished with response=%p (hasReceivedFinalResponse=%{BOOL}u, isFinalBatchResponse=%{BOOL}u), error=%{public}@, fractionCompleted=%f, unitsCompleted=%lld]
MPCModelStorePlaybackItemsRequestOperation %p finishing MPMediaAPICollectionItemAuthTokenRenewalRequest=%p
MPCModelStorePlaybackItemsRequestOperation %p all requests have finished]
MPCModelStorePlaybackItemsRequestOperation %p requesting store metadata for %ld items itemIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p got response=%p for SP request=%p with error=%{public}@ 
MPCModelStorePlaybackItemsRequestOperation %p got subscription status=%{public}@ for identity: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
[AL] - %{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
[AL] - %{public}@: Skipping redownload asset request [offline]
[AL] - %{public}@: Performing media redownload request...
[AL] - %{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Unable to extract valid load result from extracted media redownload asset response - Response:%{public}@ - Error:%{public}@
[AL] - %{public}@: Missing response item in media redownload request response
[AL] - %{public}@: Missing asset URL in media redownload request response
[AL] - %{public}@: Missing redownload parameters.
[AL] - %{public}@: Missing store request context.
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
setting stationPlaybackAuthorizationToken=%{public}@ for context=%{public}@
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from local identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - identical to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
[FPPC] engine:didChangeAccounts: removing account=%{public}@
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
fetched lease
already had lease
fppc:fetchMiniSINFs
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@
fppc:fetchMiniSINFs:account
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
hasMoreAssets=%{BOOL}u
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [subscription type is glide]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
account=%{public}@ error=%{public}@
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
StateRestore
PSP: Requested playback state preservation for player: %{public}@
StateRestore-WaitingForAccounts
StateRestore-MRCheck
shouldRestore=%{BOOL}u
didRestore=%{BOOL}u
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u
PSP: Clearing state restoration identifier for player: %{public}@ [state restoration failed]
PSP: Skipping playback state preservation for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state preservation for player: %{public}@
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
Starting playback preheating...
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
Using new playback engine
Using legacy playback engine
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MRCPPC: Registering for endpoint topology changes with unresolved player path: %@, endpoint identifier: %@
MRCPPC: Received endpoint invalidation for unresolved player path: %@.
[Lease] - MPCLeaseManager: %p - prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
[Lease] - MPCLeaseManager: %p - prepareForPlayback: preparing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [no subscription lease session] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: renewing lease account: %@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished error: %{public}@
[Lease] - MPCLeaseManager: %p - prepareForPlayback: finished
[Lease] - MPCLeaseManager: %p - Can steal lease if needed
[Lease] - MPCLeaseManager: %p - engine:didChangeToState: - Received user interaction event - state:%lu
[Lease] - MPCLeaseManager: %p - State for lease playback prevention [evaluation] - item:%{public}@ - shouldPreventPlayback:%{BOOL}u - playbackState:%ld - isPlaying:%{BOOL}u
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [pending reasons %{public}@]
[Lease] - MPCLeaseManager: %p - Ignoring lease playback prevention [lease being acquired] - item:%{public}@
[Lease] - MPCLeaseManager: %p - Pausing [current item (%{public}@) requested playback prevention]
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engine:didPauseForLeaseEndWithError:] - item: %{public}@ - userInfo: %{public}@
[Lease] - MPCLeaseManager: %p - Notifying delegate of lease prevention [engineDidPauseForLeaseEnd:] - item: %{public}@
[AccountManager] - Dropped account refresh because too many (%{public}ld) attempts have been made
UpdateAccounts
[AccountManager] - Clearing glide subscription data for %{public}@
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Updated accounts [silent]: %{public}@
[AccountManager] - Refreshing due to previous timeout
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
[AccountManager] - will purge playback authorization tokens for %{public}@ as subscription status has changed (new status= %{public}@)
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForMetadataItems: Well-defined string script data corresponding to %{public}@ not found [returning nil] metadataItems=%{public}@
Error serializing JSONObject with scriptData. error=%{public}@ scriptData=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForScriptData: Well-formatted V1 scene script not found [returning nil] JSONObject=%{public}@
Cannot decode override user identity. Using active account.
[Lease] - MPCLeaseController: %p -  Requesting lease for %{public}@
[Lease] - MPCLeaseController: %p -  Relinquishing lease for %{public}@
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p -  Discarding returned item and requesting a new one [item cannot be reused] - Discarded item:%{public}@
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
%@ (%x): %@
%@_BEGIN (%x): %@
%@_END (%x): %.3fs %@
%@_END (%x) CANCELLED: %.3fs %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Error encoding route UID: %{public}@
Unexpected LOCAL_DEVICE identifier.
Error decoding route UID: %{public}@
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
MPCAssistantEncodings (decode): could not decrypt: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@
discovering UIDs: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
no application on target
removing devices from origin %{public}@
remove failed with error: %{public}@
force remove for output devices: %{public}@
result: %{public}@
completed error: %{public}@
completed
Send Command: %{public}@
[KAOS] <%p> sendCommandWithResult %@
Encoding device IDs: %{public}@
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
[KAOS] <%p> Completing with error %@, commandResult: %@
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
[KAOS] <%p> Sending command %@ to destination %@ endpoint %@
[KAOS] <%p> Command %@ completed with result: %@
[KAOS] <%p> Checking existing devices on target endpoint: %@ 
[KAOS] <%p> Creating hosted endpoint for local because we have unmatched existing devices: %@ 
[KAOS] <%p> Removing unmatched existing devices: %@ 
[KAOS] <%p> Removal completed with error %@ 
[KAOS] <%p> Found suitable endpoint %@ 
Expected to find devices for destination %@, but none found.
[KAOS] <%p> Create hosted endpoint for routes %@ 
Command completed
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
[MPCAssistantCommand sendPlaybackQueueWithResult:toDestination:withOptions:] - No MPHomeUserMonitor with userIdentifier=%@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Originating device destination: %{public}@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Found Default Destination: WHA Group ID %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
[MPCAssistantGetVolume] Completing with error: %{public}@
MPCItemBookmarker %p - Previous loaded item bookmark data updated %{public}@ - PlaybackStoppedTime:%.2fs
MPCItemBookmarker %p - Current loaded item bookmark data updated %{public}@
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
Unbalanced call `_setupBoormarkingTimerForItem/`tearDownBookmarkingTimer` [Check the logs] - Item %{public}@
RQF %p: Updating current item: %{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
rqf:loadPlaybackContext
allowsRadioService=%d error=%{public}@
allowsRadioService=%d
rqf:loadPlaybackContext:allowsRadioService
RQF %p: loadPlaybackContext: context=%{public}@, Siri asset info:%@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
reasonType=%d
rqf:loadPlaybackContext:getTracks
reasonType=%d error=%{public}@
rqf:loadPlaybackContext:getHistory
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
rqf:reloadSection
rqf:reloadSection:diff
rqf:reloadSection:apply
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
[BackgroundTasks] %{public}@ Expired [%lu]
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
RQF %p: _defaultGetTracksRequestWithContext: failed to get userMonitor for dsid=%{private}@
RQF %p: _defaultGetTracksRequestWithContext: userMonitor=%p for dsid=%{private}@ allowExplicit=%{BOOL}u
rqf:detectSignOut:getUserIdentityProperties
didSignOut=%{BOOL}u error=%{public}@
didSignOut=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: clearing tracklist [nil active account]
[BackgroundTasks] %{public}@ End [%lu]
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
 error=%{public}@
rqf:_handlePersonalizationResponse
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
RQF %p: adding get tracks operation operationCount=%lld
RQF %p: personalization response is invalid
rqf:_removeAllTracks:diff
rqf:_removeAllTracks:apply
RQF %p: Removing %ld restricted tracks from section
changes=%{public}@
rqf:_removeRestrictedTracks:diff
rqf:_removeRestrictedTracks:apply
applying
FirstAudioFrame event doesn't have preceeding QueueAdd event (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event doesn't have recognizable preceeding SetPlaybackQueue and Play events (eventID:%{public}@ item:%{public}@ %{public}@)
FirstAudioFrame event is of a following item in queue (eventID:%{public}@ item:%{public}@ %{public}@)
identifier: %{public}@
LoadSession
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
timeout
LoadSession-Finalize
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [InSharedListeningMode] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to get artwork with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed to encode with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@ error: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [out of disk space] deleted old archives attempting to save again
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: created archive identifier=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
MPCSharedListeningPlaybackIntentDataSource.m
Deallocated without calling live link completion
Build shared intent timeout
Live link connection failed
Canceling intent loading because live link already had content %@
Unexpected state transition %@ -> %@
Content type is not supported in live link
Missing required parameters (tracklist) [error == nil]
Unknown
WaitingOnSourceAndLinkToSendQueue
SourceFailed
LiveLinkFailed
InitialQueueSending
InitialQueueFailed
BuildSucceeded
BuildTimedOut
Unknown/state=%ld
Loading
FailedToLoad
Loaded
Connecting
Failed
WaitingForFirstQueueUpdate
WaitingToSendQueue
%@ %@
mediaType
identifierSet
excludeFromShuffle
_MPCPlaybackEngineMediaFrameworkImplementation
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
Q8@?0
Playback engine implementation no longer exists
Unable to find a start item in the playback context %@
Playback engine stack has not been setup yet. Set a playback queue first before calling %s.
-[_MPCPlaybackEngineMediaFoundationImplementation replaceCurrentItemWithPlaybackContext:identifier:completionHandler:]
Playback engine implementation no longer exist
InternalPauseWithFadeout_%@
InternalEndPlayback_%@
-[_MPCPlaybackEngineMediaFoundationImplementation playWithRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithFadeout:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseForLeasePreventionWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation togglePlaybackWithIdentifier:completion:]
Attemping to toggle playback with incompatible state - CurrentState:%@
-[_MPCPlaybackEngineMediaFoundationImplementation skipWithDirection:identifier:completion:]
next
previous
-[_MPCPlaybackEngineMediaFoundationImplementation beginScanningWithDirection:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation endScanningWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation setRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation jumpToTime:identifier:completion:]
_MPCPlaybackEngineMediaFoundationImplementation.m
_setupPlaybackStackWithPlaybackEngine failed to create a new MFPlaybackStackController
playbackState
currentItem
currentRate
currentTime
targetRate
MediaFoundationStack
engineID
Invalid parameter not satisfying: %@
item == nil || [(MPAVItem *)item isKindOfClass:[MPAVItem class]]
AVMusicAppBehavior
Queue Controller Contents Changed
Error resolution paused
previous == nil || [(MPAVItem *)previous isKindOfClass:[MPAVItem class]]
current == nil || [(MPAVItem *)current isKindOfClass:[MPAVItem class]]
source == MFItemChangeSourceQueue
queueItem != nil
MFAudioSessionConfiguration
%0.9fs
Unspecified explanation
Play Queue Identifiers Changed
Item Changed: 
Content item completed without error or value: %@
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
v32@?0@"NSString"8Q16^B24
Failed to get play queue identifers
Playing Identifier Changed
Failed to get playing identifier
v16@?0@"MPNowPlayingContentItem"8
Queue Identifier Changed
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ [repeatIteration=%ld] %@
%lli
%@: Missing DSID in delegated identity properties - skipping playback
 not
video
audio
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
Missing subscription for playback
Missing playback authorization token for playback
CRABS
DisableOptimizeAccessForLinearMoviePlayback
com.apple.mobileipod
match
purchaseHistory
isPlaceholder
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
host mismatch
path mismatch
v16@?0@"MPModelFileAsset"8
com.apple.MediaPlayer.MPCModelGenericAVItem.streaming_playback.
wifi.
@"ICURLSession"8@?0
availableMediaCharacteristicsWithMediaSelectionOptions
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
q24@?0@"MPCPlayerAudioFormat"8@"MPCPlayerAudioFormat"16
v16@?0@"ICMusicSubscriptionLeaseSession"8
stream-provider-id
AssetLoadingBug
setupWithPlaybackInfo.isAssetLoaded==NO
setupWithPlaybackInfo._asset==nil
Oasis
playEvent
item
album
ModelBug
album.traits=nil
playlist
playlist.traits=nil
@16@?0@"MPCPlayerAudioFormat"8
/Library/Caches/com.apple.xbs/Sources/MediaPlayer_Sim/MobileMusicPlayer-4019.500.40/MediaPlaybackCore/Engine/Implementation/Model/MPCModelGenericAVItem.m
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v24@?0@"MPModelSong"8@"NSError"16
AlwaysUse64kbpsQuality
AlwaysUse256kbpsQuality
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
q24@?0@"NSString"8@"NSString"16
%@=%@,
v32@?0@"NSString"8@"NSNumber"16^B24
v32@?0@"NSString"8@"NSString"16^B24
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
info
com.apple.radio.ping.jingle
%@,%ldkbps,%ld
%@,%ldkhz,%ld
Unspecified
Progressive
HLS [stereo]
HLS [spatial]
HLS [lossless]
HLS [hr lossless
lossless
high-res lossless
spatial
atmos
surround
None
Cellular
Bluetooth
WiFi
Bridged WiFi
Wired Ethernet
Other
%c%c%c%c
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
containerIndex
itemIndex
v28@?0^v8@"NSString"16f24
com.apple.MediaPlaybackCore/logging
q24@?0@"MSVFrameworkDescription"8@"MSVFrameworkDescription"16
<unknown>
kMRMediaRemote
Bag [%.3fs]
Lease [%.3fs]
SuzeLease [%.3fs]
MediaRedownload [%.3fs]
SubscriptionAssetLoad [%.3fs]
route: %@ (%@), 
eqPreset: %d
, soundCheckVolumeNormalization: %.3f
, loudnessInfo: %@
Stopped
Waiting
Playing
FailSilently
StopPlayback
RetryLastAction
Unreachable
Likely Reachable
Reachable
Device
Account
Queue
File
Home Sharing
Asset Info Cache
Server Object Database (SINF)
Server Object Database (MiniSINF)
Server
Unsupported
No player found for %@
Unexpected implementation class found: %@
# Player: %@
## PlaybackStack
MPCModelStorePlaybackItemsRequestAccumulatorItemIdentifierSetKey
MPCModelStorePlaybackItemsRequestAccumulatorCollectionPlaybackAuthorizationTokenKey
v32@?0@"NSIndexPath"8Q16^B24
v32@?0@"MPModelGenericObject"8Q16^B24
MPCModelStorePlaybackItemsRequestAccumulator.m
Unknown playlist entry: %@
@32@?0@8q16^B24
Found unplayable object in SOD: %@
@32@?0@8@"NSIndexPath"16^B24
Attempting to populate items for non model object: %@
v24@?0Q8^B16
Unknown item to request metadata
section playbackAuthorizationToken cannot be nil
Unknown request type = %d
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
com.apple.MediaPlaybackCore/Siri
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
contentType
Duration
refId
endTimeReciever
 playerPath=%@
delegateInfoID
contentItemID
storeAdamID
storeSubscriptionAdamID
cloudID
purchaseHistoryID
cloudUniversalLibraryID
playbackAuthorizationToken
@"MPMusicPlayerControllerNowPlaying"16@?0@"NSString"8
No item provided to setNowPlayingItem
Unable to play item %@
PlayItemInQueue is currently not enabled or the playback engine is not ready
%@:%@ did not provide image data.
%@:%@ does not support artwork.
Queue descriptor was not provided.
Queue was interrupted by another queue
Preparing queue timed out
iapd
Failed to prepare to play
SetPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for prepend
InsertIntoPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for append
_MPCMusicPlayerControllerServer.m
performQueueModifications is not supported for the system music application
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
Failed to apply queue modifications
Prepare queue failed with unexpected start item
DelayMusicServerConnection
MPCMusicPlayerControllerServer
flavor IN %@ AND streamURL != nil
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
Playback response has no valid file asset: %@
<%@: %p %@>
allows caching: %@
HLS: %@
cloud streaming: %@
online keys required: %@
path extension: %@
audio asset type: %@
downloaded: %@
Overview
Purchase bundle dictionary
assetURL
alt. HLS playlist URL
protected content support storage URL
URLs
key certificate URL
key server URL
alt. HLS key certificate URL
alt. HLS key server URL
key server protocol type
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
@"MPArtworkCatalog"16@?0d8
app.music.media-clip
tracks
com.apple.MediaPlaybackCore.playbackSession-v3.opack
com.apple.MediaPlaybackCore.playbackSession-v4.opack
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
_MPCSkipNextStateRestoration
Cannot leave shared session [not in shared session] queueController=%@
LeaveSharedSession is not supported in the legacy engine
Failed to end playback
Failed to load previous session
Unable to restore state [no state restoration session ID]
now_playing
Delegate failed to call completion for prepareForActivationWithCompletion:
v24@?0@?<v@?>8@?<v@?@"NSError">16
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
_MPCMediaRemotePublisher.m
Playback engine implementation is nil
v16@?0@?<v@?B@"NSError">8
Failed to build fallback playback context from intent %@
Failed to load fallback playback context %@
Failing due to no content in the player and no fallback intent.
v16@?0@"MPRemoteCommandCenter"8
com.apple.Music.queue
%@&currentItem=%@
No queueController
com.public.text
com.apple.Music.events
 (%@)
kMRMediaRemoteOptionSenderID
mediaserverd not available to perform command
Failed to activate audio session
Failed to playWithRate:1.0
v20@?0B8@"MPRemoteCommandStatus"12
Failed to pauseWithFadeout:%g
Cannot pause because there is no current item.
Cannot toggle play/pause because audio session activation failed.
Failed to toggle playback
Current item forbids skipping backwards: %@
Current item forbids skipping forwards: %@
Cannot play item in queue due to item policy
Cannot find item by trackID: %lld
newPlaybackImplementation must implement skipWithDirectionShouldJumpToItemStart:
Failed jumpToTime:%lf
endOfQueuePause_%@
nextTrack
Failed to begin rewinding
Failed to begin fast-forwarding
Attempting to stop scanning without scanning
Failed to end scanning
Failed to jumpToTime:%g
Cannot jumpToTime without a current item.
Cannot modify queue with playback authorization token protected content
SharedQueue feature requires a subscription
Failed to build playback context from queue: %@
Cannot modify queue due to iAP lockout
Failed to insert playback context: %@
Insert operation indicated specific insertion position type, but no content item ID provided.
Failed to move item: %@
Unsupported repeatType %ld
Failed to remove item: %@
Cannot find item to remove: %@
Account is not authenticated: %@
Account failed to prepareToPlay: %@
Cannot override mutated queue without override.
Failed to verify play queue: %@
Failed to load playback context: %@
Failed to reload playback context: %@
siri
Failed to build radio context from playback intent: %@
Failed to build intent into playbackContext: %@
Failed to add radio station to queue: %@
Failed to get radio intent from song: %@
Cannot create station with seed item without current item
Failed to finalize queue controller
No current item or session load failure: %@
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
Failed to decode queue data
Unsupported sessionType %@
Command did not contain queue data.
session does not exist for identifier: %@
ignoring unimplemented non-immediate priority: %ld
Cannot find session with identifier: %@
Unable to find item to add to library: trackID=%lld currentItem=%@
Failed to setRate:%g
Failed to share queue [no current item]
Unable to build shared queue tracklist from current queue.
com.apple.music.live-link-identity-json
Failed to build shared queue intent from current queue.
?id=%@&key=%@
com.apple.music.shared-session-url-components
v24@?0@"MPCPlaybackIntent"8@"MPCPlayerCommandStatus"16
Unsupported command event: %@
requestImageWithCompletionHandler: called with nil image.
Transportable representations only available for queue controller.
Session contains non-transportable content
subscription
cloudLibrary
storeFront
voiceOnly
Added
Addable
AddableSomeExplicitContentRestricted
UnaddableAllExplicitContentRestricted
UnaddableCloudLibraryRequired
UnaddableCloudLibraryInitialImport
UnaddableLibraryAddIneligibleContent
UnaddableInvalidContentType
UnaddableSubscriptionAccountLinkingRequired
UnaddableSubscriptionRequired
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v16@?0@"MPModelPlaybackPosition"8
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
Downloaded
Cached
com.apple.MediaPlaybackCore
NSBundle+MediaPlaybackCore.m
unable to find MediaPlaybackCore framework
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Assistant
Middleware
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Preferences
Reporting
QueueController
QueueController_Oversize
SDKPlayback
SDKPlayback_Oversize
Session
Delegation
Video
SharedSession
Analytics
Analytics_Oversize
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
Sharedlistening playback context cannot be used for remote set queue.
Unexpected queueController class found: %@
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
lossy stereo
AssistantPlaybackQueue
AssistantRemoteControlDestination
CommandOptionsIdentifier
v40@?0@"NSUserActivity"8@16@"NSString"24@?<v@?@"NSString"@"NSData"@"NSError"B>32
deviceGUID
deviceName
systemReleaseType
requestUserAgent
privateListeningStateSource
storeAccountID
timeZone
 source=%@
MPCPlaybackIntent.m
completion
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
%@ did not produce representative model object or error
modelObject
No matching properties for reprentative object: %@
v24@?0@"MPModelGenericObject"8@"NSError"16
Metadata Object did not produce nowPlayingInfo: metadataObject=%@ contentItem=%@
original
sessionID
supplemental
<ARCHIVE LOADER>
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
v16@?0@"<MPMutablePlaybackArchive>"8
Cannot handle unknown generic object metadata.
Expected a flattened generic object.
com.apple.MediaPlayer
SEASON_DISPLAY_FORMAT_%@
Cannot handle unknown playlist entry when capturing metadata.
skey
<%@ %p: sessionID=%@>
radioStationID
radioStationURLString
seedContentReference
nowPlayingContentReference
accountInfo
playActivityFeatureName
playActivityQueueGroupingID
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
PlaybackEngine.implementation.currentItem.type didChange
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
Playback State Changed
v16@?0@?<I@?>8
Failed to get playback state
playbackStateFuture=%@
isExecuting
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
isFinished
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
MPCAssetLoadingOperation - Asset loading failed [AVPlayerItem status failed] - Item:%@
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssetLoader.m
MPCAssetLoader must have a configurator set to work properly
Attempting to load an item which has no loadable asset: %@
v32@?0@"MPAVItem"8q16@"NSError"24
RadioAvailabilityController
/System/Library/PrivateFrameworks/Radio.framework/Radio
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
Store Front Local Equivalency Metadata Response Finished
v16@?0@"MPModelGenericObject"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelTVSeason"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
v16@?0@"MPCPlayerCommandStatus"8
<%@: %p commands=(%@)>
B16@?0@"MPCPlayerCommandStatus"8
No commands provided.
MPCPlayerChangeRequest.m
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
All requests must have the same player path.
@16@?0@"MPCMediaRemoteCommandOperation"8
label
<%@: %p command=%@>
Command was cancelled before it was performed.
Did not attempt command because dependent command failed.
Either Controller or PlayerPath is required to perform a change request.
Queue is user curated and requires override
Feature requires active subscription
Unsupported content type
Failed to perform command %@
MPCPlayerCommandRequest player path resolution completion not called
PlayerPath did not resolve route to origin: %@
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.music.playbackqueue.sharedlistening
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
tracklistRange
playerPath
playingItemProperties
v16@?0@"ICLiveLinkIdentity<ICMutableLiveLinkIdentity>"8
B16@?0@"NSURLQueryItem"8
@"MPRemoteCommandStatus"16@?0@"MPRemoteCommandStatus"8
state
tracklist
{-%ld, +%ld}
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
Station
ContinueListening
CL_MaxQueueReferences
CL_PrefetchThreshold
StationURL
NowPlayingContentReference
SeedContentReference
PlaybackRequestEnvironment
StationPlaybackAuthorizationToken
playbackRequestEnvironment
repeat/shuffle
queueEndAction
continueListening
nowPlaying
seed
stationID
stationName
stationURL
YYYY-MM-dd HH:mm:ss.SSSXX
com.apple.MediaPlaybackCore/RTC
com.apple.MediaPlayer.MPCRTCEventConsumer
app.music.unknown
v16@?0@"RTCReporting"8
migrationPlaybackSession
nominal
error
NetworkInterfaceChange
SecureKeyLoad
SessionStart
SessionSummary
QueueLoad
ItemAssetLoad
ItemSummary
UnexpectedCategory:%d
%@ timed out
%@ deallocated
MPCAnalyticsSignpost.m
Subclass %@ must implement -%@ defined in %@.
MPCAnalyticsSignpost
MPCScriptedLooperErrorDomain
status
metadata
duration
playable
MPCScriptedLooper.m
Scene collection frame rate cannot be 0.
com.apple.Music
playbackRequestEnvironment=%@
 storeIDs=[ %@ ]
 tokens=[ %@ ]
 sectionedModelObjects=[ <%ld sections>
  %2ld <%ld items> %@: [
  %2ld,%2ld %@
    ... (%ld remaining items)
  ... (%ld remaining sections)
 trustID=[ %p ]
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
MPCModelStorePlaybackItemsRequestCodingKeyStoreIDsToPlaybackTokens
MPCModelStorePlaybackItemsRequest.m
Cannot encode MPCModelStorePlaybackItemsRequest that contains a SharedListeningQueue
_obj
<%@:%p>
playbackEngine
<NULL>
invalidationObservers
MPC_PLAY_ONLY_FOR_ME
<%@: %p title="%@" type=%@ commandRequest=%@>
DialogAction:%@
<%@: %p title="%@" message="%@" actions=%@>
<%@: %p status=%@ unknown>
<%@: %p status=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@ error=%@>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ unknown/type=%ld>
com.apple.amp.mediaplayer.playperf.FirstItem
com.apple.MediaPlaybackCore/PlayPerf
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
assetLoadWaitTime
file
http
assetLocation
assetSource
assetType
bagWaitTime
errorResolutionApplied
errorSignature
featureName
firstAudioFrameWaitTime
formatInfoBitDepth
formatInfoBitrate
formatInfoChannelLayout
formatInfoCodec
formatInfoMultiChannel
formatInfoSampleRate
formatInfoSpartialized
formatInfoTier
getTracksWaitTime
hasAccountInfo
hasGetTracksWaitTime
hasLeaseWaitTime
hasLookupWaitTime
hasMediaRedownloadWaitTime
hasOfflinePlaybackKeys
hasOnlinePlaybackKeys
hasSubscriptionAssetLoadWaitTime
hasSuzeLeaseWaitTime
hlsMetadataWaitTime
isActiveAccount
isAutoPlayEnabled
isDelegatedPlayback
isFirstPlay
isReplacingPlayback
isSharePlay
isShuffled
leaseWaitTime
lookupWaitTime
mediaPlayerTime
mediaRedownloadWaitTime
musicWaitTime
networkType
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
queueType
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfoType
sessionActivationTime
setQueueCommandSendTime
subscriptionAssetLoadWaitTime
suzeLeaseWaitTime
totalTime
@"NSDictionary"8@?0
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
OutOfMemory
SessionNotRunning
DeviceAlreadyUsedByAnotherSession
NoDataCaptured
SessionConfigurationChanged
DiskFull
DeviceWasDisconnected
MediaChanged
MaximumDurationReached
MaximumFileSizeReached
MediaDiscontinuity
MaximumNumberOfSamplesForFileFormatReached
DeviceNotConnected
DeviceInUseByAnotherApplication
DeviceLockedForConfigurationByAnotherProcess
SessionWasInterrupted
MediaServicesWereReset
ExportFailed
DecodeFailed
InvalidSourceMedia
FileAlreadyExists
CompositionTrackSegmentsNotContiguous
InvalidCompositionTrackSegmentDuration
InvalidCompositionTrackSegmentSourceStartTime
InvalidCompositionTrackSegmentSourceDuration
FileFormatNotRecognized
FileFailedToParse
MaximumStillImageCaptureRequestsExceeded
ContentIsProtected
NoImageAtTime
DecoderNotFound
EncoderNotFound
ContentIsNotAuthorized
ApplicationIsNotAuthorized
OperationNotSupportedForAsset
DecoderTemporarilyUnavailable
EncoderTemporarilyUnavailable
InvalidVideoComposition
ReferenceForbiddenByReferencePolicy
InvalidOutputURLPathExtension
ScreenCaptureFailed
DisplayWasDisabled
TorchLevelUnavailable
OperationInterrupted
IncompatibleAsset
FailedToLoadMediaData
ServerIncorrectlyConfigured
ApplicationIsNotAuthorizedToUseDevice
FailedToParse
FileTypeDoesNotSupportSampleReferences
UndecodableMediaData
AirPlayControllerRequiresInternet
AirPlayReceiverRequiresInternet
VideoCompositorFailed
RecordingAlreadyInProgress
CreateContentKeyRequestFailed
UnsupportedOutputSettings
OperationNotAllowed
ContentIsUnavailable
FormatUnsupported
MalformedDepth
ContentNotUpdated
NoLongerPlayable
NoCompatibleAlternatesForExternalDisplay
NoSourceTrack
ExternalPlaybackNotSupportedForAsset
OperationNotSupportedForPreset
SessionHardwareCostOverage
UnsupportedDeviceActiveFormat
IncorrectlyConfigured
SegmentStartedWithNonSyncSample
RosettaNotInstalled
OperationCancelled
ContentKeyRequestCancelled
UnknownAVError/code=%lld
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_TITLE
MediaPlaybackCore
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_ACTION
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
B16@?0@"NSError"8
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Informational: Command required stopping playback on a primary device.
Informational: Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
Informational: Output context modification requested no topology change
Controller Invalidated
v16@?0@"MPCMediaRemoteController"8
controllerFuture=%@
account-begin
account-rectification
account-update
application-termination
application-foreground
application-background
audio-route-changed
media-server-died
media-server-reset
time-control-status-changed
container-begin
container-end
device-changed
error-resolution
interrupt-begin
interrupt-end
audio-format-changed
asset-load-begin
asset-load-end
asset-load-info
item-begin
item-update
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-configured
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-rate-changed
item-ready-to-play
item-resume
item-timed-metadata-ping
item-key-request-begin
item-key-request-end
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-timeout
remote-control-end
session-activation-begin
session-activation-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
session-reset
shared-session-begin
shared-session-participants-changed
shared-session-synchronization-begin
shared-session-synchronization-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
audio-route
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
private-listening-source
queue-section-id
event-time-offset
error-for-resolution
resolution-type
interrupt-name
interrupt-should-resume
asset-load-error
asset-skd
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
item-audio-format-metadata
queue-item-id
radio-track-info
item-rate-change-participant-id
item-rate-change-position
item-rate-change-reason
item-rate-change-source
item-rate
item-rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
playback-behavior-metadata
network-constrained
network-expensive
network-high-quality
network-reachability
network-type
network-signal-strength
network-signal-info
queue-load-error
queue-load-networking-wait-time
queue-reporting-metadata
queue-rtc-hierarchy-token
queue-rtc-service-id
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-internal-status
remote-control-type
session-activation-error
device-metadata
session-id
session-migration-error
session-restoration-error
session-rtc-hierarchy-token
time-control-status
time-control-status-reason
queue-account-id
queue-description
queue-delegated-account-id
queue-delegated-account-metadata
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
application-source-version
application-uuid
device-guid
internal-carry
media-frameworks
user-agent
queue-grouping-id
feature-name
reco-data
siri-ref-id
siri-wha-metrics
playback-context-class-name
item-duration
item-has-video
item-initial-position
item-start-boundary
item-end-boundary
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
item-asset-source
item-asset-location
item-asset-type
item-asset-endpoint-type
item-asset-has-offline-keys
item-asset-has-online-keys
item-asset-is-delegated-playback
item-asset-is-subscription-content
item-asset-bag-wait-time
item-asset-lease-wait-time
item-asset-redownload-wait-time
item-asset-subscription-load-wait-time
item-asset-suze-lease-wait-time
active-format
active-format-justification
alternate-formats
target-format
preferred-tiers
route
repeat-type
shuffle-type
autoplay-mode
shared-session-id
local-user-identifier
participants
originating-participant
shared-sync-error
item-configured-eq
item-configured-sc-vol-normalization
item-configured-loudness
hls-metadata-wait-time
MPCPlaybackEngineEventMonotonicTimeWithHostTime
MPCPlaybackEngineEvent.m
time.machAbsoluteTime > machAbsoluteTime
type
payload
identifier
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
com.apple.MediaPlaybackCore/ABC
command:%@
%.3f
Performance
CommandTimeout
Supported Commands Changed
v16@?0@"<MPCSupportedCommands>"8
Failed to get supported commands
supportedCommandsFuture=%@
com.apple.hls.audioAssetMetadata
_skippedMetadata
controller
MPCMediaRemoteMiddleware.m
Could not find content item at indexPath: %@
@16@?0@"MPNowPlayingInfoAudioFormat"8
MPCError
UnableToPerformRequest
UnsupportedCommand
MissingBag
UnknownCustomQueueIdentifier
MissingTracklistData
MissingModelRequest
DelegatedAccountCreationFailure
MissingCreationPropertiesData
InvalidSuzeLeaseSessionToken
CellularRestricted
NetworkUnavailable
ExceededBagFileSizeLimit
FailedToDecodePlaylistManagerArchive
RequestTimeout
InvalidResponse
InvalidDelegatedIdentity
SubscriptionRequired
MissingSubscriptionAdamID
MissingLeaseSession
MissingLocalFilePath
AssetQualityTooLow
InvalidCachedAsset
InvalidAssetURL
AssetUnavailable
MissingRedownloadParameters
MissingStoreRequestContext
SubscriptionRequiredForSharedQueue
Cancelled
MissingArtwork
SubscriptionLeaseTaken
ExplicitContentRequiresAgeVerification
ExplicitContentIsNotAllowed
ExplicitContentAgeVerificationFailed
ExplicitContentAgeGatingFailed
DroppedCompletion
SubscriptionAssetResponseMissingItem
FailedToResolveStartItem
NoNetworkConnection
UserIdentityNotSupported
UnsupportedPlaybackContext
UnrestorableArchive
UninitializedPlaybackStack
EmptyModelResponse
FailedToQueueItems
MissingPlaybackAuthorizationToken
RadioServiceNotAllowed
UnknownCode/%lld
MPCSharedListeningError
ConnectionFailure
ContentUnavailable
ContentFailedToResolve
ContentFailedToAdd
MPCPlaybackSessionManagerError
FailedToSaveBeforeFirstUnlock
InvalidMetadataForEncoding
UnsupportedMetadataForEncoding
SessionFailedToDecode
SessionDoesNotExist
LoadSessionTimeout
MPCPlayerRequestError
UnableToSendCommand
CommandFailed
FailedToLoadMetadata
FailedToLoadArtwork
FailedToLoadSupportedCommands
FailedToResolve
FailedToPlaybackState
MPCPlayerEnqueueError
HasUserCuratedQueue
ContentNotSupportedForSharePlay
CannotModifyQueueWithItemWithPlaybackToken
MPCPlaybackEngineInternalError
NoContentToPlay
NoCurrentItem
CannotFindReferencedItem
FeatureDisabled
CommandInvalid
CommandRequiresOverride
AccountMissing
AccountMissingSubscription
AccountMissingAuthentication
AccountNotPrepared
MediaServicesUnavailable
AudioSessionActivationFailed
FailedToPlayRate
FailedToPauseRate
FailedToToggleRate
FailedToChangeRate
FailedToJumpToTime
FailedToBeginScanning
FailedToStopScanning
FailedToEndPlayback
CannotStopScanningIfNotScanning
CannotSkipUnskippableItem
FailedToPlaySharedListeningItem
SharedListeningSessionDisconnected
FailedToBuildPlaybackContext
FailedToLoadPlaybackContext
FailedToMoveItem
FailedToRemoveItem
FailedToLoadSession
FailedToDecodeSession
FailedToFinalizeSession
SessionRestoredUnexpectedCurrentItem
Unrecoverable AirPlay failure [rental requires download]
SetQueue failed to load any assets
Shared listening playback failure
v24@?0q8@"NSError"16
MFDescription
MFPlaybackStackControllerImplementation
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
<%@: %p followUp>
Failed to send subscription playback request (lease)
-[MPCModelGenericAVItemSubscriptionAssetLoadOperation execute]_block_invoke
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
An error is expected for the failure to create a loadResult
Failed to send subscription playback request (accountless stream)
Invalid operation type: %li
assets.count > 0
flavor
fileExtension
sinfs
sinf2
vacToken
Response did not contain asset for item identifiers: %@
unknown
LWHQ
Music
B16@?0@"MPMusicPlayerPlayParameters"8
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
q16@?0@"MPQueueFeederIdentifierRegistry"8
Unable to obtain metadata for shuffled context: %@
No start item was found for playback context: %@
<REPRESENTATIVE ITEM LOADER>
Could not convert startItem into metadata: %@
MPCModelQueueFeeder.m
Response class (%@) must conform to MPCModelPlaybackResponse
B24@?0q8q16
Unable to apply changes [missing identifier set in new collection] index=%ld/%ld changeDetails=%@
newCollection failed to produce identifierSet for indexPath: %@
indexPathForItemWithIdentifiersIntersectingSet returned nil
startIndex out of bounds (startIndex/registry.count = %ld/%ld)
No valid items found [empty model response] for %@
Failed to resolve startItemIdentifiers [%@]: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Invalid request item class: %@ for %@
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
SiriAssetInfoBug
itemsNotInQueue
startItemIdentifiers
sectionedModelObjects
IndexPath not found for globalIndex from registry: %ld
IndexPath was not an item index path with globalIndex from registry: %ld
v32@?0@"MPModelObject"8q16^B24
Could not discern required properties for %@
v32@?0@"ICRadioStationTrack"8q16^B24
SHARED_LISTENING
spcb
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
_MPCQueueControllerDataSourceState.m
No active context for datasoure state for section: %@
Cannot encode MPCSharedListeningPlaybackContext
showInternalSections
UpdatedPlaybackContext is not compatible: reason = %@
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
com.apple.MediaPlaybackCore/PAF
Carrier
Beta
Internal
ENGINE_V2
SEED
CARRY
9000
9100
9999.99.99
ROOTS
DEBUG
play-activity-feed-post-all-play-starts
PAFDurationBug
Playback greater than 12 hours
PAF Event
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
playbackState [nullcontroller - init]
supportedCommands [nullcontroller - init]
queueIdentifier [nullcontroller - init]
playingItemIdentifier [nullcontroller - init]
playQueueIdentifiers [nullcontroller - init]
contentItemForIdentifier [nullcontroller - init]
contentItemArtworkForIdentifier [nullcontroller - init]
ContextID
ShouldOverrideManuallyCuratedQueue
ShouldImmediatelyStartPlayback
SiriRecommendationID
SiriAssetInfo
FeatureName
QueueGroupingID
SiriWHAMetricsInfo
UserIdentity
HomeKitUserIdentifier
%@ query=%@
%@ station=%@
%@ collection=%@ identifiers=%@
%@ seed=%@
%@ identifier=%@
MPCPlayerPath.m
%s is only for use with custom origins.
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
Unsupported route type %@
<%@:
 route=%@
 deviceUID=%@
 origin[MR]=%@-%d
 bundleID[MR]=%@
 pid[MR]=%@
 playerID[MR]=%@
 [system media app]
 bundleID=%@
 pid=%@
 playerID=%@
 local active
bundleID
playerID
PlayerPathDisplayName
resolved player path %@ did not have an origin. (unresolved player path %@)
Missing external device for endpoint %@.
Could not discover endpoint for device UID (%@).
Could not get active origin.
v20@?0C8^v12
MPCPlayerPath
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
MPCVideoViewControllerMediaFoundationImplementation
com.apple.mediaplaybackcore.videodebug
v12@?0i8
<%@: %p internalViewController=%@>
internalController.showsPlaybackControls
internalController.player.currentItem.presentationSize
internalController.videoGravity
internalController.videoBounds
internalController.isReadyForDisplay
internalController.isPictureInPictureActive
internalController.allowsPictureInPicturePlayback
videoOutputDelegate
isReadyForDisplay
presentationSize
videoBounds
view
internalViewController.view
parentViewController.view.recursiveDescription
recursiveDescription
view.superview
view.superview.recursiveDescription
viewController
playbackEngine.implementation.playerViewController
internalViewController
parentViewController
internalController
playerViewController
videoOutput
Updating Accounts
com.apple.MediaPlaybackCore/environment
Updating NetworkReachability
Updating NetworkType
Updating Device
ReleaseType
CFBundleVersion
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
MPCReportingController.m
reportingController != nil
Reporting controller (%@) does not have correct parent (%@ expected, %@ actual)
<MPCFutureInvalidationToken %p %@>
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
MPCFuture.m
Finish with value on already finalized future.
Finish with error on already finalized future.
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 disconnected=YES
 error=%@
Personalization response did invalidate
v16@?0@"NSNotification"8
tshlp
MPCPlayerItemConfigurator.m
Attempting to configure a non-loaded player item.
Default device capability
Forced stereo
queueItem.isAssetLoaded
accountID
uuid
timeZoneName
privateListeningEnabled
_useAirPlayMusicMode
itemAllowsAirPlayFromCloud
itemAllowsExternalPlayback
itemHasProtectedContent
itemType
itemPlaybackMode
externalScreenType
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
usesExternalPlaybackWhileExternalScreenIsActive
isExternalPlaybackAllowed
usesAudioOnlyMode
Audio
Undefined
Streaming
AirPlay
TVOut
Picked route has no restrictions
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play non-cloud item
MPCPlayActivityUtilitiesPlayStartNotification
MPCPlayActivityUtilitiesPlayEndNotification
MPCPlayActivityUtilitiesPlayEndEventStartTimeKey
MPCPlayActivityUtilitiesPlayEndEventEndTimeKey
artistName
representativeItemCloudID
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v32@?0@"NSData"8@"NSString"16@"NSError"24
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
<MPCSharedListeningEvent: %p unknown/invalid>
<MPCSharedListeningEvent: %p participant=%@ sessionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ playbackEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ queueEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ reactionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ customEvent=%@>
<MPCSharedListeningEvent: %p unknown/eventType=%ld>
<MPCSharedListeningEventParticipant: %p id=%@ externalID=%@>
<MPCSharedListeningCustomEvent: %p localizedMessage="%@">
<MPCSharedListeningPlaybackEvent: %p kind=%@>
<MPCSharedListeningQueueEvent: %p unknown/invalid>
<MPCSharedListeningQueueEvent: %p addedContent=%@>
<MPCSharedListeningQueueEvent: %p playedNowContent=%@>
<MPCSharedListeningQueueEvent: %p removedContent=%@>
<MPCSharedListeningQueueEvent: %p reorderedContent=%@>
<MPCSharedListeningQueueEvent: %p replacedContent=%@>
<MPCSharedListeningQueueEvent: %p contentUpdatedMessage=%@>
<MPCSharedListeningQueueEvent: %p playbackMode=%@>
<MPCSharedListeningQueueEvent: %p unknown/kind=%ld>
<MPCSharedListeningQueueEventContentAdded: %p container=%@ items=%@>
<MPCSharedListeningQueueEventContentAdded: %p items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p container=%@ startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentRemoved: %p item=%@>
<MPCSharedListeningQueueEventContentReordered: %p item=%@>
<MPCSharedListeningQueueEventContentReplaced: %p startItem=%@>
<MPCSharedListeningQueueEventContentUpdatedMessage: %p localizedTitle="%@" localizedMessage="%@">
q8@?0
B8@?0
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/invalid>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p shuffleType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p repeatType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<MPCSharedListeningReactionEvent: %p reaction="%@" reactionID=%@ item=%@>
<MPCSharedListeningSessionEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
Join
Connect
Disconnect
Leave
Update
com.apple.assistant.SendCommand
v24@?0@"MRCommandResult"8@"NSError"16
v32@?0@"MRCommandResult"8@"NSError"16Q24
com.apple.mediaplayer.assistant.grouping
v24@?0^{__CFError=}8^{__CFString=}16
com.apple.mediaplayer.assistant.callback
B16@?0@"NSNumber"8
MSVHasher+Algorithms.h
Cannot append to unknown hasher algorithm
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
app.music.queue-source.library
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
<missing queue identifier>
uniqueID
lastChangeDirection
playingItem
<NONE>
v32@?0@"MPCPlayerResponseSection"8q16^B24
MPCPlayerResponseTracklist.m
Count mismatch: sections=%@ sectionRangeMap=%@
Missing section range for section: %@
Non-contiguous range detected: location=%ld expectedLocation=%ld
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Provided display index path is out of bounds for this collection: %@ (section count %@)
Provided display index path is out of bounds for this collection: %@ (item count %@)
structureIndexPath did not produce a valid global index: %@
Could not find a displayIndexPath for structuredIndexPath: %@
Potluck
presumptuous command
Invalid section collection (2).
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
_PLACEHOLDER_
_PLACEHOLDER_TAIL_
_PLACEHOLDER_AUTOPLAY_
queueStructures
dataSources
MPCQueueController
## Queue <%p> [%@]
## AutoPlay Queue
### State
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
apil
dncia
apep
apit
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
AutoPlayPlaceholderArtworkVisualIdenticality
Cannot insert after unknown item: %@
Cannot insert at Last position in AutoPlay.
MPCQueueController.m
ContentItemID was nil [reverse enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [forward enumeration]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state ready]
ContentItemID was nil [tail placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state loading]
ContentItemID was nil [loading placeholder]
Invalid shared listening state [too many datasources]
Invalid shared listening state [dataSource must conform to MPCQueueControllerCommandInterposing]
Received a move command but the source is not available in the queue.
Received a move command but the target is not available in the queue.
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Unexpected entry type when reverse enumerating for before item: %d
User default should be resolved before setting on queue controller.
queue=%@&dataSources=%@
Requested removing content item that is not in the queue.
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
Unexpected inSharedListeningMode=YES in itemToFollowItem: [deferredNext tail section - still loading - shuffled]
v16@?0B8B12
Unexpected inSharedListeningMode=YES in itemToFollowItem: [enumerating to tail section - still loading - shuffled]
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unknown asset failure reason
EndOfQueue-%@
 %@=%@
emitEventsForParticipants can only be called inSharedListeningMode
emitEventsForAddedSharedListeningContainerInfo can only be called inSharedListeningMode
InterposingHost-%@
LiveLink unexpectedly disconnected
Unexpected sharedCurrentItemChange not in shared listening
jumpToItem:inSection: failed [content item not in SIL] contentItemID=%@
_addPlaybackContext unsupported insertion position for CommandInterposing data source: %ld
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
Cannot insert after unknown item (in identifier list): %@
Attempting to add datasource for an already existing section.
The identifierList changed before the data source finished loading.
Unsupported insertion type for %s
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Cannot modify auto play in shared listening mode
Cannot insert after unknown item (in autoplay identifier list): %@
The autoplay identifierList changed before the data source finished loading.
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Unexpected inSharedListeningMode=YES in contentItemIDWithOffset: [returning tail placeholder with SIL ID]
v32@?0q8@"NSString"16@"_MPCQueueControllerDataSourceState"24
%@-%@-%@
Cannot get a shared queue tracklist from an existing shared queue.
Cannot create shared queue tracklist from infinite datasource (current item from auto play).
Current item was missing a media identifier while building shared queue tracklist: currentItem=%@ identifiers=%@
Current item was found multiple times while building shared queue tracklist.
Cannot create shared queue tracklist from infinite datasource (radio).
Failed to find the current item in the shared queue tracklist.
AutoPlayPlaceholder
Unexpected state: missing dataSourceState for section: %@ dataSources: %@
Cannot find valid identifier for an item not in this list: %@
_nextContentItemID
_deferredNextContentItemAnchorID
_allowsQueueModifications
_repeatType
_shuffleType
_hasUserMutations
_currentItem
_autoPlayState
_autoPlayEndPosition
_inSharedListeningMode
_identifierList
_autoPlayIdentifierList
Unexpected state transition from: %@ to: %@
Failed to create AutoPlay playbackContext: %@
Paused
Interrupted
NSString * _Nonnull NSStringFromMPNowPlayingPlaybackState(MPNowPlayingPlaybackState)
MPNowPlayingInfoCenter_Private.h
Unknown MPNowPlayingPlaybackState value %ld
Restore
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
v24@?0@"NSString"8@"NSError"16
ExplicitRestrictionChangedToTrue
ExplicitRestrictionChangedToFalse
MPCSharedListeningQueueFeeder.m
Unexpected shared listening request: %@
containerIdentifier
B16@?0@"ICSharedListeningContainer"8
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
addPlaybackContext:afterItem:
Pending action expired [startItem not found in IDRegistry] startItemIdentifier=%@
Pending action expired [startItemIdentifier not found in live link queue] startItemIdentifier=%@
[SLQF] addPlaybackContext unsupported insertion position: %ld
v32@?0@"MSVSectionedCollection"8@"NSIndexPath"16@"NSError"24
Event-%@
@16@?0@"MPQueueFeederIdentifierRegistry"8
ChangeCurrentItem
Pending action flushed but item was still not found: %@
Unexpected request type: %@
v16@?0@"MPModelRequest"8
B32@?0@"_MPCSLQFPendingAction"8Q16^B24
kind
v32@?0@"ICSharedListeningItem"8q16^B24
v32@?0@"ICSharedListeningContainer"8q16^B24
live_link
v24@?0@"ICSharedListeningItem"8@"NSError"16
<%@: %p label="%@" itemID=%@ expiration=%@>
LiveLinkConnecting
LiveLinkWaitingForFirstQueue
CallingSuper
SuperCompleted
SuperFailed
LiveLinkRetryingFromConnecting
LiveLinkRetryingFromWaitingForFirstQueue
LiveLinkRetryingFromCallingSuper
LiveLinkRetryingFromSuperCompleted
LiveLinkRetryingFromActive
LiveLinkActive
LiveLinkDisconnected
First frame time stamp is too far in the past
_MPCAVController.m
MPCPlaybackEngine: AVAudioSessionCategory cannot be nil.
value
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
userIdentity
v16@?0@"NSArray"8
@16@?0@"MRAVOutputDevice"8
%@ - %@
B16@?0@"MRAVOutputDevice"8
MPCAssistantEndpointContext
Home
cce7c4ecef404121ae8971
revision
metadataObject
indexPath
explicitBadge
localizedDurationString
languageOptionGroups
snapshotTime
startTime
endTime
elapsedDuration
rate
defaultRate
isLiveContent
isLoading
_calculatedElapsedTime
MPCReportingPlaybackObserverPlayStartNotification
MPCReportingPlaybackObserverPlayEndNotification
MPCReportingPlaybackObserverPlayEndEventStartTimeKey
MPCReportingPlaybackObserverPlayEndEventEndTimeKey
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
albumArtistName
albumName
composerName
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
title
albumTrackCount
trackNumber
year
Unsupported content (unknown subclass %@)
MPPlaybackContext+MPCSharedListening.m
Cancelled while performing request: %@
Failed to load request: %@
Request did not produce any items: %@
Intent produced unsupported section (genericObject.type=%@) %@
v16@?0@"MPIdentifierSet"8
v32@?0@"MPModelObject"8@"NSIndexPath"16^B24
v32@?0q8@"MPIdentifierSet"16^B24
v32@?0@8q16^B24
Intent did not produce any store items: %@ %@
Intent did not produce start item for identifiers: %@
@16@?0@"MPIdentifierSet"8
Unsupported content [Radio] %@
Unsupported content [Shared Listening Session] %@
containerType
0.Environment
1.Traits
2.Preferences
3.Outcome
B16@?0@"MPCPlayerAudioFormat"8
1.Formats
3.Route
4.Outcome
2.Audio type
4.Matched tier
5.Outcome
%@ <%p>: %@
Lossless: %@
HRLossless: %@
Spatial: %@
LQStereo: %@
HQStereo: %@
HighResLossless: %@
Network: %@
Expensive: %@
Constrained: %@
HighBandwidth: %@
Always On
Automatic
Unknown preference:%ld
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
Multichannel
allowedAudioSpatializationFormats
MonoAndStereo
MonoStereoAndMultichannel
GaplessAudioTransitions
BinauralAudioForUnknownAudioDeviceTypes
ScalabilityToLosslessAudio
UnconstrainedAudioSampleRate
[%@]
variantPreferences
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
controllerForPlayerPath
Failed to send command %ld
v28@?0I8@"NSError"12@"MRSendCommandResultStatus"20
v32@?0@"MRCommandResult"8@"NSError"16@"NSString"24
MPCMediaRemoteController.m
playbackIntent
Failed to create playback context from playback intent %@
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
playbackState [was nil before]
I8@?0
v12@?0I8
supportedCommands [was nil before]
v24@?0^{__CFArray=}8^{__CFError=}16
v16@?0@"MPRemoteCommandStatus"8
{_MSVSignedRange=qq}
<MPCMediaRemoteController: %p>
playQueueIdentifiersForRequest[%@]
PlaybackQueue Response failed to include now playing item
playingIdentifier
queueIdentifier
contentItem - %@
Requested content item %@ state does not exist.
contentItemArtwork[%@] - %@
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
@"MPArtworkCatalog"8@?0
playingItemIdentifier [mergeContentItems]
resolvedPlayerPath
contentItemIDs
contentItemChanges:keys
<EMPTY>
optimisticStateContentItems
supportedCommands
loadedRange
requestedRange
playingItemIdentifier
playbackState [optimistic state]
playbackState [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playingItemIdentifier [restored state / optimistic failure]
v32@?0@8@16^B24
MFDebugOverlayController
Class getMFDebugOverlayControllerClass(void)_block_invoke
Unable to find class %s
void *MediaFoundationLibrary(void)
/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
/System/Library/PrivateFrameworks/MediaFoundation.framework/Contents/MacOS/MediaFoundation
command
commandName
enabled
options
%@ (%d)
continue-listening
station
MPCSiriPlaybackAdditionsMetadataCountFromResponseKey
MPCSiriPlaybackAdditionsMetadataOrderedPlaybackCacheRequestsKey
MPCSiriPlaybackAdditionsMetadataOrderedPlayableAssetIdentifiersKey
MPCSiriPlaybackAdditionsMetadataPlaybackAuthTokenTrustIdentifierKey
meta.api
format.resources
results
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
audioTraits
assetUrls
enhancedHls
hls-playlist-url
hls-key-cert-url
hls-key-server-url
key-server-protocol-type
offers
downloadAssets
contains
does not contain
v32@?0@"NSDictionary"8Q16^B24
childrenIds
children
MPCAssistantConnection
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
MPCPlaybackEngineEventStream.m
EVS: Unable to generate SQL statement: %@ error:%@
B16@?0@"NSString"8
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
CREATE UNIQUE INDEX IF NOT EXISTS events_ns ON events (_ns)
CREATE INDEX IF NOT EXISTS events_type ON events (type, _ns)
PlaybackEventStreams
%@-%@.sqlpkg
_MPC_CLEAR_EVS
Database
@"MSVSQLDatabase"8@?0
EVS: deallocated before invalidation
 - Database: %@
 - Assertions: %@
 - Subscriptions: %@
reason
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
@identifier
@type
@monoAbsolute
@monoContinuous
@monoTimebaseNS
@userNS
@payload
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@count
<%@: %p consumer=%@ events=%@>
Consumer %@ already has a mutating subscription to %@
Consumer %@ already has an immediate subscription to %@
Consumer %@ already has a subscription to %@
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
@lastNS
@maximumNS
<%@: %p %@ -> %@>
startEvent
Start event must be chronologically AFTER the limiting event.
COUNT(DISTINCT events.identifier)
eventType
Must provide event types to enumerate.
Query too large
SELECT %@ FROM events
, json_tree(events.payload, @payload_key_%d) AS payload_%d
(payload_%d.value = @payload_value_%d)
events.type = @type
events.type IN (
@type_%d
_ns < @startNS
_ns > @endNS
 WHERE 
 AND 
 ORDER BY _ns DESC
 LIMIT %lld
@startNS
@payload_key_%d
@payload_value_%d
Unable to convert payload value to JSON: %@
Unknown payload value type for query: %@
v32@?0@"NSString"8@16^B24
@endNS
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
<%@: %p reason=%@>
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time out of bounds: %llu < %llu < %llu
Event %@ time overflows int64 size: %llu < %lld
com.apple.MediaPlaybackCore.MPCModelStorePlaybackItemsRequestOperation.accessQueue
Request must contain either storeIDs or sectionedModelObjects
v32@?0@"ICUserIdentity"8@"ICMusicSubscriptionStatusResponse"16@"NSError"24
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v24@?0@"MPMediaAPICollectionItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
No network connection
-[MPCModelGenericAVItemMediaRedownloadOperation execute]_block_invoke
MPCModelGenericAVItemMediaRedownloadOperation.m
Missing asset URL in media redownload request response
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
Missing redownload parameters
Missing store request context
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
v16@?0@"MPCModelRadioGetTracksStep"8
v16@?0@"MPModelRadioStation"8
v24@?0@"MPPlaybackContext"8@"NSError"16
v32@?0@"_MPCProtoItem"8Q16^B24
v32@?0@"_MPCProtoContainer"8Q16^B24
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
Missing tracklist data in playback queue.
v16@?0@"<MPMutableRadioIdentifiers>"8
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
Missing creation properties data in playback queue.
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Unknown queue identifier: %@
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
Delegation is unsupported on this device.
Failed to add delegation uuid.
unknown-guid
v24@?0@"ICUserIdentity"8@"NSError"16
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPRemotePlaybackQueue+MPCAdditions.m
Attempted to decode container identifier set without personID
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
DisableQueueModifications [MPC]
ClearUpNext [MPC]
ShareQueue [MPC]
Debug [MPC]
<Unrecognized Command>
Unrecognized [%lld]
disableQueueModificationsCommand
clearUpNextQueueCommand
shareQueueCommand
debugCommand
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
v24@?0@"MPServerObjectDatabaseAsset"8^B16
POST
guid
flavors
adamIds
application/json
v24@?0@"ICURLResponse"8@"NSError"16
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
Glide
max-mini-sinf-batch-size
https://itunes.apple.com/
v24@?0@"NSURLRequest"8@"NSError"16
com.apple.iBooks
com.apple.podcasts
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@, originatingOutputDeviceUID = %@, singleGroup = %@, originatingControl = %@>
v16@?0@"NSDictionary"8
OriginatingOutputDeviceUID
AppBundleID
PlayerID
MPCPlaybackEngine.m
MPCPlaybackEngine API must be called on the main thread. %@
Unable to restore state. Too many failed attempts.
v20@?0B8@?<v@?>12
audioSessionCategory
MediaPlayer
new_playback_engine
stateRestoration-%@
attempts
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
allowed
not allowed
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
Age Gating
Age Verification
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
v16@?0@"MPCPlayerPath"8
resolvedPlayerPath and error was nil
v24@?0@"MPCPlayerPath"8@"NSError"16
v16@?0^v8
VERSION
BIT-RATE
SAMPLE-RATE
BIT-DEPTH
CHANNEL-COUNT
ORIGIN-CHANNEL-COUNT
CHANNEL-USAGE
AUDIO-FORMAT-ID
GROUP-ID
IS-ATMOS
ORIGIN-IS-ATMOS
tier
codec
chlay
ochlay
chlayd
tier: %@
bitrate: %@
groupID: %@
bitDepth: %@
sampleRate: %@
codec: %@
channels: %@
layout: %@
origin channels: %@ [%@]
origin channels: %@
spatialized
multichannel
stableVariantID: %@
%ldkbps
%d-bit
%ldkhz
BINAURAL
Mono
Stereo
Binaural
5.1.2
5.1.4
7.1.2
7.1.4
9.1.6
bitrate
bitDepth
channelCount
layout
sampleRate
name
rmcs
spzs
spze
spzcs
spzcr
type: %@
name: %@
multichannel suppport: %@
supportsSpatialization
spatializationIsEnabled
canRenderSpatialAudio
canStreamSpatialAudio
Unavailable
UserPreference
UserDownload
RouteIncompatible
RouteUnknownCompatibility
BandwidthInsufficient
Unknown-%ld
LowBandwidthStereo
HighQualityStereo
Lossless
HighResolutionLossless
Spatial
DeviceSpeaker
LineOut
Headphones
BluetoothHeadphones
BluetoothSpeaker
USBAudio
CarAudio
HDMI
Unknown [CM-driven]
Available
properties
identity
ReplacementContext is unsupported type %@ != MPCModelPlaybackContext
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
domain
code
userInfo
prefix
given
middle
family
suffix
nick
modelClass
_empty
library
db-id
contained-pid
sync
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
personal
person-id
cloud
cloud-album
reco-id
universal
global-playlist
adam
former-ids
ulid
purchased
social-profile
media-clip
static-asset
reporting-adam-id
asset-adam-id
radio
station-string
station-hash
station-id
serverID
externalID
nameComponents
imageURL
v16@?0@"<_ICMutableLiveLinkIdentityPrivate>"8
root
debug
dialog
data
dataType
message
actions
@16@?0@"MPRemoteCommandHandlerDialogAction"8
event
mrCommand
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
MPCPlaybackEngineEventPayload.m
Unexpected type for key %@ actual=%@ expected=%@
Unexpected type for element in array for key %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)
Attempt to JSON coerce unsupported value type: %@ %@
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
LeasePreventionPause_%@
errorDomain
errorCode
date
formattedTime
queueLoadDuration
queueEndpoint
initialQueue
items
createAssetDuration
assetPreloaded
urlScheme
audioType
endpointType
hasOfflineKeys
hasOnlineKeys
assetInfoSource
isDelegated
isSubscription
redownloadTime
subscriptionWaitTime
suzeLeaseTime
queueStartItem
networkChangeCount
endReason
initialItemLoadDuration
initialItemPreloaded
initialQueueType
initialQueuePreloaded
initialQueueLoadDuration
initialQueueFeatureName
initialNetworkType
isHLS
perceivedPlayStartTime
finalNetworkType
stateRestoration
queuesAdded
queuesFailed
itemsPlayed
itemsFailed
natural
skip
select-song
endSession
fail
originUnknown
typeUnknown
song
musicVideo
tvEpisode
playlistEntry
adamid
padamid
sadamid
aadamid
raid
raidev
contentItem.protobuf.gz
artwork
artworkHash
contentItem
compressionAlgorithm
com.apple.mediaplaybackcore.sessionArchive
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ requirePlaybackAuthorizationToken=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
v16@?0@"MPCPlaybackAccount"8
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v24@?0@"ICURLBag"8@"NSError"16
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
0123456789abcdef
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
request.playbackRequestEnvironment
request
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextUserIdentity
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v24@?0@"NSArray"8@"NSError"16
MPCPlaybackHistoryRecordChangeRequestOperation.m
Unsupported request type: %ld
overridePlayingItem
com.apple.music.scenes
motion-timeline
versions
version
scenes
start_frame
end_frame
iterations
MPCNullPlaybackContextCodingKeyLabel
actionAfterQueueLoad
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
No item lookups allowed for _MPCNullQueueFeeder.
@"NSString"16@?0q8
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
container
startingItemIndexPath
shuffleMode
MPCMediaFoundationTranslator.m
queueItem == nil || [(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
[(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
additionalData
getTracks
v16@?0@"ICStoreDialogResponseButtonAction"8
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
AirMusic
<MPCPlaybackRequestEnvironment: %p identity=%@>
clientIdentifier
clientVersion
delegationProperties
requestingBundleIdentifier
requestingBundleVersion
v16@?0@"ICStoreRequestContext"8
v16@?0@"ICMusicKitRequestContext"8
[delegated account missing]
[promoting delegated account]
[base account missing]
[base account is delegated]
MPCSharedListeningLiveLinkReusePool.m
sessionIdentifier must not be nil
EncodeSerialQueue
v24@?0@"NSData"8@"NSError"16
LOCAL_DEVICE
DecodeSerialQueue
AFSecurityConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v20@?0B8@"NSError"12
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v32@?0@"MPModelGenericObject"8q16^B24
v32@?0@"MPModelRadioStation"8q16^B24
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
DeviceClassNumber
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPAD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPOD
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_IPHONE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
requestDeviceCount
source
com.apple.MediaAssistant.siri
com.apple.mediaplaybackcore.assistant.pause
no UIDs provided
success
errorMessage
no origin for endpoint
v24@?0@"NSError"8@"NSArray"16
MPCAssistantPause
v24@?0@"NSArray"8@"NSArray"16
removedDeviceCount
pausedDeviceCount
removedEndpointCount
pausedEndpointCount
appleTVsAffected
homepodsAffected
forceRemoveDeviceCount
v16@?0^{__CFError=}8
com.apple.MediaAssistant
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
v16@?0@"MPCAssistantSendCommandResult"8
appBundleID
resultCodes
com.apple.mediaplayer.assistant.command
actualDestination
local
MediaRemote
new_siri_behavior
new_siri_behavior_route_after_command
v16@?0@"MRAVEndpoint"8
v24@?0@"MRAVEndpoint"8@"NSError"16
MPCAssistantCommand-removeUnwantedDevices
v32@?0@"MRAVEndpoint"8@"NSArray"16@?<v@?@"MRAVEndpoint">24
actualDeviceCount
When processing %@ if we are the group leader, pause our now-playing app if we have one
v16@?0^{__CFArray=}8
v12@?0B8
requestedUIDs
outputGroups
outputGroupIDPresent
formGroup
remote
v16@?0^{__CFString=}8
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0@"MRCommandResult"8
proxy promotion
group leader
v24@?0^v8^{__CFError=}16
errorString
v20@?0f8^{__CFError=}12
v32@?0^v8^v16@"NSError"24
v32@?0^{__CFArray=}8^v16^{__CFError=}24
MPCItemBookmarker.m
fromItem == nil || [(MPAVItem *)fromItem isKindOfClass:[MPAVItem class]]
toItem == nil || [(MPAVItem *)toItem isKindOfClass:[MPAVItem class]]
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.diffQueue
Could not convert station into metadata: %@
v32@?0@"NSString"8d16@"NSError"24
v16@?0@"ICMutableRadioPlaybackHistory"8
Radio service is restricted
v24@?0d8@"NSError"16
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
MPCModelRadioQueueFeeder.m
Provided section identifier did not match stored section identifier: %@ != %@
LOADING_AUDIO_LABEL
RADIO_LABEL
app.music.queue-source.tilt
RadioStationID
v24@?0@"ICUserIdentityProperties"8@"NSError"16
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v16@?0@"MPQueueFeederIdentifierRegistry"8
@"MPIdentifierSet"16@?0q8
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
channelLayout
multiChannel
firstAudioFrameTimestamp
sectionIdentifier
itemIdentifier
itemMetadata
siriRefId
formatInfo
routeInfo
errorResolution
sessionActivationWaitTime
MPCPlayPerfMetrics.m
Section identifier in first audio frame event can't be nil
Item identifier in first audio frame event can't be nil
v24@?0@"MPCPlaybackEngineEvent"8^B16
<%@:%p %@>
<%@:%p> Item: %@ %@
Overall
  - TotalTime (MPP):        % 3.3fs (Total time spent to get music to play)
  - MusicWaitTime (MWT):    % 3.3fs (User-perceived wait time)
  - MediaPlayerTime (MPT):  % 3.3fs (Total time spent in MediaPlayer frameworks)
Components
  - SetQueueCommandSend:    % 3.3fs (SendCommand -> PerformSetQueue)
  - QueueLoad:              % 3.3fs (PerformSetQueue -> AssetLoadBegin)
  - AssetLoad:              % 3.3fs (AssetLoadBegin -> AssetLoadEnd)
  - ReadyToPlayStatus:      % 3.3fs (AssetLoadEnd -> ReadyToPlay)
  - RateChange:             % 3.3fs (Play -> RateChanged)
  - FirstAudioFrame:        % 3.3fs (RateChanged -> FirstAudioFrame)
Networking [%.3fs]
  - Lookup:                 % 3.3fs
  - GetTracks:              % 3.3fs
  - Bag:                    % 3.3fs
  - Lease:                  % 3.3fs
  - SuzeLease:              % 3.3fs
  - SubscriptionAssetLoad:  % 3.3fs
  - MediaRedownload:        % 3.3fs
  - HLSMetadata:            % 3.3fs
Misc
  - PlayCommandWait:        % 3.3fs (ReadyToPlay -> Play)
  - PlayCommandSend:        % 3.3fs
  - SessionActivation:      % 3.3fs
-sessions
playbackSessionArchive
playbackSessionIdentifier-v3
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
Playback engine doesn't support state restoration
v8@?0
Archive is missing for identifier: %@
Failed to decode queue controller for identifier: %@
Failed to load session due to %gs timeout.
v16@?0q8
v16@?0@"NSError"8
v16@?0@?<v@?@"NSError">8
_MPCPlaybackEngineSessionManager.m
Session management only available with MPCQueueController
Can't save an archive before first unlock (cannot write to container data).
Opting not to save an archive for a shared listening session
Can't save an archive without a now playing content item.
Opting not to save an archive with a placeholder content item.
queueController
PlaybackSessions
v24@?0@"UIImage"8@"NSError"16
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v16@?0@"MPModelArtist"8
@"MPArtworkCatalog"16@?0@"MPModelObject"8
v16@?0@"MPModelAlbum"8
v16@?0@"MPModelSong"8
MPCModelGenericAVItemTimedMetadataRequest.m
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
v16@?0@"MPModelObject"8
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
v24@?0@"MPModelResponse"8@"NSError"16
v16@?0@"MPSectionedCollection"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
softlink:r:path:/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
MPCSharedListeningPlaybackIntentDataSource
ICLiveLinkDelegate
NSObject
MPCPlaybackIntentDataSource
_MPCSharedListeningTracklistPlaybackContext
_MPCProtoItem
NSCopying
MPCStoreLibraryPersonalizationMiddleware
MPMiddleware
MPCPlayerResponseBuilder
MPCResponseMediaRemoteControllerChaining
_MPCAudioSessionController
_MPCPlaybackEngineMediaFoundationImplementation
MFPlaybackStackControllerDelegate
MPAVQueueControllerDelegate
MPCAssetLoaderDelegate
MPCPlaybackEngineImplementation
ICErrorProcessing
MPCMediaRemoteMiddlewareModelObjectsProviding
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
ModelObjectsProviding
ICStoreResponseProtocol
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
_MPCProtoTracklistIndexPath
MPCAssistantSetVolume
MPCPlaybackEngineLoggingConsumer
MPCPlaybackEngineEventConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
_MPCProtoRadioContentReference
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
MPCPlayerSessionResponseBuilder
MPCPlayerSessionResponse
_MPCProtoItemIdentifierSet
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerClient
_MPCMusicPlayerControllerServer
NSXPCListenerDelegate
MPCPlaybackEngineEventObserving
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
MPRTCReportingItemSessionCreating
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
_MPCMediaRemotePublisher
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MediaRemoteCommandAdditions
MPCPlaybackDelegationProperties
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
MPCPlaybackIntent
ForShortcutsOnly
MPCPlaybackSharedListeningProperties
_MPCPlaybackContextPlaybackIntentDataSource
_MPCProtoRadioCreationProperties
MPCModelRadioStationBuilder
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCAnalyticsSignpost
MPCWaitForLikelyToKeepUp
MPCWaitForReadyToPlaySignpost
MPCPlayToSetRateSignpost
MPCSetRateToEffectiveRateSignpost
MPCScene
MPCSceneCollection
MPCScriptedLooper
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCPlaybackEngineMiddleware
MPCPlayerCommandDialogAction
MPCPlayerCommandDialog
MPCPlayerCommandStatus
MPCPlayPerfConsumer
MPCDialogs
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCModelPlaybackResponse
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCAutoBugCaptureEventConsumer
MPCMediaRemoteMiddlewareCommandsOperation
MPCHLSSessionData
MPCMediaRemoteMiddleware
MPCErrorController
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPRequestResponseControllerDelegate
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCProtoContainerIdentifierSet
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
AVPlayerViewControllerDelegate
_MPCVideoViewControllerMediaFoundationImplementation
MPCVideoOutput
MPCVideoOutputDelegate
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCSharedListeningPlaybackIntentTracklistToken
MPCPlayerItemConfigurator
MPAVRoutingControllerDelegate
_MPCProtoDelegateInfo
MPCExternalPlaybackControllerImplementation
MFExternalPlaybackController
MPCExternalPlaybackRouter
_MPCProtoRadioContentReferenceLibraryArtistContentReference
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCSharedListeningEvent
MPCSharedListeningEventParticipant
MPCSharedListeningCustomEvent
MPCSharedListeningPlaybackEvent
MPCSharedListeningQueueEvent
MPCSharedListeningQueueEventContentAdded
MPCSharedListeningQueueEventContentPlayedNow
MPCSharedListeningQueueEventContentRemoved
MPCSharedListeningQueueEventContentReordered
MPCSharedListeningQueueEventContentReplaced
MPCSharedListeningQueueEventContentUpdatedMessage
MPCSharedListeningQueueEventPlaybackModeChanged
MPCSharedListeningReactionEvent
MPCSharedListeningSessionEvent
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCModelStorePlaybackItemsRequestAccumulatorImportResponse
MPCAdditions
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDisplayDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
_MPCPlayerDisableModificationsCommand
MPCPlayerDisableModificationsCommand
MPCQueueControllerCommandInterposing
MPCQueueController
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
MPSectionedIdentifierListAnnotationDelegate
MPCContinueListeningRadioQueueProviding
MPArtworkDataSource
MPCQueueItemProviding
MPAVQueueController
MPAVQueueCoordinatingDataSource
MSVSegmentedCoding
MPCQueueControllerCommandInterposingHost
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCReportingPlaybackEnvironmentPropertiesLoader
MPCSharedListeningQueueFeeder
AVPlayerPlaybackCoordinatorDelegate
MPCSharedListeningContainerInfo
_MPCSLQFPendingAction
MPCPlaybackDefaultsImplementation
MFPlaybackDefaults
MPCPlayPerfAnalytics
_MPCProtoRadioContentReferenceStoreContentReference
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateUserIdentitySource
MPCAssistantEndpointContext
MPCPlayerResponseItem
MPCPlayerResponseItemMusicAudio
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
_MPCProtoRadioContentReferenceLibraryItemContentReference
MPCAudioSpectrumAnalyzer
MPCAudioSpectrumObserver
_MPCAudioSpectrumAnalyzerStorage
MPCSharedListening
_MPCProtoContainer
MPCAudioAssetTypeSelector
MPCExplicitContentAuthorizationManager
MediaPlaybackCore
MPCItemIdentifierImplementation
MPCItemIdentifier
MFQueuePlayerItem
MFPlayerItem
MPCMediaRemoteController
_MPArtworkCatalogOverlayDelegate
MSVLRUDictionaryDelegate
MPMediaRemoteEntityArtworkGenerator
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
MPCModelStorePlaybackItemsRequestOperation
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
MPCDebugCommand
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
_MPCPlaybackEnginePlayerIDInitializationParameters
MPCPlaybackEngineInitializationParameters
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
_MPCPlaybackEngineEventStreamInitializationParameters
MPCPlaybackEngineEventStreamInitializationParameters
MPCPlayerPathCache
MPCPlayerAudioFormat
MPCPlayerAudioRoute
MPCSharedListeningPlaybackContext
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayload
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
RTCOldEngineSupport
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPCReportingEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
MPCScriptedSceneCollectionParser
_MPCNullPlaybackContext
_MPCNullQueueFeeder
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
_MPCProtoTracklist
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCAVItemTrace
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCSharedListeningLiveLinkReusePool
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPAVQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
MPCPlayPerfMetrics
_MPCPlaybackEngineSessionManager
MPCPlayerResponseParticipant
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
setStrongSelf:
setInitialIntent:
shuffleMode
setShuffleMode:
setIdentity:
setCompletion:
setLock:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
msv_errorWithDomain:code:debugDescription:
_transitionToBuildState:intent:error:
liveLink
stop
initWithTimeout:interruptionHandler:
setGuard:
_transitionToBuildState:
tracklistToken
sharedListeningProperties
setSharedListeningProperties:
identity
_transitionToLiveLinkState:
sharedReusePool
identifier
storeLiveLink:forSessionID:
msv_errorWithDomain:code:underlyingError:debugDescription:
_transitionToLiveLinkState:error:
linkState
items
count
_transitionToSourceState:
queue
initialTracklist
startIndexPath
sessionKey
propertiesWithSessionIdentifier:sessionKey:
setLiveLink:
sharedSessionIntentWithProperties:identity:
replaceTracklist:preferredStartIndexPath:completion:
guard
disarm
mpc_remoteCommandStatus
initWithMPStatus:request:
completion
_transitionToSourceState:error:
setInitialTracklist:
setStartIndexPath:
getSharedListeningTracklistWithCompletion:
getPlaybackContextWithCompletion:
buildState
linkWithIdentity:
setDelegate:
start
sourceState
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
didStartLiveLink:
liveLink:didEncounterError:willRetry:
liveLinkDidReconnect:
didStopLiveLink:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveEvent:
liveLink:didReceiveDirectCurrentItemChanged:
getPlaybackContextForIntent:withCompletion:
buildSharedSessionIntentWithIntent:identity:completion:
strongSelf
lock
setBuildState:
setSourceState:
initialIntent
setLinkState:
.cxx_destruct
_lock
_guard
_shuffleMode
_strongSelf
_completion
_buildState
_sourceState
_initialIntent
_startIndexPath
_initialTracklist
_linkState
_liveLink
_identity
T@"MSVBlockGuard",&,N,V_guard
Tq,N,V_shuffleMode
T@,&,N,V_strongSelf
T@?,C,N,V_completion
T{os_unfair_lock_s=I},N,V_lock
Tq,N,V_buildState
Tq,N,V_sourceState
T@"MPCPlaybackIntent",&,N,V_initialIntent
T@"NSIndexPath",C,N,V_startIndexPath
T@"MSVSectionedCollection",&,N,V_initialTracklist
Tq,N,V_linkState
T@"ICLiveLink",&,N,V_liveLink
T@"ICLiveLinkIdentity",&,N,V_identity
tracklist
setTracklist:
startItemIndexPath
setStartItemIndexPath:
_tracklist
_startItemIndexPath
T@"MSVSectionedCollection",&,N,V_tracklist
T@"NSIndexPath",&,N,V_startItemIndexPath
stringWithFormat:
dictionaryRepresentation
dictionary
numberWithInt:
setObject:forKey:
numberWithBool:
allocWithZone:
init
copyWithZone:
readFrom:
writeTo:
_identifierSet
_mediaType
_excludeFromShuffle
_has
operationsForPlayerRequest:
initWithMiddleware:playerRequest:
arrayWithObjects:count:
operationsForRequest:
invalidationObservers
setInvalidationObservers:
T@"NSArray",&,N
personalizedModelObjects
setPersonalizedModelObjects:
_invalidationObservers
_personalizedModelObjects
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
length
section
sectionAtIndex:
itemAtIndexPath:
nextObject
playerModelObject:propertySet:atIndexPath:chain:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerExplicitContentState:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerItemShouldDisableJumpToItem:atIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerIsSharedListeningSession:chain:
preferredAudioFormat:chain:
activeAudioFormat:chain:
activeAudioFormatJustification:chain:
audioFormatPreference:chain:
audioRoute:chain:
alternateAudioFormats:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
sharedInstance
setAudioSession:
setupObservations
tearDownObservations
dealloc
audioSession
setCategory:mode:routeSharingPolicy:options:error:
category
setCategory:
categoryOptions
setCategoryOptions:
routeSharingPolicy
setRouteSharingPolicy:
updateAudioSession:options:routeSharingPolicy:
defaultCenter
snapshotSessionSettings
addObserverForName:object:queue:usingBlock:
setLostObserver:
restoreSessionSettingsFromSnapshot
setResetObserver:
lostObserver
removeObserver:
resetObserver
_audioSession
_lostObserver
_resetObserver
_category
_categoryOptions
_routeSharingPolicy
T@"AVAudioSession",&,N,V_audioSession
T@,&,N,V_lostObserver
T@,&,N,V_resetObserver
T@"NSString",N,V_category
TQ,N,V_categoryOptions
TQ,N,V_routeSharingPolicy
_stateDictionary
actionAfterQueueLoad
playPerfAnalyticsWithIdentifier:willPlayImmediately:
setPlayPerfAnalytics:
_resetPlaybackStack
_setupPlaybackStackWithPlaybackEngine:queueController:
errorController
reset
playbackStackController
translator
resetMapping
playbackEngine
engineID
playerID
queueController
preferredFirstContentItemID
setPreferredFirstContentItemID:
resolveError:forItem:completion:
currentQueueItem
setQueueWithPlaybackContext:identifier:completionHandler:
reloadWithPlaybackContext:completionHandler:
currentState
playWithRate:identifier:completion:
addPlaybackContext:atPosition:jumpToIt:completion:
contentItemID
restoreQueue:
isModeSolo
setupForShared
isModeShared
setupForSolo
modeDescription
eventObserver
engine:didResetQueueWithPlaybackContext:error:
setQueueWithInitialItem:andPlay:identifier:completion:
isAssetLoaded
canUseLoadedAsset
canReusePlayerItem
prepareForRate:completionHandler:
activateAudioSessionWithCompletion:
currentTime
UUIDString
skipWithDirection:identifier:completion:
jumpTo:identifier:completion:
pauseWithFadeout:
pauseWithFadeOut:identifier:completion:
play
audioSessionCategory
audioSessionOptions
isEqualToString:
transientAudioSessionController
initWithCategory:routeSharingPolicy:options:
updateAudioSessionWithConfiguration:
_MPAVItemForMFQueuePlayerItem:
rate
interruptedState
videoViewController
itemsHavePlayed
endPlaybackWithIdentifier:completion:
playPerfAnalytics
didReceivePlayRequest
pauseWithIdentifier:completion:
pauseForLeasePreventionWithIdentifier:completion:
shouldSkipJumpToItemStart:
bookmarker
currentItem
userDidSkipDuringPlaybackFromItem:direction:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
_setCurrentPlaybackRate:
setRate:identifier:completion:
setRelativeVolume:
setPlaybackEngine:
initWithQueueController:
initWithDelegate:
initWithPlaybackEngine:translator:
initWithPlaybackEngine:translator:externalPlaybackRouter:
initWithTranslator:
leaseManager
initWithTranslator:leaseManager:
standardUserDefaults
initWithPlaybackUserDefaults:
initWithPlayerID:engineID:queueController:assetLoader:errorController:externalPlaybackController:leaseController:defaults:queue:
setPlaybackStackController:
setMaximumPlayerQueueLength:
initializationParameters
setupForManagedSessionWithAudioSession:
initWithPlaybackEngine:stackController:translator:
setConfigurator:
initWithStackController:
setQueueCoordinator:
updateAudioSession
numberWithInteger:
numberWithFloat:
numberWithDouble:
targetRate
stateDictionary
dictionaryWithObjects:forKeys:count:
eventStream
sectionIdentifier
itemIdentifier
emitEventType:payload:atTime:
currentItemTransition
setCurrentItemTransition:
playbackDidStopForItem:time:
emitEventType:payload:
engine:didChangeItemElapsedTime:rate:
type
sourceID
_isAVKitSkipAction:
mediaRemotePublisher
commandCenter
nextTrackCommand
previousTrackCommand
eventWithCommand:mediaRemoteType:options:
invokeCommandWithEvent:completion:
effectiveRate
updateDurationSnapshotWithTime:forItem:rate:
schedulePlaybackStatePreservation
engine:didChangeQueueWithReason:
setObject:forKeyedSubscript:
itemError
errorWithDomain:code:userInfo:
engine:didChangeRepeatType:
engine:didChangeShuffleType:
engine:didChangeActionAtQueueEnd:
forItemChangeSource:
time
currentItemWillChangeFromItem:toItem:time:
engine:willChangeToItem:fromItem:
_willResignActivePlayerItem
_willBecomeActivePlayerItem
playbackStartTrace
item
cancel
setPlaybackStartTrace:
engine:didChangeToItem:
playerItemDidBecomeCurrent:
_didBecomeActivePlayerItem
configurator
updatePlayerConfiguration
prepareForCurrentItemPlayback
itemDidBecomeCurrent:
itemDidBecomeCurrent:time:
_didResignActivePlayerItem
itemDidResignCurrent:time:
playerItemDidResignCurrent:
repeatType
setMPAVItem:forMFPlayerItem:
isAlwaysLive
contentItem
elapsedTimeTimestamp
calculatedElapsedTime
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
itemDidFailToLoad:error:
null
timeControlStatus
itemDidPlayToEnd:time:
engine:didEndPlaybackOfItem:
itemIsReadyToPlay:
reevaluateHasProtectedContent
reevaluateType
_logPlayerEventsForQueueItem:
_updateActiveFormatForQueueItem:
availableSortedFormats
currentPlayerAudioFormat
tier
preferredFormat
updateActiveFormat:justification:
stableVariantID
engine:didChangeCurrentItemVariantID:
avPlayerItem
accessLog
events
countByEnumeratingWithState:objects:count:
startupTime
observedBitrate
indicatedBitrate
averageAudioBitrate
switchBitrate
entryReasonCode
endInterval
setItemsHavePlayed:
playbackDidStartForItem:time:rate:
_playbackDidStopForItem:source:reason:time:
playbackDidStopForItem:
playbackRateDidChangeToRate:forItem:time:
playbackRateDidChangeForItem:rate:
timebase
dateWithTimeIntervalSinceReferenceDate:
firstFrameWillRenderForItem:atDate:
routeDescription
isAirplay
playbackStateDidChangeFromState:toState:forItem:time:rate:
engine:didChangeToState:
engine:didAchieveLikelyToKeepUpWithItem:
playbackIsLikelyToKeepUp:forItem:
engine:didReachEndOfQueueWithReason:
uniqueIdentifier
source
_performSkipForUserAction:
timeStamp
numberWithUnsignedInt:
successStatus
statusWithCode:error:
engineDidLoseMediaServices:
engineDidResetMediaServices:
rtcReportingServiceIdentifier
modelGenericObject
anyObject
identifiers
modelPlayEvent
genericObjectRepresentation
song
isArtistUploadedContent
modelKind
isVideoContent
durationFromExternalMetadata
initialPlaybackStartTime
isStartItem
currentItemWillChangeFromItem:toItem:source:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:source:timeStamp:
itemDidResignCurrent:source:timeStamp:
playbackDidStartForItem:rate:fromStalling:timeStamp:
playbackDidStopForItem:source:reason:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
playbackRateDidChangeNotifiedForItem:newRate:reason:participantIdentifier:timeStamp:
relativeVolumeDidChangeTo:timeStamp:
firstFrameWillRenderForItem:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
tracksDidChangeForItem:timeStamp:
timeControlStatusDidChange:waitingReason:timeStamp:
didReachEndOfQueueWithReason:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithItemAtDeath:timeAtDeath:timeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
userSeekCompletedForItem:fromTime:toTime:timeStamp:
didReportSignpostWithType:
errorResolutionDidStartForItem:error:
errorResolutionDidEndForItem:error:resolution:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
initWithPlaybackEngine:
reloadWithPlaybackContext:identifier:completionHandler:
replaceCurrentItemWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithCompletion:
setQueueController:
currentRate
state
stateBeforeInterruption
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
isReloadingPlaybackContext
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
playWithOptions:
pause
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
pauseWithFadeout:identifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
jumpToTime:identifier:completion:
T@"MPCPlaybackEngine",R,W,N
T@"<MPAVQueueController>",&,N
T@"MPAVItem",R,N
Td,R,N
Tf,R,N
Tq,R,N
TB,R,N
TB,N
Tq,N
reloadingPlaybackContext
TB,R,N,GisReloadingPlaybackContext
playerViewController
playbackDidReachQueueEndWithTimeStamp:
firstVideoFrameWasRenderedForItem:timeStamp:
setBookmarker:
setTranslator:
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
stateHandle
setStateHandle:
setTransientAudioSessionController:
_autoPlayWhenLikelyToKeepUp
_reloadingPlaybackContext
_playbackEngine
_queueController
_actionAtQueueEnd
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_configurator
_stateHandle
_playbackStartTrace
_playPerfAnalytics
_transientAudioSessionController
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
T@"MPCItemBookmarker",&,N,V_bookmarker
T@"MPCMediaFoundationTranslator",&,N,V_translator
T@"MPCErrorControllerImplementation",&,N,V_errorController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
T@"<MFAssetLoading>",&,N,V_assetLoader
T@"MPCLeaseController",&,N,V_leaseController
T@"MPCPlayerItemConfigurator",&,N,V_configurator
TQ,N,V_stateHandle
T@"MPCAVItemTrace",&,N,V_playbackStartTrace
T@"MPCPlayPerfAnalytics",&,N,V_playPerfAnalytics
T@"_MPCAudioSessionController",&,N,V_transientAudioSessionController
T@"AVPlayerViewController",R,N
T@"NSDictionary",R,N
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"<MPAVQueueController>",&,N,V_queueController
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
TB,R,N,GisReloadingPlaybackContext,V_reloadingPlaybackContext
hostTime
userSecondsSinceReferenceDate
forPlayerState:
forPlaybackTimeChangeReason:
doubleValue
lastChangeDirection
forTimeControlStatus:
forErrorResolution:
serverError
domain
code
userInfo
mutableCopy
dialog
responseDictionary
_isAgeVerificationError:
removeObjectForKey:
objectForKeyedSubscript:
errorForICError:response:
request
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
queueItemProperties
label
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
isCancelled
finish
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
controllerFuture
isInvalid
_loadItemsWithCompletion:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
finishWithError:
queueSectionProperties
translatorForMPModelClass:
setArtworkGenerator:
appendSection:
sectionObjectForPropertySet:contentItem:context:
emptyIdentifierSet
initWithIdentifiers:block:
firstObject
objectAtIndexedSubscript:
collectionIdentifier
collectionInfo
isEqualToDictionary:
playingIndexPath
numberOfSections
numberOfItemsInSection:
indexPathForItem:inSection:
setPlayingIndexPath:
_itemGenericObjectPropertySetForContentItem:propertySet:
objectForPropertySet:contentItem:context:
appendItem:
setQueueContentItems:
setQueueModelObjects:
queueIdentifier
setQueueIdentifierFuture:
queueIdentifierFuture
setQueueIdentifier:
_loadPlayingIdentifierWithCompletion:
sharedCache
playerPath
observationTokenDescriptionForPlayerPath:
sourceContentItems
modelObjects
T@"MPSectionedCollection",R,N
T@"NSIndexPath",R,C,N
requiredStoreLibraryPersonalizationProperties
dictionaryWithCapacity:
emptyPropertySet
propertySetByCombiningWithPropertySet:
initWithProperties:relationships:
deviceSpecificUserInfo
mediaType
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
preferredFallbackItemRelationship
error
invalidationHandler
setInvalidationHandler:
timeoutDescription
T@"NSError",R,N
T@?,C,N
T@"NSArray",R,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@"NSMapTable",&,N
initWithMiddleware:request:
execute
setMiddleware:
setRequest:
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSMapTable",&,N,V_inputOperations
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
queueModelObjects
queueContentItems
flattenedGenericObject
copy
_createStoreRequestContext
setRtcReportingParentHierarchyToken:
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
_ageVerificationStateDidChangeNotification:
removeObserver:name:object:
isHLSAsset
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
cancelRequest:
repeatIndex
mainTitle
album
title
year
artist
name
tvEpisode
season
show
universalStore
adamID
purchasedAdamID
subscriptionAdamID
trackNumber
trackCount
loadedAudioAssetType
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
storeSubscriptionAdamID
genre
_radioStation
subtype
performWithoutEnforcement:
isRadioStreamPlayback
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isExplicitTrack
activeAccount
defaultManager
ageVerificationStateForUserIdentity:
treatment
isRadioPlayback
_storeRequestContext
delegatedIdentity
delegatedIdentityProperties
DSID
unsignedLongLongValue
isDelegated
sharedMonitor
networkType
lastKnownNetworkType
hasVideo
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
homeSharingAsset
localFileAsset
storeAsset
sharedSelector
preferredAudioAssetTypeForItem:
personalizedStore
playbackAuthorizationToken
setPreferredAudioAssetType:
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
_prefersHighQualityContent
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
setHomeSharingAsset:
setAccountID:
storefrontIdentifier
setStorefrontID:
setDelegatedAccountID:
setPlaybackAuthorizationToken:
gaplessInfo
volumeAdjustment
sharedManager
isItemAuthorized:shouldAskForAuthorization:
identityProperties
_delegatedUserIdentityProperties:
setItemError:
_allowsStreamingPlayback
_assetLoadPropertiesWithUserIdentityProperties:delegatedUserIdentityProperties:
endpointType
prefersVideoContent
preferredAudioAssetType
_timeoutValues
_iTunesStorePurchasedMediaKind
_gaplessInfo
_loudnessInfoMediaKind
_volumeAdjustment
rtcReportingParentHierarchyToken
newHierarchyTokenFromParentToken:
timeIntervalSinceReferenceDate
sharedBagProvider
getBagForRequestContext:withCompletionHandler:
requestDate
_getSubscriptionLeasePropertiesWithCompletion:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
_allowsAssetCaching
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setAllowsCachedAssets:
setResponseHandler:
addOperation:
assetURL
hasValidAsset
accountID
delegatedAccountID
setRequestType:
itemIdentifiers
setStoreRadioAdamID:
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:source:error:
isSubscriptionRequired
hasPlaybackCapability
shouldRequirePlaybackAuthorizationTokensForPlayback
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
isLoadedFromMiniSINF
assetProtectionType
purchaseBundleDictionary
protectedContentSupportStorageFileURL
isCloudStreamingAsset
userAgent
isTrustedHostForURL:
clientInfo
initWithClientInfo:
isHomeSharingAsset
cloudID
numberWithUnsignedLongLong:
numberWithLongLong:
initWithCapacity:
redownloadParameters
accountIdentifier
alternateHLSPlaylistURL
absoluteString
UTF8String
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
onlineSubscriptionKeysRequired
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
assetCacheProvider
genericObject
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
preferredMusicLowBandwidthResolution
_rtcReportingServiceIdentifierWithAssetURL:
_rtcReportingMediaIdentifierWithAssetLoadProperties:
URLAssetWithURL:options:
objectForKey:
setFollowUp:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
host
path
fileExistsAtPath:
identityKind
initWithModelKind:block:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
setTraits:
setHLSKeyServerURL:
setHLSKeyServerProtocol:
setHLSKeyCertificateURL:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
initWithPath:
enhancedAudioConfiguration
keyServerProtocolType
certificateURL
urlForBagKey:
streamingKeyServerURL
streamingKeyAdamID
_keyServerAdamID
initWithRequestContext:keyStore:
setAdamID:
setKeyServerURL:
setKeyCertificateURL:
setKeyServerProtocolType:
streamingKeyCertificateURL
isRemoteServerLikelyReachable
setBypassCache:
mediaItem
setValue:forProperty:
longLongValue
getKeyStatusForAccountUniqueIdentifier:error:
setRequestOfflineKeys:
addAsset:shouldPreloadKeys:
stringWithString:
appendString:
sharedSessionManager
backgroundSessionConfigurationWithIdentifier:
setAllowsCellularAccess:
setDiscretionary:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
setRequestCachePolicy:
initWithConfiguration:
sessionWithIdentifier:creationBlock:
preferredMusicHighBandwidthResolution
numberWithLong:
requestWithURL:
setTimeoutInterval:
initWithURLRequest:requestContext:
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
initWithURL:options:
statusOfValueForKey:error:
loadValuesAsynchronouslyForKeys:completionHandler:
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
playerItemWithAsset:
setVolumeAdjustment:
setMediaKind:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
heuristicInfo
encodingDelayInFrames
encodingDrainInFrames
durationInFrames
lastPacketsResync
setGaplessInfo:
initWithIdentifiers:
setDelegate:queue:
addOutput:
addObserver:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setAllowedAudioSpatializationFormats:
setPlayerItem:
willBecomeActivePlayerItemHandler
alternateHLSKeyCertificateURL
alternateHLSKeyServerURL
isiTunesStoreStream
audioAssetType
isDownloadedAsset
suzeLeaseID
_suzeLeaseMediaType
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
scheme
msv_analyticSignature
analyticsContentType
currentStableVariantID
audioFormatForStableVariantID:
audioFormatsDictionary
setAudioFormatsDictionary:
allValues
bitrate
bitDepth
sampleRate
sortedArrayUsingComparator:
setAvailableSortedFormats:
invalidateContentItemAudioFormatInfo
_emitAudioFormatChangeEvent
_updateActiveFormatJustification:
mpc_setupWithPlayerAudioFormat:forceSpatial:downloadedAsset:
activeFormat
setActiveFormatJustification:
activeFormatJustification
_audioFormatPreference
numberWithUnsignedInteger:
alternateFormats
audioRoute
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
itemFromModelObject:
library
databaseID
personID
universalCloudLibraryID
cloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
playbackError
shouldShowComposer
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
supportsRating
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
radio
stationID
stationHash
stationStringID
shouldReportPlayEventsToStore
lyrics
text
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfo
_startTime
_stopTime
_bookmarkTime
addEntriesFromDictionary:
snapshotWithDomain:type:subType:context:triggerThresholdValues:events:
setupWithPlaybackInfo
userRating
_updateAudioFormatInfoForContentItem:
traits
setSongTraits:
itemType
hasLoadedValueForKey:
setAlbumTraits:
playlist
setPlaylistTraits:
nowPlayingAudioFormat
setPreferredFormat:
setActiveFormat:
nowPlayingAudioRoute
setAudioRoute:
setFormatTierPreference:
msv_map:
setAlternativeFormats:
isItemAuthorized:
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
includeContentItemDebugFields
privateListeningStateSource
currentValue
boolValue
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
_currentPlaybackRate
resumeAutomaticKeyRenewal
pauseAutomaticKeyRenewal
controllerWithUserIdentity:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
assetAdamID
reportingAdamID
artworkCatalog
equivalencySourceAdamID
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
_isPrivateListeningEnabled
isSiriInitiated
trackInfoData
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
contentURI
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
performWithResponseHandler:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
setLastMetadataChangeTime:
observer
didSignificantlyChangeItem:
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
isFirstResponse
_updateDurationSnapshotWithElapsedTime:playbackRate:
newOperationWithResponseHandler:
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
deviceMediaLibraryWithUserIdentity:
invalidateContentItemDeviceSpecificUserInfo
explicitBadge
setExplicitBadge:
object
currentDeviceInfo
isWatch
isNetworkConstrained
isCurrentNetworkLinkExpensive
preferredVideoHighBandwidthResolution
preferredVideoLowBandwidthResolution
isAudioAccessory
isAppleTV
disableAssetCaching
setLoudnessInfo:
mediaKind
loudnessInfoVolumeNormalization
preferredMaximumResolution
setPreferredMaximumResolution:
preferredPeakBitRate
setPreferredPeakBitRate:
audioFormatPreference
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
_storeUbiquitousIdentifier
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
setBookmarkTime:
setHasBeenPlayed:
sharedUbiquitousPlaybackPositionController
persistPlaybackPositionMetadataEntity:isCheckpoint:completion:
initWithModel:
setMediaLibrary:
_utilitySerialQueue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
playbackPosition
postNotificationName:object:
updatePlayerItemMetadata
radioStation
string
rtcIdentifiersFromUniversalIdentifiers:
rtcIdentifiersFromRadioIdentifiers:
stringValue
appendFormat:
msv_enumerateKeysAndObjectsOrderedByKeyComparator:usingBlock:
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
userSkippedPlayback
keySpace
extraAttributes
dataValue
hasInflightLeaseAcquisition
leaseState
shouldPreventPlayback
codec
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
channelLayout
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
updateAudioFormatsDictionary:
updatePreferredFormat:
configureAVPlayerItemWithAudioFormat:forceSpatial:
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
prefersSeekOverSkip
setRating:
stationName
stationProviderID
supportsLikedState
supportsRateChange
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
nowPlayingInfoCenter:lyricsForContentItem:completion:
_applyLoudnessInfo
analyticsFormatType
leasePlaybackPreventionState
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
setSiriInitiated:
setRadioStreamPlayback:
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
setEventStream:
setAlternateFormats:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingServiceIdentifier
_identityPropertySet
_contentKeySession
_hlsDownloadURLSession
_hlsDownloadURLRequest
_genericObjectLock
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_hlsAsset
_downloadedAsset
_leasePlaybackPreventionState
_leaseStatus
_audioFormatsDictionary
_preferredAudioAssetType
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_eventStream
_preferredFormat
_activeFormat
_activeFormatJustification
_alternateFormats
_availableSortedFormats
_audioRoute
_loadedAudioAssetType
T@"NSDictionary",C,N,V_audioFormatsDictionary
T@"NSArray",&,N,V_availableSortedFormats
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
T@"NSString",C,N,V_assetSourceStoreFrontID
Tq,N,V_equivalencySourceAdamID
T@"MPModelGenericObject",&,N,V_genericObject
T@"NSData",R,C,N,V_jingleTimedMetadata
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
Tq,N,V_stationItemLikedState
T@"NSDictionary",&,N,V_trackInfo
T@"NSData",R,N
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
T@"MPCPlayerAudioFormat",&,N,V_preferredFormat
T@"MPCPlayerAudioFormat",&,N,V_activeFormat
Tq,N,V_activeFormatJustification
T@"NSArray",&,N,V_alternateFormats
T@"MPCPlayerAudioRoute",&,N,V_audioRoute
Tq,R,N,V_preferredAudioAssetType
Tq,R,N,V_loadedAudioAssetType
hlsAsset
TB,R,N,GisHLSAsset,V_hlsAsset
downloadedAsset
TB,R,N,GisDownloadedAsset,V_downloadedAsset
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
asset
_asset
_completionHandler
T@"AVURLAsset",R,W,N,V_asset
T@?,C,N,V_completionHandler
componentsJoinedByString:
stopDiscovery
_discoverAirplayDevices:
auxiliarySession
setCategory:error:
opaqueSessionID
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
waitForCompleteClusters
setWaitForCompleteClusters:
_reconSession
_waitForCompleteClusters
TB,N,V_waitForCompleteClusters
identityStore
initWithIdentityProperties:delegatedIdentityProperties:
getPropertiesForUserIdentity:completionHandler:
identityPropertySetFromRequestContext:completion:
setIdentityProperties:
setDelegatedIdentityProperties:
_identityProperties
_delegatedIdentityProperties
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
initWithWritingStyle:
setShouldReportPlayActivityEvents:
initWithPlayer:reportingController:
setOffline:
modelSong
displayType
visibleDuration
activeAccountRequestEnvironment
setIdentityPropertiesLoader:
setItemGenericObject:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
lyricsID
setLyricsID:
newPlayActivityEvent
setEventType:
setItemEndTime:
displayedCharacterCount
setLyricsDisplayedCharacterCount:
language
setLyricsLanguage:
sourceType
setSourceType:
setDisplayType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
_containerIndex
_itemIndex
executeWithUIDs:action:volumeValue:completion:
containsUID:
connectToEndpoint:completion:
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
dateWithTimeIntervalSince1970:
stringFromDate:
streamID
mainBundle
infoDictionary
payload
subscribeToEventType:handler:
findPreviousEventWithType:matchingPayload:
durationSinceEvent:
compare:
isRoot
stringByPaddingToLength:withString:startingAtIndex:
uuid
isDebug
integerValue
stringWithCapacity:
_logAccountEvent:subscription:cursor:
unsignedIntValue
stringByReplacingOccurrencesOfString:withString:
enumerateKeysAndObjectsUsingBlock:
msv_compactDescription
statusCode
localizedTitle
localizedMessage
actions
msv_description
componentsSeparatedByString:
humanDescription
dateByAddingTimeInterval:
enumeratePreviousEventsWithTypes:usingBlock:
timeIntervalSinceDate:
intValue
serverID
externalIdentifier
cursorUntilEvent:
setLastTimeControlStatusEvent:
lastTimeControlStatusEvent
subscribeToEventStream:
unsubscribeFromEventStream:
T@"NSString",R,C,N
subscription
_subscription
_lastTimeControlStatusEvent
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
T@"MPCPlaybackEngineEvent",&,N,V_lastTimeControlStatusEvent
findPreviousEventWithTypes:matchingPayload:
infoCenterForPlayerID:
playbackQueueDataSource
implementation
describePlayer:
sharedServerObjectDatabase
initWithRequest:serverObjectDatabase:
sectionedModelObjects
delegationProperties
userIdentity
defaultIdentityStore
DSIDForUserIdentity:outError:
array
sharedRestrictionsMonitor
allowsExplicitContent
needsPersonalization
preferredStoreStringIdentifierForPersonID:
UUID
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
storeIDs
_resolveContentDescriptorsUsingServerObjectDatabase
genericObjectWithModelObject:
copyWithPropertySet:
setPlaceholder:
copyWithBlock:
copyWithIdentifiers:
initWithModel:personalizationStyle:
setWithCapacity:
containsObject:
copyWithIdentifiers:propertySet:
_eligibilityForItem:
countForObject:
_playlistEntryForObject:containerUniqueID:
totalItemCount
playbackPrioritizedIndexPaths
isPlaceholder
allStoreItemDictionaries
initWithPayload:
_userIdentityWithRequest:
setUserIdentity:
importObjectsFromRequest:options:trustID:error:
_isFatalError:
lastBatchItemIdentifiers
storeItemMetadataForItemIdentifier:
_addEquivalencyForMetadata:requestStoreIdentifier:
isFinalResponse
removeAllObjects
performanceMetrics
networkingTimeFromMetrics:
accumulatorResult
response
initWitDatabaseImportResult:accumulatorImportResult:
clientIdentifier
setClientIdentifier:
setReason:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
indexOfObject:
objectAtIndex:
removeObjectAtIndex:
addObjectsFromArray:
setClientInfo:
setDelegatedUserIdentity:
setUserIdentityStore:
_createMusicKitRequestContext
setCollectionPlaybackAuthorizationToken:
initWithItemIdentifiers:personID:requestContext:
initWithStoreID:collectionType:requestContext:
initWithMediaAPICollectionItemMetadataRequests:collectionMetadataRequest:authTokenRenewalRequests:totalItemRequestCount:
playlistEntry
storeIDsToPlaybackAuthorizationTokensMap
modelGenericObjectFromObject:playbackAuthorizationToken:
_addPendingChildItem:identifiers:atSectionIndex:collectionPlaybackAuthorizationToken:requestType:
shouldRenewPlaybackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
setContainerUniqueID:
kindWithKinds:
unionSet:
setMovie:
setTvEpisode:
indexSet
orderedSet
_serverObjectFromPlaceholderContentDescriptor:propertySet:
indexPathWithIndex:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
addIndex:
replaceSectionsUsingBlock:
_updatedModelObjectFromOriginalObject:sectionPlaybackAuthorizationToken:itemSectionIndex:
replaceItemsUsingBlock:
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
insertSection:atIndex:
moveItemFromIndexPath:toIndexPath:
shiftIndexesStartingAtIndex:by:
relatedIdentifierSetsForParentIdentifierSet:childKey:
playbackAuthorizationTokenForEntityMatchingIdentifierSet:trustID:
versionHash
relatedIdentifierSetsForParentIdentifierSet:parentVersionHash:childKey:
removeObject:
modelObjectMatchingIdentifierSet:propertySet:
insertItem:atIndexPath:
enumerateIndexesUsingBlock:
minusSet:
setSubscriptionAdamID:
setUniversalCloudLibraryID:
setUniversalStoreIdentifiersWithBlock:
setPersonalStoreIdentifiersWithPersonID:block:
orderedSetWithObject:
setGlobalPlaylistID:
indexAtPosition:
mergeWithObject:
specificAccountWithDSID:
identityAllowingDelegation:
msv_errorByUnwrappingDomain:
initWithRequest:
unpersonalizedContentDescriptors
handleResponse:error:
handleMediaAPIResponse:trustID:isFinalResponse:
newStoreItemMetadataRequest
newMediaAPICollectionItemMetadataRequestInfo
_newIdentifierSetFromOriginalIdentifierSet:playbackAuthorizationToken:
equivalencyMapping
lastBatchNetworkingTime
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_storePersonalizationStyle
_sectionIndexToCollectionItemMetadataRequestMap
_sectionIndexToTokenRenewalRequestMap
_storeIDToCollectionMetadataRequestMap
_pendingCollectionMetadataRequests
_pendingCollectionItemMetadataRequests
_pendingCollectionItemTokenRenewalRequests
_progressiveContentDescriptors
_lastBatchNetworkingTime
T@"NSDictionary",R,C,N,V_equivalencyMapping
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N
Td,R,N,V_lastBatchNetworkingTime
sectionProperties
sectionKind
modelClass
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
propertySetWithProperties:
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:firstResponse:finalResponse:
setFirstResponse:
setFinalResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_firstResponse
_finalResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
firstResponse
TB,N,GisFirstResponse,V_firstResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSData",C,N,V_adamIDData
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
T@"NSArray",C,N,V_artworkDictionaries
_contextWithEvent:
sharedAnalytics
monotonicTime
logEventWithType:machAbsoluteTime:context:
countOfPreviousEventsWithType:matchingPayload:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
analyticsFormatInfo
_handleAssetLoadEnd:cursor:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
responseClass
T@"MPCPlayerPath",R,N
T{?=qq},R
T@"MPPropertySet",R,N
T@"NSString",R,N
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
_playerPath
_sessionProperties
T@"MPCPlayerPath",&,N,V_playerPath
T@"MPPropertySet",C,N,V_sessionProperties
sessionNumberOfPlayerPaths:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionMetadataObject:atIndexPath:chain:
initWithRequest:middleware:
builder
chain
initWithModelGenericObject:indexPath:response:
builderProtocol
_items
_controller
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
T@"MPCMediaRemoteController",R,N,V_controller
T@"MPSectionedCollection",R,N,V_items
_cloudID
_delegateInfoID
_purchaseHistoryID
_storeAdamID
_storeSubscriptionAdamID
_cloudUniversalLibraryID
_contentItemID
_playbackAuthorizationToken
addEngineObserver:
_registerForCommandHandlersRegisteredNotification
isSystemMusicApplication
initWithMachServiceName:
anonymousListener
resumeIfNeeded
commandHandlersRegistered
resume
invalidate
endpoint
_nowPlayingWithItem:
itemForContentItemID:
msv_compactMap:
modelObject
setContentItemID:
copyWithIdentifiers:block:
initWithModelObject:
displayIndexForContentItemID:
displayCount
artworkIdentifier
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
contentItemIDAtIndex:
playItemInQueueCommand
isSupportedAndEnabled
newCommandEventWithCommandType:options:
serverCopy
setFittingSize:
requestImageWithCompletion:
liveSnapshotWithRate:state:
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
_timeSnapshotWithElapsedTime:rate:
playbackContext
setQueueEndAction:
currentConnection
auditToken
hasSuffix:
setPlaybackQueueCommand
setActionAfterQueueLoad:
initWithPlaybackContext:
setReplaceIntent:
initWithCommand:playbackQueue:
insertIntoPlaybackQueueCommand
initWithCommand:playbackQueue:options:
playCommand
newCommandEvent
isEnabled
isSupported
pauseCommand
pauseWithFadeDuration:
changePlaybackPositionCommand
newCommandEventWithPositionTime:
reshuffleCommand
seekForwardCommand
seekBackwardCommand
newSeekCommandEventWithType:
changeRepeatModeCommand
newCommandEventWithType:
currentRepeatType
changeShuffleModeCommand
currentShuffleType
changePlaybackRateCommand
newCommandEventWithPlaybackRate:
allowsQueueModifications
setAllowsQueueModifications:
publishIfNeeded
removedItemIdentifiers
removeContentItemID:completion:
insertedDescriptors
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
addPlaybackContext:afterContentItemID:completion:
setDisableAutomaticCanBeNowPlaying:
setHasTimeSnapshot:
setTimeSnapshot:
_applyServerStateUpdateRecord:
setNowPlaying:
setHasNowPlaying:
setQueueDidChange:
_addContentItemIDsToUpdateRecord:
matchesStartItem:
queueDescriptor
setQueueDescriptor:
setHasQueueDescriptor:
autoPlayEnabled
setHasRepeatMode:
setRepeatMode:
setHasShuffleMode:
setQueueDidEnd:
setItemDidEnd:
processIdentifier
skipWithBehavior:
reshuffle
beginSeekWithDirection:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
interfaceWithProtocol:
setExportedInterface:
performQueueModifications:completion:
prerollWithCompletion:
beginPlaybackAtHostTime:
getNowPlayingsForContentItemIDs:reply:
exportedInterface
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
remoteObjectInterface
protocol
proxyWithObject:protocol:
setExportedObject:
applyServerStateUpdateRecord:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
setRemoteObjectInterface:
integerForKey:
_handleCommandHandlersRegistered:
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
setHasContentItemIDs:
setContentItemIDs:
remoteObjectProxy
listener:shouldAcceptNewConnection:
engine:didChangeAccounts:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
isRunning
startServer
stopServer
systemCache
listener
activeConnections
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_resumed
_systemCache
_listener
_activeConnections
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
T@"NSXPCListener",R,N,V_listener
T@"NSMutableArray",R,N,V_activeConnections
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
mediaRemoteOptions
command
mediaRemoteCommandType
initWithCommand:mediaRemoteType:options:
isLiveRadioStream
prefersHighQualityContent
predicateWithFormat:
radioStreamAssetInfoList
filteredArrayUsingPredicate:
flavor
sortUsingComparator:
streamURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
streamProtocol
setIsHLSAsset:
allowsHLSContent
hlsAssetInfo
playlistURL
alternatePlaylistURL
setAlternateHLSPlaylistURL:
alternateKeyServerURL
setAlternateHLSKeyServerURL:
alternateKeyCertificateURL
setAlternateHLSKeyCertificateURL:
setAllowsAssetCaching:
setAssetPathExtension:
setAssetQualityType:
keyServerAdamID
setStreamingKeyAdamID:
fileAssetInfoList
flavorType
fileExtension
setOnlineSubscriptionKeysRequired:
fairPlayInfoList
purchaseBundleSinfDictionary
setPurchaseBundleDictionary:
protectionType
setAssetProtectionType:
setSuzeLeaseID:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
setAudioAssetType:
setSource:
descriptionDictionary
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
setDownloadedAsset:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isHLSAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_keyServerProtocolType
_streamingKeyAdamID
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
_audioAssetType
_source
TB,N,V_allowsAssetCaching
TB,N,V_allowsAssetInfoCaching
T@"NSString",C,N,V_assetPathExtension
Tq,N,V_assetProtectionType
Tq,N,V_assetQualityType
T@"NSURL",C,N,V_assetURL
TB,N,V_isHomeSharingAsset
TB,N,V_isHLSAsset
TB,N,V_isCloudStreamingAsset
TB,N,V_onlineSubscriptionKeysRequired
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSDictionary",C,N,V_purchaseBundleDictionary
T@"NSURL",C,N,V_streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyServerURL
T@"NSString",C,N,V_keyServerProtocolType
T@"NSNumber",C,N,V_streamingKeyAdamID
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
T@?,C,N,V_willBecomeActivePlayerItemHandler
T@"NSString",C,N,V_playbackAuthorizationToken
Tq,N,V_audioAssetType
TB,N,GisDownloadedAsset,V_downloadedAsset
Tq,N,GisLoadedFromMiniSINF,V_source
setStoreAccountID:
localStoreAccountProperties
setStoreFrontID:
cloudServiceStatusControllerWithUserIdentity:
musicSubscriptionStatus
hasCapability:
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
T@"MPCReportingDeviceIdentityPropertiesLoader",R,N
_calloutQueue
_serialWorkQueue
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
tracks
effectiveNetworkTypeForPlayback
requiredMediaClipProperties
rtcReportingAssetType
initWithMediaClip:
_modelGenericObject
_mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
_updateSupportedCommands
remoteCommandCenter
setWantsSerializedEventDelivery:
nowPlayingInfoCenter
setPlaybackQueueDataSource:
initWithSuiteName:
_durationAvailableNotification:
_likedStateChangedNotification:
_commandEventDidTimeoutNotification:
_updateLaunchCommands
becomeActive
systemRoute
pathWithRoute:mediaRemotePlayerPath:isResolved:
isEngineRestoringState
isQueueHandoffSupported
accountManager
hasLoadedInitialAccounts
hasInitializedSupportedCommands
_performCommandEvent:completion:
hasTargets
removeTarget:action:
addTarget:action:usingExtendedStatus:
stopCommand
togglePlayPauseCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
setTimeout:
setPlaybackSessionCommand
prepareForSetPlaybackQueueCommand
setSkipSerializedEventDelivery:
clearUpNextQueueCommand
skipForwardCommand
setPreferredIntervals:
skipBackwardCommand
mediaPlaybackCoreBundle
localizedStringForKey:value:table:
likeCommand
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
boolForKey:
getPendingCommandTypesWithCompletion:
isInSharedListeningMode
_endSynchronizedPlayback
sessionManager
stateRestorationSessionIdentifier
loadSessionWithIdentifier:completion:
invalidatePlaybackQueue
setPlaybackState:
setCurrentRepeatType:
setCurrentShuffleType:
changeQueueEndActionCommand
setCurrentQueueEndAction:
isEqualToArray:
isActiveAccount
hasCatalogPlaybackCapability
requiresAuthorizationTokenForPlayback
startDate
token
endDate
setModelSong:
setVisibleDuration:
reportingController
containsCommand:
commandID
delegate
engine:prepareForActivationWithCompletion:
initWithDeallocHandler:
engine:didFailToActivateWithError:resolution:
activationDelay
contextID
fallbackPlaybackIntent
containsTransportableContent
isCurrentItemFromAutoPlay
accountForDSID:
hasCloudLibraryEnabled
hashedDSID
setEnabled:
_supportedSessionTypes
disableQHO
setSupportedSessionTypes:
preloadPlaybackSessionCommand
updateLaunchCommandsWithConfigurationHandler:
setCurrentPlaybackSessionIdentifier:
supportsFastForward
supportsRewind
setCanBeControlledByScrubbing:
canPreviousTrackForItem:
canNextTrackForItem:
isTailPlaceholder
createRadioStationCommand
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
shuffleType
userCanEnableAutoPlay
setSupportedQueueEndActions:
supportedInsertionPositions
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
disableQueueModificationsCommand
_exportableSessionTypes
setExportableSessionTypes:
stagedQueueControllerIdentifiers
queueControllerForIdentifier:
revisionString
commandInfoWithIdentifier:revision:priority:
setPriorityForPlaybackSessionCommand
setPreloadedSessions:
discardPlaybackSessionCommand
stationAllowsItemLiking
setPresentationStyle:
likedState
setActive:
addNowPlayingItemToLibraryCommand
setStatusBlock:
configureWithModelObject:
addItemToLibraryCommand
ratingCommand
leaveSharedPlaybackSessionCommand
shareQueueCommand
debugCommand
_performDebugEvent:completion:
setSupportedSubsystems:
setSubsystemRevisions:
accountForUserIdentity:
statusType
_isRestrictedSubscriptionUser:
dataUsingEncoding:
statusWithCode:customData:type:
statusWithCode:
isNegative
stringByAppendingFormat:
interfaceID
analyticSignature
isMediaServerAvailable
setCanStealLeaseIfNeeded
_enqueueFallbackIntentIfNeededForCommandEvent:play:completion:
_becomeActiveIfNeededWithCompletion:
defaultMediaLibrary
setPersistentID:
setLibraryIdentifiersWithDatabaseID:block:
firstContentItemIDForItemIntersectingIdentifierSet:
setContainedPersistentID:
canJumpToContentItemID:
jumpToContentItemID:userInitiated:
isRequestingDefermentToPlaybackQueuePosition
usesNewPlaybackImplementation
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
jumpToFirstContentItem
positionTime
playbackQueue
_canInsertPlaybackContext:forUser:
privateListeningOverride
setPrivateListeningOverride:
T@"NSNumber",C,N
setSiriReferenceIdentifier:
insertionPosition
insertAfterContentItemID
addPlaybackContext:atPosition:completion:
insertBeforeContextItemID
moveContentItemID:beforeContentItemID:completion:
insertAfterContextItemID
moveContentItemID:afterContentItemID:completion:
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
queueEndAction
setAutoPlayEnabled:
preservesQueueEndAction
setAutoPlayEnabled:forUserIdentity:
prepareForPlaybackWithAccount:completion:
replaceIntent
hasUserMutations
verifyWithError:
supportsAccountRectification
setPlaybackRequestEnvironment:
T@"MPCPlaybackRequestEnvironment",C,N
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
sessionIdentifierOverride
setSessionIdentifier:
shouldBecomeActive
stationURL
radioPlaybackIntentWithStationURL:
setPlayActivityFeatureName:
isRequestingPlaybackInitialization
_playbackStateIsIdle:
radioPlaybackIntentFromSong:
playbackSessionData
decodedObjectOfClass:fromData:error:
_emitEventsForPlaybackBehaviorChange
infoCenter
invalidatePlaybackQueueWithCompletion:
finalizeStateRestorationWithCompletion:
playbackSessionDataFilePath
dataWithContentsOfURL:
stageQueueController:forIdentifier:
priority
unstageQueueControllerForIdentifier:
durationIsValid
durationInSeconds
interval
setLikedState:forUserIdentity:
rating
kindWithVariants:
currentStatus
setModelObject:
setShouldLibraryAdd:
setModelObjects:
clearUpNext
playbackRate
leaveSharedSessionWithCommandID:completion:
setTracklistToken:
setTracklistSource:
payloadValueFromJSONValue:
sessionIdentifier
buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:
_getSharedQueueTracklistWithCompletion:
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_disableQueueModificationsChangedNotification:
setEngineRestoringState:
setMediaServerAvailable:
_libraryAddStatusObserver
_libraryAddStatusObserverLock
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountRequiresAuthorizationTokensForPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_nextPreviousTrackCooldownTimer
_deferredTrackChangeDelta
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
isPlaceholderItemForContentItemID:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
updateLocationDependentPropertiesForItem:
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setCompletedUnitCount:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:userInfo:error:
responseWithIdentifier:sessionType:data:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
contentItemForOffset:
substringToIndex:
requestedProperties
initWithRequestedProperties:
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:userIdentity:
storeAdamID
formerStoreAdamIDs
setFormerAdamIDs:
offerWithType:
accountDSID
setTrackNumber:
setTrackCount:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
fileAsset
allowsCachedAssets
isHLSFileAsset:
_loadedAudioAssetTypeForFileAsset:
qualityType
hlsKeyServerURL
hlsKeyCertificateURL
fileExistsAtPath:isDirectory:
purchaseBundleFilePath
initWithContentsOfFile:
propertyListWithData:options:format:error:
fileURLWithPath:isDirectory:
pathExtension
URLWithString:
hlsKeyServerProtocol
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_allowsCachedAssets
_assetLoadProperties
_responseHandler
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
TB,N,V_requirePreferredAssetQuality
TB,N,V_allowsCachedAssets
T@?,C,N,V_responseHandler
bundleWithIdentifier:
getRemotePlaybackQueueRepresentationWithCompletion:
musicShuffleType
itemKind
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
setLabel:
startItemIdentifiers
playActivityFeatureName
playActivityQueueGroupingID
mpc_protoContainerRepresentation
intersectsSet:
mpc_protoItemRepresentation
addDelegationUUIDs:forUserIdentity:completionHandler:
currentDeviceDelegateInfo
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
playActivityRecommendationData
initWithData:encoding:
setSiriRecommendationIdentifier:
seedContentReference
ICRadioContentReference
nowPlayingContentReference
originalIdentifierSet
globalPlaylistID
cloudVersionHash
shouldExcludeFromShuffle
_initWithMediaLibrary:
_persistentIDForModelObject:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
ml3Library
autoupdatingSharedLibrary
pathForResourceFileOrFolder:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProviderWithUserIdentity:
_objectForIdentifier:
_fetchObjectFromPayloadWithIdentifier:
_setObjectInPayload:withIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
_setPayloadIdentifier:object:withBlock:
_payloadForIdentifier:
unarchivedObjectOfClass:fromData:error:
_setPayload:object:identifier:
_addObjectToPayload:withIdentifier:
mpc_commandOptions
mpc_destination
mpc_playbackQueue
mpc_setCommandOptions:
mpc_setDestination:
mpc_setPlaybackQueue:
T@"MPCAssistantPlaybackQueue",C,N,Smpc_setPlaybackQueue:
T@"MPCAssistantRemoteControlDestination",C,N,Smpc_setDestination:
T@"NSDictionary",C,N,Smpc_setCommandOptions:
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
deviceGUID
deviceName
systemReleaseType
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
setPlayActivityRecommendationData:
queueGroupingID
setPlayActivityQueueGroupingID:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
route
isDeviceRoute
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
setExpirationDate:
sharedService
addAssertion:
queueFeederClass
msv_errorWithDomain:code:userInfo:debugDescription:
getRepresentativeMetadataForPlaybackContext:properties:completion:
generateNowPlayingContentItemWithMetadataObject:
nowPlayingInfo
artworkCatalogForMetadataModelObject:
getRepresentativeObjectWithProperties:completion:
firstModelPlayEvent
preferredArtworkSize
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
encodedDataWithRootObject:error:
reloadSection:completion:
section:supportsShuffleType:
section:shouldShuffleExcludeItem:
loadPlaybackContext:completion:
modelPlayEventForItem:inSection:
identifiersForItem:inSection:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
itemDidBeginPlayback:
canJumpToItem:
canSkipItem:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
supportsAutoPlay
setType:
setSessionIdentifier:type:data:
bundleIdentifier
setBundleIdentifier:
setSupportedOptions:
setFallbackStoreIdentifier:
subtitle
setSubtitle:
setArtworkImageData:
initWithBlock:
setDisplayProperties:
setContinueListeningStation:
setSeedContentReference:
referenceWithMPModelObject:
radioPlaybackIntentFromReference:
setRadioStation:
setStationStringID:
setRadioIdentifiersWithBlock:
setRadioStationURL:
tracklistSource
number
podcast
author
podcastEpisode
radioStationEvent
curator
socialPerson
recordLabel
group
tracksTiledArtworkCatalogWithRows:columns:
editorialArtworkCatalog
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
setQueueGroupingID:
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_startTimeModifications
_endTimeModifications
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_repeatMode
_queueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
T@"<MPCPlaybackIntentDataSource>",R,N
T@"NSString",C,N,V_localizedTitle
Tq,N,V_tracklistSource
T@"<NSSecureCoding>",&,N,V_tracklistToken
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatMode
TB,N,V_prefersEnqueuingUsingAirPlay
T@"NSString",C,N,V_queueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_siriReferenceIdentifier
T@"MPCPlaybackSharedListeningProperties",R,N
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
playbackSessionType
decodedObjectOfClasses:fromData:error:
containsAppleMusicRadioContent
_sessionIdentifier
_sessionKey
T@"NSString",R,N,V_sessionIdentifier
T@"NSString",R,N,V_sessionKey
_accountInfo
_nowPlayingContentReference
_playActivityQueueGroupingID
_radioStationID
_radioStationURLString
_seedContentReference
setStationHash:
setStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseArray
artworkURL
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
allowsItemLiking
setAllowsItemLiking:
attributionLabel
setAttributionLabel:
setSubtype:
providerResource
setProviderUniversalLink:
setProviderBundleIdentifier:
modelRadioStationForMetadata:userIdentity:
_requestedRadioStationProperties
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
resolvedPlayerPath
isInProcess
playerRequest
initWithName:object:handler:
setPlayerRequest:
_playerRequest
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"MPCPlayerRequest",&,N,V_playerRequest
lastRecordedPlayEvent
meetsPlaybackHistoryThreshold
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
T@"NSOperationQueue",&,N,V_operationQueue
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
initWithMiddleware:
_playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
willChangeValueForKey:
didChangeValueForKey:
callbackQueue
setError:
main
hasLoadableAsset
_configureItem:error:
configureQueuePlayerItem:error:
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
isExecuting
isFinished
_isExecuting
_isFinished
_item
_delegate
_token
_callbackQueue
_error
T@"MPAVItem",R,C,N,V_item
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
Tq,R,N,V_token
T@?,R,C,N,V_completion
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
T@"NSError",&,N,V_error
loadingQueue
cancelAllOperations
loadAssetFor:token:completion:
cancelLoading
_loadingQueue
T@"NSOperationQueue",R,N,V_loadingQueue
artworkProperties
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_artworkIdentifier
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
_urlForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
sharedDataSource
T@"MPCRemotePlayerArtworkDataSource",R,N
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
CGSizeValue
assistantStreamingGetAvailability:
assistantRadioGetAvailability:completion:
hasLoadedRadioAvailability
isRadioAvailable
getRadioAvailabilityWithCompletionHandler:
assistantStreamingGetAvailability
assistantRadioGetAvailability:
objectForInfoDictionaryKey:
initWithBundleIdentifier:allowPlaceholder:error:
shortVersionString
bundleVersion
MPC_storeFrontIdentifierKey
setShouldRequireCachedResults:
defaultInfo
setClientVersion:
setShouldIgnoreExpiration:
sharedStoreItemMetadataRequestController
cacheMissItemIdentifiers
getStoreItemMetadataForRequest:responseHandler:
initWithRequestedPropertySet:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:userIdentity:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
setOverridePlayingItem:
setPlayingItemIndexPath:
overridePlayingItem
playingItemIndexPath
T@"MPModelGenericObject",R,N
T@"NSIndexPath",R,N
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
setPurchasedAdamID:
setCloudAlbumID:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setSeason:
rangeOfString:
performRequest:options:extendedStatusCompletion:
requestWithCommandRequests:
setOptions:
performWithExtendedStatusCompletion:
initWithCommandRequests:
msv_firstWhere:
options
blockOperationWithBlock:
initWithCommandRequest:options:sendDate:
addDependency:
performRequest:completion:
performRequest:options:completion:
performRequest:extendedStatusCompletion:
performWithCompletion:
commands
setCommands:
_options
_commands
T@"NSArray",&,N,V_commands
TQ,N,V_options
originatingOutputDeviceUID
appBundleID
pathWithDeviceUID:bundleID:pid:playerID:
createRemotePlaybackQueue
initWithMediaRemoteCommand:options:playerPath:label:
initWithSiriUserActivity:
initWithMediaRemoteCommand:options:controller:label:
setCommandOptionValue:forKey:
originalLabel
userInitiatedOptions
setUserInitiatedOptions:
statusTransformer
setStatusTransformer:
_command
_label
_originalLabel
_userInitiatedOptions
_statusTransformer
T@"NSString",R,C,N,V_originalLabel
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
T@?,C,N,V_statusTransformer
T@"NSString",C,N,V_label
dependencies
msv_errorByUnwrappingDomain:code:
sendCommand:options:completion:
sendCommand:options:toPlayerPath:completion:
resolveWithRouteResolvedHandler:completion:
sendDate
_sendDate
_status
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
T@"NSDate",R,N,V_sendDate
T@"MPCPlayerCommandStatus",R,N,V_status
lightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
isEmpty
arrayByAddingObjectsFromArray:
_stateDumpObject
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
disablePlaybackStateValidation
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_tracklistRange
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
TB,N,V_disablePlaybackStateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T{?=qq},N,V_tracklistRange
initWithResponse:
_commandRequestForMediaRemoteCommand:
createSharedSessionWithIdentity:intentHandler:
mpc_jsonValue
customDataType
customData
componentsWithString:
queryItems
value
createSharedSessionWithIntentHandler:
leaveSession
participants
isSharedListeningSession
videoView
setVideoView:
videoOutput
setVideoOutput:
_sharedListeningSession
_state
_participants
_videoView
_videoOutput
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
T@"NSArray",R,N,V_participants
sharedListeningSession
TB,R,N,GisSharedListeningSession,V_sharedListeningSession
initWithPlayerPath:
_response
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
decodeBoolForKey:
encodeBool:forKey:
setNowPlayingContentReference:
setStationURL:
continueListeningStation
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
continueListeningQueueProvider
setContinueListeningQueueProvider:
stationPlaybackAuthorizationToken
setStationPlaybackAuthorizationToken:
descriptionComponents
requestEnvironmentWithUserIdentity:
overrideValue
setOverrideValue:
T@"ICUserIdentity",C,N
_continueListeningStation
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_stationURL
_stationPlaybackAuthorizationToken
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
TB,N,V_continueListeningStation
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
Tq,N,V_continueListeningMaxQueueReferences
Tq,N,V_continueListeningPrefetchThreshold
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"NSString",C,N,V_stationPlaybackAuthorizationToken
stationEventID
setDateFormat:
_sendReportForSessionSummary:event:withType:
_sendReportForItemSummaryWithEndReason:cursor:event:
_sendReportForSessionStart:event:withType:
_handleReportingForItemStartEvent:event:
_sendReportForItemSummary:event:
_sendSessionStartIfNeeded:forItemEvent:
_sendQueueLoadEventIfNeeded:forItemEvent:
_sendReportForItemAssetLoad:event:
_payloadForSessionSummary:fromEvent:
playbackSessionRTCSession
_sendReportWithSession:category:type:payload:
_payloadForSessionStart:fromEvent:
cursorFromEvent:untilEvent:
dateFormatter
setPlaybackSessionRTCSession:
_generateConfiguredReportingSessionWithToken:serviceName:completion:
_payloadForQueueLoad:fromQueueLoadEndEvent:
setPlaybackQueueRTCSession:
_payloadForItemAssetLoad:fromItemEvent:
setPlaybackItemRTCSession:
_payloadForItemSummary:fromEvent:
playbackItemRTCSession
_perceivedItemStartTime:fromItemStartEvent:
_updateAssetLoadInfoEvent:fromAssetLoadEndEvent:cursor:
arrayWithObjects:
_payloadForItemSummary:fromItemEvent:
countOfPreviousEventsWithTypes:matchingPayload:
insertObject:atIndex:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
containsString:
isValidJSONObject:
dataWithJSONObject:options:error:
previousItemEventWithCursor:type:
monotonicDate
_rtcSessionInfoWithToken:
_rtcUserInfoWithServiceName:
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
processInfo
processName
performOnPayload:withCategory:type:
sendMessageWithCategory:type:payload:error:
NSStringFromMPCRTCReportingEventCategory:
setTestingDelegate:
testingDelegate
playbackQueueRTCSession
_rtcGroup
_rtcQueue
_testingDelegate
_playbackSessionRTCSession
_playbackQueueRTCSession
_playbackItemRTCSession
T@"RTCReporting",&,V_playbackSessionRTCSession
T@"RTCReporting",&,V_playbackQueueRTCSession
T@"RTCReporting",&,V_playbackItemRTCSession
T@"<MPCRTCEventConsumerTestingDelegate>",W,N,V_testingDelegate
setIdentifier:
endWithIdentifier:error:
initWithIdentifier:timeout:
beginWithIdentifier:
endWithError:
endWithIdentifier:item:
instanceMethodForSelector:
initWithIdentifier:
begin
endWithItem:
TQ,N,V_identifier
startFrame
setStartFrame:
endFrame
setEndFrame:
iterations
setIterations:
_startFrame
_endFrame
_iterations
Tq,N,V_startFrame
Tq,N,V_endFrame
Tq,N,V_iterations
version
setVersion:
frameRate
setFrameRate:
scenes
setScenes:
_version
_frameRate
_scenes
T@"NSString",C,N,V_version
Td,N,V_frameRate
T@"NSArray",C,N,V_scenes
_sharedInitWithItem:
_createSceneCollectionForAssetWithPreloadedKeys:
assetWithURL:
initWithAsset:sceneCollection:
_executeSceneCollection
playerWithPlayerItem:
setActionAtItemEnd:
addObserver:forKeyPath:options:context:
setExecutingPauseScene:
_updateRateIfNeeded
_advanceScene
player
removeObserver:forKeyPath:
timeObserver
removeTimeObserver:
setCurrentSceneIndex:
setCurrentLoopCount:
isExecutingPauseScene
pauseFinishedBlock
setSceneExecutionPaused:
setStatus:
pauseScenes
_pause
sceneCollection
currentSceneIndex
frameForCMTime:
_CMTimeForFrame:
currentLoopCount
isSceneExecutionPaused
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
isPlayable
metadata
sceneCollectionForMetadataItems:
setSceneCollection:
isScriptedLoopingDisabled
seekToFrameIfNeeded:completionHandler:
setItemDidPlayToEndObserver:
_executeCurrentScene
currentScene
_loopIfNeeded
valueWithCMTime:
addBoundaryTimeObserverForTimes:queue:usingBlock:
setTimeObserver:
restartScenes
setScriptedLoopingDisabled:
scriptedLoopingDisabled
TB,N,GisScriptedLoopingDisabled
initWithURL:sceneCollection:
playScenes
observeValueForKeyPath:ofObject:change:context:
setPauseFinishedBlock:
itemDidPlayToEndObserver
_executingPauseScene
_sceneExecutionPaused
_player
_pauseFinishedBlock
_sceneCollection
_timeObserver
_itemDidPlayToEndObserver
_currentSceneIndex
_currentLoopCount
Tq,N,V_status
T@?,C,N,V_pauseFinishedBlock
T@"MPCSceneCollection",&,N,V_sceneCollection
T@,&,N,V_timeObserver
T@"MPNotificationObserver",&,N,V_itemDidPlayToEndObserver
Tq,N,V_currentSceneIndex
Tq,N,V_currentLoopCount
executingPauseScene
TB,N,GisExecutingPauseScene,V_executingPauseScene
sceneExecutionPaused
TB,N,GisSceneExecutionPaused,V_sceneExecutionPaused
T@"AVPlayer",R,N,V_player
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
deleteCharactersInRange:
initWithRequest:responseHandler:
decodeObjectOfClasses:forKey:
isSubclassOfClass:
requiresNetwork
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
setSectionedModelObjects:
setStoreIDs:
setStoreIDsToPlaybackAuthorizationTokensMap:
trustID
setTrustID:
setPlaybackPrioritizedIndexPaths:
sharedListeningQueue
setSharedListeningQueue:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_storeIDsToPlaybackAuthorizationTokensMap
_trustID
_playbackPrioritizedIndexPaths
_sharedListeningQueue
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"ICSharedListeningQueue",&,N,V_sharedListeningQueue
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_allowLocalEquivalencies
T@"NSString",C,N,V_clientIdentifier
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
T@"NSArray",C,N,V_storeIDs
T@"NSDictionary",C,N,V_storeIDsToPlaybackAuthorizationTokensMap
T@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>",C,N,V_trustID
T@"MPCPlaybackEngine",&,N,V_playbackEngine
commandRequest
event
initWithMPAction:request:
_action
initWithMPDialog:request:
_dialog
_actions
T@"NSArray",R,N,V_actions
mediaRemoteType
T@"MPRemoteCommandStatus",R,N,V_status
T@"MPCPlayerCommandDialog",R,N,V_dialog
firstPlayMetricsWithFirstFrameEvent:cursor:
sendFirstItemMetrics:
assetLoadWaitTime
assetLocation
assetSource
assetType
bagWaitTime
errorResolution
errorSignature
firstAudioFrameWaitTime
formatInfo
getTracksWaitTime
hasAccountInfo
leaseWaitTime
lookupWaitTime
mediaRedownloadWaitTime
subscriptionAssetLoadWaitTime
suzeLeaseWaitTime
hlsMetadataWaitTime
isAutoPlayEnabled
isDelegatedPlayback
isFirstPlay
isReplacingPlayback
isSharePlay
isShuffled
mediaPlayerTime
musicWaitTime
playCommandSendTime
playCommandWaitTime
queueLoadWaitTime
queueType
rateChangeWaitTime
readyToPlayStatusWaitTime
routeInfo
sessionActivationWaitTime
setQueueCommandSendTime
musicTotalTime
mpc_remoteCommandDialog
statusWithCode:dialog:
localizedDescription
dialogWithTitle:message:
actionWithTitle:type:commandEvent:
addAction:
T@"MPRemoteCommandStatus",R,N
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
TB,R,N,GisFinalResponse
initWithRequest:personalizationResponse:networkingTime:
setInvalidationDate:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
networkingTime
setNetworkingTime:
_invalidationTimer
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
_networkingTime
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
T@"NSDate",C,N,V_invalidationDate
Td,N,V_networkingTime
initWithDomain:code:userInfo:
underlyingErrors
assetSourceStorefrontID
isFollowUp
householdID
setHouseholdID:
storefrontID
_allowsHLSContent
_prefersVideoContent
_followUp
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
TB,N,V_allowsHLSContent
T@"NSString",C,N,V_assetSourceStorefrontID
TB,N,V_prefersVideoContent
T@"MPModelFileAsset",&,N,V_fileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPIdentifierSet",&,N,V_itemIdentifiers
TB,N,V_prefersHighQualityContent
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
T@"NSString",C,N,V_householdID
T@"NSString",C,N,V_storefrontID
Tq,N,V_preferredAudioAssetType
controllerForPlayerPath:
setControllerFuture:
setController:
initWithMiddleware:playerPath:
_controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
defaultTimeZone
stringFromDate:timeZone:formatOptions:
MSVBase64UUIDString
initWithType:payload:monotonicTime:identifier:
monotonicTimeNanoSeconds
machAbsoluteTime
_type
_payload
_machAbsoluteTime
_monotonicTime
T{?=QQQQd},R,N,V_monotonicTime
TQ,R,N,V_machAbsoluteTime
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
T@"NSDate",R,N
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
metadataForFormat:
mpc_HLSAVMetadataItemInMetadata:
mpc_synchronousHLSSessionDataWithTimeout:error:
operationsForSessionRequest:
pathByAppendingPlayerIDSuffix:
playerState
skippedMetadata
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
T@"MPSectionedCollection",&,N,V_queueContentItems
T@"MPSectionedCollection",&,N,V_queueModelObjects
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
T@"NSString",C,N,V_queueIdentifier
Tq,N,V_playerState
_supportedCommands:infoValueForKey:
unsignedIntegerValue
commandInfoForCommand:
isLoading
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
localizedDurationString
editingStyleFlags
auxiliaryNowPlayingInfo
availableLanguageOptions
currentLanguageOptions
initWithNowPlayingInfoAudioFormat:
formatTierPreference
alternativeFormats
initWithNowPlayingInfoAudioRoute:
_mediaRemoteContentItem
mpc_isAirplayDeviceBusyError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayStreamingNotSupportedError
mpc_isQueueLoadingFailure
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
mpc_isSubscriptionRequiredError
setLastItemUsedForErrorResolution:
failedItemsIdentifiers
MPAVItemForMFPlayerItem:
externalPlaybackRouter
pickBestDeviceRoute
lastItemUsedForErrorResolution
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
errorDomain
_notifyObserversForError:item:
hasPerformedErrorResolution
setHasPerformedErrorResolution:
_resolutionForPlaybackError:item:
shouldHandleFirstItemFailure:item:
isUnrecoverableAssetLoadingError:
canHandleFirstItemFailure
isQueueLoadingFailure:
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
isAssetUnavailableFailure:
isFirstItemFailure:item:
reportCriticalError:forItem:
setFailedItemsIdentifiers:
setExternalPlaybackRouter:
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
T@"NSString",C,N,VpreferredFirstContentItemID
TB,N,VitemsHavePlayed
cancellationHandler
operationType
subscriptionLeaseSession
_canRetrieveLoadResultsFromMiniSinf
_loadResultsFromMiniSinfWithPlaybackAuthorizationToken:
_canRetrieveLoadResultsFromServerObjectDatabase
_loadResultsFromLocalAssetCacheWithPlaybackAuthorizationToken:
setStoreSubscriptionAdamID:
isDelegatedLeaseSession
setStoreCloudID:
setStorePurchasedAdamID:
setCloudUniversalLibraryID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithRequestContext:storeSubscriptionAdamID:
disableMiniSINF
assetsWithMiniSINFsMatchingIdentifierSet:
assetsMatchingIdentifierSet:
sinfs
miniSINF
initWithFileAssetResponseDictionary:
setExpectedProtectionType:
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
assetExpirationDate
setDialogDictionary:
fileAssets
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_cancellationHandler
_operationType
_requestContext
Tq,N,V_operationType
T@"ICStoreRequestContext",C,N,V_requestContext
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
setRequestingBundleIdentifier:
setRequestingBundleVersion:
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
query
setLegacyMediaQuery:
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setStartItemIdentifiers:
startTimes
endTimes
isPrivate
staticSourceWithValue:
startItemID
storeItemID
playParametersQueue
isLibraryContent
itemID
predicateWithValue:forProperty:
setWithObject:
initWithFilterPredicates:
setGroupingType:
collections
catalogID
initWithEntities:entityType:
startItemPlayParameters
localizedName
playbackArchive
soundCheckEnabled
_equivalencySourceAdamIDForIdentifierSet:
forceLibrarySupplementalContexts
_sectionedModelObjectsRepresentationForSectionedCollection:
firstSection
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
enumerateSectionIdentifiersUsingBlock:
_supplementalLibraryRequest
setSkipEncodingMediaLibraryUniqueID:
playEventWithModelObject:featureName:
indexForItem:
identifierRegistryWithExclusiveAccessReturningInteger:
indexPathForGlobalIndex:
itemAtIndex:
identifierRegistryWithExclusiveAccessReturningObject:
modelResponse
identifierSetAtIndex:
identifiersForItemAtIndexPath:
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
identifierRegistryWithExclusiveAccess:
isValidForPreviousCount:finalCount:reason:
applyChanges:identifierSetLookupBlock:
applyChanges:itemLookupBlock:
updateSection
_didUpdateToResponse:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
unlock
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
fallbackSectionRepresentation
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
assetStoreFronts
mqf_requiredItemPlaybackProperties
genericObjectType
relationshipKeyForGenericObjectType:
mqf_requiredSectionPlaybackProperties
isEqualToIdentity:inStore:
setModelRequest:
setNeedsReload
enumerateItemIdentifiersUsingBlock:
beginAutomaticResponseLoading
MPC_consumeSiriAssetInfo:userIdentity:completion:
weakObjectsHashTable
setFeeder:
playbackInfoForItem:
setPlaybackInfo:
beginBackgroundTaskWithName:expirationHandler:
allowedSectionIdentifiers
setCloudID:
setAllowedSectionIdentifiers:
allowedItemIdentifiers
setAllowedItemIdentifiers:
scopedContainers
setScopedContainers:
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
updatedPlaybackContext
_performRequestUpdate:
setFallbackSectionRepresentation:
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_section
_currentItem
_playbackContext
_representativeMetadataPropertySet
_backgroundTaskIdentifier
_backgroundTasks
_fallbackSectionRepresentation
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
T@"MPModelResponse<MPCModelPlaybackResponse>",R,N,V_response
initWithRadioStationTracks:
analyticsSignpostsEnabled
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithRequest:personalizationResponse:
initWithStartHandler:
setAnalyticsSignpostsEnabled:
_radioStationTracks
_analyticsSignpostsEnabled
TB,N,V_analyticsSignpostsEnabled
representedObjectResults
setRadioStationTracks:
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
T@"MPSectionedCollection",R,C,D,N
updatePlaybackCoordinator:
originalPlaybackContext
supplementalPlaybackContext
replaceIdentifierRegistry:
containsRestorableContent
msv_userInfo
shouldRequestAdditionalItemsAtTail
_buildPlaceholder
_inLock_buildPlaceholder
isCompatibleWithReplacementContext:incompatibleReason:
_updateRadioStationPlaybackAuthorizationTokenIfNeeded
setTailPlaceholder:
shouldAddOriginalPlaybackContextAfterReplacement
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
dataSource
setState:
isFrozen
setFrozen:
preferredStartItemIdentifier
rtcSectionHierarchyToken
setRtcSectionHierarchyToken:
stateLock
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_rtcSectionHierarchyToken
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
T{os_unfair_lock_s=I},R,N,V_stateLock
Tq,R,N,V_supplementalPlaybackContextBehavior
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>",R,N,V_dataSource
T@"MPPlaybackContext",R,N,V_playbackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
T@,&,N,V_rtcSectionHierarchyToken
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_handleApplicationTerminationEvent:cursor:
setEventDate:
setEndReasonType:
setReasonHintType:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:containerBeginEvent:cursor:
setItemStartTime:
setTimedMetadata:
setItemDuration:
_clampTimeValuesForPAFEvent:withDuration:
isSBEnabled
_updatePAFEvent:withSharedListeningInfoFromCursor:
_finalizePAFEvents:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
itemStartTime
itemEndTime
_updatePAFEvent:withAudioChangeEvent:
_generateAggregateNoncatalogEndEventForCursor:
_itemIsPlayingFromQueueSectionIdentifier:itemIdentifier:cursor:
enumeratePreviousEventsWithType:usingBlock:
_getPlaybackDurationForHLSStreamFromStartEvent:toEndEvent:withLimitedCursor:
_generatePlaybackEndEventFromEvent:withQueueSectionIdentifier:itemIdentifier:cursor:
_itemIsPlaceholderFromQueueSectionIdentifier:itemIdentifier:cursor:
setItemType:
_updatePAFEvent:withAccountIdentifier:cursor:
setRepeatPlayMode:
setShufflePlayMode:
setAutoPlayMode:
timeZoneWithAbbreviation:
setEventTimeZone:
setPrivateListeningEnabled:
_updatePAFEvent:withEnqueuerAccountIdentifier:queueAddEvent:cursor:
setMediaType:
setContainerType:
setCloudPlaylistID:
setPlaylistVersionHash:
setContainerIDs:
setRadioAdamID:
radioAdamID
setReportingAdamID:
setItemIDs:
setSBEnabled:
setBuildVersion:
systemTimeZone
setEnqueuerProperties:
setBuildFeatures:
setBitDepth:
setBitRate:
audioChannelLayoutDescription
setChannelLayoutDescription:
setCodec:
setSampleRate:
isMultiChannel
setSpatialized:
setTargetedAudioQuality:
setProvidedAudioQuality:
setAudioQualityPreference:
setPlaybackFormatPreference:
setSharedActivityGroupSizeCurrent:
setSharedActivityGroupSizeMax:
initWithIdentity:
valueForBagKey:
eventType
endReasonType
reasonHintType
containerType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
radioPlayActivityEvents
playActivityController
_radioPlayActivityEvents
_playActivityController
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
T@"ICPlayActivityController",R,N,V_playActivityController
_cloudCollectionID
_storePlaylistGlobalID
_storePlaylistVersionHash
_init
initWithQueue:
setDebugLabel:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
shouldOverrideManuallyCuratedQueue
shouldImmediatelyStartPlayback
siriRecommendationID
homeKitUserIdentifier
initWithContextID:
supportedOnCurrentPlatform
setShouldOverrideManuallyCuratedQueue:
setShouldImmediatelyStartPlayback:
setSiriRecommendationID:
setHomeKitUserIdentifier:
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_userIdentity
_homeKitUserIdentifier
T@"NSString",R,C,N,V_contextID
TB,N,V_shouldOverrideManuallyCuratedQueue
TB,N,V_shouldImmediatelyStartPlayback
T@"NSString",C,N,V_siriRecommendationID
T@"NSString",C,N,V_featureName
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"ICUserIdentity",C,N,V_userIdentity
T@"NSString",C,N,V_homeKitUserIdentifier
initWithContextID:query:
protobufferEncodableObjectFromLibrary:
multiverseIdentifier
queryQueueWithContextID:query:
setFirstItem:
_query
_firstItem
_shuffleType
T@"MPMediaQuery",R,N,V_query
T@"MPMediaItem",&,N,V_firstItem
Tq,N,V_shuffleType
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
_stationStringID
T@"NSString",R,N,V_stationStringID
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
T@"NSArray",R,N,V_storeItemIDs
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
initWithContextID:seedTrack:
geniusQueueWithContextID:seedTrack:
seedTrack
_seedTrack
T@"NSURL",R,N,V_seedTrack
initWithContextID:identifier:customData:
customDataQueueWithContextID:identifier:customData:
_customData
T@"NSString",R,N,V_identifier
T@"NSData",R,N,V_customData
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
_autoPlaySection
_metadataObject
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
T@"MPModelGenericObject",R,N,V_metadataObject
initWithRoute:bundleID:playerID:
initWithDeviceUID:bundleID:pid:playerID:
pathWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
bundleID
decodeInt32ForKey:
encodeInt32:forKey:
representedBundleID
lastObject
initWithEndpoint:
initWithExternalDevice:
setConnection:
localDeviceUID
sharedLocalEndpoint
connection
externalDevice
isConnected
isInvalidated
connectWithUserInfo:completion:
systemMusicPathWithRoute:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
isFullyResolved
isSystemMusicPath
representedBundleDisplayName
resolveWithCompletion:
origin
mediaRemotePlayerPath
isResolved
deviceUID
_pid
_resolved
_bundleID
_playerID
_mediaRemotePlayerPath
_route
_deviceUID
T^v,R,N,V_mediaRemotePlayerPath
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
T^v,R,N
T@"NSString",R,N,V_deviceUID
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
_updateViewControllerHierarchyForPlaybackEngine:
internalController
view
layer
borderWidth
clearColor
setBackgroundColor:
setBorderWidth:
setAlpha:
systemPinkColor
redColor
CGColor
setBorderColor:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:
playerViewControllerWillStartPictureInPicture:
playerViewControllerDidStartPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
playerViewControllerWillStopPictureInPicture:
playerViewControllerDidStopPictureInPicture:
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
videoOutputDelegate
selector
setSelector:
setArgument:atIndex:
invokeWithTarget:
forwardInvocation:
viewDidLoad
viewDidLayoutSubviews
bounds
setFrame:
showsPlaybackControls
setShowsPlaybackControls:
presentationSize
videoGravity
setVideoGravity:
videoBounds
isReadyForDisplay
isPictureInPictureActive
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
stopPictureInPicture
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
parentViewController
valueForKey:
superview
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
addChildViewController:
addSubview:
didMoveToParentViewController:
keyPathsForValuesAffectingShowsPlaybackControls
keyPathsForValuesAffectingPresentationSize
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingIsReadyForDisplay
keyPathsForValuesAffectingIsPictureInPictureActive
keyPathsForValuesAffectingAllowsPictureInPicturePlayback
setVideoOutputDelegate:
T@"<MPCVideoOutputDelegate>",W,N
T@"UIViewController",R,N
T{CGSize=dd},R,N
T@"NSString",C,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
readyForDisplay
TB,R,N,GisReadyForDisplay
pictureInPictureActive
TB,R,N,GisPictureInPictureActive
_videoDebugToken
_videoOutputDelegate
_internalController
T@"AVPlayerViewController",R,N,V_internalController
T@"<MPCVideoOutputDelegate>",W,N,V_videoOutputDelegate
videoOutput:willBeginFullScreenPresentationWithAnimationCoordinator:
videoOutput:willEndFullScreenPresentationWithAnimationCoordinator:
videoOutputShouldAutomaticallyDismissAtPictureInPictureStart:
videoOutputWillStartPictureInPicture:
videoOutputDidStartPictureInPicture:
videoOutputWillStopPictureInPicture:
videoOutputDidStopPictureInPicture:
videoOutput:failedToStartPictureInPictureWithError:
videoOutputShouldDismiss:
eventDeliveryDeferralAssertionForReason:
_snapshotAccount:eventType:atTime:
_devicePrivateListeningDidChange:
_applicationWillTerminate:
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_snapshotDeviceWithEvent:nudge:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkTypeWithEvent:nudge:
subscribeToEventType:options:handler:
_addEventForAccountIdentifier:cursor:event:nudge:
removeEngineObserver:
_snapshotNetworkReachabilityAtTime:force:
_snapshotNetworkTypeAtTime:
flushEvents
_snapshotDeviceAtTime:
_snapshotAccount:eventType:event:nudge:
accountForHashedDSID:
lastKnownHouseholdID
isPrivateListeningEnabled
isDevicePrivateListeningEnabled
deviceModel
clientVersion
productPlatform
productVersion
buildVersion
isRemoteServerReachable
signalInfo
signalStrength
isCurrentNetworkLinkHighQuality
_reachability
requiredPropertiesForStaticMediaClips
T@"MPModelRequest",C,N,V_request
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
referenceWithMPModelObject:containerModelPlayEvent:
mpc_radioContentReference
containerID
setContainerID:
initWithStoreIdentifier:trackInfo:
referenceWithStoreIdentifier:trackInfo:
initWithICRadioContentReference:
referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
isValidReportingEvent
_recordReportingEvents:
parentReportingController
childReportingControllers
addChildReportingController:
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
T@"MPCReportingController",W,N
T@"NSArray",R,C,N
future
setFuture:
_future
T@"MPCFuture",&,N,V_future
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
disconnect
result
isFinalized
isDisconnected
debugLabel
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_disconnected
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSMutableArray",R,N,V_successBlocks
T@"NSMutableArray",R,N,V_failureBlocks
T@"NSMutableArray",R,N,V_completionBlocks
T@"NSMapTable",R,N,V_invalidBlocks
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
disconnected
TB,R,N,GisDisconnected,V_disconnected
T@"NSString",C,N,V_debugLabel
initWithUnpersonalizedContentDescriptors:
setProperties:forItemAtIndexPath:
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
_sharedListeningProperties
T@"MPCPlaybackSharedListeningProperties",C,N,V_sharedListeningProperties
T@"ICLiveLinkIdentity",C,N,V_identity
musicEQSetting
avPreset
_setupNotifications
_setupRoutingController
_setupPlayer
setRepeatIndex:
setPrefersSeekOverSkip:
resetBookkeeping
defaultEQPresetType
setupEQPresetWithDefaultPreset:
audioAnalyzer
configurePlayerItem:
_setupQueueItemForEnhancedAudioHLSPlayback:metadataWaitTime:error:
soundCheckVolumeNormalization
loudnessInfo
currentAudioRoute
setFetchAvailableRoutesSynchronously:
_playbackUserDefaultsEQPresetDidChangeNotification:
_preferredResolutionDidChange:
setDefaultEQPresetType:
stackController
setupDefaultsDebouncer
tearDownDefaultsDebouncer
userDefaultsDebouncer
setUserDefaultsDebouncer:
processAudioQualityChanges
_shouldReloadEntireQueue
queuedItems
reloadCurrentItemWithReason:completion:
_updateQueueItemsAndPlayerForFormatChangeIfRequired
spatialIsOff
setSpatializationFormat:
_audioFormatsDictionaryWithHLSMetadataFromAsset:metadataWaitTime:error:
spatialIsAlwaysOn
mpc_setupWithAudioAssetType:forceSpatial:
audioFormatMatchingAudioAssetType:formats:route:
preferredAudioFormatForAudioFormats:route:
mpc_setupDescription
_HLSMetadataForAsset:error:
_audioFormatsDictionaryWithHLSMetadata:
msv_dictionaryWithContentsOfBase64EncodedJSONString:error:
initWithJSONDictionaryRepresentation:stableVariantID:
updateCurrentAudioRouteWithPickedRoutes:
pickedRoutes
initWithRoute:spatialIsAlwaysOn:
_modeObjectForPlayerItem:
nextItems
_updatePreferredAudioFormatIfRequiredForItem:route:
preferredPlayerAudioFormatForItem:route:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
routingController
currenItem
_currentAudioRoute
_routingController
_defaultEQPresetType
_stackController
_userDefaultsDebouncer
_currenItem
Tq,N,V_defaultEQPresetType
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_stackController
T@"NSObject<OS_dispatch_source>",&,N,V_userDefaultsDebouncer
T@"MPAVRoutingController",R,N,V_routingController
T@"MPCPlayerAudioRoute",R,N,V_currentAudioRoute
T@"MPCModelGenericAVItem",R,W,N,V_currenItem
_timeZoneName
_uuid
_privateListeningEnabled
pickedRoute
externalScreenType
hasProtectedContent
playbackMode
isAppleTVRoute
routeSubtype
canPlayEncryptedProgressiveDownloadAssets
canFetchMediaDataFromSender
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
isExternalPlaybackAllowedForItem:
playerShouldUseAudiOnlyMode:item:externalScreenType:
exernalPlaybackRouteRestrictionForItem:route:isScreenMirroringActive:
usesAudioOnlyModeForExternalPlayback
setUsesAudioOnlyModeForExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setAllowsExternalPlayback:
setExternalDisplay:
canAccessRemoteAssets
configureExternalPlaybackForPlayer:queueItem:
_representativeItemCloudID
_artistName
_applicationWillTerminateNotification:
reportingEventType
playActivityEvent
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
storeFrontID
isOffline
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogStoreAccountID
_nonCatalogBuildVersion
_nonCatalogStoreFrontID
_nonCatalogSourceType
_shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
visualIdenticalityIdentifier
representationForVisualIdentity:withSize:image:
_cacheArtworkRepresentation:forKey:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
allKeys
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
_initWithType:participant:
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
_participant
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
T@"MPCSharedListeningEventParticipant",R,N,V_participant
Tq,R,N,V_type
T@"MPCSharedListeningSessionEvent",R,N,V_sessionEvent
T@"MPCSharedListeningPlaybackEvent",R,N,V_playbackEvent
T@"MPCSharedListeningQueueEvent",R,N,V_queueEvent
T@"MPCSharedListeningReactionEvent",R,N,V_reactionEvent
T@"MPCSharedListeningCustomEvent",R,N,V_customEvent
participantWithSharedListeningIdentifier:externalIdentifier:
sharedListeningIdentifier
_sharedListeningIdentifier
_externalIdentifier
T@"NSUUID",R,C,N,V_sharedListeningIdentifier
T@"NSString",R,C,N,V_externalIdentifier
initWithLocalizedMessage:
_localizedMessage
T@"NSString",R,C,N,V_localizedMessage
initWithKind:item:
initWithKind:
kind
_kind
Tq,R,N,V_kind
T@"MPModelGenericObject",R,N,V_item
queueEventWithAddedContent:
queueEventWithPlayedNowContent:
queueEventWithRemovedContent:
queueEventWithReorderedContent:
queueEventWithReplacedContent:
queueEventWithContentUpdatedMessage:
queueEventWithPlaybackModeChanged:
addedContent
removedContent
reorderedContent
replacedContent
playedNowContent
contentUpdatedMessage
_addedContent
_removedContent
_reorderedContent
_replacedContent
_playedNowContent
_contentUpdatedMessage
_playbackMode
T@"MPCSharedListeningQueueEventContentAdded",R,N,V_addedContent
T@"MPCSharedListeningQueueEventContentRemoved",R,N,V_removedContent
T@"MPCSharedListeningQueueEventContentReordered",R,N,V_reorderedContent
T@"MPCSharedListeningQueueEventContentReplaced",R,N,V_replacedContent
T@"MPCSharedListeningQueueEventContentPlayedNow",R,N,V_playedNowContent
T@"MPCSharedListeningQueueEventContentUpdatedMessage",R,N,V_contentUpdatedMessage
T@"MPCSharedListeningQueueEventPlaybackModeChanged",R,N,V_playbackMode
initWithItems:container:
container
_container
T@"MPModelGenericObject",R,N,V_container
T@"NSArray",R,C,N,V_items
initWithItems:container:startItem:
_startItem
T@"MPModelGenericObject",R,C,N,V_startItem
initWithItem:
T@"MPModelGenericObject",R,C,N,V_item
initWithStartItem:
initWithLocalizedTitle:localizedMessage:
T@"NSString",R,C,N,V_localizedTitle
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
_repeatType
_autoPlayEnabled
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
initWithReaction:reactionIdentifier:item:
reactionIdentifier
reaction
_reactionIdentifier
_reaction
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
createPlayerPath
initWithCommandResult:error:
outputDeviceUIDs
setDevicesControlled:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
singleGroup
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
originatingDeviceControl
_isAnyDeviceControllable:
outputGroups
_sendCommand:path:options:queue:completion:
initWithReturnStatuses:error:
isLocallyHosted
localOrigin
dictionaryWithDictionary:
currentSettings
isMultiplayerHost
_findEndpointFromEndpoints:byGroupLeader:
unsignedShortValue
_checkForAccount:destination:origin:queue:completion:
client
initWithOrigin:client:player:
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
sendCommand:withOptions:toEndpoint:toDestination:completion:
_connection
_discovery
handlerReturnStatuses
sendError
returnStatuses
commandResult
devicesControlled
_returnStatuses
_commandResult
_devicesControlled
T@"NSArray",R,N,V_returnStatuses
T@"MRCommandResult",R,N,V_commandResult
T@"NSNumber",C,N,V_devicesControlled
initWithBytesNoCopy:length:encoding:freeWhenDone:
serverObjectDatabaseImportResult
accumulatorImportResult
_accumulatorImportResult
_serverObjectDatabaseImportResult
T@"MPServerObjectDatabaseImportResult",R,C,N,V_serverObjectDatabaseImportResult
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB},R,N,V_accumulatorImportResult
deviceInfo
isCurrentDeviceValidHomeAccessory
isPrivateListeningEnabledForCurrentUserAndAccessory
setDevices:
initWithResponse:playingItemIndexPath:
initWithDataSource:
initWithTracklistItems:playingItemIndexPath:
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsCreateStation:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportedActions:
_determineChangeItemSupport
initWithResponse:changeItemSupport:
_setDisabled:
playingItem
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
disableModificationsCommand
upNextItemCount
explicitContentState
displayItems
playingItemGlobalIndex
globalItemCount
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_explicitContentState
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
T@"MPSectionedCollection",R,C,N,V_displayItems
Tq,R,N,V_playingItemGlobalIndex
Tq,R,N,V_globalItemCount
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
Tq,R,N,V_upNextItemCount
Tq,R,N,V_explicitContentState
T@"MPCPlayerResponseItem",R,N
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
identifiersForSectionAtIndex:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
T@"NSIndexPath",&,N,V_playingItemIndexPath
valueWithBytes:objCType:
isAutoPlay
signedRangeValue
sectionRanges
sections
_sections
_sectionRanges
T@"NSArray",R,N,V_sections
T@"NSDictionary",R,N,V_sectionRanges
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
clearUpNextItems
replaceWithPlaybackIntent:
specializedIntents
devices
supportedSpecializedQueues
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
T@"NSArray",C,N,V_devices
T@"NSDictionary",&,N,V_supportedSpecializedQueues
TB,N,V_supportsSetQueueCommand
T@"NSSet",&,N,V_supportedQueueTypes
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
_createRadioStationCommandRequest
contentItemIdentifier
_insertWithOptions:
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportsCreateStation
_supportedInsertionPositions
TB,N,V_supportsCreateStation
T@"NSSet",&,N,V_supportedInsertionPositions
indexPath
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
TB,N,V_supportsChangeRepeat
TB,N,V_supportsAdvanceRepeat
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
TB,N,V_supportsChangeShuffle
TB,N,V_supportsAdvanceShuffle
supportedActions
_supportedActions
T@"NSArray",&,N,V_supportedActions
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
TQ,R,N,V_changeItemSupport
setDisabled:
isDisabled
disabled
TB,R,N,GisDisabled
_disabled
TB,N,GisDisabled,S_setDisabled:,V_disabled
_highQualityMusicStreamingOnCellularDidChange:
_soundCheckEnabledChangedNotification:
_stateDictionaryIncludingIdentifierList:
identifierList
autoPlayIdentifierList
itemCount
maximumQueueHandOffSize
_isAutoPlayItem:inSection:
setAnnotationDelegate:
decodeDoubleForKey:
_identifierListForSection:
hasItem:inSection:
encodeDouble:forKey:
_transitionToAutoPlayState:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_identifierListIDPairForQueueIDPair:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
positionForItem:inSection:
enumeratorWithQueueController:mode:options:startPosition:endPosition:
itemResult
removeItem:fromSection:
incrementVersionForSegment:
reloadItemsKeepingCurrentItem:
_queueIDPairForIdentifierListIDPair:
isDeletedItem:inSection:
positionForTailOfSection:
entryType
trackingEntryResult
hasSection:
clearStartItem
identifierSetForItem:
_emitEventsForAddingPlaybackContext:sectionIdentifier:sharedListeningContainerInfo:
replaceDataSource:forSection:completion:
restorationError
setNowPlayingInfo:
_itemForContentItemID:allowReuse:
isValidContainerIdentifier:
containerInfoForItem:
removeItem:
addPlaybackContext:atPosition:afterItem:actions:completion:
didJumpToItem:
endSynchronizedPlayback
interposingHost
setInterposingHost:
sharedSessionIdentifier
queueExplicitContentState
T@"<MPCQueueControllerCommandInterposingHost>",W,N
_firstContentItemID
setNextContentItemIDReason:
moveItem:fromSection:afterItem:inSection:
enumeratorWithOptions:startPosition:endPosition:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterTailOfSection:
_currentItemDidChangeFromItem:toItem:
performChangeImmediately:
setShuffleType:startingItem:inSection:
_allDataSourcesSupportInsertionPositionLast
setShouldExpectEmptyQueue:
initWithUUIDString:
resetWithIdentifier:
_loadItemsAfterItemsDeletedIfNeededDeletedItemsCount:
allSectionIdentifiers
queueCoordinator:itemToFollowItem:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_itemForPair:
setStartItem:
_loadAdditionalItemsIfNeededForDataSourceState:preferredItemCount:completion:
_accountForAutoPlay
engine:didEndSharedListeningSessionWithError:
disablePeriodicStateRestore
localizedCaseInsensitiveCompare:
sortedArrayUsingSelector:
queueReferencesWithMaxCount:
previousContentItemID
_emitEventsForItemChangeFromItem:toCurrentItem:
engine:didReceiveSharedListeningEvent:
setExplicitContentState:
requestedPropertySetForEngine:
canAutoPlay
setPreferredItemCount:
musicRepeatType
autoPlayEnabledForUserIdentity:
_firstContentItemIDInSection:
addDataSource:section:sequentially:afterItem:inSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtStart:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:afterTailOfSection:completion:
feeder
_applyVolumeNormalizationForQueuedItems
deferredNextContentItemAnchorID
radioConfiguration
continueListeningLoadStationThreshold
continueListeningMaxUpcomingTracksSizeToMaintain
_findDataSourceToLoadItemsAfterItem:sectionIdentifier:withLoadingBlock:
_privateListeningSourceForContext:
lastMetadataChangeTime
didReachEnd
_autoplayMode
_findDataSourceToLoadItemsAfterItem:deletedItemsCount:sectionIdentifier:withLoadingBlock:
enumeratorWithOptions:
albumContainerWithMediaIdentifier:featureName:
playlistContainerWithMediaIdentifier:featureName:
groupWithFeatureName:
itemWithMediaIdentifier:
msv_indexPathForItem:inSection:
queueCoordinator
disableItemReuse
setSharedListeningItem:
setAutoPlayItem:
setInitialPlaybackStartTimeOverride:
isContinueListeningAvailable
continueListeningMaxQueueSizeInRequest
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
didDequeueShuffledItemsInSectionedIdentifierList:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:allowReuse:
canSkipInDirection:fromQueueItem:
setCurrentItem:
updatePlayerPlaybackCoordinator:
T@"MPAVItem",&,N
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
queueCoordinator:willInsertItem:afterItem:
queueCoordinatorDidChangeItems:
currentItemDidChangeFromItem:toItem:
jumpToContentItemID:
T@"<MPAVQueueControllerDelegate>",W,N
T@"<MPAVQueueCoordinating>",&,N
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
emitEventsForParticipants:localUserIdentifier:
emitEventsForAddedSharedListeningContainerInfo:
emitSharedListeningEvent:
explicitContentStateDidChange:
requestedPropertySetForEvents
sessionDidEnd
sharedCurrentItemChangedToItem:inSection:byParticipant:
_loadAdditionalItemsIfNeededForDataSourceState:withCount:withCompletion:
nextContentItemID
setNextContentItemID:
setDeferredNextContentItemAnchorID:
setRestorationError:
coderVersions
setCoderVersions:
nextContentItemIDReason
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
missingIdentifierSetForDebugging
setMissingIdentifierSetForDebugging:
previousSectionIDsForDebugging
setPreviousSectionIDsForDebugging:
setInSharedListeningMode:
rtcSessionHierarchyToken
setRtcSessionHierarchyToken:
setIdentifierList:
setAutoPlayIdentifierList:
dataSources
setDataSources:
_playbackCoordinator
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_inSharedListeningMode
_preferredFirstContentItemID
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_restorationError
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_missingIdentifierSetForDebugging
_previousSectionIDsForDebugging
_rtcSessionHierarchyToken
_identifierList
_autoPlayIdentifierList
_dataSources
T@"NSString",C,N,V_nextContentItemID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
T@"NSError",C,N,V_restorationError
T@"NSMutableDictionary",&,N,V_coderVersions
Tq,N,V_nextContentItemIDReason
Tq,N,V_autoPlayState
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
TB,N,V_autoPlayIsTriggered
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
Td,R,N,V_lastSavedTime
T@"MPIdentifierSet",C,N,V_missingIdentifierSetForDebugging
T@"NSArray",C,N,V_previousSectionIDsForDebugging
inSharedListeningMode
TB,N,GisInSharedListeningMode,V_inSharedListeningMode
T@,&,N,V_rtcSessionHierarchyToken
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
T@"MPAVItem",&,N,V_currentItem
TB,R,N,V_hasUserMutations
T@"<MPAVQueueControllerDelegate>",W,N,V_delegate
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
_buildEnumerator
initWithSectionIdentifier:
mode
enumerator
startPosition
endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
T@"MPCQueueController",R,W,N,V_queueController
Tq,R,N,V_mode
T@"NSEnumerator",R,N,V_enumerator
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
branchDepth
isRemoved
removed
TB,R,N,GisRemoved
preferredItemCount
_preferredItemCount
Tq,N,V_preferredItemCount
hasPrefix:
substringFromIndex:
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
setPlaybackCoordinator:
_updatePlayerLiveLinkConnection
liveLinkForSessionID:
linkWithSessionIdentifier:identity:
updateWithIdentity:
isStarted
_transitionToState:
_emitNewContainerIfNeededForResponse:
_dequeuePendingActions
reconnectWithReason:options:
_responseQueue
allSections
_ICSharedListeningForMPSILItemIdentifier:
enumerateItemsUsingBlock:
msv_section
removeItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
moveItemIdentifier:afterItemIdentifier:
itemForIdentifier:
_MPSILItemIdentifierForICSharedListeningItemIdentifier:
_enqueuePendingActionWithLabel:itemIdentifier:block:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completionEx:
playNextPositionWithAfterItemIdentifierHint:
specifiedPositionAfterItemIdentifier:
playLastPositionWithAfterItemIdentifierHint:
insertTracklist:atPosition:completionEx:
broadcastDirectCurrentItemChangedToItemIdentifier:
_handleUpdatedSharedListeningQueue:
setDeferredDirectCurrentItemIdentifier:
setDeferredDirectCurrentItemParticipant:
_handleDirectCurrentItemChangedToItemIdentifier:participant:
_requiredItemIdentifierForEvent:
_mpcSharedListeningEventForICLiveLinkEvent:
expirationDate
laterDate:
block
removeObjectsInRange:
vendorID
containerForIdentifier:
setItemIdentifier:
setBlock:
_purgePendingActionsWithLabel:
_sectionedCollectionForQueue:
setVendorID:
itemForIdentifierSet:
contentAdded
containerIdentifier
contentPlayedNow
startItemIdentifier
contentRemoved
contentReordered
contentReplaced
playbackModeChanged
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
mediaIdentifier
playParams
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
_playbackItemsRequestForQueue:
getExpectedCurrentItemWithCompletion:
playbackCoordinator:identifierForPlayerItem:
playbackCoordinator:interstitialTimeRangesForPlayerItem:
completionStartItemIdentifier
setCompletionStartItemIdentifier:
completionError
setCompletionError:
initialQueueCompletion
requestedPropertySet
setRequestedPropertySet:
pendingActions
setPendingActions:
knownContainerIDs
setKnownContainerIDs:
lastKnownExplicitContentState
setLastKnownExplicitContentState:
shouldRefreshBeforeActive
setShouldRefreshBeforeActive:
deferredDirectCurrentItemIdentifier
deferredDirectCurrentItemParticipant
hasPendingPlayNowInFlight
setHasPendingPlayNowInFlight:
deferredPlayNowCurrentItemIdentifier
setDeferredPlayNowCurrentItemIdentifier:
playbackCoordinator
_shouldRefreshBeforeActive
_hasPendingPlayNowInFlight
_interposingHost
_completionStartItemIdentifier
_completionError
_initialQueueCompletion
_requestedPropertySet
_pendingActions
_knownContainerIDs
_lastKnownExplicitContentState
_deferredDirectCurrentItemIdentifier
_deferredDirectCurrentItemParticipant
_deferredPlayNowCurrentItemIdentifier
T@"NSString",C,N,V_completionStartItemIdentifier
T@"NSError",&,N,V_completionError
T@?,R,C,N,V_initialQueueCompletion
T@"MPCPlaybackRequestEnvironment",&,N,V_playbackRequestEnvironment
T@"MPPropertySet",C,N,V_requestedPropertySet
T@"NSMutableArray",&,N,V_pendingActions
T@"NSMutableSet",&,N,V_knownContainerIDs
Tq,N,V_lastKnownExplicitContentState
TB,N,V_shouldRefreshBeforeActive
T@"NSString",C,N,V_deferredDirectCurrentItemIdentifier
T@"ICLiveLinkIdentity",&,N,V_deferredDirectCurrentItemParticipant
TB,N,V_hasPendingPlayNowInFlight
T@"NSString",C,N,V_deferredPlayNowCurrentItemIdentifier
T@"AVPlayerPlaybackCoordinator",W,N,V_playbackCoordinator
T@"<MPCQueueControllerCommandInterposingHost>",W,N,V_interposingHost
_modelObject
T@"NSString",C,N,V_identifier
T@"MPModelGenericObject",&,N,V_modelObject
_itemIdentifier
_expirationDate
_block
T@"NSString",C,N,V_itemIdentifier
T@"NSDate",C,N,V_expirationDate
T@?,C,N,V_block
setUserDefaults:
userDefaults
prerollEnabled
shouldPreroll
_userDefaults
T@"MPPlaybackUserDefaults",&,N,V_userDefaults
setPlayToSetRateSignpost:
setWaitForLikelyToKeepUpSignpost:
setWaitForReadyToPlaySignpost:
waitForLikelyToKeepUpSignpost
waitForReadyToPlaySignpost
playToSetRateSignpost
setRateToEffectiveRateSignpost
setSetRateToEffectiveRateSignpost:
_waitForLikelyToKeepUpSignpost
_waitForReadyToPlaySignpost
_playToSetRateSignpost
_setRateToEffectiveRateSignpost
T@"NSString",&,N,V_identifier
T@"MPCWaitForLikelyToKeepUp",&,N,V_waitForLikelyToKeepUpSignpost
T@"MPCWaitForReadyToPlaySignpost",&,N,V_waitForReadyToPlaySignpost
T@"MPCPlayToSetRateSignpost",&,N,V_playToSetRateSignpost
T@"MPCSetRateToEffectiveRateSignpost",&,N,V_setRateToEffectiveRateSignpost
setManagesAirPlayBehaviors:
_setQueueController:deferItemLoading:
setFirstPlaybackItemIdentifier:
queuePlayer
isReloadingForPlaybackContextChange
_configureAudioSession
shouldDeferItemLoading
setShouldDeferItemLoading:
togglePlaybackWithOptions:
changePlaybackIndexBy:deltaType:
avPlayer
_setEQPreset:
defaultItemEQPresetType
handlePlaybackErrorWithUserInfo:
firstPlaybackItemIdentifier
playbackHasStartedForItem:
_connectAVPlayerDeferringItemLoading:
_contentsChanged
_itemWillChange:
_enforcingPolicy:
_itemDidSignificantlyChangeElapsedTime:rate:
_itemDidChange:
_setState:
_itemPlaybackDidEndNotification:
MPAVItem
_streamLikelyToKeepUp:
_streamBufferFull:
prefersApplicationAudioSession
_networkPolicyItemCellularRestrictedNotification:
_connectAVPlayer
_expectedAssetTypesForPlaybackMode:
_queueDidEndWithReason:lastItem:
_updateStateForPlaybackPrevention
playerLayer
_hasPlayedSuccessfully
_playerLayer
_firstPlaybackItemIdentifier
T@"NSString",C,N,V_firstPlaybackItemIdentifier
T@"AVPlayerLayer",R,N,V_playerLayer
TB,R,N,V_hasPlayedSuccessfully
_initWithValue:
localDeviceSource
_initWithUserIdentity:
sourceWithUserIdentity:
_overrideValue
_currentValue
T@"NSNumber",R,C,N,V_currentValue
T@"NSNumber",C,N,V_overrideValue
_value
_handleUserIdentityStoreDidChangeNotification:
_handleHomeUserPrivateListeningDidChangeNotification:
_loadCurrentValueFromIdentityProperties
getPropertiesForUserIdentity:error:
homeUserIdentifiers
userMonitorWithHomeIdentifiers:
isPrivateListeningEnabledForCurrentAccessory
privateListeningEnabled
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
_cachedValue
modifySystemMusicContextForEndpointDestination:completion:
_modifyOutputDevices:onEndpoint:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
outputGroupID
_updateDiscoverableDeviceList:deviceInfo:completion:
tightSyncUID
shouldSearchForLogicalDevices
valueForKeyPath:
clusterType
_discoverLocalEndpointFromStereoPairUsingDeviceInfo:completion:
outputDevicesMatchingPredicate:
designatedGroupLeader
groupContainsGroupLeader
needsCommandRedirection
isAirPlayActive
outputDevices
isGroupLeader
clusterComposition
setOutputDevices:initiator:withReplyQueue:completion:
modifySystemMusicContextForDestination:completion:
modifySystemMusicContextForEndpointDestination:discoveryHandler:completion:
modificationInProgress
setModificationInProgress:
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
_buildLanguageOptionGroups:currentLanguageOptions:
_determineSeekSupport
initWithResponse:seekSupport:
seekSupport
setPreferredForwardJumpIntervals:
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
floatValue
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithLanguageOptionGroups:currentLanguageOptions:response:
initWithResponse:mediaRemoteCommand:
setValue:
switchToAlternativeFormat:
preferredTiers
T@"MPCPlayerAudioFormat",R,N
T@"MPCPlayerAudioRoute",R,N
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
musicAudio
revision
languageOptionGroups
enqueueingParticipant
_seekSupport
_placeholder
_autoPlay
_preferredTiers
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_enqueueingParticipant
_duration
T@"NSIndexPath",R,N,V_indexPath
T@"MPCPlayerResponseParticipant",R,N,V_enqueueingParticipant
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,C,N,V_localizedDurationString
T@"NSString",R,C,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"<MPCPlayerResponseItemMusicAudio>",R,N
T@"MPCPlayerAudioFormat",R,N,V_preferredFormat
T@"MPCPlayerAudioFormat",R,N,V_activeFormat
TQ,R,N,V_preferredTiers
Tq,R,N,V_activeFormatJustification
T@"NSArray",R,N,V_alternateFormats
T@"MPCPlayerAudioRoute",R,N,V_audioRoute
T@"NSString",C,N,V_contentItemID
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
TQ,R,N,V_seekSupport
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
changeValue:
localizedShortTitle
presentationStyle
_localizedShortTitle
_presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
_minimumValue
_maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
_playerItemDidChangeWhenReloadingPlaybackContextNotification:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
timedMetadata
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
mpcReporting_isValidReportingItem
initWithAVItem:
_itemStartTimeForItem:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTime:forItemContentItemID:
_reportPlaybackEndedForTimeoutWithItem:
isEqualToData:
_sendPlaybackEndNotification:endTime:
userChangedItemsDuringPlayback
lastDirection
_sendPlaybackStartNotification
setPlayActivityEvent:
setShouldReportToStore:
notificationWithName:object:
postNotification:
notificationWithName:object:userInfo:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_itemDidChangeWhenReloadingPlaybackContext
_isScrubbing
_currentItemIsHLS
_itemForCurrentTimeChange
_recordEventOperationQueue
_itemContentItemIDForLastPlayEventEndTime
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_reportingController
_storeFrontID
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
T@"NSString",C,N,V_storeFrontID
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
Td,N,V_eventDuration
TQ,N,V_overrideItemType
T@"NSString",C,N,V_lyricsID
T@"MPModelGenericObject",&,N,V_itemGenericObject
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
T@"NSData",C,N,V_recommendationData
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
_fileSize
_albumArtistName
_albumDiscCount
_albumName
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
_createAudioTap
_itemInsertedNotification:
setStorage:
_destroyAudioTap
_shouldAttachAudioTap
setAudioTapProcessor:
isAirPlayingToDevice
observers
storage
maxNumberOfFrames
analyzeFrequencies:numberFrames:observers:
initWithMaximumNumberOfFrames:sampleRate:
_analyzeSamples:numberFrames:
_prepareTap:maxFrames:processingFormat:
setObservers:
selfRef
setSelfRef:
_audioProcessingTap
_storage
_observers
_selfRef
T@"_MPCAudioSpectrumAnalyzerStorage",&,N,V_storage
T@"NSMutableArray",&,N,V_observers
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
addAnalysisBand:
_resizeBandStorage
setPowerLevel:
onUpdate
defaultObserver
numberOfBands
averagePowerOfBandAtIndex:band:
beginReport
finishReport
powerLevel
setOnUpdate:
_bands
_bandsStorageSize
_powerLevel
_numberOfBands
_onUpdate
Tf,N,V_powerLevel
Tq,R,N,V_numberOfBands
T@?,C,N,V_onUpdate
_prepareBuffers
_freeBuffers
_destroyFFTSetup
setMaxNumberOfFrames:
_intermediateBuffer
_window
_windowSize
_fftBuffer
_fftSetup
_processing
_sampleRate
_maxNumberOfFrames
Tf,N,V_sampleRate
TQ,N,V_maxNumberOfFrames
legacyMediaQuery
clearLibraryIdentifiers
initWithRandomSource:lowestValue:highestValue:
msv_item
nextIntWithUpperBound:
appendItems:
preferredQueue
_containerType
initWithPlaybackUsersDefaults:environmentMonitor:probabilityOfProgressiveDownloadAssets:
initWithProbabilityForOutcomeA:
outcomeGenerator
updateProbabilityForOutcomeA:
prefersSpatialOverStereo:
prefersHighResolutionLossless
prefersLossless
prefersHighQualityStereo
prefersLowQualityStereo
preferredAudioAssetTypeForSongWithTrait:
sharedCloudController
isEnhancedAudioAvailable
nextOutcome
prefersSpatialOverLossless
spatialIsAutomatic
environmentDescription
descriptionForTraits:
preferencesDescription
descriptionForTiers:
tierMatchingAudioAssetType:
defaults
spatialAudioPreference
isSpatializationEnabled
multiChannelSupport
canStreamSpatial
canRenderSpatial
networkBandwidthIsHigh
environmentMonitor
T@"MPCAudioAssetTypeSelector",R,N
updateProbabilityOfProgressiveDownloadAssets:
userPrefersMultichannelAudioOverStereo:
setDefaults:
setEnvironmentMonitor:
_defaults
_environmentMonitor
_outcomeGenerator
T@"MPPlaybackUserDefaults",&,N,V_defaults
T@"ICEnvironmentMonitor",&,N,V_environmentMonitor
T@"MSVABTestGenerator",R,N,V_outcomeGenerator
allowsMusicVideos
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
authorizationError
_explicitContentErrorWithUnderlyingError:message:
authorizationReason
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
getAgeVerificationStateWithCompletion:
_setupWithAgeVerificationState:
_setupWithAgeGateForItem:
explicitRating
maximumTVShowRatingForAgeGate
maximumMovieRatingForAgeGate
isExplicitContentAllowed
requestAuthorizationForExplicitItem:reason:completion:
T@"MPCExplicitContentAuthorizationManager",R,N
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
_authorizationError
_lastKnownAgeVerificationState
T@"NSError",C,N,V_authorizationError
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
mpc_updateAVAudioSpatializationFormatsForAudioAssetType:
mpc_updateAVVariantPreferenceForAudioAssetType:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForAudioAssetType:
mpc_updatePreferredForwardBufferDurationForAudioAssetType:
mpc_updateAVAudioSpatializationFormatsForPlayerAudioFormat:
mpc_updateAVVariantPreferenceForPlayerAudioFormat:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForPlayerAudioFormat:
mpc_updatePrefersOfflinePlayableVariantForPlayerAudioFormat:isDownloadedAsset:
mpc_updatePreferredForwardBufferDurationForPlayerAudioFormat:
setVariantPreferences:
setAutoSwitchAtmosStreamVariants:
setPreferredMaximumAudioSampleRate:
forwardBufferDuration
setPreferredForwardBufferDuration:
setPrefersOfflinePlayableVariants:
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
allowedAudioSpatializationFormats
variantPreferences
initWithContentItemID:repeatIndex:
identifierForMFQueuePlayerItem:
_repeatIndex
Tq,N,V_repeatIndex
initialPlaybackStartTimeOverride
setLastChangeDirection:
_clearAssetNow
isFullyDownloaded
setIsVideoContent:
isMovieOrTVShow
playbackStartTimeOverride
setPlaybackStartTimeOverride:
setItemID:
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
Td,N
T@"<MPCItemIdentifier>",R,C,N
resolvedPlayerPathForPlayerPath:
setInvalidationToken:
setResolvedPlayerPath:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
_sendCommand:options:appOptions:toPlayerPath:completion:
mediaRemoteReplyQueue
resultStatuses
strongToWeakObjectsMapTable
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_onQueue_stateDictionary
initWithController:
initWithKeyOptions:valueOptions:capacity:
_legacyCommands
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:requestRange:
endTransaction
pokeKey:
_mergeContentItem:
initWithData:
_initWithMediaRemoteContentItem:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
_artworkCatalogBlockForContentItem:
showDebugUI
placeholderCatalogWithSymbolName:
setOverlayDelegate:
setOverlayToken:
overlayToken
_lastArtworkCatalog
overlayStorage
setOverlayStorage:
viewController
setTag:
viewWithTag:
setUserInteractionEnabled:
imageRepresentation
image
setImage:
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
_createExportableArtworkPropertiesForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaLibraryArtworkType:
subarrayWithRange:
maximumCapacity
setMaximumCapacity:
performTransaction:
replaceObjectsInRange:withObjectsFromArray:
allCommandInfos
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
setElapsedTime:
performSuppressingChangeNotifications:
overlayVisualIdenticalityForCatalog:
overlayScaledFittingSizeForCatalog:scaledFittingSize:
artworkCatalog:willConfigureView:
artworkCatalog:didConfigureView:withRepresentation:
artworkCatalog:didClearFromView:
dictionary:willRemoveObject:forKey:
artworkCatalogBlockForContentItem:
contentItemArtworkCacheStateForArtworkIdentifier:size:
queueIdentifierCacheState
_onQueue_setOptimisticPlayingItemIdentifier:
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@,&,N,V_invalidationToken
Tq,R,N,V_playbackStateCacheState
Tq,R,N,V_supportedCommandsCacheState
Tq,R,N,V_playingIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
radioStationURL
_radioStationURL
T@"NSURL",C,N,V_radioStationURL
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
playableAssetIdentifiers
isLocalEndpoint
connectToExternalDeviceWithUserInfo:completion:
hashTableWithOptions:
statementWithString:error:
executeStatement:error:
URLsForDirectory:inDomains:
URLByAppendingPathComponent:isDirectory:
originID
setBool:forKey:
initWithURL:error:
initWithMemory
initWithDatabaseCreationBlock:
databaseURL
initWithConsumer:eventStream:
consumer
initWithEventStream:reason:
timeIntervalSince1970
msv_UUIDData
bindDataValue:toParameterNamed:
bindStringValue:toParameterNamed:
bindUInt64Value:toParameterNamed:
bindJSONValue:toParameterNamed:error:
eventStream:didFailToEmitEvent:error:
lastEventSuccessTimestamp
mutatingEventHandlers
immediateEventHandlers
initWithEventStream:startEvent:endEvent:
_onQueue_flush
setLastEventSuccessTimestamp:
setMaximumEventDeliveryTimestamp:
lastEventsWithCount:
bindInt64Value:toParameterNamed:
resultsForStatement:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
reason
initWithParameters:
addConsumer:
removeConsumer:
flushEventsWithConsumer:fromTimestamp:untilTimestamp:
lastEvent
resetConsumerEventDeliveryToTimestamp:
_invalidated
_engineID
_subscriptions
_deferralAssertions
_database
_queue
_scheduledFlushes
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
T@"MPCPlaybackEngineEvent",R,N
T@"NSString",R,N,V_engineID
stringValueAtColumnIndex:
uint64ValueAtColumnIndex:
flushEventsWithCompletion:
cancelSubscription
maximumEventDeliveryTimestamp
eventHandlers
_consumer
_streamID
_lastEventSuccessTimestamp
_maximumEventDeliveryTimestamp
_mutatingEventHandlers
_immediateEventHandlers
_eventHandlers
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
T@"NSString",R,C,N,V_streamID
TQ,N,V_lastEventSuccessTimestamp
TQ,N,V_maximumEventDeliveryTimestamp
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_immediateEventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
earlierDate:
int64ValueAtColumnIndex:
nextObjectWithError:
_statementForColumnsExpression:eventTypes:payload:limit:
bindNullValueToParameterNamed:
startEvent
endEvent
_startNS
_endNS
_startEvent
_endEvent
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
T@"MPCPlaybackEngineEvent",R,N,V_startEvent
T@"MPCPlaybackEngineEvent",R,N,V_endEvent
dataValueAtColumnIndex:
msv_UUIDWithData:
jsonValueAtColumnIndex:error:
invalidated
_reason
T@"NSString",R,C,N,V_reason
TB,R,N,V_invalidated
_executeWithUserIdentity:useMediaAPILookup:
_validateUserIdentityForRequestWithCompletion:
currentThread
_runPersonalizationWithSectionCollection:localEquivalencyMapping:expirationDate:userIdentity:error:isFinalResponse:isInvalidForPersonalization:networkingTime:
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap:
_runMediaAPIRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
_runStorePlatformRequestToLoadMetadataWithAccumulator:userIdentity:previousResponse:shouldBatchResultsWithPlaceholderObjects:
totalRequestItemCount
collectionItemRequests
requestItemCount
progress
addChild:withPendingUnitCount:
fractionCompleted
completedUnitCount
_importMediaAPICollectionItemMetadataResponse:withError:usingAccumulator:userIdentity:trustID:previousResponse:shouldBatchResultsWithPlaceholderObjects:
enqueueRequest:withBatchProgressHandler:
collectionRequests
tokenRenewalRequests
_handleItemMetadataBactchRequestCompletedWithAccumulator:previousResponse:userIdentity:error:isFinalResponse:
playbackAuthorizationTokenHalfLifeExpiration
setPlaybackAuthorizationTokenHalfLifeDuration:
getStoreItemMetadataForRequest:includeBatchResponseError:responseHandler:
setIdentityStore:
setAllowsExpiredBags:
initWithUserInteractionLevel:
setAuthenticationProvider:
_runSubscriptionStatusWithRequestContext:completion:
userIdentitiesForManageableAccountsWithError:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
_activeProgress
_previousModelResponse
_hasReceivedFinalResponse
_hasCalledResponseHandler
_errors
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
trackType
setLiveRadioStream:
radioStreamAssets
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
tracklistActionType
_cacheTracksForStep:
initWithTracks:tracklistAction:networkingTime:
performWithCompletionHandler:
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_radioQueueFeederPointerForLogging
tracklistAction
_tracklistAction
_tracks
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
Td,R,N,V_networkingTime
stationMetadata
getRemoteRepresentationForPlayerPath:completion:
createPlaybackContextWithCompletion:
isRequestingImmediatePlayback
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
setSupportsAccountRectification:
mediaQuery
trackIdentifiers
firstTrackIdentifier
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
setDelegationProperties:
kindWithModelClass:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
T@"MPRemoteCommand",R,N
T@"MPCDebugCommand",R,N
initWithMediaRemoteCommandType:
notifyPropagatablePropertyChanged
_mediaRemoteCommandInfoOptions
supportedSubsystems
subsystemRevisions
_supportedSubsystems
_subsystemRevisions
T@"NSArray",C,N,V_supportedSubsystems
T@"NSDictionary",C,N,V_subsystemRevisions
_applicationWillEnterForegroundNotification:
_prewarmSAPSigningForAccount:
applicationState
_optimisticallyFetchLeaseForAccount:
_prewarmMiniSINFEndpointForAccount:
scheduleMiniSINFFetch
usesLease
getHasPreparedLeaseForAccount:completion:
_fetchMiniSINFsWithCompletion:
maximumBatchSize
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
endpointURL
initWithURL:
setHTTPMethod:
setHTTPBody:
addValue:forHTTPHeaderField:
defaultSession
parsedBodyDictionary
initWithPayload:requestPayload:hashedPersonID:
importAssetsFromRequest:error:
enqueueDataRequest:withCompletionHandler:
int64ValueForBagKey:
initWithEndpointURL:maximumBatchSize:requestContext:
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
_endpointURL
_maximumBatchSize
T@"NSURL",R,C,N,V_endpointURL
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
initWithAppBundleID:
systemMediaApplicationDestination
initWithAppBundleID:playerID:origin:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
decodeHashedRouteUIDs:completion:
_copyWithZone:usingConcreteClass:
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
resolveWithHashedRouteIdentifiers:completion:
resolveWithRouteIdentifiers:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
_getCompanionOrigin:
hashedOutputDeviceUIDs
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_originatingOutputDeviceUID
_singleGroup
_originatingDeviceControl
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
T@"NSArray",R,N,V_outputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
T@"NSArray",R,N,V_outputGroups
T@"NSString",R,N,V_outputGroupID
T@"NSString",R,N,V_originatingOutputDeviceUID
TB,R,N,V_singleGroup
TB,R,N,V_originatingDeviceControl
setAppBundleID:
setPlayerID:
setOrigin:
setOutputGroups:
setOutputGroupID:
setOriginatingOutputDeviceUID:
setSingleGroup:
setOriginatingDeviceControl:
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
initWithPlayerID:
T@"MPNowPlayingInfoCenter",R,N
T@"MPRemoteCommandCenter",R,N
T@"AVAudioSession",R,N
_nowPlayingInfoCenter
_remoteCommandCenter
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
T@"AVAudioSession",R,N,V_audioSession
requiresMainThread
isMainThread
callStackSymbols
_initializePlaybackStack
_screenBrightnessDidChangeNotification:
preheatPlayback
setStateRestorationSessionIdentifier:
performAfterLoadingAccounts:
_detectCrashLoopForSessionIdentifier:block:
objects
reportUserSeekFromTime:toTime:
disableAudioAnalysis
ubiquitousIdentifierWithStoreAdamID:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
isStateRestorationSupported
_updateUISnapshotIfNeeded
_shouldIgnorePlaybackSessionError:
saveSessionWithCompletion:
brightness
needsUISnapshot
dictionaryForKey:
initWithPlaybackEngineParameters:engineID:
proxyForObjects:protocol:
progressiveDownloadAssetRatio
_updateSnapshotForBackgroundApplication:
setNeedsUISnapshot:
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
restoreStateWithCompletion:
setQueueHandoffSupported:
setAudioSessionCategory:
setAudioSessionOptions:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
isPictureInPictureSupported
setPictureInPictureSupported:
isVideoSupported
setVideoSupported:
setFallbackPlaybackIntent:
musicPlayerControllerServer
fairPlayPerformanceController
isAudioAnalyzerEnabled
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_initializationParameters
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
TB,N,V_needsUISnapshot
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"<MPCVideoOutput>",R,N,V_videoOutput
T@"<MPCPlaybackEngineInitializationParameters>",R,N,V_initializationParameters
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"NSString",R,C,N,V_engineID
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
T@"MPCPlaybackEngine",W,N
_originID
T@"NSString",R,C,N,V_originID
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:routeResolvedPlayerPath:
T@"MPCPlayerPathCache",R,N
playerPathResolutions
playerPathObservers
endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
_isHLSVersion:greatherThanOrEqualTo:
_isSpatialFormat:
_computedTierFromHLSDataWithChannelCount:
_computedChannelLayoutTagFromHLSData:channelCount:
_descriptionForChannelLayoutTag:
_isMultichannelFormat:
groupID
isSpatialized
setTier:
setBitrate:
setMultiChannel:
setChannelLayout:
setAudioChannelLayoutDescription:
setGroupID:
setStableVariantID:
debugTierDescription
debugBitRateDescription
debugBitDepthDescription
debugSampleRateDescription
debugCodecDescription
debugChannelCountDescription
debugChannelLayoutDescription
debugOriginChannelLayoutDescription
debugOriginChannelCountDescription
_isDerivedFromSpatialFormat:
_isBinauralFormat:
initWithDictionaryRepresentation:
originChannelLayout
setOriginChannelLayout:
_spatialized
_multiChannel
_codec
_channelLayout
_originChannelLayout
_tier
_bitrate
_bitDepth
_audioChannelLayoutDescription
_groupID
_stableVariantID
TI,N,V_originChannelLayout
T@"MPNowPlayingInfoAudioFormat",R,N
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_stableVariantID
Tq,R,N,V_tier
Tq,R,N,V_bitrate
Tq,R,N,V_sampleRate
Tq,R,N,V_bitDepth
TI,R,N,V_codec
spatialized
TB,R,N,GisSpatialized,V_spatialized
multiChannel
TB,R,N,GisMultiChannel,V_multiChannel
TI,R,N,V_channelLayout
T@"NSString",R,N,V_audioChannelLayoutDescription
supportsSpatialization
isAirPlayRoute
isB515Route
isB298Route
isW1Route
isH1Route
isB507Route
supportsHeadTrackedSpatialAudio
headTrackedSpatialAudioEnabled
isDeviceSpeakerRoute
routeName
isCarplayRoute
setSupportsSpatialization:
setSpatializationEnabled:
_supportsSpatialization
_isSpatializationEnabled
_canStreamSpatial
_canRenderSpatial
_name
_multiChannelSupport
T@"MPNowPlayingInfoAudioRoute",R,N
TB,R,N,V_canStreamSpatial
TB,R,N,V_canRenderSpatial
Tq,R,N,V_multiChannelSupport
T@"NSString",R,C,N,V_name
TB,R,N,V_supportsSpatialization
TB,R,N,V_isSpatializationEnabled
leaseID
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
T@"MPCSuzeLeaseSessionController",R,N
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
Tq,N,V_clientCount
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
TB,N,V_shouldStopWhenFinished
initWithBase64EncodedString:options:
base64EncodedStringWithOptions:
setNamePrefix:
setGivenName:
setMiddleName:
setFamilyName:
setNameSuffix:
setNickname:
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
setSyncID:
setRecommendationID:
setSocialProfileID:
setInformalMediaClipID:
setInformalStaticAssetID:
setAssetAdamID:
containedPersistentID
syncID
recommendationID
formerAdamIDs
socialProfileID
informalMediaClipID
informalStaticAssetID
setServerID:
setExternalIdentifier:
setNameComponents:
setImageURL:
_initWithBlock:
nameComponents
imageURL
initWithResponseDictionary:
initWithName:uuid:root:debug:
setDisplayedCharacterCount:
setLanguage:
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
Td,N,V_visibleDuration
Tq,N,V_displayType
Tq,N,V_displayedCharacterCount
T@"NSString",C,N,V_language
Tq,N,V_sourceType
_icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
initWithUserIdentity:
setShouldPreventLeaseAcquisition:
receivedUserInteractionEvent
_itemShouldPreventPlaybackDidChangeNotification:
engine:didPauseForLeaseEndWithError:
stateReasonDialog
stateReasonDialogMetricsDictionary
engineDidPauseForLeaseEnd:
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
_leaseEndIgnoreReasons
_prepareCompletions
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
T@"NSMutableDictionary",&,N,V_prepareCompletions
_hasSubscriptionPlaybackCapability
_enqueuerProperties
TB,N,V_hasSubscriptionPlaybackCapability
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
setNeedsInfoDictionaryUpdate
packageURL
deleteWithError:
saveWithError:
writeWithError:
createExternalRepresentation
initWithExternalRepresentation:
packageTypeIdentifier
initWithURL:identifier:
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
T@"MPNowPlayingContentItem",C,N,V_contentItem
T@"UIImage",C,N,V_artworkImage
T@"NSDate",R,C,N,V_lastModifiedDate
bytes
hashInStore:
initWithDelegatedUserIdentity:
initWithUserIdentity:subscriptionStatus:
setHashedDSID:
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
setActiveAccount:
setBag:
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
T@"NSString",C,N,V_hashedDSID
TB,N,V_hasCloudLibraryEnabled
T@"NSString",C,N,V_storeFrontIdentifier
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
delegated
TB,R,N,GisDelegated,V_delegated
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_homeUserSettingsChangeNotification:
_updateAccounts
_updateAccountsWithAttemptCount:
_shouldPurgeGlideSubscriptionDataForAccount:
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
purgeGlideSubscriptionDataForHashedAccoundID:
accounts
_enumerateIdentitiesWithCompletion:
isActiveLocker
setShouldReturnLastKnownStatusOnly:
shouldReturnLastKnownStatusOnly
_needsRefreshDueToTimeout
_initialAccountGroup
T@"MPCPlaybackAccount",R,N
playOnPlayerPath:
T@"MPCPlayerSessionResponse",R,W,N,V_response
T@"NSString",R,N,V_contentItemIdentifier
setAssetStoreFronts:
skipEncodingMediaLibraryUniqueID
updateRequestPlaybackEnvironment
encodedMediaLibraryUniqueID
_skipEncodingMediaLibraryUniqueID
_encodedMediaLibraryUniqueID
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
T@"NSDictionary",C,N,V_assetStoreFronts
_shouldReportToStore
_playActivityEvent
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
TB,N,V_shouldReportToStore
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
indexSetWithIndexesInRange:
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
_overridePlayingItem
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
albumName
representativeCloudIdentifier
storeIdentifier
artistName
albumArtistName
composerName
copyright
genreName
storeAdamIdentifier
storeCloudIdentifier
storeItemWithIdentifier:
sceneCollectionForScriptData:
_instructionsForSceneDictionaries:
T@"ICUserIdentity",R,N
registerPlayer:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_rtcReportingController
_playbackHistoryController
_lyricsReportingController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
T@"MPRTCReportingController",&,N,V_rtcReportingController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
allowEmptySelection
languageOptions
isEqualToLanguageOption:
indexOfObjectPassingTest:
languageOptionType
displayName
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
copyExternalRepresentation
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
_currentIndex
_allowEmptySelection
T@"NSArray",R,N,V_options
T@"MPNowPlayingInfoLanguageOption",R,N
TB,R,N,V_allowEmptySelection
_accountInfos
_containers
_startingItemIndexPath
_MPAVItemForMFPlayerItem:allowReuse:
mapping
itemToFollowItem:direction:distance:reason:
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
_mapping
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
T@"<MPCReportingIdentityPropertiesLoading>",R,N
T@"NSData",R,C,N
T@"NSNumber",R,C,N
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
getVerificationContextForUserIdentity:error:
setInteractionLevel:
initWithVerificationContext:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
setItem:
setEndEvent:
setStarted:
ended
setEnded:
started
traceWithName:item:event:
traceIntervalWithName:item:beginEvent:endEvent:
_started
_ended
T@"NSString",&,N,V_name
T@"MPAVItem",W,N,V_item
TI,N,V_endEvent
Td,N,V_started
Td,N,V_ended
isAvailable
_copyWithPlaybackRequestEnvironmentClass:
setAllowsHandlingNonAuthenticationDialogs:
setStoreDialogResponseHandler:
clientInfoForMusicKitRequestWithClientIdentifier:clientVersion:bundleIdentifier:
T@"MPCPlaybackRequestEnvironment",R,N
_clientVersion
_delegationProperties
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
T@"MPCSharedListeningLiveLinkReusePool",R,N
_sessionIDLiveLinkMap
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByRemovingPercentEncoding
processData:usingProcedure:completion:
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeAllItems
removeExplicitItems
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
trackForItemAtIndex:
updateWithPersonalizedResponse:
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_playbackHistoryStore
_stationTracks
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
T@"ICRadioPlaybackHistory",R,C,N
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
serverTrackInfo
likeState
parentTrack
_playbackHistory
_trackModels
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
initWithInteger:
contentType
mediaPlayerBundle
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
removeObjectsForKeys:
isLocalDevice
sendCommand:toDestination:withOptions:completion:
removeOutputDevices:initiator:withReplyQueue:completion:
localizedFailureReason
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
deviceUIDsQueue
sendCommandWithResult:toDestination:withOptions:completion:
_applyOriginatingDeviceUIDs:
_setAnalyticsKey:value:
_setAnalyticsError:
canHostMultiplayerStream
hostedEndpointForOutputDeviceUIDs:queue:completion:
initWithFormat:
sendPlaybackQueueWithResult:toDestination:completion:
sendPlaybackQueueWithResult:toDestination:withOptions:completion:
userMonitorWithHomeIdentifier:
privateListeningEnabledForGroupWithRouteIDs:
_findOutputDevicesForDestination:completion:
sendPlaybackArchive:toDestination:withOptions:completion:
sendPlaybackArchiveWithResult:toDestination:withOptions:completion:
boolValueForOption:
supportedOptions
playbackSessionIdentifier
arrayWithObject:
sendPlaybackQueue:toDestination:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendPlaybackArchive:toDestination:completion:
sendPlaybackArchiveWithResult:toDestination:completion:
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
_allowsStoreContainerImport
_playEvent
TB,N,V_allowsStoreContainerImport
T@"MPModelPlayEvent",&,N,V_playEvent
Tq,N,V_type
getVolumeLevelForUID:completion:
clearPlaybackQueue
shouldExpectEmptyQueue
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_teardownBookmarkingTimer
_setupBookmarkingTimerForItem:
setHasPlayedThisSession:
bookmarkingTimer
setBookmarkingTimer:
_bookmarkingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
hasCellularDataCapability
_allowCellularStreamingDidChangeNotification:
_updateAdditionalLoadingSupport
userAdvancedDuringPlayback
setObserver:
setSkipDate:
replaceTrackAtIndex:withTrack:
isSkippable
replaceItemAndIdentifierSet:atIndex:
setPreviousContentItemID:
insertItems:afterItem:
allItems
allowsRadioService
_endObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
setReasonType:
setQueueContentReferences:
_loadTracksWithRequest:completion:
setPreservingCurrentlyPlayingItem:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
setRequestedTrackCount:
setMainTitle:
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
userMonitorWithUserIdentity:fromUserIdentityStore:
isExplicitSettingEnabled
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
autoupdatingActiveAccount
_removeAllTracks
_errorForRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
_beginObservingIdentityStoreForSignOut
pairWithFirst:second:
first
second
_handleGetTracksResponse:getTracksError:fromRequest:completion:
sharedQueue
operationCount
_responseDidInvalidateNotification:
_removeRestrictedTracks
_repersonalizeCurrentTracks
_isTransientLoadingError:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
setData:
set_firstAudioFrameTimestamp:
set_sectionIdentifier:
set_itemIdentifier:
set_featureName:
set_siriRefId:
set_isShuffled:
set_isAutoPlayEnabled:
set_isSharePlay:
set_assetType:
set_assetSource:
set_assetLocation:
set_isDelegatedPlayback:
set_hasOnlinePlaybackKeys:
set_hasOfflinePlaybackKeys:
set_bagWaitTime:
set_leaseWaitTime:
set_suzeLeaseWaitTime:
set_subscriptionAssetLoadWaitTime:
set_mediaRedownloadWaitTime:
set_formatInfo:
set_hlsMetadataWaitTime:
set_routeInfo:
set_itemMetadata:
set_isFirstPlay:
set_isReplacingPlayback:
set_errorResolution:
set_errorSignature:
set_networkType:
set_hasAccountInfo:
set_isActiveAccount:
set_queueType:
set_getTracksWaitTime:
set_lookupWaitTime:
set_sessionActivationWaitTime:
set_setQueueCommandSendTime:
set_playCommandSendTime:
set_queueLoadWaitTime:
set_assetLoadWaitTime:
set_readyToPlayStatusWaitTime:
set_playCommandWaitTime:
set_rateChangeWaitTime:
set_firstAudioFrameWaitTime:
firstAudioFrameTimestamp
itemMetadata
siriRefId
_data
T@"NSMutableDictionary",&,N,V_data
T@"NSNumber",&,D,N,Sset_firstAudioFrameTimestamp:
T@"NSString",&,D,N,Sset_sectionIdentifier:
T@"NSString",&,D,N,Sset_itemIdentifier:
T@"NSDictionary",&,D,N,Sset_itemMetadata:
T@"NSString",&,D,N,Sset_featureName:
T@"NSString",&,D,N,Sset_siriRefId:
T@"NSString",&,D,N,Sset_queueType:
T@"NSNumber",&,D,N,Sset_isShuffled:
T@"NSNumber",&,D,N,Sset_isAutoPlayEnabled:
T@"NSNumber",&,D,N,Sset_isSharePlay:
T@"NSNumber",&,D,N,Sset_assetType:
T@"NSNumber",&,D,N,Sset_assetSource:
T@"NSString",&,D,N,Sset_assetLocation:
T@"NSNumber",&,D,N,Sset_isDelegatedPlayback:
T@"NSNumber",&,D,N,Sset_hasOnlinePlaybackKeys:
T@"NSNumber",&,D,N,Sset_hasOfflinePlaybackKeys:
T@"NSDictionary",&,D,N,Sset_formatInfo:
T@"NSDictionary",&,D,N,Sset_routeInfo:
T@"NSNumber",&,D,N,Sset_networkType:
T@"NSNumber",&,D,N,Sset_isFirstPlay:
T@"NSNumber",&,D,N,Sset_isReplacingPlayback:
T@"NSNumber",&,D,N,Sset_errorResolution:
T@"NSString",&,D,N,Sset_errorSignature:
T@"NSNumber",&,D,N,Sset_hasAccountInfo:
T@"NSNumber",&,D,N,Sset_isActiveAccount:
T@"NSNumber",&,D,N,Sset_setQueueCommandSendTime:
T@"NSNumber",&,D,N,Sset_playCommandSendTime:
T@"NSNumber",&,D,N,Sset_queueLoadWaitTime:
T@"NSNumber",&,D,N,Sset_assetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_readyToPlayStatusWaitTime:
T@"NSNumber",&,D,N,Sset_playCommandWaitTime:
T@"NSNumber",&,D,N,Sset_rateChangeWaitTime:
T@"NSNumber",&,D,N,Sset_firstAudioFrameWaitTime:
T@"NSNumber",&,D,N,Sset_lookupWaitTime:
T@"NSNumber",&,D,N,Sset_getTracksWaitTime:
T@"NSNumber",&,D,N,Sset_bagWaitTime:
T@"NSNumber",&,D,N,Sset_leaseWaitTime:
T@"NSNumber",&,D,N,Sset_suzeLeaseWaitTime:
T@"NSNumber",&,D,N,Sset_subscriptionAssetLoadWaitTime:
T@"NSNumber",&,D,N,Sset_mediaRedownloadWaitTime:
T@"NSNumber",&,D,N,Sset_hlsMetadataWaitTime:
T@"NSNumber",&,D,N,Sset_sessionActivationWaitTime:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
distantPast
_playbackSessionsDirectory
archivesAtURL:
setDataSourceQueue:
addTarget:action:
removeTarget:
initWithCodingPackage:error:
decodeRootObjectOfClasses:error:
sharedSecurityInfo
isContentProtectionEnabled
isDeviceClassCUnlocked
nowPlayingContentItem
imageByPreparingForDisplay
initWithCodingPackage:userInfo:
encodeRootObject:
removeLastObject
removeObjectIdenticalTo:
_cachesDirectory
stringWithContentsOfURL:encoding:error:
writeToURL:atomically:encoding:error:
deleteSessionWithIdentifier:completion:
copyWithNewIdentifier:
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSMutableArray",R,N,V_sessionArchives
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
T@"NSString",&,N
initWithModelObject:response:
T@"MPModelSharedListeningParticipant",R,N,V_modelObject
setArtworkIdentifier:
T@"NSString",C,N,V_artworkIdentifier
T@"MPCMediaRemoteController",R,W,N,V_controller
timedMetadataGroups
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithArtworkResponseArray:
tokenWithImageArtworkInfo:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
metadataIdentifiers
_timedMetadataGroups
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
T@"NSArray",R,C,N,V_timedMetadataGroups
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v36@0:8@16@24B32
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@"ICLiveLink"16
v36@0:8@"ICLiveLink"16@"NSError"24B32
v32@0:8@"ICLiveLink"16@"NSArray"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningQueue"24
v40@0:8@"ICLiveLink"16@"ICSharedListeningItem"24@"ICLiveLinkIdentity"32
v32@0:8@"ICLiveLink"16@"ICLiveLinkEvent"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningItem"24
v32@0:8@16@?24
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v40@0:8@16@24@?32
v24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
q16@0:8
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MSVBlockGuard"
@"MPCPlaybackIntent"
@"NSIndexPath"
@"MSVSectionedCollection"
@"ICLiveLink"
@"ICLiveLinkIdentity"
@24@0:8^{_NSZone=}16
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
@24@0:8@16
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@"NSArray"
@"MPSectionedCollection"
@48@0:8@16@24@32@40
@32@0:8@16@24
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
B36@0:8B16q20@28
B28@0:8B16@20
B32@0:8B16I20@24
@44@0:8@16@24I32@36
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B36@0:8B16q20@"MPMiddlewareChain"28
B28@0:8B16@"MPMiddlewareChain"20
@"MPCPlayerAudioFormat"32@0:8@"MPCPlayerAudioFormat"16@"MPMiddlewareChain"24
@"MPCPlayerAudioRoute"32@0:8@"MPCPlayerAudioRoute"16@"MPMiddlewareChain"24
@"NSArray"32@0:8@"NSArray"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
v40@0:8@16Q24Q32
v24@0:8Q16
@"AVAudioSession"
@"NSString"
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16f24B28@32
v48@0:8@16@24@32@40
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v52@0:8@16f24@28@36@44
v28@0:8f16@20
v36@0:8B16@20@28
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@16d24@32
v48@0:8@16d24d32@40
v40@0:8@16@24q32
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16q24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16f24B28@"<MFTimeStamp>"32
v48@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"NSString"32@"<MFTimeStamp>"40
v40@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v52@0:8@"<MFQueuePlayerItem>"16f24@"NSString"28@"NSString"36@"<MFTimeStamp>"44
v28@0:8f16@"<MFTimeStamp>"20
v36@0:8B16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFQueuePlayerItem>"24@"<MFTimeStamp>"32
v40@0:8q16@"NSString"24@"<MFTimeStamp>"32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16d24@"<MFTimeStamp>"32
v24@0:8@"<MFTimeStamp>"16
v24@0:8@"<MFQueuePlayerItem>"16
v48@0:8@"<MFQueuePlayerItem>"16d24d32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24q32
v32@0:8@16q24
v24@0:8@"<MPAVQueueController>"16
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
d16@0:8
f16@0:8
v20@0:8B16
B48@0:8q16q24B32B36^@40
v20@0:8f16
B28@0:8f16@?20
v20@0:8i16
v24@0:8d16
v36@0:8f16@20@?28
v40@0:8d16@24@?32
B24@0:8q16
v40@0:8q16@24@?32
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"<MPAVQueueController>"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@"MPCPlaybackEngine"16@0:8
@"<MPAVQueueController>"16@0:8
@"MPAVItem"16@0:8
B28@0:8f16@?<v@?>20
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v52@0:8@16d24d32B40@44
v48@0:8@16@24@32d40
@"MPCPlaybackEngine"
@"<MPAVQueueController>"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPCPlayerItemConfigurator"
@"MPCAVItemTrace"
@"MPCPlayPerfAnalytics"
@"_MPCAudioSessionController"
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"ICStoreDialogResponse"16@0:8
B32@0:8@16@24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v24@0:8@"AVPlayerItemOutput"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"ICEnvironmentMonitor"16
@24@0:8^@16
B32@0:8@16q24
v28@0:8@16B24
v28@0:8f16@?20
{?=qqqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICContentKeySession"
@"ICAVAssetDownloadURLSession"
@"ICURLRequest"
@"ICMusicSubscriptionLeaseStatus"
@"NSDictionary"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"MPCPlaybackEngineEventStream"
@"MPCPlayerAudioFormat"
@"MPCPlayerAudioRoute"
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
{?="containerIndex"b1"itemIndex"b1}
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
B40@0:8@16@24@32
@"<MPCPlaybackEngineEventStreamSubscription>"
@"MPCPlaybackEngineEvent"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}16@0:8
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}32@0:8@16@24
@36@0:8@16@24B32
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@40@0:8@16@24q32
v56@0:8@16@24@32@40Q48
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableArray"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"MPMutableSectionedCollection"
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
@40@0:8@16@24B32B36
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
{?=qq}16@0:8
@"MPCPlayerPath"16@0:8
@"MPPropertySet"16@0:8
@"MPCPlayerPath"
q40@0:8q16q24@32
@40@0:8@16q24@32
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
@"MPCMediaRemoteController"
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v24@0:8@?<v@?B>16
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"MPMusicPlayerServerStateUpdateRecord"16
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16Q24
v36@0:8@16d24f32
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
@28@0:8d16f24
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
@48@0:8@16@24q32^@40
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
v36@0:8@16B24@?28
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"NSObject<OS_dispatch_source>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@32@0:8@16q24
@48@0:8@16q24q32^q40
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@24@0:8q16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
q24@0:8@16
@"MPCModelGenericAVItemAssetLoadProperties"
v56@0:8^@16^@24@32q40@48
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
B32@0:8@"NSString"16q24
B32@0:8@"NSString"16@"NSString"24
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"d@"NSError">24
@"MPModelPlayEvent"32@0:8@"NSString"16@"NSString"24
@"MPIdentifierSet"32@0:8@"NSString"16@"NSString"24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
v40@0:8@?16@?24@?32
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPModelPlayEvent"
@64@0:8@16@24@32q40@48@?56
B32@0:8@16^@24
@"MPAVItem"
@"<MPCAssetLoaderDelegate>"
@"NSError"
v40@0:8@16q24@?32
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPModelGenericObject"16@0:8
@"MPCStoreFrontLocalEquivalencyMiddleware"
@44@0:8I16@20@28@36
I16@0:8
@40@0:8@16Q24@32
@"MPCPlayerCommandRequest"
@"NSDate"
@"MPCPlayerCommandStatus"
v32@0:8{?=qq}16
{?="reverseCount"q"forwardCount"q}
@24@0:8@?16
@32@0:8@16@?24
@20@0:8I16
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@"MPCPlayerResponse"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
v48@0:8@16q24q32@40
@"NSObject<OS_dispatch_group>"
@"<MPCRTCEventConsumerTestingDelegate>"
@"RTCReporting"
v32@0:8Q16@24
@32@0:8Q16d24
@24@0:8Q16
v48@0:8@16@24@32^v40
q40@0:8{?=qiIq}16
{?=qiIq}24@0:8q16
@"AVPlayer"
@"MPCSceneCollection"
@"MPNotificationObserver"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@"<MPServerObjectDatabasePlaybackAuthorizationTokenTrustProvider>"
@"ICSharedListeningQueue"
@"MPRemoteCommandHandlerDialogAction"
@"MPRemoteCommandHandlerDialog"
@"MPCPlayerCommandDialog"
@"MPRemoteCommandStatus"
@"NSNumber"24@0:8q16
@32@0:8q16@?24
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@40@0:8@16@24d32
@"MPStoreLibraryPersonalizationResponse"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@32@0:8q16^@24
@"<MPCSupportedCommands>"
@28@0:8I16@20
f24@0:8@16
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v32@0:8@"NSError"16@"<MFPlayerItem>"24
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"NSMutableSet"
@"<MPCExternalPlaybackRouter>"
@40@0:8@16@24^@32
@"NSDictionary"16@0:8
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
@"MPModelResponse<MPCModelPlaybackResponse>"
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanJumpToItem"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring>"
@"MPPlaybackContext"
d48@0:8@16@24@32@40
d40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v32@0:8@16d24
@"ICPlayActivityController"
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
^{_MRSystemAppPlaybackQueue=}16@0:8
@"ICUserIdentity"
@"MPMediaQuery"
@"MPMediaItem"
@44@0:8@16@24i32@36
@36@0:8@16^v24B32
@40@0:8^v16@24@32
v32@0:8@?16@?24
^v16@0:8
@"MPAVRoute"
v32@0:8@"AVPlayerViewController"16@"<UIViewControllerTransitionCoordinator>"24
v32@0:8@"AVPlayerViewController"16@?<v@?B>24
v24@0:8@"AVPlayerViewController"16
v32@0:8@"AVPlayerViewController"16@"NSError"24
B24@0:8@"AVPlayerViewController"16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8@"UIView"16@?<v@?>24
v24@0:8@?<v@?>16
@"<MPCVideoOutputDelegate>"16@0:8
v24@0:8@"<MPCVideoOutputDelegate>"16
@"UIViewController"16@0:8
@"<MPCVideoOutputDelegate>"
@"AVPlayerViewController"
v32@0:8@"<MPCVideoOutput>"16@"<UIViewControllerTransitionCoordinator>"24
B24@0:8@"<MPCVideoOutput>"16
v24@0:8@"<MPCVideoOutput>"16
v32@0:8@"<MPCVideoOutput>"16@"NSError"24
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
v60@0:8{?=QQQQd}16B56
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCReportingController"
@"MPCStoreLibraryPersonalizationMiddleware"
@"MPCPlaybackSharedListeningProperties"
v64@0:8@16@24q32@40@48@?56
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
B40@0:8@16^d24^@32
@40@0:8@16^d24^@32
@32@0:8@16^@24
@"MPAVRoutingController"
@"MPCModelGenericAVItem"
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
B40@0:8@16@24q32
q36@0:8@16@24B32
{?="representativeItemCloudID"b1"storeAdamID"b1}
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@24@0:8d16
v28@0:8Q16B24
@"MSVLRUDictionary"
@32@0:8q16@24
@"MPCSharedListeningEventParticipant"
@"MPCSharedListeningSessionEvent"
@"MPCSharedListeningPlaybackEvent"
@"MPCSharedListeningQueueEvent"
@"MPCSharedListeningReactionEvent"
@"MPCSharedListeningCustomEvent"
@"MPCSharedListeningQueueEventContentAdded"
@"MPCSharedListeningQueueEventContentRemoved"
@"MPCSharedListeningQueueEventContentReordered"
@"MPCSharedListeningQueueEventContentReplaced"
@"MPCSharedListeningQueueEventContentPlayedNow"
@"MPCSharedListeningQueueEventContentUpdatedMessage"
@"MPCSharedListeningQueueEventPlaybackModeChanged"
@20@0:8B16
v44@0:8I16@20@28@?36
v52@0:8I16@20@28@36@?44
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
^v32@0:8@16@24
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
@"MRCommandResult"
@27@0:8@16{MPCModelStorePlaybackItemsRequestAccumulatorResult=BBB}24
{MPCModelStorePlaybackItemsRequestAccumulatorResult="didFinishEntireRequest"B"didFinishBatch"B"hasCollectionItemsWithPlaybackAuthorizationToken"B}
@"MPServerObjectDatabaseImportResult"
Q24@0:8Q16
{_NSRange=QQ}16@0:8
q24@0:8q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"NSSet"
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
@"MPCPlayerCommandRequest"24@0:8q16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@32@0:8@16Q24
@"MPCPlayerCommandRequest"20@0:8B16
v56@0:8@16q24@32Q40@?48
@"MPCSharedListeningContainerInfo"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
v56@0:8@"MPPlaybackContext"16q24@"NSString"32Q40@?<v@?@"NSString"@"NSError">48
@"<MPCQueueControllerCommandInterposingHost>"16@0:8
v24@0:8@"<MPCQueueControllerCommandInterposingHost>"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
@"NSString"32@0:8@"NSString"16@"NSString"24
@"NSString"24@0:8@"NSString"16
@"NSArray"24@0:8q16
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@28@0:8@16B24
@48@0:8@16q24q32B40B44
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"48@0:8@"MPAVItem"16q24q32B40B44
B32@0:8q16@"MPAVItem"24
v24@0:8@"AVPlayerPlaybackCoordinator"16
@"MPAVItem"32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v40@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24@"MPAVItem"32
v24@0:8@"<MPAVQueueCoordinating>"16
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@40@0:8q16q24^q32
B24@0:8@"MPAVItem"16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSError">24
v40@0:8@"MPPlaybackContext"16q24@?<v@?@"NSError">32
v44@0:8@"MPPlaybackContext"16q24B32@?<v@?@"NSError">36
v48@0:8@"MPPlaybackContext"16q24B32B36@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"MPAVItem"16@"MPAVItem"24
v28@0:8@"NSString"16B24
@"NSString"24@0:8q16
@"NSString"40@0:8q16q24^B32
@"MPAVItem"24@0:8@"NSString"16
@"<MPAVQueueControllerDelegate>"16@0:8
v24@0:8@"<MPAVQueueControllerDelegate>"16
@"<MPAVQueueCoordinating>"16@0:8
@"NSArray"40@0:8q16q24^q32
v32@0:8q16@"NSString"24
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"MPCSharedListeningContainerInfo"16
v24@0:8@"MPCSharedListeningEvent"16
v40@0:8@"NSString"16@"NSString"24@"ICLiveLinkIdentity"32
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
v48@0:8@16@24@32@?40
@32@0:8@16^B24
@"AVPlayerPlaybackCoordinator"
@"<MPAVQueueControllerDelegate>"
@"<MPAVQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
@56@0:8@16q24Q32@40@48
@"MPCQueueController"
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"NSArray"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
@"<MPCQueueControllerCommandInterposingHost>"
@"MPPlaybackUserDefaults"
v28@0:8@16f24
@"MPCWaitForLikelyToKeepUp"
@"MPCWaitForReadyToPlaySignpost"
@"MPCPlayToSetRateSignpost"
@"MPCSetRateToEffectiveRateSignpost"
{?="storeAdamID"b1}
v28@0:8d16f24
@"AVPlayerLayer"
v40@0:8@16@?24@?32
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerAudioFormat"16
@"MPCPlayerAudioFormat"16@0:8
@"MPCPlayerAudioRoute"16@0:8
{?=dddddffBB}16@0:8
@"MPCPlayerResponseParticipant"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"MPCPlayerCommandRequest"24@0:8d16
@20@0:8f16
@"MPCPlayerCommandRequest"20@0:8f16
@28@0:8@16I24
v40@0:8d16d24@32
v32@0:8d16d24
v32@0:8d16@24
d32@0:8@16d24
@"MPAVController"
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
v32@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24
v40@0:8^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
^{opaqueMTAudioProcessingTap=}
@"_MPCAudioSpectrumAnalyzerStorage"
@"MPCAudioSpectrumAnalyzer"
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
^{_MPCAudioSpectrumAnalyzerBandInternal={MPCAudioSpectrumAnalyzerBand=ff}fffQ}
@28@0:8Q16f24
v40@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16Q24@32
{DSPSplitComplex="realp"^f"imagp"^f}
^{OpaqueFFTSetup=}
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
@36@0:8@16@24f32
q24@0:8Q16
@"ICEnvironmentMonitor"
@"MSVABTestGenerator"
B28@0:8@16B24
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
v28@0:8q16B24
v32@0:8@16B24B28
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
v48@0:8I16@20I28@32@?40
{CGSize=dd}40@0:8@16{CGSize=dd}24
{CGSize=dd}40@0:8@"MPArtworkCatalog"16{CGSize=dd}24
v32@0:8@"MPArtworkCatalog"16@"UIView"24
v40@0:8@"MPArtworkCatalog"16@"UIView"24@"MPArtworkRepresentationCollection"32
v40@0:8@"MSVLRUDictionary"16@24@32
@?24@0:8@16
@?<@"MPArtworkCatalog"@?>24@0:8@"MPNowPlayingContentItem"16
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
{_MSVSignedRange="location"q"length"q}
@"<MPArtworkDataSource>"
^v20@0:8I16
v32@0:8^v16@?24
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@"MPCPlaybackEngineEvent"16@0:8
v44@0:8@16@24@32B40
v68@0:8@16@24@32@40@48@56B64
v72@0:8@16@24@32@40@48B56B60d64
v52@0:8@16@24@32@40B48
@"NSProgress"
@"MPCModelStorePlaybackItemsResponse"
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
@40@0:8@16q24d32
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
@"MPNowPlayingInfoCenter"16@0:8
@"MPRemoteCommandCenter"16@0:8
@"AVAudioSession"16@0:8
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
@"<MPCPlaybackEngineInitializationParameters>"
v32@0:8@16^v24
I32@0:8@16q24
v20@0:8I16
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
B24@0:8^@16
@"MPNowPlayingContentItem"
@"UIImage"
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPRTCReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
@48@0:8@16q24q32q40
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFQueuePlayerItem>"24
@"<MPCQueueItemProviding>"
@"ICRadioGetTracksResponse"
v36@0:8@16@24I32
@40@0:8@16@24I32I36
@24@0:8#16
@"MPCPlaybackDelegationProperties"
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v40@0:8@16@24d32
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPModelSharedListeningParticipant"
