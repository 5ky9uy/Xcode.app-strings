T@?,C,N,V_fullyShutDownCallback
DAExtendedDescription
_isShuttingDown
T#,R
_localIntegerId
T@"DAIMAPNotesDaemonAccount",W,N,V_notesAccount
actions
T@"IMAPAccount",W,N,V_account
bundleForClass:
T@"MFMailboxUid",&,N,V_mailboxUid
compactMailbox:
T@"NSMutableArray",&,N,V_notesNeedingBodyDownload
content
T@"NSMutableDictionary",&,N,V_daFoldersByFolderId
dealloc
T@"NSMutableSet",&,N,V_currentlySyncingFolderIds
headers
T@"NSSet",&,N,V_lastFolderSetRegisteredForPush
initWithFormat:
T@"NoteContext",&,N,V_noteContext
isProxy
T@"PCConnectionManager",&,N,V_pcManager
newlyAddedStore
TB,N,V_isShuttingDown
TQ,R
setAccountType:
Ti,N,V_outstandingInvocationCount
setDataclassesConsideredActive:
_account
setMessageBody:
_appendSyncRequest:
setServerIntId:
_attachmentManager
startMonitoring
_consumer
successfullyRetrievedFolderList
_consumerQueueWrapperSuccessfullyRetrievedFolderList:
_copyDAFolderFromMailboxUid:isDefault:
.cxx_destruct
_callShutdownBlockIfAppropriate
DAManagedDefaultForKey:
_lastFolderSetRegisteredForPush
T@"<DAIMAPNotesFolderListConsumer>",R,N,V_consumer
account
T@"IMAPAccount",&,N,V_imapMailAccount
attachmentDataFileURLWithError:
T@"MFAttachmentLibraryManager",R,N,V_attachmentManager
changes
T@"NSLock",&,N,V_folderItemSyncRequestLock
containsObject:
T@"NSMutableArray",&,N,V_outstandingFolderRequests
daFoldersByPushNotificationName
T@"NSMutableDictionary",&,N,V_daFoldersByPushNotificationName
deviceWillSleep
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
imapMailAccount
T@"NSString",R,C
initWithTarget:selector:object:
T@"NoteContext",R,N
library
TB,N,V_accountHasShutDown
release
TB,N,V_isSpinning
Ti,N,V_localIntegerId
setAttachments:
URLString
setHandlerForOfflineCacheFlush:
_accountHasShutDown
setNoteContext:
_appendSyncRequestsForFolders:remoteChanges:
sharedDBWatcher
_clearChangeHistoriesInContext:changeSet:
stringByAppendingPathComponent:
_consumerQueueWrapper:failedToRetrieveFolderListWithStatus:error:
systemWillSleep
_copyDAActionsFromNoteChanges:inStore:mutableNotesToDeleteAfterSync:
_copyMessageDetailsForNote:inLibrary:
_copyNotesStoreFromDAFolder:withNoteContext:
_currentlySyncingFolderIds
_daFoldersByFolderId
_daFoldersByPushNotificationName
_finishSyncResultOnMainThreadForFolderWithDictionary:
_fireWaitingFolderItemSyncRequests
_folderItemSyncRequestLock
_fullyShutDownCallback
_handlePushNotificationWithName:
_imapMailAccount
_isSpinning
_mailboxUid
_mimeVersion
_noteContext
_noteInvocationFinished
_noteInvocationFinishedOnMainThread
_noteObjectFromMessage:withTextContentData:inStore:attachmentManager:andContext:
_notesAccount
_notesNeedingBodyDownload
_notifyContentSyncComplete
_notifyContentSyncFailed
_notifyFolderSyncComplete
_notifyFolderSyncFailed
_outstandingFolderRequests
_outstandingInvocationCount
_pcManager
_queue
_reallySyncNotesFolderListWithConsumerQueueWrapper:
_reallySyncRequest:
_runInterimWorkerThreadWithStartupLock:
_serverUpdatedNoteFolder:
_setLastFolderSetRegisteredForPush:
_setMailHacks
_setSpinning:
_setUpNotesNotifications
_syncAllNotesFoldersWithRemoteChanges:
_syncInLockRequest:
_syncNotesFolderListInLockWithConsumer:queue:
_syncRequest:
_tearDownNotesNotifications
_validateAndSyncWithRemoteChanges:
accountDescription
accountForAccountId:
accountHasShutDown
accountID
accountIdentifier
accountType
accountTypeIdentifier
accountWithUniqueId:
addInvocation:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
addNoteNeedingBodyDownload:
addObject:
addObjectsFromArray:
addObserver:selector:name:
allIMAPServersSupportNotesSearch
allMailboxUids
allNotesInCollection:
allNotesWithoutBodiesInCollection:
allObjects
allValues
appendMessages:unsuccessfulOnes:
array
arrayWithObject:
arrayWithObjects:count:
attachmentForData:mimeType:fileName:contentID:context:
attachmentForURL:error:
attachmentManager
attachmentURLs
attachments
author
autorelease
backingAccountInfo
boolValue
bytes
changeType
changedItem
childAccounts
class
code
compactMessages:permanently:
compare:
componentsSeparatedByString:
conformsToProtocol:
connectionManager:handleEvent:
connectionManager:handleEvent:context:
consumer
contentID
copy
count
countByEnumeratingWithState:objects:count:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithString:headers:
creationDate
currentHandler
currentMonitor
currentRunLoop
currentStyle
currentThread
currentlySyncingFolderIds
daFoldersByFolderId
da_newGUID
dataWithContentsOfURL:options:error:
databaseIsCorrupt:
date
dateWithCalendarFormat:timeZone:
debugDescription
defaultNotesFolder
deleteChanges:
deleteMessages:moveToTrash:
deleteNoteRegardlessOfConstraints:
deleteStore:
deletedCountForMailbox:
depthFirstEnumerator
description
deviceDidWake
dictionaryWithObjects:forKeys:count:
displayName
distantFuture
domain
drainWorkerThreadAndInvokeBlock:
dropAssertionsAndRenewCredentialsInQueue:withHandler:
enabledForDADataclass:
error
errorWithDomain:code:userInfo:
externalIdentifier
failedToRetrieveFolderListWithStatus:andError:
fetchDataSynchronously:
fetchMobileSynchronously:
fileName
filename
filenameWithBasename:
firstEmailAddress
firstHeaderForKey:
firstSenderAddress
flags
flushAllInvocationQueues
flushLog
folder
folderID
folderItemSyncRequestLock
folderName
fullUserName
fullyShutDownCallback
getCFRunLoop
getDetailsForAllMessagesFromMailbox:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
getMailboxListWithConnection:
guid
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasPrefix:
hasRemoteChanges
hasValidServerIntId
hash
headersFromLocalNoteObject:imapAccount:
htmlContent
htmlData
identifier
inferredMimeType
init
initWithAccount:
initWithBackingAccountInfo:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCondition:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConsumer:queue:
initWithFolder:hasRemoteChanges:isInitialUberSync:
initWithItemChangeType:changedItem:serverId:
initWithLibraryID:
initWithPath:
initWithPrimaryLibrary:
insertObject:atIndex:
intValue
integerId
isAppleInternalInstall
isBookkeepingEntry
isDefault
isEqual:
isEqualToString:
isKindOfClass:
isMarkedForDeletion
isMemberOfClass:
isMessageContentsLocallyAvailable:
isMonitoring
isOffline
isPlainText
isShuttingDown
isSpinning
itemChangeType
lastFolderSetRegisteredForPush
length
libraryID
localIntegerId
localNotesAccountInContext:
lock
lockWhenCondition:
logBytes:length:
logClasses
logConnection:type:data:
longLongValue
mailboxUid
mailboxUidForMessage:
mailboxUidForRelativePath:create:
mailboxUidForURL:
maximumRemoteIDForMailbox:
maximumServerIntId
messageAttachmentsFromNoteAttachmentObjects:attachmentManager:
messageBody
messageData
messageFlags
messageFromLocalNoteObject:inMailboxUid:inAccount:
messageIsSyncableNote:
messageSize
messageStore
messageWithLibraryID:options:inMailbox:
messageWithMessageID:options:inMailbox:
messageWithRemoteID:inRemoteMailbox:
messagesForMailbox:olderThanNumberOfDays:
messagesWithMessageIDHeader:
messagesWithSummariesForMailbox:range:
mf_copyDateInCommonFormatsWithString:
mf_formattedAddressWithName:email:useQuotes:
mf_invocationWithSelector:target:object:
mimeType
minimumRemoteIDForMailbox:
minimumSequenceNumberForServerIntIds:
modificationDate
mutableCopy
name
newlyAddedAccount
newlyAddedAttachment
newlyAddedNoteWithGUID:
nonDeletedCountForMailbox:
noteAttachmentObjectsFromAttachmentsOfMessage:attachmentManager:noteContext:
noteContext
noteIntegerIds
notesAccount
notesFolderWithId:failedToSyncWithStatus:error:
notesFolders
notesFoldersByFolderId
notesForIntegerIds:
notesForServerIntIds:
notesForServerIntIdsInRange:ascending:limit:
notesNeedingBodyDownload
notificationNamesForPrefix:mailboxUids:
numberWithInt:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
oldestMessageInMailbox:
outgoingMessageFromLocalNoteObject:imapAccount:attachmentManager:
outstandingFolderRequests
outstandingInvocationCount
parentAccount
pathForResource:ofType:
pathToConstraintsPlist
pcManager
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
persistAttachmentData:error:
port
preferredCharacterSet
publicDescription
queue
refreshFolderListRequireChangedFolders:isUserRequested:
registerConcernedNoteParty:withChangedBlock:
registerPushNotificationPrefix:forMailboxUids:
registerWaiter:forDataclassLocks:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
remoteID
removeAllMessagesFromMailbox:andNotify:
removeAllObjects
removeAttachmentForURL:
removeConcernedNoteParty:
removeObject:
removeObserver:name:
requestAgentStopMonitoringWithCompletionBlock:
respondsToSelector:
resumeManagerWithAction:
retain
retainCount
rootMailboxUid
save:
scheduleIdentifier
scheduleInRunLoop:forMode:
self
sendMessagesMatchingCriterion:to:options:range:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
serverId
serverIntId
setAccount:
setAccountHasShutDown:
setAccountIdentifier:
setAdditionalFetchHeaders:
setAdditionalSynchronizationSearchArguments:
setAddressListForSender:
setAuthor:
setClass:forClassName:
setContent:
setContentID:
setCreationDate:
setCurrentlySyncingFolderIds:
setDaFoldersByFolderId:
setDaFoldersByPushNotificationName:
setDefaultStore:
setDelegate:
setExternalIdentifier:
setFilename:
setFlags:
setFlags:forMessage:
setFlagsForMessages:mask:
setFlagsFromDictionary:forMessages:
setFolderID:
setFolderItemSyncRequestLock:
setFolderName:
setFullyShutDownCallback:
setGlobalPathForAccounts:
setHandlerForTemporaryUidToRemoteIDMapping:
setHasRemoteChanges:
setHasTemporaryUid:
setHeader:forKey:
setImapMailAccount:
setIsBookkeepingEntry:
setIsDefault:
setIsMonitoring:
setIsShuttingDown:
setIsSpinning:
setIsWaitingForPassword:
setLastFolderSetRegisteredForPush:
setLibrary:
setLocalIntegerId:
setLogAllSocketActivity:
setLogClasses:
setMailboxUid:
setMessageClassToInstantiate:
setMessageInfo:to:cc:bcc:sender:dateReceivedTimeIntervalSince1970:dateSentTimeIntervalSince1970:messageIDHash:conversationID:summary:
setMessageStore:
setMimeType:
setModificationDate:
setName:
setNotesAccount:
setNotesNeedingBodyDownload:
setObject:forKey:
setObject:forKeyedSubscript:
setOnlyAllowedStyle:
setOutstandingFolderRequests:
setOutstandingInvocationCount:
setPathToConstraintsPlist:
setPcManager:
setRemoteID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
setSequenceNumber:
setShouldFlattenCacheOperations:
setSourceApplicationBundleIdentifier:
setStore:
setThreadRecycleTimeout:
setTitle:
setUpMailLogging
setWithArray:
setWithObject:
sharedGateKeeper
sharedInvocationQueue
shouldCreateAccountForBackingAccountInfo:
shouldDataAccessCreateAccountForACAccount:
shouldFailAllTasks
shutDownAndCallCallback:
sortUsingComparator:
sortedArrayUsingFunction:context:
start
startManager
stopManager
store
storeForExternalId:
storeForMailboxUid:
stores
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithUTF8String:
superclass
syncFolderIDs:forDataclasses:isUserRequested:
syncNotesFolderListWithConsumer:queue:
syncResultForNotesFolder:noteContext:newTag:previousTag:actions:results:changeSet:notesToDeleteAfterSync:isInitialSync:moreAvailable:moreLocalChangesAvailable:
syncableDataclasses
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemDidWake
systemTimeZone
timeIntervalSince1970
timeIntervalSinceReferenceDate
title
totalCountForMailbox:
unlock
unlockWithCondition:
unreadCountForMailbox:
unregisterWaiterForDataclassLocks:
waiterID
zone
IMAPNotesLibrary.m
Library MUST have a context at this point
 permanently
-[IMAPNotesLibrary addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:]
We pulled out a note with an invalid remote id (note %@)
Notes db was corrupted.  Crashing the daemon to get a second chance at it (err %@)
%llu
NSInteger _sortNotesByServerId(__strong id, __strong id, void *)
v8@?0
MessageFileWrapper
Library/DataAccess/
@"NSString"12@?0I8
IMAPNotesConstraints
plist
DAIMAPNotesDaemonAccount.m
com.apple.mobilenotes
Notes
<no description>
v20@?0q8B16
Got an unacceptable store class %@ from my account
X-Uniform-Type-Identifier
X-Universally-Unique-Identifier
X-Mail-Created-Date
HEADER
com.apple.mail-note
We should not have any messages pending a body download at this point.
q24@?0@8@16
Got an unknown class of %@ for htmlContent of message %@
IMAP Daemon Account outstanding invocation count went negative.  Fix yer bug.  Self %@
IMAP Notes account got confused, has callCallback = YES, but a NULL callback
Who's asking me to shut down, while I'm in the process of shutting down?!.  Self %@
IMAPNotesAccountFolderHierarchySyncCompleteNotification-
IMAPNotesAccountFolderHierarchySyncFailedNotification-
IMAPNotesAccountContentSyncCompleteNotification-
IMAPNotesAccountContentSyncFailedNotification-
com.apple.dataaccessd
v24@?0q8@"NSError"16
folderID
DAIMAPNotesAgent.m
IMAP Agent outstanding invocation count went negative.  Fix yer bug.  Self %@
error
-[DAIMAPNotesAgent _fireWaitingFolderItemSyncRequests]
You cannot have preset actions on a Notes folder sync request.  Sorry.  Request %@
Attempted to queue a sync request for a folder with no folder id: %@
-[DAIMAPNotesAgent connectionManager:handleEvent:]
IMAPNotesAgent-%@
DataAccess
%@ (%@)
%a, %d %b %Y %H:%M:%S %z
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
IMAPNotesTraffic
DALogLevel
message with library id %@ returning %@
Max remote id for mailbox url %@ returning %d
Get details for all messages in mailbox at url %@
Returning %lu message details
Getting details for %lu messages in mailbox %@ from top of range [%lu, %lu]
Deleting all notes in mailbox at url %@
Yikes, being asked to compact a message I don't know how to grok: %@
Deleting messages with int ids %@%@
Skipping delete of message with int id %@, as we've recently modified its server int id to be something new %lld (condensed add/delete into a modify)
Adding messages %@ (remote ids %@) to mailbox uid %@
Failed to save: %@
Notes database was corrupted! This is a fatal error, so let's try that again.
Setting flags %llx for message %@
Testing remote id %lld with local id %lld
Need to write %s
message with remote id %lld (%@) returning %@
Not creating an agent for account info %@ (%{public}@) because it is a migrated iCloud account
Couldn't find an imap account associated with account %@.  Parent %@.  Peers %@.
Creating IMAPNotes account in db for account id %@
Telling springboard to set the spinner to %@ for identifier com.apple.mobilenotes
Finished telling springboard to set the spinner to %@ for identifier com.apple.mobilenotes
Not syncing folder list for migrated iCloud account
Not syncing folder list, we're on our way out
Gonna grab our mailbox list now
Monitor gave error %@
Folders from account are %@
No Notes folder exists for account %@.  Creating one on the server
Done, found folders of %@
Threw an exception while getting folder list.  Exception %@
IMAP daemon account %@ is syncing Notes folder list, outstandingInvocationCount is incremented to %d
Locks for dataclasses 0x%lxx were aborted.
Our folder went bye-bye
Sending header-based search to all IMAP servers
NOT requesting notes-only, as the account type %@ does not support that
This should be interesting.  Gonna fetch new messages for store %@
Syncing folder %@ with %lu add/modifies, %lu deletes
Couldn't cons up a message for note %@
Asking store to append messages %@
Failed to append these messages %@
Deleting messages %@
NoteStore %@ had notes needing bodies %@
Failed to save after getting note metadata: %@
Should not be asked to get the body of bookkeeping note %@.  Ignoring it
Bailing early, as someone wants us to shut down
Failed to save after getting %d note bodies: %@
Going to get message data for message %@
Pulled Notes headers %@
Got htmlContent %@
Note with properties %@ disappeared before I got its content
Couldn't get the MFWebMessageDocument from message body
messageBody htmlcontent is %ld characters
Threw an exception in daemon account while syncing folder with id %@.  Exception %@
Note %@ added to DAAccount %p
IMAP Daemon account %@ had an invocation finish. self.outstandingInvocationCount is decremented to %d
IMAP Daemon account %@ invoking fullyShutdownCallback
IMAP Daemon account should shut down now, _outstandingInvocationCount is %d
IMAP Daemon account %@ invoking shutdown callback
IMAP Daemon account %@ saving shutdown callback
Unknown change type %@ from change object %@
Looking at a change to note with integer id %@, but that note doesn't exist in the notes db.  Ignoring this change
Skipping add of marked-deleted note %@
IMAPNotesAgent deallocing - Tearing down PCConnectionManager and stopping ImapNotes agent
Received push notification for name %@
Want the following mailbox uids registered for push: %@
unregistering notification for push: %@
registering notification for push: %@
Got Folder List from my account, going to sync my folders
Got an auth error (%d) for IMAPNotes. Attempting to renew credentials.
Failed to renew credentials for IMAPNotes. Result = %d
Renew error domain = %{public}@, code = %d, error = %@
Successfully renewed credentials for IMAPNotes.
Yikes: %s %ld %@
IMAP Notes account refreshing folder list
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account doesn't have any notes folders, grabbing them.
Asked to sync folder with id %@, but I only know of these folders %@
IMAP agent %@ finished sync, decremented _outstandingInvocationCount to %d
Finished syncing folder %@
Asked to sync folder with id %@, but I have no matching container
Asked to sync, but there are no local or remote changes.  Ignoring that request
Threw an exception while syncing notes folder with id %@.  Exception %@
IMAP agent %@ starting sync, incremented _outstandingInvocationCount to %d
DAIMAPNotesAgent: locks granted for dataclasses %lx
lock for %@ aborted
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Couldn't find folder corresponding to notification name "%@". Going to sync all folders
_lastFolderSetRegisteredForPush %@ _daFoldersByPushNotificationName %@
%s invoked: mgr %@, event %d
Told to poll, but we're in manual PC mode.
%s syncing all folders, and scheduling another poll action, PC reason was %d
%s not syncing, as I'm in on-power mode, behaving like manual mode
%s pcManager callback out to lunch, reason is: %d
IMAP Agent %@ seeing if it should shut down.  Account has shut down = %d, outstanding invocation count = %d
IMAP Agent %@ invoking fully shutdown callback
The IMAPNotes agent was told to stop monitoring.
IMAP agent %@, IMAP Daemon account has completed shutdown. The accountHasShutDown is set to YES.
The following message doesn't have a mime body: %@
I don't know how to archive this attachment.  It will be lost on modify.  Attachment %@, manager %@
Couldn't persist data for attachment: %@
Couldn't get attachment data from url %@. %@
Here's the attachment: %@
Note is too big at %lu bytes.
Asked to create an outgoing message from a bookkeeping entry.  Who's the joker trying to introduce data loss? Note %@
Couldn't find a url on store %@
Couldn't get a MailboxUID from account %@ with url %@
%@ creating noteContext on thread %p
IMAPNotesLibrary
DAIMAPNotesFolderListConsumerQueueWrapper
DAIMAPNotesDaemonAccount
DADataclassLockWatcher
NSObject
DAIMAPNotesAgent
DAIMAPNotesFolderListConsumer
DANotesUpdateConsumer
PCConnectionManagerDelegate
DAIMAPNotesFolder
IMAPNotesOutgoingMessage
DAIMAPNotesUtils
MFLogClass
DAIMAPNotesFolderSyncRequest
@32@0:8I16I20@24
I24@0:8@16
@24@0:8@16
@40@0:8{_NSRange=QQ}16@32
@56@0:8Q16Q24Q32^{_NSRange=QQ}40@48
v24@0:8@16
v28@0:8@16B24
@92@0:8@16@24B32@36@44Q52Q60@68B76B80@84
@32@0:8@16@24
B24@0:8@16
v32@0:8Q16@24
v40@0:8@16@24@32
@36@0:8@16I24@28
v52@0:8@16@24I32{_NSRange=QQ}36
@28@0:8@16i24
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16Q24
@16@0:8
v16@0:8
@"IMAPAccount"
@"DAIMAPNotesDaemonAccount"
@"NoteContext"
@"<DAIMAPNotesFolderListConsumer>"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8@16B24
v20@0:8B16
v40@0:8@16q24@32
v32@0:8@16@24
v84@0:8@16@24@32@40@48@56B64B68B72@76
v24@0:8@?16
i16@0:8
v20@0:8i16
@?16@0:8
@"MFAttachmentLibraryManager"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8q16@24
v32@0:8q16@"NSError"24
v92@0:8@16@24@32@40@48@56@64@72B80B84B88
v92@0:8@"NSString"16@"NoteContext"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSSet"64@"NSSet"72B80B84B88
v40@0:8@"NSString"16q24@"NSError"32
v28@0:8@16i24
v36@0:8@16i24@28
v28@0:8@"PCConnectionManager"16i24
v36@0:8@"PCConnectionManager"16i24@"NSDictionary"28
@40@0:8@16@24@32
v24@0:8B16B20
v36@0:8@16q24B32
B32@0:8@16@24
@"NSMutableSet"
@"NSLock"
@"PCConnectionManager"
@"NSSet"
@"MFMailboxUid"
@56@0:8@16@24@32@40@48
v28@0:8r*16i24
v40@0:8@"MFConnection"16q24@"NSData"32
IMAPNotesLibrary.m
Library MUST have a context at this point
 permanently
-[IMAPNotesLibrary addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:]
We pulled out a note with an invalid remote id (note %@)
Notes db was corrupted.  Crashing the daemon to get a second chance at it (err %@)
%llu
NSInteger _sortNotesByServerId(__strong id, __strong id, void *)
v8@?0
MessageFileWrapper
Library/DataAccess/
@"NSString"12@?0I8
IMAPNotesConstraints
plist
DAIMAPNotesDaemonAccount.m
com.apple.mobilenotes
Notes
<no description>
v20@?0q8B16
Got an unacceptable store class %@ from my account
X-Uniform-Type-Identifier
X-Universally-Unique-Identifier
X-Mail-Created-Date
HEADER
com.apple.mail-note
We should not have any messages pending a body download at this point.
q24@?0@8@16
Got an unknown class of %@ for htmlContent of message %@
IMAP Daemon Account outstanding invocation count went negative.  Fix yer bug.  Self %@
IMAP Notes account got confused, has callCallback = YES, but a NULL callback
Who's asking me to shut down, while I'm in the process of shutting down?!.  Self %@
IMAPNotesAccountFolderHierarchySyncCompleteNotification-
IMAPNotesAccountFolderHierarchySyncFailedNotification-
IMAPNotesAccountContentSyncCompleteNotification-
IMAPNotesAccountContentSyncFailedNotification-
com.apple.dataaccessd
v24@?0q8@"NSError"16
folderID
DAIMAPNotesAgent.m
IMAP Agent outstanding invocation count went negative.  Fix yer bug.  Self %@
error
-[DAIMAPNotesAgent _fireWaitingFolderItemSyncRequests]
You cannot have preset actions on a Notes folder sync request.  Sorry.  Request %@
Attempted to queue a sync request for a folder with no folder id: %@
-[DAIMAPNotesAgent connectionManager:handleEvent:]
IMAPNotesAgent-%@
DataAccess
%@ (%@)
%a, %d %b %Y %H:%M:%S %z
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
IMAPNotesTraffic
DALogLevel
message with library id %@ returning %@
Max remote id for mailbox url %@ returning %d
Get details for all messages in mailbox at url %@
Returning %lu message details
Getting details for %lu messages in mailbox %@ from top of range [%lu, %lu]
Deleting all notes in mailbox at url %@
Yikes, being asked to compact a message I don't know how to grok: %@
Deleting messages with int ids %@%@
Skipping delete of message with int id %@, as we've recently modified its server int id to be something new %lld (condensed add/delete into a modify)
Adding messages %@ (remote ids %@) to mailbox uid %@
Failed to save: %@
Notes database was corrupted! This is a fatal error, so let's try that again.
Setting flags %llx for message %@
Testing remote id %lld with local id %lld
Need to write %s
message with remote id %lld (%@) returning %@
Not creating an agent for account info %@ (%{public}@) because it is a migrated iCloud account
Couldn't find an imap account associated with account %@.  Parent %@.  Peers %@.
Creating IMAPNotes account in db for account id %@
Telling springboard to set the spinner to %@ for identifier com.apple.mobilenotes
Finished telling springboard to set the spinner to %@ for identifier com.apple.mobilenotes
Not syncing folder list for migrated iCloud account
Not syncing folder list, we're on our way out
Gonna grab our mailbox list now
Monitor gave error %@
Folders from account are %@
No Notes folder exists for account %@.  Creating one on the server
Done, found folders of %@
Threw an exception while getting folder list.  Exception %@
IMAP daemon account %@ is syncing Notes folder list, outstandingInvocationCount is incremented to %d
Locks for dataclasses 0x%lxx were aborted.
Our folder went bye-bye
Sending header-based search to all IMAP servers
NOT requesting notes-only, as the account type %@ does not support that
This should be interesting.  Gonna fetch new messages for store %@
Syncing folder %@ with %lu add/modifies, %lu deletes
Couldn't cons up a message for note %@
Asking store to append messages %@
Failed to append these messages %@
Deleting messages %@
NoteStore %@ had notes needing bodies %@
Failed to save after getting note metadata: %@
Should not be asked to get the body of bookkeeping note %@.  Ignoring it
Bailing early, as someone wants us to shut down
Failed to save after getting %d note bodies: %@
Going to get message data for message %@
Pulled Notes headers %@
Got htmlContent %@
Note with properties %@ disappeared before I got its content
Couldn't get the MFWebMessageDocument from message body
messageBody htmlcontent is %ld characters
Threw an exception in daemon account while syncing folder with id %@.  Exception %@
Note %@ added to DAAccount %p
IMAP Daemon account %@ had an invocation finish. self.outstandingInvocationCount is decremented to %d
IMAP Daemon account %@ invoking fullyShutdownCallback
IMAP Daemon account should shut down now, _outstandingInvocationCount is %d
IMAP Daemon account %@ invoking shutdown callback
IMAP Daemon account %@ saving shutdown callback
Unknown change type %@ from change object %@
Looking at a change to note with integer id %@, but that note doesn't exist in the notes db.  Ignoring this change
Skipping add of marked-deleted note %@
IMAPNotesAgent deallocing - Tearing down PCConnectionManager and stopping ImapNotes agent
Received push notification for name %@
Want the following mailbox uids registered for push: %@
unregistering notification for push: %@
registering notification for push: %@
Got Folder List from my account, going to sync my folders
Got an auth error (%d) for IMAPNotes. Attempting to renew credentials.
Failed to renew credentials for IMAPNotes. Result = %d
Renew error domain = %{public}@, code = %d, error = %@
Successfully renewed credentials for IMAPNotes.
Yikes: %s %ld %@
IMAP Notes account refreshing folder list
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account doesn't have any notes folders, grabbing them.
Asked to sync folder with id %@, but I only know of these folders %@
IMAP agent %@ finished sync, decremented _outstandingInvocationCount to %d
Finished syncing folder %@
Asked to sync folder with id %@, but I have no matching container
Asked to sync, but there are no local or remote changes.  Ignoring that request
Threw an exception while syncing notes folder with id %@.  Exception %@
IMAP agent %@ starting sync, incremented _outstandingInvocationCount to %d
DAIMAPNotesAgent: locks granted for dataclasses %lx
lock for %@ aborted
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Couldn't find folder corresponding to notification name "%@". Going to sync all folders
_lastFolderSetRegisteredForPush %@ _daFoldersByPushNotificationName %@
%s invoked: mgr %@, event %d
Told to poll, but we're in manual PC mode.
%s syncing all folders, and scheduling another poll action, PC reason was %d
%s not syncing, as I'm in on-power mode, behaving like manual mode
%s pcManager callback out to lunch, reason is: %d
IMAP Agent %@ seeing if it should shut down.  Account has shut down = %d, outstanding invocation count = %d
IMAP Agent %@ invoking fully shutdown callback
The IMAPNotes agent was told to stop monitoring.
IMAP agent %@, IMAP Daemon account has completed shutdown. The accountHasShutDown is set to YES.
The following message doesn't have a mime body: %@
I don't know how to archive this attachment.  It will be lost on modify.  Attachment %@, manager %@
Couldn't persist data for attachment: %@
Couldn't get attachment data from url %@. %@
Here's the attachment: %@
Note is too big at %lu bytes.
Asked to create an outgoing message from a bookkeeping entry.  Who's the joker trying to introduce data loss? Note %@
Couldn't find a url on store %@
Couldn't get a MailboxUID from account %@ with url %@
%@ creating noteContext on thread %p
IMAPNotesLibrary
DAIMAPNotesFolderListConsumerQueueWrapper
DAIMAPNotesDaemonAccount
DADataclassLockWatcher
NSObject
DAIMAPNotesAgent
DAIMAPNotesFolderListConsumer
DANotesUpdateConsumer
PCConnectionManagerDelegate
DAIMAPNotesFolder
IMAPNotesOutgoingMessage
DAIMAPNotesUtils
MFLogClass
DAIMAPNotesFolderSyncRequest
T@?,C,N,V_fullyShutDownCallback
DAExtendedDescription
_isShuttingDown
T#,R
_localIntegerId
T@"DAIMAPNotesDaemonAccount",W,N,V_notesAccount
actions
T@"IMAPAccount",W,N,V_account
bundleForClass:
T@"MFMailboxUid",&,N,V_mailboxUid
compactMailbox:
T@"NSMutableArray",&,N,V_notesNeedingBodyDownload
content
T@"NSMutableDictionary",&,N,V_daFoldersByFolderId
dealloc
T@"NSMutableSet",&,N,V_currentlySyncingFolderIds
headers
T@"NSSet",&,N,V_lastFolderSetRegisteredForPush
initWithFormat:
T@"NoteContext",&,N,V_noteContext
isProxy
T@"PCConnectionManager",&,N,V_pcManager
newlyAddedStore
TB,N,V_isShuttingDown
TQ,R
setAccountType:
Ti,N,V_outstandingInvocationCount
setDataclassesConsideredActive:
_account
setMessageBody:
_appendSyncRequest:
setServerIntId:
_attachmentManager
startMonitoring
_consumer
successfullyRetrievedFolderList
_consumerQueueWrapperSuccessfullyRetrievedFolderList:
_copyDAFolderFromMailboxUid:isDefault:
.cxx_destruct
_callShutdownBlockIfAppropriate
DAManagedDefaultForKey:
_lastFolderSetRegisteredForPush
T@"<DAIMAPNotesFolderListConsumer>",R,N,V_consumer
account
T@"IMAPAccount",&,N,V_imapMailAccount
attachmentDataFileURLWithError:
T@"MFAttachmentLibraryManager",R,N,V_attachmentManager
changes
T@"NSLock",&,N,V_folderItemSyncRequestLock
containsObject:
T@"NSMutableArray",&,N,V_outstandingFolderRequests
daFoldersByPushNotificationName
T@"NSMutableDictionary",&,N,V_daFoldersByPushNotificationName
deviceWillSleep
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
imapMailAccount
T@"NSString",R,C
initWithTarget:selector:object:
T@"NoteContext",R,N
library
TB,N,V_accountHasShutDown
release
TB,N,V_isSpinning
Ti,N,V_localIntegerId
setAttachments:
URLString
setHandlerForOfflineCacheFlush:
_accountHasShutDown
setNoteContext:
_appendSyncRequestsForFolders:remoteChanges:
sharedDBWatcher
_clearChangeHistoriesInContext:changeSet:
stringByAppendingPathComponent:
_consumerQueueWrapper:failedToRetrieveFolderListWithStatus:error:
systemWillSleep
_copyDAActionsFromNoteChanges:inStore:mutableNotesToDeleteAfterSync:
_copyMessageDetailsForNote:inLibrary:
_copyNotesStoreFromDAFolder:withNoteContext:
_currentlySyncingFolderIds
_daFoldersByFolderId
_daFoldersByPushNotificationName
_finishSyncResultOnMainThreadForFolderWithDictionary:
_fireWaitingFolderItemSyncRequests
_folderItemSyncRequestLock
_fullyShutDownCallback
_handlePushNotificationWithName:
_imapMailAccount
_isSpinning
_mailboxUid
_mimeVersion
_noteContext
_noteInvocationFinished
_noteInvocationFinishedOnMainThread
_noteObjectFromMessage:withTextContentData:inStore:attachmentManager:andContext:
_notesAccount
_notesNeedingBodyDownload
_notifyContentSyncComplete
_notifyContentSyncFailed
_notifyFolderSyncComplete
_notifyFolderSyncFailed
_outstandingFolderRequests
_outstandingInvocationCount
_pcManager
_queue
_reallySyncNotesFolderListWithConsumerQueueWrapper:
_reallySyncRequest:
_runInterimWorkerThreadWithStartupLock:
_serverUpdatedNoteFolder:
_setLastFolderSetRegisteredForPush:
_setMailHacks
_setSpinning:
_setUpNotesNotifications
_syncAllNotesFoldersWithRemoteChanges:
_syncInLockRequest:
_syncNotesFolderListInLockWithConsumer:queue:
_syncRequest:
_tearDownNotesNotifications
_validateAndSyncWithRemoteChanges:
accountDescription
accountForAccountId:
accountHasShutDown
accountID
accountIdentifier
accountType
accountTypeIdentifier
accountWithUniqueId:
addInvocation:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
addNoteNeedingBodyDownload:
addObject:
addObjectsFromArray:
addObserver:selector:name:
allIMAPServersSupportNotesSearch
allMailboxUids
allNotesInCollection:
allNotesWithoutBodiesInCollection:
allObjects
allValues
appendMessages:unsuccessfulOnes:
array
arrayWithObject:
arrayWithObjects:count:
attachmentForData:mimeType:fileName:contentID:context:
attachmentForURL:error:
attachmentManager
attachmentURLs
attachments
author
autorelease
backingAccountInfo
boolValue
bytes
changeType
changedItem
childAccounts
class
code
compactMessages:permanently:
compare:
componentsSeparatedByString:
conformsToProtocol:
connectionManager:handleEvent:
connectionManager:handleEvent:context:
consumer
contentID
copy
count
countByEnumeratingWithState:objects:count:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithString:headers:
creationDate
currentHandler
currentMonitor
currentRunLoop
currentStyle
currentThread
currentlySyncingFolderIds
daFoldersByFolderId
da_newGUID
dataWithContentsOfURL:options:error:
databaseIsCorrupt:
date
dateWithCalendarFormat:timeZone:
debugDescription
defaultNotesFolder
deleteChanges:
deleteMessages:moveToTrash:
deleteNoteRegardlessOfConstraints:
deleteStore:
deletedCountForMailbox:
depthFirstEnumerator
description
deviceDidWake
dictionaryWithObjects:forKeys:count:
displayName
distantFuture
domain
drainWorkerThreadAndInvokeBlock:
dropAssertionsAndRenewCredentialsInQueue:withHandler:
enabledForDADataclass:
error
errorWithDomain:code:userInfo:
externalIdentifier
failedToRetrieveFolderListWithStatus:andError:
fetchDataSynchronously:
fetchMobileSynchronously:
fileName
filename
filenameWithBasename:
firstEmailAddress
firstHeaderForKey:
firstSenderAddress
flags
flushAllInvocationQueues
flushLog
folder
folderID
folderItemSyncRequestLock
folderName
fullUserName
fullyShutDownCallback
getCFRunLoop
getDetailsForAllMessagesFromMailbox:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
getMailboxListWithConnection:
guid
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hasPrefix:
hasRemoteChanges
hasValidServerIntId
hash
headersFromLocalNoteObject:imapAccount:
htmlContent
htmlData
identifier
inferredMimeType
init
initWithAccount:
initWithBackingAccountInfo:
initWithBytes:length:encoding:
initWithBytesNoCopy:length:freeWhenDone:
initWithCapacity:
initWithCondition:
initWithConnectionClass:delegate:delegateQueue:serviceIdentifier:
initWithConsumer:queue:
initWithFolder:hasRemoteChanges:isInitialUberSync:
initWithItemChangeType:changedItem:serverId:
initWithLibraryID:
initWithPath:
initWithPrimaryLibrary:
insertObject:atIndex:
intValue
integerId
isAppleInternalInstall
isBookkeepingEntry
isDefault
isEqual:
isEqualToString:
isKindOfClass:
isMarkedForDeletion
isMemberOfClass:
isMessageContentsLocallyAvailable:
isMonitoring
isOffline
isPlainText
isShuttingDown
isSpinning
itemChangeType
lastFolderSetRegisteredForPush
length
libraryID
localIntegerId
localNotesAccountInContext:
lock
lockWhenCondition:
logBytes:length:
logClasses
logConnection:type:data:
longLongValue
mailboxUid
mailboxUidForMessage:
mailboxUidForRelativePath:create:
mailboxUidForURL:
maximumRemoteIDForMailbox:
maximumServerIntId
messageAttachmentsFromNoteAttachmentObjects:attachmentManager:
messageBody
messageData
messageFlags
messageFromLocalNoteObject:inMailboxUid:inAccount:
messageIsSyncableNote:
messageSize
messageStore
messageWithLibraryID:options:inMailbox:
messageWithMessageID:options:inMailbox:
messageWithRemoteID:inRemoteMailbox:
messagesForMailbox:olderThanNumberOfDays:
messagesWithMessageIDHeader:
messagesWithSummariesForMailbox:range:
mf_copyDateInCommonFormatsWithString:
mf_formattedAddressWithName:email:useQuotes:
mf_invocationWithSelector:target:object:
mimeType
minimumRemoteIDForMailbox:
minimumSequenceNumberForServerIntIds:
modificationDate
mutableCopy
name
newlyAddedAccount
newlyAddedAttachment
newlyAddedNoteWithGUID:
nonDeletedCountForMailbox:
noteAttachmentObjectsFromAttachmentsOfMessage:attachmentManager:noteContext:
noteContext
noteIntegerIds
notesAccount
notesFolderWithId:failedToSyncWithStatus:error:
notesFolders
notesFoldersByFolderId
notesForIntegerIds:
notesForServerIntIds:
notesForServerIntIdsInRange:ascending:limit:
notesNeedingBodyDownload
notificationNamesForPrefix:mailboxUids:
numberWithInt:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
oldestMessageInMailbox:
outgoingMessageFromLocalNoteObject:imapAccount:attachmentManager:
outstandingFolderRequests
outstandingInvocationCount
parentAccount
pathForResource:ofType:
pathToConstraintsPlist
pcManager
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSelectorOnMainThread:withObject:waitUntilDone:
persistAttachmentData:error:
port
preferredCharacterSet
publicDescription
queue
refreshFolderListRequireChangedFolders:isUserRequested:
registerConcernedNoteParty:withChangedBlock:
registerPushNotificationPrefix:forMailboxUids:
registerWaiter:forDataclassLocks:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
remoteID
removeAllMessagesFromMailbox:andNotify:
removeAllObjects
removeAttachmentForURL:
removeConcernedNoteParty:
removeObject:
removeObserver:name:
requestAgentStopMonitoringWithCompletionBlock:
respondsToSelector:
resumeManagerWithAction:
retain
retainCount
rootMailboxUid
save:
scheduleIdentifier
scheduleInRunLoop:forMode:
self
sendMessagesMatchingCriterion:to:options:range:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
serverId
serverIntId
setAccount:
setAccountHasShutDown:
setAccountIdentifier:
setAdditionalFetchHeaders:
setAdditionalSynchronizationSearchArguments:
setAddressListForSender:
setAuthor:
setClass:forClassName:
setContent:
setContentID:
setCreationDate:
setCurrentlySyncingFolderIds:
setDaFoldersByFolderId:
setDaFoldersByPushNotificationName:
setDefaultStore:
setDelegate:
setExternalIdentifier:
setFilename:
setFlags:
setFlags:forMessage:
setFlagsForMessages:mask:
setFlagsFromDictionary:forMessages:
setFolderID:
setFolderItemSyncRequestLock:
setFolderName:
setFullyShutDownCallback:
setGlobalPathForAccounts:
setHandlerForTemporaryUidToRemoteIDMapping:
setHasRemoteChanges:
setHasTemporaryUid:
setHeader:forKey:
setImapMailAccount:
setIsBookkeepingEntry:
setIsDefault:
setIsMonitoring:
setIsShuttingDown:
setIsSpinning:
setIsWaitingForPassword:
setLastFolderSetRegisteredForPush:
setLibrary:
setLocalIntegerId:
setLogAllSocketActivity:
setLogClasses:
setMailboxUid:
setMessageClassToInstantiate:
setMessageInfo:to:cc:bcc:sender:dateReceivedTimeIntervalSince1970:dateSentTimeIntervalSince1970:messageIDHash:conversationID:summary:
setMessageStore:
setMimeType:
setModificationDate:
setName:
setNotesAccount:
setNotesNeedingBodyDownload:
setObject:forKey:
setObject:forKeyedSubscript:
setOnlyAllowedStyle:
setOutstandingFolderRequests:
setOutstandingInvocationCount:
setPathToConstraintsPlist:
setPcManager:
setRemoteID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
setSequenceNumber:
setShouldFlattenCacheOperations:
setSourceApplicationBundleIdentifier:
setStore:
setThreadRecycleTimeout:
setTitle:
setUpMailLogging
setWithArray:
setWithObject:
sharedGateKeeper
sharedInvocationQueue
shouldCreateAccountForBackingAccountInfo:
shouldDataAccessCreateAccountForACAccount:
shouldFailAllTasks
shutDownAndCallCallback:
sortUsingComparator:
sortedArrayUsingFunction:context:
start
startManager
stopManager
store
storeForExternalId:
storeForMailboxUid:
stores
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
stringWithUTF8String:
superclass
syncFolderIDs:forDataclasses:isUserRequested:
syncNotesFolderListWithConsumer:queue:
syncResultForNotesFolder:noteContext:newTag:previousTag:actions:results:changeSet:notesToDeleteAfterSync:isInitialSync:moreAvailable:moreLocalChangesAvailable:
syncableDataclasses
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemDidWake
systemTimeZone
timeIntervalSince1970
timeIntervalSinceReferenceDate
title
totalCountForMailbox:
unlock
unlockWithCondition:
unreadCountForMailbox:
unregisterWaiterForDataclassLocks:
waiterID
zone
@32@0:8I16I20@24
I24@0:8@16
@24@0:8@16
@40@0:8{_NSRange=QQ}16@32
@56@0:8Q16Q24Q32^{_NSRange=QQ}40@48
v24@0:8@16
v28@0:8@16B24
@92@0:8@16@24B32@36@44Q52Q60@68B76B80@84
@32@0:8@16@24
B24@0:8@16
v32@0:8Q16@24
v40@0:8@16@24@32
@36@0:8@16I24@28
v52@0:8@16@24I32{_NSRange=QQ}36
@28@0:8@16i24
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16Q24
@16@0:8
v16@0:8
@"IMAPAccount"
@"DAIMAPNotesDaemonAccount"
@"NoteContext"
@"<DAIMAPNotesFolderListConsumer>"
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8@16B24
v20@0:8B16
v40@0:8@16q24@32
v32@0:8@16@24
v84@0:8@16@24@32@40@48@56B64B68B72@76
v24@0:8@?16
i16@0:8
v20@0:8i16
@?16@0:8
@"MFAttachmentLibraryManager"
@"NSMutableDictionary"
@"NSMutableArray"
v32@0:8q16@24
v32@0:8q16@"NSError"24
v92@0:8@16@24@32@40@48@56@64@72B80B84B88
v92@0:8@"NSString"16@"NoteContext"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSSet"64@"NSSet"72B80B84B88
v40@0:8@"NSString"16q24@"NSError"32
v28@0:8@16i24
v36@0:8@16i24@28
v28@0:8@"PCConnectionManager"16i24
v36@0:8@"PCConnectionManager"16i24@"NSDictionary"28
@40@0:8@16@24@32
v24@0:8B16B20
v36@0:8@16q24B32
B32@0:8@16@24
@"NSMutableSet"
@"NSLock"
@"PCConnectionManager"
@"NSSet"
@"MFMailboxUid"
@56@0:8@16@24@32@40@48
v28@0:8r*16i24
v40@0:8@"MFConnection"16q24@"NSData"32
