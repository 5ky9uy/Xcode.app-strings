?ffffff
333333
?ffffff
?UUUUUU
?333333
sbuiBackgroundViewLuminance
v16@?0@"UIView"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
backgroundStyle
Tq,N
transitioningBackgroundStyle
TB,R,N,GisTransitioningBackgroundStyle
groupName
T@"NSString",&,N
Tq,N,V_style
TB,R,N,GisTransitioningBackgroundStyle,V_transitioning
None
Boot
TransientOverlay
Logout
Plugin
Blocked
Keyboard
LostMode
IdleTimer
Restoring
Activation
LiftToWake
LockButton
RemoteLock
SOSDismiss
PowerDownDismiss
SmartCover
Notification
Authentication
NotificationCenter
Mesa
Siri
Touch
HomeButton
OtherButton
VolumeButton
ACPowerChange
ExternalRequest
ApplicationRequest
SpringBoardRequest
SystemServiceRequest
ChargingAccessoryChange
CoverSheet
ControlCenter
CameraButton
Dismiss
Authenticate
Authenticate and Dismiss
(inherit)
Default
DarkenSourceOver
BlurOnly
Light
LightWithTint
MediumDark
Dark
Passcode
v8@?0
hideOtherWindowsDuringAppearance
TB,N,V_hideOtherWindowsDuringAppearance
owner
T@"NSMutableDictionary",R,W,N,V_owner
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBSceneHandleBlockObserver.m
<Unknown File>
Cannot deallocate a SBSceneHandleBlockObserver without invalidating first.
T@"NSURL",R,D,N
element
hidden
text
Tq,N,V_element
TB,N,GisHidden,V_hidden
T@"NSString",C,N,V_text
CustomContent
PlaceholderContent
LiveSnapshot
LiveContent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBSceneView.m
Invalid parameter not satisfying: %@
sceneHandle
SBApplicationSceneView
%@:%p-SBApplicationSceneView:%p-%llu
%@-%p-%llu
sceneId
requestedDisplayMode
effectiveDisplayMode
liveContentDisableAssertions
this object has already been invalidated
reason
SBSceneView.DisableLiveContent
v16@?0@"BSSimpleAssertion"8
zPosition
bogus reference size
bogus interface orientation
v16@?0@"UIMutableScenePresentationContext"8
Expected views to match (toView: %@, toMode: %@, toDisplayModeView: %@).
v12@?0B8
presenter
T@"<UIScenePresenter>",R,N,V_presenter
T@"SBSceneHandle",R,N,V_sceneHandle
referenceSize
T{CGSize=dd},R,N,V_referenceSize
orientation
Tq,R,N,V_orientation
placeholderContentProvider
T@"<SBScenePlaceholderContentViewProvider>",&,N,V_placeholderContentProvider
placeholderContentContext
T@"<SBScenePlaceholderContentContext>",&,N,V_placeholderContentContext
placeholderContentEnabled
TB,N,V_placeholderContentEnabled
displayMode
Tq,R,N,V_requestedDisplayMode
Tq,R,N,V_effectiveDisplayMode
delegate
T@"<SBSceneViewDelegate>",W,N,V_delegate
backgroundView
T@"UIView",&,N,V_backgroundView
customContentView
T@"UIView",&,N,V_customContentView
SBAlertItemDidPrepareNewAlertControllerNotification
Unknown
Appearing
Appeared
Disappearing
Disappeared
Lock
Pended
User Dismissed
Button Pressed
Auto Dismiss
Generic
Unlock
SBAlertItemsController
alertController
presented
_presentationState
TQ,N,S_setPresentationState:,V_presentationState
TB,N,G_isPresented,S_setPresented:,V_presented
_headerImage
T@"UIImage",&,N,S_setHeaderImage:,V_headerImage
_attachmentImage
T@"UIImage",&,N,S_setAttachmentImage:,V_attachmentImage
_ignoresQuietMode
TB,N,S_setIgnoresQuietMode:,V_ignoresQuietMode
iconImage
T@"UIImage",&,N,SsetIconImage:,V_iconImage
iconImagePath
T@"NSString",&,N,G_iconImagePath,V_iconImagePath
ignoreIfAlreadyDisplaying
TB,N,V_ignoreIfAlreadyDisplaying
allowInSetup
TB,N,V_allowInSetup
pendInSetupIfNotAllowed
TB,N,V_pendInSetupIfNotAllowed
pendWhileKeyBagLocked
TB,N,V_pendWhileKeyBagLocked
allowedBundleIDs
T@"NSArray",&,N,V_allowedBundleIDs
suppressForKeynote
TB,N,V_suppressForKeynote
allowInCar
TB,N,V_allowInCar
allowMessageInCar
TB,N,V_allowMessageInCar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBAlertItem.m
image
T@"UIImage",R,N
SBSApplicationShortcutItem.BadgeView
badgeView
T@"UIView",&,N
observer
T@"<SBSceneHandleObserver>",R,W,N,V_observer
didCreateScene
TB,N,V_didCreateScene
didDestroyScene
TB,N,V_didDestroyScene
didUpdateContentState
TB,N,V_didUpdateContentState
didUpdateSettingsWithDiff
TB,N,V_didUpdateSettingsWithDiff
didUpdateClientSettingsWithDiff
TB,N,V_didUpdateClientSettingsWithDiff
didUpdatePairingStatusForExternalSceneIdentifiers
TB,N,V_didUpdatePairingStatusForExternalSceneIdentifiers
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBSceneHandle.m
init is unavailable for SBSceneHandle.
Scene or definition must be provided.
Given scene and monitor'd scene do not match.
Required scene wasn't found from scene handle: %@
v24@?0@"<SBSceneHandleObserver>"8@"_SBSceneHandleObserverBehavior"16
Cannot have scene creation/destruction invoked when using a scene monitor for lifecycle events.
Scene destroyed did not match the scene being tracked.
sceneID
scenePointer
A scene is required for the content host manager state to change.
sceneMonitor
T@"FBSceneMonitor",&,N,G_sceneMonitor,S_setSceneMonitor:,V_sceneMonitor
definition
T@"FBSSceneDefinition",R,N,G_definition,V_definition
displayIdentity
T@"FBSDisplayIdentity",&,N,S_setDisplayIdentity:,V_displayIdentity
manuallyControlsLifecycle
TB,N,G_manuallyControlsLifecycle,S_setManuallyControlsLifecycle:,V_manuallyControlsLifecycle
sceneIdentifier
T@"NSString",R,C,N
scene
T@"FBScene",R,N
sceneIfExists
T@"FBScene",R,N,V_scene
contentState
Tq,R,N
contentReady
TB,R,N,GisContentReady
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUISearchUtilities.m
Do not instantiate this class
idealSearchPlatterWidth
Td,R,N
identifier
layers
settings
clientSettings
T@"FBSSceneSettings",C,V_settings
T@"FBSSceneClientSettings",C,V_clientSettings
T@"NSString",R,C,N,V_identifier
valid
TB,R,N,GisValid,V_valid
T@"NSSet",R,C,N,V_layers
title
alertItem
T@"SBAlertItem",W,N,V_alertItem
alertControllerDelegate
T@"<_SBAlertControllerDelegate>",W,N,V_alertControllerDelegate
StatusBar
TimeAndDate
Subtitle
v28@?0Q8i16^B20
ScreenOff
VolumeUp
VolumeDown
HeadsetButton
HeadsetButtonHeld
Legible
Undefined
Overlay
Normal
Stationary
Disabled
Temporary
Exclusive
Camera
TouchID
MediaControls
TodayCenter
Screenshot
%s is not a valid initializer. You must call -[%@ initWithActions:gestureRecognizer:].
-[SBUIActionPlatterViewController initWithNibName:bundle:]
%@ does not support unarchiving from a nib.
actions
T@"NSArray",R,C,N,V_actions
systemInteractionStartIndex
TQ,N,V_systemInteractionStartIndex
gestureRecognizer
T@"UILongPressGestureRecognizer",R,W,N,V_gestureRecognizer
reversesActions
TB,N,V_reversesActions
imagePosition
Tq,N,V_imagePosition
T@"<SBUIActionPlatterViewControllerDelegate>",W,N,V_delegate
+[SBUIKeyboardHomeAffordanceController sharedInstance]_block_invoke
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUIKeyboardHomeAffordanceAssertion.m
Attempted to make a home affordance keyboard assertion on a device that shouldn't.
assertions
T@"NSHashTable",&,N,V_assertions
topMostAssertion
T@"SBUIKeyboardHomeAffordanceAssertion",W,N,V_topMostAssertion
pillView
T@"MTLumaDodgePillView",&,N,V_pillView
sourceWindow
T@"UIWindow",W,N,V_sourceWindow
additionalEdgeMargin
Td,N,V_additionalEdgeMargin
SBUIRingerSwitchBehaviorDidChangeNotification
ringer-switch
SBDeviceLockStateChangedNotification
SBLockButtonPressedNotification
SBMenuButtonPressedNotification
SBVolumeChangedNotification
SBApplicationNetworkFlagsChangedNotification
SBHeadsetButtonUpNotification
SBActiveCallStateChangedNotification
SBRingerChangedNotification
SBIncomingCallPendingNotification
SBCallCountChangedNotification
SBTelephonyDaemonRestartNotification
SBUserEventOccurredNotification
SBHomescreenIconsDidAppearNotification
SBHomescreenIconsWillAppearNotification
SBWiFiDeviceAttachedNotification
SBProximityDidChangeNotification
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
SBFeaturesShouldBeLockedForRemoteLockNotification
SBBannerWillAnimateRevealNotification
SBBannerWillAnimateDismissalNotification
SBOrientationLockChangedNotification
SBAirplaneModeControllerWillProcessAirplaneModeChangeNotification
SBAirplaneModeControllerAirplaneModeDidChangeNotification
SBAirplaneModeControllerDidProcessAirplaneModeChangeNotification
SBTelephonyManagerWillProcessAirplaneModeChangeNotification
SBTelephonyManagerAirplaneModeDidChangeNotification
SBTelephonyManagerDidProcessAirplaneModeChangeNotification
SBNetworkTetheringStateChangedNotification
SBWifiManagerPowerStateDidChangeNotification
SBWifiManagerCurrentDeviceDidChangeNotification
SBWifiManagerDevicePresenceDidChangeNotification
SBBacklightAboutToUndimNotification
SBBacklightResetLockScreenIdleTimerNotification
SBBacklightLevelChangedNotification
SBBacklightFadeFinishedNotification
SBBacklightWillTurnOnWhileUILockedNotification
SBBacklightChangeSourceKey
SBBacklightOldFactorKey
SBBacklightNewFactorKey
kSBNotificationKeyState
kSBNotificationKeyDisplayIdentifier
kSBNotificationKeyPreferenceChangedKey
kSBNotificationKeyCurrentVolume
kSBNotificationKeyHeadsetButtonLongPress
kSBNotificationKeyBundleIdentifier
kSBNotificationKeyLocalNotification
kSBNotificationKeyFrame
kSBNotificationKeyAnimationDuration
screen
T@"UIScreen",&,N,V_screen
activationEvent
Ti,N,V_activationEvent
%s is not a valid initializer. You must call -[%@ initWithTitle:subtitle:image:badgeView:handler:].
-[SBUIAction init]
T@"NSString",R,C,N,V_title
subtitle
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
systemImageName
T@"NSString",R,N,V_systemImageName
T@"UIView",R,N,V_badgeView
handler
T@?,R,C,N,V_handler
SBUILaunchOptionKeyPNGLess
SBUILaunchOptionKeyAllowUnlock
available
overheated
flashlightLevel
com.apple.ControlCenter.FlashlightModule.AVFlashlight
com.apple.ControlCenter
Flashlight
FlashlightLevel
TB,R,N,GisAvailable,V_available
TB,R,N,GisOverheated,V_overheated
level
TQ,N
backgroundColorHint
T@"UIColor",&,N,V_backgroundColorHint
vibrancyDisabled
TB,N,V_vibrancyDisabled
v16@?0@"BSActionResponse"8
completion
T@?,R,C,N,V_completion
label
T@"NSString",C,N,V_label
authenticationPolicy
Tq,N,V_authenticationPolicy
H:|[label]|
V:|[label]|
@16@?0@"NSArray"8
H:|[emojiLabel]|
emojiLabel
V:|[emojiLabel]|
T@"NSString",C,N
font
T@"UIFont",&,N
textColor
T@"UIColor",&,N
textAlignment
lineBreakMode
numberOfLines
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUIWorkspace.m
queue
this can't be used outside the system app
%@:%@
initialClientSettings
can't register multiple scenes with the same identifier: %@
v16@?0@?<v@?>8
clientQueue
scenes
T@"NSSet",R,C,N
_UIKeyboardArbiter_ForSpringBoard_WorkspaceIdentifier
/System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
### Failed to Soft Linked: /System/Library/PrivateFrameworks/KeyboardArbiter.framework/KeyboardArbiter
hasDrawn
input
Td,N
output
tracking
TB,N,V_tracking
container
contentOrientation
Tq,N,V_contentOrientation
containerOrientation
Tq,N,V_containerOrientation
contentViews
T@"NSArray",R,N
content
; state: %@>
vibrantSettings
T@"_SBFVibrantSettings",&,N
animationDuration
state
Tq,N,V_state
color
T@"UIColor",&,N,V_color
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
[Invalid]
SBUIChevronViewStateUp
SBUIChevronViewStateNone
SBUIChevronViewStateDown
com.apple.SpringBoardUIFramework
com.apple.springboard-ui.client
XCTestProbe
isTesting
SearchUI
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SpringBoardUI.m
This process should not be linking or loading SpringBoardUI.framework (<rdar://problem/26143166>)
suggestedContentInsets
legibilitySettings
T{UIEdgeInsets=dddd},N,VsuggestedContentInsets
T@"_UILegibilitySettings",&,N,VlegibilitySettings
T{UIEdgeInsets=dddd},D,N
T@"_UILegibilitySettings",&,D,N
%s is not a valid initializer. You must call -[%@ initWithAction:].
-[SBUIActionView initWithFrame:]
titleLabel
subtitleLabel
@"NSLayoutConstraint"20@?0@"NSLayoutConstraint"8f16
H:|-(leadingContentOffset)-[imageView]-(leadingContentOffset)-[textContainer]-(trailingContentOffset)-|
trailingContentOffset
leadingContentOffset
imageView
textContainer
action
T@"SBUIAction",R,N,V_action
highlighted
TB,N,GisHighlighted,V_highlighted
leadingContentMargin
trailingContentMargin
actionBlock
T@?,C,N,V_actionBlock
remoteViewControllerClassName
T@"NSString",C,N,V_remoteViewControllerClassName
remoteServiceBundleIdentifier
T@"NSString",C,N,V_remoteServiceBundleIdentifier
behavior
TQ,N,V_behavior
T@"NSString",C,N,V_identifier
parameters
T@"NSDictionary",C,N,V_parameters
activationMode
TQ,R,N,V_activationMode
bundleID
transitionStyle
T@"NSString",C,N,V_bundleID
T@"NSURL",&,N,SsetURL:,V_url
TQ,N,V_transitionStyle
SBSApplicationShortcutSystemIcon_UnreadDot
ComposeNew
Play
Pause
Location
Search
Share
Prohibit
Contact
Home
MarkLocation
Favorite
Love
Cloud
Invitation
Confirmation
Mail
Message
Date
Time
CapturePhoto
CaptureVideo
Task
TaskCompleted
Alarm
Bookmark
Shuffle
Audio
Update
ShowAllWindows
UnreadDot
SBSApplicationShortcutSystemIcon_%@
sbui_image
CSModalView
SBUIPluginVisibilityDidChangeNotification
SBUIPluginActivationSettingsDidChangeNotification
__bundleId
__supportsCarFullScreen
WiredMic
BTHeadset
MotionGesture
Voice
Continuity
visible
TB,N,GisVisible,V_isVisible
host
T@"<SBUIPluginControllerHost>",W,N,V_host
SBSoundController
SystemSound
   hasCompletionBlock: %@
   SoundID: %lu
   Path: %@
 Behavior: %lu
   Vibration Pattern: %@
ToneAlert
   hasCompletionBlock: %@
    Tone Alert: %@
Feedback
   eventType: %ld
Ringtone (deprecated)
AVItem (deprecated)
Song (deprecated)
{  SoundType: %@%@
soundType
Tq,N,V_soundType
systemSoundID
TI,N,V_systemSoundID
_resolvedSystemSoundID
TI,N,S_setResolvedSoundID:,V_resolvedSystemSoundID
soundBehavior
TQ,N,V_soundBehavior
vibrationPattern
T@"NSDictionary",&,N,V_vibrationPattern
toneAlert
T@"TLAlert",&,N,V_toneAlert
songPath
T@"NSString",C,N,V_songPath
eventType
Tq,N,V_eventType
height
Td,N,V_height
presentationStyle
notificationBehavior
presentationRegion
restrictions
elementOverrides
TB,R,N,GisHidden
restrictedCapabilities
TQ,R,N
T@"NSArray",R,C,N
T@"SBLockScreenLegibilitySettings",R,&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
TB,N,GisHidden
T@"NSArray",C,N
T@"SBLockScreenLegibilitySettings",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
BANNER_OKAY
CarDisplay
dark
light
selected
unselected
%@.chevron.circle.fill.%@.%@
v16@?0@"UIGraphicsImageRendererContext"8
@"UIImage"16@?0^Q8
chevron.right
textLabel
T@"UILabel",&,N,V_textLabel
unselectedTextColor
T@"UIColor",&,N,V_unselectedTextColor
selectedTextColor
T@"UIColor",&,N,V_selectedTextColor
unselectedImage
T@"UIImage",&,N,V_unselectedImage
selectedImage
T@"UIImage",&,N,V_selectedImage
highlightColor
T@"UIColor",&,N,V_highlightColor
animationFactory
T@"BSUIAnimationFactory",&,N,V_animationFactory
allowsGroupOpacityDuringCrossfade
TB,N,V_allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
TB,N,V_adaptsAnimationFactoryTimingFunction
v16@?0q8
propertyAnimator
T@"UIViewPropertyAnimator",&,N,G_propertyAnimator,S_setPropertyAnimator:,V_propertyAnimator
SBLockScreenTimerDial
@"UIImage"8@?0
SBLockScreenTimerDial.SBLockScreenTimerDial.%x
%@%@
T@"_UILegibilitySettings",&,N
strength
Td,N,V_strength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUIBannerTargetManager.m
must provide a valid target implementation
<%@:%p identifier=%p idiom=%i> -> %@
bannerTargetIdentifier
T^v,R,N
bannerTargetIdiom
T^v,R,N,V_identifier
Tq,R,N,V_idiom
v16@?0@"<SBUIBannerTargetManagerObserver>"8
targets
pressDuration
forceTouchCompleted
TB,R,N,V_forceTouchCompleted
relativeTouchForce
touchForceVelocity
userInfo
T@,&,N,V_userInfo
SBAwayViewPluginActivationReasonKey
SBAwayViewPluginActivatingForRemoteEvent
Plugin %@ did not call transition completion block
pluginAgent
T@"<SBLockScreenPluginAgent>",W,N
pluginPriority
pluginViewController
T@"UIViewController<SBLockScreenPluginViewController>",R,N
pluginAppearance
T@"<SBLockScreenPluginAppearance>",R,N
pluginUnlockAction
T@"SBLockScreenPluginAction",R,&,N
viewCanBeDisplayed
TB,N,V_viewCanBeDisplayed
T@"<SBLockScreenPluginAgent>",W,N,V_agent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUIBannerContext.m
must supply a valid item
must supply a valid target
must supply a valid source
<%@:%p target=%@ source=%@ item=%@>
TB,R,N,GisValid,V_isValid
item
T@"SBUIBannerItem",R,N,V_item
source
T@"<SBUIBannerSource>",R,N,V_source
target
T@"<SBUIBannerTarget>",R,N,V_target
AppIconForceTouch
com.apple.indigo
indigoConfigurationFlagsBitmask
IndigoConfigurationFlags
Tq,R,D,N
name
process
T@"FBProcess<FBSProcess>",&,N,V_process
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
T@"<SBLockScreenPluginLifecycleObserver>",&,N,V_observer
auxiliaryAnimation
T@?,C,N,V_auxiliaryAnimation
v16@?0@"NSArray"8
SBUIBannerContext *SBUIBannerTargetDequeueContextFromSourcesWithCheck(__strong id<SBUIBannerTargetImplementation>, __strong id<NSFastEnumeration>, __strong SBUIBannerDequeueAllowedCheck)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SpringBoardUI_Sim/SpringBoard-3908.14.1/SBUIBannerTarget.m
source inconsistency error: source=%@ peek=%@ dequeue=%@
<%p> Presentation state changed to %{public}@
Attempted to make a home affordance keyboard assertion on a device that shouldn't.
[Flashlight Controller] On: %@
[Flashlight Controller] Off: %@
Error setting flashlight level: %@
Error turning on flashlight power: %@
%{public}@: Client "%{public}@" is not allowed to use this class. All requests will be ignored.
Allowing SpringBoardUI.framework to load because SearchUI.framework is loaded. This will become a hard assert once <rdar://problem/29408996> is fixed.
This process should not be linking or loading SpringBoardUI.framework
SBUIBackgroundView
SBUIBackgroundStyleTransitioning
NSObject
SBUIWallpaperOverlay
SBUIPluginAppearanceContext
_SBSceneHandleObserverToken
SBSceneHandleObserverToken
NSCopying
SBSceneHandleBlockObserver
BSInvalidatable
SBSceneHandleObserver
SBLockScreenPluginCallAction
SBLockScreenElementOverride
SBSceneView
SBScenePlaceholderContentViewProviderDelegate
Isolation
SBAlertItem
BSDescriptionProviding
_SBAlertItemHeaderViewController
SBUIAdditions
_SBSceneHandleObserverBehavior
SBSceneHandle
FBSceneMonitorDelegate
FBSceneObserver
SBUISearchUtilities
SBUIScene
FBSceneClient
_SBAlertController
SBUIActionPlatterViewController
UIGestureRecognizerDelegate
SBUIKeyboardHomeAffordanceController
MTLumaDodgePillBackgroundLuminanceObserver
SBUIKeyboardHomeAffordanceAssertion
SBLockScreenPluginInCallAction
SBUIPluginActivationContext
SBUIAction
SBUIFlashlightController
SBLockScreenLegibilitySettings
SBLockScreenPluginAction
SBUIActionViewLabel
SBUIEmojiAdditions
SBUIWorkspace
FBSceneClientProvider
SBUIViewFloatSpringProperty
UIViewSpringAnimationBehaviorDescribing
SBOrientationTransformWrapperView
_SBOrientationTransformedContentView
SBUIChevronView
_SBFVibrantView
SpringBoardUI
SBLockScreenPluginPresentation
SBMutableLockScreenPluginPresentation
SBUIActionView
SBUIUtilities
SBUIBannerAction
SBLockScreenPluginApplicationAction
SBLockScreenModalViewFactory
SBUIPluginController
SBPluginBundleController
BSPluginBundleController
SBUIBannerItem
SBUISound
SBUIActionKeylineView
SBLockScreenPluginAppearanceContext
SBLockScreenPluginMutableAppearance
SBLockScreenPluginAppearance
NSMutableCopying
SBLockScreenPluginMutableAppearanceContext
SBUILockScreenDisableAssertion
SBUIStarkBannerViewButton
SBUICarPlayMappedImageCache
SBCrossfadeView
SBUICoronaAnimationController
SBUICoronaAnimationControllerAdditions
SBLockScreenTimerDialView
SBUILegibility
SBUIOptionalLegibility
SBUIBannerTargetProxy
SBUIBannerTarget
SBUIBannerTargetBase
SBUIBannerTargetManager
SBUIForceTouchGestureRecognizer
UIInteractionProgressObserver
SBAwayViewPluginController
SBLockScreenPluginViewController
SBLockScreenPluginController
SBUIBannerContext
SBLockScreenPluginEmergencyDialerAction
SBExternalIndigoDefaults
SBLockScreenPluginContext
SBUIAppIconForceTouchController
initWithFrame:
init
whiteColor
setReduceTransparencyBackingColor:
setHidden:
addSubview:
bounds
layer
setCompositingFilter:
initWithFrame:privateStyle:
bundleForClass:
materialViewWithRecipeNamed:inBundle:configuration:initialWeighting:scaleAdjustment:
setAllowsGroupBlending:
setAutoresizingMask:
colorWithWhite:alpha:
setBackgroundColor:
filterWithType:
setBackgroundStyle:
defaultCenter
_reduceTransparencyEnabledStateDidChange:
addObserver:selector:name:object:
layoutSubviews
setFrame:
modifyAllViewsWithChanges:
_setContinuousCornerRadius:
setClipsToBounds:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
beginTransitionToBackgroundStyle:
completeTransitionToBackgroundStyle:
_updateAppearanceForBackgroundStyle:transitionToSettings:
isHidden
transitionIncrementallyToSettings:weighting:
_updateReduceTransparencyTintingWithProgressWeighting:
_updateAppearanceForTransitionFromStyle:toStyle:withProgress:
groupName
setGroupName:
_shouldApplyReducedTransparencyTintForBackgroundStyle:
grayscaleTintLevel
grayscaleTintAlpha
_reducedTransparencyValueForBackgroundStyle:
setAlpha:
transitionToSettings:
_darkenValueForBackgroundStyle:
_darkenWithProgress:
_tintValueForBackgroundStyle:
_tintColorAlphaForBackgroundStyle:
_tintWithProgress:backgroundColorAlpha:
_reduceTransparencyWithProgress:
_updateReduceTransparencyTinting
_luminanceValueForBackgroundStyle:
_luminanceWithProgress:
_lightenSourceOverValueForBackgroundStyle:
_lightenSourceOverWithProgress:
_valueFromStart:toEnd:withFraction:
_backgroundColorForDarkenAlpha:andProgress:
blackColor
colorWithAlphaComponent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
updateBackgroundStyleTransitionProgress:
backgroundStyle
isTransitioningBackgroundStyle
backdropView
.cxx_destruct
_style
_transitionStyle
_transitioning
_progress
_backdropView
_isReducedTransparencyEnabled
_reduceTransparencyView
_reduceTransparencyTintingView
_sourceOverView
_darkenSourceOverView
_tintView
_lightenSourceOverView
_reduceTransparencyBackingColor
_luminanceView
removeAllObjects
numberWithInteger:
objectForKeyedSubscript:
settingsForPrivateStyle:
setGrayscaleTintAlpha:
setGrayscaleTintLevel:
setColorTintAlpha:
setSaturationDeltaFactor:
setBlurRadius:
setObject:forKeyedSubscript:
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_hideOtherWindowsDuringAppearance
copyWithZone:
initWithOwner:
owner
_owner
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dealloc
copy
setObject:forKey:
removeObjectForKey:
allValues
invalidate
sceneHandle:didCreateScene:
sceneHandle:didDestroyScene:
sceneHandle:didUpdateContentState:
sceneHandle:didUpdateSettingsWithDiff:previousSettings:
sceneHandle:didUpdateClientSettingsWithDiff:transitionContext:
sceneHandle:didUpdatePairingStatusForExternalSceneIdentifiers:
observeCreate:
observeDestroy:
observeDidUpdateContentState:
observeDidUpdateSettings:
observeDidUpdateClientSettings:
observeDidUpdatePairingStatusForExternalIdentifiers:
removeObserverForToken:
_createBlocks
_destroyBlocks
_didUpdateContentStateBlocks
_didUpdateSettingsBlocks
_didUpdateClientSettingsBlocks
_didUpdatePairingStatusBlocks
_invalidated
initWithURL:
isValid
isCallAction
_dialRequest
setElement:
overrideForElement:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:
appendString:withName:skipIfEmpty:
descriptionBuilderWithMultilinePrefix:
overrideForHiddenElement:
succinctDescription
element
text
setText:
_hidden
_element
_text
factoryWithDuration:
initWithSceneHandle:referenceSize:orientation:hostRequester:
setOpaque:
setBackgroundView:
sceneViewPresentationPriority:
sceneViewPresentationIdentifier:
initWithFormat:
addObserver:
sceneIfExists
removeObserver:
_invalidateHostPresenter
sceneIdentifier
appendPointer:withName:
displayMode
effectiveDisplayMode
allObjects
appendArraySection:withName:skipIfEmpty:
appendSuper
_transitionFromDisplayMode:showingView:toDisplayMode:showingView:withAnimationFactory:completion:
removeFromSuperview
insertSubview:atIndex:
setDelegate:
_reloadPlaceholderContentIfNecessary
_evaluateEffectiveDisplayModeWithAnimationFactory:completion:
sceneHandle
newSnapshotContext
_configureSceneSnapshotContext:
createSnapshotWithContext:
addObject:
setWithObject:
removeObject:
initWithIdentifier:forReason:invalidationBlock:
colorWithRed:green:blue:alpha:
_clearSnapshotViews
superview
sendSubviewToBack:
_layoutLiveHostView:
isEqualToString:
_shouldAnimatePropertyWithKey:
_hotSwapPlaceholderContentView
_hotSwapLiveSnapshotView
setContainerOrientation:
uiPresentationManager
createPresenterWithIdentifier:priority:
setAppearanceStyle:
modifyPresentationContext:
_enableHostingIfPossible
_shouldObserveSceneHostContentState
_recheckLiveContentDependencies
_configureViewForEffectiveDisplayMode:
_viewForDisplayMode:
_bestDisplayModeLessThanMode:
count
isContentReady
window
isHiddenOrHasHiddenAncestor
_addContentLikeViewToHierarchyForTransitionIfPossible:
_wrappedIfNecessaryViewForCrossfading:
crossfadeViewWithStartView:endView:translucent:
setAnimationFactory:
crossfadeWithCompletion:
animateWithFactory:actions:completion:
_shouldViewBeInHierarchyForTransition:
_configurePlaceholderContentView
_configureLiveSnapshotView
_configureHostView
sceneView:requestsPlaceholderContentViewWithContext:
newSnapshot
snapshotPresentationForSnapshot:
_configureBackgroundColorForLiveSnapshot:
presentationView
activate
setNeedsLayout
_configureSceneLiveHostView:
defaultPresentationContext
backgroundColorWhileHosting
performWithoutAnimation:
defaultDisplayModeAnimationFactory
animationFactoryForImplicitTransitionFromMode:toMode:defaultFactory:
placeholderContentViewProviderContentDidUpdate:
initWithSceneHandle:referenceSize:orientation:
setCustomContentView:
setPlaceholderContentProvider:
setPlaceholderContentContext:
setPlaceholderContentEnabled:
setDisplayMode:animationFactory:completion:
acquireLiveContentDisableAssertionForReason:
sizeThatFits:
_transformForHostView
_frameForHostView
_refresh
_representsTranslucentContent
_updateReferenceSize:andOrientation:
_containerContentWrapperInterfaceOrientationChangedTo:
referenceSize
orientation
customContentView
backgroundView
placeholderContentProvider
placeholderContentContext
placeholderContentEnabled
presenter
delegate
_sceneHandle
_referenceSize
_orientation
_requestedDisplayMode
_effectiveDisplayMode
_presenter
_hostingPriority
_hostingIdentifier
_placeholderContentContext
_customContentView
_placeholderContentView
_liveSnapshotView
_hostView
_crossfadeView
_backgroundView
_liveContentDisableReasons
_placeholderContentEnabled
_placeholderContentProvider
_delegate
sbui_effectiveWindowForIsolation
sharedInstance
_alertItemsController
activateAlertItem:
dismissOnLock
didPlayPresentationSound
sound
playInEvironments:completion:
deactivateForReason:
deactivateAlertItem:reason:
imageWithContentsOfFile:
setIconImage:
presentationStateDidChangeFromState:toState:
_setPresented:
_clearAlertController
setAlertItem:
setPreferredStyle:
_headerImage
initWithImage:
_setHeaderContentViewController:
configure:requirePasscodeForActions:
postNotificationName:object:userInfo:
alertItemDidAppear
alertItemDidDisappear
alertController
contentViewController
view
sb_hasActiveKeyboardOnScreen
deactivate
deactivateForButton
lockLabel
shortLockLabel
performUnlockAction
allowMenuButtonDismissal
allowLockScreenDismissal
shouldShowInLockScreen
shouldShowInEmergencyCall
undimsScreen
unlocksScreen
reappearsAfterLock
reappearsAfterUnlock
playPresentationSound
didFailToActivate
willActivate
didActivate
willRelockForButtonPress:
willDeactivateForReason:
didDeactivateForReason:
setIconImagePath:
forcesModalAlertAppearance
behavesSuperModally
allowInLoginWindow
alertPriority
dismissesOverlaysOnLockScreen
doCleanupAfterDeactivationAnimation
_setPresentationState:
_deactivationCompleted
_alertController
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
_noteVolumeOrLockPressed
_hasActiveKeyboardOnScreen
_didEverActivate
_displayActionButtonOnLockScreen
_publicDescription
dismiss
dismiss:
buttonDismissed
ignoreIfAlreadyDisplaying
setIgnoreIfAlreadyDisplaying:
allowInSetup
setAllowInSetup:
suppressForKeynote
setSuppressForKeynote:
pendInSetupIfNotAllowed
setPendInSetupIfNotAllowed:
pendWhileKeyBagLocked
setPendWhileKeyBagLocked:
allowedBundleIDs
setAllowedBundleIDs:
allowInCar
setAllowInCar:
allowMessageInCar
setAllowMessageInCar:
_ignoresQuietMode
_setIgnoresQuietMode:
iconImage
_iconImagePath
_presentationState
_isPresented
_setHeaderImage:
_attachmentImage
_setAttachmentImage:
_allowedBundleIDs
_iconImage
_didEverDeactivate
_ignoreIfAlreadyDisplaying
_didPlayPresentationSound
_allowInSetup
_pendInSetupIfNotAllowed
_pendWhileKeyBagLocked
_allowInCar
_allowMessageInCar
_presented
_suppressForKeynote
image
size
_expectedSize
setSize:
_topMarginOffset
setPreferredContentSize:
setView:
_bottomMarginOffset
loadView
_imageView
badgeView
setBadgeView:
alloc
initWithObserver:
behaviorFromObserver:
observer
didCreateScene
setDidCreateScene:
didDestroyScene
setDidDestroyScene:
didUpdateContentState
setDidUpdateContentState:
didUpdateSettingsWithDiff
setDidUpdateSettingsWithDiff:
didUpdateClientSettingsWithDiff
setDidUpdateClientSettingsWithDiff:
didUpdatePairingStatusForExternalSceneIdentifiers
setDidUpdatePairingStatusForExternalSceneIdentifiers:
_didCreateScene
_didDestroyScene
_didUpdateContentState
_didUpdateSettingsWithDiff
_didUpdateClientSettingsWithDiff
_didUpdatePairingStatusForExternalSceneIdentifiers
_observer
_initWithDefinition:scene:displayIdentity:
definition
_createMonitor
scene
_setScene:
_commonInit
identity
identifier
contentState
isPairedWithExternalSceneID:
weakObjectsHashTable
mapTableWithKeyOptions:valueOptions:
objectForKey:
_enumerateObserversWithBlock:
initWithSceneID:
_didUpdateSettingsWithDiff:previousSettings:
_didUpdateClientSettingsWithDiff:transitionContext:
_didUpdatePairingStatusForExternalSceneIdentifiers:
_didUpdateContentState:
_didCreateScene:
_didDestroyScene:
sceneMonitor:sceneWasCreated:
sceneMonitor:sceneWasDestroyed:
sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:
sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:
sceneContentStateDidChange:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
sceneDidInvalidate:
_initWithScene:displayIdentity:
_initWithDefinition:displayIdentity:
isPairedWithExternalSceneWithIdentifier:
_setSceneMonitor:
_noteSceneCreated:
_noteSceneDestroyed:
displayIdentity
_setDisplayIdentity:
_definition
_sceneMonitor
_manuallyControlsLifecycle
_setManuallyControlsLifecycle:
_scene
_contentState
_displayIdentity
_observers
_observersToObserverBehaviors
sharedApplication
interfaceOrientation
deviceClass
currentDevice
userInterfaceIdiom
mainScreen
_referenceBounds
idealSearchPlatterWidth
settings
setSettings:
clientSettings
setClientSettings:
builder
appendObject:
mutableCopy
diffFromSettings:toSettings:
client:didUpdateClientSettings:withDiff:transitionContext:
client:didReceiveActions:
client:attachLayer:
client:detachLayer:
appendBodySectionWithName:multilinePrefix:block:
host:didUpdateSettings:withDiff:transitionContext:completion:
host:didInvalidateWithTransitionContext:completion:
host:didReceiveActions:
initWithIdentifier:
configureWithHost:initialParameters:
updateClientSettingsWithBlock:
sendActions:
attachLayer:
detachLayer:
layers
_valid
_identifier
_sceneHost
_settings
_clientSettings
_layers
viewDidDisappear:
alertControllerDidDisappear:
title
appendString:withName:
_canShowWhileLocked
alertItem
alertControllerDelegate
setAlertControllerDelegate:
_alertItem
_alertControllerDelegate
array
componentsJoinedByString:
initWithNibName:bundle:
raise:format:
initWithActions:gestureRecognizer:
initWithCoder:
actions
reversesActions
reverseObjectEnumerator
imagePosition
initWithAction:
setImagePosition:
setTranslatesAutoresizingMaskIntoConstraints:
arrayWithArray:
initWithArrangedSubviews:
setAxis:
_updateKeylineViews
leftAnchor
constraintEqualToAnchor:
setActive:
rightAnchor
topAnchor
bottomAnchor
_handleLongPressGestureRecognizer:
initWithTarget:action:
setMinimumPressDuration:
addGestureRecognizer:
defaultConfiguration
initWithConfiguration:coordinateSpace:
viewDidAppear:
gestureRecognizer
addTarget:action:
viewWillDisappear:
removeTarget:action:
isViewLoaded
arrangedSubviews
addArrangedSubview:
actionPlatterViewControllerShouldRespondToTouches:
subviews
objectAtIndexedSubscript:
leadingAnchor
leadingContentMargin
constraintEqualToAnchor:constant:
trailingAnchor
setHeight:
state
isActive
activateWithCompletionBlock:
locationInView:
setHighlighted:withFeedbackRetargetBehavior:
action
handler
setHighlighted:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
setSystemInteractionStartIndex:
setReversesActions:
systemInteractionStartIndex
_delegateRespondsTo
_stackView
_keylinesContainerView
_feedbackRetargetBehavior
_reversesActions
_actions
_systemInteractionStartIndex
_gestureRecognizer
_imagePosition
handleFailureInFunction:file:lineNumber:description:
updateTopMostAssertion
sourceWindow
windowLevel
setTopMostAssertion:
updateHomeAffordanceMargin
createHomeAffordanceIfNecessary
additionalEdgeMargin
updateFrameForHomeAffordanceWithAdditionalMargin:
functionWithName:
settingsWithDuration:timingFunction:
factoryWithSettings:
setAllowsAdditiveAnimations:
animateWithFactory:options:actions:completion:
sharedTextEffectsWindowAboveStatusBar
rootViewController
setBackgroundLumninanceObserver:
pillContainingView
backgroundLuminance
setStyle:
suggestedSizeForContentWidth:
suggestedEdgeSpacing
lumaDodgePillDidDetectBackgroundLuminanceChange:
registerAssertion:
unregisterAssertion:
assertions
setAssertions:
topMostAssertion
pillView
setPillView:
_assertions
_topMostAssertion
_pillView
initWithGestureWindow:
assertionForGestureWindow:
setAdditionalEdgeMargin:
setSourceWindow:
_additionalEdgeMargin
_sourceWindow
isInCallAction
useHardwareSwitchAsOrientationLock
activationEvent
setActivationEvent:
screen
setScreen:
_screen
_activationEvent
_imageThatSuppressesAccessibilityHairlineThickening
initWithTitle:subtitle:image:badgeView:handler:
initWithTitle:subtitle:systemImageName:badgeView:handler:
initWithTitle:subtitle:image:handler:
initWithTitle:subtitle:handler:
initWithTitle:handler:
subtitle
systemImageName
_title
_subtitle
_image
_systemImageName
_badgeView
_handler
pluginUserAgent
addObserver:forKeyPath:options:context:
isAvailable
_loadFlashlightLevel
setLevel:
_postLevelChangeNotification:
_storeFlashlightLevel:
_setFlashlightLevel:
_turnPowerOn
_turnPowerOff
hashTableWithOptions:
flashlightLevel
isOverheated
_updateStateWithAvailable:level:overheated:
observeValueForKeyPath:ofObject:change:context:
_postOverheatedChangeNotification:
_postAvailabilityChangeNotification:
flashlightOverheatedDidChange:
flashlightAvailabilityDidChange:
flashlightLevelDidChange:
setFlashlightLevel:withError:
turnPowerOnWithError:
turnPowerOff
standardUserDefaults
setInteger:forKey:
integerForKey:
turnFlashlightOnForReason:
turnFlashlightOffForReason:
level
warmUp
coolDown
removeAllObservers
_flashlight
_flashlightQueue
_level
_overheated
_available
initWithStyle:
defaultSettings
backgroundColorHint
setBackgroundColorHint:
vibrancyDisabled
setVibrancyDisabled:
_vibrancyDisabled
_backgroundColorHint
actionWithCompletion:
initWithCompletion:
error
code
initWithInfo:timeout:forResponseOnQueue:withHandler:
response
sendResponse:
sendResponseWithSuccess:
label
setLabel:
authenticationPolicy
setAuthenticationPolicy:
completion
_action
_label
_authenticationPolicy
_completion
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
alignmentRectInsets
sbui_rangesOfEmojiTokens:
initWithString:
clearColor
addAttributes:range:
setAttributedText:
font
setFont:
lineBreakMode
setLineBreakMode:
numberOfLines
setNumberOfLines:
textAlignment
setTextAlignment:
setTextColor:
_mt_applyVisualStyling:
mt_removeAllVisualStyling
textColor
viewForFirstBaselineLayout
viewForLastBaselineLayout
_textColor
_emojiLabel
length
isFrontBoard
initWithObjects:
containsObject:
_performSynchronouslyOnMainThread:
stringWithFormat:
initWithArray:
mainConfiguration
setDisplayConfiguration:
preferredLevel
setForeground:
preferredInterfaceOrientation
setInterfaceOrientation:
specification
parametersForSpecification:
createSceneWithIdentifier:parameters:clientProvider:transitionContext:
scenes
destroyScene:withTransitionContext:
_queue_invalidate
sceneWithIdentifier:
registerInvalidationAction:
registerHost:withInitialParameters:
unregisterHost:
initWithIdentifier:queue:
createSceneWithIdentifier:initialClientSettings:
destroyScene:
_clientQueue
_queue
_scenes
_invalidationAction
displayIfNeeded
sbui_drawEagerly
value
setValue:
areAnimationsEnabled
_animateUsingSpringBehavior:tracking:animations:completion:
presentationValue
setInput:
_withoutAnimation:
output
velocity
_performWithoutRetargetingAnimations:
parametersForTransitionFromState:toState:
input
setOutput:
setDampingRatio:response:
setTrackingDampingRatio:response:
projectForDeceleration:
projectForTime:
tracking
setTracking:
_dampingRatio
_response
_trackingDampingRatio
_trackingResponse
_tracking
setContentOrientation:
_updateGeometry
removeGestureRecognizer:
bringSubviewToFront:
containerOrientation
_referenceContainerSize
contentOrientation
setTransform:
setCenter:
setBounds:
hitTest:withEvent:
isDescendantOfView:
frame
contentViews
addContentView:
addHitTestView:
addGestureRecognizerToTransformedView:
removeGestureRecognizerFromTransformedView:
bringContentSubviewToFront:
convertPointFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertRectFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertTransformFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertPointFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertRectFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertTransformFromContentInterfaceOrientationToContainerInterfaceOrientation:
_transformedView
_contentOrientation
_containerOrientation
_hitTestViews
setAllowsGroupOpacity:
_setUnified:
_layoutGrabberView:forState:
setColor:
alphaComponent
_setDrawsAsBackdropOverlayWithBlendMode:
scale
_frameForGrabberView:forState:unified:
_transformForGrabberView:forState:
_setState:
setShouldRasterize:
layoutIfNeeded
setRasterizationScale:
animationDuration
animateWithDuration:animations:completion:
setState:animated:
deleteCharactersInRange:
appendFormat:
mask
setMask:
tintViewWithFrame:
insertSubview:belowSubview:
vibrantSettings
setVibrantSettings:
initWithColor:
setAnimationDuration:
configureForLightStyle
setState:
color
_leftGrabberView
_rightGrabberView
_animationDuration
_state
_color
_alphaComponent
_vibrantSettings
_unified
_alphaContainerView
setCornerRadius:
setAllowsEdgeAntialiasing:
methodSignatureForSelector:
invocationWithMethodSignature:
setSelector:
invokeWithTarget:
getReturnValue:
isLoaded
bundlePath
load
suggestedContentInsets
appendObject:withName:skipIfNil:
legibilitySettings
setSuggestedContentInsets:
setLegibilitySettings:
activeInterfaceOrientation
_setupSubviews
_updateVisualStylingIfNecessary
willMoveToSuperview:
_invalidateVisualStyling
_updateImageViewLayoutConstraints
isHighlighted
selectionChanged
preferredContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
systemImageNamed:
configurationWithPointSize:weight:scale:
imageWithConfiguration:
setContentMode:
setImage:
setPreferredSymbolConfiguration:
setContentHuggingPriority:forAxis:
_setLayoutDebuggingIdentifier:
widthAnchor
constraintEqualToConstant:
heightAnchor
setPriority:
centerYAnchor
trailingContentMargin
_bodyLeading
firstBaselineAnchor
constraintGreaterThanOrEqualToAnchor:constant:
lastBaselineAnchor
constraintLessThanOrEqualToAnchor:constant:
deactivateConstraints:
numberWithDouble:
stopAutomaticallyUpdatingView:
visualStylingProviderForCategory:
automaticallyUpdateView:withStyle:
_interfaceOrientationIsPortrait
_textContainer
_titleLabel
_subtitleLabel
_highlightView
_imageViewLayoutConstraints
_visualStylingProviderStroke
_visualStylingProviderFill
_highlighted
playSound
killSound
actionBlockForButton:
initWithActionBlock:remoteViewControllerClassName:remoteServiceBundleIdentifier:actionIdentifier:activationMode:behavior:parameters:
actionWithBlock:
actionBlock
setActionBlock:
remoteViewControllerClassName
setRemoteViewControllerClassName:
remoteServiceBundleIdentifier
setRemoteServiceBundleIdentifier:
behavior
setBehavior:
activationMode
setIdentifier:
parameters
setParameters:
_actionBlock
_remoteViewControllerClassName
_remoteServiceBundleIdentifier
_behavior
_activationMode
_parameters
setURL:
setBundleID:
appendInteger:withName:
actionWithURL:
actionWithBundleID:
isApplicationAction
bundleID
transitionStyle
setTransitionStyle:
_bundleID
_url
imageNamed:inBundle:compatibleWithTraitCollection:
type
sbui_image
sbui_defaultImage
newLockScreenModalView
awakeFromBundle
setVisible:
registeredWithHost
supportedAndEnabled
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
cancelPendingActivationEvent:
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
viewControllerForActivationContext:
host
setHost:
isVisible
_host
_isVisible
primaryColor
getWhite:alpha:
traitCollectionWithUserInterfaceStyle:
traitCollectionWithUserInterfaceStyleCompatibleWithLegibilitySettings:
distantFuture
subActions
priority
isSticky
sortDate
canShowInAssistant
shouldPlayLightsAndSirens
canShowWhileLocked
message
shouldShowModalSubActions
subActionLabels
hasSubActions
defaultActionWithContext:
actionWithIdentifier:
lockScreenActionContextWithContext:
setSoundType:
setSystemSoundID:
setSoundBehavior:
setVibrationPattern:
setSongPath:
initWithType:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
initWithToneAlertConfiguration:
alertWithConfiguration:
initWithToneAlert:
setToneAlert:
setEventType:
initWithFeedbackEventType:
isPlaying:
playSound:environments:completion:
stopSound:
soundType
systemSoundID
songPath
soundBehavior
vibrationPattern
toneAlert
stringByAppendingFormat:
soundWithFeedbackEventType:
initWithSystemSoundID:behavior:vibrationPattern:
initWithSystemSoundPath:behavior:vibrationPattern:
initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:
isPlaying
stop
_completionBlock
_setCompletionBlock:
_resolvedSystemSoundID
_setResolvedSoundID:
eventType
_soundType
_systemSoundID
_soundBehavior
_vibrationPattern
_toneAlert
_songPath
_eventType
invalidateIntrinsicContentSize
height
intrinsicContentSize
_visualStylingProvider
_height
restrictedCapabilities
setRestrictedCapabilities:
presentationStyle
setPresentationStyle:
notificationBehavior
setNotificationBehavior:
elementOverrides
setElementOverrides:
presentationRegion
setPresentationRegion:
initWithAppearance:
mutableCopyWithZone:
hidden
setLockScreenDisableAssertionClass:
lockScreenDisableAssertionWithIdentifier:
setCornerCurve:
_labelColor
buttonWithOK
mainBundle
localizedStringForKey:value:table:
buttonWithText:
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
fontWithDescriptor:size:
sizeToFit
setTextLabel:
_carSystemFocusColor
setHighlightColor:
setUnselectedTextColor:
_carSystemFocusLabelColor
setSelectedTextColor:
buttonWithChevronImageForTraitCollection:
_chevronImageForTraitCollection:selected:
setSelectedImage:
setUnselectedImage:
traitCollectionDidChange:
traitCollection
backgroundColor
setNeedsDisplay
isSelected
setHighlightedImage:
initWithImage:highlightedImage:
preferredFontDescriptorWithTextStyle:
pointSize
userInterfaceStyle
_carSystemQuaternaryColor
_chevronImageForTraitCollection:
_flatImageWithColor:
initWithSize:
sharedCache
CGContext
setFill
drawInRect:
imageWithActions:
imageForKey:generatingIfNecessaryWithBlock:
imageFlippedForRightToLeftLayoutDirection
systemImageNamed:compatibleWithTraitCollection:
buttonWithOKAndHighlightColor:
buttonWithText:highlightColor:
buttonWithChevronImageForTraitCollection:highlightColor:
highlightColorForNightTime:
highlightColor
textLabel
unselectedTextColor
selectedTextColor
unselectedImage
selectedImage
_textLabel
_unselectedTextColor
_selectedTextColor
_unselectedImage
_selectedImage
_highlightColor
initWithName:
removeAllImagesWithCompletion:
_initWithStartView:endView:translucent:
isUserInteractionEnabled
allowsHitTesting
setAllowsHitTesting:
setUserInteractionEnabled:
animationFactory
allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
functionWithControlPoints::::
factoryWithTimingFunction:
setAllowsGroupOpacityDuringCrossfade:
setAdaptsAnimationFactoryTimingFunction:
_animationFactory
_startView
_endView
_translucent
_crossfaded
_allowsGroupOpacityDuringCrossfade
_adaptsAnimationFactoryTimingFunction
initWithAnimationCurve:
initWithDuration:timingParameters:
_setPropertyAnimator:
addCompletion:
_configurePropertyAnimatorIfNecessaryForChangeToUserInterfaceStyle:
coronaAnimationController:willAnimateCoronaTransitionWithAnimator:
startAnimation
addParticipant:
removeParticipant:
coronaDidChange:
_propertyAnimator
_participants
sb_coronaAnimationController
sharedInstanceForStyle:
systemAppPersistenteCache
_imageNameForCurrentContentSize:
imageNamed:
initWithSettings:strength:image:tintStyle:
setStrength:
sb_isEqualToLegibilitySettings:
_newDialViewForSettings:
strength
_strength
_legibilitySettings
_dialView
getRed:green:blue:alpha:
bannerTargetIdentifier
bannerTargetIdiom
registerSource:
unregisterSource:
modallyPresentBannerWithContext:
isShowingModalBanner
signalSource:
currentBannerContextForSource:
dismissCurrentBannerContextForSource:
cacheBannerForContext:withCompletion:
removeCachedBannerForContext:
initWithTargetImplementation:
_idiom
_implementation
initWithKeyOptions:valueOptions:capacity:
initWithOptions:capacity:
bannerTargetManager:didAddTarget:
_notifyObservers:
bannerTargetManager:didRemoveTarget:
targets
_registerTargetImplementation:
_unregisterTargetImplementation:
_proxyForTargetImplementation:
_proxies
_implementationToProxyMap
setAllowedTouchTypes:
setRequiredPreviewForceState:
removeProgressObserver:
percentComplete
reset
touchesBegan:withEvent:
_initWithView:targetState:minimumRequiredState:useLinearClassifier:
addProgressObserver:
allowedTouchTypes
interactionProgressDidUpdate:
interactionProgress:didEnd:
pressDuration
relativeTouchForce
touchForceVelocity
_gestureRecognizerWillHandleTouches:
forceTouchCompleted
userInfo
setUserInfo:
_initialMediaTime
_interactionProgress
_forceTouchCompleted
_userInfo
viewCanBeDisplayed
showStatusBar
showDateView
hasCustomSubtitle
customSubtitleText
showDate
allowsSiri
allowsLockScreenCamera
allowsUnlocking
allowsLogout
wantsMesaAutoUnlock
allowsLockScreenMediaControls
allowsControlCenter
allowsScreenshots
overlayStyle
pluginController:updateAppearance:
style
secondaryColor
shadowColor
initWithStyle:primaryColor:secondaryColor:shadowColor:
legibilitySettingsOverridesVibrancy
isContentViewWhiteUnderSlideToUnlockText
_updateAppearanceAndNotify:
setActivationContext:
setDeactivationContext:
purgeView
setPluginAgent:
slideToUnlockText
bundleIDForUnlock
unlockAnimationStyleForDestinationApp:
shouldDisableOnUnlock
disable
shouldDisableOnRelock
handleMenuButtonTap
handleLockButtonPressed
handleVolumeUpButtonPressed
handleVolumeDownButtonPressed
handleHeadsetButtonPressed:
enableTransitionBlock
sentinelWithExceptionReason:
signal
settingsWithDuration:
viewIfLoaded
statusBarOrientation
deactivatePluginController:
viewWantsOverlayLayout
disablesAwayItemsCompletely
shouldAutoHideNotifications
enableLockScreenBundle:withContext:
enableBundleNamed:activationContext:
disableLockScreenBundle:withContext:
disableBundleNamed:deactivationContext:
enableBundleNamed:
disableBundleNamed:
pluginAnimatesAppearanceTransition:
pluginAnimateAppearanceTransition:withCompletion:
pluginAgent
pluginPriority
pluginViewController
pluginAppearance
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
updateForPresentation:
pluginUnlockAction
setViewCanBeDisplayed:
setOrientation:
setFullscreen:animated:
setFullscreen:duration:
shouldShowLockStatusBarTime
allowsTimer
allowsLockScreenHint
animateResumingToApplicationWithIdentifier:
showBatteryChargingText
customSubtitleColor
customHeaderView
allowsPhotoSlideshow
handleMenuButtonDoubleTap
wantsMenuButtonHeldEvent
handleMenuButtonHeld
setNeedsLegibilityAppearanceUpdate
_agent
_appearance
_viewCanBeDisplayed
initWithItem:source:target:
item
source
target
_item
_source
_target
_isValid
isEmergencyDialerAction
_initWithDomain:
numberWithInt:
_bindProperty:withDefaultKey:toDefaultValue:options:
indigoConfigurationFlagsBitmask
defaults
_bindAndRegisterDefaults
indigoConfigurationFlagOne
indigoConfigurationFlagTwo
indigoConfigurationFlagThree
setName:
setProcess:
setAuxiliaryAnimation:
appendDictionarySection:withName:skipIfEmpty:
contextWithName:
name
process
auxiliaryAnimation
setObserver:
_name
_process
_auxiliaryAnimation
localizedTitle
filteredApplicationShortcutItemsWithStaticApplicationShortcutItems:dynamicApplicationShortcutItems:
_scaledValueForValue:
peekNextBannerItemForTarget:
compare:
dequeueNextBannerItemForTarget:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v24@0:8d16
q16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@?16
v24@0:8@16
v28@0:8q16B24
v40@0:8q16q24d32
d24@0:8q16
B24@0:8q16
v32@0:8d16d24
@32@0:8d16d24
d40@0:8d16d24d32
@"BSUIBackdropView"
@"UIView"
@"UIColor"
@"MTMaterialView"
v20@0:8B16
@24@0:8^{_NSZone=}16
@24@0:8@16
@"NSMutableDictionary"
v32@0:8@16@24
v32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@"SBSceneHandle"16@"FBScene"24
v32@0:8@"SBSceneHandle"16q24
v40@0:8@"SBSceneHandle"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v40@0:8@"SBSceneHandle"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v32@0:8@"SBSceneHandle"16@"NSSet"24
@24@0:8@?16
@"TUDialRequest"
@24@0:8q16
@"NSString"
v24@0:8@"<SBScenePlaceholderContentViewProvider>"16
@48@0:8@16{CGSize=dd}24q40
@56@0:8@16{CGSize=dd}24q40@48
v40@0:8q16@24@?32
{CGSize=dd}32@0:8{CGSize=dd}16
{CGAffineTransform=dddddd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v40@0:8{CGSize=dd}16q32
v32@0:8@16@?24
q24@0:8q16
v64@0:8q16@24q32@40@48@?56
{CGSize=dd}16@0:8
@"SBSceneHandle"
{CGSize="width"d"height"d}
@"<UIScenePresenter>"
@"<SBScenePlaceholderContentContext>"
@"UIView<SBScenePlaceholderContentView>"
@"UIView<UISceneSnapshotPresentation>"
@"UIView<UIScenePresentation>"
@"NSCountedSet"
@"<SBScenePlaceholderContentViewProvider>"
@"<SBSceneViewDelegate>"
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8B16B20
v20@0:8i16
i16@0:8
v24@0:8Q16
v32@0:8Q16Q24
@24@0:8B16B20
@"_SBAlertController"
@"NSArray"
@"UIImage"
d16@0:8
@"UIImageView"
@"<SBSceneHandleObserver>"
v32@0:8@"FBSceneMonitor"16@"FBScene"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v32@0:8@"FBSceneMonitor"16@"NSSet"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
@32@0:8@16@24
@40@0:8@16@24@32
@"FBSSceneDefinition"
@"FBScene"
@"FBSDisplayIdentity"
@"FBSceneMonitor"
@"NSHashTable"
@"NSMapTable"
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v56@0:8@"<FBSceneHost>"16@"FBSSceneSettings"24@"FBSSceneSettingsDiff"32@"FBSSceneTransitionContext"40@?<v@?B>48
v40@0:8@"<FBSceneHost>"16@"FBSSceneTransitionContext"24@?<v@?B>32
v32@0:8@"<FBSceneHost>"16@"NSSet"24
@"<FBSceneHost>"
@"FBSSceneSettings"
@"FBSSceneClientSettings"
@"NSMutableSet"
@"SBAlertItem"
@"<_SBAlertControllerDelegate>"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
{?="actionPlatterViewControllerShouldRespondToTouches"b1}
@"UIStackView"
@"UISelectionFeedbackGenerator"
@"UILongPressGestureRecognizer"
@"<SBUIActionPlatterViewControllerDelegate>"
v24@0:8@"MTLumaDodgePillView"16
@"SBUIKeyboardHomeAffordanceAssertion"
@"MTLumaDodgePillView"
@"UIWindow"
@"UIScreen"
@56@0:8@16@24@32@40@?48
@48@0:8@16@24@32@?40
@40@0:8@16@24@?32
@32@0:8@16@?24
@?16@0:8
v48@0:8@16@24@32^v40
v32@0:8B16Q20B28
v20@0:8f16
@"AVFlashlight"
@"NSObject<OS_dispatch_queue>"
@"BSAction"
{UIEdgeInsets=dddd}16@0:8
@"UILabel"
@24@0:8^@16
v24@0:8@"FBSceneClientProviderInvalidationAction"16
@"<FBSceneClient>"32@0:8@"<FBSceneHost>"16@"FBSSceneParameters"24
v24@0:8@"<FBSceneHost>"16
@"FBSSerialQueue"
@"FBSceneClientProviderInvalidationAction"
{?=ddBBddddddd}24@0:8i16i20
d24@0:8d16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGAffineTransform=dddddd}64@0:8{CGAffineTransform=dddddd}16
@40@0:8{CGPoint=dd}16@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"_SBOrientationTransformedContentView"
@"NSMutableArray"
v24@0:8@"UIView"16
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
{CGAffineTransform=dddddd}32@0:8@16q24
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16q24B32
B20@0:8B16
@"_SBFVibrantSettings"
v48@0:8{UIEdgeInsets=dddd}16
@"_UILegibilitySettings"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8B16@20
@"SBUIActionViewLabel"
@"MTVisualStylingProvider"
@"SBUIAction"
@?24@0:8@16
@72@0:8@?16@24@32@40Q48Q56@64
@"NSDictionary"
@"NSURL"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20^v24
B24@0:8@?16
B20@0:8i16
@"<SBUIPluginControllerHost>"
@36@0:8I16Q20@28
@40@0:8@16Q24@32
@48@0:8q16@24@32@40
B32@0:8q16@?24
I16@0:8
v20@0:8I16
@"TLAlert"
@"NSArray"16@0:8
@"SBLockScreenLegibilitySettings"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"SBLockScreenLegibilitySettings"16
@"SBLockScreenLegibilitySettings"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8#16
@20@0:8B16
@28@0:8@16B24
@36@0:8@16@24B32
@"BSUIAnimationFactory"
@"UIViewPropertyAnimator"
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"SBUILegibilityView"
^v16@0:8
v24@0:8@"<SBUIBannerSource>"16
v24@0:8@"SBUIBannerContext"16
@"SBUIBannerContext"24@0:8@"<SBUIBannerSource>"16
v32@0:8@"SBUIBannerContext"16@?<v@?>24
@"<SBUIBannerTargetImplementation>"
v28@0:8@16B24
v24@0:8@"UIInteractionProgress"16
v28@0:8@"UIInteractionProgress"16B24
@32@0:8@16:24
@"UIInteractionProgress"
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16d20
Q24@0:8@16
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginMutableAppearanceContext"
@"SBUIBannerItem"
@"<SBUIBannerSource>"
@"<SBUIBannerTarget>"
@"FBProcess<FBSProcess>"
@"<SBLockScreenPluginLifecycleObserver>"
