?ffffff
333333
?ffffff
?UUUUUU
?333333
sbuiBackgroundViewLuminance
v16@?0@"UIView"8
None
Boot
TransientOverlay
Logout
Plugin
Blocked
Keyboard
LostMode
IdleTimer
Restoring
Activation
LiftToWake
LockButton
RemoteLock
SOSDismiss
PowerDownDismiss
SmartCover
Notification
Authentication
NotificationCenter
Siri
AccessoryAttach
CoverGesture
Mesa
Touch
HomeButton
OtherButton
ACPowerChange
ExternalRequest
ApplicationRequest
SpringBoardRequest
SystemServiceRequest
ChargingAccessoryChange
CoverSheet
ControlCenter
CameraButton
MouseButton
WebClipService
Accessibility
AccessoryAttached
SessionAlert
AlwaysOnInactiveState
SwipeToWake
SystemApertureClientRequest
Dismiss
Authenticate
Authenticate and Dismiss
(inherit)
Default
DarkenSourceOver
BlurOnly
Light
LightWithTint
MediumDark
Dark
Passcode
v8@?0
SBUIExpandedNotificationContainerViewProvider.m
Invalid parameter not satisfying: %@
requester
containerView
[reason length] > 0
<%@: %p; requester: %@; reason: %@; valid: %@>
Attempt to invalidate invalid instance
default
v16@?0@"UIMutableScenePresentationContext"8
UIMutableApplicationSceneSettings
v16@?0@"FBSMutableSceneSettings"8
SBSceneHandleBlockObserver.m
Cannot deallocate a SBSceneHandleBlockObserver without invalidating first.
element
hidden
text
CustomContent
PlaceholderContent
LiveSnapshot
LiveContent
SBSceneView.m
sceneHandle
SBApplicationSceneView
%@:%p-SBApplicationSceneView:%p-%llu
%@-%p-%llu
sceneId
requestedDisplayMode
effectiveDisplayMode
liveContentDisableAssertions
this object has already been invalidated
reason
SBSceneView.DisableLiveContent
v16@?0@"BSSimpleAssertion"8
zPosition
bogus reference size
bogus interface orientation
Expected views to match (toView: %@, toMode: %@, toDisplayModeView: %@).
v12@?0B8
Attempting to _configureLiveHostView for %@, which is already invalidated.
SBAlertItemDidPrepareNewAlertControllerNotification
Unknown
Appearing
Appeared
Disappearing
Disappeared
Lock
Pended
User Dismissed
Button Pressed
Auto Dismiss
Generic
Unlock
SBAlertItemsController
presented
SBAlertItem.m
image
SBSceneHandle.m
init is unavailable for SBSceneHandle.
Scene or definition must be provided.
Given scene and monitor'd scene do not match.
Required scene wasn't found from scene handle: %@
v24@?0@"<SBSceneHandleObserver>"8@"_SBSceneHandleObserverBehavior"16
Cannot have scene creation/destruction invoked when using a scene monitor for lifecycle events.
Scene destroyed did not match the scene being tracked.
sceneID
scenePointer
scene
A scene is required for the content host manager state to change.
SBUISearchUtilities.m
Do not instantiate this class
title
StatusBar
TimeAndDate
Subtitle
v28@?0Q8i16^B20
ScreenOff
VolumeUp
VolumeDown
HeadsetButton
HeadsetButtonHeld
Legible
Undefined
Overlay
Normal
Stationary
Disabled
Temporary
Exclusive
Camera
TouchID
MediaControls
TodayCenter
Screenshot
%s is not a valid initializer. You must call -[%@ initWithActions:gestureRecognizer:].
-[SBUIActionPlatterViewController initWithNibName:bundle:]
%@ does not support unarchiving from a nib.
SBUIRingerSwitchBehaviorDidChangeNotification
ringer-switch
SBDeviceLockStateChangedNotification
SBLockButtonPressedNotification
SBMenuButtonPressedNotification
SBVolumeChangedNotification
SBApplicationNetworkFlagsChangedNotification
SBHeadsetButtonUpNotification
SBActiveCallStateChangedNotification
SBRingerChangedNotification
SBIncomingCallPendingNotification
SBCallCountChangedNotification
SBTelephonyDaemonRestartNotification
SBUserEventOccurredNotification
SBHomescreenIconsDidAppearNotification
SBHomescreenIconsWillAppearNotification
SBWiFiDeviceAttachedNotification
SBProximityDidChangeNotification
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
SBFeaturesShouldBeLockedForRemoteLockNotification
SBBannerWillAnimateRevealNotification
SBBannerWillAnimateDismissalNotification
SBOrientationLockChangedNotification
SBAirplaneModeControllerWillProcessAirplaneModeChangeNotification
SBAirplaneModeControllerAirplaneModeDidChangeNotification
SBAirplaneModeControllerDidProcessAirplaneModeChangeNotification
SBTelephonyManagerWillProcessAirplaneModeChangeNotification
SBTelephonyManagerAirplaneModeDidChangeNotification
SBTelephonyManagerDidProcessAirplaneModeChangeNotification
SBNetworkTetheringStateChangedNotification
SBWifiManagerPowerStateDidChangeNotification
SBWifiManagerCurrentDeviceDidChangeNotification
SBWifiManagerDevicePresenceDidChangeNotification
SBBacklightAboutToUndimNotification
SBBacklightResetLockScreenIdleTimerNotification
SBBacklightLevelChangedNotification
SBBacklightFadeFinishedNotification
SBLiftToWakeGestureDetectedNotification
SBBacklightWillTurnOnWhileUILockedNotification
SBBacklightChangeSourceKey
SBBacklightOldFactorKey
SBBacklightNewFactorKey
kSBNotificationKeyState
kSBNotificationKeyDisplayIdentifier
kSBNotificationKeyPreferenceChangedKey
kSBNotificationKeyHeadsetButtonLongPress
kSBNotificationKeyBundleIdentifier
kSBNotificationKeyLocalNotification
kSBNotificationKeyFrame
kSBNotificationKeyAnimationDuration
%s is not a valid initializer. You must call -[%@ initWithTitle:subtitle:image:badgeView:handler:].
-[SBUIAction init]
SBUILaunchOptionKeyPNGLess
SBUILaunchOptionKeyAllowUnlock
available
overheated
flashlightLevel
com.apple.ControlCenter.FlashlightModule.AVFlashlight
com.apple.ControlCenter
Flashlight
FlashlightLevel
v16@?0@"BSActionResponse"8
H:|[label]|
label
V:|[label]|
@16@?0@"NSArray"8
H:|[emojiLabel]|
emojiLabel
V:|[emojiLabel]|
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
hasDrawn
container
content
; state: %@>
[Invalid]
SBUIChevronViewStateUp
SBUIChevronViewStateNone
SBUIChevronViewStateDown
com.apple.SpringBoardUIFramework
com.apple.springboard-ui.client
XCTestConfiguration
SearchUI
SpringBoardUI.m
This process should not be linking or loading SpringBoardUI.framework (<rdar://problem/26143166>)
suggestedContentInsets
legibilitySettings
%s is not a valid initializer. You must call -[%@ initWithAction:].
-[SBUIActionView initWithFrame:]
titleLabel
subtitleLabel
@"NSLayoutConstraint"20@?0@"NSLayoutConstraint"8f16
H:|-(leadingContentOffset)-[imageView]-(leadingContentOffset)-[textContainer]-(trailingContentOffset)-|
trailingContentOffset
leadingContentOffset
imageView
textContainer
bundleID
transitionStyle
CSModalView
SBUIPluginVisibilityDidChangeNotification
SBUIPluginActivationSettingsDidChangeNotification
__bundleId
__supportsCarFullScreen
WiredMic
BTHeadset
MotionGesture
Voice
Continuity
SBSoundController
SystemSound
   hasCompletionBlock: %@
   SoundID: %lu
   Path: %@
 Behavior: %lu
   Vibration Pattern: %@
ToneAlert
   hasCompletionBlock: %@
    Tone Alert: %@
Feedback
   eventType: %ld
Ringtone (deprecated)
AVItem (deprecated)
Song (deprecated)
{  SoundType: %@%@
backgroundStyle
presentationStyle
notificationBehavior
presentationRegion
restrictions
elementOverrides
v16@?0q8
timer
SBAwayViewPluginActivationReasonKey
SBAwayViewPluginActivatingForRemoteEvent
Plugin %@ did not call transition completion block
UIRemoteVC
Legibility
com.apple.indigo
indigoConfigurationFlagsBitmask
IndigoConfigurationFlags
name
process
userInfo
Instantiated new expanded notification container view assertion: %{public}@
Implicitly invalidating expanded notification container view assertion due to deallocation: %{public}@
Invalidating expanded notification container view assertion: %{public}@
<%p> Presentation state changed to %{public}@
[Flashlight Controller] On: %@
[Flashlight Controller] Off: %@
Error setting flashlight level: %@
Error turning on flashlight power: %@
Allowing SpringBoardUI.framework to load because SearchUI.framework is loaded. This will become a hard assert once <rdar://problem/29408996> is fixed.
This process should not be linking or loading SpringBoardUI.framework
SBUIBackgroundView
SBUIBackgroundStyleTransitioning
NSObject
SBUIWallpaperOverlay
SBUIPluginAppearanceContext
SBUIExpandedNotificationContainerViewProvider
NCContainerViewProviding
BSInvalidatable
SBSystemApertureSceneElementScenePresenterView
_SBSceneHandleObserverToken
SBSceneHandleObserverToken
NSCopying
SBSceneHandleBlockObserver
SBSceneHandleObserver
SBLockScreenPluginCallAction
SBLockScreenElementOverride
SBSceneView
SBScenePlaceholderContentViewProviderDelegate
SBAlertItem
SAUILayoutObserving
BSDescriptionProviding
SAElementIdentifying
_SBAlertItemHeaderViewController
_SBSceneHandleObserverBehavior
SBSceneHandle
FBSceneMonitorDelegate
FBSceneObserver
SBUISearchUtilities
_SBAlertController
SBUIActionPlatterViewController
UIGestureRecognizerDelegate
SBUIPluginActivationContext
SBUIAction
SBUIFlashlightController
SBOrientationTransformWrapperViewController
SBLockScreenLegibilitySettings
SBLockScreenPluginAction
SBSystemApertureSceneElementAccessoryPortalView
SBSystemApertureSceneElementAccessoryView
SBUIActionViewLabel
SBUIEmojiAdditions
SBUIAdditions
SBUILiveActivityMetrics
SBUIViewFloatSpringProperty
UIViewSpringAnimationBehaviorDescribing
SBOrientationTransformWrapperView
_SBOrientationTransformedContentView
SBUIChevronView
_SBFVibrantView
SpringBoardUI
SBLockScreenPluginPresentation
SBMutableLockScreenPluginPresentation
SBUIActionView
SBUIUtilities
SBLockScreenPluginApplicationAction
SBAlertControllerVisualStyle
SBLockScreenModalViewFactory
SBUIPluginController
SBPluginBundleController
BSPluginBundleController
SBUISound
SBUIActionKeylineView
SBLockScreenPluginAppearanceContext
SBLockScreenPluginMutableAppearance
SBLockScreenPluginAppearance
NSMutableCopying
SBLockScreenPluginMutableAppearanceContext
SBUILockScreenDisableAssertion
SBCrossfadeView
SBUICoronaAnimationController
SBUICoronaAnimationControllerAdditions
SBLockScreenTimerDialView
SBUILegibility
SBUIOptionalLegibility
SBAwayViewPluginController
SBLockScreenPluginViewController
SBLockScreenPluginController
SBLockScreenPluginEmergencyDialerAction
SBExternalIndigoDefaults
SBLockScreenPluginContext
initWithFrame:
whiteColor
setReduceTransparencyBackingColor:
setHidden:
addSubview:
bounds
layer
setCompositingFilter:
initWithFrame:privateStyle:
bundleForClass:
materialViewWithRecipeNamed:inBundle:options:initialWeighting:scaleAdjustment:
setAllowsGroupBlending:
setAutoresizingMask:
colorWithWhite:alpha:
setBackgroundColor:
filterWithType:
setBackgroundStyle:
defaultCenter
_reduceTransparencyEnabledStateDidChange:
addObserver:selector:name:object:
layoutSubviews
setFrame:
modifyAllViewsWithChanges:
_setContinuousCornerRadius:
setClipsToBounds:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
beginTransitionToBackgroundStyle:
completeTransitionToBackgroundStyle:
_updateAppearanceForBackgroundStyle:transitionToSettings:
isHidden
transitionIncrementallyToSettings:weighting:
_updateReduceTransparencyTintingWithProgressWeighting:
_updateAppearanceForTransitionFromStyle:toStyle:withProgress:
groupName
setGroupName:
_shouldApplyReducedTransparencyTintForBackgroundStyle:
grayscaleTintLevel
grayscaleTintAlpha
_reducedTransparencyValueForBackgroundStyle:
setAlpha:
transitionToSettings:
_darkenValueForBackgroundStyle:
_darkenWithProgress:
_tintValueForBackgroundStyle:
_tintColorAlphaForBackgroundStyle:
_tintWithProgress:backgroundColorAlpha:
_reduceTransparencyWithProgress:
_updateReduceTransparencyTinting
_luminanceValueForBackgroundStyle:
_luminanceWithProgress:
_lightenSourceOverValueForBackgroundStyle:
_lightenSourceOverWithProgress:
_valueFromStart:toEnd:withFraction:
_backgroundColorForDarkenAlpha:andProgress:
blackColor
colorWithAlphaComponent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
updateBackgroundStyleTransitionProgress:
backgroundStyle
isTransitioningBackgroundStyle
Tq,N
transitioningBackgroundStyle
TB,R,N,GisTransitioningBackgroundStyle
backdropView
.cxx_destruct
_style
_transitionStyle
_transitioning
_progress
_backdropView
_isReducedTransparencyEnabled
_reduceTransparencyView
_reduceTransparencyTintingView
_sourceOverView
_darkenSourceOverView
_tintView
_lightenSourceOverView
_reduceTransparencyBackingColor
_luminanceView
T@"NSString",&,N
Tq,N,V_style
TB,R,N,GisTransitioningBackgroundStyle,V_transitioning
removeAllObjects
numberWithInteger:
objectForKeyedSubscript:
settingsForPrivateStyle:
setGrayscaleTintAlpha:
setGrayscaleTintLevel:
setColorTintAlpha:
setSaturationDeltaFactor:
setBlurRadius:
setObject:forKeyedSubscript:
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_hideOtherWindowsDuringAppearance
TB,N,V_hideOtherWindowsDuringAppearance
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
length
init
copy
isValid
invalidate
dealloc
stringWithFormat:
containerView
T@"UIView",R,W,N
initWithRequester:containerView:reason:invalidationBlock:
requester
reason
_invalidationBlock
_invalidated
_containerView
_requester
_reason
T@,R,W,N,V_requester
T@"NSString",R,C,N,V_reason
valid
TB,R,N,GisValid
T@"UIView",R,W,N,V_containerView
removeFromSuperview
uiPresentationManager
createPresenterWithIdentifier:
setPresentedLayerTypes:
setAppearanceStyle:
modifyPresentationContext:
activate
presentationView
insertSubview:atIndex:
traitCollectionDidChange:
traitCollection
hasDifferentColorAppearanceComparedToTraitCollection:
userInterfaceStyle
setUserInterfaceStyle:
updateSettingsWithBlock:
setScene:
scene
scenePresenter
sceneContentView
_scene
_scenePresenter
_sceneContentView
T@"<UIScenePresenter>",R,N,V_scenePresenter
T@"UIView",R,N,V_sceneContentView
T@"FBScene",&,N,V_scene
copyWithZone:
initWithOwner:
owner
_owner
T@"NSMutableDictionary",R,W,N,V_owner
setObject:forKey:
removeObjectForKey:
allValues
sceneHandle:didCreateScene:
sceneHandle:didDestroyScene:
sceneHandle:didUpdateContentState:
sceneHandle:didUpdateSettingsWithDiff:previousSettings:
sceneHandle:didUpdateClientSettingsWithDiff:transitionContext:
sceneHandle:didUpdatePairingStatusForExternalSceneIdentifiers:
observeCreate:
observeDestroy:
observeDidUpdateContentState:
observeDidUpdateSettings:
observeDidUpdateClientSettings:
observeDidUpdatePairingStatusForExternalIdentifiers:
removeObserverForToken:
_createBlocks
_destroyBlocks
_didUpdateContentStateBlocks
_didUpdateSettingsBlocks
_didUpdateClientSettingsBlocks
_didUpdatePairingStatusBlocks
initWithURL:
isCallAction
_dialRequest
T@"NSURL",R,D,N
setElement:
overrideForElement:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:
appendString:withName:skipIfEmpty:
descriptionBuilderWithMultilinePrefix:
overrideForHiddenElement:
succinctDescription
element
text
setText:
_hidden
_element
_text
Tq,N,V_element
hidden
TB,N,GisHidden,V_hidden
T@"NSString",C,N,V_text
factoryWithDuration:
initWithSceneHandle:referenceSize:orientation:hostRequester:
setOpaque:
setClipsSubviews:
setBackgroundView:
sceneViewPresentationPriority:
sceneViewPresentationIdentifier:
initWithFormat:
addObserver:
sceneIfExists
removeObserver:
_invalidateHostPresenter
sceneIdentifier
appendPointer:withName:
displayMode
effectiveDisplayMode
allObjects
appendArraySection:withName:skipIfEmpty:
appendSuper
_transitionFromDisplayMode:showingView:toDisplayMode:showingView:withAnimationFactory:completion:
_updateBackgroundViewContainment
setDelegate:
_reloadPlaceholderContentIfNecessary
_updateLiveContentRendering
setResizesHostedContext:
_evaluateEffectiveDisplayModeWithAnimationFactory:completion:
sceneHandle
newSnapshotContext
_configureSceneSnapshotContext:
createSnapshotWithContext:
addObject:
setWithObject:
removeObject:
initWithIdentifier:forReason:invalidationBlock:
statusBarStyle
colorWithRed:green:blue:alpha:
_clearSnapshotViews
superview
_contentContainerEdgeInsets
_contentContainerCornerRadius
setCornerRadius:
setCornerCurve:
isDescendantOfView:
backgroundView
sendSubviewToBack:
_layoutLiveSnapshotView:
_layoutLiveHostView:
isEqualToString:
_shouldAnimatePropertyWithKey:
_hotSwapPlaceholderContentView
_hotSwapLiveSnapshotView
_updateBackgroundColor
setNeedsLayout
_setOrientation:
setContainerOrientation:
createPresenterWithIdentifier:priority:
_modifyPresentationContext:
_enableHostingIfPossible
_shouldObserveSceneHostContentState
_recheckLiveContentDependencies
_invalidateSceneLiveHostView:
_configureViewForEffectiveDisplayMode:
_viewForDisplayMode:
_bestDisplayModeLessThanMode:
deactivate
count
isContentReady
_transitionViewForHostView
window
isHiddenOrHasHiddenAncestor
_addContentLikeViewToHierarchyForTransitionIfPossible:
crossfadeViewWithStartView:endView:translucent:
setAnimationFactory:
insertSubview:aboveSubview:
crossfadeWithCompletion:
animateWithFactory:actions:completion:
_shouldViewBeInHierarchyForTransition:
_configurePlaceholderContentView
_configureLiveSnapshotView
_configureLiveHostView
sceneView:changedPreferredStatusBarStyleTo:
preferredStatusBarStyle
sceneView:requestsPlaceholderContentViewWithContext:
_placeholderVisibilityChanged
newSnapshot
snapshotPresentationForSnapshot:
_configureBackgroundColorForLiveSnapshot:
_configureSceneLiveSnapshotView:
layoutIfNeeded
_configureSceneLiveHostView:
setRenderingMode:
setMinificationFilter:
defaultPresentationContext
backgroundColorWhileHosting
_wantsBlackBackground
performWithoutAnimation:
defaultDisplayModeAnimationFactory
animationFactoryForImplicitTransitionFromMode:toMode:defaultFactory:
placeholderContentViewProviderContentDidUpdate:
initWithSceneHandle:referenceSize:orientation:
setCustomContentView:
setPlaceholderContentProvider:
setPlaceholderContentContext:
setPlaceholderContentEnabled:
setRendersAsynchronously:
setDisplayMode:animationFactory:completion:
acquireLiveContentDisableAssertionForReason:
sizeThatFits:
_refresh
_representsTranslucentContent
_updateReferenceSize:andOrientation:
_containerContentWrapperInterfaceOrientationChangedTo:
_sceneContentContainerView
_updateLiveViewContainment
referenceSize
orientation
customContentView
placeholderContentProvider
placeholderContentContext
placeholderContentEnabled
minificationFilter
rendersAsynchronously
resizesHostedContext
presenter
delegate
_sceneHandle
_referenceSize
_orientation
_requestedDisplayMode
_effectiveDisplayMode
_presenter
_hostingPriority
_hostingIdentifier
_placeholderContentContext
_customContentView
_placeholderContentView
_liveSnapshotView
_hostView
_crossfadeView
_backgroundView
_liveContentDisableReasons
_placeholderContentEnabled
_rendersAsynchronously
_resizesHostedContext
_placeholderContentProvider
_minificationFilter
_delegate
T@"<UIScenePresenter>",R,N,V_presenter
T@"SBSceneHandle",R,N,V_sceneHandle
T{CGSize=dd},R,N,V_referenceSize
Tq,R,N,V_orientation
T@"<SBScenePlaceholderContentViewProvider>",&,N,V_placeholderContentProvider
T@"<SBScenePlaceholderContentContext>",&,N,V_placeholderContentContext
TB,N,V_placeholderContentEnabled
Tq,R,N,V_requestedDisplayMode
Tq,R,N,V_effectiveDisplayMode
T@"NSString",C,N,V_minificationFilter
TB,N,V_rendersAsynchronously
TB,N,V_resizesHostedContext
Tq,R,N
T@"<SBSceneViewDelegate>",W,N,V_delegate
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_customContentView
sharedInstance
_alertItemsController
activateAlertItem:
undimsScreen
unlocksScreen
dismissOnLock
didPlayPresentationSound
sound
playInEvironments:completion:
deactivateForReason:
deactivateAlertItem:reason:
imageWithContentsOfFile:
setIconImage:
behavesSuperModally
presentationStateDidChangeFromState:toState:
_setPresented:
_clearAlertController
initWithStyleProvider:
setAlertItem:
setPreferredStyle:
_headerImage
initWithImage:
_setHeaderContentViewController:
configure:requirePasscodeForActions:
hideOnClonedDisplay
setHiddenOnClonedDisplay:
postNotificationName:object:userInfo:
_createSystemApertureElement
addElementLayoutSpecifierObserver:
alertItemDidAppear
alertItemDidDisappear
alertController
contentViewController
view
sb_hasActiveKeyboardOnScreen
mainBundle
bundleIdentifier
layoutMode
deactivateForButton
elementLayoutSpecifier:layoutModeDidChange:reason:
clientIdentifier
elementIdentifier
T@"NSString",R,C,N
lockLabel
shortLockLabel
performUnlockAction
allowMenuButtonDismissal
allowLockScreenDismissal
shouldShowInLockScreen
shouldShowInEmergencyCall
wakeDisplay
reappearsAfterLock
reappearsAfterUnlock
playPresentationSound
didFailToActivate
willActivate
didActivate
willRelockForButtonPress:
willDeactivateForReason:
didDeactivateForReason:
setIconImagePath:
forcesModalAlertAppearance
allowInLoginWindow
alertPriority
dismissesOverlaysOnLockScreen
doCleanupAfterDeactivationAnimation
_setPresentationState:
_deactivationCompleted
_alertController
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
_systemApertureElement
_existingSystemApertureElement
_noteVolumeOrLockPressed
_hasActiveKeyboardOnScreen
_didEverActivate
_displayActionButtonOnLockScreen
_publicDescription
visualStyleForAlertControllerStyle:traitCollection:descriptor:
dismiss
dismiss:
buttonDismissed
ignoreIfAlreadyDisplaying
setIgnoreIfAlreadyDisplaying:
allowInSetup
setAllowInSetup:
suppressForKeynote
setSuppressForKeynote:
pendInSetupIfNotAllowed
setPendInSetupIfNotAllowed:
pendWhileKeyBagLocked
setPendWhileKeyBagLocked:
allowedBundleIDs
setAllowedBundleIDs:
allowInCar
setAllowInCar:
allowMessageInCar
setAllowMessageInCar:
_ignoresQuietMode
_setIgnoresQuietMode:
iconImage
allowDuringTransitionAnimations
setAllowDuringTransitionAnimations:
_iconImagePath
_presentationState
_isPresented
_setHeaderImage:
_attachmentImage
_setAttachmentImage:
shouldMaskIcon
setShouldMaskIcon:
contactIdentifier
setContactIdentifier:
contentType
setContentType:
_allowedBundleIDs
_iconImage
_didEverDeactivate
_ignoreIfAlreadyDisplaying
_didPlayPresentationSound
_allowInSetup
_pendInSetupIfNotAllowed
_pendWhileKeyBagLocked
_allowInCar
_allowMessageInCar
_allowDuringTransitionAnimations
_presented
_suppressForKeynote
_shouldMaskIcon
_contactIdentifier
_contentType
T@"<SAElement>",R,N
TQ,N,S_setPresentationState:,V_presentationState
presented
TB,N,G_isPresented,S_setPresented:,V_presented
T@"UIImage",&,N,S_setHeaderImage:,V_headerImage
T@"UIImage",&,N,S_setAttachmentImage:,V_attachmentImage
TB,N,S_setIgnoresQuietMode:,V_ignoresQuietMode
T@"UIImage",&,N,SsetIconImage:,V_iconImage
iconImagePath
T@"NSString",&,N,G_iconImagePath,V_iconImagePath
TB,N,V_ignoreIfAlreadyDisplaying
TB,N,V_allowInSetup
TB,N,V_pendInSetupIfNotAllowed
TB,N,V_pendWhileKeyBagLocked
T@"NSArray",&,N,V_allowedBundleIDs
TB,N,V_suppressForKeynote
TB,N,V_allowInCar
TB,N,V_allowMessageInCar
TB,N,V_allowDuringTransitionAnimations
TB,N,V_shouldMaskIcon
T@"NSString",&,N,V_contactIdentifier
T@"NSString",&,N,V_contentType
image
size
_expectedSize
setSize:
_topMarginOffset
setPreferredContentSize:
setView:
_bottomMarginOffset
loadView
_imageView
T@"UIImage",R,N
initWithObserver:
behaviorFromObserver:
observer
didCreateScene
setDidCreateScene:
didDestroyScene
setDidDestroyScene:
didUpdateContentState
setDidUpdateContentState:
didUpdateSettingsWithDiff
setDidUpdateSettingsWithDiff:
didUpdateClientSettingsWithDiff
setDidUpdateClientSettingsWithDiff:
didUpdatePairingStatusForExternalSceneIdentifiers
setDidUpdatePairingStatusForExternalSceneIdentifiers:
_didCreateScene
_didDestroyScene
_didUpdateContentState
_didUpdateSettingsWithDiff
_didUpdateClientSettingsWithDiff
_didUpdatePairingStatusForExternalSceneIdentifiers
_observer
T@"<SBSceneHandleObserver>",R,W,N,V_observer
TB,N,V_didCreateScene
TB,N,V_didDestroyScene
TB,N,V_didUpdateContentState
TB,N,V_didUpdateSettingsWithDiff
TB,N,V_didUpdateClientSettingsWithDiff
TB,N,V_didUpdatePairingStatusForExternalSceneIdentifiers
_initWithDefinition:scene:displayIdentity:
definition
_createMonitor
_commonInit
_setScene:
identity
identifier
contentState
isPairedWithExternalSceneID:
weakObjectsHashTable
mapTableWithKeyOptions:valueOptions:
objectForKey:
_enumerateObserversWithBlock:
initWithSceneID:
sceneHandle:didReceiveAction:
_didUpdateSettingsWithDiff:previousSettings:
_didUpdateClientSettingsWithDiff:transitionContext:
_didUpdatePairingStatusForExternalSceneIdentifiers:
_didUpdateContentState:
_didCreateScene:
_didDestroyScene:
sceneMonitor:sceneWasCreated:
sceneMonitor:sceneWasDestroyed:
sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:
sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
_initWithScene:displayIdentity:
_initWithDefinition:displayIdentity:
isPairedWithExternalSceneWithIdentifier:
addActionConsumer:
removeActionConsumer:
_setSceneMonitor:
_noteSceneCreated:
_noteSceneDestroyed:
_handleSceneAction:
displayIdentity
_setDisplayIdentity:
_definition
_sceneMonitor
_manuallyControlsLifecycle
_setManuallyControlsLifecycle:
_displayIdentity
_observers
_observersToObserverBehaviors
_actionConsumers
sceneMonitor
T@"FBSceneMonitor",&,N,G_sceneMonitor,S_setSceneMonitor:,V_sceneMonitor
T@"FBSSceneDefinition",R,N,G_definition,V_definition
T@"FBSDisplayIdentity",&,N,S_setDisplayIdentity:,V_displayIdentity
manuallyControlsLifecycle
TB,N,G_manuallyControlsLifecycle,S_setManuallyControlsLifecycle:,V_manuallyControlsLifecycle
T@"FBScene",R,N
T@"FBScene",R,N,V_scene
contentReady
TB,R,N,GisContentReady
sharedApplication
interfaceOrientation
mainScreen
_referenceBounds
currentDevice
userInterfaceIdiom
idealSearchPlatterWidth
Td,R,N
disableUpdateMask
setDisableUpdateMask:
viewDidDisappear:
alertControllerDidDisappear:
title
appendString:withName:
_canShowWhileLocked
_styleProvider
alertItem
alertControllerDelegate
setAlertControllerDelegate:
_alertItem
_alertControllerDelegate
T@"SBAlertItem",W,N,V_alertItem
T@"<_SBAlertControllerDelegate>",W,N,V_alertControllerDelegate
array
componentsJoinedByString:
initWithNibName:bundle:
raise:format:
initWithActions:gestureRecognizer:
initWithCoder:
actions
reversesActions
reverseObjectEnumerator
imagePosition
initWithAction:
setImagePosition:
setTranslatesAutoresizingMaskIntoConstraints:
arrayWithArray:
initWithArrangedSubviews:
setAxis:
_updateKeylineViews
leftAnchor
constraintEqualToAnchor:
setActive:
rightAnchor
topAnchor
bottomAnchor
_handleLongPressGestureRecognizer:
initWithTarget:action:
setMinimumPressDuration:
addGestureRecognizer:
defaultConfiguration
initWithConfiguration:coordinateSpace:
viewDidAppear:
gestureRecognizer
addTarget:action:
viewWillDisappear:
removeTarget:action:
isViewLoaded
arrangedSubviews
addArrangedSubview:
actionPlatterViewControllerShouldRespondToTouches:
subviews
objectAtIndexedSubscript:
leadingAnchor
leadingContentMargin
constraintEqualToAnchor:constant:
trailingAnchor
setHeight:
state
isActive
activateWithCompletionBlock:
locationInView:
setHighlighted:withFeedbackRetargetBehavior:
action
handler
setHighlighted:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
setSystemInteractionStartIndex:
setReversesActions:
systemInteractionStartIndex
_delegateRespondsTo
_stackView
_keylinesContainerView
_feedbackRetargetBehavior
_reversesActions
_actions
_systemInteractionStartIndex
_gestureRecognizer
_imagePosition
T@"NSArray",R,C,N,V_actions
TQ,N,V_systemInteractionStartIndex
T@"UILongPressGestureRecognizer",R,W,N,V_gestureRecognizer
TB,N,V_reversesActions
Tq,N,V_imagePosition
T@"<SBUIActionPlatterViewControllerDelegate>",W,N,V_delegate
useHardwareSwitchAsOrientationLock
activationEvent
setActivationEvent:
screen
setScreen:
_screen
_activationEvent
T@"UIScreen",&,N,V_screen
Ti,N,V_activationEvent
_imageThatSuppressesAccessibilityHairlineThickening
initWithTitle:subtitle:image:badgeView:handler:
initWithTitle:subtitle:systemImageName:badgeView:handler:
initWithTitle:subtitle:image:handler:
initWithTitle:subtitle:handler:
initWithTitle:handler:
subtitle
systemImageName
badgeView
_title
_subtitle
_image
_systemImageName
_badgeView
_handler
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
T@"NSString",R,N,V_systemImageName
T@"UIView",R,N,V_badgeView
T@?,R,C,N,V_handler
pluginUserAgent
addObserver:forKeyPath:options:context:
isAvailable
_loadFlashlightLevel
setLevel:
_postLevelChangeNotification:
_storeFlashlightLevel:
_setFlashlightLevel:
_turnPowerOn
_turnPowerOff
hashTableWithOptions:
flashlightLevel
isOverheated
_updateStateWithAvailable:level:overheated:
observeValueForKeyPath:ofObject:change:context:
_postOverheatedChangeNotification:
_postAvailabilityChangeNotification:
flashlightOverheatedDidChange:
flashlightAvailabilityDidChange:
flashlightLevelDidChange:
setFlashlightLevel:withError:
turnPowerOnWithError:
turnPowerOff
standardUserDefaults
setInteger:forKey:
integerForKey:
turnFlashlightOnForReason:
turnFlashlightOffForReason:
level
warmUp
coolDown
removeAllObservers
_flashlight
_flashlightQueue
_level
_overheated
_available
available
TB,R,N,GisAvailable,V_available
overheated
TB,R,N,GisOverheated,V_overheated
TQ,N
T@"SBOrientationTransformWrapperView",&,D,N
initWithStyle:
defaultSettings
backgroundColorHint
setBackgroundColorHint:
vibrancyDisabled
setVibrancyDisabled:
_vibrancyDisabled
_backgroundColorHint
T@"UIColor",&,N,V_backgroundColorHint
TB,N,V_vibrancyDisabled
actionWithCompletion:
initWithCompletion:
error
code
initWithInfo:timeout:forResponseOnQueue:withHandler:
response
sendResponse:
sendResponseWithSuccess:
label
setLabel:
authenticationPolicy
setAuthenticationPolicy:
completion
_action
_label
_authenticationPolicy
_completion
T@?,R,C,N,V_completion
T@"NSString",C,N,V_label
Tq,N,V_authenticationPolicy
layerClass
portalLayer
T@"CAPortalLayer",R,N
_configurePortalView
sourceLayerRenderId
sourceContextId
setAllowsHitTesting:
setUserInteractionEnabled:
layerRenderingId
setSourceLayerRenderId:
setSourceContextId:
invalidateIntrinsicContentSize
preferredSize
portalView
setSourceLayerRenderingId:contextId:
setPreferredSize:
intrinsicContentSize
allowsReparentingByLayoutHost
setLayerRenderingId:
_sourceContextId
_portalView
_layerRenderingId
_preferredSize
T@"SBSystemApertureSceneElementAccessoryPortalView",R,N,V_portalView
TQ,N,V_layerRenderingId
TI,N,V_sourceContextId
T{CGSize=dd},N,V_preferredSize
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
alignmentRectInsets
sbui_rangesOfEmojiTokens:
initWithString:
clearColor
addAttributes:range:
setAttributedText:
font
setFont:
lineBreakMode
setLineBreakMode:
numberOfLines
setNumberOfLines:
textAlignment
setTextAlignment:
setTextColor:
_mt_applyVisualStyling:
mt_removeAllVisualStyling
textColor
viewForFirstBaselineLayout
viewForLastBaselineLayout
_textColor
_emojiLabel
T@"NSString",C,N
T@"UIFont",&,N
T@"UIColor",&,N
displayIfNeeded
sbui_drawEagerly
lockScreenNotificationListItemMetrics
initWithLockScreenMetrics:
_systemApertureMetrics
setSystemApertureMetrics:
sharedInstanceForEmbeddedDisplay
sensorRegionSize
minimumContinuousCornerRadius
maximumLeadingTrailingViewSize
initWithMinimum:maximum:
fixed:
initWithTop:leading:bottom:trailing:
initWithWidth:height:cornerRadius:edgeInsets:
maximumHorizontalMinimalViewSize
maximumContinuousCornerRadius
minimumExpandedSize
maximumExpandedSize
initWithObstructionSize:expandedMetricsRequest:compactMetricsRequest:minimalMetricsRequest:
nativeBounds
nativeScale
initWithWidth:height:cornerRadius:
defaultMetrics
value
setValue:
areAnimationsEnabled
_animateUsingSpringBehavior:tracking:animations:completion:
presentationValue
setInput:
_withoutAnimation:
output
velocity
_performWithoutRetargetingAnimations:
parametersForTransitionFromState:toState:
input
setOutput:
setDampingRatio:response:
setDampingRatio:response:impulse:
setTrackingDampingRatio:response:
setTrackingDampingRatio:response:impulse:
projectForDeceleration:
projectForTime:
tracking
setTracking:
_dampingRatio
_response
_impulse
_trackingDampingRatio
_trackingResponse
_trackingImpulse
_tracking
Td,N
TB,N,V_tracking
setContentOrientation:
_updateGeometry
setCounterTransformView:
isCounterTransformView
removeGestureRecognizer:
bringSubviewToFront:
containerOrientation
_referenceContainerSize
contentOrientation
setTransform:
setCenter:
setBounds:
hitTest:withEvent:
containsObject:
frame
contentViews
addContentView:
addHitTestView:
addGestureRecognizerToTransformedView:
removeGestureRecognizerFromTransformedView:
bringContentSubviewToFront:
convertPointFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertRectFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertTransformFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertPointFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertRectFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertTransformFromContentInterfaceOrientationToContainerInterfaceOrientation:
_transformedView
_contentOrientation
_containerOrientation
_hitTestViews
Tq,N,V_contentOrientation
Tq,N,V_containerOrientation
counterTransformView
TB,N,GisCounterTransformView
T@"NSArray",R,N
setAllowsGroupOpacity:
_setUnified:
_layoutGrabberView:forState:
setColor:
alphaComponent
_setDrawsAsBackdropOverlayWithBlendMode:
scale
_frameForGrabberView:forState:unified:
_transformForGrabberView:forState:
_setState:
setShouldRasterize:
setRasterizationScale:
animationDuration
animateWithDuration:animations:completion:
setState:animated:
deleteCharactersInRange:
appendFormat:
mask
setMask:
tintViewWithFrame:
insertSubview:belowSubview:
vibrantSettings
setVibrantSettings:
T@"_SBFVibrantSettings",&,N
initWithColor:
setAnimationDuration:
configureForLightStyle
setState:
color
_leftGrabberView
_rightGrabberView
_animationDuration
_state
_color
_alphaComponent
_vibrantSettings
_unified
_alphaContainerView
Tq,N,V_state
T@"UIColor",&,N,V_color
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
setAllowsEdgeAntialiasing:
isLoaded
bundlePath
load
suggestedContentInsets
appendObject:withName:skipIfNil:
legibilitySettings
appendBodySectionWithName:multilinePrefix:block:
setSuggestedContentInsets:
setLegibilitySettings:
T{UIEdgeInsets=dddd},N,VsuggestedContentInsets
T@"_UILegibilitySettings",&,N,VlegibilitySettings
T{UIEdgeInsets=dddd},D,N
T@"_UILegibilitySettings",&,D,N
activeInterfaceOrientation
_setupSubviews
_updateVisualStylingIfNecessary
willMoveToSuperview:
_invalidateVisualStyling
_updateImageViewLayoutConstraints
isHighlighted
selectionChanged
preferredContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
systemImageNamed:
setContentMode:
setImage:
setPreferredSymbolConfiguration:
setContentHuggingPriority:forAxis:
_setLayoutDebuggingIdentifier:
widthAnchor
constraintEqualToConstant:
heightAnchor
setPriority:
centerYAnchor
trailingContentMargin
_bodyLeading
firstBaselineAnchor
constraintGreaterThanOrEqualToAnchor:constant:
lastBaselineAnchor
constraintLessThanOrEqualToAnchor:constant:
deactivateConstraints:
numberWithDouble:
stopAutomaticallyUpdatingView:
visualStylingProviderForCategory:
automaticallyUpdateView:withStyle:
_interfaceOrientationIsPortrait
_textContainer
_titleLabel
_subtitleLabel
_highlightView
_imageViewLayoutConstraints
_visualStylingProviderStroke
_visualStylingProviderFill
_highlighted
T@"SBUIAction",R,N,V_action
highlighted
TB,N,GisHighlighted,V_highlighted
playSound
killSound
actionBlockForButton:
setURL:
setBundleID:
appendInteger:withName:
actionWithURL:
actionWithBundleID:
isApplicationAction
bundleID
transitionStyle
setTransitionStyle:
_bundleID
_url
T@"NSString",C,N,V_bundleID
T@"NSURL",&,N,SsetURL:,V_url
TQ,N,V_transitionStyle
permittedActionLayoutDirection
setPermittedActionLayoutDirection:
_permittedActionLayoutDirection
Tq,N,V_permittedActionLayoutDirection
newLockScreenModalView
awakeFromBundle
setVisible:
registeredWithHost
supportedAndEnabled
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
cancelPendingActivationEvent:
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
viewControllerForActivationContext:
host
setHost:
isVisible
_host
_isVisible
visible
TB,N,GisVisible,V_isVisible
T@"<SBUIPluginControllerHost>",W,N,V_host
primaryColor
getWhite:alpha:
traitCollectionWithUserInterfaceStyle:
traitCollectionWithUserInterfaceStyleCompatibleWithLegibilitySettings:
setSoundType:
setSystemSoundID:
setSoundBehavior:
setVibrationPattern:
setSongPath:
initWithType:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
initWithToneAlertConfiguration:
alertWithConfiguration:
initWithToneAlert:
setToneAlert:
setEventType:
initWithFeedbackEventType:
isPlaying:
playSound:environments:completion:
stopSound:
soundType
systemSoundID
songPath
soundBehavior
vibrationPattern
toneAlert
stringByAppendingFormat:
soundWithFeedbackEventType:
initWithSystemSoundID:behavior:vibrationPattern:
initWithSystemSoundPath:behavior:vibrationPattern:
initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:
isPlaying
stop
_completionBlock
_setCompletionBlock:
_resolvedSystemSoundID
_setResolvedSoundID:
eventType
_soundType
_systemSoundID
_soundBehavior
_vibrationPattern
_toneAlert
_songPath
_eventType
Tq,N,V_soundType
TI,N,V_systemSoundID
TI,N,S_setResolvedSoundID:,V_resolvedSystemSoundID
TQ,N,V_soundBehavior
T@"NSDictionary",&,N,V_vibrationPattern
T@"TLAlert",&,N,V_toneAlert
T@"NSString",C,N,V_songPath
Tq,N,V_eventType
_updateCornerMask
height
displayScale
heightInPixels
setMaskedCorners:
_setCornerRadius:
_visualStylingProvider
_height
Td,N,V_height
restrictedCapabilities
setRestrictedCapabilities:
presentationStyle
setPresentationStyle:
notificationBehavior
setNotificationBehavior:
elementOverrides
setElementOverrides:
presentationRegion
setPresentationRegion:
initWithAppearance:
TB,R,N,GisHidden
TQ,R,N
T@"NSArray",R,C,N
T@"SBLockScreenLegibilitySettings",R,&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
TB,N,GisHidden
T@"NSArray",C,N
T@"SBLockScreenLegibilitySettings",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
mutableCopyWithZone:
TB,N,GisHidden,Vhidden
TQ,N,VrestrictedCapabilities
Tq,N,VbackgroundStyle
Tq,N,VpresentationStyle
Tq,N,VnotificationBehavior
T@"NSArray",C,N,VelementOverrides
T@"SBLockScreenLegibilitySettings",&,N,VlegibilitySettings
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VpresentationRegion
initWithIdentifier:
setLockScreenDisableAssertionClass:
lockScreenDisableAssertionWithIdentifier:
_initWithStartView:endView:translucent:
isUserInteractionEnabled
allowsHitTesting
animationFactory
allowsGroupOpacityDuringCrossfade
adaptsAnimationFactoryTimingFunction
functionWithControlPoints::::
factoryWithTimingFunction:
animateWithFactory:options:actions:completion:
setAllowsGroupOpacityDuringCrossfade:
setAdaptsAnimationFactoryTimingFunction:
_animationFactory
_startView
_endView
_translucent
_crossfaded
_allowsGroupOpacityDuringCrossfade
_adaptsAnimationFactoryTimingFunction
T@"BSUIAnimationFactory",&,N,V_animationFactory
TB,N,V_allowsGroupOpacityDuringCrossfade
TB,N,V_adaptsAnimationFactoryTimingFunction
functionWithName:
settingsWithDuration:timingFunction:
initWithAnimationCurve:
initWithDuration:timingParameters:
_setPropertyAnimator:
addCompletion:
_configurePropertyAnimatorIfNecessaryForChangeToUserInterfaceStyle:
coronaAnimationController:willAnimateCoronaTransitionWithAnimator:
startAnimation
animationSettingsForTransitionToStyle:
addParticipant:
removeParticipant:
coronaDidChange:
_propertyAnimator
_participants
propertyAnimator
T@"UIViewPropertyAnimator",&,N,G_propertyAnimator,S_setPropertyAnimator:,V_propertyAnimator
sb_coronaAnimationController
sharedInstanceForStyle:
pointSize
defaultFontSize
configurationWithPointSize:weight:scale:
systemImageNamed:withConfiguration:
imageWithTintColor:renderingMode:
updateForChangedSettings:options:image:strength:
setTintColor:
_newDialViewConfiguredForSettingsAndFont
setStrength:
sb_isEqualToLegibilitySettings:
T@"_UILegibilitySettings",&,N
strength
initWithSymbolFont:
_strength
_legibilitySettings
_dialView
_font
T@"UIFont",&,N,V_font
Td,N,V_strength
T@"_UILegibilitySettings",&,N,V_legibilitySettings
viewCanBeDisplayed
showStatusBar
showDateView
hasCustomSubtitle
customSubtitleText
showDate
allowsSiri
allowsLockScreenCamera
allowsUnlocking
allowsLogout
wantsMesaAutoUnlock
allowsLockScreenMediaControls
allowsControlCenter
allowsScreenshots
overlayStyle
pluginController:updateAppearance:
style
secondaryColor
shadowColor
initWithStyle:primaryColor:secondaryColor:shadowColor:
legibilitySettingsOverridesVibrancy
isContentViewWhiteUnderSlideToUnlockText
_updateAppearanceAndNotify:
userInfo
setActivationContext:
setDeactivationContext:
purgeView
setPluginAgent:
slideToUnlockText
bundleIDForUnlock
unlockAnimationStyleForDestinationApp:
shouldDisableOnUnlock
disable
shouldDisableOnRelock
handleMenuButtonTap
handleLockButtonPressed
handleVolumeUpButtonPressed
handleVolumeDownButtonPressed
handleHeadsetButtonPressed:
enableTransitionBlock
sentinelWithExceptionReason:
signal
settingsWithDuration:
viewIfLoaded
statusBarOrientation
deactivatePluginController:
viewWantsOverlayLayout
disablesAwayItemsCompletely
shouldAutoHideNotifications
enableLockScreenBundle:withContext:
enableBundleNamed:activationContext:
disableLockScreenBundle:withContext:
disableBundleNamed:deactivationContext:
enableBundleNamed:
disableBundleNamed:
pluginAnimatesAppearanceTransition:
pluginAnimateAppearanceTransition:withCompletion:
pluginAgent
pluginPriority
pluginViewController
pluginAppearance
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
updateForPresentation:
pluginUnlockAction
T@"<SBLockScreenPluginAgent>",W,N
T@"UIViewController<SBLockScreenPluginViewController>",R,N
T@"<SBLockScreenPluginAppearance>",R,N
T@"SBLockScreenPluginAction",R,&,N
setViewCanBeDisplayed:
setOrientation:
setFullscreen:animated:
setFullscreen:duration:
shouldShowLockStatusBarTime
allowsTimer
allowsLockScreenHint
animateResumingToApplicationWithIdentifier:
showBatteryChargingText
customSubtitleColor
customHeaderView
allowsPhotoSlideshow
handleMenuButtonDoubleTap
wantsMenuButtonHeldEvent
handleMenuButtonHeld
setNeedsLegibilityAppearanceUpdate
_agent
_appearance
_viewCanBeDisplayed
TB,N,V_viewCanBeDisplayed
T@"<SBLockScreenPluginAgent>",W,N,V_agent
isEmergencyDialerAction
_initWithDomain:
stringWithUTF8String:
_bindProperty:withDefaultKey:toDefaultValue:options:
indigoConfigurationFlagsBitmask
defaults
_bindAndRegisterDefaults
indigoConfigurationFlagOne
indigoConfigurationFlagTwo
indigoConfigurationFlagThree
Tq,R,D,N
setName:
setUserInfo:
setProcess:
setAuxiliaryAnimation:
appendDictionarySection:withName:skipIfEmpty:
contextWithName:
name
process
auxiliaryAnimation
setObserver:
_name
_userInfo
_process
_auxiliaryAnimation
T@"FBProcess<FBSProcess>",&,N,V_process
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
T@"<SBLockScreenPluginLifecycleObserver>",&,N,V_observer
T@?,C,N,V_auxiliaryAnimation
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v24@0:8d16
q16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@?16
v24@0:8@16
v28@0:8q16B24
v40@0:8q16q24d32
d24@0:8q16
B24@0:8q16
v32@0:8d16d24
@32@0:8d16d24
d40@0:8d16d24d32
@"BSUIBackdropView"
@"UIView"
@"UIColor"
@"MTMaterialView"
v20@0:8B16
@"UIView"16@0:8
@48@0:8@16@24@32@?40
@"NSString"
@"FBScene"
@"<UIScenePresenter>"
@24@0:8^{_NSZone=}16
@24@0:8@16
@"NSMutableDictionary"
v32@0:8@16@24
v32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@"SBSceneHandle"16@"FBScene"24
v32@0:8@"SBSceneHandle"16q24
v40@0:8@"SBSceneHandle"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v40@0:8@"SBSceneHandle"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v32@0:8@"SBSceneHandle"16@"NSSet"24
@24@0:8@?16
@"TUDialRequest"
@24@0:8q16
v24@0:8@"<SBScenePlaceholderContentViewProvider>"16
@48@0:8@16{CGSize=dd}24q40
@56@0:8@16{CGSize=dd}24q40@48
v40@0:8q16@24@?32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v40@0:8{CGSize=dd}16q32
v32@0:8@16@?24
q24@0:8q16
v64@0:8q16@24q32@40@48@?56
{CGSize=dd}16@0:8
@"SBSceneHandle"
{CGSize="width"d"height"d}
@"<SBScenePlaceholderContentContext>"
@"UIView<SBScenePlaceholderContentView>"
@"UIView<UISceneSnapshotPresentation>"
@"UIView<UIScenePresentation>"
@"NSCountedSet"
@"<SBScenePlaceholderContentViewProvider>"
@"<SBSceneViewDelegate>"
v40@0:8@16q24q32
v40@0:8@"<SAUILayoutSpecifying><SAUILayoutObservable>"16q24q32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8B16B20
v20@0:8i16
i16@0:8
v24@0:8Q16
v32@0:8Q16Q24
@24@0:8B16B20
@40@0:8q16@24@32
@"_SBAlertController"
@"<SAElement>"
@"NSArray"
@"UIImage"
@"UIImageView"
@"<SBSceneHandleObserver>"
v32@0:8@"FBSceneMonitor"16@"FBScene"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v32@0:8@"FBSceneMonitor"16@"NSSet"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
@32@0:8@16@24
@40@0:8@16@24@32
@"FBSSceneDefinition"
@"FBSDisplayIdentity"
@"FBSceneMonitor"
@"NSHashTable"
@"NSMapTable"
@"SBAlertItem"
@"<_SBAlertControllerDelegate>"
@"NSObject<UIAlertControllerVisualStyleProviding>"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
{?="actionPlatterViewControllerShouldRespondToTouches"b1}
@"UIStackView"
@"UISelectionFeedbackGenerator"
@"UILongPressGestureRecognizer"
@"<SBUIActionPlatterViewControllerDelegate>"
@"UIScreen"
@56@0:8@16@24@32@40@?48
@40@0:8@16@24@?32
@32@0:8@16@?24
@?16@0:8
v48@0:8@16@24@32^v40
v32@0:8B16Q20B28
v20@0:8f16
@"AVFlashlight"
@"NSObject<OS_dispatch_queue>"
@"BSAction"
v28@0:8Q16I24
v32@0:8{CGSize=dd}16
I16@0:8
v20@0:8I16
@"SBSystemApertureSceneElementAccessoryPortalView"
@"UILabel"
@24@0:8^@16
{?=ddBBddddddd}24@0:8i16i20
v40@0:8d16d24d32
d24@0:8d16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGAffineTransform=dddddd}64@0:8{CGAffineTransform=dddddd}16
@40@0:8{CGPoint=dd}16@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"_SBOrientationTransformedContentView"
@"NSMutableArray"
v24@0:8@"UIView"16
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
{CGAffineTransform=dddddd}32@0:8@16q24
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16q24B32
B20@0:8B16
@"_SBFVibrantSettings"
v48@0:8{UIEdgeInsets=dddd}16
@"_UILegibilitySettings"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8B16@20
@"SBUIActionViewLabel"
@"MTVisualStylingProvider"
@"SBUIAction"
@?24@0:8@16
@"NSURL"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20^v24
B24@0:8@?16
B20@0:8i16
@"<SBUIPluginControllerHost>"
@36@0:8I16Q20@28
@40@0:8@16Q24@32
@48@0:8q16@24@32@40
B32@0:8q16@?24
@"NSDictionary"
@"TLAlert"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSArray"16@0:8
@"SBLockScreenLegibilitySettings"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"SBLockScreenLegibilitySettings"16
@"SBLockScreenLegibilitySettings"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8#16
@36@0:8@16@24B32
@"BSUIAnimationFactory"
@"UIViewPropertyAnimator"
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"SBUILegibilityView"
@"UIFont"
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16d20
Q24@0:8@16
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginMutableAppearanceContext"
@"FBProcess<FBSProcess>"
@"<SBLockScreenPluginLifecycleObserver>"
?ffffff
333333
?ffffff
?UUUUUU
333333
(,0HL
sbuiBackgroundViewLuminance
v16@?0@"UIView"8
None
Boot
TransientOverlay
Logout
Plugin
Blocked
Keyboard
LostMode
IdleTimer
Restoring
Activation
LiftToWake
LockButton
RemoteLock
SOSDismiss
PowerDownDismiss
SmartCover
Notification
Authentication
NotificationCenter
Siri
AccessoryAttach
CoverGesture
Mesa
Touch
HomeButton
OtherButton
ACPowerChange
ExternalRequest
ApplicationRequest
SpringBoardRequest
SystemServiceRequest
ChargingAccessoryChange
CoverSheet
ControlCenter
CameraButton
MouseButton
WebClipService
Accessibility
AccessoryAttached
SessionAlert
AlwaysOnInactiveState
SwipeToWake
SystemApertureClientRequest
Dismiss
Authenticate
Authenticate and Dismiss
(inherit)
Default
DarkenSourceOver
BlurOnly
Light
LightWithTint
MediumDark
Dark
Passcode
v8@?0
SBUIExpandedNotificationContainerViewProvider.m
Invalid parameter not satisfying: %@
requester
containerView
[reason length] > 0
<%@: %p; requester: %@; reason: %@; valid: %@>
Attempt to invalidate invalid instance
default
v16@?0@"UIMutableScenePresentationContext"8
UIMutableApplicationSceneSettings
v16@?0@"FBSMutableSceneSettings"8
SBSceneHandleBlockObserver.m
Cannot deallocate a SBSceneHandleBlockObserver without invalidating first.
element
hidden
text
CustomContent
PlaceholderContent
LiveSnapshot
LiveContent
SBSceneView.m
sceneHandle
SBApplicationSceneView
%@:%p-SBApplicationSceneView:%p-%llu
%@-%p-%llu
sceneId
requestedDisplayMode
effectiveDisplayMode
liveContentDisableAssertions
this object has already been invalidated
reason
SBSceneView.DisableLiveContent
v16@?0@"BSSimpleAssertion"8
zPosition
bogus reference size
bogus interface orientation
Expected views to match (toView: %@, toMode: %@, toDisplayModeView: %@).
v12@?0B8
Attempting to _configureLiveHostView for %@, which is already invalidated.
SBAlertItemDidPrepareNewAlertControllerNotification
Unknown
Appearing
Appeared
Disappearing
Disappeared
Lock
Pended
User Dismissed
Button Pressed
Auto Dismiss
Generic
Unlock
SBAlertItemsController
presented
SBAlertItem.m
image
SBSceneHandle.m
init is unavailable for SBSceneHandle.
Scene or definition must be provided.
Given scene and monitor'd scene do not match.
Required scene wasn't found from scene handle: %@
v24@?0@"<SBSceneHandleObserver>"8@"_SBSceneHandleObserverBehavior"16
Cannot have scene creation/destruction invoked when using a scene monitor for lifecycle events.
Scene destroyed did not match the scene being tracked.
sceneID
scenePointer
scene
A scene is required for the content host manager state to change.
SBUISearchUtilities.m
Do not instantiate this class
title
StatusBar
TimeAndDate
Subtitle
v28@?0Q8i16^B20
ScreenOff
VolumeUp
VolumeDown
HeadsetButton
HeadsetButtonHeld
Legible
Undefined
Overlay
Normal
Stationary
Disabled
Temporary
Exclusive
Camera
TouchID
MediaControls
TodayCenter
Screenshot
%s is not a valid initializer. You must call -[%@ initWithActions:gestureRecognizer:].
-[SBUIActionPlatterViewController initWithNibName:bundle:]
%@ does not support unarchiving from a nib.
SBUIRingerSwitchBehaviorDidChangeNotification
ringer-switch
SBDeviceLockStateChangedNotification
SBLockButtonPressedNotification
SBMenuButtonPressedNotification
SBVolumeChangedNotification
SBApplicationNetworkFlagsChangedNotification
SBHeadsetButtonUpNotification
SBActiveCallStateChangedNotification
SBRingerChangedNotification
SBIncomingCallPendingNotification
SBCallCountChangedNotification
SBTelephonyDaemonRestartNotification
SBUserEventOccurredNotification
SBHomescreenIconsDidAppearNotification
SBHomescreenIconsWillAppearNotification
SBWiFiDeviceAttachedNotification
SBProximityDidChangeNotification
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
SBFeaturesShouldBeLockedForRemoteLockNotification
SBBannerWillAnimateRevealNotification
SBBannerWillAnimateDismissalNotification
SBOrientationLockChangedNotification
SBAirplaneModeControllerWillProcessAirplaneModeChangeNotification
SBAirplaneModeControllerAirplaneModeDidChangeNotification
SBAirplaneModeControllerDidProcessAirplaneModeChangeNotification
SBTelephonyManagerWillProcessAirplaneModeChangeNotification
SBTelephonyManagerAirplaneModeDidChangeNotification
SBTelephonyManagerDidProcessAirplaneModeChangeNotification
SBNetworkTetheringStateChangedNotification
SBWifiManagerPowerStateDidChangeNotification
SBWifiManagerCurrentDeviceDidChangeNotification
SBWifiManagerDevicePresenceDidChangeNotification
SBBacklightAboutToUndimNotification
SBBacklightResetLockScreenIdleTimerNotification
SBBacklightLevelChangedNotification
SBBacklightFadeFinishedNotification
SBLiftToWakeGestureDetectedNotification
SBBacklightWillTurnOnWhileUILockedNotification
SBBacklightChangeSourceKey
SBBacklightOldFactorKey
SBBacklightNewFactorKey
kSBNotificationKeyState
kSBNotificationKeyDisplayIdentifier
kSBNotificationKeyPreferenceChangedKey
kSBNotificationKeyHeadsetButtonLongPress
kSBNotificationKeyBundleIdentifier
kSBNotificationKeyLocalNotification
kSBNotificationKeyFrame
kSBNotificationKeyAnimationDuration
%s is not a valid initializer. You must call -[%@ initWithTitle:subtitle:image:badgeView:handler:].
-[SBUIAction init]
SBUILaunchOptionKeyPNGLess
SBUILaunchOptionKeyAllowUnlock
available
overheated
flashlightLevel
com.apple.ControlCenter.FlashlightModule.AVFlashlight
com.apple.ControlCenter
Flashlight
FlashlightLevel
v16@?0@"BSActionResponse"8
H:|[label]|
label
V:|[label]|
@16@?0@"NSArray"8
H:|[emojiLabel]|
emojiLabel
V:|[emojiLabel]|
v40@?0^{__EmojiTokenWrapper=}8{?=qq}16^B32
hasDrawn
container
content
; state: %@>
[Invalid]
SBUIChevronViewStateUp
SBUIChevronViewStateNone
SBUIChevronViewStateDown
com.apple.SpringBoardUIFramework
com.apple.springboard-ui.client
XCTestConfiguration
SearchUI
SpringBoardUI.m
This process should not be linking or loading SpringBoardUI.framework (<rdar://problem/26143166>)
suggestedContentInsets
legibilitySettings
%s is not a valid initializer. You must call -[%@ initWithAction:].
-[SBUIActionView initWithFrame:]
titleLabel
subtitleLabel
@"NSLayoutConstraint"20@?0@"NSLayoutConstraint"8f16
H:|-(leadingContentOffset)-[imageView]-(leadingContentOffset)-[textContainer]-(trailingContentOffset)-|
trailingContentOffset
leadingContentOffset
imageView
textContainer
bundleID
transitionStyle
CSModalView
SBUIPluginVisibilityDidChangeNotification
SBUIPluginActivationSettingsDidChangeNotification
__bundleId
__supportsCarFullScreen
WiredMic
BTHeadset
MotionGesture
Voice
Continuity
SBSoundController
SystemSound
   hasCompletionBlock: %@
   SoundID: %lu
   Path: %@
 Behavior: %lu
   Vibration Pattern: %@
ToneAlert
   hasCompletionBlock: %@
    Tone Alert: %@
Feedback
   eventType: %ld
Ringtone (deprecated)
AVItem (deprecated)
Song (deprecated)
{  SoundType: %@%@
backgroundStyle
presentationStyle
notificationBehavior
presentationRegion
restrictions
elementOverrides
v16@?0q8
timer
SBAwayViewPluginActivationReasonKey
SBAwayViewPluginActivatingForRemoteEvent
Plugin %@ did not call transition completion block
UIRemoteVC
Legibility
com.apple.indigo
indigoConfigurationFlagsBitmask
IndigoConfigurationFlags
name
process
userInfo
Instantiated new expanded notification container view assertion: %{public}@
Implicitly invalidating expanded notification container view assertion due to deallocation: %{public}@
Invalidating expanded notification container view assertion: %{public}@
<%p> Presentation state changed to %{public}@
[Flashlight Controller] On: %@
[Flashlight Controller] Off: %@
Error setting flashlight level: %@
Error turning on flashlight power: %@
Allowing SpringBoardUI.framework to load because SearchUI.framework is loaded. This will become a hard assert once <rdar://problem/29408996> is fixed.
This process should not be linking or loading SpringBoardUI.framework
SBUIBackgroundView
SBUIBackgroundStyleTransitioning
NSObject
SBUIWallpaperOverlay
SBUIPluginAppearanceContext
SBUIExpandedNotificationContainerViewProvider
NCContainerViewProviding
BSInvalidatable
SBSystemApertureSceneElementScenePresenterView
_SBSceneHandleObserverToken
SBSceneHandleObserverToken
NSCopying
SBSceneHandleBlockObserver
SBSceneHandleObserver
SBLockScreenPluginCallAction
SBLockScreenElementOverride
SBSceneView
SBScenePlaceholderContentViewProviderDelegate
SBAlertItem
SAUILayoutObserving
BSDescriptionProviding
SAElementIdentifying
_SBAlertItemHeaderViewController
_SBSceneHandleObserverBehavior
SBSceneHandle
FBSceneMonitorDelegate
FBSceneObserver
SBUISearchUtilities
_SBAlertController
SBUIActionPlatterViewController
UIGestureRecognizerDelegate
SBUIPluginActivationContext
SBUIAction
SBUIFlashlightController
SBOrientationTransformWrapperViewController
SBLockScreenLegibilitySettings
SBLockScreenPluginAction
SBSystemApertureSceneElementAccessoryPortalView
SBSystemApertureSceneElementAccessoryView
SBUIActionViewLabel
SBUIEmojiAdditions
SBUIAdditions
SBUILiveActivityMetrics
SBUIViewFloatSpringProperty
UIViewSpringAnimationBehaviorDescribing
SBOrientationTransformWrapperView
_SBOrientationTransformedContentView
SBUIChevronView
_SBFVibrantView
SpringBoardUI
SBLockScreenPluginPresentation
SBMutableLockScreenPluginPresentation
SBUIActionView
SBUIUtilities
SBLockScreenPluginApplicationAction
SBAlertControllerVisualStyle
SBLockScreenModalViewFactory
SBUIPluginController
SBPluginBundleController
BSPluginBundleController
SBUISound
SBUIActionKeylineView
SBLockScreenPluginAppearanceContext
SBLockScreenPluginMutableAppearance
SBLockScreenPluginAppearance
NSMutableCopying
SBLockScreenPluginMutableAppearanceContext
SBUILockScreenDisableAssertion
SBCrossfadeView
SBUICoronaAnimationController
SBUICoronaAnimationControllerAdditions
SBLockScreenTimerDialView
SBUILegibility
SBUIOptionalLegibility
SBAwayViewPluginController
SBLockScreenPluginViewController
SBLockScreenPluginController
SBLockScreenPluginEmergencyDialerAction
SBExternalIndigoDefaults
SBLockScreenPluginContext
bringSubviewToFront:
hasDifferentColorAppearanceComparedToTraitCollection:
isEqualToString:
constraintLessThanOrEqualToAnchor:constant:
postNotificationName:object:userInfo:
initWithDuration:timingParameters:
sceneViewPresentationPriority:
setAxis:
newSnapshotContext
settingsWithDuration:
useHardwareSwitchAsOrientationLock
sourceLayerRenderId
flashlightAvailabilityDidChange:
length
build
appendObject:withName:skipIfNil:
constraintsWithVisualFormat:options:metrics:views:
reverseObjectEnumerator
addArrangedSubview:
setBackgroundColor:
appendPointer:withName:
allowsHitTesting
settingsWithDuration:timingFunction:
flashlightLevel
_imageThatSuppressesAccessibilityHairlineThickening
standardUserDefaults
builderWithObject:
initWithFormat:
setDisableUpdateMask:
preferredContentSizeCategory
setPriority:
isHiddenOrHasHiddenAncestor
shadowColor
addAttributes:range:
appendString:withName:
hashTableWithOptions:
secondaryColor
preferredFontForTextStyle:compatibleWithTraitCollection:
userInterfaceIdiom
startAnimation
sharedApplication
flashlightLevelDidChange:
bundleForClass:
deactivatePluginController:
rightAnchor
initWithTop:leading:bottom:trailing:
locationInView:
defaultCenter
containsObject:
tintViewWithFrame:
appendString:withName:skipIfEmpty:
addCompletion:
selectionChanged
userInterfaceStyle
setTintColor:
setRasterizationScale:
sendResponse:
initWithFrame:privateStyle:
sb_hasActiveKeyboardOnScreen
numberWithDouble:
initWithType:
appendSuper
sendSubviewToBack:
numberWithInteger:
defaultConfiguration
isLoaded
disableLockScreenBundle:withContext:
bundleIdentifier
mainBundle
heightAnchor
disableUpdateMask
addGestureRecognizer:
sharedInstanceForEmbeddedDisplay
statusBarOrientation
setToneIdentifier:
setBlurRadius:
value
setRenderingMode:
setMask:
contentViewController
objectAtIndexedSubscript:
sensorRegionSize
areAnimationsEnabled
sb_isEqualToLegibilitySettings:
initWithWidth:height:cornerRadius:
initWithIdentifier:forReason:invalidationBlock:
addObject:
velocity
_referenceBounds
mainScreen
frame
topAnchor
setMaskedCorners:
setFlashlightLevel:withError:
isPairedWithExternalSceneID:
sharedInstanceForStyle:
arrangedSubviews
copy
bundlePath
objectForKey:
setTopic:
initWithWidth:height:cornerRadius:edgeInsets:
mapTableWithKeyOptions:valueOptions:
functionWithControlPoints::::
stopAutomaticallyUpdatingView:
trailingAnchor
defaultPresentationContext
identifier
array
defaultFontSize
sentinelWithExceptionReason:
objectForKeyedSubscript:
setTransform:
isPlaying:
insertSubview:aboveSubview:
stopSound:
scale
setMinimumPressDuration:
alphaComponent
addObserver:forKeyPath:options:context:
centerYAnchor
initWithInfo:timeout:forResponseOnQueue:withHandler:
functionWithName:
clearColor
setSaturationDeltaFactor:
coronaAnimationController:willAnimateCoronaTransitionWithAnimator:
displayIfNeeded
identity
arrayWithArray:
mask
presentationValue
insertSubview:atIndex:
count
setActive:
stringByAppendingFormat:
addObserver:selector:name:object:
materialViewWithRecipeNamed:inBundle:options:initialWeighting:scaleAdjustment:
isUserInteractionEnabled
setGrayscaleTintAlpha:
_bindProperty:withDefaultKey:toDefaultValue:options:
traitCollection
animateWithDuration:animations:completion:
stringWithFormat:
presentationView
arrayWithObjects:count:
setClipsSubviews:
setTranslatesAutoresizingMaskIntoConstraints:
countByEnumeratingWithState:objects:count:
setNeedsLayout
animateWithFactory:actions:completion:
code
initWithLockScreenMetrics:
addSubview:
colorWithAlphaComponent:
setGrayscaleTintLevel:
insertSubview:belowSubview:
_bodyLeading
getWhite:alpha:
setShouldRasterize:
initWithMinimum:maximum:
setClipsToBounds:
setSize:
maximumContinuousCornerRadius
isViewLoaded
traitCollectionWithPreferredContentSizeCategory:
integerForKey:
createPresenterWithIdentifier:
automaticallyUpdateView:withStyle:
grayscaleTintAlpha
viewIfLoaded
primaryColor
displayScale
colorWithRed:green:blue:alpha:
setAllowsEdgeAntialiasing:
_setCornerRadius:
stringWithUTF8String:
backgroundColorWhileHosting
animateWithFactory:options:actions:completion:
addTarget:action:
imageWithContentsOfFile:
maximumExpandedSize
grayscaleTintLevel
setAllowsGroupBlending:
createPresenterWithIdentifier:priority:
_setDrawsAsBackdropOverlayWithBlendMode:
deleteCharactersInRange:
traitCollectionWithUserInterfaceStyle:
interfaceOrientation
colorWithWhite:alpha:
transitionIncrementallyToSettings:weighting:
sceneHandle:didReceiveAction:
_animateUsingSpringBehavior:tracking:animations:completion:
style
setColorTintAlpha:
raise:format:
setUserInteractionEnabled:
visualStylingProviderForCategory:
lastBaselineAnchor
initWithObstructionSize:expandedMetricsRequest:compactMetricsRequest:minimalMetricsRequest:
setObject:forKey:
createSnapshotWithContext:
maximumHorizontalMinimalViewSize
setUserInterfaceStyle:
transitionToSettings:
setAllowsGroupOpacity:
imageWithTintColor:renderingMode:
_setHeaderContentViewController:
removeAllObjects
layer
setCompositingFilter:
subviews
setObject:forKeyedSubscript:
handleFailureInMethod:object:file:lineNumber:description:
alertControllerDidDisappear:
performWithoutAnimation:
signal
maximumLeadingTrailingViewSize
size
weakObjectsHashTable
componentsJoinedByString:
removeFromSuperview
turnPowerOff
minimumContinuousCornerRadius
setAllowsHitTesting:
setValue:
setAlpha:
invalidateIntrinsicContentSize
whiteColor
_setLayoutDebuggingIdentifier:
setOpaque:
appendArraySection:withName:skipIfEmpty:
enableLockScreenBundle:withContext:
initWithSceneID:
layoutIfNeeded
isActive
turnPowerOnWithError:
minimumExpandedSize
snapshotPresentationForSnapshot:
configurationWithPointSize:weight:scale:
setSourceLayerRenderId:
currentDevice
dictionaryWithObjects:forKeys:count:
uiPresentationManager
removeGestureRecognizer:
appendBodySectionWithName:multilinePrefix:block:
widthAnchor
setContentHuggingPriority:forAxis:
activate
removeObject:
playSound:environments:completion:
layoutMode
error
currentHandler
setAppearanceStyle:
initWithString:
appendBool:withName:
setVibrationIdentifier:
modifyPresentationContext:
factoryWithDuration:
setContentMode:
window
alertWithConfiguration:
setPreferredContentSize:
initWithAnimationCurve:
removeObjectForKey:
superview
constraintEqualToAnchor:
initWithStyle:
pluginController:updateAppearance:
leadingAnchor
setPreferredStyle:
setAttributedText:
allObjects
setView:
constraintEqualToAnchor:constant:
blackColor
setCornerCurve:
initWithArrangedSubviews:
setImage:
appendDictionarySection:withName:skipIfEmpty:
factoryWithTimingFunction:
activateConstraints:
appendFormat:
initWithStyle:primaryColor:secondaryColor:shadowColor:
setPreferredSymbolConfiguration:
filterWithType:
allValues
setWithObject:
setCornerRadius:
bottomAnchor
pointSize
leftAnchor
removeTarget:action:
nativeBounds
activateWithCompletionBlock:
setAutoresizingMask:
isDescendantOfView:
deactivateAlertItem:reason:
setSystemApertureMetrics:
constraintEqualToConstant:
sceneView:requestsPlaceholderContentViewWithContext:
settingsForPrivateStyle:
_performWithoutRetargetingAnimations:
appendInteger:withName:
initWithTarget:action:
nativeScale
systemImageNamed:
bounds
initWithConfiguration:coordinateSpace:
response
firstBaselineAnchor
appendObject:withName:
constraintGreaterThanOrEqualToAnchor:constant:
activeInterfaceOrientation
updateForChangedSettings:options:image:strength:
setInteger:forKey:
updateSettingsWithBlock:
deactivateConstraints:
sceneViewPresentationIdentifier:
systemImageNamed:withConfiguration:
fixed:
setPresentedLayerTypes:
initWithFrame:
_reduceTransparencyEnabledStateDidChange:
layoutSubviews
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginTransitionToBackgroundStyle:
updateBackgroundStyleTransitionProgress:
completeTransitionToBackgroundStyle:
backgroundStyle
setBackgroundStyle:
isTransitioningBackgroundStyle
Tq,N
transitioningBackgroundStyle
TB,R,N,GisTransitioningBackgroundStyle
_setContinuousCornerRadius:
modifyAllViewsWithChanges:
groupName
setGroupName:
backdropView
setReduceTransparencyBackingColor:
_updateReduceTransparencyTintingWithProgressWeighting:
_updateReduceTransparencyTinting
_updateAppearanceForBackgroundStyle:transitionToSettings:
_updateAppearanceForTransitionFromStyle:toStyle:withProgress:
_darkenValueForBackgroundStyle:
_tintColorAlphaForBackgroundStyle:
_tintValueForBackgroundStyle:
_luminanceValueForBackgroundStyle:
_lightenSourceOverValueForBackgroundStyle:
_shouldApplyReducedTransparencyTintForBackgroundStyle:
_reducedTransparencyValueForBackgroundStyle:
_darkenWithProgress:
_tintWithProgress:backgroundColorAlpha:
_reduceTransparencyWithProgress:
_lightenSourceOverWithProgress:
_luminanceWithProgress:
_backgroundColorForDarkenAlpha:andProgress:
_valueFromStart:toEnd:withFraction:
.cxx_destruct
_style
_transitionStyle
_transitioning
_progress
_backdropView
_isReducedTransparencyEnabled
_reduceTransparencyView
_reduceTransparencyTintingView
_sourceOverView
_darkenSourceOverView
_tintView
_lightenSourceOverView
_reduceTransparencyBackingColor
_luminanceView
T@"NSString",&,N
Tq,N,V_style
TB,R,N,GisTransitioningBackgroundStyle,V_transitioning
hideOtherWindowsDuringAppearance
setHideOtherWindowsDuringAppearance:
_hideOtherWindowsDuringAppearance
TB,N,V_hideOtherWindowsDuringAppearance
init
dealloc
invalidate
containerView
T@"UIView",R,W,N
initWithRequester:containerView:reason:invalidationBlock:
isValid
requester
reason
_invalidationBlock
_invalidated
_containerView
_requester
_reason
T@,R,W,N,V_requester
T@"NSString",R,C,N,V_reason
valid
TB,R,N,GisValid
T@"UIView",R,W,N,V_containerView
traitCollectionDidChange:
setScene:
scene
scenePresenter
sceneContentView
_scene
_scenePresenter
_sceneContentView
T@"<UIScenePresenter>",R,N,V_scenePresenter
T@"UIView",R,N,V_sceneContentView
T@"FBScene",&,N,V_scene
copyWithZone:
initWithOwner:
owner
_owner
T@"NSMutableDictionary",R,W,N,V_owner
sceneHandle:didCreateScene:
sceneHandle:didDestroyScene:
sceneHandle:didUpdateContentState:
sceneHandle:didUpdateSettingsWithDiff:previousSettings:
sceneHandle:didUpdateClientSettingsWithDiff:transitionContext:
sceneHandle:didUpdatePairingStatusForExternalSceneIdentifiers:
observeCreate:
observeDestroy:
observeDidUpdateContentState:
observeDidUpdateSettings:
observeDidUpdateClientSettings:
observeDidUpdatePairingStatusForExternalIdentifiers:
removeObserverForToken:
_createBlocks
_destroyBlocks
_didUpdateContentStateBlocks
_didUpdateSettingsBlocks
_didUpdateClientSettingsBlocks
_didUpdatePairingStatusBlocks
initWithURL:
isCallAction
_dialRequest
T@"NSURL",R,D,N
overrideForElement:
overrideForHiddenElement:
succinctDescription
succinctDescriptionBuilder
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
element
setElement:
isHidden
setHidden:
text
setText:
_hidden
_element
_text
Tq,N,V_element
hidden
TB,N,GisHidden,V_hidden
T@"NSString",C,N,V_text
statusBarStyle
_shouldAnimatePropertyWithKey:
setContainerOrientation:
sceneView:changedPreferredStatusBarStyleTo:
animationFactoryForImplicitTransitionFromMode:toMode:defaultFactory:
defaultDisplayModeAnimationFactory
placeholderContentViewProviderContentDidUpdate:
initWithSceneHandle:referenceSize:orientation:
initWithSceneHandle:referenceSize:orientation:hostRequester:
setCustomContentView:
setBackgroundView:
setPlaceholderContentProvider:
setPlaceholderContentContext:
setPlaceholderContentEnabled:
setMinificationFilter:
setRendersAsynchronously:
setResizesHostedContext:
setDisplayMode:animationFactory:completion:
newSnapshot
acquireLiveContentDisableAssertionForReason:
preferredStatusBarStyle
sizeThatFits:
_refresh
_configureSceneSnapshotContext:
_configureSceneLiveHostView:
_invalidateSceneLiveHostView:
_configureSceneLiveSnapshotView:
_representsTranslucentContent
_layoutLiveHostView:
_layoutLiveSnapshotView:
_wantsBlackBackground
_contentContainerEdgeInsets
_contentContainerCornerRadius
_modifyPresentationContext:
_updateReferenceSize:andOrientation:
_containerContentWrapperInterfaceOrientationChangedTo:
_sceneContentContainerView
_setOrientation:
_shouldObserveSceneHostContentState
_enableHostingIfPossible
_invalidateHostPresenter
_evaluateEffectiveDisplayModeWithAnimationFactory:completion:
_bestDisplayModeLessThanMode:
_viewForDisplayMode:
_transitionFromDisplayMode:showingView:toDisplayMode:showingView:withAnimationFactory:completion:
_shouldViewBeInHierarchyForTransition:
_addContentLikeViewToHierarchyForTransitionIfPossible:
_transitionViewForHostView
_configureViewForEffectiveDisplayMode:
_placeholderVisibilityChanged
_configurePlaceholderContentView
_configureLiveSnapshotView
_configureLiveHostView
_updateLiveViewContainment
_updateLiveContentRendering
_configureBackgroundColorForLiveSnapshot:
_updateBackgroundColor
_reloadPlaceholderContentIfNecessary
_clearSnapshotViews
_hotSwapPlaceholderContentView
_hotSwapLiveSnapshotView
_recheckLiveContentDependencies
_updateBackgroundViewContainment
sceneHandle
referenceSize
orientation
displayMode
effectiveDisplayMode
customContentView
backgroundView
placeholderContentProvider
placeholderContentContext
placeholderContentEnabled
minificationFilter
rendersAsynchronously
resizesHostedContext
presenter
delegate
setDelegate:
_sceneHandle
_referenceSize
_orientation
_requestedDisplayMode
_effectiveDisplayMode
_presenter
_hostingPriority
_hostingIdentifier
_placeholderContentContext
_customContentView
_placeholderContentView
_liveSnapshotView
_hostView
_crossfadeView
_backgroundView
_liveContentDisableReasons
_placeholderContentEnabled
_rendersAsynchronously
_resizesHostedContext
_placeholderContentProvider
_minificationFilter
_delegate
T@"<UIScenePresenter>",R,N,V_presenter
T@"SBSceneHandle",R,N,V_sceneHandle
T{CGSize=dd},R,N,V_referenceSize
Tq,R,N,V_orientation
T@"<SBScenePlaceholderContentViewProvider>",&,N,V_placeholderContentProvider
T@"<SBScenePlaceholderContentContext>",&,N,V_placeholderContentContext
TB,N,V_placeholderContentEnabled
Tq,R,N,V_requestedDisplayMode
Tq,R,N,V_effectiveDisplayMode
T@"NSString",C,N,V_minificationFilter
TB,N,V_rendersAsynchronously
TB,N,V_resizesHostedContext
Tq,R,N
T@"<SBSceneViewDelegate>",W,N,V_delegate
T@"UIView",&,N,V_backgroundView
T@"UIView",&,N,V_customContentView
addElementLayoutSpecifierObserver:
_alertItemsController
activateAlertItem:
elementLayoutSpecifier:layoutModeDidChange:reason:
clientIdentifier
elementIdentifier
T@"NSString",R,C,N
alertController
configure:requirePasscodeForActions:
lockLabel
shortLockLabel
performUnlockAction
allowMenuButtonDismissal
allowLockScreenDismissal
shouldShowInLockScreen
shouldShowInEmergencyCall
wakeDisplay
reappearsAfterLock
reappearsAfterUnlock
didPlayPresentationSound
playPresentationSound
sound
didFailToActivate
willActivate
didActivate
alertItemDidAppear
alertItemDidDisappear
willRelockForButtonPress:
deactivate
deactivateForButton
deactivateForReason:
willDeactivateForReason:
didDeactivateForReason:
setIconImagePath:
forcesModalAlertAppearance
behavesSuperModally
allowInLoginWindow
alertPriority
dismissesOverlaysOnLockScreen
hideOnClonedDisplay
doCleanupAfterDeactivationAnimation
_setPresentationState:
presentationStateDidChangeFromState:toState:
_deactivationCompleted
_alertController
_clearAlertController
_prepareNewAlertControllerWithLockedState:requirePasscodeForActions:
_systemApertureElement
_existingSystemApertureElement
_createSystemApertureElement
_setPresented:
_noteVolumeOrLockPressed
_hasActiveKeyboardOnScreen
_didEverActivate
_displayActionButtonOnLockScreen
_publicDescription
visualStyleForAlertControllerStyle:traitCollection:descriptor:
dismiss
dismiss:
buttonDismissed
dismissOnLock
undimsScreen
unlocksScreen
ignoreIfAlreadyDisplaying
setIgnoreIfAlreadyDisplaying:
allowInSetup
setAllowInSetup:
suppressForKeynote
setSuppressForKeynote:
pendInSetupIfNotAllowed
setPendInSetupIfNotAllowed:
pendWhileKeyBagLocked
setPendWhileKeyBagLocked:
allowedBundleIDs
setAllowedBundleIDs:
allowInCar
setAllowInCar:
allowMessageInCar
setAllowMessageInCar:
_ignoresQuietMode
_setIgnoresQuietMode:
iconImage
setIconImage:
allowDuringTransitionAnimations
setAllowDuringTransitionAnimations:
_iconImagePath
_presentationState
_isPresented
_headerImage
_setHeaderImage:
_attachmentImage
_setAttachmentImage:
shouldMaskIcon
setShouldMaskIcon:
contactIdentifier
setContactIdentifier:
contentType
setContentType:
_allowedBundleIDs
_iconImage
_didEverDeactivate
_ignoreIfAlreadyDisplaying
_didPlayPresentationSound
_allowInSetup
_pendInSetupIfNotAllowed
_pendWhileKeyBagLocked
_allowInCar
_allowMessageInCar
_allowDuringTransitionAnimations
_presented
_suppressForKeynote
_shouldMaskIcon
_contactIdentifier
_contentType
T@"<SAElement>",R,N
TQ,N,S_setPresentationState:,V_presentationState
presented
TB,N,G_isPresented,S_setPresented:,V_presented
T@"UIImage",&,N,S_setHeaderImage:,V_headerImage
T@"UIImage",&,N,S_setAttachmentImage:,V_attachmentImage
TB,N,S_setIgnoresQuietMode:,V_ignoresQuietMode
T@"UIImage",&,N,SsetIconImage:,V_iconImage
iconImagePath
T@"NSString",&,N,G_iconImagePath,V_iconImagePath
TB,N,V_ignoreIfAlreadyDisplaying
TB,N,V_allowInSetup
TB,N,V_pendInSetupIfNotAllowed
TB,N,V_pendWhileKeyBagLocked
T@"NSArray",&,N,V_allowedBundleIDs
TB,N,V_suppressForKeynote
TB,N,V_allowInCar
TB,N,V_allowMessageInCar
TB,N,V_allowDuringTransitionAnimations
TB,N,V_shouldMaskIcon
T@"NSString",&,N,V_contactIdentifier
T@"NSString",&,N,V_contentType
initWithImage:
image
loadView
_expectedSize
_topMarginOffset
_bottomMarginOffset
_imageView
T@"UIImage",R,N
behaviorFromObserver:
initWithObserver:
observer
didCreateScene
setDidCreateScene:
didDestroyScene
setDidDestroyScene:
didUpdateContentState
setDidUpdateContentState:
didUpdateSettingsWithDiff
setDidUpdateSettingsWithDiff:
didUpdateClientSettingsWithDiff
setDidUpdateClientSettingsWithDiff:
didUpdatePairingStatusForExternalSceneIdentifiers
setDidUpdatePairingStatusForExternalSceneIdentifiers:
_didCreateScene
_didDestroyScene
_didUpdateContentState
_didUpdateSettingsWithDiff
_didUpdateClientSettingsWithDiff
_didUpdatePairingStatusForExternalSceneIdentifiers
_observer
T@"<SBSceneHandleObserver>",R,W,N,V_observer
TB,N,V_didCreateScene
TB,N,V_didDestroyScene
TB,N,V_didUpdateContentState
TB,N,V_didUpdateSettingsWithDiff
TB,N,V_didUpdateClientSettingsWithDiff
TB,N,V_didUpdatePairingStatusForExternalSceneIdentifiers
sceneMonitor:sceneWasCreated:
sceneMonitor:sceneWasDestroyed:
sceneMonitor:sceneSettingsDidChangeWithDiff:previousSettings:
sceneMonitor:pairingStatusDidChangeForExternalSceneIDs:
sceneMonitor:sceneClientSettingsDidChangeWithDiff:transitionContext:
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
_initWithScene:displayIdentity:
_initWithDefinition:displayIdentity:
_initWithDefinition:scene:displayIdentity:
sceneIdentifier
contentState
isContentReady
isPairedWithExternalSceneWithIdentifier:
addObserver:
removeObserver:
addActionConsumer:
removeActionConsumer:
_commonInit
_enumerateObserversWithBlock:
_didCreateScene:
_didDestroyScene:
_didUpdateContentState:
_didUpdateSettingsWithDiff:previousSettings:
_didUpdateClientSettingsWithDiff:transitionContext:
_didUpdatePairingStatusForExternalSceneIdentifiers:
_setSceneMonitor:
_createMonitor
_noteSceneCreated:
_noteSceneDestroyed:
_handleSceneAction:
_setScene:
sceneIfExists
displayIdentity
_setDisplayIdentity:
_definition
_sceneMonitor
_manuallyControlsLifecycle
_setManuallyControlsLifecycle:
_displayIdentity
_observers
_observersToObserverBehaviors
_actionConsumers
sceneMonitor
T@"FBSceneMonitor",&,N,G_sceneMonitor,S_setSceneMonitor:,V_sceneMonitor
definition
T@"FBSSceneDefinition",R,N,G_definition,V_definition
T@"FBSDisplayIdentity",&,N,S_setDisplayIdentity:,V_displayIdentity
manuallyControlsLifecycle
TB,N,G_manuallyControlsLifecycle,S_setManuallyControlsLifecycle:,V_manuallyControlsLifecycle
T@"FBScene",R,N
T@"FBScene",R,N,V_scene
contentReady
TB,R,N,GisContentReady
idealSearchPlatterWidth
Td,R,N
viewDidDisappear:
initWithStyleProvider:
setHiddenOnClonedDisplay:
_canShowWhileLocked
_styleProvider
alertItem
setAlertItem:
alertControllerDelegate
setAlertControllerDelegate:
_alertItem
_alertControllerDelegate
T@"SBAlertItem",W,N,V_alertItem
T@"<_SBAlertControllerDelegate>",W,N,V_alertControllerDelegate
initWithNibName:bundle:
initWithCoder:
_handleLongPressGestureRecognizer:
viewDidAppear:
viewWillDisappear:
actionPlatterViewControllerShouldRespondToTouches:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
initWithActions:gestureRecognizer:
setSystemInteractionStartIndex:
setReversesActions:
setImagePosition:
_updateKeylineViews
actions
systemInteractionStartIndex
gestureRecognizer
reversesActions
imagePosition
_delegateRespondsTo
_stackView
_keylinesContainerView
_feedbackRetargetBehavior
_reversesActions
_actions
_systemInteractionStartIndex
_gestureRecognizer
_imagePosition
T@"NSArray",R,C,N,V_actions
TQ,N,V_systemInteractionStartIndex
T@"UILongPressGestureRecognizer",R,W,N,V_gestureRecognizer
TB,N,V_reversesActions
Tq,N,V_imagePosition
T@"<SBUIActionPlatterViewControllerDelegate>",W,N,V_delegate
activationEvent
setActivationEvent:
screen
setScreen:
_screen
_activationEvent
T@"UIScreen",&,N,V_screen
Ti,N,V_activationEvent
initWithTitle:subtitle:image:badgeView:handler:
initWithTitle:subtitle:systemImageName:badgeView:handler:
initWithTitle:subtitle:image:handler:
initWithTitle:subtitle:handler:
initWithTitle:handler:
title
subtitle
systemImageName
badgeView
handler
_title
_subtitle
_image
_systemImageName
_badgeView
_handler
T@"NSString",R,C,N,V_title
T@"NSString",R,C,N,V_subtitle
T@"UIImage",R,N,V_image
T@"NSString",R,N,V_systemImageName
T@"UIView",R,N,V_badgeView
T@?,R,C,N,V_handler
pluginUserAgent
observeValueForKeyPath:ofObject:change:context:
flashlightOverheatedDidChange:
sharedInstance
turnFlashlightOnForReason:
turnFlashlightOffForReason:
level
setLevel:
warmUp
coolDown
removeAllObservers
_updateStateWithAvailable:level:overheated:
_postOverheatedChangeNotification:
_postAvailabilityChangeNotification:
_postLevelChangeNotification:
_setFlashlightLevel:
_turnPowerOn
_turnPowerOff
_storeFlashlightLevel:
_loadFlashlightLevel
isOverheated
isAvailable
_flashlight
_flashlightQueue
_level
_overheated
_available
available
TB,R,N,GisAvailable,V_available
overheated
TB,R,N,GisOverheated,V_overheated
TQ,N
view
T@"SBOrientationTransformWrapperView",&,D,N
defaultSettings
backgroundColorHint
setBackgroundColorHint:
vibrancyDisabled
setVibrancyDisabled:
_vibrancyDisabled
_backgroundColorHint
T@"UIColor",&,N,V_backgroundColorHint
TB,N,V_vibrancyDisabled
action
actionWithCompletion:
initWithCompletion:
sendResponseWithSuccess:
label
setLabel:
authenticationPolicy
setAuthenticationPolicy:
completion
_action
_label
_authenticationPolicy
_completion
T@?,R,C,N,V_completion
T@"NSString",C,N,V_label
Tq,N,V_authenticationPolicy
layerClass
portalLayer
T@"CAPortalLayer",R,N
setSourceLayerRenderingId:contextId:
_configurePortalView
setPreferredSize:
intrinsicContentSize
allowsReparentingByLayoutHost
preferredSize
portalView
layerRenderingId
setLayerRenderingId:
sourceContextId
setSourceContextId:
_sourceContextId
_portalView
_layerRenderingId
_preferredSize
T@"SBSystemApertureSceneElementAccessoryPortalView",R,N,V_portalView
TQ,N,V_layerRenderingId
TI,N,V_sourceContextId
T{CGSize=dd},N,V_preferredSize
alignmentRectInsets
viewForFirstBaselineLayout
viewForLastBaselineLayout
font
setFont:
textColor
setTextColor:
textAlignment
setTextAlignment:
lineBreakMode
setLineBreakMode:
numberOfLines
setNumberOfLines:
_mt_applyVisualStyling:
mt_removeAllVisualStyling
_textColor
_emojiLabel
T@"NSString",C,N
T@"UIFont",&,N
T@"UIColor",&,N
sbui_rangesOfEmojiTokens:
sbui_drawEagerly
defaultMetrics
_systemApertureMetrics
lockScreenNotificationListItemMetrics
_withoutAnimation:
parametersForTransitionFromState:toState:
input
setInput:
output
setOutput:
setDampingRatio:response:
setDampingRatio:response:impulse:
setTrackingDampingRatio:response:
setTrackingDampingRatio:response:impulse:
projectForDeceleration:
projectForTime:
tracking
setTracking:
_dampingRatio
_response
_impulse
_trackingDampingRatio
_trackingResponse
_trackingImpulse
_tracking
Td,N
TB,N,V_tracking
hitTest:withEvent:
setFrame:
setBounds:
setCenter:
setContentOrientation:
setCounterTransformView:
isCounterTransformView
contentViews
addContentView:
addHitTestView:
addGestureRecognizerToTransformedView:
removeGestureRecognizerFromTransformedView:
bringContentSubviewToFront:
_referenceContainerSize
convertPointFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertRectFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertTransformFromContainerInterfaceOrientationToContentInterfaceOrientation:
convertPointFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertRectFromContentInterfaceOrientationToContainerInterfaceOrientation:
convertTransformFromContentInterfaceOrientationToContainerInterfaceOrientation:
_updateGeometry
contentOrientation
containerOrientation
_transformedView
_contentOrientation
_containerOrientation
_hitTestViews
Tq,N,V_contentOrientation
Tq,N,V_containerOrientation
counterTransformView
TB,N,GisCounterTransformView
T@"NSArray",R,N
vibrantSettings
setVibrantSettings:
T@"_SBFVibrantSettings",&,N
initWithColor:
animationDuration
setAnimationDuration:
setColor:
configureForLightStyle
_transformForGrabberView:forState:
_frameForGrabberView:forState:unified:
_layoutGrabberView:forState:
_setState:
_setUnified:
setState:animated:
setState:
color
state
_leftGrabberView
_rightGrabberView
_animationDuration
_state
_color
_alphaComponent
_vibrantSettings
_unified
_alphaContainerView
Tq,N,V_state
T@"UIColor",&,N,V_color
T@"_SBFVibrantSettings",&,N,V_vibrantSettings
load
suggestedContentInsets
setSuggestedContentInsets:
legibilitySettings
setLegibilitySettings:
T{UIEdgeInsets=dddd},N,VsuggestedContentInsets
T@"_UILegibilitySettings",&,N,VlegibilitySettings
T{UIEdgeInsets=dddd},D,N
T@"_UILegibilitySettings",&,D,N
willMoveToSuperview:
initWithAction:
setHighlighted:
leadingContentMargin
trailingContentMargin
setHighlighted:withFeedbackRetargetBehavior:
_setupSubviews
_updateImageViewLayoutConstraints
_invalidateVisualStyling
_updateVisualStylingIfNecessary
isHighlighted
_interfaceOrientationIsPortrait
_textContainer
_titleLabel
_subtitleLabel
_highlightView
_imageViewLayoutConstraints
_visualStylingProviderStroke
_visualStylingProviderFill
_highlighted
T@"SBUIAction",R,N,V_action
highlighted
TB,N,GisHighlighted,V_highlighted
playSound
killSound
actionBlockForButton:
actionWithURL:
actionWithBundleID:
isApplicationAction
bundleID
setBundleID:
setURL:
transitionStyle
setTransitionStyle:
_bundleID
_url
T@"NSString",C,N,V_bundleID
T@"NSURL",&,N,SsetURL:,V_url
TQ,N,V_transitionStyle
permittedActionLayoutDirection
setPermittedActionLayoutDirection:
_permittedActionLayoutDirection
Tq,N,V_permittedActionLayoutDirection
newLockScreenModalView
awakeFromBundle
setVisible:
registeredWithHost
supportedAndEnabled
wantsActivationEvent:eventSource:interval:
prepareForActivationEvent:eventSource:afterInterval:
cancelPendingActivationEvent:
handleActivationEvent:eventSource:context:
handledPasscodeUnlockWithCompletion:
handledButtonDownEventFromSource:
handledButtonUpEventFromSource:
handledButtonTapFromSource:
viewControllerForActivationContext:
host
setHost:
isVisible
_host
_isVisible
visible
TB,N,GisVisible,V_isVisible
T@"<SBUIPluginControllerHost>",W,N,V_host
traitCollectionWithUserInterfaceStyleCompatibleWithLegibilitySettings:
soundWithFeedbackEventType:
initWithSystemSoundID:behavior:vibrationPattern:
initWithSystemSoundPath:behavior:vibrationPattern:
initWithToneAlert:accountIdentifier:toneIdentifier:vibrationIdentifier:
initWithToneAlertConfiguration:
initWithToneAlert:
initWithFeedbackEventType:
isPlaying
playInEvironments:completion:
stop
_completionBlock
_setCompletionBlock:
soundType
setSoundType:
systemSoundID
setSystemSoundID:
_resolvedSystemSoundID
_setResolvedSoundID:
soundBehavior
setSoundBehavior:
vibrationPattern
setVibrationPattern:
toneAlert
setToneAlert:
songPath
setSongPath:
eventType
setEventType:
_soundType
_systemSoundID
_soundBehavior
_vibrationPattern
_toneAlert
_songPath
_eventType
Tq,N,V_soundType
TI,N,V_systemSoundID
TI,N,S_setResolvedSoundID:,V_resolvedSystemSoundID
TQ,N,V_soundBehavior
T@"NSDictionary",&,N,V_vibrationPattern
T@"TLAlert",&,N,V_toneAlert
T@"NSString",C,N,V_songPath
Tq,N,V_eventType
setHeight:
heightInPixels
_updateCornerMask
height
_visualStylingProvider
_height
Td,N,V_height
restrictedCapabilities
presentationStyle
notificationBehavior
elementOverrides
presentationRegion
TB,R,N,GisHidden
TQ,R,N
T@"NSArray",R,C,N
T@"SBLockScreenLegibilitySettings",R,&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
setRestrictedCapabilities:
setPresentationStyle:
setNotificationBehavior:
setElementOverrides:
setPresentationRegion:
TB,N,GisHidden
T@"NSArray",C,N
T@"SBLockScreenLegibilitySettings",&,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N
mutableCopyWithZone:
initWithAppearance:
TB,N,GisHidden,Vhidden
TQ,N,VrestrictedCapabilities
Tq,N,VbackgroundStyle
Tq,N,VpresentationStyle
Tq,N,VnotificationBehavior
T@"NSArray",C,N,VelementOverrides
T@"SBLockScreenLegibilitySettings",&,N,VlegibilitySettings
T{CGRect={CGPoint=dd}{CGSize=dd}},N,VpresentationRegion
setLockScreenDisableAssertionClass:
lockScreenDisableAssertionWithIdentifier:
initWithIdentifier:
crossfadeViewWithStartView:endView:translucent:
_initWithStartView:endView:translucent:
crossfadeWithCompletion:
animationFactory
setAnimationFactory:
allowsGroupOpacityDuringCrossfade
setAllowsGroupOpacityDuringCrossfade:
adaptsAnimationFactoryTimingFunction
setAdaptsAnimationFactoryTimingFunction:
_animationFactory
_startView
_endView
_translucent
_crossfaded
_allowsGroupOpacityDuringCrossfade
_adaptsAnimationFactoryTimingFunction
T@"BSUIAnimationFactory",&,N,V_animationFactory
TB,N,V_allowsGroupOpacityDuringCrossfade
TB,N,V_adaptsAnimationFactoryTimingFunction
animationSettingsForTransitionToStyle:
addParticipant:
removeParticipant:
_configurePropertyAnimatorIfNecessaryForChangeToUserInterfaceStyle:
coronaDidChange:
_propertyAnimator
_setPropertyAnimator:
_participants
propertyAnimator
T@"UIViewPropertyAnimator",&,N,G_propertyAnimator,S_setPropertyAnimator:,V_propertyAnimator
sb_coronaAnimationController
T@"_UILegibilitySettings",&,N
strength
setStrength:
initWithSymbolFont:
_newDialViewConfiguredForSettingsAndFont
_strength
_legibilitySettings
_dialView
_font
T@"UIFont",&,N,V_font
Td,N,V_strength
T@"_UILegibilitySettings",&,N,V_legibilitySettings
enableBundleNamed:activationContext:
enableBundleNamed:
disableBundleNamed:deactivationContext:
disableBundleNamed:
pluginAnimatesAppearanceTransition:
pluginAnimateAppearanceTransition:withCompletion:
pluginAgent
setPluginAgent:
pluginPriority
pluginViewController
pluginAppearance
pluginWillActivateWithContext:
pluginDidDeactivateWithContext:
pluginHandleEvent:
updateForPresentation:
pluginUnlockAction
T@"<SBLockScreenPluginAgent>",W,N
T@"UIViewController<SBLockScreenPluginViewController>",R,N
T@"<SBLockScreenPluginAppearance>",R,N
T@"SBLockScreenPluginAction",R,&,N
_updateAppearanceAndNotify:
purgeView
setViewCanBeDisplayed:
setActivationContext:
setDeactivationContext:
setOrientation:
disable
enableTransitionBlock
overlayStyle
setFullscreen:animated:
setFullscreen:duration:
viewWantsOverlayLayout
shouldDisableOnRelock
shouldDisableOnUnlock
shouldShowLockStatusBarTime
shouldAutoHideNotifications
allowsControlCenter
allowsTimer
allowsLockScreenHint
animateResumingToApplicationWithIdentifier:
bundleIDForUnlock
unlockAnimationStyleForDestinationApp:
disablesAwayItemsCompletely
showDateView
showBatteryChargingText
showDate
hasCustomSubtitle
customSubtitleText
customSubtitleColor
showStatusBar
customHeaderView
allowsLockScreenCamera
allowsLockScreenMediaControls
allowsPhotoSlideshow
allowsSiri
allowsUnlocking
slideToUnlockText
handleMenuButtonTap
handleMenuButtonDoubleTap
wantsMenuButtonHeldEvent
handleMenuButtonHeld
handleLockButtonPressed
handleVolumeUpButtonPressed
handleVolumeDownButtonPressed
handleHeadsetButtonPressed:
wantsMesaAutoUnlock
allowsScreenshots
allowsLogout
legibilitySettingsOverridesVibrancy
isContentViewWhiteUnderSlideToUnlockText
setNeedsLegibilityAppearanceUpdate
viewCanBeDisplayed
_agent
_appearance
_viewCanBeDisplayed
TB,N,V_viewCanBeDisplayed
T@"<SBLockScreenPluginAgent>",W,N,V_agent
isEmergencyDialerAction
_initWithDomain:
defaults
_bindAndRegisterDefaults
indigoConfigurationFlagOne
indigoConfigurationFlagTwo
indigoConfigurationFlagThree
indigoConfigurationFlagsBitmask
Tq,R,D,N
contextWithName:
name
setName:
userInfo
setUserInfo:
process
setProcess:
auxiliaryAnimation
setAuxiliaryAnimation:
setObserver:
_name
_userInfo
_process
_auxiliaryAnimation
T@"FBProcess<FBSProcess>",&,N,V_process
T@"NSString",C,N,V_name
T@"NSDictionary",C,N,V_userInfo
T@"<SBLockScreenPluginLifecycleObserver>",&,N,V_observer
T@?,C,N,V_auxiliaryAnimation
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8q16
v24@0:8d16
q16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@?16
v24@0:8@16
v28@0:8q16B24
v40@0:8q16q24d32
d24@0:8q16
B24@0:8q16
v32@0:8d16d24
@32@0:8d16d24
d40@0:8d16d24d32
@"BSUIBackdropView"
@"UIView"
@"UIColor"
@"MTMaterialView"
v20@0:8B16
@"UIView"16@0:8
@48@0:8@16@24@32@?40
@"NSString"
@"FBScene"
@"<UIScenePresenter>"
@24@0:8^{_NSZone=}16
@24@0:8@16
@"NSMutableDictionary"
v32@0:8@16@24
v32@0:8@16q24
v40@0:8@16@24@32
v32@0:8@"SBSceneHandle"16@"FBScene"24
v32@0:8@"SBSceneHandle"16q24
v40@0:8@"SBSceneHandle"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v40@0:8@"SBSceneHandle"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v32@0:8@"SBSceneHandle"16@"NSSet"24
@24@0:8@?16
@"TUDialRequest"
@24@0:8q16
v24@0:8@"<SBScenePlaceholderContentViewProvider>"16
@48@0:8@16{CGSize=dd}24q40
@56@0:8@16{CGSize=dd}24q40@48
v40@0:8q16@24@?32
{CGSize=dd}32@0:8{CGSize=dd}16
{UIEdgeInsets=dddd}16@0:8
d16@0:8
v40@0:8{CGSize=dd}16q32
v32@0:8@16@?24
q24@0:8q16
v64@0:8q16@24q32@40@48@?56
{CGSize=dd}16@0:8
@"SBSceneHandle"
{CGSize="width"d"height"d}
@"<SBScenePlaceholderContentContext>"
@"UIView<SBScenePlaceholderContentView>"
@"UIView<UISceneSnapshotPresentation>"
@"UIView<UIScenePresentation>"
@"NSCountedSet"
@"<SBScenePlaceholderContentViewProvider>"
@"<SBSceneViewDelegate>"
v40@0:8@16q24q32
v40@0:8@"<SAUILayoutSpecifying><SAUILayoutObservable>"16q24q32
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v24@0:8B16B20
v20@0:8i16
i16@0:8
v24@0:8Q16
v32@0:8Q16Q24
@24@0:8B16B20
@40@0:8q16@24@32
@"_SBAlertController"
@"<SAElement>"
@"NSArray"
@"UIImage"
@"UIImageView"
@"<SBSceneHandleObserver>"
v32@0:8@"FBSceneMonitor"16@"FBScene"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneSettingsDiff"24@"FBSSceneSettings"32
v32@0:8@"FBSceneMonitor"16@"NSSet"24
v40@0:8@"FBSceneMonitor"16@"FBSSceneClientSettingsDiff"24@"FBSSceneTransitionContext"32
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
@32@0:8@16@24
@40@0:8@16@24@32
@"FBSSceneDefinition"
@"FBSDisplayIdentity"
@"FBSceneMonitor"
@"NSHashTable"
@"NSMapTable"
@"SBAlertItem"
@"<_SBAlertControllerDelegate>"
@"NSObject<UIAlertControllerVisualStyleProviding>"
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
{?="actionPlatterViewControllerShouldRespondToTouches"b1}
@"UIStackView"
@"UISelectionFeedbackGenerator"
@"UILongPressGestureRecognizer"
@"<SBUIActionPlatterViewControllerDelegate>"
@"UIScreen"
@56@0:8@16@24@32@40@?48
@40@0:8@16@24@?32
@32@0:8@16@?24
@?16@0:8
v48@0:8@16@24@32^v40
v32@0:8B16Q20B28
v20@0:8f16
@"AVFlashlight"
@"NSObject<OS_dispatch_queue>"
@"BSAction"
v28@0:8Q16I24
v32@0:8{CGSize=dd}16
I16@0:8
v20@0:8I16
@"SBSystemApertureSceneElementAccessoryPortalView"
@"UILabel"
@24@0:8^@16
{?=ddBBddddddd}24@0:8i16i20
v40@0:8d16d24d32
d24@0:8d16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGAffineTransform=dddddd}64@0:8{CGAffineTransform=dddddd}16
@40@0:8{CGPoint=dd}16@32
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
@"_SBOrientationTransformedContentView"
@"NSMutableArray"
v24@0:8@"UIView"16
@"_SBFVibrantSettings"16@0:8
v24@0:8@"_SBFVibrantSettings"16
{CGAffineTransform=dddddd}32@0:8@16q24
{CGRect={CGPoint=dd}{CGSize=dd}}36@0:8@16q24B32
B20@0:8B16
@"_SBFVibrantSettings"
v48@0:8{UIEdgeInsets=dddd}16
@"_UILegibilitySettings"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v28@0:8B16@20
@"SBUIActionViewLabel"
@"MTVisualStylingProvider"
@"SBUIAction"
@?24@0:8@16
@"NSURL"
B32@0:8i16i20^d24
v32@0:8i16i20d24
B32@0:8i16i20^v24
B24@0:8@?16
B20@0:8i16
@"<SBUIPluginControllerHost>"
@36@0:8I16Q20@28
@40@0:8@16Q24@32
@48@0:8q16@24@32@40
B32@0:8q16@?24
@"NSDictionary"
@"TLAlert"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSArray"16@0:8
@"SBLockScreenLegibilitySettings"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"SBLockScreenLegibilitySettings"16
@"SBLockScreenLegibilitySettings"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8#16
@36@0:8@16@24B32
@"BSUIAnimationFactory"
@"UIViewPropertyAnimator"
@"_UILegibilitySettings"16@0:8
v24@0:8@"_UILegibilitySettings"16
@"SBUILegibilityView"
@"UIFont"
@28@0:8B16@?20
@"BSAnimationSettings"28@0:8B16@?<v@?>20
@"<SBLockScreenPluginAgent>"16@0:8
v24@0:8@"<SBLockScreenPluginAgent>"16
@"UIViewController<SBLockScreenPluginViewController>"16@0:8
@"<SBLockScreenPluginAppearance>"16@0:8
v24@0:8@"SBLockScreenPluginContext"16
v24@0:8@"SBLockScreenPluginPresentation"16
@"SBLockScreenPluginAction"16@0:8
v28@0:8B16d20
Q24@0:8@16
@"<SBLockScreenPluginAgent>"
@"SBLockScreenPluginMutableAppearanceContext"
@"FBProcess<FBSProcess>"
@"<SBLockScreenPluginLifecycleObserver>"
