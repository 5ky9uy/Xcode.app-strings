payloadITunesStoreID
setAppStoreIdentifier:
payloadDescriptor
payloadTitle
setDisplayName:
payloadBundleIdentifier
setBundleIdentifier:
appStoreIdentifier
decodeObjectOfClass:forKey:
decodeBoolForKey:
encodeObject:forKey:
bundleIdentifier
displayName
externalVersionIdentifier
isAuthoratative
encodeBool:forKey:
isFree
isSystemApp
isUserLicensed
needsRedownload
appMetadataWithAppAssetDeclaration:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isStoreApp
.cxx_destruct
setExternalVersionIdentifier:
setIsAuthoratative:
setIsFree:
setIsSystemApp:
setIsUserLicensed:
setNeedsRedownload:
_isAuthoratative
_isFree
_isSystemApp
_isUserLicensed
_needsRedownload
_appStoreIdentifier
_bundleIdentifier
_displayName
_externalVersionIdentifier
init
fetchMetadataForBundleIdentifier:appStoreIdentifier:completionHandler:
installAppWithPolicy:completionHandler:
removeAppWithPolicy:completionHandler:
errorWithDomain:code:userInfo:
lock
appManagementPoliciesByKeyFromConfigurations:
currentAppManagementPoliciesByKey
mutableCopy
_storeIDsFromPoliciesByKey:
_uninstallApps
_installApps
unlock
minusSet:
count
initWithCondition:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
appMetadata
containsObject:
removeObject:
savePolicy:
condition
unlockWithCondition:
lockWhenCondition:
length
policyKey
deletePolicyForKey:
setWithCapacity:
addObject:
sharedApplicator
applyConfigurations:completionHandler:
applicationAdapter
setApplicationAdapter:
_applicatorLock
_newPoliciesByKey
_oldPoliciesByKey
_newStoreIDs
_oldStoreIDs
_applicationAdapter
initWithConfigurationRepository:
configurationRepository
arrayWithObjects:count:
fetchConfigurationsWithTypes:completionHandler:
sharedMonitor
fetchThenApplyConfigurationsWithCompletionHandler:
setConfigurationRepository:
_configurationRepositoryLock
_configurationRepository
mutableAppManagementPoliciesByKeyFromConfigurations:
copy
dictionaryWithCapacity:
alloc
initWithConfiguration:
setObject:forKeyedSubscript:
removeObjectForKey:
writeAppManagementPoliciesByKey:
account
identifier
content
loadData:serializationType:error:
payloadApplication
assetByIdentifier
type
isEqualToString:
declarationIdentifier
stringWithFormat:
appStoreAsset
configuration
standardUserDefaults
objectForKey:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
isEqualToAppManagementPolicy:
isEqualToConfiguration:
hash
isEqual:
declaration
_appMetadata
_appStoreAsset
_configuration
_declaration
_policyKey
completeRequestReturningItems:completionHandler:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
beginRequestWithExtensionContext:
appStoreIdentifier
bundleIdentifier
displayName
externalVersionIdentifier
isAuthoratative
isFree
isSystemApp
isUserLicensed
needsRedownload
supportsSecureCoding
TB,R
T@"NSNumber",&,N,V_appStoreIdentifier
T@"NSString",C,N,V_bundleIdentifier
T@"NSString",C,N,V_displayName
T@"NSNumber",&,N,V_externalVersionIdentifier
TB,N,V_isAuthoratative
TB,N,V_isFree
isStoreApp
TB,R,N
TB,N,V_isSystemApp
TB,N,V_isUserLicensed
TB,N,V_needsRedownload
AppManagementExtensionErrorDomain
v8@?0
v16@?0@"NSError"8
sharedApplicator
T@"AppManagementApplicator",R,N
applicationAdapter
T@"AppManagementAdapter",&,N,V_applicationAdapter
com.apple.RemoteManagement.AppManagementExtension.fetchingPolicies
v24@?0@"NSDictionary"8@"NSError"16
sharedMonitor
T@"AppManagementConfigurationMonitor",R,N
configurationRepository
T@"RMConfigurationRepository",&,N,V_configurationRepository
Policies
AppMetadata
Configuration
%@/%@
currentAppManagementPoliciesByKey
T@"NSDictionary",R,N
appMetadata
T@"AMXAppMetadata",R,N
appStoreAsset
T@"RMModelApplicationAppStoreDeclaration",R,N,V_appStoreAsset
configuration
T@"RMConfiguration",R,N,V_configuration
declaration
T@"RMModelApplicationInstallDeclaration",R,N,V_declaration
policyKey
T@"NSString",R,C,N,V_policyKey
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
AMXAppMetadata
NSSecureCoding
NSCoding
AppManagementAdapter
AppManagementApplicator
AppManagementConfigurationMonitor
AppManagementPolicy
AppManagementRequestHandler
NSExtensionRequestHandling
NSObject
@24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
@16@0:8
v20@0:8B16
@"NSNumber"
@"NSString"
v40@0:8@16@24@?32
v32@0:8@16@?24
@24@0:8^{NSDictionary=#}16
@"NSLock"
^{NSDictionary=#}
@"NSMutableSet"
@"AppManagementAdapter"
v24@0:8@?16
@"RMConfigurationRepository"
^{NSDictionary=#}24@0:8@16
^{NSMutableDictionary=#}24@0:8@16
^{NSDictionary=#}16@0:8
v24@0:8^{NSDictionary=#}16
B24@0:8@16
Q16@0:8
@"AMXAppMetadata"
@"RMModelApplicationAppStoreDeclaration"
@"RMConfiguration"
@"RMModelApplicationInstallDeclaration"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSExtensionContext"16
Applying configurations: %{public}@
Old App Store IDs: %{public}@
New App Store IDs: %{public}@
No App Store IDs to install
Unique App Store IDs to install: %{public}@
Installed app %{public}@ (storeID: %{public}@, bundleID: %{public}@)
Could not install app %{public}@ (%{public}@): %{public}@
No App Store IDs to uninstall
Unique App Store IDs to uninstall: %{public}@
Considering uninstalling App Store IDs %{public}@ (%{public}@)
Scheduling uninstall of App Store IDs %{public}@ (%{public}@)
Uninstalled app %{public}@ (storeID: %{public}@, bundleID: %{public}@)
Could not uninstall app %{public}@ (storeID: %{public}@, bundleID: %{public}@): %{public}@
Removed configuration but did not uninstall App Store IDs %{public}@ with unknown bundleID
Could not uninstall App Store ID %{public}@ with unknown bundleID
Removed configuration but did not uninstall App Store IDs %{public}@ (%{public}@)
Begin: com.apple.RemoteManagement.AppManagementExtension.fetchingPolicies
End: com.apple.RemoteManagement.AppManagementExtension.fetchingPolicies
Could not deserialize application install declaration %{public}@: %{public}@
Asset not found for identifier %{public}@ (referenced by configuration %{public}@)
Could not deserialize App Store asset %{public}@ (referenced by configuration %{public}@): %{public}@
Asset for identifier %{public}@ is unsupported type %{public}@ (referenced by configuration %{public}@)
Unable to deserialize App Management policy from user defaults: %{public}@
Unable to serialize App Management policy to user defaults: %{public}@
@(#)PROGRAM:AppManagementExtension  PROJECT:RemoteManagement-2.0
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>CopyDiskUsageForLaunchServices</string>
<string>InstallForLaunchServices</string>
<string>Lookup</string>
<string>Uninstall</string>
<string>UninstallForLaunchServices</string>
</array>
<key>com.apple.private.remotemanagement</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.installcoordinationd</string>
<string>com.apple.appstored.xpc.storequeue</string>
<string>com.apple.remotemanagementd</string>
</array>
</dict>
</plist>
