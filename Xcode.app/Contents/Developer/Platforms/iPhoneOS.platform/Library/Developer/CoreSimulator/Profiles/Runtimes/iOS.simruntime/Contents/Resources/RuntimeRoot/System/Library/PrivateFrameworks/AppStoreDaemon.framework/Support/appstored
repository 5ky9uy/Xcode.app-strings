%g
% g
%"g
%$g
%&g
%(g
%*g
%,g
%.g
%0g
%2g
%4g
%6g
%8g
%:g
%<g
%>g
%@g
%Bg
%Dg
%Fg
%Hg
%Jg
%Lg
%Ng
%Pg
%Rg
%Tg
%Vg
%Xg
%Zg
%\g
%^g
%`g
%bg
%dg
%fg
%hg
%jg
%lg
%ng
%pg
%rg
%tg
%vg
%xg
%zg
%|g
%~g
%h
% h
%"h
%$h
%&h
%(h
%*h
%,h
%.h
%0h
%2h
%4h
%6h
%8h
%:h
%<h
%>h
%@h
%Bh
%Dh
%Fh
%Hh
%Jh
%Lh
%Nh
%Ph
%Rh
%Th
%Vh
%Xh
%Zh
%\h
%^h
%`h
%bh
%dh
%fh
%hh
%jh
%lh
%nh
%ph
%rh
%th
%vh
%xh
%zh
%|h
%~h
%i
% i
%"i
%$i
%&i
%(i
%*i
%,i
%.i
%0i
%2i
%4i
%6i
%8i
%:i
%<i
%>i
%@i
%Bi
%Di
%Fi
%Hi
%Ji
%Li
%Ni
%Pi
%Ri
%Ti
%Vi
%Xi
%Zi
%\i
%^i
%`i
%bi
%di
%fi
%hi
%ji
%li
%ni
%pi
%ri
%ti
%vi
%xi
%zi
%|i
%~i
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>App Store Daemon</string>
<key>CFBundleExecutable</key>
<string>appstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.appstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>appstored</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19A5261t</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.0</string>
<key>DTSDKBuild</key>
<string>19A5261t</string>
<key>DTSDKName</key>
<string>iphonesimulator15.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A6139f</string>
<key>MinimumOSVersion</key>
<string>15.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.appstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.ap.adservicesd.statusconditionclient.allow_write</key>
<true/>
<key>com.apple.appconduitd.device-connection.connect.allow</key>
<true/>
<key>com.apple.appstored-services-host.event</key>
<true/>
<key>com.apple.appstored-services-host.testflight</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.asd.client</key>
<string>9824938448</string>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.cards.all-access</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.pass-type-identifiers</key>
<array>
<string>*.pass.com.apple.itunes.storecredit</string>
</array>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.itunesstored.purchase</key>
<true/>
<key>com.apple.keybagd.UserManager.suspendquota</key>
<true/>
<key>com.apple.keystore.auth-token</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.xpc</key>
<true/>
<key>com.apple.multitasking.newsstandassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.odr.itunesstored</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.payment.all-access</key>
<true/>
<key>com.apple.payment.amp-card-enrollment</key>
<true/>
<key>com.apple.payment.card-on-file</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
</array>
<key>com.apple.private.CoreAuthentication.SPI</key>
<true/>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.deleteContainerContent</key>
<true/>
<key>com.apple.private.MobileContainerManager.lookup</key>
<dict>
<key>appData</key>
<true/>
</dict>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>UniqueDeviceID</string>
<string>UniqueDeviceIDData</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SystemApp</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.in-app-payments</key>
<true/>
<key>com.apple.private.launchservices.canchangeupdateavailability</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CheckCapabilitiesMatch</string>
<string>Install</string>
<string>Lookup</string>
<string>UpdateiTunesMetadataForLaunchServices</string>
<string>UpdateSinfForLaunchServices</string>
</array>
<key>com.apple.private.network.delegation-whitelist</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceFaceID</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.AppStore</string>
</array>
<key>com.apple.remotenotification.preferences</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.runningboard.terminateprocess</key>
<true/>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/SpringBoard/IconState.plist</string>
<string>/Library/SpringBoard/TodayViewArchive.plist</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.apsd</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.ak.authorizationservices.xpc</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.idsremoteurlconnectionagent.desktop.auth</string>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.coreidvd.proofing</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.mobileactivationd</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.passd.library</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.powerlogHelperd.XPCService.xpc</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.asd.scoring</string>
<string>com.apple.iconservices</string>
<string>com.apple.fontservicesd</string>
<string>com.apple.backupd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.facetime.bag</string>
<string>com.apple.imessage.bag</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.ondemandresources</string>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.iconState</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.setbadgestring</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>appstored</string>
</array>
</dict>
</plist>
lowercaseString
keyEnumerator
countByEnumeratingWithState:objects:count:
isEqualToString:
objectForKeyedSubscript:
lib_objectForCaseInsensitiveKey:
init
optionalWithSome:
optionalWithNone
setObject:forKeyedSubscript:
objectForKey:
optionalForKey:
setObject:forKey:
.cxx_destruct
_dictionary
_lock
initWithConnection:
configureClientWithConnection:
odrEntitlementName
odrServiceName
currentIdentity
persistedDataPath
stringByAppendingPathComponent:
initWithDatabasePath:
initWithConnectionOptions:
cachedDataPath
sharedInstance
systemDatabase
userDatabase
_dispatchQueue
_userDatabase
_systemDatabase
T@"SQLiteDatabase",R
_verifyHTTPResponseForResult:verificationError:
_verifyResponseDictionaryForResult:verificationError:
initWithResult:
response
initWithIndexesInRange:
statusCode
containsIndex:
stringWithFormat:
object
tcr_integerValueForKey:missingValue:
resultFromResult:error:
setName:
cancelAllTasks
waitUntilAllTasksAreFinished
addTask:
cancelBackgroundMaintenanceOperations
startBackgroundMaintenanceOperations
_maintenanceQueue
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
valueForProperty:
copy
count
allKeys
setWithArray:
allObjects
lookupSystemApplicationsWithBundleIDs:
runSubTask:returningError:
lookupResults
bundleID
initWithSystemAppLookupItem:
arrayWithObjects:count:
setPackages:
null
setValue:forProperty:
title
defaultInstallPolicy
integerValueForProperty:
setConstrainedResult:
setExpensiveResult:
setInterfaceMask:
packages
firstObject
copyEvaluatorDownloadWithPackage:
initWithDownload:
constrainedResult
expensiveResult
interfaceMask
setInstallPolicy:
logKey
removeObject:
lock
allValues
unlock
completeWithSuccess
_showInternalConnectionDialogWithError:
completeWithError:
domain
userInfo
code
stringByAppendingFormat:
objectEnumerator
boolValueForProperty:
_messageForError:
requestWithTitle:message:
bundleWithPath:
localizedStringForKey:value:table:
actionWithTitle:style:
setButtonActions:
presentDialogRequest:resultHandler:
initWithInstalls:
main
results
_installs
_results
T@"NSArray",R,C,V_results
sharedDelegate
_main
syncApplicationTask:
sharedStore
purgeAllAssetPacksForApplication:withReason:
modifyUsingTransaction:
initWithApplication:purgeReason:
_application
_purgeReason
tcr_stringForKey:
tcr_urlForKey:
tcr_numberForKey:
description
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
assetToken
assetURL
deltaUpdate
T@"NSString",R
T@"NSURL",R
TB,R
initWithDictionary:
fromAssetToken
previousExternalVersionID
_assetURL
_assetToken
_md5
_fromAssetToken
_previousExternalVersionID
T@"NSString",R,V_fromAssetToken
T@"NSNumber",R,V_previousExternalVersionID
T@"NSString",R,V_assetToken
T@"NSURL",R,V_assetURL
T@"NSString",R,V_md5
tcr_arrayForKey:
_variantDescriptorsFromTargetArray:
_variantDeltasFromDeltasInfo:
tcr_dictionaryEnumerator
addObject:
descriptorsForDictionary:usingKeyProfile:
addObjectsFromArray:
variantDeltaFromAssetToken:
variantDeltas
variantDescriptors
_variantDeltas
_variantDescriptors
T@"NSArray",R,V_variantDeltas
T@"NSArray",R,V_variantDescriptors
_assetDownloadsWithPredicate:
connection
queryOnConnection:predicate:
enumerateMemoryEntitiesWithProperties:usingBlock:
arrayWithArray:
assetPacksForApplication:
legacyPathPrefixForApplication:
localURL
absoluteString
hasPrefix:
predicateWithProperty:equalToValue:
predicateMatchingAllPredicates:
anyOnConnection:predicate:
numberWithInteger:
_assetPacksForBundleID:onlyOnDevice:
_assetPacksForBundleID:withPurgeability:lastUsedMoreThan:
isNotNullPredicateWithProperty:
_assetPacksWithPredicate:
containsPredicateWithProperty:values:
_enumerateAssetPacksForBundleID:withPurgeability:lastUsedMoreThan:usingBlock:
externalVersionID
setAssetPacks:
applicationForBundleID:
isNullPredicateWithProperty:
predicateWithProperty:value:comparisonType:
hasODR
manifestForApplication:
validManifestExistsForApplication:error:
applicationNeedsRepair:error:
tagsForApplication:
_tagsWithPredicate:
sumForProperty:predicate:onConnection:
version
versionToken
enumerateMemoryEntitiesUsingBlock:
arrayWithObjects:
_predicateForBundleID:withPurgeability:lastUsedMoreThan:
_assetPacksWithPredicate:orderingProperties:
queryOnConnection:predicate:orderingProperties:
_enumerateAssetPacksMatchingPredicate:orderingProperties:usingBlock:
numberWithBool:
timeIntervalSinceReferenceDate
numberWithDouble:
enforceAlwaysPreserve
T@"SQLiteConnection",R
allAssetDownloads
allBundleIDs
appBundleIDToBundlePathMapping
assetDownloadsWithBundleID:
assetDownloadWithBundleID:andBundleKey:
assetDownloadsForCoordinatorID:
assetDownloadsForCoordinatorID:ofType:
assetPacksForBundleID:withPurgeability:lastUsedMoreThan:
assetPackWithBundleKey:
assetPacksWithDownloadRequestUUIDs
assetPacksWithLocalURL:
assetPacksWithTagNames:forApplication:
downloadedAssetPacksForBundleID:
enumerateAssetPacksForBundleID:withPurgeability:lastUsedMoreThan:usingBlock:
enumeratePurgeableAssetPacksUsingBlock:
manifestForAdamID:
missingInitialAssetPacksForApplication:
missingPrefetchAssetPacksForApplication:
nonPurgeableAssetPacks
preflightApplication:
purgeableAssetPacks
purgedAssetPacksWithReason:forApplication:
tagsForBundleKey:
tagWithName:andBundleID:
totalSizeOfDownloadedAssetPacksForBundleID:
totalSizeOfUnpurgeableAssetPacksForBundleID:
_connection
T@"SQLiteConnection",R,N,V_connection
didCreateTask:fromRequest:error:
environmentForTask:
env_adoptEnvironment:
reconfigureRequestHandler
reconfigureNewRequest:originalTask:redirect:error:
initWithProtocolDelegate:
_protocolDelegate
arrayWithCapacity:
adamId
bindNumber:atPosition:
enumerateObjectsUsingBlock:
executeStatement:error:bindings:
appAdamId
purchaseDate
lastModifiedDate
expirationDate
type
numberWithUnsignedChar:
subscriptionFamilyId
autoRenewStatus
hasUsedFreeOffer
hasUsedIntroPricingOffer
numberWithInt:
initWithPropertyValues:onConnection:
existsInDatabase
executeStatement:error:
intValue
_serverRevisionPropertyForAccountID:
_setValue:forDatabaseProperty:withError:
timeIntervalSince1970
_lastUpdatedPropertyForAccountID:
bindString:atPosition:
deleteIAPs:forAccountID:withError:
insertIAPs:forAccountID:withError:
removeAllIAPsWithError:
removeAllIAPsForAccountID:withError:
setRevision:forAccountID:withError:
setLastUpdatedTimestamp:forAccountID:withError:
_lookupHeadboardAppsWithOutError:
_lookupTVProviderAppsWithOutError:
defaultBag
URLForKey:
valueWithError:
initWithBag:
ams_sharedAccountStore
ams_activeiTunesAccount
ams_DSID
setAccount:
requestWithMethod:URL:parameters:
resultWithError:
setCachePolicy:
ephemeralSessionConfiguration
lib_daemonProcessInfo
ams_configureWithProcessInfo:bag:
set_sourceApplicationBundleIdentifier:
initWithConfiguration:
dataTaskPromiseWithRequest:
resultWithTimeout:error:
removeObjectsInArray:
longLongValue
numberWithLongLong:
setItemID:
initWithStoreItemIdentifier:error:
iTunesMetadata
versionIdentifier
numberWithUnsignedLongLong:
setExternalVersionID:
headboardDSIDLessApps
tvProviderDSIDLessApps
setLogKey:
_headboardDSIDLessApps
_tvProviderDSIDLessApps
_logKey
T@"NSArray",R,N,V_headboardDSIDLessApps
T@"NSSet",R,N,V_tvProviderDSIDLessApps
T@"NSString",C,N,V_logKey
kind
tcr_dataForKey:
tcr_stringEnumerator
URLWithString:
lib_flatMapAndFilterUsingBlock:
initWithString:
lib_mapAndFilterUsingBlock:
receiptData
sinfData
MD5s
MD5Size
SHA256s
SHA256Size
variantIDs
T@"NSArray",R
T@"NSNumber",R
T@"NSData",R
initWithUserID:bundleID:status:
userID
status
_userID
_bundleID
_status
T@"NSNumber",R,N,V_userID
T@"NSString",R,N,V_bundleID
Tq,R,N,V_status
_initWithKnownIAPs:revision:forAccount:client:logUUID:
processInfo
logUUID
newContextWithKnownIAPs:revision:forAccount:client:
newContextWithKnownIAPs:revision:forAccount:token:
account
clientInfo
knownIAPs
revision
_account
_clientInfo
_logUUID
_knownIAPs
_revision
T@"ACAccount",R,V_account
T@"AMSProcessInfo",R,V_clientInfo
T@"NSString",R,V_logUUID
T@"NSArray",R,V_knownIAPs
T@"NSNumber",R,V_revision
lib_appProcessInfo
_sessionWithClientInfo:
finishWithError:
finishWithResult:
dataTaskWithRequest:completionHandler:
responseDecoder
registerRequestProperties:forTask:
resume
cancel
discardRequestPropertiesForTask:
addErrorBlock:
initWithBlock:
bundleIdentifier
setResponseDecoder:
dataTaskPromiseWithRequestProperties:forRequest:
_sessions
boolValue
_urlForProperty:
integerValue
importAssetDownload:
readUsingSession:
deleteAssetDownload:
bundleKey
deleteDownload:
sourceURL
updateEntity:
databaseEntityClass
defaultProperties
addDownloadForRequest:
allDownloads
deleteDownloadForRequest:
deleteDownloads:
updateDownloadURLWithRequest:
coordinatorID
isPaused
uniqueKey
T@"NSString",R,N
T@"NSUUID",R,N
TB,R,N
T@"NSURL",R,N
Tq,R,N
lib_shortLogKey
array
defaultManager
contentsOfDirectoryAtPath:error:
fileExistsAtPath:isDirectory:
fileURLWithPath:
_lastModifiedForBundle:logKey:
compare:
_crashEventsForFile:sinceDate:logKey:
lib_loggableShortDate
_crashEventDictonariesForFile:sinceDate:logKey:
setBundleID:
setEventType:
setCount:
dateWithTimeIntervalSince1970:
setDate:
initWithContentsOfFile:encoding:error:
_newDateFormatter
componentsSeparatedByString:
objectAtIndexedSubscript:
length
dateFromString:
dictionary
getResourceValue:forKey:error:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
crashesSinceDate:
crashesSinceDate:logKey:
data
dataWithBytesNoCopy:length:freeWhenDone:
logStep:byParty:phase:success:forBundleID:description:
_newCoordinatorWithType:forBundleID:createIfNotExisting:wasCreated:error:
_cancelOwnedCoordinatorsForBundleID:
appAssetPromiseResponsibleClientWithError:
setInitialODRAssetPromises:error:
initialODRAssetPromisesWithError:
hasInitialODRAssetPromises
creatorIdentifier
setImportance:error:
importanceWithError:
initWithCoordinator:andIntent:
cancelForReason:client:error:
enumerateCoordinatorsWithError:usingBlock:
coordinatorForAppWithBundleID:withClientID:createIfNotExisting:created:error:
createAsMobileBackup
initWithBundleID:coordinatorType:
coordinatorType
setCreateAsMobileBackup:
shouldCreate
setShouldCreate:
completeODRPromises
setCompleteODRPromises:
enforceImportance
setEnforceImportance:
importance
setImportance:
coordinator
wasCreated
_createAsMobileBackup
_shouldCreate
_completeODRPromises
_enforceImportance
_wasCreated
_coordinatorType
_importance
_coordinator
T@"NSString",R,C,N,V_bundleID
TQ,R,N,V_coordinatorType
TB,N,V_createAsMobileBackup
TB,N,V_shouldCreate
TB,N,V_completeODRPromises
TB,N,V_enforceImportance
TQ,N,V_importance
T@,R,N,V_coordinator
TB,R,N,V_wasCreated
initOnScheduler:withExecutor:
initWithValue:
initWithError:
initWithState:result:
resultWithValue:
_invokeExecutor:onScheduler:
thenPerform:orCatchError:onScheduler:
initWithValueBlock:errorBlock:scheduler:
result
value
notifyResolvedWithValue:
error
notifyRejectedWithError:
resolveWithValue:
rejectWithError:
raise:format:
removeAllObjects
scheduleBlock:
onScheduler:usingBlock:
promiseWithValue:
promiseWithError:
isResolved
alwaysPerform:onScheduler:
catchError:onScheduler:
mapUsingTransformer:onScheduler:
flatMapUsingTransformer:onScheduler:
joinWithPromise:
completionHandlerAdapter
_observers
_state
_stateLock
_result
resolved
TB,R,GisResolved
T@"PromiseResult",R,V_result
_executor
_scheduler
initWithLength:
_initWithBufferSize:
_initWithBufferedStream:
getBytes:range:
streamStatus
setStreamStatus:
signalEvent:
replaceBytesInRange:withBytes:
getBufferedStreamsWithBufferSize:streamReader:streamWriter:
_hasBytesAvailable
_hasSpaceAvailable
_readBytes:length:error:
_streamWriterClosed
_writeBytes:length:error:
_queue
_buffer
_readCursor
_writeCursor
_streamWriter
_streamReader
dealloc
close
open
delegate
setDelegate:
streamError
T@"<StreamDelegate>",W
T@"NSError",R
readBytes:length:error:
hasBytesAvailable
_bufferedStream
writeBytes:length:error:
hasSpaceAvailable
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
_realPathForURL:ifChildOfURL:
_traverseDirectory:error:withBlock:
path
_realPathWhatExistsInPath:
_realPathForURL:allowNonExistentPathComponents:
pathComponents
subarrayWithRange:
fileURLWithPathComponents:
_itemExistsAtURL:
pathWithComponents:
URLByAppendingPathComponent:isDirectory:
validateDownloadAtURL:error:
_clientID
reason
checkQueue:clientID:completionBlock:
claimApplicationsWithOptions:clientID:completionBlock:
managedApplicationRequestWithOptions:clientID:completionBlock:
processIdentifier
connection:hasEntitlement:
_initializeConnection:
currentConnection
clientIDForConnection:
checkQueueWithOptions:completionBlock:
claimApplicationsWithOptions:completionBlock:
managedApplicationRequestWithOptions:completionBlock:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
_handleDisconnect:
setInvalidationHandler:
listener:shouldAcceptNewConnection:
initWithQueue:
initWithTestFlightServiceHost:
_resetActivityIfNeededWithForceReset:
defaultCenter
_handleBagChangedNotification:
addObserver:selector:name:object:
removeObserver:
testFlightExtensionEnabled
extensionStatus
testFlightExtensionSyncIntervalMinutes
unsignedIntegerValue
testFlightExtensionSyncGracePeriodMinutes
syncIntervalMinutes
syncGracePeriodMinutes
unregisterActivity:withReason:
setSyncIntervalMinutes:
setSyncGracePeriodMinutes:
registerActivity:withReason:
testFlightServiceHost:didUpdateExtensionStatus:
_syncActivity
_serviceHost
_isActivityRegistered
initWithEnvironment:
initWithEnvironment:queue:
_newConnectionForEnvironment:dispatchQueue:
initWithEnvironment:queue:apsConnection:
addPushTypeForCurrentAccount
_updateTopicsInConnection:
publicToken
environment
_sendPushTypesRequest:accountID:forEnvironment:
shutdown
getTopicString:
requestTokenForTopic:identifier:
invalidateTokenForTopic:identifier:
pushConnection:didReceiveRawMessage:
initWithAPSMessage:
pushTopic
recordPushMessage:
setToken:
lib_digestMD5
getTopicFromString:
pushConnection:didReceiveToken:forTopic:
lib_shortDigestMD5
apsDelegatePort
initWithEnvironmentName:namedDelegatePort:queue:
shouldUseASDForPushNotificationRequests
ams_iTunesAccountWithDSID:
initWithType:account:environment:token:logKey:
success
_retryAddPushTypeRequestForAccountID:forEnvironment:
setCompletionBlock:
setEnvironmentName:
setNotificationType:
setAccountIdentifier:
setRequestType:
setMediaKinds:
initWithPushNotificationParameters:
bodyData
initWithData:encoding:
startWithResponseBlock:
initWithEnvironment:topic:
setEnabledTopics:ignoredTopics:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
testFlightTopicEnabled
setTestFlightTopicEnabled:
removePushTypeForAccountId:
requestTokenForTopic:
invalidateTokenForTopic:
_unitTest_sendFakeRawMessage:
_environment
_taskQueue
_appStoreMessageHistory
_testFlightMessageHistory
_testFlightTopicEnabled
_delegate
T@"<PushConnectionDelegate>",W,V_delegate
initWithTopic:
setPreventSampling:
setEventVersion:
_aim_defaultProperties
addPropertiesWithDictionary:
automationRunning
buildVersion
aim_eventWithPropertyValues:
_valueDictionaryWithStoreAsset:
setValuesWithDictionary:
_valueDictionaryWithSystemAppLookupItem:
isDelta
archiveType
bytesTotal
hashes
clearHashes
numberOfBytesToHash
isZipStreamable
sinf
dpInfo
expectedDiskspace
initialODRSize
isLocallyCacheable
variantID
downloadOffset
downloadSize
isStreamableZip
initWithStoreAsset:
dictionaryRepresentation
setUploadUrl:
setXiCloudVersionIdHeader:
allocWithZone:
copyWithZone:
hasUploadUrl
hasXiCloudVersionIdHeader
readFrom:
writeTo:
copyTo:
mergeFrom:
uploadUrl
xiCloudVersionIdHeader
_uploadUrl
_xiCloudVersionIdHeader
T@"NSString",&,N,V_uploadUrl
T@"NSString",&,N,V_xiCloudVersionIdHeader
_initWithValue:error:
_error
_value
T@"NSError",R,V_error
T@,R,V_value
hasBagKeySetForConsumer:
addBagKey:valueType:defaultValue:
addBagKeySet:forConsumer:
addRequiredBagKeysToAggregator:
generateAggregatedBagKeySet
setRepairedBundleIDs:
isBackground
repair:wantsToRelaunchApplication:
bundleWithIdentifier:
initWithTitle:message:
repair:needsToReleaseBlockingCallerWithReason:
isOnDeviceAppInstallationAllowed
actionWithTitle:
addButtonAction:
selectedActionIdentifier
identifier
openProductPageForStoreItemID:withCompletionHandler:
openWithCompletionHandler:
bagKeySet
shouldAttemptToRepairApplication:options:logUUID:
_fairplayStatusForApplication:options:
T@"AMSBagKeySet",R,N
repairApplication:error:
repairedBundleIDs
setLogUUID:
T@"NSArray",R,N
T@"<ApplicationRepairDelegate>",W,N
T@"NSString",&,N
initWithApplication:options:
_isSystemIntegrityProtected
_showInternetConnectionAlert
_showFamilyLeaveAlert:
clientIdentifierHeader
setClientIdentifierHeader:
_bag
_options
_repairedBundleIDs
_clientIdentifierHeader
T@"NSString",C,N,V_clientIdentifierHeader
T@"NSArray",R,N,V_repairedBundleIDs
T@"<ApplicationRepairDelegate>",W,N,V_delegate
T@"NSString",&,N,V_logUUID
_receiptPropertyForKey:bundleID:
predicateMatchingAnyPredicates:
queryDescriptor
setOrderingDirections:
enumeratePersistentIDsAndProperties:usingBlock:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
enumerateReceiptsForProductID:bundleID:usingBlock:
mutableCopy
currentRevisionForBundleID:
lastUpdatedForBundleID:
receiptTokenForBundleID:
enumerateCurrentReceiptsForProductID:bundleID:usingBlock:
receiptForTransactionID:bundleID:
subscriptionStatusForSubscriptionGroupID:bundleID:
T@"SQLiteConnection",R,V_connection
valueForKey:
appendString:
removeObjectForKey:
setValue:forKey:
initWithData:
removeValueForProperty:
serializedData
_metricsData
lastObject
doubleValue
removeObjectAtIndex:
_updateStatisticsFromSnapshots
initWithMaxValue:
estimatedTimeRemaining
setCurrentValue:
_times
_values
_canPause
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
Td,R,N
initWithQueueType:forReason:usingPurchaseInfo:purchaseBatch:
suppressDialogs
requestToken
isInternal
notificationClient
presenterWithNotificationClient:
initWithQueueType:forAccount:requestPresenter:logKey:
storeItems
itemID
isEqualToNumber:
_installedApplicationForStoreItem:
_purchaseInfoForStoreItem:withAccount:installedApplication:
initWithStoreItems:purchaseInfo:purchaseBatch:
isDiscretionary
setOverrideAutomaticType:
failPurchaseWithError:usingPurchaseInfo:
proxyForBundleID:
UUID
setExternalID:
setLogCode:
shouldPostMetrics
setPostMetrics:
setDiscretionary:
setSuppressDialogs:
isInstalled
bundleVersion
storeExternalVersionID
setInstalledExternalVersionID:
thinningVariantID
setInstalledVariantID:
setUpdateType:
updateGeneratedProperties
checkQueueForPurchaseUsingPurchaseInfo:purchaseBatch:
queueType
purchaseBatch
purchaseInfo
_queueType
_reason
_purchaseBatch
_purchaseInfo
Tq,R,N,V_queueType
Tq,R,N,V_reason
T@"PurchaseBatch",R,N,V_purchaseBatch
T@"PurchaseInfo",R,N,V_purchaseInfo
fetchPromiseID:orCreateUsingSpecification:withError:
_resetStreamAdapterWithError:
_notifyDelegateForCurrentDataPromise
consumeData:andWaitWithCompletionHandler:
consumeData:withCompletionHandler:
finishWithCompletionHandler:
prepareWithCompletionHandler:
preflightWithCompletion:
uniqueIdentifier
resetPromiseID:withError:
truncatePromiseID:usingSpecification:withError:
suspendWithCompletionHandler:
coordinatorPromiseDataConsumer:willBeginUsingPromise:forReference:
referenceID
promiseType
initWithExtractor:toPath:
resetWithCompletionHandler:
truncateWithCompletionHandler:
initWithPromiseProvider:promiseID:specification:error:
_dataPromise
_promiseProvider
_specification
_streamAdapter
T@"<CoordinatorPromiseDataConsumerDelegate>",W
isOnDevice
currentDownloadRequestForAssetPack:
progress
fractionCompleted
purgeReason
pinCount
downloadPercentageComplete
humanReadablePurgeReason
tagStatus
setSchemaName:
setSessionClass:
setTransactionClass:
currentSchemaVersion
migrateToVersion:usingBlock:
executeStatement:
storeDescriptor
createOrMigrateStoreUsingSchema:
currentDevice
isHRNMode
isEnabled
descriptiveName
registeredName
criteria
deadline
dateWithTimeIntervalSinceNow:
setNextPostTargetDate:forActivity:
_nextPostDateForActivity:validatedRefreshInterval:
timeIntervalSinceNow
_addIntervalActivity:activityShortName:scheduledDate:refreshInverval:forceReset:reason:
resetActivity:reason:forceReset:block:
activityShortNameForType:
isActivityEnabled:
_addActivityType:reason:forceReset:
_addRepeatingDailyActivity:requiresNetwork:reason:
_addOcelotResetPayoutActivityWithReason:
postIntervalSecondsOverrideForActivity:
crossfirePostIntervalSeconds
ocelotPostIntervalSeconds
ocelotPostPayoutIntervalSeconds
sbsyncRefreshIntervalSeconds
_activityTypeForName:
requestPollWithReason:
sharedManager
performBackgroundSoftwareUpdateCheck
recordDailyCoreAnalyticsAutomaticUpdateStatus
networkQueue
nextPostDateForActivity:
lib_isBefore:
date
initWithName:
handleWakeWithName:
_activityNameForType:
nextOcelotPayoutResetDate
registerActivity:activityShortName:scheduledDate:withReason:
resetActivity:reason:
unregisterActivity:
_handleWakeupForActivity:
_registerActivity:activityShortName:criteria:reason:
_runXPCActivityIfNeeded:withActivityName:
_setupActivities
_calloutQueue
_cancelBackgroundTaskWithIdentifier:
shouldPostAppUsageMetrics
_addAppUsageRecordDnuMetricsTask:
_scheduleAppUsageActorIDResetDate:targetPostDate:reason:
_addAppUsageFlushDnuTask:forceReset:
appUsageResetActorIDTargetDate
_appUsagePostsPerDay
_appUsagePostInterval:
dateByAddingTimeInterval:
_appUsageGracePeriod
_appUsageSpreadPeriod
currentCalendar
startOfDayForDate:
dateWithTimeInterval:sinceDate:
setAppUsageNextPostTargetDate:
xpcActivityWithDuration:gracePeriod:
initWithBackgroundTaskAgentJob:
setRequestIdentifier:
_addBackgroundTaskWithRequest:reason:
appUsageFlushDnuIntervalOverride
appUsageFlushIntervalSeconds
appUsageFlushDnuTargetDate
_addAppUsageFlushTask:forceReset:activityName:scheduledDate:refreshInverval:
setAppUsageFlushDnuTargetDate:
xpcMaintenanceActivityWithDuration:allowCellular:allowBattery:
appUsagePostGracePeriodSeconds
appUsageTaskGracePeriodOverride
appUsagePostsPerDay
appUsageDailyPostCountOverride
appUsagePostSpreadPeriodSeconds
appUsageTaskSpreadPeriodOverride
appUsageResetActorIDFrequencySeconds
appUsageResetActorIDOverride
setAppUsageResetActorIDTargetDate:
recordMetricsWithCompletionBlock:
_addObserverForBackgroundTaskWithIdentifierPrefix:withBlock:
flushMetricsWithReason:completion:
persistUsage
requestCheckInWithIdentifier:
_addRecordFavoriteAppsTask:
cancelBackgroundTaskWithIdentifier:
handleWakeWithName:result:
resetAppUsageTaskWithReason:
resetAppUsageActorIDDateWithReason:nextPostDate:
scheduleAppUsageFlushDnuWithReason:
shouldResetAppUsageActorID:
_addUpdateCheckJobWithDate:identifier:allowsCellular:requireScreenSleep:addGracePeriod:reason:
_setupEventHandlers
_backgroundTaskObservers
_observerLock
weakObjectsHashTable
registerConsumer:forActionType:
infoEnumerator
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleEngagementRequest:purchase:purchaseQueue:completion:
pushService:didReceiveMessage:
processPurchases:requestToken:withReplyHandler:
checkStoreQueue:
notifyDialogCompleteForPurchaseID:result:selectedButton:withResultHandler:
startPurchase:requestToken:withReplyHandler:
prepareAndGroupPurchaseInfos:
isPurchaseInFlightForBundleID:
processPurchaseInfo:withCompletionHandler:
processPurchaseInfos:requestToken:withCompletionHandler:
purchaseQueue
setPurchaseQueue:
_activeBatches
_purchaseQueue
T@"AMSPurchaseQueue",&,N,V_purchaseQueue
valueForUserInfoKey:
getRevokedProductsMap
_initWithProgressCache:
defaultWorkspace
addObserver:
_updatePhaseForJobWithBundleID:phase:
installProgress
setFractionCompleted:forBundleID:storeItemID:
doesNotContainPredicateWithProperty:values:
_predicateForBundleID:toUpdateToPhase:
databaseID
finishInstallID:withFinalPhase:
pauseInstallID:
resumeInstallID:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
cancelApp:onPairedDevice:withCompletionHandler:
cancelApp:withCompletionHandler:
pauseApp:withCompletionHandler:
resumeApp:withCompletionHandler:
_progressCache
_loadEvents
_handleAppleIDDidChangeNotification:
timeZoneWithName:
secondsFromGMTForDate:
localTimeZone
setWeekOfYear:
initWithCalendarIdentifier:
systemTimeZone
setTimeZone:
dateByAddingComponents:toDate:options:
rangeOfUnit:startDate:interval:forDate:
nextPayoutWeekEndDateForDate:
_resetCache
start
lib_simpleWeekDate
componentsJoinedByString:
initWithACAccount:
sharedDatabase
importAccountEvent:
setEntityClass:
setMemoryEntityClass:
initOnConnection:descriptor:
activeStartTime
activeEndTime
sortUsingComparator:
accountID
eventType
setEnd:
event
setEvent:
setStart:
allEvents
diagnosticDescription
nextPayoutWeekStartDateForDate:
name
dateWithTimeIntervalSinceReferenceDate:
sharedCoordinator
testDates
activeAccountsInWeekWithDate:
resetCache
_accountsForWeekCache
_lastCacheReset
appleID
_event
_start
_end
T@"AccountEvent",C,V_event
Td,V_start
Td,V_end
doubleForKey:
_registerBagKeys
cacheInvalidated
registerBagKeySet:forProfile:profileVersion:
boolForKey:ifMissing:
arrayForKey:
dateForKey:
deleteFromDatabase
purgeableAppsForVolume:urgency:performAvailabilityCheck:logKey:
purgeableApps
launchEventsFromDate:toDate:
_launchEventsFromDate:toDate:prediate:
_syncDuetEventsIfNeededWithLogKey:
_purgebaleForUrgency:logKey:outError:
initWithPurgeableSize:purgeableApps:
setError:
_filterPurgeableApps:performAvailabilityCheck:additionalApps:desiredPurgeSize:client:logKey:
diskUsage
unsignedLongLongValue
asdApp
initWithPurgedSize:purgedApps:
_purgeApps:desiredPurgeSize:purgedSize:offloadOnly:logKey:
_syncDuetEventsWithLogKey:
purgeableForVolume:urgency:override:
_appDenyList:
_appPluginDenyListWithLogKey:
_watchAppBundlesWithLogKey:
offloadingAppsEnabled
boolForKey:
purgeAppsForVolume:urgency:desiredPurge:performAvailabilityCheck:additionalApps:offloadOnly:logKey:client:
purgedApps
purgedSize
_appPurgeDenyList
containsObject:
_bundleIDsForVPNPluginsOrAppsContaingEntitlements:logKey:
_appPurgePluginDenyList
getCredentialStateForClientID:completion:
initWithBag:caller:keyProfile:
setClientInfo:
performLookupWithBundleIdentifiers:itemIdentifiers:
allItems
iTunesStoreIdentifier
_cutoffDateForUrgency:
_appsBasedOnWindow:cutoffDate:logKey:ourError:
isExtension
containingBundleID
initWithBundleID:
endTime
setLastExtensionLaunched:
setLastLaunched:
isExtensionUsage
lastExtensionLaunched
lastLaunched
setUsageWindowMatchType:
removabilityForAppWithBundleID:completion:
storeItemID
stringValue
sharedDatabaseContext
initWithBundleIdentifier:allowPlaceholder:error:
storeItemIdentifier
_isOffloadCandiate:
staticUsage
setDiskUsage:
setStoreItemID:
setReason:
accessUsingBlock:
_availableInStore:logKey:error:
_offloadingGracePeriodStartDate
applicationDSID
applicationDownloaderDSID
isPlaceholder
isDeletable
isBeta
isProfileValidated
applicationHasMIDBasedSINF
isLaunchProhibited
allUsageForStreams:fromDate:endDate:error:
sourceStream
startDate
endDate
initWithSourceType:
setContainingBundleID:
setStartTime:
setEndTime:
setExtension:
cutoffDate
lib_installedStoreAppEnumerator
_processApp:context:
windowApps
usageWindowMatchType
applicationExtensionRecords
pluginProtocolDenyList
pluginDenyList
extensionPointRecord
denyList
isBeyondGracePeriod
watchBundles
windowCutoffDate
_registeredDateForRecord:logKey:
_appPurgeRecentInstallCutoffDate
demoteAppToPlaceholderWithBundleID:forReason:error:
_recordOffloadingCoreAnalyticsEventsWithRequestedSpace:actualPurged:offloadedAppCount:isRescue:
_appsUsedWindow:logKey:ourError:
_isBeyondGracePeriodWithLogKey:
setBeyondGracePeriod:
_springBoardWidgetContextWithLogKey:
setPluginDenyList:
arrayByAddingObjectsFromArray:
setWatchBundles:
setDenyList:
setPluginProtocolDenyList:
setCutoffDate:
setWindowApps:
setWindowCutoffDate:
_offloadableAppsWithInterval:context:outError:
_sortDescriptors
sortedArrayUsingDescriptors:
initWithKey:ascending:
bundleRecordWithApplicationIdentifier:error:
registrationDate
secondsFromGMT
stringByExpandingTildeInPath
dictionaryWithContentsOfURL:
_springboardUpdateWidgetFromWidgetDictionary:widgetPlugins:widgetContainingBundles:
recordOffloadingGracePeriodStartDateIfUnset
_appPurgeCutoffDate
allPurgeablesForVolume:
purgeableForVolume:urgency:
purgeForVolume:urgency:desiredPurge:
cancelPurge
clearLaunchHistoryForBundleIDs:
diagnosticDescription:
purgeableAppsForVolume:urgency:performAvailabilityCheck:
syncDuetEvents
recordDailyOffloadingCoreAnalyticsStatus
_authorizedBySignInWithApple:logKey:
_launchEventsFromDuetFromDate:endDate:logKey:
_authorizationController
_fullDenyList
_fullPluginDenyList
_gracePeriodSeconds
_lastDuetSync
_watchAppList
_lastExtensionLaunched
_lastLaunched
_usageWindowMatchType
T@"NSString",C,N,V_bundleID
T@"NSDate",C,N,V_lastExtensionLaunched
T@"NSDate",C,N,V_lastLaunched
Tq,N,V_usageWindowMatchType
_beyondGracePeriod
_denyList
_cutoffDate
_pluginDenyList
_pluginProtocolDenyList
_watchBundles
_windowApps
_windowCutoffDate
beyondGracePeriod
TB,N,GisBeyondGracePeriod,V_beyondGracePeriod
T@"NSArray",C,N,V_denyList
T@"NSDate",C,N,V_cutoffDate
T@"NSArray",C,N,V_pluginDenyList
T@"NSArray",C,N,V_pluginProtocolDenyList
T@"NSArray",C,N,V_watchBundles
T@"NSDictionary",C,N,V_windowApps
T@"NSDate",C,N,V_windowCutoffDate
username
ams_altDSID
unsignedCharValue
altDSID
timestamp
_initWithAddedIAPs:removedIAPs:revision:isUpdate:forAccount:
newRefreshResponseWithIAPs:revision:forAccount:
newUpdateResponseWithAddedIAPs:removedIAPs:revision:forAccount:
addedIAPs
removedIAPs
isUpdate
_update
_addedIAPs
_removedIAPs
T@"NSArray",R,V_addedIAPs
T@"NSArray",R,V_removedIAPs
update
TB,R,GisUpdate,V_update
_initWithStatus:error:
dataComplete
failedWithError:
running
isDataComplete
isFailed
TB,R,GisDataComplete
failed
TB,R,GisFailed
ams_iTunesAccounts
purchaserDSID
lib_setPropertiesWithAccount:
lib_updateMetadataForApplication:error:
databaseTable
memoryEntityClass
asf_sessionForClient:
extractionPath
UTF8String
consumeData:andWait:withCompletionHandler:
_streamStatus
_setStreamStatus:
supplyBytes:withCompletionBlock:
finishStreamWithCompletionBlock:
_prepareExtractor:toPath:completionBlock:
suspendStreamWithCompletionBlock:
prepareForExtractionToPath:completionBlock:
prepareForExtraction:
_dataComplete
_extractor
_hasConsumedData
_path
_resumptionOffset
_backpressureSemaphore
_consistencyGroup
_locked_streamStatus
lib_logUUID
initWithApplicationProxy:
receiptFlags
setReceiptFlags:
purchaseOwner
attributeToAppStore
setAttributeToAppStore:
receipt
revoked
setSuccess:
handleAuthenticateRequest:resultHandler:
handleDialogRequest:resultHandler:
handleEngagementRequest:resultHandler:
_app
_attributeToAppStore
_revoked
_receiptFlags
_receipt
T@"ACAccount",C,N,V_account
TB,N,V_attributeToAppStore
TQ,N,V_receiptFlags
T@"ASFReceipt",R,N,V_receipt
TB,R,N,V_revoked
isAppAnalyticsAllowed
hardwarePlatform
_handleAnalyticsUsageSwitchChange:
contextForType:
_flushMetricsWithContext:reason:completion:
_getAppEventsWithCompletionBlock:
_recordExternalAppEvents:completionBlock:
_recordInternalEventsForBundleIDs:eventType:installType:context:
_recordLaunches
_postMetrics
_resetWithReason:resetActivity:
getAppEventsForType:context:
createMetricsEventForAppEvent:eventType:context:
setOsBuild:
setPlatform:
startTime
setTimeRangeStart:
setTimeRangeEnd:
setUsageCount:
isCandidateAppMetadata:
isStoreOriginated
hasMIDBasedSINF
isAppClip
isOffloaded
getPriorAppMetadataWithContext:
initWithPriorInstalls:installEvents:
setHistoryMap:
createMetricsEventsForEventType:events:context:
_includeLaunches
getLaunchAppEventsWithContext:
appEventEntityClass
importAppEvents:class:error:
getAppEventsForType:context:orderingProperties:
createAggregateMetricsEventsForEventType:events:context:
isTemporary
getDeletedAppsEventsWithContext:
setKeepAlive:
getAggregatedEventMap:eventType:context:
setIsTemporary:
_allAppEvents:
externalMapping
crossfireIncludeLaunches
_shouldEnableCrossfireMetricsForSession
_cleanup:reason:
insertEventsIntoDatabase:
initWithExternalEvent:
createAppEventsForBundleIDs:eventType:installType:connection:context:
writeAppMetadataForBundleIDs:context:
_removeAppsWithBundleIDs:context:
recordLaunchesIntervalStartDate
_removeAppWithBundleID:context:
recordIntervalStartDate
_resetDB
writeCurrentAppMetadata:
fileExistsAtPath:
writeToFile:atomically:encoding:error:
removeItemAtPath:error:
getAppEventsWithCompletionBlock:
recordAppEvent:completionBlock:
recordDeletedApps:
recordLaunchesWithCompletionBlock:
recordInstalledApps:installType:
resetMetricsWithCompletionBlock:
sendMetricsWithCompletionBlock:
setupWithReason:
shouldPostCrossfireMetrics
createMetricsEventsForEventType:context:
decorateMetricsEvent:context:
isCandidateAppProxy:isMetadataLookup:
_createAggregateMetricsEventsForEventType:events:context:
_handleMacAnalyticsUsageSwitchChange:
_updateLaunchdWakeupFileForMacOS
_collectingMetrics
_osBuild
_platform
options
manifest
manifestType
client
clientID
persistentID
legacy_installForActivity:error:
resultWithInvalidActivity:bundleID:
_createCoordinatorForInstall:error:
numberValueForProperty:
urlValueForProperty:
initWithURL:logKey:
contentLength
importInstall:error:
userInitiateInstallID:
initWithPersistentID:onConnection:
copyEvaluatorDownload
changeset
finishWithFinalPhase:
unionChangeset:
addSchedulerPollReason:
resultWithExistingActivity:bundleID:
enumerateActivitiesUsingBlock:
initWithResults:
_setResponse:
T@"ASDInstallManifestRequestOptions",R,D,N
_init
currentRequestToken
taskWithXPCAppMetadata:requestToken:
processedExternalIDs
_installEnterpriseApps:withReplyHandler:requestToken:
_installSystemApps:withReplyHandler:requestToken:
_installWatchApps:onPairedDevice:withReplyHandler:requestToken:
stringByAppendingPathExtension:
initWithPath:
watchRequestThrottle
makeClock
initWithClock:duration:persistence:
addObserverForName:object:queue:usingBlock:
_requestThrottle
taskWithXPCAppMetadata:forDevice:requestToken:requestThrottle:
defaultService
installAppReviewApps:withReplyHandler:
installEnterpriseApps:onPairedDevice:withReplyHandler:
installScreenSyncApps:withReplyHandler:
installSystemApps:onPairedDevice:withReplyHandler:
installWatchApps:onPairedDevice:withReplyHandler:
_bagChangedNotification
_databaseStore
externalIDString
initWithUUIDString:
destinationID
initWithMetadata:forDevice:
networkConstraintsForMediaType:withBag:
lib_defaultConstraintsWithError:
mediaKindsQueryString
dataUsingEncoding:
dataForRequestWithError:
contentType
initWithCurrentRevision:
prepareStatement:error:
executePreparedStatement:error:bindings:
finalizePreparedStatement:error:
setPromotionInfo:forBundleID:error:
removePromotionInfoForBundleID:
_copyEntitlementsForTask:withPID:
_hasLegacyEntitlement:forTask:withPID:
initWithAuditToken:forPID:
hasEntitlement:
_entitlements
_task
_pid
bytesReceived
setBytesReceived:
dataConsumer
setDataConsumer:
metrics
setMetrics:
_bytesReceived
_dataConsumer
_metrics
TQ,V_bytesReceived
T@"<AssetDataConsumer>",&,V_dataConsumer
T@"NSError",&,V_error
T@"NSURLSessionTaskMetrics",&,V_metrics
eventSubtype
exactBundleVersion
storeCohort
deviceIdentifierForVendor
UUIDString
itemName
shortVersionString
storeFront
logTypeForEventType:
externalTypeForEventType:
externalSubtypeForEventType:
addForeGroundUsage:duration:refType:refSource:
appMetadata
appPlatform
cohort
deviceVendorID
evid
eventKey
isDeviceVendorIDRepaired
isClip
launchEndTime
launchStartTime
shortVersion
storefront
foregroundEvents
temporaryAccountID
setTemporaryAccountID:
_mutableForegroundEvents
_temporaryAccountID
TQ,R,N
deviceVendorIDRepaired
TB,R,N,GisDeviceVendorIDRepaired
beta
TB,R,N,GisBeta
clip
TB,R,N,GisClip
T@"NSNumber",R,N
TC,R,N
T@"NSDate",R,N
T@"NSNumber",C,N,V_temporaryAccountID
primaryContentHash
contentHashFromDictionary:
assetPacksPath
removeItemAtURL:error:
URLByDeletingPathExtension
URLByAppendingPathExtension:
URLByDeletingLastPathComponent
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
isFileURL
_metadataURLForURL:
_metadataFromURL:
isEqualToDictionary:
deleteAssetPackOnDiskAtURL:
setLocalURL:
setPinCount:
setDownloadIdentifier:
setPurgeReason:
applicationBundleID
_suggestedLocalFilename
numberWithUnsignedInteger:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
contentHash
writeMetadata:forAssetPackAtURL:
dataWithPropertyList:format:options:error:
writeToURL:atomically:
dataWithContentsOfURL:
propertyListWithData:options:format:error:
purgeWithReason:
suggestedDestinationPathWithStorageID:
writeMetadata
isOnDeviceAtURL:withValidMetadata:
resultComplexity
Tq,R
ams_mapWithTransformIgnoresNil:
lib_firstObjectPassingTest:
_offers
_externalVersionID
_itemID
knownMDMInstalls
installPhase
uuidValueForProperty:
stringValueForProperty:
setBundleIdentifier:
setBundleVersion:
setTitle:
setState:
enumeratePersistentIDsUsingBlock:
statusItems
setStatusItems:
_statusItems
T@"NSArray",&,V_statusItems
objectAtIndex:
addUploadUrls:
uploadUrlsCount
clearUploadUrls
uploadUrlsAtIndex:
uploadUrlsType
setExpiresTimeMillis:
setHasExpiresTimeMillis:
hasExpiresTimeMillis
uploadUrls
setUploadUrls:
expiresTimeMillis
_expiresTimeMillis
_uploadUrls
_has
T@"NSMutableArray",&,N,V_uploadUrls
TB,N
TQ,N,V_expiresTimeMillis
_registerDistributedNotificationEventHandler
_registerNotificationEventHandler
stringWithUTF8String:
postNotificationName:object:userInfo:
postNotificationName:object:
_buyParameters
_price
_appSize
serviceClient
publisherWithServiceClient:
enableDiagnostics
initWithCode:
publishMessage:
publisherWithRequestToken:
logCode:usingBlock:
_enableDiagnostics
hashTableWithOptions:
initWithOptions:
_performMigrationIfNeededForStore:
transactionClass
_modifyUsingTransactionClass:withBlock:
_reentrantSafePerformBlock:
sessionClass
_readUsingSession:withBlock:
databasePath
encryptionKeyId
sleepForTimeInterval:
tableExists:
performTransaction:
schemaName
initWithConnection:schemaName:
connectionNeedsResetForReopen:
connectionNeedsResetForCorruption:
modifyStore:usingTransaction:
modifyStore:usingTransactionClass:withBlock:
readStore:usingSession:
verifyDatabaseIntegrity
_transactionQueue
_migratedStores
unarchivedObjectOfClass:fromData:error:
_decodedArrayForProperty:ofClass:
archivedDataWithRootObject:requiringSecureCoding:error:
successfulImageUploads
setSuccessfulImageUploads:
_removePendingImageUploadForURLString:
pendingImageUploads
setPendingImageUploads:
accountDSID
attemptCount
betaBuildGroupID
appVersion
feedback
nextRetryDate
state
setAttemptCount:
setFeedback:
setNextRetryDate:
addSuccessfulImageUpload:
T@"ASDBetaAppVersion",R,N
T@"ASDBetaAppFeedback",&,N
T@"NSDate",&,N
T@"NSArray",&,N
TQ,N
_beginSessionWithDPInfo:error:
initWithChunkedDigest:
setResumptionOffset:
_resetDecryptionBufferAndDigestVerifier
initWithDPInfo:error:
_resizeSampleSizeArray:
digest
setDigest:
streamAdapter
setStreamAdapter:
_partialSampleBuffer
_partialSampleBufferLength
_consumerQueue
_digestVerifier
_sampleSizes
_sampleSizesCount
_digest
T@"ChunkedDigest",&,V_digest
T@"<AssetDataConsumer>",&,V_streamAdapter
blockTaskWithBlock:
_block
pipeline
orderedSetWithObject:
finishInstallIDs:transaction:
lib_signpostId
installInfoForInstallID:
installEvent
responsibleClientID
_summaryEventForEntity:responsibleClientID:
lib_serverDialogID
setServerDialogID:
postFailureWithError:reason:
bestPackage
_shouldRetryFullUpdateForInstall:error:
restartInstallID:
failWithError:
addAppUpdateToFinish:withUpdateState:
_appForEntity:error:
notificationForFailedInstalls:
postNotification:
stopInstallIDs:withReason:transaction:
postCompletion
postProcessAutomaticUpdatesCompleted
activeRestores
postRestoreCompleted
importInstall:mustExist:error:
predicateForInstallFromSource:bundleID:itemID:error:
getUUIDBytes:
propertyValues
setPackagesWithArray:
installPolicy
addLegacyNotification:
importInstall:
pauseInstallID:withPhase:forReason:
setInstallPhase:forInstallID:
setInstallError:
setStatus:
initWithInstallKey:code:shouldPost:
setQueueDate:
setResponsibleClientID:
setStoreVersionID:
completeInstallID:
failInstallID:withError:
finishHardFailInstalls:
importInstalls:
importRemoteIntalls:
prioritizeInstallID:
updateInstalls:
_changeset
T@"AppInstallsDatabaseChangeset",R,V_changeset
initWithIdentifier:transactionIdentifier:info:
transactionIdentifier
info
task
setTask:
_identifier
_transactionIdentifier
_info
T@"NSNumber",R,N,V_identifier
T@"NSString",R,N,V_transactionIdentifier
T@"NSDictionary",R,N,V_info
T@"InAppDownloadTask",&,N,V_task
initWithDatabase:
commitExternalChanges
initWithDigest:
verifyBuffer:length:error:
appendBytes:length:
bytes
getBytes:length:
mutableBytes
setLength:
finalAndVerifyError:
bufferEmpty
decodeInput:length:output:length:error:
decoderError
decoderState
disableAutodetection
setDisableAutodetection:
_stream
_transaction
_verifier
_disableAutodetection
_decoderError
_decoderState
T@"NSError",R,V_decoderError
Tq,R,V_decoderState
TB,V_disableAutodetection
engagementData
setEngagementData:
payload
setPayload:
appMetricsEventTypeForAppEventType:
setData:
T@"NSDictionary",&
T@"NSDictionary",R
metricsType
isPosted
setEventSubtype:
setMetricsType:
setPosted:
_timestamp
T@"NSString",C,N
TC,N
Tq,N
T@"NSDictionary",C,N
T@"NSDate",R,N,V_timestamp
posted
TB,N,GisPosted
performRefetch
addFinishBlock:
setAuthenticationType:
setDebugReason:
localizedName
setProxyAppName:
initWithAccount:options:
_buildDialogRequest
lib_isCancelled
_buildAuthenticateRequestForAccount:
presentAuthenticateRequest:resultHandler:
initWithAccount:authorizeReason:
downloaderDSID
setAuthorizeReason:
setFamilyMemberAccountID:
performAuthorization
initWithApplication:
performRefetchWithCompletionHandler:
_performAuthenticationForAccount:
_performAuthorizationForAccount:
T@"NSString",C,V_logKey
requiredProperties
substringToIndex:
initWithCapacity:
appendFormat:
batchLogKey
initWithCoordinatorTag:logCode:
initWithEntity:
initWithMemoryEntity:
setBatchLogKey:
externalID
logCode
_batchLogKey
_externalID
_logCode
T@"NSString",C,N,V_batchLogKey
T@"NSUUID",C,N,V_externalID
T@"NSNumber",C,N,V_itemID
T@"NSString",C,N,V_logCode
asyncUsingBlock:
addOperationWithBlock:
T@"SyncTaskScheduler",R
coordinatorForBundleID:hasIntent:error:
coordinatorForBundleID:withIntent:createIfNotExisting:wasCreated:error:
enumerateCoordinatorsWithIntent:error:usingBlock:
enumerateCoordinatorsWithIntent:usingBlock:
enumerateCoordinatorsUsingBlock:
cancelCoordinatorWithBundleID:cancelError:error:
tcr_keyPath
tcr_numberForKeyPath:
tcr_dictionaryForKey:
tcr_boolForKey:
archiveSize
digestChunk
digestHashes
packageCompression
uncompressedSize
_archiveSize
_digestChunk
_digestHashes
_dpInfo
_packageCompression
_sinf
_uncompressedSize
T@"NSNumber",R,N,V_archiveSize
T@"NSNumber",R,N,V_digestChunk
T@"NSArray",R,N,V_digestHashes
T@"NSData",R,N,V_dpInfo
Tq,R,N,V_packageCompression
T@"NSData",R,N,V_sinf
T@"NSNumber",R,N,V_uncompressedSize
stringByDeletingLastPathComponent
attributesOfFileSystemForPath:error:
availableDiskSpaceAtPath:
ensureAvailableDiskSpace:atPath:
recoverableDiskSpaceAtPath:
_odr_isInternetHostReachable
_odr_isContentValid
host
requestWithURL:
setHTTPMethod:
sharedSession
expectedContentLength
odr_isRefreshRequired
_discardRequestPropertiesForTask:
_dequeueRequestPropertiesForTask:
_processResponseDictionary:withRequestProperties:
tcr_dataForKeyPath:
tcr_stringForKeyPath:
initWithBase64EncodedString:options:
importKeybagWithData:error:
KBSyncType
_importKeyBagFromDictionary:
_requestProperties
initForClient:withOptions:
_response
_client
T@"XPCClient",R,N,V_client
T@"ASDRequestOptions",R,N,V_options
T@"ASDRequestResponse",R,V_response
initWithTask:
recordTaskInfo:forTask:
originalRequest
strongToStrongObjectsMapTable
newTaskInfoForTask:
exchangeTaskForTaskInfo:withTask:
removeAllTaskInfo
removeTaskInfo:
taskInfoForTask:
action
setAction:
configurationID
setConfigurationID:
ignoreAssetCache
setIgnoreAssetCache:
keepAlive
setProgress:
promise
setPromise:
properties
setProperties:
request
setRequest:
requestOffset
setRequestOffset:
session
setSession:
signpostId
setSignpostId:
_ignoreAssetCache
_action
_configurationID
_keepAlive
_progress
_promise
_properties
_request
_requestOffset
_session
_signpostId
Tq,V_action
T@"NSString",&,V_configurationID
TB,V_ignoreAssetCache
T@"KeepAlive",&,V_keepAlive
T@"NSString",&,V_logKey
T@"NSProgress",&,V_progress
T@"AssetPromise",W,V_promise
T@"AssetRequestProperties",&,V_properties
T@"NSURLRequest",&,V_request
TQ,V_requestOffset
T@"NSURLSession",W,V_session
TQ,V_signpostId
T@"NSURLSessionTask",R,V_task
promotionInfoForProductIdentifiers:bundleID:error:
assets
lib_categorizeItemsUsingBlock:
tcr_boolForKeyPath:
thinnedAssets
assetsCategorized
hasMessagesExtension
launchProhibited
platformIdentifier
subtitle
thinnedAssetsCategorized
initWithIdentity:
settingsForIdentity:
isAutomatic
allowAutomaticDownloads
cellularDataPrompt
isRoaming
sizeLimitForNetworkType:
evaluatorForIdentity:
evaluateForDownload:
_constraints
_identity
_settings
_initWithVersion:
scannerWithString:
scanInteger:
scanString:intoString:
canonicalString
isEqualToVersion:
anyVersion
isAnyVersion
_version
TB,R,GisAnyVersion
arcadeLaunchTimeoutIntervalSeconds
setTimeout:
_showTimeoutDialogWithRetryTimeout:
floatValue
arcadeRepairTimeout
_handleRecoveryWithTimeout:retryTimeout:
setCanMakeAccountActive:
initWithAccount:options:bag:
performAuthentication
isSubscribedToArcade:timeout:outError:
forceSbsyncForArcadeRepairs
subscriptionStatusForAccountID:returningError:
initWithSyncType:
setUserInitiated:
addTasks:waitUntilFinished:
subscriptionStatus
_showUpsell
relaunchOptions
_showAllOcelotApps:
_showOKDialogWithTitle:message:
_handleAuthenication
_handleSbsyncAndRepairWithTimeout:retryTimeout:
_handleAppRemovedFromProgram
_switchUserFromUserName:forAccount:
_showLoginDialog
_showOfflineDialog
_showOfflineExpiredSubscriptionDialog
_startTime
setPurgeableReason:
setStaticDiskUsage:
plugins
setPlugins:
order
setOrder:
_diskUsage
_plugins
_order
_storeItemID
T@"NSNumber",C,N,V_diskUsage
T@"NSArray",C,N,V_plugins
Tq,N,V_order
T@"NSString",C,N,V_reason
T@"NSNumber",C,N,V_storeItemID
applicationsDidInstall
setApplicationsDidInstall:
_applicationsDidInstall
T@?,C,V_applicationsDidInstall
_resultEnumeratorForComparisonPredicate:error:
resultsMatchingPredicate:error:
leftExpression
expressionType
rightExpression
lib_constantValues
predicateOperatorType
lib_keyPath
_resultEnumeratorForKeyPath:matchingValues:error:
resultsWithBundleIDs:error:
resultsWithItemIDs:error:
initWithEvalulator:
resultEnumeratorForPredicate:error:
_evaluator
_setPropertiesUsingBundle:
_setupUserAgent
_copyExecutablePathForConnection:
lastPathComponent
auditToken
initWithBytes:length:encoding:
initWithBundleIdentifier:
setClientVersion:
userAgentForProcessInfo:
initWithApplicationID:
auditTokenData
bundlePath
clientVersion
userAgent
clientIDHeader
_auditTokenData
_bundlePath
_clientVersion
_userAgent
_clientIDHeader
T@"NSString",R,V_clientIDHeader
setClusterID:
setClusterVersion:
setUsageWeight:
initWithContainerID:bag:
lib_sharedInstanceWithContainerId:
initWithStatement:
sqlite3_stmt
executeWithError:usingBlock:
reset
int64ForColumnIndex:
enumerateRowsUsingBlock:
numberForColumnIndex:
bindArray:atPosition:
bindData:atPosition:
bindDataCopy:atPosition:
bindDate:atPosition:
bindDictionary:atPosition:
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindStringCopy:atPosition:
bindUUID:atPosition:
bindURL:atPosition:
clearBindings
firstInt64Value
firstNumberValue
hasRows
_statement
T@"NSNumber",R,C,N
stringForColumnName:
executeQuery:withResults:
_setUserVersion:
column:existsInTable:
currentUserVersion
lib_timeElapsedUntilNow
_hasRecentlyAttemptedToLaunchApplication:
_recordAttemptToLaunchApplication:
application
launchApplicationWithOptions:completionHandler:
T@"ApplicationProxy",R,C,N,V_application
optionsWithDictionary:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
internalRequestToken
initWithManifestURL:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
dialogForAuthenticationChallenge:
initWithRequest:
present
textfieldValues
user
credentialWithUser:password:persistence:
_isExternalURL:
_isSecureURL:
_runWithURLRequest:
_showError:
reverseObjectEnumerator
findCompatibleDescriptorFromArray:
enumerateKeysAndObjectsUsingBlock:
applicationType
initWithDomain:code:userInfo:
setScheme:
queryItemWithName:value:
setQueryItems:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
setArtistName:
setItemName:
setHasMessagesExtension:
_enterpriseInstallationURL:withDigest:
setEnterpriseInstallURL:
setLaunchProhibited:
_determineCanonicalAssetsForExternalItem:matchedVariantDescriptor:
canonicalIdentifier
setVariantID:
lib_databaseRepresentationError:
copyDictionaryRepresentation
initWithPropertyValues:
_newPackageForExternalAssets:withVariantDescriptor:
writeReceiptData:forApplication:logKey:error:
_enterpriseInstallationAllowedForBundleID:withName:isValidHRNClient:error:
items
_isSupportedPlatformIdentifier:
_newInstallForItem:manifestURL:manifestDigest:clientID:logKey:withError:
initWithDigestType:
updateWithData:
finalAndCompute
containsItemsForPlatform:
_requestManifestInstallationOnActivePairedWatch
_newInstallsForUPPManifest:withError:
shouldHideUserPrompts
_showConfirmationPromptForInstalls:response:
_importInstalls:
externalManifestSkipLocalCheck
scheme
caseInsensitiveCompare:
port
endpointWithHostname:port:
initWithEndpoint:parameters:
isLocal
externalManifestSkipHTTPSCheck
initWithURL:
setTimeoutInterval:
lib_defaultUserAgent
setHTTPUserAgent:
sessionWithConfiguration:delegate:delegateQueue:
_handleResponse:withData:
finishTasksAndInvalidate
requestForConfirmationWithManifestURL:firstName:totalCount:
deliverDialogRequest:withResultHandler:
requestForError:withManifestURL:logKey:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
initWithManifestURL:requestToken:shouldHideUserPrompts:
setClientID:
manifestDigest
setManifestDigest:
setRequestToken:
setShouldHideUserPrompts:
_downloadIDs
_manifestURL
_receivedDigest
_shouldHideUserPrompts
_manifestDigest
_requestToken
T@"NSString",&,V_clientID
T@"NSString",&,V_manifestDigest
T@"XPCRequestToken",&,V_requestToken
TB,V_shouldHideUserPrompts
addDeletedStorageID:
_deleteAssetPacksMatchingPredicate:
_deleteTagsMatchingPredicate:
addDeletedAssetPackURL:
updateUsingAssetPack:verifyContentHashes:
_assetPackEntityForBundleID:bundleKey:
tags
assetPackIDsForTag:
updateManifest:forApplication:verifyContentHashes:
updateBundleTagManifest:forApplication:
allAssetPackIDs
_manifestEntityForManifest:
_existingStorageIDForBundleID:
isLocalCache
source
allAssetPacks
_assetPackEntityForAssetPack:
deleteManifestForApplication:
deleteMappingForBundleID:
mapBundleID:toBundlePath:
markAssetDownloadAsPaused:download:
purgeAllTagsForApplication:
resetStateForApplication:
updateAsset:
updateAssetDownloadSizeForDownload:
updateManifest:bundleTagManifest:forApplication:verifyContentHashes:
setUserInfoObject:forKey:
initWithProgress:
updateReportForRequestID:withSecondsRemaining:bytesDownloaded:
_lastEnhancedProgressReport
_tagRequests
T@"NSString",R,V_logKey
T@"NSProgress",R,V_progress
_beginObservingAccountChangeNotification
keepAliveWithName:
executeQuery:withError:
activeAccount
_getHideShowRequestContextToHideItem:forAccount:withError:
initWithBagContract:context:
updateWithContext:withToken:withReplyHandler:
startRequestWithCompletionHandler:
_getHideShowRequestContextToShowAllForAccount:withError:
commandWithPurchaseForAccountID:expectedItemID:
setReplyHandler:
_queueCommand:
_updateForAccountID:withContext:token:replyHandler:
numberForUserInfoKey:
commandWithPushNotificationForAccountID:serverRevision:
commandWithContext:forAccountID:
hashedDescription
_handleAccountChangedNotification
setAccountID:
setStoreIDs:
setIsFirstParty:
setIsHidden:
setIsPreorder:
setApp:
setShow:
newContextWithItems:account:client:
lib_queue:
_performNextQualifyingUpdateRequest
cancelWithReason:
lib_dequeue
shouldRunUsingDatabaseStore:
runUsingAccount:databaseStore:
executeQuery:withReplyHandler:
setHidden:forStoreItemID:withToken:withReplyHandler:
showAllWithToken:withReplyHandler:
updateForAccountID:expectedItemID:withReplyHandler:
updateForAccountID:withContext:withToken:withReplyHandler:
_bagContract
_commandRunning
_commandStack
_dataForRequestWithKnownApps:revision:
initToMemory
initWithStream:
startContainerWithCode:
_requiredFields
writeString:withCode:
writeUInt32:withCode:
writeUInt8:withCode:
purchaseToken
lockerItemID
writeUInt64:withCode:
endContainerWithCode:
propertyForKey:
initWithKnownApps:currentRevision:
_knownApps
lowDataPromptThreshold
standardUserDefaults
registerDefaults:
integerForKey:
_availableSpaceOnDeviceRootVolume
_availableSpaceCushion
activeClients
clientProxy
sendLowDiskSpaceNotification
componentsWithURL:resolvingAgainstBaseURL:
queryItems
setObject:atIndexedSubscript:
setURL:
addTask:withQualityOfService:
maxPinnedODR
clientForAppBundleID:
isAppRunning:
purgeable
stringFromByteCount:countStyle:
_currentDownloadStatus
baseURLForODRContent
allCurrentDownloadRequests
setNumberStyle:
setMaximumFractionDigits:
setMultiplier:
downloadPath
destinationPath
streamable
loadingPriority
duplicateDownloadCount
stringFromNumber:
requestingAppBundleID
initialize
checkAndRequestRequiredSpaceForRequest:
expireAssetURLsForBundleIDs:
handleInstalledApplication:
performResourceAccessBlock:forApplicationBundleID:
performResourceAccessBlock:
purgeBytes:odrOnly:
purgeAllAssetsForApplication:forReason:
purgeAssetWithIdentifier:forReason:
_enumerateAllNonRunningAppAssetsLastUsedLaterThan:usingBlock:
_enumerateAllPurgeableAssetPacksUsingBlock:
_applicationMapping
_applicationMappingLock
_resourcesLock
_lowDisk
signpostID
_isWatchOnlyStoreItem:withError:
_validateStoreItem:externalID:withError:
purchase_installForStoreItem:usingPurchaseInfo:error:
supportsRequestFlow
_reportMissingSINFForStoreItem:
lib_legacyJobID
cancelDownloadURL
storeTransactionID
postAppsDone
overrideAutomaticType
initWithInstall:
suppressEvaluatorDialogs
setSuppressEvaluatorDialogs:
optimalDownloadWindow
setOptimalDownloadWindow:
currentStatus
discoveredUpdate
setRequiresPowerPluggedIn:
setPolicyBlock:
voucher
resultWithValidActivity:bundleID:
isRemoteInstall
setReportRemotely:
beginProgress:withReason:
completePurchaseWithResults:usingPurchaseInfo:
scheduleNextOptimalDownloadWindow
setDescriptionBlock:
presentRequestUsingSystemDialog
activePairedDevice
isSupported
hasWatchApp
lib_metadataWithStoreItem:
assetFullPackage
lib_setPropertiesWithSINFData:
metadataFromStoreMetadata:
setSkipIfInstalled:
redownloadParams
buyParamsWithString:
setParameter:forKey:
parameterForKey:
setRedownloadParams:
pairingID
_requestCompanionInstallationForStoreItem:
_fileName
_storeItems
_overrideAutomaticType
TB,V_overrideAutomaticType
_requestURLWithError:
initWithKnownIAPs:currentRevision:
initWithDataProvider:URL:
responseStatusCode
_parseResponseData:
startWithCompletionHandler:
IAPInfoBaseURL
IAPInfoDatabaseID
URLByAppendingPathComponent:
initWithResponseData:
isSuccess
serverRevision
_context
_responseData
setContext:
setUpdateState:forBundleIDs:logKey:
_handlePotentialProvisionedApp:itemID:status:logKey:
context
humanReadableReason
enumerateUpdatesUsingBlock:
rankForMediaType:
parentalControlsRank
resultWithRestrictedActivity:bundleID:
isBackgroundRequest
purchase_purchaseInfoForUpdateUserInitiated:
isMachineBased
initWithObjects:
createUpdateCoordinatorsForBundleIDs:context:enforceImportance:
_performAccountPurchases:
arrayByAddingObject:
lib_batchedWithMaxSize:
_performPurchaseBatch:forAccount:outError:
initWithPurchaseInfos:requestToken:
setCompletionHandler:
_failPurchaseWithError:usingPurchaseInfo:withCompletionHandler:
_displayCellularDialogsIfNecessary
defaultMonitor
isExpensiveOrCellular
copyCellularNetworkIdentityWithError:
dialogForUpdatesWithSize:limit:roaming:
isConstrained
dialogForUpdatesWithSize:
performUpdatePurchases:logKey:isBackgroundRequest:requestToken:jobResults:error:
taskWithContext:
_addItemIDToArrayIfNotPresent:array:
jobResults
orderedBundleIDs
setOrderedBundleIDs:
_updatesPurchases
_jobResultItems
_orderedBundleIDs
T@"UpdatesContext",&,N,V_context
T@"NSArray",C,N,V_orderedBundleIDs
_executeStatement:canFailMigration:bindings:
executeOptionalStatement:
executeOptionalStatement:bindings:
executeStatement:bindings:
_success
TB,R,V_success
_vouchers
clusterID
clusterVersion
launchesWeight
usageWeight
setLaunchesWeight:
initWithExternalMapping:
clusterKey
_clusterID
_clusterVersion
T@"NSNumber",C,N,V_clusterID
T@"NSNumber",C,N,V_clusterVersion
sharedDefaultEvaluator
initWithPathEvalulator:
addObserver:forKeyPath:options:context:
emulateNetworkUsingDefaults
applyNetworkEmulation:
removeObserver:forKeyPath:
isExpensive
interfaceType
_postStateChangeNotification
activeSubscriptionsDidChange
identityForSubscription:usingClient:error:
setRoaming:
inHomeCountry
_updateRoamingStatusForContext:
getCurrentDataSubscriptionContextSync:
copySIMIdentity:error:
_forcePropertyRefresh
usesInterfaceType:
_setPropertiesUsingPath:
_interfaceTypeForPath:
getDataStatus:completion:
subscriptionInfoDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
regDataModeChanged:dataMode:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatus:
internetConnectionAvailability:
tetheringStatus:
tetheringStatus:connectionType:
serviceDisconnection:status:
dataRoamingSettingsChanged:status:
isConnected
observeValueForKeyPath:ofObject:change:context:
_pathEvaluator
_subscriptionContext
_telephonyClient
_emulation
_emulationToken
_connected
_constrained
_expensive
_roaming
_interfaceType
connected
TB,R,GisConnected,V_connected
constrained
TB,R,GisConstrained,V_constrained
expensive
TB,R,GisExpensive,V_expensive
Tq,R,V_interfaceType
roaming
TB,R,GisRoaming,V_roaming
initWithFormat:
initWithMigratorType:
setupFollowingMigration
_migrateDateFromSpotlight:
copyConfiguration
migratorType
addPurchaseIntent:
clearPurchaseIntentsForBundleID:
purchaseIntentsForBundleID:afterDate:error:
resetPurchaseIntentTimestampsForBundleID:
manager
postPurchaseIntentNotificationIfNeededForBundleIDs:
purchaseIntentAppInstallSheetOpenForBundleID:
purchaseIntentsForBundleID:afterDate:
_bundleIdForCurrentInstallSheet
sessionReporterKey
lastRefreshDate
isExpired
expired
TB,R,N,GisExpired
_initWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
newContextWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
requestingAccount
knownApps
purchaseHistoryContext
_accountID
_requestingAccount
_purchaseHistoryContext
Tq,R,V_accountID
T@"ACAccount",R,V_requestingAccount
T@"NSArray",R,V_knownApps
TQ,R,V_purchaseHistoryContext
tcr_nullForKey:
_initWithComponents:
_isValid
osVersion
_valueForComponent:
_findCompatibleDescriptor:
_findCompatibleDescriptorForDevice:fromVariants:
isEqualToDescriptor:
productVersion
productVariants
productType
sortedArrayUsingComparator:
_filterAndSortVariants:compatibleWithDevice:
isUniversal
descriptorForString:
descriptorForUniversal
findCompatibleDescriptorFromDictionary:usingKeyProfile:
findCompatibleDescriptorForDevice:fromVariants:
hasCompatibleDescriptorFromArray:
hasCompatibleDescriptorFromDictionary:usingKeyProfile:
_components
_universal
T@"OSVersion",R,C
universal
TB,R,GisUniversal,V_universal
stringWithCapacity:
subdataWithRange:
lib_enumerateSubdataWithOffset:length:usingBlock:
lib_gzippedData
isConfiguratorInstall
missingRequiredSINF
initWithOptions:forClient:
resultChangeType
_handleVPPRecoveryWithOutError:
verifyData:error:
write:maxLength:
fileHandleForUpdatingAtPath:
chunkSize
readDataUpToLength:error:
bytesValidated
truncateAtOffset:error:
closeAndReturnError:
outputStreamToFileAtPath:append:
initWithDownloadPath:
_downloadPath
_outputStream
_savedBytes
_percentComplete
contentRestoreURL
_newBodyDictionaryWithAccountID:
requestWithMethod:bagURL:parameters:
defaultItemResponseWithDictionary:
keybag
forceDrmMode
deviceName
deviceGUID
keybagSyncDataWithAccountID:transactionType:error:
downloaderID
serialNumber
initWithRestoreAppInstalls:account:
successfulItems
failedItems
_restoreInstalls
_successfulItems
_failedItems
T@"ACAccount",C,V_account
T@"NSArray",R,V_successfulItems
T@"NSDictionary",R,V_failedItems
setUrlKnownToBeTrusted:
setHTTPContentType:
device_decorateHeadersUsingDevice:
requestByEncodingRequest:parameters:
_close
_verifiedStatementForPreparedStatement:error:
_executeStatement:error:
_verifiedStatementForSQL:error:
initWithConnection:SQL:
finalizeStatement
_open
stringByReplacingOccurrencesOfString:withString:
_flushAfterTransactionBlocks
_prepareStatement:error:
isReadOnly
_finalizeAllStatements
_executeWithError:usingBlock:
step
_resetAfterCorruptionError
_resetAfterIOError
_performResetAfterCorruptionError
initWithStatement:onConnection:
connectionPointer
_statementForPreparedStatement:error:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
lastChangeCount
performSavepoint:
truncate
currentError
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
T@"NSError",R,C,N
T@"SQLiteConnectionOptions",R,C,N,V_options
T@"<SQLiteConnectionDelegate>",W,N,V_delegate
installedVariantID
installedVersionID
setInstalledVersionID:
_installedVariantID
_installedVersionID
_optimalDownloadWindow
T@"NSString",C,N,V_installedVariantID
T@"NSNumber",C,N,V_installedVersionID
T@"TimeWindow",C,N,V_optimalDownloadWindow
setUserInfo:
contentRatingFlags
circularIconURLString
datePurchased
developerName
isFamilyShared
isFirstParty
isIOSBinaryMacOSAvailable
isIOSBinaryMacOSCompatible
isHidden
isHiddenFromSpringboard
iconURLString
is32BitOnly
isPreorder
longTitle
mediaKind
numberWithUnsignedInt:
ovalIconURLString
preflightPackageURL
productURL
requiredCapabilities
supportsIPad
supportsIPhone
supportsMac
genreID
genreName
watchAppDeliveredIniOSApp
watchAppRunsIndependently
watchOnly
supportsLayeredImage
hasP3
deleteAppsForLockerItemIDs:forAccountID:withError:
insertApps:forAccountID:withError:
removeAllAppsForAccountID:withError:
setHidden:forStoreItemID:withError:
showAllWithError:
updateForBundleID:
setRefreshInstallID:
taskWithInstall:inSession:
_installID
_userInitiated
updateProgress:withReply:
updateDownloadState:withReply:
setRemoteObjectInterface:
updateProgress:
updateDownloadState:
_group
_observing
_sessionTasks
_sessionTasksByIdentifier
T@"NSString",C,N,V_clientID
initWithBundleURL:
containingBundleRecord
parentApplicationBundleID
appClipIsConfiguredForIAP
isAppleSigned
octaneBag
sandboxBag
sharedConnection
effectiveBoolValueForSetting:
ams_sharedAccountStoreForMediaType:
deviceVendorIdentifier
fileURLWithPath:isDirectory:
requestBundleID
configurationDirectoryForBundleID:
lib_stringByCopyingUTF8StringWithLength:
isAlmondApp
customReceiptURL
receiptWithContentsOfFile:
bundleURL
receiptFromBundleAtURL:
opaqueDSIDString
receiptType
containsString:
receiptDataString
isDSIDless
_clientOverrides
octaneConfigurationDirectory
ams_localiTunesAccount
currentProcess
accountMediaType
setAccountMediaType:
defaultSessionConfiguration
setProxyAppBundleID:
initWithRequest:bag:
overrideClient:forBundleIdentifier:untilDate:
AMSURLSession:task:handleAuthenticateRequest:completion:
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleEngagementRequest:completion:
AMSURLSession:task:shouldFailWithServerError:
AMSURLSession:handleAuthenticateRequest:completion:
AMSURLSession:handleDialogRequest:completion:
AMSURLSession:shouldFailWithServerError:
AMSURLSession:shouldHandleAuthenticationForAccount:dialogDictionary:
AMSURLSession:shouldHandleDialogDictionary:
initWithProcessIdentifier:remoteObjectProxy:clientOverrideEntitled:
_initWithApplicationExtensionRecord:
canMakePayments
currentAccountToken
copyWithOverrides:
standardQueryWithAuthentication:
URLRequestEncoder
URLSession
generateLogKey:apiVersion:
processID
clipBundleID
purchasesDisabledForAppClip
_clientOverrideEntitled
_ignorePaymentRestriction
_purchasesDisabledForAppClip
_remoteObjectProxy
_isAlmondApp
_isAppClip
_processID
_storeExternalVersionID
_type
_bundleVersion
_requestBundleID
_bundleURL
_clipBundleID
_customReceiptURL
_deviceVendorIdentifier
_localizedName
Ti,R,N,V_processID
T@"URLBag",R,N
T@"NSURL",R,N,V_bundleURL
T@"NSString",R,N,V_bundleVersion
T@"NSString",R,N,V_clipBundleID
T@"NSURL",R,N,V_customReceiptURL
T@"NSString",R,N,V_deviceVendorIdentifier
TB,R,N,V_isAlmondApp
TB,R,N,V_isAppClip
T@"NSString",R,N,V_localizedName
T@"NSString",R,N,V_requestBundleID
Tq,R,N,V_storeExternalVersionID
Tq,R,N,V_storeItemID
Tq,R,N,V_type
TB,R,N,V_purchasesDisabledForAppClip
addScreenshots:
setEmail:
screenshotsCount
clearScreenshots
screenshotsAtIndex:
setComment:
setIncidentId:
screenshotsType
hasEmail
hasComment
hasIncidentId
email
screenshots
setScreenshots:
comment
incidentId
_comment
_email
_incidentId
_screenshots
T@"NSString",&,N,V_email
T@"NSMutableArray",&,N,V_screenshots
T@"NSString",&,N,V_comment
T@"NSString",&,N,V_incidentId
initWithBroker:request:delegate:
cancelUsingProxy:withErrorHandler:
startUsingProxy:withErrorHandler:
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
cancelWithErrorHandler:
startWithErrorHandler:
broker
_broker
T@"RequestBrokerClient",R,W,N,V_broker
T@"<ASDRequestDelegate>",R,N,V_delegate
T@"ASDRequest<RequestController>",R,N,V_request
encodeObject:forKey:
decodeObjectOfClass:forKey:
encodeWithCoder:
initWithCoder:
supportsSecureCoding
hasRequisiteValues
setAppAdamId:
adNetworkId
setAdNetworkId:
campaignId
setCampaignId:
impressionId
setImpressionId:
sourceAppAdamId
setSourceAppAdamId:
setTimestamp:
localTimestamp
setLocalTimestamp:
attributionSignature
setAttributionSignature:
setVersion:
sourceAppBundleId
setSourceAppBundleId:
fidelityType
setFidelityType:
processName
setProcessName:
_appAdamId
_adNetworkId
_campaignId
_impressionId
_sourceAppAdamId
_localTimestamp
_attributionSignature
_sourceAppBundleId
_fidelityType
_processName
T@"NSNumber",&,N,V_appAdamId
T@"NSString",&,N,V_adNetworkId
T@"NSNumber",&,N,V_campaignId
T@"NSString",&,N,V_impressionId
T@"NSNumber",&,N,V_sourceAppAdamId
T@"NSNumber",&,N,V_timestamp
T@"NSNumber",&,N,V_localTimestamp
T@"NSString",&,N,V_attributionSignature
T@"NSString",&,N,V_version
T@"NSString",&,N,V_sourceAppBundleId
T@"NSNumber",&,N,V_fidelityType
T@"NSString",&,N,V_processName
initWithUUIDBytes:
_lib_getBytes:count:
lib_UUIDWithLegacyJobID:
tcr_dictionaryForKeyPath:
_findMostCompatibleVariantForDevice:fromArray:matchedVariant:
tcr_arrayForKeyPath:
initWithDictionary:forDevice:
initWithRequest:forDevice:
appID
appName
artistName
parentBundleID
ratingLabel
ratingRank
variant
variantDescriptor
_appID
_appName
_artistName
_parentBundleID
_ratingLabel
_ratingRank
_variant
_variantDescriptor
T@"NSString",R,V_appID
T@"NSString",R,V_appName
T@"NSString",R,V_artistName
T@"NSString",R,V_bundleID
T@"NSNumber",R,V_externalVersionID
T@"NSString",R,V_parentBundleID
T@"NSString",R,V_ratingLabel
T@"NSNumber",R,V_ratingRank
T@"ClipDownloadVariant",R,V_variant
T@"VariantDescriptor",R,V_variantDescriptor
_currentClient
launchAppStoreWithURL:withReplyHandler:
initWithAccount:
setSilentAuthOnly:
newContextWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
startWithDelegate:withCompletionHandler:
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
token
attemptInternalAuthWithRequest:completion:
deliverAuthenticateRequest:withResultHandler:
initWithBagContract:withToken:context:
_hasRequestedAuth
_token
T@"XPCRequestToken",W,N,V_token
copyMetricsDictionary
serverDialogID
_serverDialogID
T@"NSString",&,N,V_serverDialogID
displayNameWithLocalizedNames:andPrimaryLocale:
versionWithBundleID:bundleVersion:platform:andShortVersion:
setExpirationDate:
setTesterEmail:
setSharedFeedback:
setFeedbackEnabled:
setIconURLTemplate:
setLastWelcomeScreenViewDate:
setLaunchScreenEnabled:
displayNames
setDisplayNames:
setLocalizedTestNotes:
launchInfo
T@"ASDBetaAppDisplayNames",R,N
initWithRequestProperties:
requestParameters
requestBodyData
bagURL
requestMethod
thenWithBlock:
_configureUsingRequestProperties
_addGUIDToRequestParameters:
_addKBSyncDataToRequestParameters:
requestCachePolicy
requestHeaders
setValue:forHTTPHeaderField:
shouldAppendGUIDParameter
base64EncodedStringWithOptions:
setMescalType:
URLKnownToBeTrusted
compressRequestBody
setCompressRequestBody:
dataEncoding
setRequestEncoding:
requestByEncodingRequest:parameters:error:
requestProperties
T@"URLRequestProperties",R,C,V_requestProperties
rangeOfString:options:
valueOfClass:forKey:
substringFromIndex:
valueOfClass:forKeyPath:
_keyPathCache
_tcr_valueOfClass:forKey:
_tcr_associatedReader
tcr_boolForKey:missingValue:
tcr_boolForKeyPath:missingValue:
numberFromString:
_tcr_associateWithReader:
tcr_dateForKey:
tcr_dateForKeyPath:
tcr_floatForKey:
tcr_integerValueForKey:
tcr_integerValueForKeyPath:
tcr_integerValueForKeyPath:missingValue:
tcr_nullForKeyPath:
tcr_unsignedLongLongForKey:
tcr_unsignedLongLongForKeyPath:
tcr_urlForKeyPath:
deleteAllEntities
removeReceiptPropertiesForBundleID:
removeReceiptsForBundleID:
removeReceiptsForBundleID:removingTransactionIDs:
removeStatusesForBundleID:
setReceipts:forBundleID:logKey:
setRevision:token:forBundleID:logKey:
setSubscriptionRenewalInfo:forGroupID:bundleID:logKey:
presentFirstUsageDialogIfNeededForBundleID:
_authenticateWithCompletionHandler:
_silentAuthenticateUsingAMS
silentAuthOnly
authenticateReason
setAuthenticateReason:
dialogDictionary
setDialogDictionary:
_silentAuthOnly
_authenticateReason
_dialogDictionary
Tq,V_authenticateReason
T@"NSDictionary",C,V_dialogDictionary
TB,V_silentAuthOnly
setPurchase:
buyParameters
setBuyParams:
isDSIDLess
bagKey
installUniversalVariant
setRequireUniversal:
vendorName
setVendorName:
setPurchaseType:
isBackgroundUpdate
buyParams
setArcade:
accountIdentifier
affiliateIdentifier
lib_unsignedLongLongPropertyForKey:
_purchase_clientInfoUsingRequestToken:
additionalHeaders
setAdditionalHeaders:
setExpectedSoftwarePlatform:
purchase_purchaseInfoWithRequestToken:
bundleIDs
authenticateForAppleID:outError:
retryRestoresForAccount:userInitiated:
clearFollowupForAccountID:
initWithBundleIDs:
_appleID
_bundleIDs
willChangeValueForKey:
didChangeValueForKey:
setExecuting:
setFinished:
isAsynchronous
isExecuting
isFinished
_executing
_finished
_addBadgeIDMetrics:forOfferID:logKey:
_removeBadgeIDs:keepID:logKey:
_migrateBadgeIDsIfNeeded
_allBadgeIDsIDsWithLogKey:logResults:
dictionaryForKey:
_hardwareOfferCountWithLogKey:
_removeAllBadgeIDsWithLogKey:
setDictionaryForKey:forKey:
setArrayForKey:forKey:
T@"ArcadeCoordinator",R,N
addBadgeIDs:logKey:
allBadgeIDsWithLogKey:
allBadgeIDMetricsWithLogKey:
badgeIDCountWithLogKey:
removeAllBadgeIDsWithLogKey:
removeBadgeIDs:logKey:
removeMetricsForBadgeIDs:logKey:
initWithBundleID:productID:appName:productName:
bundleId
productId
productName
connectionWithEnvironment:token:
addMessages:
copyOSStateDataWithTitle:
insertObject:atIndex:
removeLastObject
_handle
_messageHistory
T@"NSData",C,V_token
taskWithEntity:
setPendingUpload:
setHTTPBody:
contentTypeHeaderValue
sessionWithConfiguration:
_handleResult:
allHeaderFields
setSuccessfulUpload:
entity
taskWithPendingImageUpload:andEntity:
acceptHeaderValue
pendingUpload
successfulUpload
_pendingUpload
_successfulUpload
T@"TFPendingImageUpload",&,N,V_pendingUpload
T@"TFImageUpload",&,N,V_successfulUpload
initWithDomain:
_registerForSettingsChangeNotifications
_activeDSID
_setActiveAccountPreferenceValue:forKey:isTopLevel:
_sharedUserDefaultKeys
synchronizeUserDefaultsDomain:keys:
_getActiveAccountPreferenceValueForKey:withDefaultValue:isTopLevel:
synchronize
_postSettingsChangedExternallyNotification
_handleSettingsChangedExternallyNotification
_synchronizeNanoKey:
bagForProfile:profileVersion:
setWithObject:
synchronizeNanoDomain:keys:
synchronizeSharedDefaultsToWatch
activeDSID
setActiveDSID:
getActiveAccountPreferenceValueForKey:withDefaultValue:
setActiveAccountPreferenceValue:forKey:
_activeAccount
_settingsBag
_synchronizeSharedSettings
_domainAccessor
_npsManager
T@"NSNumber",&,N
_diagnosticClockEnabled
defaultClock
diagnosticClockEnabled
AppStoreServiceEntitlement
setAppStoreServiceEntitlement:
AppStoreServiceProvider
setAppStoreServiceProvider:
ArcadeServiceEntitlement
setArcadeServiceEntitlement:
ArcadeServiceProvider
setArcadeServiceProvider:
diagnosticServiceEntitlement
setDiagnosticServiceEntitlement:
diagnosticServiceProvider
setDiagnosticServiceProvider:
clipServiceEntitlement
setClipServiceEntitlement:
ClipServiceProvider
setClipServiceProvider:
CrossfireServerEntitlement
setCrossfireServerEntitlement:
CrossfireServiceProvider
setCrossfireServiceProvider:
IAPHistoryServiceEntitlement
setIAPHistoryServiceEntitlement:
IAPHistoryServiceProvider
setIAPHistoryServiceProvider:
installationServiceEntitlement
setInstallationServiceEntitlement:
installationServiceProvider
setInstallationServiceProvider:
installAttributionServiceEntitlement
setInstallAttributionServiceEntitlement:
installAttributionServiceProvider
setInstallAttributionServiceProvider:
libraryServiceEntitlement
setLibraryServiceEntitlement:
libraryServiceProvider
setLibraryServiceProvider:
MetricsServiceEntitlement
setMetricsServiceEntitlement:
MetricsServiceProvider
setMetricsServiceProvider:
ManagedAppServiceEntitlement
setManagedAppServiceEntitlement:
ManagedAppServiceProvider
setManagedAppServiceProvider:
OcelotServerEntitlement
setOcelotServerEntitlement:
OcelotServiceProvider
setOcelotServiceProvider:
PersonalizationServerEntitlement
setPersonalizationServerEntitlement:
PersonalizationServiceProvider
setPersonalizationServiceProvider:
PurchaseHistoryServiceEntitlement
setPurchaseHistoryServiceEntitlement:
PurchaseHistoryServiceProvider
setPurchaseHistoryServiceProvider:
PurchaseServiceEntitlement
setPurchaseServiceEntitlement:
PurchaseServiceProvider
setPurchaseServiceProvider:
RepairServiceProvider
setRepairServiceProvider:
RepairServiceEntitlement
setRepairServiceEntitlement:
RestoreServiceProvider
setRestoreServiceProvider:
RestoreServiceEntitlement
setRestoreServiceEntitlement:
TestFlightFeedbackServiceEntitlement
setTestFlightFeedbackServiceEntitlement:
TestFlightServiceProvider
setTestFlightServiceProvider:
UpdatesServiceEntitlement
setUpdatesServiceEntitlement:
UpdatesServiceProvider
setUpdatesServiceProvider:
_AppStoreServiceProvider
_ArcadeServiceProvider
_diagnosticServiceProvider
_ClipServiceProvider
_CrossfireServiceProvider
_IAPHistoryServiceProvider
_installationServiceProvider
_installAttributionServiceProvider
_libraryServiceProvider
_MetricsServiceProvider
_ManagedAppServiceProvider
_OcelotServiceProvider
_PersonalizationServiceProvider
_PurchaseHistoryServiceProvider
_PurchaseServiceProvider
_RepairServiceProvider
_RestoreServiceProvider
_TestFlightServiceProvider
_UpdatesServiceProvider
_AppStoreServiceEntitlement
_ArcadeServiceEntitlement
_diagnosticServiceEntitlement
_clipServiceEntitlement
_CrossfireServerEntitlement
_IAPHistoryServiceEntitlement
_installationServiceEntitlement
_installAttributionServiceEntitlement
_libraryServiceEntitlement
_MetricsServiceEntitlement
_ManagedAppServiceEntitlement
_OcelotServerEntitlement
_PersonalizationServerEntitlement
_PurchaseHistoryServiceEntitlement
_PurchaseServiceEntitlement
_RepairServiceEntitlement
_RestoreServiceEntitlement
_TestFlightFeedbackServiceEntitlement
_UpdatesServiceEntitlement
T{_ASDServiceEntitlement=@@},V_AppStoreServiceEntitlement
T@?,C,V_AppStoreServiceProvider
T{_ASDServiceEntitlement=@@},V_ArcadeServiceEntitlement
T@?,C,V_ArcadeServiceProvider
T{_ASDServiceEntitlement=@@},V_diagnosticServiceEntitlement
T@?,C,V_diagnosticServiceProvider
T{_ASDServiceEntitlement=@@},V_clipServiceEntitlement
T@?,C,V_ClipServiceProvider
T{_ASDServiceEntitlement=@@},V_CrossfireServerEntitlement
T@?,C,V_CrossfireServiceProvider
T{_ASDServiceEntitlement=@@},V_IAPHistoryServiceEntitlement
T@?,C,V_IAPHistoryServiceProvider
T{_ASDServiceEntitlement=@@},V_installationServiceEntitlement
T@?,C,V_installationServiceProvider
T{_ASDServiceEntitlement=@@},V_installAttributionServiceEntitlement
T@?,C,V_installAttributionServiceProvider
T{_ASDServiceEntitlement=@@},V_libraryServiceEntitlement
T@?,C,V_libraryServiceProvider
T{_ASDServiceEntitlement=@@},V_MetricsServiceEntitlement
T@?,C,V_MetricsServiceProvider
T{_ASDServiceEntitlement=@@},V_ManagedAppServiceEntitlement
T@?,C,V_ManagedAppServiceProvider
T{_ASDServiceEntitlement=@@},V_OcelotServerEntitlement
T@?,C,V_OcelotServiceProvider
T{_ASDServiceEntitlement=@@},V_PersonalizationServerEntitlement
T@?,C,V_PersonalizationServiceProvider
T{_ASDServiceEntitlement=@@},V_PurchaseHistoryServiceEntitlement
T@?,C,V_PurchaseHistoryServiceProvider
T{_ASDServiceEntitlement=@@},V_PurchaseServiceEntitlement
T@?,C,V_PurchaseServiceProvider
T@?,C,V_RepairServiceProvider
T{_ASDServiceEntitlement=@@},V_RepairServiceEntitlement
T@?,C,V_RestoreServiceProvider
T{_ASDServiceEntitlement=@@},V_RestoreServiceEntitlement
T{_ASDServiceEntitlement=@@},V_TestFlightFeedbackServiceEntitlement
T@?,C,V_TestFlightServiceProvider
T{_ASDServiceEntitlement=@@},V_UpdatesServiceEntitlement
T@?,C,V_UpdatesServiceProvider
setOncePerBootItems:
_hasItemComplete:
_addItemComplete:
oncePerBootItems
isDataMigrationComplete
isDeviceLocked
isFsEntitlementsCompleteForBoot
isSetupComplete
markFsEntitlementsCompleteForBoot
_postStateDidChangeNotification
isScreenLocked
_deviceLockToken
_dataMigrationComplete
_deviceLocked
_setupComplete
_screenLocked
dataMigrationComplete
TB,R,GisDataMigrationComplete,V_dataMigrationComplete
fsEntitlementsCompleteForBoot
TB,R,GisFsEntitlementsCompleteForBoot
deviceLocked
TB,R,GisDeviceLocked,V_deviceLocked
screenLocked
TB,R,GisScreenLocked,V_screenLocked
setupComplete
TB,R,GisSetupComplete,V_setupComplete
_prepare:installEvents:
metadataForBundleID:date:
allApps
_allApps
_map
T@"NSArray",R,N,V_allApps
reloadFromDatabaseEntity:properties:
getValuesForProperties:
addEntriesFromDictionary:
setValues:forProperties:count:
setValues:forExternalProperties:count:
externalPropertyValues
initWithDatabaseEntity:properties:
setExternalValuesWithDictionary:
setValue:forExternalProperty:
valueForExternalProperty:
setDatabaseID:
_databaseID
_propertyValues
_externalPropertyValues
Tq,N,V_databaseID
T@"NSDictionary",R,C,N,V_propertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
arrayValueForProperty:
dictValueForProperty:
memoryEntityForPersistentID:withProperties:usingConnection:
memoryEntityForPersistentID:usingConnection:
show
_show
T@"ASDPurchaseHistoryApp",&,N,V_app
TB,N,V_show
_initWithItems:account:client:
_items
T@"NSArray",R,V_items
globallyUniqueString
initWithPath:flags:size:
initForSpaceReduction:
size
fileDescriptor
_fStore
_fileDescriptor
T@"NSString",R,V_path
Ti,R,V_fileDescriptor
daemon
queueForQualityOfService:
addTask:waitUntilFinished:
_descriptionForQualityOfService:
_setName:
_setQualityOfService:
setQualityOfService:
addTask:withQualityOfService:waitUntilFinished:
refreshIAPsForActiveAccountWithToken:completionHandler:
initWithMachServiceName:
initWithCatalog:andListener:
activeClientWithBundleID:
newClientForConnection:withCatalog:
interface
unregisterNotificationClient:
registerNotificationClient:
newServerWithCatalog:forMachServiceName:
activeClientWithProcessInfo:
_activeClients
_catalog
_listener
contextWithBundleID:
_logAndValidateMethodCall:context:
buyProductWithID:withContext:
_logExitForMethodCall:context:
contextWithBundleID:transactionID:
changeAutoRenewStatus:withContext:
clearOverridesWithContext:
completeAskToBuyRequestWithResponse:withContext:
deleteAllTransactionsWithContext:
expireOrRenewSubscriptionWithIdentifier:expire:withContext:
getStorefrontWithContext:
_bundleIDForConnection:
activePort
getTransactionDataWithContext:
invalidate
performAction:withContext:
deleteDataWithContext:
saveSigningData:withContext:
saveConfigurationData:withContext:
transactionDeleted:forBundleID:
transactionUpdated:forBundleID:
addConnectionWithBundleID:andConnection:
getIntegerValueForIdentifier:withContext:
setIntegerValue:forIdentifier:withContext:
getStringValueForIdentifier:withContext:
setStringValue:forIdentifier:withContext:
setStorefront:withContext:
octaneConnectionForBundleID:
checkServerQueueForQueue:withClient:
notifyOfRevokedProductIdentifiers:
testAccountID
addRevocationsForProductIdentifiers:forBundleID:forAccountID:
connectionsForBundleID:
portUpdated:
managerForClient:
removeReceiptsWithTransactionIDs:
syncSubscriptionStatusWithReason:completionHandler:
syncReceiptsWithReason:completionHandler:
valueForEntitlement:
_isAppleSignedApp:
buyProductWithID:bundleID:completion:
changeAutoRenewStatus:transactionID:bundleID:completion:
clearOverridesForBundleID:completion:
completeAskToBuyRequestWithResponse:transactionID:bundleID:completion:
deleteAllTransactionsForBundleID:completion:
expireSubscriptionWithProductID:bundleID:completion:
forceRenewalOfSubscriptionWithProductID:bundleID:completion:
getActivePortWithCompletion:
getStorefrontForBundleID:completion:
getTransactionDataForBundleID:completion:
performAction:transactionID:bundleID:completion:
removeConfigurationForBundleID:completion:
saveSigningData:forBundleID:completion:
saveConfigurationData:forBundleID:completion:
setStorefront:forBundleID:completion:
startObservingTransactionsForBundleID:completion:
refreshQueueForBundleId:completion:
revokeEntitlementsForProductIdentifiers:forBundleId:completion:
getIntegerValueForIdentifier:forBundleID:completion:
setIntegerValue:forIdentifier:forBundleID:completion:
getStringValueForIdentifier:forBundleID:completion:
setStringValue:forIdentifier:forBundleID:completion:
invalidateBag
transactionDeleted:productID:forBundleID:
updatePort:
removeTransactionIdentifiersFromCache:forBundleIdentifier:
simulateStoreKitPushWithAction:forBundleIdentifiers:
_connectionHasEntitlement:entitlementName:
uninstallAppWithBundleID:requestUserConfirmation:completion:
uninstallApp:requestUserConfirmation:withResultHandler:
dictionaryRepresentationForRequest
setStrategy:
setHashValue:
hashValue
strategy
_hashValue
_strategy
T@"NSString",C,V_hashValue
T@"NSString",C,V_strategy
setReconfigureRequestHandler:
requestPresenter
setRequestPresenter:
_reconfigureRequestHandler
_requestPresenter
T@"AMSProcessInfo",C,V_clientInfo
T@?,C,V_reconfigureRequestHandler
T@"<RequestPresenter>",&,V_requestPresenter
propertyForKey:inRequest:
env_requestTag
setProperty:forKey:inRequest:
env_setRequestTag:
T@"NSString",&,N,Senv_setRequestTag:
_lib_effectiveConfigurationUsingEnvironment:
_adoptEffectiveConfiguration:
_effectiveConfiguration
_sessionConfiguration
_initWithConfiguration:
lib_coordinatorForAppWithBundleID:withIntent:createIfNotExisting:wasCreated:withError:
lib_cancelOwnedCoordinatorForAppWithBundleID:withError:
lib_appStoreIsOwningClient
lib_setImportance:withError:
lib_appStoreIsResponsibleClientWithError:
lib_coordinatorWithIdentifier:error:
existingCoordinatorForAppWithBundleID:error:
lib_coordinatorWithIdentifier:forBundleID:error:
lib_expectsPlaceholderPromise
lib_hasCompletedPlaceholder
lib_expectsInitialODRPromises
lib_hasInitialODRAssetPromises
lib_expectsAppAssetPromise
lib_hasCompletedAppAssetPromise
lib_hasInstallOptions
lib_expectsDeviceSecurityPromise
lib_hasDeviceSecurityPromise
lib_hasCompletedDeviceSecurityPromise
lib_expectsAppQuitPromise
lib_hasAppQuitPromise
lib_hasCompletedAppQuitPromise
setAppAssetPromise:error:
appAssetPromiseWithError:
setAppAssetPromiseResponsibleClient:error:
appAssetPromiseHasBegunFulfillment:error:
hasAppAssetPromise
setDeviceSecurityPromise:error:
deviceSecurityPromiseWithError:
setPlaceholderPromise:error:
placeholderPromiseWithError:
hasPlaceholderPromise
isComplete
setInstallOptions:error:
hasInstallOptions
tagWithCoordinatorID:bundleID:
lib_coordinatorState
_lib_userPresentableErrorForFailure:alertUser:allowHardFail:underlyingError:
setPreparationPromise:withError:
initWithName:client:diskSpaceNeeded:
setPercentComplete:
setComplete:
dictionaryWithCapacity:
setUserDataPromise:error:
userDataPromiseWithError:
userDataRestoreShouldBegin:
hasUserDataPromise
_lib_establishAppQuitPromiseWithError:
deviceIsAppleTV
lib_coordinatorIntent
initWithName:client:streamingZipOptions:archiveSize:diskSpaceNeeded:
setTargetGizmoPairingID:error:
lib_hasAppAssetPromise
lib_tag
lib_addFeedbackPromiseWithError:
lib_completeInitialODRPromisesWithError:
lib_completeUserDataPromiseWithError:
lib_establishAppQuitPromiseWithError:
lib_establishDeviceSecurityPromiseWithError:
lib_failWithReason:withError:
lib_rejectAppQuitPromiseWithReason:error:
lib_satisfyAppQuitPromiseWithError:
lib_satisfyDeviceSecurityPromiseWithError:
lib_setGizmoPairingID:withError:
lib_setAppAssetPromise:withError:
lib_setAppStoreAsDRIWithError:
lib_setInitialODRAssetPromises:withError:
lib_setInstallOptions:withError:
lib_setPlaceholderPromise:error:
lib_coordinatorForAppWithBundleID:withIntent:importance:createIfNotExisting:withError:
lib_coordinatorWithTag:error:
lib_activeCoordinatorStatesWithError:
lib_userPresentableErrorForFailure:alertUser:allowHardFail:
T@"lib_IXAppInstallCoordinatorTag",R
isEqualToTag:
_coordinatorID
T@"NSUUID",R,V_coordinatorID
ams_configurationWithProcessInfo:bag:
_lib_protocolDelegate
setProtocolHandler:
initWithConfiguration:delegate:delegateQueue:
checkOutEnvironmentForTag:
checkInEnvironment:forTag:
lib_dataTaskPromiseWithRequest:environment:
lib_defaultSession
lib_newDefaultSessionWithDelegate:
lib_newEphemeralSessionWithConfigurationInfo:andDelegate:
predicateWithProperty:equalToLongLong:
bestPackageForInstallID:onConnection:
_getMultiTypeBoolWithKey:fromDict:
setShouldSendConversionValue:
setRedownload:
setPingbackUrl:
setTransactionId:
lib_skanIsVersionFidelityAware
lib_skanIsVersionMultiAware
setDidWin:
setConversionValue:
setConversionValueTimestamp:
setRetryCount:
setRetryTimestamp:
setRegistered:
string
retryTimestamp
pingbackFromDictionary:
developerPingbackURLWithDomain:
impressionTypeForAnalytics
hasRetryCooldownElapsed
shouldCreateDevPingback
transactionId
conversionValue
conversionValueTimestamp
shouldSendConversionValue
pingbackUrl
redownload
registered
retryCount
didWin
isDeveloperPingback
setIsDeveloperPingback:
_shouldSendConversionValue
_redownload
_registered
_didWin
_isDeveloperPingback
_transactionId
_conversionValue
_conversionValueTimestamp
_pingbackUrl
_retryCount
_retryTimestamp
T@"NSString",&,N,V_transactionId
T@"NSNumber",&,N,V_conversionValue
T@"NSNumber",&,N,V_conversionValueTimestamp
TB,N,V_shouldSendConversionValue
T@"NSString",&,N,V_pingbackUrl
TB,N,V_redownload
TB,N,V_registered
Tq,N,V_retryCount
T@"NSNumber",&,N,V_retryTimestamp
TB,N,V_didWin
TB,N,V_isDeveloperPingback
_fetchManifestForApplication:error:
initWithDictionary:andBundleID:fromSource:
adamID
isMachineVPP
bundleShortVersion
_requestBodyForApplication:error:
odrURL
defaultSession
responseCorrelationId
isStoreBased
_copyRequestForBetaApplication:
_copyRequestForApplication:
setManifest:
_manifest
T@"ODRManifest",&,V_manifest
setExtractorDelegate:
initWithPath:options:
initWithExtractor:
extractorDelegate
_extractorDelegate
T@"<SZExtractorDelegate>",W,N,V_extractorDelegate
allConnections
_allowClientOverrideForConnection:
sandboxManager
useConfigurationDirectory:forBundleID:
octaneManager
setMaxConcurrentOperationCount:
_allowClientOverride
_processDownloadsForTransactions:
updatedTransactions:
checkServerQueueForClient:reply:
_apiVersionForClientDict:
initWithClient:apiVersion:
transactions
_errorToASDError:
addOperation:
initWithProductIdentifiers:client:apiVersion:
products
invalidIdentifiers
processPayment:forClient:reply:
proxyForItemID:
initWithURL:error:
_processPayment:excludeReceipt:privacyAcknowledgementRequired:forClient:apiVersion:reply:
_allowPaymentRequestData
initWithBuyParams:client:apiVersion:
initWithProductIdentifier:quantity:client:apiVersion:
setAdditionalBuyParams:
setApplicationUsername:
setDiscountIdentifier:
setDiscountKeyIdentifier:
setDiscountNonceString:
setDiscountSignature:
setDiscountTimestamp:
setPartnerIdentifier:
setPartnerTransactionIdentifier:
setPrivacyAcknowledgementRequired:
setSimulateAskToBuy:
setStoreOriginated:
setRequestData:
setExcludeReceiptFromRequest:
setForceAuthentication:
setHideConfirmation:
setAppAccountToken:
setReceiptInstallURL:
transaction
productIdentifier
quantity
finishPaymentWithIdentifier:reply:
removeDownloadsForTransactionID:
initWithTransactionIdentifier:client:
isCancelled
removedEntitlementsForProductIdentifiers:
renewReceiptWithOptions:client:replyBlock:
restoreCompletedTransactionsForUsername:client:reply:
subscriptionStatusForSubscriptionGroupID:
startDownloadWithID:client:
downloadAdded:
cancelDownloadWithID:
pauseDownloadWithID:
setCustomReceiptURL:
setProxyBundeID:
setProxyBundleVersion:
setProxyDeviceIdentifierForVendor:
setProxyStoreExternalVersionID:
setProxyStoreItemID:
_storeFrontManagerForClientType:
countryCode
octaneEnabledForApplicationWithBundleID:
initWithBundleIdentifier:bundleURL:
refundRequestURL
manageSubscriptionsURL
requestProductsWithIdentifiers:client:replyBlock:
authenticateAndSyncWithCompletionHandler:
receivedTransactions:
enumerateCurrentReceiptsForProductID:usingBlock:
enumerateReceiptsForProductID:usingBlock:
fetchRevocationsForOctaneWithBundleID:reply:
showMessage:forAccount:inApp:
askToShowMessageWithReplyBlock:
messageURLForAccount:inApp:reply:
fetchRevocationsForAccount:inApp:reply:
_offerCodeRedemptionURLForBundleID:storeItemID:
openSensitiveURL:withOptions:
_shouldNotifyOfStorefrontChange:
storefrontChanged:
_domainForDeveloperPingback
setPingbackRegisteredForApp:withDeveloperPingbackDomain:
updatePingbackWithConversionValue:forApp:withDeveloperPingbackDomain:
getProcessName
addImpression:completionHandler:
finalizeImpression:completionHandler:
purgeImpressionsFromProcessName:
downloadID
timeRemaining
installPath
downloadStatusChanged:
downloadRemoved:
allowPurchaseRequestData
ams_message
processDownloadsForTransactions:
redeemCodeURL
initWithContentsOfFile:
_getTLD:
connectionForClient:
storefront:changed:
downloadManager:updatedStatus:
addDownloadWithID:
addPaymentToQueue:withInfo:client:
addPurchaseIntent:reply:
authenticateAndSyncTransactionsAndStatusWithReply:
checkForMessages
deleteContentForProductID:
enumerateCurrentReceiptsForProductID:withReceiver:reply:
enumerateReceiptsForProductID:withReceiver:reply:
finishPaymentWithIdentifier:
forceSandboxForBundleIdentifier:untilDate:
handleInvalidReceipt:
presentCodeRedemptionSheet
processPaymentWithBuyParamsString:reply:
promotionInfoForProductIdentifiers:client:reply:
purchaseIntentAppInstallSheetOpenForBundleIdentifier:reply:
purchaseIntentsForClient:clearOnRetrieval:reply:
receiptsForProductID:reply:
requestProductReview
restoreCompletedTransactionsToQueue:forUsername:withClient:replyBlock:
resumeDownloadWithID:
setClientOverrides:forBundleIdentifier:untilDate:reply:
setPromotionInfo:forClient:reply:
showManageSubscriptionsWithReply:
showRefundRequestForTransactionId:replyBlock:
statusForSubscriptionGroupID:reply:
storefrontWithReplyBlock:
useAppStoreDaemonWithReplyBlock:
xcodeTestCertificatesWithReply:
xcodeTestServerPortWithReplyBlock:
registerArcadeAppWithRandomFromLib:randomFromLibLength:resultHandler:
arcadeSubscriptionStatusWithNonce:resultHandler:
repairArcadeApp
registerForInstallAttribution
updateConversionValue:
startAdImpressionWithConfig:completionHandler:
endAdImpressionWithConfig:completionHandler:
initWithConnection:remoteObject:pid:
processPaymentResponse:apiVersion:
_hasArcadeEntitlement
_isValidForReview
remoteObject
_urlSession
_finishPaymentQueue
_paymentQueue
_productRequestQueue
_appTerminationQueue
_genericTaskQueue
_remoteObject
T@"StoreKitClient",R,N,V_client
T@"<ASDStoreKitClientProtocol>",R,N,V_remoteObject
dictionaryWithValuesForColumns
lib_loggableDate
timeIntervalSinceDate:
stringFromDate:
lib_rfc3339String
lib_dateHasPassed
lib_secondsFromNow
_schemaName
_valueFromKeychainForKey:error:
_generateKeyDataError:
_saveValueToKeychain:forKey:error:
initWithBytesNoCopy:length:deallocator:
_copyErrorForOSStatus:
base64EncodedDataWithOptions:
initWithBase64EncodedData:options:
fetchKeyWithIdentifier:error:
generateKeyWithIdentifier:error:
storageID
moveItemAtURL:toURL:error:
updateMigratorConfiguraton
_readConfigurationFromUserDefaultsRepresentation:
clearUpdateMigrations
synchronize:
attempts
migrationsLeft
hasMigrations
_writeConfigurationToUserDefaultsRepresentation:
setUpdateMigratorConfiguration:
incrementAttempts
initWithUserDefaultsRepresentation:
copyUserDefaultsRepresentation
clearMigrations
didCompleteMigratorType:
enumerateUsingBlock:
willBeginMigratorType:
writeConfiguration:
_configuration
knownContentHashes
fileSize
downloadPriority
isStreamable
calculateLocalURLForEmbeddedAssetWithSourceURL:error:
appUpdatesToFinish
cancelProgress
coordinatorPause
coordinatorReasons
coordinatorResume
failedTestFlightInstalls
finishProgress
legacyNotifications
restoresToHydrate
restoresCompleted
schedulerPollReason
shouldPostAppsDone
shouldPostUpdatesDone
shouldRefreshApplicationBadge
shouldPostProcessAutomaticUpdatesCompleted
restoreCompleted
addFailedTestFlightInstallWithBundleID:devicePairingID:error:
addRestoreToHydrate:
cancelProgressForBundleID:
finishProgressForBundleID:
postUpdatesDone
refreshApplicationBadge
_appUpdatesToFinish
_cancelProgress
_coordinatorPause
_coordinatorReasons
_coordinatorResume
_failedTestFlightInstalls
_finishProgress
_legacyNotifications
_restoresToHydrate
_restoresToPrioritize
_schedulerPollReason
_restoresCompleted
_shouldPostAppsDone
_shouldPostUpdatesDone
_shouldRefreshApplicationBadge
_shouldPostProcessAutomaticUpdatesCompleted
T@"NSDictionary",R,N
T@"NSSet",R,N
TB,R,N,V_restoresCompleted
setContentType:
setDsid:
setHasDsid:
hasDsid
setHasCount:
hasCount
hasContentType
setDesiredUrlTTLMillis:
setHasDesiredUrlTTLMillis:
hasDesiredUrlTTLMillis
dsid
desiredUrlTTLMillis
_desiredUrlTTLMillis
_dsid
_contentType
_count
TQ,N,V_dsid
TI,N,V_count
T@"NSString",&,N,V_contentType
TQ,N,V_desiredUrlTTLMillis
initWithURL:resolvingAgainstBaseURL:
lib_URLByAppendingPathComponents:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
lib_sanitizedFilePath
lib_queryDictionary
lib_URLByAppendingQueryDictionary:
lib_URLByStrippingQuery
handleAccountStoreDidChangeNotification:
_shouldNotifyChangeFromExistingAccount:toCurrentAccount:
_postAccountDidChangeFromOldAccount:withAccountStore:
T@"ACAccount",R
T@"ACAccount",R,V_activeAccount
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
attemptVPPMigrationForApp:
setBundleIDs:
_expiring
_soonestExpiring
_soonestExpiringDate
T@"NSArray",C,N,V_bundleIDs
addExternalIDStrings:
externalIDStringsType
clearExternalIDStrings
externalIDStringsCount
externalIDStringsAtIndex:
setHasError:
hasError
externalIDStrings
setExternalIDStrings:
_externalIDStrings
T@"NSMutableArray",&,N,V_externalIDStrings
Ti,N,V_error
initWithMachServiceName:forClients:delegate:
_handleAppMayBeUninstalledNotification:
activeInstallMatchingCoordinatorID:orMatchingBundleID:
lib_shortDescription
_reasonShouldBeTreatedAsCancelation:
_errorIsCausedByMismatchedSINF:
_reportSINFMismatchError:forAppInstall:withTransaction:
endObservingCoordinator:
cancelDownloadRequestsForBundleID:andCoordinatorID:
_coordinatorDidCompleteSuccessfully:forAppAtURL:
handlePrefetchDownloadsForBundleID:withCoordinatorID:withCompletion:
_reviewNetworkPolicyForInstallID:usingDownload:coordinator:
pauseDownloadRequestsForBundleID:andCoordinatorID:
resumeDownloadRequestsForBundleID:andCoordinatorID:
_applicationInstallsDidPrioritize:coordinator:
lib_walkUnderlyingErrorsUsingBlock:
initForInstallMachineryWithBundleIdentifier:placeholder:error:
handleAppMayBeUninstalled:
pauseWithError:
modifyInstallPolicyUsingBlock:
accessWasUnblocked
_pauseCoordinator:withLogKey:
coordinatorShouldPrioritize:
coordinatorShouldResume:
coordinatorShouldPause:
coordinator:configuredPromiseDidBeginFulfillment:
coordinatorShouldBeginRestoringUserData:
coordinatorDidInstallPlaceholder:
coordinatorDidInstallPlaceholder:atURL:
coordinatorDidCompleteSuccessfully:
coordinatorDidCompleteSuccessfully:forAppAtURL:
coordinator:canceledWithReason:client:
shouldPrioritizeAppWithBundleID:
coordinatorDidRegisterForObservation:
coordinator:didUpdateProgress:forPhase:overallProgress:
coordinator:canceledWithReason:
promiseDidBeginFulfillmentWithIdentifier:
coordinator:configuredPromisePromiseDidBeginFulfillment:
beginObservingCoordinator:
_policyQueue
_installObserver
_installScheduler
_observedCoordinators
initWithStreamReader:disableAutodetection:
initWithStreamReader:verifyDigest:disableAutodetection:
stream:handleEvent:
setStreamError:
initWithStreamReader:
_decoder
cacheDeleteUpdatJobWithInterval:
updateCheckJobWithDate:allowsCellular:requireScreenSleep:gracePeriod:
usageCheckJob
xpcMaintenanceActivityWithDuration:
xpcActivityWithDuration:
xpcUpdatesCheck
copyBackgroundTaskAgentJob
requestIdentifier
_job
_requestIdentifier
T@"NSString",C,N,V_requestIdentifier
T@"NSDate",R
record
_isFactoryInstallAppProxy:logUUID:
establishesActiveAccount
_attemptAuthenticationWithRequest:error:
_lastClaimBuildVersionWithAccount:
ignoresPreviousClaimAttempts
_copyUnclaimedApplicationsWithLogUUID:
_performClaimForAccount:unclaimedApplications:error:
_updateAppsUsingResponseDictionary:account:
_setClaimBuildVersion:forAccount:
addBagKey:valueType:
setMessage:
setStyle:
isFactoryInstall
rangeOfString:
applicationMissingRequiredSINF
ownerType
claimHistory
_requestParametersWithAccount:unclaimedApps:logUUID:
lib_keybagSyncStringForAccount:withTransactionType:error:
setClaimHistory:
universalItemResponseWithDictionary:
updateSINFWithData:forApplication:options:error:
setEstablishesActiveAccount:
setIgnoresPreviousClaimAttempts:
_establishesActiveAccount
_ignoresPreviousClaimAttempts
TB,N,V_establishesActiveAccount
TB,N,V_ignoresPreviousClaimAttempts
_copyExecutablePathForPID:
_copyBundleForExecutablePath:
setBundleURL:
_copyInfoDictionaryForExecutablePath:
lib_agentProcessInfo
lib_newProcessInfoForConnection:
isAskToBuyEnabled
iTunesDSID
isSharingPurchases
firstName
ams_setNullableObject:forKey:
iCloudDSID
iCloudUsername
iTunesUsername
lastName
isCurrentSignedInUser
initWithDictionaryRepresentation:
setCurrentSignedInUser:
_currentSignedInUser
_askToBuyEnabled
_sharingPurchases
_firstName
_iCloudDSID
_iCloudUsername
_iTunesDSID
_iTunesUsername
_lastName
currentSignedInUser
TB,N,GisCurrentSignedInUser,V_currentSignedInUser
askToBuyEnabled
TB,R,N,GisAskToBuyEnabled,V_askToBuyEnabled
T@"NSString",R,N,V_firstName
T@"NSNumber",R,N,V_iCloudDSID
T@"NSString",R,N,V_iCloudUsername
T@"NSNumber",R,N,V_iTunesDSID
T@"NSString",R,N,V_iTunesUsername
T@"NSString",R,N,V_lastName
sharingPurchases
TB,R,N,GisSharingPurchases,V_sharingPurchases
scanUnsignedLongLong:
tcr_unsignedLongLong
tcr_url
_enumerator
initWithComplexity:usingBlock:
_resultComplexity
Tq,R,V_resultComplexity
performStartup
holdKeepAliveTransaction:whilePerformingBlock:
mainQueue
_run
globalStore
transactionCount
activeTransactions
currentRunLoop
T@"RunLoop",R
serviceBroker
runUntilIdleExit
T@"XPCServiceBroker",R
T@"NSString",&,N,V_bundleID
getIAPsForActiveAccountWithToken:completionHandler:
getIAPsForActiveAccountWithAdamIDs:token:completionHandler:
setCachedSubscriptionEntitlements:forAccountID:segment:
getSubscriptionEntitlementsForSegment:withToken:ignoreCaches:notifyInternal:withResultHandler:
currentRequestTokenWithProcessInfo:
getCachedSubscriptionEntitlementsForSegment:withToken:withResultHandler:
appStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getAllIAPsForActiveAccountWithReplyHandler:
getIAPsForActiveAccountWithAdamIDs:withReplyHandler:
refreshIAPsForActiveAccountWithReplyHandler:
setSubscriptionEntitlementsWithDictionary:forAccountID:segment:
getSubscriptionEntitlementsForSegment:ignoreCaches:requestingBundleId:withReplyHandler:
getCachedSubscriptionEntitlementsForSegment:withReplyHandler:
getAppStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getSubscriptionEntitlementsIgnoreCaches:forActiveAccountWithReplyHandler:
_initWithOwnerType:purchaserDSID:
isEqualToOwner:
alternateOwnerWithDSID:
externalOwner
familyOwnerWithDSID:
machineOwner
primaryOwnerWithDSID:
unclaimedOwner
isRestorable
_ownerType
_purchaserDSID
Tq,R,V_ownerType
T@"NSNumber",R,V_purchaserDSID
restorable
TB,R,GisRestorable
parse
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
parseMetadata
_data
_hasParsedData
T@"NSNumber",R,V_status
setUuid:
hasUuid
uuid
_uuid
T@"NSString",&,N,V_uuid
setLastUsedDate:
setPurgeable:
downloadRequestUUIDs
setDownloadRequestUUIDs:
initWithDictionary:andBundleID:
downloadIdentifier
effectiveAlwaysPreserve
effectivePreservationPriority
setEffectiveAlwaysPreserve:
setEffectivePreservationPriority:
addDownloadRequestUUID:
integrityHashingDictionary
removeDownloadRequestUUID:
T@"NSNumber",C,N
T@"NSArray",C,N
Td,N
T@"NSURL",&,N
T@"NSNumber",R,N,GisStreamable
T@"NSURL",C,N
setClientProxy:
_removeClient:
_refreshManifestFromStoreForApplication:
readyLock
_resetStateAndBecomeReady
_clearReadyLock
_issueSandboxExtensionWithRootPath:
URLByResolvingSymlinksInPath
bundleWithURL:
_manifestWithBundle:error:
isAlwaysPreserved
setAlwaysPreserved:
preservationPriority
setPreservationPriority:
_tagsAreValid:
mainBundle
progressWithTotalUnitCount:
_assetPacksForTags:
setTotalUnitCount:
becomeCurrentWithPendingUnitCount:
refreshManifestIfNecessaryForAssetPackWithID:andApplication:
_pinAssetPack:priority:tagsRequest:completionHandler:
resignCurrent
_issueSandboxExtensionWithPath:
setLoadingPriority:
_unpinAssetPack:completionHandler:
_okToPurgeAssetPack:
setReadyLock:
downloadWithAssetPack:andManifest:forApplication:originatingLogKey:
setShouldPin:
setTagsRequest:
setQosClass:
addSuccessBlock:
addDownloadRequest:
hello:
beginODRSessionWithBundleURL:completionHandler:
beginWithBundleURL:completionHandler:
tagStateInBundle:completionHandler:
pinTags:inBundle:priority:completionHandler:
conditionallyPinTags:inBundle:completionHandler:
setLoadingPriority:forTags:inBundle:
unpinTags:inBundle:completionHandler:
okToPurgeAssetPacks:
setPreservationPriority:forTags:inBundle:
setAlwaysPreserved:forTags:inBundle:
bundleRequestToDownloadRequest
setBundleRequestToDownloadRequest:
sandboxExtension
setSandboxExtension:
_auditToken
_clientProxy
_requestingAppBundleID
_bundleRequestToDownloadRequest
_readyLock
_sandboxExtension
T@"NSMutableDictionary",&,N,V_bundleRequestToDownloadRequest
T@"NSLock",&,N,V_readyLock
T@"NSDictionary",&,N,V_sandboxExtension
T@"<ODRClientProtocol>",&,N,V_clientProxy
T@"NSString",R,V_requestingAppBundleID
softwareVersionBundleID
deviceBasedVPP
setIsDeviceBasedVPP:
bundleShortVersionString
setShortVersion:
betaExternalVersionIdentifier
setIsBeta:
softwareVersionExternalIdentifier
_findReason
setAdamID:
setBeta:
setBundleShortVersion:
setMachineVPP:
installType
contextWithMetadata:
setCoordinatorID:
isDeviceBasedVPP
isRestore
setIsRestore:
_isBeta
_isDeviceBasedVPP
_isRestore
_shortVersion
_variantID
T@"NSString",C,V_bundleID
T@"NSString",C,V_bundleVersion
T@"NSUUID",C,V_coordinatorID
T@"NSNumber",C,V_externalVersionID
TB,V_isBeta
TB,V_isDeviceBasedVPP
TB,V_isRestore
T@"NSNumber",C,V_itemID
Tq,V_reason
T@"NSString",C,V_shortVersion
T@"NSString",C,V_variantID
setCacheSizeWithNumberOfKilobytes:
_encryptDatabase:
cacheSize
setCacheSize:
applyToDatabase:
setCacheSizeWithNumberOfDatabasePages:
setEncryptionKeyId:
protectionType
setProtectionType:
setReadOnly:
_readOnly
_cacheSize
_databasePath
_encryptionKeyId
_protectionType
Tq,N,V_cacheSize
T@"NSString",R,V_databasePath
T@"NSString",C,N,V_encryptionKeyId
T@"NSString",C,N,V_protectionType
readOnly
TB,N,GisReadOnly,V_readOnly
valueForHTTPHeaderField:
lib_contentType
lib_statusCode
skipLatestVersionCheck
automaticUpdatesEnabled
setFetchLatestVersion:
markInstallsAsFailedWithCodeSigErrorForBundleIDs:evid:
initWithItems:account:
targetItems
isErrorBadTokenError:
_processBatchFailureItems:error:context:
_processContentRestoreResponse:context:
remainingItemIDs
itemMap
hardFailItem:withError:
softFailItem:withError:
hardFailures
softFailures
capabilities
lib_deviceIsCapable:logKey:
supports32BitOnly
fetchLatestVersion
itemSucceeded:storeItem:
isUserInitiated
isErrorSoftFail:
initWithRestoreAppInstalls:
setSkipLatestVersionCheck:
_skipLatestVersionCheck
_hardFailures
_softFailures
TB,V_skipLatestVersionCheck
userInitiated
TB,GisUserInitiated,V_userInitiated
T@"NSArray",R,V_hardFailures
T@"NSArray",R,V_softFailures
hardFailWithError:
setValuesWithStoreItem:
softFailWithError:
_itemMap
_remainingItemIDs
_targetItems
T@"NSMutableArray",R,N,V_hardFailures
T@"NSDictionary",R,V_itemMap
T@"NSMutableArray",R,N,V_remainingItemIDs
T@"NSMutableArray",R,N,V_softFailures
T@"NSMutableArray",R,N,V_successfulItems
T@"NSArray",R,V_targetItems
_feedbackRequest
uploadFeedbackURL
addAttemptCountToURL:
performRequestWith:URL:parameters:error:
setPosixTimestampMillis:
comments
incidentID
setApplicationAdamId:
setIsAppClip:
setCiBuildGroup:
setBundleId:
setCfBundleVersion:
setCfBundleShortVersionString:
_platformForVersion:
appUptime
setUptimeMillis:
setApplication:
deviceType
setModel:
setOsVersion:
architecture
setArchitecture:
locale
timeZone
setTimezone:
carrier
setCarrier:
cellularNetworkType
setCellularNetworkType:
networkConnectionType
setConnection:
batteryPercentage
setBatteryPercentage:
_deviceFamily
setDeviceFamily:
_devicePlatform
setDevicePlatform:
screenWidth
setWidthPixels:
screenHeight
setHeightPixels:
setDisplay:
diskAvailable
setAvailableBytes:
diskTotal
setTotalBytes:
setDisk:
setDevice:
pairedWatchOSVersion
pairedWatchModel
setAppleWatch:
deviceIsiPod
deviceIsiPad
deviceIsAppleWatch
deviceIsMac
platform
getAppEventsForType:logKey:completionBlock:
postMetricsForType:completionBlock:
recordMetricsForType:completionBlock:
resetMetricsForType:completionBlock:
getMetricsEventsForType:withReplyHandler:
postMetricsEventsForType:withReplyHandler:
recordMetricsEventsForType:withReplyHandler:
resetMetricsEventsForType:withReplyHandler:
setChunkDigests:
chunkDigests
setChunkSize:
chunkType
setChunkType:
_chunkSize
_chunkDigests
_chunkType
T@"NSArray",C,N,V_chunkDigests
TI,N,V_chunkSize
Tq,N,V_chunkType
initWithAccountID:context:
setExpectedItemID:
setServerRevision:
_generateLogKey
defaultQueue
_fetchServerRevisionUsingAccount:databaseStore:
_localRevisionForAccountID:usingDatabaseStore:error:
_shouldUpdateLocalRevision:withServerRevision:
_fetchItemsUsingAccount:databaseStore:
_setLastUpdatedTimestampForAccountID:usingDatabaseStore:
_lastUpdatedTimestampForAccountID:usingDatabaseStore:
_updatePollingFrequencyInterval
_forcedRefreshInterval
_purchaseRefreshEnabled
_historyForAccountID:doesNotContainItemID:usingDatabaseStore:
PurchaseHistoryForcedRefreshMinutes
PurchaseHistoryPurchaseRefreshEnabled
PurchaseHistoryUpdatePollingFrequencySeconds
revisionForAccountID:withError:
countQuery:
lastUpdatedTimestampForAccountID:withError:
nextBatch
addedApps
removedApps
isLast
stringByAppendingString:
_sendItemsRequestUsingAccount:databaseStore:
_updateDatabaseWithDAAPResponse:databaseStore:error:
_sendServerRevisionRequestUsingAccount:databaseStore:
_getItemsRequestContextUsingAccount:databaseStore:withError:
_getServerRevisionRequestContextUsingAccount:databaseStore:withError:
expectedItemID
replyHandler
_expectedItemID
_serverRevision
_replyHandler
TQ,R,V_context
T@"NSNumber",R,V_accountID
T@"NSNumber",&,V_expectedItemID
T@"NSNumber",&,V_serverRevision
T@?,C,V_replyHandler
initWithBundlePath:
completionHandler
initWithOptions:requestToken:
_applicationRepair
_completionHandler
T@?,C,V_completionHandler
removeObjectsInRange:
lib_pop
lib_popCount:
lib_push:
tcr_dictionary
_defaultProperties
setProperty:forBodyKey:
meanTimeToDiscovery
meanTimeToTransaction
meanTimeToDownload
meanTimeToInstall
averageTimeBetweenPolls
setAverageTimeBetweenPolls:
setLastPollDate:
setMeanTimeToDiscovery:
setMeanTimeToDownload:
setMeanTimeToInstall:
setMeanTimeToTransaction:
requiresDiagnosticSendingPermission
lastPollDate
_averageTimeBetweenPolls
_lastPollDate
_meanTimeToDiscovery
_meanTimeToDownload
_meanTimeToInstall
_meanTimeToTransaction
Td,N,V_averageTimeBetweenPolls
T@"NSDate",C,N,V_lastPollDate
Td,N,V_meanTimeToDiscovery
Td,N,V_meanTimeToDownload
Td,N,V_meanTimeToInstall
Td,N,V_meanTimeToTransaction
_sendJobsChanged:
_sendJobsCompleted:finalPhases:
_sendJobStatesUpdated:
_sendJobProgressUpdated:
persistenceIdentifier
shouldFilterExternalOriginatedDownloads
shouldReportDownloadProgress
didChangeJobs:
_dequeuePendingJobChanges
addBarrierBlock:
didCompleteJobs:finalPhases:
_dequeuePendingJobsCompleted
didUpdateStates:
_dequeuePendingStateUpdates
didUpdateProgress:
_dequeuePendingProgressUpdates
jobsQueryPredicate
sendJobsChanged:
sendJobsCompleted:finalPhases:
sendJobStatesUpdated:
sendJobProgressUpdated:
setOptions:
_persistenceIdentifier
_queuedChangedJobs
_queuedCompletedJobs
_queuedCompletedJobsPhases
_queuedProgressUpdates
_queuedStateUpdates
_shouldFilterExternalJobs
_shouldReportDownloadProgress
_parseDictionary:
genre
_genre
_genreID
T@"NSString",R,V_genre
T@"NSNumber",R,V_genreID
initWithFormat:locale:arguments:
takeKeepAliveTransaction:
releaseKeepAliveTransaction:
keepAliveWithFormat:
_name
bestPackageOnConnection:withProperties:
_initWithInstall:package:coordinator:
setPackageURL:
setRequestCount:
setDeltaPackage:
setDrmMode:
_dataConsumerError:promiseConsumer:
_buildAssetRequestWithDataConsumer:error:
continueInstallID:withDataConsumer:assetRequest:event:
setAssetSize:forPackageID:
setRequestCount:forPackageID:
prepareForDownload
setConnectionPool:
setRangeOffset:
setExpectedContentLength:
setNetworkBudgetingIdentifier:
setLocateAssetCache:
setTaskPriority:
setDiscretionaryType:
setDuetBudgetingIdentifier:
setAllowsAuthentication:
externalDownloadSkipATSCheck
setEnforceATS:
assetRequestReason
setRequestReason:
_allowsExpensiveNetwork
setAllowsExpensiveNetworkAccess:
_allowsConstrainedNetwork
setAllowsConstrainedNetworkAccess:
_allowsCellularNetwork
setAllowsCellularAccess:
initWithURL:properties:
unsignedIntValue
chainFairPlayDecryptionToConsumer:withDPInfo:digest:error:
operationForInstallID:inSession:withCoordinator:
_streamingZipOptionsWithChunkedDigest:quarantineOptions:
_quarantineOptions
downloadResponse
setDownloadResponse:
_didLoadAssetSize
_install
_installInfo
_package
_downloadResponse
T@"AppInstallDownloadResponse",&,V_downloadResponse
_initWithInstallID:result:dataConsumer:assetRequest:error:event:
finishInstallID:
assetRequest
assetSize
installID
packageID
requestCount
_assetRequest
_assetSize
_packageID
_requestCount
T@"AssetRequest",R,V_assetRequest
T@"NSNumber",R,V_assetSize
Tq,R,V_installID
T@"AIMDownloadEvent",R,V_event
Tq,R,V_packageID
TQ,R,V_requestCount
Tq,R,V_result
T@"<AssetDataConsumer>",R,V_dataConsumer
contentRestoreMaxItemCount
_preflightRestoresForAccountID:
initWithArray:
pendingRestoreMetadataLookup
pendingBootstrap
accountForRestoreInstall:error:
orderedLoookupCount
setOrderedLoookupCount:
nonOrderedLookupCount
setNonOrderedLookupCount:
completeHardFailCoordinators:reason:
initWithAccountID:userInitiated:
batchSize
nonOrderedRestoreInstallForAccounts
orderedRestoreInstallForAccounts
_batchSize
_nonOrderedRestoreInstallForAccounts
_orderedRestoreInstallForAccounts
_nonOrderedLookupCount
_orderedLoookupCount
Tq,R,V_batchSize
T@"NSMutableDictionary",R,V_nonOrderedRestoreInstallForAccounts
T@"NSMutableDictionary",R,V_orderedRestoreInstallForAccounts
Tq,V_nonOrderedLookupCount
Tq,V_orderedLoookupCount
TB,R,V_userInitiated
initWithBundleIdentifierOfSystemPlaceholder:error:
_queueSystemAppRequestForBundleID:
failureReason
_isUpdateAvailableForDemotedApp:
restoreAppInstall
_enumerateDemotedApplicationProxiesUsingBlock:
hydrateApps:
enumeratorWithOptions:
setFilter:
_updateEvidForDemotedApp:greaterThanEvid:
TB,N,GisUserInitiated,V_userInitiated
initWithContentsOfURL:error:
initWithContentsOfURL:andBundleID:error:
initWithData:andBundleID:fromSource:
lastModificationDate
thinningVariant
assetPackForBundleKey:
copyDataWithError:
_assetPacks
localCache
TB,R,N,GisLocalCache
storeBased
TB,R,N,GisStoreBased
setEnvironment:
messagesCount
messages
formattedText
_hashArrayFromMeasurement:
_stringFromDigest:
stringWithCString:encoding:
initWithURL:attributes:
hashType
_streamableZip
_downloadOffset
_downloadSize
_hashType
_hashes
_title
_URL
T@"NSNumber",R,N,V_downloadOffset
T@"NSNumber",R,N,V_downloadSize
T@"NSError",R,N,V_error
T@"NSNumber",R,N,V_hashType
T@"NSArray",R,N,V_hashes
streamableZip
TB,R,N,GisStreamableZip,V_streamableZip
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_URL
registerManifest:forBundleID:replyBlock:
applicationForNotInstalledApplication:
copyBundleTagManifestWithError:
initWithRequestToken:
queuePurchaseInfo:
purchaseState
_failPurchaseWithError:usingPurchaseInfo:
_completePurchaseBatch
setPurchaseState:
purchaseEvent
purchaseOnly
_setBundleID:
purchase
_setPurchase:
_setSuccess:
exceptionWithName:reason:userInfo:
initWithPurchaseResponseItems:
postMetrics
_setError:
initWithPurchaseInfo:requestToken:
cancelPurchaseBatchWithError:
_responseItems
_machineBased
T@"NSEnumerator",R
machineBased
TB,R,GisMachineBased,V_machineBased
T@"XPCRequestToken",R,V_requestToken
totalPendingRestoreDownloadSize
estimateTotalDownloadSizeWithReplyHandler:
_queue_restoreState
_queue_parkedDownloadSizeHandlers
initWithBag:device:
_device
asset_cdnUUID
asset_statusCode
subscriptionGroupID
subscriptionStatusURL
requestWithMethod:URL:headers:parameters:
_parseResponse:
initWithSubscriptionGroupID:reason:client:
statuses
_subscriptionGroupID
_statuses
T@"NSString",&,N,V_logKey
T@"NSString",R,N,V_subscriptionGroupID
T@"NSArray",R,N,V_statuses
maxConcurrentOperationCount
setUnderlyingQueue:
operations
qualityOfService
addOperations:waitUntilFinished:
cancelAllOperations
waitUntilAllOperationsAreFinished
tasks
addTaskWithBlock:
_operationQueue
T@"NSString",C
T@"NSArray",R,C
messagesType
hasEnvironment
hasToken
clearMessages
messagesAtIndex:
setMessages:
_messages
T@"NSString",&,N,V_environment
T@"NSString",&,N,V_token
T@"NSMutableArray",&,N,V_messages
_activeSoftFailureCount
_createRetryActivityIfNeeded:
setRestoreSoftFailureRetryDate:
_activeRestoreCount
_boostrapWhenReadyWithReason:targetAccountID:
ams_iTunesAccountWithAltDSID:
setUsername:
_bootStrapRestoreJobs:targetAccountID:userInitiated:
_hydrateApp:
_restoreStateToDictionary
_retryRestoresForAccount:userInitiated:
restoreHardFailures
countOfEntities
pendingRestoreSoftFailures
_bootstrapRestoresForBatchType:restoreInfo:targetAccountID:
_pendingMetadataLookup
_activeHardFailureCount
_processTokenFailuresAndPostFollowupOrPerformAuthWithUserInitiated:
initWithAccount:batchSize:
setAutoFinish:
setFailCoordinators:
_performContentRestoreBatchLookup:batchInfo:outError:
successes
failures
tokenFailures
failCoordinators
_finishCompletedRestores:completeOrderedOnly:
_handleMonitorStateDidChangeNotification:
restoreSoftFailureRetryDate
localizedDescription
removeObserver:name:object:
_hydrationTypeForAppInstallRestoreType:
_createCoordinatorUsing:addProgress:
_restoreApp:account:isUserInitiated:error:
_isErrorAccountError:
bootStrapRestoreJobs:targetAccountID:userInitiated:
_completeHardFailures:
errorData
_installErrorIsAccountError:
_performContentRestoreForRestoreInstalls:batchInfo:outError:
autoFinish
_installEntityHasAccountFailure:
useFollowUpsForRestoreFailures
attemptedPreflightAccountIDs
setAttemptedPreflightAccountIDs:
_restoreAppID:matches:
postFollowupForAppleID:accountID:
restoreStateDictionary
_installHasAccountFailure:
_restoreQueue
T@"AppInstallPolicy",R,C
_failCoordinators
_autoFinish
_failures
_successes
_tokenFailures
TB,V_failCoordinators
T@"NSMutableArray",R,V_failures
T@"NSMutableArray",R,V_softFailures
T@"NSMutableArray",R,V_successes
T@"NSMutableArray",R,V_tokenFailures
TB,V_autoFinish
TB,V_userInitiated
deltaPackage
drmMode
packageURL
_deltaPackage
TB,V_deltaPackage
T@"NSNumber",&
T@"NSString",&
dialogForDownload:
awaitDialogRequest:error:
cellularDownload
setCellularDownload:
evaluatorResult
_cellularDownload
_evaluatorResult
T@"EvaluatorDownload",&,V_cellularDownload
Tq,R,V_evaluatorResult
clipAffliateToken
clipAppType
clipCampaignToken
clipProviderToken
clipRefType
_registerForAdapterChange
_updateAdapterState
_postPowerStateDidChangeNotification
isBatterySaverEnabled
isPowerPluggedIn
_updateBatterySaverState
_adapterChangeToken
_batterySaverToken
_batterySaverEnabled
_powerPlugggedIn
powerPlugggedIn
TB,R,GisPowerPluggedIn,V_powerPlugggedIn
batterySaverEnabled
TB,R,GisBatterySaverEnabled,V_batterySaverEnabled
_addFailedTestFlightInstallIfNecessaryForInstallValues:error:changeset:
resetUpdateWithBundleID:logKey:
errorValueForProperty:
disambiguatedSQLForProperty:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
setInstallPhase:
storeMetadata
setStoreMetadata:
_isUserInitiated
T@"AppInstallPolicy",C
T@"MIStoreMetadata",C
processDictionary:error:
_isUpdate
T@"NSNumber",R,V_isUpdate
completedUnitCount
setCompletedUnitCount:
totalUnitCount
_completedUnitCount
_totalUnitCount
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
_isConstrained
_isExpensive
_isRoaming
TB,R,V_isConstrained
TB,R,V_isExpensive
TB,R,V_isRoaming
setErrorDomain:
setErrorDescription:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDomain
errorCode
errorDescription
_errorCode
_errorDescription
_errorDomain
T@"NSString",&,N,V_errorDomain
Ti,N,V_errorCode
T@"NSString",&,N,V_errorDescription
setLimitCount:
_requestPromiseForInstall:
_startRequest:forPersistentID:
promiseWithAll:
setDialogOptions:
completeStoreDownloadURL
registerCacheDeleteInfoCallbacks
scheduledTimer
_purgeable:urgency:
_purge:urgency:
_cancelPurge
odrPurgeCoordinator
updatePurgeableStorage
_updatePurgeableStorageWithCoaleseInterval:refresh:
setScheduledTimer:
_isStale
_refreshPurgeableStorage:
_pushUpdatedAvailableStorage:
T@"CacheDeleteCoordinator",R,N
invaldateCaches
updatePurgeableStorageFollowingAppDeletions:
updatePurgeableStorageRightAway
_periodic:urgency:
appPurgeCoordinator
setOdrPurgeCoordinator:
_combinedSpaceByUrgency
_freeSpaceQueue
_runQueue
_lastUpdate
_appPurgeCoordinator
_odrPurgeCoordinator
_scheduledTimer
T@"NSObject<OS_dispatch_source>",&,V_scheduledTimer
T@"AppPurgeCoordinator",R,N,V_appPurgeCoordinator
T@"<CacheDeletePurgeableProvider>",W,N,V_odrPurgeCoordinator
productID
addMessageInfo:withError:
removeMessageInfoForUser:inApp:withError:
addRevocationInfo:
removeRevocationInfoForUser:inApp:
defaultContext
contextWithReason:
shouldPerformUpdates
_setLogKey:
callbackHandler
setCallbackHandler:
includeMetrics
setIncludeMetrics:
isVPPLookup
setIsVPPLookup:
_contextLogKey
_includeMetrics
_isVPPLookup
_callbackHandler
T@?,C,N,V_callbackHandler
TB,V_includeMetrics
TB,V_isVPPLookup
fetchPromiseID:withError:
_setPromiseUsingSpecification:withError:
streamingZipOptions
diskSpaceNeeded
_newPromiseUsingDefinition:
initWithCoordinator:error:
failPromiseID:forReason:withError:
_containerURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
scratchPath
_createDirectoryInSearchPath:domain:withPathComponent:
_downloadPathForID:
keepTemporaryFiles
_rootDownloadPath
lib_ensureDirectoryExistsAtPath:
_whitelistForCachedDataPath
cachedDataPathForDomain:
_enforceWhitelist:forPath:
_createDirectoryAtBaseURL:withPathComponent:
setResourceValues:error:
libraryPath
odrScratchPath
cleanupDownloadPathForID:
cleanupDownloadPathsNotMatchingIDs:
downloadPathForID:
enforceWhitelistForDomain:
persistedDataPathForDomain:
initWithItems:
useLaunchCountsForAppUsage
_persistUsageUsingLaunchCounts
_persistUsageUsingDuet
typeForInstallMachinery
isDeletableSystemApplication
knowledgeStore
predictorWithKnowledgeStore:
launchLikelihoodForTopNApplications:withLikelihoodGreaterThan:withTemporalResolution:
valueAtDate:
setProbability:
setSystemApp:
sortUsingDescriptors:
_writeToContainer:
initWithQueryString:attributes:
setProtectionClasses:
startAccessingReturningError:
attributeSet
attributeDictionary
setLaunchCount:
stopAccessing
setFoundItemsHandler:
writeToFile:atomically:
commonlyUsedApps
launchCount
probability
isSystemApp
_systemApp
_probability
_launchCount
Tq,N,V_launchCount
Tf,N,V_probability
systemApp
TB,N,GisSystemApp,V_systemApp
localizedTitle
localizedMessage
setIdentifier:
textFieldWithPlaceholder:secure:
setKeyboardType:
setText:
addTextField:
subscriptionEntitlementsURL
setBagURL:
setValue:forRequestParameter:
_newResponseWithURLResult:error:
allowPromptForAuth
setAllowPromptForAuth:
segment
setSegment:
_hasAttemptedAuth
_allowPromptForAuth
_segment
T@"ACAccount",&,V_account
TB,V_allowPromptForAuth
T@"AMSProcessInfo",&,V_clientInfo
TQ,V_segment
enumerateByteRangesUsingBlock:
_subscriptionStatusReturningError:
_subscriptionStatusForAccountID:dictionary:returningError:
_requestURL:
_newBaseRequestBodyDictionaryWithError:
timeout
subscriptionDuration
urlSession
_importSubscriptionKeyBagData:accountID:logKey:subscriptionStatus:returningError:
sbsyncDataForAccountID:sbsyncType:logKey:returningError:
sbsyncProductionURL
importSubscriptionKeyBagData:subscriptionStatus:returningError:
sbsyncDataForAccountID:sbsyncType:returningError:
setSubscriptionDuration:
setUrlSession:
_displayingDialog
_syncType
_initialSubscriptionStatus
_timeout
_subscriptionStatus
_subscriptionDuration
Td,N,V_startTime
T@"AMSURLSession",&,N,V_urlSession
Td,N,V_timeout
Tq,R,N,V_subscriptionStatus
T@"NSNumber",C,N,V_subscriptionDuration
predicateWithFormat:
_associatedReaderForObject:
_setAssociatedReader:forObject:
_predicateForKindOfClass:
notificationWithName:userInfo:
notificationForRefreshWithBundleIDs:
notificationForRefreshWithDeviceID:
notificationForInstalls:withDeviceID:
notificationForRegisteredApps:
notificationForUninstalls:withDeviceID:
notificationForUnregisteredBundleIDs:
_requestURL
setURLKnownToBeTrusted:
setRequestMethod:
setRequestCachePolicy:
setValue:forRequestHeader:
_parseURLFromResponseData:
JSONObjectWithData:options:error:
StoreKitMessagesEndpointURL
initWithBagContract:account:bundleID:status:
_validateAssetsForHashURL:
_enumerateURLs:usingBlock:
_removeItemAtURL:withDescription:
stringByDeletingPathExtension
pathExtension
_validateMetadataURL:matchesContents:
_validateAssetPackURL:
initWithUserID:bundleID:productID:
_productID
T@"NSString",R,N,V_productID
mutableCopyWithZone:
_registerNotifier
batterySaverWatcherDidChangeState:
_getState
_notifyDelegate
initWithDelegate:
_updateStatus
_enabled
_notifyQueue
T@"<BatterySaverWatcherDelegate>",R,W,V_delegate
predicateForActiveBootstrapWithSourceType:
setPredicate:
setOrderingProperties:
_queryActiveInstallationStatisticsOnConnection:
_queryJettisonCandidatesOnConnection:
_verifyBootstrapCompleteOrNotRequired:
priority
_findJettisonCandidateForPriority:
setActiveInstallsCount:
setStartedInstalls:
activeInstalls
_verifyActiveInstallation:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
bootstrapResetSourceType:withError:
bootstrapSourceType:enumerateUsingBlock:
jettisonActiveInstallationsToReduceActiveCountTo:forReason:
scheduleMaximumActiveCount:evaluateUsingBlock:
_jettisonCandidates
activeInstallsCount
startedInstalls
_activeInstallsCount
_startedInstalls
TQ,V_activeInstallsCount
T@"NSArray",&,V_startedInstalls
_isKnownDatabasePath:
_addKnownDatabasePath:
_removeKnownDatabasePath:
transporterConfiguration
arrayWithObject:
setTransporterConfiguration:
canBeginTransportation
endTransporationAndRemoveDatabase
performTransportationUsingBlock:
initWithConnection:andCatalog:
valueOr:
_provideService:forEntitlement:withReply:
deliverEngagementRequest:withResultHandler:
_unboostingRemoteObjectProxy
deliverNotifications:
deliverProgress:
isDialogObserverAvailableWithReplyHandler:
currentClient
getAppStoreServiceWithReplyHandler:
getArcadeServiceWithReplyHandler:
getCrossfireServiceWithReplyHandler:
getClipServiceWithReplyHandler:
getDiagnosticServiceWithReplyHandler:
getIAPHistoryServiceWithReplyHandler:
getInstallationServiceWithReplyHandler:
getInstallAttributionServiceWithReplyHandler:
getLibraryServiceWithReplyHandler:
getMacDaemonManagedServiceWithReplyHandler:
getManagedAppServiceWithReplyHandler:
getMetricsServiceWithReplyHandler:
getOcelotServiceWithReplyHandler:
getPersonalizationServiceWithReplyHandler:
getPurchaseHistoryServiceWithReplyHandler:
getPurchaseServiceWithReplyHandler:
getRepairServiceWithReplyHandler:
getRestoreServiceWithReplyHandler:
getTestFlightFeedbackServiceWithReplyHandler:
getUpdatesServiceWithReplyHandler:
deliverNotifications:withBarrierBlock:
deliverProgress:withBarrierBlock:
hasConnection
isDialogObserverAvailable
hasSeenAppStore
_processInfo
T@"AMSProcessInfo",R,V_processInfo
getAppMetadataForBundleID:connection:context:
initWithApplicationProxy:context:
createAppEventFromAppMetadata:
appUsageType
getAppUsageSessionForBundleID:context:
createMetricsEventFromAppMetadata:eventType:context:
topic
setAppEventType:
setAppUsageType:
setClip:
setClipAppType:
setCohort:
setEvid:
setStorefront:
appPlatformForAppPlatformType:
setAppSessionReporterKeyRepaired:
setAppSessionReporterKey:
setInstallType:
setForegroundEvents:
setUsageTime:
metricsDictionary
serverTimeFromDate:
metadataEntityClass
_getCurrentApps
orderedSetWithOrderedSet:
readCurrentApps:
setDeletedApps:
historyMap
launchesStartDate
nowDate
stitchTogetherEvents:
usageCount
_isCandidateAppMetadata:context:
minimumRunningTime
usageTime
importAppUsageSessions:error:
hardwareModel
characterSetWithCharactersInString:
isAtEnd
scanUpToCharactersFromSet:intoString:
enumerateApplicationsOfType:usingBlock:
writeAppMetadata:context:
importAppMetadata:class:error:
hardwareFamily
removeAppUsageSessiondForBundleID:context:
shouldEnableAppUsageMetricsForSession:override:
_authenticateAccount:withClientInfo:error:
_runRequestWithError:
applicationUsername
restoreTransactionsURL
apiVersion
forceAuthentication
receiptInstallURL
_forceAuthentication
_apiVersion
_applicationUsername
_receiptInstallURL
_transactions
Tq,R,N,V_apiVersion
T@"NSString",C,N,V_applicationUsername
TB,N,V_forceAuthentication
T@"NSString",R,N,V_logKey
T@"NSURL",&,N,V_receiptInstallURL
T@"NSArray",R,N,V_transactions
initWithoutKeepAlive
performMigration
initWithPhase:terminalPhase:bundleID:itemID:appType:installType:
getAppPayoutEventsWithCompletionBlock:
getAppSummaryEventsWithCompletionBlock:
recordSummaryMetricsWithCompletionBlock:
resetPayoutWithCompletionBlock:
sendPayoutMetricsWithCompletionBlock:
sendSummaryMetricsWithCompletionBlock:
sbsyncIfSubscribedWithAccount:completionBlock:
sbsyncManuallyWithReason:duration:completionBlock:
arcadeAppCount
isTrialPeriod
appAdamID
offerID
topAppsForAccount:completionBlock:
flushMetricsWithCompletionBlock:
reportAppEvent:completionBlock:
sbsyncWithCompletionBlock:
sbsyncWithDuration:completionBlock:
subscriptionDetailsWithCompletionBlock:
subscriptionStateWithCompletionBlock:
_fetchAppRecordForBundleID:error:
_canRescueInstallTypeForBundleID:appRecord:error:
_attemptRescueForBundleID:error:
outputBlock
setOutputBlock:
_outputBlock
T@?,C,N
initWithDescription:
waitWithTimeout:error:
simulateCrashWithMessage:
signal
waitWithTimeout:
_description
_sempahore
_requestBodyDictionary
_bagURL
viewUpdatesRequestURL
availableUpdatesRequestURL
_newArrayWithUpdatableApps:
_newDictionaryWithUpdatableApp:
_copyLocalAppsDictionaries
updateUsingOptimizedRequest
initWithAccount:apps:isUserInitiated:
setResponse:
_apps
T@"UpdatesResponse",&,N,V_response
initWithService:
isActivePairedDevice
deviceForFromID:
initWithIDSDevice:
updateWithIDSDevice:
markAsTombstoneDevice
deviceForDestinationID:
deviceForFromID:usingService:
deviceForPairingID:
updateDevicesWithArray:
_devices
T@"XDCDevice",R
lastArcadeStatusConditionSetDate
updateAdPlatformsArcadeStatusCondition
T@"NSObject<OS_xpc_object>",R
enabled
TB,R,GisEnabled
Tr*,R
getGroupingToken:
getClusterMappingsWithCompletionBlock:
reloadClusterMappingsWithCompletionBlock:
resetActorIDWithCompletionBlock:
setClusterMappings:completionBlock:
appTasteProfileEnabled
setClusterMapping:completionBlock:
tasteProfileFeatureEnabledWithCompletionBlock:
setInteger:forKey:
setSimulatedBandwidth:
simulatedBandwidth
_importFromDictionary:
rawUpdateDictionary
_buyParams:
_parentalControlsName:
currentVersionReleaseDate
_zuluDateFormatter
_externalVersionIdentifier:
_deviceFamilies:
_parentalControlsRank:
setDateStyle:
setTimeStyle:
_appsAppleDictionary:
setLenient:
timeZoneForSecondsFromGMT:
initWithUpdateDictionary:
installDate
isCodeSignatureUpdate
isPerDevice
parentalControlsName
requiresRosetta
runsOnAppleSilicon
runsOnIntel
setOffloaded:
setBackground:
setCodeSignatureUpdate:
setInstallDate:
setMetricsData:
setPerDevice:
setUpdateState:
softwarePlatform
releaseDate
_evid
_parentalControlsRank
_releaseDate
T@"NSNumber",R,N,V_evid
background
TB,N,GisBackground
T@"NSNumber",R,N,V_itemID
T@"NSDate",N
offloaded
TB,N,GisOffloaded
perDevice
TB,N,GisPerDevice
codeSignatureUpdate
TB,N,GisCodeSignatureUpdate
Tq,R,N,V_parentalControlsRank
T@"NSDate",R,N,V_releaseDate
appClip
TB,R,N,GisAppClip
_currentAppMetadataCount
_writeCurrentAppMetadata
_intervalStartDateKeyForType:
setDate:forKey:
_supplementalStartDateKeyForType:
_getAppEventsForType:logKey:completionBlock:
_postMetricsForType:completionBlock:
_recordDeletedBundleIDs:
_recordMetricsForType:completionBlock:
_resetMetricsForType:completionBlock:
_recordInstalledApps:installType:
_handlerForType:
shouldCollectMetrics
setBaseLogKey:
_currentAppMetadata
setCurrentApps:
getAppEventsWithError:
_logKeyForMetricsType:
recordDeletedBundleIDs:
_writeAppMetadataForBundleIDs:
recordInstallEventsForBundleIDs:installType:
recordSupplementalAppMetricsEvents
resetMetrics
_isCandidateAppProxy:
_writeAppMetadata:
clearStartIntervalForAppUsageType:
recordSupplementalIntervalStartDateForAppUsageType:
recordStartDateForAppUsageType:
startDateForType:
supplementalStartDateForType:
updateStartDateForType:date:
T@"MetricsCoordinator",R,N
_activeAccountID
_publishStreamEvent:
_delegateQueue
_delegateSource
_streamError
T@"NSError",&,V_streamError
TQ,V_streamStatus
T@"<StreamDelegate>",W,V_delegate
setUpdateState:usingPurchaseInfo:
convertBackgroundUpdateToForeground:logKey:
finishAppUpdateForBundleID:withUpdateState:
urlWithHeight:width:format:
urlWithHeight:width:cropStyle:format:
replaceCharactersInRange:withString:
height
width
urlWithHeight:width:
_validateAndResetDigestError:
_hashBuffer:length:
_hashData:
updateWithBuffer:length:
initWithDigest:type:
bytesProcessed
_hashDigest
_index
_valid
_bytesProcessed
_bytesValidated
TQ,R,V_bytesProcessed
TQ,R,V_bytesValidated
accountSecurityLevel
applicationSite
setAccountSecurityLevel:
setApplicationSite:
setStatusCode:
T@"AMSBuyParams",&
setAllowServerDialogs:
debugReason
lib_isSandboxRequest
lib_forceSilentAuthentication
lib_setProxyAppBundleID:
setHasAvailableBytes:
hasAvailableBytes
setHasTotalBytes:
hasTotalBytes
availableBytes
totalBytes
_availableBytes
_totalBytes
TQ,N,V_availableBytes
TQ,N,V_totalBytes
pushTypeErrorForFailedRequestCreation
pushTypeErrorForFailedResponse
pushTypeErrorForNoResponse
pushTypeErrorForNoAccount
pushTypeErrorForAddingInactiveAccount
pushTypeErrorForNoPushTokenRegistered
pushTypeRetryableError
requestType
isActive
_request:
initWithAccount:token:environment:logKey:
setBag:
addPushTypeURL
removePushTypeURL
_paramsDict
_requestEncoder
_requestType
T@"ACAccount",&,N,V_account
Tq,N,V_requestType
T@"NSData",&,N,V_token
alwaysPreserved
TB,N,GisAlwaysPreserved
setPromptTitle:
setDefaultButtonString:
initWithDSID:altDSID:username:options:
promptTitle
defaultButtonString
actionWithTitle:identifier:
setDefaultAction:
lib_account
ams_setRawPassword:
initWithUsername:logKey:
_accountFromSystemAlertDialogWithOptions:error:
authenticateResult
usernameEditable
setUsernameEditable:
_username
_usernameEditable
_authenticateResult
T@"AMSAuthenticateResult",R,V_authenticateResult
TB,V_usernameEditable
copyMigratorValueForConfigurationKey:
setMigratorValue:forConfigurationKey:
_migratorType
_migratorValues
_attempts
TQ,R,N,V_attempts
T@"NSString",R,N,V_migratorType
initWithDatabaseStore:
_handlePollEventWithReasons:
_resetBootstrappingInstallations
_registerPolicyStateMonitors
_scheduleNextOptimalDownloadWindow
_requestPollWithReason:
scheduleUsingTransaction:
isElevated
_bootstrapStoreApps
_bootstrapSystemApps
_pollForPendingInstallations
_checkIfInstallShouldBeAllowedToStart:withPackage:
startInstallIDs:transaction:
countForProperty:predicate:onConnection:
minValueForProperty:predicate:onConnection:
requiresDeviceSecurity
requiresTermination
requiresNetwork
cellularDownloadForPackage:
requiresPowerPluggedIn
requiresMigrationComplete
_activeInstallationDictionary
_runOnceAfterUnlockChecks
_ignorePolicyNotifications
_pollReasons
_pollSource
_bootstrapQueue
_unlockedOnce
fetchPingbackURL
setFetchPingbackURL:
_fetchPingbackURL
T@"NSString",&,N,V_fetchPingbackURL
T@"NSNumber",&,N,V_retryCount
_legacy_valueDictionaryWithAsset:
assetType
dPInfo
hashArrayData
legacy_packageForAsset:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
initWithUTF8String:
alphanumericCharacterSet
formUnionWithCharacterSet:
invertedSet
componentsSeparatedByCharactersInSet:
lib_stringByLimitingToLength:addElipsis:
isAbsolutePath
stringWithFileSystemRepresentation:length:
compare:options:
lib_numberValue
lib_accountDSIDValue
lib_stringByAppendingPathComponents:
lib_stringSantiziedAndTruncatedToLength:
lib_volumePath
valuePromise
initWithBagValue:bagKey:
_bagValue
_bagKey
_isMemoized
_memoizedValue
initWithName:applicableEntitlement:mergeHandler:
notificationSourceWithName:applicableEntitlement:mergeHandler:
applicableEntitlement
mergeHandler
_mergeHandler
_applicableEntitlement
T{_ASDServiceEntitlement=@@},R,V_applicableEntitlement
T@?,R,C,V_mergeHandler
T@"NSString",R,C,V_name
lib_importKeybagData:
lib_keybagSyncDataForAccount:withTransactionType:
_webkit_encodeHostName
localizedStringWithFormat:
isNotZero
notZero
TB,R,GisNotZero
skipDownloads
_createLogKey
externalVersionIdentifier
itemIdentifier
setClientType:
_preflightAppWithMetadata:isFree:isActiveAccountAppOwner:error:
_purchaseInfoWithMetadata:
setUseLocalAuthAndSystemDialogs:
_purchaseFree:error:
_makeVPPCall:metadata:changeType:error:
detailedResultBlock
_vppBuyParams:
initWithPurchaseType:buyParams:
setIgnoreRequirePasswordRestriction:
isMultiUser
managedPurchaseQueue
enquePurchases:
localizedFailureReason
correlationID
responseDictionary
_updateSinfsAndReceiptsStoreItems:sinfData:
_downloadMetadataForItems:
outputDictionary
initWithType:clientIdentifier:clientVersion:bag:
setItemIdentifiers:
setBundleIdentifiers:
perform
responseDataItems
_ownsCheck:account:error:
_processJobResult:forReason:
initWithSinfData:
firstDataForSinfDataKey:
copyWritableMetadataForAccount:includeVariant:
setDetailedResultBlock:
_applicationVariant
_appProxy
_bundleIdentifer
_externalVersionIdentifier
_hasInstalledApp
_itemIdentifier
_skipDownload
_detailedResultBlock
_resultBlock
_resultChangeType
T@?,C,V_detailedResultBlock
T@"ASDManagedApplicationRequestOptions",R,C,V_options
Tq,R,V_resultChangeType
acknowledgementNeededForPrivacyIdentifier:account:
stringForKey:
initWithServiceName:viewControllerClassName:
objectForSetting:
responderWithHandler:
initWithInfo:responder:
setActions:
newHandleWithDefinition:configurationContext:
registerObserver:
activateWithContext:
initWithPrivacyIdentifier:account:
acknowledgePrivacy
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
_privacyPromptSemaphore
_dialogRequestWithTitle:message:
descriptionBlock
_createTapToRadarURLWithTitle:description:
openURL:configuration:completionHandler:
setHost:
initWithName:value:
_message
_descriptionBlock
T@?,C,V_descriptionBlock
_attributes
_href
_startListener
_allEntitlements
_connection:hasEntitlement:
_disconnectClient:
setListener:
listener
_clients
T@"NSXPCListener",&,V_listener
multiParamsForAppAdamID:
_requestWithParams:error:
processStatusString:
removeInstallAttributionParamsForApp:withError:
initWithAppAdamID:urlString:
setResults:
_appAdamID
_fetchPostbackInfoURL
T@"NSArray",&,N,V_results
_cleanupStaleCoordinators
cleanupStaleUpdateTimerIsExpired
_cleanupUpdatesRemovingPurchases:removedApps:
noteUpdatesStateChanged:logKey:
_cleanupUpdatesRemovingPurchases:removedApps:updateCount:removeCount:
lastUpdateCleanupDate
placeholderFailureReason
_activelyInstallingCoordinatorIDs
recordLastUpdateCleanupDate
_cancelInstallIDs:
_allInstalledApplicationsStoreIDs
_activelyInstallingBundleIDs
performCleanup
cleanupUpdatesForRemovedApps:withCompletion:
cleanupUpdatesFollowingInstallOfApps:withCompletion:
volume
urgency
desiredPurgeAmount
performAvailablityCheck
apps
offloadOnly
T@"ASDPurgeAppsRequestOptions",R,D,N
transactionIDsCount
transactionIDs
inAppPendingQueueCountURL
inAppPendingQueueURL
_connectionPointer
_SQL
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
predicate
applyBinding:atIndex:
limitCount
entityClass
_newSelectSQLWithProperties:columns:
_newSelectSQLWithProperties:
copyEntityIdentifiers
copySelectSQLWithProperties:
createTemporaryTableWithName:properties:
_descriptor
T@"SQLiteQueryDescriptor",R
SQLJoinClausesForEntityClass:
unionSet:
joinClauseForProperty:
SQLForEntityClass:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
T#,N,V_entityClass
T#,N,V_memoryEntityClass
Tq,N,V_limitCount
T@"NSString",C,N,V_orderingClause
T@"NSArray",C,N,V_orderingDirections
T@"NSArray",C,N,V_orderingProperties
TB,N,V_returnsDistinctEntities
T@"SQLitePredicate",C,N,V_predicate
_aggregateValueForProperty:function:predicate:onConnection:
allOnConnection:predicate:
maxValueForProperty:predicate:onConnection:
queryOnConnection:predicate:orderingProperties:orderingDirections:
initWithPredicate:
initWithAssetType:
runQueryAndReturnError:
systemAppServerUrl
attributes
lookupSystemApplicationWithBundleID:
_lookupResults
T@"NSArray",R,C,V_lookupResults
T@"NSNumber",C,N,V_externalVersionID
revokedApps
expiredApps
receiptFromBundleAtPath:
isVPPLicensed
refreshStoreOriginated
_refreshReceiptForApp:receipt:
_postNotificationForRevoked
_postNotificationForExpiring
_receiptExperationDateForReceipt:
setLaunchURL:
setDestinations:
isRevoked
_checkExpirationNotificationDate:receipt:
setRefreshStoreOriginated:
_qaVerficationExpiredApps
_qaVerficationRevokedApps
_refreshStoreOriginated
TB,N,V_refreshStoreOriginated
_assumeIdentity:
_currentIdentityWithIdentity:
assumeDaemonIdentity
_unitTest_resetIdentity
T@"<Identity>",R
namespaceWithSuffix:
machPortName
metricsContainerId
inAppTransactionDoneURL
_dispatchCompletionBlock
completionBlock
T@"NSError",C,V_error
TB,V_success
systemVersion
isLocallyPaired
deviceForIDSDevice:
serviceMinCompatibilityVersion
modelIdentifier
thinningHeaders
isTombstone
_activePairedDevice
_supported
_tombstone
_destinationID
_thinningVariant
TB,R,GisActivePairedDevice,V_activePairedDevice
T@"NSString",R,V_destinationID
T@"NSUUID",R
supported
TB,R,GisSupported,V_supported
T@"NSString",R,V_thinningVariant
tombstone
TB,R,GisTombstone,V_tombstone
mapTableWithKeyOptions:valueOptions:
_notifyObserversDownloadStatusChanged:
initWithDownloadID:info:client:
setStatusBlock:
pause
_downloadLock
_downloadQueue
_pendingDownloads
_installWithXPCMetadata:
companionBundleID
lib_canonicalAccountForAccount:
artworkURL
placeholderEntitlements
messagesArtworkURL
_metadataWithXPCMetadata:
_packageWithXPCMetadata:
setKind:
setBetaExternalVersionIdentifier:
setBetaBuildGroupID:
setSoftwareVersionBundleID:
setInitialODRSize:
setStoreCohort:
packageSINF
packageDPInfo
provisioningProfiles
_transcodeDataArray:
taskWithXPCAppMetadata:forDevice:requestToken:
_reportRemoteProgress
_processedExternalIDs
T@"NSArray",R,V_processedExternalIDs
pushRegisterErrorForFailedRequestCreation
pushRegisterErrorForFailedResponse
pushRegisterErrorForNoResponse
pushRegisterErrorForNoAccount
dataUsingEncoding:allowLossyConversion:
registerPushTokenURL
initWithFormat:arguments:
T@"DispatchQueue",R
assertQueue
syncUsingBlock:
productIdentifiers
sortedArrayUsingSelector:
productOffersBatchSize
_requestBatches:error:
mediaAPIEnvironmentOverride
inAppsMediaAPIHost
sandboxInAppsMediaAPIHost
countryCode2Char
languageTag
componentsWithString:
_mediaPlatformString
_mediaClientIdentifier
initWithClientIdentifier:bag:
initWithTokenService:bag:
initWithTokenService:
_buildMediaAPIURLWith:error:
requestWithComponents:
autoupdatingCurrentLocale
localeIdentifier
ams_storefrontForMediaType:
useMediaWithLegacyClientRate
_queryDictionary
_mediaAPIFetchWith:error:
_parseMediaProducts:
productOffersURL
_parseResponse:error:
currentLocale
_productIdentifiers
_invalidIdentifiers
_products
T@"NSArray",R,N,V_productIdentifiers
T@"NSArray",R,N,V_invalidIdentifiers
T@"NSArray",R,N,V_products
initWithObjectsAndKeys:
dataTaskWithRequest:
taskIdentifier
initWithRequest:forSessionID:usingURLSession:logContext:metricEvent:
taskID
downloadEvent
setDownloadEvent:
streamWriter
setStreamWriter:
logContext
_dataTask
_sessionID
_downloadEvent
_logContext
T@"AIMDownloadEvent",&,V_downloadEvent
T@"Promise",R,V_promise
T@"<StreamWriter>",&,V_streamWriter
T{?=[512c]Q},R,V_logContext
strongToWeakObjectsMapTable
initWithClient:
dataContainerURL
databaseStore
_checkAgeAndSyncWithLogKey:completionHandler:
_syncReceiptsWithReason:logKey:completionHandler:
initWithLocalRevision:reason:client:
receipts
setReceipts:forRevision:
more
receivedStatuses:
initWithClient:manager:
removeAllStatuses
removeAllReceipts
transactionReceiptsMaxAge
queue
T@"InAppReceiptDatabaseStore",R,N,V_databaseStore
T@"NSOperationQueue",R,N,V_queue
_readAllAvailableData
_finishExtractor
errorHandler
_callErrorHandlerWithError:
initWithStreamReader:extractor:
setErrorHandler:
_errorHandler
T@?,C,V_errorHandler
_dataForRequestWithKnownIAPs:revision:
needsInitialMigration
_boostrapWhenReady
_queueMigrationWithConfiguration:
_runMigrationsWhenReady
lastOSBuildVersion
_setupMigrationFollowingMigratorComplete:
_loadBagAndPerformMigration
_performMigration
setLastOSBuildVersion:
recordOSMigrationDate
_queueMigration:
_queueMigration:persist:
_handleNetworkStateDidChangeNotification:
migrationsNeeded
needsMigration
performMigration:clientID:
_configurationStore
_migrations
copyThinningHeaders
setTemporaryBundleID:
createDeviceIdentifierWithVendorName:bundleIdentifier:
setGeneratedVendorID:
purchase_addThinningHeaders
purchase_addVendorIDForApplication:
initWithOctane
initWithSandbox:
_keySet
bagForProfile:profileVersion:processInfo:
createSnapshotWithCompletion:
profile
profileVersion
URLForKey:account:
T@"NSString",R,C,N
T@"AMSProcessInfo",R,C,N
adoptProductsURL
adoptionEligibilityURL
unadoptURL
T@"AMSBagValue",R
T@"URLBagMemoizedValue",R
arcadeSubscriptionGroupIdentifier
autoUpdateReloadIntervalSeconds
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
invalidBuildToolVersions
drmRecovery
crossfireSamplingPercentage
ownsCheckURL
mescalSignedActions
personalizedLookupURL
unpersonalizedLookupURL
appUsageSamplingPercentage
clusterMappingURL
clusterMappingRefreshFrequencySeconds
IAPInfoForcedRefreshMinutes
IAPInfoUpdatePollingFrequencySeconds
subscriptionEntitlementsRefreshIntervalInSeconds
subscriptionEntitlementsTimeout
T@"URLBagMemoizedValue",R,N
doNotUpdateList
v2UpdateSchedulingEnabled
updateProductContentType
updatesReloadInterval
updatesReloadIntervalCellular
appleIDLookupURL
countryCode3Char
createAppReceiptURL
disablePurchaseIntentNotifications
installAttributionMaxCampaignNumber
installAttributionMaxImpressionsAge
installAttributionMaxLowFidelityParamsAge
installAttributionMaxParamsAge
installAttributionMaxPingbackAge
installAttributionMaxPingbackRetries
installAttributionLowFidelityCap
installAttributionStartEndWindow
installAttributionShouldUseProxy
installAttributionShouldSendDeveloperPingback
installAttributionPostbackProxyURL
renewVPPReceiptURL
subscriptionStatusMaxAge
transactionReceiptsMaxCount
transactionReceiptsURL
T@"AMSBagValue",R,N
automaticDownloadsURL
pendingAppsURL
pushNotificationEnvironment
hideableSystemApps
hideableSystemAppsForWatch
backoffDelays
backoffRandomRange
getImageUploadURLsURL
testFlightExtensionPushEnabled
watchSuppressDialogs
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
T@"URLBag",R
authorizeURL
upToDateClaimURL
ocelotDeviceIDDaysValid
ocelotPayoutQualifyingDurationSeconds
sbsyncSandboxURL
switchArcadeUserFallbackURL
switchArcadeUserURL
enableMacOSCompatibleIOSApps
enableMacOSCompatibleIOSAppsForCarry
manageSubsOnAppDeleteBlacklist
TB,R,N,GisExpired,Vexpired
T@"NSDate",R,N,VexpirationDate
T@"NSString",R,C,N,Vprofile
T@"NSString",R,C,N,VprofileVersion
_localURL
_pinCount
T@"NSURL",C,V_localURL
TQ,V_pinCount
setBundleKey:
setContentHashDictionary:
setDestinationPath:
setDownloadSize:
setExpectedDiskUsage:
setHashingData:
setStoreBased:
setStreamable:
setUniqueKey:
setUseLocalCache:
_logPrefixForPriority:
setSourceURL:
_validateSourceURL
assetPromise
setCancellationHandler:
shouldPin
_unlock
_completeCoordinatorPromise:
_streamingZipOptions
allowCellularAccess
attributesOfItemAtPath:error:
_simulatedDownloadTime
_cancelSimulatedDownloadTimer
copyItemAtPath:toPath:error:
_simulatedDownloadTimerWithInterval:dispatchBlock:
copyManifestWithError:
_getFileSizeAtURL:
checkResourceIsReachableAndReturnError:
_calculateLocalURLForEmbeddedAssetPackWithKey:error:
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
addDuplicateDownload:
extractor
outOfBandTransferPromise
simulateDownloadForEmbeddedAssetWithCompletion:
totalNewPins
setAssetPromise:
contentHashDictionary
expectedDiskUsage
hashingData
hasRefreshed
setHasRefreshed:
requestStartDate
setRequestStartDate:
tagsRequest
setType:
useLocalCache
qosClass
completionPromise
setCompletionPromise:
_completed
_duplicateDownloads
_newPins
_outOfBandTransferPromise
_simulatedDownloadTickCount
_simulatedDownloadTimer
_discretionary
_hasRefreshed
_shouldPin
_streamable
_useLocalCache
_storeBased
_qosClass
_assetPromise
_bundleKey
_contentHashDictionary
_destinationPath
_expectedDiskUsage
_hashingData
_loadingPriority
_requestStartDate
_sourceURL
_tagsRequest
_uniqueKey
_completionPromise
T@"ODRApplication",C,V_application
T@"NSString",C,V_bundleKey
T@"AMSPromise",&,V_completionPromise
T@"NSDictionary",C,V_contentHashDictionary
T@"NSString",C,V_destinationPath
Tq,V_expectedDiskUsage
T@"NSDictionary",C,V_hashingData
TB,V_storeBased
TB,V_streamable
T@"NSString",&,V_uniqueKey
T@"AssetPromise",&,V_assetPromise
discretionary
TB,GisDiscretionary,V_discretionary
Tq,V_downloadSize
TB,V_hasRefreshed
Td,V_loadingPriority
T@"IXPromisedOutOfBandTransfer",R
Tq,V_pinCount
T@"NSDate",&,V_requestStartDate
TB,V_shouldPin
T@"NSURL",C,V_sourceURL
T@"ODRTagsRequest",&,V_tagsRequest
Tq,V_type
TB,V_useLocalCache
TI,V_qosClass
initWithDictionary:assetType:
_parseAssetDictionary:
isApplicableUpdateWithInstalledItemContext:
assetWithDictionary:
deltaAssetsWithDictionary:
selectAssetFromArray:usingStategy:
selectAssetFromArray:usingStategy:withDeltaForInstalledItem:
priorVariantIdentifiers
priorVersionEvid
_locallyCacheable
_zipStreamable
_archiveType
_assetType
_bytesTotal
_clearHashes
_expectedDiskspace
_initialODRSize
_numberOfBytesToHash
_priorVariantIdentifiers
_priorVersionEvid
Tq,R,V_archiveType
Tq,R,V_assetType
T@"NSString",R,V_assetURL
T@"NSNumber",R,V_bytesTotal
T@"NSArray",R,V_clearHashes
delta
TB,R,GisDelta
T@"NSData",R,V_dpInfo
T@"NSNumber",R,V_expectedDiskspace
T@"NSArray",R,V_hashes
T@"NSNumber",R,V_hashType
T@"NSNumber",R,V_initialODRSize
locallyCacheable
TB,R,GisLocallyCacheable,V_locallyCacheable
T@"NSNumber",R,V_numberOfBytesToHash
T@"NSArray",R,V_priorVariantIdentifiers
T@"NSNumber",R,V_priorVersionEvid
T@"NSData",R,V_sinf
T@"NSString",R,V_variantID
zipStreamable
TB,R,GisZipStreamable,V_zipStreamable
useLocalAuthAndSystemDialogs
shouldUseJSONContentTypeForPurchaseInfo:
setUseJSONContentType:
purchaseType
purchase_purchaseWithPurchaseInfo:
purchase_itemResponseWithError:usingPurchaseInfo:
setItemResponse:
triggeredQueueCheck
purchase_itemResponseFromDictionary:usingPurchaseInfo:
itemResponse
installAttributionPingbackFetchURLString
addPingbackFetchInfo:withLogKey:
installAttributionError
initWithPurchaseBatch:
_isTinker
_repairedTinkerAccountWithPurchaseInfo:
responses
_purchasing
_responses
T@"NSArray",R,V_responses
initWithBundleIdentifiers:options:
messageForUserID:inApp:
revocationsForUserID:inApp:
timeoutInterval
invalidateAndCancel
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_semaphore
_url
_contentLength
T@"NSNumber",R,V_contentLength
_establishCoordinatorAndPlaceholderError:
failWithCoordinator:externalID:error:
duplicateWithCoordinator:externalID:
successWithCoordinator:externalID:
install
setCoordinator:
policyBlock
_suppressEvaluatorDialogs
_policyBlock
T@"AppInstall",R,V_install
T@"IXAppInstallCoordinator",&,V_coordinator
T@?,C,V_policyBlock
TB,V_suppressEvaluatorDialogs
T@"AppInstallImportResult",R,V_result
T@"IXAppInstallCoordinator",R,V_coordinator
T@"NSUUID",R,V_externalID
Tq,R,V_status
allowsAuthentication
allowsCellularAccess
allowsConstrainedNetworkAccess
allowsExpensiveNetworkAccess
allowsWatchCellularAccess
setAllowsWatchCellularAccess:
bytesPerSecondLimit
setBytesPerSecondLimit:
clientIdentifier
setClientIdentifier:
connectionPool
discretionaryType
duetBudgetingIdentifier
enforceATS
locateAssetCache
maximumWatchCellularTransferSize
setMaximumWatchCellularTransferSize:
networkBudgetingIdentifier
protocolClasses
setProtocolClasses:
rangeOffset
requestReason
requestUUID
setRequestUUID:
taskPriority
_allowsAuthentication
_allowsCellularAccess
_allowsConstrainedNetworkAccess
_allowsExpensiveNetworkAccess
_allowsWatchCellularAccess
_enforceATS
_locateAssetCache
_requiresPowerPluggedIn
_bytesPerSecondLimit
_clientIdentifier
_connectionPool
_discretionaryType
_duetBudgetingIdentifier
_expectedContentLength
_maximumWatchCellularTransferSize
_networkBudgetingIdentifier
_protocolClasses
_rangeOffset
_requestReason
_requestUUID
_taskPriority
TB,V_allowsAuthentication
TB,V_allowsCellularAccess
TB,V_allowsConstrainedNetworkAccess
TB,V_allowsExpensiveNetworkAccess
TB,V_allowsWatchCellularAccess
T@"NSNumber",&,V_bytesPerSecondLimit
T@"NSUUID",&,V_clientIdentifier
Tq,V_connectionPool
Tq,V_discretionaryType
T@"NSString",&,V_duetBudgetingIdentifier
TB,V_enforceATS
TQ,V_expectedContentLength
TQ,V_expectedDiskUsage
T@"NSUUID",&,V_externalID
T@"NSNumber",&,V_loadingPriority
TB,V_locateAssetCache
T@"NSNumber",&,V_maximumWatchCellularTransferSize
T@"NSString",&,V_networkBudgetingIdentifier
T@"NSArray",&,V_protocolClasses
TQ,V_rangeOffset
TB,V_requiresPowerPluggedIn
Tq,V_requestReason
T@"NSUUID",&,V_requestUUID
T@"NSNumber",&,V_taskPriority
initWithSpaceReduction:
spaceReduction
preallocatedFiles
setPreallocatedFiles:
_spaceReduction
_preallocatedFiles
T@"NSMutableArray",&,V_preallocatedFiles
Tq,R,V_spaceReduction
transactionID
_configurationDirectoryForBundleID:
_deleteDataWithContext:
expireOrRenewSubscriptionWithProductID:expire:withContext:
_refreshReceiptForBundleID:
isAppStoreVendable
cancelTransactionWithContext:
deleteTransactionWithContext:
refundTransactionWithContext:
resolveIssueWithContext:
_octaneDirectoryForBundleID:createIfNeeded:
_appNameForContext:
dataWithJSONObject:options:error:
_octaneConfigurationFilePathForBundleID:createIfNeeded:
writeToFile:options:error:
_deleteConfigurationFileWithContext:
appRemovedWithBundleID:
handleAppsInstalledWithBundleIDs:
handleAppsUninstalledWithBundleIDs:
restartServerIfNecessary
_cachedPort
_octaneDirectoryPath
T@"OctaneBag",R,N,V_bag
isEqualToMessage:
isValidJSONObject:
initWithRawMessage:
actionType
_userInfo
acceptVisitor:flags:
keyPath
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
setAcceptableExpressionTypes:count:
setAcceptableKeyPaths:
validatePredicate:withError:
_acceptableExpressionTypes
_acceptableKeyPaths
_errors
setEntity:
_useOverride:
testFlightVisualFeedbackOverrides
_entity
T@"BetaAppFeedbackMemoryEntity",&,N,V_entity
maxPermanentODR
shouldDownloadPrioritizedODRForApplicationWithBundleID:
shouldProvideODRSizeDataToLaunchServices
moderateWiFiBandwidth
addDelegate:queue:
devices
setTarget:
setSelector:
numberWithUnsignedShort:
_sendMessage:toDevice:expectsReply:withReplyHandler:
initWithProtobuf:messageType:
sendMessage:toDevice:
sendMessage:toDevice:withReplyHandler:
_handleErrorForIdentifier:error:
isResponse
incomingResponseIdentifier
_handleReplyForIdentifier:protobuf:fromID:
outgoingResponseIdentifier
_handleRequestWithIdentifier:protobuf:fromID:
copyIDSRepresentation
isReply
messageID
messageType
messagePayload
sendProtobuf:toDestinations:priority:options:identifier:error:
initWithProtobuf:device:messageID:
target
selector
methodSignatureForSelector:
invocationWithMethodSignature:
setArgument:atIndex:
retainArguments
invokeWithTarget:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
addHandler:selector:forMessage:
sendProtobof:ofType:toDevice:
sendProtobuf:ofType:toDevice:withReplyHandler:
sendReply:toDevice:
_service
_queuedMessages
_messageHandlers
T@"<XDCServiceDelegate>",W,V_delegate
lib_firstActivity
T@"ASDJobActivity",R
tagStatusForBundle:replyBlock:
purgeAllTagsInBundleWithID:replyBlock:
purgeTagWithName:inBundleWithID:replyBlock:
getSimulatedBandwidthWithReply:
setSimulatedBandwidth:withReply:
_flushMetricsWithReason:completion:
_importClusterMappings:
_recordInternalEventsForBundleIDs:eventType:installType:
_recordMetrics
setAppUsageActorID:
clearAppUsageRecordMetricsForActorIDSession
_resetWithReason:
_fullResetWithReason:
actorID
setActorID:
isArcade
addPriorApps
_getPriorAppEventsWithMetadata:context:
_getCrashAppEventsWithContext:
setFlushTimerEnabled:
_clearActorID:nextPostDate:
_amsMetrics
flush
appUsageActorID
setAddPriorApps:
intervalStartDate
importClusterMappings:error:
shortNameForAppUsageType:
_shouldEnableAppUsageMetricsForSession
setAppUsageEnableMetricsForActorIDSession:
appUsageEnableMetricsForActorIDSession
setRescheduleActorIDReset:
enqueueEvents:
underlyingDictionary
importClusterMappings:
_buyParams
_authenticateWithClientInfo:error:
privacyAcknowledgementRequired
excludeReceiptFromRequest
requestData
appAccountToken
partnerIdentifier
partnerTransactionIdentifier
simulateAskToBuy
discountIdentifier
discountKeyIdentifier
discountNonceString
discountSignature
discountTimestamp
operatingSystem
additionalBuyParams
initWithURL:allowPlaceholder:error:
hideConfirmation
setTransaction:
_excludeReceiptFromRequest
_hideConfirmation
_privacyAcknowledgementRequired
_storeOriginated
_simulateAskToBuy
_productIdentifier
_quantity
_additionalBuyParams
_appAccountToken
_discountIdentifier
_discountKeyIdentifier
_discountNonceString
_discountSignature
_discountTimestamp
_partnerIdentifier
_partnerTransactionIdentifier
_requestData
T@"StoreKitClient",R,C,N,V_client
T@"NSString",R,N,V_productIdentifier
TQ,R,N,V_quantity
T@"NSDictionary",&,N,V_additionalBuyParams
T@"NSString",&,N,V_appAccountToken
T@"NSString",&,N,V_applicationUsername
T@"NSString",&,N,V_discountIdentifier
T@"NSString",&,N,V_discountKeyIdentifier
T@"NSString",&,N,V_discountNonceString
T@"NSString",&,N,V_discountSignature
T@"NSNumber",&,N,V_discountTimestamp
T@"NSString",&,N,V_partnerIdentifier
T@"NSString",&,N,V_partnerTransactionIdentifier
T@"NSData",&,N,V_requestData
TB,N,V_excludeReceiptFromRequest
TB,N,V_hideConfirmation
TB,N,V_privacyAcknowledgementRequired
storeOriginated
TB,N,GisStoreOriginated,V_storeOriginated
TB,N,V_simulateAskToBuy
T@"NSDictionary",&,N,V_transaction
T@"NSDictionary",&,N,V_response
initWithClassifier:
_refreshSystemAppMapping
_handleAppRegisteredNotification:
_handleAppUnregisteredNotification:
_refreshSystemAppMappingForWatch
_createAppFromRecord:
catalogRegisteredApps:
appState
catalogUnregisteredBundleIDs:
executeQueryWithPredicate:error:
filteredArrayUsingPredicate:
_appForBundleID:
launchApp:withResultHandler:
lib_flatMap:
lib_filter:
isArcadeApp
setLocalizedName:
_updateBuyParamsForBundleID:
setUpdateBuyParams:
setStoreExternalVersionID:
setExtensions:
existingProgressForBundleID:
setRemoteProgress:
setBundlePath:
setStoreFront:
updateBuyParamsForBundleID:
executeQuery:excludingBundleIDs:usingBlock:
observer
setObserver:
T@"<LibraryCatalogObserver>",W
launchApp:extensionType:withResultHandler:
launchApp:onPairedDevice:withResultHandler:
lookupBundleIDsForDeletableSystemAppsWithItemIDs:error:
lookupItemIDsForDeletableSystemAppsWithBundleIDs:error:
lookupBundleIDsForDeletableSystemAppsForWatchWithItemIDs:error:
lookupItemIDsForDeletableSystemAppsForWatchWithBundleIDs:error:
_observer
_planner
_systemAppMappingByBundleID
_systemAppMappingByItemID
_systemAppMappingForWatchByBundleID
_systemAppMappingForWatchByItemID
T@"<LibraryCatalogObserver>",W,V_observer
_handleAccountStoreDidChangeNotification:
_logKeyForSegment:logUUID:
_cachedAccountIdForSegment:logKey:
_verifyAccountForCachedSubscriptionEntitlementsForSegment:logKey:notifyInternal:notifyExternal:
unregisterConsumerForActionType:
_logKeyForSegment:
_cachedSubscriptionEntitlementsResponseForSegment:logKey:expired:
consumedIntroOfferFamilyIds
setIgnoreCaches:
setNotifyExternal:
entitlements
resultFromCache
cacheExpired
_getSubscriptionEntitlementsForSubscriptionInfo:withResultHandler:
entitlementsForSegment:
_markCachedSubscriptionEntitlementsAsExpiredForSegment:logKey:
_setCachedSubscriptionEntitlements:forAccountID:segment:notifyInternal:notifyExternal:
_clearAdPlatformsArcadeStatusCondition
familyID
expiryDate
_setAdPlatformsArcadeStatusCondition
setNotifyInternal:
adPlatformsArcadeStatusCondition
setLastArcadeStatusConditionSetDate:
setStatusCondition:completionHandler:
clearStatusCondition:completionHandler:
markCachedSubscriptionEntitlementsAsExpiredForSegment:logKey:
_cachedSubscriptionEntitlementsDictionaryForSegment:logKey:
_cachedSubscriptionEntitlementsPathForSegment:logKey:
dataWithContentsOfFile:
_hasHandlersWaitingForSegment:
_enqueueCompletionHandler:forSegment:
setEntitlements:
setResultFromCache:
setCacheExpired:
_finishHandlersForSegment:result:
_getSubscriptionEntitlementsResponseWithSubscriptionRequestInfo:withResultHandler:
ignoreCaches
notifyInternal
notifyExternal
updateAdPlatformsArcadeStatusConditionForEntitlementsResponse:
_setCachedSubscriptionEntitlementsDictionary:segment:logKey:notifyInternal:notifyExternal:
_notifyChangeForAppStoreWithSubscriptionEntitlementsDictionary:logKey:
handleAppStoreSubscriptionChange:logKey:
_removeCachedSubscriptionEntitlementsForSegment:logKey:
_notifyChangeToSegment:logKey:subscriptionEntitlementsDictionary:notifyInternal:notifyExternal:
_persistEntitlementsDataToMemory:segment:logKey:
_cachedSubscriptionEntitlementsResponseForSegment:logKey:completionHander:
_readEntitlementsDataFromMemoryForSegment:
_clearEntitlementsDataFromMemoryForSegment:logKey:
_lastAccountID
_newsEntitlementsData
_appStoreEntitlementsData
_activityEntitlementsData
_musicEntitlementsData
_tvEntitlementsData
_iCloudEntitlementsData
_podcastEntitlementsData
_backgroundQueue
_completionHandlersBySegment
_ignoreCaches
_notifyExternal
_notifyInternal
TB,N,V_ignoreCaches
TB,N,V_notifyExternal
TB,N,V_notifyInternal
TQ,N,V_segment
T@"XPCRequestToken",&,V_token
_resultFromCache
_cacheExpired
T@"NSArray",C,N,V_entitlements
TB,N,V_resultFromCache
TB,N,V_cacheExpired
T@"NSError",&,N,V_error
enqueueEvent:
aim_postEventWithPropertyValues:
purgeableSize
T@"ASDPurgeableAppRequestOptions",R,D,N
addProvisioningProfile:
setAltDSID:
setAppleID:
setExternalIDString:
setArtworkURLString:
setMessagesArtworkURLString:
setPackageDPInfo:
setPackageSINF:
setPackageURLString:
setManifestURLString:
provisioningProfileType
setHasType:
hasType
hasAltDSID
hasAppleID
hasBundleID
setDownloaderID:
setHasDownloaderID:
hasDownloaderID
hasExternalIDString
setHasExternalVersionID:
hasExternalVersionID
setHasItemID:
hasItemID
setPurchaserID:
setHasPurchaserID:
hasPurchaserID
hasRedownloadParams
hasArtworkURLString
setContainsMessagesExtension:
setHasContainsMessagesExtension:
hasContainsMessagesExtension
hasItemName
setHasLaunchProhibited:
hasLaunchProhibited
hasMessagesArtworkURLString
hasPackageDPInfo
hasPackageSINF
hasPackageURLString
hasStoreCohort
hasStoreFront
hasVendorName
clearProvisioningProfiles
provisioningProfilesCount
provisioningProfileAtIndex:
hasVariantID
setHasSkipIfInstalled:
hasSkipIfInstalled
setHasIsBeta:
hasIsBeta
setIsSystemApp:
setHasIsSystemApp:
hasIsSystemApp
setIsStoreApp:
setHasIsStoreApp:
hasIsStoreApp
hasBundleVersion
hasManifestURLString
setHasSuppressDialogs:
hasSuppressDialogs
hasBetaBuildGroupID
purchaserID
artworkURLString
containsMessagesExtension
messagesArtworkURLString
packageURLString
setProvisioningProfiles:
skipIfInstalled
isStoreApp
manifestURLString
_downloaderID
_purchaserID
_altDSID
_artworkURLString
_betaBuildGroupID
_externalIDString
_itemName
_manifestURLString
_messagesArtworkURLString
_packageDPInfo
_packageSINF
_packageURLString
_provisioningProfiles
_redownloadParams
_storeCohort
_storeFront
_vendorName
_containsMessagesExtension
_isStoreApp
_isSystemApp
_launchProhibited
_skipIfInstalled
_suppressDialogs
Ti,N,V_type
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_appleID
TQ,N,V_downloaderID
T@"NSString",&,N,V_externalIDString
TQ,N,V_externalVersionID
TQ,N,V_itemID
TQ,N,V_purchaserID
T@"NSString",&,N,V_redownloadParams
T@"NSString",&,N,V_artworkURLString
TB,N,V_containsMessagesExtension
T@"NSString",&,N,V_itemName
TB,N,V_launchProhibited
T@"NSString",&,N,V_messagesArtworkURLString
T@"NSData",&,N,V_packageDPInfo
T@"NSData",&,N,V_packageSINF
T@"NSString",&,N,V_packageURLString
T@"NSString",&,N,V_storeCohort
T@"NSString",&,N,V_storeFront
T@"NSString",&,N,V_vendorName
T@"NSMutableArray",&,N,V_provisioningProfiles
T@"NSString",&,N,V_variantID
TB,N,V_skipIfInstalled
TB,N,V_isBeta
TB,N,V_isSystemApp
TB,N,V_isStoreApp
T@"NSString",&,N,V_bundleVersion
T@"NSString",&,N,V_manifestURLString
TB,N,V_suppressDialogs
T@"NSString",&,N,V_betaBuildGroupID
processITMSServicesRequest:withReplyHandler:
requestStatusWithReply:
showVPPInviteForCurrentUser:orgName:withReplyHandler:
submitManifestRequest:withReplyHandler:
submitVPPRequest:withReplyHandler:
stringByPaddingToLength:withString:startingAtIndex:
receiptWithData:
iaps
writeReceiptData:toURL:logKey:error:
writeReceiptData:forBundleURL:logKey:error:
setSubmissionId:
hasSubmissionId
submissionId
_submissionId
T@"NSData",&,N,V_submissionId
pendingUploadWithData:andURL:
T@"NSData",C,N,V_data
T@"NSURL",C,N,V_URL
_fetchResultsWithPredicate:
_valueForDatabaseProperty:withError:
setAdamId:
setPurchaseDate:
setLastModifiedDate:
setHasUsedFreeOffer:
setHasUsedIntroPricingOffer:
setSubscriptionFamilyId:
setAutoRenewStatus:
getIAPsForAccountID:withError:
getIAPsForActiveAccountWithAdamIDs:forAccountID:withError:
getIAPsForActiveAccountWithAppAdamIDs:forAccountID:withError:
locateActionWithIdentifier:
style
lib_cancelled
TB,R,Glib_isCancelled
initWithInt:
columnIndexByName
_strongSelf
T^{sqlite3_stmt=},R,N,V_statement
T@"NSDictionary",R,C,N
TB,R,N,GisReadOnly
predicateMatchingBundleIdentifier:
initWithCondition:
initWithExplanation:
setMaximumTerminationResistance:
initWithPredicate:context:
acquireWithError:
lockWhenCondition:beforeDate:
tryLockWhenCondition:
unlockWithCondition:
assertion:didInvalidateWithError:
assertionWillInvalidate:
assertionTargetProcessDidExit:
_condition
_assertion
initWithDownloadID:
assetPromiseWithRequest:
_sendDownloadStatus
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_downloadedBytes:expectedBytes:
_finalizeTaskWithError:
setTimeRemaining:
_updateDownloadStatus:
setInstallPath:
_bomInstall
statusBlock
_bomInstallFromPath:withError:
moveItemAtPath:toPath:error:
setDownloadID:
_downloadInfo
_installPath
_statusTimer
_pendingDownloadStatus
_timeEstimator
_paused
_copier
_expectedInstallSize
_totalInstalledSize
_downloadID
_statusBlock
T@"InAppDownloadStatus",&,N,V_status
T@"NSNumber",C,N,V_downloadID
T@?,C,N,V_statusBlock
_lib_deleteLastValidComponentOfPath:
_lib_isFileSignedAtPath:withRequirement:basicCheck:
lib_isAppleSignedFileAtPath:basicCheck:
lib_isDeveloperSignedFileAtPath:basicCheck:
lib_applicationsDirectory
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
ams_setAltDSID:
lib_accountWithStoreMetadata:
_simulateCrashWithMessage:
_lastEvent
extensionsWithMatchingAttributes:error:
requestEnded
setRequestCompletionBlock:
setRequestCancellationBlock:
setRequestInterruptionBlock:
phase
terminalPhase
appType
didReceiveInstallationEvent:
initWithExtension:queue:
setErrorBlock:
beginRequestForHostContext:XPCInterface:
endRequest
_extensions
_onQueue_extensionRequestsForBundleID
_onQueue_extensionRequestForIdentifier
initWithApplicationProxy:evidOverride:
storefrontID
initWithStoreItemID:externalVersionID:
_downloaderDSID
_storefrontID
T@"NSNumber",R,V_downloaderDSID
T@"NSNumber",R,V_storeExternalVersionID
T@"NSNumber",R,V_storeItemID
T@"NSNumber",R,V_storefrontID
_beginSync
_authenticateWithCompletion:
defaultMediaTypeForCurrentProcess
_taskDidCompleteWithError:
_firstTaskError
_firstTaskDidFinish
_didBeginTasks
_decryptBuffer:length:allowPartial:error:
dataWithBytes:length:
initWithDPInfo:streamReader:error:
_scratchBuffer
stringForAppInstallType:
deviceID
baseLogKey
currentApps
_baseLogKey
_currentApps
T@"NSNumber",C,N,V_activeDSID
T@"NSString",C,N,V_baseLogKey
T@"NSDictionary",&,N,V_currentApps
isAutomaticAppDownloadsAllowed
isDiagnosticSubmissionAllowed
_featureNameForMediaType:
effectiveValueForSetting:
initWithInteger:
isDiagnosticsSubmissionAllowed
_CFURLRequest
_initWithCFURLRequest:
initWithRequest:properties:
requestWithURL:cachePolicy:timeoutInterval:
initWithURL:cachePolicy:timeoutInterval:
copyRequestProperties
asset_rangeOffset
removePropertyForKey:inRequest:
asset_setRangeOffset:
TQ,Sasset_setRangeOffset:
_handlePingMessage:fromDevice:
receiveMessage:
initWithListenerEndpoint:
stringWithString:
performAuthorizationWithCompletionHandler:
waitUntilFinishedWithTimeout:
initWithPingURLs:
replyWithProtobuf:messageType:
activeClientsWithReplyHandler:
addSubscriberWithEndpoint:
pingWithReplyHandler:
sendCommandWithDetailedReplyHandler:handler:
sendCommandWithReplyHandler:handler:
_listenerConnections
_listenerLock
addProgress:
progressType
clearProgress
progressCount
progressAtIndex:
T@"NSMutableArray",&,N,V_progress
additionalData
_additionalData
T@"ClipAdditionalData",R,V_additionalData
initWithNotificationClient:
presentEngagementRequest:resultHandler:
presentAuthenticateRequest:usingClient:resultHandler:
presentDialogRequest:usingClient:resultHandler:
presentEngagementRequest:usingClient:resultHandler:
clientMaySupportNotifications
_notificationClient
authenticationType
currentRequest
_tagEnvironment
weakToStrongObjectsMapTable
_handleLegacyNotifications:
_enumerateInstallsWithJobIDs:usingTransactionBlock:
_getJobsForClient:
orderedSetWithArray:
_getJobsWithIDs:forClient:
_notifyClientsOfJobsChanged:
_notifyClientsOfStatesChanged:
_dirtyProgress:
_notifyClientsOfJobCompleted:finalPhase:isPersistent:
_notifyClientsOfProgressChanged:
_progressTimerFired
initWithPersistentID:
_externalPhaseForPhase:
setPhase:
setFailureError:
_getJobsWithExternalIDs:forClient:
cancelJobsWithIDs:completionBlock:
finishJobsWithIDs:replyBlock:
getJobsUsingReplyBlock:
getJobsWithIDs:usingReplyBlock:
pauseJobsWithIDs:completionBlock:
registerJobManagerWithOptions:replyBlock:
resumeJobsWithIDs:completionBlock:
_enumerateClientsUsingBlock:
_copyJobIDsForClient:
_progressDirty
canFinalizeImpression:error:
addInstallAttributionParams:withError:
pruneLowFidelityImpressionsFromSourceApp:
removeImpressionForSourceAppAdamID:forAppAdamID:
_existingFidelityForImpressionForApp:fromAdNetwork:
checkPingbackForCrucialValues:
numberWithLong:
installAttributionPingbackDelay
startEndTimeWindow
predicateMatchingSourceAppAdamID:fidelityType:
lowFidelityImpressionsCap
_blowAwayAllLoFiParamsFrom:
removeEarliestInstallAttributionParamsFromSourceApp:
addInstallAttributionImpression:withError:
finalizeInstallAttributionImpression:withError:
removeInstallAttributionImpressionsBeforeDate:
purgeImpressionsWithProcessName:
removeInstallAttributionParamsBeforeDate:isLowFidelity:withError:
addPingbackFetchInfo:withError:
removePingbackFetchInfoForAppAdamId:
incrementRetryCountForPingbackFetchInfoForAppAdamId:
addInstallAttributionPingback:withError:
addInstallAttributionPingbackForDeveloper:withError:
removeInstallAttributionPingbackWithTransactionId:
setInstallAttributionPingbackRegisteredForApp:withError:
removeUnregisteredInstallAttributionPingbacksBeforeDate:withError:
incrementRetryCountForPingbackWithTransactionId:
updatePingbackWithConversionValue:timestamp:forApp:withError:
setDeveloperPingbackURLString:forAppId:withError:
_recordSample
takeSample
valueForKeyPath:
average
initWithSamplingRate:
stop
currentStatsString
samplingInterval
_timer
_samples
_isRunning
_samplingInterval
Td,R,V_samplingInterval
initWithHoldTime:
addTransactionID:
countForObject:
_holdTime
_transactionCount
_transactionStore
T@"NSCountedSet",R,C
noteUpdatesStateChangedWithReason:logKey:completionBlock:
setAutomaticUpdatesEnabled:
handleAppsUninstalled:
autoUpdateEnabled:
confirmAgentRequestedUpdateAll:
getManagedUpdatesWithRequestToken:replyHandler:
getUpdatesWithRequestToken:replyHandler:
refreshUpdateCountWithRequestToken:replyHandler:
reloadFromServerWithRequestToken:replyHandler:
reloadManagedUpdatesWithRequestToken:replyHandler:
setAutoUpdateEnabled:withReplyHandler:
updateAllWithOrder:requestToken:replyHandler:
isTVProviderApp:
getUpdatesWithContext:
hidePendingUpdatesBadge
postProcessBackgroundUpdateMetrics
performPostRestoreUpdatesCheck
reloadApplicationBadgeWithReason:
reloadFromServerInBackgroundWithToken:completionBlock:
reloadUpdatesWithContext:
showPendingUpdatesBadge
verifyAllPendingUpdates
verifyPendingUpdates:
verifyUpdatesFollowingExternalAppInstall:
verifyUpdatesForRemovedBundleIDs:
_validateUpdatesState
agentRequestedUpdateAll
setAgentRequestedUpdateAll:
provisionedApps
setProvisionedApps:
_automaticDownloadsAreDisabled
_currentAccountDSID
_callbackQueue
_badgeQueue
_hasLoadedTVProviderApps
_tvProviderApps
_DSIDLessAppsLock
_agentRequestedUpdateAll
_provisionedApps
T@"NSArray",&,N,V_provisionedApps
TB,V_agentRequestedUpdateAll
encodeInteger:forKey:
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
_code
Tq,R,V_code
_familyMembersFromDictionaryRepresentation:
familyMembers
isCached
ams_activeiCloudAccount
localizedCaseInsensitiveCompare:
initWithDictionaryRepresentation:cached:
_cached
_familyMembers
cached
TB,R,N,GisCached,V_cached
T@"NSArray",R,N,V_familyMembers
taskMetrics
transactionMetrics
isCellular
networkProtocolName
lib_responseInterval
duration
countOfResponseBodyBytesReceived
setTaskMetrics:
T@"NSURL",&
T@"NSURLSessionTaskMetrics",&
hasFeedback
hasApplication
hasDevice
hasAppleWatch
setHasPosixTimestampMillis:
hasPosixTimestampMillis
setDesiredTTLMillis:
setHasDesiredTTLMillis:
hasDesiredTTLMillis
device
appleWatch
posixTimestampMillis
desiredTTLMillis
_desiredTTLMillis
_posixTimestampMillis
_appleWatch
_feedback
T@"TFFeedback",&,N,V_feedback
T@"TFApplication",&,N,V_application
T@"TFDevice",&,N,V_device
T@"TFAppleWatch",&,N,V_appleWatch
TQ,N,V_posixTimestampMillis
TQ,N,V_desiredTTLMillis
property
_property
T@"NSString",R,N,V_property
initWithLongLong:
comparisonType
_comparisonTypeString
_comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
isNegative
values
query
containsPredicateWithProperty:query:queryProperty:
queryProperty
_negative
_query
_queryProperty
negative
TB,R,N,GisNegative,V_negative
T@"SQLiteQuery",R,N,V_query
T@"NSString",R,N,V_queryProperty
T@"NSArray",R,N,V_values
matchesNull
_matchesNull
TB,R,N,V_matchesNull
predicates
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
T@"NSArray",R,N,V_predicates
_requestReceiptDataForApplication:error:
_finishWithReceiptData:error:
_URLRequestWithBag:clientInfo:error:
_useVPPBagURL
_accountWithClientInfo:error:
_requestBodyForApplication:usingOctane:
fetchFamilyAccountIDsSuppressDialogs:
ams_storefront
ams_secureTokenForAccount:
proxyDeviceIdentifierForVendor
proxyStoreItemID
proxyStoreExternalVersionID
proxyBundeID
proxyBundleVersion
_accountMediaType
_proxyBundeID
_proxyBundleVersion
_proxyDeviceIdentifierForVendor
_proxyStoreExternalVersionID
_proxyStoreItemID
T@"NSString",C,N,V_accountMediaType
T@"<FetchReceiptTaskDelegate>",W,N,V_delegate
T@"ApplicationProxy",R,N,V_app
T@"NSURL",&,N,V_customReceiptURL
T@"NSString",C,N,V_proxyBundeID
T@"NSString",C,N,V_proxyBundleVersion
T@"NSString",C,N,V_proxyDeviceIdentifierForVendor
TQ,N,V_proxyStoreExternalVersionID
TQ,N,V_proxyStoreItemID
applicationFamilyID
setFailureReason:
setFamilyID:
setStoreFrontID:
setVendorID:
storeFrontID
vendorID
_storeFrontID
_vendorID
_familyID
_failureReason
T@"RestoreAppInstall",R,N
TQ,N,V_storeFrontID
T@"NSString",C,N,V_vendorID
TQ,N,V_accountID
TQ,N,V_familyID
TQ,N,V_failureReason
scheduler
valueBlock
errorBlock
_valueBlock
_errorBlock
T@?,R,V_valueBlock
T@?,R,V_errorBlock
T@"<TaskScheduler>",R,V_scheduler
initWithClientInfo:
_requestForDownloadVariant:
setCompletionDate:
countOfBytesReceived
countOfBytesExpectedToReceive
cancelTasksAndInvalidateSession
taskForSessionID:withDownloadVariant:streamWriter:logContext:metricEvent:
_tasks
_runWithApplications:
initAppPlaceholderWithBundleName:bundleID:installType:client:
_newStoreMetadataWithApplication:
setMetadata:error:
_newArtworkPromiseWithArtworkPath:
setIconPromise:error:
_copyItemIDsFromApplicationMetadata:
_lookupItemIDs:logKey:error:
_loadArtworkForApplication:templateURL:path:error:
completeDataPromise
setConfigurationCompleteWithError:
setPlaceholderPromise:
completeUserDataPromise
waitUntilFinished
_newArtworkURLUsingTemplate:
_artworkDataForURL:error:
itemDictionary
_copyArtworkTemplateForDictionary:
setShouldCopy:
setTransferPath:
_newURLByPopulatingTemplate:withValues:
setSoftwareVersionExternalIdentifier:
accountName
setDSPersonID:
setDeviceBasedVPP:
setSourceApp:
initWithName:client:data:
_newArtworkPromiseWithArtworkTemplate:
completedPlaceholders
setCompletedPlaceholders:
_mutableCompletedPlaceholderBundleIDs
_completedPlaceholders
T@"ASDCreatePlaceholdersRequestOptions",R,D,N
T@"NSArray",C,N,V_completedPlaceholders
initWithConnection:testFlightConsumer:
_pushHandlerWithBagContract:
_handleAccountDidChangeNotification:
_initializeConnectionsAndSkipEnvironmentCheck:
_flushPendingMessagesWithActionType:
_processReceivedTestFlightMessage:withConnection:
_processReceivedAppStoreMessage:withConnection:
setEnabledActionTypes:
setUserNotificationExtensionId:
initWithConfiguration:bag:
isValidEnvironment:
shouldHandleNotification:
handleNotification:
_queuePendingAppStoreMessage:withActionType:
_unitTest_waitForSetup
_consumers
_pendingMessages
_pushHandler
_pushDiagnostic
_stateHandle
deletedAssetPackURLs
deletedStorageIDs
_deletedAssetPackURLs
_deletedStorageIDs
T@"NSSet",R,C
dataForSinfDataKey:
_selector
_target
T:,V_selector
T@,W,V_target
_messageForProtectionSpace:
_titleForProtectionSpace:
proposedCredential
protocol
receivesCredentialSecurely
setLocalizedMessage:
setLocalizedTitle:
setUser:
_challenge
_localizedMessage
_localizedTitle
_user
T@"NSString",&,N,V_localizedMessage
T@"NSString",&,N,V_localizedTitle
T@"NSString",&,N,V_user
stringFromByteCount:
_bytesFormatter
legacyDatabasePath
_allIDsWithDownloadedAssetPacksUsingConnection:
_importDownloadedAssetPacksWithManifestID:andBundleID:usingConnection:andDatabaseStore:
_importManifestForBundleID:usingConnection:andDatabaseStore:
_importBundleTagManifest:withApplication:andDatabaseStore:
numberForColumnName:
dictionaryWithValuesForColumnNames:
_swapKeysInDictionary:usingMapping:
_importMemoryEntity:usingDatastore:
setKBSyncType:
setRequestBodyData:
setShouldAppendGUIDParameter:
setDataEncoding:
setRequestHeaders:
setRequestParameters:
_compressRequestBody
_shouldAppendGUIDParameter
_URLKnownToBeTrusted
_KBSyncType
_requestCachePolicy
_requestBodyData
_requestMethod
_dataEncoding
_requestHeaders
_requestParameters
TB,V_compressRequestBody
T@"AMSBagValue",&,V_bagURL
Tq,V_dataEncoding
Tq,V_KBSyncType
T@"NSString",&,V_logUUID
TQ,V_requestCachePolicy
T@"NSData",C,V_requestBodyData
T@"NSDictionary",C,V_requestHeaders
Tq,V_requestMethod
T@"NSDictionary",C,V_requestParameters
TB,V_shouldAppendGUIDParameter
T@"NSURL",C,V_URL
TB,V_URLKnownToBeTrusted
connectStartDate
connectEndDate
_dateIntervalFrom:to:
domainLookupStartDate
domainLookupEndDate
requestEndDate
responseStartDate
responseEndDate
secureConnectionStartDate
secureConnectionEndDate
initWithStartDate:duration:
lib_connectInterval
lib_domainLookupInterval
lib_requestInterval
lib_secureConnectionInterval
T@"NSDateInterval",R,C
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:onConnection:
_deleteRowFromTable:usingColumn:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
_persistentID
Tq,R,N,V_persistentID
_decodeData:intoBufferWithError:
initWithQueue:serviceHost:
_shouldEnableConsumer
notifyOfReceivedPushToken:completionHandler:
_processNextMessages
isEqualToData:
publishPushTokenIfNeededWithCompletionHandler:
_updateConsumerEnablementIfNeeded
initWithTimestamp:userInfo:
notifyOfReceivedPushMessages:completionHandler:
testFlightConsumer:didChangeStatus:
_testFlightServiceHost
_processingMessages
_unsentPushToken
_isEnabled
T@"<PushServiceTestFlightConsumerDelegate>",W,V_delegate
subpredicates
compoundPredicateType
sortDescriptorWithKey:ascending:
filterUsingPredicate:
_classifier
_stack
initWithProtobufData:type:isResponse:
setMessageID:
setReply:
_reply
_messageType
_messagePayload
_messageID
T@"XDCDevice",&,V_device
T@"NSString",&,V_messageID
reply
TB,GisReply,V_reply
T@"NSData",R,V_messagePayload
TS,R,V_messageType
_topic
constantValue
localizedRecoveryOptions
dictionaryWithDictionary:
lib_sanitizedDescription
lib_addRecoveryOptions:
lib_addUserInfoValue:forKey:
_deletedItems
_currentItemsArray
_currentItem
_errorParsingItem
TB,R,GisSuccess,V_success
T@"NSNumber",R,V_serverRevision
setPriority:
setOriginalPurchaserDSID:
ams_setDSID:
setRemoteInstall:
previousVariantID
lib_setAppExtVrsId:
_appAlreadyInstalledForPurchaseInfo:hasVersionOfBundleIDInstalled:
initWithPurchaseInfo:requestThrottle:
_appAlreadyRequestedForPurchaseInfo:
lib_appExtVrsId
shouldRequestItemID:externalVersionID:error:
recordError:forItemID:externalVersionID:
recordSuccessForItemID:
_companionBundleIDForItemID:requestToken:
dialogForDownload:roaming:
cellularIdentity
setCellularIdentity:
_cellularIdentity
T@"ASDCellularIdentity",&,V_cellularIdentity
initWithSystemApplicationMetadata:
initWithInstalls:externalIDs:
_filterApplicableInstallations
_itemIDForBundleID:
_disableAutoInstall
setDiscoveredUpdate:
setMachineBased:
expectedSoftwarePlatform
_readRecords
_dirtyRecords
_deleteRecords
enumerateObjectsAtIndexes:options:usingBlock:
dataWithContentsOfURL:options:error:
writeToURL:options:error:
_writeRecords
_deleteRecordsAtURL:error:
_readRecordsFromURL:error:
_writeRecords:toURL:error:
addRecord:
deleteRecordForItemID:
deleteRecords
fetchRecordForItemID:
filterRecordsUsingBlock:
_records
shared
buyProductWithID:bundleID:
cancelTransactionWithIdentifier:forBundleID:
changeAutoRenewStatus:transactionID:bundleID:
clearOverridesForBundleID:
completeAskToBuyRequestWithResponse:transactionID:forBundleID:
deleteAllTransactionsForBundleID:
deleteTransactionWithIdentifier:forBundleID:
expireOrRenewSubscriptionWithIdentifier:expire:forBundleID:
getStorefrontForBundleID:
getTransactionDataForBundleID:
refundTransactionWithIdentifier:forBundleID:
resolveIssueForTransactionWithIdentifier:forBundleID:
setStorefront:forBundleID:
getIntegerValueForIdentifier:forBundleID:
setIntegerValue:forIdentifier:forBundleID:
getStringValueForIdentifier:forBundleID:
setStringValue:forIdentifier:forBundleID:
_refreshIAPsForActiveAccountIfAllowedWithToken:completionHandler:
_forceRefreshIAPsForActiveAccountWithToken:completionHandler:
newContextWithRevision:forAccount:token:
_sendUpdateRequestWithAccount:token:completionHandler:
_getItemsRequestContextForAccount:withToken:error:
_updateDatabaseWithRequestResponse:error:
_getUpdateRequestContextForAccount:withToken:error:
_sendItemsRequestWithAccount:token:completionHandler:
getIAPsForAccountID:withToken:completionHandler:
getIAPsForActiveAccountWithAppAdamIDs:token:completionHandler:
refreshIAPsForActiveAccountIfNeededWithToken:errorHandler:
removeAllIAPsWithToken:errorHandler:
_currentlyUpdating
initWithDouble:
processUpdate:existingUpdate:expectedCodeSignatureUpdateEvidForItemID:forReason:
purchaseID
_setUpdateState:forBundleID:itemID:withPurchaseID:isUserInitiated:logKey:
_logState:forBundleID:logKey:
deleteUpdatesInstalledBefore:
mergeAvailableUpdates:withReason:expectedCodeSignatureUpdateEvidForItemID:availableCount:notifyChanges:bundleIDs:
recordUpdateDownloadStartTime:andEndTime:forBundleID:
setUpdateState:forBundleID:evid:
hasModel
hasOsVersion
model
_model
_osVersion
T@"NSString",&,N,V_model
T@"NSString",&,N,V_osVersion
ams_securityLevel
setPurchaseEvent:
setCompanionBundleID:
installedExternalVersionID
originalPurchaserDSID
preflightURL
setPreflightURL:
setPurchaseID:
referrerName
setReferrerName:
referrerURL
setReferrerURL:
refreshInstallID
temporaryBundleID
clientType
expectsIOSAppOnMac
setExpectsIOSAppOnMac:
generatedVendorID
ignoreRequirePasswordRestriction
setPurchaseOnly:
requireUniversal
updateType
useJSONContentType
watchType
setWatchType:
requireVendorID
setRequireVendorID:
_arcade
_requireVendorID
_signpostID
T@"ACAccount",&
arcade
TB,GisArcade,V_arcade
T@"NSString",&,V_batchLogKey
T@"AMSProcessInfo",&
T@"XDCDevice",&
TB,GisDiscretionary
T@"NSUUID",&
T@"StoreItemResponse",&
T@"NSString"
T@"AppInstallLogKey",&
TB,GisMachineBased
T@"ASDPurchase",&
T@"AIMPurchaseEvent",&
remoteInstall
TB,GisRemoteInstall
T@"XPCRequestToken",&
TB,V_requireVendorID
TQ,R,V_signpostID
TB,R,GisUserInitiated
_handleRepairBundleIDNotification:
_initializeAcountState
_initializeNetworkDependentBits:
_ensureDeviceIDIsValid
_refreshAccountEventsIfNeeded
_flushMetricsWithReason:context:completion:
shouldPostPayoutMetrics
_getAppEventsWithAppUsageType:completionBlock:
shouldPostAnonymousMetrics
_handleAppSubscriptionChange:logKey:
_recordLaunchEventsForContext:
_sbsyncIfHasAppsWithReason:skipAppCheck:outError:
_postMetrics:
_resetWithReason:resetActivity:context:
ocelotPayoutResetDate
setShouldResetPayoutDate:
_isSubscribedToArcadeIgnoringMemoryCache:logKey:ignoresFsEntitlementCache:timeout:outError:
_topLaunchesForAccount:completionBlock:
_terminateArcadeApps
setClientEventID:
ocelotPayoutDeviceID
setAnonymous:
ocelotDeviceID
setOcelotDeviceID:
setHardwareFamily:
setHardwareModel:
setOS:
subscriptionState
_subscriptionState
setOcelotSubscriptionState:
setQualifiedDuration:
removePropertiesForKeys:
subscribedAccount
setSubscribedAccount:
payoutKatanaIDs
_katanaIDsForContext:
setPayoutKatanaIDs:
_allowedArcadePayoutKeysForContext:
setCollectionTime:
anonymousKatanaIDs
setAnonymousKatanaIDs:
subscriptionInfo
setSubscriptionInfo:
_allowedArcadeAnonymousKeysForContext:
ocelotAppAnalyticsClientID
setOcelotID:
_activeAccountIDForAppEvent:context:withAccountEvents:
setDomain:
keyWithName:crossDeviceSync:
generateEventFieldsForKeys:
_defaultAllowedPayoutKeys
_defaultAllowedAnonymousKeys
_payoutEvents:
_createLaunchMetricsEventForAppEvent:context:
setHasBeenPosted:
ocelotID
ams_isDemoAccount
setInstallationType:
_deRezzedDateForLaunchDate:
setEventTimeOverride:
setCumulativeUserCount:
setDuration:
setWeekStartDate:
components:fromDate:
dateFromComponents:
ocelotDeviceGUID
ocelotDeviceIDCreationDate
setOcelotDeviceGUID:
setOcelotDeviceIDCreationDate:
_allOcelotAppEvents:
_initBagKeys
_getAppStoreSubscriptionEntitlementWithTimeout:outError:
_updateCachedAppSubscriptionEntitlement:logKey:
setFairplayStatus:
setExitReason:
setSubscriptionState:
_resetDB:
setMinimumRunningTime:
qualifiedEventsForWeekeStartingWithDate:context:
setOcelotPayoutDeviceID:
shouldResetPayoutDate
ocelotShouldRetrySlotOptOut
setOcelotShouldRetrySlotOptOut:
ocelotSubscriptionState
ocelotApps
_topLaunchesForAccountCachePath
assertionState
initWithBundleID:reason:acquisitionHandler:
_topAppsDictionary
initWithAppUsageType:
setLaunchesStartDate:
_subscriptionStateForEntitlement:
_updateSubscriptionInfoForAppEntitlement:logKey:
inAppAdamID
featureAccessTypeID
freeTrialPeriodID
T@"OcelotManager",R,N
isSubscribedToOcelot
recordPayoutMetricsWithCompletionBlock:
resetPayoutForDuetWithCompletionBlock:
sbsyncWithReason:completionBlock:
showingUpsellDialog
showOcelotUpsellForItemID:relaunchOptions:
terminateArcadeApps
refreshAppMetadata
_arcadePayoutEnabled
_logOcelotAppLaunchability
_targetBundleIDs
_appStoreCacheUpdatedNotificationToken
_cachedSubscribedAccountID
_cachedSubscribedState
_cachedSubscribedStateString
_distNotificationQueue
_hardwareFamily
_hardwareModel
_isRetailDemoMode
_sbsyncQueue
_topAppsQueue
_upsellQueue
authIfNeeded
askToBuyEnabledForActiveAccountWithLogKey:lookupFamilyInfoIfNeeded:authIfNeeded:hadFamilyInfo:error:
initWithAccountID:
setAskToBuyEnabled:
T@"ASDAccountLookupRequestOptions",R,D,N
setArtworkURL:
createPlaceholder
setCreatePlaceholder:
reportRemotely
setUpdate:
watchApplicationMode
setWatchApplicationMode:
_createPlaceholder
_reportRemotely
_artworkURL
_watchApplicationMode
T@"NSURL",&,V_artworkURL
T@"NSString",&,V_bundleID
TB,V_createPlaceholder
T@"NSString",&,V_name
TB,V_reportRemotely
Tq,V_status
T@"NSNumber",&,V_storeItemID
TB,GisUpdate,V_update
Tq,V_watchApplicationMode
_getRequestPropertiesWithHandler:
dataTaskWithRequestProperties:forRequest:withDelegate:andCompletionHandler:
_dataProvider
Tq,V_accountID
createsPlaceholders
initWithApplicationMetadata:
setCompleteDataPromise:
T@"ASDRestoreApplicationsRequestOptions",R,D,N
_cursor
completionDate
installKey
setInstallKey:
queueDate
failureError
T@"NSDate",&
T@"NSError",&
_initWithNotificationCenter:
_beginProgress:withReason:
catalogRefreshedBundleIDs:
_postProgress:
_flushProgress
postProgress:
existingAppForBundleID:
finishProgressForBundleID:withReason:
preFinishProgressForBundleID:withReason:
remoteSystemPlaceholders
removeRemotePlaceholderForBundleID:
_notificationCenter
_placeholders
_progressStore
_dirtyProgress
_checkDatabaseForDuplicates
_resetBackgroundInstallAsInteractive:
_forceInteractive:
_enableProgressUI:
initWithPurchaseInfo:
setAddedApps:
setRemovedApps:
setIsLast:
_isLast
_addedApps
_removedApps
T@"NSArray",&,V_addedApps
T@"NSArray",&,V_removedApps
TB,V_isLast
_continueParsing
lockWhenCondition:
condition
setContentRatingFlags:
setDatePurchased:
setDeveloperName:
setFamilyShared:
setFirstParty:
setHidden:
setHiddenFromSpringboard:
setIconURLString:
setIs32BitOnly:
setLongTitle:
setOvalIconURLString:
setPreflightPackageURL:
setProductURL:
setSupportsIPad:
setSupportsIPhone:
setSupportsMac:
setMediaKind:
setPurchaseToken:
_incrementBatchCount
setLockerItemID:
setGenreID:
setGenreName:
setWatchAppDeliveredIniOSApp:
setWatchAppRunsIndependently:
setWatchOnly:
setSupportsLayeredImage:
setHasP3:
setCircularIconURLString:
setIsIOSBinaryMacOSCompatible:
setIsIOSBinaryMacOSAvailable:
setRequiredCapabilities:
_currentBatchAdded
_currentBatchRemoved
_currentRequiredCapabilities
_currentContainerCode
_currentBatchCount
_parsingLock
_parsingQueue
_doneParsing
cachedSession:maximumWatchCellularTransferSize:
T@"NSURLSession",&,N,V_session
T@"NSNumber",&,N,V_maximumWatchCellularTransferSize
flushMetricsWithLogKey:reason:completion:
insertEventIntoDatabase:
launchReason
_simpleDate:
_simpleTime:
clipLaunchReason
clipFullURL
clipReferrerURL
clipReferrerBundleID
_formatTimeInternal:
setClipBundleID:
setClipFullURL:
setClipLaunchReason:
setClipReferrerURL:
setClipReferrerBundleID:
clipWebAppBundleID
setClipWebAppBundleID:
setEndDate:
eventTime
setEventTime:
setIsExtensionUsage:
lastEventEndDate
setLastEventEndDate:
setLaunchReason:
setSourceStream:
setStartDate:
_isExtensionUsage
_clipFullURL
_clipLaunchReason
_clipReferrerURL
_clipReferrerBundleID
_clipWebAppBundleID
_containingBundleID
_endDate
_eventTime
_lastEventEndDate
_launchReason
_sourceStream
_startDate
_usageTime
_usageCount
T@"NSString",C,N,V_bundleVersion
T@"NSString",C,N,V_clipBundleID
T@"NSURL",C,N,V_clipFullURL
T@"NSString",C,N,V_clipLaunchReason
T@"NSURL",C,N,V_clipReferrerURL
T@"NSString",C,N,V_clipReferrerBundleID
T@"NSString",C,N,V_clipWebAppBundleID
T@"NSString",C,N,V_containingBundleID
T@"NSDate",C,N,V_endDate
Tq,N,V_eventTime
T@"NSNumber",C,N,V_evid
TB,N,V_isExtensionUsage
T@"NSString",C,N,V_itemName
T@"NSDate",C,N,V_lastEventEndDate
T@"NSString",C,N,V_launchReason
TQ,N,V_sourceStream
T@"NSDate",C,N,V_startDate
Tq,N,V_usageTime
Tq,N,V_usageCount
feedbackMetadata
hasValue
_hasValue
TB,R,V_hasValue
lib_copyPropertyGetterNames
setArchiveSize:
setDiskSpaceNeeded:
setPromiseType:
setReferenceID:
setStreamingZipOptions:
transferPath
_diskSpaceNeeded
_promiseType
_referenceID
_transferPath
TQ,V_archiveSize
TQ,V_diskSpaceNeeded
T@"NSString",C,V_name
Tq,V_promiseType
T@"NSNumber",&,V_referenceID
T@"NSDictionary",C,V_streamingZipOptions
T@"NSString",C,V_transferPath
T@"AppUsageDatabaseStore",R,N
Ti,N,V_status
allUsageForStreams:fromDate:endDate:bundleIDs:error:
predicateForEventsWithStartInDateRangeFrom:to:
andPredicateWithSubpredicates:
appInFocusStream
appUsageStream
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
userKnowledgeStore
executeQuery:error:
metadata
extensionContainingBundleIdentifier
stream
_streamTypeForStreamName:
isEventStichable:currentLaunch:
initWithDictionary:copyItems:
indexOfObjectPassingTest:
lib_firstResultApplyingTransform:
adamIds
initWithIAPs:
addHardwareOfferIDs:replyHandler:
allHardwareOfferMetricsWithReplyHandler:
allHardwareOffersIDsWithReplyHandler:
hardwareOfferCountWithReplyHandler:
removeAllHardwareOfferIDsWithReplyHandler:
removeHardwareOfferIDs:replyHandler:
removeHardwareOfferMetricsforOfferIDs:replyHandler:
setHasWidthPixels:
hasWidthPixels
setHasHeightPixels:
hasHeightPixels
widthPixels
heightPixels
_heightPixels
_widthPixels
TI,N,V_widthPixels
TI,N,V_heightPixels
T@"ASDJobSchedulerRequestOptions",R,D,N
configuration
_obliterateAllBackgroundSessionsWithCompletionHandler:
_prepareDataConsumerUsingTaskInfo:
initWithRequestID:promiseBlock:
_reportMetricsForTaskInfo:withCompletionError:
_finishPromiseUsingTaskInfo:
_retryTaskUsingTaskInfo:
asset_configurationIdentifierUsingProperties:
asset_ephemeralSessionConfigurationUsingProperties:
asset_backgroundSessionConfigurationUsingProperties:
initWithTask:metrics:
shouldCollectMetricsForContext:
initWithContext:
_prepareRequestUsingTaskInfo:
_setRequiresShortConnectionTimeout:
_startTaskUsingTaskInfo:withRequest:
HTTPUserAgent
_findSessionUsingTaskInfo:withProperties:
set_priority:
set_bytesPerSecondLimit:
set_loadingPriority:
obliterateBackgroundSessionsAndHandleEventStream
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
T@"NSURLSessionConfiguration",R
_meanTimeBetweenEndKey:startKey:metrics:
averagePollTime
lastAutoPollDate
_insertEventIntoDatabase:
shouldCollectAppInstallationMetrics
processItemMetrics:
resolveWithAMSPromise:
initWithAMSPromise:
_cachedFamilyInfoLookupResultForAccount:ignoreCacheTimeout:logKey:
_performFamilyInfoRequestForAccount:error:
_processURLResult:
_cacheFamilyInfoLookupResult:forAccount:
performTaskWithBlock:
_pathForCachedFamilyInfoLookupResult
_currentCachedFamilyInfoWithLogKey:
cachedFamilyInfoWithLogKey:
performFamilyInfoLookup
T@"<AMSBagProtocol>",&,N,V_bag
allRegisteredODRAppsWithReply:
manifestDictionaryForBundleID:withReply:
assetsForBundleID:withReply:
expireAssetURLSForBundleIDs:withReply:
fakeWorkWithCount:reply:
statusWithReply:
performMaintenanceWithReply:
cancelMaintenanceWithReply:
setLoggingEnabled:reply:
setSampler:enabled:samplingInterval:reply:
loadSourceURL:intoDestinationURL:isUrgent:isStreaming:withRequestCompletion:
prefetchSourceURL:intoDestinationURL:withPrefetchCompletion:
prefetchAndRequestSourceURL:intoDestinationURL:withCompletion:
prefetchThenRequestSourceURL:intoDestinationURL:withCompletion:
cancelRequestWithUUID:withCompletion:
pauseRequestWithUUID:withCompletion:
resumeRequestWithUUID:withCompletion:
fetchManifestForAdamID:externalVersionID:variant:withFetchCompletion:
registerManifest:forBundleID:withRequestCompletion:
purgeableAssetsWithReply:
nonPurgeableAssetsWithReply:
purgeBytes:odrOnly:urgency:withReply:
testPurgeBytes:urgency:withReply:
purgeAllAssetsForApplication:withRequestCompletion:
purgeAllAssetsForApplications:withRequestCompletion:
purgeAssetWithIdentifier:withRequestCompletion:
getSpaceReductionWithReply:
setSpaceReduction:withReply:
_bundleKeyToTagsMapping:
_prettyHashesString:
_platformAttributes
_platformAttributesDict
content
initWithBulletinDictionary:
actionIdentifier
launchURL
actionButtonURL
openURL:withOptions:error:
message
setBody:
copyBulletinDictionary
setCategoryIdentifier:
setShouldBackgroundDefaultAction:
recordID
requestWithIdentifier:content:trigger:
bulletinFromRequest:
bulletinWithTitle:message:
handleBulletinActionResponse:
newBulletinRequest
actionButtonTitle
setActionButtonTitle:
setActionButtonURL:
creationDate
setCreationDate:
setRecordID:
_actionButtonTitle
_actionButtonURL
_launchURL
_creationDate
_recordID
T@"NSString",C,N,V_actionButtonTitle
T@"NSURL",C,N,V_actionButtonURL
T@"NSURL",C,N,V_launchURL
T@"NSDate",C,N,V_creationDate
T@"NSString",C,N,V_message
T@"NSString",C,N,V_recordID
T@"NSString",C,N,V_title
ASD_intentForClass:
ASD_intent
ASD_classForIntent:
_dispatchCallbackAsync:
_dispatchAsync:
processJobResult:forReason:
storeItemsFromResponseDictionary:
_setupLogging
_setAMSProperties
_startMidChangedNotifier
_setupSignalHandler
_startODR
_setupCacheDeleteCoordinator
_startODRXPCEssentialListeners
_startLaunchServicesObserver
_startAppInstallQueue
_startXPCListeners
_startXPCModernListeners
_updateDAAPDatabasesIfNeeded
setLogFileBaseName:
setLogDirectoryPath:
ensureAllLibraryPathsExist:
_setupODRXPCMaintenanceTask
_setupODRDataMigrationTask
restartInProgressDownloads
_startODRXPCListeners
validateActiveInstallations
_createListenerForMachServiceName:withDelegate:
_performODRSoftwareUpdateHousekeeping:
_handleMigrationDidFinishNotification:
setHARLoggingItemLimit:
setFlushDelayEnabled:
setMaxBufferSizeOverride:
setPurchaseAccountFallback:
isDeviceUnlocked
isPasscodeDisabled
beginShowingDialog
endShowingDialog
performKeepAliveTransaction:usingBlock:
appMetricsMonitor
_defaultsToken
_jetsamSource
_jobManagerDelegate
_jobManagerListener
_launchServicesObserver
_octaneDelegate
_octaneListener
_odrAppReviewDelegate
_odrAppReviewListener
_odrCtlDelegate
_odrCtlListener
_odrDevtoolsDelegate
_odrDevtoolsListener
_odrFoundationDelegate
_odrFoundationListener
_odrLaunchServicesDelegate
_odrLaunchServicesListener
_personalizationStoreService
_requestBroker
_requestListener
_signalSource
_softwareUpdateListener
_softwareUpdateDelegate
_storeQueueListener
_storeQueueDelegate
_serviceBroker
_appMetricsMonitor
T@"AppMetricsMonitor",R,N,V_appMetricsMonitor
_parseTokens:
affiliateToken
campaign
campaignToken
providerToken
_affiliateToken
_campaign
_campaignToken
_providerToken
T@"NSString",R,N,V_affiliateToken
T@"NSString",R,N,V_campaign
T@"NSString",R,N,V_campaignToken
T@"NSString",R,N,V_providerToken
_stringRepresentationForDigest:length:
_digestType
_initWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
notifyOfReachedTerminalPhaseWithBetaBundle:terminalPhase:error:completionHandler:
taskForAppInstallPhase:bundle:error:
bundle
installError
_bundle
_installPhase
_installError
T@"ASDBundle",R,N,V_bundle
Tq,R,N,V_installPhase
T@"NSError",R,N,V_installError
_forcedUpdates
isEqualToArray:
taskWithPendingUpdates:andLogKey:
_invalidBuildToolVersionsToCheck
_enforcedDRMVersionToCheck
_appsByAccountMappingForCandidates:
updates
_pendingUpdates
_updates
T@"NSArray",R,N,V_updates
initSandboxed:
initForOctane
_bagChanged:
_fetchStorefrontNotifyClient:
valueWithCompletion:
_accessQueue
_octane
_sandbox
_storefront
_storefrontCountry
_updateSemaphore
isRemaining
_dialogForUpdateWithName:andSize:remaining:
_dialogForDownloadWithName:andSize:remaining:
formatSize:
_buttonActionsWithNowTitle:
buttonActions
initWithDictionary:applyingAssetStrategy:installedItem:
_parseAssetsFromDictionary:applyingAssetStrategy:withInstalledItem:
_parseMetadataFromDictionary:
itemWithDictionary:
copyWritableMetadataForAccount:
alternateIconName
appReceiptData
assetDeltaPackage
betaExternalVersionID
bundleDisplayName
gameCenterEnabled
gameCenterEverEnabled
hasWatchIndependentApp
hasWatchOnlyApp
iAdAttribution
iAdConversionString
iAdImpressionString
isPurchasedRedownload
subGenres
nameTranscriptions
_automatic
_gameCenterEnabled
_gameCenterEverEnabled
_hasMessagesExtension
_hasWatchApp
_hasWatchIndependentApp
_hasWatchOnlyApp
_purchasedRedownload
_supports32BitOnly
_alternateIconName
_appReceiptData
_assetDeltaPackage
_assetFullPackage
_betaExternalVersionID
_bundleDisplayName
_bundleShortVersion
_cancelDownloadURL
_capabilities
_iAdAttribution
_iAdConversionString
_iAdImpressionString
_kind
_messagesArtworkURL
_preflightPackageURL
_purchaseDate
_softwarePlatform
_storeTransactionID
_subGenres
_nameTranscriptions
T@"NSString",R,V_alternateIconName
T@"NSData",R,V_appReceiptData
T@"NSString",R,V_artworkURL
T@"StoreAsset",R,V_assetDeltaPackage
T@"StoreAsset",R,V_assetFullPackage
automatic
TB,R,GisAutomatic,V_automatic
T@"NSNumber",R,V_betaExternalVersionID
T@"NSString",R,V_bundleDisplayName
T@"NSString",R,V_bundleShortVersion
T@"NSString",R,V_bundleVersion
T@"NSString",R,V_cancelDownloadURL
T@"NSDictionary",R,V_capabilities
T@"NSNumber",R,V_evid
TB,R,V_gameCenterEnabled
TB,R,V_gameCenterEverEnabled
TB,R,V_hasMessagesExtension
TB,R,V_hasWatchApp
TB,R,V_hasWatchIndependentApp
TB,R,V_hasWatchOnlyApp
T@"NSNumber",R,V_iAdAttribution
T@"NSString",R,V_iAdConversionString
T@"NSString",R,V_iAdImpressionString
T@"NSNumber",R,V_itemID
T@"NSString",R,V_itemName
T@"NSString",R,V_kind
TB,R,V_launchProhibited
T@"NSString",R,V_messagesArtworkURL
T@"NSURL",R,V_preflightPackageURL
T@"NSString",R,V_purchaseDate
purchasedRedownload
TB,R,GisPurchasedRedownload,V_purchasedRedownload
T@"NSString",R,V_redownloadParams
T@"NSString",R,V_releaseDate
Tq,R,V_softwarePlatform
T@"NSString",R,V_storefront
T@"NSString",R,V_storeTransactionID
T@"NSString",R,V_storeCohort
T@"NSArray",R,V_subGenres
TB,R,V_supports32BitOnly
T@"TimeWindow",R,V_optimalDownloadWindow
T@"NSDictionary",R,V_nameTranscriptions
iAdConversionDate
iAdImpressionDate
setExternalIDs:
externalIDs
addExternalIDs:
responseWithExternalIDs:
_metricsTopic
appUsageUseTestTopic
currentOSVersion
setCurrentOSVersion:
deletedApps
offset
setOffset:
setTopic:
rescheduleActorIDReset
_isTemporary
_shouldResetPayoutDate
_addPriorApps
_rescheduleActorIDReset
_actorID
_anonymousKatanaIDs
_appUsageType
_currentOSVersion
_deletedApps
_historyMap
_intervalStartDate
_launchesStartDate
_minimumRunningTime
_now
_nowDate
_offset
_payoutKatanaIDs
_subscribedAccount
_subscriptionInfo
T@"NSString",C,N,V_actorID
TB,N,V_addPriorApps
T@"NSString",C,N,V_currentOSVersion
Tq,N,V_offset
TB,N,V_rescheduleActorIDReset
Tq,N,V_startTime
T@"NSString",C,N,V_topic
T@"NSDictionary",C,N,V_anonymousKatanaIDs
T#,R,N
Tq,R,N,V_appUsageType
T@"NSArray",C,N,V_deletedApps
T@"AppUsageInstallHistoryMap",N,V_historyMap
TB,N,V_isTemporary
T@"KeepAlive",&,N,V_keepAlive
T@"NSDate",R,N,V_intervalStartDate
T@"NSDate",C,N,V_launchesStartDate
Tq,N,V_minimumRunningTime
Tq,R,N,V_now
T@"NSDate",R,N,V_nowDate
T@"NSDictionary",C,N,V_payoutKatanaIDs
TB,N,V_shouldResetPayoutDate
T@"ACAccount",C,N,V_subscribedAccount
T@"NSDictionary",C,N,V_subscriptionInfo
T@"NSString",&,N,V_subscriptionState
TB,N,V_userInitiated
_handleInstalledEventNotification:
_handleUninstalledEventNotification:
_handleBetaAppCrashedNotification:
applicationsDidInstall:isPlaceholder:
initForInstallMachineryWithBundleIdentifier:error:
_parseRegistrationNotification:usingBlock:
promptSubscriptionCancellationForDeletedBundleIds:
_systemAppRequests
requestDate
initWithDate:error:itemID:externalVersionID:
ageRelativeToDate:
matchesExternalVersionID:
_requestDate
T@"NSString",R,V_externalVersionID
T@"NSString",R,V_itemID
T@"NSDate",R,V_requestDate
_initWithInstall:package:
cancelInstallID:withCoordinator:error:
runPreambleForPKGWithResponse
autoDownloadsEnabled
_shouldCancelAsDuplicate
_shouldCancelAutomaticInstallation
_shouldCancel32BitApp
initWithInstall:session:
preambleResponse
_restartProgress
_shouldCancelInstallationWithError:
_automaticType
_restoreType
_sourceType
_updateType
T@"AppInstallPreambleResponse",R
_initWithInstallID:result:coordinator:error:
continueInstallID:withCoordinator:
failInstallID:withCoordinator:error:
finishInstallID:withCoordinator:
purchases
internalRequestTokenWithProcessInfo:
_returnPurchaseResponse:
T@"ASDPurchaseRequestOptions",R,D,N
_installTypeIsDowngrade:
_handleDemotedApplication:
applicationForRecord:
_handleInstalledApplication:
_handleUninstalledApplication:
eventSource
_humanReadableType
setEventSource:
_eventSource
T@"NSDate",C
TC,N,V_eventSource
extension
TB,N,GisExtension
devicePlatform
setHasDevicePlatform:
hasDevicePlatform
devicePlatformAsString:
StringAsDevicePlatform:
deviceFamily
setHasDeviceFamily:
hasDeviceFamily
deviceFamilyAsString:
StringAsDeviceFamily:
hasArchitecture
hasDisplay
hasLocale
hasTimezone
hasCarrier
hasCellularNetworkType
setHasConnection:
connectionAsString:
StringAsConnection:
hasDisk
setHasBatteryPercentage:
hasBatteryPercentage
display
timezone
disk
_architecture
_batteryPercentage
_carrier
_cellularNetworkType
_disk
_display
_locale
_timezone
Ti,N,V_devicePlatform
Ti,N,V_deviceFamily
T@"NSString",&,N,V_architecture
T@"TFDisplay",&,N,V_display
T@"NSString",&,N,V_locale
T@"NSString",&,N,V_timezone
T@"NSString",&,N,V_carrier
T@"NSString",&,N,V_cellularNetworkType
Ti,N,V_connection
T@"TFMemoryUsage",&,N,V_disk
TI,N,V_batteryPercentage
makeObjectsPerformSelector:withObject:
_registerNotificationSource
_validatePredicate:error:
allowEvaluation
predicateFormat
registerNotificationSource:
executeQueryWithPredicate:withReplyHandler:
executeQueryWithPredicate:onPairedDevice:withReplyHandler:
cancelApp:onPairedDevice:withReplyHandler:
cancelApp:withReplyHandler:
pauseApp:withReplyHandler:
resumeApp:withReplyHandler:
launchApp:extensionType:withReplyHandler:
launchApp:withReplyHandler:
launchApp:onPairedDevice:withReplyHandler:
lookupBundleIDsForDeletableSystemAppsWithItemIDs:withReplyHandler:
lookupItemIDsForDeletableSystemAppsWithBundleIDs:withReplyHandler:
lookupBundleIDsForDeletableSystemAppsForWatchWithItemIDs:withReplyHandler:
lookupItemIDsForDeletableSystemAppsForWatchWithBundleIDs:withReplyHandler:
uninstallApp:requestUserConfirmation:withReplyHandler:
forceRefreshAllQueries
_validKeyPaths
_libraryCatalogs
_libraryOpen
_libraryProgress
_libraryUninstall
_remoteCatalogs
setString:forKey:
_externalEventsWithPostedState:error:
_allEventsWithPostedState:error:
_enqueueEventsWithAMSEngagment:
_createEventWithDictionary:bundleID:metadata:
importAppMetricsEvents:error:
_launchEventsSinceDate:error:
_crashEventsSinceDate:
powerMetrics
_appEventsWithWithPostedState:
engagement
enqueueData:
setEngagement:
setPowerMetrics:
_engagement
_powerMetrics
T@"AMSEngagement",&,N,V_engagement
T@"NSDictionary",&,N,V_powerMetrics
initWithOSStateData:length:
T@"ASDLaunchableAppsRequestOptions",R,D,N
enumeratorForObjectsOfClass:
_array
tcr_numberEnumerator
setAutomatic:
setBytes:
setRemaining:
_remaining
_bytes
TB,GisAutomatic,V_automatic
TQ,V_bytes
remaining
TB,GisRemaining,V_remaining
copyEvaluatorDownloadUsingConnection:
removeConnectionWithUUID:
bytesUsedForApplicationWithBundleID:replyBlock:
T@"PowerLogCoordinator",R,N
requestID
_requestID
T@?,C,V_progress
T@"NSUUID",R,V_requestID
setHidden:forStoreItemID:withReplyHandler:
showAllWithReplyHandler:
updateForAccountID:withContext:withReplyHandler:
updateWithContext:withReplyHandler:
isBootstrapping
setVid:
_logCodeForRestoreType:
_fetchLatestVersion
TB,V_fetchLatestVersion
_segmentFromString:
initWithDictionary:forAppAdamID:segment:
T@"NSNumber",R,C
T@"NSDictionary",R,C,V_dictionary
_sessionClass
_transactionClass
T@"NSString",&,V_schemaName
T#,V_sessionClass
T#,V_transactionClass
_download
_accessWasUnblocked
_constrainedResult
_expensiveResult
_interfaceMask
TB,R,V_accessWasUnblocked
Tq,V_constrainedResult
Tq,V_expensiveResult
TQ,V_interfaceMask
TB,V_suppressDialogs
legacy_setPropertiesWithActivity:
setGenre:
setRatingLabel:
setRatingRank:
isGameCenterEnabled
setGameCenterEnabled:
setIsAutoDownload:
setPurchasedRedownload:
setReleaseDate:
setIAdConversionDate:
setIAdImpressionDate:
setIAdAttribution:
legacy_metadataWithActivity:
_applicationForAppRecord:ensureInstalled:
_dataDectector
numberOfMatchesInString:options:range:
resourcesDirectoryURL
stringByRemovingPercentEncoding
assetPackManifestURL
bundleTagManifestURL
_isEqualToApplication:
_isStoreBased
_lastModified
_versionToken
_copyTo:withZone:
_hash
isEqualToApplication:
setInstalled:
betaVersionIdentifier
dataDetectorWithTypes:error:
fileModificationDate
_applicationForProxy:ensureInstalled:
lastModified
setAssetPackManifestURL:
setBundleTagManifestURL:
setResourcesDirectoryURL:
_adamID
_beta
_installed
_machineVPP
_assetPackManifestURL
_bundleTagManifestURL
_resourcesDirectoryURL
T@"NSURL",&,N,V_assetPackManifestURL
T@"NSURL",&,N,V_bundleTagManifestURL
T@"NSURL",&,N,V_resourcesDirectoryURL
TB,R,GisStoreBased
TB,R,GisBeta
T@"NSURL",C
installed
TB,R,GisInstalled
machineVPP
TB,R,GisMachineVPP
T@"NSString",C,D
TB,D,GisBeta
TB,D,GisInstalled
TB,D,GisMachineVPP
setUsingModernUpdatesCheck:
setNextUpdateCheck:
lastUpdateCheckDate
setLastUpdateCheck:
clearExpiredUpdateHistoryWithCompletionBlock:
getUpdatesIncludingMetricsWithCompletionBlock:
getUpdatesMetricsWithCompletionBlock:
getUpdatesWithCompletionBlock:
getManagedUpdatesWithCompletionBlock:
migrateUpdatesStoreWithCompletionBlock:
refreshUpdateCountWithCompletionBlock:
refreshUpdatesWithCompletionBlock:completionBlock:
reloadFromServerWithCompletionBlock:
reloadManagedUpdatesWithCompletionBlock:
reloadFromServerInBackgroundWithCompletionBlock:
updateAllWithJobResults:
updateAllWithOrder:completionBlock:
hideApplicationBadgeForPendingUpdates
removeUpdateBulletins
showApplicationBadgeForPendingUpdates
showApplicationUpdatesBulletin
terminateApplicationWithBundleIdentifier:
productURLForAppWithID:
_presentSystemDialogWithTitle:dialogMessage:actionURL:
sharedService
terminateApplication:forReason:andReport:withDescription:
dialogRequestWithTitle:dialogMessage:
_bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
T@"NSURL",&,N,V_bundleURL
_bagValueForKey:ofType:
_fetchBag
frozenBagValueWithKey:value:valueType:
_port
intent
gizmoPairingID
buildCoordinatorWithError:
setGizmoPairingID:
setIntent:
targetBundleURL
setTargetBundleURL:
_gizmoPairingID
_intent
_priority
_targetBundleURL
T@"NSUUID",&,V_gizmoPairingID
TQ,V_intent
Tq,V_priority
T@"NSURL",&,V_targetBundleURL
coordinatorBuilderWithError:
compatibilityUpdateForBundleIDs:userInitiated:withReplyHandler:
getManagedUpdatesWithReplyHandler:
getUpdatesWithReplyHandler:
refreshUpdateCountWithReplyHandler:
reloadFromServerWithReplyHandler:
reloadManagedUpdatesWithReplyHandler:
updateAllWithOrder:replyHandler:
dispatchQueue
setDispatchQueue:
updatesInterface
setUpdatesInterface:
_updatesInterface
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
T@"<UpdatesControllerInterface>",&,V_updatesInterface
invalidateExpiredFailures
_isErrorExemptFromThrottle:
_clock
_duration
_persistence
_registerInstallAttributionPingbackRetryTaskIfNeeded
_registerInstallAttributionDatabaseCleanTaskIfNeeded
hasOpenImpressionFromSourceApp:
registerInstallAttributionDatabaseCleanTask
retryFetchingPingbackFor:
pingbackFetchInfoRetryCountForAppAdamId:
removeFetchedPingbackInfoForApp:
fetchPingbackInfoFor:withLogKey:withCompletionHandler:
addPingbacks:
addPingback:
_installAttributionShouldSendDevPingback
registerInstallAttributionPingbackRetryTask
setDeveloperPingbackDomain:forApp:
installAttributionDeveloperPingbackOverride
registeredPingbacks
_sendMaturePingbacksWithXPCActivity:
compositePingbacks
_removePingback:
_installAttributionShouldUseProxy
_createConnectProxyConfigForURL:
postbackDictionaryFromPingback:
_incrementRetryCountForPingback:
_cleanDatabase
hasEntries
_removeInstallAttributionImpressionsBeforeDate:
_removeInstallAttributionParamsBeforeDate:isLowFidelity:
_removeUnregisteredInstallAttributionPingbacksBeforeDate:
setConnectionProxyDictionary:
_getMescalSignedAuthValueForUrl:
setHTTPAdditionalHeaders:
set_preventsSystemHTTPProxyAuthentication:
set_requiresSecureHTTPSProxyConnection:
signatureFromData:type:bag:error:
installAttributionShouldSendDevPingback
getMultiParamsForApp:
addParams:overrideCampaignLimit:
kickPingbackTask
_logKeyDict
sourceRef
sourceType
thirdPartyWithNoAppReferrer
T@"NSString",&,Slib_setAppExtVrsId:
initWithStoreItem:
addMetadata:
metadataType
clearMetadatas
metadatasCount
metadataAtIndex:
metadatas
setMetadatas:
_metadatas
T@"NSMutableArray",&,N,V_metadatas
initWithDictionary:device:
_prunedUpdateDictionary:forItemID:
_prunedSizeUsingDevice:fromDictionary:forVariantId:versionId:
_prunedArtworkDictionary:
_prunedSizeWithUpdateSizes:forInstalledVariant:versionId:
_prunedSizeFromVariantSizes:usingDevice:
_prunedSizeFromDeviceSizes:usingDevice:
rolloutDeferred
_rolloutDeferred
T@"NSArray",R,V_rolloutDeferred
_fetchImageURLsRequest
imagesData
signedURLs
_signedURLs
T@"NSArray",R,N,V_signedURLs
setRequiresNetwork:
initWithStartTime:endTime:
isEqualToPolicy:
setRequiresDeviceSecurity:
setRequiresMigrationComplete:
setRequiresTermination:
T@"TimeWindow",C
_writeReceipt:forApplication:logKey:error:
receiptURL
extensionReceiptURLs
columnIndexForColumnName:
dataForColumnIndex:
dateForColumnIndex:
stringForColumnIndex:
UUIDForColumnIndex:
URLForColumnIndex:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
indexOfObject:
dataForColumnName:
dateForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
JSONObjectForColumnIndex:
numberOfColumns
UUIDForColumnName:
URLForColumnName:
_columnTypeForColumnIndex:
_declaredTypeForColumnIndex:
_columnCount
_columnDeclaredTypes
_columnIndexByName
_columnKeySet
_columnNames
_statementWrapper
removeObjectIdenticalTo:
_notificationClients
_notificationSources
cancelUpdatePendingForCompanionApp:
cancelUpdatesPendingForCompanionApps:
setUpdatePendingForCompanionApp:
setUpdatesPendingForCompanionApps:
_handleUpdatesResponse:forAccount:
_enumerateAppsByAccountUsingBlock:
_logDeferred:
initWithApps:context:
setInstallCode:
installCode
storeVersionID
_postIfAllowed
_collectionChanceDefault
prepareMetricsProperties
_collectionChance
_didPost
_shouldPost
_outputDictionary
T@"NSDictionary",R,V_outputDictionary
initWithEnterpriseApps:isXDCRequest:requestToken:
manifestURL
hideUserPrompts
_setProcessedExternalIDs:
_isXDCRequest
_lib_receiptName
lib_receiptURL
_endTime
Td,R,V_endTime
Td,R,V_startTime
_initWithCurrentDevice
activationRecord
iOSSupportVersion
isAppleSiliconMac
appleSiliconMac
TB,R,GisAppleSiliconMac
HRNMode
TB,R,GisHRNMode
_HRNMode
_iOSSupportVersion
_productVariants
_productVersion
T@"NSString",R,V_iOSSupportVersion
T@"NSArray",R,V_productVariants
T@"NSString",R,V_productVersion
installAttributionSkipSourceIDCheck
overrideCampaignLimit
addInstallAttributionParamsWithConfig:completionHandler:
startPingbackTaskWithCompletionHandler:
_initWithDictionary:applyingAssetStrategy:installedItem:
_initWithError:accountID:
_errorWithFailureType:customerMessage:
_optimalDownloadWindowFromDictionary:
getMultiTypeBoolValueForKey:fromDictionary:
dateBySettingHour:minute:second:ofDate:options:
dateByAddingUnit:value:toDate:options:
errorItemResponseWithError:accountID:
updateItemResponseWithDictionary:installedItem:
errorForItemID:
_installAttributionPingbackFromDictionary:
anonymousPings
clusterMappings
rangesToLoad
shouldCancelPurchaseBatch
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
_itemErrors
_isPreorder
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_anonymousPings
_clusterMappings
_keybag
_rangesToLoad
_installAttributionPingbackFetchURLString
_installAttributionError
T@"NSArray",R,V_anonymousPings
T@"NSArray",R,V_clusterMappings
T@"NSData",R,V_keybag
T@"NSDictionary",R,V_metrics
TB,R,V_isPreorder
T@"NSArray",R,V_rangesToLoad
TB,V_shouldCancelPurchaseBatch
TB,V_triggeredQueueCheck
T@"NSString",V_clientID
T@"NSString",R,V_installAttributionPingbackFetchURLString
T@"NSError",R,V_installAttributionError
_dialogForUpdateWithName:andSize:forRoaming:remaining:
_dialogForDownloadWithName:andSize:forRoaming:remaining:
_buttonActions
_bodyStringWithSize:remaining:
_hasWAPICapability
T@"ASDExternalManifestRequestOptions",R,D,N
_predicateFromQuery:
unsignedLongValue
sortOptions
_propertyForSortOptionName:
ascending
setPurchaserDSID:
searchTerm
storeIDs
initWithRecord:error:
_manifestWithContentsOfURL:error:
_manifestURLForProxy:error:
URLForResource:withExtension:
_manifestWithData:error:
_manifestWithDictionary:error:
_manifestURLForBundle:error:
initWithBundleID:error:
T@"NSDate",R,N,V_lastModified
setPipeline:
_applyChangesForChangeset:transaction:
_applyExternalChangesForChangeset:
modifyUsingTransactionClass:withBlock:
localRevision
requestWithMethod:bagURL:headers:parameters:
_more
_localRevision
_receipts
T@"NSString",R,N,V_localRevision
TB,R,N,V_more
T@"NSString",R,N,V_serverRevision
T@"NSArray",R,N,V_receipts
categoryWithIdentifier:actions:intentIdentifiers:options:
setNotificationCategories:
setPrivateDelegate:
setWantsNotificationResponsesDelivered
_requestAuthorization:
getPendingNotificationRequestsWithCompletionHandler:
getDeliveredNotificationsWithCompletionHandler:
_postBulletins:
removeAllDeliveredNotifications
shouldHandleNotificationResponse:
handleNotificationResponse:bag:
notification
notificationCenter:didChangeSettings:bag:
addNotificationRequest:withCompletionHandler:
requestAuthorizationWithOptions:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:didChangeSettings:
userNotificationCenter:didOpenApplicationForResponse:
existingBulletins
postBulletin:
removeAllNotifications
updateBulletin:
_center
setOwnerAccountId:
pingbacksWithPredicate:
_pingbackFromDatabaseDict:
installAttributionParamsForApp:
pingbacksForApp:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
URLResponse
removedTransactions:
shouldContinueTransaction:withNewStorefront:replyBlock:
_storeKitServiceInterface
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
eventMonitor:receivedEventWithName:userInfo:
_eventMonitor
_transportUpdateHistoryAtDatabasePath:fromTable:
setAssetToken:
_purchaseEvent
T@"NSString",&,V_adamID
T@"NSString",&,V_assetToken
T@"NSString",&,V_externalVersionID
T@"AIMPurchaseEvent",&,V_purchaseEvent
useArcadeSwitchUser
_getSinf
_getReceipt
_newBaseRequestBodyDictionary
initWithAccount:fromUserName:proxy:
_performRequestWithError:
_repairSINFUsingContentRestore
_repairReceiptForAppProxyIOS:receiptData:
_swithUserForMacOS
_refreshReceiptForAppProxyForMacOS
_fromUserName
_proxy
_swithUserBagUrl
manageSubsOnDeleteBlacklist
setManageSubsOnDeleteBlacklist:
_promptSubscriptionCancellationForAppleMusic
_promptSubscriptionCancellationForAppleNewsWithActiveAccount:
_promptSubscriptionCancellationForAppleTVWithActiveAccount:
_promptSubscriptionCancellationUsingDAAPForDeletedBundleIds:activeAccount:
initWithStoreRequestContext:
setShouldReturnLastKnownStatusOnly:
sharedStatusController
statusType
_getAppNameForSystemApp:
_getAdamIdForSystemApp:
_presentManageSingleSubscriptionDialogForAppName:appAdamId:subscriptionExpirationDate:
performSubscriptionStatusRequest:withCompletionHandler:
autoRenewEnabled
_presentManageMultipleSubscriptionsDialogForAppName:appAdamId:
_shouldPromptForIAP:
_requiresAlternativeManageSubsPrompt
_presentManageSubscriptionsDialogWithTitle:message:manageButtonTitle:keepButtonTitle:appAdamId:
initWithBundle:
_initWithLSApplicationRecord:
updateAvailability
setUpdateAvailability:completionHandler:
appClipMetadata
objectForKey:ofClass:
executableURL
codeSignatureVersion
sinfPath
appStoreToolsBuildVersion
sideLoadedDeviceBasedVPP
lib_enumerateObjectsUsingBlock:
proxyForBundle:
proxyForBundleURL:
shortDescription
setUpdateAvailability:
canonicalExecutablePath
installFailureReason
setDownloaderDSID:
setAppClip:
setParentApplicationBundleID:
setAppClipIsConfiguredForIAP:
setAppPlatform:
setCanonicalExecutablePath:
setShortVersionString:
setAppleSigned:
setProfileValidated:
setHasMIDBasedSINF:
setMissingRequiredSINF:
setApplicationType:
setPlaceholder:
setBetaExternalVersionID:
setDeviceIdentifierForVendor:
setThinningVariantID:
_signingFlags
_appClipIsConfiguredForIAPValue
_extensionReceiptURLs
_storeMetadata
_appClip
_appClipIsConfiguredForIAP
_appleSigned
_profileValidated
_hasMIDBasedSINF
_missingRequiredSINF
_offloaded
_placeholder
_record
_parentApplicationBundleID
_appPlatform
_canonicalExecutablePath
_shortVersionString
_applicationType
_deviceIdentifierForVendor
_thinningVariantID
_companionBundleID
T@"NSString",&,N,V_companionBundleID
T@"PurchaseOwner",R
T@"LSApplicationRecord",R,N,V_record
T@"NSNumber",&,N,V_downloaderDSID
T@"NSNumber",&,N,V_familyID
T@"NSNumber",&,N,V_purchaserDSID
TB,N,GisAppClip,V_appClip
T@"NSString",&,N,V_parentApplicationBundleID
TB,N,V_appClipIsConfiguredForIAP
TQ,N,V_appPlatform
T@"NSString",&,N,V_bundlePath
T@"NSString",&,N,V_canonicalExecutablePath
T@"NSString",&,N,V_localizedName
T@"NSString",&,N,V_shortVersionString
appleSigned
TB,N,GisAppleSigned,V_appleSigned
profileValidated
TB,N,GisProfileValidated,V_profileValidated
TI,R,N
TB,N,V_hasMIDBasedSINF
TB,N,V_missingRequiredSINF
T@"NSData",R,C
TQ,N,V_applicationType
TB,N,GisInstalled,V_installed
TB,N,GisOffloaded,V_offloaded
placeholder
TB,N,GisPlaceholder,V_placeholder
TB,N,GisArcade,V_arcade
TB,N,GisBeta,V_beta
Tq,N,V_betaExternalVersionID
T@"NSString",&,N,V_deviceIdentifierForVendor
Tq,N,V_storeExternalVersionID
T@"NSNumber",&,N,V_storefront
Tq,N,V_storeItemID
T@"MIStoreMetadata",R
T@"NSString",&,N,V_thinningVariantID
refreshKeybagWithReplyHandler:
repairAppWithOptions:replyHandler:
lastDuetSyncDate
spotlightMigratedDate
_checkServerForMessagesForAccount:messageInfo:reply:
_getRevocationsForAccountID:inApp:reply:
_removeRevocationsForAccountID:inApp:
_doubleForKey:applicationId:ifMissing:
_copyNumberForKey:applicationId:
_setBool:forKey:applicationId:
_boolForKey:applicationId:ifMissing:
_setDouble:forKey:applicationId:
_setNullableValue:forKey:
_restoreInstallsFailedWithCodeSigError
_setRestoreInstallsFailedWithCodeSigError:
accountPropertyForKey:
numberForKey:
setBool:forKey:
recordMigratedAppUsageDB
crossfirePostMetricsSamplingPercentageOverride
setDiagnosticClockEnabled:
diagnosticClockOffset
setDiagnosticClockOffset:
appUsageDBMigrated
appUsageNextPostTargetDate
appUsagePostMetricsSamplingPercentageOverride
setAppUsageDBMigrated
badgeCount
marketingDemoMode
setBadgeCount:
ocelotDefaultApp
setArcadeRepairTimeout:
setOcelotAppAnalyticsClientID:
setOcelotApps:
setOcelotPayoutResetDate:
powerPluggedInOverride
userAgentSuffix
clearRestoreDefaults
clearShouldSuppressTermsAndConditionsDialogs
followUpAccounts
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreItemsForKey:
setFollowUpAccounts:
setPerformedPostRestoreSoftwareUpdate:
setRestoreItemKinds:
setRestoreItemValue:forKey:
setShouldSuppressTermsAndConditionsDialogs:
shouldSuppressTermsAndConditionsDialogs
restoreInstallsFailedWithCodeSigError
markInstallAsFailedWithCodeSigErrorForBundleID:evid:
lastAutoUpdateCompletionDate
previouslyInstalledProvisionedApps
setLastAutoUpdateCompletionDate:
setLastAutoUpdatePerformDate:
setLastUpdateCheckDate:
setPreviouslyInstalledProvisionedApps:
setExpiredApps:
setRevokedApps:
allowDownloadOnCellular
batterySaverEnabledOnStartup
bulletinForKey:
cellularSizeLimitOverride
clearDaemonCommsSemaphore
clearJobApprovalDate
deamonCommsSemaphoreSet
disablePowerOnStartup
enableDeamonCommsSemaphore
jobApprovalDate
lastGarbageCollectionDate
lastJobCleanupDate
lastOSMigrationDate
maxConcurrentJobCount
maxConcurrentThermalLimitedJobCount
recordJobApprovalDate
recordLastGarbageCollectDownloads
recordLastJobCleanupDate
setBulletins:forKey:
setInvalidBuildToolVersions:
skipManagedAppCheck
thermalEnabled
useModernFreeSpaceCheck
T@"NSArray",&
appSessionReporterKey
setDeviceVendorID:
appEventType
eventTimeOverride
setForegroundUsage:
setForegroundUsageEvents:
hasBeenPosted
weekStartDate
_eventForType:
_metricsTypeForInstallationType:
_typeForMetricsType:
clusters
timeRangeEnd
timeRangeStart
isAppSessionReporterKeyRepaired
setClusters:
tempUserId
setTempUserId:
tempDeviceIdentifer
setTempDeviceIdentifer:
clientEventID
collectionTime
cumulativeUserCount
installationType
osBuild
qualifiedDuration
_appSessionReporterKeyRepaired
_appEventType
_clip
_hasBeenPosted
_installationType
_installType
_tempUserId
_tempDeviceIdentifer
_appSessionReporterKey
_clientEventID
_clipAppType
_clusters
_cohort
_collectionTime
_cumulativeUserCount
_eventTimeOverride
_foregroundEvents
_ocelotDeviceID
_ocelotID
_ocelotSubscriptionState
_timeRangeEnd
_timeRangeStart
_qualifiedDuration
_weekStartDate
T@"NSString",C,N,V_tempUserId
T@"NSString",C,N,V_tempDeviceIdentifer
TC,N,V_appEventType
T@"NSString",C,N,V_appSessionReporterKey
appSessionReporterKeyRepaired
TB,N,GisAppSessionReporterKeyRepaired
Tq,N,V_appUsageType
TB,N,GisBeta
T@"NSString",C,N,V_clientEventID
TB,N,GisClip,V_clip
T@"NSString",C,N,V_clipAppType
T@"NSArray",C,N,V_clusters
T@"NSString",C,N,V_cohort
T@"NSNumber",C,N,V_collectionTime
Tq,N,V_cumulativeUserCount
Tq,N,V_duration
T@"NSNumber",C,N,V_eventTimeOverride
T@"NSArray",C,N,V_foregroundEvents
T@"NSString",C,N,V_hardwareFamily
T@"NSString",C,N,V_hardwareModel
TB,N,V_hasBeenPosted
TC,N,V_installationType
TC,N,V_installType
T@"NSString",C,N,V_ocelotDeviceID
T@"NSString",C,N,V_ocelotID
T@"NSString",C,N,V_ocelotSubscriptionState
T@"NSString",C,N,V_OS
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_platform
T@"NSString",C,N,V_shortVersion
T@"NSNumber",C,N,V_startTime
T@"NSNumber",C,N,V_storefront
Tq,N,V_timeRangeEnd
Tq,N,V_timeRangeStart
Tq,N,V_qualifiedDuration
T@"NSString",C,N,V_weekStartDate
_visuallyOrderedBundleIDs
orderedSetWithOrderedSet:range:copyItems:
unionOrderedSet:
_discoverCoordinatorsWithOrder:prioritizeFirst:error:
_restoringCoordinatorMap
metadataWithError:
pendingInstalls
T@"SQLitePredicate",R
setDatabasePath:
isDeviceInEduMode
systemContainerURL
_applicationTaskLock
sentinelFileURL
isAssetPacksDirectoryEmpty
setLibraryPath:
setLegacyDatabasePath:
setAssetPacksPath:
_libraryPath
_legacyDatabasePath
_assetPacksPath
T@"NSString",&,N,V_libraryPath
T@"NSString",&,N,V_databasePath
T@"NSString",&,N,V_legacyDatabasePath
T@"NSString",&,N,V_assetPacksPath
_checkRequestThrottle
_buildRequestTask
finishWithSuccess
_buildRequestParametersWithError:
setAnisetteType:
familyMemberAccountID
authorizeReason
promiseWithResult:
uppercaseString
_buildRequest
_authorizeReason
_familyMemberAccountID
Tq,V_authorizeReason
T@"NSNumber",C,V_familyMemberAccountID
systemUptime
initWithProcessInfo:
setClientName:
compile
lib_deviceIsAppleWatchM8
lib_deviceIsWiFiCapable
lib_deviceUnlocked
lib_passcodeDisabled
lib_userAgentForClientID:
lib_userAgentForClientName:andClientVersion:
_registerForNotification
_updateState
_elevated
elevated
TB,R,GisElevated,V_elevated
lib_setPropertiesWithStoreItem:
setReferrerApp:
lib_setPropertiesWithSINFData:isVPP:
setBundleShortVersionString:
initWithGenre:genreID:
setSubGenres:
setGameCenterEverEnabled:
setNameTranscriptions:
lib_decryptPrivateMetadataWithError:
lib_encryptPrivateMetadataWithError:
lib_setPropertiesWithPurchaseInfo:
lib_metadataFromDatabaseRepresentation:error:
_lib_privateProperties
activeInstallMatchingBundleID:
installForExternalID:
_pipeline
T@"<AppInstallPipeline>",W,V_pipeline
_updateTimeOffset
timeOffset
setTimeOffset:
_notifyToken
_timeOffset
Td,N,V_timeOffset
initWithAttributes:
_onRunQueue_updateCurrentExtensionTo:
setUpdateHandler:
extensions
_onRunQueue_extensionStatus
didReceivePushToken:reply:
_callExtensionWithContext:interruptionBlock:
didReceivePushMessages:reply:
didReachTerminalPhaseWithBetaBundle:terminalPhase:error:reply:
reloadAppsFromServerWithReply:
testFlightServiceExtensionCustomServiceTime
_onRunQueue_callExtensionWithContext:interruptionBlock:
initWithExtension:queue:serviceTime:graceTime:
serviceExtensionTimeWillExpire
serviceExtensionPerformCleanup
beginRequestForHostContext:XPCInterface:executionBlock:
extensionIdentifier
reloadAppsFromServerWithCompletionHandler:
_monitor
_currentExtension
_serviceTime
T@"<TestFlightServiceHostDelegate>",W,N,V_delegate
_startPackageKitInstall
operationForInstallID:packageID:inSession:withCoordinator:
installResponse
_installResponse
T@"AppInstallInstallResponse",R,V_installResponse
_initWithInstallID:result:error:
approveInstallID:
continueInstallID:
terminateInstallID:
_writeReceipt
_recordBusinessMetrics
initWithProvider:
operationForInstallID:packageID:inSession:
_cleanDownloadFolder
_loadDownloadsFromStart:toEnd:
_newURLRequestWithStartIdentifier:endIdentifier:error:
_handleResponse:
_presenter
T@"NSOrderedSet",R,C,V_storeItems
taskQueue
cancelAllRequestsWithErrorHandler:
submitRequest:delegate:withReplyHandler:
queueTask:
_releaseRequest:
_trackRequest:
requests
setRequests:
_requests
T@"NSXPCConnection",W,V_connection
T@"NSMutableArray",&,V_requests
T@"TaskQueue",R,N,V_taskQueue
initWithSuccess:error:
adopt:withReplyHandler:
adoptableBundleIdentifiersWithReplyHandler:
processPurchase:withReplyHandler:
startPurchase:withReplyHandler:
adoptionStatus:withReplyHandler:
unadoptWithReplyHandler:
adoptionInterface
setAdoptionInterface:
legacyPurchaseInterface
setLegacyPurchaseInterface:
purchaseInterface
setPurchaseInterface:
_adoptionInterface
_legacyPurchaseInterface
_purchaseInterface
T@"<AdoptionManagerInterface>",&,V_adoptionInterface
T@"<PurchaseManagerInterface>",&,V_legacyPurchaseInterface
T@"<PurchaseManagerInterface>",&,V_purchaseInterface
orderedSet
_addDownloadRequest:
_popAssetDownloads:
_deleteDownloadFromScratchDirectory:
_configureCoordinatorsForDownloadRequests:coordinatorID:withLogKey:
_fetchManifestForContext:
_configureDownloadsForContext:
_downloadRequestForKey:
_hasExceededMaxPinnedResources:
_assetExistsAndMatchesDownload:
_completeDownload:withError:
_duplicateDownloadFor:
_startTrackingDownload:
_attemptDownload:
_bandwithLimitForDownloadRequest:
_handleDownloadError:forDownloadRequest:
_moveItemAtPath:toPath:error:
_missingInitialAssetPacksForApplication:withReason:
_missingPrefetchAssetPacksForApplication:withReason:
_finalizeStateForDownload:
_stopTrackingDownload:
_refreshRequest:originalError:
startDownloadsForInstall:
_initWithServiceClient:
_initWithServiceClient:processInfo:
_transactionID
_internal
_serviceClient
_voucher
internal
TB,R,GisInternal,V_internal
T@"<XPCNotificationClient>",R
T@"XPCServiceClient",R,V_serviceClient
T@"NSObject<OS_voucher>",R,V_voucher
proxyAppBundleID
proxyAppName
initWithInstallID:usingDictionary:
setPackageID:
recordInstallInfo:
_beginPreambleUsingInstallInfo:transaction:
_releaseTerminationAssertionUsingInstallInfo:
_beginPostambleUsingInstallInfo:transaction:
_beginPreambleForInstallsMatchingPredicate:transaction:
operation
removeInstallInfo:
_postEventServiceInstallationEventWithPhase:forInstallInfo:entity:
setOperation:
_finishDownloadingOperationWithResponse:
_finishInstallingOperationWithResponse:
_finishPostambleTaskWithInstallInfo:
_beginPreambleWithTask:transaction:
_finishPreambleTaskWithResponse:
_beginInstallingUsingInstallInfo:transaction:
discreteProgressWithTotalUnitCount:
setDownloadProgress:
_handleAssetResult:error:usingInstallInfo:
_beginDownloadingUsingInstallInfo:transaction:
downloadProgress
_endEventServiceInstallationEventForInstallInfo:
_handleRecoveryResult:error:usingInstallInfo:
_isRecoverableNetworkError:
_assetSession
_requestLookup
_timeRemaining
T@"NSNumber",&,N,V_downloadID
Td,N,V_progress
Tq,N,V_state
Td,N,V_timeRemaining
T@"NSString",&,N,V_installPath
backgroundSessionConfigurationWithIdentifier:
_asset_setConfigurationDefaults
_asset_setConfigurationUsingProperties:
_asset_configurationIdentifierUsingProperties:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
set_sourceApplicationSecondaryIdentifier:
set_atsContext:
set_requiresPowerPluggedIn:
set_infersDiscretionaryFromOriginatingClient:
_asset_initializeConnectionPools
nextObject
initWithPrefix:suffix:
_prefixEnumerator
_suffixEnumerator
initWithEnumerator:transform:
_transform
evaluateWithObject:
initWithEnumerator:predicate:
removeAllInstallInfo
setInstallEvent:
setSignpostID:
terminationAssertion
setTerminationAssertion:
_downloadProgress
_installEvent
_operation
_terminationAssertion
T@,&,V_coordinator
T@"NSUUID",&,V_coordinatorID
T@"NSProgress",&,V_downloadProgress
T@"AIMInstallEvent",&,V_installEvent
T@"AppInstallLogKey",&,V_logKey
T@"NSOperation",W,V_operation
Tq,V_packageID
TQ,V_signpostID
T@,&,V_terminationAssertion
objCType
shouldReportAnonymousPings
_pingURLs
_newOperationForClient:withOptions:
receiveResponse:
migrationType
T@"NSString",C,V_clientID
_runPeriodicSync
_syncIntervalMinutes
_syncGracePeriodMinutes
TQ,V_syncIntervalMinutes
TQ,V_syncGracePeriodMinutes
transactionIDType
clearTransactionIDs
transactionIDAtIndex:
setTransactionIDs:
_transactionIDs
T@"NSMutableArray",&,N,V_transactionIDs
_enumerateUpdatesMatchingPredicate:usingBlock:
_familyMembersSuppressDialogs:logKey:error:
_bootstrapFamilyIfNeededSuppressDialogs:logKey:error:
_clearFamily
_updateFamilyInfoFollowingAccountChangeIfNeeded:
T@"FamilyManager",R,N
familyAccountIDs
_dispatch
_familyAccountIDs
_lastFamilyCheck
_notificationQueue
bundleContainerURL
metadataFromPlistAtURL:error:
_targetIsContainer
_targetURL
openApplicationWithBundleID:
T@"NSXPCConnection",R,N,V_connection
TQ,R,N,V_transactionID
initWithSinfArray:
_sinfsArrayWithDataKey:
sinfs
initWithSINFs:
pinfsArray
sinfForIdentifier:
sinfsArray
isDRMFree
_sinfs
_DRMFree
DRMFree
TB,R,GisDRMFree,V_DRMFree
T@"NSArray",R,V_sinfs
T@"SinfsArray",R
initWithBundleID:andConnection:
_connectionForUUID:
T@"ODRDatabaseChangeset",R,C,V_changeset
_initWithRevision:forAccount:client:logUUID:
T@"ASDPostBulletinRequestOptions",R,D,N
_valueDictionaryWithStoreItem:
bestPackageFromArray:
_packages
TB,R,GisAutomatic
T@"NSArray",C,V_packages
T@"SQLiteDatabaseStoreDescriptor",R
database
T@"SQLiteDatabase",R,V_database
_isOwnedOrResponsible
boolCompletionHandlerAdapter
_coordinatorWithInstallOptions
_coordinatorWithImportance
_fetchAppPromiseID:error:
_coordinatorWithAppAssetPromise
errorOnlyCompletionHandlerAdapter
cancelForReason:client:completion:
finishWithResult:error:
_coordinatorWithInitialODRAssetPromises
_fetchODRPromiseID:error:
_removeODRPromiseID:error:
isPaused:withError:
_coordinatorWithUserDataPromise
isEqualToCoordinator:
_coordinatorConformingToProtocol:
_isPropertyNotSetError:
coordinatorForBundleID:error:
_preflightPromise:error:
cancelForReason:
setInstallOptions:
failAppPromiseID:withReason:
fetchAppPromiseID:
hasAppPromise
resetAppPromiseID:
completeODRPromiseConfiguration
failODRPromiseID:withReason:
fetchODRPromiseID:
resetODRPromiseID:
completePlaceholderPromise
setPreparationPromise:
isObserved
creatorID
hasSupportForInitialODR
uniqueID
T@"IXAppInstallCoordinator",R,N,V_coordinator
TQ,R,N,V_intent
storeAccountName
storeAccountID
cancelIfDuplicate
thumbnailURL
ams_iTunesAccountWithUsername:
setGitBranch:
setHasApplicationAdamId:
hasApplicationAdamId
hasBundleId
hasCfBundleShortVersionString
hasCfBundleVersion
setHasPlatform:
hasPlatform
platformAsString:
StringAsPlatform:
hasGitBranch
setHasUptimeMillis:
hasUptimeMillis
setHasIsAppClip:
hasIsAppClip
hasCiBuildGroup
applicationAdamId
cfBundleShortVersionString
cfBundleVersion
gitBranch
uptimeMillis
ciBuildGroup
_applicationAdamId
_uptimeMillis
_bundleId
_cfBundleShortVersionString
_cfBundleVersion
_ciBuildGroup
_gitBranch
TQ,N,V_applicationAdamId
T@"NSString",&,N,V_bundleId
T@"NSString",&,N,V_cfBundleShortVersionString
T@"NSString",&,N,V_cfBundleVersion
Ti,N,V_platform
T@"NSString",&,N,V_gitBranch
TQ,N,V_uptimeMillis
TB,N,V_isAppClip
T@"NSString",&,N,V_ciBuildGroup
LibAppStoreDaemon
ThreadSafeDictionary
ODRAppReviewListener
Environment
ClipAdditionalDataResponseDecoder
AMSResponseDecoding
ODRBackgroundMaintenance
ODRDiagnosticsListener
SystemAppBootstrapTask
ODRApplicationPurgeTask
ClipDownloadVariantDelta
ClipDownloadVariant
NSObject
ODRDatabaseSession
SQLiteDatabaseSession
_ProtocolHandler
IAPInfoDatabaseTransaction
SQLiteDatabaseTransaction
FetchTVProviderAppsTask
UPPManifestAsset
StoreKitMessageInfo
IAPInfoItemsRequestContext
URLSessionManager
ODRAssetDownload
CrashParser
IXCoordinatorWithInitialODRAssetPromises
IXCoordinatorWithImportance
CreateCoordinatorOperation
Promise
LazyPromise
BufferedStream
BufferedStreamReader
StreamReader
Stream
BufferedStreamWriter
StreamWriter
ODRFileUtilities
ASDStoreQueueProtocol
StoreQueueListener
TestFlightExtensionSyncActivityManager
TestFlightServiceHostDelegate
PushConnection
APSConnectionDelegate
AppPackage
TFImageUpload
NSCopying
PromiseResult
FairPlayRepair
ASDBagConsumer
ApplicationRepair
InAppReceiptDatabaseSession
UpdateItemMetrics
LibraryStore
InAppDownloadTimeEstimator
CheckStoreQueueTask
CoordinatorPromiseDataConsumer
AssetDataConsumer
Diagnostics
InAppReceiptDatabaseStore
ActivityManager
LegacyActivityManager
PurchaseManager
AMSPurchaseResponseProtocol
PushMessageConsumer
PurchaseManagerInterface
StoreKitMessages
LaunchServicesProgress
LSApplicationWorkspaceObserverProtocol
LibraryProgress
AccountEventCoordinator
AccountActiveTime
AppPurgeCoordinator
CacheDeletePurgeableProvider
UsedApp
PurgeContext
SpringBoardWidgetContext
AccountEvent
IAPInfoItemsRequestResponse
ZipDataStreamStatus
ValidateAppleIDsTask
LaunchEventSyncMetadataEntity
AppMetadataEntityCrossfire
AppStoreFoundation
AppInstallRemoteEntity
ZipDataStreamAdapter
AppReceiptTask
FetchReceiptTaskDelegate
ASDNotificationCenterDialogObserver
CrossfireManager
LegacyManifestRequestTask
InstallationService
ASDInstallationServiceProtocol
AppInstallRemote
PurchaseHistoryUpdateDAAPRequestEncoder
DAAPRequestDataProvider
InAppPromotionDatabaseTransaction
AppEventEntityPersonalization
XPCServiceEntitlements
StoreKitMessagesDatabaseStore
AssetResult
AppEvent
FileUtilities
LibraryQueryEvalulator
LibraryResultEnumerator
NSFastEnumeration
MediaAppPlatformAttributes
ManagedAppStatusTask
TFGetImageUploadUrlsResponse
XPCEventRelay
MediaAppOffer
DiagnosticPublisher
AppEventEntityCrossfire
SQLiteDatabase
SQLiteConnectionDelegate
BetaAppFeedbackMemoryEntity
DecryptDataConsumer
BlockTask
AppInstallsDatabaseTransaction
InAppDownload
ODRDatabaseStore
LZMADecoder
AppMetricsEvent
AMSEngagementEvent
RefetchKeybag
AppInstallLogKey
TaskScheduler
SyncTaskScheduler
CoordinatorUtility
ClipAdditionalData
DiskSpaceManager
NSURL_ODR
URLResponseDecoder
RequestTask
AssetTaskInfo
InAppPromotionDatabaseSession
UPPManifestItem
ExpensiveNetworkEvaluator
ODRDevtoolsListener
OSVersion
ArcadeRepair
PurgeableApp
LibraryCatalogObserver
LibraryExpressionClassifier
XPCClient
LibraryErrorResultEnumerator
AppClusterMappingEntity
SQLiteQueryResults
SQLiteBinding
SQLiteSchema
ApplicationContext
_ApplicationContext
AppUpdateEntity
UPPManifestDownloadTask
NSURLSessionTaskDelegate
NSURLSessionDelegate
ODRDatabaseTransaction
ODRTagsRequest
PurchaseHistoryManager
PurchaseHistoryItemsDAAPRequestEncoder
LowDataNetworkEvaluator
ODRManager
PurchaseImportTask
IAPInfoItemsRequest
IAPInfoDatabaseStore
0 2A
PerformUpdatesTask
SQLiteSchemaMigration
ODRAssetDownloadEntity
VoucherStore
AppClusterMapping
ClusterKey
NetworkMonitor
CoreTelephonyClientDelegate
CoreTelephonyClientDataDelegate
MigratorAppUsageTask
InAppPurchaseIntentManager
BaseListener
NSXPCListenerDelegate
AppUsageSession
PurchaseHistoryItemsRequestContext
VariantDescriptor
_UniversalVariantDescriptor
VPPRepair
ODRAppMapEntity
FileWriteStreamAdapter
ContentRestoreTask
ContentRestoreURLRequestEncoder
SQLiteConnection
StoreItemContext
PurchaseHistoryDatabaseTransaction
ExpiredUpdateRecoveryTask
ASDRemoteJobListener
RemoteJobListener
StoreKitClient
AMSURLProtocolDelegate
TFFeedback
RequestProxy
ASDRequestProxy
NSXPCProxyCreating
SecureCoding
NSSecureCoding
NSCoding
InstallAttributionImpression
ClipDownloadData
AppStoreService
ASDAppStoreServiceProtocol
PurchaseHistoryUpdateRequest
AIMSummaryEvent
AppUsageDatabaseSession
AppEventEntityOcelotPayout
BetaAppLaunchInfoMemoryEntity
URLRequest
URLRequestEncoder
AMSRequestEncoding
AppMetadataInstallEntity
TypeCheckedDictionaryReader
InAppReceiptDatabaseTransaction
TelephonyUtility
AuthenticateRequest
Purchase
InAppSubscriptionStatusDatabaseEntity
RestoreDemotedApplicationsRequestTask
AsyncTask
ArcadeCoordinator
InAppPurchaseIntent
PushConnectionMessageHistory
UploadTestFlightImageTask
WatchSettingsManager
ClockFactory
XPCServiceCatalog
InAppPromotionDatabaseEntity
DeviceStateMonitor
AppUsageInstallHistoryMap
SQLiteMemoryEntity
SQLiteTypeChecking
PurchaseHistoryHideShowRequestContextItem
PurchaseHistoryHideShowRequestContext
ODRPreallocatedFile
ODRTaskQueue
IAPInfoUpdateRequestTask
XPCServiceBroker
ASDOctaneClientProtocol
StoreKitTestingService
ASDOctaneServiceCombinedProtocol
ASDOctaneServiceProtocol
ASDOctaneServiceInternalProtocol
InstallAttributionParamsDatabaseEntity
InstallCoordinationUninstaller
LibraryUninstall
InstallAttributionParams
ODRContentHash
RequestEnvironment
IXCoordinatorWithAppAssetPromise
IXCoordinatorWithDeviceSecurityPromise
IXCoordinatorWithPlaceholderPromise
IXCoordinatorWithInstallOptions
IXCoordinatorWithUserDataPromise
lib_IXAppInstallCoordinatorTag
AppPackageEntity
InstallAttributionPingback
ODRManifestRequestTask
ODRZipStreamDataConsumer
StoreKitServiceConnection
StoreKitStorefrontObserver
InAppDownloadManagerObserver
ASDStoreKitServiceProtocol
InstallAttributionDatabaseStore
SQLiteDatabaseStoreSchema
ODRLaunchServicesListener
SQLiteKeychainHelper
MigratorValidateAppleIDsTask
ODRApplicationRepairTask
MigratorConfigurationStore
ODRAssetPackEntity
AppInstallsDatabaseChangeset
TFGetImageUploadUrlsRequest
ActiveAccountObserver
MigrateToManagedTask
XDCInstallResponse
AppInstallObserver
IXAppInstallObserverDelegate
IXAppInstallCoordinatorObserver
LZMAStreamReader
StreamDelegate
BackgroundTaskRequest
WallClock
Clock
FactoryApplicationRepair
FamilyMember
TypeCheckedStringReader
LibraryLazyResultsEnumerator
RunLoop
XDCLaunchAppRequest
IAPHistoryService
ASDIAPHistoryServiceProtocol
PurchaseOwner
PurchaseHistoryUpdateDAAPResponseDecoder
DKDAAPParserDelegate
XDCPingMessage
ODRAssetPack
ODRClient
ODRServerProtocol
ODRInstallContext
SQLiteConnectionOptions
AccountEventEntity
RestoreBatchTask
RestoreBatchContext
SubmitTestFlightFeedbackTask
AppMetricsService
ASDAppMetricsServiceProtocol
ChunkedDigest
PurchaseHistoryUpdateCommand
RepairApplicationTask
ApplicationRepairDelegate
TypeCheckedObjectReader
UpdateMetricsEvent
JobManagerClient
StoreItemSubGenre
KeepAlive
UPPManifest
AppInstallDownloadTask
AppInstallDownloadResponse
RestoreInfo
ImportJobsForDemotedAppsTask
ODRManifest
Extensions
SystemAppLookupItem
ODRAppReviewProtocol
ODRAppReviewClient
PurchaseBatch
RestoreService
ASDRestoreServiceProtocol
LoadStoreQueueRequestEncoder
AssetResponse
BetaAppInfoEntity
LoadSubscriptionStatusTask
TaskQueue
LogPushConnection
RestoreManager
RestoreBatchInfo
AIMInstallEvent
LowDataEvaluatorTask
AppEventEntity
PowerMonitor
AppInstallEntity
ASDBundleProvider
DaemonProtocolDataProvider
PurchaseHistoryItemsDAAPResponseMetadataParser
XDCProgress
NetworkEmulation
XDCCancelInstallResponse
AppDownloadDoneTask
CacheDeleteCoordinator
StoreKitMessagesDatabaseTransaction
UpdatesContext
XDCCancelInstallRequest
CoordinatorPromiseProvider
Storage
PurchaseHistoryHideShowRequestEncoder
AppUsageManager
AppUsageManagerApp
AuthenticationChallengeDialogRequest
SubscriptionEntitlementsRequest
SbsyncTask
SbsyncTaskRequestEncoder
TypeCheckedAbstractReader
TypeCheckedReader
LibraryService
StoreKitMessagesServerRequest
ODRAssetPackValidationMaintenanceTask
StoreKitRevocationInfo
ContextObject
BatterySaverWatcher
ODRManifestEntity
AppSchedulerDatabaseTransaction
AppSchedulerResult
SQLiteTransporter
XPCServiceClient
ASDServiceProtocol
XPCNotificationClient
AppUsageBaseManager
RestoreInAppTransactionsTask
Daemon
AppMetadataEntityOcelotPayout
MigratorTask
Additions
OcelotService
ASDOcelotServiceProtocol
RescueAbandonedPlaceholderOperation
ASFWatchdog
UpdatesTask
AppMetadataEntityOcelot
PushDiagnostic
XDCDeviceManager
AdPlatformsStatusConditionsActivity
Activity
PersonalizationService
ASDPersonalizationServiceProtocol
PushCacheDeleteUpdateRequestTask
ODRSimulatedDownloadsManager
AppUpdateMemoryEntity
MetricsCoordinator
AppUpdatesDatabaseStore
ArtworkURLFormatter
DigestVerifier
AIMPurchaseEvent
TFMemoryUsage
PushTypesError
PushTypesTask
ODRTag
PromptForAccountTask
MigratorConfiguration
DeviceSecurityActivity
AppInstallScheduler
InstallAttributionPingbackFetchInfo
Legacy
URLBagMemoizedValue
MigratorTestFlightFeedbackTask
XPCNotificationSource
UPPManifestDialogRequest
ManagedApplicationTask
AcknowledgePrivacyTask
SBSRemoteAlertHandleObserver
PresentTapToRadarRequestFlow
MediaApp
RequestBroker
FetchPostbackTask
CleanupManager
PurgeAppsRequestTask
RequestController
LoadUnfinishedInAppTransactionsTask
SQLitePreparedStatement
MigratorMiscellaneousTask
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
SystemAppLookupTask
SoftwareUpdateAppMetadata
VerifyReceiptsTask
PurchaseHistoryAppEntity
Identity
DaemonIdentity
FinishInAppTransactionTask
Task
XDCDevice
InAppDownloadManager
InstallTestFlightAppsTask
PushRegisterTask
DispatchQueue
LoadInAppProductsTask
ClipURLSessionTask
InAppReceiptManager
StreamingZipStreamConsumer
IAPInfoDAAPRequestEncoder
Migrator
URLBag
AMSBagProtocol
AdoptionContract
AppUsageBagContract
ArcadeBagContract
AutoUpdateBagContract
BuildToolsBagContract
DRMRecovery
CrossfireBagContract
OnDemandResourcesBagContract
OwnsCheckBagContract
PlatformConextBagContract
PersonalizationBagContract
IAPInfoBagContract
PurchaseHistoryBagContract
SubscriptionEntitlementsBagContract
UpdatesBagContract
StoreKitBagContract
StoreQueueBagContract
PushNotificationBagContract
SystemAppsBagContract
TestFlightFeedbackBagContract
TestFlightExtensionBagContract
WatchSyncBagContract
WelcomeToAppStoreNotificationBagContract
ODRAssetDownloadResponse
ODRAssetDownloadRequest
SZExtractorDelegate
StoreAsset
Deprecated
CacheDeleteActivity
PerformPurchaseTask
MigratorPromotionTask
StoreKitMessagesDatabaseSession
DetermineSizeForURLTask
NSURLSessionDataDelegate
AppInstallImportAndPolicyTask
AppInstallImportResult
AssetRequestProperties
NSMutableCopying
ODRSpaceReduction
OctaneManager
InAppPurchaseIntentEntity
PushMessage
PredicateValidator
NSPredicateVisitor
TestFlightUploadSubTask
ODRPlatformPolicies
XDCService
IDSServiceDelegate
ODRDeveloperToolsProtocol
ODRDeveloperToolsClient
PersonalizationManager
InAppTransactionTask
AppDoneEntity
LaunchServicesCatalog
LibraryCatalog
LibraryOpen
LibraryQueryEvaluator
SubscriptionEntitlementsCoordinator
SubscriptionRequestInfo
SubscriptionEntitlementsResult
AppUsageSessionEntity
DaemonAdditions
PurgeableAppRequestTask
XDCAppMetadata
ManagedAppService
ASDManagedAppServiceProtocol
TFUploadFeedbackResponse
TFPendingImageUpload
IAPInfoDatabaseSession
InstallAttributionPingbackFetchInfoDatabaseEntity
BetaAppFeedbackEntity
SQLiteStatement
ProcessTerminator
RBSTerminationAssertionObserving
RBSAssertionObserving
InAppDownloadTask
IAPInfoUpdateRequest
InAppPromotionDatabaseStore
ASFSimulateCrash
ExtensionRequestMetadata
ASDEventServiceExtensionRemoteXPCInterface
ASDEventServiceExtensionXPCInterface
EventServiceHost
UpdatableApp
AuthenticateAndSyncTask
FairPlayStreamReader
MetricsHandler
ODRBaseListener
Restrictions
AssetRequest
DiagnosticListener
DiagnosticService
ASDDiagnosticServiceProtocol
XDCProgressMessage
ClipAdditionalDataResult
CallerRequestPresenter
RequestPresenter
InteractiveRequestPresenter
SilentRequestPresenter
_ProtocolDelegate
ASDJobManager
ASDJobManagerClient
JobManagerListener
InstallAttributionDatabaseTransaction
ODRDataSampler
TransactionStore
UpdatesManager
UpdatesControllerInterface
PurchaseHistoryItemsRequest
DiagnosticMessage
FamilyInfoLookupResult
StoreKitRevocationsDatabaseEntity
AIMDownloadEvent
TFUploadFeedbackRequest
SQLitePredicate
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteCompoundPredicate
FetchReceiptTask
DemotedApplication
PromiseObserver
ClipURLSession
CreatePlaceholdersRequestTask
PushService
PushConnectionDelegate
ODRApplicationImportTask
ODRDatabaseChangeset
StoreSinf
XDCMessageHandler
AuthenticationChallenge
ODRMemorySampler
MigratorODRTask
URLRequestProperties
SQLiteEntity
LZMADataConsumer
PushServiceTestFlightConsumer
StoreKitMessagesDatabaseEntity
LibraryQueryPlanner
XDCMessage
PushRawMessage
IAPInfoDAAPResponseDecoder
InstallWatchAppsTask
ExpensiveNetworkEvaluatorTask
InstallSystemAppsTask
RequestThrottlePersistence
ODRMaintenanceTask
OctaneInterface
IAPInfoManager
AppUpdatesDatabaseTransaction
PurchaseHistoryDatabaseStore
TFAppleWatch
PurchaseInfo
InstallAppReviewAppsTask
OcelotManager
ODRManifestValidationMaintenanceTask
AccountLookupRequestTask
ApplicationProgress
DAAPURLRequest
RestoreApplicationsRequestTask
DataStreamReader
PurchaseMetrics
ProgressCache
DetectDuplicateRequestTask
CrossfireService
ASDCrossfireServiceProtocol
PurchaseHistoryItemsDAAPPartialResponse
PurchaseHistoryItemsDAAPResponseDecoder
CachedURLSession
ODRApplicationCleanTask
AppMetrics
MigratorAutoUpdateTask
DuetLaunchEvent
LaunchEventEntity
BetaAppFeedbackMetadataMemoryEntity
Optional
CoordinatorPromiseSpecification
AppUsageDatabaseStore
XDCLaunchAppResponse
LaunchCoordinator
IAPInfoRequestTask
ArcadeService
ASDArcadeServiceProtocol
TFDisplay
JobSchedulerRequestTask
AssetSession
NSURLSessionDataDelegatePrivate
NSURLSessionTaskDelegatePrivate
UpdateMetricsManager
UnfairLock
NSLocking
FamilyInfoLookupTask
ODRDiagnosticsProtocol
ODRDiagnosticsClient
MediaAppAttributes
Bulletin
ASDExtensions
RefreshMIDBasedAppSINFsTask
StoreQueueManager
CampaignTokens
AppMetadata
HashDigest
PurchaseHistoryUpdateRequestContext
NotifyTestFlightClientTask
ForcedUpdatesTask
StoreKitStorefront
LowDataModePromptDialogRequest
StoreItem
MetricsContext
LaunchServicesObserver
RequestThrottleRecord
AppInstallPreambleTask
AppInstallPreambleResponse
PurchaseRequestTask
ODRLaunchServicesObserver
LaunchEvent
AppMetadataEntity
TFDevice
InAppPurchaseIntentDatabaseSession
ASDAppLibraryServiceProtocol
ODPMetricsHandler
LaunchableAppRequestTask
TypeCheckedArrayReader
EvaluatorDownload
OctaneListener
ODRLaunchServicesProtocol
ODRLaunchServicesClient
PowerLogCoordinator
AssetPromise
PurchaseHistoryService
ASDPurchaseHistoryServiceProtocol
RestoreAppInstall
SubscriptionEntitlementsResponse
SQLiteDatabaseStoreDescriptor
AppMetadataEntityPersonalization
ReviewNetworkPolicyTask
ODRApplication
ODRMutableApplication
ASDSoftwareUpdateProtocol
SoftwareUpdateListener
InAppReceiptDatabaseEntity
HandleInvalidReceiptTask
OctaneBag
InAppReceiptPropertiesDatabaseEntity
CoordinatorBuilder
UpdatesService
ASDUpdatesServiceProtocol
RequestThrottle
InstallAttributionManager
AppMetadataInstall
XDCRegisterAppMessage
UpdatesResponse
FetchImageUploadURLsTask
AppInstallPolicy
WriteReceipt
SQLiteCursor
XPCNotificationCenter
CompleteCoordinatorsRequestTask
AppConduit
AppMetricsEventEntity
UpdatesBatchTask
AIMEvent
SQLiteDatabaseStoreMigrator
OwnsCheckTask
OwnsCheckTaskRequestEncoder
InstallEnterpriseAppsTask
InstallAttributionImpressionDatabaseEntity
ODRTagEntity
TimeWindow
MigratorArcadeTask
Device
InstallAttributionService
ASDInstallAttributionServiceProtocol
StoreItemResponse
CellularDataPromptDialogRequest
ExternalManifestRequestTask
PurchaseHistoryDatabaseSession
ODRBundleTagManifest
InAppPurchaseIntentDatabaseStore
AppInstallsDatabaseStore
XDCInstallRequest
LoadInAppReceiptsTask
UserNotificationManager
UNUserNotificationCenterDelegatePrivate
UNUserNotificationCenterDelegate
InstallAttributionDatabaseSession
ASDStoreKitTransactionReceiverProtocol
ASDStoreKitClientProtocol
ASDStoreKitStatusReceiverProtocol
StoreKitServiceListener
SSEventMonitorDelegate
MigratorUpdateHistoryTask
ClipAdditionalDataTask
SwitchAppOwnerTask
SwitchAppOwnerURLRequestEncoder
ManageSubscriptionsPrompter
ApplicationProxy
RepairService
ASDRepairServiceProtocol
LaunchEventSyncMetadata
StoreKitMessagesManager
AppDefaultsManager
AppUsageMetricsEvent
InAppPurchaseIntentDatabaseTransaction
CompleteRestoreCoordinatorsTask
AppInstallPredicates
InstallAttributionPingbackDatabaseEntity
ODRServiceDelegate
AuthorizeMachine
ThermalPressureMonitor
AppInstallsDatabaseSession
DiagnosticClock
ASDTestFlightServiceExtensionRemoteXPCInterface
ASDTestFlightServiceExtensionXPCInterface
ASDExtensionRequestCleanupXPCInterface
TestFlightServiceHost
AppInstallInstallTask
AppInstallInstallResponse
IAPInfoIAPEntity
AppInstallPostambleTask
AppInstallsDatabaseSchema
LoadStoreQueueTask
PurchaseHistoryHideShowRequest
RequestBrokerClient
ASDRequestService
PurchaseService
ASDPurchaseServiceProtocol
AppUsageDatabaseTransaction
ODRDownloadManager
XPCRequestToken
_XPCInternalRequestToken
AppInstallQueue
AppInstallPipeline
InAppDownloadStatus
AssetSessionConfiguration
ConcatenateEnumerator
TransformEnumerator
FilterEnumerator
AppInstallInfo
AnonymousPingTask
PurchaseHistoryDAAPEncoding
MigrationRequestTask
TestFlightExtensionSyncActivity
LogTransactions
AssetSessionCache
AppUpdatesDatabaseSession
FamilyManager
AppMetadataLoader
CodeSignatureVersionRepair
AppStore
OctaneActionContext
DownloadDRM
DownloadSinf
SinfsArray
OctaneClientConnection
ODRDatabaseExternalTransaction
IAPInfoUpdateRequestContext
PostBulletinRequestTask
AppInstall
SQLiteDatabaseStore
InAppPromotionManager
Coordinator
TFApplication
AppEventEntityOcelot
@24@0:8@16
@16@0:8
v32@0:8@16@24
v16@0:8
@"NSMutableDictionary"
@"UnfairLock"
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"SQLiteDatabase"
B32@0:8@16^@24
@32@0:8@16^@24
@"AMSURLResult"32@0:8@"AMSURLResult"16^@24
@"TaskQueue"
@"NSArray"
@32@0:8@16q24
@"ODRApplication"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSURL"16@0:8
@"NSURL"
@"NSString"
@"NSNumber"
@24@0:8@"SQLiteConnection"16
@"SQLiteConnection"16@0:8
@32@0:8@16@24
@36@0:8@16B24@28
v44@0:8@16B24@28@?36
v24@0:8@?16
q24@0:8@16
@32@0:8q16@24
@28@0:8@16B24
v40@0:8@16@24@?32
@"SQLiteConnection"
v40@0:8@16@24^@32
v44@0:8@16@24B32^@36
@"_ProtocolDelegate"
B40@0:8@16@24^@32
B24@0:8^@16
v24@0:8^@16
@"NSSet"
@"NSDictionary"
@40@0:8@16@24q32
q16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"ACAccount"
@"AMSProcessInfo"
@40@0:8@16@24@32
@24@0:8^@16
B32@0:8@"NSArray"16^@24
@"NSArray"24@0:8^@16
B32@0:8Q16^@24
Q24@0:8^@16
@32@0:8@16Q24
@52@0:8Q16@24B32^B36^@44
v20@0:8B16
v24@0:8Q16
@32@0:8@16@?24
v32@0:8@?16@24
v40@0:8@?16@?24@32
@32@0:8@?16@24
@?16@0:8
@"NSMutableArray"
@"NSRecursiveLock"
@"PromiseResult"
@"<TaskScheduler>"
v40@0:8Q16^@24^@32
@24@0:8Q16
q40@0:8*16Q24^@32
q40@0:8r*16Q24^@32
@"NSMutableData"
@"BufferedStreamWriter"
@"BufferedStreamReader"
@"<StreamDelegate>"16@0:8
v24@0:8@"<StreamDelegate>"16
@"NSError"16@0:8
@"BufferedStream"
B40@0:8@16^@24@?32
v32@0:8@16@?24
v32@0:8@"ASDCheckQueueRequestOptions"16@?<v@?B@"NSError">24
v32@0:8@"ASDClaimApplicationsRequestOptions"16@?<v@?B@"NSArray"@"NSError">24
v32@0:8@"ASDManagedApplicationRequestOptions"16@?<v@?B@"NSDictionary"q@"NSError">24
B32@0:8@16@24
v32@0:8@16q24
v32@0:8@"TestFlightServiceHost"16q24
@"TestFlightExtensionSyncActivity"
@"TestFlightServiceHost"
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v40@0:8q16@24@32
@"APSConnection"
@"PushConnectionMessageHistory"
@"<PushConnectionDelegate>"
@24@0:8^{_NSZone=}16
@"NSError"
B40@0:8@16@24@32
i32@0:8@16@24
v24@0:8@"ASDBagKeySetAggregator"16
@"AMSBagKeySet"16@0:8
B32@0:8@"ApplicationProxy"16^@24
@"NSArray"16@0:8
@"<ApplicationRepairDelegate>"16@0:8
v24@0:8@"<ApplicationRepairDelegate>"16
v24@0:8@"NSString"16
B40@0:8@"ApplicationProxy"16@"ASDRepairOptions"24@"NSString"32
@"ApplicationProxy"
@"URLBag"
@"ASDRepairOptions"
@"<ApplicationRepairDelegate>"
d16@0:8
@48@0:8q16q24@32@40
@"PurchaseBatch"
@"PurchaseInfo"
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
@48@0:8@16@24@32^@40
@"IXOwnedDataPromise"
@"<CoordinatorPromiseDataConsumerDelegate>"
@"CoordinatorPromiseProvider"
@"CoordinatorPromiseSpecification"
@"<AssetDataConsumer>"
@24@0:8q16
B24@0:8q16
v48@0:8q16@24@32@40
v32@0:8q16@24
v44@0:8q16@24B32@?36
v24@0:8q16
v36@0:8q16@24B32
@60@0:8q16@24@32q40B48@52
v36@0:8q16B24@28
v28@0:8r*16B24
v52@0:8@16@24B32B36B40@44
@52@0:8@16B24@28@36q44
d24@0:8q16
v36@0:8B16@20@28
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v48@0:8@16@24@32@?40
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSEngagementRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSEngagementResult"@"NSError">40
v32@0:8@"PushService"16@"PushMessage"24
v44@0:8@16B24q28@?36
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResponse"@"NSError">32
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v40@0:8@"ASDPurchase"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResult"@"NSError">32
@"NSHashTable"
@"AMSPurchaseQueue"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"ASDApp"16@?<v@?@"NSError">24
@"ProgressCache"
v24@0:8d16
@"AccountEvent"
q32@0:8@16q24
q40@0:8@16q24@32
q36@0:8@16q24B32
@"NSDictionary"24@0:8@"NSString"16
q32@0:8@"NSString"16q24
q40@0:8@"NSString"16q24@"NSNumber"32
q36@0:8@"NSString"16q24B32
@20@0:8B16
@36@0:8@16q24B32
@44@0:8@16q24B32@36
@72@0:8@16q24@32B40@44B52@56@64
@40@0:8@16@24^@32
@40@0:8q16@24^@32
@48@0:8q16@24@32^@40
@60@0:8@16B24@28q36@44@52
@52@0:8@16q24^Q32B40@44
v44@0:8q16q24q32B40
@"AKAuthorizationController"
@"NSDate"
C16@0:8
@52@0:8@16@24@32B40@44
v36@0:8@16B24@?28
@"<SZExtractor>"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_group>"
@"ZipDataStreamStatus"
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v32@0:8@"AMSEngagementRequest"16@?<v@?@"AMSEngagementResult"@"NSError">24
@"ASFReceipt"
v28@0:8@16C24
@28@0:8C16@20
B28@0:8@16B24
@36@0:8C16@20@28
v40@0:8@16C24C28@32
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@16@?24@32
v48@0:8@16@24@?32@40
@"AppInstallsDatabaseStore"
@"RequestThrottle"
@"NSData"24@0:8^@16
@28@0:8^{__SecTask=}16i24
B36@0:8@16^{__SecTask=}24i32
@52@0:8{?=[8I]}16i48
B32@0:8{_ASDServiceEntitlement=@@}16
^{__SecTask=}
@"NSURLSessionTaskMetrics"
@20@0:8C16
q20@0:8C16
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
{?="expiresTimeMillis"b1}
v32@0:8q16@?24
B24@0:8@"SQLiteConnection"16
v40@0:8@16#24@?32
v32@0:8#16@?24
i16@0:8
v20@0:8i16
@32@0:8@16#24
@"DigestVerifier"
@"ChunkedDigest"
@24@0:8@?16
v32@0:8q16q24
{?=q[16C]q}32@0:8@16^@24
{?=q[16C]q}36@0:8@16B24^@28
v40@0:8q16q24q32
@"AppInstallsDatabaseChangeset"
@"InAppDownloadTask"
B56@0:8r*16Q24*32^Q40^@48
{?="next_in"*"avail_in"Q"total_in"Q"next_out"*"avail_out"Q"total_out"Q"allocator"^{?}"internal"^{lzma_internal_s}"reserved_ptr1"^v"reserved_ptr2"^v"reserved_ptr3"^v"reserved_ptr4"^v"reserved_int1"Q"reserved_int2"Q"reserved_int3"Q"reserved_int4"Q"reserved_enum1"i"reserved_enum2"i}
@"NSObject<OS_os_transaction>"
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
v20@0:8C16
@"NSUUID"
v24@0:8@?<v@?>16
@40@0:8@16^Q24^@32
@52@0:8@16Q24B32^B36^@44
B32@0:8^@16@?24
B40@0:8Q16^@24@?32
v32@0:8Q16@?24
@"NSData"
B32@0:8q16@24
@"ASDRequestResponse"
@"XPCClient"
@"ASDRequestOptions"
@"KeepAlive"
@"NSProgress"
@"AssetPromise"
@"AssetRequestProperties"
@"NSURLRequest"
@"NSURLSession"
@"NSURLSessionTask"
@"AMSNetworkConstraints"
@"ASDCellularIdentity"
@"ASDCellularSettings"
@40@0:8{_OSVersion=qqq}16
{_OSVersion="major"q"minor"q"patch"q}
B32@0:8d16d24
@"<LibraryQueryEvaluator>"
v24@0:8^{__CFBundle=}16
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
v28@0:8@"NSDate"16i24
v28@0:8@"NSUUID"16i24
v28@0:8@"NSURL"16i24
v28@0:8@"NSArray"16i24
v28@0:8@"NSDictionary"16i24
@"SQLiteStatement"
B32@0:8q16@?24
B44@0:8@16@24B32^@36
@64@0:8@16@24@32@40@48^@56
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
@36@0:8@16@24B32
@"NSOrderedSet"
@"XPCRequestToken"
B28@0:8B16@20
B32@0:8@16q24
B44@0:8@16@24@32B40
B36@0:8@16@24B32
@"ODRDatabaseChangeset"
v40@0:8@16d24Q32
v44@0:8B16q20@28@?36
v48@0:8q16Q24@32@?40
v40@0:8Q16@24@?32
v48@0:8@16Q24@32@?40
@"<PurchaseHistoryBagContract>"
@"PurchaseHistoryDatabaseStore"
@28@0:8@16I24
q28@0:8q16B24
@"NSObject<OS_dispatch_source>"
@"<IAPInfoBagContract>"
@"IAPInfoItemsRequestContext"
q60@0:8@16@24B32@36@44^@52
v48@0:8@16@24q32@40
Q40@0:8@16@24^@32
@"UpdatesContext"
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v28@0:8@"CTXPCServiceSubscriptionContext"16i24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatus"16
v24@0:8@"CTTetheringStatus"16
v28@0:8@"CTTetheringStatus"16i24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTServiceDisconnectionStatus"24
v28@0:8@"CTServiceDescriptor"16B24
v48@0:8@16@24@32^v40
@"NWPathEvaluator"
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
@"NetworkEmulation"
@"InAppPurchaseIntentDatabaseStore"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@64@0:8@16@24q32@40@48Q56
@32@0:8{?=QQ}16
v40@0:8Q16Q24@?32
@"NSOutputStream"
B24@0:8@?16
^{sqlite3=}
@"<SQLiteConnectionDelegate>"
@"NSMapTable"
@"SQLiteConnectionOptions"
@"TimeWindow"
B36@0:8B16q20^@28
@"AppInstallLogKey"
v32@0:8@"NSDictionary"16@?<v@?B>24
@"NSXPCConnection"
@"NSMutableSet"
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSAuthenticateRequest"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSDialogRequest"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSEngagementRequest"32@?<v@?@"AMSEngagementResult"@"NSError">40
B40@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"AMSURLSession"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSURLSession"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
B32@0:8@"AMSURLSession"16@"NSError"24
B40@0:8@"AMSURLSession"16@"ACAccount"24@"NSDictionary"32
B32@0:8@"AMSURLSession"16@"NSDictionary"24
@32@0:8i16@20B28
@24@0:8@?<v@?@"NSError">16
@"RequestBrokerClient"
@"<ASDRequestDelegate>"
@"ASDRequest<RequestController>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8^v16Q24
@"ClipDownloadVariant"
@"VariantDescriptor"
v32@0:8@"NSURL"16@?<v@?q@"NSError">24
@"<AMSBagProtocol><PurchaseHistoryBagContract>"
@"PurchaseHistoryUpdateRequestContext"
@"URLRequestProperties"
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
@32@0:8#16@24
f24@0:8@16
Q24@0:8@16
B48@0:8@16@24@32@40
B36@0:8@16B24@28
@"TFPendingImageUpload"
@"TFImageUpload"
v36@0:8@16@24B32
@"AMSBag"
@"NPSDomainAccessor"
@"NPSManager"
{_ASDServiceEntitlement=@@}16@0:8
v32@0:8{_ASDServiceEntitlement=@@}16
{_ASDServiceEntitlement="name"@"NSString""legacyName"@"NSString"}
v40@0:8^@16r^@24q32
@40@0:8q16@24@32
@"ASDPurchaseHistoryApp"
@36@0:8@16i24q28
{fstore="fst_flags"I"fst_posmode"i"fst_offset"q"fst_length"q"fst_bytesalloc"q}
v36@0:8@16q24B32
r*24@0:8q16
@"XPCServiceCatalog"
@"NSXPCListener"
v32@0:8Q16@24
v32@0:8Q16@"NSString"24
v32@0:8@"NSData"16@"NSString"24
v44@0:8B16Q20@28@?36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v44@0:8B16Q20@"NSString"28@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?q>16
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSString">24
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v48@0:8q16Q24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v40@0:8Q16@"NSString"24@?<v@?@"NSError"q>32
v48@0:8q16Q24@"NSString"32@?<v@?@"NSError"B>40
v40@0:8Q16@"NSString"24@?<v@?@"NSError"@"NSString">32
v48@0:8@"NSString"16Q24@"NSString"32@?<v@?@"NSError">40
v40@0:8Q16@24@32
v40@0:8Q16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSNumber"16@"NSArray"24
@32@0:8r*16@24
v32@0:8r*16@24
v36@0:8@"ASDApp"16B24@?<v@?@"NSError">28
@"<RequestPresenter>"
B32@0:8^B16^@24
B32@0:8@"IXOwnedDataPromise"16^@24
@"IXOwnedDataPromise"24@0:8^@16
B32@0:8@"IXPromisedOutOfBandTransfer"16^@24
@"IXPromisedOutOfBandTransfer"24@0:8^@16
B32@0:8@"IXPlaceholder"16^@24
@"IXPlaceholder"24@0:8^@16
B32@0:8@"MIInstallOptions"16^@24
@24@0:8^B16
@"NSError"24@0:8^B16
@52@0:8@16Q24Q32B40^@44
@32@0:8@16B24B28
@40@0:8@16B24B28@32
@"ODRManifest"
@"SZExtractor"
@"<SZExtractorDelegate>"
v32@0:8@"StoreKitStorefront"16@"NSDictionary"24
v32@0:8@"InAppDownloadManager"16@"InAppDownloadStatus"24
v36@0:8@16I24@?28
v24@0:8@"NSNumber"16
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@"NSDictionary"24
v40@0:8@"NSString"16@"<ASDStoreKitTransactionReceiverProtocol>"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@"NSDate"24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSSet"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?>24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSArray"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?B@"NSError">32
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v48@0:8@"NSDictionary"16@"NSString"24@"NSDate"32@?<v@?@"NSError">40
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSString">16
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v36@0:8@"NSData"16I24@?<v@?@"NSData"I@"NSData"I@"NSError">28
v32@0:8Q16@?<v@?@"NSData"I@"NSData"I@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
@36@0:8@16@24i32
v56@0:8@16B24B28@32q40@?48
@"AMSURLSession"
@"NSOperationQueue"
@"StoreKitClient"
@"<ASDStoreKitClientProtocol>"
@20@0:8i16
v20@0:8I16
I16@0:8
{?="desiredUrlTTLMillis"b1"dsid"b1"count"b1}
{?="error"b1}
v32@0:8@16Q24
v40@0:8@16@24Q32
v24@0:8@"IXAppInstallCoordinator"16
v32@0:8@"IXAppInstallCoordinator"16Q24
v32@0:8@"IXAppInstallCoordinator"16@"NSURL"24
v40@0:8@"IXAppInstallCoordinator"16@"NSError"24Q32
v48@0:8@16d24Q32d40
v48@0:8@"IXAppInstallCoordinator"16d24Q32d40
v32@0:8@"IXAppInstallCoordinator"16@"NSError"24
@"IXAppInstallObserver"
@"AppInstallScheduler"
v32@0:8@"<Stream>"16Q24
@"<StreamReader>"
@"LZMADecoder"
@36@0:8@16B24B28B32
@"NSObject<OS_xpc_object>"
@"NSDate"16@0:8
@"<AMSBagProtocol>"
^{__CFBundle=}24@0:8@16
^{__CFDictionary=}24@0:8@16
@32@0:8q16@?24
@"<NSFastEnumeration>"
v44@0:8Q16B24@28@?36
v40@0:8@"NSDictionary"16@"NSNumber"24Q32
v44@0:8Q16B24@"NSString"28@?<v@?@"NSArray"BB@"NSError">36
v32@0:8Q16@?<v@?@"NSArray"B@"NSError">24
v24@0:8@?<v@?@"NSArray"B@"NSError">16
v28@0:8B16@?20
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
v48@0:8@16@24d32@?40
v40@0:8d16@24@32
v32@0:8@"NSURL"16@?<v@?@"NSDictionary">24
v32@0:8@"NSURL"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSSet"16@"NSURL"24d32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSSet"16@"NSURL"24@?<v@?B@"NSDictionary">32
v40@0:8d16@"NSSet"24@"NSURL"32
v40@0:8@"NSSet"16@"NSURL"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8B16@"NSSet"20@"NSURL"28
v48@0:8@16d24@32@?40
@24@0:8r*16
{?="val"[8I]}
@"<ODRClientProtocol>"
@"NSLock"
@"ODRMutableApplication"
i24@0:8^{sqlite3=}16
i24@0:8@16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8q16@?<v@?B@"NSError">24
@32@0:8Q16@24
v32@0:8@"<ApplicationRepair>"16@"NSError"24
v32@0:8@"<ApplicationRepair>"16@"ApplicationProxy"24
@"<ApplicationRepair>"
@"NSMutableOrderedSet"
@32@0:8^@16^@24
@"IXAppInstallCoordinator"
@"AppInstall"
@"AppInstallInfo"
@"AppPackage"
@"AppInstallDownloadResponse"
@48@0:8q16@24@32@40
@64@0:8q16q24@32@40@48@56
v32@0:8Q16q24
@"AssetRequest"
@"AIMDownloadEvent"
B32@0:8@16Q24
@24@0:8*16
@"<Device>"
@40@0:8@16q24@32
v24@0:8B16B20
@"EvaluatorDownload"
{?="errorCode"b1}
@28@0:8@16i24
v24@0:8f16B20
@"AppPurgeCoordinator"
@"<CacheDeletePurgeableProvider>"
@"<IXCoordinatorWithAppAssetPromise>"
@40@0:8Q16Q24@32
f16@0:8
v20@0:8f16
B40@0:8@16^q24^@32
q32@0:8@16^@24
@40@0:8@16q24^@32
@48@0:8@16q24@32^@40
B56@0:8@16@24@32^q40^@48
q40@0:8@16@24^@32
@24@0:8#16
@48@0:8@16@24@32q40
@"<StoreKitBagContract>"
@"<BatterySaverWatcherDelegate>"
@32@0:8Q16q24
@32@0:8Q16@?24
v24@0:8@?<v@?@"<ASDAppStoreServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDArcadeServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDCrossfireServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDClipServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDDiagnosticServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDIAPHistoryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallationServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallAttributionServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppLibraryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDMacDaemonManagedServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDManagedAppServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppMetricsServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDOcelotServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPersonalizationServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseHistoryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDRepairServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDRestoreServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDTestFlightFeedbackServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDUpdatesServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v32@0:8@"NSArray"16@?<v@?>24
v48@0:8@?16{_ASDServiceEntitlement=@@}24@?40
@"Optional"
@"XPCServiceEntitlements"
@48@0:8@16C24C28@32@40
@36@0:8@16C24@28
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"ASDAppEvent"16@?<v@?B@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSArray"@"NSError">24
B24@0:8d16
B32@0:8d16^@24
@"UpdatesResponse"
r*16@0:8
@"NSObject<OS_xpc_object>"16@0:8
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"ASDAppClusterMapping"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
^{__CFString=}24@0:8q16
v40@0:8q16@24@?32
@"<StreamDelegate>"
B40@0:8q16@24@32
@32@0:8q16q24
@40@0:8q16q24@32
B40@0:8r*16Q24^@32
v32@0:8r*16Q24
@"HashDigest"
{?="availableBytes"b1"totalBytes"b1}
@56@0:8q16@24@32@40@48
@"<PushNotificationBagContract>"
@"AMSURLRequestEncoder"
@"AMSAuthenticateResult"
@28@0:8Q16B24
@"AMSBagValue"
@48@0:8@16{_ASDServiceEntitlement=@@}24@?40
@36@0:8@16I24^@28
@40@0:8@16@24Q32
B48@0:8^@16@24^q32^@40
B48@0:8^@16^B24^B32^@40
@"ASDManagedApplicationRequestOptions"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
@"MediaAppAttributes"
@"InstallAttributionDatabaseStore"
q28@0:8B16@20
v44@0:8B16@20^q28^q36
v32@0:8@"RequestProxy"16@?<v@?@"NSError">24
@32@0:8r^v16@24
r^v16@0:8
v32@0:8@16N^i24
@"SQLiteQueryDescriptor"
v24@0:8#16
@"SQLitePredicate"
@"NSPredicate"
@"NSString"24@0:8@"NSString"16
@"NRDevice"
@568@0:8@16@24@32{?=[512c]Q}40@560
{?=[512c]Q}16@0:8
@"NSURLSessionDataTask"
@"Promise"
@"<StreamWriter>"
{?="logKey"[512c]"signpostID"Q}
@"InAppReceiptDatabaseStore"
B32@0:8Q16@24
B24@0:8Q16
@"MigratorConfigurationStore"
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@"AMSBagValue"16@0:8
@"URLBagMemoizedValue"16@0:8
@24@0:8d16
@32@0:8d16@?24
@"IXPromisedOutOfBandTransfer"
@"ODRTagsRequest"
@"AMSPromise"
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"AppInstallImportResult"
@28@0:8B16@20
q32@0:8Q16@24
@40@0:8q16Q24@32
@40@0:8@16Q24@32
@"OctaneBag"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
v32@0:8^Q16Q24
[32B]
@"BetaAppFeedbackMemoryEntity"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v36@0:8@16:24S32
v36@0:8@16S24@28
v44@0:8@16S24@28@?36
v44@0:8@16@24B32@?36
@"IDSService"
@"<XDCServiceDelegate>"
v32@0:8Q16@?<v@?Q@"NSError">24
v32@0:8@16C24C28
@48@0:8@16Q24@32q40
@"AMSBuyParams"
v40@0:8@"NSPredicate"16@"NSSet"24@?<v@?@"NSArray"@"NSError">32
@"<LibraryCatalogObserver>"16@0:8
v24@0:8@"<LibraryCatalogObserver>"16
v40@0:8@16q24@?32
v40@0:8@"ASDApp"16q24@?<v@?q>32
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?q>32
v32@0:8@"ASDApp"16@?<v@?q>24
@"<LibraryResultEnumerator>"32@0:8@"NSPredicate"16^@24
@"<LibraryResultEnumerator>"32@0:8@"NSArray"16^@24
@"<LibraryCatalogObserver>"
@"LibraryQueryPlanner"
v48@0:8Q16@24B32B36@?40
@40@0:8Q16@24^B32
v48@0:8Q16@24@32B40B44
v48@0:8@16@24Q32B40B44
v48@0:8@16Q24@32B40B44
v40@0:8Q16@24B32B36
v40@0:8@16Q24@32
v32@0:8@?16Q24
{?="downloaderID"b1"externalVersionID"b1"itemID"b1"purchaserID"b1"type"b1"containsMessagesExtension"b1"isBeta"b1"isStoreApp"b1"isSystemApp"b1"launchProhibited"b1"skipIfInstalled"b1"suppressDialogs"b1}
v32@0:8@"NSURL"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"NSURL"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"ASDManifestRequest"16@?<v@?@"NSError"@"NSUUID">24
v32@0:8@"ASDVPPRequest"16@?<v@?@"NSError"@"NSString"@"NSNumber"@"NSUUID">24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}
v32@0:8@"RBSAssertion"16@"NSError"24
v24@0:8@"RBSAssertion"16
v24@0:8@"RBSTerminationAssertion"16
@"NSConditionLock"
@"RBSTerminationAssertion"
@"NSTimer"
@"InAppDownloadStatus"
@"InAppDownloadTimeEstimator"
^{_BOMCopier=}
B36@0:8@16^{__CFData=}24B32
@"IAPInfoUpdateRequestContext"
@"ASDExtensionRequest"
@"<ASDEventServiceExtensionRemoteXPCInterface>"
@"ASDInstallationEvent"
v24@0:8@"ASDInstallationEvent"16
@"NSNumber"16@0:8
q44@0:8*16Q24B32^@36
@40@0:8@16Q24d32
v24@0:8@"DiagnosticMessage"16
v24@0:8@"NSXPCListenerEndpoint"16
v32@0:8q16@?<v@?@"NSDictionary">24
v32@0:8q16@?<v@?>24
@"ClipAdditionalData"
@"<XPCNotificationClient>"
@"ThreadSafeDictionary"
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"ASDJobManagerOptions"16@?<v@?B@"NSError"@"NSArray">24
v32@0:8@"NSArray"16@"NSDictionary"24
q24@0:8q16
B36@0:8@16B24^@28
B48@0:8@16@24@32^@40
@"NSCountedSet"
v32@0:8@"XPCRequestToken"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"XPCRequestToken"16@?<v@?@"NSArray">24
v32@0:8@"XPCRequestToken"16@?<v@?q@"NSError">24
v28@0:8B16@?<v@?>20
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?B@"NSArray"@"NSError">32
@"PurchaseHistoryItemsRequestContext"
@"TFAppleWatch"
@"TFApplication"
@"TFDevice"
@"TFFeedback"
{?="desiredTTLMillis"b1"dsid"b1"posixTimestampMillis"b1}
@"SQLiteQuery"
@"<FetchReceiptTaskDelegate>"
@40@0:8@?16@?24@32
B48@0:8@16@24^@32^@40
v32@0:8@"PushConnection"16@"PushRawMessage"24
v40@0:8@"PushConnection"16@"NSData"24Q32
@"PushConnection"
@"AMSPushHandler"
@"PushDiagnostic"
:16@0:8
v24@0:8:16
@"NSURLAuthenticationChallenge"
@"NSByteCountFormatter"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v32@0:8@16@"NSString"24
@"NSSet"16@0:8
@"<PushServiceTestFlightConsumerDelegate>"
@"LibraryExpressionClassifier"
@28@0:8@16S24
S16@0:8
@"XDCDevice"
@"ASDMutableIAPInfo"
B32@0:8@16^B24
@"IAPInfoDatabaseStore"
B64@0:8@16q24@32^q40^B48^@56
B60@0:8q16@24@32@40B48@52
B36@0:8B16d20^@28
@32@0:8d16^@24
B48@0:8B16@20B28d32^@40
v36@0:8@16B24@28
@48@0:8@16@24@32@?40
@"<DAAPRequestDataProvider>"
@"XPCNotificationCenter"
@"AMSMetrics"
@48@0:8Q16@24@32^@40
@56@0:8Q16@24@32@40^@48
v24@0:8@?<v@?q@"NSError">16
{?="heightPixels"b1"widthPixels"b1}
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v40@0:8@16@24q32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
d40@0:8@16@24@32
v44@0:8@16B24d28@?36
v48@0:8@16@24B32B36@?40
v40@0:8q16B24i28@?32
v36@0:8q16i24@?28
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"NSNumber"16@?<v@?>24
v28@0:8B16@?<v@?@"NSString"@"NSError">20
v44@0:8@"NSString"16B24d28@?<v@?@"NSString"@"NSError">36
v48@0:8@"NSURL"16@"NSURL"24B32B36@?<v@?@"NSError">40
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSData"@"NSError">40
v24@0:8@?<v@?@"NSMutableString"@"NSError">16
v40@0:8q16B24i28@?<v@?q@"NSError">32
v36@0:8q16i24@?<v@?@"NSMutableString"@"NSError">28
#24@0:8Q16
Q24@0:8#16
@"JobManagerListener"
@"LaunchServicesObserver"
@"OctaneListener"
@"ODRAppReviewListener"
@"ODRDiagnosticsListener"
@"ODRDevtoolsListener"
@"ODRServiceDelegate"
@"ODRLaunchServicesListener"
@"RequestBroker"
@"SoftwareUpdateListener"
@"StoreQueueListener"
@"XPCServiceBroker"
@"AppMetricsMonitor"
@28@0:8*16I24
@56@0:8@16q24@32@40Q48
@"ASDBundle"
@36@0:8@16Q24B32
v40@0:8@16q24@32
@"StoreAsset"
@"AppUsageInstallHistoryMap"
d24@0:8@16
@"AppInstallPreambleResponse"
@"TFMemoryUsage"
@"TFDisplay"
{?="batteryPercentage"b1"connection"b1"deviceFamily"b1"devicePlatform"b1}
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSPredicate"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
@"<LibraryOpen>"
@"<LibraryProgress>"
@"<LibraryUninstall>"
@28@0:8B16^@20
@"AMSEngagement"
@28@0:8^v16i24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}24@0:8r*16
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v36@0:8B16q20@?28
v40@0:8q16Q24@?32
v32@0:8@"ASDPurchaseHistoryQuery"16@?<v@?@"NSArray"@"NSError">24
v36@0:8B16q20@?<v@?@"NSError">28
v40@0:8q16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8@16^{_NSZone=}24
v24@0:8@?<v@?@"ASDSoftwareUpdateMetrics"@"NSError">16
v24@0:8@?<v@?B@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?B@"NSArray"@"NSError">24
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
@"<UpdatesControllerInterface>"
@40@0:8@16d24@32
@"<Clock>"
@"RequestThrottlePersistence"
d20@0:8i16
i20@0:8i16
q20@0:8i16
C20@0:8i16
@32@0:8d16d24
v32@0:8@"ASDImpressionParamsConfig"16@?<v@?@"NSError">24
v32@0:8@"ASDInstallAttributionParamsConfig"16@?<v@?@"NSError">24
@32@0:8Q16B24B28
@40@0:8@16Q24B32B36
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationSettings"24
v32@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24
@"UNUserNotificationCenter"
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B>32
v40@0:8@"SSEventMonitor"16@"NSString"24@"NSDictionary"32
@"SSEventMonitor"
@"AIMPurchaseEvent"
v56@0:8@16@24@32@40q48
@"LSApplicationRecord"
v32@0:8@"ASDRepairOptions"16@?<v@?B@"NSArray"@"NSError">24
@"StoreKitMessagesDatabaseStore"
@24@0:8^{__CFString=}16
d24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
v28@0:8B16@20
B36@0:8^{__CFString=}16^{__CFString=}24B32
v36@0:8B16^{__CFString=}20^{__CFString=}28
d40@0:8^{__CFString=}16^{__CFString=}24d32
v40@0:8d16^{__CFString=}24^{__CFString=}32
@32@0:8^{__CFString=}16^{__CFString=}24
v32@0:8^v16^{__CFString=}24
B40@0:8@16Q24^@32
B24@0:8^B16
@"<AppInstallPipeline>"
v48@0:8@16q24@32@?40
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v48@0:8@"ASDBundle"16q24@"NSError"32@?<v@?B@"NSError">40
v32@0:8@?16@?24
@"ASDExtensionMonitor"
@"NSExtension"
@"<TestFlightServiceHostDelegate>"
@"AppInstallInstallResponse"
@"PurchaseHistoryHideShowRequestContext"
v40@0:8@"ASDRequest"16@"<ASDRequestDelegate>"24@?<v@?@"<ASDRequestProxy>"@"NSError">32
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResponse"@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResult"@"NSError">24
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
@"<AdoptionManagerInterface>"
@"<PurchaseManagerInterface>"
@40@0:8@16#24^@32
@"XPCServiceClient"
@"NSObject<OS_voucher>"
v32@0:8@"NSOrderedSet"16@"AppInstallsDatabaseTransaction"24
v40@0:8@"NSOrderedSet"16q24@"AppInstallsDatabaseTransaction"32
@"AssetSession"
@"NSEnumerator"
@"AIMInstallEvent"
@"NSOperation"
B48@0:8@16B24B28^B32^@40
B36@0:8B16@20^@28
@36@0:8B16@20^@28
@"<ASDOctaneClientProtocol>"
@"InAppPromotionDatabaseStore"
{?="applicationAdamId"b1"uptimeMillis"b1"platform"b1"isAppClip"b1}
v8@?0
com.apple.odr.appreview
App Review
com.apple.appstored.Environment
storeSystem.db
storeUser.db
Invalid Status Code: %lu
Response is not of type NSHTTPURLResponse
status
Invalid Response Status: %lu
Response is not of type NSDictionary
OnDemandResourcesDaemon Maintenance Queue
-[ODRBackgroundMaintenance startBackgroundMaintenanceOperations]
com.apple.odr.diagnostics
Diagnostics
IAPInfoItemsRequestOperationErrorDomain
Metadata not found
com.apple.appstored
Basejumper does not have assets for this build. Please try again later.
Unable to connect to basejumper. Make sure you are on an internal network or have VPN on-demand enabled.
An unknown error occurred. Make sure you are on an internal network or have VPN on-demand enabled.
 (%@: %ld)
Internal Only
/System/Library/PrivateFrameworks/AppStoreDaemon.framework
systemAppBootstrapInternal
v8@?0
B16@?0@"ODRDatabaseTransaction"8
assetToken
assetUrl
deltasInfo
fromAssetToken
previousExternalVersionId
targets
<null>
assetURL
variantDescriptors
variantDeltas
v32@?0@"SQLiteMemoryEntity"8Q16^B24
DELETE FROM iap_info_iaps WHERE dsid = ? AND adam_id IN (%@);
v32@?0@"NSNumber"8Q16^B24
v16@?0@"<SQLiteBinding>"8
DELETE FROM iap_info_iaps;
DELETE FROM iap_info_iaps WHERE dsid = ?;
INSERT OR REPLACE INTO iap_info_db_properties (value, key) VALUES (?, ?);
atv-headboard-url
contentIds
hideContentIds
com.apple.AppStore
bundle-identifier
kind
md5s
md5-size
sha256
sha256s
sha256-size
data
variantIds
@"<NSFastEnumeration>"16@?0@"NSDictionary"8
@16@?0@"NSString"8
messages-display-image
asset-pack-manifest
software-package
software-receipt
software-SINF
display-image
com.apple.appstored.URLSessionManager
v24@?0@"AMSURLResult"8@"NSError"16
v16@?0@"NSError"8
v16@?0@"AMSLazyPromise"8
v16@?0@"ODRDatabaseSession"8
/var/mobile/Library/Logs/AppleSupport/
general
eventTime
en_US_POSIX
yyyy-MM-dd HH:mm:ss Z
Creating an install coordinator
Coordination creation failed
Coordination creation succeeded
B16@?0@"IXAppInstallCoordinator"8
v16@?0@8
v24@?0@8@"NSError"16
Promises may only be resolved once!
v24@?0@?<v@?@>8@?<v@?@"NSError">16
com.apple.appstored.BufferedStream
invalid symlink at %s
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
-[ODRFileUtilities validateDownloadAtURL:error:]
Could not stat %s: %s
private
-[ODRFileUtilities _traverseDirectory:error:withBlock:]
Error for path %s: %s
fts_close failed for %s with error %s
Invalid or missing reason
com.apple.appstored.private
com.apple.appstored.install-apps
com.apple.itunesstored.private
com.apple.appstored.TestFlightExtensionSyncActivityManager.dispatch
Extension sync intervals changed
Extension available
Extension not available
com.apple.appstored.PushConnection
com.apple.appstored.PushConnectionTaskQueue
%@/%@
Remove
software
null
v24@?0@"SSURLConnectionResponse"8@"NSError"16
automationRunning
buildNumber
buildType
internal
seed
platformType
clientId
xp_amp_app_install
appInstall
%@ %@
uploadUrl
xiCloudVersionIdHeader
PromiseResult must represent either a value or an error
app-clip
auto-download
auto-update
in-app-purchase
manual-update
on-demand-resource
redownload
restore
FP/%@
Repair not available in the simulator
com.apple.AppStoreDaemon
ARCADE_INTERNET_CONNECTION_REQUIRED
ARCADE_CONNECT_TO_THE_INTERNET_TO_OPEN_APP
fairPlayRepairNetworkRequired
Need to present dialog request
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_TITLE
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_MESSAGE
CANCEL
fairPlayRepairFamilyLeave
cancel
REPAIR_FAIRPLAY_FAMILY_LEAVE_APP_STORE
v24@?0@"AMSDialogResult"8@"NSError"16
v40@?0q8@"NSDictionary"16Q24^B32
v24@?0@"NSString"8^B16
 %@: %@
com.apple.appstored.time
External
Push
Trigger
Auto
Pending
%@/%@/%@
Purchase could not be found in the queue
com.apple.appstored.DataPromiseDataConsumer
Promise data consumer creation failed
No processor was set when consuming data
No processor was set when finishing
No data promise was set when preparing
No processor was set when preparing
No processor was set when resetting
No processor was set when suspending
<%@: %p> { %@ }
com.apple.appstored.DataPromiseDataConsumer.delegate
No data promise found to create stream adapter
Received unexpected promise type `%@`
Received unexpected promise type `%ld`
Asset Not Purged
Purged Due to Xcode Request
Purged Due to Low Disk Space
Purged Due to Software Update
Purged Due to App Demotion to Placeholder
Unknown Purge Reason [%lu]
CREATE TABLE IF NOT EXISTS iap_receipts (transaction_id INTEGER, bundle_id TEXT, product_id TEXT, product_type INTEGER, transaction_date DATETIME, revocation_date DATETIME, is_upgraded BOOL, is_finished BOOL, receipt TEXT NOT NULL, PRIMARY KEY (transaction_id, bundle_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_subscription_status (bundle_id TEXT, subscription_group_id TEXT, last_updated DATETIME, renewal_info BLOB, PRIMARY KEY (bundle_id, subscription_group_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_receipts_properties (bundle_id TEXT PRIMARY KEY, revision TEXT, token TEXT, last_updated DATETIME)
storekit_receipts
v16@?0@"SQLiteDatabaseStoreMigrator"8
DROP TABLE IF EXISTS iap_receipts;
DROP TABLE IF EXISTS iap_subscription_status;
DROP TABLE IF EXISTS iap_receipts_properties;
com.apple.appstored.ActivityManager.callout
com.apple.appstored.ActivityManager.dispatch
CrossfirePost
ArcadePostSummary
ArcadePostPayout
ArcadePayoutReset
DNUPost
Restore Retry
Sbsync
TestFlightFeedback
Updates
Optimal Download Window
Daily
Unknown
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.appstored.PostAnalytics
com.apple.appstored.ArcadePostSummary
com.apple.appstored.ArcadePostPO
com.apple.appstored.ArcadeResetPO
com.apple.appstored.PostDnu
com.apple.appstored.RestoreRetry
com.apple.appstored.Sbsync
com.apple.appstored.TestFlightFeedback
com.apple.appstored.AutoUpdates
com.apple.appstored.OptimalDownloadWindow
com.apple.appstored.Daily
v20@?0B8@"NSError"12
Startup
AdPlatformsSetStatusConditions
com.apple.appstored.LegacyActivityManager.dispatch
com.apple.appstored.RecordDnu
v20@?0@"NSString"8B16
Background Task
com.apple.appstored.FavoritesApps
com.apple.appstored.PurchaseManager.dispatch
com.apple.appstored.PurchaseManager.taskQueue
inAppsByAppBundleId
v32@?0@"NSString"8Q16^B24
B16@?0@"AppInstallsDatabaseTransaction"8
No job found with bundle ID: %@
com.apple.appstored.ASDItunesAccountDidChangeNotification
America/Los_Angeles
DSID
active
signout
B16@?0@"AppUsageDatabaseTransaction"8
v16@?0@"AppUsageDatabaseSession"8
q24@?0@8@16
{ events : [
 %@ 
events
{ start: %@ end: %@ accountID: %@/%@ }
Start Date
End Date
Account
com.apple.appstored.AccountEventCoordinator.dispatch
appPurgeBlacklist
appPurgePluginBlacklist
appPurgeGracePeriod
appPurgeVerifyAvailability
ClipReclaimAppDurationDays
ClipReclaimDataDurationDays
ClipReclaimAppSIWADurationDays
ClipReclaimDataSIWADurationDays
com.apple.appstored.offloadEvent
com.apple.appstored.offloadRescue
OffloadedAppCount
RequestedSpace
FreedSpace
com.apple.appstored.offloadStatus
OffloadingIsEnabled
OffloadUnusedApps
~/Library/SpringBoard/IconState.plist
~/Library/SpringBoard/TodayViewArchive.plist
com.apple.appstored.AppPurgeCoordinator.dispatch
OffloadingGracePeriodStartDate
OffloadDenyList
OffloadCutoffDateOverride
OffloadRecentInstallCutoffDate
OffloadPluginDenyList
/private/var
purgeableEvents
launchEvents
None
com.apple.appstored.offloadable
com.apple.appstored.purge
@"NSDictionary"8@?0
com.apple.facetime
com.apple.Bridge
com.apple.tv
com.apple.developer.exposure-notification
com.apple.developer.networking.networkextension
com.apple.Safari.content-blocker
com.apple.Safari.web-extension
v24@?0q8@"NSError"16
lockup
v24@?0Q8@"NSError"16
Requested by %@
In app deny list
Has deny list extension(s) [%@]
Has deny list protocol extension(s) [%@]
Is within grace period with %ld extension(s)
Has watch app
Last extension launch %@ outside window cutoff %@
Last launch %@ outside window cutoff %@
Registered date %@ greater than recent install cuttoff %@
Registered date %@ less than recent install cuttoff %@
Usage unknown within grace period
com.apple.appstored.purge.%@
[Offloading] Offloaded bundleID: %@ reason: %@
diskUsage
order
today
iconLists
elementType
widget
TodayGroup
containerBundleIdentifier
bundleIdentifier
{ id: %@ matchType: %ld lastLaunched: %@ lasExtensionLaunch: %@ }
{ start: %@ end: %@ account: %@/%@  type: %ld }
launch_event_sync_metadata
last_duet_sync
spotlight_migrated_date
timestamp
current_apps_crossfire
app_install_remote
destination_id
external_id
metadata
v20@?0@"NSError"8B16
No client available to handled authenticate request
No client available to handled server dialog
No client available to handle engagement request
com.apple.PersonalizationManager.setupFollowingMigration
com.apple.appstored.CrossfireManager.switchMetrics
External request
User Request
DELETE FROM current_apps_crossfire;
DELETE FROM app_events_crossfire where is_temporary = 1;
Invalid context
Invalid context to get crossfire events
Post skipped for crossfire interval
Post Completed
Nothing to Post
DELETE FROM app_events_crossfire;
crossfireEnabled
com.apple.appstored.CrossfireManager.callout
com.apple.appstored.CrossfireManager.dispatch
v24@?0@"ASDJobActivity"8^B16
Not available in the simulator
com.apple.appstored.InstallationService
throttle
plist
v16@?0@"NSNotification"8
Install
(%@)
revision-number=%u&query=%@
UPDATE promoted_iaps SET promo_order = -1 WHERE bundle_id = ?;
DELETE FROM promoted_iaps WHERE bundle_id = ?;
INSERT INTO promoted_iaps (bundle_id, product_id, promo_order, visibility) VALUES (?1, ?2, coalesce(?3, (SELECT promo_order FROM promoted_iaps WHERE bundle_id = ?1 AND product_id = ?2), -1), coalesce(?4, (SELECT visibility FROM promoted_iaps WHERE bundle_id = ?1 AND product_id = ?2), -1));
app_events_personalization
CREATE TABLE IF NOT EXISTS storekit_messages (dsid INTEGER, bundle_id TEXT, status INTEGER, UNIQUE(dsid, bundle_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS storekit_revocations (dsid INTEGER, bundle_id TEXT, product_id TEXT, UNIQUE(dsid, bundle_id, product_id) ON CONFLICT REPLACE);
storekit_messages
refSource
refType
Crash
Launches
Uninstall
Qualifying Activity
Clip View
%@:%ld:%ld:%lld:%@
assetpack
mobile
%@-%@
bundleId
externalVersionId
is32bitOnly
offers
is32BitOnly
@16@?0@"NSDictionary"8
B16@?0@"MediaAppOffer"8
v32@?0q8Q16^B24
v16@?0@"AppInstallsDatabaseSession"8
uploadUrls
expiresTimeMillis
UserInfo
com.apple.distnoted.matching
com.apple.notifyd.matching
assets
buyParams
price
size
app_events_crossfire
com.apple.appstored.SQLiteDatabase
schema_version
B8@?0
_SQLiteDispatchQueueTag
com.apple.appstored.DecryptDataConsumer
No processor was set when truncating
identifier
phase
import
state
Canceled
none
Install did not exist
CREATE TABLE IF NOT EXISTS odr_asset_pack (pid INTEGER, bundle_key TEXT, bundle_id TEXT, chunk_size INTEGER, download_identifier INTEGER DEFAULT 0, download_priority REAL, download_request_uuids JSON, effective_always_preserve INTEGER DEFAULT 0, effective_preservation_priority INTEGER DEFAULT 0, hash_array JSON, known_content_hashes JSON, file_size INTEGER, last_used_date DATETIME, local_url TEXT, manifest_id INTEGER, md5 TEXT, pin_count INTEGER DEFAULT 0, primary_content_hash JSON, purgeable INTEGER DEFAULT 1, purge_reason INTEGER, sha TEXT, streamable INTEGER DEFAULT 0, source_url TEXT, timestamp DATETIME DEFAULT (timestamp()), uncompressed_size INTEGER, PRIMARY KEY(pid), UNIQUE (bundle_key) ON CONFLICT REPLACE);
CREATE INDEX IF NOT EXISTS odr_asset_pack_bundle_key ON odr_asset_pack(bundle_key);
CREATE TABLE IF NOT EXISTS odr_asset_download (pid INTEGER, bundle_id TEXT, bundle_key TEXT, coordinator_id UUID, download_size INTEGER, is_paused INTEGER, source_url TEXT, type INTEGER, unique_key TEXT, PRIMARY KEY(pid), UNIQUE (unique_key) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS odr_manifest (pid INTEGER, bundle_id TEXT, evid INTEGER, is_store_based INTEGER, item_id TEXT, last_modification_date DATETIME DEFAULT (timestamp()), local_cache_allowed INTEGER, thinning_variant TEXT, storage_id TEXT, version TEXT, PRIMARY KEY(pid), UNIQUE(item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS odr_tag (pid INTEGER, always_preserved INTEGER DEFAULT 0, bundle_id TEXT, bundle_key TEXT, name TEXT, preservation_priority REAL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY(pid)); 
on_demand_resources
ALTER TABLE odr_asset_download ADD COLUMN coordinator_id UUID;
ALTER TABLE odr_asset_download ADD COLUMN is_paused INTEGER;
ALTER TABLE odr_asset_download ADD COLUMN type INTEGER;
DROP TABLE odr_work;
DROP TABLE odr_fake_work;
ALTER TABLE odr_asset_download ADD COLUMN download_size INTEGER;
DROP TABLE odr_download;
com.apple.appstored.LZMADecoder
RK/%@
Not available on the simulator
%@ - RefetchKeybag: No iTunes account available
%@ - RefetchKeybag: New account from store metadata
Keybag
AUTHORIZE_SIGN_IN_TO_LAUNCH_MESSAGE_%@
AUTHORIZE_SIGN_IN_TITLE
AUTHORIZE_SIGN_IN_SIGN_IN_BUTTON
Dialog request failed without an error
User canceled dialog request
Authenticate result didn't contain an account
v24@?0@"AMSAuthenticateResult"8@"NSError"16
????????
%@][%@
Passing an intent of 'ASDCoordinatorIntentUnknown' is not supported.
Don't know how to find coordinator for bundle ID: %@ with intent: %lu
Block must not be nil
B24@?0@"IXAppInstallCoordinator"8@"NSError"16
asset-info
file-size
chunks
chunkSize
clearHashes
sinfs
sinf
dpInfo
uncompressedSize
compressionInfo
compressionMethod
isExternallyCompressed
lzma
archiveSize
digest
chunk
hashes
dpinfo
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_URGENCY
v16@?0r^{__CFDictionary=}8
localhost
HEAD
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
keybag
com.apple.appstored.URLResponseDecoder
metadata.bundle-identifier
metadata.bundle-version
metadata.has-messages-extension
metadata.kind
metadata.launch-prohibited
metadata.platform-identifier
metadata.subtitle
metadata.title
thinned-assets
@"<NSCopying>"16@?0@"UPPManifestAsset"8
v32@?0@"UPPManifestAsset"8Q16^B24
com.apple.platform.iphoneos
com.apple.platform.watchos
com.apple.odr.devtools
Developer Tools
.%lu
itms-apps://arcadeSeeAllGames
Arcade/%@
Arcade
Timed out before doing sbsync
ARCADE_SUBSCRIPTION_EXPIRED
ARCADE_VERIFY_SUBSCRIPTION
{ id: %@ usage: %@ reason: %@ }
bundleID
storeItemID
%@: %@
app_cluster_mappings
bundle_id
cluster_id
cluster_version
item_id
launches_weight
usage_weight
i16@?0^B8
v32@?0@"SQLiteCursor"8@"NSError"16^B24
PRAGMA table_info(%@);
name
v24@?0@"SQLiteQueryResults"8@"NSError"16
PRAGMA user_version;
SELECT name FROM sqlite_master where name = '%@'
PRAGMA user_version = %lld;
v24@?0@"BSProcessHandle"8@"NSError"16
Launching too fast, throttling request
app_updates
current_version_release_date
device_families
install_date
is_background
is_code_signature_update
is_offloaded
is_per_device
metrics_data
purchase_id
release_date
software_platform
store_item_data
store_item_id
store_software_version_id
update_state
is_app_clip
requires_rosetta
runs_on_apple_silicon
runs_on_intel
Invalid Manifest URL
No URL provided for request from client
Invalid manifest URL
The manifest URL isn't external
Cannot load non-https manifest URL
B16@?0@"UPPManifestAsset"8
v32@?0@"NSString"8@"NSArray"16^B24
Invalid state
Must uninstall existing app
Invalid manifest
Invalid kind for iOS platform manifest
title required for iOS platform manifest
bundle-identifier required for iOS platform manifest
Failed to encode metadata from manifest
asclient
Manifest resulted in no assets imported
Not compatible with this platform: %@
No manifest data received
Provided hash did not match
Manifest could not be parsed
User canceled confirmation
https
UPPManifestErrorUserInfoKeyExistingName
UPPManifestErrorUserInfoKeyManifestName
download-manifest
action
itms-services
DELETE FROM odr_tag WHERE bundle_id = ?
UPDATE odr_asset_pack SET pin_count = 0, purgeable = 1 WHERE bundle_id = ?
com.apple.AppStoreFoundation.PurchaseHistoryManager
com.apple.appstoredaemon.PurchaseHistoryManager.query
v16@?0@"PurchaseHistoryDatabaseSession"8
daap.databasesongs
dmap.listing
dmap.deletedidlisting
dmap.listingitem
com.apple.itunes.item-flavor-listing
com.apple.itunes.bundle-identifier
com.apple.itunes.store.software-content-rating
daap.songdatepurchased
daap.songartist
com.apple.itunes.store.family-shareable
com.apple.itunes.store.first-party-updatable
com.apple.itunes.store.has-messages-extension
dmap.itemhidden
com.apple.itunes.store.is-hidden-from-springboard
com.apple.itunes.cloud-artwork-template-url
com.apple.itunes.store.software-is-32-bit-only
com.apple.itunes.store.is-preorder
com.apple.itunes.long-item-name
com.apple.itunes.store.oval-artwork-url
com.apple.itunes.store.preflight-url
com.apple.itunes.store.product-url
com.apple.itunes.item-redownload-param-2
com.apple.itunes.store.app-required-capabilities-listing
com.apple.itunes.store.app-required-capabilities
com.apple.itunes.itms-songid
com.apple.itunes.supported-products
com.apple.itunes.cloud-purchased-token
dmap.longitemid
dmap.status
dmap.updatetype
dmap.serverrevision
com.apple.itunes.itms-genreid
daap.songgenre
com.apple.itunes.store.watch-app-delivered-in-ios-app
com.apple.itunes.store.watch-app-runs-independently
com.apple.itunes.store.watch-app-watch-only
com.apple.itunes.cloud-artwork-supports-layered-image
com.apple.itunes.cloud-artwork-has-p3
dmap.itemname
com.apple.itunes.circular-artwork-template-url
com.apple.itunes.store.opted-in-for-mac-os-eligibility
com.apple.itunes.store.currently-opted-in-for-mac-os-eligibility
com.apple.itunes.extended-media-kind
ODRPurgeAssetMediumUrgencyCutoff
ODRDeviceSpaceCushion
-[ODRManager checkAndRequestRequiredSpaceForRequest:]
B16@?0@"NSURLQueryItem"8
accessKey
12345_54321
+[ODRManager isAppRunning:]
Available Space : %@
ODR Library : %@
Asset Packs : %@
Database    : %@
Active Download Requests
Download: %@
Log Key : %@
Bundle ID : %@
Source URL : %@
Download Path : %@
Destination Path : %@
Is Streamable: %@
Priority : %f
Is Discretionary : %@
Duplicate count : %ld
%@ completed
Progress: %@
No Download Requests Active
@16@?0@"ODRClient"8
v24@?0@"ODRAssetPack"8^B16
@"AppInstallPolicy"20@?0B8@"AppInstallPolicy"12
Purchase
v32@?0@"StoreItem"8Q16^B24
Missing Required SINF
An unexpected installation failure occurred.
Bundle ID: %@
Item ID: %@
External Version: %@
@"NSString"8@?0
v24@?0@"NSArray"8@"NSError"16
databases/%ld/items
CREATE TABLE IF NOT EXISTS iap_info_iaps (adam_id INTEGER, app_adam_id INTEGER, purchase_date DATETIME, last_modified_date DATETIME, expiration_date DATETIME, type INTEGER, dsid INTEGER, pid INTEGER PRIMARY KEY, intro_offer_status INTEGER, sub_family_id TEXT, auto_renew_status INTEGER, UNIQUE(dsid, adam_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_info_db_properties (key TEXT PRIMARY KEY, value TEXT)
iap_info
ALTER TABLE iap_info_iaps ADD COLUMN auto_renew_status INTEGER;
DROP TABLE iap_info_iaps;
DROP TABLE iap_info_db_properties;
v24@?0@"ASDPurchaseResponse"8@"NSError"16
v16@?0@"AppUpdateMemoryEntity"8
v16@?0@"AppUpdatesDatabaseSession"8
v16@?0@"ASDPurchaseResponse"8
v32@?0@"NSNumber"8@"NSArray"16^B24
odr_asset_download
bundle_key
coordinator_id
download_size
is_paused
source_url
type
unique_key
{ bundleID: %@ clusterID: %@ clusterVersion: %@ itemID: %@ launches weight: %@ usage weight: %@}
%@:%@
com.apple.appstored.NetworkMonitor
path
v12@?0i8
v24@?0@"CTDataStatus"8@"NSError"16
NetworkStateDidChangeNotification
other
wifi
cellular
wired ethernet
loopback
unknown (%ld)
B16@?0@"InAppPurchaseIntentDatabaseTransaction"8
v16@?0@"InAppPurchaseIntentDatabaseSession"8
{ bundleID: %@ sessionReporterKey: %@ lastRefresh: %@ expired: %d }
device
devices
os-version
osVersion
universal
%ld:%@:%@
<VariantDescriptor %p>: {%@}
@16@?0@"VariantDescriptor"8
q24@?0@"VariantDescriptor"8@"VariantDescriptor"16
Universal
<VariantDescriptor %p>: {Universal}
%02x
1.2.11
VPP/%@
Migrating VPP SINF
Migrating VPP SINF completed
odr_app_map
bundle_path
Please provide one or more restore items to restore
failed-items
customerMessage
item-id
failureType
OSBuildType
ForceAppDRMMode
device-name
guid
kbsync
store-front-id
software-external-version-identifier
ownerDsid
items
serial-number
text/xml
SP_%@
SAVEPOINT %@
RELEASE SAVEPOINT %@
ROLLBACK TRANSACTION TO SAVEPOINT %@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
SELECT name FROM sqlite_master where name = ?
BEGIN DEFERRED TRANSACTION
Statement from a different connection
com.apple.appstored.AnalyticsEvent
AnalyticsEventAction
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ? AND locker_item_id IN (%@);
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ?;
INSERT OR REPLACE INTO purchase_history_db_properties (value, key) VALUES (?, ?);
No update found
Took too long to re-purchase update
until
com.apple.appstored.StoreKit.ClientOverride
StoreDemoMode
com.apple.demo-settings
Xcode
%@%@
StoreKit
receipt
iOSAppOnMac
SK%@:%@:%@/%@/%@
email
screenshots
comment
incidentId
%08X
%@: count %lu exceeds available length: %lu
attributes
appContentRatingsBySystem
appsApple
rank
appName
artistName
platformAttributes
appBundleId
variantsInfo
relationships
appID
externalVersionID
parentBundleID
ratingLabel
ratingRank
variant
com.apple.appstored.AppStoreService
Could not find App Store
AppStore
databases/%ld/update
v24@?0@"ACAccount"8@"NSError"16
Purchase History Update
responsibleClientID
serverDialogID
eventCategory
summary
PurchaseHistoryErrorDomain
PurchaseHistoryRequestOperationErrorDomain
asd-notification-default
app_events_ocelot_payout
@"AMSPromise"16@?0@"AMSURLRequest"8
v32@?0@"NSString"8@"NSString"16^B24
current_app_installs
clip_affiliate_token
clip_campaign
clip_campaign_token
clip_provider_token
clip_ref_source
clip_ref_type
clip_third_party_with_no_app_referrer
v12@?0B8
Silent authenticate attempt
Loud authenticate attempt
downloadProduct
GAME
iap_subscription_status
last_updated
renewal_info
subscription_group_id
isExecuting
isFinished
com.apple.appstored.ArcadeCoordinator.dispatch
badgeId
enabled
metrics
badging
hardwareOfferIDs
Push Connection - TestFlight
Push Connection - App Store
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
x-icloud-versionid
image/jpeg
Successfully uploaded image to %@ for %@ but failed to find the versionid header
Failed to upload the image for %@
appstored
ActiveDSID
AutoSettingsData
com.apple.appstored.NanoSettingsStateChanged
WatchSettingsManagerSettingsChangedExternallyNotification
com.apple.appstored.WatchSettingsManager.callout
com.apple.appstored.WatchSettingsManager.dispatch
enabled-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/enabledMediaTypes
register-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/registerMediaTypes
promoted_iaps
product_id
visibility
promo_order
fsEntitlements
com.apple.appstored.DeviceStateMonitor
appstored.run-once
DeviceStateDidChangeNotification
v32@?0@"NSString"8@16^B24
%@: %lld
ODRPreallocatedFileException
Failed to create preallocation file with error %d.
Failed to preallocate file.
com.apple.ondemandresources.ODRTaskQueue.managementQueue
com.apple.ondemandresources.ODRTaskQueue.%sQueue
interactive
initiated
utility
background
default
com.apple.appstored.XPCServiceBroker
-[StoreKitTestingService buyProductWithID:bundleID:completion:]
-[StoreKitTestingService changeAutoRenewStatus:transactionID:bundleID:completion:]
-[StoreKitTestingService clearOverridesForBundleID:completion:]
-[StoreKitTestingService completeAskToBuyRequestWithResponse:transactionID:bundleID:completion:]
-[StoreKitTestingService deleteAllTransactionsForBundleID:completion:]
-[StoreKitTestingService expireSubscriptionWithProductID:bundleID:completion:]
-[StoreKitTestingService forceRenewalOfSubscriptionWithProductID:bundleID:completion:]
-[StoreKitTestingService getStorefrontForBundleID:completion:]
-[StoreKitTestingService getActivePortWithCompletion:]
-[StoreKitTestingService getTransactionDataForBundleID:completion:]
-[StoreKitTestingService performAction:transactionID:bundleID:completion:]
-[StoreKitTestingService removeConfigurationForBundleID:completion:]
-[StoreKitTestingService saveSigningData:forBundleID:completion:]
-[StoreKitTestingService saveConfigurationData:forBundleID:completion:]
-[StoreKitTestingService startObservingTransactionsForBundleID:completion:]
-[StoreKitTestingService getIntegerValueForIdentifier:forBundleID:completion:]
-[StoreKitTestingService setIntegerValue:forIdentifier:forBundleID:completion:]
-[StoreKitTestingService getStringValueForIdentifier:forBundleID:completion:]
-[StoreKitTestingService setStringValue:forIdentifier:forBundleID:completion:]
-[StoreKitTestingService setStorefront:forBundleID:completion:]
-[StoreKitTestingService refreshQueueForBundleId:completion:]
-[StoreKitTestingService revokeEntitlementsForProductIdentifiers:forBundleId:completion:]
-[StoreKitTestingService removeTransactionIdentifiersFromCache:forBundleIdentifier:]
A bundle ID is required
The requested action is invalid for this application
install_attribution_params
app_adam_id
ad_network_id
campaign_id
impression_id
attribution_signature
source_app_adam_id
fidelity_type
version
local_timestamp
No bundle ID was specified
ad-network-id
adam-id
campaign-id
impression-id
origin-adam-id
signature
fidelity-type
hash
label
strategy
com.apple.appstored.RequestTag
Passing an intent of 'lib_IXCoordinatorIntentAny' is not supported.
Coordinator identifier was invalid
Coordinator identifier was '%@' but expected '%@'
Feedback
`%@` does not support setPreparationPromise:error:
Responsible client was `%lu`
`%@` does not support setInitialODRAssetPromises:error:
fake-promise
`%@` does not support setUserDataPromise:error:
security-promise
`%@` does not support setDeviceSecurityPromise:error:
Failure reason was not specified
`%@` does not support appQuitPromiseWithError:
`%@` does not support deviceSecurityPromiseWithError:error:
`%@` does not support setTargetGizmoPairingID:error:
`%@` does not support setImportance:error:
`%@` does not support setAppAssetPromise:error:
`%@` does not support setInstallOptions:error:
`%@` does not support setAppQuitPromise:error:
<%@: %p> { coordinatorID = %@; bundleID = %@ }
Initiating
Updating
RestoringDemoted
Restoring
Promoting
Watch
Unknown (%lu)
app_package
archive_type
blocked
bytes_offset
bytes_total
clear_hash_array
compression
data_promise_id
disk_usage
dp_info
hash_array
hash_size
hash_type
initial_odr_size
locate_asset_cache
odr_manifest_url
package_type
package_url
parent_id
provisioning_profiles
request_count
streaming_zip
variant_id
did-win
send-conversion-value
transaction-id
/.well-known/skadnetwork/report-attribution/
https://
true
ViewThrough
Click
com.apple.advp
adamId
betaExternalVersionId
bundleShortVersionId
bundleVersionId
serial-no
thinningVariant
error
message
Invalid response body
Error message: %@, Correlation ID: %@
Error fetching manifest, invalid response received: %@
Failed to create the body for the manifest request
AMSServerErrorCode
clientAPIVersion
com.apple.storekit.client-override
com.apple.storekit.request-data
com.apple.developer.storekit.request-data
NSAdvertisingAttributionReportEndpoint
%@(%ld)
In-app purchases not allowed in App Clip
v24@?0@"NSDictionary"8@"NSError"16
appAdamId
No transactions in response
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
MICRO_PAYMENTS_RESTRICTED_TITLE
MICRO_PAYMENTS_RESTRICTED_BODY
Payment has no identifier or quantity
Payment has request data but client is not entitled
Operation Canceled
In-app purchases not allowed on this device
expired
revoked
useAppStoreDaemon
transactionId
isSandbox
v24@?0@"AMSEngagementResult"8@"NSError"16
storekitinitiated
context
%lld
AMSEngagementPresented
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"NSArray"8
v16@?0@"NSURL"8
This API is not supported on the simulator
com.apple.developer.arcade-operations
itms-ui
pbid
paid
offercodes
Info.plist
%@.%@
CREATE TABLE IF NOT EXISTS install_attribution_impression (app_adam_id INTEGER, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, source_app_adam_id INTEGER, timestamp INTEGER, attribution_signature TEXT, version TEXT, local_timestamp INTEGER, fidelity_type INTEGER, source_app_bundle_id INTEGER, process_name TEXT, UNIQUE(app_adam_id, source_app_adam_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS install_attribution_params (app_adam_id INTEGER, ad_network_id TEXT, campaign_id INTEGER, impression_id TEXT, timestamp INTEGER, attribution_signature TEXT, source_app_adam_id INTEGER, version TEXT, local_timestamp INTEGER, fidelity_type INTEGER, UNIQUE(app_adam_id, ad_network_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS install_attribution_pingback_fetch_info (app_adam_id INTEGER, fetch_pingback_url TEXT, retry_count INTEGER, UNIQUE(app_adam_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS install_attribution_pingbacks (app_adam_id INTEGER, ad_network_id TEXT, campaign_id INTEGER, transaction_id TEXT, attribution_signature TEXT, source_app_adam_id INTEGER, conversion_value INTEGER, conversion_value_timestamp INTEGER, should_send_conversion_value INTEGER, pingback_url TEXT, redownload INTEGER, registered INTEGER, retry_count INTEGER, retry_timestamp INTEGER, version TEXT, local_timestamp INTEGER, fidelity_type INTEGER, is_winning_pingback INTEGER DEFAULT 1, is_developer_pingback INTEGER DEFAULT 0, UNIQUE(transaction_id, is_developer_pingback) ON CONFLICT REPLACE);
install_attribution
DROP TABLE install_attribution_params;
DROP TABLE install_attribution_pingbacks;
DROP TABLE install_attribution_impression;
SELECT * from install_attribution_params;
v32@?0@8Q16^B24
SELECT * from install_attribution_pingbacks;
yyyy-MM-dd HH:mm:ss
yyyy-MM-dd
PRAGMA user_version = 1;
CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));
SELECT schema_version FROM schema_version WHERE schema_name = ?
PRAGMA table_info(%@)
INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)
com.apple.ondemandd.LaunchServices
Launch Services
Keychain failed to return value (error %d): %@
Keychain failed to return value (error %d)
v24@?0^v8Q16
App Store User Data Encryption
SecItemCopyMatching succeeded with empty results
com.apple.appstored.encryption
v32@?0@"MigratorConfiguration"8Q16^B24
v32@?0@"NSString"8@"MigratorConfiguration"16^B24
odr_asset_pack
chunk_size
download_identifier
download_priority
download_request_uuids
effective_always_preserve
effective_preservation_priority
file_size
known_content_hashes
last_used_date
local_url
pin_count
primary_content_hash
purgeable
purge_reason
streamable
uncompressed_size
dsid
count
contentType
desiredUrlTTLMillis
?&%+=;
%@=%@
&%@=%@
com.apple.appstored.AccountStore
AccountStorePrimaryAccountDidChange
AccountDidChangePreviousActiveDSID
externalIDStrings
com.apple.StorageSettings.AppMayUninstall
com.apple.appstored.AppInstallObserver
com.apple.appstored.AppInstallObserver.policyQueue
com.apple.appstored.installcoordination
B16@?0@"NSError"8
com.apple.frontboard.app-library
SSHTTPArchiveShouldSaveToDiskDecompressedNotification
SINF Mismatch Error
Installation details:
Error: %@
Store DSID: %@
Store Item ID: %@
Store Version ID: %@
Bundle ID: %@
Installed Version ID: %llu
Installed Variant ID: %@
PackageType: %@
PackageBlocked: %@
PackageVariant: %@
PackageURL: %@
SINF: %@
DPInfo: %@
v16@?0@"AppInstallPolicy"8
apps
bvrs
Claim/%@
Claim
CLAIM_AUTHENTICATION_MESSAGE_NO_ACCOUNT
No active account to claim apps with
CLAIM_AUTHENTICATION_TITLE
CLAIM_AUTHENTICATION_MESSAGE_FORMAT_%@
CLAIM_AUTHENTICATION_CANCEL_BUTTON
CLAIM_AUTHENTICATION_SIGN_IN_BUTTON
Need to present authentication request
User declined request to authenticate
com.apple
Need to present server dialog
com.apple.appstoreagent
askToBuy
firstName
ICloudDsid
accountName
ITunesPreferredDsid
ITunesPreferredAccountName
lastName
sharingPurchases
iCloudDSID
iCloudUsername
isCurrentSignedInUser
false
iTunesDSID
iTunesUsername
isAskToBuyEnabled
isSharingPurchases
com.apple.AppStoreFoundation.startup
v32@?0@"NSArray"8B16B20@"NSError"24
v28@?0@"NSArray"8B16@"NSError"20
IAPHistory
com.apple.appstored.iap-info
%@: {type = %ld; DSID = %@}
uuid
bundleKey
downloadPriority
fileSize
knownContentHashes
primaryContentHash
isStreamable
Bundle Key: %@ Bundle ID: %@
bytes_to_hash
application-identifier
Unknown Client
No storage ID found in manifest for bundle ID %@
No manifest found for bundle ID %@
Application handshake failed with no application bundle ID. No sandbox extensions will be granted.
-[ODRClient tagStateInBundle:completionHandler:]
InvalidTag
Request for resources was cancelled.
v32@?0q8@"NSURL"16@"NSError"24
v16@?0Q8
v16@?0q8
v16@?0@"ODRAssetDownloadResponse"8
com.apple.odr-assets
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
account_events
account_id
alt_dsid
apple_id
active_end_time
active_start_time
event_type
Content-Type
Unable to determine account for content restore. Requested account: %@
Token failure (%@)
Metadata / Error for this item is missing in server response
Restore Batch
Unsupported 32-Bit application
Incompatible application
Missing required SINF
itemID is missing
Failed to find URL for feedback upload: %@
An error occurred submitting the feedback
WI_FI
MOBILE_DATA
WIRE
NONE
com.apple.appstored.AppMetricsService
AppMetrics
com.apple.appstoredaemon.PurchaseHistoryManager.update
@"Promise"16@?0@"NSNumber"8
v24@?0@"NSNumber"8@"NSError"16
B16@?0@"PurchaseHistoryDatabaseTransaction"8
com.apple.appstored.PurchaseHistoryDatabaseUpdated
PC%@/%@
PN%@/%@
@"Promise"16@?0@"NSData"8
v24@?0@"NSData"8@"NSError"16
purchases page
hide/show
account changed
push notification
periodic refresh
purchase completed
com.apple.appstored.RepairRequest
deviceModel
updatesVersion
averageTimeBetweenPolls
lastPollDate
meanTimeToDiscovery
meanTimeToDownload
meanTimeToInstall
meanTimeToTransaction
autoUpdateMetrics
{ meanToDiscover: %f meanToTransaction: %f meanToDownload: %f meanToInstall: %f averageTimeBetweenPolls: %f }
BuildVersion
com.apple.appstored.JobManagerClient
genre
genreId
No URL was specified for package `%lld`
Restore metadata re-lookup for accounts
v16@?0@"LSApplicationRecord"8
B16@?0@"LSApplicationRecord"8
itemId
local-cache-allowed
resources
softwareVersionExternalIdentifier
Environment: %@
      Token: %@
   Messages:
         - %@
   Messages: <none>
AppBundleID
_DownloadSize
_IsZipStreamable
_Measurement
_StartOfDataRange
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
An unknown failure occured, canceling batch
An unknown failure occured, canceling purchase
Cannot mix machine based and non-machine based purchases
MobileBackup
RestoreOnCellular
com.apple.appstored.RestoreService
Invalid internal state encountered - please file a radar
Restore
CDNUUID
beta_app_info
bundle_short_version
bundle_version
expiration_date
feedback_enabled
has_shared_screenshot_feedback
icon_url_template
last_seen_date
launch_screen_enabled
localized_display_names
platform
primary_locale
what_to_test
No active account
content-type
application/json
Error decoding object
Attempted to decode receipt response
Missing required fields
Subscription status response missing data
com.apple.appstored.TaskQueue.networkQueue
com.apple.appstored.TaskQueue
environment
token
messages
com.apple.RestoreManager.dispatch
Startup with Active Restores
Device Based VPP app must be restored by MDM server that installed it.
Unable to find account with downloader: %@ purchaser: %@ alt-dsid: %@
Unable to find account with downloader: %@ purchaser: %@
Unknown hard failure
Please sign as %@ to restore apps
appleID required
com.apple.RestoreManager.boostrap
NonOrdered
Ordered
Batch Token failure
Soft Failure
order: %@ 
[%@] restoreState: %ld bootstrapPhase: %ld %@error: %@ %ld %@
[%@] restoreState: %ld bootstrapPhase: %ld %@
integerValue
%@ (%ld) ----------------------
totalRemaining
activeRestoreCount
totalSoftFailureCount
totalHardFailureCount
softFailureRetryDate
Setup and data migrator complete
%@ Failure
Promotion
Rescue
Restore Hydration
Hydration
Metadata lookup failure
Auth was User Canceled
Retry for account: %@/%@
deltaPackage
drmMode
install
packageURL
app_events
app_platform
clip_app_type
cohort
cumulative_user_count
device_vendor_id
device_vendor_id_repaired
event_subtype
evid
has_been_posted
is_beta
is_clip
is_temporary
item_name
launch_end_time
launch_time
week_start_time
short_version
storefront
usage_time
com.apple.appstored.PowerMonitor
com.apple.system.powermanagement.poweradapter
PowerStateDidChangeNotification
finish
Failure occurred but no error was provided
Installation Canceled
app_install
COUNT(1)
MAX(app_install.priority)
MIN(app_install.priority)
alternate_icon_name
approved
arcade
artwork_url
auto_install_override
automatic_type
bootstrapped
bundle_name
bundle_url
cancel_download_url
cancel_if_duplicate
client_id
client_type
companion_bundle_id
coordinator_intent
device_based_vpp
downloader_id
download_path
failure_error
gizmo_pairing_id
has_messages_extension
launch_prohibited
log_code
messages_artwork_url
metrics_install_type
optimal_download_start
order_index
policy
post_metrics
placeholder_entitlements
priority
quarantine
recovery_count
remote_install
restore_retry_count
restore_state
restore_type
source_type
store_cohort
store_metadata
supports_32bit_only
supress_dialogs
transaction_id
update_type
vendor_name
watch_type
IFNULL(app_install.phase, 10)
IFNULL(app_install.priority, 0)
IFNULL(app_install.bootstrapped, 2)
account
completedUnitCount
totalUnitCount
{constrained = %d, expensive = %d, roaming = %d, interface = %@}
com.apple.appstored.emulatenetwork
NetworkEmulation
cnst
expn
ifce
roam
errorDomain
errorCode
errorDescription
songId
download-id
serialNumber
v16@?0@"AMSURLRequest"8
v16@?0@"AMSURLResult"8
com.apple.appstored.CacheDelete
com.apple.appstored.CacheDeleteCoordinator.dispatch
com.apple.appstored.CacheDeleteCoordinator.freeSpace
com.apple.appstored.CacheDeleteCoordinator.run
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
Purge
Purgeable Request
Update Push
CACHE_DELETE_ID
com.apple.CacheDeleteCoordinator.refresh
DELETE FROM storekit_messages WHERE dsid = ? AND bundle_id = ?;
DELETE FROM storekit_revocations WHERE dsid = ? AND bundle_id = ?;
Background
Manual
Migration
Synchronize
Update All
Coordinator does not conform to IXCoordinatorWithAppAssetPromise
Expected app promise `%@` but instead found `%@`
Could not create an app data promise using %@
Library/
Library/Caches/
Scratch
Documents/Persistence
Documents
Library
Library/Caches
Library/Preferences
v32@?0@"NSString"8@"NSDictionary"16^B24
Caches
arcadeEnabled
Cache.db
SubscriptionEntitlements_v2.plist
SubscriptionEntitlementsAppStore_v2.plist
SubscriptionEntitlementsActivity_v2.plist
SubscriptionEntitlementsMusic_v2.plist
SubscriptionEntitlementsTV_v2.plist
SubscriptionEntitlementsiCloud_v2.plist
SubscriptionEntitlementsPodcast_v2.plist
fsCachedData
JFamilyCircle.plist
SoftwareMap
top_arcade_apps.plist
updates.plist
throttle.plist
Octane
apps.plist
probability
com.apple.appstored.AppUsageManager.working
com.apple.application
launchCount
<bundleID: %@ launches: %ld>
_DKPredictor
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_DKKnowledgeStore
MDItemRankingLaunchCountDay
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
MDItemRankingLaunchCountLast7Days
CSSearchQuery
CSSearchableItem
SERVER_AUTHENTICATION_USERNAME
SERVER_AUTHENTICATION_PASSWORD
AuthenticationChallengeDialogActionCancel
AuthenticationChallengeDialogActionOkay
News
segment
Activity
Music
iCloud
Podcasts
Invalid segment
%@ - SubscriptionEntitlementsRequest
SubscriptionEntitlementsRequest
errorNumber
errorMessage
Unknown server error
entitlements
v40@?0r^v8{_NSRange=QQ}16^B32
X-iTMS-ValidityDurationInSeconds
Sbsync/Default/%@
Ocelot
Signout
Timed out creating request
Timed out before creating request
Timed out requesting data
Timed waiting for user to repsond to dialog
Slot limit reached
Timed out before requesting data
subKeyBag
com.apple.appstored.ASDArcadeSubscriptionBagUpdatedNotification
[Sbsync] [exernal]
[Sbsync] [external]
sbsync
opt-out
Could not find bag key for sbsync
self isKindOfClass: %@
com.apple.appstored.ODRAssetPackValidationMaintenanceOperation
v32@?0@"NSURL"8Q16^B24
v24@?0@"NSURL"8^B16
empty directory
asset pack
odr_manifest
is_store_based
last_modification_date
local_cache_allowed
thinning_variant
storage_id
v32@?0@"AppInstall"8Q16^B24
B32@?0@"AppInstall"8Q16^B24
Encountered invalid installation which was not really running
knownPaths
B32@?0@"NSString"8Q16^B24
Service is not available.
Not entitled for this service.
XPCServiceClientUserInfoKey
com.apple.appstored.AppUsageBaseManager.dispatch
tvOS
macOS
watchOS
unknown
clip
0123456789
Simulator
v24@?0@"ApplicationProxy"8^B16
Restore In App
current_apps_ocelot_payout
com.apple.appstored.%@
isSubscriptionBagSubscribed
subscribedAccount
arcadeAppCount
Free Trial
Paid
fsEntitlementsState
fsEntitlementsAdamID
fsEntitlementsOfferID
Unnamed watchdog
Watchdog expired
autoUpdatesEnabled
local-software
installed-version-identifier
current_apps_ocelot
com.apple.appstored.XDCDeviceManager
v32@?0@"NSString"8@"XDCDevice"16^B24
Ad Platforms Status Conditions
com.apple.appstored.activities.AdPlatformsStatusConditions
User request
com.apple.PushCacheDeleteUpdateOperation
ODRSimulatedDownloadsBandwidthKey
action-params
bundle-id
deviceFamilies
value
versionId
currentVersionReleaseDateTime
{ bundleID: %@ itemID: %@ evid: %@ currentReleaseDate: %@ }
yyyy-MM-dd'T'HH:mm:ss'Z'
com.apple.appstored.MetricsCoordinator.dispatch
com.apple.appstored.MetricsHandler.getEvents
com.apple.appstored.MetricsHandler.post
com.apple.appstored.MetricsHandler.recordDeleted
com.apple.appstored.MetricsHandler.record
com.apple.appstored.MetricsHandler.recordInstalls
Handler not found for type: %@
CrossfireIntervalStartDate
AppUsageIntervalStartDate
ArcadeSummaryIntervalStartDate
ArcadePayoutIntervalStartDate
ODPIntervalStartDate
Crossfire
Summary
Payout
com.apple.appstored.MetricsHandler.reset
CrossfireLaunchesIntervalStartDate
AppUsageLaunchesIntervalStartDate
ArcadeSummaryLaunchesIntervalStartDate
ArcadePayoutLaunchesIntervalStartDate
ODPSupplementalIntervalStartDate
com.apple.appstored.Stream.DelegateQueue
CREATE TABLE IF NOT EXISTS app_updates (pid INTEGER, bundle_id TEXT, current_version_release_date DATETIME, device_families INTEGER, install_date DATETIME, is_background INTEGER NOT NULL DEFAULT 0, is_code_signature_update INTEGER NOT NULL DEFAULT 0, is_offloaded INTEGER NOT NULL DEFAULT 0, is_per_device INTEGER NOT NULL DEFAULT 0, is_profile_validated INTEGER NOT NULL DEFAULT 0, metrics_data JSON, purchase_id INTEGER DEFAULT 0, release_date DATETIME, software_platform INTEGER NOT NULL DEFAULT 0, store_item_data JSON, store_item_id INTEGER NOT NULL DEFAULT 0, store_software_version_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), update_state INTEGER NOT NULL DEFAULT 0, UNIQUE(bundle_id) ON CONFLICT REPLACE,PRIMARY KEY (pid));
B16@?0@"AppUpdatesDatabaseTransaction"8
DELETE FROM app_updates WHERE is_profile_validated = 1;
ALTER TABLE app_updates ADD COLUMN current_version_release_date DATETIME;
ALTER TABLE app_updates ADD COLUMN device_families INTEGER;
ALTER TABLE app_updates ADD COLUMN software_platform INTEGER NOT NULL DEFAULT 0;
DELETE FROM app_updates WHERE is_app_clip
ALTER TABLE app_updates ADD COLUMN is_code_signature_update INTEGER NOT NULL DEFAULT 0;
height
width
v28@?0@"NSData"8B16^B20
Invalid hash '%@' expected '%@'
More data was received than there are hashes to verify
applicationSite
pricingParameters
accountSecurityLevel
statusCode
storeItemId
storeVersionId
purchase
(forced silent authentication)
(forced proxied authentication)
availableBytes
totalBytes
Failed to create push types request
Failed to create push types request.
Received no response for push types call.
No account found.
Attempting to add push type for inactive account.
No push token registered.
parameters
media-kinds
notification-type
signIn
Prompt For Account
PROMPT_FOR_ACCOUNT_SIGN_IN_PURCHASE
PROMPT_FOR_ACCOUNT_SIGN_IN_WITH_APPLE_ID_%@
PROMPT_FOR_ACCOUNT_SIGN_IN
No client available to handle authentication request
An unknown error occurred
PROMPT_FOR_ACCOUNT_APPLE_ID
PROMPT_FOR_ACCOUNT_PASSWORD
User canceled authentication
AppUsage
AutomaticUpdates
DemotedApplications
Miscellaneous
UpdateHistory
ValidateAppleIDs
attempts
values
Device Security
com.apple.appstored.activities.DeviceSecurity
com.apple.appstored.AppInstallScheduler
com.apple.appstored.TaskQueue.bootstrapQueue
%@ phase: %@ coordinator: %@
B16@?0@"AppInstall"8
B16@?0@"AppSchedulerDatabaseTransaction"8
@16@?0@"AppInstall"8
OptimalDownloadWindow
Wait for optimal download window
delta-package
media
%@...
.()-
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY_SPECIFIC
INSTALL
EXTERNAL_MANIFEST_ALREADY_INSTALLED_ERROR_TITLE
EXTERNAL_MANIFEST_ALREADY_INSTALLED_SAME_NAME_ERROR_BODY
EXTERNAL_MANIFEST_ALREADY_INSTALLED_OTHER_NAME_ERROR_BODY
EXTERNAL_MANIFEST_SSL_ERROR_%@
EXTERNAL_MANIFEST_ERROR_FORMAT_%@
UPPManifestDialogActionCancel
UPPManifestDialogActionInstall
/System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
X-MMe-Multi-User
replacementSinf
ManagedApplicationTask
Missing itemID
bundleDisplayName
VPP:%@:%@
Missing itemID / bundleID
appstore
Item is not purchased or free
VPP Free Purchase
privacyAcknowledgementUrl
com.apple.ios.StoreKitUIService
ServicePrivacyPromptViewController
privacyIdentifier
privacyAcknowledgementUrlString
com.apple.onboarding.appstore
v16@?0@"BSActionResponse"8
Unknown error prompting privacy acknowledgement
User cancelled privacy acknowledgement
INTERNAL ONLY
Please file a radar! It's quick and easy.
FILE_RADAR_IDENTIFIER
tap-to-radar
ComponentName
App Store
ComponentVersion
New Bugs
ComponentID
685220
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
File A Radar
No Thanks
href
contentRatingsBySystem
externalId
releaseDate
com.apple.appstored.jobmanager
com.apple.appstored.xpc.updates
com.apple.appstored.coordinate-apps
com.apple.appstored.install-system-apps
com.apple.appstored.update-apps
com.apple.appstored.xpc.request
ad-networks
v16@?0@"InstallAttributionDatabaseSession"8
B16@?0@"InstallAttributionDatabaseTransaction"8
SKAdNetwork Multi: Unknown error
unsupported redownload version
SKAdNetwork Multi: Redownload is not supported.
unsupported multi pingback version
SKAdNetwork Multi: This version does not support multi pingback
com.apple.appstored.CleanupManager.dispatch
Post Stale Cleanup
Post Cleanup
DESC
   - %@
   - <no transactions>
This request is not yet implemeneted
download-queue-item-count
more
endId
startId
CREATE TEMPORARY TABLE 
 AS 
SELECT 
DISTINCT 
 FROM %@
 WHERE 
 ORDER BY 
 LIMIT ?
COUNT
%@(%@)
com.apple.MobileAsset.SystemApp
%K == %@
%K IN %@
@16@?0@"ASAsset"8
SQLiteErrorDomain
receipt-expiration-warning-threshold-seconds
REVOKED_MESSAGE_SPECIFIC_PAIR
REVOKED_MESSAGE_SPECIFIC_PLURAL
REVOKED_MESSAGE_PLURAL
REVOKED_TITLE_ONE
REVOKED_TITLE_PLURAL
itms-appss://?action=lookup&ids=%@
EXPIRING_MESSAGE_SPECIFIC
EXPIRING_MESSAGE_SPECIFIC_PLURAL
EXPIRING_MESSAGE_PLURAL
EXPIRING_TITLE_ONE
EXPIRING_TITLE_PLURAL
purchase_history_apps
content_rating_flags
circular_icon_url
date_purchased
developer_name
family_shared
first_party
hidden
hidden_from_springboard
is_32_bit_only
is_ios_binary_macos_available
is_ios_binary_macos_compatible
is_preorder
long_title
media_kind
oval_icon_url_template
preflight_package_url
product_url
purchaser_dsid
redownload_params
required_capabilities
supports_ipad
supports_iphone
supports_mac
purchase_token
locker_item_id
genre_id
genre_name
watch_app_delivered_in_ios_app
watch_app_runs_independently
watch_app_watch_only
supports_layered_image
has_p3
title
com.apple.aps.appstored
Identity has already been assumed
Identity has not yet been assumed
Cannot execute asynchronous tasks inline
X-Apple-TA-Device
X-Apple-TA-OS-Version
<XDCDevice: %p pairingID = %@>
v16@?0@"InAppDownloadStatus"8
@16@?0@"ASDTestFlightAppMetadata"8
TestFlight
@16@?0@"NSData"8
Failed to create register request.
Push register request failed.
Push register request received no response.
device-name-data
com.apple.appstored.DispatchQueue.default
icuLocale
filter[appBundleId]
extend
filter[offerName]
with
offerNames
sfId
currencyCode
STDQ
description
discounts
hostedContent
offerName
available-subproducts
isFamilyShareable
is-hosted
icu-locale
standard
store-offers
subscriptionFamilyId
offerId
modeType
numOfPeriods
recurringSubscriptionPeriod
http://
adHocOffers
itms%@.isoproxy.apple.com
mzstoreplatform-api-itms%@.itunes.apple.com
%@%@/WebObjects/MZStorePlatform.woa/1600301/ra/v1/amp-sandbox/catalog/%@/in-apps
%@%@/WebObjects/MZStorePlatform.woa/ra/v1/amp-apps/catalog/%@/in-apps
%@%@/v1/catalog/%@/in-apps
com.apple.storekit.prod
com.apple.storekit.sandbox
com.apple.storekit.xcode
Error decoding response
Could not decode media products response
Attempted to decode store response
@currency=%@
B16@?0@"ACAccount"8
-shm
-wal
Receipt managers queue
receipts.db
v16@?0@"InAppReceiptDatabaseSession"8
B16@?0@"InAppReceiptDatabaseTransaction"8
com.apple.appstored.StreamingZipStreamConsumer
A stream failed, but did not return an error
com.apple.itunes.store.in-app-subscription-family-id
dmap.specifiedtotalcount
dmap.returnedcount
dmap.itemkind
com.apple.itunes.adam-id
daap.songdatemodified
com.apple.itunes.store.in-app-purchase-type
com.apple.itunes.store.in-app-purchase-expiration-date
com.apple.itunes.store.app-adam-id
com.apple.itunes.store.in-app-used-offers
com.apple.itunes.store.in-app-auto-renew-status
com.apple.appstored.Migrator
v16@?0@"MigratorConfiguration"8
com.apple.appstored.MigrateQueue
xyz.%@.%@
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
signed-actions
adopt-product
adoption-eligibility
unadopt-product
enableMacOSCompatibleIOSApps
enableMacOSCompatibleIOSAppsForCarry
app-usage-flush-interval-seconds
arcade-iap-family-id
authorizeMachine
available-software-updates-extended-reload-frequency-seconds
available-software-updates-extended-reload-frequency-seconds-cellular
p2-content-restore/max-item-count
p2-content-restore/url
invalid-build-tools/invalid-versions
invalid-build-tools/delta-incompatible-versions
drm-recovery
app-usage-analytics-post-interval-seconds
metrics/sampling/custom/xp_amp_usage_analytics/percentage
app-usage-analytics-include-launches
arcade-launch-timeout-interval-seconds
ocelot-device-id-days-valid
ocelot-post-interval-seconds
ocelot-post-payout-interval-seconds
ocelot-payout-qualifying-duration-seconds
default-switch-arcade-user
switch-arcade-user
onDemandResources
bundle-owns-check
app-usage-posts-per-day
app-usage-post-grace-period-seconds
app-usage-post-spread-period-seconds
app-usage-reset-actor-id-frequency-seconds
metrics/sampling/custom/xp_amp_app_usage_dnu/percentage
cluster-mappings-url
cluster-mappings-reload-frequency-secs
iap-daap/base-url
iap-daap/database-id
iap-daap/forced-refresh-frequency-minutes
iap-daap/update-polling-frequency-secs
manage-subs-app-delete-blacklist
purchase-daap/base-url
purchase-daap/database-id
purchase-daap/forced-refresh-frequency-minutes
purchase-daap/purchase-refresh-enabled
purchase-daap/update-polling-frequency-secs
subscription-keybag-refresh
sandbox-subscription-keybag-refresh
subscription-keybag-refresh-interval-in-seconds
fsEntitlementsSrv
fsEntitlementsTimeout
fsEntitlementsRefreshIntervalInSeconds
ds-appleid-lookup
currentStorefrontCountryCodeISO3A
countryCode
app-receipt-create
disable-purchase-intent-notifications
p2-in-app-pending-transactions
p2-in-app-check-download-queue
p2-in-app-transaction-done
install-attribution-low-fidelity-cap
install-attribution-max-campaign-id
install-attribution-max-impressions-age
install-attribution-max-lo-fi-params-age
install-attribution-max-cache-age
install-attribution-max-pingback-cache-age
install-attribution-max-ping-back-attempts
install-attribution-start-end-window
install-attribution-should-use-proxy
install-attribution-should-send-dev-pingback
install-attribution-postback-proxy-url
manageSubsSKV2Url
check-for-messages
p2-product-offers
p2-product-offers-batch-limit
commerceRefundRequestUrl
renew-vpp-receipt
p2-in-app-regrant-purchase-history
redeemCodeLanding
subscription-status-max-age
allInAppSubsStatus
in-app-history-max-age
in-app-history-max-count
inAppHistory
apps-media-api-host
sandbox-media-api-host
language-tag
storekit1-media-api-rollout-rate
automatic-downloads2/downloads-url
pendingApps
songDownloadDone
hideableSystemApps
hideableSystemAppsForWatch
testflight-visual-feedback/backoff-delays
testflight-visual-feedback/backoff-random-range
testflight-visual-feedback/get-image-upload-urls-url
testflight-visual-feedback/upload-feedback-url
testflight-extension/extension-enabled
testflight-extension/extension-push-enabled
testflight-extension/sync-interval-minutes
testflight-extension/sync-grace-period-minutes
available-software-updates
updateProductContentType
da-do-not-update-list
updates-use-optimized-requests
view-software-updates
v2-update-scheduling-enabled
available-software-updates-background-reload-frequency
available-software-updates-background-reload-frequency-cellular
watchRequestThrottle
watchSuppressDialogs
amd-domains
receipt-expiration-warning-threshold
family-info
metrics/scorecardInstallSamplingPercentage
metrics/scorecardInstallSamplingPercentageSeed
p2-content-restore/gzip
metrics/metricsBase/storeFrontHeader
up-to-date-claim
lowDataPromptThreshold
push-notification-types/add-push-notification-type-url
push-notifications/environment
push-notifications/register-success
push-notification-types/remove-push-notification-type-url
welcome-to-app-store-notification-sample
welcome-to-app-store-notification-delay
welcome-to-app-store-notification-title
welcome-to-app-store-notification-message
welcome-to-app-store-notification-later
welcome-to-app-store-notification-remind-me
welcome-to-app-store-notification-dont-remind-me
welcome-to-app-store-notification-actionButton
welcome-to-app-store-notification-actionURL
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/authorizeMachine
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/switchArcadeUser
production
https://proxy-skadnetwork.apple.com:443
https://amp.inapps.apple.com/inApps/subscriptions
https://amp.inapps.apple.com/inApps/history
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://sandbox.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/fsEntitlementsSrv
https://tf-feedback.itunes.apple.com/ingest/api/v1/getImageUploadUrls
https://tf-feedback.itunes.apple.com/ingest/api/v1/uploadFeedback
com.apple.appstored.odrAssetDownload.%@
%@%@/%@:%@
ODR%@:%@
deltaPackages
local-server-info
initialODRSize
priorVariantIdentifiers
priorVersionExternalIdentifier
variantId
B16@?0@"StoreAsset"8
%@: {URL = %@; variant = %@; delta = %d}
CacheDelete Push
com.apple.appstored.CacheDeleteUpdate
No client available to handle dialog request
Unable to purchase discretionary item with no account
Unable to authenticate for purchase with dsID but no username
hasBeenAuthedForBuy
application/x-apple-plist
bundleIDs
options
Invalid response, expected content length unknown
Invalid response, status code: %ld
Not supported in the simulator
Configuration.storekit
com.apple.appstored.octane.dispatch
expire
force renew
Unknown action request
Invalid action (action: %ld)
No active connection to %@
iap_purchase_intents
app_name
product_name
Unknown validation error
Invalid key path '%@' in expression: %@
Invalid expression type '%lu' in expression: %@
application/protobuf
Accept
attempt
disableAuth
no_weak_token_auth
disableMescal
no_mescal_auth
com.apple.private.alloy.appstore
com.apple.appstored.XDCMessageBroker
No device provided
No payload provided
XDCServiceDevicesDidChangeNotification
ODRTag_PercentageCompleteKey
ODRTag_TimestampKey
ODRTag_StatusKey
ODRTag_SizeKey
ODRTag_TagNameKey
-[ODRDeveloperToolsClient purgeAllTagsInBundleWithID:replyBlock:]
-[ODRDeveloperToolsClient purgeTagWithName:inBundleWithID:replyBlock:]
Shared Analytics not Enabled
DELETE FROM app_events_personalization where is_temporary = 1;
com.apple.appstored.appusage_dnu
Past Reset Date
Switch Status Changed
Switch Status Change
Post Skipped for actorID Session
DELETE FROM app_events_personalization;
DELETE FROM current_apps_personalization;
com.apple.appstored.PersonalizationManager.callout
com.apple.appstored.PersonalizationManager.dispatch
quantity
com.apple.
App Clip missing required Info.plist key
In App
app_done
machine_based
request_url
sms-private://app?appBundleID=%@
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.AppStoreDaemon.LaunchServicesCatalog
System application mapping was not available
System application mapping for watch was not available
@16@?0@"LSApplicationProxy"8
NOT bundleID IN %@
@"Optional"16@?0@"LSApplicationRecord"8
@"NSEnumerator"8@?0
@16@?0@"NSNumber"8
isPlaceholder
cacheTimestamp
com.apple.appstored.SubscriptionEntitlementsCoordinator.network
com.apple.appstored.SubscriptionEntitlementsCoordinator
v16@?0@"SubscriptionEntitlementsResult"8
876F12EE-055C-49EB-8909-3BE6753CA832
v32@?0@"SubscriptionEntitlementsResponse"8B16B20@"NSError"24
v24@?0@"SubscriptionEntitlementsResponse"8@"NSError"16
Timed out attempting to update subscription entitlements
Podcast
com.apple.appstored.NewsSubEntitlementsCacheUpdated
com.apple.appstored.AppStoreSubEntitlementsCacheUpdated
com.apple.appstored.ActivitySubEntitlementsCacheUpdated
com.apple.appstored.MusicSubEntitlementsCacheUpdated
com.apple.appstored.TVSubEntitlementsCacheUpdated
com.apple.appstored.iCloudSubEntitlementsCacheUpdated
com.apple.appstored.PodcastSubEntitlementsCacheUpdated
app_usage_session_reporter_keys
session_reporter_key
last_refresh
com.apple.appstored.ISOpertionQueue.networkQueue
altDSID
appleID
downloaderID
externalIDString
itemID
purchaserID
redownloadParams
artworkURLString
containsMessagesExtension
itemName
launchProhibited
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeCohort
storeFront
vendorName
provisioningProfile
variantID
skipIfInstalled
isBeta
isSystemApp
isStoreApp
bundleVersion
manifestURLString
suppressDialogs
betaBuildGroupID
com.apple.AppStoreDaemon.ManagedAppService
itms-services requests are not valid on this hardware and will be ignored: %@
beta
deviceVerification
isStoreOriginated
limit
appExtVrsId
appDsid
reason
requestData
revision
receipt-data
applicationUsername
generateBuyParams
partnerId
partnerTransactionId
requiresAskToBuy
transaction-receipt
clipBundleId
appAccountToken
osBuildNumber
hardwareModel
hardwareFamily
adHocOfferId
adHocKeyId
adHocNonce
adHocSignature
adHocTimestamp
hasMore
isUpgraded
lastTransactions
productId
purchaseDate
revocationDate
signedRenewalInfo
signedTransactionInfo
signedTransactions
subscriptionGroupIdentifier
Auto-Renewable Subscription
Consumable
Non-Consumable
Non-Renewing Subscription
X-Apple-Client-StoreKit-Version
assetList
offer-name
original-purchase-date
original-transaction-id
app-list
purchase-date
request-data
initial
push
timer
manual
submissionId
SELECT value FROM iap_info_db_properties WHERE key = ?
ServerRevisionPropertyKey
LastUpdatedTimestampPropertyKey
install_attribution_pingback_fetch_info
fetch_pingback_url
retry_count
beta_app_feedback
account_dsid
attempt_count
app_version
beta_build_group_id
feedback
successful_image_uploads
log_key
next_retry_date
pending_image_uploads
Statement already finalized
Process failed to exit before %@
Failed to aquire termination assertion
No URL for download
Not enough space to download asset
No hashes in download info
v32@?0q8q16q24
v24@?0@"AssetResult"8@"NSError"16
extractPKZip
CREATE TABLE IF NOT EXISTS promoted_iaps (bundle_id TEXT, product_id TEXT, promo_order INTEGER NOT NULL DEFAULT -1, visibility INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (product_id, bundle_id) ON CONFLICT REPLACE);
ALTER TABLE promoted_iaps RENAME COLUMN hidden TO visibility;
storekit_promotions
com.apple.appstored.EventServiceHost.dispatch
com.apple.appstored-services.event
ENTITLEMENT:com.apple.appstored-services.event
v24@?0@"NSUUID"8@?<v@?@"EventServiceHost"@"ExtensionRequestMetadata">16
v24@?0@"EventServiceHost"8@"ExtensionRequestMetadata"16
v16@?0@"NSUUID"8
v24@?0@"NSUUID"8@"NSArray"16
v24@?0@"NSUUID"8@"NSError"16
v24@?0@"ASDExtensionRequest"8@"NSError"16
{ bundleID: %@ itemID: %@ }
StoreKit client initiated
Authentication failed with no specific error provided.
com.apple.appstored.FairPlayStreamReader
AssetRequetPropertyRangeOffset
bytes=%llu-
Range
Existing coordinators:
  %@
  ~ END ~
Active installations:
  (%3ld) %@
v24@?0@"XDCMessage"8@"NSError"16
http://www.apple.com
Some app
https://xp.apple.com/report/2/xp_app_buy?clientId=0&sf=143441&adamId=123
installs
port
com.shazam.Shazam
optimalDownloadWindowsCleared
Diagnostic
progress
Blocking non-silent authentication from silent presenter
Dialogs cannot be presented silently
Engagement cannot be presented silently
RequestPresenterWillPresentUINotification
LegacyNotifications
fraction
com.apple.appstored.JobManagerListener
v24@?0@"AppInstallsDatabaseTransaction"8q16
v32@?0@"NSUUID"8@"NSNumber"16^B24
%@%%
@16@?0@"NSUUID"8
v16@?0@"JobManagerClient"8
Error inserting parameters since requisite value is missing.
SKAdNetwork: Could not set registered for pingback that does not exist.
SKAdNetwork: Could not update conversion value for pingbacks that do not exist.
SKAdNetwork: Impressions are not identical. Cannot finalize
SKAdNetwork: Start and end called too quickly. Cannot finalize
Pingback is missing app adam ID
Pingback is missing fidelity type
Pingback is missing ad network ID
Pingback is missing campaign ID
Pingback is missing transaction ID
Pingback is missing attribution signature
Pingback is missing pingback URL
@avg.self
@min.self
@max.self
Min:%@, Max:%@, Avg:%@
com.apple.AppStoreFoundation.TransactionStore
Transactions
com.apple.appstored.automaticUpdates
AutomaticUpdatesAreEnabled
com.apple.appstored.callout
com.apple.appstored.dispatch
com.apple.appstored.badge
com.apple.appstored.UpdatesManager.taskQueue
disabled
Purchase History Items
(CODE = %ld) %@
code
dictionary
deferredUpdates
family
members
{ cached: %d familyMembers: %@ }
family.members
q24@?0@"FamilyMember"8@"FamilyMember"16
storekit_revocations
packageUrl
requestCount
interfaceType
constrained
expensive
meanTransferSpeed
networkProtocol
download
taskMetrics
application
appleWatch
posixTimestampMillis
desiredTTLMillis
%@ %@ ?
 LIKE 
 NOT IN (
 IN (
IS NULL
IS NOT NULL
 AND 
 OR 
Receipt
Receipt renewal
Client authenticate not supported
Authenticate timed out
Invalid receipt data
com.apple.news
xToken
want-expired
want-revoked
want-vpp
software-version-external-identifier
version-id
Apple-Download-Type
Invalid status code (%lu)
artwork
placeholderArtwork
Artwork request timed out
artworkTemplatePromise
.png
com.apple.appstored.StorePushService
%@:%ld
PROXY_AUTHENTICATION_MESSAGE_%@_%@
SERVER_AUTHENTICATION_MESSAGE_%@
SECURE_AUTH
INSECURE_AUTH
PROXY_AUTHENTICATION_TITLE
SERVER_AUTHENTICATION_TITLE
v16@?0@"SQLiteConnection"8
/odr.sqlite
SELECT ZMANIFEST.Z_PK, ZMANIFEST.ZAPPLICATIONBUNDLEID FROM ZMANIFEST LEFT JOIN ZASSETPACK ON ZASSETPACK.ZMANIFEST = ZMANIFEST.Z_PK WHERE ZASSETPACK.ZLOCALURLSTRING IS NOT NULL
ZAPPLICATIONBUNDLEID
Z_PK
ZBUNDLEID
ZCHUNKSIZE
ZDOWNLOADPRIORITY
ZDOWNLOADSIZE
ZEFFECTIVEALWAYSPRESERVE
ZEFFECTIVEPRESERVATIONPRIORITY
ZHASHES
ZISSTREAMABLE
ZLASTUSEDDATE
ZLOCALURLSTRING
ZMD5
ZPINCOUNT
ZPURGEABLE
ZPURGEREASON
ZSHA
ZSIZE
ZSOURCEURLSTRING
SELECT * FROM ZASSETPACK WHERE ZMANIFEST = ? AND ZLOCALURLSTRING IS NOT NULL
SELECT * FROM ZCONTENTHASH WHERE ZASSETPACK = ?
ZSTRATEGY
ZHASHVALUE
ZADAMID
ZCACHINGALLOWED
ZLASTMODIFICATIONDATE
ZSTORAGEID
ZTHINNINGVARIANT
SELECT * FROM ZMANIFEST WHERE ZAPPLICATIONBUNDLEID = ?
ZISSTOREBASED
com.apple.appstored.URLRequestProperties
ROWID
v32@?0@8@16^B24
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
 FROM 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
[%public}@] Error: %@
DELETE FROM %@ WHERE %@ = ?;
com.apple.appstored.PushServiceTestFlightConsumer
resultComplexity
@"<NSFastEnumeration>"8@?0
min-keybag-repair-interval-seconds
factory-app-claim
enable-sip-check
appClipAdditionalData
Invalid
com.apple.appstored-testflight
com.apple.storekit
No string representation for topic: %ld
(%@) %@: %@
%@/%ld
AMSServerPayload.metrics.dialogId
dialogID
storeItemID == %@
@16@?0@"ASDSystemAppMetadata"8
System
installedSoftwareRatingName
B32@?0@"RequestThrottleRecord"8Q16^B24
v32@?0@"RequestThrottleRecord"8Q16^B24
ASOctaneServer
/System/Library/PrivateFrameworks/ASOctaneSupport.framework/ASOctaneSupport
com.apple.AppStoreFoundation.IAPInfoManager
v16@?0@"IAPInfoDatabaseSession"8
B16@?0@"IAPInfoDatabaseTransaction"8
com.apple.appstoredaemon.IAPInfoManager.update
v24@?0@"IAPInfoItemsRequestResponse"8@"NSError"16
com.apple.appstored.IAPInfoDatabaseUpdated
Apps uninstalled
v32@?0@"AppUpdateMemoryEntity"8Q16^B24
v32@?0@"NSNumber"8@"AppUpdateMemoryEntity"16^B24
CREATE TABLE IF NOT EXISTS purchase_history_apps (pid INTEGER PRIMARY KEY, bundle_id TEXT, content_rating_flags INTEGER, date_purchased DATETIME, developer_name TEXT, family_shared INTEGER, first_party INTEGER, is_ios_binary_macos_available INTEGER, is_ios_binary_macos_compatible INTEGER, has_messages_extension INTEGER, hidden INTEGER, hidden_from_springboard INTEGER, icon_url_template TEXT, is_32_bit_only INTEGER, is_preorder INTEGER, is_verified_for_macos INTEGER, long_title TEXT, mac_app_required_capabilities JSON, media_kind INTEGER, oval_icon_url_template TEXT, preflight_package_url URL, product_url URL, purchaser_dsid INTEGER, redownload_params TEXT, required_capabilities JSON, requires_rosetta INTEGER, runs_on_apple_silicon INTEGER, runs_on_intel INTEGER, store_item_id INTEGER, supports_ipad INTEGER, supports_iphone INTEGER, supports_mac INTEGER, purchase_token INTEGER, locker_item_id INTEGER, genre_id INTEGER, genre_name TEXT, watch_app_delivered_in_ios_app INTEGER, watch_app_runs_independently INTEGER, watch_app_watch_only INTEGER, supports_layered_image INTEGER, has_p3 INTEGER, title TEXT, circular_icon_url TEXT, UNIQUE(purchaser_dsid, store_item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS purchase_history_db_properties (key TEXT PRIMARY KEY, value TEXT)
purchase_history
DROP TABLE purchase_history_apps;
DROP TABLE purchase_history_db_properties;
model
additionalHeaders
bundleURL
clientInfo
companionBundleID
externalID
itemResponse
installedExternalVersionID
installedVariantID
logCode
logKey
metricsType
originalPurchaserDSID
preflightURL
purchaseEvent
purchaseID
referrerName
referrerURL
refreshInstallID
requestToken
temporaryBundleID
clientType
discoveredUpdate
isDiscretionary
expectedSoftwarePlatform
expectsIOSAppOnMac
generatedVendorID
ignoreRequirePasswordRestriction
isMachineBased
postMetrics
purchaseOnly
purchaseState
purchaseType
isRemoteInstall
requireUniversal
suppressEvaluatorDialogs
updateType
useJSONContentType
useLocalAuthAndSystemDialogs
watchType
@16@?0@"ASDAppReviewAppMetadata"8
ArcadeSubscriptionInfo
subscriptionAdamId
subscriptionState
subscriptionIsSpecialAccess
subscriptionIntroPriceType
userId
Unsubscribed
com.apple.appstored.AracadeAnonymous
com.apple.appstored.AracadePayout
allowed-anonymous-arcade-keys
allowed-payout-arcade-keys
arcade-payout-enabled
com.apple.appstored.ASDRepairBundleID
Startup with network
Metrics posting not enabled
App Usage not Enabled
Rescheduling
Arcade/Sbsync/%@
Activity Complete
Sbsync/%@/%@
DELETE FROM app_events_ocelot where event_type != 2;
DELETE FROM app_events_ocelot_payout where event_type != 4;
DELETE FROM current_apps_ocelot_payout;
DELETE FROM current_apps_ocelot;
DELETE FROM app_events_ocelot where is_temporary = 1;
DELETE FROM app_events_ocelot_payout where is_temporary = 1;
Network came up
Ocelot Repair
bundlePath
exitReason
Subscription change
Subscribed
DELETE FROM app_events_ocelot
DELETE FROM app_events_ocelot where has_been_posted = 1;
DELETE FROM app_events_ocelot_payout;
freeTrial
Terminate Arcade Apps
v24@?0@"FBSApplicationTerminationAssertion"8@"NSError"16
lastCache
TopApps
com.apple.appstored.OcelotManager.background
com.apple.appstored.OcelotManager.callout
com.apple.appstored.OcelotManager.dispatch
com.apple.appstored.OcelotManager.distNotification
com.apple.appstored.OcelotManager.sbsync
com.apple.appstored.OcelotManager.topApps
com.apple.appstored.OcelotManager.upsell
com.apple.appstored.ODRMainfestValidationMaintenanceOperation
application/x-dmap-tagged
application/x-www-form-urlencoded
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
UNKNOWN
%lli
X-FM-Dsid
completionDate
installKey
queueDate
failureError
failureReason
com.apple.appstored.ProgressCache
remote progress
Rejecting this request. A non-Store install is already in progress for %@
Duplicate request
Request is a duplicate of %@
com.apple.AppStoreDaemon.PurchaseHistoryDAAPResponseDecoder.pasrsingQueue
launchReason
duration
endDateObject
endDate
endTime
eventType
startDateObject
startDate
startTime
clipLaunchReason
clipFullURL
clipReferrerURL
clipReferrerBundleID
@{ id: %@ isExtension: Y containingBundleID: %@ usage: %@ }
@{ id: %@ count: %lu usage: %@ }
HH:mm:ss
%@%lu
%lu:%@:%@
launch_events
containing_bundle_id
event_source
is_extension
launch_start_time
appPlatform
batteryDRAMUsage
batteryUsage
launches
uninstalls
foregroundEvents
installType
autodownload
prior
update
userAdded
isArcade
shortAppVersion
topic
usageClientId
CREATE TABLE IF NOT EXISTS account_events (pid INTEGER, active_start_time DATETIME, active_end_time DATETIME, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, event_type INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_app_installs (pid INTEGER, bundle_id TEXT, clip_affiliate_token TEXT, clip_campaign TEXT, clip_campaign_token TEXT, clip_provider_token TEXT, clip_ref_source TEXT, clip_ref_type TEXT, clip_third_party_with_no_app_referrer INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_metrics_events (pid INTEGER, bundle_id TEXT, event_type INTEGER, event_subtype INTEGER, metrics_type INTEGER, has_been_posted INTEGER DEFAULT 0, payload JSON, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_crossfire (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, clip_affiliate_token TEXT, clip_app_type TEXT, clip_campaign TEXT, clip_campaign_token TEXT, clip_provider_token TEXT, clip_ref_source TEXT, clip_ref_type TEXT, clip_third_party_with_no_app_referrer INTEGER, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot_payout (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_personalization (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS launch_event_sync_metadata (pid INTEGER, last_duet_sync DATETIME, spotlight_migrated_date DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS launch_events (pid INTEGER, bundle_id TEXT, containing_bundle_id, event_source INTEGER, is_extension INTEGER, launch_end_time DATETIME, launch_start_time DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, deletion_date DATETIME, event_type INTEGER, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_crossfire (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot_payout (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_personalization (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_cluster_mappings (pid INTEGER, bundle_id TEXT, cluster_id INTEGER, cluster_version INTEGER, launches_weight INTEGER, item_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_weight INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_usage_session_reporter_keys (pid INTEGER, bundle_id TEXT, session_reporter_key TEXT, last_refresh DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
app_usage
ALTER TABLE app_events_crossfire ADD COLUMN clip_affiliate_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_app_type TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_campaign TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_campaign_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_provider_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_ref_source TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_ref_type TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_crossfire ADD COLUMN clip_third_party_with_no_app_referrer INTEGER;
ALTER TABLE app_events_crossfire ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_ocelot ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_personalization ADD COLUMN vendor_name TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN is_arcade INTEGER;
DROP TABLE account_events
DROP TABLE app_events_crossfire
DROP TABLE app_events_ocelot
DROP TABLE app_events_ocelot_payout
DROP TABLE app_events_personalization
DROP TABLE app_cluster_mappings
DROP TABLE app_metrics_events
DROP TABLE current_apps
DROP TABLE current_apps_crossfire
DROP TABLE current_apps_ocelot
DROP TABLE current_apps_ocelot_payout
DROP TABLE current_apps_personalization
/app/clipUsage
/app/inFocus
/app/usage
_DKQuery
_DKSystemEventStreams
_DKEventQuery
_DKApplicationMetadataKey
B32@?0@8Q16^B24
v32@?0@"<NSFastEnumeration>"8Q16^B24
IAPInfoRequestOperationErrorDomain
com.apple.appstored.ArcadeService
widthPixels
heightPixels
AssetErrorDomain
com.apple.appstored.AssetSession
Data consumer failed to process data within allotted time
com.apple.appstored.AssetTask:%@-%lu
Expected zero resumption offset
Asset URL has expired
Invalid status code `%ld`
ephemeral
 (%@)
Data consumer is missing
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
circle
Family Info Lookup Failed
Unable load the family circle if there's no active account.
We failed to load the family info for the active account.
@"FamilyInfoLookupResult"16@?0^@8
We were unable to get the family cricle URL.
applicationBundleID
isStoreBased
lastModificationDate
lastUsedDate
-Unknown-
isOnDevice
pinCount
chunckSize
downloadIdentifier
humanReadablePurgeReason
localURL
Hashes
effectivelyAlwaysPreserve
effectivePreservationPriority
-PreservingTags-
tags
Samplers :
%@ : %@
No longer supported - logging is always on.
memory
Sampler '%@' enabled with %f sampling interval.
Sampler '%@' disabled.
Sampler not found
Unknown sampler
Asset Packs : %lu asset packs are purgeable.
Asset Packs : %lu asset packs are not purgeable.
Asset Packs Purge Test : %lu asset packs to purge for urgency %d (requested bytes : %lld; actual bytes : %lld).
%@, 
No hashes
actiontitle
actionurl
date
com.apple.appstored.StoreQueueManager.callback
com.apple.appstored.StoreQueueManager.dispatch
v36@?0B8@"NSDictionary"12q20@"NSError"28
com.apple.appstored.StoreQueueManager.tasks
com.apple.appstored.signal.Debug
osVersionStringKey
com.apple.appstored.Daemon
Jun  1 2021
19:07:45
com.apple.appstored.daemon.launched
Logs
com.apple.adid.midchangedV1.5
com.apple.appstored.xpc.jobmanager
com.apple.storekit.configuration.xpc
com.apple.appstored.xpc.storequeue
@"<ASDDiagnosticServiceProtocol>"8@?0
@"<ASDInstallationServiceProtocol>"8@?0
@"<ASDAppLibraryServiceProtocol>"8@?0
@"<ASDPurchaseServiceProtocol>"8@?0
@"<ASDPurchaseHistoryServiceProtocol>"8@?0
@"<ASDAppStoreServiceProtocol>"8@?0
@"<ASDArcadeServiceProtocol>"8@?0
@"<ASDIAPHistoryServiceProtocol>"8@?0
@"<ASDInstallAttributionServiceProtocol>"8@?0
@"<ASDAppMetricsServiceProtocol>"8@?0
@"<ASDRepairServiceProtocol>"8@?0
@"<ASDRestoreServiceProtocol>"8@?0
@"<ASDUpdatesServiceProtocol>"8@?0
com.apple.datamigrator.migrationDidFinish
ODR Maintenance
com.apple.ondemandd.client
com.apple.ondemandd.launchservices
com.apple.ondemandd.appreview
com.apple.ondemandd.odrctl
com.apple.ondemandd.devtools
EnablePurchaseAccountFallback
com.apple.ondemandd.PeriodicLaunchServicesSyncActivity
ct=%@
pt=%@
at=%@
Download
Failed
Finished
Paused
Policy
Postamble
Preamble
Started
Waiting
Unknown (%ld)
Canceled by user request
Jettisoned to make room for higher priority installation
Paused by user request
Paused until install policy is fulfilled
Jettisoned due to elevated thermal pressure
none (0)
device security
bootstrapped installations
daemon start
finished installations
hydrate job
imported installations
non ordered restores completed
optimal download window reached
ordered restores completed
paused installations
diagnostics ping
prioritized
purchased
phase reset
resumed installations
upgrade to interactive
unknown (%lu)
com.apple.appstored.NotifyTestFlightClient
StoreKitService access queue
Sandbox
Production
v28@?0@"NSString"8B16@"NSError"20
CONSTRAINED_PROMPT_TITLE
CONSTRAINED_PROMPT_BODY_UPDATES_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE_ALL
constrainedNetworkUpdates
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@_%@
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@
CONSTRAINED_PROMPT_BUTTON_DOWNLOAD
constrainedNetworkDownload
CONSTRAINED_PROMPT_BODY_UPDATE_%@_%@
CONSTRAINED_PROMPT_BODY_UPDATE_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE
constrainedNetworkUpdate
CONSTRAINED_PROMPT_BUTTON_CANCEL
LowDataModePromptActionCancel
LowDataModePromptActionDownload
app-receipt
artworkURL
artwork-urls
cancel-download-url
is-auto-download
is-purchased-redownload
messagesIconUrl
alternateIconName
softwareVersionBundleId
bundleShortVersionString
UIRequiredDeviceCapabilities
gameCenterEnabled
gameCenterEverEnabled
hasMessagesExtension
appleWatchEnabled
WKRunsIndependentlyOfCompanionApp
WKWatchOnly
iad-attribution
iad-conversion-date
iad-impression-date
nameTranscriptions
rating
software-platform
subgenres
preflightPackageURL
redownload-params
thinned-app
%@: {bundleID = %@; itemID = %@; itemName = %@; EVID = %@}
%@.%@.%@
macos
xp_amp_app_usage_analytics
xp_amp_app_usage_dnu
xp_amp_app_usage_arcade
xp_amp_usage_detailed
on_device_personalization
itsmetrics_test
com.apple.appstored.%@.events
ArcadePayout
ArcadeSummary
com.apple.appstored.ASDAppleIDDidChangeNotification
com.apple.ReportCrash.beta.bulletin
v20@?0B8@"NSArray"12
com.apple.LaunchServicesObserver.AppleIDDidChange.ValidateAppleIDs
_error
_itemID
_externalVersionID
_requestDate
Restart
Not available on this platform.
Application only supports 32-bit architecture
User has disabled automatic downloads
Restrictions prohibit automatic downloads
BuyRequest:%@/%@
Purchases never completed after two hours
com.apple.appstored.ODRLaunchServicesObserver
bundleID: %@
startTime: %@
endTime: %@
type: %ld
isExtension: Y
{ %@ }
Last Launch
Type
InFocus
Spotlight
Usage
current_apps
is_arcade
is_prior
devicePlatform
deviceFamily
architecture
display
locale
timezone
carrier
cellularNetworkType
connection
disk
batteryPercentage
PLATFORM_UNDEFINED
MACOS
APPLETVOS
(unknown: %i)
DEVICEFAMILY_UNDEFINED
IPHONE
IPOD_TOUCH
IPAD
WATCH
com.apple.AppStoreFoundation.LibraryService
@"NSArray"16@?0@"NSArray"8
ODPDeviceID
ODP/%@
AppStoreDaemon
ASDEnablePowerReportingToODP
ODP supplemental start date not set
com.apple.ASOctaneSupportXPCService
DRAMUsage
powerUsage
PurchaseHistory
{ bundleID: %@ itemID: %@ evid: %@ storefront: %@ account: %@ }
subscriptions
inAppSubscriptions
introOfferConsumedFamilyIds
user.dsId
current_apps_personalization
com.apple.appstored.ODRApplication
{bundleID = %@; adamID = %@; versionID = %@; variantID = %@}
{bundleID = %@; version = %@; shortVersion = %@; variantID = %@}
AssetPackManifest
OnDemandResources
adamID = %@%s
versionID = %@%s
version = %@
shortVersion = %@
modified = %.0f
variantID = %@
{%@}
v28@?0B8@"NSArray"12@"NSError"20
iap_receipts
is_upgraded
is_finished
product_type
revocation_date
transaction_date
InvalidReceiptPromptOKAction
InvalidReceiptPromptCancelAction
RECEIPT_REVOKED_TITLE
RECEIPT_REVOKED_FALLBACK_TITLE
RECEIPT_REVOKED_MESSAGE
RECEIPT_REVOKED_FALLBACK_MESSAGE
itms-appss://?action=software
VIEW_IN_APP_STORE
StoreKit invalid receipt
itms-apps:///app/%@
Could not construct product page URL from the adam ID
com.apple.appstored.OctaneBag.dispatch
http://localhost:%ld/WebObjects/MZInit.woa/wa/initiateSession
iap_receipts_properties
com.apple.appstored.UpdatesService
Enabled
Disabled
Update
B16@?0@"RequestThrottleRecord"8
Throttling request for %.0f seconds
app-id
attribution-signature
source-app-id
conversion-value
com.apple.appstored.skadnetworkpingbackcreated
com.apple.appstored.skadnetworkpingbackcreationfailed
com.apple.appstored.skadnetworkpingbacksucceeded
com.apple.appstored.skadnetworkasyncpingbackfetchfailed
com.apple.appstored.skadnetworkpingbackdetailsmissing
adNetworkName
delayTime
retryCount
skadVersion
impressionType
fetchURL
hasConversionValue
hasSourceAppId
missingCampaignId
missingConversionValue
missingFidelityType
missingSourceAppId
com.apple.appstored.InstallAttributionManagerTaskQueue
SKAdNetwork: Impression is missing requisite values.
SKAdNetwork: Cannot start an impression since an open impression already exists.
SKAdNetwork: starting an impression is not supported in this version.
SKAdNetwork: Impression is missing requisite values. Cannot finalize.
SKAdNetwork: ending an impression is not supported in this version.
Campaign id larger than maximum
Campaign id smaller than 1
SKAdNetwork: Failed to fetch the postbacks.
com.apple.appstored.InstallAttributionManager.PingbackRetry
Pingback retry cooldown has not elapsed.
SKAdNetwork: Cannot find proxy URL in the bag
POST
User-Agent
com.apple.appstored.InstallAttributionManager.CleanDatabase
HTTPEnable
HTTPSEnable
Basic %@
Proxy-Authorization
SKAdNetwork: Failed to generate local signature for postback
%@;%@;%f
productType
STDRDL
SWUPD
storePlatformData.software-update-slimmed-lockup.results
fileSizeByDevice
fileSizeInfo
variants
isFirstParty
isHiddenFromSpringboard
isIOSBinaryMacOSCompatible
ovalArtwork
requiresRosetta
runsOnIntel
runsOnAppleSilicon
updateFileSizeInfo
deltaSizeByExternalVersionId
whatsNew
rolloutDeferred
B16@?0@8
Failed to find URL to fetch image upload URLs: %@
The number of URLs received doesn't match the number we need
We received a non-200 response from the server
cell
conr
devs
imsk
ntwk
powr
migr
odte
odts
term
Invalid or missing receipt data (%lu bytes)
Could not find valid application proxy for URL %@
Failed to write receipt to URL: %@
Invalid container for application: %@
DATETIME
JSON
UUID
com.apple.AppStoreFoundation.XPCNotificationCenter
app_metrics_events
metrics_type
payload
v24@?0@"ACAccount"8@"NSArray"16
@"<NSCopying>"16@?0@"<UpdatableApp>"8
background 
v16@?0@"DiagnosticMessage"8
installCode
storeVersionID
bids
ownsCheck
Could not determine account
Could not create url
Ignoring, unsupported action for enterprise request: %@
Ignoring, missing URL for enterprise request: %@
Ignoring, invalid URL for enterprise request: %@
Ignoring, invalid enterprise request with missing URL
v32@?0@"NSUUID"8@"ASDEnterpriseAppMetadata"16^B24
sandboxReceipt
_OnDemandResourcesErrorDomain
FunctionName
SourceFileLine
install_attribution_impression
source_app_bundle_id
process_name
odr_tag
always_preserved
preservation_priority
DeviceConfigurationFlags
SKAdNetworkItems
SKAdNetworkIdentifier
high fidelity impressions not allowed
Rejecting impression from app clip
Did not find Info.plist for app:%@
Did not find ad network items array in Info.plist for app:%@
App:%@ did not have ad network:%@ in Info.plist
SKAdNetwork: Did not find installed app
SKAdNetwork: Did not find Info.plist for app.
SKAdNetwork: Did not find ad network items array in Info.plist.
SKAdNetwork: Ad network ID not found.
SKAdNetwork: App bundle ID and source app adam ID did not match.
InstallAttribution
duAnonymousPings
cancel-purchase-batch
dsPersonId
songList
page-type
preorder-success
optimalDownloadPeriod
durationInMinutes
appClusterAssignmentsResultSet
clusterVersionId
appsClusterAssignments
clusterAssignments
clusterId
launchCountWeight
usageDurationWeight
trigger-download
@"NSURL"16@?0@"NSString"8
CELLULAR_DATA_PROMPT_TITLE_UPDATES_ROAMING
CELLULAR_DATA_PROMPT_TITLE_UPDATES
CELLULAR_DATA_PROMPT_BODY_UPDATE_LIMIT_%@
CELLULAR_DATA_PROMPT_BODY_UPDATE_TOTAL_%@
CELLULAR_DATA_PROMPT_BODY_DISCLAIMER
cellularLimitUpdatesRoaming
cellularLimitUpdates
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_GENERIC
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_GENERIC
cellularLimitDownloadRoaming
cellularLimitDownload
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_GENERIC
CELLULAR_DATA_PROMPT_TITLE_UPDATE_GENERIC
cellularLimitUpdateRoaming
cellularLimitUpdate
CELLULAR_DATA_PROMPT_BUTTON_DOWNLOAD
CELLULAR_DATA_PROMPT_BUTTON_LATER_WLAN
CELLULAR_DATA_PROMPT_BUTTON_LATER_WIFI
later
CELLULAR_DATA_PROMPT_BODY_REMAINING_%@
CELLULAR_DATA_PROMPT_BODY_INITIAL_%@
wapi
CelularDataPromptActionDownloadLater
CelularDataPromptActionDownloadNow
No purchase history data found for requested account
SELECT value FROM purchase_history_db_properties WHERE key = ?
NSBundleResourceRequestTags
Manifest is not a dictionary
NSAssetPacks
Manifest has no tags
CREATE TABLE IF NOT EXISTS iap_purchase_intents (bundle_id TEXT, product_id TEXT, app_name TEXT, product_name TEXT, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (product_id, bundle_id) ON CONFLICT REPLACE);
storekit_purchase_intents
app_installs
Install complete
Updates complete
Receipt response missing revision or transactions
SELECT * FROM %@ WHERE install_attribution_pingbacks.registered = 1 AND install_attribution_pingbacks.is_developer_pingback != 1 AND install_attribution_pingbacks.conversion_value_timestamp < %lld AND install_attribution_pingbacks.is_winning_pingback = 1 GROUP BY %@ ORDER BY MIN(%@);
SELECT * FROM %@ WHERE install_attribution_pingbacks.registered = 1 AND install_attribution_pingbacks.is_developer_pingback = 1 AND install_attribution_pingbacks.conversion_value_timestamp < %lld AND install_attribution_pingbacks.is_winning_pingback = 1 GROUP BY %@ ORDER BY MIN(%@);
SELECT * FROM %@ WHERE install_attribution_pingbacks.registered = 1 AND install_attribution_pingbacks.is_developer_pingback != 1 AND install_attribution_pingbacks.conversion_value_timestamp < %lld AND install_attribution_pingbacks.is_winning_pingback = 0 GROUP BY %@ ORDER BY MIN(%@);
response
jingleAction
inAppBuy
SKServiceDelegateLocalConnection
%@ received a connection from itself
Documents/AppUpdates.sqlitedb
Documents/updates.sqlitedb
software_update
is_profile_validated
SELECT * FROM %@
existingSinf
existingReceipt
com.apple.Music
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
B16@?0@"ASDIAPInfo"8
MANAGE_SUBS_ON_DELETE_TITLE
MANAGE_SUBS_ON_DELETE_MESSAGE_AUTO_RENEWAL_DISALLOWED
MANAGE_SUBS_ON_DELETE_MESSAGE
MANAGE_SUBS_ON_DELETE_MANAGE_BUTTON
MANAGE_SUBS_ON_DELETE_KEEP_BUTTON
MANAGE_SUBS_ON_DELETE_TITLE_PLURAL
MANAGE_SUBS_ON_DELETE_MESSAGE_PLURAL_AUTO_RENEWAL_DISALLOWED
MANAGE_SUBS_ON_DELETE_MESSAGE_PLURAL
MANAGE_SUBS_ON_DELETE_MANAGE_BUTTON_PLURAL
MANAGE_SUBS_ON_DELETE_KEEP_BUTTON_PLURAL
itms-ui://apps.apple.com/account/subscriptions?app=%lld&ctx=appdelete
manageSubscriptionsOnDelete
keep
manage
com.apple.developer.parent-application-identifiers
SKOnDemandInstallOffersInAppPurchases
%@/%lld
Available
SC_Info
@16@?0@"LSApplicationExtensionRecord"8
v24@?0@"LSApplicationRecord"8^B16
%@: (%@, %@, %lld:%lld %@) 
com.apple.appstored.RepairService
Repair
com.apple.appstored.StoreKit.Messages
B16@?0@"StoreKitMessagesDatabaseTransaction"8
v16@?0@"StoreKitMessagesDatabaseSession"8
v32@?0@"StoreKitRevocationInfo"8Q16^B24
TargetDate
PostIntervalOverrideSeconds
RestoreItemKinds
RestoreStoreFrontIDs
RestoreAccountIDs
automaticDownloadKinds
AdPlatformsStatusConditionSetDate
AppUsageMigratedDB
CrossfirePostMetricsSamplingPercentageOverride
DiagnosticClockEnabled
DiagnosticClockOffset
AppUsageActorID
TasteProfileEnabled
AppUsageDailyPostCountOverride
AppUsageEnableMetricsForActorIDSession
AppUsageFlushIntervalOverride
AppUsageFlushTargetDate
AppUsageNextPostTargetDate
AppUsagePostMetricsSamplingPercentageOverride
AppUsageResetActorIDOverride
AppUsageResetActorIDTargetDate
AppUsageTaskGracePeriodOverride
AppUsageTaskSpreadPeriodOverride
AppUsageUseTestTopic
BadgeCount
KeepTemporaryFiles
MarketingDemoMode
BeagleApps
AnalyticsClientIDOverride
ArcadeRepairTimeout
ArcadeDefaultApp
ArcadeDeviceGUID
ArcadeDeviceID
ArcadeDeviceIDCreationDate
ArcadePayoutDeviceID
ArcadePayoutResetDate
ArcadeShouldRetryOptOut
ArcadeSubscriptionState
UseArcadeSwitchUser
OncePerBoot
PowerPluggedInOverride
UserAgentSuffix
ShouldUseASDForPushNotificationRequests
RepairForceSbsync
AttemptedPreflightAccounts
FollowUpAccounts
RestoreSuppressTermsAndConditions
RestoreInstallsFailedWithCodeSigError
com.apple.itunesstored
PerformedPostRestoreUpdate
RestoreSoftFailureRetryDate
ManageSubsOnDeleteBlacklist
AllowStoreKitPaymentRequestData
AllowStoreKitPaymentWithRequestDataWithoutEntitlement
InstallAttributionPingbackDelay
InstallAttributionIgnoreSourceAppCheck
InstallAttributionShouldUseProxy
InstallAttributionShouldSendDevPingback
MediaAPIEnvironmentOverride
InstallAttributionDeveloperPingbackOverride
AutoUpdatesEnabled
UpdateCleanupTime
LastUpdatesCheck
LastAutoUpdateCompletion
PreviouslyInstalledProvisionedApps
LastUpdatesPerform
UseFollowupsForRestoreFailures
vppExpiredApps
vppRevokedApps
AllowAutoDownloadOnCellular
AutomationRunning
EnableBatterySaverOnStartup
CellularSizeLimitOverride
AppClaimHistory
UpdateMigratorConfiguration
DaemonCommsSemaphore
JobApprovalDate
DisablePowerOnStartup
ExternalDownloadSkipATSCheck
ExternalManifestSkipLocalCheck
ExternalManifestSkipHTTPSCheck
InvalidBuildToolVersions
DownloadsScratchGarbageCollectionTime
JobCleanupTime
LastOSInstallDate
LastOSBuildVersion
MaxConcurrentJobCount
MaxConcurrentThermalLimitedJobCount
TransporterConfiguration
SkipManagedAppCheck
TestFlightFeedbackOverrides
ThermalCheckEnabled
UseLaunchCountsForAppUsage
UseModernFreeSpaceCheck
com.apple.appstored.restoreInstalls
success
canceled
conduitConnection
conduitUnknown
invalidApplication
invalidPackage
invalidConsumer
invalidRequest
networkExpired
networkStatus
networkPolicy
networkRecovery
invalidCoordinator
deviceSecurity
deviceState
deviceStorage
ipcError
unknownFailure
app_sessionreporter_key
app_sessionreporter_key_repaired
clientEventId
clusters
collectionTime
cumulativeUserCount
dsId
crashes
playActivity
qualifyingActivity
foregroundDuration
installationType
Retail
qualificationDuration
rangeStartTime
rangeEndTime
weekStartDate
<AppUsageMetricsEvent: %@>
DELETE FROM iap_purchase_intents WHERE bundle_id = ?
UPDATE INTO iap_purchase_intents (timestamp) VALUES (timestamp()) WHERE bundle_id = ?
v32@?0@"lib_IXAppInstallCoordinatorTag"8@"NSError"16^B24
Complete coordinators called
Bundle identifier is required (source = '%ld')
Item identifier is required (source = '%ld')
install_attribution_pingbacks
conversion_value
conversion_value_timestamp
should_send_conversion_value
pingback_url
registered
retry_timestamp
is_winning_pingback
is_developer_pingback
systemgroup.com.apple.ondemandresources
.outstandingwork
Database/odr.sqlite
AssetPacks
machineName
AM/%@
Server Error
v16@?0@"NSNumber"8
@"AMSPromise"16@?0@"NSNumber"8
Previous request was within %@s of this one
refetch
CapabilitiesMatch
MismatchedCapabilities
wi-fi
com.apple.appstored.ThermalPressureMonitor
elevated
nominal
ThermalPressureStateDidChangeNotification
DSPersonID
enterpriseInstallURL
familyID
iAdAttribution
iAdConversionDate
iAdImpressionDate
referrerApp
sourceApp
@16@?0@"StoreItemSubGenre"8
Updating metadata is not supported on this platform
SELECT SUM(ap.bytes_total) FROM app_install AS ai LEFT JOIN app_package AS ap ON ai.pid = ap.parent_id WHERE ai.restore_type = 1 AND ap.package_type = 0
com.apple.appstored.defaultschange
com.apple.TestFlight.ServiceExtension
com.apple.appstored.TestFlightServiceHost.dispatch
v24@?0@"<ASDTestFlightServiceExtensionRemoteXPCInterface>"8@"ASDExtensionRequest"16
v24@?0@"<ASDTestFlightServiceExtensionRemoteXPCInterface>"8@"NSUUID"16
iap_info_iaps
adam_id
intro_offer_status
last_modified_date
purchase_date
sub_family_id
auto_renew_status
CREATE TABLE IF NOT EXISTS app_done (pid INTEGER, account_id INTEGER, item_id INTEGER, machine_based INTEGER NOT NULL DEFAULT 0, request_url URL, transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install (pid INTEGER, account_id INTEGER, apple_id TEXT, arcade INTEGER NOT NULL DEFAULT 0, alt_dsid TEXT, alternate_icon_name TEXT, approved INTEGER NOT NULL DEFAULT 0, artwork_url URL, auto_install_override INTEGER NOT NULL DEFAULT 0, automatic_type INTEGER NOT NULL DEFAULT 0, bundle_id TEXT, bundle_name TEXT, bundle_url URL, bundle_version TEXT, bootstrapped INTEGER NOT NULL DEFAULT 2, cancel_download_url URL, cancel_if_duplicate INTEGER NOT NULL DEFAULT 0, companion_bundle_id TEXT, client_id TEXT, client_type INTEGER NOT NULL DEFAULT 0, coordinator_id UUID, coordinator_intent INTEGER NOT NULL DEFAULT 1, device_based_vpp INTEGER, downloader_id INTEGER, download_path TEXT, external_id UUID, external_order INTEGER, evid INTEGER, failure_error BLOB, gizmo_pairing_id UUID, has_messages_extension INTEGER NOT NULL DEFAULT 0, item_id INTEGER, launch_prohibited INTEGER NOT NULL DEFAULT 0, log_code TEXT, messages_artwork_url URL, optimal_download_start INTEGER, metrics_install_type INTEGER NOT NULL DEFAULT 0, order_index INTEGER, phase INTEGER NOT NULL DEFAULT 10, policy JSON, post_metrics INTEGER NOT NULL DEFAULT 0, placeholder_entitlements BLOB, priority INTEGER NOT NULL DEFAULT 0, quarantine INTEGER NOT NULL DEFAULT 0, receipt BLOB, recovery_count INTEGER NOT NULL DEFAULT 0, redownload INTEGER NOT NULL DEFAULT 0, remote_install INTEGER NOT NULL DEFAULT 0, requires_rosetta INTEGER NOT NULL DEFAULT 0, restore_state INTEGER NOT NULL DEFAULT 0, restore_retry_count INTEGER NOT NULL DEFAULT 0, restore_type INTEGER NOT NULL DEFAULT 0, runs_on_apple_silicon INTEGER NOT NULL DEFAULT 1, runs_on_intel INTEGER NOT NULL DEFAULT 1,software_platform INTEGER NOT NULL DEFAULT 0, source_type INTEGER NOT NULL DEFAULT 0, storefront TEXT, store_cohort TEXT, store_metadata BLOB, supports_32bit_only INTEGER NOT NULL DEFAULT 0, supress_dialogs INTEGER NOT NULL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), transaction_id TEXT, update_type INTEGER NOT NULL DEFAULT 0, vid UUID, vendor_name TEXT, watch_type INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install_remote (pid INTEGER, destination_id TEXT, external_id UUID, metadata BLOB, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_package (pid INTEGER, archive_type INTEGER NOT NULL DEFAULT 0, blocked INTEGER NOT NULL DEFAULT 0, bytes_offset INTEGER, bytes_remaining INTEGER, bytes_total INTEGER, clear_hash_array JSON, compression INTEGER NOT NULL DEFAULT 0, data_promise_id UUID, disk_usage INTEGER, dp_info BLOB, hash_array JSON, hash_size INTEGER, hash_type INTEGER, initial_odr_size INTEGER, locate_asset_cache INTEGER, odr_manifest_url URL, package_type INTEGER, package_url URL, parent_id UUID, provisioning_profiles JSON, request_count INTEGER DEFAULT 0, sinf BLOB, streaming_zip INTEGER, timestamp DATETIME DEFAULT (timestamp()), variant_id TEXT, PRIMARY KEY(pid));
DROP TABLE app_done
DROP TABLE app_install
DROP TABLE app_install_remote
DROP TABLE app_package
%llu
databases/%ld/items/edit
com.apple.appstored.RequestBrokerClient.%@
com.apple.AppStoreDaemon.PurchaseService
com.apple.appstored.ODRDownloadManager.callout
com.apple.appstored.ODRDownloadManager.dispatch
Request for resource exceeds maximum limit.
Device Out of Space
v16@?0@"AssetResult"8
Attempted to download asset pack into nil destination.
com.apple.appstored.XPCRequestToken.%@.%@
[%@]
Unsupported request
com.apple.appstored.AppInstallQueue
Unexpected phase value `%lu`
AppInstallExternalID
fractionCompleted
Installation task returned invalid state
NSAllowsArbitraryLoads
discretionary-always
discretionary-inferred
inexpensive
nolowdata
power
'%@:%%d'
com.apple.appstored.TestFlightExtensionSyncActivity.dispatch
TestFlight Updates
com.apple.appstored.activities.TestFlightExtensionSyncActivity
transactionID
com.apple.appstored.FamilyManager.dispatch
com.apple.appstored.FamilyManager.notifications
AnalyticsDialogName
AnalyticsEventInfo
com.apple.appstored.dialog
actionName
dialogName
B24@?0@"NSString"8@?<@"NSDictionary"@?>16
destructive
uknown
itms-apps://?action=lookup&ids=%@
Open failed, but SPI doesn't provide an error
pinf
octaneClientUUID
B16@?0@"InAppPromotionDatabaseTransaction"8
v16@?0@"InAppPromotionDatabaseSession"8
com.apple.appstored.Coordinator.%@
Canceling coordinator for reason: %@
Succeeded in canceling coordinator
Failed to cancel coordinator error: %@
Succeeded in setting importance %lu
Failed to set importance %lu error: %@
Setting installation options
Succeeded in setting install options
Failed to set install options error: %@
Fetching app promise
Succeeded in fetching app promise
Failed to fetch app promise error: %@
<%@: %p; bundleID = %@; creator = %lu; intent = %lu; UUID = %@>
Coordinator: %@ does not conform to protocol: %@
%K != %@
uniqueIdentifier
Unable to encode metadata
@16@?0@"ASDJobAsset"8
applicationAdamId
cfBundleShortVersionString
cfBundleVersion
gitBranch
uptimeMillis
isAppClip
ciBuildGroup
app_events_ocelot
com.apple.message-payload-provider
iTunesMetadata.plist
Cancelling maintenance operations.
All maintenance operations should now be complete.
%{public}s
Refusing to bootstrap system app with missing bundle identifier
Attempting to bootstrap %lu system app(s)
[%{public}@] Bootstrap completed
Received item for unexpected system app: %{public}@
Bootstrap for %lu system app(s) failed with error: %{public}@
Forcing refresh after unexpected failure validating manifest during preflight for %{public}@ error: %{public}@
(ProtocolHandler) [%p] Reconfiguring request: %@ for task: %@ redirect: %d
[%{public}@] Reconfiguring request for task: %@ redirect: %d
(ProtocolHandler) [%p] Environment not found for task: %{public}@
[%@]: Trying to insert IAP with nil adamId. App adamId: %{public}@, accountID: %@
[%{public}@] Unable to find headboard url: %{public}@
[%{public}@] Error encoding headboard request: %{public}@
[%{public}@] Headboard error looking up data: %{public}@
[%{public}@] Unable to find application record: %{public}@
Message info init userID nil
Message info init bundleID nil
[%{public}@] Error saving download to database
[%{public}@] Checking for crashes of %ld files since: %@
[%{public}@] %@ - %@
[%{public}@] Checking for crashes of %ld files since: %{public}@
%@ - %@
[%{public}@] Error reading file: %@ error: %@
[%{public}@] Skipping simulated crash for type: %{public}@ date: %{public}@ process: %{public}@ bundleID: %{public}@
[%{public}@] Found type: %{public}@ date: %{public}@ process: %{public}@ bundleID: %{public}@
[%{public}@] Error finding modified date for url: %@ error: %@
(BufferedStream) Buffer is empty
(BufferedStream) Signalling end: writer = %@; status = %lu
(BufferedStream) Writer ended, sending bytes available
(BufferedStream) Writer ended, sending end encountered
(BufferedStream) Reader deallocated: %@
(BufferedStream) Writer deallocated: %@
(BufferedStream) Writer closed
Failed to determine if %{public}@ exists: %{public}s
Failed to realpath %{public}s : %{public}s at %{public}s
Rejecting %{public}@ with base %{public}@ because real component counts don't make sense (reals %{public}@ ; %{public}@)
Rejecting %{public}@ with base %{public}@ because base component count is greater or equal to child component count (reals %{public}@ ; %{public}@)
Rejecting %{public}@ with base %{public}@ (reals %{public}@ ; %{public}@) because components diverge at %{public}@ != %{public}@
Realpathed %{public}@ ; appending non-existing components %{public}@
fts_open failed for %{public}s with error %{public}sos_log_error(ASD_LOG_ODR(), 
[%{public}@]: checkQueueWithOptionsclient: %{public}@
[%{public}@]: claimApplicationsWithOptions client: %{public}@
Start for client: %{public}@
[%{public}@]: Treating %i as legacy client
[%{public}@]: Connection denied for pid: %i for non entitled client
[%{public}@]: Client %{public}@ disconnected
[%{public}@]: Got connection from pid: %i
[%{public}@]: Connection interrupted for pid: %i
[%{public}@]: Connection invalidated from pid: %i
Resetting activity for TestFlight extension due to changed intervals
Registering activity for TestFlight extension with interval: %ld minutes and grace period: %ld minutes
Unregistering activity for TestFlight extension
Connection: %{public}@ requesting token for TestFlight
Connection: %{public}@: Per-topic token can be requested only when TestFlight topic is enabled
Connection: %{public}@: Per-topic token can be requested only for TestFlight
Connection: %{public}@ invalidating token for TestFlight
Connection: %{public}@: Per-topic token can be invalidated only for TestFlight
[%{public}@] Connection: %{public}@ received incoming message: %{public}@
[%{public}@] Received new public token: %{public}@ for environment: %{public}@
[%{public}@] Received new token: %{public}@ for topic: %{public}@, environment: %{public}@.
[%{public}@] Sending push request using AppStoreDaemon
[%{public}@] %@ push types call succeeded
[%{public}@] Retrying add push type call since push token had not been registered
[%{public}@] %@ push types call failed with error:%{public}@
[%{public}@] %@ push types call failed.
[%{public}@] Sending push request using StoreServices
[%{public}@] %@ push type returned data: %{public}@
[%{public}@] %@ push type encountered error: %{public}@
[%{public}@] Retried add push type call succeeded
[%{public}@] Retried add push type call failed: %{public}@
[FP/%{public}@] Repair complete with result: %d error: %{public}@
[%{public}@] Wasn't able to display the family leave dialog: %{public}@
[%{public}@] Encountered error opening store. Error: %{public}@
Ignoring subscription renewal info with invalid group ID %{public}@
Ignoring subscription renewal info for %{public}@ with invalid product ID %{public}@
Ignoring subscription renewal info for %{public}@ with no transaction data
[%{public}@]: Unable to initialze with data
[%{public}@]: Unable to set value: %@ for propery: %@
[%{public}@] Unable to clear completed purchases prior to queue check: %{public}@
[%{public}@] Loading queue for account: %{public}@
[%{public}@] Skipping over unsupported '%{public}@' for other clients to collect
[%{public}@] Importing queued purchase failed: %{public}@
[%{public}@] Server sent us to the queue to complete the purchase but the item was not there
[%{public}@] Completed queue check with %lu/%lu download(s) imported
[%{public}@] Failed to check queue: %{public}@
[%{public}@] Failed to check queue: No account available
[%{public}@] Queue check found update for %{public}@ to %{public}@. Installed version = %{public}@ (%lld)
Truncating promise after failure to reset promise %{public}@ with error: %{public}@
No StoreKit In App Receipt Database migration function for %li => %li
Skipping register of non-enabled activity: %{public}@
Activity registered: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity registered: %{public}@ with no deadline for reason: %{public}@
Activity check-in: %{public}@ found deadline was missing, now set for: %{public}@
Activity check-in: %{public}@ with no deadline for reason: %{public}@
Activity check-in: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity exceeded its deadline, forcing run now: %{public}@
Activity fired within deadline (%@), running now: %{public}@
[%{public}@] Reset with reason: %{public}@
[%{public}@] Skipping reset due to activity not enabled activity
[%{public}@] Skipping register of non-enabled
[%{public}@] Using refresh override interval: %lld
[%{public}@] Failed to find bag value due to error: %{public}@. Will default to interval: %lld
Skipping unknown activity: %{public}@
[%{public}@] Completed activity with error: %{public}@
[%{public}@] Completed activity with result: %d
[%{public}@] Handling activity wakeup
[%{public}@] Skipping non-enabled activity
[%{public}@] Activity date too far in the future, using the current date
Setting up activities with build: %{public}@
[DNU] Reset app usage task with reason: %{public}@
[DNU] Not opted in to reset metrics for reason: %{public}@
[DNU] Reset clientUsageID with reason: %{public}@
[DNU] Not opted in to reset clientUsageID with reason: %{public}@
[DNU] Scheduled app usage flush with reason: %{public}@
[DNU] Should reset actorID with post date: %{public}@ reset cutoffDate: %{public}@ result: %d
[DNU] Should reset actorID returning no due to reset date not being set.
[DNU] Added background task: %{public}@ targetDate: %{public}@ gracePeriod: %llu maxRandomDelay: %lld posts: %ld
[DNU] Failed to find bag value for app usage flush interval. Error: %{public}@
[DNU] Using previously scheduled flush date: %{public}@ for activity: %{public}@ reason: %{public}@
[DNU] App usage flush timer interval: %lld
[%{public}@] Scheduling app usage flush for date: %{public}@ reason: %{public}@
[DNU] Added background task: %{public}@ targetDate: %{public}@ interval: %lld
[DNU] App usage grace period bag interval: %{public}@
[DNU] Failed to find bag value for app post grace period. Error: %{public}@
[DNU] Posts per day bag interval: %{public}@
[DNU] Failed to find bag value for posts per day. Error: %{public}@
[DNU] App usage spread period bag interval: %{public}@
[DNU] Failed to find bag value for app post spread period. Error: %{public}@
[DNU] Error re-scheduling clientUsageID reset date. postDate is nil
[DNU] Using previously scheduled clientUsageID reset date: %{public}@ reason: %{public}@
[DNU] Reset clientUsageID bag interval: %{public}@
[DNU] Failed to find bag value to reset clientUsageID interval error: %{public}@
[DNU] Scheduled clientUsageID reset to targetDate: %{public}@ reset interval: %lld time interval based date: %{public}@ postDate: %{public}@ reason: %{public}@
[DNU] %{public}@ xpc activity event
[DNU] %{public}@ xpc activity event complete with result: %d
[%{public}@] %{public}@ xpc activity event
Canceling remote job for %{public}@
Unable to cancel remote job for %{public}@, no XDC support
Canceling local job for %{public}@
Unable to cancel, no job found for bundle ID: %{public}@
Canceled local job for %{public}@
Pausing local job for %{public}@
Unable to pause, no job found for bundle ID: %{public}@
Paused local job for %{public}@
Resuming local job for %{public}@
Unable to resume, no job found for bundle ID: %{public}@
Resumed local job for %{public}@
[AccountEvent] Intialized Coordinator
[AccountEventTimeline]: Clearing internal cache which is %f seconds old
[AccountEventTimeline]: Accounts for week: %{public}@ are: [%{public}@]
[AccountEvent] Active account changed notification accountID: %{public}@ active: %d
[AccountEvent] Recorded account signout event for account: %{public}@ active: %d
[AccountEvent] Recorded account event for account: %{public}@ active: %d
[AccountEvent] Unable to recorded active account event for account: %{public}@
[AccountEvent] No account found following active account change notification: %{public}@
[AccountEventTimeline] Skipping event without accountID with pid: %lld type: %ld
[AccountEventTimeline] Completed account event: %{public}@
[AccountEventTimeline] Skipping activeEnd account event without a start event: %{public}@
[AccountEventTimeline] Skipping event with type: %ld because it is the same account as the current event: %{public}@ with type: %ld
[AccountEventTimeline] Replacing orphan account event due to a new activeStart / initial event: %{public}@
[AccountEventTimeline] Setting current account event to: %{public}@
[AccountEventTimeline] Setting current time as the end time for last active account: %{public}@
[AccountEventTimeline] Skipping final event where which did not have a matching starting event
[AccountEventTimeline]: Date diagnostics
Starting timezone: %@ date: %@ week: %@
Date: %@ payout week: %@
Clearing launch history for %{public}@
No launch history to clear for %{public}@
[%{public}@] Error obtaining app history: %{public}@
[%{public}@] [Offloadable] %{public}@
[%{public}@] cacheInvalidated 
[%{public}@] App deny list is: [%{public}@]
[%{public}@] [%{public}@] May purge %{public}@
[%{public}@] Offloadable is: %lld bytes from %ld app(s) for urgency: %ld
[%{public}@] Offloaded %ld app(s) for total purge of %ld bytes performAvailabilityCheck: %d
[%{public}@] Updating plugin deny list
[%{public}@] [%{public}@] Authorized by Sign In with Apple
[%{public}@] [%{public}@] Timed out getting credential state
[%{public}@] Offload availability lookup resulted in error: %{public}@
[%{public}@] Getting app launch history from %{public}@ urgency: %ld
[%{public}@] Skipping entry with no bundleID: %{public}@
[%{public}@] %{public}@
[%{public}@] [%{public}@] Timeout waiting for removability call
[%{public}@] Excluding candidate: %{public}@ because removability is not possible and allowed. Removability: %ld
[%{public}@] [Candidate] %{public}@ purged: %lld removability: %ld
[%{public}@] Candidate filter stopped at app: %{public}@ purged: %lld
[%{public}@] Purge store availability check failed with error: %{public}@
[%{public}@] Found %ld app(s) available in store
[%{public}@] [%{public}@] Skipping availableInStore: %d
[%{public}@] Grace period start date: %{public}@ offloading grace period start date: %{public}@ beyondGracePeriod: %d
[%{public}@] Offloading date not set
[%{public}@] Looking for source events from %{public}@ to %{public}@ for streams: %ld
[%{public}@] [%{public}@] Unsupported source stream: %ld
[%{public}@] [%{public}@] Updating last usage to startTime: %{public}@ endTime: %{public}@
[%{public}@] Checking for purgeable apps with last modified grace period date: %{public}@
[%{public}@] [%{public}@] Adding with reason: %{public}@
[%{public}@] [%{public}@] Skipping with reason: %{public}@
[%{public}@] [%{public}@] Skipping with reason: Has extension usage in window
[%{public}@] [%{public}@] Skipping with reason: Has usage in window
[%{public}@] [%{public}@] Purged app: %{public}@ purged: %lld
[%{public}@] [%{public}@] Unable to purged app: %{public}@ result: %d error: %{public}@
Could not purge bundleID: %{public}@ becasue we could not get a termination assertion: %{public}@
[%{public}@] Completed purging of %lld bytes where the desired purged amount is %lld
[%{public}@] Springboard widget lookup elapsedTime: %f
[%{public}@] [%{public}@] Failed to find registered date with error: %{public}@
[%{public}@] [%{public}@] Falling back to file system last modified date
[%{public}@] Error finding modified date for bundleID: %{public}@ error: %{public}@
[%{public}@] Widget plugins are: [%{public}@]
[%{public}@] Widget bundles are: [%{public}@]
[Validation] Scanning installed applications for outdated metadata
[Validation] Skipping validation for %{public}@: No owner available or unowned application
[Validation] Skipping validation for %{public}@: No account available for %{public}@
[Validation] Skipping validation for %{public}@: Could not read existing metadata
[Validation] Completed validation for %{public}@: Metadata already up to date
[Validation] Updating metadata for: %{public}@, current Apple ID: '%{private}@' updated Apple ID: '%{private}@'
[Validation] Failed to update metadata for: %{public}@, error occurred: %{public}@
[Validation] Completed validation for %{public}@: Metadata successfully updated
[Validation] Completed scan for installed applications with outdated metadata
 bytes=%{public, signpost.description:attribute}lu 
Download::Unzip/SupplyBytes
Download::Unzip/BackPressureWait
[%{public}@] [%{public}@]  Timed out refreshing receipt
[Crossfire] Initialized with initial analytics switch: %d
[Crossfire] Record app event: [%{public}@]
[%@] Apps deleted: [%{public}@]
[Crossfire] Posting crossfire metrics
[%{public}@] Apps installed: [%{public}@]
[Crossfire] Resetting crossfire metrics
[%{public}@] Sending crossfire metrics
[Crossfire] Setup with reason: %{public}@
[%{public}@] Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@] Importing launch event(s) error: %{public}@
[%{public}@] Imported %ld launch event(s) with result: %d
[%{public}@] Found %ld raw launch event(s)
[%{public}@/%{public}@] Adding event for with type: %ld
[%{public}@] Error sending metrics events. Error: %{public}@
[%{public}@] Completed sending metrics events reason
[Crossfire] Analytics switched to on
[Crossfire] Analytics switched to off
[%{public}@] Crossfire interval not in session
[%{public}@] Queuing %ld crossfire metrics event(s)
[%{public}@] No events to report
[%{public}@] BundleID required for event: %{public}@
[%{public}@] Error creating entity for bundleID: %{public}@ result: %{public}@
[%{public}@] Created app event entity with bundleID: %{public}@
[%{public}@] Error creating entity for bundleIDs: [%{public}@] result: %{public}@
[%{public}@] Created app event entity with bundleIDs: [%{public}@] result: %d
[%{public}@] Importing launch events error: %{public}@
[%{public}@/%{public}@] Removed app metadata
[Crossfire] Error writing duet launch wakeup file: %{public}@
[Crossfire] Wrote duet launch wakeup file
[Crossfire] Error removing duet launch wakeup file: %{public}@
[Crossfire] Removed duet launch wakeup file
[%{public}@]: Installing manifest: %{public}@ for client: %{public}@
[%{public}@] Import failed - no packages
[%{public}@] Failed to build coordinator error: %{public}@
[%{public}@] Unable to determine download size error: %{public}@
[%{public}@] Import failed - error: %{public}@
[%{public}@] Explicitly denied for low data network - canceling installation
[%{public}@] Import failed - already exists
[%{public}@] Import completed successfully
Clearing previous StoreKit promotion order for %{public}@
Setting StoreKit promotion order %{public}@ for %{public}@:%{public}@
Setting StoreKit promotion visibility %{public}@ for %{public}@:%{public}@
Error setting StoreKit promotion info for %{public}@:%{public}@ - %{public}@
Error setting StoreKit promotion info for %{public}@ - %{public}@
Error deleting StoreKit promotion info for %{public}@ - %{public}@
No StoreKit User Messages Database migration function for %li => %li
[%{public}@]: BundleID required for event: %{public}@
Skipping foreground event with timestamp: %{public}@ duration: %{public}@
No local URL provided.  Nothing will be removed.
The URL we are trying to delete is not in the usual asset pack storage location. [URL: %{public}@ AssetPacksPath: %{public}@]
Skipping deletion because the asset pack isn't on disk
Removed : %{public}@
Error removing [%{public}@]: %{public}@
Skipping deletion because the manifest isn't on disk
Going to attempt to remove asset packs parent directory [%{public}@]
Error removing [%{public}@].  Error: %{public}@
Removed: %{public}@
AssetPack's parent directory could not be removed. [%{public}@].  Error: %{public}@
Path has children, >>NOT<< removing: %{public}@
Succesfully purged %{public}@ for reason %ld
Failed to purge %{public}@ for reason %ld
Failed to create destination path at %{public}@: %{public}@
Failed to create destination path at %{public}@
Unexpected type %{public}@ for %{public}@
Missing expected value: %{public}@
Ignoring install of phase %ld in MDM status: %{public}@
Registering event handlers
Received distributed event with invalid name
Posting notification: %@ userInfo: %@
Posting notification: %@
Received distributed event with invalid type
Registered handler for distributed events
Received notification event with invalid name
Received notification event with invalid type
Registered handler for notification events
Requring all stores to migrate after truncating corrupt database at: %{public}@
Exiting after truncating corrupt database at: %{public}@
Exiting after deleting corrupt database at: %{public}@
Database opened at: %{public}@
Database created at: %{public}@
[%{public}@]: Failed to unarchive app version: %{public}@
[%{public}@]: Failed to unarchive feedback: %{public}@
[%{public}@]: Error archiving feedback: %{public}@
[%{public}@]: Failed to convert pending image upload to data %{public}@
[%{public}@]: Failed to convert image uploads to data %{public}@
[%{public}@]: Failed to convert data from property '%{public}@' to array of %{public}@: %{public}@
[%{public}@]: Failed to create a valid URL from %{public}@
 error=%{public, signpost.description:attribute}@ 
[%{public}@] Blocking delta and will retry as full update after encountering error: %{public}@
[%{public}@] Notifying clients of the failed install with error: %{public}@
Failed to fail installation `%lld` does not exist in the database
[%{public}@] Finishing hard fail with final phase: %{public}@
[%{public}@] Finishing with final phase: %{public}@, current phase %{public}@
[%{public}@] Notifing clients of the completed with error: %{public}@
Failed to finish installation `%lld` does not exist in the database
[%{public}@] Import failed silently with error: %{public}@
[%{public}@] Refreshing existing installation (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Skipping duplicate install (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Importing new installation (order = '%{public}@')
Skipping legacy import notification because we don't have an identifier.
[%{public}@] Already paused with phase: %{public}@, ignoring request for reason: %{public}@
[%{public}@] Pausing with phase: %{public}@ for reason: %{public}@
Failed to pause installation `%lld` does not exist in the database
[%{public}@] Resuming installation
Failed to resume installation `%lld` does not exist in the database
Skipping legacy state notification because we don't have an identifier.
[%{public}@] Update failed silently with error: %{public}@
[%{public}@] Current phase is not restartable (phase = '%{public}@')
[%{public}@] Restarting as user initiated (phase = '%{public}@')
No ODR Database migration function for %li => %li
(LZMADecoder) Decoder intialized
(LZMADecoder) Decoder deallocated: %@
(LZMADecoder) Autodetection disabled, entering running state
(LZMADecoder) Inspecting input bytes
(LZMADecoder) Entering passthrough state (%d)
(LZMADecoder) Entering running state (%d)
(LZMADecoder) Passthrough for %lu bytes
(LZMADecoder) Entering error state (%d)
(LZMADecoder) Output buffer completely full
(LZMADecoder) Entering finished state (%d)
(LZMADecoder) Decoded %lu bytes
[%{public}@]: Error canceling coordinator for bundleID: %{public}@ intent: %{public}@ error: %{public}@
[%{public}@]: Canceled coordinator: %{public}@ with result: %d cancelError: %{public}@
[%{public}@]: Error canceling coordinator: %{public}@ error: %{public}@
[%{public}@]: Not canceling non-owned coordinator coordinator: %{public}@
[%{public}@]: Error canceling coordinator for bundleID: %{public}@ error: %@
(ClipAdditionalData) Identified compression info from response: %@
(ClipAdditionalData) Compression method is external LZMA
(ClipAdditionalData) Compression method is unknown, passing through to StreamingZip
(ClipAdditionalData) Could not identify compression info from response
[%{public}@] availableSpaceOnDiskAtPath:%{public}@ failed: %{public}@
[%{public}@] Free space (%lld) is less than required (%lld). Checking cache delete.
[%{public}@] Cache delete does not have enough recoverable space (%{public}@).
[%{public}@] Cache delete has %{public}@ recoverable bytes
[%{public}@] Recovered %{public}@ bytes
[%{public}@] Timed out waiting for cache delete
[%{public}@] Enough space was recovered to proceed (now available: %lld)
Failed to get host reachability flags.
(URLResponseDecoder) Dropping request properties registered for nil task
[%{public}@]: Evaluating download, size = %llu automatic = %d
[%{public}@]: Implicitly denied - automatic downloads are disabled
[%{public}@]: Overriding cellular prompt - network is roaming
[%{public}@]: Implicitly allowed - cellular prompt disabled
[%{public}@]: Implicitly denied - cellular prompt required
[%{public}@]: Implicitly denied - download size is unavailable
[%{public}@]: Implicitly denied - failed to load constraints: %{public}@
[%{public}@]: Implicitly allowed - cellular limit applies
[%{public}@]: Implicitly denied - exceeded cellular limit
[%{public}@] Timeout during looking up timeout value with elapsedTime: %f
[%{public}@] Not showing timeout dialog for background repair
[%{public}@] Non fatal error loading timeout value for error: %{public}@ elapsedTime: %f
[%{public}@] Using override timeout: %f
[%{public}@] Started arcade fairplay recovery with timeout: %f
[%{public}@] Arcade fairplay recovery complete with result: %d elapsedTime: %f
[%{public}@] Logged into accountID: %{public}@
%{public}@ Timeout during fsEntitlements lookup elapsedTime: %f
%{public}@ Not displaying timeout dialog for background repair
[%{public}@] Repairing subscription with status: %ld elapsedTime: %f
[%{public}@] Exiting due to non-recoverable sbsync error: %{public}@
[%{public}@] Timeout during sbsync elapsedTime: %f
[%{public}@] Not showing sbsync timeout dialog for background repair
[%{public}@] Subscription bag was repaired with elapsedTime: %f
[%{public}@] Attempting to relauch app following sucessful repair
[%{public}@] Not attempting to relauch app following sucessful background repair
[%{public}@] Failed to repair subscription. Launching app store. Status: %ld elapsedTime: %f
[%{public}@] Not showing upsell following failed background repair
[%{public}@] Showing dialog for app removed from arcade
[%{public}@] Sign in required to play arcade games
Migrating %{public}@ to %llu
Migrating %{public}@ to %llu failed!
[%{public}@] Received authentication challenge
[%{public}@] Using client certificate for authentication challenge
[%{public}@] Using server trust for authentication challenge
[%{public}@] Prompting user for authentication challenge
[%{public}@] Canceling user authentication challenge
[%{public}@] Completed user authentication challenge
[%{public}@] Using default handling for authentication challenge
[%{public}@] No URL provided for request from client: %{public}@
[%{public}@] The manifest URL isn't external: %{public}@
[%{public}@] Cannot load non-https manifest URL: %{public}@
[%{public}@] Downloading requested manifest at URL: %{public}@
[%{public}@] Invalid kind for iOS platform manifest
[%{public}@] title required for iOS platform manifest
[%{public}@] bundle-identifier required for iOS platform manifest
[%{public}@] [%{public}@] Failed to encode metadata from manifest
[%{public}@] [%{public}@] Manifest only receipt update
[%{public}@] [%{public}@] Error writing receipt: %{public}@
[%{public}@] [%{public}@] Wrote receipt
[%{public}@] [%{public}@] Failed up update receipt on app that is not installed
[%{public}@] [%{public}@] Failed install alllowed check with error: %{public}@
[%{public}@] Manifest resulted in no assets imported
[%{public}@] [%{public}@] Skipping due to incompatible platform: %{public}@
[%{public}@] No manifest data was received
[%{public}@] Manifest has changed, original was: %{public}@ this request: %{public}@
[%{public}@] Could not parse manifest data: %{public}@
[%{public}@] User cancelled manifest confirmation
[%{public}@] [%{public}@] Unable to determine download size error: %{public}@
[%{public}@] [%{public}@] Unable to determine policy error: %{public}@
[%{public}@] [%{public}@] Package for this installation is now missing
[%{public}@] Request failed with error: %@
[%{public}@] Failed to present dialog, trying system dialog error: %{public}@
Failed to delete ODRDownload %{public}@ 
Error mapping %{public}@ to %{public}@
Unable to map %{public}@ to %{public}@
Error removing tags for %{public}@: %{public}@
Error resetting state for %{public}@: %{public}@
Error importing tag with properites %{public}@ for %{public}@
Finished updating manifest.
Asked to update a manifest, but none found matching %{public}@
Skipping import due to lack of identifiers. bundleID: %{public}@ bundleKey: %{public}@
Skipping import due to lack of a source URL. bundleID: %{public}@ bundleKey: %{public}@
Failed to create a new asset pack entity for bundleID: %{public}@ bundleKey: %{public}@
Unable to lookup asset pack with bundleID: %{public}@ and bundleKey: %{public}@
[%@]: Querying purchase history for account: %{public}@
[%@]: Ignoring update request - there is no active account
[PurchaseHistoryManager] Ignoring push notification for accountID: %{public}@ as there isn't any account active
[PurchaseHistoryManager] Checking for update after receiving notification for accountID: %{public}@ server revision: %{public}@
[PurchaseHistoryManager] Received check for accountID: %{public}@ but falling back to active account: %{public}@
[PurchaseHistoryManager] Unable to reference server revision from message, performing default check for: %{public}@
[PurchaseHistoryManager] Failed to complete update for accountID: %{public}@ error: %{public}@
[PurchaseHistoryManager] Sucessfully completed update after notification for accountID: %{public}@
[%@]: Begin observing, current account: %{public}@
[%@]: Updating after account changed
[%@]: Failed to refresh after active account changed error: %{public}@
[PurchaseHistoryManager] Refusing to perform update without an accountID!
[PurchaseHistoryManager] Update is already running, waiting for it to finish
[PurchaseHistoryManager] No queued updates pending
[PurchaseHistoryManager] Update command completed, checking for next command
[PurchaseHistoryManager] Update command failed: %{public}@, checking for next command
[PurchaseHistoryManager] No qualifying update requests remaining
[%@]: Purchase History DAAP data not NSData
[%{public}@]: Implicitly denied low data - automatic downloads are disabled
Defaulting low data threshold to zero because loading value failed: %{public}@
[%{public}@]: Implicitly allowed low data - threshold disabled
[%{public}@]: Implicitly denied low data - download size is unavailable
[%{public}@]: Implicitly allowed low data - threshold applies
[%{public}@]: Implicitly denied low data - over threshold, or threshold unavailable
%{public}s avail: %lld cushion: %lld required: %lld delta: %lld
Handling application installation: %{public}@
Ignoring installation for %{public}@ but it does not appear to support ODR
Ignoring installation for %{public}@ as it already up to date
Cleaning up after installation for %{public}@ as ODR is no longer supported
Handling installation for %{public}@ as a new ODR application
Handling installation for %{public}@ as an ODR application needing repair
Handling installation for %{public}@ as an updated ODR application
%{public}s App %{public}@ is running: %{public}@
%{public}s %{public}@ is not being monitored; not running or connected.
Not removing asset pack with id %{public}@ because the app %{public}@ is running and the asset is not purgeable
 uuid=%{public, signpost.description:attribute}@ 
Purchase/Import
[%{public}@]: Suppressing further dialogs and handling purchase on Watch
[%{public}@]: Dropping invalid purchase: %{public}@
[%{public}@] Overriding automatic installation flag
[%{public}@] Purchase import failed: %{public}@
[%{public}@] Purchase import succeeded
[%{public}@] Purchase import succeeded (duplicate)
[%{public}@] There's no paired device to install this app on!
[%{public}@] Paired device: %{public}@ does not support WKWatchOnly!
[%{public}@] Using workaround for missing buy parameters
[%{public}@] Using workaround for incorrect pricing parameters
[%{public}@]: Queued remote installation on paired device: %{public}@
[%{public}@]: Failed to queue remote installation to paired device: %{public}@
[%@]: Failed to construct request URL error: %{public}@
No Purchase History Database migration function for %li => %li
[%{public}@] Import success for job: %{public}@ / %{public}@
[%{public}@] Import failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Skipped duplicate job: %{public}@ / %{public}@
[%{public}@] Purchase failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Perform updates start with reason: %{public}@
[%{public}@] Could not find update for bundleID: %{public}@
[%{public}@] Skipping %{public}@ due to restrictions, parentalControlsRank: %ld restrictionsRank: %ld
[%{public}@] [%{public}@:%lld][%{public}@] Added purchase for account: %{public}@
[%{public}@] Perform updates complete with reason: %{public}@
[%{public}@] Finished failing purchase batch
[%{public}@] [%{public}@] Showing cellular prompt for 'update all'
[%{public}@] Allowing download over cellular for 'update all'
[%{public}@] Showing low data prompt for 'update all'
[%{public}@] [%{public}@] Allowing download over low data for 'update all'
[%{public}@] Error performing purchase for account: %{public}@ error: %{public}@
[%{public}@] Performing %lu purchase(s) for account: %{public}@
[%{public}@] Error performing purchases for account: %{public}@ error: %{public}@
(VoucherStore) Inserting voucher externalID: %@, Voucher %@
(VoucherStore) Removing voucher for externalID: %@
(VoucherStore) Executing block for externalID: %@, QOS(0x%x) Voucher %@
[%{public}@]: BundleID required for mapping: %{public}@
[Network] Applying emulated network configuration: %{public}@
[Network] Clearing emulated network configuration
[Network] Unable to fetch current cellular data subscription: %{public}@
[Network] Cellular data subscription became: %{public}@
[Network] Unable to identify cellular data subscription: %{public}@
[Network] There is no cellular data subscription
[Network] Network available (expensive = %d, constrained = %d, interface = %{public}@)
[Network] Network unavailable
Attempting app usage migration
[VPP/%{public}@] Will attempt vpp SINF recovery
[VPP/%{public}@] Will not attempt vpp SINF recovery with hasMIDBasedSINF: %d missingRequireSINF: %d
[%{public}@] Attempting VPP SINF migration
[%{public}@] Completed with result: %d SINF migrated: %d
[%{public}@] Attempting VPP SINF migration 
[%{public}@] Completed VPP SINF migration VPP migrated: %d
[%{public}@] Validating existing partial download: %{public}@
[%{public}@] Not validating existing partial download because chunkSize is zero: %{public}@
[%{public}@] Validated %llu bytes at: %{public}@
[%{public}@] Error attempting to truncate partial download: %{public}@
[%{public}@] Error attempting to close file handle: %{public}@
[%{public}@] Unable to delete previous download: %{public}@
[%{public}@] Deleted partially downloaded file due to previous errors: %{public}@
Metadata lookup encountered error: %{public}@
Content restore keybag resulted in error: %{public}@
Successfully completed content restore call with %ld appinstall(s)
Content restore setting ForceAppDRMMode: %d
KBSync unavailable for account: %{public}@ error: %{public}@
[%{public}@] item: %{public}@ due to lack of required metadata
[%{public}@] ContentRestore lookup: %{public}@
Connection taken down HARD, please call close before deallocating: %{public}@
Encountered exception while in transaction: %{public}@
[%@]: Asking delegate to reset database after corruption: %{public}@
[%@]: Truncating database after corruption: %{public}@
[%@]: Reopening database after IO error: %{public}@
[%@]: Asking delegate to reset database after reopen: %{public}@
_bundleID == nil
Could not find non-installed update for bundle ID %{public}@
[%{public}@] Initiating re-purchase for expired update
[%{public}@] Successfully to re-purchased expired update
[%{public}@] Failed to re-purchase expired update error: %{public}@
[%{public}@] Timeout while waiting to re-purchase expired update
%{public}@: Forcing client overrides %{public}@ for %{public}@ until %{public}@
%{public}@ Cannot find process path for %{public}@[%ld]
%{public}@ Cannot find application bundle for %{public}@[%ld]
%{public}@: Initializing client from bundle URL: %{public}@
%{public}@: Initializing client with bundle proxy %{public}@
%{public}@: Client initialized with bundle ID %{public}@ and request bundle ID %{public}@
%{public}@: Payments not allowed. demoMode: %{public}@ profileSetting: %{public}@ ignoreRestrictions: %{public}@
%{public}@: Invalid override dictionary: %{public}@
[%{public}@] Sending authenticate request
[%{public}@] Failed authentication request with error %{public}@
[%{public}@] Sending system dialog request
[%{public}@] Failed dialog request with error %{public}@
[%{public}@] Handling dialog request
[%{public}@] Handling authentication request
[%{public}@] Handling engagement request
[%{public}@] Client overrides expired for %{public}@
[%@]: Cancelling ... 
[%@]: Starting ... 
Impression is missing advertised app id
Impression is missing ad network id
Impression is missing ad campaign id
Impression is missing impression id
Impression is missing source app adam id
Impression is missing timestamp
Impression is missing signature
Impression is missing SKAdNetwork version
Impression is missing source app bundle id
Impression is missing fidelity type
[%{public}@] launchAppStoreWithURL for client: %{public}@
[%{public}@] could not find App Store
Update request received auth challenge for:%{public}@ but found no notification client to pass on to. Attempting internal auth
Errored out for auth challenge to:%{public}@ with error:%@
Received response to authentication challenge for %{public}@
Internal auth failed for %{public}@ with error:%@
Error generating keybag for account: %{public}@
[%{public}@] Error parsing payload from receipt: %{public}@
[%{public}@] Setting receipt revision for %{public}@ to %{public}@
[%{public}@] Error encoding subscription status: %{public}@
[%{public}@]: Presenting first usage dialog for: %{public}@
[%{public}@]: Failed to present first usage dialog for: %{public}@ error: %d
Attempting silent auth for account: %{public}@
Silent auth complete for account: %{public}@
Silent auth failed for account: %{public}@ with error: %{public}@
Attempting loud auth for account: %{public}@
Loud auth complete for account: %{public}@
Loud auth failed for account: %{public}@ with error: %{public}@
Looking for demoted applications for accountID: %{public}@ appleID: %{public}@
Failed to log into account due to error: %{public}@
Could not find account for accountID: %{public}@] appleID: %{public}@
Creating jobs for demoted apps: [%{public}@]
Completed request with error: %{public}@
Completed Restore Demoted request successfully
Registering the push token for arcade hardware offers
[%{public}@] Push for bundleID: %{public}@ badgeID: %{public}@ enabled: %{public}@
Migrating badgeIDs
[%{public}@] Updating badge metrics dictionary for badgeID: %{public}@
[%{public}@] Badge metrics dictionary updated to: %{public}@
[%{public}@] Returning badgeIDs: [%{public}@]
[%{public}@] Returning badge count: %ld
[%{public}@] Removed all badges
[%{public}@] Removing badge metrics for badgeIDs: [%{public}@]
[%{public}@] Badge metrics dictionary updated to: [%{public}@]
[%{public}@]: Synchronizing shared defaults to watch.
[%{public}@]: Received notification that settings changed externally.
Received a notification that preferences have changed externally.
[Device] First boot. Clearing once per boot items
[Device] Starting
[Device] Marked once per boot complete for: %{public}@
[Device] Failed to create first-run semaphore: %s sem: %s
Received SIGTERM, stopping appstored
[%@]: %{public}@ Starting legacy request to refresh IAPs
[%@]: %{public}@ Legacy request completed with error: %{public}@
[%{public}@] Entering %{public}s called by %{public}@
[%{public}@] Exiting  %{public}s
Bag invalidation requested
[%{public}@] Failed to perform action %ld with context %{public}@: %{public}@
Queue refresh requested for %{public}@
Queue refresh requested for %{public}@ but there is no active conneciton to it
Notified of deleted transaction (%lu - %{public}@) for %{public}@
Notified of updated transaction for %{public}@
Port updated to %ld
Removing %{public}lu transactions from cache for %{public}@
Received push with action %{public}@ for %{public}@
[%{public}@] Entering %{public}s for %{public}@ by %{public}@
[%{public}@]: Ignoring method call from %{public}@ because the required bundle ID is missing
[%{public}@]: Ignoring method call from %{public}@ because the app (%{public}@) is not valid for StoreKit testing
[%{public}@] Exiting  %{public}s 
Attached tag: %@ to request: %@
Using the slow path to locate coordinator: %{public}@
Unable to determine intent for coordinator: %{public}@
Successfully fetched a manifest with %lu asset packs for %{public}@
Extractor reset
TRUNCATE
No StoreKitClient available for pid %ld
%{public}@: %{public}@ client type: %ld
%{public}@: Application has StoreKit testing enabled.
%{public}@: Allows client override: %{public}@
%{public}@: Removing connection from connection pool
%{public}@: No client to check server queue
%{public}@: Server queue check not allowed in App Clip
%{public}@: Process not entitled for client override
%{public}@: No client to fetch products
%{public}@: Product fetch not allowed in App Clip
%{public}@: Loading %lu products for %{public}@
%{public}@: Returning %lu products, %lu invalid identifiers for %{public}@
%{public}@: No buyParams to process payment
%{public}@: Client is not entitled to process payment
%{public}@: Could not parse client from buy parameters
%{public}@ Cannot find record for app extension in %{public}@[%ld]: %@{public}@
%{public}@: Could not create client for %{public}@ to process payment with %{public}@
%{public}@: Processing payment with %{public}@
%{public}@: Error processing payment for %{public}@ with %{public}@ - %{public}@
%{public}@: Finished processing payment for %{public}@ with %{public}@
%{public}@: Error consuming sandbox token for custom receipt URL - %{darwin.errno}d
%{public}@: In-App purchases not allowed on device
%{public}@: Error in disabled purchases dialog: %{public}@
%{public}@: No client to process payment
%{public}@: In-app purchase not allowed in App Clip
%{public}@: Could not process payment for product %{public}@ and quantity %lu
%{public}@: Payment has request data but client is not entitled
%{public}@: [%{public}@] Adding payment for %{public}@ and quantity %lu
%{public}@: No client to finish transaction
%{public}@: No transaction identifier to finish payment
Could not notify client of removed entitlements because a weak reference to self was lost while waiting for renewReceiptWithOptions:client:replyBlock: to reply. This is expected if the client has terminated.
Failed to renew receipt: %{public}@
%{public}@: No client to restore transactions
%{public}@: Restoring purchases not allowed in App Clip
%{public}@: Restoring purchases not allowed on device
%{public}@: No client to begin download
No download ID to start
%{public}@: No download ID to cancel
%{public}@: No download ID to pause
%{public}@: No client to resume download
%{public}@: No download ID to resume
%{public}@: No client to renew receipt
%{public}@: Renewing receipt not allowed in App Clip
%{public}@: renewing receipt for %{public}@ with options: %{public}@
%{public}@: fetched storefront %{public}@ (%{public}@)
%{public}@: handleInvalidReceipt for %{public}@
Refund request not currently supported in StoreKit Testing in Xcode.
No active account to show requests to.
Failed to get refund request URL, error: %{public}@
Manage subscriptions request not currently supported in StoreKit Testing in Xcode.
No active account for manage subscriptions.
Failed to get manage subscriptions URL, error: %{public}@
Failed to get user action from refund request sheet, error: %{public}@
%{public}@: No client to get promoted IAP info
%{public}@: No client to set promoted IAP info
%{public}@: Invalid purchase intent (%{public}@, %{public}@)
%{public}@: Adding purchase intent (%{public}@, %{public}@, %{public}@, %{public}@)
%{public}@: Failed to open application %{public}@ with error: %{public}@
%{public}@: No client to get purchase intents
%{public}@: Clearing all purchase intents for bundle identifier %{public}@
%{public}@: Requesting purchase intent products for bundle identifier %{public}@: %{public}@
%{public}@: No client to check messages
%{public}@: Checking messages not allowed in App Clip
Failed to renew app receipt for informing about revoked entitlements: %{public}@
Failed to renew app receipt for informing about revoked entitlements
%{public}@: No active account to check messages
PaymentQueue delegate returned NO: not showing message
%{public}@: No client to present code redemption sheet
%{public}@: Presenting code redeem sheet not allowed in App Clip
%{public}@: No active account to present code redemption sheet
StoreKit: Opening message URL: %@
Failed to get code redemption URL
%{public}@: Notifying client of Storefront change
%{public}@: registerArcadeAppWithRandomFromLib API is not supported on the simulator
%{public}@: arcadeSubscriptionStatusWithNonce API is not supported on the simulator
%{public}@: repairArcadeApp API is not supported on the simulator
%{public}@: No client to register for install attribution
%{public}@: Registering for install attribution not allowed for app clips.
%{public}@: No client to update conversion value
%{public}@: Updating conversion value not allowed for app clips.
%{public}@: Allowing payment request without entitlement on internal device
%{public}@: Processed download with ID: %{public}@
Failed to get code redemption URL, error: %{public}@
Failed to add query params to redeem URL
[SKAdNetwork: Did not find Info.plist for app: %{public}@
[SKAdNetwork: Did not find developer pingback domain in Info.plist
[SKAdNetwork: Developer pingback domain is of unexpected type in Info.plist
[SKAdNetwork: developer provided URL in Info.plist does not appear to be valid
[SKAdNetwork: developer provided URL does not pass domain validation.
No Install Attribution Database migration function for %li => %li
Error fetching rows from parameters table %@
No rows found in parameters table.
Error getting cursor to transfer parameters over. Error:%@
Params migration failure.
Error fetching rows from pingbacks table %@
No rows found in pingbacks table.
Error getting cursor to transfer pingbacks over. Error:%@
Pingbacks migration failure.
Error getting cursor to transfer pingbacks over. Error: %@
Pingbacks migration failure
ValidateAppleIDsTask complete with result: %d
Application %{public}@ did not need repair error: %{public}@
Asset %{public}@ for application %{public}@ does not need repair: %{public}@
Asset %{public}@ for application %{public}@ has gone: %{public}@
Asset %{public}@ for application %{public}@ moved successfully
Asset %{public}@ for application %{public}@ could not be moved error: %{public}@
Asset %{public}@ for application %{public}@ already repaired
Persisting %ld configuration(s): [%{public}@]
Primary content hash matched new primary content hash: %{public}@
Primary hash wasn't a match.  Checking the known hashes.
Primary content hash matched known hash [%{public}@, %{public}@]: %{public}@
No hash matched, and this client is not currently connected, removing assets from device and resetting the localURL.
Setting the fileSize : %{public}@
Setting the downloadSize : %{public}@
Setting the chunk size : %{public}@
Setting the hashes : %{public}@
Setting the MD5 : %{public}@
Setting Download Priority: %{public}@
Setting isStreamable: %{public}@
Setting bundleID: %{public}@
Setting local URL: %{public}@
BundleID: %{public}@
Setting SourceURL: %{public}@
Dropping update to finshing due to no bundleID
Dropping failed TestFlight install due to no bundleID
Dropping failed TestFlight install for %{public}@ due to no error provided
Dropping failed TestFlight install due to no devicePairingID
[%{public}@] Intialized with account account: %{public}@
[%{public}@] Current iTunes account has no DSID: %{public}@
[%{public}@] Account signout notification accountID: %{public}@ active: %d
[%{public}@] Account account changed notification accountID: %{public}@ active: %d
[%{public}@] Posting notification after active iTunes account changed: %{public}@
[%{public}@] Received account change notification but nothing has changed
Not posting account change due to no DSID on account: %{public}@
[%@]: Should notify after iTunes account became active: %{public}@
[%@]: Should notify after iTunes account became inactive: %{public}@
[%@]: Should notify after iTunes account changed: %{public}@
[%{public}@] [%{public}@] Managed application was refreshed with result: %ld
[%{public}@] [%{public}@] Managed application failed with error: %{public}@
[%{public}@] [%{public}@] Attempting to migrate Configurator app SINF
Observing installation notifications
Install/Install
[%{public}@] Canceling installation after receiving reason: %{public}@
[%{public}@] Failing installation after receiving error: %{public}@
Notified that coordinator %{public}@ canceled with reason: %{public}@, but we don't have an active installation for it.
coordinatorDidCompleteSuccessfully for bundleID: %{public}@
[%{public}@] Completing installation after receiving notification
[%{public}@] Application was installed at: %{public}@
[%{public}@] Prioritization requested via coordinator
[%{public}@] Removing automatic flag, prioritized by user
[%{public}@] Reviewing network policy
Ignoring pausing request for unknown coordinator: %{public}@
[%{public}@] Ineligible network, ignoring resumption
[%{public}@] Removing automatic flag, resumed by user
[%{public}@] Reviewing network policy before resuming by user request
[%{public}@] Resuming by user request
[%{public}@] Ignoring duplicate resumption request
Ignoring resumption request for unknown coordinator: %{public}@
[%{public}@]: Prioritize for %{public}@
[%{public}@]: Unable to prioritize due to no bundleID
[%{public}@] SINF mismatch error has been detected
Canceling coordinator for oprhaned app update %{public}@
Received app may be uninstalled notification for bundleID: %{public}@
Received app may be uninstalled notification but no bundleID was included
[%{public}@] Unable to re-pause after cellular access declined: %{public}@
[%{public}@] Stopping because the installation is no longer paused
[%{public}@] Pausing after cellular network access was denied
Returning no match, encountered new interface type: %{public}@
(LZMAStreamReader) Reader deallocated: %@
(LZMAStreamReader) Upstream has bytes available = %d
(LZMAStreamReader) Decoder state finished = %d
(LZMAStreamReader) Upstream event code %lu
(LZMAStreamReader) Filtering stream end event
(LZMAStreamReader) Not forwarding event code %lu
[%{public}@] Prompting to request authentication to establish an active account
[%{public}@] Attempt to establish primary account resulted in error: %{public}@
[%{public}@] Logged into account: %{public}@
[%{public}@] Skipping claim, no active account
[%{public}@] Skipping claim, already did claim for this build: %@ and user: %@
[%{public}@] Skipping claim, wasn't able to discover any unclaimed apps
[%{public}@] Running claim for %ld app(s) for accountID: %{public}@. Last claim was on build: %{public}@
[%{public}@] Claim completed for: %{public}@
[%{public}@] Claim failed with error: %{public}@
[%{public}@] Discovered claimable application: %{public}@
[%{public}@] Skipping claim for %{public}@: Bundle ID not eligible
[%{public}@] Skipping claim for %{public}@: Not installed
[%{public}@] Skipping claim for %{public}@: Not store vended
[%{public}@] Skipping claim for %{public}@: Not missing SINF
[%{public}@] Skipping claim for %{public}@: Missing store identifiers
[%{public}@] Skipping claim for %{public}@: Not missing storeFront
[%{public}@] Skipping claim for %{public}@: Not missing account
[%{public}@] Attempting claim for %{public}@: Passes eligible for corrupted metadata
[%{public}@] Failed to generate keybag for account: %{public}@ error: %{public}@
[%{public}@] Attempting to process %ld item(s) for accountID: %{public}@
[%{public}@] Importing keybag data (%lu bytes) following claim(s)
[%{public}@] Importing keybag data failed with error: %{public}@
[%{public}@] No keybag available to import - keybag sync may follow
[%{public}@] Skipping update bundleID: %{public}@ as it doesn't appear to be installed: %{public}@
[%{public}@] Skipping update bundleID: %{public}@ unable to make launchable
[%{public}@] Updating app metadata for bundleID: %{public}@ for accountID: %{public}@
[%{public}@] Skipping update bundleID: %{public}@ unable to make launchable error: %{public}@
[%{public}@] Metadata could not be updated for  bundleID: %{public}@ for accountID: %{public}@ error: %{public}@
[%{public}@] Claim completed for bundleID: %{public}@ for accountID: %{public}@
[%{public}@] Claim complete for bundleIDs: [%{public}@] for accountID: %@
[%{public}@] Presenting dialog request: %{public}@
[%{public}@] Dialog request failed with error: %{public}@
[%{public}@] Presenting authentication request: %{public}@
[%{public}@] Authenticate request failed with error: %{public}@
[%{public}@] Presenting engagement request: %{public}@
[%{public}@] Engagement request failed with error: %{public}@
FamilyMember: Received an invalid server response for FamilyMember. serverResponse = %@
Received locale change, stopping appstored
Stopping for idle-exit
There are %lu open transaction(s):
[%@]: %{public}@ Getting IAPs for active account for client: %{public}@
[%@]: %{public}@ Getting specific IAPs for active account for client: %{public}@
[%@]: %{public}@ Refreshing IAPs for active account for client: %{public}@
[%@]: Setting subscriptions for clientID: %{public}@ accountID: %{public}@ segment: %lu
[%@]: %{public}@ Handling News subscriptions request for: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling subscription entitlements request for segment: %lu: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling cached subscription entitlements request for segment: %lu: %{public}@
[%@]: Parser canceled
[%@]: Parser failed with error: %{public}@
Application Identifier is: %{public}@
Connected with [%{public}@]
Application: %{public}@ Version: %{public}@
Lost connection to '%{public}@'.
Created ODRClient from %{public}@
Asset Pack : %{public}@ has no localURLString.
This URL is invalid, we need to refresh the manifest. [%{public}@]
Refreshing manifest for application: %{public}@
Completed manifest refresh for application: %{public}@
Manifest refresh failed for application: %{public}@ error: %{public}@
Doing the initial handshake with Application [%{public}@]
Connected application does not support ODR: %{public}@
Granted sandbox extension to: %{public}@ %@
No storage ID found in manifest for bundle ID %{public}@
No manifest found for bundle ID %{public}@
Application handshake failed with no applicationID. No sandbox extensions will be granted.
%{public}@
%{public}s BundleURL [%{public}@]
Pin tags failed for invalid tag in set [%{public}@], bundleURL: %{public}@
Going to pin asset %lu pack ids.
Going to pin asset packs: %{public}@
Trying to pin asset pack with ID: %{public}@
Pinning asset pack [%{public}@]
Progress was cancelled...
Error pinning asset pack: %{public}@
Creating Result [%{public}@] [%{public}@]
Calling the completion handler. Result [%{public}@] Error [%{public}@]
Conditional pin failed with no tags fetched from set for bundleURL: %{public}@, tags in set: %{public}@
Asset Pack [%{public}@] is on the device but due to space constraint it can not be pinned, not doing any conditional pinning.
Asset Pack [%{public}@] is NOT on the device, not doing any conditional pinning.
Asset Pack [%{public}@] is on the device.
A required asset pack is not available locally. Not continuing with the conditionally pin.
AssetPack will be newly pinned, attempting to get sandbox extension. [BundleID: %{public}@ Path: %{public}s]
Got a sandbox token for url [%{public}s]
Unable to get sandbox token for path [%{public}s]
AssetPack [%{public}@] pin count is going from [%lld] to [%lld]
No asset packs found for tags %{public}@ when asked to set the loading priority to %f
Found %lu asset packs for tags %{public}@, set the loading priority to %f
Unpin tags failed for invalid tag in set [%{public}@], bundleURL: %{public}@
Asset pack %{public}@ was not pinned when unpinning tags %{public}@
The asset pack we were cleared to purge [%{public}@] has a pin count [%lld]. AssetPack will not be marked as purgeable.
Error downloading asset %{public}@: %{public}@
Tags aren't valid for [%{public}@].
Tag %{public}@ isn't valid for [%{public}@].
Changed Pin Count from %lld to %lld for asset pack %{public}@
Pin count for asset pack with ID: %{public}@ was %lld when trying to unpin
Unable to unpin asset pack.  We cannot determine the calling app's bundleID.
Generating new encryption key for identifier: %{public}@
Unable to fetch/generate key with identifier: %{public}@ error: %{public}@
Starting batch restore for %ld items with accountID: %{public}@
Using the active account for content restore call
Error running content restore request. Error: %{public}@
Retry complete for items: [%{public}@]
[%{public}@] Hard failing after %ld attempts
[%{public}@] Soft failing item not in the server response, and not encountering an error. Soft failure retry count: %ld
itemID: %{public}@ not in restore map
Skipping post processing to server item missing missing itemID for item: %{public}@
Skipping post processing of failed itemID: %{public}@ due to missing mapped item
Skipping post processing of failed itemID: %{public}@ due to missing mapped install item
[%{public}@] Soft failing with %ld attempts
[%{public}@] Skipping item due to missing itemID on metadata
[%{public}@] Content lookup succeeded
[%{public}@] getMetricsEventsForType for client: %{public}@
[%{public}@] getMetricsEventsForType complete for client: %{public}@
[%{public}@] postMetricsEventsForType for client: %{public}@
[%{public}@] recordMetricsEventsForType for client: %{public}@
[%{public}@] resetMetricsEventsForType for client: %{public}@
[%{public}@] Cancelling update for accountID: %{public}@ context: %{public}@ error: %{public}@
[%{public}@] Completed update for accountID: %{public}@ context: %{public}@
[%{public}@] Failed update for accountID: %{public}@ context: %{public}@ error: %{public}@
[%{public}@] Proceeding with update, no previous update time recorded for accountID: %{public}@ context: %{public}@
[%{public}@] Unhandled update context value: %lu
[%{public}@] Allowing update for accountID: %{public}@ last update: %{public}@ context: %{public}@
[%{public}@] Blocking update for accountID: %{public}@ last update: %{public}@ context: %{public}@
(PurchaseHistory) Force refresh interval: %{public}@
(PurchaseHistory) Failed to receive refresh interval error: %{public}@
(PurchaseHistory) Purchase refresh enabled: %{public}@
(PurchaseHistory) Failed to receive purchase refresh enabled error: %{public}@
(PurchaseHistory) Update polling frequency interval: %{public}@
(PurchaseHistory) Failed to receive update polling frequency interval error: %{public}@
(PurchaseHistory) Error getting last updated date: %{public}@
(PurchaseHistory) Failed to set last update timestamp for accountID: %{public}@ error: %{public}@
[%{public}@] Error decoding response metadata, isUpdate not parsed
[%{public}@] Error decoding response metadata, revision not parsed
[%{public}@] Completed update for account: %{public}@ authenticated account: %{public}@
[%{public}@] Error updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%{public}@] Decoded server revision: %@
[%{public}@] Decoding server revision failed
[%{public}@] Server items request failed, no request context: %@
[%{public}@] Server items request started
[%{public}@] Server items request completed (%lu bytes)
[%{public}@] Server items request failed (%@)
[%{public}@] Server revision request failed, no request context: %@
[%{public}@] Server revision request started
[%{public}@] Server revision request completed (%lu bytes)
[%{public}@] Server revision request failed (%@)
(PurchaseHistory) Local: %@ < Server: %@ => Needs update: %@
[%{public}@] Could not find handler to repair application
[%{public}@] Unable to relaunch due to error: %{public}@
[%{public}@] Relaunched application after repair completed
[%@]: Client connected: %@
[%@]: sendJobsCompleted to client: %@ for jobs: [%@] with finalPhases: %@ 
[%{public}@]: Allowing access to cellular (mask = %lx)
[%{public}@]: Denying access to cellular (mask = %lx)
[%{public}@]: Allowing access to low data network (result = %ld)
[%{public}@]: Denying access to low data network (result = %ld)
[%{public}@]: Allowing access to expensive network (result = %ld)
[%{public}@]: Denying access to expensive network (result = %ld)
[%{public}@] Package `%lld` has no location set
[%{public}@] Will download package using request: %{public}@
[%{public}@] Skipping cleartext validation for legacy purchase path
[%{public}@] Cleartext hashes are missing, download will likely fail
[%{public}@] Failed to establish decryption consumer error: %{public}@
Could not find max-item-count bag value. Defaulting to 5
[%{public}@] Skipping restore accountID: %{public}@ not matching accountID: %{public}@
[%{public}@] Bootstrap has been started
Failing %ld restores due to account failures
No update available for 32-bit app: %{public}@
Hydrating apps: [%{public}@]
[%{public}@]: Checking if we can re-hydrate bundleIDs: [%{public}@]
[%{public}@]: Promoting system app %{public}@ failed: %{public}@
[%{public}@]: Promoting system app %{public}@ (%{public}@)
Created the app review client.
[App Review] Importing %lu byte manifest for %{public}@
[App Review] We failed to copy the tag manifest for %{public}@, importing just the manifest data
[%{public}@] Canceling purchase due to error: %{public}@
[%{public}@] Refusing to re-complete purchase
[%{public}@] Failing purchase with error: %{public}@
[%{public}@] Refusing to fail completed purchase (error was: %{public}@)
[%{public}@] Cannot mix machine based and non-machine based purchases
[%{public}@] Created batch for machine based purchases
(RestoreService) Restore state -> UNKNOWN
(RestoreService) Restore state -> NONE
(RestoreService) Restore state -> PREPARING
(RestoreService) Restore state -> RUNNING
(RestoreService) Releasing parked download estimate requests: %lu
[%{public}@] [%{public}@]: No active account for subscription status request
[%{public}@] [%{public}@]: Starting subscription status request
[%{public}@] [%{public}@]: Subscription status request failed with error - %{public}@
[%{public}@] [%{public}@]: Finished subscription status request
[%{public}@] [%{public}@]: Invalid response for subscription status request: %{public}@
[%{public}@] [%{public}@]: Subscription status response does not contain required fields: %{public}@
[%{public}@] [%{public}@]: Invalid subscription group ID for status request: %{public}@
[%{public}@] [%{public}@]: Invalid status %{public}@ for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid lastTransactions for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid renewal info for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid transaction for subscription group ID %{public}@
[%{public}@] Using downloader-dsid
[%{public}@] Using purchaser-dsid
[%{public}@] Setting accountID: %{public}@ discovered using alt-dsid: %{public}@
[%{public}@] Completing coordinator for restore type: %ld reason: %{public}@
[%{public}@] Failed to find existing coordinator. Error: %{public}@ reason: %{public}@
[%{public}@] Failing coordinator with reason: %{public}@
[%{public}@] Failed to find existing coordinator to fail with reason: %{public}@
Logged into accountID: %{public}@ appleID: %{private}@
Bootstrapping restores for accountID: %{public}@ with reason: %{public}@ userIntiated: %d
Bootstrapping all restores with reason: %{public}@
Bootstrapped %ld ordered / %ld non-ordered restores for accountID: %{public}@
Bootstrapped %ld ordered / %ld non-ordered restores
Bootstrap completed. Pending lookup: %ld hard failures: %ld soft failures: %ld
Bootstrap completed. Will attempt to process failures if needed
Bootstrap completed. Will not attempt to process failures if needed
%{public}@: Attempting metadata lookup for %ld apps
%{public}@[%{public}@]: Hard failing %ld non ordered restores due to token failure
%{public}@[%{public}@]: Failing %ld token failures. Failing coordinators: %d
%{public}@[%{public}@]: Lookup complete with %ld successful lookups and %ld failures
%{public}@: Bootstrap completed with successful lookups: %ld hard failures: %ld
%{public}@: No restores to bootstrap
Creating observer to bootstrap restore for reason: %{public}@. Setup complete: %d migrator complete: %d
Using previously soft fail scheduled date: %{public}@ for activity: %{public}@ interval: %lld
Keeping previously soft fail scheduled date: %{public}@ for activity: %{public}@ interval: %lld
Using new date: %{public}@ for activity: %{public}@ interval: %lld
Hydrate: Finishing completed content restore items
Ordered: Finishing completed content restore items
Non Ordered: Finishing completed content restore items
Device state changed and ready to restore. Setup complete: %d migrator complete: %d
Device state changed setup not ready for restore. Setup complete: %d migrator complete: %d
Restore attempted without metadata
[%{public}@] %{public}@ start
[%{public}@] Moving install phase to with coordinatorID: %{public}@
[%{public}@] %{public}@ : Encountered a token error: %{public}@ for account: %{public}@
[%{public}@] %{public}@ : Retrying restore with account: %{public}@
[%{public}@] %{public}@ : Failed to obtain fresh account for appleID: %{private}@
[%{public}@] %{public}@ : Not prompting do to userInitiated: %d appleID: %{private}@
[%{public}@] %{public}@ metadata lookup succeeded
[%{public}@] %{public}@ Promoting all other apps for account: %{public}@ following successful hydration
[%{public}@] %{public}@ failed metadata lookup
[%{public}@] %{public}@ complete with error: %{public}@
Failed %ld items for accountID: %{public}@ due to token error
Failing out remaining %ld items for accountID: %{public}@ due to token error
Batch complete for accountID: %{public}@ batch successes: %ld batch failures: %ld batch remaining: %ld
[%{public}@] Couldn't find an appleID
[%{public}@] Couldn't find a downloaderID or purchaserID
Skipping previously attempted preflight of account: %{public}@/%{public}@
Preflighting account: %{public}@/%{public}@
Error authenticating for appleID: %{public}@ error: %{public}@
Failing all coordinators for appleID: %{public}@ error: %{public}@ following a user canceled dialog
Updated attempted preflight accountIDs to: [%{public}@]
Screen sync not preflighting accounts: %{public}@
Retrying restore of apps for account: %{public}@
[%{public}@] Making a promoting coordinator
Re-bootstrapping account: %{public}@/%{public}@ apps: [%{public}@]
[%{public}@] Retrying following authentication of account: %{public}@/%{public}@
Non-matched failed restore apps are: [%{public}@]
[%{public}@]: Requires unconstrained network, but not prompting for automatic download.
[%{public}@]: Requires unconstrained network, but not prompting for current network.
[%{public}@]: Error delivering dialog request: %{public}@
[%{public}@]: We were asked to download now. Ignoring constrained network.
[%{public}@]: We were asked to cancel download. Denying network access.
[%{public}@]: Evaluation for download completed with result: %ld
[Power] Battery saver is enabled
[Power] Power source is plugged in
[Power] Power source is battery
[Power] Registration for power notification failed: %u
Skipping legacy finish notification because we don't have an identifier.
[%{public}@]: Encountered failure: %{public}@
Failed to mark all downloads done error: %{public}@
[%{public}@]: Registered cache delete callbacks for clientID: %{public}@ with osResult: %d
[%{public}@]: Requested cancel purge for service
[%{public}@]: ODR has not been set please make sure everything is configured correctly.
[%{public}@]: Periodic purge request %{public}@ with urgency %ld
[%{public}@]: Purge request with desired bytes: %{public}@ with urgency: %ld
[%{public}@]: Nothing to purge for urgency %ld
[%{public}@]: Purged %ld bytes for odr
[%{public}@]: Purged total bytes: %ld desiredPurge: %{public}@ urgency: %ld
[%{public}@]: Purgeable request with urgency: %ld
[%{public}@]: Purgeable total bytes: %lld  for urgency: %ld cached value: %d
[%{public}@]: Pushed combined purgeable amounts: %{public}@
[%{public}@]: Nothing to push
[%{public}@]: Refreshing purgeable storage with reason: %{public}@
[%{public}@]: Refreshed app purgeable: %{public}@
[%{public}@]: Refreshed ODR purgeable: %{public}@
[%{public}@]: Unknown urgency value, defaulting to low urgency
Not removing temporary download folder as specified by user defaults: %{public}@
Removed temporary download folder: %{public}@
Error when trying to remove temporary download folder: %{public}@ : %{public}@
Cleaned up temporary download folder: %{public}@
Error when trying to clean up temporary download folder: %{public}@ : %{public}@
Download path exists but is not a directory: %{public}@
Creating temporary download folder: %{public}@
Failed to create directory: %{public}@ error: %{public}@
Unable to determine path for directory: %ld domain mask: %lu with path component: %{public}@
Failed to determine container path error: %llu
Failed to set attributes for: %{public}@ error: %{public}@
Deleted file that didn't match whitelist: %{public}@
Failed to delete file that didn't match whitelist: %{public}@ error: %{public}@
Keeping whitelisted file: %{public}@
Failed to fetch contents of: %{public}@ error: %{public}@
[%{public}@]: Found commonly used apps: [%{public}@]
[%{public}@]: Persisting based on duet
[%{public}@]: Looking for %ld apps out of %ld
[%{public}@]: Wrote app usage for %ld apps: 
%{public}@
[%{public}@]: No app usage to save
[%{public}@]: Persisting based on launch counts
 [%{public}@]: Error creating common app list: %{public}@
[%{public}@]: Wrote app usage for total userApp count: %ld popular count: %ld apps: 
%{public}@
[%{public}@]: Failed to write app usage
[%{public}@]: Wrote app usage to path: %@
[%{public}@]: Unable to write apps usage due to not being able to find the container path
[%{public}@]: Unable to write apps usage due serialization: %{public}@
[%{public}@] Starting with subscriptionInfo: %{public}@
[%{public}@] Starting with sbsyncType: %{public}@
[%{public}@] Starting with active account: %{public}@
[%{public}@] Starting with provided account: %{public}@
[%{public}@] Subscribed status updated to: %ld
[%{public}@] Subscribed status unchanged due to sbKeyBag not in response
[%{public}@] Successfully completed with subscription status: %ld time: %f
[%{public}@] Encountered error: %{public}@ time: %f
[%{public}@] Skipping non user initiated dialog request
[%{public}@] Encountered dialog request: %{public}@
[%{public}@] Sending dialog request
[%{public}@] Error sending dialog request: %{public}@
[%{public}@] Importing sbKeyBag
Got message URL from response
Error in messages response: %{public}@
Error parsing messages response: %{public}@
No URL in messages response: %{public}@
Error parsing URL in messages response: %{public}@
Failed to get messages request URL, error: %{public}@
Failed to add parameters to messages request URL
Executing the Validate On Device Asset Packs Operation.
Removing %{public}@ [%{public}@]
Unable to remove %{public}@ [%{public}@] error: %{public}@
ValidateOnDeviceManifestsOperation has been cancelled.
Path for asset packs is unset.
Sanity checking the on-disk asset packs failed.  Error: %{public}@
Examining %{public}@
Validate On Device Asset Packs operation has been cancelled.
Skipping validation of StoreKit downloads directory
Asset Pack Name: %{public}@
Asset pack at %{public}@ has no entry in the database, checking to see if it matches any entry
Entry for asset pack at %{public}@ found and has been updated in the database
No entry found for asset pack %{public}@, it has been deleted
Examining metadata at URL: %{public}@
Examining asset pack at URL: %{public}@
Revocation info init userID nil
Revocation info init bundleID nil
Revocation info init productID nil
[%@]: Status changed: %d
[%{public}@}] Failing installation with bootstrap error: %{public}@
[%{public}@}] Reset bootstrap phase, ready for next attempt
Active installations: %lu/%lu Lowest Priority: %ld Highest Priority: %ld
No contention, starting: %{public}@
Jettison candidate (%ld), starting: %{public}@
Prioritized (%ld >= %ld), starting: %{public}@
Polling complete with %lu active installation(s)
[%{public}@] Encountered invalid installation which was not really running
[%{public}@] Sanity check failed - this installation doesn't appear need bootstrap, starting anyway
Refusing to begin transportation for known path: %{public}@
Refusing to begin transportation as path does not exist: %{public}@
Remembering path after ending transportation: %{public}@
(XPCServiceClient) There is no current connection - tokens can only be created at the point an XPC call enters
(XPCServiceClient) There is no connection context - tokens can only be created from service client connections
(XPCServiceClient) There is no service client - call was probably racing the teardown of the connection
(XPCServiceClient) Received connection from client: %{public}@
(XPCServiceClient) Encountered error when looking for available dialog observer: %{public}@
[%@]: Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@] Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@
[%{public}@] Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@ hasMetadata: %d
[%{public}@] [%{public}@] Using deviceVendorID: %{public}@ for new event with type: %{public}@
[%{public}@] Created app event for bundleID: %{public}@ with type: %{public}@
[%@]: Failed to create event with topic: %{public}@
[%@]: Type: %ld : %{public}@
[%@]: Not recording uninstall for offloaded bundleID: %{public}@
[%@]: Not recording uninstall for placeholder bundleID: %{public}@
[%@]: Warning: Did not find a corresponding delete event for bundleIDs: [%{public}@]
[%@]: Not recording uninstall for ineligible bundleID: %{public}@
[%@]: Not recording uninstall for bundleID: %{public}@ due to lack of metadata
[%{public}@] Looking for launch events from: %{public}@ to: %{public}@ for: %ld apps(s)
[%{public}@] allUsageForStreams resulted in error: %{public}@
[%{public}@] Could not find app metdata for: %{public}@
[%{public}@] Non candiate app with bundleID: %{public}@
[%{public}@] Skipping too short launch for: %{public}@. minTime: %ld runningTime: %lld
[%{public}@/%{public}@] Creating fresh app usage session entity. Was expired: %d
[%{public}@/%{public}@] Error creating fresh app usage session entity. Error: %{public}@
[%{public}@/%{public}@] Cleaned up app ussage session: %{public}@
[%{public}@] [%{public}@:%lld] Writing metadata
[%{public}@]: Unable to record current apps due to error: %{public}@
[%{public}@]: Recorded metadata for %ld app(s)
[%{public}@] Restoring completed purchases
[%{public}@] Error restoring purchases: %{public}@
[%{public}@] Sending authentication request
[%{public}@] No account after authentication: %{public}@
[%@] flushMetricsWithCompletionBlock for client: %{public}@
[%@] getAppPayoutEventsWithCompletionBlock for client: %{public}@
[%@] getAppSummaryEventsWithCompletionBlock for client: %{public}@
[%@] recordLaunchesWithCompletionBlock for client: %{public}@
[%@] recordMetricsWithCompletionBlock for client: %{public}@
[%@] reportAppEvent for client: %{public}@
[%@] resetMetricsWithCompletionBlock for client: %{public}@
[%@] sendPayoutMetricsWithCompletionBlock for client: %{public}@
[%@] sendSummaryMetricsWithCompletionBlock for client: %{public}@
[%@]: sbsyncIfSubscribedWithAccount:completionBlock for client: %{public}@
[%@] sbsyncWithCompletionBlock for client: %{public}@
[%@] sbsyncWithDuration:completionBlock for client: %{public}@
[%@] subscriptionDetailsWithCompletionBlock for client: %{public}@
[%@] subscriptionStateWithCompletionBlock for client: %{public}@
topAppForAccount for client: %{public}@
[%{public}@]: Attempting hydrate bundleID: %{public}@
[%{public}@]: Failed to hydrate bundleID: %{public}@ error: %{public}@
[%{public}@]: Unable to hydrate placeholder for bundleID: %{public}@ installType: %ld due to lack of store itemID
[%{public}@]: Hydrating placeholder for bundleID: %{public}@ itemID: %llu installType: %ld
[%{public}@]: Application does not need rescue, bundleID: %@ is already installed!
[%{public}@]: Cannot find application with bundleID: %@
[%{public}@]: Logging watchdog timeout: %{public}@
[%{public}@] Error generating updates URL. Error: %{public}@
[%{public}@] Error encoding request: %{public}@
[%{public}@] Error fetching updates: %{public}@
[%{public}@] Error generating keybag for account: %{public}@
[%@]: ** RECEIVED CONNECTION TEST: %@ **
Device has no destination ID: %{public}@
Device not found for from ID: %{public}@
Unable to find device with ID: %{public}@
Skipping device with no destination ID: %{public}@
[%{public}@]: flushMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: getGroupingToken for client: %{public}@
[%{public}@]: getClusterMappingsWithCompletionBlock for client: %{public}@
[%{public}@]: getPersonalizationEventsWithCompletionBlock for client: %{public}@
[%{public}@]: recordMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: recordLaunchesWithCompletionBlock for client: %{public}@
[%{public}@]: reportAppEvent for client: %{public}@
[%{public}@]: reloadClusterMappingsWithCompletionBlock for client: %{public}@
[%{public}@]: resetActorIDWithCompletionBlock for client: %{public}@
[%{public}@] resetMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: sendMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: setClusterMapping for client: %{public}@
[%@]: Created transaction: %@
[%@]: Purgeable update request for client: %@
[%{public}@] Intializing metrics app metadata
[%{public}@] [%{public}@] May be uninstalled
[%{public}@] Not recording metrics following change from accountID: %{public}@ to accountID: %{public}@ active: %d
[%{public}@] [%{public}@] Recording deleted apps: [%{public}@]
[%{public}@] [%{public}@] Recording installed apps: [%{public}@]
[%{public}@] [%{public}@] Recording supplemental metrics with activeAccountID: %{public}@
[%{public}@] [%{public}@] Reset metrics
[%{public}@] Unable to record current apps due to error: %{public}@
[%{public}@] Recorded metadata for %ld app(s)
[%{public}@] Converting background update to foreground
Ignoring request to set update state of %{public}@, current state is already %ld
Updated state to installed for bundleID: %{public}@
Resetting update state for: %{public}@ to %ld
[%{public}@] Reset purchase state update for bundleID: %{public}@
[%{public}@] Failed to reset purchase state update for bundleID: %{public}@
[%{public}@][%{public}@] Setting update state to %ld
Database migration function for %li => %li success=%d
No app updates migration function for %li => %li
Invalid hash '%@' expected '%@'
[%{public}@] A push token is required for the registration call
[%{public}@] Successfully registered push token, proceeding to add push type
[%{public}@] Error while registering for push: %{public}@
[%{public}@] Could not find URL to %@ push type
[%{public}@] Sending authentication request to client %{public}@
[%{public}@] No client available to handle authentication request
[%{public}@] Authenticated successfully
[%{public}@] Error prompting for account: %{public}@
[%{public}@] Showing system alert authentication
Skipping system app bootstrap - pending task already exists
Queuing %lu system app(s) for bootstrap
Skipping system app bootstrap - no installations pending
Bootstrapping system applications will be reset after error: %{public}@
Ignoring monitor state change notifications
Jettisoned %lu installation(s) due to thermal pressure: %{public}@
[%{public}@] Installation remaining paused for expensive network
[%{public}@] Installation remaining paused for low data network
[%{public}@] Resuming installation paused for policy
Polling scheduler: [%{public}@]
Limiting maximum active count due to thermal pressure
No waiting installations, ignoring monitor state change notifications
%{public}@ waiting installation(s), observing monitor state change notifications
Polling completed, started %lu installation(s): %{public}@
Polling completed, started 0 installations
[%{public}@] Resetting bootstrap phase after daemon restart
Requesting scheduler poll for %lu reset installation(s) after daemon start
Scheduling next optimal download for %{public}@
[%{public}@]: Allowing start, no policy set, allowing install to start unconditionally
[%{public}@]: Denying start, device security not approved
[%{public}@]: Denying start, pending termination
[%{public}@]: Denying start, no network available
[%{public}@]: Denying start, no identity when checking policy: %{public}@
[%{public}@]: Denying start, implicitly denied expensive network by evalulator
[%{public}@]: Denying start, explicitly denied expensive network by user
[%{public}@]: Expensive network allowed, overriding interface mask
[%{public}@]: Denying start, implicitly denied low data by evalulator
[%{public}@]: Denying start, explicitly denied low data by user
[%{public}@]: Interface mask unspecified, defaulting to always inexpensive
[%{public}@]: Denying start, no matching network interface
[%{public}@]: Denying start, no power available
[%{public}@]: Denying start, battery saver enabled
[%{public}@]: Denying start, pending data migration
[%{public}@]: Denying start, pending setup assistant
[%{public}@]: Denying start, pending optimal download window
[%{public}@]: Allowing start, all policy conditions were met
We did not receive any hash data, skipping hash verification
Guessing MD5 hashing type - but we received an unknown value (%{public}@)
Guessing MD5 hashing type - but we received no value
[Bag] Failed to fetch value for '%{public}@' error: %{public}@
[Bag] Returning live value '%{public}@' = '%{public}@'
[Bag] Returning memoized value '%{public}@' = '%{public}@'
[Bag] Resetting memoized value for '%{public}@'
Performing test flight feedback migration
[%{public}@] Could not load download manifest with underlying error: %{public}@
[%{public}@] Factory VPP claim using evid: %{public}@
[%{public}@] Unable to find options account using accountID: %{public}@
[%{public}@] Using options account: %{public}@
[%{public}@] Using active account: %{public}@
[%{public}@] Not using an account
[%{public}@] Preflight error: %{public}@
[%{public}@] Preflight complete free: %d owned: %d
[%{public}@] Using VPP endpoint for request
[%{public}@] Purchasing free app
[%{public}@] Free purchase failed with error: %{public}@
[%{public}@] Free purchase succeeded with jobResults %{public}@
[%{public}@] App is not eligible for free VPP
[%{public}@] An itemID is needed for per device calls could not be discovered
[%{public}@] Complete for evid: %{public}@ changeType: %ld success: %d
Import success for job: %{public}@ / %{public}@ reason: %{public}@
Import failed for bundleID: %{public}@ error: %{public}@ reason: %{public}@
Skipped duplicate job: %{public}@ / %{public}@ reason: %{public}@
[%{public}@] bundleDisplayName: %{public}@ metatdata: %{public}@
[%{public}@] Request resulted in error: %{public}@ storeCorrelationID: %{public}@
[%{public}@]: Will not attempt sinf update for app due to variantID: %{public}@
[%{public}@] Inline sinf update complete with result: %d used replacementSinf: %d
[%{public}@] No app to attempt an inline update
[%{public}@] Installing vpp application with evid: %{public}@
[%{public}@] Checking purchase history for items
[%{public}@] Timed out looking though purchase history
[%{public}@] App owned by accountID: %{public}@
[%{public}@] Lookup resulted in error: %{public}@
[%{public}@] Performed owns check with owns: %d
[%{public}@] Owns check resulted in error: %{public}@
[%{public}@] Free purchase failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Free purchase failed with buyParams: %{public}@ error: %{public}@
[%{public}@] Attempting to update sinf
[%{public}@] sinf update failed due to MD5 miss-match
[%{public}@] Updated sinf with MD5 match
[%{public}@] Skipping sinf swap. Installed: %d evid matches: %d
[%{public}@] Attempting sinf swap for matching. Installed: %d evid matches: %d
[%{public}@] Using sinf data for from download
[%{public}@] Sucessfully updated sinf
[%{public}@] Sinf update resulted in error: %{public}@
[%{public}@] Did not perform an inline update of the sinf
[%{public}@] Updated iTunesMetadata.plist
[%{public}@] iTunesMetadata.plist update failed with error: %{public}@
[%{public}@] Fetching receipt
[%{public}@] Receipt refresh failed with error: %{public}@
[%{public}@] Receipt refresh failed - application not found
%{public}@: Privacy acknowledgement URL is nil. Error: %{public}@
%{public}@: Remote action received for privacy prompt operation %{public}@
%{public}@: Remote handle created for privacy prompt operation
%{public}@: Error creating remote alert handle for privacy prompt
%{public}@: Remote privacy handle did deactivate
%{public}@: Remote privacy handle did invalidate with error: %{public}@
Tap-to-radar failed: %{public}@ error: %{public}@
[%{public}@]: Client was disconnected: %{public}@
[%{public}@]: Client lost connection: %{public}@
[%@]: Broker client connected: %@
[%@]: Connection denied for pid: %i for non entitled client
[%@]: Starting request broker
Removed parameters after fetching postbacks
Could not remove parameters %{public}@
Could not find URL for fetching postback info
Performing cleanup on startup
Cleanup on startup complete
Cleaning up updates following app being registered
Removed update with bundleID: %{public}@ due to newly installed app evid: %llu being greater than update evid: %llu
Updated update state of bundleID: %{public}@ to installed app evid: %llu equals update evid: %llu
Skipping changing update state of bundleID: %{public}@ to installed app evid: %llu with update evid: %llu
[%@]: Application is not installed: %{public}@ and not 32-bit: %ld
[%@]: Application is not installed: %{public}@ and is 32-bit: %ld
[%@]: Including application: %@
 Cleaning up stale coordinators. %lu active coordinator IDs:
   %{public}@
   <none>
 Untracked: %{public}@
 Active:    %{public}@
 Coordinator cleanup complete with result: %d cancel count: %ld
 Coordinator cleanup complete with error: %{public}@
Cleaning up updates
[%{public}@] Skipping cancellation, this looks like a promotion failure
[%{public}@] Scheduling install cancellation following app deletion
Canceling jobs for deletedApps: [%{public}@]
Update clean up complete with %ld changes
Removed uninstalled update with bundleID: %{public}@
Removed update with bundleID: %{public}@ due to no matching app
Updating purchasing state for update with bundleID: %{public}@ currentState: %ld
Updating purchased state for update with bundleID: %{public}@ currentState: %ld
[%{public}@] Purge request with volume: %{public}@ urgency: %ld desired amount: %{public}@ perfrom store check: %d additionalAppCount: %ld client: %{public}@
[%{public}@] Purge app request resulted in error: %{public}@
[%{public}@] Purged %ld app(s) for volume: %{public}@ urgency: %ld desired amount: %{public}@ purged size: %ld client: %{public}@
Starting legacy request from: %{public}@ for system application: %{public}@
Completed legacy request from: %{public}@ for system application: %{public}@ (%{public}@)
[%{public}@] Starting server purchase queue check
[%{public}@] No account to check server purchase queue
[%{public}@] Error building pending queue count request: %{public}@
[%{public}@] Error checking pending queue count: %{public}@
[%{public}@] Invalid pending transactions range: %{public}@
[%{public}@] Error building pending queue request: %{public}@
[%{public}@] Error checking pending queue: %{public}@
[%{public}@] Found %lu transactions in pending queue
Performing miscellaneous migration
Looking up system apps using predicate: %{public}@
Received %lu system app asset(s)
Discovered matching asset: %{public}@
Failed to lookup system app asset(s): %{public}@
[%{public}@] Starting receipt refresh
[%{public}@] Including the following for QA verification. revoked: %{public}@ expired: %{public}@
[%{public}@] [%{public}@] Receipt refresh migrating VPP app
[%{public}@] Attempted migration for %ld app(s)
[%{public}@] Receipt refresh complete for %ld app(s)
[%{public}@] [%{public}@] Using QA receipt expiration date: %{public}@ 
[%{public}@] [%{public}@] Falling back to default threshold following error loading bag key: %{public}@
[%{public}@] [%{public}@] Receipt expiration in %ld days today: %{public}@ expiration: %{public}@
[%{public}@] [%{public}@] [Silent] Receipt expiration in %ld days today: %{public}@ expiration: %{public}@
[%{public}@] Posting revoked title: %{public}@ body: %{public}@ launchURL: %{public}@
[%{public}@] Error posting. Error: %{public}@
[%{public}@] Posting complete
[%@] %d app(s) expiring in %i day(s)
[%{public}@] Posting expiring title: %{public}@ body: %{public}@ launchURL %{public}@
[%{public}@] [%{public}@] Marking as QA revoked
[%{public}@] [%{public}@] Failed to get receipt with error: %{public}@
[%{public}@] Finishing payment %lu for %{public}@
[%{public}@] Finishing payment with no transaction identifier for %{public}@
[%{public}@] Error finishing payment %lu for %{public}@ - %{public}@
Failed find matching device for: %{public}@
Failed to get destination identifier for: %{public}@
Unsupported device: %{public}@
%{public}@: No downloads to start for ID %{public}@
%{public}@: Download already started for ID %{public}@
%{public}@: Download already finished for ID %{public}@
%{public}@: Starting downloads for ID %{public}@
%{public}@: No downloads to cancel for ID %{public}@
%{public}@: Download is not started for ID %{public}@
%{public}@: No downloads to pause for ID %{public}@
%{public}@: Removing %lu downloads for transaction %{pivate}@
%{public}@: No download path to remove for ID %{public}@
%{public}@: Removing downloaded content for %{public}@ at %{public}@
%{public}@: Error removing downloaded content for ID %{public}@ - %{public}@
%{public}@: Adding download %{private}@ to pending downloads
%{public}@: Download %{private}@ already added to pending downloads
[%{public}@] Starting TestFlight installation for %{public}@ userInitiated = %{public}@
[%{public}@] TestFlight import failed: %{public}@
[%{public}@] TestFlight import succeeded
Failed to encode placeholder entitlements: %{public}@ error: %{public}@
[%{public}@] Aborting push register since there is no account.
[%{public}@] Failed to create push register request.
[%{public}@] Failed register push token call with error:%{public}@
[%{public}@] Did not receive response from register push call
[%{public}@] Successfully registered push token
[%{public}@] Failed register push token call with unknown error and status code:%{public}ld
[%{public}@] Encountered error while registering push token: %{public}@
[%{public}@] Could not find URL for registering push token
[%{public}@] Skipping invalid product identifier "%{public}@"
[%{public}@] Error fetching in app products: %{public}@
[%{public}@] Using MAPI for legacy products request: %{public}@ (Rate: %{public}f, Rolled: %{public}f)
[%{public}@] [%{public}@]: Invalid response for micro payment products request: %{public}@
[%{public}@] %{public}@: Received invalid identifier %{public}@ in product dictionary
[%{public}@] %{public}@: Received invalid locale %{public}@ in product dictionary
[%{public}@] %{public}@: Received invalid price %{public}@ in product dictionary
[%{public}@] Failed to get value for key language-tag, defaulting to device locale: %{public}@
[%{public}s] Created task: %{public}@ for URL: %{public}@ 
[%{public}s] Cancelled task: %{public}@ with reason: %{public}@
[%{public}s] Started task: %{public}@
[%{public}@] Could not initialize with %{public}@ - %{public}@
[%{public}@] Starting receipt sync with reason %ld from revision %{public}@ for %{public}@
[%{public}@] Error syncing receipts for %{public}@ - %{public}@
[%{public}@] Updated receipts to revision %{public}@. Syncing more receipts for %{public}@
[%{public}@] Updated receipts to revision %{public}@ for %{public}@
[%{public}@] Sending %ld receipts to %{public}@
[%{public}@] Starting subscription status sync for %{public}@ reason %ld
[%{public}@] Sending %ld statuses to %{public}@
[%{public}@] Error syncing subscription status for %{public}@ - %{public}@
[%{public}@] Updated subscription status for %{public}@
[%{public}@] Forcing transaction sync for %{public}@ because there is no history
[%{public}@] Forcing transaction sync for %{public}@ because the cached history has no token
[%{public}@] Removing all transactions %{public}@ because there is no account
[%{public}@] Forcing transaction sync for %{public}@ because the tokens don't match
[%{public}@] Error getting max age for %{public}@ transaction history
[%{public}@] Forcing transaction sync for %{public}@ because lastUpdated is older than maxAge
(SZStreamConsumer) Opened, upstream status %lu
(SZStreamConsumer) Upstream event code %lu
(SZStreamConsumer) Finishing extractor stream
(SZStreamConsumer) Extractor stream finished, error = %@
(SZStreamConsumer) Reading available data
(SZStreamConsumer) Bytes supplied, error = %@
(SZStreamConsumer) Error occurred upstream: %{public}@
(SZStreamConsumer) Looped 3 times but no more data was available
[%@]: IAP Info DAAP data not NSData
Performing initial migration
Queuing up previously unfinished migrations: [%{public}@]
Performing migration for clientID: %{public}@ migrationType: %ld
Network changed. Connected: %d
Device state changed and ready to migrate.
Device state changed setup not ready for migrate. Setup complete: %d migrator complete: %d
Bootstrap - Proceeding to migration
Bootstrap -  Creating observer to migrate when os setup is complete: %d migrator complete: %d
Attemping to load bag
Attempting migration anyway following bag load error: %{public}@
Attempting migrations following bag load
Performing %ld migration(s): [%{public}@]
Migration complete for: %{public}@
Migrating from build: %{public}@ to build: %{public}@
Upgrade Migration
Queuing migration task: %{public}@
Waiting for network before runing migrations
[%{public}@] Creating temporary bundle identifier %{public}@ for vendor %{public}@
[%{public}@] Cannot determine vendor ID for purchase
[%{public}@] Received cancellation request.
[%{public}@]: Unable to get network constraints, not allowing cellular access: %{public}@
[%{public}@]: No download size available, not allowing cellular access
[%{public}@]: Download size exceeds cellular limit, not allowing cellular access
[%{public}@] Cleaning up symlink (success %d)....
[%{public}@] Simulated download path already existed. success(YES): %{public}@
[%{public}@] Simulated download success(%d): existed(%d) was symlink(%d)
[%{public}@] simulated download failed with error %{public}@
[%{public}@]: Completing coordinator promise: %{public}@
[%{public}@]: Completing coordinator promise
[%{public}@] Resource was located at URL: %{public}@
[%{public}@] Resource was not found with error: %{public}@
[%@]: %{public}@: Rejecting delta - version %{public}@ does not match installed version %{public}@
[%@]: %{public}@: Rejecting delta - no applicable variants (%{public}@) for installed variant %{public}@
[%@]: %{public}@: Rejecting delta - installed app is universal
[%@]: %{public}@: Selected delta for version %{public}@ variant %{public}@
[%{public}@] Client %{public}@ failed authentication request with error %{public}@
[%{public}@] System Dialogs are not supports on macOS. Using remote dialog requests
[%{public}@] Sending dialog request to client %{public}@
[%{public}@] Client %{public}@ failed dialog request with error %{public}@
[%{public}@] No client available to handle dialog request
[%{public}@] Sending engagement request to client %{public}@
[%{public}@] Client %{public}@ failed enagement request with error %{public}@
[%{public}@] No client available to handle engagement request
[%{public}@] No account required for AMSPurchaseTypeDownloadProduct
[%{public}@] No account required for machine based purchase
[%{public}@] Account provided but we couldn't find it on this device
[%{public}@] No account provided
[%{public}@] Active iTunes account found, using that
[%{public}@] No active iTunes account found
[%{public}@] No account for discretionary purchase
[%{public}@] Purchase has a dsID but no username to authenticate
[%{public}@] Prompting for account
[%{public}@] Purchasing with parameters: %{public}@
[%{public}@] No account for purchase: %{public}@
Failed purchase had a trigger queue check.
Purchase finished but it was not found in the batch so dropping the response on the floor
[%{public}@] Install Attribution Error: %@
[%{public}@] Encountered bag error while fetching updateProduct content type: %@
[%{public}@] Encountered unrecognized content type for updateProduct call from bag
Attempting to hydrate applications with bundleIDs: [%{public}@]
[%{public}@] Running HEAD operation to get size for URL: %{public}@ task: %{public}@
[%{public}@] Unexpected data received for URL: %{public}@
[%{public}@] Invalid size: %lld for URL: %{public}@
[%{public}@] Found size: %lld for URL: %{public}@
[%{public}@] Invalid status: %ld for URL: %{public}@
[%{public}@] Failed to find size for URL: %{public}@ error: %{public}@
[%{public}@] Database import failed with error: %{public}@
Error creating StoreKit testing directory: %{public}@
[%{public}@] Failed to buy the product with ID %{public}@: %{public}@
[%{public}@] Failed to change the auto-renew status of %lu to %d: %{public}@
[%{public}@] Failed to clear overrides for %{public}@: %{public}@
[%{public}@] Failed to complete ask to buy request: %{public}@
[%{public}@] Failed to delete all transactions: %{public}@
[%{public}@] Failed to %{public}@ subscription with identifier %{public}@: %{public}@
Error looking up app with bundle ID %{public}@: %{public}@
[%{public}@] Removing data for %{public}@ due to non-development application install
[%{public}@] Removing data for %{public}@ due to application uninstall
[%{public}@] Asked to perform action %ld on %{public}ld
[%{public}@] Failed to perform action %ld on %{public}ld
Server went down with an active connection, restarted it
Server went down without any active connections, not restarting it
[%{public}@] Failed to save configuration data: %{public}@
[%{public}@] Saved configuration data
[%{public}@] Failed to set storefront to %{public}@: %{public}@
[%{public}@] Requested value for identifier %ld
[%{public}@] Requested to set value %ld for identifier %ld
[%{public}@] Failed to set value to %ld for key %lu: %{public}@
[%{public}@] Error removing data: %{public}@
[%{public}@] Removed data for %{public}@
Error creating StoreKit testing directory for %{public}@: %{public}@
Requesting refresh of receipt for %{public}@
Timed out refreshing receipt for %{public}@
Refresh of receipt requested for %{public}@ but there is no active conneciton to it
[%{public}@]: Failed to create a request with %{public}@
Failed to create service: %{public}@
Listening for service: %{public}@
Sending: %{public}@ failed with error: %{public}@
Received reply without outgoing identifier for type: %u from: %{public}@
Updating after devices changed: %{public}@
Sending message: %ld to: %{public}@ with payload: %{public}@
Sending: %{public}@ to: %{public}@ failed with error: %{public}@
Received reply but no handler exists for: %{public}@ type: %u from: %{public}@
Received reply for: %{public}@ type: %u from: %{public}@
No handler for received request for: %{public}@ type: %u from: %{public}@
Created the developer tools client.
%{public}s BundleID [%{public}@]
%{public}s TagName [%{public}@] BundleID [%{public}@]
There are [%ld] tags with name [%{public}@] for bundleID [%{public}@]
Requesting purge of asset pack [%{public}@]
[DT] Importing %lu byte manifest for %{public}@
[%@]: Record app event: [%{public}@]
[%@]: User not opted-in to record app event: [%{public}@]
[%@]: Apps deleted: [%{public}@]
[%@]: Not recording apps deleted: [%{public}@]
[%@]: Apps installed: [%{public}@]
[%@]: Not recording app installs: [%{public}@]
[%@]: Not enabled to record personalization metrics
[%@] Unused setClusterMappings
[%@]: Resetting actorID
[%@] Resetting personalization metrics
[%@] Skipping setClusterMappings
[%@]: Not enabled to send personalization metrics
[DNU] Setup following migration
[DNU] Skipping %{public}@ which is not a candiate
[%@]: Importing launch events error: %{public}@
[%@]: Imported %ld launch event(s) with result: %d
[%@]: Importing crash events error: %{public}@
[%@]: Imported %ld crash event(s) with result: %d
[%@]: Cleared actorID with reason: %{public}@
[%@]: Completed recording metrics events
[%@]: Error sending metrics events. Error: %{public}@
[%@]: Completed sending metrics events
[%@]: Found %ld raw crash events
[%@]: Could not find app metdata for bundleID: %{public}@
[%@]: Resetting dnu analytics gathering
[%@]: Stopping analytics gathering
[%@]: Importing cluster mappings error: %{public}@
[%@]: Imported mappings with result: %d
[%@]: BundleID required for event: %{public}@
[%@]: Error creating entity for bundleID: %{public}@ result: %{public}@
[%@]: Created launches app event with bundleID: %{public}@
[%@]: Error creating entity for bundleIDs: [%{public}@] result: %{public}@
[%@]: Created app event with bundleIDs: [%{public}@]
[%{public}@]: Error generating context
[%@]: Initiated session with actorID: %{public}@ with samping enabled: %d
[%@]: Skipping metrics for actorID session.
[%@]: Queuing %ld personalization metrics event(s)
[%@]: Error generating transparancey metrics: %{public}@
[%@]: No events to report
[%{public}@] Running payment for %@
[%{public}@] Payment failed: %{public}@
[%{public}@] Failed payment had a trigger queue check.
[%{public}@] Payment complete
[%{public}@] Payment result contained error: %{public}@
[%{public}@] Payment completed with no transactions
[%{public}@] Payment received more than one transaction: %@ Using only the first.
[%{public}@] Sending authentication request for %{public}@
[%{public}@] No account for %{public}@: %{public}@
[%{public}@] Handling authentication request for purchase %{public}@
[%{public}@] No client available to handle authentication request for purchase %{public}@
[%{public}@] Handling dialog request for purchase %{public}@
[%{public}@] No client available to handle dialog request for purchase %{public}@
[%{public}@] Handling engagement presentation request for purchase %{public}@
[%{public}@] No client available to handle engagement request for purchase %{public}@
[%{public}@] [%{public}@] Unable to launch. App not found
[%{public}@] [%{public}@] Unable to launch messsages extension for placeholder
[%{public}@] [%{public}@] Unable to locate app to launch
[%{public}@] [%{public}@] Unable to launch. isPlaceholder: %d launchProhibited: %d
[%{public}@] [%{public}@] Unable to launch because there is no bundle path
[%@]: Found mappings for %lu system apps: %@
[%@]: Failed to fetch system application map error: %{public}@
[%{public}@] Starting
[%{public}@] Starting with musicAccountID: %{public}@ tvAccountID: %{public}@ iCloudAccountID: %{public}@ podcastAccountID: %{public}@
[%{public}@] Starting with newsAccountID: %{public}@ appStoreAccountID: %{public}@ lastAccount: %{public}@
[%{public}@] Requesting cached subscription entitlements for clientID: %{public}@
[%{public}@] Returning %lu subscription entitlement(s)
[%{public}@] Setting arcade ad status condition
[%{public}@] Entitlement nil
[%{public}@] Did not find arcade sub group id bag key, error: %@
[%{public}@] Updating arcade ad status condition
[%{public}@] Did set status condition: %{public}@ error: %{public}@
[%{public}@] Did set status condition: %{public}@
[%{public}@] Did clear status condition: %{public}@ error: %{public}@
[%{public}@] Did clear status condition: %{public}@
[%{public}@] Clearing cached subscription entitlements after push notification
[%{public}@] Not clearing cached subscription entitlements after push notification. lastAccountID: %{public}@ messageAccountID: %{public}@
[%{public}@] Failed to read the subscription entitlements from memory and cache
[%{public}@] Failed to read the subscription entitlements from disk error: %{public}@
[%{public}@] Unable to determine the path
[%{public}@] Path to cached entitlement is nil
[%{public}@] Using default days valid following error reading device id days valid bag key: %{public}@
[%{public}@] Cached subscription entitlements have expired
[%{public}@] Requesting subscription entitlements for clientID: %{public}@
[%{public}@] No active account when fetching subscriptions for clientID: %{public}@
[%{public}@] Getting fresh fsEntitlements refresh for this boot
[%{public}@] Not getting fresh fsEntitlements on this boot. Expired: %d ignoresCaches: %d
[%{public}@] Refreshing subscriptions for account: %{public}@ for clientID: %{public}@
[%{public}@] Timed out attempting to update subscription entitlements
[%{public}@] Returning updated subscriptions response
[%{public}@] No cached subscriptions available, returning error: %{public}@
[%{public}@] Returning cached subscription response due to request error: %{public}@
[%{public}@] Returning cached subscriptions response for account: %{public}@
[%{public}@] Updating after account changed
[%{public}@] Updating after account changed - inside dispatch queue
[%{public}@] Marking the cached subscription entitlements as expired
[%{public}@] Notifying external subscription changed
[%{public}@] Unable to cache invalid segment
[%{public}@] Notifying internal cahced subscription changed with %ld entitlements
[%{public}@] Notifying internal subscription changed resulted in error: %{public}@
[%{public}@] Notifying internal subscription changed to a new user with %ld entitlements
[%{public}@] Notifying internal subscription changed following signout
[%{public}@] Clearing cached subscription entitlements
[%{public}@] Setting cached subscriptions for account: %{public}@
[%{public}@] Not setting cached subscriptions because accountID: %{public}@ does not match active accountID: %{public}@
[%{public}@] Failed to write the subscription entitlements to disk error: %{public}@
[%{public}@] Failed to write the subscription entitlements to disk with unknown error:
[%{public}@] Clearing cached after account sign out
[%{public}@] Active account has nil DSID. Clearing cached subscription entitlements
[%{public}@] Clearing cached subscription entitlements after account change to: %{public}@
[%{public}@] Invalid segment type for persisting entitlements
[%{public}@]: Invalid segment type for fetching entitlements from memory
[%{public}@] Clearing memory subscription entitlements for segment %lu
[%@]: Purgeable request with volume: %@ urgency: %ld client: %@
[%@]: Purgable app request resulted in error: %@
[%@]: Purgeable request complete for volume: %@ urgency: %ld client: %@ purgeableSize: %lld
[%{public}@] itms-services requests are not valid on this hardware and will be ignored
%{public}@ Status requested by %{public}@
%{public}@ Showing VPP Invite at URL: %{public}@ org: %{public}@ by %{public}@
%{public}@ New Manifest Request: %{public}@ by %{public}@
%{public}@ New VPP Request: %{public}@ by %{public}@
[%{public}@] No unified receipt in response
[%{public}@] %ld transactions in response
[%{public}@] No transaction receipt in response
[%{public}@] Syncing server transactions
[%{public}@] Error syncing server transactions %{public}@
[%{public}@] Finished syncing server transactions
[%{public}@] Receipt data string is not valid base64 %{private}@
[%{public}@] Receipt format invalid in response %{private}@
[%{public}@]: Found %ld products in receipt with ID %{public}@
[%{public}@] No URL to write receipt
(AMSDialogResult) No original request available, assuming the request was canceled
(AMSDialogResult) No selected action identifier available, assuming the request was canceled
(AMSDialogResult) No selected action not found, assuming the request was canceled
%{public}@: Downloading payload to: %{public}@
%{public}@: Downloading asset for request: %{public}@
%{public}@: Finished download %{public}@. Starting install.
%{public}@: Error downloading IAP asset: %{public}@
%{public}@: Cancelling download
%{public}@: Pausing download
%{public}@: Finalizing download task
%{public}@: Error removing download path %{public}@
%{public}@ Extracting %lld bytes in archive %{public}s to %{public}s
%{public}@: BOMCopier failed with error: %d
%{public}@: Error installing IAP asset: %{public}@
%{public}@: Error creating IAP install directory: %{public}@
%{public}@: Error removing downloaded asset: %{public}@
%{public}@: BOMCopier copied %lld (%f)
No StoreKit In App Promotion Database migration function for %li => %li
Error fetching extensions: %{public}@
requestCompletionBlock(%{public}@, %{public}@)
requestCancellationBlock(%{public}@, %{public}@)
requestInterruptionBlock(%{public}@)
postInstallationEvent: %ld, %{public}@
bundleID == nil
itemID == nil
Not posting event for %{public}@ (%{public}@): metricsInstallType = %ld
Dangling request(s)
Sending didReceiveInstallationEvent: %{public}@ %ld/%ld
%{public}@: Last event was supposed to be the last!
%{public}@: appType changed: %ld -> %ld
%{public}@: installType changed: %ld -> %ld
%{public}@: source changed: %ld -> %ld
Missing metadata for request; already cleaned up?
Extension request for app %{public}@ failed with error: %{public}@
Ending installationEvent request(s) for %{public}@
Unable to retry; giving up.
Reached max retry count; giving up.
[%{public}@] Could not authenticate before syncing: %{public}@
[%{public}@] Finished authentication with success
[%{public}@] Skipping authentication for Xcode environment
[%{public}@] Attempting to authenticate with active account
[%{public}@] Attempting to authenticate with no active account
[%{public}@:%{public}@] Executing the same instance of AuthenticateAndSyncTask multiple times concurrently is not supported
[%{public}@] Finished syncing transaction history
[%{public}@] Finished syncing subscription status
[%{public}@] Both sync tasks failed with errors:
%{public}@
%{public}@
[%{public}@] One sync task failed with error: %{public}@
(FairPlayStreamReader) Reader deallocated: %@
(FairPlayStreamReader) Upstream event code %lu
(FairPlayStreamReader) Upstream end encountered, requesting one more read
(FairPlayStreamReader) Dropping events for closed stream
(FairPlayStreamReader) All event codes were filtered
(FairPlayStreamReader) Upstream status = %lu; bytes available = %d
(FairPlayStreamReader) Zero bytes available, zero bytes decrypted
(FairPlayStreamReader) Scratch buffer size = %lu
Connection to %@ interface permitted with suitable entitlements
Connection to %@ interface failed: client is not suitably entitled
->> %{public}@
[%@]: Recieved command: %ld
No active paired device is available
%{public}@ >> SENDING PING
%{public}@ >> SENDING FAILED: %{public}@
%{public}@ >> RECEIVED PONG
NETWORK: isConnected = %d, isExpensive = %d, isConstrained = %d, isRoaming = %d
Authorize complete with error: %@
Authorize complete for account: %@
HRNMode: %d
Command not supported
Client not supported
Recieved detailed command: %ld
Clearing optimal download windows from automatic updates
Cleared optimal download window from %ld updates (%ld total updates)
%{public}@ >> RECEIVED PING FROM %{public}@
[%{public}@] Authentication request completed successfully
[%{public}@] Authentication request failed: %{public}@
[%{public}@] Dialog request completed successfully
[%{public}@] Dialog request failed: %{public}@
[%{public}@] Engagement request completed successfully
[%{public}@] Engagement request failed: %{public}@
[%{public}@] Presenting authentication request silently
[%{public}@] Dialogs cannot be presented silently, failing request
[%{public}@] Engagements cannot be presented silently, failing request
[%{public}@] Environment not found for task: %{public}@
[%{public}@] Using silent presenter for authentication as no other presenter was specified
[%{public}@] Using silent presenter for dialog as no other presenter was specified
[%{public}@] Using silent presenter for engagement as no other presenter was specified
[%@]: Canceling %lu job(s) for client %@: %@
[%@]: Finishing %lu job(s) for client %@: %@
[%@]: Fetching all jobs for client %@
[%@]: Fetching %lu job(s) for client %@: %@
[%@]: Pausing %lu job(s) for client %@: %@
[%@]: Registered legacy client: %@
[%@]: Resuming %lu job(s) for client %@: %@
[%@]: Treating %i as legacy client
[%@]: Client %@ disconnected
[%@]: Sending progress: %@ -> %@
[%@]: NOTIFY STATES: %@
[%@]: NOTIFY CLIENT: %@ -> %@
Cannot finalize impression from source app bundle ID:%{public}@, adam ID:%{public}@
Finalized impression for app bundle ID:%{public}@, adam ID:%{public}@
Failed to finalize impression for app bundle ID:%{public}@, adam ID:%{public}@
Removed conversion for source app adam ID:%{public}@ and app adam ID:%{public}@
Failed to remove conversion for source app adam ID:%{public}@
Existing impression with higher fidelity found. Not adding params
No winning pingback found while attempting to update conversion value
Conversion value not higher than previous
Cannot find started impression from source app bundle ID:%{public}@, adam ID:%{public}@
Impression count has violated cap for source app adam ID:%{public}@, purging.
Not pruning impressions for source app:%{public}@, current count is:%ld
Purged all lo-fi params for source app:%{public}@
Could not fetch low fidelity impressions cap from bag, error:%{public}@
Could not fetch start end time window from bag, error:%{public}@
Cannot insert pingback without app adam ID
Cannot insert pingback without fidelity type
Cannot insert pingback without ad network ID
Cannot insert pingback without campaign id
Cannot insert pingback without transaction id
Cannot insert pingback without attribution signature
Cannot insert pingback without pingback URL
[Transaction] Started transaction: %{public}@
[Transaction] Joined transaction: %{public}@
[Transaction] Ended transaction: %{public}@
[Transaction] Left transaction: %{public}@
Setting auto updates to %{public}@
Resetting update state to available on startup: %@
Items request received auth challenge for:%{public}@ but found no notification client to pass on to. Attempting internal auth
[%{public}@] [%{public}@] No delegate to handle authentication request
[%{public}@] [%{public}@] Handling authentication request
[%{public}@] [%{public}@] Sending authentication request for receipt renewal
[%{public}@] [%{public}@] No account for receipt renewal: %{public}@
[%{public}@] [%{public}@] Receipt format invalid
[%{public}@] [%{public}@] Fetching vpp app receipt
[%{public}@] [%{public}@] Fetching app receipt
[%{public}@] [%{public}@] Using family primary account: %{private}@ and storeFront: %{public}@
[%{public}@] [%{public}@] Using app account: %{private}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@] [%{public}@] No delegate to handle dialog request
[%{public}@] [%{public}@] Handling dialog request
[%{public}@] [%{public}@] No delegate to handle engagement request
[%{public}@] [%{public}@] Handling engagement request
[%{public}s] Failed task: %{public}@ error: %{public}@
[%{public}s] Completed task: %{public}@
Received data: %{public}@
[%{public}s] Received response: %{public}@
[%{public}s] Task: %{public}@ CDNUUID: %{public}@
[%{public}@] Creating placeholders for %ld app(s)
[%{public}@] Created %ld coordinators with %ld remaining
[%{public}@] Created coordinators for %ld apps out of %ld requested apps
[%{public}@] Creating coordinators for apps: [%{public}@]
[%{public}@] Looking up artwork for itemID(s): %{public}@
[%{public}@/%{public}@:%{public}@] Failed to set artwork promise with error: %{public}@
[%{public}@/%{public}@:%{public}@] Failed to create artwork promise with error: %{public}@
[%{public}@/%{public}@:%{public}@] Failed to load artwork for path: %{public}@ error: %{public}@
[%{public}@/%{public}@:%{public}@] Failed to load artwork template
[%{public}@] Artwork lookup failed with error: %{public}@ for itemID(s): %{public}@
[%{public}@] Network not available when loading artwork for itemID(s): %{public}@
[%{public}@/%{public}@:%{public}@] Creating restore coordinator with option completeDataPromise: %d
[%{public}@/%{public}@:%{public}@] Completing data promise for restore coordinator
[%{public}@/%{public}@:%{public}@] Failed to create placeholder due to error: %{public}@
[%{public}@/%{public}@:%{public}@] Creating placeholder with templateURL: %{public}@
[%{public}@/%{public}@:%{public}@] Error getting scratch path
[%{public}@/%{public}@:%{public}@] Error writing artwork path: %{public}@ error: %{public}@
[%{public}@/%{public}@:%{public}@] Wrote artwork for path: %{public}@
[%{public}@/%{public}@:%{public}@] Error getting artwork. Error: %{public}@ dataLength: %ld
[%{public}@] Lookup error: %{public}@
[%{public}@] Timed out attempting to fetch artwork from %{public}@
A consumer of type: %{public}@ was already registered for action type: %ld
A consumer was never registered for action type: %ld
Received message for unknown topic:  %ld
Flushing %lu message(s) for action type: %{public}@
%lu message(s) pending but no consumer available for action type: %{public}@
PushConnection found to be nil when trying to add/remove push notification types
Skipping environment check and defaulting to: %{public}@
Shutting down existing connection before starting up in new environment: %{public}@
Environment is invalid, using existing connection instead error: %{public}@
Environment is invalid, and no other connection is available error: %{public}@
Connection: %{public}@ received incoming message: %{public}@
Connection: %{public}@ received push for %{private}@ but active is: %{private}@
Connection: %{public}@ received push with no DSID, active is: %{private}@
Received invalid message: %{public}@
Failed to repair application %{public}@ error: %{public}@
Failed to find tag manifest for %{public}@ error: %{public}@
Error fetching manifest for %{public}@: %{public}@
Ingesting asset and tag manifest for %{public}@
Updating tag manifest for %{public}@
Failed to find asset manifest for %{public}@ error: %{public}@
Failed to import manifests for %{public}@ error: %{public}@
Successfully imported manifest for %{public}@
ODRMemorySampler failed to take sample with error %{public}s.  Sampler stopped.
Failed to copy bundle tag manifest for %{public}@, error: %{public}@
Failed to import manifest
Failed to import any asset packs even though some were reported to be local
Unable to begin legacy database tranportation
The legacy database directory failed to be removed with error: %{public}@
The legacy database told us that an asset pack was on the device but it wasn't, skipping the import for it.
Failed to create a %{public}@ entity with values: %{public}@ 
[%@]: Response data 0 length
[%@]: Parsed response
status: %i
isUpdate: %@
serverRevision: %@
iaps: %@
deletedIaps: %@
[%@]: Failed to decode response
[IAPInfoItemsResponseParserDelegate]: Error parsing item: %@
[%{public}@] Redownload request throttled with error: %{public}@
[%{public}@] Starting purchase for redownload
[%{public}@] Redownload request failed with error: %{public}@
[%{public}@] Redownload purchase failed with error: %{public}@
[%{public}@] Active installation already exists: %{public}@
Error checking for previously installed app for internal install %{public}@ %{public}@: %{public}@
Internal install requested for %{public}@ %{public}@ but it is already installed.
Timed out checking for %{public}@ %{public}@ on an internal install
No way to check for an existing app, continuing
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for automatic download.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for inexpensive network.
[%{public}@]: Download of size %llu exceeds cellular limit, asking how to proceed.
[%{public}@]: We were asked to download now.  Not requiring inexpensive data.
[%{public}@]: We were asked to download later.  Requiring inexpensive data.
[%{public}@] Received local installation request
[%{public}@] Unable to install system app with missing identifier
[%{public}@] Active installation already in progress
Failed to find system app mapping: %{public}@
(AppUpdateMemoryEntity) [%p] expectedSoftwarePlatform=%lu
Throttle: Deleted all records at: %{public}@
Throtle: Deleting records at: %{public}@ failed: %{public}@
Throttle: Read %lu records from: %{public}@
Throttle: Reading from: %{public}@ failed: %{public}@
Throttle: Wrote %lu records to: %{public}@
Throttle: Writing %lu records to: %{public}@ failed: %{public}@
[%@]: %{public}@ Get IAPs for accountID: %@
[%@]: %{public}@ Got %li IAPs for accountID: %@
[%@]: %{public}@ Failed to get IAPs with error: %{public}@
[%@]: %{public}@ Failed to get IAPs - no active account
[%@]: %{public}@ Failed to get IAPs: %{public}@ with no active account DSID error: %{public}@
[%@]: %{public}@ Get IAPs: %@ for account: %{public}@
[%@]: %{public}@ Got %li IAPs for account: %@
[%@]: %{public}@ Failed to get IAPs for app adam IDs: %{public}@ with no active account DSID error: %{public}@
[%@]: %{public}@ Get IAPs for app adam IDs: %@ for account: %{public}@
[%@]: %{public}@ Failed to get IAPs - no active account DSID
[%@]: %{public}@ Get IAPs for account: %{public}@
[%@]: %{public}@ Failed to update IAPs - no active account DSID
[%@]: %{public}@ Update not needed. Last updated: %{public}@
[%@]: %{public}@ Removing all IAPs
[%@]: Force refresh interval: %{public}@
[%@]: Failed to receive refresh interval error: %{public}@
[%@]: Update polling frequency interval: %{public}@
[%@]: Failed to receive update polling frequency interval error: %{public}@
[%@]: %{public}@ Refreshing IAPs after account change for: %{public}@
[%@]: %{public}@ Failed to refresh after active account changed error: %{public}@
[%@]: %{public}@ Ignoring update request - there is no active account DSID
[%@]: %{public}@ Starting update for account: %{public}@
[%@]: %{public}@ Ignoring update request - currently updating
[%@]: Error getting last updated date: %@
[%@]: %{public}@ Polling update not needed. Last updated: %{public}@
[%@]: %{public}@ Completed update for account: %{public}@
[%@]: %{public}@ Failed to import for account %{public}@ error: %{public}@
[%@]: %{public}@ Failed update for acccount %{public}@ error: %{public}@
[%@]: Update call success, but failed updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%{public}@] Syncing updates with server 
[%{public}@] Hiding update for %{public}@ following server sync
Unable to record update download time without a bundle ID
Unable to set update state to %ld with bundle ID: %{public}@ EVID: %{public}@
[%{public}@] [%{public}@] Transitioning to state "%s"
[%{public}@] Update does not exist for purchase: %{public}@ with storeID: %{public}@
[%{public}@] Could not find update for purchase: %{public}@ due to missing storeID
[%{public}@] Setting ForceAppDRMMode: %d
Creating listener to initialize network dependent items
[%{public}@] User not opted-in to list app events
[Arcade] Record app event: [%{public}@]
[%{public}@] Apps deleted: [%{public}@]
[%{public}@] Recording launch events
[Arcade] Not recording apps install: [%{public}@]
[Arcade] Apps installed [%{public}@] arcade install count: %ld arcade app count: %ld
[%{public}@] Posting metrics
[%{public}@] Not enabled
[%{public}@] Resetting metrics
[%{public}@] Payout metrics reset with current payout reset time: %{public}@
[%{public}@] External payout metrics reset with current interval start time: %{public}@
[%{public}@] Error looking up subscription bag status for account: %{public}@
[%{public}@] Error looking up fsEntitlement status for account: %{public}@ error: %{public}@
[%{public}@] Starting sbsync with account %{public}@ bag subscribed: %d fsEntitlement subscribed: %d
[%{public}@] Skipping sync for accountID: %{public}@ subscription bag subscribed: %d fsEntitlement subscribed: %d
[%{public}@] Not enabled to send Ocelot metrics
[%{public}@] Posting Summary metrics
Setup with reason: %{public}@
[%{public}@] Skipping app launch event without an end time for bundleID: %{public}@
[%{public}@] Unable to find account for launch event with bundleID: %{public}@ with launch time: %{public}@
[%{public}@] Unable to find find subscribed accountID
[%{public}@] KatanaIDs not supported for this context type
Falling back to default payout allowed keys error: %{public}@
[%{public}@] Falling back to default subscription info keys error: %{public}@
Falling back to enabling payout due to bag error: %{public}@
[%{public}@] Unable to find launch account for event with bundleID: %{public}@ due to no active accounts
[%{public}@] Found app launch accountID: %{public}@ for event with bundleID: %{public}@
[%{public}@] Found %ld total events
[%{public}@] Adding event for app with bundleID: %{public}@
[%{public}@] Using retail demo account: %{public}@ for event
[%{public}@] Type: %ld : %{public}@
[Arcade] Resetting device ID because of device mismatch
[Arcade] Resetting device ID because its creation date is invalid
[Arcade] Using default days valid following error reading device id days valid bag key: %{public}@
[Arcade] Resetting device ID because it has expired
[%{public}@] Completed sending metrics events reason: %{public}@
[%{public}@] Error creating context
Initializing now that there is network
[Arcade] Repair change notfication with userInfo: %{public}@
[Arcade] Starting repair for bundlePath: %{public}@
[Arcade] Starting repair forbundleID: %{public}@
[Arcade] Repair for bundlePath: %{public}@ complete with result: %d
[Arcade] Repair for bundleID: %{public}@ complete with result: %d
[%{public}@] handleAppSubscriptionChange
[%{public}@] Using retail demo account: %{public}@
[%{public}@] Skipping as subscription state has not changed for account: %{public}@
[%{public}@] Handling subscription change due to fsEntitlement change with account: %{public}@ original: %{public}@
[%{public}@] Resetting arcade activites due to fsEntitlement change with account: %{public}@
[%{public}@] fsEntitlement changed to Unsubscribed from: %{public}@ originalAccountID: %{public}@ currentAccount: %{public}@
[%{public}@] Not subscribed prior to fsEntitlement change
[%{public}@] handleAppSubscriptionChange complete
Using retail demo account: %{public}@
Error creating context to post
[%{public}@] Posting arcade metrics
[%{public}@] Queuing %ld metrics event(s) in AMS metrics DB
[%{public}@] Marked event with bundleID: %{public}@ pid: %lld as posted
[%{public}@] Error reading qualifying duration bag key: %{public}@
[%{public}@] Found %ld raw launch events
[%{public}@] Accounts for week: %{public}@ are: [%{public}@]
[%{public}@] Skipping app launch event with bundleID: %{public}@ due to no active account at launch time ending: %{public}@
[%{public}@] Qualified for week are now: [%{public}@]
[%{public}@] Skipping event with bundleID: %{public}@. We have already have a qualifying event this week with eventKey: %{public}@
[%{public}@] Added payout event with eventKey: %{public}@ cumulativeAccountCount: %{public}@ weekStart: %{public}@ 
[%{public}@] Looking for qualified in with week: %{public}@
[%{public}@] Added existing qualified event for bundleID: %{public}@ accountID: %{public}@
[Arcade] BundleID required for event: %{public}@
[Arcade] Error creating entity for bundleID: %{public}@ result: %{public}@
[Arcade] Created app event entity with bundleID: %{public}@
[%{public}@] Importing launch events resulted in error: %{public}@
[AccountEvent] There is not an initial account event for account: %{public}@. Attempting to add one. hasIntialEventForCurrentAccount: %d eventCount: %ld
[AccountEvent] Recorded initial account event for account: %{public}@
[AccountEvent] Unable to recorded initial account event for account: %{public}@
[AccountEvent] Not adding an initial account event hasIntialEventForCurrentAccount: %d eventCount: %ld
[%{public}@] User initiated clearing out app events
[%{public}@] Clearing qualified event bundleID: %{public}@ weekDate: %{public}@ currentWeek: %{public}@ pid: %lld
%{public}@ Error looking up subscription status. Error: %{public}@
%{public}@ Opting out of slot since no apps are installed.
%{public}@ Retrying opt-out of slot because a previous attempt failed
%{public}@ Clearing previous failed attempt to opt-out.
%{public}@ Failed to opt-out, will attempt again next time.
%{public}@ Skipping sbsync because there are no arcade apps
%{public}@ Complete with error: %{public}@
[TopApps] Unable to generate the path in order to load cached
[TopApps] Load cached top apps data
[TopApps] Failed to deserialize the top apps. Error: %{public}@
Attempting to terminate app with bundleID: %{public}@
Failed to terminate app with bundleID: %{public}@
App with bundleID: %{public}@ is terminated
Timed out waiting to terminate bundleID: %{public}@
[TopApps] Start for account: %{public}@
[TopApps] No account to lookup top apps
[TopApps] Clearing cached top apps data for account: %{public}@ cache age: %llu seconds
[TopApps] Returning cached top apps data for account: %{public}@ cache age: %llu seconds apps: [%{public}@]
[TopApps] No handler to return cached top apps for account: %{public}@ cache age: %llu seconds
[TopApps] topAppsForAccount: %{public}@ completed in %f seconds
[TopApps] Skipping app launch event without an end time for bundleID: %{public}@
[TopApps] Skipping top app launch event with bundleID: %{public}@ due to no active account at launch time ending: %{public}@
[TopApps] Found apps: [%{public}@]
[TopApps] Failed to serialize. Error: %{public}@
[TopApps] Serialized top apps with result: %d
[Arcade] Error writing duet launch wakeup file: %{public}@
[Arcade] Wrote duet launch wakeup file
[Arcade] Error removing duet launch wakeup file: %{public}@
[Arcade] Removed duet launch wakeup file
[%{public}@] Updated cached subscription state as: %{public}@
[%{public}@] fsEntitlement subscription state: %{public}@
[%{public}@] Updated cached subscription info for accountID: %{pubilic}@ as: %{public}@
Executing the Validate Manifests task.
Validate manifests operation has been cancelled.
Validating application with id [%{public}@]
Launch services does not know about [%{public}@].  Deleting. Error: %{public}@
Validate Manifests task has finished.
[%{public}@] [%{public}@] Account lookup request by client: %{public}@ for authIfNeeded: %d
[%{public}@] [%{public}@] Account lookup request complete with accountID: %{public}@ for askToBuy: %ld
Encountered error in DAAP URL request creation: %{public}@. Aborting since request is nil
Encountered error in DAAP URL request creation: %{public}@
Restoring %ld app(s)
Error creating coordinators error: %{public}@
No items to restore
Failed to cancel progress with no bundleID
Canceling progress for bundleID: %{public}@
Removing placeholder for bundleID: %{public}@
Failed find existing app with no bundleID
Failed find existing progress with no bundleID
Failed to finish progress with no bundleID
Finished progress for bundleID: %{public}@ reason: %{public}@
Failed to finish progress for bundleID for: %{public}@
Failed to preFinish progress with no bundleID
Updating progress for bundleID: %{public}@ to installed with reason: %{public}@
Updated evid for bundleID: %{public}@ to %lld
Marked progress as %lld for bundleID: %{public}@ reason: %{public}@
Failed to set fraction completed: %.2f with no bundleID
No progress exists for: %{public}@ - Ignoring this request
Setting fraction completed: %.2f for bundleID: %{public}@
Failed to set fraction completed: %.2f for: %{public}@
Skipping app for catalog query since it is reporting remotely: %{public}@
Failed to begin progress with no bundleID (storeItemID: %{public}@)
Progress already begun for bundleID: %{public}@ storeItemID: %{public}@
Beginning %{public}@ for bundleID: %{public}@ storeItemID: %{public}@ reason: %{public}@
Flushing progress: %{public}@
[%{public}@] Not checking for duplicate installs because no bundleID was specified.
[%{public}@] Found existing install for %{public}@ (%{public}@) but it is not active (phase = '%{public}@'). Proceeding with this purchase.
[%{public}@] Failing this request as a duplicate of %{public}@
[%{public}@] Forcing background operation to interactive to show progress
[%{public}@] Converting background operation to interactive (phase = '%{public}@')
[%{public}@] Received request to convert background operation to interactive but current phase is not restartable (phase = '%{public}@')
[%{public}@] flushMetricsWithCompletionBlock for client: %{public}@
[%{public}@] getAppEventsWithCompletionBlock for client: %{public}@
[%{public}@] recordLaunchesWithCompletionBlock for client: %{public}@
[%{public}@] recordMetricsWithCompletionBlock for client: %{public}@
[%{public}@] reportAppEvent for client: %{public}@
[%{public}@] sendMetricsWithCompletionBlock for client: %{public}@
[%@]: Error decoding response
[%@]: Error parsing item: %@
Cancelled download requests for: %{public}@
Removed manifest for %{public}@: %{public}@
[%@]: Inserting metric event: %@
[%@]: Inserting metric events: %@
[%{public}@] Flushing metrics with reason: %{public}@
[%{public}@] Completed sending metrics events
No App usage Database migration function for %li => %li
[%{public}@]: %{public}@ Starting legacy request to get IAPs for active account
[%@]: Nil IAP adamId, app adamId: %{public}@
[%{public}@]: %{public}@ Timed out on semaphore
[%{public}@] addHardwareOfferIDs for client: %{public}@
[%{public}@] addHardwareOfferIDs complete with result: %d for client: %{public}@ 
[%{public}@] allHardwareOffersIDsWithReplyHandler for client: %{public}@
[%{public}@] allHardwareOffersIDsWithReplyHandler complete with [%{public}@] for client: %{public}@
[%{public}@] allHardwareOfferMetricsWithReplyHandler for client: %{public}@
[%{public}@] allHardwareOfferMetricsWithReplyHandler complete with [%{public}@] for client: %{public}@
[%{public}@] hardwareOfferCountWithReplyHandler for client: %{public}@
[%{public}@] hardwareOfferCountWithReplyHandler complete with count: %ld for client: %{public}@ 
[%{public}@] removeAllHardwareOfferIDsWithReplyHandler for client: %{public}@
[%{public}@] removeAllHardwareOfferIDsWithReplyHandler complete with result: %d for client: %{public}@ 
[%{public}@] removeHardwareOfferIDs: [%{public}@] for client: %{public}@
[%{public}@] removeHardwareOfferIDs complete with result: %d for client: %{public}@ 
[%{public}@] removeHardwareOfferMetricsforOfferIDs: [%{public}@] for client: %{public}@
[%{public}@] removeHardwareOfferMetricsforOfferIDs complete with result: %d for client: %{public}@ 
Handling %s wake: %s
Obliterated stale background sessions
 uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ 
[%{public}@] Request cancelled
Untracked task: %{public}@ canceling after receiving data
[%{public}@] %lld/%lld
[%{public}@] Data consumer for task: %{public}@ was stopped at consumer callback
 uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ 
ConsumerError
[%{public}@] Data consumer for task: %{public}@ failed with error: %{public}@
ConsumerComplete
Untracked task: %{public}@ canceling after receiving response
Download/Transfer
[%{public}@] Received response: %{public}@
[%{public}@] Task: %{public}@ CDNUUID: %{public}@
ConsumerReset
[%{public}@] Resetting data consumer for task: %{public}@ after receiving status code: %ld
[%{public}@] Data consumer for task: %{public}@ failed to prepare with unexpected resumption offset: %llu
[%{public}@] Data consumer for task: %{public}@ failed to prepare with error: %{public}@
[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@
RequestExpired
[%{public}@] Canceling task: %{public}@ after receiving status code: %ld
RequestTimeout
[%{public}@] Restarting task: %{public}@ after receiving status code: %ld
RequestRange
[%{public}@] Truncate and restart task: %{public}@ after receiving status code: %ld
 uuid=%{public, signpost.description:attribute}@  status=%{public, signpost.description:attribute}ld 
RequestStatus
[%{public}@] Canceling task: %{public}@ after receiving invalid status code: %ld
Untracked task: %{public}@ canceling after will retry
[%{public}@] Canceling task: %{public}@ after cache request failed with error: %{public}@
CacheFail
[%{public}@] Retry scheduled for task: %{public}@ error: %{public}@
WillRetry
Untracked task: %{public}@ completed with error: %{public}@
[%{public}@] Completed task: %{public}@
[%{public}@] Encountered failure while using local cache, restarting using original request: %{public}@
[%{public}@] Failed to finish data consumer with error: %{public}@
[%{public}@] Failed to suspend data consumer with error: %{public}@
Untracked task: %{public}@ did finish collecting metrics
[%{public}@] Collected metrics for task: %{public}@ metrics: %{public}@
[%{public}@] Response body bytes received speed: %.0f
Untracked task: %{public}@ canceling after challenge
[%{public}@] Failing server trust for authentication challenge: %{public}@
[%{public}@] Prompting for authentication is not permitted
Untracked task: %{public}@ canceling after established connection
TaskConnecting
[%{public}@] Task: %{public}@ will send request
[%{public}@] Creating new session because download exceeds maximum watch cellular transfer size for existing session (Max: %lld, Download: %lld)
[%{public}@] Created new %s session with identifier: %{public}@ (%{public}@)
[%{public}@] Reusing existing session with identifier: %{public}@ (%{public}@)
Download
[%{public}@] Finishing asset promise
[%{public}@] Finished asset promise
[%{public}@] Request completed but promise had already finished
RecordMetrics
[%{public}@] Recording LoadURL Metrics
Retry
[%{public}@] Retrying request
[%{public}@] Failed to reset data consumer with error: %{public}@
[%{public}@] Stopping early because request has been canceled
[%{public}@] Data consumer is missing
[%{public}@] Preparing data consumer failed with error: %{public}@
[%{public}@] Lookup complete for: %{public}@ found replacement: %{public}@ with advice: %{public}@ error: %{public}@
[%{public}@] Error occuring while locating caching server: %{public}@
SessionError
[%{public}@] Error creating session for URL: %{public}@
TaskError
[%{public}@] Error creating task for URL: %{public}@
TaskCreated
[%{public}@] Created task: %{public}@ in session: %{public}@ for URL: %{public}@ 
[%{public}@] Task priority was unspecified, defaulting to non-user initiated!
[%{public}@] QOS class was unspecified, defaulting to utility!
TaskStarted
[%{public}@] Started task: %{public}@
[%{public}@]: Inserting metric event: %@
[%{public}@] [%{public}@] Performing LoadFamilyCircleTask
[%{public}@] [%{public}@] AMSLoadFamilyCircleTask failed because there's no active account.
[%{public}@] [%{public}@] Failed to load the family info because the network call failed. error = %{public}@
[%{public}@] [%{public}@] Failed to load the family info because we were unable to process the server response.
[%{public}@] [%{public}@] Returning cached family info.
[%{public}@] [%{public}@] We failed to load the family info, and we have no cached family info to return.
[%{public}@] [%{public}@] AMSLoadFamilyCircleTask failed because the bag didn't give us the URL. error = %{public}@
[%{public}@] [%{public}@] Unable to generate the path in order to cache a family info lookup.
[%{public}@] [%{public}@] Unable to cache a family info lookup because the given account has no DSID. account = %{public}@
[%{public}@] [%{public}@] Failed to serialize the family info. error = %{public}@
[%{public}@] [%{public}@] Failed to write the serialized family info to disk. error = %{public}@
[%{public}@] [%{public}@] Wrote the serialized family info to: %{public}@
[%{public}@] [%{public}@] Unable to load cached family info because the account has no DSID. 
[%{public}@] [%{public}@] Our cached family info isn't for the given account.
[%{public}@] [%{public}@] We have cached family info for the account, but it's too old to return.
[%{public}@] [%{public}@] Unable to generate the path in order to load cached FamilyInfo
[%{public}@] [%{public}@] Load cached FamilyInfo
[%{public}@] [%{public}@] Failed to deserialize the cached FamilyInfo. Error: %{public}@
Created the diagnostics client.
Creating [%d] fake work items.
[Diagnostics] Importing %lu byte manifest for %{public}@
[%{public}@]: Handling notification response with actionId: %{public}@
[%{public}@]: Error opening URL. Error: %{public}@
[%{public}@] Attempting to update %ld MID app(s)
[%{public}@] [%{public}@] Skipping MID based clip
[%{public}@] [%{public}@] MID refresh update requesting SINF update
[%{public}@] [%{public}@] MID refresh update resulted in error: %{public}@
[%{public}@] [%{public}@] MID refresh update complete with status: %d changeType: %ld
[%{public}@] MID update triggered migration completed
Skipping non supported claim user apps complete for clientID: %{public}@
Start for clientID: %{public}@ with requestType: %ld itemID: %{public}@ bundleID: %{public}@ skipDownloads: %d
Complete for clientID: %{public}@ with error: %{public}@
Complete for clientID: %{public}@ with result: %d changeType: %ld
[Daemon] Began showing dialog
[Daemon] End showing dialog
[Daemon] Starting appstored (Built: %s %s)
[Daemon] Migrations needed
[Daemon] No migration required for build: %{public}@
[Daemon] Received low memory warning
[Daemon] Received locale change, stopping appstored
[Daemon] Startup complete
[Daemon] Creating listener for service name: %@
[Daemon] Failed to initialize ODR library paths
[Daemon] Registering for XPC Maintenance Task
[Daemon] Registering for XPC Data Migration Event
[Daemon] Initializing ODRManager
[Daemon] Update MID changed notification
[Daemon] Update MID changed notification complete
[Daemon] Starting Diagnostic service
[Daemon] Starting Installation service
[Daemon] Starting Library Service
[Daemon] Starting Purchase service
[Daemon] Starting Purchase History service
[Daemon] Starting AppStore service
[Daemon] Starting Arcade service
[Daemon] Starting IAP Info service
[Daemon] Starting Install Attribution service
[Daemon] Starting Metrics Service
[Daemon] Starting Repair Service
[Daemon] Starting Restore Service
[Daemon] Starting Update Service
[Daemon] Fresh install detected upgrading to %@
[Daemon] OS version has updated from %@ to %@
[Daemon] OS version %@ is current
[Daemon] Running the registered maintenance block
[Daemon] XPC Maintenance activity checking in
[Daemon] No criteria set, correcting that
[Daemon] Setting the criteria to: %@
NotifyTestFlightClient: extension not available. Quitting.
[%{public}@] Error looking up invalid build tool version: %{public}@
[%{public}@] Error looking up DRM recovery key: %{public}@
%{public}@: Bag changed. Fetching new storefront.
%{public}@: Timed out waiting for resource
%{public}@: storefront changed to %{public}@
%{public}@: storefront changed from %{public}@ to %{public}@
%{public}@: Error fetching bag storefront %{public}@
%{public}@: Notifying observer %{public}@ of storefront change
(StoreItem) Received value for 'alternateIconName': "%@"
[%{public}@] Interval start date not set. Using interval start date: %{public}@
[%{public}@] Interval start date not set
[%{public}@] Recorded start interval as: %{public}@
[%{public}@] Recorded launches start interval as: %{public}@
Checking to see if apps need to be migrated to managed: [%{public}@]
Failed to fetch record for placeholder app %{public}@: %{public}@
[%{public}@]: Apps offloaded: [%{public}@]
[%{public}@]: Received Apple ID did change notification.
[%{public}@] Performing preamble checks
[%{public}@] Application only supports 32-bit architecture
[%{public}@] Automatic downloads have been disabled
[%{public}@] Automatic downloads are not permitted
Purchasing %ld app(s) for client: %{public}@
[%{public}@]: Starting purchase
[%{public}@]: Purchase completed with error: %{public}@
[%{public}@]: Purchase completed successfully
Purchasing complete for client: %{public}@
Error looking up app with id %{public}@: %{public}@
Application %{public}@ wasn't installed, ignoring the install notification from LaunchServices
Application %{public}@ is invalid, ignoring the install notification from LaunchServices
Placeholder for application %{public}@ removed, re-verifying installed application
Handling application demotion: %{public}@
Ignoring installation for %{public}@ as it does not appear to support ODR
Handling application un-installation: %{public}@
%{public}@ Query failed for %{public}@: %{public}@ error: %{public}@
%{public}@ Starting query for %{public}@: %{public}@
%{public}@ Completed with no results
%{public}@ Completed with 1 result: %{public}@
%{public}@ Completed with %lu result(s)
%{public}@ Launching messages extension for %{public}@: %{public}@
%{public}@ Launching app for %{public}@ on %{public}@: %{public}@
%{public}@ Launching app for %{public}@: %{public}@
%{public}@ Looking up %lu system app bundleIDs(s) for %{public}@: %{public}@
%{public}@ Lookup failed with error: %{public}@
%{public}@ Looking up %lu system app itemIDs(s) for %{public}@: %{public}@
%{public}@ Looking up %lu system app for watch bundleIDs(s) for %{public}@: %{public}@
%{public}@ Lookup for watch failed with error: %{public}@
%{public}@ Looking up %lu system app for watch itemIDs(s) for %{public}@: %{public}@
%{public}@ Uninstalling app for %{public}@: %{public}@
[%{public}@] Setting initial deviceID
[%{public}@] Posted %ld event(s) to AMSEngagement
[%{public}@] Created install event: %@
[%{public}@] App install metrics event import resulted in error: %{public}@
[%{public}@] Created uninstall event: %@
[%{public}@] App uninstall metrics event import resulted in error: %{public}@
[%{public}@] Skipping launch events due to error: %{public}@
[%{public}@] Supplemental app metrics event import resulted in error: %{public}@
[%{public}@] Recorded %ld supplemental app metrics event(s)
[%{public}@] Updated suplemental date to: %{public}@
[%{public}@] Updated start date to: %{public}@ suplemental: %{public}@
[%{public}@] Removed posted event with pid: %lld
[%{public}@] Reset metrics 
[%{public}@] Found %ld crash events
[%{public}@] Found %ld launch events
[%{public}@] Found %ld unposted events
[%{public}@] Amsengagement enqueue resulted in error: %{public}@
[%{public}@/%{public}@] Amsengagement enqueue with result: %d
[%{public}@] Checking for launches from: %{public}@ to %{public}@
[%{public}@] Failed to lookup launches with errror: %{public}@
[%{public}@] Found %ld raw launches
[%{public}@]: Launable apps request by client: %{public}@ for bundleIDs: [%{public}@]
[%{public}@]: Got connection from pid: %i (%{public}@)
[%{public}@]: Connection invalidated for pid: %i (%{public}@)
Created the launch services client.
(ODRLaunchServicesClient) [%p] bytes used for '%@' = %@
[%{public}@] executeQuery for client: %{public}@
[%{public}@] Restore failed permanently with error: %{public}@
[%{public}@] Restore failed temporarily with error: %{public}@
[%@]: Error parsing unknown segment string: %{public}@
[%{public}@]: Unable to evaluate cellular download: %{public}@
[%{public}@]: Unable to evaluate low data download: %{public}@
Error finding app for bundle ID %{public}@: %{public}@
Unable to create URL data detector.  Error: %{public}@
clearExpiredUpdateHistoryWithCompletionBlock for client: %{public}@
[%{public}@] getUpdatesWithCompletionBlock for client: %{public}@
[%{public}@] getManagedUpdatesWithCompletionBlock for client: %{public}@
hideApplicationBadgeForPendingUpdates for client: %{public}@
migrateUpdatesStoreWithCompletionBlock
%{public}@ refreshUpdateCountWithCompletionBlock for client: %{public}@
%{public}@ refreshUpdateCountWithCompletionBlock completed
refreshUpdatesWithCompletionBlock for client: %{public}@
showApplicationUpdatesBanner for client: %{public}@
showApplicationBadgeForPendingUpdates for client: %{public}@
removeUpdateBulletins for client: %{public}@
[%{public}@] reloadFromServerInBackgroundWithCompletionBlock from client: %{public}@
[%{public}@] reloadFromServerInBackgroundWithCompletionBlock completed
[%{public}@] reloadFromServerWithCompletionBlock for client: %{public}@
[%{public}@] reloadManagedWithCompletionBlock for client: %{public}@
[%{public}@] updateAllWithJobResults for client: %{public}@
[%{public}@] updateAllWithJobResults completed
%{public}@ updateAllWithOrder for client: %{public}@
%{public}@ updateAllWithOrder completed
Treating %i as legacy client
Connection denied for pid: %i for non entitled client
Client %{public}@ disconnected
Got connection from pid: %i client: %{public}@
Connection interrupted for pid: %i
Connection invalidated from pid: %i
Terminated app with bundle identifier:%{public}@ due to invalid receipt.
Encountered error opening store. Error: %{public}@
No bag value for requested key: %{public}@ of type: %ld
No valid port found for the server
Error fetching bag %{public}@
Error deserializing response %{public}@
The fetched bag is invalid %{public}@
[%{public}@] Invalid coordinator intent, treating as initiating instead
[%{public}@] Establishing coordinator for intent `%{public}@` with importance `%{public}@`
[%{public}@] Error setting the gizmo pairing ID: %{public}@
Compatibility updates for apps: [%{public}@] requested by client: %{public}@
%{public}@ getManagedUpdates requested for client: %{public}@
%{public}@ getManagedUpdates completed sucessfully
%{public}@ getUpdates requested for client: %{public}@
%{public}@ getUpdates completed sucessfully
%{public}@ refreshUpdateCount requested for client: %{public}@
%{public}@ refreshUpdateCount completed with error: %{public}@
%{public}@ refreshUpdateCount completed sucessfully
%{public}@ reloadFromServer requested for client: %{public}@
%{public}@ reloadFromServer completed with error: %{public}@
%{public}@ reloadFromServer completed sucessfully
%{public}@ reloadManagedUpdates requested for client: %{public}@
%{public}@ reloadManagedUpdates completed sucessfully
%@ Updated should perform automatic updates: %@
%{public}@ Update all requested with client: %{public}@
%{public}@ updateAllWithOrder completed with error: %{public}@
%{public}@ updateAllWithOrder completed sucessfully
%{public}@ reloadFromServerInBackgroundWithCompletionBlock requested for client: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed with error: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed sucessfully
Throttle: Discarding expired record for %{public}@ / %{public}@ (%.0f seconds)
Throttle: Permitting further requests for %{public}@ / %{public}@: %{public}@
Throttle: Blocking further requests for %{public}@ / %{public}@: %{public}@
Throttle: Unblocking further requests for %{public}@
Throttle: Unblocking requests after expiry for %{public}@
Throttle: Blocking request for %{public}@ will unblock after %.0f seconds
Throttle: Unblocking requests for new version of %{public}@
Cannot start an impression since an open impression already exists for source app:%{public}@
Start impression called by source app bundle ID:%{public}@, adam ID:%{public}@ with incorrect version number
End impression called by source app bundle ID:%{public}@, adam ID:%{public}@ with incorrect version number
Purging impressions from %{public}@
Failed to purge impressions from %{public}@
Failed to get install attribution campaign limit from bag, error: %{public}@
Campaign id larger than maximum
Campaign id smaller than 1
Error adding params to DB: %{public}@
Successfully added install attribution params to the database for app adamID: %{public}@ from source app adamID: %{public}@
[%{public}@] Error adding pingback fetch info to DB: %{public}@
[%{public}@] Successfully added pingback fetch info for app adamID:%{public}@
[%{public}@] Successfully removed pingback fetch info for app:%{public}@
[%{public}@] Could not remove pingback fetch info for app:%{public}@
[%{public}@] Pingback fetch info failed after retrying.
[%{public}@] Successfully fetched pingbacks
[%{public}@] Failed to increment retry count for pingback fetch info. Aborting.
[%{public}@] Fetch pingback info call succeeded
[%{public}@] Fetch postback info call failed with error:%{public}@
[%{public}@] Fetch postback info call failed:%{public}@
[%{public}@] Successfully inserted pingback into database for app adamID: %{public}@
[%{public}@] Could not send analytics event for pingback creation since adNetworkId is missing. URL is %{public}@
[%{public}@] Error adding pingback to DB: %{public}@
SKAdNetwork Multi: Attempting to add zero pingbacks to DB
SKAdNetwork Multi: Adding %lu pingbacks to the DB
[%{public}@] Multi: Adding pingback.
Error setting install attribution pingback registered for app: %{public}@, error: %{public}@, result: %i
Registered pingback for app: %{public}@
Attempted to set invalid conversion value for app adamID: %{public}@, aborting.
Error updating install attribution pingback for app: %{public}@, error: %{public}@, result: %i
Updated conversion value for app: %{public}@
Error setting developer pingback domain for app: %{public}@, error: %{public}@, result: %i
Developer pingback domain set for app: %{public}@
Removed pingback for app: %{public}@
Error removing install attribution pingback for app: %{public}@, result: %i
Incremented pingback retry count for app: %{public}@
Error incrementing pingback retry count for app: %{public}@, result: %i
Setting criteria for install attribution pingback retry task
Could not set state of the install attribution pingback retry task activity to XPC_ACTIVITY_STATE_CONTINUE
Unknown state: %d when processing install attribution pingback retry task
Sending mature pingbacks
Failed to get install attribution retry limit from bag, error: %{public}@
No registered pingbacks found. Unregistering pingback retry task.
Last retry happened too recently, skipping pingback for app:%{public}@ error:%@
Processing mature pingbacks
Aborting sending postback since postback URL is invalid %{public}@
Aborting sending postback since proxy URL could not be found in the bag %{public}@
Failed to initialize url session for pingback: %{public}@
Install attribution pingback serialization for app: %{public}@ failed with error: %{public}@
Install attribution pingback for app: %{public}@ failed with error: %{public}@
Pingback sent successfully
Could not send analytics event for pingback completion since adNetworkId is missing. URL is %{public}@
Could not set state of the install attribution pingback retry task activity to XPC_ACTIVITY_STATE_DONE
Setting criteria for Install Attribution clean params task
Could not set state of the Install Attribution clean params task activity to XPC_ACTIVITY_STATE_DONE
Unknown state: %d when processing Install Attribution clean params task
Running Install Attribution clean params task
Failed to get install attribution impressions cache age from bag, error: %{public}@
Failed to get install attribution low fidelity params cache age from bag, error: %{public}@
Failed to get install attribution high fidelity params cache age from bag, error: %{public}@
Failed to get install attribution pingback cache age from bag, error: %{public}@
Error removing install attribution impressions, result: %i
Error removing install attribution params: %{public}@, result: %i
Error removing install attribution pingbacks: %{public}@, result: %i
Could not get install attribution postback proxy URL from the bag: %{public}@
Failed to generate signature %@
Problem with generating mescal signature %@
[%{public}@] Expected platform wasn't set, hope we have the right type of receipt for '%ld'!
[%{public}@] Dropping incorrectly generated receipt - unexpected product type '%ld'
[%{public}@]: No images to upload, skipping FetchImageUploadURLsTask
[%{public}@]: Unable to create a valid URL with the provided string %{public}@
[%{public}@] Writing receipt failed - invalid or missing data (%lu bytes)
[%{public}@] Writing receipt failed - could not find valid application for URL %{public}@
[%{public}@] Writing receipt (%ld bytes) to %{public}@
[%{public}@] Error writing receipt (%ld bytes) to %{public}@: %{public}@
Failed to deserialize JSON data for `%{public}@` error: %{public}@
[%@]: Registered notification client: %{public}@
Checking for incomplete coordinators at request of: %{public}@
Check completed successfully
Check failed with error: %{public}@
[%{public}@] Failed to fetch updates for account: %{public}@ error: %{public}@
[%{public}@] Received %lu forced update(s)
[%{public}@] Failed to run forced updates task: %{public}@
[%{public}@] 
 Received %lu %{public}@server update(s) for account: %{public}@
[%{public}@] 
 UPD %{public}@
[%{public}@] 
[%{public}@] 
 DEF { bundleID: %{public}@ itemID: %lld }
[%{public}@] Found deferred update but not proxy for itemID: %{public}@
Owns check completed sucessfully
Error doing sbysnc. error: %{public}@
[%{public}@] Ignoring, unsupported action for enterprise request: %{public}@
[%{public}@] Ignoring, missing URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid enterprise request with missing URL
(LSBundleRecord) Couldn't create receiptURL, no dataContainerURL was returned: %{public}@
Activation record copy failed with error: %{public}@
Activation record: %@
No cloud configuration flags found in activation record
Start impression called from source app with bundle id:%{public}@
high fidelity impressions not allowed:%{public}@
Rejecting impression from app clip:%{public}@
Did not find Info.plist for app:%{public}@
Did not find ad network items array in Info.plist for app:%{public}@
Found non-dictionary SKAdNetworkItem in Info.plist for app:%{public}@
App:%{public}@ did not have ad network:%@ in Info.plist
End impression called from source app with bundle id:%{public}@
[SKAdNetwork: Did not find installed app %{public}@: %{public}@
[SKAdNetwork: Did not find ad network items array in Info.plist for app: %{public}@
[SKAdNetwork: Found non-dictionary SKAdNetworkItem in Info.plist for app: %{public}@
[SKAdNetwork: App: %{public}@ did not have ad network: %@ in Info.plist
[SKAdNetwork: App: %{public}@ did not match source app adam id: %{public}@
Multi pingbacks error:%{public}@
Unknown error in pingback response %{public}@
Received an optimal download window but we weren't able to create valid dates with the provided data: %{public}@ %ld
Received optimal download window of %{public}@ to %{public}@
[%{public}@] Manifest for UPP: %{public}@ clientID: %{public}@
[%@]: [%{public}@]: No data found for account: %@
[%@]: Unknown sort option: %@
No StoreKit In App Purchase Intents Database migration function for %li => %li
Auto updates completed
Restore completed
Finishing progress for bundleID: %{public}@
[%{public}@] [%{public}@]: No active account for receipt request
[%{public}@] [%{public}@]: Starting receipt request from revision %{public}@
[%{public}@] [%{public}@]: Receipt request failed with error - %{public}@
[%{public}@] [%{public}@]: Finished receipt request
[%{public}@] [%{public}@]: Invalid response for receipt request: %{public}@
[%{public}@] [%{public}@]: Receipt response does not contain required fields: %{public}@
[%{public}@]: Timeout occurred waiting for existing notifications
[%{public}@]: Removing existing bulletins
[%{public}@]: Settings did change
[%{public}@]: Failed to post notification. Error: %{public}@
[%{public}@]: Notificaiton posted successfully
[%{public}@]: Authorization granted
[%{public}@]: Failed to aquire authorization. Error: %{public}@
Starting StoreKit Service
Registering StoreKit push consumer
%{public}@: Received purchase success event
%{public}@: No payload in event
%{public}@: Failed to unarchive event data - %{public}@
%{public}@: Event payload has invalid response
%{public}@: Event payload has no original purchase
%{public}@: Purchase response has no data
%{public}@: Failed to unarchive response data - %{public}@
%{public}@: Purchase response is not for an in app buy
%{public}@: Purchase response is for an in app buy
%{public}@: Processing purchase response with connection %{public}@
[%{public}@] Failed to sync receipts after successful purchase: %{public}@
[%{public}@] Failed to sync subscription status after successful purchase: %{public}@
%{public}@: No app to write receipt
%{public}@: No connection for purchase response. Writing receipt directly to app %{public}@
%{public}@: Accepting new connection (%{public}@) %{public}@
%{public}@: Connection to %{public}@ invalidated
%{public}@: Connection to %{public}@ interrupted
%{public}@: Received push action %ld for %{public}@
%{public}@: Could not find bundle record for %{public}@ - %{public}@
%{public}@: Could not initialize client with URL %{public}@
%{public}@: Updating subscription status for %{public}@
%{public}@: Error syncing subscription status for bundle ID %{public}@ - %{public}@
%{public}@: Updating transaction history for %{public}@
%{public}@: Error syncing receipts for bundle ID %{public}@ - %{public}@
Skipping transported update with no bundle identifier
Skipping transported update where uninstalled or demoted: %{public}@ %{public}@
Skipping transported update where pending: %{public}@
Unable to transport update with known bundle identifier: %{public}@
Sucessfully transported update for: %{public}@
Unable to transport update for: %{public}@
Clip::AdditionalData/Prepare
Clip::AdditionalData/Request
[SwitchArcade]: Error reading switch bag key. Error: %{public}@
[SwitchArcade]: Starting switch bundleID: %{public}@ fromUserName: %{private}@ toUserName: %{private}@/%{public}@ usingSwithArcadeUserEndpoint: %d hadURL: %d
[SwitchArcade]: Resulted with error: %{public}@
[%{public}@]: Not prompting during device setup
[%{public}@]: No bundle ids
[%{public}@]: No active account `op
[%{public}@]: Error reading bag finding adam ID for: %{public}@, error: %{public}@
[%{public}@]: No adam ID in bag for %{public}@
[%{public}@]: No app record for %{public}@: %{public}@
[%{public}@]: Proxy missing name for %{public}@
[%{public}@]: Encountered error while loading storefront country code bag value: %@
[%{public}@]: Checking status for %{public}@
[%{public}@]: Subscription enabled for %{public}@
[%{public}@]: Filtering subscription for %{public}@
[%{public}@]: Subscription not enabled for %{public}@, status %li
[%{public}@]: No cached subscription info for %{public}@
[%{public}@]: Error getting subscription info for %{public}@, %{public}@
[%{public}@]: No entitlements for %{public}@
[%{public}@]: Found subscription info for %{public}@
[%{public}@]: Filtering an entitlement for %{public}@
[%{public}@]: Found %li IAPs for bundle ID: %{public}@
[%{public}@]: Found %li apps for bundle IDs %{public}@
[%{public}@]: Found %li IAPs for bundle IDs %{public}@
[%{public}@]: Promptable IAP: %{public}@
[%{public}@]: Not prompting for IAP: %{public}@, type: %hhu, expiration date: %{public}@, auto-renew: %i
[%{public}@]: Prompting single for %lld
[%{public}@]: Prompting multiple for %lld
No record found for %{public}@: %{public}@
No record found for %{public}@: %{public}@. Checking for extensions.
No extension record found for %{public}@: %{public}@
Extension record's containing bundle record not expected type: %{public}@
Set updateAvailability to %s for %{public}@
Failed to set updateAvailability to %s for %{public}@
Can't generate canonical executable path for app with no executable URL: %{public}@
[%{public}@] Processing keybag refresh for client: %{public}@
[%{public}@] Keybag refresh complete with result: %d
Error inserting message info: %{public}@ for DSID: %@, bundle ID: %@, status: %@
Failed to get the revoked product IDs from the push payload
Failed to check messages, account has no DSID
No message in database for DSID: %@, bundle ID: %@
StoreKit: Failed to create message URL
Error removing message info: %{public}@ for DSID: %@, bundle ID: %@
Error inserting revocation info for DSID: %@, bundle ID: %@, product ID: %@
No revocations in database for DSID: %@, bundleID: %@
Failed to set retrieve date for key %{public}@ value %{public}@
Error removing purchase intents for %{public}@: %{public}@
Error updating purchase intent timestamps for %{public}@: %{public}@
Checking for incomplete coordinators
Commonly used count: %ld apps: [%{public}@]
Ordered: Max app count: %ld
Ordered: App count: %ld apps: [%{public}@]
Ordered: Added an additional %ld springboard apps to the end of the prioritized list
Not responsible for coordinator: %{public}@ or error occurred: %{public}@
[%{public}@] Skipping store item coordinator due to exisiting restore
Coordinator: %{public}@ had no placeholder error: %{public}@
Coordinator: %{public}@ had no metadata error: %{public}@
Coordinator: %{public}@ was not installed from the store
[%{public}@] Metadata is missing bundle identifier, using bundle identifier from coordinator instead
Failing coordinator: %{public}@ with reason: %{public}@
Could not find coordinator to cancel: %{public}@ error: %{public}@
Could not fail coordinator: %{public}@ error: %{public}@
No incomplete coordinators were found.
Discovered %ld coordinators to complete
Failed to enumerate restoring coordinators error: %{public}@
[%{public}@]: Unable to obtain correct restore order: %{public}@
Edu Mode Enabled : %{public}@
Error getting system container: %llu
System container URL : %{public}@
Sentinel files : %{public}@
BaseURL for ODR content : %{public}@
Going to verify/create all of our library paths.
Check/Creating the base library path.
Unable to create hase path for ODR content.
Underlying error : %{public}@
Base path for ODR content : %{public}@
Check/Creating the asset packs path.
AssetPacks path is: %{public}@
Unable to create or find the Asset Packs path [%{public}@]. Error: %{public}@
appstored is pondering accepting a new connection...
[%@]: [%{public}@] Mismatched capabilites: %{public}@
[Thermal] Registration for thermal pressure notification failed: %u
[Thermal] Thermal pressure is now %@ (%llu)
Diagnostic clock enabled, current offset: %.0f
Diagnostic clock offset updated: %.0f
notifyOfReceivedPushToken
notifyOfReceivedPushMessages
notifyOfReachedTerminalPhaseWithBetaBundle: %{public}@, phase: %{public}ld, error: %{public}@
reloadAppsFromServerWithCompletionHandler
TestFlight service extension: %{public}@ with service time: %{public}@ seconds
TestFlight service extension: none
[%{public}@] Skipping postamble - installation is ocurring on another device
[%{public}@] Failed to write receipt - application was not found!
[%{public}@] Sucessfully wrote receipt (%lu bytes)
[%{public}@] Receipt was missing or invalid, attempting to request new receipt
[%{public}@] Failed fetching receipt with error: %{public}@
Queued task: %{public}@ for: %{public}@
Canceling all system applications for: %{public}@
Finished canceling all system applications for: %{public}@
Received request: %{public}@ from: %{public}@
[%@]: %{public}@ Adoption requested by %{public}@ but is not supported on this platform
[%@]: %{public}@ Adoptable bundle identifiers requested by %{public}@ but is not supported on this platform
[%@]: Checking server queue for clientID: %{public}@
[%@]: selector not implemented
[%@]: Notify dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: Notify dialog completed for clientID: %{public}@ with error: %{public}@
[%@]: Notify dialog completed successfully for client: %{public}@ 
[%@]: %{public}@ Processing purchase with StoreKit service
[%@]: Purchase completed for clientID: %{public}@ with error: %{public}@
[%@]: Purchase completed successfully for client %{public}@
[%@]: %{public}@ Starting purchase with StoreKit service
[%@]: %{public}@ Starting purchase of %{public}@:%{public}@ by %{public}@
[%@]: %{public}@ Purchase completed with error: %{public}@
[%@]: %{public}@ Purchase completed successfully
[%{public}@]: Skipping import due to lack for bundleID / clusterID / clusterID for mapping: %{public}@
[%{public}@]: Updated existing cluster mapping for: %{public}@
Unable to create account event entity with: %{public}@
Dropping app install meatadata due to no bundleID: %@
Error creating app usage sessionentity for bundleID: %{public}@
Received request to cancel download requests for %{public}@ - %{public}@
[%{public}@]: Canceling download request
Received request to pause download requests for %{public}@ - %{public}@
[%{public}@]: Pausing download request
[%{public}@]: Received request to resume download requests for %{public}@ - %{public}@
[%{public}@]: Recreating promises on resume request for %{public}@
[%{public}@]: No paused initial requests found
Error retrieving application record for %{public}@: %{public}@
[%{public}@]: Found %lu download(s) to resume
[%{public}@]: Recreating promises for %{public}@
Failed to remove %{public}@ from the scratch directory: %{public}@
Successfully removed %{public}@ from the scratch directory
[%{public}@]: Checking for prefetch downloads for %{public}@ - %{public}@
[%{public}@]: Starting %lu prefetch downloads for %{public}@ - %{public}@
[%{public}@]: Starting prefetch download with priority %f
[%{public}@]: Failed prefetch download with error: %{public}@
[%{public}@]: Successfully finished prefetch download
[%{public}@]: Checking for initial downloads for %{public}@ - %{public}@
[%{public}@]: Fetching manifest
[%{public}@]: Found %ld initial download(s)
[%{public}@]: Requesting download %{public}@
[%{public}@] ODR Download requested for %{public}@ : %{public}@
[%{public}@]: resource request exceeds maximum limit.
[%{public}@]: Expected asset already exists.
[%{public}@]: request is a duplicate of [%{public}@]
[%{public}@]: There was not enough space available to download the requested resource.
[%{public}@] No download size, attempting to look it up
[%{public}@] Error fetching size: %{public}@
[%{public}@] Starting ODR Download with download size: %lu and expected disk usage: %lld
[%{public}@] Successfully downloaded asset
[%{public}@] Error, no destination path for download: %{public}@
[%{public}@] Successfully moved the asset into its destination path
[%{public}@] Asset already exists at the destination path, validating
[%{public}@] Failed to move the downloaded asset into place: %{public}@
[%{public}@] Error creating path for download: %{public}@
[%{public}@] Nil destination path for asset
Rate Limit : %llu (Ethernet : %{public}@)
[%{public}@]: Error fetching coordinator with ID %{public}@: %{public}@
[%{public}@]: Error setting initial ODR promises
[%{public}@]: Setting initial ODR promises failed, canceling promises
[%{public}@] Download made progress: %{public}@
[%public}@]: Error removing download from scratch directory: %{public}@
[%{public}@]: Successfully removed download from scratch directory
[%{public}@]: No download files to remove, skipping.
[%{public}@] Error downloading asset: %{public}@
[%{public}@] Failing download, exceeded maximum retry time
[%{public}@] Restarting download after previous attempt timed out
[%{public}@] Failing download after connection lost
[%{public}@] Restarting download after connection lost
[%{public}@] Pin exceeded maximum pinned assets limit (%lu > %lu)
[%{public}@]: Success updating manifest
[%{public}@]: Failed updating manifest: %{public}@
[%{public}@]: Failed to find asset pack to update
[%{public}@]: Updated pin count: %lld
[%{public}@] Handling manifest refresh for expired URL
Failed to get a new URL after a manifest refresh, failing
[%{public}@] Refresh failed with error: %{public}@
Validating active installations on daemon start
[%{public}@] Discovered previously active installation (phase = '%{public}@'), resetting state to Waiting for scheduling
[%{public}@] Ignoring request to resume inactive installation in phase %{public}@
[%{public}@] Unexpected phase value `%lu` marking as failed
[%{public}@]: Skipping start, appears to already be running
Skipping legacy progress notification because we don't have an identifier for it.
Install/Download
[%{public}@] Beginning downloading
[%{public}@] Beginning installation
Install/Postamble
[%{public}@] Beginning final
Install
Install/Preamble
[%{public}@] Queuing preamble task
[%{public}@] Waiting for installation to complete
[%{public}@] Preflight canceled with coordinator: %{public}@ error: %{public}@
[%{public}@] Preflight succeeded
[%{public}@] Preflight failed with error: %{public}@
[%{public}@}] Preflight finished and will proceed to installation
[%{public}@] Download canceled
[%{public}@] Download failed with error: %{public}@
[%{public}@] Attempting expired download recovery for update
[%{public}@] Cannot recover from expired download for this installation
[%{public}@] Restarting after successful recovery
[%{public}@] Failing after unsuccessful recovery error %{public}@
[%{public}@] Failed to encode ATS data error: %{public}@
Dropping anonymous pings - DNU submission disabled
Successfully sent ping to: %{public}@
Ping failed to: %{public}@ error: %{public}@
Query string for DAAP call is: %{public}@
Completed request %{public}@
TestFlightExtensionSyncActivity - run
Bad item data
No bundleID
[%{public}@] [%{public}@] Did not find cached FamilyInfo for account: %{public}@
[%{public}@] [%{public}@] Family member found for account: %{public}@ askToBuyEnabled: %d
[%{public}@] [%{public}@] Performing migration of FamilyInfo
[%{public}@] [%{public}@] Not updating FamilyInfo due to no active account
[%{public}@] [%{public}@] Attempting to update cached FamilyInfo for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo cached for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo not cached following migration for account: %{public}@
[%{public}@] [%{public}@] Bootstrapping family : refresh from server: %d
[%{public}@] [%{public}@] Family circle request resulted in error: [%{public}@] isBackground: %d
[%{public}@] [%{public}@] Set family accounts to: [%{public}@]
[%{public}@] Cleared family
[%{public}@] [%{public}@] Checking if account: %{public}@ has FamilyInfo following account change
[%{public}@] [%{public}@] FamilyInfo not found account: %{public}@. Attempting to reload silently.
[%{public}@] [%{public}@] Error looking up FamilyInfo for account: %{public}@ error: %{public}@
[%{public}@] [%{public}@] FamilyInfo reloaded for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo found for account: %{public}@
Attempt to register connection without a UUID: %{public}@
Deleting asset pack at URL: %{public}@
Deleting storage at path: %{public}@
[%@]: Posting bulletin with title: %@ message: %@ for client %@
[%{public}@]: Using default cancelation reason because none was passed for coordinator: %{public}@
[%{public}@]: Refusing to cancel coordinator that we're not responsible for and don't own: %{public}@
[%{public}@]: Using default cancelation reason because none was passed for coordinator: %{public}@ promise: %{public}@
[%{public}@]: Could not fail existing app promise: %{public}@ not found for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not set fake app promise to cancel: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Cordinator: %{public}@ canceling a completed promise: %{public}@
[%{public}@]: Failed to fetch existing app promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Resetting app promise: %{public}@ failed for coordinator: %{public}@ error: %{public}@
[%{public}@]: Completing ODR configuration for coordinator: %{public}@
[%{public}@]: Failed to complete ODR configuration for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not fail existing ODR promise: %{public}@ not found for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to fetch existing ODR promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to fetch paused state for coordinator: %{public}@ error: %{public}@
[%{public}@]: Resetting ODR promise: %{public}@ failed for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not fetch responsible client for coordinator: %@ error: %@
[%{public}@]: Existing app promise: %{public}@ doesn't match expected promise: %{public}@ for coordinator: %{public}@
[%{public}@]: Coordinator: %{public}@ did not contain ODR promise: %{public}@
[%{public}@]: Coordinator: %{public}@ has no existing ODR promises when fetching: %{public}@
[%{public}@]: Failed to fetch current ODR promises for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to remove ODR promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Coordinator: %{public}@ has no existing ODR promises when removing: %{public}@
No container when fetching store metadata for %{public}@
Error getting store metadata for %{public}@ from %{public}@: %{public}@
?(knN
333333
Available
Installed
User Notified
Purchasing
Purchased
