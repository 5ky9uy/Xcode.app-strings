CREATE TABLE IF NOT EXISTS storekit_messages (dsid INTEGER, bundle_id TEXT, status INTEGER, UNIQUE(dsid, bundle_id) ON CONFLICT REPLACE);
storekit_messages
v16@?0@"SQLiteDatabaseStoreMigrator"8
v8@?0
com.apple.appstored
Activity
InGameAnalytics
AppUsage
Arcade
Cleanup
DAAP
Daemon
Download
General
Install
Library
Daemon-Oversize
Performance
PrivilegedTask
Purchase
Repair
Restore
Scheduler
Signpost
SoftwareMap
Subscription
StoreKit
TestFlightFeedback
Updates
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSDate",R
dsid
bundle_id
status
application/json
v24@?0@"AMSURLResult"8@"NSError"16
bundleId
B16@?0@"StoreKitMessagesDatabaseTransaction"8
v16@?0@"StoreKitMessagesDatabaseSession"8
itms-ui
B32@?0@"RequestThrottleRecord"8Q16^B24
v32@?0@"RequestThrottleRecord"8Q16^B24
com.apple.appstored.signal.Debug
osVersionStringKey
com.apple.appstored.Daemon
Feb 10 2020
00:05:38
com.apple.appstored.daemon.launched
v16@?0@"NSNotification"8
appstored
Logs
com.apple.appstored.xpc.in-game-analytics
com.apple.appstored.xpc.jobmanager
com.apple.appstored.xpc.updates
com.apple.appstored.xpc.storequeue
@"<ASDDiagnosticServiceProtocol>"8@?0
@"<ASDIAPHistoryServiceProtocol>"8@?0
@"<ASDInstallationServiceProtocol>"8@?0
@"<ASDAppLibraryServiceProtocol>"8@?0
@"<ASDPurchaseHistoryServiceProtocol>"8@?0
@"<ASDPurchaseServiceProtocol>"8@?0
@"<ASDRepairServiceProtocol>"8@?0
@"<ASDUpdatesServiceProtocol>"8@?0
v16@?0@"NSError"8
BuildVersion
com.apple.datamigrator.migrationDidFinish
ODR Maintenance
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.ondemandd.client
com.apple.ondemandd.appreview
com.apple.ondemandd.odrctl
com.apple.ondemandd.devtools
com.apple.ondemandd.launchservices
appMetricsMonitor
T@"AppMetricsMonitor",R,N,V_appMetricsMonitor
downloadSupervisor
T@"DownloadAgentSupervisor",R,N,V_downloadSupervisor
jobScheduler
T@"JobScheduler",R,N,V_jobScheduler
jobSupervisor
T@"JobAgentSupervisor",R,N,V_jobSupervisor
com.apple.ondemandd.PeriodicLaunchServicesSyncActivity
_error
_itemID
_externalVersionID
_requestDate
supportsSecureCoding
TB,R
error
T@"NSError",R,V_error
externalVersionID
T@"NSString",R,V_externalVersionID
itemID
T@"NSString",R,V_itemID
requestDate
T@"NSDate",R,V_requestDate
v40@?0q8@"NSDictionary"16Q24^B32
connection
T@"SQLiteConnection",R
T@"SQLiteConnection",R,V_connection
B16@?0@"RequestThrottleRecord"8
Throttling request for %.0f seconds
userID
T@"NSNumber",R,N,V_userID
bundleID
T@"NSString",R,N,V_bundleID
Tq,R,N,V_status
DELETE FROM storekit_messages WHERE dsid = ? AND bundle_id = ?;
v16@?0@"<SQLiteBinding>"8
com.apple.appstored.defaultschange
v12@?0i8
timeOffset
Td,N,V_timeOffset
%@: {type = %ld; DSID = %@}
ownerType
Tq,R,V_ownerType
purchaserDSID
T@"NSNumber",R,V_purchaserDSID
restorable
TB,R,GisRestorable
resultingError
T@"NSError",C,N,V_resultingError
soonestExpiring
T@"LSApplicationProxy",C,N,V_soonestExpiring
soonestExpirationDate
T@"NSDate",C,N,V_soonestExpirationDate
expiring
T@"NSMutableSet",R,N,V_expiring
refreshed
T@"NSMutableSet",R,N,V_refreshed
revoked
T@"NSMutableSet",R,N,V_revoked
broker
T@"RequestBrokerClient",R,W,N,V_broker
delegate
T@"<ASDRequestDelegate>",R,N,V_delegate
request
T@"ASDRequest<RequestController>",R,N,V_request
CELLULAR_DATA_PROMPT_TITLE_UPDATES_ROAMING
CELLULAR_DATA_PROMPT_TITLE_UPDATES
CELLULAR_DATA_PROMPT_BODY_UPDATE_LIMIT_%@
CELLULAR_DATA_PROMPT_BODY_UPDATE_TOTAL_%@
CELLULAR_DATA_PROMPT_BODY_DISCLAIMER
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_%@
CELLULAR_DATA_PROMPT_BUTTON_DOWNLOAD
CELLULAR_DATA_PROMPT_BUTTON_LATER_WLAN
CELLULAR_DATA_PROMPT_BUTTON_LATER_WIFI
CELLULAR_DATA_PROMPT_BODY_REMAINING_%@
CELLULAR_DATA_PROMPT_BODY_INITIAL_%@
wapi
CelularDataPromptActionDownloadLater
CelularDataPromptActionDownloadNow
CREATE TABLE IF NOT EXISTS account_events (pid INTEGER, active_start_time DATETIME, active_end_time DATETIME, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, event_type INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_crossfire (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot_payout (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_personalization (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_crossfire (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot_payout (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_personalization (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_cluster_mappings (pid INTEGER, bundle_id TEXT, cluster_id INTEGER, cluster_version INTEGER, launches_weight INTEGER, item_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_weight INTEGER, PRIMARY KEY (pid));
app_usage
DROP TABLE account_events
DROP TABLE app_events_crossfire
DROP TABLE app_events_ocelot
DROP TABLE app_events_ocelot_payout
DROP TABLE app_events_personalization
DROP TABLE app_cluster_mappings
DROP TABLE current_apps_crossfire
DROP TABLE current_apps_ocelot
DROP TABLE current_apps_ocelot_payout
DROP TABLE current_apps_personalization
com.apple.appstored.AppUsageBaseManager.dispatch
v32@?0@"SQLiteMemoryEntity"8Q16^B24
v16@?0@"AppUsageDatabaseSession"8
0123456789
Simulator
v24@?0@"ApplicationProxy"8^B16
B16@?0@"AppUsageDatabaseTransaction"8
%@-%@
LegacyNotifications
fraction
identifier
kind
phase
finish
import
progress
state
com.apple.appstored.JobManagerListener
v24@?0@"AppInstallsDatabaseTransaction"8q16
v32@?0@"NSUUID"8@"NSNumber"16^B24
com.apple.appstored.jobmanager
com.apple.itunesstored.private
v16@?0@"AppInstallsDatabaseSession"8
@16@?0@"NSNumber"8
v32@?0q8Q16^B24
B16@?0@"AppInstallsDatabaseTransaction"8
v16@?0@"JobManagerClient"8
cell
conr
devs
ntwk
powr
migr
odte
odts
cellularResult
constrainedResult
optimalDownloadWindow
T@"TimeWindow",C
requiresDeviceSecurity
requiresMigrationComplete
requiresNetwork
requiresPowerPluggedIn
CapabilitiesMatch
MismatchedCapabilities
wi-fi
lib_deviceIsAppleWatchM8
lib_thinningHeaders
com.apple.appstored.URLRequestProperties
account
T@"ACAccount",&,V_account
clientInfo
T@"AMSProcessInfo",&,V_clientInfo
compressRequestBody
TB,V_compressRequestBody
bagURL
T@"AMSBagValue",&,V_bagURL
dataEncoding
Tq,V_dataEncoding
KBSyncType
Tq,V_KBSyncType
logUUID
T@"NSString",&,V_logUUID
requestCachePolicy
TQ,V_requestCachePolicy
requestBodyData
T@"NSData",C,V_requestBodyData
requestHeaders
T@"NSDictionary",C,V_requestHeaders
requestMethod
Tq,V_requestMethod
requestParameters
T@"NSDictionary",C,V_requestParameters
shouldAppendGUIDParameter
TB,V_shouldAppendGUIDParameter
T@"NSURL",C,V_URL
URLKnownToBeTrusted
TB,V_URLKnownToBeTrusted
%@: %@
accountID
T@"NSNumber",R
actionType
userInfo
T@"NSDictionary",R
updateProduct
{ bundleID: %@ isUpdate: %d userInitiated: %d }
automaticType
T@"NSNumber",C,N,V_automaticType
T@"NSNumber",C,N,V_accountID
accountName
T@"NSString",C,N,V_accountName
T@"NSString",C,N,V_bundleID
clientBundleID
T@"NSString",C,N,V_clientBundleID
createsInstallJobs
TB,N,V_createsInstallJobs
externalPurchase
T@"ASDPurchase",&,N,V_externalPurchase
familyPurchaserDSID
T@"NSNumber",&,N,V_familyPurchaserDSID
T@"NSNumber",C,N,V_itemID
hasMIDBasedDsid
TB,N,V_hasMIDBasedDsid
hasMIDBasedApp
TB,N,V_hasMIDBasedApp
hasProfileValidatedApp
TB,N,V_hasProfileValidatedApp
installedVariantID
T@"NSString",&,N,V_installedVariantID
installedVersionID
T@"NSNumber",&,N,V_installedVersionID
isInstalled
TB,N,V_isInstalled
isCompatibilityUpdate
TB,N,V_isCompatibilityUpdate
isPrivate
TB,N,V_isPrivate
isProvisionedApp
TB,N,V_isProvisionedApp
isRedownload
TB,N,V_isRedownload
isRefresh
TB,N,V_isRefresh
isUniversalVariant
TB,N,V_isUniversalVariant
TB,N,V_isUpdate
isUserInitiated
TB,N,V_isUserInitiated
priority
T@"NSNumber",C,N,V_priority
purchase
T@"AMSPurchase",&,N,V_purchase
purchaseID
T@"NSNumber",&,N,V_purchaseID
T@"NSNumber",&,N,V_purchaserDSID
responseMetrics
T@"NSDictionary",&,N,V_responseMetrics
storefront
Tq,N,V_storefront
transactionIDs
T@"NSDictionary",&,N,V_transactionIDs
vendorName
T@"NSString",C,N,V_vendorName
Account
Background
Manual
Migration
Synchronize
Update All
callbackHandler
T@?,C,N,V_callbackHandler
includeMetrics
TB,V_includeMetrics
isBackgroundRequest
isVPPLookup
TB,V_isVPPLookup
logKey
T@"NSString",R,N
reason
Tq,V_reason
requestToken
T@"XPCRequestToken",&,V_requestToken
shouldPerformUpdates
userInitiated
TB,V_userInitiated
offloadedBundleIDs
T@"NSMutableSet",R,V_offloadedBundleIDs
perDeviceBundleIDs
T@"NSMutableSet",R,V_perDeviceBundleIDs
fallBackToOldBagIfNecessary
TB,N,V_fallBackToOldBagIfNecessary
isFactoryInstall
com.apple
iTunesMetadata.plist
UninstallPlaceholdersOnly
placeholders
.png
artwork
SELECT dsid FROM account WHERE apple_id = '%@'
v16@?0^{sqlite3_stmt=}8
MusicLibrary
AccountCache.sqlitedb
com.apple.appstored.StorePushService
@"AMSPromise"16@?0@"AMSURLRequest"8
backgroundUpdateProduct
downloadProduct
purchase_buyParams
T@"AMSBuyParams",R
com.apple.appstored.ProgressCache
NOT bundleID IN %@
remote progress
observer
T@"<LibraryCatalogObserver>",W
T@"<LibraryCatalogObserver>",W,V_observer
current_apps_ocelot_payout
options
T@"ASDPostBulletinRequestOptions",R,D,N
T@"NSString",C,V_bundleID
bundleVersion
T@"NSString",C,V_bundleVersion
T@"NSUUID",C,V_coordinatorID
T@"NSNumber",C,V_externalVersionID
isBeta
TB,V_isBeta
isDeviceBasedVPP
TB,V_isDeviceBasedVPP
isRestore
TB,V_isRestore
T@"NSNumber",C,V_itemID
T@"NSString",R,V_logKey
shortVersion
T@"NSString",C,V_shortVersion
variantID
T@"NSString",C,V_variantID
com.apple.appstored.JobErrorController
B16@?0@"JobError"8
com.apple.appstored.AccountStore
activeAccount
T@"ACAccount",R
T@"ACAccount",R,V_activeAccount
AccountStorePrimaryAccountDidChange
AccountStorePrimaryAccountDidUpdate
AppStoreDaemon
beta_app_feedback
account_dsid
attempt_count
app_version
feedback
successful_image_uploads
log_key
next_retry_date
pending_image_uploads
item_id
iap_info_iaps
adam_id
app_adam_id
expiration_date
intro_offer_status
last_modified_date
purchase_date
sub_family_id
type
auto_renew_status
app_updates
timestamp
install_date
is_background
is_offloaded
is_per_device
metrics_data
purchase_id
release_date
store_item_data
store_item_id
store_software_version_id
update_state
lib_connectInterval
T@"NSDateInterval",R,C
lib_domainLookupInterval
lib_requestInterval
lib_responseInterval
lib_secureConnectionInterval
Metadata not found
Basejumper does not have assets for this build. Please try again later.
Unable to connect to basejumper. Make sure you are on an internal network or have VPN on demand enabled.
An unknown error occurred. Make sure you are on an internal network on have VPN on demand enabled.
 (%@: %ld)
Internal Only
results
T@"NSArray",R,C,V_results
No bundle ID was specified
x-icloud-versionid
Successfully uploaded image to %@ for %@ but failed to find the versionid header
Failed to upload the image for %@
pendingUpload
T@"TFPendingImageUpload",&,N,V_pendingUpload
successfulUpload
T@"TFImageUpload",&,N,V_successfulUpload
archiveSize
TQ,V_archiveSize
diskSpaceNeeded
TQ,V_diskSpaceNeeded
name
T@"NSString",C,V_name
promiseType
Tq,V_promiseType
referenceID
T@"NSNumber",&,V_referenceID
streamingZipOptions
T@"NSDictionary",C,V_streamingZipOptions
transferPath
T@"NSString",C,V_transferPath
v24@?0@"ASDPurchaseResponse"8@"NSError"16
v16@?0@"AppUpdateMemoryEntity"8
v16@?0@"AppUpdatesDatabaseSession"8
v32@?0@"NSNumber"8@"NSArray"16^B24
software
v24@?0@"AMSDialogResult"8@"NSError"16
context
T@"UpdatesContext",&,N,V_context
jobResults
T@"NSArray",R,N
orderedBundleIDs
T@"NSArray",C,N,V_orderedBundleIDs
isUpdate
T@"NSNumber",R,V_isUpdate
revision
T@"NSNumber",R,V_revision
T@"NSNumber",R,V_status
X-Apple-TA-Device
X-Apple-TA-OS-Version
<XDCDevice: %p pairingID = %@>
activePairedDevice
TB,R,GisActivePairedDevice,V_activePairedDevice
connected
TB,R,GisConnected,V_connected
destinationID
T@"NSString",R,V_destinationID
pairingID
T@"NSUUID",R
productType
T@"NSString",R
supported
TB,R,GisSupported,V_supported
systemVersion
thinningHeaders
thinningVariant
T@"NSString",R,V_thinningVariant
tombstone
TB,R,GisTombstone,V_tombstone
-shm
-wal
Cannot execute asynchronous tasks inline
T@"NSError",C,V_error
TB,V_success
storeDescriptor
T@"SQLiteDatabaseStoreDescriptor",R
database
T@"SQLiteDatabase",R,V_database
completionBlock
T@?,C,N,V_completionBlock
canceled
TB,R,N,GisCanceled,V_isCanceled
userNotification
T^{__CFUserNotification=},R,N
T@"ASDPurgeableAppRequestOptions",R,D,N
{ bundleID: %@ itemID: %@ evid: %@ storefront: %@ account: %@ }
fetchLatestVersion
TB,V_fetchLatestVersion
appleID
downloaderID
evid
requestID
T@"NSUUID",R,V_requestID
com.apple.RestoreManager.dispatch
Startup with Active Restores
Please sign as %@ to restore apps
appleID required
Unknown hard failure
Unable to find account with downloader: %@ purchaser: %@ alt-dsid: %@
Unable to find account with downloader: %@ purchaser: %@
com.apple.RestoreManager.boostrap
NonOrdered
Ordered
Batch Token failure
Soft Failure
order: %@ 
[%@] restoreState: %ld bootstrapPhase: %ld %@error: %@ %ld %@
[%@] restoreState: %ld bootstrapPhase: %ld %@
integerValue
%@ (%ld) ----------------------
totalRemaining
activeRestoreCount
totalSoftFailureCount
totalHardFailureCount
softFailureRetryDate
Setup and data migrator complete
%@ Failure
Promotion
Rescue
Restore Hydration
Hydration
Metadata lookup failure
Auth was User Canceled
Retry for account: %@/%@
failCoordinators
TB,V_failCoordinators
batchSize
Tq,R,V_batchSize
failures
T@"NSMutableArray",R,V_failures
T@"NSMutableArray",R,V_softFailures
successes
T@"NSMutableArray",R,V_successes
tokenFailures
T@"NSMutableArray",R,V_tokenFailures
autoFinish
TB,V_autoFinish
No URL for download
file-size
Not enough space to download asset
sinfs
dpInfo
chunks
hashes
clearHashes
chunkSize
No hashes in download info
v24@?0@"AssetResult"8@"NSError"16
Containers
Caches
extractPKZip
T@"<InAppDownloadTaskProgressDelegate>",W,N,V_delegate
downloadID
T@"NSNumber",C,N,V_downloadID
installPath
T@"NSString",R,N,V_installPath
com.apple.appstored.DataMigrationObserver
migrationComplete
TB,R,GisMigrationComplete
Service is not available.
Not entitled for this service.
XPCServiceClientUserInfoKey
Took too long to re-purchase update
%@ %@
metadata
metadatas
T@"NSMutableArray",&,N,V_metadatas
odr_manifest
is_store_based
last_modification_date
local_cache_allowed
thinning_variant
storage_id
version
family
members
{ cached: %d familyMembers: %@ }
family.members
q24@?0@"FamilyMember"8@"FamilyMember"16
dictionaryRepresentation
T@"NSDictionary",R,N
cached
TB,R,N,GisCached,V_cached
familyMembers
T@"NSArray",R,N,V_familyMembers
appPurgeBlacklist
appPurgePluginBlacklist
appPurgeGracePeriod
appPurgeVerifyAvailability
System
Requested by %@
com.apple.AppPurgeCoordinator.purge
com.apple.facetime
com.apple.Bridge
com.apple.tv
com.apple.Safari.content-blocker
lockup
true
com.apple.application
v16@?0@"NSArray"8
v24@?0@"LSBundleProxy"8^B16
None
In app blacklist
Has blacklisted plugins: [%@]
Is within grace period with %ld plugin(s)
Has watch app
Last modified outside window with date: %@
Last launch outside window with date: %@
Registered date: %@ less than recent install cuttoff date: %@
Last bucket launch outside window with bucket: %@
Last modified date: %@ greater than recent install cuttoff date: %@
Last modified date: %@ less than recent install cuttoff date: %@
Usage unknown within grace period
com.apple.appstored.AppPurgeCoordinator.%@
v20@?0B8@"NSError"12
[%@] Offloaded bundleID: %@ reason: %@
diskUsage
order
v24@?0@"NSDictionary"8@"NSError"16
<id: %@ matchType: %ld  lastLaunched: %@>
lastLaunched
T@"NSDate",C,N,V_lastLaunched
matchedBucket
T@"NSString",C,N,V_matchedBucket
usageWindowMatchType
Tq,N,V_usageWindowMatchType
usingLasModified
TB,N,V_usingLasModified
beyondGracePeriod
TB,N,GisBeyondGracePeriod,V_beyondGracePeriod
blacklist
T@"NSArray",C,N,V_blacklist
cutoffDate
T@"NSDate",C,N,V_cutoffDate
pluginBlacklist
T@"NSArray",C,N,V_pluginBlacklist
watchBundles
T@"NSArray",C,N,V_watchBundles
windowApps
T@"NSDictionary",C,N,V_windowApps
MDItemRankingLaunchCountDay
/System/Library/Frameworks/CoreSpotlight.framework/CoreSpotlight
MDItemRankingLaunchCountLast7Days
MDItemRankingLaunchCountLast30Days
MDItemRankingLaunchCountOld
MDItemApplicationLastLaunchedDate
CSSearchQuery
CSSearchableItem
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
ACXDeviceConnection
/System/Library/PrivateFrameworks/AppConduit.framework/AppConduit
ACXShowAppOnWatchKey
ACXContainerAppBundleIdKey
PRAGMA user_version = 1;
CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));
B8@?0
SELECT schema_version FROM schema_version WHERE schema_name = ?
v24@?0@"SQLiteQueryResults"8@"NSError"16
PRAGMA table_info(%@)
v32@?0@"SQLiteCursor"8@"NSError"16^B24
INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)
SELECT name FROM sqlite_master where name = ?
currentSchemaVersion
Tq,R
PurchaseIntent_appAdamId
com.apple.AppStoreDaemon
OPEN
appBundleId
T@"NSString",&,N,V_appBundleId
allowsAuthentication
TB,V_allowsAuthentication
allowsCellularAccess
TB,V_allowsCellularAccess
allowsConstrainedNetworkAccess
TB,V_allowsConstrainedNetworkAccess
allowsWatchCellularAccess
TB,V_allowsWatchCellularAccess
bytesPerSecondLimit
T@"NSNumber",&,V_bytesPerSecondLimit
clientIdentifier
T@"NSUUID",&,V_clientIdentifier
connectionPool
Tq,V_connectionPool
discretionaryType
Tq,V_discretionaryType
duetBudgetingIdentifier
T@"NSString",&,V_duetBudgetingIdentifier
expectedContentLength
TQ,V_expectedContentLength
TQ,V_expectedDiskUsage
T@"NSNumber",&,V_loadingPriority
locateAssetCache
TB,V_locateAssetCache
maximumWatchCellularTransferSize
T@"NSNumber",&,V_maximumWatchCellularTransferSize
networkBudgetingIdentifier
T@"NSString",&,V_networkBudgetingIdentifier
protocolClasses
T@"NSArray",&,V_protocolClasses
rangeOffset
TQ,V_rangeOffset
TB,V_requiresPowerPluggedIn
requestReason
Tq,V_requestReason
requestUUID
T@"NSUUID",&,V_requestUUID
taskPriority
T@"NSNumber",&,V_taskPriority
sqlite3_stmt
T^{sqlite3_stmt=},R,N,V_statement
columnIndexByName
T@"NSDictionary",R,C,N
TB,R,N,GisReadOnly
Statement already finalized
Failed to find URL for feedback upload: %@
An error occurred submitting the feedback
WI_FI
MOBILE_DATA
WIRE
NONE
device
T@"XDCDevice",&,V_device
messageID
T@"NSString",&,V_messageID
reply
TB,GisReply,V_reply
messagePayload
T@"NSData",R,V_messagePayload
messageType
Tq,R,V_messageType
com.apple.PersonalizationManager.setupFollowingMigration
com.apple.appstored.ASDRepairBundleID
Startup with network
Metrics posting not enabled
App Usage not Enabled
External request
Rescheduling
[Sbsync/Signout/%@]
Activity Complete
[Sbsync/%@/%@]
User Request
DELETE FROM app_events_ocelot where event_type != 2;
DELETE FROM app_events_ocelot_payout where event_type != 4;
eventTime
DELETE FROM current_apps_ocelot_payout;
DELETE FROM current_apps_ocelot;
DELETE FROM app_events_ocelot where is_temporary = 1;
DELETE FROM app_events_ocelot_payout where is_temporary = 1;
Invalid context
v32@?0@"NSArray"8B16B20@"NSError"24
Network came up
Unsubscribed
Ocelot Repair
bundlePath
exitReason
Subscription change
Subscribed
Post Completed
Nothing to Post
%@:%@
DELETE FROM app_events_ocelot where has_been_posted = 1;
DELETE FROM app_events_ocelot_payout;
AMSServerErrorCode
freeTrial
Paid
top_arcade_apps.plist
Terminate Arcade Apps
v24@?0@"FBSApplicationTerminationAssertion"8@"NSError"16
lastCache
apps
TopApps
arcadeEnabled
sharedInstance
T@"OcelotManager",R,N
isSubscribedToOcelot
TB,R,N
shouldPostOcelotMetrics
com.apple.appstored.OcelotManager.background
com.apple.appstored.OcelotManager.callout
com.apple.appstored.OcelotManager.dispatch
com.apple.appstored.OcelotManager.distNotification
com.apple.appstored.OcelotManager.sbsync
com.apple.appstored.OcelotManager.topApps
com.apple.appstored.OcelotManager.upsell
/var/mobile/Library/Logs/AppleSupport/
general
en_US_POSIX
yyyy-MM-dd HH:mm:ss Z
v32@?0@"AppUpdateMemoryEntity"8Q16^B24
com.apple.appstored.StoreQueueManager.callback
com.apple.appstored.StoreQueueManager.dispatch
v24@?0@"NSArray"8@"NSError"16
v36@?0B8@"NSDictionary"12q20@"NSError"28
com.apple.AppStore
com.apple.appstored.StoreQueueManager.tasks
T@"SQLiteConnection",R,N,V_connection
Passing an intent of 'lib_IXCoordinatorIntentAny' is not supported.
Don't know how to find coordinator for bundle ID: %@ with intent: %lu
B16@?0@"IXAppInstallCoordinator"8
Coordinator identifier was invalid: %@
Coordinator identifier was '%@' but expected '%@'
hasInitialODRAssetPromises
hasPlaceholderPromise
hasAppAssetPromise
hasInstallOptions
Feedback
`%@` does not support setPreparationPromise:error:
Responsible client was `%lu`
`%@` does not support setInitialODRAssetPromises:error:
hasUserDataPromise
fake-promise
`%@` does not support setUserDataPromise:error:
security-promise
`%@` does not support setDeviceSecurityPromise:error:
Failure reason was not specified
`%@` does not support deviceSecurityPromiseWithError:error:
`%@` does not support setTargetGizmoPairingID:error:
`%@` does not support setImportance:error:
`%@` does not support setInstallOptions:error:
lib_appStoreIsOwningClient
lib_coordinatorIntent
lib_expectsDeviceSecurityPromise
lib_expectsInitialODRPromises
lib_expectsPlaceholderPromise
lib_hasAppAssetPromise
lib_hasCompletedPlaceholder
lib_hasInitialODRAssetPromises
lib_hasInstallOptions
lib_tag
T@"lib_IXAppInstallCoordinatorTag",R
<%@: %p> { coordinatorID = %@; bundleID = %@ }
T@"NSString",R,V_bundleID
coordinatorID
T@"NSUUID",R,V_coordinatorID
Initiating
Updating
RestoringDemoted
Restoring
Promoting
Watch
Unknown (%lu)
com.apple.private.alloy.appstore
com.apple.appstored.XDCMessageBroker
No device provided
No payload provided
T@"<XDCServiceDelegate>",W,V_delegate
XDCServiceDevicesDidChangeNotification
app_events_personalization
OnDemandResourcesDaemon Maintenance Queue
-[ODRBackgroundMaintenance startBackgroundMaintenanceOperations]
T@"ASDLaunchableAppsRequestOptions",R,D,N
Invalid hash '%@' expected '%@'
bytesProcessed
TQ,R,V_bytesProcessed
bytesValidated
TQ,R,V_bytesValidated
com.apple.ondemandresources.ODRTaskQueue.managementQueue
com.apple.ondemandresources.ODRTaskQueue.%sQueue
interactive
initiated
utility
default
OnDemandResources
plist
NSBundleResourceRequestTags
Manifest is not a dictionary
NSAssetPacks
v32@?0@"NSString"8@"NSDictionary"16^B24
Manifest has no tags
lastModified
T@"NSDate",R,N,V_lastModified
tags
appDsid
receipt-data
generateBuyParams
adHocOfferId
adHocKeyId
adHocNonce
adHocSignature
adHocTimestamp
transaction-id
app-list
offer-name
original-purchase-date
original-transaction-id
purchase-date
request-data
assetList
v16@?0@"AppReceiptTaskResult"8
keybag
com.apple.appstored.URLResponseDecoder
%@:%ld
/System/Library/PrivateFrameworks/AppStoreDaemon.framework
PROXY_AUTHENTICATION_MESSAGE_%@_%@
SERVER_AUTHENTICATION_MESSAGE_%@
SECURE_AUTH
INSECURE_AUTH
PROXY_AUTHENTICATION_TITLE
SERVER_AUTHENTICATION_TITLE
localizedMessage
T@"NSString",&,N,V_localizedMessage
localizedTitle
T@"NSString",&,N,V_localizedTitle
user
T@"NSString",&,N,V_user
sms-private://app?appBundleID=%@
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.AppStoreDaemon.LaunchServicesCatalog
@"NSEnumerator"8@?0
v24@?0@"LSApplicationProxy"8^B16
isPlaceholder
com.apple.appstored.URLSessionManager
subscriptions
appAdamId
inAppSubscriptions
introOfferConsumedFamilyIds
segment
AppStore
News
user.dsId
T@"NSNumber",R,C
dictionary
T@"NSDictionary",R,C,V_dictionary
environment
token
messages
hasEnvironment
T@"NSString",&,N,V_environment
hasToken
T@"NSString",&,N,V_token
T@"NSMutableArray",&,N,V_messages
action-params
appsApple
offers
value
versionId
{ bundleID: %@ itemID: %@ evid: %@ }
buyParams
T@"NSNumber",R,N,V_evid
background
TB,N,GisBackground
T@"NSNumber",R,N,V_itemID
installDate
T@"NSDate",N
offloaded
TB,N,GisOffloaded
perDevice
TB,N,GisPerDevice
parentalControlsName
parentalControlsRank
Tq,R,N,V_parentalControlsRank
releaseDate
T@"NSDate",R,N,V_releaseDate
_OnDemandResourcesErrorDomain
FunctionName
SourceFileLine
Automatic
Pending
guid
kbsync
Could not find bag key for queue check
cancel-download-url
download-id
UIRequiredDeviceCapabilities
downloadQueueType
Tq,R,V_downloadQueueType
numberOfAvailableDownloads
Tq,R,V_numberOfAvailableDownloads
items
T@"NSArray",R,N,V_items
storeItems
T@"NSArray",R,N,V_storeItems
storeCorrelationID
T@"NSString",R,V_storeCorrelationID
text/xml
xp_amp_app_install
metrics/scorecardInstallSamplingPercentage
account_events
alt_dsid
apple_id
active_end_time
active_start_time
com.apple.appstored.ODRAssetPackValidationMaintenanceOperation
v32@?0@"NSURL"8Q16^B24
v24@?0@"NSURL"8^B16
empty directory
asset pack
Crash
Launches
Uninstall
Qualifying Activity
Unknown
%@:%ld:%ld:%lld
temporaryAccountID
T@"NSNumber",C,N,V_temporaryAccountID
foregroundEvents
application/x-dmap-tagged
application/x-www-form-urlencoded
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
UNKNOWN
%@/%@
%lli
X-FM-Dsid
Tq,V_accountID
X-iTMS-ValidityDurationInSeconds
[Sbsync/Default/%@]
Ocelot
Signout
Timed out creating request
Timed out before creating request
Timed out requesting data
Timed waiting for user to repsond to dialog
Slot limit reached
Timed out before requesting data
subKeyBag
com.apple.appstored.ASDArcadeSubscriptionBagUpdatedNotification
[Sbsync] [exernal]
[Sbsync] [external]
sbsync
opt-out
action
Could not find bag key for sbsync
startTime
Td,N,V_startTime
urlSession
T@"AMSURLSession",&,N,V_urlSession
T@"ACAccount",C,N,V_account
T@"NSString",&,N,V_logUUID
timeout
Td,N,V_timeout
subscriptionStatus
Tq,R,N,V_subscriptionStatus
subscriptionDuration
T@"NSNumber",C,N,V_subscriptionDuration
TB,N,GisUserInitiated,V_userInitiated
serialNumber
v24@?0@"AMSAuthenticateResult"8@"NSError"16
receipt
xToken
want-expired
want-revoked
want-vpp
adam-id
appExtVrsId
software-version-external-identifier
bundle-id
version-id
Operation Canceled
T@"<FetchReceiptTaskDelegate>",W,N,V_delegate
T@"ApplicationProxy",R,N,V_app
attributeToAppStore
TB,N,V_attributeToAppStore
receiptFlags
TQ,N,V_receiptFlags
T@"ASFReceipt",R,N,V_receipt
cacheTimestamp
com.apple.appstored.SubscriptionEntitlementsCoordinator.network
com.apple.appstored.SubscriptionEntitlementsCoordinator
v32@?0@"SubscriptionEntitlementsResponse"8B16B20@"NSError"24
876F12EE-055C-49EB-8909-3BE6753CA832
SubscriptionEntitlements_v2.plist
SubscriptionEntitlementsAppStore_v2.plist
v24@?0@"SubscriptionEntitlementsResponse"8@"NSError"16
com.apple.appstored.NewsSubEntitlementsCacheUpdated
com.apple.appstored.AppStoreSubEntitlementsCacheUpdated
App Store
application/protobuf
Content-Type
Accept
attempt
disableAuth
no_weak_token_auth
disableMescal
no_mescal_auth
entity
T@"BetaAppFeedbackMemoryEntity",&,N,V_entity
bids
ownsCheck
Could not determine account
Could not create url
bundleIDs
T@"NSArray",C,N,V_bundleIDs
outputDictionary
T@"NSDictionary",R,V_outputDictionary
INTERNAL ONLY
Please file a radar! It's quick and easy.
FILE_RADAR_IDENTIFIER
tap-to-radar
ComponentName
ComponentVersion
New Bugs
ComponentID
685220
Classification
Serious Bug
Reproducibility
I Didn't Try
AutoDiagnostics
phone
Title
Description
File A Radar
No Thanks
descriptionBlock
T@?,C,V_descriptionBlock
externalIDStrings
T@"NSMutableArray",&,N,V_externalIDStrings
hasError
TB,N
Ti,N,V_error
preallocatedFiles
T@"NSMutableArray",&,V_preallocatedFiles
spaceReduction
Tq,R,V_spaceReduction
Sandbox
Invalid or missing receipt data (%lu bytes)
Invalid URL to write receipt
sandboxReceipt
No valid application at URL %@
Invalid container for application: %@
mobile
Failed to write receipt to URL: %@
absoluteURL
T@"NSURL",R,N,V_absoluteURL
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
bundleURL
T@"NSURL",R,N,V_bundleURL
receiptData
T@"NSData",R,N,V_receiptData
IAPInfoItemsRequestOperationErrorDomain
com.apple.TestFlight
Error Domain:%@, Error Code:%ld
com.apple.appstored.NotifyTestFlightClient
itms-beta-action://?action=betaAppInstallCompleted&betaExternalVersionID=%@&bundleID=%@&success=%d
&bundleVersion=%@&shortVersion=%@
&failureReason=%@
Invalid URL
betaExternalVersionID
T@"NSString",C,N,V_betaExternalVersionID
T@"NSString",C,N,V_bundleVersion
failureReason
T@"NSString",C,N,V_failureReason
T@"NSString",C,N,V_shortVersion
successfulInstall
TB,V_successfulInstall
assetPromise
T@"AssetPromise",&,V_assetPromise
coordinator
T@"IXAppInstallCoordinator",&,V_coordinator
downloadEvent
T@"AIMDownloadEvent",&,V_downloadEvent
downloadProgress
T@"NSProgress",&,V_downloadProgress
externalID
T@"NSUUID",&,V_externalID
installID
Tq,R,V_installID
T@"AppInstallLogKey",&,V_logKey
operation
T@"NSOperation",W,V_operation
packageID
Tq,V_packageID
installEvent
T@"AIMInstallEvent",&,V_installEvent
signpostID
TQ,V_signpostID
com.apple.appstored.ODRLaunchServicesObserver
beta_app_info
bundle_short_version
bundle_version
email
feedback_enabled
has_shared_screenshot_feedback
icon_url_template
last_seen_date
launch_screen_enabled
localized_display_names
primary_locale
what_to_test
com.apple.appstored.Environment
storeSystem.db
storeUser.db
systemDatabase
T@"SQLiteDatabase",R
userDatabase
com.apple.appstored.private
com.apple.appstored.coordinate-apps
com.apple.appstored.install-apps
com.apple.appstored.install-system-apps
com.apple.appstored.update-apps
com.apple.appstored.xpc.request
listener
T@"NSXPCListener",&,V_listener
AssetErrorDomain
com.apple.appstored.AssetSession
v16@?0@"AMSLazyPromise"8
v20@?0@"NSError"8B16
Data consumer failed to process data within allotted time
Expected zero resumption offset
v24@?0Q8@"NSError"16
Asset URL has expired
Invalid status code `%ld`
Data consumer is missing
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
Apple-Download-Type
configuration
T@"NSURLSessionConfiguration",R
.%lu
anyVersion
TB,R,GisAnyVersion
canonicalString
%@...
.()-
T@"ChunkedDigest",&,V_digest
expectedBytes
TQ,V_expectedBytes
issueProgress
TB,V_issueProgress
T@"NSString",C,V_logKey
Documents/AppUpdates.sqlitedb
Documents/updates.sqlitedb
software_update
is_profile_validated
SELECT * FROM %@
Application only supports 32-bit architecture
Found duplicate application for `%@`
User has disabled automatic downloads
Restrictions prohibit automatic downloads
preflightResponse
T@"AppInstallPreambleResponse",R
T@"IXAppInstallCoordinator",R,V_coordinator
result
Tq,R,V_result
com.apple.appstored.ODRMainfestValidationMaintenanceOperation
com.apple.ondemandd.LaunchServices
Launch Services
com.apple.appstored.%@
AssetRequetPropertyRangeOffset
asset_rangeOffset
bytes=%llu-
Range
TQ,Sasset_setRangeOffset:
itms-apps://arcadeSeeAllGames
Arcade/%@
Timed out before doing sbsync
OCELOT_APP_NO_LONGER_AVAILABLE_%@
ARCADE_INTERNET_CONNECTION_REQUIRED
ARCADE_CONNECT_TO_THE_INTERNET_TO_OPEN_APP
ARCADE_SUBSCRIPTION_EXPIRED
ARCADE_VERIFY_SUBSCRIPTION
repairedBundleIDs
T@"<ApplicationRepairDelegate>",W,N
T@"NSString",&,N
T@"NSArray",R,N,V_repairedBundleIDs
T@"<ApplicationRepairDelegate>",W,N,V_delegate
metadata.bundle-identifier
metadata.bundle-version
metadata.has-messages-extension
metadata.kind
metadata.launch-prohibited
metadata.platform-identifier
metadata.subtitle
metadata.title
thinned-assets
@"<NSCopying>"16@?0@"UPPManifestAsset"8
assetsCategorized
launchProhibited
platformIdentifier
subtitle
thinnedAssets
thinnedAssetsCategorized
com.apple.platform.iphoneos
com.apple.platform.watchos
com.apple.appstored.CrossfireManager.switchMetrics
DELETE FROM current_apps_crossfire;
DELETE FROM app_events_crossfire where is_temporary = 1;
Invalid context to get crossfire events
Post skipped for crossfire interval
DELETE FROM app_events_crossfire;
crossfireEnabled
com.apple.appstored.CrossfireManager.callout
com.apple.appstored.CrossfireManager.dispatch
com.apple.appstored.XDCDeviceManager
v32@?0@"NSString"8@"XDCDevice"16^B24
T@"XDCDevice",R
com.apple.appstored.InstallationService
throttle
i16@?0^B8
firstInt64Value
Tq,R,N
firstNumberValue
T@"NSNumber",R,C,N
hasRows
app_events_ocelot_payout
com.apple.UpdateManager.TestFlightFeedback
unknown
applicationAdamId
cfBundleShortVersionString
cfBundleVersion
uptimeMillis
hasApplicationAdamId
TQ,N,V_applicationAdamId
hasBundleId
T@"NSString",&,N,V_bundleId
hasCfBundleShortVersionString
T@"NSString",&,N,V_cfBundleShortVersionString
hasCfBundleVersion
T@"NSString",&,N,V_cfBundleVersion
hasUptimeMillis
TQ,N,V_uptimeMillis
Min:%@, Max:%@, Avg:%@
asset-info
deltaPackages
local-server-info
initialODRSize
priorVariantIdentifiers
priorVersionExternalIdentifier
variantId
B16@?0@"StoreAsset"8
%@: {URL = %@; variant = %@; delta = %d}
assetType
Tq,R,V_assetType
assetURL
T@"NSString",R,V_assetURL
bytesTotal
T@"NSNumber",R,V_bytesTotal
T@"NSArray",R,V_clearHashes
delta
TB,R,GisDelta
T@"NSData",R,V_dpInfo
expectedDiskspace
T@"NSNumber",R,V_expectedDiskspace
T@"NSArray",R,V_hashes
T@"NSNumber",R,V_hashType
T@"NSNumber",R,V_initialODRSize
T@"NSString",R,V_md5
locallyCacheable
TB,R,GisLocallyCacheable,V_locallyCacheable
numberOfBytesToHash
T@"NSNumber",R,V_numberOfBytesToHash
T@"NSArray",R,V_priorVariantIdentifiers
priorVersionEvid
T@"NSNumber",R,V_priorVersionEvid
T@"NSData",R,V_sinf
T@"NSString",R,V_variantID
variantDescriptor
T@"VariantDescriptor",R,V_variantDescriptor
zipStreamable
TB,R,GisZipStreamable,V_zipStreamable
hashArrayData
sinfData
sinf
T@"ASDJobSchedulerRequestOptions",R,D,N
v24@?0@"SSAuthenticateResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
authenticateReason
Tq,V_authenticateReason
dialogDictionary
T@"NSDictionary",C,V_dialogDictionary
silentAuthOnly
TB,V_silentAuthOnly
Ad Platforms Status Conditions
com.apple.appstored.activities.AdPlatformsStatusConditions
criteria
T@"NSObject<OS_xpc_object>",R
descriptiveName
enabled
TB,R,GisEnabled
registeredName
Tr*,R
deadline
The manifest URL isn't external
B16@?0@"UPPManifestAsset"8
v32@?0@"NSString"8@"NSArray"16^B24
Not compatible with this platform: %@
No manifest data received
Provided hash did not match
Manifest could not be parsed
User canceled confirmation
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
clientID
T@"NSString",&,V_clientID
manifestDigest
T@"NSString",&,V_manifestDigest
shouldHideUserPrompts
TB,V_shouldHideUserPrompts
UPPManifestErrorUserInfoKeyExistingName
UPPManifestErrorUserInfoKeyManifestName
download-manifest
digest
itms-services
SKServiceDelegateLocalConnection
%@ received a connection from itself
DELETE FROM odr_tag WHERE bundle_id = ?
UPDATE odr_asset_pack SET pin_count = 0, purgeable = 1 WHERE bundle_id = ?
odr_tag
always_preserved
preservation_priority
v32@?0@"NSString"8@16^B24
%@: %lld
databaseID
Tq,N,V_databaseID
propertyValues
T@"NSDictionary",R,C,N,V_propertyValues
externalPropertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
ActiveDSID
AutoSettingsData
com.apple.appstored.NanoSettingsStateChanged
WatchSettingsManagerSettingsChangedExternallyNotification
com.apple.appstored.WatchSettingsManager.callout
com.apple.appstored.WatchSettingsManager.dispatch
enabled-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/enabledMediaTypes
register-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/registerMediaTypes
activeDSID
T@"NSNumber",&,N
icuLocale
offerNames
sfId
available-subproducts
offerName
is-hosted
store-offers
STDQ
price
size
icu-locale
discounts
title
subscriptionFamilyId
recurringSubscriptionPeriod
numOfPeriods
modeType
%@%@
Error decoding object
Attempted to decode store response
client
T@"StoreKitClient",R,N,V_client
productIdentifiers
T@"NSArray",R,N,V_productIdentifiers
invalidIdentifiers
T@"NSArray",R,N,V_invalidIdentifiers
products
T@"NSArray",R,N,V_products
B16@?0@"TestFlightFeedbackDatabaseTransaction"8
databaseStore
T@"TestFlightFeedbackDatabaseStore",&,N,V_databaseStore
T@"BetaAppFeedbackMemoryEntity",R,N,V_entity
Unable to encode metadata
@16@?0@"ASDJobAsset"8
@avg.self
@min.self
@max.self
samplingInterval
Td,R,V_samplingInterval
T@"XPCClient",R,N,V_client
T@"ASDRequestOptions",R,N,V_options
response
T@"ASDRequestResponse",R,V_response
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
cacheSize
Tq,N,V_cacheSize
T@"NSString",R,V_databasePath
encryptionKeyId
T@"NSString",C,N,V_encryptionKeyId
protectionType
T@"NSString",C,N,V_protectionType
readOnly
TB,N,GisReadOnly,V_readOnly
tcr_unsignedLongLong
tcr_url
Failure occurred but no error was provided
Installation Canceled
app_install
installPhase
storeMetadata
T@"MIStoreMetadata",C
COUNT(1)
MAX(app_install.priority)
MIN(app_install.priority)
approved
artwork_url
auto_install_override
automatic_type
bootstrapped
bundle_name
cancel_download_url
cancel_if_duplicate
client_id
companion_bundle_id
coordinator_intent
downloader_id
failure_error
gizmo_pairing_id
has_messages_extension
launch_prohibited
log_code
messages_artwork_url
metrics_install_type
optimal_download_start
order_index
policy
post_metrics
recovery_count
remote_install
restore_retry_count
restore_state
restore_type
source_type
store_cohort
store_metadata
supports_32bit_only
supress_dialogs
update_type
vendor_name
watch_type
IFNULL(app_install.phase, 10)
IFNULL(app_install.priority, 0)
IFNULL(app_install.bootstrapped, 2)
Existing coordinators:
  %@
  ~ END ~
Active installations:
  (%3ld) %@
v32@?0@"AppInstall"8Q16^B24
v24@?0@"XDCMessage"8@"NSError"16
Some App
http://www.apple.com
Some app
installs
Diagnostic
download-queue-item-count
more
endId
startId
transactions
T@"NSArray",R,N,V_transactions
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_URGENCY
v16@?0r^{__CFDictionary=}8
completedUnitCount
totalUnitCount
-[XDCProgress writeTo:]
/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.7.15/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCProgress.m
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
additionalHeaders
companionBundleID
itemName
itemResponse
installedExternalVersionID
logCode
metricsType
originalPurchaserDSID
preflightURL
purchaseEvent
referrerName
referrerURL
refreshInstallID
discoveredUpdate
isDiscretionary
generatedVendorID
isMachineBased
postMetrics
purchaseOnly
purchaseState
purchaseType
isRemoteInstall
requireUniversal
suppressDialogs
suppressEvaluatorDialogs
updateType
watchType
internal
OSBuildType
ForceAppDRMMode
is-background=1
T@"ACAccount",&
T@"NSDictionary",&
T@"NSString",&
T@"AMSBuyParams",&
T@"AMSProcessInfo",&
T@"XDCDevice",&
discretionary
TB,GisDiscretionary
T@"NSUUID",&
T@"NSNumber",&
T@"StoreItemResponse",&
T@"NSString"
T@"AppInstallLogKey",&
machineBased
TB,GisMachineBased
T@"NSURL",&
T@"ASDPurchase",&
T@"AIMPurchaseEvent",&
remoteInstall
TB,GisRemoteInstall
T@"XPCRequestToken",&
PurchaseHistory
External
Push
Trigger
Auto
%@/%@/%@
Purchase could not be found in the queue
queueType
Tq,R,N,V_queueType
Tq,R,N,V_reason
purchaseBatch
T@"PurchaseBatch",R,N,V_purchaseBatch
purchaseInfo
T@"PurchaseInfo",R,N,V_purchaseInfo
addedApps
T@"NSArray",&,V_addedApps
removedApps
T@"NSArray",&,V_removedApps
isLast
TB,V_isLast
com.apple.AppStoreDaemon.PurchaseHistoryDAAPResponseDecoder.pasrsingQueue
v24@?0@"ASDJobActivity"8^B16
Not available in the simulator
T@"ASDInstallManifestRequestOptions",R,D,N
com.apple.appstored.DialogCoordinator
app_events_crossfire
bundleKey
downloadPriority
fileSize
primaryContentHash
isStreamable
uncompressedSize
itemId
local-cache-allowed
v16@?0@"SQLiteConnection"8
/odr.sqlite
SELECT ZMANIFEST.Z_PK, ZMANIFEST.ZAPPLICATIONBUNDLEID FROM ZMANIFEST LEFT JOIN ZASSETPACK ON ZASSETPACK.ZMANIFEST = ZMANIFEST.Z_PK WHERE ZASSETPACK.ZLOCALURLSTRING IS NOT NULL
ZAPPLICATIONBUNDLEID
Z_PK
B16@?0@"ODRDatabaseTransaction"8
ZBUNDLEID
ZCHUNKSIZE
ZDOWNLOADPRIORITY
ZDOWNLOADSIZE
ZEFFECTIVEALWAYSPRESERVE
ZEFFECTIVEPRESERVATIONPRIORITY
ZHASHES
ZISSTREAMABLE
ZLASTUSEDDATE
ZLOCALURLSTRING
ZMD5
ZPINCOUNT
ZPURGEABLE
ZPURGEREASON
ZSHA
ZSIZE
ZSOURCEURLSTRING
SELECT * FROM ZASSETPACK WHERE ZMANIFEST = ? AND ZLOCALURLSTRING IS NOT NULL
SELECT * FROM ZCONTENTHASH WHERE ZASSETPACK = ?
ZSTRATEGY
label
ZHASHVALUE
ZADAMID
ZCACHINGALLOWED
ZLASTMODIFICATIONDATE
ZSTORAGEID
ZTHINNINGVARIANT
SELECT * FROM ZMANIFEST WHERE ZAPPLICATIONBUNDLEID = ?
ZISSTOREBASED
app_events_ocelot
 %@: %@
T@"<BatterySaverWatcherDelegate>",R,W,V_delegate
machineName
ownerDsid
failureType
Server Error
refetch
client_id_header
familyMemberAccountID
T@"NSNumber",C,V_familyMemberAccountID
allowSilentAuthentication
TB,V_allowSilentAuthentication
authorizationToken
T@,C,V_authorizationToken
clientIdentifierHeader
T@"NSString",C,V_clientIdentifierHeader
keybagPath
T@"NSString",C,V_keybagPath
TQ,V_reason
shouldAddKeysToKeyBag
TB,V_shouldAddKeysToKeyBag
displaysDialogs
TB,V_displaysDialogs
T@"NSDictionary",R,V_response
T@"NSString",C,V_token
userAgent
T@"NSString",C,V_userAgent
outputBlock
T@?,C,N
CREATE TABLE IF NOT EXISTS app_updates (pid INTEGER, bundle_id TEXT, install_date DATETIME, is_background INTEGER NOT NULL DEFAULT 0, is_offloaded INTEGER NOT NULL DEFAULT 0, is_per_device INTEGER NOT NULL DEFAULT 0, is_profile_validated INTEGER NOT NULL DEFAULT 0, metrics_data JSON, purchase_id INTEGER DEFAULT 0, release_date DATETIME, store_item_data JSON, store_item_id INTEGER NOT NULL DEFAULT 0, store_software_version_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), update_state INTEGER NOT NULL DEFAULT 0, UNIQUE(bundle_id) ON CONFLICT REPLACE,PRIMARY KEY (pid));
B16@?0@"AppUpdatesDatabaseTransaction"8
DELETE FROM app_updates WHERE is_profile_validated = 1;
CREATE TABLE IF NOT EXISTS purchase_history_apps (pid INTEGER PRIMARY KEY, bundle_id TEXT, content_rating_flags INTEGER, date_purchased DATETIME, developer_name TEXT, family_shared INTEGER, first_party INTEGER, has_messages_extension INTEGER, hidden INTEGER, hidden_from_springboard INTEGER, icon_url_template TEXT, is_32_bit_only INTEGER, is_preorder INTEGER, long_title TEXT, oval_icon_url_template TEXT, preflight_package_url URL, product_url URL, purchaser_dsid INTEGER, redownload_params TEXT, required_capabilities JSON, store_item_id INTEGER, supports_ipad INTEGER, supports_iphone INTEGER, purchase_token INTEGER, locker_item_id INTEGER, genre_id INTEGER, genre_name TEXT, watch_app_delivered_in_ios_app INTEGER, watch_app_runs_independently INTEGER, watch_app_watch_only INTEGER, supports_layered_image INTEGER, has_p3 INTEGER, title TEXT, circular_icon_url TEXT, UNIQUE(purchaser_dsid, store_item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS purchase_history_db_properties (key TEXT PRIMARY KEY, value TEXT)
purchase_history
ALTER TABLE purchase_history_apps ADD COLUMN genre_id INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN genre_name TEXT;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_delivered_in_ios_app INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_runs_independently INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_watch_only INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN supports_layered_image INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN has_p3 INTEGER;
DROP TABLE purchase_history_apps;
DROP TABLE purchase_history_db_properties;
Apps uninstalled
v32@?0@"NSNumber"8@"AppUpdateMemoryEntity"16^B24
adamId
betaExternalVersionId
bundleShortVersionId
bundleVersionId
externalVersionId
serial-no
message
Error message: %@, Correlation ID: %@
manifest
T@"ODRManifest",&,V_manifest
B16@?0@"ACAccount"8
T@"NSArray",R,N,V_updates
DRMFree
TB,R,GisDRMFree,V_DRMFree
T@"NSArray",R,V_sinfs
pinfsArray
T@"SinfsArray",R
sinfsArray
pinf
applicationsDidInstall
T@?,C,V_applicationsDidInstall
com.apple.appstored.RetrySoftFailedAccountRestoreJobs
com.apple.appstored.RetryCanceledRestoreJobs
com.apple.appstored.RetrySoftFailedRestoreJobs
com.apple.appstored.LegacyActivityManager.dispatch
com.apple.appstored.LegacyActivityManager.notification
com.apple.appstored.RefreshClusterMappings
yyyy-MM-dd HH:mm:ss
v20@?0@"NSString"8B16
Background Task
com.apple.appstored.FavoritesApps
com.apple.appstored.CacheDeleteUpdate
Startup
hashValue
T@"NSString",C,V_hashValue
T@"NSString",C,V_strategy
widthPixels
heightPixels
hasWidthPixels
TI,N,V_widthPixels
hasHeightPixels
TI,N,V_heightPixels
com.apple.appstored.ISOpertionQueue.networkQueue
com.apple.AppStoreFoundation.startup
[%@]: Start date: %@, is active: %d, length: %lu, session ID: %@
TB,R,N,GisActive,V_active
beginDate
endDate
lastHeartbeatDate
sessionIdentifier
sessionLength
T@"NSString",R,N,V_shortVersion
unrecordedSessionLength
Coordinator does not conform to IXCoordinatorWithAppAssetPromise
Expected app promise `%@` but instead found `%@`
Could not create an app data promise using %@
applicationUsername
T@"NSString",C,N,V_applicationUsername
forceAuthentication
TB,N,V_forceAuthentication
receiptInstallURL
T@"NSURL",&,N,V_receiptInstallURL
xp_amp_app_usage_analytics
xp_amp_app_usage_dnu
xp_amp_app_usage_arcade
xp_amp_usage_detailed
itsmetrics_test
com.apple.appstored.%@.events
Crossfire
ArcadePayout
ArcadeSummary
actorID
T@"NSString",C,N,V_actorID
addPriorApps
TB,N,V_addPriorApps
currentOSVersion
T@"NSString",C,N,V_currentOSVersion
offset
Tq,N,V_offset
rescheduleActorIDReset
TB,N,V_rescheduleActorIDReset
Tq,N,V_startTime
topic
T@"NSString",C,N,V_topic
appEventEntityClass
T#,R,N
appUsageType
Tq,R,N,V_appUsageType
deletedApps
T@"NSArray",C,N,V_deletedApps
historyMap
T@"AppUsageInstallHistoryMap",N,V_historyMap
isTemporary
TB,N,V_isTemporary
keepAlive
T@"KeepAlive",&,N,V_keepAlive
intervalStartDate
T@"NSDate",R,N,V_intervalStartDate
T@"NSString",R,N,V_logKey
launchesStartDate
T@"NSDate",C,N,V_launchesStartDate
metadataEntityClass
minimumRunningTime
Tq,N,V_minimumRunningTime
Tq,R,N,V_now
nowDate
T@"NSDate",R,N,V_nowDate
shouldResetPayoutDate
TB,N,V_shouldResetPayoutDate
subscriptionState
T@"NSString",&,N,V_subscriptionState
TB,N,V_userInitiated
Library/
Library/Caches/
Scratch
Documents/Persistence
Documents
Library/Caches
Library/Preferences
com.apple.appstore
Cache.db
fsCachedData
JFamilyCircle.plist
updates.plist
throttle.plist
libraryPath
scratchPath
application-identifier
Unknown Client
No storage ID found in manifest for bundle ID %@
No manfiest found for bundle ID %@
Application handshake failed with no application bundle ID. No sandbox extensions will be granted.
-[ODRClient tagStateInBundle:completionHandler:]
InvalidTag
Request for resources was cancelled.
v32@?0q8@"NSURL"16@"NSError"24
com.apple.odr-assets
v16@?0q8
bundleRequestToDownloadRequest
T@"NSMutableDictionary",&,N,V_bundleRequestToDownloadRequest
readyLock
T@"NSLock",&,N,V_readyLock
sandboxExtension
T@"NSDictionary",&,N,V_sandboxExtension
clientProxy
T@"<ODRClientProtocol>",&,N,V_clientProxy
requestingAppBundleID
T@"NSString",R,V_requestingAppBundleID
IAPInfoRequestOperationErrorDomain
Please provide one or more restore items to restore
Unable to determine account for content restore. Requested account: %@
Token failure (%@)
Metadata / Error for this item is missing in server response
Unsupported 32-Bit application
Incompatible application
Missing required SINF
Missing Required SINF
An unexpected installation failure occurred.
Bundle ID: %@
Item ID: %@
External Version: %@
@"NSString"8@?0
T@"ACAccount",C,V_account
skipLatestVersionCheck
TB,V_skipLatestVersionCheck
TB,GisUserInitiated,V_userInitiated
hardFailures
T@"NSArray",R,V_hardFailures
softFailures
T@"NSArray",R,V_softFailures
successfulItems
T@"NSArray",R,V_successfulItems
itemID is missing
T@"NSMutableArray",R,N,V_hardFailures
itemMap
T@"NSDictionary",R,V_itemMap
remainingItemIDs
T@"NSMutableArray",R,N,V_remainingItemIDs
T@"NSMutableArray",R,N,V_softFailures
T@"NSMutableArray",R,N,V_successfulItems
targetItems
T@"NSArray",R,V_targetItems
com.apple.appstored.StoreKit.ForcedSandbox
processID
Ti,R,N,V_processID
T@"NSString",R,N,V_bundleVersion
deviceVendorIdentifier
T@"NSString",R,N,V_deviceVendorIdentifier
localizedName
T@"NSString",R,N,V_localizedName
receiptURL
T@"NSURL",R,N,V_receiptURL
storeExternalVersionID
Tq,R,N,V_storeExternalVersionID
storeItemID
Tq,R,N,V_storeItemID
useSandbox
TB,R,N,V_useSandbox
requestProperties
T@"URLRequestProperties",R,C,V_requestProperties
Ignoring, unsupported action for enterprise request: %@
Ignoring, missing URL for enterprise request: %@
Ignoring, invalid URL for enterprise request: %@
Ignoring, invalid enterprise request with missing URL
v32@?0@"NSUUID"8@"ASDEnterpriseAppMetadata"16^B24
processedExternalIDs
T@"NSArray",R,V_processedExternalIDs
changeset
T@"ODRDatabaseChangeset",R,C,V_changeset
PurchaseHistoryErrorDomain
PurchaseHistoryRequestOperationErrorDomain
com.apple.appstored.ODRDownloadManager.callout
com.apple.appstored.ODRDownloadManager.dispatch
v16@?0@"ODRDatabaseSession"8
v16@?0@"ODRAssetDownloadResponse"8
Request for resource exceeds maximum limit.
Device Out of Space
v16@?0@"AssetResult"8
Attempted to download asset pack into nil destination.
com.apple.appstored.CleanupManager.dispatch
Post Stale Cleanup
Post Cleanup
DESC
ODRTag_PercentageCompleteKey
ODRTag_TimestampKey
ODRTag_StatusKey
ODRTag_SizeKey
ODRTag_TagNameKey
-[ODRDeveloperToolsClient purgeAllTagsInBundleWithID:replyBlock:]
-[ODRDeveloperToolsClient purgeTagWithName:inBundleWithID:replyBlock:]
pipeline
T@"<AppInstallPipeline>",W,V_pipeline
No URL was specified for package `%lld`
downloadResponse
T@"AppInstallDownloadResponse",&,V_downloadResponse
assetRequest
T@"AssetRequest",R,V_assetRequest
assetSize
T@"NSNumber",R,V_assetSize
event
T@"AIMDownloadEvent",R,V_event
Tq,R,V_packageID
TQ,R,V_requestCount
dataConsumer
T@"CoordinatorPromiseDataConsumer",R,V_dataConsumer
v28@?0@"NSData"8B16^B20
%02x
T@"ASDPurgeAppsRequestOptions",R,D,N
T@"ASDAccountLookupRequestOptions",R,D,N
User request
alwaysPreserved
TB,N,GisAlwaysPreserved
preservationPriority
Td,N
current_apps_crossfire
uploadUrl
xiCloudVersionIdHeader
hasUploadUrl
T@"NSString",&,N,V_uploadUrl
hasXiCloudVersionIdHeader
T@"NSString",&,N,V_xiCloudVersionIdHeader
com.apple.appstored.PushConnection
Push Connection
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
null
v24@?0@"SSURLConnectionResponse"8@"NSError"16
T@"<PushConnectionDelegate>",W,V_delegate
T@"NSString",R,V_environment
com.apple.Music
com.apple.news
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
MANAGE_SUBS_ON_DELETE_TITLE
MANAGE_SUBS_ON_DELETE_MESSAGE
MANAGE_SUBS_ON_DELETE_MANAGE_BUTTON
MANAGE_SUBS_ON_DELETE_TITLE_PLURAL
MANAGE_SUBS_ON_DELETE_MESSAGE_PLURAL
MANAGE_SUBS_ON_DELETE_MANAGE_BUTTON_PLURAL
itms-ui://apps.apple.com/account/subscriptions?app=%lld&ctx=appdelete
MANAGE_SUBS_ON_DELETE_KEEP_BUTTON
v16@?0Q8
count
contentType
hasDsid
TQ,N,V_dsid
hasCount
TI,N,V_count
hasContentType
T@"NSString",&,N,V_contentType
app_events
account_id
cohort
cumulative_user_count
device_vendor_id
event_type
event_subtype
has_been_posted
is_beta
is_temporary
item_name
launch_end_time
launch_time
week_start_time
short_version
usage_time
model
osVersion
architecture
display
locale
timezone
carrier
cellularNetworkType
disk
batteryPercentage
hasModel
T@"NSString",&,N,V_model
hasOsVersion
T@"NSString",&,N,V_osVersion
hasArchitecture
T@"NSString",&,N,V_architecture
hasDisplay
T@"TFDisplay",&,N,V_display
hasLocale
T@"NSString",&,N,V_locale
hasTimezone
T@"NSString",&,N,V_timezone
hasCarrier
T@"NSString",&,N,V_carrier
hasCellularNetworkType
T@"NSString",&,N,V_cellularNetworkType
hasConnection
Ti,N,V_connection
hasDisk
T@"TFMemoryUsage",&,N,V_disk
hasBatteryPercentage
TI,N,V_batteryPercentage
(unknown: %i)
-[XDCCancelInstallRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.7.15/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCCancelInstallRequest.m
com.apple.appstored.UpdatesService
v12@?0B8
v24@?0q8@"NSError"16
%@ Updated should perform automatic updates: %@
Enabled
Disabled
v28@?0B8@"NSArray"12@"NSError"20
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
updatesInterface
T@"<UpdatesControllerInterface>",&,V_updatesInterface
Update
knownPaths
B32@?0@"NSString"8Q16^B24
resultComplexity
T@"ASDExternalManifestRequestOptions",R,D,N
PURCHASE_INTENT_NOTIFICATION_APP_IS_READY
PURCHASE_INTENT_NOTIFICATION_OPEN_APP_TO_PURCHASE
T@"ASDPostPurchaseIntentBulletinRequestOptions",R,D,N
install
TB,V_deltaPackage
app_package
blocked
bytes_offset
bytes_total
clear_hash_array
data_promise_id
disk_usage
dp_info
hash_array
hash_size
hash_type
initial_odr_size
locate_asset_cache
odr_manifest_url
package_type
package_url
parent_id
provisioning_profiles
request_count
streaming_zip
variant_id
accessWasUnblocked
TB,R,V_accessWasUnblocked
Tq,V_cellularResult
Tq,V_constrainedResult
TB,V_suppressDialogs
automationRunning
deviceModel
buildNumber
buildType
seed
updatesVersion
averageTimeBetweenPolls
lastPollDate
meanTimeToDiscovery
meanTimeToDownload
meanTimeToInstall
meanTimeToTransaction
clientId
autoUpdateMetrics
{ meanToDiscover: %f meanToTransaction: %f meanToDownload: %f meanToInstall: %f averageTimeBetweenPolls: %f }
Td,N,V_averageTimeBetweenPolls
T@"NSDate",C,N,V_lastPollDate
Td,N,V_meanTimeToDiscovery
Td,N,V_meanTimeToDownload
Td,N,V_meanTimeToInstall
Td,N,V_meanTimeToTransaction
com.apple.appstored.ThermalPressureMonitor
elevated
nominal
TB,R,GisElevated,V_elevated
ThermalPressureStateDidChangeNotification
devices
os-version
%ld:%@:%@
<VariantDescriptor %p>: {%@}
@16@?0@"VariantDescriptor"8
q24@?0@"VariantDescriptor"8@"VariantDescriptor"16
canonicalIdentifier
T@"OSVersion",R,C
universal
TB,R,GisUniversal,V_universal
Universal
<VariantDescriptor %p>: {Universal}
AutomaticUpdates
DemotedApplications
UpdateHistory
ValidateAppleIDs
attempts
TQ,R,N,V_attempts
migratorType
T@"NSString",R,N,V_migratorType
HEAD
Invalid response, expected content length unknown
Invalid response, status code: %ld
contentLength
T@"NSNumber",R,V_contentLength
com.apple.appstored.NetworkMonitor
path
v24@?0@"CTDataStatus"8@"NSError"16
TB,R,GisConstrained,V_constrained
TB,R,GisExpensive,V_expensive
Tq,R,V_interfaceType
roaming
TB,R,GisRoaming,V_roaming
NetworkStateDidChangeNotification
CONSTRAINED_PROMPT_TITLE
CONSTRAINED_PROMPT_BODY_UPDATES_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE_ALL
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@_%@
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@
CONSTRAINED_PROMPT_BUTTON_DOWNLOAD
CONSTRAINED_PROMPT_BODY_UPDATE_%@_%@
CONSTRAINED_PROMPT_BODY_UPDATE_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE
CONSTRAINED_PROMPT_BUTTON_CANCEL
LowDataModePromptActionCancel
LowDataModePromptActionDownload
amd-domains
MZStorePlatform
lookup
headers
fields
com.apple.appstored.BagManager.notification
com.apple.appstored.TaskQueue.networkQueue
com.apple.appstored.TaskQueue
maxConcurrentOperationCount
T@"NSString",C
tasks
T@"NSArray",R,C
qualityOfService
strategy
odr_asset_pack
bundle_key
chunk_size
download_identifier
download_priority
download_request_uuids
effective_always_preserve
effective_preservation_priority
file_size
known_content_hashes
last_used_date
local_url
pin_count
primary_content_hash
purgeable
purge_reason
streamable
source_url
uncompressed_size
bytes_to_hash
ODRSimulatedDownloadsBandwidthKey
localURL
T@"NSURL",C,V_localURL
pinCount
TQ,V_pinCount
com.apple.appstored.odrAssetDownload.%@
%@%@/%@:%@
ODR%@:%@
ODR/%@
application
T@"ODRApplication",C,V_application
T@"NSString",C,V_bundleKey
completionPromise
T@"AMSPromise",&,V_completionPromise
contentHashDictionary
T@"NSDictionary",C,V_contentHashDictionary
destinationPath
T@"NSString",C,V_destinationPath
expectedDiskUsage
Tq,V_expectedDiskUsage
hashingData
T@"NSDictionary",C,V_hashingData
T@"KeepAlive",&,V_keepAlive
T@"NSString",&,V_logKey
storeBased
TB,V_storeBased
TB,V_streamable
uniqueKey
T@"NSString",&,V_uniqueKey
TB,GisDiscretionary,V_discretionary
downloadPath
downloadSize
Tq,V_downloadSize
duplicateDownloadCount
hasRefreshed
TB,V_hasRefreshed
loadingPriority
Td,V_loadingPriority
outOfBandTransferPromise
T@"IXPromisedOutOfBandTransfer",R
Tq,V_pinCount
T@"NSProgress",R,V_progress
requestStartDate
T@"NSDate",&,V_requestStartDate
shouldPin
TB,V_shouldPin
sourceURL
T@"NSURL",C,V_sourceURL
tagsRequest
T@"ODRTagsRequest",&,V_tagsRequest
totalNewPins
Tq,V_type
useLocalCache
TB,V_useLocalCache
qosClass
TI,V_qosClass
T@"ACAccount",R,V_account
T@"AMSProcessInfo",R,V_clientInfo
T@"NSString",R,V_logUUID
knownIAPs
T@"NSArray",R,V_knownIAPs
songId
v16@?0@"AMSURLRequest"8
v16@?0@"AMSURLResult"8
atv-headboard-url
contentIds
hideContentIds
headboardDSIDLessApps
T@"NSArray",R,N,V_headboardDSIDLessApps
tvProviderDSIDLessApps
T@"NSSet",R,N,V_tvProviderDSIDLessApps
T@"NSString",C,N,V_logKey
v28@?0@"NSArray"8B16@"NSError"20
IAPHistory
com.apple.appstored.iap-info
odr_asset_download
coordinator_id
download_size
is_paused
unique_key
T@"NSUUID",R,N
isPaused
T@"NSURL",R,N
X-MMe-Multi-User
replacementSinf
ManagedApplicationTask
Missing itemID
bundleDisplayName
VPP:%@:%@
Missing itemID / bundleID
is32bitOnly
Item is not purchased or free
VPP Free Purchase
detailedResultBlock
T@?,C,V_detailedResultBlock
T@"ASDManagedApplicationRequestOptions",R,C,V_options
resultChangeType
Tq,R,V_resultChangeType
com.apple.appstored.ASDItunesAccountDidChangeNotification
America/Los_Angeles
DSID
active
q24@?0@8@16
{ events : [
 %@ 
events
{ start: %@ end: %@ accountID: %@/%@ }
Start Date
End Date
T@"AccountEvent",C,V_event
start
Td,V_start
Td,V_end
com.apple.appstored.AccountEventCoordinator.dispatch
com.apple.MobileAsset.SystemApp
AppBundleID
%K == %@
responseHandler
T@?,C,V_responseHandler
restoreAppInstall
T@"RestoreAppInstall",R,N
T@"NSNumber",C,N,V_externalVersionID
storeFrontID
T@"NSNumber",C,N,V_storeFrontID
vendorID
T@"NSString",C,N,V_vendorID
T@"NSString",C,N,V_accountID
T@"NSNumber",C,N,V_downloaderID
familyID
T@"NSNumber",C,N,V_familyID
purchaserID
T@"NSNumber",C,N,V_purchaserID
T@"NSNumber",C,N,V_failureReason
NetworkLimit
APP_TOO_BIG_FOR_NETWORK_WLAN_BODY_SPECIFIC
APP_TOO_BIG_FOR_NETWORK_WIFI_BODY_SPECIFIC
APP_TOO_BIG_FOR_NETWORK_WLAN_BODY
APP_TOO_BIG_FOR_NETWORK_WIFI_BODY
APP_TOO_BIG_FOR_NETWORK_TITLE
dialogType
lib_defaultUserAgent
game_session
begin_date
end_date
last_heartbeat_date
session_end_reason
session_identifier
com.apple.AppStoreFoundation.LibraryService
@"NSArray"16@?0@"NSArray"8
conduitConnection
conduitUnknown
invalidApplication
invalidPackage
invalidConsumer
invalidRequest
networkExpired
networkStatus
networkPolicy
networkRecovery
invalidCoordinator
deviceSecurity
deviceState
deviceStorage
ipcError
unknownFailure
Asset Not Purged
Purged Due to Xcode Request
Purged Due to Low Disk Space
Purged Due to Software Update
Purged Due to App Demotion to Placeholder
Unknown Purge Reason [%lu]
T@"NSMutableArray",&,N,V_progress
com.apple.appstoreagent
current_apps_ocelot
app_done
machine_based
request_url
transaction_id
bytesReceived
TQ,V_bytesReceived
T@"<AssetDataConsumer>",&,V_dataConsumer
T@"NSError",&,V_error
metrics
T@"NSURLSessionTaskMetrics",&,V_metrics
shouldReportAnonymousPings
SERVER_AUTHENTICATION_USERNAME
SERVER_AUTHENTICATION_PASSWORD
AuthenticationChallengeDialogActionCancel
AuthenticationChallengeDialogActionOkay
com.apple.AppStoreFoundation.PurchaseHistoryManager
com.apple.appstoredaemon.PurchaseHistoryManager.query
v16@?0@"PurchaseHistoryDatabaseSession"8
B16@?0@"PurchaseHistoryDatabaseTransaction"8
com.apple.appstored.PurchaseHistoryDatabaseUpdated
com.apple.appstoredaemon.PurchaseHistoryManager.update
v24@?0@"NSData"8@"NSError"16
ROWID
v32@?0@8@16^B24
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
 FROM 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
[%public}@] Error: %@
DELETE FROM %@ WHERE %@ = ?;
persistentID
Tq,R,N,V_persistentID
existsInDatabase
deletedAssetPackURLs
T@"NSSet",R,C
deletedStorageIDs
tcr_dictionary
autoUpdatesEnabled
local-software
installed-version-identifier
T@"UpdatesResponse",&,N,V_response
success
TB,R,V_success
displayNames
T@"ASDBetaAppDisplayNames",R,N
com.apple.appstored.Coordinator.%@
Canceling coordinator for reason: %@
Succeeded in canceling coordinator
Failed to cancel coordinator error: %@
Succeeded in setting importance %lu
Failed to set importance %lu error: %@
Setting installation options
Succeeded in setting install options
Failed to set install options error: %@
Fetching app promise
Succeeded in fetching app promise
Failed to fetch app promise error: %@
<%@: %p; bundleID = %@; creator = %lu; intent = %lu; UUID = %@>
Coordinator: %@ does not conform to protocol: %@
%K != %@
uniqueIdentifier
T@"IXAppInstallCoordinator",R,N,V_coordinator
TQ,R,N,V_intent
v32@?0@"StoreItem"8Q16^B24
overrideAutomaticType
TB,V_overrideAutomaticType
%llu
T@"NSOrderedSet",R,C,V_storeItems
Failed to find URL to fetch image upload URLs: %@
image/jpeg
The number of URLs received doesn't match the number we need
We received a non-200 response from the server
signedURLs
T@"NSArray",R,N,V_signedURLs
_notification
T@"UserNotification",&,N,G_notification,S_setNotification:,V_notification
downloadIdentifiers
T@"NSOrderedSet",R,N
jobIdentifiers
T@"NSOrderedSet",R,N,V_jobIdentifiers
downloadKind
T@"NSString",C,N,V_downloadKind
downloadTitle
T@"NSString",C,N,V_downloadTitle
validError
TB,R,N,GisValidError
appUpdatesToFinish
cancelProgress
T@"NSSet",R,N
coordinatorPause
coordinatorReasons
coordinatorResume
failedTestFlightInstalls
finishProgress
legacyNotifications
shouldPostProcessAutomaticUpdatesCompleted
schedulerPollReason
TQ,R,N
shouldPostAppsDone
shouldPostUpdatesDone
shouldRefreshApplicationBadge
restoresCompleted
TB,R,N,V_restoresCompleted
restoresToHydrate
_DownloadSize
_IsZipStreamable
_Measurement
_StartOfDataRange
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
downloadOffset
T@"NSNumber",R,N,V_downloadOffset
T@"NSNumber",R,N,V_downloadSize
T@"NSError",R,N,V_error
hashType
T@"NSNumber",R,N,V_hashType
T@"NSArray",R,N,V_hashes
streamableZip
TB,R,N,GisStreamableZip,V_streamableZip
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_URL
applicationBundleID
isStoreBased
lastModificationDate
lastUsedDate
-Unknown-
isOnDevice
chunckSize
downloadIdentifier
humanReadablePurgeReason
Hashes
effectivelyAlwaysPreserve
effectivePreservationPriority
-PreservingTags-
Samplers :
%@ : %@
No longer supported - logging is always on.
memory
Sampler '%@' enabled with %f sampling interval.
Sampler '%@' disabled.
Sampler not found
Unknown sampler
Asset Packs : %lu asset packs are purgeable.
Asset Packs : %lu asset packs are not purgeable.
Asset Packs Purge Test : %lu asset packs to purge for urgency %d (requested bytes : %lld; actual bytes : %lld).
%@, 
No hashes
com.apple.appstored.callout
com.apple.appstored.dispatch
com.apple.appstored.badge
provisionedApps
T@"NSArray",&,N,V_provisionedApps
agentRequestedUpdateAll
TB,V_agentRequestedUpdateAll
bundle-identifier
md5s
md5-size
variantIds
variantDescriptors
@"<NSFastEnumeration>"16@?0@"NSDictionary"8
@16@?0@"NSString"8
MD5s
MD5Size
T@"NSURL",R
variantIDs
messages-display-image
asset-pack-manifest
software-package
display-image
availableBytes
totalBytes
hasAvailableBytes
TQ,N,V_availableBytes
hasTotalBytes
TQ,N,V_totalBytes
@16@?0@"ASDSystemAppMetadata"8
@16@?0@"AppInstall"8
storePlatformData.software-update-slimmed-lockup.results
artistName
assets
contentRatingsBySystem
externalId
fileSizeByDevice
fileSizeInfo
variants
hasMessagesExtension
height
isFirstParty
isHiddenFromSpringboard
update
ovalArtwork
updateFileSizeInfo
deltaSizeByExternalVersionId
whatsNew
width
B16@?0@8
updates
transactionID
T@"NSMutableArray",&,N,V_transactionIDs
<id: %@ storage usage: %@ reason: %@>
T@"NSNumber",C,N,V_diskUsage
plugins
T@"NSArray",C,N,V_plugins
Tq,N,V_order
T@"NSString",C,N,V_reason
T@"NSNumber",C,N,V_storeItemID
systemApp
TB,N,GisSystemApp,V_systemApp
none
T@"AppInstallsDatabaseChangeset",R,V_changeset
auditTokenData
T@"NSData",R
clientVersion
clientIDHeader
T@"NSString",R,V_clientIDHeader
transactionId
transactionIdentifier
T@"NSString",R,N,V_transactionIdentifier
extractorDelegate
T@"<SZExtractorDelegate>",W,N,V_extractorDelegate
1.2.11
lib_digestMD5
lib_shortDigestMD5
lib_statusCode
notZero
TB,R,GisNotZero
discretionary-always
discretionary-inferred
wifi
nolowdata
power
Payment has no identifier or quantity
expired
v16@?0@"NSURL"8
time-remaining
This API is not supported on the simulator
com.apple.developer.arcade-operations
com.apple.storekit.client-override
errorDomain
errorCode
errorDescription
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Ti,N,V_errorCode
hasErrorDescription
T@"NSString",&,N,V_errorDescription
apps.plist
probability
com.apple.appstored.AppUsageManager.working
User
launchCount
<bundleID: %@ launches: %ld>
Tq,N,V_launchCount
Tf,N,V_probability
_DKPredictor
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_DKKnowledgeStore
Environment: %@
      Token: %@
   Messages:
         - %@
   Messages: <none>
com.apple.aps.appstored
Identity has already been assumed
Identity has not yet been assumed
currentIdentity
T@"<Identity>",R
apsDelegatePort
machPortName
metricsContainerId
persistedDataPath
cachedDataPath
com.apple.UpdateManager.ValidateAppleIDs
CREATE TABLE IF NOT EXISTS app_done (pid INTEGER, account_id INTEGER, item_id INTEGER, machine_based INTEGER NOT NULL DEFAULT 0, request_url URL, transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install (pid INTEGER, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, approved INTEGER NOT NULL DEFAULT 0, artwork_url URL, auto_install_override INTEGER NOT NULL DEFAULT 0, automatic_type INTEGER NOT NULL DEFAULT 0, bundle_id TEXT, bundle_name TEXT, bundle_version TEXT, bootstrapped INTEGER NOT NULL DEFAULT 2, cancel_download_url URL, cancel_if_duplicate INTEGER NOT NULL DEFAULT 0, companion_bundle_id TEXT, client_id TEXT, coordinator_id UUID, coordinator_intent INTEGER NOT NULL DEFAULT 1, downloader_id INTEGER, download_path TEXT, external_id UUID, external_order INTEGER, evid INTEGER, failure_error BLOB, gizmo_pairing_id UUID, has_messages_extension INTEGER NOT NULL DEFAULT 0, item_id INTEGER, launch_prohibited INTEGER NOT NULL DEFAULT 0, log_code TEXT, messages_artwork_url URL, optimal_download_start INTEGER, metrics_install_type INTEGER NOT NULL DEFAULT 0, order_index INTEGER, phase INTEGER NOT NULL DEFAULT 10, policy JSON, post_metrics INTEGER NOT NULL DEFAULT 0, priority INTEGER NOT NULL DEFAULT 0, receipt BLOB, recovery_count INTEGER NOT NULL DEFAULT 0, redownload INTEGER NOT NULL DEFAULT 0, remote_install INTEGER NOT NULL DEFAULT 0, restore_state INTEGER NOT NULL DEFAULT 0, restore_retry_count INTEGER NOT NULL DEFAULT 0, restore_type INTEGER NOT NULL DEFAULT 0, source_type INTEGER NOT NULL DEFAULT 0, storefront TEXT, store_cohort TEXT, store_metadata BLOB, supports_32bit_only INTEGER NOT NULL DEFAULT 0, supress_dialogs INTEGER NOT NULL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), transaction_id TEXT, update_type INTEGER NOT NULL DEFAULT 0, vid UUID, vendor_name TEXT, watch_type INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install_remote (pid INTEGER, destination_id TEXT, external_id UUID, metadata BLOB, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_package (pid INTEGER, blocked INTEGER NOT NULL DEFAULT 0, bytes_offset INTEGER, bytes_remaining INTEGER, bytes_total INTEGER, clear_hash_array JSON, data_promise_id UUID, disk_usage INTEGER, dp_info BLOB, hash_array JSON, hash_size INTEGER, hash_type INTEGER, initial_odr_size INTEGER, locate_asset_cache INTEGER, odr_manifest_url URL, package_type INTEGER, package_url URL, parent_id UUID, provisioning_profiles JSON, request_count INTEGER DEFAULT 0, sinf BLOB, streaming_zip INTEGER, timestamp DATETIME DEFAULT (timestamp()), variant_id TEXT, PRIMARY KEY(pid));
DROP TABLE app_done
DROP TABLE app_install
DROP TABLE app_install_remote
DROP TABLE app_package
Passing an intent of 'ASDCoordinatorIntentUnknown' is not supported.
Block must not be nil
B24@?0@"IXAppInstallCoordinator"8@"NSError"16
schemaName
T@"NSString",&,V_schemaName
sessionClass
T#,V_sessionClass
transactionClass
T#,V_transactionClass
@"<NSFastEnumeration>"8@?0
CREATE TABLE IF NOT EXISTS iap_info_iaps (adam_id INTEGER, app_adam_id INTEGER, purchase_date DATETIME, last_modified_date DATETIME, expiration_date DATETIME, type INTEGER, dsid INTEGER, pid INTEGER PRIMARY KEY, intro_offer_status INTEGER, sub_family_id TEXT, auto_renew_status INTEGER, UNIQUE(dsid, adam_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_info_db_properties (key TEXT PRIMARY KEY, value TEXT)
iap_info
ALTER TABLE iap_info_iaps ADD COLUMN auto_renew_status INTEGER;
DROP TABLE iap_info_iaps;
DROP TABLE iap_info_db_properties;
uuid
hasUuid
T@"NSString",&,N,V_uuid
applicableEntitlement
T{_ASDServiceEntitlement=@@},R,V_applicableEntitlement
mergeHandler
T@?,R,C,V_mergeHandler
T@"NSString",R,C,V_name
diagnosticServiceEntitlement
T{_ASDServiceEntitlement=@@},V_diagnosticServiceEntitlement
diagnosticServiceProvider
T@?,C,V_diagnosticServiceProvider
CrossfireServerEntitlement
T{_ASDServiceEntitlement=@@},V_CrossfireServerEntitlement
CrossfireServiceProvider
T@?,C,V_CrossfireServiceProvider
IAPHistoryServiceEntitlement
T{_ASDServiceEntitlement=@@},V_IAPHistoryServiceEntitlement
IAPHistoryServiceProvider
T@?,C,V_IAPHistoryServiceProvider
installationServiceEntitlement
T{_ASDServiceEntitlement=@@},V_installationServiceEntitlement
installationServiceProvider
T@?,C,V_installationServiceProvider
libraryServiceEntitlement
T{_ASDServiceEntitlement=@@},V_libraryServiceEntitlement
libraryServiceProvider
T@?,C,V_libraryServiceProvider
OcelotServerEntitlement
T{_ASDServiceEntitlement=@@},V_OcelotServerEntitlement
OcelotServiceProvider
T@?,C,V_OcelotServiceProvider
PersonalizationServerEntitlement
T{_ASDServiceEntitlement=@@},V_PersonalizationServerEntitlement
PersonalizationServiceProvider
T@?,C,V_PersonalizationServiceProvider
PurchaseHistoryServiceEntitlement
T{_ASDServiceEntitlement=@@},V_PurchaseHistoryServiceEntitlement
PurchaseHistoryServiceProvider
T@?,C,V_PurchaseHistoryServiceProvider
PurchaseServiceEntitlement
T{_ASDServiceEntitlement=@@},V_PurchaseServiceEntitlement
PurchaseServiceProvider
T@?,C,V_PurchaseServiceProvider
RepairServiceProvider
T@?,C,V_RepairServiceProvider
RepairServiceEntitlement
T{_ASDServiceEntitlement=@@},V_RepairServiceEntitlement
TestFlightFeedbackServiceEntitlement
T{_ASDServiceEntitlement=@@},V_TestFlightFeedbackServiceEntitlement
TestFlightServiceProvider
T@?,C,V_TestFlightServiceProvider
UpdatesServiceEntitlement
T{_ASDServiceEntitlement=@@},V_UpdatesServiceEntitlement
UpdatesServiceProvider
T@?,C,V_UpdatesServiceProvider
UserInfo
com.apple.distnoted.matching
com.apple.notifyd.matching
data
T@"NSData",C,N,V_data
T@"NSURL",C,N,V_URL
ODRPurgeAssetMediumUrgencyCutoff
ODRDeviceSpaceCushion
-[ODRManager checkAndRequestRequiredSpaceForRequest:]
+[ODRManager isAppRunning:]
Available Space : %@
ODR Library : %@
Asset Packs : %@
Database    : %@
Active Download Requests
Download: %@
Log Key : %@
Bundle ID : %@
Source URL : %@
Download Path : %@
Destination Path : %@
Is Streamable: %@
Priority : %f
Is Discretionary : %@
Duplicate count : %ld
%@ completed
Progress: %@
No Download Requests Active
com.apple.appstored.RepairRequest
completionHandler
T@?,C,V_completionHandler
cellularDownload
T@"EvaluatorDownload",&,V_cellularDownload
cellularIdentity
T@"ASDCellularIdentity",&,V_cellularIdentity
evaluatorResult
Tq,R,V_evaluatorResult
com.apple.appstored.FamilyManager.notifications
SC_Info
SQLiteErrorDomain
BuyRequest:%@/%@
Purchases never completed after two hours
T@"ASDPurchaseRequestOptions",R,D,N
com.apple.appstored.ODRApplication
{bundleID = %@; adamID = %@; versionID = %@; variantID = %@}
{bundleID = %@; version = %@; shortVersion = %@; variantID = %@}
adamID = %@%s
versionID = %@%s
version = %@
shortVersion = %@
modified = %.0f
variantID = %@
{%@}
hasODR
TB,R,GisStoreBased
versionToken
adamID
beta
TB,R,GisBeta
bundleShortVersion
installed
TB,R,GisInstalled
machineVPP
TB,R,GisMachineVPP
T@"NSString",C,D
TB,D,GisBeta
T@"NSURL",C,D
TB,D,GisInstalled
TB,D,GisMachineVPP
AssetPackManifest
%K IN %@
@16@?0@"ASAsset"8
lookupResults
T@"NSArray",R,C,V_lookupResults
current_apps_personalization
CDNUUID
asset_cdnUUID
asset_statusCode
com.apple.appstored.UserNotificationCenter
com.apple.AppStoreFoundation.IAPInfoManager
v16@?0@"IAPInfoDatabaseSession"8
B16@?0@"IAPInfoDatabaseTransaction"8
com.apple.appstoredaemon.IAPInfoManager.update
v24@?0@"IAPInfoItemsRequestResponse"8@"NSError"16
com.apple.appstored.IAPInfoDatabaseUpdated
asd-notification-default
com.apple.appstored.submitTestFlightFeedback
com.apple.appstored.TestFlightManager.callout
com.apple.appstored.TestFlightManager.dispatch
v16@?0@"TestFlightFeedbackDatabaseSession"8
TESTFLIGHT_FEEDBACK_TITLE_FORMAT
TESTFLIGHT_FEEDBACK_BODY
TESTFLIGHT_FEEDBACK_SHARE_BUTTON
TESTFLIGHT_FEEDBACK_CANCEL_BUTTON
com.apple.appstored.BetaAppCrashed
Failed to find a beta app with version %@
Failed to save launch info %@
Failed to save feedback for app version %@
TESTFLIGHT_FEEDBACK_AUTHENTICATE_FORMAT
TESTFLIGHT_FEEDBACK_AUTHENTICATE
Failed to find a valid app with bundleID %@
Failed to find a beta app with bundleID %@
Next TestFlightFeedback Retry Date
TFLocale
/System/Library/PrivateFrameworks/TestFlightCore.framework/TestFlightCore
TFFeedbackHandleConfiguration
TFFeedbackHandle
com.apple.appstored.AppInstallScheduler
com.apple.appstored.TaskQueue.bootstrapQueue
%@ phase: %@
B16@?0@"AppInstall"8
B16@?0@"AppSchedulerDatabaseTransaction"8
OptimalDownloadWindow
Wait for optimal download window
com.apple.odr.devtools
Developer Tools
@16@?0@"ASDTestFlightAppMetadata"8
@16@?0@"NSData"8
SELECT value FROM iap_info_db_properties WHERE key = ?
actiontype
actiontitle
actionurl
date
actionButtonTitle
T@"NSString",C,N,V_actionButtonTitle
actionButtonURL
T@"NSURL",C,N,V_actionButtonURL
Tq,N,V_actionType
launchURL
T@"NSURL",C,N,V_launchURL
creationDate
T@"NSDate",C,N,V_creationDate
T@"NSString",C,N,V_message
recordID
T@"NSString",C,N,V_recordID
T@"NSString",C,N,V_title
installedSoftwareRatingName
Unknown validation error
Invalid key path '%@' in expression: %@
Invalid expression type '%lu' in expression: %@
FP/%@
REPAIR_FAIRPLAY_FAMILY_LEAVE_APP_STORE
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_TITLE
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_MESSAGE
T@"NSString",C,N,V_clientIdentifierHeader
T@"NSString",C,N,V_clientID
com.apple.appstored.DecryptDataConsumer
No processor was set when truncating
streamAdapter
T@"<AssetDataConsumer>",&,V_streamAdapter
invalid symlink at %s
B24@?0^{_ftsent=^{_ftsent}^{_ftsent}^{_ftsent}q^v**iiSSQiSsSSS^{stat}[1c]}8^@16
-[ODRFileUtilities validateDownloadAtURL:error:]
Could not stat %s: %s
private
-[ODRFileUtilities _traverseDirectory:error:withBlock:]
Error for path %s: %s
fts_close failed for %s with error %s
Failed to find valid application: %@
Invalid receipt data (%lu bytes) or missing identifier `%@
Failed to write receipt for container: %@
uploadUrls
expiresTimeMillis
T@"NSMutableArray",&,N,V_uploadUrls
hasExpiresTimeMillis
TQ,N,V_expiresTimeMillis
metrics/metricsUrl
mobile-network-constraints
storeplatform-base-url-unpersonalized
signed-actions/MZStorePlatform/lookup/headers
signed-actions/MZStorePlatform/lookup/fields
updateableSystemApps
volumeStoreDownloadProduct
sign-sap-setup-cert
sign-sap-setup
sign-sap-request
sign-sap-response
storefront-header-suffix
fps-cert
fps-request
trustedDomains
musicCommon
guid-urls
send-content-restrictions-header
com.apple.appstored.PurchaseManager.dispatch
com.apple.appstored.PurchaseManager.taskQueue
purchaseQueue
T@"AMSPurchaseQueue",&,N,V_purchaseQueue
REQUEST_ERROR_TITLE
REQUEST_ERROR_BODY
[%@]
responses
T@"NSArray",R,V_responses
('%@:%d')
com.apple.itunes.extended-media-kind
revision-number=%u&query=%@
Tq,R,V_resultComplexity
com.apple.message-payload-provider
lib_downloaderDSID
lib_extensionTypes
lib_isArcadeOpenable
lib_isFamilyShared
lib_isOpenable
lib_isOcelot
lib_purchaserDSID
lib_purchaseOwner
T@"PurchaseOwner",R
lib_storeMetadata
T@"MIStoreMetadata",R
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ? AND locker_item_id IN (%@);
v32@?0@"NSNumber"8Q16^B24
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ?;
INSERT OR REPLACE INTO purchase_history_db_properties (value, key) VALUES (?, ?);
connectionPointer
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
.watchkitapp
NSApplicationRequiresMaze
NSApplicationRequiresArcade
%@/%lld
_bundleID
_bundlePath
_bundleVersion
_expectedStoreVersionID
_installed
_localizedName
_profileValidated
_receiptType
_shortVersionString
_storeExternalVersionID
_storeItemID
_vendorName
%@: (%@, %@, %lld:%lld md:%p %@) 
TB,GisBeta,V_beta
T@"NSString",&,V_bundlePath
T@"NSString",&,N,V_bundleVersion
canonicalExecutablePath
T@"NSString",&,N,V_canonicalExecutablePath
T@"NSString",&,V_companionBundleID
deviceIdentifierForVendor
T@"NSString",&,V_deviceIdentifierForVendor
downloaderDSID
T@"NSNumber",&,V_downloaderDSID
expectedStoreVersionID
Tq,V_expectedStoreVersionID
T@"NSNumber",&,V_familyID
installDidOccur
TB,V_installDidOccur
isAppleSigned
TB,N,V_isAppleSigned
T@"NSString",&,V_localizedName
mdItemRef
T@"NSValue",&,V_mdItemRef
hasMIDBasedSINF
TB,V_hasMIDBasedSINF
TB,GisInstalled,V_installed
machineLicensed
TB,N,GisMachineLicensed,V_machineLicensed
ocelot
TB,N,GisOcelot,V_ocelot
TB,N,GisOffloaded,V_offloaded
placeholder
TB,N,GisPlaceholder,V_placeholder
T@"NSNumber",&,V_purchaserDSID
profileValidated
TB,N,GisProfileValidated,V_profileValidated
storeOriginated
TB,N,GisStoreOriginated,V_storeOriginated
receiptType
T@"NSString",&,V_receiptType
shortVersionString
T@"NSString",&,V_shortVersionString
storeCohort
T@"NSString",&,V_storeCohort
T@"NSNumber",&,V_storefront
Tq,V_storeExternalVersionID
Tq,V_storeItemID
thinningVariantID
T@"NSString",&,V_thinningVariantID
updateDidOccur
TB,V_updateDidOccur
updateMetadataRefreshed
TB,V_updateMetadataRefreshed
updateWillOccur
TB,V_updateWillOccur
T@"NSString",&,V_vendorName
v16@?0@"LSApplicationProxy"8
com.apple.StorageSettings.AppMayUninstall
com.apple.appstored.AppInstallObserver
com.apple.appstored.AppInstallObserver.policyQueue
com.apple.appstored.installcoordination
B16@?0@"NSError"8
com.apple.frontboard.app-library
SINF Mismatch Error
Installation details:
Error: %@
Store DSID: %@
Store Item ID: %@
Store Version ID: %@
Bundle ID: %@
Installed Version ID: %@
Installed Variant ID: %@
PackageType: %@
PackageBlocked: %@
PackageVariant: %@
PackageURL: %@
SINF: %@
DPInfo: %@
v16@?0@"AppInstallPolicy"8
HYDRATE_NO_NETWORK_TITLE_%@
HYDRATE_NO_NETWORK_MESSAGE
HYDRATE_NO_NETWORK_BUTTON_OK
com.apple.appstored.PowerMonitor
com.apple.system.powermanagement.poweradapter
powerPlugggedIn
TB,R,GisPowerPluggedIn,V_powerPlugggedIn
batterySaverEnabled
TB,R,GisBatterySaverEnabled,V_batterySaverEnabled
PowerStateDidChangeNotification
DELETE FROM iap_info_iaps WHERE dsid = ? AND adam_id IN (%@);
DELETE FROM iap_info_iaps;
DELETE FROM iap_info_iaps WHERE dsid = ?;
INSERT OR REPLACE INTO iap_info_db_properties (value, key) VALUES (?, ?);
com.apple.itunesstored.UpdateMigrator
v16@?0@"UpdateMigratorConfiguration"8
[%@]: Migrating from build: %@ to build: %@
com.apple.appstored.XPCRequestToken.%@.%@
[%@]
T@"NSUUID",R,V_externalID
notificationClient
T@"<XPCNotificationClient>",R,V_notificationClient
processInfo
T@"AMSProcessInfo",R,V_processInfo
v32@?0@"lib_IXAppInstallCoordinatorTag"8@"NSError"16^B24
Complete coordinators called
lib_constantValues
lib_keyPath
signIn
cancel
PROMPT_FOR_ACCOUNT_SIGN_IN_PURCHASE
PROMPT_FOR_ACCOUNT_SIGN_IN_WITH_APPLE_ID_%@
PROMPT_FOR_ACCOUNT_SIGN_IN
No client available to handle authentication request
An unknown error occurred
CANCEL
PROMPT_FOR_ACCOUNT_APPLE_ID
PROMPT_FOR_ACCOUNT_PASSWORD
User canceled authentication
authenticateResult
T@"AMSAuthenticateResult",R,V_authenticateResult
usernameEditable
TB,V_usernameEditable
DATETIME
JSON
UUID
numberOfColumns
com.apple.arcadeoperations
accountDSID
attemptCount
appVersion
T@"ASDBetaAppVersion",R,N
T@"ASDBetaAppFeedback",&,N
nextRetryDate
T@"NSDate",&,N
pendingImageUploads
T@"NSArray",&,N
TQ,N
successfulImageUploads
app_install_remote
destination_id
external_id
Restore metadata re-lookup for accounts
nonOrderedRestoreInstallForAccounts
T@"NSMutableDictionary",R,V_nonOrderedRestoreInstallForAccounts
orderedRestoreInstallForAccounts
T@"NSMutableDictionary",R,V_orderedRestoreInstallForAccounts
nonOrderedLookupCount
Tq,V_nonOrderedLookupCount
orderedLoookupCount
Tq,V_orderedLoookupCount
TB,R,V_userInitiated
app_sessionreporter_key
clientEventId
clusters
collectionTime
cumulativeUserCount
dsId
duration
eventType
crashes
launches
uninstalls
playActivity
qualifyingActivity
foregroundDuration
hardwareFamily
hardwareModel
installationType
Retail
TestFlight
installType
autodownload
prior
redownload
restore
osBuildNumber
platform
qualificationDuration
rangeStartTime
rangeEndTime
shortAppVersion
usageClientId
weekStartDate
tempUserId
T@"NSString",C,N,V_tempUserId
tempDeviceIdentifer
T@"NSString",C,N,V_tempDeviceIdentifer
appEventType
TC,N,V_appEventType
appSessionReporterKey
T@"NSString",C,N,V_appSessionReporterKey
Tq,N,V_appUsageType
clientEventID
T@"NSString",C,N,V_clientEventID
T@"NSArray",C,N,V_clusters
T@"NSString",C,N,V_cohort
T@"NSNumber",C,N,V_collectionTime
Tq,N,V_cumulativeUserCount
Tq,N,V_duration
T@"NSNumber",C,N,V_evid
eventTimeOverride
T@"NSNumber",C,N,V_eventTimeOverride
T@"NSArray",C,N,V_foregroundEvents
T@"NSString",C,N,V_hardwareFamily
T@"NSString",C,N,V_hardwareModel
hasBeenPosted
TB,N,V_hasBeenPosted
TC,N,V_installationType
TC,N,V_installType
T@"NSString",C,N,V_itemName
ocelotDeviceID
T@"NSString",C,N,V_ocelotDeviceID
ocelotID
T@"NSString",C,N,V_ocelotID
ocelotSubscriptionState
T@"NSString",C,N,V_ocelotSubscriptionState
T@"NSString",C,N,V_OS
osBuild
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_platform
T@"NSNumber",C,N,V_startTime
T@"NSNumber",C,N,V_storefront
timeRangeEnd
Tq,N,V_timeRangeEnd
timeRangeStart
Tq,N,V_timeRangeStart
usageTime
Tq,N,V_usageTime
usageCount
Tq,N,V_usageCount
qualifiedDuration
Tq,N,V_qualifiedDuration
T@"NSString",C,N,V_weekStartDate
-[XDCLaunchAppRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.7.15/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCLaunchAppRequest.m
nil != self->_bundleID
T@"NSString",&,N,V_bundleID
com.apple.appstored.RequestBrokerClient.%@
T@"NSXPCConnection",W,V_connection
requests
T@"NSMutableArray",&,V_requests
taskQueue
T@"TaskQueue",R,N,V_taskQueue
JOB_ERROR_DOES_NOT_OWN_APP_BODY
JOB_ERROR_DOES_NOT_OWN_APPS_BODY
JOB_ERROR_DOES_NOT_OWN_APPS_BODY_PLURAL
JOB_ERROR_DOES_NOT_OWN_TITLE
JOB_ERROR_GET_APP
JOB_ERROR_ENTER_PASSWORD
itms-apps://?action=lookup&ids=%@
additionalApps
T@"NSArray",C,N,V_additionalApps
appBundleID
T@"NSString",C,N,V_appBundleID
appTitle
T@"NSString",C,N,V_appTitle
placeholderArtwork
Artwork request timed out
artworkTemplatePromise
T@"ASDCreatePlaceholdersRequestOptions",R,D,N
completedPlaceholders
T@"NSArray",C,N,V_completedPlaceholders
VPP/%@
Migrating VPP SINF
Migrating VPP SINF completed
sideLoadedDeviceBasedVPP
com.apple.appstored.AppInstallQueue
Unexpected active phase `%@`
AppInstallExternalID
fractionCompleted
endTime
Td,R,V_endTime
Td,R,V_startTime
currentStatus
PRAGMA table_info(%@);
PRAGMA user_version;
SELECT name FROM sqlite_master where name = '%@'
PRAGMA user_version = %lld;
currentUserVersion
com.apple.itunes.store.in-app-subscription-family-id
daap.databasesongs
dmap.status
dmap.updatetype
dmap.specifiedtotalcount
dmap.returnedcount
dmap.serverrevision
dmap.listing
dmap.listingitem
dmap.itemkind
com.apple.itunes.adam-id
daap.songdatemodified
com.apple.itunes.cloud-purchased-token
com.apple.itunes.store.in-app-purchase-type
com.apple.itunes.store.in-app-purchase-expiration-date
com.apple.itunes.store.app-adam-id
dmap.longitemid
com.apple.itunes.store.in-app-used-offers
com.apple.itunes.store.in-app-auto-renew-status
CREATE TABLE IF NOT EXISTS beta_app_info (pid INTEGER PRIMARY KEY, bundle_id TEXT, bundle_version TEXT, bundle_short_version TEXT, email TEXT, expiration_date DATETIME,feedback_enabled INTEGER, has_shared_screenshot_feedback INTEGER, icon_url_template TEXT, last_seen_date DATETIME, launch_screen_enabled INTEGER, localized_display_names JSON, primary_locale TEXT, seen_count INTEGER, what_to_test JSON);
CREATE TABLE IF NOT EXISTS beta_app_feedback (pid INTEGER PRIMARY KEY, account_dsid INTEGER NOT NULL, attempt_count INTEGER DEFAULT 0, app_version BLOB, feedback BLOB, log_key TEXT, next_retry_date DATETIME, pending_image_uploads BLOB, state INTEGER, successful_image_uploads BLOB, item_id INTEGER DEFAULT 0);
testflight_feedback
localhost
lib_appExtVrsId
T@"NSString",&,Slib_setAppExtVrsId:
STDRDL
SWUPD
databases/%ld/update
systemgroup.com.apple.ondemandresources
.outstandingwork
Database/odr.sqlite
AssetPacks
T@"NSString",&,N,V_libraryPath
databasePath
T@"NSString",&,N,V_databasePath
legacyDatabasePath
T@"NSString",&,N,V_legacyDatabasePath
assetPacksPath
T@"NSString",&,N,V_assetPacksPath
isDeviceInEduMode
T@"ASDPurchaseHistoryApp",&,N,V_app
show
TB,N,V_show
T@"NSArray",R,V_items
com.apple.stocks
Invalid segment
errorNumber
errorMessage
Unknown server error
entitlements
allowPromptForAuth
TB,V_allowPromptForAuth
TQ,V_segment
allApps
T@"NSArray",R,N,V_allApps
dmap.deletedidlisting
com.apple.itunes.item-flavor-listing
com.apple.itunes.bundle-identifier
com.apple.itunes.store.software-content-rating
daap.songdatepurchased
daap.songartist
com.apple.itunes.store.family-shareable
com.apple.itunes.store.first-party-updatable
com.apple.itunes.store.has-messages-extension
dmap.itemhidden
com.apple.itunes.store.is-hidden-from-springboard
com.apple.itunes.cloud-artwork-template-url
com.apple.itunes.store.software-is-32-bit-only
com.apple.itunes.store.is-preorder
com.apple.itunes.long-item-name
com.apple.itunes.store.oval-artwork-url
com.apple.itunes.store.preflight-url
com.apple.itunes.store.product-url
com.apple.itunes.item-redownload-param-2
com.apple.itunes.store.app-required-capabilities-listing
com.apple.itunes.store.app-required-capabilities
com.apple.itunes.itms-songid
com.apple.itunes.supported-products
com.apple.itunes.itms-genreid
daap.songgenre
com.apple.itunes.store.watch-app-delivered-in-ios-app
com.apple.itunes.store.watch-app-runs-independently
com.apple.itunes.store.watch-app-watch-only
com.apple.itunes.cloud-artwork-supports-layered-image
com.apple.itunes.cloud-artwork-has-p3
dmap.itemname
com.apple.itunes.circular-artwork-template-url
com.apple.odr.appreview
App Review
B32@?0@8Q16^B24
v32@?0@"<NSFastEnumeration>"8Q16^B24
v32@?0@8Q16^B24
?&%+=;
%@=%@
&%@=%@
TargetDate
PostIntervalOverrideSeconds
RestoreItemKinds
RestoreStoreFrontIDs
RestoreAccountIDs
automaticDownloadKinds
AdPlatformsStatusConditionSetDate
AppUsageMigratedDB
CrossfireIntervalStartDate
CrossfireLaunchesIntervalStartDate
CrossfireNextPostTargetDate
CrossfirePostIntervalOverride
CrossfirePostMetricsSamplingPercentageOverride
DiagnosticClockEnabled
DiagnosticClockOffset
AppUsageActorID
AppClusterMappingRefreshIntervalOverride
AppClusterMappingRefreshTargetDate
TasteProfileEnabled
AppUsageDailyPostCountOverride
AppUsageEnableMetricsForActorIDSession
AppUsageFlushIntervalOverride
AppUsageFlushTargetDate
AppUsageIntervalStartDate
AppUsageLaunchesIntervalStartDate
AppUsageNextPostTargetDate
AppUsagePostMetricsSamplingPercentageOverride
AppUsageResetActorIDOverride
AppUsageResetActorIDTargetDate
AppUsageTaskGracePeriodOverride
AppUsageUseTestTopic
BadgeCount
MarketingDemoMode
EmulateCellularNetwork
EmulateConstrainedNetwork
EmulateRoamingNetwork
OffloadBlacklist
OffloadCutoffDateOverride
OffloadRecentInstallCutoffDate
OffloadPluginBlacklist
OffloadUnusedApps
OffloadingGracePeriodStartDate
BeagleApps
AnalyticsClientIDOverride
ArcadeRepairTimeout
ArcadeDefaultApp
ArcadeDeviceGUID
ArcadeDeviceID
ArcadeDeviceIDCreationDate
ArcadePayoutDeviceID
ArcadeSummaryIntervalStartDate
ArcadeSummaryLaunchesIntervalStartDate
ArcadePayoutLaunchesIntervalStartDate
ArcadePayoutIntervalStartDate
ArcadePayoutResetDate
ArcadeShouldRetryOptOut
ArcadeSubscriptionState
UseArcadeSwitchUser
OncePerBoot
PowerPluggedInOverride
RepairForceSbsync
AttemptedPreflightAccounts
FollowUpAccounts
RestoreSuppressTermsAndConditions
com.apple.itunesstored
PerformedPostRestoreUpdate
RestoreSoftFailureRetryDate
ManageSubsOnDeleteBlacklist
UpdateCleanupTime
LastUpdatesCheck
LastAutoUpdateCompletion
PreviouslyInstalledProvisionedApps
LastUpdatesPerform
AutoUpdatesEnabled
UseFollowupsForRestoreFailures
AllowAutoDownloadOnCellular
AutomationRunning
EnableBatterySaverOnStartup
CellularSizeLimitOverride
AppClaimHistory
UpdateMigratorConfiguration
DaemonCommsSemaphore
JobApprovalDate
DisablePowerOnStartup
ExternalManifestSkipHTTPSCheck
InvalidBuildToolVersions
DownloadsScratchGarbageCollectionTime
JobCleanupTime
LastOSInstallDate
LastOSBuildVersion
MaxConcurrentJobCount
MaxConcurrentThermalLimitedJobCount
TransporterConfiguration
TestFlightFeedbackOverrides
ThermalCheckEnabled
UseAppInstallQueue
UseLaunchCountsForAppUsage
UseModernFreeSpaceCheck
lastArcadeStatusConditionSetDate
T@"NSDate",&
appUsageUseTestTopic
appUsageDBMigrated
emulateCellularNetwork
emulateConstrainedNetwork
emulateRoamingNetwork
crossfireIntervalStartDate
crossfireLaunchesIntervalStartDate
crossfireNextPostTargetDate
crossfirePostIntervalSecondsOverride
crossfirePostMetricsSamplingPercentageOverride
diagnosticClockEnabled
diagnosticClockOffset
appClusterMappingRefreshIntervalOverride
appClusterMappingRefreshTargetDate
appTasteProfileEnabled
appUsageActorID
appUsageFlushDnuIntervalOverride
appUsageFlushDnuTargetDate
appUsageIntervalStartDate
appUsageLaunchesIntervalStartDate
appUsageNextPostTargetDate
appUsageDailyPostCountOverride
appUsageEnableMetricsForActorIDSession
appUsagePostMetricsSamplingPercentageOverride
appUsageResetActorIDOverride
appUsageResetActorIDTargetDate
appUsageTaskGracePeriodOverride
arcadeRepairTimeout
ocelotAppAnalyticsClientID
ocelotApps
T@"NSArray",&
ocelotDefaultApp
ocelotDeviceGUID
ocelotDeviceIDCreationDate
ocelotPayoutDeviceID
ocelotPayoutResetDate
ocelotSummaryIntervalStartDate
ocelotSummaryLaunchesIntervalStartDate
ocelotPayoutLaunchesIntervalStartDate
ocelotPayoutIntervalStartDate
ocelotShouldRetrySlotOptOut
useArcadeSwitchUser
appPurgeCutoffDate
appPurgeRecentInstallCutoffDate
offloadingAppsEnabled
offloadingGracePeriodStartDate
oncePerBootItems
powerPluggedInOverride
forceSbsyncForArcadeRepairs
attemptedPreflightAccountIDs
followUpAccounts
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreSoftFailureRetryDate
useFollowUpsForRestoreFailures
shouldSuppressTermsAndConditionsDialogs
manageSubsOnDeleteBlacklist
lastAutoUpdateCompletionDate
lastUpdateCleanupDate
lastUpdateCheckDate
previouslyInstalledProvisionedApps
shouldPerformAutomaticUpdates
forceDrmMode
invalidBuildToolVersions
Unnamed watchdog
Watchdog expired
altDSID
externalIDString
redownloadParams
artworkURLString
containsMessagesExtension
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeFront
provisioningProfile
skipIfInstalled
isSystemApp
isStoreApp
manifestURLString
hasType
Ti,N,V_type
hasAltDSID
T@"NSString",&,N,V_altDSID
hasAppleID
T@"NSString",&,N,V_appleID
hasBundleID
hasDownloaderID
TQ,N,V_downloaderID
hasExternalIDString
T@"NSString",&,N,V_externalIDString
hasExternalVersionID
TQ,N,V_externalVersionID
hasItemID
TQ,N,V_itemID
hasPurchaserID
TQ,N,V_purchaserID
hasRedownloadParams
T@"NSString",&,N,V_redownloadParams
hasArtworkURLString
T@"NSString",&,N,V_artworkURLString
hasContainsMessagesExtension
TB,N,V_containsMessagesExtension
hasItemName
T@"NSString",&,N,V_itemName
hasLaunchProhibited
TB,N,V_launchProhibited
hasMessagesArtworkURLString
T@"NSString",&,N,V_messagesArtworkURLString
hasPackageDPInfo
T@"NSData",&,N,V_packageDPInfo
hasPackageSINF
T@"NSData",&,N,V_packageSINF
hasPackageURLString
T@"NSString",&,N,V_packageURLString
hasStoreCohort
T@"NSString",&,N,V_storeCohort
hasStoreFront
T@"NSString",&,N,V_storeFront
hasVendorName
T@"NSString",&,N,V_vendorName
provisioningProfiles
T@"NSMutableArray",&,N,V_provisioningProfiles
hasVariantID
T@"NSString",&,N,V_variantID
hasSkipIfInstalled
TB,N,V_skipIfInstalled
hasIsBeta
TB,N,V_isBeta
hasIsSystemApp
TB,N,V_isSystemApp
hasIsStoreApp
TB,N,V_isStoreApp
hasBundleVersion
hasManifestURLString
T@"NSString",&,N,V_manifestURLString
hasSuppressDialogs
TB,N,V_suppressDialogs
%@/%ld
lib_sanitizedDescription
lib_shortDescription
lib_serverDialogID
dialogID
app_cluster_mappings
cluster_id
cluster_version
launches_weight
usage_weight
existingSinf
existingReceipt
T@"ODRManifest",&,N,V_manifest
app-receipt
artworkURL
artwork-urls
is-auto-download
is-purchased-redownload
messagesIconUrl
softwareVersionBundleId
bundleShortVersionString
softwareVersionExternalIdentifier
gameCenterEnabled
gameCenterEverEnabled
genre
genreId
appleWatchEnabled
WKRunsIndependentlyOfCompanionApp
WKWatchOnly
iad-attribution
iad-conversion-date
iad-impression-date
is32BitOnly
nameTranscriptions
rating
rank
subgenres
preflightPackageURL
purchaseDate
redownload-params
thinned-app
%@: {bundleID = %@; itemID = %@; itemName = %@; EVID = %@}
%@.%@.%@
appReceiptData
T@"NSData",R,V_appReceiptData
T@"NSString",R,V_artistName
T@"NSString",R,V_artworkURL
assetDeltaPackage
T@"StoreAsset",R,V_assetDeltaPackage
assetFullPackage
T@"StoreAsset",R,V_assetFullPackage
automatic
TB,R,GisAutomatic,V_automatic
T@"NSNumber",R,V_betaExternalVersionID
T@"NSString",R,V_bundleShortVersion
T@"NSString",R,V_bundleVersion
cancelDownloadURL
T@"NSString",R,V_cancelDownloadURL
capabilities
T@"NSDictionary",R,V_capabilities
T@"NSNumber",R,V_evid
TB,R,V_gameCenterEnabled
TB,R,V_gameCenterEverEnabled
T@"NSString",R,V_genre
genreID
T@"NSNumber",R,V_genreID
TB,R,V_hasMessagesExtension
hasWatchApp
TB,R,V_hasWatchApp
hasWatchIndependentApp
TB,R,V_hasWatchIndependentApp
hasWatchOnlyApp
TB,R,V_hasWatchOnlyApp
iAdAttribution
T@"NSNumber",R,V_iAdAttribution
iAdConversionString
T@"NSString",R,V_iAdConversionString
iAdImpressionString
T@"NSString",R,V_iAdImpressionString
T@"NSNumber",R,V_itemID
T@"NSString",R,V_itemName
T@"NSString",R,V_kind
TB,R,V_launchProhibited
messagesArtworkURL
T@"NSString",R,V_messagesArtworkURL
T@"NSURL",R,V_preflightPackageURL
T@"NSString",R,V_purchaseDate
purchasedRedownload
TB,R,GisPurchasedRedownload,V_purchasedRedownload
T@"NSString",R,V_redownloadParams
T@"NSString",R,V_releaseDate
ratingLabel
T@"NSString",R,V_ratingLabel
ratingRank
T@"NSNumber",R,V_ratingRank
T@"NSString",R,V_storefront
storeTransactionID
T@"NSString",R,V_storeTransactionID
T@"NSString",R,V_storeCohort
subGenres
T@"NSArray",R,V_subGenres
supports32BitOnly
TB,R,V_supports32BitOnly
T@"TimeWindow",R,V_optimalDownloadWindow
T@"NSDictionary",R,V_nameTranscriptions
yyyy-MM-dd'T'HH:mm:ss'Z'
iAdConversionDate
iAdImpressionDate
Creating an install coordinator
Coordination creation failed
Coordination creation succeeded
T@"NSString",R,C,N,V_bundleID
coordinatorType
TQ,R,N,V_coordinatorType
createAsMobileBackup
TB,N,V_createAsMobileBackup
shouldCreate
TB,N,V_shouldCreate
completeODRPromises
TB,N,V_completeODRPromises
enforceImportance
TB,N,V_enforceImportance
importance
TQ,N,V_importance
T@,R,N,V_coordinator
wasCreated
TB,R,N,V_wasCreated
{ bundleID: %@ itemID: %@ }
storefrontID
T@"NSNumber",R,V_downloaderDSID
T@"NSNumber",R,V_storeExternalVersionID
T@"NSNumber",R,V_storeItemID
T@"NSNumber",R,V_storefrontID
failed-items
customerMessage
item-id
device-name
store-front-id
software-external-version-identifier
serial-number
failedItems
T@"NSDictionary",R,V_failedItems
v32@?0@"NSString"8@"NSString"16^B24
assetpack
renew-vpp-receipt
app-receipt-create
T@"NSString",C,N,V_bundleIdentifier
authenticationPromptStyle
Tq,N,V_authenticationPromptStyle
needsAuthentication
TB,N,V_needsAuthentication
performSinfMirartionCheckBeforeFailing
TB,N,V_performSinfMirartionCheckBeforeFailing
URLBagKey
skipAttribution
TB,N,V_skipAttribution
targetAccountID
T@"NSNumber",C,N,V_targetAccountID
   - %@
   - <no transactions>
Tq,V_action
ignoreAssetCache
TB,V_ignoreAssetCache
T@"NSProgress",&,V_progress
promise
T@"AssetPromise",W,V_promise
properties
T@"AssetRequestProperties",&,V_properties
T@"NSURLRequest",&,V_request
requestOffset
TQ,V_requestOffset
session
T@"NSURLSession",W,V_session
signpostId
TQ,V_signpostId
task
T@"NSURLSessionTask",R,V_task
CREATE TABLE IF NOT EXISTS game_session (pid INTEGER PRIMARY KEY, bundle_id TEXT, bundle_version TEXT, begin_date DATETIME,dsid INTEGER, end_date DATETIME,evid INTEGER, item_id INTEGER, last_heartbeat_date DATETIME,session_end_reason INTEGER, session_identifier TEXT, short_version TEXT, UNIQUE (bundle_id, session_identifier) ON CONFLICT REPLACE);
inGameAnalytics.db
in_game_analytics
DROP TABLE game_session
fsEntitlements
com.apple.appstored.DeviceStateMonitor
appstored.run-once
dataMigrationComplete
TB,R,GisDataMigrationComplete,V_dataMigrationComplete
fsEntitlementsCompleteForBoot
TB,R,GisFsEntitlementsCompleteForBoot
deviceLocked
TB,R,GisDeviceLocked,V_deviceLocked
screenLocked
TB,R,GisScreenLocked,V_screenLocked
setupComplete
TB,R,GisSetupComplete,V_setupComplete
DeviceStateDidChangeNotification
com.apple.appstored.DataPromiseDataConsumer
Promise data consumer creation failed
No processor was set when consuming data
No processor was set when finishing
No data promise was set when preparing
No processor was set when preparing
No processor was set when resetting
No processor was set when suspending
<%@: %p> { %@ }
com.apple.appstored.DataPromiseDataConsumer.delegate
No data promise found to create stream adapter
Received unexpected promise type `%@`
Hash verification requested but no digests provided
T@"<CoordinatorPromiseDataConsumerDelegate>",W
T@"NSString",&,V_bundleID
gizmoPairingID
T@"NSUUID",&,V_gizmoPairingID
intent
TQ,V_intent
Tq,V_priority
Unable to purchase discretionary item with no account
Unable to authenticate for purchase with dsID but no username
Tq,R,V_accountID
requestingAccount
T@"ACAccount",R,V_requestingAccount
knownApps
T@"NSArray",R,V_knownApps
purchaseHistoryContext
TQ,R,V_purchaseHistoryContext
v24@?0@"ACAccount"8@"NSArray"16
@"<NSCopying>"16@?0@"<UpdatableApp>"8
background 
%08X
%@: count %lu exceeds available length: %lu
lib_legacyJobID
lib_logUUID
lib_signpostId
Device Security
com.apple.appstored.activities.DeviceSecurity
com.apple.appstored.RepairService
com.apple.appstored.XPCServiceBroker
asclient
com.apple.appstored.JobManagerClient
com.apple.AppStoreDaemon.PurchaseService
adoptionInterface
T@"<AdoptionManagerInterface>",&,V_adoptionInterface
legacyPurchaseInterface
T@"<PurchaseManagerInterface>",&,V_legacyPurchaseInterface
purchaseInterface
T@"<PurchaseManagerInterface>",&,V_purchaseInterface
Coordinator identifier was unset
Coordinator was not found, could not determine application state
installResponse
T@"AppInstallInstallResponse",R,V_installResponse
com.apple.appstored.CacheDelete
/private/var
com.apple.appstored.CacheDeleteCoordinator.dispatch
com.apple.appstored.CacheDeleteCoordinator.freeSpace
com.apple.appstored.CacheDeleteCoordinator.run
^{__CFDictionary=}20@?0i8^{__CFDictionary=}12
CACHE_DELETE_ERROR
Purgeable space unavailable: %llu bytes needed, %llu bytes available
Insufficient free space
Not enough space purgeable space available: %llu bytes needed, %llu bytes available, %llu bytes purgeable
CACHE_DELETE_PURGE_TIMEOUT
Not enough space purgeable space freed: %llu bytes needed, %llu bytes available, %llu bytes purged
v16@?0^{__CFDictionary=}8
Purge
Purgeable Request
Update Push
CACHE_DELETE_ID
com.apple.CacheDeleteCoordinator.refresh
scheduledTimer
T@"NSObject<OS_dispatch_source>",&,V_scheduledTimer
appPurgeCoordinator
T@"<CacheDeletePurgeableProvider>",R,N,V_appPurgeCoordinator
odrPurgeCoordinator
T@"<CacheDeletePurgeableProvider>",W,N,V_odrPurgeCoordinator
circle
Family Info Lookup Failed
Unable load the family circle if there's no active account.
We failed to load the family info for the active account.
@"FamilyInfoLookupResult"16@?0^@8
family-info
We were unable to get the family cricle URL.
T@"<AMSBagProtocol>",&,N,V_bag
T@"NSString",&,N,V_logKey
Ti,N,V_status
auto-download
auto-update
in-app-purchase
manual-update
on-demand-resource
yyyy-MM-dd
lib_rfc3339String
CREATE TEMPORARY TABLE 
 AS 
v32@?0@"NSString"8Q16^B24
queryDescriptor
T@"SQLiteQueryDescriptor",R
countOfEntities
SELECT 
DISTINCT 
 FROM %@
 WHERE 
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
memoryEntityClass
T#,N,V_memoryEntityClass
limitCount
Tq,N,V_limitCount
orderingClause
T@"NSString",C,N,V_orderingClause
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"SQLitePredicate",C,N,V_predicate
COUNT
%@(%@)
Keychain failed to return value (error %d): %@
Keychain failed to return value (error %d)
v24@?0^v8Q16
App Store User Data Encryption
SecItemCopyMatching succeeded with empty results
%@.%@
com.apple.appstored.encryption
appleWatch
posixTimestampMillis
hasFeedback
T@"TFFeedback",&,N,V_feedback
hasApplication
T@"TFApplication",&,N,V_application
hasDevice
T@"TFDevice",&,N,V_device
hasAppleWatch
T@"TFAppleWatch",&,N,V_appleWatch
hasPosixTimestampMillis
TQ,N,V_posixTimestampMillis
app_installs
Install complete
Updates complete
duAnonymousPings
cancel-purchase-batch
dsPersonId
songList
page-type
preorder-success
optimalDownloadPeriod
durationInMinutes
appClusterAssignmentsResultSet
clusterVersionId
appsClusterAssignments
clusterAssignments
clusterId
launchCountWeight
usageDurationWeight
trigger-download
@"NSURL"16@?0@"NSString"8
T@"NSNumber",R,V_accountID
anonymousPings
T@"NSArray",R,V_anonymousPings
clusterMappings
T@"NSArray",R,V_clusterMappings
T@"NSData",R,V_keybag
T@"NSDictionary",R,V_metrics
isPreorder
TB,R,V_isPreorder
rangesToLoad
T@"NSArray",R,V_rangesToLoad
shouldCancelPurchaseBatch
TB,V_shouldCancelPurchaseBatch
triggeredQueueCheck
TB,V_triggeredQueueCheck
T@"NSString",V_clientID
TB,GisAutomatic,V_automatic
bytes
TQ,V_bytes
T@"NSString",&,V_name
remaining
TB,GisRemaining,V_remaining
TB,GisUpdate,V_update
bvrs
Claim/%@
CLAIM_AUTHENTICATION_MESSAGE_NO_ACCOUNT
No active account to claim apps with
CLAIM_AUTHENTICATION_TITLE
CLAIM_AUTHENTICATION_MESSAGE_FORMAT_%@
CLAIM_AUTHENTICATION_CANCEL_BUTTON
CLAIM_AUTHENTICATION_SIGN_IN_BUTTON
Need to present authentication request
User declined request to authenticate
claim-type
udid
bundle-ids
claim-item-ids
download-item-ids
Need to present server dialog
establishesActiveAccount
TB,N,V_establishesActiveAccount
ignoresPreviousClaimAttempts
TB,N,V_ignoresPreviousClaimAttempts
screenshots
comment
incidentId
hasEmail
T@"NSString",&,N,V_email
T@"NSMutableArray",&,N,V_screenshots
hasComment
T@"NSString",&,N,V_comment
hasIncidentId
T@"NSString",&,N,V_incidentId
SELECT value FROM purchase_history_db_properties WHERE key = ?
ServerRevisionPropertyKey
LastUpdatedTimestampPropertyKey
com.apple.appstored.SQLiteDatabase
schema_version
_SQLiteDispatchQueueTag
v32@?0@"AppPackage"8Q16^B24
TB,R,GisAutomatic
packages
T@"NSArray",C,V_packages
installPolicy
T@"AppInstallPolicy",C
property
T@"NSString",R,N,V_property
%@ %@ ?
 LIKE 
comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
query
T@"SQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
values
T@"NSArray",R,N,V_values
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
 AND 
 OR 
predicates
T@"NSArray",R,N,V_predicates
knownContentHashes
Bundle Key: %@ Bundle ID: %@
T@"NSNumber",R,N
T@"NSNumber",C,N
downloadRequestUUIDs
T@"NSArray",C,N
effectiveAlwaysPreserve
T@"NSURL",&,N
Tq,N
purgeReason
T@"NSNumber",R,N,GisStreamable
T@"NSURL",C,N
{ bundleID: %@ clusterID: %@ clusterVersion: %@ itemID: %@ launches weight: %@ usage weight: %@}
clusterID
T@"NSNumber",C,N,V_clusterID
clusterVersion
T@"NSNumber",C,N,V_clusterVersion
metrics.dialogId
Unknown error processing purchase response
@16@?0@"PurchaseInfo"8
B32@?0@"AppInstall"8Q16^B24
Encountered invalid installation which was not really running
activeInstallsCount
TQ,V_activeInstallsCount
startedInstalls
T@"NSArray",&,V_startedInstalls
@16@?0@"NSDictionary"8
T@"NSArray",R
com.apple.odr.diagnostics
Diagnostics
com.apple.appstored.PersonalizationManager.token
Shared Analytics not Enabled
External Request
DELETE FROM app_events_personalization where is_temporary = 1;
com.apple.appstored.appusage_dnu
Past Reset Date
DELETE FROM app_cluster_mappings;
v24@?0@"NSNumber"8@"NSError"16
Switch Status Changed
Switch Status Change
com.apple.appstored.RecordDnu
com.apple.appstored.PostDnu
Post Skipped for actorID Session
DELETE FROM app_events_personalization;
DELETE FROM current_apps_personalization;
appCount
Tq,N,V_appCount
weightedAppLaunches
Ti,N,V_weightedAppLaunches
weightedForgroundUsage
Ti,N,V_weightedForgroundUsage
com.apple.appstored.PersonalizationManager.callout
com.apple.appstored.PersonalizationManager.dispatch
com.apple.appstored.InGameAnalyticsManager
com.apple.appstored.InGameAnalyticsManager.callout
com.apple.appstored.InGameAnalyticsManager.dispatch
B16@?0@"InGameAnalyticsDatabaseTransaction"8
v16@?0@"InGameAnalyticsDatabaseSession"8
????????
T@"NSUUID",C,N,V_externalID
T@"NSString",C,N,V_logCode
stringValue
com.apple.appstored.ASDAppleIDDidChangeNotification
com.apple.ReportCrash.beta.bulletin
v20@?0B8@"NSArray"12
com.apple.LaunchServicesObserver.AppleIDDidChange.ValidateAppleIDs
incidentID
LSApplicationProxiesList
SP_%@
SAVEPOINT %@
RELEASE SAVEPOINT %@
ROLLBACK TRANSACTION TO SAVEPOINT %@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
BEGIN DEFERRED TRANSACTION
currentError
T@"NSError",R,C,N
T@"SQLiteConnectionOptions",R,C,N,V_options
T@"<SQLiteConnectionDelegate>",W,N,V_delegate
lastChangeCount
Statement from a different connection
Canceled
Failed
Finished
Paused
Policy
Postamble
Preamble
Started
Waiting
Unknown (%ld)
Canceled by user request
Jettisoned to make room for higher priority installation
Paused by user request
Paused until install policy is fulfilled
Jettisoned due to elevated thermal pressure
none (0)
device security
bootstrapped installations
daemon start
finished installations
hydrate job
imported installations
non ordered restores completed
optimal download window reached
ordered restores completed
paused installations
diagnostics ping
prioritized
purchased
phase reset
resumed installations
unknown (%lu)
@16@?0@"ASDAppReviewAppMetadata"8
requestIdentifier
T@"NSString",C,N,V_requestIdentifier
storeItemID == %@
appStoreEntitlements
newsEntitlements
hasBeenAuthedForBuy
No transactions in response
No client available to handle dialog request
T@"StoreKitClient",R,C,N,V_client
productIdentifier
T@"NSString",R,N,V_productIdentifier
quantity
TQ,R,N,V_quantity
T@"NSString",&,N,V_applicationUsername
discountIdentifier
T@"NSString",&,N,V_discountIdentifier
discountKeyIdentifier
T@"NSString",&,N,V_discountKeyIdentifier
discountNonceString
T@"NSString",&,N,V_discountNonceString
discountSignature
T@"NSString",&,N,V_discountSignature
discountTimestamp
T@"NSNumber",&,N,V_discountTimestamp
requestData
T@"NSData",&,N,V_requestData
excludeReceiptFromRequest
TB,N,V_excludeReceiptFromRequest
hideConfirmation
TB,N,V_hideConfirmation
transaction
T@"NSDictionary",&,N,V_transaction
summary
com.apple.AppStoreFoundation.TransactionStore
Transactions
activeTransactions
T@"NSCountedSet",R,C
transactionCount
self isKindOfClass: %@
odrEntitlementName
odrServiceName
This request is not yet implemeneted
purchase_history_apps
content_rating_flags
circular_icon_url
date_purchased
developer_name
family_shared
first_party
hidden
hidden_from_springboard
is_32_bit_only
is_preorder
long_title
oval_icon_url_template
preflight_package_url
product_url
purchaser_dsid
redownload_params
required_capabilities
supports_ipad
supports_iphone
purchase_token
locker_item_id
genre_id
genre_name
watch_app_delivered_in_ios_app
watch_app_runs_independently
watch_app_watch_only
supports_layered_image
has_p3
T@"NSDictionary",R,V_dictionary
optionFlags
TQ,V_optionFlags
activeClusterVersions
mappings
T@"NSArray",R,N,V_clusterMappings
resources
T@"NSDate",R,N
localCache
TB,R,N,GisLocalCache
source
storageID
TB,R,N,GisStoreBased
StoreKitService access queue
Production
v28@?0@"NSString"8B16@"NSError"20
countryCode
addedIAPs
T@"NSArray",R,V_addedIAPs
removedIAPs
T@"NSArray",R,V_removedIAPs
TB,R,GisUpdate,V_update
ODRPreallocatedFileException
Failed to create preallocation file with error %d.
Failed to preallocate file.
T@"NSString",R,V_path
fileDescriptor
Ti,R,V_fileDescriptor
No job found with bundle ID: %@
T@"NSString",C,N,V_installedVariantID
T@"NSNumber",C,N,V_installedVersionID
T@"TimeWindow",C,N,V_optimalDownloadWindow
chunkDigests
T@"NSArray",C,N,V_chunkDigests
TI,N,V_chunkSize
chunkType
Tq,N,V_chunkType
askToBuy
firstName
ICloudDsid
ITunesPreferredDsid
ITunesPreferredAccountName
lastName
sharingPurchases
iCloudDSID
iCloudUsername
isCurrentSignedInUser
false
iTunesDSID
iTunesUsername
isAskToBuyEnabled
isSharingPurchases
currentSignedInUser
TB,N,GisCurrentSignedInUser,V_currentSignedInUser
askToBuyEnabled
TB,R,N,GisAskToBuyEnabled,V_askToBuyEnabled
T@"NSString",R,N,V_firstName
T@"NSNumber",R,N,V_iCloudDSID
T@"NSString",R,N,V_iCloudUsername
T@"NSNumber",R,N,V_iTunesDSID
T@"NSString",R,N,V_iTunesUsername
T@"NSString",R,N,V_lastName
TB,R,N,GisSharingPurchases,V_sharingPurchases
Incompatible
INCOMPATIBLE_WATCH_APP_BODY_SPECIFIC
INCOMPATIBLE_WATCH_APP_TITLE
v32@?0@"UpdateMigratorConfiguration"8Q16^B24
v32@?0@"NSString"8@"UpdateMigratorConfiguration"16^B24
com.apple.AppStoreFoundation.XPCNotificationCenter
completionDate
queueDate
installCode
installKey
failureError
storeVersionID
T@"NSError",&
T@"ApplicationProxy",R,C,N,V_application
v24@?0@"BSProcessHandle"8@"NSError"16
Launching too fast, throttling request
isSubscriptionBagSubscribed
subscribedAccount
arcadeAppCount
Free Trial
fsEntitlementsState
fsEntitlementsAdamID
fsEntitlementsOfferID
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY_SPECIFIC
CONFIRM_EXTERNAL_MANIFEST_INSTALL
EXTERNAL_MANIFEST_ALREADY_INSTALLED_ERROR_TITLE
EXTERNAL_MANIFEST_ALREADY_INSTALLED_SAME_NAME_ERROR_BODY
EXTERNAL_MANIFEST_ALREADY_INSTALLED_OTHER_NAME_ERROR_BODY
EXTERNAL_MANIFEST_SSL_ERROR_%@
EXTERNAL_MANIFEST_ERROR_FORMAT_%@
UPPManifestDialogActionCancel
UPPManifestDialogActionInstall
/System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
v16@?0@8
App State is invalid
com.apple.CoordinatorStore.NotifyTestFlightClientTaskQueue
isExecuting
isFinished
kNetworkReachabilityChangedNotification
ODRDaemonStoreID
NetworkUtilitiesSerialQueue
com.apple.appstored.ActivityManager.callout
com.apple.appstored.ActivityManager.dispatch
CrossfirePost
OcelotPostSummary
OcelotPostPayout
OcelotPayoutReset
DNUPost
Restore Retry
Sbsync
Optimal Download Window
com.apple.appstored.PostAnalytics
com.apple.appstored.ArcadePostSummary
com.apple.appstored.ArcadePostPO
com.apple.appstored.ArcadeResetPO
com.apple.appstored.RestoreRetry
com.apple.appstored.Sbsync
com.apple.appstored.TestFlightFeedback
com.apple.appstored.AutoUpdates
com.apple.appstored.OptimalDownloadWindow
AdPlatformsSetStatusConditions
selector
T:,V_selector
target
T@,W,V_target
tcr_keyPath
An unknown failure occured, canceling batch
An unknown failure occured, canceling purchase
Cannot mix machine based and non-machine based purchases
infoEnumerator
T@"NSEnumerator",R
TB,R,GisMachineBased,V_machineBased
T@"XPCRequestToken",R,V_requestToken
CREATE TABLE IF NOT EXISTS odr_asset_pack (pid INTEGER, bundle_key TEXT, bundle_id TEXT, chunk_size INTEGER, download_identifier INTEGER DEFAULT 0, download_priority REAL, download_request_uuids JSON, effective_always_preserve INTEGER DEFAULT 0, effective_preservation_priority INTEGER DEFAULT 0, hash_array JSON, known_content_hashes JSON, file_size INTEGER, last_used_date DATETIME, local_url TEXT, manifest_id INTEGER, md5 TEXT, pin_count INTEGER DEFAULT 0, primary_content_hash JSON, purgeable INTEGER DEFAULT 1, purge_reason INTEGER, sha TEXT, streamable INTEGER DEFAULT 0, source_url TEXT, timestamp DATETIME DEFAULT (timestamp()), uncompressed_size INTEGER, PRIMARY KEY(pid), UNIQUE (bundle_key) ON CONFLICT REPLACE);
CREATE INDEX IF NOT EXISTS odr_asset_pack_bundle_key ON odr_asset_pack(bundle_key);
CREATE TABLE IF NOT EXISTS odr_asset_download (pid INTEGER, bundle_id TEXT, bundle_key TEXT, coordinator_id UUID, download_size INTEGER, is_paused INTEGER, source_url TEXT, type INTEGER, unique_key TEXT, PRIMARY KEY(pid), UNIQUE (unique_key) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS odr_manifest (pid INTEGER, bundle_id TEXT, evid INTEGER, is_store_based INTEGER, item_id TEXT, last_modification_date DATETIME DEFAULT (timestamp()), local_cache_allowed INTEGER, thinning_variant TEXT, storage_id TEXT, version TEXT, PRIMARY KEY(pid), UNIQUE(item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS odr_tag (pid INTEGER, always_preserved INTEGER DEFAULT 0, bundle_id TEXT, bundle_key TEXT, name TEXT, preservation_priority REAL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY(pid)); 
on_demand_resources
ALTER TABLE odr_asset_download ADD COLUMN coordinator_id UUID;
ALTER TABLE odr_asset_download ADD COLUMN is_paused INTEGER;
ALTER TABLE odr_asset_download ADD COLUMN type INTEGER;
DROP TABLE odr_work;
DROP TABLE odr_fake_work;
ALTER TABLE odr_asset_download ADD COLUMN download_size INTEGER;
DROP TABLE odr_download;
platformType
appInstall
lib_firstActivity
T@"ASDJobActivity",R
%lld
GAME
@16@?0@"NSUUID"8
externalIDs
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
signed-actions
adopt-product
adoption-eligibility
app-usage-flush-interval-seconds
arcade-iap-family-id
authorizeMachine
available-software-updates-extended-reload-frequency-seconds
available-software-updates-extended-reload-frequency-seconds-cellular
p2-content-restore/max-item-count
p2-content-restore/url
invalid-build-tools/invalid-versions
invalid-build-tools/delta-incompatible-versions
drm-recovery
app-usage-analytics-post-interval-seconds
metrics/sampling/custom/xp_amp_usage_analytics/percentage
app-usage-analytics-include-launches
arcade-launch-timeout-interval-seconds
ocelot-device-id-days-valid
ocelot-post-interval-seconds
ocelot-post-payout-interval-seconds
ocelot-payout-qualifying-duration-seconds
default-switch-arcade-user
switch-arcade-user
onDemandResources
bundle-owns-check
app-usage-posts-per-day
app-usage-post-grace-period-seconds
app-usage-reset-actor-id-frequency-seconds
metrics/sampling/custom/xp_amp_app_usage_dnu/percentage
cluster-mappings-url
cluster-mappings-reload-frequency-secs
iap-daap/base-url
iap-daap/database-id
iap-daap/forced-refresh-frequency-minutes
iap-daap/update-polling-frequency-secs
manage-subs-app-delete-blacklist
purchase-daap/base-url
purchase-daap/database-id
purchase-daap/forced-refresh-frequency-minutes
purchase-daap/update-polling-frequency-secs
subscription-keybag-refresh
sandbox-subscription-keybag-refresh
subscription-keybag-refresh-interval-in-seconds
fsEntitlementsSrv
fsEntitlementsTimeout
fsEntitlementsRefreshIntervalInSeconds
ds-appleid-lookup
currentStorefrontCountryCodeISO3A
p2-in-app-pending-transactions
p2-in-app-check-download-queue
p2-in-app-transaction-done
check-for-messages
p2-product-offers
p2-product-offers-batch-limit
p2-in-app-regrant-purchase-history
automatic-downloads2/downloads-url
pendingApps
songDownloadDone
hideableSystemApps
testflight-visual-feedback/backoff-delays
testflight-visual-feedback/backoff-random-range
testflight-visual-feedback/get-image-upload-urls-url
testflight-visual-feedback/upload-feedback-url
available-software-updates
da-do-not-update-list
updates-use-optimized-requests
view-software-updates
v2-update-scheduling-enabled
available-software-updates-background-reload-frequency
available-software-updates-background-reload-frequency-cellular
watchRequestThrottle
watchSuppressDialogs
p2-content-restore/gzip
up-to-date-claim
lowDataPromptThreshold
push-notifications/environment
welcome-to-app-store-notification-sample
welcome-to-app-store-notification-delay
welcome-to-app-store-notification-title
welcome-to-app-store-notification-message
welcome-to-app-store-notification-later
welcome-to-app-store-notification-remind-me
welcome-to-app-store-notification-dont-remind-me
welcome-to-app-store-notification-actionButton
welcome-to-app-store-notification-actionURL
buyProduct
buyProductPlaceholder
amd-finish-provisioning
amd-finish-provisioningPlaceholder
md-finish-provisioning
md-finish-provisioningPlaceholder
amd-sync-machine
amd-sync-machinePlaceholder
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/authorizeMachine
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/switchArcadeUser
production
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://sandbox.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/fsEntitlementsSrv
https://tf-feedback.itunes.apple.com/ingest/api/v1/getImageUploadUrls
https://tf-feedback.itunes.apple.com/ingest/api/v1/uploadFeedback
https://su.itunes.apple.com/WebObjects/MZSoftwareUpdate.woa/wa/viewSoftwareUpdates
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/buyProduct
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/anonymousFinishProvisioning
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/finishMachineProvisioning
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/syncMachine
TB,R,N,GisExpired
expirationDate
profile
T@"NSString",R,C,N
profileVersion
adoptProductsURL
T@"AMSBagValue",R
adoptionEligibilityURL
appUsageFlushIntervalSeconds
arcadeSubscriptionGroupIdentifier
autoUpdateReloadIntervalSeconds
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
drmRecovery
crossfirePostIntervalSeconds
T@"URLBagMemoizedValue",R
crossfireSamplingPercentage
crossfireIncludeLaunches
odrURL
ownsCheckURL
mescalSignedActions
personalizedLookupURL
unpersonalizedLookupURL
appUsagePostGracePeriodSeconds
appUsagePostsPerDay
appUsageResetActorIDFrequencySeconds
appUsageSamplingPercentage
clusterMappingURL
clusterMappingRefreshFrequencySeconds
IAPInfoBaseURL
IAPInfoForcedRefreshMinutes
IAPInfoDatabaseID
IAPInfoUpdatePollingFrequencySeconds
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
PurchaseHistoryForcedRefreshMinutes
PurchaseHistoryUpdatePollingFrequencySeconds
subscriptionEntitlementsRefreshIntervalInSeconds
subscriptionEntitlementsTimeout
subscriptionEntitlementsURL
appleIDLookupURL
T@"AMSBagValue",R,N
createAppReceiptURL
inAppPendingQueueURL
inAppPendingQueueCountURL
inAppTransactionDoneURL
productOffersURL
productOffersBatchSize
renewVPPReceiptURL
restoreTransactionsURL
StoreKitMessagesEndpointURL
automaticDownloadsURL
completeStoreDownloadURL
pendingAppsURL
pushNotificationEnvironment
backoffDelays
backoffRandomRange
getImageUploadURLsURL
uploadFeedbackURL
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
authorizeURL
upToDateClaimURL
contentRestoreMaxItemCount
contentRestoreURL
manageSubsOnAppDeleteBlacklist
arcadeLaunchTimeoutIntervalSeconds
T@"URLBagMemoizedValue",R,N
ocelotDeviceIDDaysValid
ocelotPostIntervalSeconds
ocelotPayoutQualifyingDurationSeconds
ocelotPostPayoutIntervalSeconds
sbsyncProductionURL
sbsyncSandboxURL
sbsyncRefreshIntervalSeconds
switchArcadeUserFallbackURL
switchArcadeUserURL
TB,R,N,GisExpired,Vexpired
T@"NSDate",R,N,VexpirationDate
T@"NSString",R,C,N,Vprofile
T@"NSString",R,C,N,VprofileVersion
is_prior
deltaPackage
drmMode
packageUrl
requestCount
statusCode
interfaceType
cellular
constrained
expensive
meanTransferSpeed
networkProtocol
eventCategory
download
packageURL
taskMetrics
T@"NSURLSessionTaskMetrics",&
receipt-expiration-warning-threshold
POST
application/x-apple-plist
com.apple.PushCacheDeleteUpdateOperation
TB,R,GisSuccess,V_success
serverRevision
T@"NSNumber",R,V_serverRevision
Bundle identifier is required (source = '%ld')
Item identifier is required (source = '%ld')
activeInstalls
T@"SQLitePredicate",R
pendingBootstrap
pendingRestoreMetadataLookup
pendingRestoreSoftFailures
restoreHardFailures
T@"ASDRestoreApplicationsRequestOptions",R,D,N
databases/%ld/items/edit
databases/%ld/items
iTunesMetadata
Bundle container URL is not available for '%@'
Valid proxy is not available for '%@'
applicationSite
pricingParameters
storeItemId
storeVersionId
setSchemaName:
setSessionClass:
setTransactionClass:
currentSchemaVersion
migrateToVersion:usingBlock:
executeStatement:
storeDescriptor
createOrMigrateStoreUsingSchema:
_diagnosticClockEnabled
defaultClock
diagnosticClockEnabled
makeClock
daemon
start
date
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
databaseTable
init
_requestURL
setURL:
setAccount:
setURLKnownToBeTrusted:
setRequestMethod:
setRequestCachePolicy:
setValue:forRequestHeader:
initWithRequestProperties:
data
_parseURLFromResponseData:
startWithCompletionHandler:
JSONObjectWithData:options:error:
objectForKeyedSubscript:
URLWithString:
StoreKitMessagesEndpointURL
valueWithError:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
arrayWithArray:
queryItemWithName:value:
stringWithFormat:
addObject:
setQueryItems:
initWithBagContract:account:bundleID:status:
.cxx_destruct
_bagContract
_account
_bundleID
_status
defaultBag
sharedInstance
userDatabase
initWithDatabase:
registerConsumer:forActionType:
accountID
valueForUserInfoKey:
setNumberStyle:
numberFromString:
integerValue
initWithUserID:bundleID:status:
addMessageInfo:withError:
modifyUsingTransaction:
ams_DSID
messageForUserID:inApp:
readUsingSession:
_checkServerForMessagesForAccount:messageInfo:reply:
setScheme:
defaultWorkspace
openSensitiveURL:withOptions:
removeMessageInfoForUser:inApp:withError:
bundleID
status
sharedManager
pushService:didReceiveMessage:
messageURLForAccount:inApp:reply:
showMessage:forAccount:inApp:
_databaseStore
_dispatchQueue
fileURLWithPath:
initWithURL:
_readRecords
itemID
setObject:forKeyedSubscript:
_dirtyRecords
removeAllObjects
_deleteRecords
allValues
indexesOfObjectsPassingTest:
enumerateObjectsAtIndexes:options:usingBlock:
defaultManager
removeItemAtURL:error:
dataWithContentsOfURL:options:error:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
_writeRecords
_deleteRecordsAtURL:error:
_readRecordsFromURL:error:
countByEnumeratingWithState:objects:count:
count
_writeRecords:toURL:error:
initWithPath:
addRecord:
deleteRecordForItemID:
deleteRecords
fetchRecordForItemID:
filterRecordsUsingBlock:
_lock
_url
_records
_timer
alloc
dealloc
sharedConfig
shouldLog
OSLogObject
assumeDaemonIdentity
enforceWhitelistForDomain:
_setupLogging
sharedDaemonConfig
needsMigration
_setAMSProperties
_startStoreServicesSupport
_startODR
_setupSignalHandler
_setupCacheDeleteCoordinator
_startLaunchServicesObserver
performCleanup
_startAppInstallQueue
_startXPCListeners
_startXPCModernListeners
synchronizeSharedDefaultsToWatch
_updateDAAPDatabasesIfNeeded
defaultCenter
mainQueue
addObserverForName:object:queue:usingBlock:
takeKeepAliveTransaction:
releaseKeepAliveTransaction:
removeObject:
countForObject:
UTF8String
initWithMachServiceName:
setDelegate:
resume
object
operationWithDialog:
addOperation:
setLogFileBaseName:
stringByAppendingPathComponent:
setLogDirectoryPath:
initWithJobSupervisor:
sharedDelegate
ensureAllLibraryPathsExist:
_setupODRXPCMaintenanceTask
_setupODRDataMigrationTask
restartInProgressDownloads
_startODRXPCListeners
postNotificationName:object:
validateActiveInstallations
requestPollWithReason:
_handleDialogReceivedNotification:
addObserver:selector:name:object:
_createListenerForMachServiceName:withDelegate:
setDiagnosticServiceEntitlement:
defaultService
setDiagnosticServiceProvider:
setIAPHistoryServiceEntitlement:
setIAPHistoryServiceProvider:
setInstallationServiceEntitlement:
setInstallationServiceProvider:
setLibraryServiceEntitlement:
setLibraryServiceProvider:
setPurchaseHistoryServiceEntitlement:
setPurchaseHistoryServiceProvider:
setPurchaseServiceEntitlement:
setPurchaseServiceProvider:
setRepairServiceEntitlement:
setRepairServiceProvider:
setUpdatesServiceEntitlement:
setUpdatesServiceProvider:
newServerWithCatalog:forMachServiceName:
updateWithContext:withReplyHandler:
internalRequestToken
refreshIAPsForActiveAccountIfNeededWithToken:errorHandler:
_performODRSoftwareUpdateHousekeeping:
standardUserDefaults
synchronize
stringForKey:
setObject:forKey:
isEqualToString:
startBackgroundMaintenanceOperations
setOdrPurgeCoordinator:
_handleMigrationDidFinishNotification:
initWithName:
cancelBackgroundMaintenanceOperations
setHARLoggingItemLimit:
setFlushDelayEnabled:
setHttpArchiveBufferSize:
isDeviceUnlocked
isPasscodeDisabled
beginShowingDialog
endShowingDialog
isMultiUser
performKeepAliveTransaction:usingBlock:
appMetricsMonitor
downloadSupervisor
jobScheduler
jobSupervisor
_inGameAnalyticsDelegate
_inGameAnalyticsListener
_jetsamSource
_jobManagerDelegate
_jobManagerListener
_launchServicesObserver
_odrAppReviewDelegate
_odrAppReviewListener
_odrCtlDelegate
_odrCtlListener
_odrDevtoolsDelegate
_odrDevtoolsListener
_odrFoundationDelegate
_odrFoundationListener
_odrLaunchServicesDelegate
_odrLaunchServicesListener
_personalizationStoreService
_requestBroker
_requestDelegate
_requestListener
_signalSource
_softwareUpdateListener
_softwareUpdateDelegate
_storeQueueListener
_storeQueueDelegate
_transactionCount
_transactionStore
_serviceBroker
_downloadSupervisor
_jobSupervisor
_jobScheduler
_appMetricsMonitor
requestDate
timeIntervalSinceDate:
externalVersionID
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithDate:error:itemID:externalVersionID:
ageRelativeToDate:
matchesExternalVersionID:
error
_error
_externalVersionID
_itemID
_requestDate
longLongValue
predicateWithProperty:equalToLongLong:
predicateWithProperty:equalToValue:
arrayWithObjects:count:
predicateMatchingAllPredicates:
connection
queryOnConnection:predicate:
enumeratePersistentIDsAndProperties:usingBlock:
initWithConnection:
_connection
invalidateExpiredFailures
initWithClock:duration:persistence:
recordError:forItemID:externalVersionID:
recordSuccessForItemID:
shouldRequestItemID:externalVersionID:error:
_clock
_duration
_persistence
userID
_userID
numberWithInteger:
initWithPropertyValues:onConnection:
existsInDatabase
bindNumber:atPosition:
bindString:atPosition:
executeStatement:error:bindings:
diagnosticClockOffset
_updateTimeOffset
dateWithTimeIntervalSinceNow:
timeOffset
setTimeOffset:
_notifyToken
_timeOffset
_initWithOwnerType:purchaserDSID:
purchaserDSID
ownerType
isEqualToOwner:
alternateOwnerWithDSID:
externalOwner
familyOwnerWithDSID:
machineOwner
primaryOwnerWithDSID:
unclaimedOwner
copyWithZone:
isRestorable
_ownerType
_purchaserDSID
initWithCapacity:
timeIntervalSinceNow
setSoonestExpirationDate:
setSoonestExpiring:
addExpiring:expirationDate:
addRevoked:
addRefreshed:
expiring
refreshed
resultingError
setResultingError:
revoked
soonestExpiring
soonestExpirationDate
_expiring
_refreshed
_resultingError
_revoked
_soonestExpiring
_soonestExpirationDate
initWithBroker:request:delegate:
request
cancelUsingProxy:withErrorHandler:
startUsingProxy:withErrorHandler:
null
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
cancelWithErrorHandler:
startWithErrorHandler:
broker
delegate
_broker
_delegate
_request
_dialogForUpdateWithName:andSize:forRoaming:remaining:
_dialogForDownloadWithName:andSize:forRoaming:remaining:
_buttonActions
_bodyStringWithSize:remaining:
_hasWAPICapability
dialogForDownload:roaming:
executeOptionalStatement:
sharedDatabase
objCType
getAggregatedEventMap:eventType:context:
keyEnumerator
objectForKey:
createMetricsEventForAppEvent:eventType:context:
copy
_getAppMetadataForBundleID:connection:context:
proxyForBundleID:
isCandidateAppProxy:isMetadataLookup:
logKey
logTypeForEventType:
initWithApplicationProxy:
isCandidateAppMetadata:
createAppEventFromAppMetadata:
numberWithUnsignedChar:
setValue:forProperty:
appMetadata
createMetricsEventFromAppMetadata:context:
setAppEventType:
valueForProperty:
setInstallType:
appUsageType
foregroundEvents
setForegroundEvents:
setUsageTime:
setUsageCount:
metricsDictionary
topic
initWithTopic:
setAppUsageType:
setBundleID:
bundleVersion
setBundleVersion:
evid
setEvid:
setItemID:
itemName
setItemName:
shortVersion
setShortVersion:
decorateMetricsEvent:appMetadata:context:
eventKey
serverTimeFromDate:
addForeGroundUsage:duration:
getAppEventsForType:context:orderingProperties:
isTemporary
numberWithInt:
appEventEntityClass
queryOnConnection:predicate:orderingProperties:
defaultProperties
enumerateMemoryEntitiesWithProperties:usingBlock:
metadataEntityClass
createMetricsEventsForEventType:context:
addObjectsFromArray:
_getCurrentApps
orderedSetWithOrderedSet:
readCurrentApps:
containsObject:
isOffloaded
isPlaceholder
componentsJoinedByString:
array
setDeletedApps:
historyMap
allApps
launchesStartDate
lib_loggableShortDate
nowDate
calcluateUsageFromDate:endDate:appMetadata:
_correlateEvents:ForContext:
usageCount
startDate
metadataForBundleID:date:
_isCandidateAppMetadata:context:
minimumRunningTime
usageTime
numberWithLongLong:
endDate
hardwareModel
characterSetWithCharactersInString:
scannerWithString:
isAtEnd
scanUpToCharactersFromSet:intoString:
writeAppMetadataForBundleIDs:context:
storeItemID
numberWithBool:
enumerateApplicationsOfType:block:
writeAppMetadata:context:
importAppMetadata:class:error:
launchReason
timeIntervalSinceReferenceDate
numberWithDouble:
setEndDate:
createAggregateMetricsEventsForEventType:events:context:
createAppEventsForBundleIDs:eventType:installType:connection:context:
createMetricsEventsForEventType:events:context:
getAppEventsForType:context:
getPriorAppMetadataWithContext:
getDeletedAppsEventsWithContext:
getLaunchAppEventsWithContext:
hardwareFamily
hardwarePlatform
shouldEnableAppUsageMetricsForSession:override:
writeCurrentAppMetadata:
weakToStrongObjectsMapTable
_handleLegacyNotifications:
currentConnection
finishInstallID:withFinalPhase:
_enumerateInstallsWithJobIDs:usingTransactionBlock:
_getJobsForClient:
orderedSetWithArray:
_getJobsWithIDs:forClient:
pauseInstallID:
setOptions:
persistentID
sendJobsChanged:
resumeInstallID:
_notifyClientsOfJobsChanged:
dictionaryWithObjects:forKeys:count:
_notifyClientsOfStatesChanged:
_dirtyProgress:
_notifyClientsOfJobCompleted:finalPhase:isPersistent:
enumerateKeysAndObjectsUsingBlock:
_notifyClientsOfProgressChanged:
_progressTimerFired
allKeys
isEqualToNumber:
processIdentifier
connection:hasEntitlement:
_initializeConnection:
jobsQueryPredicate
lib_legacyJobID
objectEnumerator
lib_UUIDWithLegacyJobID:
lib_mapAndFilterUsingBlock:
containsPredicateWithProperty:values:
enumeratePersistentIDsUsingBlock:
arrayWithObject:
initWithPersistentID:
unsignedLongLongValue
setStoreItemID:
_externalPhaseForPhase:
setPhase:
setType:
unarchivedObjectOfClass:fromData:error:
setFailureError:
doubleValue
setPercentComplete:
_getJobsWithExternalIDs:forClient:
removeObjectForKey:
cancelJobsWithIDs:completionBlock:
finishJobsWithIDs:replyBlock:
getJobsUsingReplyBlock:
getJobsWithIDs:usingReplyBlock:
pauseJobsWithIDs:completionBlock:
registerJobManagerWithOptions:replyBlock:
resumeJobsWithIDs:completionBlock:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
didChangeJobs:
didCompleteJobs:finalPhases:
didUpdateProgress:
didUpdateStates:
setRemoteObjectInterface:
setInterruptionHandler:
_handleDisconnect:
setInvalidationHandler:
_enumerateClientsUsingBlock:
sendJobStatesUpdated:
sendJobsCompleted:finalPhases:
_copyJobIDsForClient:
sendJobProgressUpdated:
listener:shouldAcceptNewConnection:
_clients
_progress
_progressDirty
setRequiresNetwork:
dictionary
initWithDictionary:
mutableCopy
initWithStartTime:endTime:
startTime
endTime
boolValue
defaultInstallPolicy
cellularResult
setCellularResult:
constrainedResult
setConstrainedResult:
optimalDownloadWindow
setOptimalDownloadWindow:
requiresDeviceSecurity
setRequiresDeviceSecurity:
requiresMigrationComplete
setRequiresMigrationComplete:
requiresNetwork
requiresPowerPluggedIn
setRequiresPowerPluggedIn:
copyDictionaryRepresentation
_dictionary
isExpensive
isConstrained
initWithProcessInfo:
setClientName:
compile
lib_deviceIsAppleWatchM8
lib_deviceIsWiFiCapable
lib_deviceUnlocked
lib_passcodeDisabled
lib_userAgentForClientID:
lib_userAgentForClientName:andClientVersion:
_lib_compatibleProductType
setValue:forRequestParameter:
allocWithZone:
account
bagURL
setBagURL:
clientInfo
setClientInfo:
compressRequestBody
setCompressRequestBody:
KBSyncType
setKBSyncType:
logUUID
setLogUUID:
requestCachePolicy
requestBodyData
setRequestBodyData:
requestMethod
shouldAppendGUIDParameter
setShouldAppendGUIDParameter:
URLKnownToBeTrusted
dataEncoding
setDataEncoding:
requestHeaders
setRequestHeaders:
requestParameters
setRequestParameters:
_compressRequestBody
_shouldAppendGUIDParameter
_URLKnownToBeTrusted
_bagURL
_clientInfo
_KBSyncType
_logUUID
_requestCachePolicy
_requestBodyData
_requestMethod
_URL
_dataEncoding
_requestHeaders
_requestParameters
userInfo
tcr_numberForKey:
tcr_integerValueForKey:missingValue:
isEqualToDictionary:
isEqualToMessage:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
timestamp
lib_loggableDate
initWithMessage:
actionType
_message
accountIdentifier
isCompatibilityUpdate
isRefresh
installUniversalVariant
isBackgroundUpdate
purchaseID
isRedownload
bagKey
vendorName
initWithPurchase:
automaticType
setAutomaticType:
setAccountID:
accountName
setAccountName:
clientBundleID
setClientBundleID:
createsInstallJobs
setCreatesInstallJobs:
externalPurchase
setExternalPurchase:
familyPurchaserDSID
setFamilyPurchaserDSID:
hasMIDBasedDsid
setHasMIDBasedDsid:
hasMIDBasedApp
setHasMIDBasedApp:
hasProfileValidatedApp
setHasProfileValidatedApp:
installedVariantID
setInstalledVariantID:
installedVersionID
setInstalledVersionID:
setIsInstalled:
setIsCompatibilityUpdate:
isPrivate
setIsPrivate:
isProvisionedApp
setIsProvisionedApp:
setIsRedownload:
setIsRefresh:
isUniversalVariant
setIsUniversalVariant:
setIsUpdate:
isUserInitiated
setIsUserInitiated:
priority
setPriority:
purchase
setPurchase:
setPurchaseID:
setPurchaserDSID:
responseMetrics
setResponseMetrics:
storefront
setStorefront:
transactionIDs
setTransactionIDs:
setVendorName:
_createsInstallJobs
_hasMIDBasedDsid
_hasMIDBasedApp
_hasProfileValidatedApp
_isInstalled
_isCompatibilityUpdate
_isPrivate
_isProvisionedApp
_isRedownload
_isRefresh
_isUniversalVariant
_isUserInitiated
_automaticType
_accountID
_accountName
_clientBundleID
_externalPurchase
_familyPurchaserDSID
_installedVariantID
_installedVersionID
_priority
_purchase
_purchaseID
_responseMetrics
_storefront
_transactionIDs
_vendorName
setReason:
lib_shortLogKey
deviceIsAppleTV
contextWithReason:
humanReadableReason
isBackgroundRequest
shouldPerformUpdates
callbackHandler
setCallbackHandler:
includeMetrics
setIncludeMetrics:
isVPPLookup
setIsVPPLookup:
reason
requestToken
setRequestToken:
userInitiated
setUserInitiated:
offloadedBundleIDs
perDeviceBundleIDs
_contextLogKey
_includeMetrics
_isVPPLookup
_userInitiated
_callbackHandler
_reason
_requestToken
_offloadedBundleIDs
_perDeviceBundleIDs
_setup
fallBackToOldBagIfNecessary
URLBagKey
URLForKey:
sharedSAPSession
setSAPSession:
appStoreDaemonBag
setBag:
initWithManualSetup
completeSetup
setFallBackToOldBagIfNecessary:
_fallBackToOldBagIfNecessary
applicationProxyForIdentifier:placeholder:
foundBackingBundle
installProgressForApplication:withPhase:
installState
cancel
applicationIdentifier
rangeOfString:
appState
isInstalled
profileValidated
missingRequiredSINF
externalVersionIdentifier
storeFront
lib_purchaseOwner
iTunesMetadataPlistForProxy:
valueForKey:
bundleContainerURL
path
initWithContentsOfFile:
_placeholderInstalledForBundleID:
cancelProgressForBundleID:
initWithObjectsAndKeys:
uninstallApplication:withOptions:
length
scratchPath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingString:
isCorruptedFactoryInstallAppProxy:
isFactoryInstallAppProxy:
uninstallPlaceholderForBundleID:
_placeholderScratch
_databasePath
initWithDatabaseURL:readOnly:
statementHasRowAfterStepping:
prepareStatementForSQL:cache:usingBlock:
firstObject
initWithObjects:
pathWithComponents:
fileURLWithPath:isDirectory:
DSIDForAppleID:
_database
strongToWeakObjectsMapTable
setEnabledActionTypes:
setUserNotificationExtensionId:
initWithConfiguration:bag:
_initializeConnectionsAndSkipEnvironmentCheck:
_flushPendingMessagesWithActionType:
shouldHandleNotification:
handleNotification:
_queuePendingMessage:withActionType:
pushNotificationEnvironment
isValidEnvironment:
_consumers
_pendingMessages
_pushHandler
_pushDiagnostic
_stateHandle
requestWithMethod:bagURL:parameters:
requestWithMethod:URL:parameters:
dataTaskPromiseWithRequestProperties:forRequest:
thenWithBlock:
addFinishBlock:
_bag
_requestProperties
purchaseWithBuyParameters:
setCreatesDownloads:
setCreatesJobs:
setAccountIdentifier:
setOwnerAccountDSID:
setBackgroundPurchase:
setIgnoresForcedPasswordRestriction:
setDownloadProperties:
setHTTPHeaders:
purchase_buyParams
lib_unsignedLongLongPropertyForKey:
purchase_unsignedLongLongPropertyForKey:
_initWithNotificationCenter:
_beginProgressForBundleID:storeItemID:reportRemotely:
catalogRefreshedBundleIDs:
setStoreExternalVersionID:
totalUnitCount
watchApplicationMode
filteredArrayUsingPredicate:
reportRemotely
setReportRemotely:
catalogRegisteredApps:
_flushProgress
postProgress:
executeQuery:excludingBundleIDs:usingBlock:
observer
setObserver:
beginProgressForBundleID:
cacheApp:
existingAppForBundleID:
existingProgressForBundleID:
finishProgressForBundleID:withReason:
preFinishProgressForBundleID:withReason:
remoteSystemPlaceholders
removeRemotePlaceholderForBundleID:
setFractionCompleted:forBundleID:storeItemID:
_notificationCenter
_observer
_placeholders
_progressStore
_dirtyProgress
_assetDownloadsWithPredicate:
legacyPathPrefixForApplication:
_assetPacksForBundleID:onlyOnDevice:
_assetPacksForBundleID:withPurgeability:lastUsedMoreThan:
_assetPacksWithPredicate:
validManifestExistsForApplication:error:
applicationNeedsRepair:error:
_tagsWithPredicate:
_assetPacksWithPredicate:orderingProperties:
allAssetDownloads
allBundleIDs
assetDownloadWithBundleID:andBundleKey:
assetDownloadsForCoordinatorID:
assetPacksForBundleID:withPurgeability:lastUsedMoreThan:
assetPacksWithDownloadRequestUUIDs
assetPacksWithLocalURL:
manifestForAdamID:
options
title
message
client
bulletinWithTitle:message:
actionButtonTitle
setActionButtonTitle:
actionButtonURL
setActionButtonURL:
creationDate
setCreationDate:
launchURL
setLaunchURL:
recordID
setRecordID:
postBulletin:
setSuccess:
setError:
main
softwareVersionBundleID
deviceBasedVPP
setIsDeviceBasedVPP:
bundleShortVersionString
variantID
setVariantID:
betaExternalVersionIdentifier
setIsBeta:
softwareVersionExternalIdentifier
setExternalVersionID:
_findReason
setAdamID:
setBeta:
setBundleShortVersion:
setMachineVPP:
installType
contextWithMetadata:
application
setCoordinatorID:
isDeviceBasedVPP
isRestore
setIsRestore:
_application
_isBeta
_isDeviceBasedVPP
_isRestore
_bundleVersion
_shortVersion
_variantID
_cancelErrorsPassingTest:
_scheduleErrorDisplay:
_displayScheduledErrors
cancelDialogsWithDownloadIdentifier:
_scheduledErrors
_scheduledErrorTimer
handleAccountStoreDidChangeNotification:
_shouldNotifyChangeFromExistingAccount:toCurrentAccount:
_postAccountDidChangeWithAccountStore:
_postAccountDidUpdateWithAccountStore:
dataWithBytesNoCopy:length:freeWhenDone:
initWithOSStateData:length:
initWithData:
memoryEntityClass
metrics
connectStartDate
connectEndDate
_dateIntervalFrom:to:
domainLookupStartDate
domainLookupEndDate
requestEndDate
responseStartDate
secureConnectionStartDate
secureConnectionEndDate
initWithStartDate:duration:
lib_connectInterval
lib_domainLookupInterval
lib_requestInterval
lib_secureConnectionInterval
setWithArray:
allObjects
lookupSystemApplicationsWithBundleIDs:
runSubTask:returningError:
lookupResults
initWithSystemAppLookupItem:
setPackages:
integerValueForProperty:
packages
copyEvaluatorDownloadWithPackage:
initWithDownload:
setInstallPolicy:
lock
unlock
completeWithSuccess
_showInternalConnectionDialogWithError:
completeWithError:
domain
code
stringByAppendingFormat:
boolValueForProperty:
_messageForError:
requestWithTitle:message:
initWithRequest:
present
waitUntilFinishedWithTimeout:
initWithInstalls:
results
_installs
_results
uninstallAppWithBundleID:requestUserConfirmation:completion:
errorWithDomain:code:userInfo:
uninstallApp:withResultHandler:
setPendingUpload:
setHTTPBody:
setHTTPMethod:
sessionWithConfiguration:
statusCode
allHeaderFields
setSuccessfulUpload:
pendingUpload
_pendingUpload
_successfulUpload
archiveSize
setArchiveSize:
diskSpaceNeeded
setDiskSpaceNeeded:
name
setName:
promiseType
setPromiseType:
referenceID
setReferenceID:
streamingZipOptions
setStreamingZipOptions:
transferPath
setTransferPath:
_archiveSize
_diskSpaceNeeded
_name
_promiseType
_referenceID
_streamingZipOptions
_transferPath
setContext:
setUpdateState:forBundleIDs:
items
_handlePotentialProvisionedApp:itemID:status:
processPurchaseInfos:requestToken:withCompletionHandler:
defaultStore
cancelCoordinatorForJobID:bundleID:withReason:
enumerateUpdatesUsingBlock:
arrayWithCapacity:
rankForMediaType:
parentalControlsRank
databaseID
resultWithRestrictedActivity:bundleID:
purchase_purchaseInfoForUpdateUserInitiated:
externalID
isMachineBased
createUpdateCoordinatorsForBundleIDs:enforceImportance:
_performAccountPurchases:
arrayByAddingObject:
performUpdatePurchases:isBackgroundRequest:requestToken:jobResults:error:
defaultMonitor
copyCellularNetworkIdentityWithError:
settingsForIdentity:
cellularDataPrompt
isRoaming
initWithPersistentID:onConnection:
copyEvaluatorDownload
bytes
dialogForUpdatesWithSize:limit:roaming:
networkConstraintsForMediaType:withBag:
resultWithError:
sizeLimitForNetworkType:
selectedActionIdentifier
installPolicy
changeset
addSchedulerPollReason:
dialogForUpdatesWithSize:
finishWithFinalPhase:
unionChangeset:
taskWithContext:
_addItemIDToArrayIfNotPresent:array:
jobResults
context
orderedBundleIDs
setOrderedBundleIDs:
_updatesPurchases
_jobResultItems
_context
_orderedBundleIDs
parse
numberWithUnsignedInt:
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
parseMetadata
isUpdate
revision
_data
_hasParsedData
_isUpdate
_revision
updateWithIDSDevice:
pairingID
productType
systemVersion
isActive
isLocallyPaired
isConnected
deviceForIDSDevice:
serviceMinCompatibilityVersion
modelIdentifier
initWithIDSDevice:
thinningHeaders
markAsTombstoneDevice
isActivePairedDevice
destinationID
isSupported
thinningVariant
isTombstone
_device
_activePairedDevice
_connected
_supported
_tombstone
_destinationID
_thinningVariant
isAsynchronous
_dispatchCompletionBlock
versionWithBundleID:bundleVersion:andShortVersion:
enumerateMemoryEntitiesUsingBlock:
_predicateForProxy:
anyOnConnection:predicate:
displayNames
feedbackMetadata
launchInfo
setArtistName:
predicateForVersion:
bundleIdentifier
shortVersionString
allAppVersionsForBundleID:
allFeedbackEntities
displayNamesForApplicationProxy:
emailAddressForApplicationProxy:
feedbackEntityForPID:
feedbackMetadataForApplicationProxy:
isFeedbackEnabledForApplicationProxy:
isLaunchScreenEnabledForApplicationProxy:
launchInfoForApplicationProxy:
launchInfoForVersion:
modifyUsingTransactionClass:withBlock:
database
optionFlags
initWithDictionary:options:completionBlock:
initWithDialog:completionBlock:
show
updateWithDictionary:options:
userNotification
waitForResponse
isCanceled
completionBlock
setCompletionBlock:
_completionBlock
_isCanceled
_notificationDictionary
_notificationOptions
_userNotification
purgeableSize
fetchLatestVersion
errorData
appleID
downloaderID
currentError
hardFailWithError:
isBootstrapping
setVid:
softFailWithError:
_logCodeForRestoreType:
setFetchLatestVersion:
_fetchLatestVersion
initWithBlock:
initWithRequestID:promiseBlock:
requestID
_requestID
_bundleIdentifierForCurrentConnection
gamePlayDidBeginForBundleID:withCompletionHandler:
gamePlayDidEndForBundleID:withReason:andSessionID:completionHandler:
heartBeatForBundleID:andSessionID:withCompletionHandler:
_copyExecutablePathForPID:
_copyBundleForExecutablePath:
_copyInfoDictionaryForExecutablePath:
lastPathComponent
initWithBytes:length:encoding:
gamePlayDidBeginWithCompletionHandler:
gamePlayDidEndWithReason:andSessionID:completionHandler:
heartBeatForSessionID:withCompletionHandler:
_activeSoftFailureCount
_createRetryActivityIfNeeded:
setRestoreSoftFailureRetryDate:
_activeRestoreCount
_boostrapWhenReadyWithReason:targetAccountID:
setUsername:
_bootStrapRestoreJobs:targetAccountID:userInitiated:
_hydrateApp:
_restoreStateToDictionary
_retryRestoresForAccount:userInitiated:
ams_iTunesAccountWithAltDSID:
restoreHardFailures
pendingRestoreSoftFailures
activeRestores
initWithAccountID:userInitiated:
orderedLoookupCount
nonOrderedLookupCount
_bootstrapRestoresForBatchType:restoreInfo:targetAccountID:
_pendingMetadataLookup
_activeHardFailureCount
_processTokenFailuresAndPostFollowupOrPerformAuthWithUserInitiated:
nonOrderedRestoreInstallForAccounts
orderedRestoreInstallForAccounts
batchSize
initWithAccount:batchSize:
setAutoFinish:
setFailCoordinators:
_performContentRestoreBatchLookup:batchInfo:outError:
successes
failures
tokenFailures
failCoordinators
completeHardFailCoordinators:resason:
_finishCompletedRestores:completeOrderedOnly:
isDataMigrationComplete
_handleMonitorStateDidChangeNotification:
finishHardFailInstalls:
restoreSoftFailureRetryDate
activityShortNameForType:
registerActivity:activityShortName:scheduledDate:withReason:
initWithArray:
_hydrationTypeForAppInstallRestoreType:
_createCoordinatorUsing:addProgress:
importInstall:
accountForRestoreInstall:error:
authenticateForAppleID:outError:
_restoreApp:account:isUserInitiated:error:
_isErrorAccountError:
bootStrapRestoreJobs:targetAccountID:userInitiated:
_completeHardFailures:
_installErrorIsAccountError:
pendingRestoreMetadataLookup
_performContentRestoreForRestoreInstalls:batchInfo:outError:
autoFinish
_installEntityHasAccountFailure:
useFollowUpsForRestoreFailures
_postFollowupForAccounts:
attemptedPreflightAccountIDs
setAttemptedPreflightAccountIDs:
_restoreAppID:matches:
clearFollowupForAccountID:
hydrateApps:
postFollowupForAppleID:accountID:
restoreStateDictionary
retryRestoresForAccount:userInitiated:
_installHasAccountFailure:
_restoreQueue
_failCoordinators
_autoFinish
_failures
_successes
_tokenFailures
tcr_urlForKey:
ensureAvailableDiskSpace:atPath:
tcr_arrayForKey:
tcr_dataForKey:
initWithDPInfo:error:
tcr_dictionaryForKey:
unsignedIntValue
setChunkDigests:
setChunkSize:
setChunkType:
setDigest:
stringValue
downloadPathForID:
initWithDownloadPath:
setExpectedBytes:
setStreamAdapter:
setDataConsumer:
setNetworkBudgetingIdentifier:
setTaskPriority:
setQosClass:
setRequestReason:
initWithURL:properties:
setCachePolicy:
defaultSession
assetPromiseWithRequest:
_bomInstall
UUID
UUIDString
applicationProxyForIdentifier:
applicationType
dataContainerURL
lastObject
URLByAppendingPathComponent:
stringByAppendingPathExtension:
fileSystemRepresentation
moveItemAtPath:toPath:error:
downloadTask:updatedProgress:timeRemaining:
removeItemAtPath:error:
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleAuthenticateRequest:completion:
AMSURLSession:task:shouldFailWithServerError:
AMSURLSession:handleAuthenticateRequest:completion:
AMSURLSession:handleDialogRequest:completion:
AMSURLSession:shouldFailWithServerError:
AMSURLSession:shouldHandleAuthenticationForAccount:dialogDictionary:
AMSURLSession:shouldHandleDialogDictionary:
initWithDownloadInfo:client:
downloadID
setDownloadID:
installPath
_assetPromise
_client
_downloadInfo
_downloadPath
_downloadID
_installPath
_performMigrationIfNeeded
_signalMigrationComplete
initWithCompletionHandler:
isMigrationComplete
_conditionLock
initWithConnection:andCatalog:
lib_newProcessInfoForConnection:
_provideService:forEntitlement:withReply:
_unboostingRemoteObjectProxy
deliverNotifications:
deliverProgress:
getCrossfireServiceWithReplyHandler:
getDiagnosticServiceWithReplyHandler:
getIAPHistoryServiceWithReplyHandler:
getInstallationServiceWithReplyHandler:
getLibraryServiceWithReplyHandler:
getOcelotServiceWithReplyHandler:
getPersonalizationServiceWithReplyHandler:
getPrivilegedTaskServiceWithReplyHandler:
getPurchaseHistoryServiceWithReplyHandler:
getPurchaseServiceWithReplyHandler:
getRepairServiceWithReplyHandler:
getTestFlightFeedbackServiceWithReplyHandler:
getUpdatesServiceWithReplyHandler:
hasSeenAppStore
stringValueForProperty:
numberValueForProperty:
uuidValueForProperty:
updateForBundleID:
setRefreshInstallID:
setExternalID:
setLogCode:
updateGeneratedProperties
success
processPurchaseInfo:withCompletionHandler:
taskWithInstall:inSession:
_externalID
_installID
_logKey
_logCode
objectAtIndex:
dictionaryRepresentation
addMetadata:
metadataType
clearMetadatas
metadatasCount
metadataAtIndex:
readFrom:
writeTo:
mergeFrom:
metadatas
setMetadatas:
_metadatas
_familyMembersFromDictionaryRepresentation:
familyMembers
isCached
ams_sharedAccountStore
ams_activeiCloudAccount
ams_activeiTunesAccount
valueForKeyPath:
initWithDictionaryRepresentation:
iCloudDSID
iTunesDSID
setCurrentSignedInUser:
firstName
isCurrentSignedInUser
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithDictionaryRepresentation:cached:
_cached
_familyMembers
doubleForKey:
cacheInvalidated
_purgebaleForUrgency:outError:
initWithPurgeableSize:purgeableApps:
_availableInStore:error:
diskUsage
asdApp
initWithPurgedSize:purgedApps:
isLaunchProhibited
staticUsage
setDiskUsage:
setSystemApp:
arrayByAddingObjectsFromArray:
isSystemApp
_purgeApps:desiredPurgeSize:purgedSize:offloadOnly:
purgeableForVolume:urgency:override:
applicationsWithVPNPlugins
_appBlacklist
_appPluginBlacklist
_watchAppBundles
offloadingAppsEnabled
keepAliveWithName:
boolForKey:
purgeAppsForVolume:urgency:desiredPurge:performAvailabilityCheck:additionalApps:offloadOnly:client:
purgedApps
purgedSize
arrayForKey:
appPurgeBlacklist
appPurgePluginBlacklist
initWithBag:caller:keyProfile:
lib_appProcessInfo
performLookupWithBundleIdentifiers:itemIdentifiers:
allItems
iTunesStoreIdentifier
_cutoffDateForUrgency:
_appsBasedOnWindow:apps:cutoffDate:ourError:
_launchWindowAttributesForUrgency:
initWithQueryString:attributes:
setProtectionClasses:
setBundleIDs:
attributeSet
uniqueIdentifier
lastApplicationLaunchedDate
setLastLaunched:
compare:
setUsageWindowMatchType:
setValue:forKey:
attributeDictionary
setMatchedBucket:
setFoundItemsHandler:
setCompletionHandler:
appPurgeCutoffDate
isBetaApp
hasMIDBasedSINF
setUsingLasModified:
_lastModifiedForBundle:
cutoffDate
isDeletable
_processApp:context:
offloadingGracePeriodStartDate
bundleURL
getResourceValue:forKey:error:
localTimeZone
secondsFromGMT
dateByAddingTimeInterval:
windowApps
usageWindowMatchType
plugInKitPlugins
pluginBlacklist
protocol
blacklist
isBeyondGracePeriod
watchBundles
usingLasModified
lastLaunched
appPurgeRecentInstallCutoffDate
registeredDate
matchedBucket
initWithBundleID:
initWithDurationInDays:bundleIDs:includeExtensionUsage:
usageStats
lastEventEndDate
isExtensionUsage
initWithBundleIdentifier:efficacy:name:withHandler:
demoteAppToPlaceholderWithBundleID:forReason:error:
invalidate
_appsUsedWindow:ourError:
_isBeyondGracePeriod
setBeyondGracePeriod:
setBlacklist:
setPluginBlacklist:
setCutoffDate:
setWatchBundles:
setWindowApps:
_demoteableAppsWithInterval:context:outError:
_sortDescriptors
sortedArrayUsingDescriptors:
initWithKey:ascending:
getPairedDevices
sharedDeviceConnection
fetchInstalledApplicationsForPairedDevice:completion:
allPurgeablesForVolume:
purgeableForVolume:urgency:
purgeForVolume:urgency:desiredPurge:
cancelPurge
purgeableAppsForVolume:urgency:performAvailabilityCheck:
_appsUsedBasedOnLastModifiedForWindow:apps:cutoffDate:
_blacklist
_fullBlackList
_fullPluginBlacklist
_gracePeriodSeconds
_watchAppList
_usingLasModified
_lastLaunched
_matchedBucket
_usageWindowMatchType
_beyondGracePeriod
_cutoffDate
_pluginBlacklist
_watchBundles
_windowApps
setVersion:
executeStatement:error:
performTransaction:
firstInt64Value
executeQuery:withResults:
stringForColumnName:
enumerateRowsUsingBlock:
bindInt64:atPosition:
performSavepoint:
hasRows
initWithConnection:schemaName:
column:existsInTable:
tableExists:
_schemaName
setActionType:
initWithBulletinDictionary:
bundleWithIdentifier:
localizedStringForKey:value:table:
copyBulletinDictionary
newBulletinRequest
handleBulletinActionResponse:
actionIdentifier
appBundleId
setAppBundleId:
setAction:
startWithCompletionBlock:
_appBundleId
ASD_intentForClass:
ASD_intent
ASD_classForIntent:
rangeOfString:options:
valueOfClass:forKey:
substringToIndex:
componentsSeparatedByString:
substringFromIndex:
valueOfClass:forKeyPath:
_keyPathCache
_tcr_associatedReader
tcr_numberForKeyPath:
scanInteger:
tcr_stringForKey:
tcr_stringForKeyPath:
_tcr_associateWithReader:
tcr_arrayForKeyPath:
tcr_boolForKey:
tcr_boolForKeyPath:
tcr_dataForKeyPath:
tcr_dateForKey:
tcr_dateForKeyPath:
tcr_dictionaryForKeyPath:
tcr_integerValueForKey:
tcr_integerValueForKeyPath:
tcr_integerValueForKeyPath:missingValue:
tcr_nullForKey:
tcr_nullForKeyPath:
tcr_unsignedLongLongForKey:
tcr_unsignedLongLongForKeyPath:
tcr_urlForKeyPath:
setAllowsWatchCellularAccess:
clientIdentifier
setClientIdentifier:
connectionPool
maximumWatchCellularTransferSize
setMaximumWatchCellularTransferSize:
setRequestUUID:
_allowsAuthentication
_allowsConstrainedNetworkAccess
_allowsWatchCellularAccess
_locateAssetCache
_requiresPowerPluggedIn
_bytesPerSecondLimit
_clientIdentifier
_connectionPool
_discretionaryType
_duetBudgetingIdentifier
_expectedContentLength
_maximumWatchCellularTransferSize
_networkBudgetingIdentifier
_protocolClasses
_rangeOffset
_requestReason
_requestUUID
_taskPriority
initWithInt:
initWithUTF8String:
columnIndexByName
_strongSelf
_feedbackRequest
uploadFeedbackURL
addAttemptCountToURL:
performRequestWith:URL:parameters:error:
_handleResult:
entity
feedback
accountDSID
setDsid:
setPosixTimestampMillis:
email
setEmail:
successfulImageUploads
addScreenshots:
comments
setComment:
incidentID
setIncidentId:
setFeedback:
setApplicationAdamId:
appVersion
setBundleId:
setCfBundleVersion:
setCfBundleShortVersionString:
appUptime
setUptimeMillis:
setApplication:
deviceType
setModel:
osVersion
setOsVersion:
architecture
setArchitecture:
locale
setLocale:
timeZone
setTimezone:
carrier
setCarrier:
cellularNetworkType
setCellularNetworkType:
networkConnectionType
setConnection:
batteryPercentage
setBatteryPercentage:
screenWidth
setWidthPixels:
screenHeight
setHeightPixels:
setDisplay:
diskAvailable
setAvailableBytes:
diskTotal
setTotalBytes:
setDisk:
setDevice:
pairedWatchOSVersion
pairedWatchModel
setAppleWatch:
responseStatusCode
type
initWithProtobufData:type:isResponse:
initWithProtobuf:messageType:
setMessageID:
setReply:
initWithProtobuf:device:messageID:
copyIDSRepresentation
replyWithProtobuf:messageType:
messagePayload
messageType
device
messageID
isReply
_reply
_messagePayload
_messageType
_messageID
sharedCoordinator
buildVersion
_handleRepairBundleIDNotification:
_initializeAcountState
_handleNetworkStateDidChangeNotification:
_initializeNetworkDependentBits:
_ensureDeviceIDIsValid
_refreshAccountEventsIfNeeded
contextForType:
_flushMetricsWithReason:context:completion:
shouldPostOcelotMetrics
_getAppEventsWithAppUsageType:completionBlock:
shortNameForAppUsageType:
_handleAppSubscriptionChange
isSubscribedToArcade:timeout:outError:
_recordExternalAppEvents:completionBlock:
_recordInternalEventsForBundleIDs:eventType:installType:context:
_recordLaunchEventsForContext:
arcadeAppCount
_sbsyncIfHasAppsWithReason:skipAppCheck:outError:
_postMetrics:
_resetWithReason:resetActivity:context:
ocelotPayoutResetDate
resetActivity:reason:
setShouldResetPayoutDate:
ocelotPayoutIntervalStartDate
initWithACAccount:
importAccountEvent:
username
subscriptionStatusForAccountID:returningError:
_isSubscribedToArcadeIgnoringMemoryCache:ignoresFsEntitlementCache:timeout:outError:
initWithSyncType:
lib_logUUID
addTask:
setSubscriptionDuration:
ocelotSummaryIntervalStartDate
_topLaunchesForAccount:completionBlock:
_terminateArcadeApps
setOsBuild:
setClientEventID:
ocelotPayoutDeviceID
ocelotDeviceID
setOcelotDeviceID:
setHardwareFamily:
setHardwareModel:
setOS:
subscriptionState
_subscriptionState
setOcelotSubscriptionState:
setQualifiedDuration:
removePropertiesForKeys:
setCollectionTime:
ocelotAppAnalyticsClientID
setOcelotID:
isOcelot
resetCache
launchEndTime
nextPayoutWeekStartDateForDate:
activeAccountsInWeekWithDate:
_activeAccountIDForAppEvent:context:withAccountEvents:
setTemporaryAccountID:
launchStartTime
event
initWithPriorInstalls:installEvents:
setHistoryMap:
_payoutEvents:
importAppEvents:class:error:
_createLaunchMetricsEventForAppEvent:context:
setKeepAlive:
setDatabaseID:
eventType
setHasBeenPosted:
ocelotID
temporaryAccountID
ams_iTunesAccountWithDSID:
ams_isDemoAccount
setInstallationType:
isBeta
_deRezzedDateForLaunchDate:
setStartTime:
setEventTimeOverride:
setCumulativeUserCount:
setDuration:
lib_simpleWeekDate
setWeekStartDate:
currentCalendar
components:fromDate:
dateFromComponents:
deviceGUID
ocelotDeviceGUID
ocelotDeviceIDCreationDate
lib_secondsFromNow
ocelotDeviceIDDaysValid
lib_dateHasPassed
setOcelotDeviceGUID:
setOcelotDeviceIDCreationDate:
flushMetricsWithReason:completion:
setIsTemporary:
_allOcelotAppEvents:
externalMapping
segment
getSubscriptionEntitlementsForSegment:withToken:ignoreCaches:notifyInternal:withResultHandler:
removeObserver:name:object:
resetActivity:reason:forceReset:block:
_getAppStoreSubscriptionEntitlementWithTimeout:outError:
_subscriptionStateForEntitlement:
ocelotSubscriptionState
initWithBundlePath:
setFairplayStatus:
unsignedIntegerValue
setExitReason:
initWithOptions:
addTasks:waitUntilFinished:
unregisterActivity:
setSubscriptionState:
_resetDB:
insertEventsIntoDatabase:
_cleanup:reason:
ocelotPayoutQualifyingDurationSeconds
setMinimumRunningTime:
numberWithUnsignedInteger:
qualifiedEventsForWeekeStartingWithDate:context:
initWithExternalEvent:
recordLaunchesIntervalStartDate
allEvents
deleteFromDatabase
setOcelotPayoutDeviceID:
shouldResetPayoutDate
recordIntervalStartDate
ocelotShouldRetrySlotOptOut
setOcelotShouldRetrySlotOptOut:
isTrialPeriod
ocelotApps
_topLaunchesForAccountCachePath
propertyListWithData:options:format:error:
currentIdentity
cachedDataPath
assertionState
initWithBundleID:reason:acquisitionHandler:
_topAppsDictionary
initWithAppUsageType:
_setLogKey:
setLaunchesStartDate:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
fileExistsAtPath:
writeToFile:atomically:encoding:error:
getAppPayoutEventsWithCompletionBlock:
getAppSummaryEventsWithCompletionBlock:
handleSubscriptionChange
isSubscribedToOcelot
recordAppEvent:completionBlock:
recordDeletedApps:
recordLaunchesWithCompletionBlock:
recordInstalledApps:installType:
recordPayoutMetricsWithCompletionBlock:
recordSummaryMetricsWithCompletionBlock:
resetMetricsWithCompletionBlock:
resetPayoutForDuetWithCompletionBlock:
resetPayoutWithCompletionBlock:
sbsyncIfSubscribedWithAccount:completionBlock:
sbsyncManuallyWithReason:duration:completionBlock:
sbsyncWithReason:completionBlock:
sendPayoutMetricsWithCompletionBlock:
sendSummaryMetricsWithCompletionBlock:
setupWithReason:
showingUpsellDialog
showOcelotUpsellForItemID:relaunchOptions:
terminateArcadeApps
topAppsForAccount:completionBlock:
refreshAppMetadata
_logOcelotAppLaunchability
_targetBundleIDs
_updateLaunchdWakeupFileForMacOS
_appStoreCacheUpdatedNotificationToken
_backgroundQueue
_cachedSubscribedAccountID
_cachedSubscribedState
_cachedSubscribedStateString
_calloutQueue
_distNotificationQueue
_hardwareFamily
_hardwareModel
_isRetailDemoMode
_osBuild
_sbsyncQueue
_taskQueue
_topAppsQueue
_upsellQueue
contentsOfDirectoryAtPath:error:
fileExistsAtPath:isDirectory:
hasPrefix:
_crashEventsForFile:sinceDate:
initWithContentsOfFile:encoding:error:
_newDateFormatter
objectAtIndexedSubscript:
dateFromString:
setEventType:
setCount:
setDate:
initWithLocaleIdentifier:
setDateFormat:
crashesSinceDate:
_enumerateUpdatesMatchingPredicate:usingBlock:
buyParams
predicateWithProperty:value:comparisonType:
initWithUpdateDictionary:
updateBuyParamsForBundleID:
checkStoreQueue:
getDownloadQueueWithType:completionBlock:
initWithDownloadQueueType:
_dispatchCallbackAsync:
_operationQueue
_dispatchAsync:
requestType
itemIdentifier
skipDownloads
initWithOptions:forClient:
setDetailedResultBlock:
universalItemResponseWithDictionary:
isAppAnalyticsAllowed
initWithString:
setQueuePriority:
_setUsesPrivateCookieStore:
setAllowedRetryCount:
setClientAuditBundleIdentifier:
setITunesStoreRequest:
setTimeoutInterval:
setRequestProperties:
processJobResult:forReason:
storeItemsFromResponseDictionary:
reportAnonymousPings:
checkQueue:clientID:completionBlock:
claimApplicationsWithOptions:clientID:completionBlock:
disableAutomaticDownloadsWithReason:
enableAutomaticDownloadsWithReason:
managedApplicationRequestWithOptions:clientID:completionBlock:
_automaticDownloadsAreDisabled
_callbackQueue
_checkAutomaticDownloadQueueOnEnable
isNullPredicateWithProperty:
activeSessionWithBundleID:andSessionID:
allSessions
orderedSet
propertyValues
launchesWeight
usageWeight
importClusterMappings:error:
lib_coordinatorForAppWithBundleID:withIntent:createIfNotExisting:wasCreated:withError:
lib_cancelOwnedCoordinatorForAppWithBundleID:withError:
lib_appStoreIsOwningClient
lib_setImportance:withError:
lib_appStoreIsResponsibleClientWithError:
coordinatorForAppWithBundleID:withClientID:createIfNotExisting:created:error:
raise:format:
enumerateCoordinatorsWithError:usingBlock:
coordinatorID
lib_coordinatorWithIdentifier:error:
existingCoordinatorForAppWithBundleID:error:
creatorIdentifier
setDeviceSecurityPromise:error:
deviceSecurityPromiseWithError:
setInitialODRAssetPromises:error:
initialODRAssetPromisesWithError:
hasInitialODRAssetPromises
setPlaceholderPromise:error:
placeholderPromiseWithError:
hasPlaceholderPromise
setAppAssetPromise:error:
appAssetPromiseWithError:
setAppAssetPromiseResponsibleClient:error:
appAssetPromiseResponsibleClientWithError:
appAssetPromiseHasBegunFulfillment:error:
hasAppAssetPromise
isComplete
setInstallOptions:error:
hasInstallOptions
tagWithCoordinatorID:bundleID:
cancelForReason:client:error:
_lib_userPresentableErrorForFailure:alertUser:allowHardFail:underlyingError:
setPreparationPromise:withError:
initWithName:client:diskSpaceNeeded:
setComplete:
dictionaryWithCapacity:
setUserDataPromise:error:
userDataPromiseWithError:
userDataRestoreShouldBegin:
hasUserDataPromise
initWithName:client:streamingZipOptions:archiveSize:diskSpaceNeeded:
setTargetGizmoPairingID:error:
setImportance:error:
importanceWithError:
lib_coordinatorIntent
lib_expectsDeviceSecurityPromise
lib_expectsInitialODRPromises
lib_expectsPlaceholderPromise
lib_hasAppAssetPromise
lib_hasCompletedPlaceholder
lib_hasInitialODRAssetPromises
lib_hasInstallOptions
lib_tag
lib_addFeedbackPromiseWithError:
lib_completeInitialODRPromisesWithError:
lib_completeUserDataPromiseWithError:
lib_establishDeviceSecurityPromiseWithError:
lib_failWithReason:withError:
lib_satisfyDeviceSecurityPromiseWithError:
lib_setGizmoPairingID:withError:
lib_setAppStoreAsDRIWithError:
lib_setInitialODRAssetPromises:withError:
lib_setInstallOptions:withError:
lib_setPlaceholderPromise:error:
lib_coordinatorForAppWithBundleID:withIntent:importance:createIfNotExisting:withError:
lib_coordinatorWithTag:error:
lib_userPresentableErrorForFailure:alertUser:allowHardFail:
isEqualToTag:
_coordinatorID
initWithService:
addDelegate:queue:
devices
setTarget:
setSelector:
_sendMessage:toDevice:expectsReply:withReplyHandler:
sendMessage:toDevice:
_handleErrorForIdentifier:error:
isResponse
incomingResponseIdentifier
_handleReplyForIdentifier:protobuf:fromID:
outgoingResponseIdentifier
_handleRequestWithIdentifier:protobuf:fromID:
sendProtobuf:toDestinations:priority:options:identifier:error:
target
selector
methodSignatureForSelector:
invocationWithMethodSignature:
setArgument:atIndex:
retainArguments
invokeWithTarget:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendProtobof:ofType:toDevice:
sendProtobuf:ofType:toDevice:withReplyHandler:
_service
_queuedMessages
_messageHandlers
cancelAllTasks
waitUntilAllTasksAreFinished
_maintenanceQueue
clientID
bundleIDs
lib_isOpenable
initWithBundleIDs:
_setResponse:
_validateAndResetDigestError:
_hashData:
subdataWithRange:
initWithDigest:type:
bytesProcessed
_hashDigest
_index
_bytesProcessed
_bytesValidated
queueForQualityOfService:
addTask:waitUntilFinished:
_descriptionForQualityOfService:
_setName:
_setQualityOfService:
_queue
migrationType
performMigration:
initWithProxy:error:
_manifestWithContentsOfURL:error:
attributesOfItemAtPath:error:
fileModificationDate
_manifestURLForProxy:error:
initWithContentsOfURL:error:
URLByAppendingPathExtension:
URLForResource:withExtension:
_manifestWithData:error:
_manifestWithDictionary:error:
setWithObject:
_manifestURLForBundle:error:
initWithBundleID:error:
assetPackIDsForTag:
tags
lastModified
_lastModified
aim_eventWithPropertyValues:
memoryEntityForPersistentID:withProperties:usingConnection:
_initWithInstall:
_recordBusinessMetrics
_recordEngineeringMetrics
_writeReceipt
writeReceipt:forBundleID:withStyle:error:
setNeedsAuthentication:
setBundleIdentifier:
setAuthenticationPromptStyle:
setSkipAttribution:
setReceiptFlags:
setResultsBlock:
addOperations:waitUntilFinished:
operationForInstallID:inSession:
_install
_restoreType
_sourceType
_updateType
_discardRequestPropertiesForTask:
resultFromResult:error:
_dequeueRequestPropertiesForTask:
_processResponseDictionary:withRequestProperties:
importKeybagWithData:error:
_importKeyBagFromDictionary:
discardRequestPropertiesForTask:
registerRequestProperties:forTask:
_messageForProtectionSpace:
_titleForProtectionSpace:
proposedCredential
string
bundleWithPath:
receivesCredentialSecurely
localizedMessage
setLocalizedMessage:
localizedTitle
setLocalizedTitle:
setUser:
_challenge
_localizedMessage
_localizedTitle
_user
_initWithProgressCache:
_refreshSystemAppMapping
_handleAppRegisteredNotification:
_handleAppUnregisteredNotification:
_createAppFromProxy:
lib_extensionType:
_getAppsOfType:matchingPredicate:usingBlock:
_createAppFromProxy:isPlaceholder:
lib_isArcadeOpenable
lib_isFamilyShared
lib_isOcelot
_updateBuyParamsForBundleID:
setUpdateBuyParams:
lib_extensionTypes
setExtensions:
evaluateWithObject:
_enumerateApplicationsOfType:usingBlock:
tcr_unsignedLongLong
applicationsDidInstall:
applicationsDidUninstall:
_markMatchingUpdateAsInstalled:
_planner
_progressCache
_systemAppMappingByBundleID
_systemAppMappingByItemID
_sessionWithClientInfo:
responseDecoder
setResponseDecoder:
tcr_dictionaryEnumerator
_segmentFromString:
initWithDictionary:forAppAdamID:segment:
tcr_numberEnumerator
entitlementsForSegment:
consumedIntroOfferFamilyIds
addMessages:
setEnvironment:
setToken:
messagesType
hasEnvironment
hasToken
clearMessages
messagesCount
messagesAtIndex:
environment
token
messages
setMessages:
_environment
_messages
_token
_importFromDictionary:
rawUpdateDictionary
_buyParams:
_parentalControlsName:
_externalVersionIdentifier:
_parentalControlsRank:
setDateStyle:
setTimeStyle:
_appsAppleDictionary:
installDate
isBackground
isPerDevice
parentalControlsName
setOffloaded:
setBackground:
setInstallDate:
setMetricsData:
setPerDevice:
setUpdateState:
releaseDate
_evid
_parentalControlsRank
_releaseDate
initWithFormat:arguments:
_runPendingCancelDownloadOperations
_requestURL:
initWithBag:
_newBaseRequestBodyDictionaryWithAccountID:
asf_sessionForClient:
dataTaskPromiseWithRequest:
defaultItemResponseWithDictionary:
_metadataForStoreItems:
_setItems:
numberOfAvailableDownloads
keybagSyncData:transactionType:outError:
base64EncodedStringWithOptions:
automaticDownloadsURL
pendingAppsURL
cancelDownloadURL
storeTransactionID
capabilities
downloadQueueType
storeItems
storeCorrelationID
_numberOfAvailableDownloads
_downloadQueueType
_items
_storeItems
_storeCorrelationID
setUrlKnownToBeTrusted:
setHTTPContentType:
requestByEncodingRequest:parameters:
_collectionChance
insertEventIntoDatabase:
_validateAssetsForHashURL:
_enumerateURLs:usingBlock:
_removeItemAtURL:withDescription:
stringByDeletingPathExtension
pathExtension
_validateMetadataURL:matchesContents:
_validateAssetPackURL:
eventSubtype
storeCohortMetadata
deviceIdentifierForVendor
setCohort:
setDeviceVendorID:
setEventSubtype:
setEventTime:
dateWithTimeIntervalSince1970:
externalTypeForEventType:
externalSubtypeForEventType:
databaseEntityClass
_mutableForegroundEvents
_temporaryAccountID
dataForRequestWithError:
contentType
initWithDataProvider:URL:
_dataProvider
defaultSessionConfiguration
set_sourceApplicationBundleIdentifier:
lib_daemonProcessInfo
ams_configureWithProcessInfo:bag:
initWithConfiguration:delegate:delegateQueue:
_subscriptionStatusReturningError:
_subscriptionStatusForAccountID:dictionary:returningError:
_newBaseRequestBodyDictionaryWithError:
timeout
resultWithTimeout:error:
subscriptionDuration
setValue:forHTTPHeaderField:
urlSession
initWithBase64EncodedString:options:
_importSubscriptionKeyBagData:accountID:logKey:subscriptionStatus:returningError:
sbsyncDataForAccountID:sbsyncType:logKey:returningError:
sbsyncProductionURL
importSubscriptionKeyBagData:subscriptionStatus:returningError:
sbsyncDataForAccountID:sbsyncType:returningError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
setTimeout:
subscriptionStatus
setUrlSession:
_displayingDialog
_syncType
_initialSubscriptionStatus
_timeout
_subscriptionStatus
_subscriptionDuration
_startTime
_urlSession
_requestReceiptDataForApplication:error:
handleAuthenticateRequest:resultHandler:
isAppleSigned
currentProcess
setAccountMediaType:
accountMediaType
ams_sharedAccountStoreForMediaType:
initWithAccount:options:
_finishWithReceiptData:error:
bundlePath
initWithReceiptData:bundleURL:
receiptWithData:
sandboxBag
_URLSession
_URLRequestEncoder
createAppReceiptURL
_requestBodyForApplication:
fetchFamilyAccountIDsSuppressDialogs:
ams_storefront
ams_secureTokenForAccount:
serialNumber
receiptFlags
receiptFromBundleAtPath:
isVPPLicensed
isRevoked
storeExternalVersionID
ams_localiTunesAccount
attributeToAppStore
initWithConfiguration:
handleDialogRequest:resultHandler:
setAttributeToAppStore:
receipt
_attributeToAppStore
_app
_receiptFlags
_receipt
_handleAccountStoreDidChangeNotification:
_cachedAccountIdForSegment:
_removeCachedSubscriptionEntitlementsForSegment:
_verifyAccountForCachedSubscriptionEntitlementsForSegment:notifyInternal:
unregisterConsumerForActionType:
_cachedSubscriptionEntitlementsResponseForSegment:expired:
_logKeyForSegment:
processInfo
_getSubscriptionEntitlementsResponseWithToken:forSegment:ignoreCaches:notifyInternal:withResultHandler:
_markCachedSubscriptionEntitlementsAsExpiredForSegment:
activeAccount
_setCachedSubscriptionEntitlementsDictionary:segment:notifyInternal:
setAdPlatformsArcadeStatusConditionForceSet:updateCacheIfExpired:
initWithUUIDString:
lastArcadeStatusConditionSetDate
arcadeSubscriptionGroupIdentifier
adPlatformsArcadeStatusCondition
familyID
expiryDate
setLastArcadeStatusConditionSetDate:
setStatusCondition:completionHandler:
clearStatusCondition:completionHandler:
markCachedSubscriptionEntitlementsAsExpiredForSegment:
_cachedSubscriptionEntitlementsDictionaryForSegment:
_cachedSubscriptionEntitlementsPathForSegment:
dataWithContentsOfFile:
subscriptionEntitlementsRefreshIntervalInSeconds
isFsEntitlementsCompleteForBoot
initWithRequestToken:
setAllowPromptForAuth:
setSegment:
setCachedSubscriptionEntitlements:forAccountID:segment:notifyInternal:
markFsEntitlementsCompleteForBoot
writeToFile:atomically:
_notifyChangeToSegment:notifyInternal:
appStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getCachedSubscriptionEntitlementsForSegment:withToken:withResultHandler:
_segementLogName:
_lastAccountID
setEntity:
setRequestEncoding:
setMescalType:
contentTypeHeaderValue
acceptHeaderValue
ephemeralSessionConfiguration
localizedDescription
localizedFailureReason
initWithURL:resolvingAgainstBaseURL:
attemptCount
_useOverride:
testFlightVisualFeedbackOverrides
taskWithEntity:
_entity
ownsCheckURL
lib_URLByAppendingQueryDictionary:
outputDictionary
_bundleIDs
_outputDictionary
_dialogRequestWithTitle:message:
descriptionBlock
_createTapToRadarURLWithTitle:description:
openURL:configuration:completionHandler:
setHost:
initWithName:value:
actionWithTitle:style:
setIdentifier:
addButtonAction:
setDefaultAction:
supportsRequestFlow
initWithTitle:message:
presentRequestUsingSystemDialog
setDescriptionBlock:
_title
_descriptionBlock
addExternalIDStrings:
externalIDStringsType
clearExternalIDStrings
externalIDStringsCount
externalIDStringsAtIndex:
setHasError:
hasError
externalIDStrings
setExternalIDStrings:
_externalIDStrings
_has
_newOperationForClient:withOptions:
receiveResponse:
initForSpaceReduction:
initWithSpaceReduction:
spaceReduction
preallocatedFiles
setPreallocatedFiles:
_spaceReduction
_preallocatedFiles
_initWithReceiptData:
bundleWithURL:
receiptType
receiptData
absoluteURL
_writeReceipt:toURL:error:
_writeReceipt:toBundleURL:error:
URLByAppendingPathComponent:isDirectory:
applicationProxyForBundleURL:
isValid
_receiptURLForContainerURL:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
initWithReceiptData:absoluteURL:
initWithReceiptData:bundleIdentifier:
_sandbox
_absoluteURL
_bundleIdentifier
_bundleURL
_receiptData
setBetaExternalVersionID:
setFailureReason:
setSuccessfulInstall:
keepAliveWithFormat:
applicationIsInstalled:
_launchOptionsDictionaryForURLString:
sharedService
openApplication:options:withResult:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
bundleProxyForIdentifier:
sequenceNumber
cacheGUID
failedInstallTaskForBundleID:betaEVID:andError:
successfulInstallTaskWithProxy:
betaExternalVersionID
failureReason
successfulInstall
_successfulInstall
_betaExternalVersionID
_failureReason
initWithInstallID:usingDictionary:
lib_signpostId
strongToStrongObjectsMapTable
installID
recordInstallInfo:
removeAllInstallInfo
removeInstallInfo:
installInfoForInstallID:
assetPromise
setAssetPromise:
coordinator
setCoordinator:
downloadEvent
setDownloadEvent:
downloadProgress
setDownloadProgress:
setLogKey:
operation
setOperation:
packageID
setPackageID:
installEvent
setInstallEvent:
signpostID
setSignpostID:
_coordinator
_downloadEvent
_downloadProgress
_operation
_packageID
_installEvent
_signpostID
_installTypeIsDowngrade:
_handleDemotedApplication:
_handleInstalledApplication:
_handleUninstalledApplication:
persistedDataPath
initWithDatabasePath:
initWithConnectionOptions:
systemDatabase
_userDatabase
_systemDatabase
_startListener
_allEntitlements
_connection:hasEntitlement:
interface
_disconnectClient:
setListener:
listener
_listener
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
configuration
_obliterateAllBackgroundSessionsWithCompletionHandler:
copyRequestProperties
setRequest:
setProperties:
requestUUID
setSignpostId:
expectedContentLength
progressWithTotalUnitCount:
setProgress:
signpostId
task
addErrorBlock:
_prepareDataConsumerUsingTaskInfo:
setPromise:
taskInfoForTask:
countOfBytesReceived
requestOffset
countOfBytesExpectedToReceive
progress
completedUnitCount
setCompletedUnitCount:
properties
dataConsumer
consumeData:withCompletionHandler:
lib_shortDescription
setBytesReceived:
asset_statusCode
asset_cdnUUID
currentRequest
asset_rangeOffset
prepareWithCompletionHandler:
truncateWithCompletionHandler:
ignoreAssetCache
setIgnoreAssetCache:
action
_reportMetricsForTaskInfo:withCompletionError:
_finishPromiseUsingTaskInfo:
finishWithCompletionHandler:
_retryTaskUsingTaskInfo:
suspendWithCompletionHandler:
transactionMetrics
lib_responseInterval
countOfResponseBodyBytesReceived
duration
setMetrics:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
allowsAuthentication
initWithAuthenticationChallenge:
dialogForAuthenticationChallenge:
textfieldValues
user
credentialWithUser:password:persistence:
promise
isFinished
bytesReceived
finishWithResult:
isCancelled
removeTaskInfo:
initWithTask:metrics:
session
setSession:
shouldCollectMetricsForContext:
initWithContext:
metricsContainerId
lib_sharedInstanceWithContainerId:
enqueueEvent:
resetWithCompletionHandler:
rangeOffset
setRequestOffset:
_prepareRequestUsingTaskInfo:
locateAssetCache
_setRequiresShortConnectionTimeout:
_startTaskUsingTaskInfo:withRequest:
_CFURLRequest
_initWithCFURLRequest:
HTTPUserAgent
lib_defaultUserAgent
setHTTPUserAgent:
asset_setRangeOffset:
requestReason
asset_backgroundSessionConfigurationUsingProperties:
identifier
dataTaskWithRequest:
recordTaskInfo:forTask:
taskPriority
set_priority:
bytesPerSecondLimit
set_bytesPerSecondLimit:
loadingPriority
set_loadingPriority:
qosClass
obliterateBackgroundSessionsAndHandleEventStream
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
_delegateQueue
_session
_sessions
refreshIAPsForActiveAccountWithToken:completionHandler:
_initWithVersion:
scanString:intoString:
isEqualToVersion:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
alphanumericCharacterSet
formUnionWithCharacterSet:
invertedSet
componentsSeparatedByCharactersInSet:
isAbsolutePath
lib_accountDSIDValue
lib_volumePath
verifyData:error:
write:maxLength:
streamError
_updateProgress:
finalAndVerifyError:
initWithChunkedDigest:
fileHandleForUpdatingAtPath:
readDataUpToLength:error:
bytesValidated
truncateAtOffset:error:
closeAndReturnError:
outputStreamToFileAtPath:append:
open
digest
expectedBytes
issueProgress
setIssueProgress:
_outputStream
_savedBytes
_verifier
_percentComplete
_issueProgress
_digest
_expectedBytes
_transportUpdateHistoryAtDatabasePath:fromTable:
dataForColumnName:
initWithDatabaseEntity:properties:
bestPackageOnConnection:withProperties:
_initWithInstall:package:
coordinatorBuilderWithError:
buildCoordinatorWithError:
failInstallID:withError:
_shouldCancelInstallationWithError:
cancelInstallID:withCoordinator:error:
failInstallID:withCoordinator:error:
initWithCoordinator:error:
fetchPromiseID:withError:
finishInstallID:withCoordinator:
continueInstallID:withCoordinator:
runPreflightWithResponse
applicationProxyForItemID:
autoDownloadsEnabled
isAutomaticAppDownloadsAllowed
isOnDeviceAppInstallationAllowed
_shouldCancelAsDuplicate
_shouldCancelAutomaticInstallation
_shouldCancel32BitApp
initWithInstall:session:
preflightResponse
_installInfo
_package
_response
_initWithInstallID:result:coordinator:error:
result
_result
_initWithRevision:forAccount:client:logUUID:
configureClientWithConnection:
odrEntitlementName
odrServiceName
initWithParentSupervisor:
_parentSupervisor
allowsCellularAccess
setAllowsCellularAccess:
requestWithURL:
initWithRequest:properties:
requestWithURL:cachePolicy:timeoutInterval:
mutableCopyWithZone:
initWithURL:cachePolicy:timeoutInterval:
_properties
propertyForKey:inRequest:
numberWithUnsignedLongLong:
setProperty:forKey:inRequest:
removePropertyForKey:inRequest:
arcadeLaunchTimeoutIntervalSeconds
_showTimeoutDialogWithRetryTimeout:
arcadeRepairTimeout
_handleRecoveryWithTimeout:retryTimeout:
setAuthenticationType:
setCanMakeAccountActive:
performAuthentication
repair:wantsToRelaunchApplication:
forceSbsyncForArcadeRepairs
_showUpsell
relaunchOptions
_showAllOcelotApps:
_showOKDialogWithTitle:message:
shouldAttemptToRepairApplication:options:logUUID:
_fairplayStatusForApplication:options:
repairApplication:error:
repairedBundleIDs
initWithApplication:options:
setRepairedBundleIDs:
_handleAuthenication
_handleSbsyncAndRepairWithTimeout:retryTimeout:
_handleAppRemovedFromProgram
_switchUserFromUserName:forAccount:
_showLoginDialog
_showOfflineDialog
_showOfflineExpiredSubscriptionDialog
_repairedBundleIDs
assets
lib_categorizeItemsUsingBlock:
thinnedAssets
_handleAnalyticsUsageSwitchChange:
_flushMetricsWithReason:completion:
_getAppEventsWithCompletionBlock:
_recordLaunches
_postMetrics
_resetWithReason:resetActivity:
cohort
deviceVendorID
setAppSessionReporterKey:
setPlatform:
setTimeRangeStart:
setTimeRangeEnd:
isStoreOriginated
isProfileValidated
_includeLaunches
_allAppEvents:
crossfireIncludeLaunches
_shouldEnableCrossfireMetricsForSession
_resetDB
getAppEventsWithCompletionBlock:
recordMetricsWithCompletionBlock:
sendMetricsWithCompletionBlock:
shouldPostCrossfireMetrics
_createAggregateMetricsEventsForEventType:events:context:
_handleMacAnalyticsUsageSwitchChange:
_collectingMetrics
_platform
deviceForFromID:
activePairedDevice
deviceForDestinationID:
deviceForFromID:usingService:
deviceForPairingID:
updateDevicesWithArray:
_devices
_init
removeObserver:
currentRequestToken
taskWithXPCAppMetadata:requestToken:
processedExternalIDs
_installEnterpriseApps:withReplyHandler:requestToken:
_installSystemApps:withReplyHandler:requestToken:
_installWatchApps:onPairedDevice:withReplyHandler:requestToken:
watchRequestThrottle
_requestThrottle
taskWithXPCAppMetadata:forDevice:requestToken:requestThrottle:
installAppReviewApps:withReplyHandler:
installEnterpriseApps:onPairedDevice:withReplyHandler:
installScreenSyncApps:withReplyHandler:
installSystemApps:onPairedDevice:withReplyHandler:
installTestFlightApps:onPairedDevice:withReplyHandler:
installWatchApps:onPairedDevice:withReplyHandler:
_bagChangedNotification
initWithStatement:
sqlite3_stmt
executeWithError:usingBlock:
reset
int64ForColumnIndex:
numberForColumnIndex:
bindArray:atPosition:
bindData:atPosition:
bindDataCopy:atPosition:
bindDate:atPosition:
bindDictionary:atPosition:
bindDouble:atPosition:
bindFloat:atPosition:
bindNullAtPosition:
bindStringCopy:atPosition:
bindURL:atPosition:
clearBindings
firstNumberValue
_statement
initWithMigratorType:
purgeUnusedBetaVersions
copyConfiguration
migratorType
performMigration
setHasApplicationAdamId:
hasApplicationAdamId
bundleId
hasBundleId
hasCfBundleShortVersionString
hasCfBundleVersion
setHasUptimeMillis:
hasUptimeMillis
copyTo:
applicationAdamId
cfBundleShortVersionString
cfBundleVersion
uptimeMillis
_applicationAdamId
_uptimeMillis
_bundleId
_cfBundleShortVersionString
_cfBundleVersion
_handleBagChangedNotification:
valuePromise
initWithBagValue:bagKey:
_bagValue
_bagKey
_isMemoized
_memoizedValue
stop
stringFromByteCount:
average
floatValue
takeSample
currentStatsString
_bytesFormatter
initWithDictionary:assetType:
_parseAssetDictionary:
variantDescriptor
isApplicableUpdateWithInstalledItemContext:
assetType
priorVariantIdentifiers
priorVersionEvid
_locallyCacheable
_zipStreamable
_assetType
_assetURL
_bytesTotal
_clearHashes
_dpInfo
_expectedDiskspace
_initialODRSize
_md5
_numberOfBytesToHash
_priorVariantIdentifiers
_priorVersionEvid
_sinf
_variantDescriptor
hashArrayData
intValue
dataForSinfDataKey:
_info
_authenticateWithCompletionHandler:
hashedDescription
_silentAuthenticateUsingAMS
silentAuthOnly
initWithAccountIdentifier:
setAllowsSilentAuthentication:
initWithAuthenticationContext:
authenticatedAccount
startWithAuthenticateResponseBlock:
initWithAccount:
authenticateReason
setAuthenticateReason:
dialogDictionary
setDialogDictionary:
setSilentAuthOnly:
_silentAuthOnly
_authenticateReason
_dialogDictionary
criteria
descriptiveName
isEnabled
registeredName
deadline
processDictionary:error:
initWithManifestURL:
_isExternalURL:
_isSecureURL:
_runWithURLRequest:
_showError:
thinnedAssetsCategorized
reverseObjectEnumerator
variantDescriptors
findCompatibleDescriptorFromArray:
variantIDs
lib_firstObjectPassingTest:
assetsCategorized
localizedName
initWithDomain:code:userInfo:
absoluteString
kind
_enterpriseInstallationAllowedForBundleID:withName:error:
shouldPostMetrics
subtitle
hasMessagesExtension
setHasMessagesExtension:
_enterpriseInstallationURL:withDigest:
setEnterpriseInstallURL:
launchProhibited
setLaunchProhibited:
_determineCanonicalAssetsForExternalItem:matchedVariantDescriptor:
canonicalIdentifier
host
lib_databaseRepresentationError:
initWithPropertyValues:
_newPackageForExternalAssets:withVariantDescriptor:
MD5s
MD5Size
platformIdentifier
_isSupportedPlatformIdentifier:
_newInstallForItem:manifestURL:manifestDigest:withError:
initWithDigestType:
updateWithData:
finalAndCompute
containsItemsForPlatform:
_requestManifestInstallationOnActivePairedWatch
_newInstallsForUPPManifest:withError:
shouldHideUserPrompts
_showConfirmationPromptForInstalls:response:
_importInstalls:
initWithURL:logKey:
contentLength
importInstalls:
scheme
caseInsensitiveCompare:
port
endpointWithHostname:port:
initWithEndpoint:parameters:
isLocal
externalManifestSkipHTTPSCheck
_handleResponse:withData:
finishTasksAndInvalidate
dataTaskWithRequest:completionHandler:
requestForConfirmationWithManifestURL:firstName:totalCount:
notificationClient
deliverDialogRequest:withResultHandler:
requestForError:withManifestURL:
initWithManifestURL:requestToken:shouldHideUserPrompts:
setClientID:
manifestDigest
setManifestDigest:
setShouldHideUserPrompts:
_downloadIDs
_manifestURL
_receivedDigest
_shouldHideUserPrompts
_clientID
_manifestDigest
askToShowMessageWithReplyBlock:
updatedTransactions:
removedTransactions:
downloadAdded:
downloadStatusChanged:
downloadRemoved:
storefrontChanged:
shouldContinueTransaction:withNewStorefront:replyBlock:
checkForMessages
checkServerQueueForClient:reply:
checkServerQueueForQueue:withClient:
requestProductReview
requestProductsWithIdentifiers:client:replyBlock:
addPaymentToQueue:withInfo:client:
finishPaymentWithIdentifier:
finishPaymentWithIdentifier:reply:
processPayment:forClient:reply:
restoreCompletedTransactionsToQueue:forUsername:withClient:replyBlock:
restoreCompletedTransactionsForUsername:client:reply:
addDownloadWithID:
cancelDownloadWithID:
pauseDownloadWithID:
resumeDownloadWithID:
deleteContentForProductID:
renewReceiptWithOptions:client:replyBlock:
storefrontWithReplyBlock:
registerArcadeAppWithRandomFromLib:randomFromLibLength:resultHandler:
arcadeSubscriptionStatusWithNonce:resultHandler:
repairArcadeApp
initWithRemoteObject:client:
addDeletedStorageID:
_deleteAssetPacksMatchingPredicate:
_deleteTagsMatchingPredicate:
bundleKey
downloadSize
sourceURL
uniqueKey
updateEntity:
addDeletedAssetPackURL:
updateUsingAssetPack:verifyContentHashes:
_assetPackEntityForBundleID:bundleKey:
setValuesWithDictionary:
updateManifest:forApplication:verifyContentHashes:
updateBundleTagManifest:forApplication:
doesNotContainPredicateWithProperty:values:
allAssetPackIDs
_manifestEntityForManifest:
_existingStorageIDForBundleID:
isLocalCache
source
versionToken
allAssetPacks
_assetPackEntityForAssetPack:
isOnDevice
applicationBundleID
assetPacksForApplication:
setAssetPacks:
deleteAssetDownload:
deleteManifestForApplication:
importAssetDownload:
markAssetDownloadAsPaused:download:
purgeAllAssetPacksForApplication:withReason:
purgeAllTagsForApplication:
resetStateForApplication:
updateAsset:
updateAssetDownloadSizeForDownload:
updateManifest:bundleTagManifest:forApplication:verifyContentHashes:
_changeset
reloadFromDatabaseEntity:properties:
getValuesForProperties:
addEntriesFromDictionary:
setValues:forProperties:count:
setValues:forExternalProperties:count:
externalPropertyValues
setExternalValuesWithDictionary:
setValue:forExternalProperty:
valueForExternalProperty:
_databaseID
_propertyValues
_externalPropertyValues
urlValueForProperty:
memoryEntityForPersistentID:usingConnection:
initWithDomain:
_registerForSettingsChangeNotifications
_activeDSID
_setActiveAccountPreferenceValue:forKey:isTopLevel:
_sharedUserDefaultKeys
synchronizeUserDefaultsDomain:keys:
_getActiveAccountPreferenceValueForKey:withDefaultValue:isTopLevel:
dictionaryForKey:
_postSettingsChangedExternallyNotification
_handleSettingsChangedExternallyNotification
_synchronizeNanoKey:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
addBagKey:valueType:defaultValue:
bagForProfile:profileVersion:
synchronizeNanoDomain:keys:
activeDSID
setActiveDSID:
getActiveAccountPreferenceValueForKey:withDefaultValue:
setActiveAccountPreferenceValue:forKey:
_activeAccount
_settingsBag
_synchronizeSharedSettings
_domainAccessor
_npsManager
productIdentifiers
sortedArrayUsingSelector:
useSandbox
productOffersBatchSize
appendFormat:
_requestBatches:error:
standardQueryWithAuthentication:
autoupdatingCurrentLocale
localeIdentifier
ams_storefrontForMediaType:
URLRequestEncoder
URLSession
_queryDictionary
productOffersURL
_parseResponse:error:
initWithProductIdentifiers:client:
invalidIdentifiers
products
_productIdentifiers
_invalidIdentifiers
_products
setDatabaseStore:
_continueFeedbackSubmissionForFeedbackEntity:
state
_fetchImageUploadURLsForFeedbackEntity:
_uploadImagesForFeedbackEntity:
_submitFeedbackEntity:
imagesData
signedURLs
pendingUploadWithData:andURL:
setPendingImageUploads:
setState:
_markHasSharedFeedbackForEntity:
_updateEntity:shouldContinue:
setHasSharedImageFeedback:forVersion:
deleteFeedbackEntityForPID:
setAttemptCount:
saveFeedbackMemoryEntity:
pendingImageUploads
taskWithPendingImageUpload:andEntity:
successfulUpload
addSuccessfulImageUpload:
taskWithDatabaseStore:andEntity:
databaseStore
_dataStore
storeAccountName
storeAccountID
cancelIfDuplicate
tcr_url
thumbnailURL
legacy_metadataWithActivity:
ams_iTunesAccountWithUsername:
legacy_packageForAsset:
_recordSample
samplingInterval
_samples
_samplingInterval
initForClient:withOptions:
response
_options
setCacheSizeWithNumberOfKilobytes:
_encryptDatabase:
cacheSize
setCacheSize:
applyToDatabase:
setCacheSizeWithNumberOfDatabasePages:
setEncryptionKeyId:
protectionType
_readOnly
_cacheSize
_encryptionKeyId
_protectionType
_addFailedTestFlightInstallIfNecessaryForInstallValues:error:changeset:
setInstallPhase:
storeMetadata
setStoreMetadata:
_handlePingMessage:fromDevice:
addHandler:selector:forMessage:
stringWithString:
appendString:
activeInstalls
autoUpdateReloadIntervalSeconds
setUuid:
uuid
sendMessage:toDevice:withReplyHandler:
initWithAccountID:
setDisplaysDialogs:
networkQueue
initWithItemName:andNetworkLimit:
presentSystemDialogWithCount:
initWithItemName:
_activeInstallationDictionary
sendReply:toDevice:
activeClientsWithReplyHandler:
pingWithReplyHandler:
sendCommandWithDetailedReplyHandler:handler:
sendCommandWithReplyHandler:handler:
inAppPendingQueueCountURL
removeObjectAtIndex:
inAppPendingQueueURL
initWithClient:
transactions
_transactions
stringByDeletingLastPathComponent
attributesOfFileSystemForPath:error:
availableDiskSpaceAtPath:
recoverableDiskSpaceAtPath:
_completedUnitCount
_totalUnitCount
additionalHeaders
userAgentForProcessInfo:
setAdditionalHeaders:
logCode
setProperty:forKey:
propertyForKey:
forceDrmMode
suppressDialogs
isDiscretionary
stringByReplacingOccurrencesOfString:withString:
buyParamsWithString:
postMetrics
setBuyParams:
setPurchaseEvent:
companionBundleID
setCompanionBundleID:
itemResponse
setItemResponse:
installedExternalVersionID
setInstalledExternalVersionID:
metricsType
setMetricsType:
originalPurchaserDSID
setOriginalPurchaserDSID:
preflightURL
setPreflightURL:
purchaseEvent
referrerName
setReferrerName:
referrerURL
setReferrerURL:
refreshInstallID
discoveredUpdate
setDiscoveredUpdate:
setDiscretionary:
generatedVendorID
setGeneratedVendorID:
setMachineBased:
setPostMetrics:
purchaseOnly
setPurchaseOnly:
purchaseState
setPurchaseState:
purchaseType
setPurchaseType:
isRemoteInstall
setRemoteInstall:
requireUniversal
setRequireUniversal:
setSuppressDialogs:
suppressEvaluatorDialogs
setSuppressEvaluatorDialogs:
updateType
setUpdateType:
watchType
setWatchType:
initWithQueueType:forReason:usingPurchaseInfo:purchaseBatch:
_installedApplicationForStoreItem:
_purchaseInfoForStoreItem:withAccount:installedApplication:
failPurchaseWithError:usingPurchaseInfo:
checkQueueForPurchaseUsingPurchaseInfo:purchaseBatch:
queueType
purchaseBatch
purchaseInfo
addedApps
setAddedApps:
removedApps
setRemovedApps:
isLast
setIsLast:
_isLast
_addedApps
_removedApps
initWithCondition:
_continueParsing
lockWhenCondition:
unlockWithCondition:
condition
setContentRatingFlags:
setDatePurchased:
setDeveloperName:
setFamilyShared:
setFirstParty:
setHidden:
setHiddenFromSpringboard:
setIconURLString:
setIs32BitOnly:
setIsPreorder:
setLongTitle:
setOvalIconURLString:
setPreflightPackageURL:
setProductURL:
setRedownloadParams:
setSupportsIPad:
setSupportsIPhone:
setPurchaseToken:
_incrementBatchCount
setLockerItemID:
setGenreID:
setGenreName:
setWatchAppDeliveredIniOSApp:
setWatchAppRunsIndependently:
setWatchOnly:
setSupportsLayeredImage:
setHasP3:
setCircularIconURLString:
setTitle:
setRequiredCapabilities:
initWithResponseData:
nextBatch
_currentItem
_errorParsingItem
_currentBatchAdded
_currentBatchRemoved
_currentRequiredCapabilities
_currentContainerCode
_batchSize
_currentBatchCount
_parsingLock
_parsingQueue
_doneParsing
manifest
manifestType
legacy_installForActivity:error:
resultWithInvalidActivity:bundleID:
_createCoordinatorForInstall:error:
importInstall:error:
userInitiateInstallID:
resultWithExistingActivity:bundleID:
enumerateActivitiesUsingBlock:
initWithResults:
dialogType
preferredDialog:
numberWithLong:
_presentSystemDialogType:
presentSystemDialog:
_dialogCount
_dialogQueue
legacyDatabasePath
canBeginTransportation
_allIDsWithDownloadedAssetPacksUsingConnection:
applicationForBundleID:
copyBundleTagManifestWithError:
_importDownloadedAssetPacksWithManifestID:andBundleID:usingConnection:andDatabaseStore:
_importManifestForBundleID:usingConnection:andDatabaseStore:
_importBundleTagManifest:withApplication:andDatabaseStore:
performTransportationUsingBlock:
endTransporationAndRemoveDatabase
numberForColumnName:
bindInt:atPosition:
dictionaryWithValuesForColumnNames:
_swapKeysInDictionary:usingMapping:
dateWithTimeIntervalSinceReferenceDate:
contentHashFromDictionary:
isOnDeviceAtURL:withValidMetadata:
initWithDictionary:andBundleID:
_importMemoryEntity:usingDatastore:
initWithDictionary:andBundleID:fromSource:
removeValueForProperty:
_metricsData
_registerNotifier
batterySaverWatcherDidChangeState:
_getState
_notifyDelegate
initWithDelegate:
batterySaverEnabled
_updateStatus
_enabled
_notifyQueue
shouldAddKeysToKeyBag
keybagSyncDataWithAccountID:transactionType:error:
uppercaseString
deviceName
fairplayContextWithError:
authorizationToken
_getTokenForAccount:error:
_runAuthorizationWithAuthenticationWithError:
authorizeURL
displaysDialogs
setDialogOptions:
_newBodyDictionary
setAnisetteType:
familyMemberAccountID
clientIdentifierHeader
_performAuthorizationResult:error:
_handleResponse:error:
_main
_relaunchApp
setFamilyMemberAccountID:
allowSilentAuthentication
setAllowSilentAuthentication:
setAuthorizationToken:
setClientIdentifierHeader:
keybagPath
setKeybagPath:
setShouldAddKeysToKeyBag:
userAgent
setUserAgent:
_fairplayContext
_allowSilentAuthentication
_shouldAddKeysToKeyBag
_displaysDialogs
_familyMemberAccountID
_authorizationToken
_clientIdentifierHeader
_keybagPath
_userAgent
_fetchAppProxyForBundleID:error:
_canRescueInstallTypeForBundleID:proxy:error:
_attemptRescueForBundleID:
outputBlock
setOutputBlock:
_outputBlock
serializedData
setUpdateState:usingPurchaseInfo:
finishAppUpdateForBundleID:withUpdateState:
resetUpdateWithBundleID:
_path
initWithDouble:
deleteAllEntities
countOfEntities
noteUpdatesStateChanged:
processUpdate:existingUpdate:forReason:
enumerateObjectsUsingBlock:
_setUpdateState:forBundleID:itemID:withPurchaseID:isUserInitiated:
_logState:forBundleID:
deleteUpdatesInstalledBefore:
handleAppsUninstalled:
mergeAvailableUpdates:withReason:availableCount:notifyChanges:bundleIDs:
recordUpdateDownloadStartTime:andEndTime:forBundleID:
setUpdateState:forBundleID:evid:
setUpdateState:legacyContext:
_fetchManifestForApplication:error:
adamID
isMachineVPP
bundleShortVersion
_requestBodyForApplication:error:
odrURL
responseCorrelationId
isStoreBased
_copyRequestForBetaApplication:
_copyRequestForApplication:
initWithApplication:
setManifest:
_manifest
_forcedUpdates
invalidBuildToolVersions
isEqualToArray:
drmRecovery
_invalidBuildToolVersionsToCheck
_enforcedDRMVersionToCheck
isNotZero
taskWithPendingUpdates:andLogKey:
_appsByAccountMappingForCandidates:
_pendingUpdates
_updates
initWithSinfArray:
_sinfsArrayWithDataKey:
sinfs
initWithSINFs:
initWithSinfData:
firstDataForSinfDataKey:
pinfsArray
sinfForIdentifier:
sinfsArray
isDRMFree
_sinfs
_DRMFree
applicationsDidInstall
setApplicationsDidInstall:
_applicationsDidInstall
_addBackgroundTaskWithRequest:reason:
_cancelBackgroundTaskWithIdentifier:
_addAppUsageRecordDnuMetricsTask:
_addAppClusterMappingRefreshTask:forReset:
_scheduleAppUsageActorIDResetDate:targetPostDate:reason:
_addAppUsageFlushDnuTask:forceReset:
appUsageResetActorIDTargetDate
_appUsagePostsPerDay
_appUsagePostInterval:
_logableDate:
appUsagePostGracePeriodSeconds
appUsageTaskGracePeriodOverride
setAppUsageNextPostTargetDate:
xpcActivityWithDuration:gracePeriod:
initWithBackgroundTaskAgentJob:
setRequestIdentifier:
appClusterMappingRefreshTargetDate
clusterMappingRefreshFrequencySeconds
appClusterMappingRefreshIntervalOverride
setAppClusterMappingRefreshTargetDate:
appUsageFlushDnuIntervalOverride
appUsageFlushIntervalSeconds
appUsageFlushDnuTargetDate
_addAppUsageFlushTask:forceReset:activityName:scheduledDate:refreshInverval:
setAppUsageFlushDnuTargetDate:
xpcMaintenanceActivityWithDuration:allowCellular:allowBattery:
appUsagePostsPerDay
appUsageDailyPostCountOverride
setLastUpdateCheckDate:
initWithTimeInterval:sinceDate:
earlierDate:
appUsageResetActorIDFrequencySeconds
appUsageResetActorIDOverride
setAppUsageResetActorIDTargetDate:
_addObserverForBackgroundTaskWithIdentifierPrefix:withBlock:
requestCheckInWithIdentifier:
_addRecordFavoriteAppsTask:
_addCacheDeleteTask:
addBackgroundTaskWithRequest:reason:
handleWakeWithName:result:
_addUpdateCheckJobWithDate:identifier:allowsCellular:requireScreenSleep:addGracePeriod:reason:
_checkIntervalWithDefault:bagKeys:error:
_nextCheckDateWithInterval:
_removeObserversForBackgroundTaskWithIdentifierPrefix:
_setupEventHandlers
_backgroundTaskObservers
_isRunning
_observerLock
_v3UpdatesEnabled
setStrategy:
setHashValue:
_hashValue
_strategy
widthPixels
setHasWidthPixels:
hasWidthPixels
heightPixels
setHasHeightPixels:
hasHeightPixels
_heightPixels
_widthPixels
performStartup
holdKeepAliveTransaction:whilePerformingBlock:
_run
globalStore
transactionCount
activeTransactions
runUntilIdleExit
beginDate
sessionLength
_lastFlushDate
_active
legacy_setPropertiesWithActivity:
setGenre:
setRatingLabel:
setRatingRank:
isGameCenterEnabled
setGameCenterEnabled:
setIsAutoDownload:
lib_rfc3339String
setPurchasedRedownload:
setReleaseDate:
setIAdConversionDate:
setIAdImpressionDate:
setIAdAttribution:
setDeviceBasedVPP:
_setPromiseUsingSpecification:withError:
_newPromiseUsingDefinition:
failPromiseID:forReason:withError:
applicationUsername
restoreTransactionsURL
setApplicationUsername:
forceAuthentication
setForceAuthentication:
receiptInstallURL
setReceiptInstallURL:
_forceAuthentication
_applicationUsername
_receiptInstallURL
_startDateForAppUsageType:
timeIntervalSince1970
_launchesStartDateForAppUsageType:
_metricsTopic
_recordIntervalStartDateForAppUsageType:
_recordLaunchesIntervalStartDateForAppUsageType:
crossfireLaunchesIntervalStartDate
appUsageLaunchesIntervalStartDate
ocelotSummaryLaunchesIntervalStartDate
ocelotPayoutLaunchesIntervalStartDate
appUsageUseTestTopic
recordCrossfireIntervalStartDate
recordAppUsageIntervalStartDate
recordOcelotSummaryIntervalStartDate
recordOcelotPayoutIntervalStartDate
recordCrossfireLaunchesIntervalStartDate
recordAppUsageLaunchesIntervalStartDate
recordOcelotSummaryLaunchesIntervalStartDate
recordOcelotPayoutLaunchesIntervalStartDate
crossfireIntervalStartDate
appUsageIntervalStartDate
actorID
setActorID:
currentOSVersion
setCurrentOSVersion:
deletedApps
keepAlive
intervalStartDate
offset
setOffset:
setTopic:
addPriorApps
setAddPriorApps:
rescheduleActorIDReset
setRescheduleActorIDReset:
_isTemporary
_shouldResetPayoutDate
_addPriorApps
_rescheduleActorIDReset
_actorID
_appUsageType
_currentOSVersion
_deletedApps
_historyMap
_keepAlive
_intervalStartDate
_launchesStartDate
_minimumRunningTime
_now
_nowDate
_offset
_topic
_containerURL
_createDirectoryInSearchPath:domain:withPathComponent:
_downloadPathForID:
_rootDownloadPath
ensureDirectoryExistsAtPath:
_whitelistForCachedDataPath
cachedDataPathForDomain:
_enforceWhitelist:forPath:
_createDirectoryAtBaseURL:withPathComponent:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setResourceValues:error:
stringWithFileSystemRepresentation:length:
hasSuffix:
libraryPath
cleanupDownloadPathForID:
cleanupDownloadPathsNotMatchingIDs:
persistedDataPathForDomain:
setClientProxy:
auditToken
clientIDForConnection:
requestingAppBundleID
_removeClient:
odr_isRefreshRequired
_refreshManifestFromStoreForApplication:
readyLock
preflightApplication:
_resetStateAndBecomeReady
_clearReadyLock
storageID
assetPacksPath
_issueSandboxExtensionWithRootPath:
URLByResolvingSymlinksInPath
_manifestWithBundle:error:
tagsForApplication:
_tagsAreValid:
initWithProgress:
_assetPacksForTags:
setTotalUnitCount:
becomeCurrentWithPendingUnitCount:
localURL
_pinAssetPack:priority:tagsRequest:completionHandler:
resignCurrent
performResourceAccessBlock:forApplicationBundleID:
setLoadingPriority:
_unpinAssetPack:completionHandler:
_okToPurgeAssetPack:
tagWithName:andBundleID:
assetPacksWithTagNames:forApplication:
effectivePreservationPriority
setEffectivePreservationPriority:
tagsForBundleKey:
setEffectiveAlwaysPreserve:
setReadyLock:
setPurgeable:
setShouldPin:
setTagsRequest:
activeClients
clientForAppBundleID:
hello:
beginODRSessionWithBundleURL:completionHandler:
beginWithBundleURL:completionHandler:
tagStateInBundle:completionHandler:
pinTags:inBundle:priority:completionHandler:
conditionallyPinTags:inBundle:completionHandler:
setLoadingPriority:forTags:inBundle:
unpinTags:inBundle:completionHandler:
okToPurgeAssetPacks:
setPreservationPriority:forTags:inBundle:
setAlwaysPreserved:forTags:inBundle:
clientProxy
bundleRequestToDownloadRequest
setBundleRequestToDownloadRequest:
sandboxExtension
setSandboxExtension:
_clientProxy
_requestingAppBundleID
_bundleRequestToDownloadRequest
_readyLock
_sandboxExtension
adamIds
initWithIAPs:
skipLatestVersionCheck
shouldPerformAutomaticUpdates
initWithItems:account:
targetItems
initWithRestoreAppInstalls:account:
isErrorBadTokenError:
_processBatchFailureItems:error:context:
_processContentRestoreResponse:context:
remainingItemIDs
itemMap
hardFailItem:withError:
softFailItem:withError:
hardFailures
softFailures
successfulItems
lib_deviceIsCapable:
supports32BitOnly
assetFullPackage
sinf
_reportMissingSINFForStoreItem:
itemSucceeded:storeItem:
failedItems
isErrorSoftFail:
initWithRestoreAppInstalls:
setSkipLatestVersionCheck:
_restoreInstalls
_skipLatestVersionCheck
_hardFailures
_softFailures
_successfulItems
setValuesWithStoreItem:
lib_metadataWithStoreItem:
lib_setPropertiesWithAccount:
_itemMap
_remainingItemIDs
_targetItems
initWithFormat:locale:arguments:
stringWithUTF8String:
_initWithBundleURL:
lib_stringByCopyingUTF8StringWithLength:
deviceVendorIdentifier
receiptURL
receiptWithContentsOfFile:
receiptFromBundleAtURL:
opaqueDSIDString
receiptDataString
isDSIDless
initialize
forceSandboxForBundleIdentifier:untilDate:
initWithProcessIdentifier:
initWithBundleURL:
copyWithOverrides:
processID
_appProxy
_customReceiptURL
_requestBundleID
_useSandbox
_processID
_deviceVendorIdentifier
_localizedName
_receiptURL
_storeExternalVersionID
_storeItemID
_configureUsingRequestProperties
_addGUIDToRequestParameters:
_addKBSyncDataToRequestParameters:
requestByEncodingRequest:parameters:error:
initWithEnterpriseApps:isXDCRequest:requestToken:
lib_queryDictionary
hideUserPrompts
_setProcessedExternalIDs:
_apps
_isXDCRequest
_processedExternalIDs
_addDownloadRequest:
sharedStore
assetDownloadsWithBundleID:
_popAssetDownloads:
_deleteDownloadFromScratchDirectory:
assetDownloadsForCoordinatorID:ofType:
manifestForApplication:
assetPackWithBundleKey:
downloadWithAssetPack:andManifest:forApplication:originatingLogKey:
_configureCoordinatorsForDownloadRequests:coordinatorID:withLogKey:
allDownloads
isPaused
deleteDownload:
addSuccessBlock:
_fetchManifestForContext:
_configureDownloadsForContext:
_downloadRequestForKey:
_hasExceededMaxPinnedResources:
_assetExistsAndMatchesDownload:
_completeDownload:withError:
_duplicateDownloadFor:
addDuplicateDownload:
_startTrackingDownload:
expectedDiskUsage
checkAndRequestRequiredSpaceForRequest:
mainBundle
isFileURL
simulateDownloadForEmbeddedAssetWithCompletion:
addTask:withQualityOfService:waitUntilFinished:
setDownloadSize:
_attemptDownload:
destinationPath
contentHashDictionary
performResourceAccessBlock:
downloadPath
requestProperties
_bandwithLimitForDownloadRequest:
setBytesPerSecondLimit:
extractor
initWithExtractor:
setExtractorDelegate:
requestStartDate
setRequestStartDate:
_handleDownloadError:forDownloadRequest:
outOfBandTransferPromise
_missingInitialAssetPacksForApplication:withReason:
_missingPrefetchAssetPacksForApplication:withReason:
_finalizeStateForDownload:
_stopTrackingDownload:
lib_timeElapsedUntilNow
hasRefreshed
_refreshRequest:
allowCellularAccess
maxPinnedODR
totalSizeOfUnpurgeableAssetPacksForApplication:
addTask:withQualityOfService:
setLocalURL:
setLastUsedDate:
pinCount
shouldPin
totalNewPins
setPinCount:
setPurgeReason:
writeMetadata
purgedAssetPacksWithReason:forApplication:
missingInitialAssetPacksForApplication:
missingPrefetchAssetPacksForApplication:
applicationForNotInstalledProxy:
applicationForProxy:
refreshManifestIfNecessaryForAssetPackWithID:andApplication:
setSourceURL:
setHasRefreshed:
addDownloadForRequest:
deleteDownloadForRequest:
addDownloadRequest:
cancelDownloadRequestsForBundleID:andCoordinatorID:
pauseDownloadRequestsForBundleID:andCoordinatorID:
resumeDownloadRequestsForBundleID:andCoordinatorID:
handlePrefetchDownloadsForBundleID:withCoordinatorID:withCompletion:
startDownloadsForInstall:
allCurrentDownloadRequests
currentDownloadRequestForAssetPack:
_cleanupStaleCoordinators
cleanupStaleUpdateTimerIsExpired
_cleanupUpdatesRemovingPurchases:removedApps:
_cleanupUpdatesRemovingPurchases:removedApps:updateCount:removeCount:
lastUpdateCleanupDate
installFailureReason
_activelyInstallingCoordinatorIDs
recordLastUpdateCleanupDate
initWithEntity:
_cancelInstallIDs:
_allInstalledApplicationsStoreIDs
_activelyInstallingBundleIDs
setEntityClass:
setMemoryEntityClass:
setOrderingDirections:
setOrderingProperties:
initOnConnection:descriptor:
cleanupUpdatesForRemovedApps:withCompletion:
cleanupUpdatesFollowingInstallOfApps:withCompletion:
tagStatusForBundle:replyBlock:
purgeAllTagsInBundleWithID:replyBlock:
purgeTagWithName:inBundleWithID:replyBlock:
downloadPercentageComplete
tagStatus
activeInstallMatchingBundleID:
activeInstallMatchingCoordinatorID:orMatchingBundleID:
installForExternalID:
pipeline
setPipeline:
_pipeline
_streamingZipOptionsForPackage:useClearHashes:
initWithPromiseProvider:promiseID:specification:error:
_buildAssetRequestWithDataConsumer:error:
continueInstallID:withDataConsumer:assetRequest:event:
setAssetSize:forPackageID:
setRequestCount:forPackageID:
prepareForDownload
setConnectionPool:
setRangeOffset:
setExpectedContentLength:
setLocateAssetCache:
setDiscretionaryType:
setDuetBudgetingIdentifier:
setAllowsAuthentication:
assetRequestReason
_allowsCellularAccess
_allowsConstrainedNetwork
setAllowsConstrainedNetworkAccess:
operationForInstallID:inSession:withCoordinator:
downloadResponse
setDownloadResponse:
_downloadResponse
_initWithInstallID:result:dataConsumer:assetRequest:error:event:
assetRequest
assetSize
_assetRequest
_assetSize
_event
_requestCount
_dataConsumer
bytesUsedForApplicationWithBundleID:replyBlock:
shouldProvideODRSizeDataToLaunchServices
downloadedAssetPacksForBundleID:
uncompressedSize
_stringRepresentationForDigest:length:
lib_enumerateSubdataWithOffset:length:usingBlock:
_digestType
volume
urgency
desiredPurgeAmount
performAvailablityCheck
appPurgeCoordinator
apps
offloadOnly
authIfNeeded
askToBuyEnabledForCurrentUser:account:error:
setAskToBuyEnabled:
setClusterMapping:completionBlock:
tasteProfileFeatureEnabledWithCompletionBlock:
isAlwaysPreserved
preservationPriority
setAlwaysPreserved:
setPreservationPriority:
setUploadUrl:
setXiCloudVersionIdHeader:
hasUploadUrl
hasXiCloudVersionIdHeader
uploadUrl
xiCloudVersionIdHeader
_uploadUrl
_xiCloudVersionIdHeader
initWithEnvironment:
initWithEnvironment:queue:
_registerForPushTypesForEnvironment:
_newConnectionForEnvironment:
publicToken
connectionWithEnvironment:token:
copyOSStateDataWithTitle:
shutdown
pushConnection:didRecieveMessage:
insertObject:atIndex:
removeLastObject
lib_digestMD5
lib_shortDigestMD5
apsDelegatePort
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
setEnvironmentName:
setNotificationType:
setRequestType:
setMediaKinds:
initWithPushNotificationParameters:
bodyData
startWithResponseBlock:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_unitTest_sendFakeMessage:
_handle
_messageHistory
isSetupComplete
manageSubsOnAppDeleteBlacklist
manageSubsOnDeleteBlacklist
setManageSubsOnDeleteBlacklist:
_promptSubscriptionCancellationForAppleMusic
_promptSubscriptionCancellationForAppleNewsWithActiveAccount:
_promptSubscriptionCancellationForAppleTVWithActiveAccount:
_promptSubscriptionCancellationUsingDAAPForDeletedBundleIds:activeAccount:
hideableSystemApps
applicationProxyForSystemPlaceholder:
localizedNameForContext:
initWithIdentity:
initWithStoreRequestContext:
setShouldReturnLastKnownStatusOnly:
sharedStatusController
statusType
expirationDate
_getAppNameForSystemApp:
_getAdamIdForSystemApp:
_presentManageSingleSubscriptionDialogForAppName:appAdamId:subscriptionExpirationDate:
performSubscriptionStatusRequest:withCompletionHandler:
autoRenewEnabled
_presentManageMultipleSubscriptionsDialogForAppName:appAdamId:
getIAPsForActiveAccountWithAppAdamIDs:token:completionHandler:
autoRenewStatus
adamId
appAdamId
longTitle
executeQuery:withReplyHandler:
stringFromDate:
_presentManageSubscriptionsDialogWithTitle:message:manageButtonTitle:appAdamId:
dialogWithTitle:andMessage:
setDefaultButton:
setOtherButton:
showDialog:withCompletionBlock:
promptSubscriptionCancellationForDeletedBundleIds:
_resultEnumeratorForComparisonPredicate:error:
resultsMatchingPredicate:error:
leftExpression
expressionType
rightExpression
lib_constantValues
predicateOperatorType
lib_keyPath
_resultEnumeratorForKeyPath:matchingValues:error:
resultsWithBundleIDs:error:
resultsWithItemIDs:error:
initWithEvalulator:
resultEnumeratorForPredicate:error:
_evaluator
setContentType:
setHasDsid:
hasDsid
setHasCount:
hasCount
hasContentType
dsid
_dsid
_contentType
_count
model
hasModel
hasOsVersion
hasArchitecture
hasDisplay
hasLocale
timezone
hasTimezone
hasCarrier
hasCellularNetworkType
setHasConnection:
hasConnection
connectionAsString:
StringAsConnection:
hasDisk
setHasBatteryPercentage:
hasBatteryPercentage
display
disk
_architecture
_batteryPercentage
_carrier
_cellularNetworkType
_disk
_display
_locale
_model
_osVersion
_timezone
initToMemory
initWithStream:
startContainerWithCode:
writeUInt8:withCode:
lockerItemID
writeUInt64:withCode:
endContainerWithCode:
close
initWithItems:
autoUpdateEnabled:
getUpdatesWithReplyHandler:
refreshUpdateCountWithReplyHandler:
reloadFromServerWithReplyHandler:
setAutoUpdateEnabled:withReplyHandler:
updateAllWithOrder:requestToken:replyHandler:
reloadFromServerInBackgroundWithToken:completionBlock:
compatibilityUpdateForBundleIDs:userInitiated:withReplyHandler:
confirmAgentRequestedUpdateAll:
reloadFromServerInBackgroundWithCompletionBlock:
updateAllWithOrder:replyHandler:
dispatchQueue
setDispatchQueue:
updatesInterface
setUpdatesInterface:
_updatesInterface
_isKnownDatabasePath:
_addKnownDatabasePath:
setReadOnly:
_removeKnownDatabasePath:
transporterConfiguration
setTransporterConfiguration:
resultComplexity
initWithError:
manifestURL
appName
iapName
_deltaPackage
evaluatorForIdentity:
evaluateForDownload:
setCellularDownload:
setCellularIdentity:
evaluatorResult
accessWasUnblocked
_download
_accessWasUnblocked
_suppressDialogs
_cellularResult
_constrainedResult
_defaultProperties
addPropertiesWithDictionary:
setProperty:forBodyKey:
meanTimeToDiscovery
meanTimeToTransaction
meanTimeToDownload
meanTimeToInstall
averageTimeBetweenPolls
automationRunning
requiresDiagnosticSendingPermission
lastPollDate
_averageTimeBetweenPolls
_lastPollDate
_meanTimeToDiscovery
_meanTimeToDownload
_meanTimeToInstall
_meanTimeToTransaction
_registerForNotification
_updateState
_postStateDidChangeNotification
_elevated
tcr_stringEnumerator
arrayWithObjects:
_initWithComponents:
subarrayWithRange:
_isValid
isAnyVersion
_valueForComponent:
canonicalString
anyVersion
_findCompatibleDescriptor:
descriptorsForDictionary:usingKeyProfile:
isEqualToDescriptor:
productVersion
thinnedAppVariantId
_filterAndSortDescriptors:compatibleWithProductType:
descriptorForString:
descriptorForUniversal
findCompatibleDescriptorFromDictionary:usingKeyProfile:
hasCompatibleDescriptorFromArray:
hasCompatibleDescriptorFromDictionary:usingKeyProfile:
isUniversal
_components
_universal
_version
initWithUserDefaultsRepresentation:
copyUserDefaultsRepresentation
copyMigratorValueForConfigurationKey:
incrementAttempts
setMigratorValue:forConfigurationKey:
attempts
_migratorType
_migratorValues
_attempts
timeoutInterval
invalidateAndCancel
_semaphore
_contentLength
sharedDefaultEvaluator
initWithPathEvalulator:
initWithQueue:
_forcePropertyRefresh
emulateConstrainedNetwork
emulateCellularNetwork
emulateRoamingNetwork
activeSubscriptionsDidChange
identityForSubscription:usingClient:error:
setRoaming:
inHomeCountry
_updateRoamingStatusForContext:
getCurrentDataSubscriptionContextSync:
copySIMIdentity:error:
_setPropertiesUsingPath:
getDataStatus:completion:
subscriptionInfoDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatus:
internetConnectionAvailability:
interfaceType
_defaultsToken
_pathEvaluator
_subscriptionContext
_telephonyClient
_constrained
_expensive
_roaming
_interfaceType
isRemaining
_dialogForUpdateWithName:andSize:remaining:
_dialogForDownloadWithName:andSize:remaining:
formatSize:
setMessage:
_buttonActionsWithNowTitle:
setButtonActions:
buttonActions
setStyle:
dialogForDownload:
unpersonalizedLookupURL
mescalSignedActions
personalizedLookupURL
initWithLookupURL:unpersonalizedLookupURL:signedHeaders:signedQueryParameters:
downloadKind
networkConstraintsForDownloadKind:fromBag:
refreshSAPSession
initWithSSBag:SAPVersion:
setUseSharedBagInterpreter:
sharedDefaultSession
_handleBagLoadNotification:
platformContext
networkConstraintsForDownloadPolicy:forceReload:
useNewBagForMescal
_loaded
_notificationQueue
_sapSession
_usingNewBagForMescal
initWithPointerFunctions:capacity:
_initWithHashTable:
hashTable
addPID:
containsPID:
removePID:
setMaxConcurrentOperationCount:
maxConcurrentOperationCount
operations
qualityOfService
setQualityOfService:
addOperationWithBlock:
cancelAllOperations
waitUntilAllOperationsAreFinished
tasks
addTaskWithBlock:
knownContentHashes
primaryContentHash
contentHash
strategy
hashValue
deleteAssetPackOnDiskAtURL:
fileSize
chunkSize
hashes
downloadPriority
isStreamable
calculateLocalURLForEmbeddedAssetWithSourceURL:error:
_localURL
_pinCount
setBundleKey:
setContentHashDictionary:
suggestedDestinationPathWithStorageID:
setDestinationPath:
setExpectedDiskUsage:
integrityHashingDictionary
setHashingData:
setStoreBased:
setStreamable:
setUniqueKey:
setUseLocalCache:
_logPrefixForPriority:
streamable
_validateSourceURL
setCancellationHandler:
_unlock
_completeCoordinatorPromise:
finishWithError:
initWithPath:options:
_simulatedDownloadTime
_cancelSimulatedDownloadTimer
copyItemAtPath:toPath:error:
_simulatedDownloadTimerWithInterval:dispatchBlock:
copyManifestWithError:
assetPackForBundleKey:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
_getFileSizeAtURL:
integerForKey:
checkResourceIsReachableAndReturnError:
_calculateLocalURLForEmbeddedAssetPackWithKey:error:
setExtractionProgress:
extractionCompleteAtArchivePath:
extractionEnteredPassThroughMode
duplicateDownloadCount
hashingData
tagsRequest
useLocalCache
completionPromise
setCompletionPromise:
storeBased
_completed
_duplicateDownloads
_newPins
_outOfBandTransferPromise
_simulatedDownloadTickCount
_simulatedDownloadTimer
_discretionary
_hasRefreshed
_shouldPin
_streamable
_useLocalCache
_storeBased
_qosClass
_bundleKey
_contentHashDictionary
_destinationPath
_downloadSize
_expectedDiskUsage
_hashingData
_loadingPriority
_requestStartDate
_sourceURL
_tagsRequest
_type
_uniqueKey
_completionPromise
_initWithKnownIAPs:revision:forAccount:client:logUUID:
newContextWithKnownIAPs:revision:forAccount:client:
newContextWithKnownIAPs:revision:forAccount:token:
knownIAPs
_knownIAPs
setLimitCount:
_requestPromiseForInstall:
_startRequest:forPersistentID:
promiseWithAll:
completeStoreDownloadURL
_lookupHeadboardAppsWithOutError:
_lookupWhitelistedProviderAppsWithOutError:
removeObjectsInArray:
headboardDSIDLessApps
tvProviderDSIDLessApps
_headboardDSIDLessApps
_tvProviderDSIDLessApps
ams_altDSID
altDSID
activeEndTime
activeStartTime
getAllIAPsForActiveAccountWithReplyHandler:
getIAPsForActiveAccountWithAdamIDs:withReplyHandler:
refreshIAPsForActiveAccountWithReplyHandler:
setSubscriptionEntitlementsWithDictionary:forAccountID:segment:
getSubscriptionEntitlementsForSegment:ignoreCaches:withReplyHandler:
getCachedSubscriptionEntitlementsForSegment:withReplyHandler:
getAppStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getSubscriptionEntitlementsIgnoreCaches:forActiveAccountWithReplyHandler:
_urlForProperty:
deleteDownloads:
registerManifest:forBundleID:replyBlock:
initWithData:andBundleID:fromSource:
_createLogKey
_sinfPathForBundleID:
_preflightAppWithMetadata:isFree:isActiveAccountAppOwner:error:
_purchaseInfoWithMetadata:
_purchaseFree:error:
_makeVPPCall:metadata:changeType:error:
detailedResultBlock
_vppBuyParams:
managedPurchaseQueue
correlationID
_updateSinfsAndReceiptsStoreItems:sinfData:
_downloadMetadataForItems:
offers
price
lookupDictionary
buyParameters
displayName
_ownsCheck:account:error:
_processJobResult:forReason:
_md5ForAppProxy:
sinfData
getSinf
_applicationVariant
_bundleIdentifer
_externalVersionIdentifier
_hasInstalledApp
_itemIdentifier
_skipDownload
_detailedResultBlock
_resultBlock
_resultChangeType
_loadEvents
_handleAppleIDDidChangeNotification:
timeZoneWithName:
secondsFromGMTForDate:
dateWithTimeInterval:sinceDate:
setWeekOfYear:
initWithCalendarIdentifier:
systemTimeZone
setTimeZone:
dateByAddingComponents:toDate:options:
rangeOfUnit:startDate:interval:forDate:
startOfDayForDate:
nextPayoutWeekEndDateForDate:
_resetCache
sortUsingComparator:
setEnd:
setEvent:
setStart:
diagnosticDescription
testDates
_accountsForWeekCache
_lastCacheReset
_start
_end
predicateWithFormat:
initWithPredicate:
orPredicateWithSubpredicates:
initWithAssetType:
setPredicate:
runQueryAndReturnError:
debugLogsEnabled
systemAppServerUrl
attributes
initWithURL:attributes:
_errorIsMissingMetadata:
responseHandler
setResponseHandler:
lookupSystemApplicationWithBundleID:
_predicate
_responseHandler
applicationDSID
setDownloaderID:
setFamilyID:
setPurchaserID:
setStoreFrontID:
setVendorID:
restoreAppInstall
storeFrontID
vendorID
purchaserID
_storeFrontID
_vendorID
_downloaderID
_familyID
_purchaserID
_titleForNetworkLimit:andTotalCount:
_messageForItemName:andTotalCount:
showDialog:
localizedStringWithFormat:
stringFromByteCount:countStyle:
dialogWithItemName:andNetworkLimit:
_itemName
_networkLimit
makeObjectsPerformSelector:withObject:
_registerNotificationSource
_validatePredicate:error:
allowEvaluation
predicateFormat
cancelApp:onPairedDevice:withCompletionHandler:
cancelApp:withCompletionHandler:
pauseApp:withCompletionHandler:
resumeApp:withCompletionHandler:
launchApp:extensionType:withResultHandler:
launchApp:onPairedDevice:withResultHandler:
launchApp:withResultHandler:
notificationForRefreshWithBundleIDs:
notificationForUnregisteredBundleIDs:
notificationWithName:userInfo:
registerNotificationSource:
lib_copyPropertyGetterNames
catalogUnregisteredBundleIDs:
executeQueryWithPredicate:withReplyHandler:
executeQueryWithPredicate:onPairedDevice:withReplyHandler:
cancelApp:onPairedDevice:withReplyHandler:
cancelApp:withReplyHandler:
pauseApp:withReplyHandler:
resumeApp:withReplyHandler:
launchApp:extensionType:withReplyHandler:
launchApp:withReplyHandler:
launchApp:onPairedDevice:withReplyHandler:
uninstallApp:withReplyHandler:
_validKeyPaths
_libraryCatalogs
_libraryOpen
_libraryProgress
_libraryUninstall
_pairedDeviceObservers
addProgress:
progressType
clearProgress
progressCount
progressAtIndex:
lib_agentProcessInfo
_bytesReceived
_metrics
allowAutomaticDownloads
_constraints
_identity
_settings
shouldReportAnonymousPings
isDiagnosticsSubmissionAllowed
sharedSession
initWithPingURLs:
_pingURLs
setText:
executeQuery:withError:
_getHideShowRequestContextToHideItem:forAccount:withError:
initWithBagContract:context:
startRequestWithCompletionHandler:
_getHideShowRequestContextToShowAllForAccount:withError:
_updateForAccountID:withContext:withAccount:replyHandler:
updateForAccountID:withContext:withReplyHandler:
PurchaseHistoryForcedRefreshMinutes
PurchaseHistoryUpdatePollingFrequencySeconds
setIsFirstParty:
setIsHidden:
revisionForAccountID:withError:
newContextWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
newContextWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
setStoreIDs:
setApp:
setShow:
newContextWithItems:account:client:
removeAllAppsForAccountID:withError:
setRevision:forAccountID:withError:
insertApps:forAccountID:withError:
deleteAppsForLockerItemIDs:forAccountID:withError:
setLastUpdatedTimestamp:forAccountID:withError:
lastUpdatedTimestampForAccountID:withError:
_updatePollingFrequencyInterval
_forcedRefreshInterval
_sendUpdateRequestForAccountID:withContext:withAccount:replyHandler:
_getItemsRequestContextForAccountID:requestingAccount:withPurchaseHistoryContext:withError:
_updateDatabaseWithDAAPResponse:forAccountID:error:
_getUpdateRequestContextForAccountID:requestingAccount:withPurchaseHistoryContext:withError:
_sendItemsRequestForAccountID:withContext:withAccount:replyHandler:
setHidden:forStoreItemID:withReplyHandler:
showAllWithReplyHandler:
_currentlyUpdating
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:onConnection:
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
_persistentID
errorValueForProperty:
deletedAssetPackURLs
deletedStorageIDs
_deletedAssetPackURLs
_deletedStorageIDs
_simulateCrashWithMessage:
simulateCrashWithMessage:
_requestBodyDictionary
viewUpdatesRequestURL
_newArrayWithUpdatableApps:
_newDictionaryWithUpdatableApp:
_copyLocalAppsDictionaries
updateUsingOptimizedRequest
initWithAccount:apps:isUserInitiated:
setResponse:
_executeStatement:canFailMigration:bindings:
executeOptionalStatement:bindings:
executeStatement:bindings:
_success
displayNameWithLocalizedNames:andPrimaryLocale:
setTesterEmail:
setSharedFeedback:
setFeedbackEnabled:
setIconURLTemplate:
setLastWelcomeScreenViewDate:
setLaunchScreenEnabled:
setDisplayNames:
setLocalizedTestNotes:
initWithCoordinator:andIntent:
logStep:byParty:phase:success:forBundleID:description:
_isOwnedOrResponsible
boolCompletionHandlerAdapter
_coordinatorWithInstallOptions
_coordinatorWithImportance
_fetchAppPromiseID:error:
_coordinatorWithAppAssetPromise
errorOnlyCompletionHandlerAdapter
cancelForReason:client:completion:
finishWithResult:error:
_coordinatorWithInitialODRAssetPromises
_fetchODRPromiseID:error:
_removeODRPromiseID:error:
isPaused:withError:
_coordinatorWithUserDataPromise
isEqualToCoordinator:
_coordinatorConformingToProtocol:
_isPropertyNotSetError:
_preflightPromise:error:
setImportance:
setInstallOptions:
fetchAppPromiseID:
hasAppPromise
resetAppPromiseID:
completeODRPromiseConfiguration
failODRPromiseID:withReason:
fetchODRPromiseID:
resetODRPromiseID:
completePlaceholderPromise
setPreparationPromise:
isObserved
creatorID
hasSupportForInitialODR
_isWatchOnlyStoreItem:withError:
_validateStoreItem:externalID:withError:
purchase_installForStoreItem:usingPurchaseInfo:error:
postAppsDone
overrideAutomaticType
beginRemoteProgressForBundleID:storeItemID:
beginProgressForBundleID:storeItemID:
currentStatus
resultWithValidActivity:bundleID:
completePurchaseWithResults:usingPurchaseInfo:
hasWatchApp
lib_setPropertiesWithSINFData:
metadataFromStoreMetadata:
setSkipIfInstalled:
redownloadParams
initWithStoreItems:purchaseInfo:purchaseBatch:
setOverrideAutomaticType:
_requestCompanionInstallationForStoreItem:
_fileName
_purchaseBatch
_purchaseInfo
_overrideAutomaticType
initWithQueueType:forAccount:
_loadDownloadsFromStart:toEnd:
removeObjectsInRange:
rangesToLoad
_newURLRequestWithStartIdentifier:endIdentifier:error:
lib_importKeybagData:
_handleResponse:
lib_keybagSyncDataForAccount:withTransactionType:
initWithQueueType:
_queueType
_requestEncoder
_rangesToLoad
_fetchImageURLsRequest
getImageUploadURLsURL
uploadUrls
_signedURLs
unionOrderedSet:
addDownloadIdentifier:
addDownloadIdentifiers:
addJobIdentifier:
addJobIdentifiers:
canCoalesceWithError:
copyUserDialog
downloadIdentifiers
isValidError
performActionForResponseFlags:
removeDownloadIdentifier:
removeJobIdentifier:
representsDownloadWithIdentifier:
representsJobWithIdentifier:
_notification
_setNotification:
jobIdentifiers
setDownloadKind:
downloadTitle
setDownloadTitle:
_downloadIdentifiers
_downloadKind
_downloadTitle
_jobIdentifiers
appUpdatesToFinish
cancelProgress
coordinatorPause
coordinatorReasons
coordinatorResume
failedTestFlightInstalls
finishProgress
legacyNotifications
restoresToHydrate
restoresCompleted
schedulerPollReason
shouldPostAppsDone
shouldPostUpdatesDone
shouldRefreshApplicationBadge
shouldPostProcessAutomaticUpdatesCompleted
restoreCompleted
addAppUpdateToFinish:withUpdateState:
addFailedTestFlightInstallWithBundleID:devicePairingID:error:
addLegacyNotification:
addRestoreToHydrate:
finishProgressForBundleID:
postUpdatesDone
postProcessAutomaticUpdatesCompleted
postRestoreCompleted
refreshApplicationBadge
_appUpdatesToFinish
_cancelProgress
_coordinatorPause
_coordinatorReasons
_coordinatorResume
_failedTestFlightInstalls
_finishProgress
_legacyNotifications
_restoresToHydrate
_restoresToPrioritize
_schedulerPollReason
_restoresCompleted
_shouldPostAppsDone
_shouldPostUpdatesDone
_shouldRefreshApplicationBadge
_shouldPostProcessAutomaticUpdatesCompleted
_hashArrayFromMeasurement:
scanUnsignedLongLong:
_stringFromDigest:
stringWithCString:encoding:
downloadOffset
hashType
isStreamableZip
_streamableZip
_downloadOffset
_hashType
_hashes
manifestDictionaryForBundleID:withReply:
assetsForBundleID:withReply:
fakeWorkWithCount:reply:
statusWithReply:
performMaintenanceWithReply:
cancelMaintenanceWithReply:
setLoggingEnabled:reply:
setSampler:enabled:samplingInterval:reply:
loadSourceURL:intoDestinationURL:isUrgent:isStreaming:withRequestCompletion:
prefetchSourceURL:intoDestinationURL:withPrefetchCompletion:
prefetchAndRequestSourceURL:intoDestinationURL:withCompletion:
prefetchThenRequestSourceURL:intoDestinationURL:withCompletion:
cancelRequestWithUUID:withCompletion:
pauseRequestWithUUID:withCompletion:
resumeRequestWithUUID:withCompletion:
fetchManifestForAdamID:externalVersionID:variant:withFetchCompletion:
registerManifest:forBundleID:withRequestCompletion:
purgeableAssetsWithReply:
nonPurgeableAssetsWithReply:
purgeBytes:odrOnly:urgency:withReply:
testPurgeBytes:urgency:withReply:
purgeAllAssetsForApplication:withRequestCompletion:
purgeAssetWithIdentifier:withRequestCompletion:
getSimulatedBandwidthWithReply:
setSimulatedBandwidth:withReply:
getSpaceReductionWithReply:
setSpaceReduction:withReply:
version
lastModificationDate
_bundleKeyToTagsMapping:
purgeable
downloadIdentifier
humanReadablePurgeReason
_prettyHashesString:
effectiveAlwaysPreserve
initWithSamplingRate:
copyDataWithError:
purgeableAssetPacks
nonPurgeableAssetPacks
purgeAllAssetsForApplication:forReason:
purgeAssetWithIdentifier:forReason:
simulatedBandwidth
setSimulatedBandwidth:
noteUpdatesStateChangedWithReason:completionBlock:
setShouldPerformAutomaticUpdates:
isWhitelistedDSIDLessApp:
postProcessBackgroundUpdateMetrics
performBackgroundSoftwareUpdateCheck
performPostRestoreUpdatesCheck
reloadApplicationBadgeWithReason:
setupFollowingMigration
verifyAllPendingUpdates
verifyPendingUpdates:
verifyUpdatesFollowingExternalAppInstall:
verifyUpdatesForRemovedBundleIDs:
_validateUpdatesState
agentRequestedUpdateAll
setAgentRequestedUpdateAll:
provisionedApps
setProvisionedApps:
_badgeQueue
_hasLoadedWhitelist
_whitelistedApps
_agentRequestedUpdateAll
_provisionedApps
lib_flatMapAndFilterUsingBlock:
availableBytes
setHasAvailableBytes:
hasAvailableBytes
totalBytes
setHasTotalBytes:
hasTotalBytes
_availableBytes
_totalBytes
initWithSystemApplicationMetadata:
initWithInstalls:externalIDs:
_filterApplicableInstallations
_itemIDForBundleID:
setStatus:
setRemoteProgress:
notificationForRegisteredApps:
postNotification:
_disableAutoInstall
_reportRemoteProgress
_prunedUpdateDictionary:forItemID:
deviceIsAppleWatch
_prunedSizeDictionary:forVariantId:versionId:
_prunedArtworkDictionary:
tcr_keyPath
tcr_dictionary
_prunedSizeWithUpdateSizes:forInstalledVariant:versionId:
_prunedSizeWithVariantSizes:
_prunedSizeWithDeviceSizes:
lib_firstResultApplyingTransform:
updates
externalIDString
initWithMetadata:forDevice:
addTransactionID:
transactionIDType
clearTransactionIDs
transactionIDsCount
transactionIDAtIndex:
setPurgeableReason:
setStaticDiskUsage:
plugins
setPlugins:
order
setOrder:
_systemApp
_diskUsage
_plugins
_order
orderedSetWithObject:
_summaryEventForEntity:
bestPackage
predicateForInstallFromSource:bundleID:itemID:error:
installPhase
setPackagesWithArray:
setQueueDate:
importRemoteIntalls:
prioritizeInstallID:
updateInstalls:
_setPropertiesUsingBundle:
_setupUserAgent
_copyExecutablePathForConnection:
initWithBundleIdentifier:
setClientVersion:
initWithApplicationID:
auditTokenData
clientVersion
clientIDHeader
_auditTokenData
_clientVersion
_pid
_clientIDHeader
transactionIdentifier
inAppTransactionDoneURL
initWithTransactionIdentifier:client:
_transactionIdentifier
extractionPath
supplyBytes:withCompletionBlock:
finishStreamWithCompletionBlock:
_prepareExtractor:toPath:completionBlock:
suspendStreamWithCompletionBlock:
prepareForExtractionToPath:completionBlock:
prepareForExtraction:
extractorDelegate
_dataComplete
_extractor
_hasConsumedData
_resumptionOffset
_extractorDelegate
stringWithCapacity:
initWithLength:
mutableBytes
setLength:
lib_gzippedData
maxPermanentODR
enforceAlwaysPreserve
shouldDownloadPrioritizedODRForApplicationWithBundleID:
moderateWiFiBandwidth
initWithDictionary:copyItems:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
registerDefaults:
setInteger:forKey:
_asset_configurationIdentifierUsingProperties:
backgroundSessionConfigurationWithIdentifier:
_asset_setConfigurationDefaults
_asset_setConfigurationUsingProperties:
networkBudgetingIdentifier
duetBudgetingIdentifier
discretionaryType
allowsWatchCellularAccess
allowsConstrainedNetworkAccess
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
set_sourceApplicationSecondaryIdentifier:
set_requiresPowerPluggedIn:
set_infersDiscretionaryFromOriginatingClient:
protocolClasses
setProtocolClasses:
asset_ephemeralSessionConfigurationUsingProperties:
_asset_initializeConnectionPools
_allowClientOverride
_processDownloadsForTransactions:
_errorToASDError:
initWithProductIdentifier:quantity:client:
setDiscountIdentifier:
setDiscountKeyIdentifier:
setDiscountNonceString:
setDiscountSignature:
setDiscountTimestamp:
setRequestData:
setExcludeReceiptFromRequest:
setHideConfirmation:
transaction
valueForEntitlement:
ams_message
_hasArcadeEntitlement
_isValidForReview
_remoteObject
_downloadQueue
_paymentQueue
_productRequestQueue
_pendingDownloads
setErrorDomain:
setErrorDescription:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDomain
errorCode
errorDescription
_errorCode
_errorDescription
_errorDomain
useLaunchCountsForAppUsage
_persistUsageUsingLaunchCounts
_persistUsageUsingDuet
knowledgeStore
predictorWithKnowledgeStore:
launchLikelihoodForTopNApplications:withLikelihoodGreaterThan:withTemporalResolution:
valueAtDate:
setProbability:
sortUsingDescriptors:
_writeToContainer:
setLaunchCount:
commonlyUsedApps
persistUsage
launchCount
probability
_probability
_launchCount
formattedText
_valueDictionaryWithStoreAsset:
_valueDictionaryWithSystemAppLookupItem:
isDelta
assetURL
bytesTotal
clearHashes
numberOfBytesToHash
isZipStreamable
dpInfo
expectedDiskspace
initialODRSize
isLocallyCacheable
initWithStoreAsset:
_assumeIdentity:
_currentIdentityWithIdentity:
exceptionWithName:reason:userInfo:
_unitTest_resetIdentity
namespaceWithSuffix:
machPortName
checkQueueWithOptions:completionBlock:
claimApplicationsWithOptions:completionBlock:
getAutomaticDownloadQueueWithCompletionBlock:
getDownloadQueueWithCompletionBlock:
managedApplicationRequestWithOptions:completionBlock:
blockTaskWithBlock:
_block
coordinatorForBundleID:hasIntent:error:
coordinatorForBundleID:withIntent:createIfNotExisting:wasCreated:error:
enumerateCoordinatorsWithIntent:error:usingBlock:
enumerateCoordinatorsWithIntent:usingBlock:
enumerateCoordinatorsUsingBlock:
cancelCoordinatorWithBundleID:cancelError:error:
_sessionClass
_transactionClass
acceptVisitor:flags:
lib_pop
subpredicates
lib_popCount:
compoundPredicateType
sortDescriptorWithKey:ascending:
filterUsingPredicate:
initWithComplexity:usingBlock:
lib_push:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithClassifier:
executeQueryWithPredicate:error:
_classifier
_stack
_meanTimeBetweenEndKey:startKey:metrics:
setMeanTimeToDiscovery:
setMeanTimeToTransaction:
setMeanTimeToDownload:
setMeanTimeToInstall:
averagePollTime
setAverageTimeBetweenPolls:
lastAutoPollDate
setLastPollDate:
_insertEventIntoDatabase:
_amsMetrics
initWithContainerID:bag:
shouldCollectAppInstallationMetrics
processItemMetrics:
hasUuid
_uuid
initWithName:applicableEntitlement:mergeHandler:
notificationSourceWithName:applicableEntitlement:mergeHandler:
applicableEntitlement
mergeHandler
_mergeHandler
_applicableEntitlement
diagnosticServiceEntitlement
diagnosticServiceProvider
CrossfireServerEntitlement
setCrossfireServerEntitlement:
CrossfireServiceProvider
setCrossfireServiceProvider:
IAPHistoryServiceEntitlement
IAPHistoryServiceProvider
installationServiceEntitlement
installationServiceProvider
libraryServiceEntitlement
libraryServiceProvider
OcelotServerEntitlement
setOcelotServerEntitlement:
OcelotServiceProvider
setOcelotServiceProvider:
PersonalizationServerEntitlement
setPersonalizationServerEntitlement:
PersonalizationServiceProvider
setPersonalizationServiceProvider:
PurchaseHistoryServiceEntitlement
PurchaseHistoryServiceProvider
PurchaseServiceEntitlement
PurchaseServiceProvider
RepairServiceProvider
RepairServiceEntitlement
TestFlightFeedbackServiceEntitlement
setTestFlightFeedbackServiceEntitlement:
TestFlightServiceProvider
setTestFlightServiceProvider:
UpdatesServiceEntitlement
UpdatesServiceProvider
_diagnosticServiceProvider
_CrossfireServiceProvider
_IAPHistoryServiceProvider
_installationServiceProvider
_libraryServiceProvider
_OcelotServiceProvider
_PersonalizationServiceProvider
_PurchaseHistoryServiceProvider
_PurchaseServiceProvider
_RepairServiceProvider
_TestFlightServiceProvider
_UpdatesServiceProvider
_diagnosticServiceEntitlement
_CrossfireServerEntitlement
_IAPHistoryServiceEntitlement
_installationServiceEntitlement
_libraryServiceEntitlement
_OcelotServerEntitlement
_PersonalizationServerEntitlement
_PurchaseHistoryServiceEntitlement
_PurchaseServiceEntitlement
_RepairServiceEntitlement
_TestFlightFeedbackServiceEntitlement
_UpdatesServiceEntitlement
_registerDistributedNotificationEventHandler
_registerNotificationEventHandler
postNotificationName:object:userInfo:
setData:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
_initWithMapTable:
objectForPID:
setObject:forPID:
removeObjectForPID:
strongObjectsMapTable
weakObjectsMapTable
setObject:atIndexedSubscript:
_map
_availableSpaceOnDeviceRootVolume
_availableSpaceCushion
sendLowDiskSpaceNotification
purgeWithReason:
isAppRunning:
_currentDownloadStatus
baseURLForODRContent
setMaximumFractionDigits:
setMultiplier:
stringFromNumber:
purgeBytes:odrOnly:
_allPurgeableAssetPacks
_resourcesLock
_lowDisk
completionHandler
launchApplicationWithOptions:completionHandler:
repair:needsToReleaseBlockingCallerWithReason:
_applicationRepair
_completionHandler
isAutomatic
cellularDownload
cellularIdentity
_cellularDownload
_cellularIdentity
_evaluatorResult
_beginObservingAccountChangeNotification
_familyMembersSuppressDialogs:error:
isAskToBuyEnabled
_bootstrapFamilyIfNeededSuppressDialogs:error:
_handleAccountChangedNotification
performFamilyInfoLookup
_clearFamily
bundleExecutable
familyPurchaserIDFromSINF:
familyAccountIDs
_sinfPathForProxy:
_currentAccountDSID
_familyAccountIDs
_lastFamilyCheck
purchases
initWithDescription:
initWithSuccess:error:
_returnPurchaseResponse:
signal
processPurchases:requestToken:withReplyHandler:
waitWithTimeout:
_applicationForProxy:ensureInstalled:
_dataDectector
numberOfMatchesInString:options:range:
stringByRemovingPercentEncoding
_assetPackManifestURL
initWithContentsOfURL:andBundleID:error:
_bundleTagManifestURL
_isEqualToApplication:
_isStoreBased
_versionToken
_copyTo:withZone:
_hash
isEqualToApplication:
setInstalled:
setBundleURL:
dataDetectorWithTypes:error:
hasODR
_adamID
_beta
_bundleShortVersion
_installed
_machineVPP
getUpdatesWithContext:
setUsingModernUpdatesCheck:
setNextUpdateCheck:
lastUpdateCheckDate
setLastUpdateCheck:
hidePendingUpdatesBadge
showPendingUpdatesBadge
reloadUpdatesWithContext:
clearExpiredUpdateHistoryWithCompletionBlock:
getUpdatesIncludingMetricsWithCompletionBlock:
getUpdatesMetricsWithCompletionBlock:
getUpdatesWithCompletionBlock:
getManagedUpdatesWithCompletionBlock:
migrateUpdatesStoreWithCompletionBlock:
refreshUpdateCountWithCompletionBlock:
refreshUpdatesWithCompletionBlock:completionBlock:
reloadFromServerWithCompletionBlock:
reloadManagedUpdatesWithCompletionBlock:
updateAllWithJobResults:
updateAllWithOrder:completionBlock:
hideApplicationBadgeForPendingUpdates
removeUpdateBulletins
showApplicationBadgeForPendingUpdates
showApplicationUpdatesBulletin
_lookupResults
valueForHTTPHeaderField:
cancelUserNotifications:
indexOfObjectIdenticalTo:
makeObjectsPerformSelector:
_showUserNotification:withOptions:completionBlock:
_showPreparedNotification:
_updateUserNotification:withDictionary:options:
_finishUserNotification:withResponseFlags:
cancelUserNotification:
prepareUserNotificationWithDialog:
showDialogAndWait:
showPreparedNotification:withCompletionBlock:
updateUserNotification:withDialog:
_userNotifications
getIAPsForAccountID:withError:
getIAPsForActiveAccountWithAdamIDs:forAccountID:withError:
getIAPsForActiveAccountWithAppAdamIDs:forAccountID:withError:
_refreshIAPsForActiveAccountIfAllowedWithToken:completionHandler:
_forceRefreshIAPsForActiveAccountWithToken:completionHandler:
IAPInfoForcedRefreshMinutes
IAPInfoUpdatePollingFrequencySeconds
newContextWithRevision:forAccount:token:
_sendUpdateRequestWithAccount:token:completionHandler:
_getItemsRequestContextForAccount:withToken:error:
_updateDatabaseWithRequestResponse:error:
_getUpdateRequestContextForAccount:withToken:error:
_sendItemsRequestWithAccount:token:completionHandler:
getIAPsForAccountID:withToken:completionHandler:
getIAPsForActiveAccountWithAdamIDs:token:completionHandler:
getIAPsForActiveAccountWithToken:completionHandler:
removeAllIAPsWithToken:errorHandler:
categoryWithIdentifier:actions:intentIdentifiers:options:
setNotificationCategories:
setPrivateDelegate:
setWantsNotificationResponsesDelivered
_requestAuthorization:
bulletinFromRequest:
getPendingNotificationRequestsWithCompletionHandler:
getDeliveredNotificationsWithCompletionHandler:
_postBulletins:
removeAllDeliveredNotifications
shouldHandleNotificationResponse:
handleNotificationResponse:bag:
notification
notificationCenter:didChangeSettings:bag:
addNotificationRequest:withCompletionHandler:
requestAuthorizationWithOptions:completionHandler:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
existingBulletins
removeAllNotifications
updateBulletin:
userNotificationCenter:didChangeSettings:
_center
_getDisplayNamesForBundleID:andToken:
_proxyForBetaAppWithBundleID:error:
_isFeedbackEnabledForBundleID:andToken:
localizedNames
primaryLocale
preferredLocaleKeyFromAvailableKeys:primaryLocaleKey:
setAlternateButton:
presentFeedbackViewController
_validateMetadataForBundleID:
setFeedbackEnabled:forVersion:
setLaunchInfo:
setLaunchScreenEnabled:forVersion:
_authenticateAccount:error:
saveFeedback:forDSID:
_runUploadTaskForEntity:
updateTestNotes:forVersion:
_uploadPendingFeedback
backoffDelays
backoffRandomRange
_backoffDelayForAttemptCount:
_backoffRandomAddition
setNextRetryDate:
_scheduleNextFeedbackSubmission:
_saveEntity:
_deleteFeedbackWithDatabaseID:
_handleFailedAttemptForTask:
_removeAppVersion:
removeAppVersion:
_handleUploadTaskResult:
nextRetryDate
_getAllAppVersionsForBundleID:
_purgeVersionIfNecessary:
getDisplayNamesForBundleID:andToken:
getEmailAddressForBundleID:andToken:
getFeedbackMetadataForBundleID:forToken:withCompletionHandler:
getLaunchInfoForBundleID:forToken:withCompletionHandler:
getLaunchInfoForVersion:forToken:withCompletionHandler:
isFeedbackEnabledForBundleID:andToken:
isLaunchScreenEnabledForBundleID:andToken:
offerToShareFeedbackForCrashedAppWithBundleID:andIncidentID:
setFeedbackEnabled:forVersion:andToken:withCompletionHandler:
setLaunchInfo:forToken:withCompletionHandler:
setLaunchScreenEnabled:forVersion:andToken:withCompletionHandler:
submitFeedback:forToken:withCompletionHandler:
updateTestNotes:forVersion:andToken:withCompletionHandler:
uploadPendingFeedback
validateMetadataForBundleIDs:
_activeTaskPIDs
_activeTaskPIDsLock
initWithDatabaseStore:
_handlePollEventWithReasons:
_repairInconsistentInstallationState
_registerPolicyStateMonitors
_scheduleNextOptimalDownloadWindow
_requestPollWithReason:
bootstrapSourceType:enumerateUsingBlock:
scheduleUsingTransaction:
bootstrapResetSourceType:withError:
isElevated
jettisonActiveInstallationsToReduceActiveCountTo:forReason:
_bootstrapStoreApps
_bootstrapSystemApps
_pollForPendingInstallations
_checkIfInstallShouldBeAllowedToStart:withPackage:
scheduleMaximumActiveCount:evaluateUsingBlock:
startedInstalls
activeInstallsCount
countForProperty:predicate:onConnection:
predicateForActiveBootstrapWithSourceType:
minValueForProperty:predicate:onConnection:
cellularDownloadForPackage:
isPowerPluggedIn
isBatterySaverEnabled
_runOnceAfterUnlockChecks
_ignorePolicyNotifications
_pollReasons
_pollSource
_bootstrapQueue
_unlockedOnce
_installWithXPCMetadata:
lib_canonicalAccountForAccount:
artworkURL
messagesArtworkURL
_metadataWithXPCMetadata:
_packageWithXPCMetadata:
setKind:
setBetaExternalVersionIdentifier:
setSoftwareVersionBundleID:
setInitialODRSize:
storeCohort
setStoreCohort:
packageSINF
packageDPInfo
provisioningProfiles
_transcodeDataArray:
taskWithXPCAppMetadata:forDevice:requestToken:
_fetchResultsWithPredicate:
content
openURL:withOptions:error:
setBody:
setUserInfo:
setCategoryIdentifier:
setShouldBackgroundDefaultAction:
requestWithIdentifier:content:trigger:
_actionButtonTitle
_actionButtonURL
_actionType
_launchURL
_creationDate
_recordID
keyPath
setAcceptableExpressionTypes:count:
setAcceptableKeyPaths:
validatePredicate:withError:
_acceptableExpressionTypes
_acceptableKeyPaths
_errors
_valid
openApplicationWithBundleID:
_handleKeybagSyncWithError:
_showFamilyLeaveAlert:
updateProgress:withReply:
updateDownloadState:withReply:
initWithDownloadKinds:
updateProgress:
updateDownloadState:
_group
_manager
_observing
_sessionTasks
_sessionTasksByIdentifier
_beginSessionWithDPInfo:error:
setResumptionOffset:
_resetDecryptionBufferAndDigestVerifier
streamAdapter
_buffer
_capacity
_consumerQueue
_cursor
_digestVerifier
_realPathForURL:ifChildOfURL:
_traverseDirectory:error:withBlock:
_realPathWhatExistsInPath:
_realPathForURL:allowNonExistentPathComponents:
pathComponents
fileURLWithPathComponents:
_itemExistsAtURL:
validateDownloadAtURL:error:
_writeReceipt:toContainerURL:withStyle:error:
writeToURL:atomically:
writeReceipt:forBundleIdentifier:style:
addUploadUrls:
uploadUrlsCount
clearUploadUrls
uploadUrlsAtIndex:
uploadUrlsType
setExpiresTimeMillis:
setHasExpiresTimeMillis:
hasExpiresTimeMillis
setUploadUrls:
expiresTimeMillis
_expiresTimeMillis
_uploadUrls
setProfile:
setProfileVersion:
registerBagKey:valueType:
registerBagKey:valueType:defaultValue:
bagWithProfileConfig:
notifyAutenticationDialogCompleteForPurchaseID:result:checkboxChecked:withResultHandler:
notifyDialogCompleteForPurchaseID:result:selectedButton:withResultHandler:
startPurchase:requestToken:withReplyHandler:
prepareAndGroupPurchaseInfos:
purchaseQueue
setPurchaseQueue:
displayRequestFailureDialogForError:usingNotificationClient:
responses
_responses
dataUsingEncoding:
initWithCurrentRevision:
_enumerator
_resultComplexity
isAppStoreVendable
_lib_isValidDSID:
metadataFromPlistAtURL:error:
lib_downloaderDSID
lib_purchaserDSID
lowDataPromptThreshold
contentRatingFlags
circularIconURLString
datePurchased
developerName
isFamilyShared
isFirstParty
isHidden
isHiddenFromSpringboard
iconURLString
is32BitOnly
isPreorder
ovalIconURLString
preflightPackageURL
productURL
requiredCapabilities
supportsIPad
supportsIPhone
purchaseToken
genreID
genreName
watchAppDeliveredIniOSApp
watchAppRunsIndependently
watchOnly
supportsLayeredImage
hasP3
_serverRevisionPropertyForAccountID:
_setValue:forDatabaseProperty:withError:
_lastUpdatedPropertyForAccountID:
setHidden:forStoreItemID:withError:
showAllWithError:
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
initWithLSApplicationProxy:
pluginKitProxyForURL:
containingBundle
bundleType
canonicalExecutablePath
companionApplicationIdentifier
stringByReplacingOccurrencesOfString:withString:options:range:
objectForInfoDictionaryKey:ofClass:
encodeBool:forKey:
decodeBoolForKey:
mdItemRef
pointerValue
setBundlePath:
setCanonicalExecutablePath:
setDeviceIdentifierForVendor:
setDownloaderDSID:
expectedStoreVersionID
setExpectedStoreVersionID:
installDidOccur
setInstallDidOccur:
setIsAppleSigned:
setLocalizedName:
setMdItemRef:
setHasMIDBasedSINF:
isMachineLicensed
setMachineLicensed:
setOcelot:
setPlaceholder:
setProfileValidated:
setStoreOriginated:
setReceiptType:
setShortVersionString:
thinningVariantID
setThinningVariantID:
updateDidOccur
setUpdateDidOccur:
updateMetadataRefreshed
setUpdateMetadataRefreshed:
updateWillOccur
setUpdateWillOccur:
_signingFlags
_installDidOccur
_isAppleSigned
_hasMIDBasedSINF
_machineLicensed
_ocelot
_offloaded
_placeholder
_profileValidated
_storeOriginated
_updateDidOccur
_updateMetadataRefreshed
_updateWillOccur
_bundlePath
_canonicalExecutablePath
_companionBundleID
_deviceIdentifierForVendor
_downloaderDSID
_expectedStoreVersionID
_mdItemRef
_receiptType
_shortVersionString
_storeCohort
_thinningVariantID
_queueSystemAppRequestForBundleID:
_enumerateDemotedApplicationProxiesUsingBlock:
enumerateBundlesOfType:block:
lib_storeMetadataError:
dialogForError:
_appleIDForApp:error:
_enumeratePlaceholdersUsingBlock:
sharedErrorController
showJobError:
_presentDialogForError:accountID:accountName:proxy:
initWithMachServiceName:forClients:delegate:
_handleAppMayBeUninstalledNotification:
_reasonShouldBeTreatedAsCancelation:
_errorIsCausedByMismatchedSINF:
_reportSINFMismatchError:forAppInstall:withTransaction:
postCompletion
completeInstallID:
handleInstalledApplication:
_reviewNetworkPolicyForInstallID:usingDownload:coordinator:
setInstallPhase:forInstallID:
_applicationInstallsDidPrioritize:coordinator:
lib_walkUnderlyingErrorsUsingBlock:
sendWriteAllLogsToDiskDecompressedNotification
applicationVariant
_presentNetworkDialogWithProxy:
isAppUpdate
pauseWithError:
modifyInstallPolicyUsingBlock:
_pauseCoordinator:withLogKey:
actionWithTitle:
coordinatorShouldPrioritize:
coordinatorShouldResume:
coordinatorShouldPause:
coordinator:configuredPromiseDidBeginFulfillment:
coordinatorShouldBeginRestoringUserData:
coordinatorDidInstallPlaceholder:
coordinatorDidCompleteSuccessfully:
coordinator:canceledWithReason:client:
shouldPrioritizeAppWithBundleID:
coordinator:canceledWithReason:
promiseDidBeginFulfillmentWithIdentifier:
coordinator:configuredPromisePromiseDidBeginFulfillment:
_policyQueue
_installObserver
_installScheduler
_registerForAdapterChange
_updateAdapterState
_postPowerStateDidChangeNotification
_updateBatterySaverState
_adapterChangeToken
_batterySaverToken
_batterySaverEnabled
_powerPlugggedIn
lastModifiedDate
subscriptionFamilyId
hasUsedFreeOffer
hasUsedIntroPricingOffer
deleteIAPs:forAccountID:withError:
insertIAPs:forAccountID:withError:
removeAllIAPsWithError:
removeAllIAPsForAccountID:withError:
_queueMigrationWithConfiguration:
enumerateUsingBlock:
hasMigrations
clearRestoreDefaults
recordOSMigrationDate
recordOffloadingGracePeriodStartDateIfUnset
setPerformedPostRestoreSoftwareUpdate:
initWithBundleIdentifiers:options:
_queueMigration:
networkType
_loadBagAndPerformMigration
availableUpdatesRequestURL
_performMigration
willBeginMigratorType:
didCompleteMigratorType:
_queueMigration:persist:
writeConfiguration:
_networkTypeChangedNotification:
restoreDemotedBundleIdentifiers:options:
_configurationStore
_migrations
_initWithServiceClient:
_transactionID
_notificationClient
_processInfo
deliverAuthenticateRequest:withResultHandler:
deliverNotifications:withBarrierBlock:
deliverProgress:withBarrierBlock:
_visuallyOrderedBundleIDs
orderedSetWithOrderedSet:range:copyItems:
_discoverCoordinatorsWithOrder:prioritizeFirst:error:
_restoringCoordinatorMap
initWithCoordinatorTag:logCode:
metadataWithError:
dataWithBytes:length:
constantValue
setPromptTitle:
setDefaultButtonString:
initWithDSID:altDSID:username:options:
promptTitle
defaultButtonString
actionWithTitle:identifier:
textFieldWithPlaceholder:secure:
setKeyboardType:
addTextField:
lib_account
ams_setRawPassword:
initWithUsername:logKey:
_accountFromSystemAlertDialogWithOptions:error:
authenticateResult
usernameEditable
setUsernameEditable:
_username
_usernameEditable
_authenticateResult
columnIndexForColumnName:
dataForColumnIndex:
dateForColumnIndex:
stringForColumnIndex:
UUIDForColumnIndex:
URLForColumnIndex:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
indexOfObject:
dateForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
JSONObjectForColumnIndex:
numberOfColumns
UUIDForColumnName:
URLForColumnName:
dictionaryWithValuesForColumns
_columnTypeForColumnIndex:
_declaredTypeForColumnIndex:
_columnCount
_columnDeclaredTypes
_columnIndexByName
_columnKeySet
_columnNames
_statementWrapper
_connectionHasArcadeEntitlement:
_decodedArrayForProperty:ofClass:
setSuccessfulImageUploads:
_removePendingImageUploadForURLString:
contentRestoreMaxItemCount
_preflightRestoresForAccountID:
setOrderedLoookupCount:
setNonOrderedLookupCount:
_nonOrderedRestoreInstallForAccounts
_orderedRestoreInstallForAccounts
_nonOrderedLookupCount
_orderedLoookupCount
appSessionReporterKey
appEventType
eventTimeOverride
eventTime
setForegroundUsage:
setForegroundUsageEvents:
hasBeenPosted
weekStartDate
_eventForType:
_metricsTypeForInstallationType:
_typeForMetricsType:
clusters
timeRangeEnd
timeRangeStart
tempUserId
setTempUserId:
tempDeviceIdentifer
setTempDeviceIdentifer:
clientEventID
collectionTime
cumulativeUserCount
installationType
osBuild
platform
qualifiedDuration
_appEventType
_hasBeenPosted
_installationType
_installType
_tempUserId
_tempDeviceIdentifer
_appSessionReporterKey
_clientEventID
_clusters
_cohort
_collectionTime
_cumulativeUserCount
_eventTimeOverride
_foregroundEvents
_ocelotDeviceID
_ocelotID
_ocelotSubscriptionState
_timeRangeEnd
_timeRangeStart
_usageTime
_usageCount
_qualifiedDuration
_weekStartDate
taskQueue
cancelAllRequestsWithErrorHandler:
submitRequest:delegate:withReplyHandler:
queueTask:
_releaseRequest:
_trackRequest:
requests
setRequests:
_requests
cancelUpdatePendingForCompanionApp:
cancelUpdatesPendingForCompanionApps:
setUpdatePendingForCompanionApp:
setUpdatesPendingForCompanionApps:
additionalApps
appTitle
_preflightAccountWithError:
appBundleID
setITunesStoreURL:
initWithOpenURLRequest:
accountWithUniqueIdentifier:
setCanSetActiveAccount:
setAccountNameEditable:
setPersistsAcrossDeviceLock:
setAdditionalApps:
setAppBundleID:
setAppTitle:
_additionalApps
_appBundleID
_appTitle
_runWithApplications:
initAppPlaceholderWithBundleName:bundleID:installType:client:
_newStoreMetadataWithApplication:
setMetadata:error:
_newArtworkPromiseWithArtworkPath:
setIconPromise:error:
_copyItemIDsFromApplicationMetadata:
_lookupItemIDs:error:
_loadArtworkForBundleID:templateURL:path:error:
completeDataPromise
initWithBundleID:coordinatorType:
createAsMobileBackup
setCreateAsMobileBackup:
setConfigurationCompleteWithError:
setPlaceholderPromise:
completeUserDataPromise
waitUntilFinished
_newArtworkURLUsingTemplate:
_artworkDataForURL:error:
itemDictionary
_copyArtworkTemplateForDictionary:
setShouldCopy:
_newURLByPopulatingTemplate:withValues:
setSoftwareVersionExternalIdentifier:
setAppleID:
setDSPersonID:
setAltDSID:
setSourceApp:
initWithName:client:data:
_newArtworkPromiseWithArtworkTemplate:
completedPlaceholders
setCompletedPlaceholders:
_mutableCompletedPlaceholderBundleIDs
_completedPlaceholders
_wasInstalledByConfigurator:
resultChangeType
iTunesMetadataPlistForApplication:
_handleVPPRecoveryWithOutError:
_beginInstallingUsingInstallInfo:transaction:
failWithError:
_beginPostambleUsingInstallInfo:transaction:
_beginPreambleForInstallsMatchingPredicate:transaction:
fractionCompleted
_finishDownloadingOperationWithResponse:
_finishInstallingOperationWithResponse:
_finishPostambleOperationWithInstallInfo:
_beginPreambleWithOperation:transaction:
_finishPreambleOperationWithResponse:
discreteProgressWithTotalUnitCount:
setUserInfoObject:forKey:
addObserver:forKeyPath:options:context:
_handleAssetResult:error:usingInstallInfo:
_beginDownloadingUsingInstallInfo:transaction:
removeObserver:forKeyPath:
responseEndDate
_handleRecoveryResult:error:usingInstallInfo:
_isRecoverableNetworkError:
pauseInstallID:withPhase:forReason:
restartInstallID:
scheduleNextOptimalDownloadWindow
finishInstallIDs:transaction:
startInstallIDs:transaction:
stopInstallIDs:withReason:transaction:
observeValueForKeyPath:ofObject:change:context:
_assetSession
_requestLookup
_endTime
getDisplayNamesForBundleID:withCompletionHandler:
getEmailAddressForBundleID:withCompletionHandler:
getFeedbackMetadataForBundleID:withCompletionHandler:
getLaunchInfoForBundleID:withCompletionHandler:
getLaunchInfoForVersion:withCompletionHandler:
isFeedbackEnabledForBundleID:withCompletionHandler:
isLaunchScreenEnabledForBundleID:withCompletionHandler:
setFeedbackEnabled:forVersion:withCompletionHandler:
setLaunchScreenEnabled:forVersion:withCompletionHandler:
setLaunchInfo:withCompletionHandler:
submitFeedback:withCompletionHandler:
updateTestNotes:forVersion:withCompletionHandler:
_setUserVersion:
currentUserVersion
_legacy_valueDictionaryWithAsset:
dPInfo
_dataForRequestWithKnownIAPs:revision:
writeUInt32:withCode:
_requiredFields
writeString:withCode:
purchaseDate
initWithKnownIAPs:currentRevision:
_odr_isInternetHostReachable
_odr_isContentValid
_requestURLWithError:
requestingAccount
purchaseHistoryContext
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
_responseData
_hasRequestedAuth
setDatabasePath:
isDeviceInEduMode
systemContainerURL
_applicationTaskLock
sentinelFileURL
isAssetPacksDirectoryEmpty
setLibraryPath:
setLegacyDatabasePath:
setAssetPacksPath:
_libraryPath
_legacyDatabasePath
_assetPacksPath
updateReportForRequestID:withSecondsRemaining:bytesDownloaded:
_lastEnhancedProgressReport
_tagRequests
_show
_initWithItems:account:client:
subscriptionEntitlementsURL
_newResponseWithURLResult:error:
allowPromptForAuth
_hasAttemptedAuth
_allowPromptForAuth
_segment
_prepare:installEvents:
_allApps
_dataForRequestWithKnownApps:revision:
initWithKnownApps:currentRevision:
_knownApps
indexOfObjectPassingTest:
removeCharactersInString:
_setNullableValue:forKey:
_boolForKey:applicationId:ifMissing:
_setBool:forKey:applicationId:
_doubleForKey:applicationId:ifMissing:
_setDouble:forKey:applicationId:
_copyNumberForKey:applicationId:
accountPropertyForKey:
recordMigratedAppUsageDB
crossfireNextPostTargetDate
crossfirePostIntervalSecondsOverride
crossfirePostMetricsSamplingPercentageOverride
setCrossfireNextPostTargetDate:
setDiagnosticClockEnabled:
setDiagnosticClockOffset:
appUsageDBMigrated
appUsageNextPostTargetDate
appUsagePostMetricsSamplingPercentageOverride
clearAppUsageLaunchesIntervalStartDate
setAppUsageDBMigrated
badgeCount
marketingDemoMode
setBadgeCount:
ocelotDefaultApp
setArcadeRepairTimeout:
setOcelotAppAnalyticsClientID:
setOcelotApps:
setOcelotPayoutResetDate:
oncePerBootItems
setOncePerBootItems:
powerPluggedInOverride
clearShouldSuppressTermsAndConditionsDialogs
followUpAccounts
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreItemsForKey:
setFollowUpAccounts:
setRestoreItemKinds:
setRestoreItemValue:forKey:
setShouldSuppressTermsAndConditionsDialogs:
shouldSuppressTermsAndConditionsDialogs
lastAutoUpdateCompletionDate
previouslyInstalledProvisionedApps
setLastAutoUpdateCompletionDate:
setLastAutoUpdatePerformDate:
setPreviouslyInstalledProvisionedApps:
allowDownloadOnCellular
batterySaverEnabledOnStartup
bulletinForKey:
cellularSizeLimitOverride
clearUpdateMigrations
clearDaemonCommsSemaphore
clearJobApprovalDate
deamonCommsSemaphoreSet
disablePowerOnStartup
enableDeamonCommsSemaphore
jobApprovalDate
lastGarbageCollectionDate
lastJobCleanupDate
lastOSMigrationDate
maxConcurrentJobCount
maxConcurrentThermalLimitedJobCount
recordJobApprovalDate
recordLastGarbageCollectDownloads
recordLastJobCleanupDate
setBulletins:forKey:
setInvalidBuildToolVersions:
setUpdateMigratorConfiguration:
thermalEnabled
updateMigratorConfiguraton
useAppInstallQueue
useModernFreeSpaceCheck
waitWithTimeout:error:
_description
_sempahore
addProvisioningProfile:
setExternalIDString:
setArtworkURLString:
setMessagesArtworkURLString:
setPackageDPInfo:
setPackageSINF:
setPackageURLString:
setStoreFront:
setManifestURLString:
provisioningProfileType
setHasType:
hasType
hasAltDSID
hasAppleID
hasBundleID
setHasDownloaderID:
hasDownloaderID
hasExternalIDString
setHasExternalVersionID:
hasExternalVersionID
setHasItemID:
hasItemID
setHasPurchaserID:
hasPurchaserID
hasRedownloadParams
hasArtworkURLString
setContainsMessagesExtension:
setHasContainsMessagesExtension:
hasContainsMessagesExtension
hasItemName
setHasLaunchProhibited:
hasLaunchProhibited
hasMessagesArtworkURLString
hasPackageDPInfo
hasPackageSINF
hasPackageURLString
hasStoreCohort
hasStoreFront
hasVendorName
clearProvisioningProfiles
provisioningProfilesCount
provisioningProfileAtIndex:
hasVariantID
setHasSkipIfInstalled:
hasSkipIfInstalled
setHasIsBeta:
hasIsBeta
setIsSystemApp:
setHasIsSystemApp:
hasIsSystemApp
setIsStoreApp:
setHasIsStoreApp:
hasIsStoreApp
hasBundleVersion
hasManifestURLString
setHasSuppressDialogs:
hasSuppressDialogs
artworkURLString
containsMessagesExtension
messagesArtworkURLString
packageURLString
setProvisioningProfiles:
skipIfInstalled
isStoreApp
manifestURLString
_altDSID
_artworkURLString
_externalIDString
_manifestURLString
_messagesArtworkURLString
_packageDPInfo
_packageSINF
_packageURLString
_provisioningProfiles
_redownloadParams
_storeFront
_containsMessagesExtension
_isStoreApp
_isSystemApp
_launchProhibited
_skipIfInstalled
syncApplicationTask:
initWithApplication:purgeReason:
_purgeReason
localizedRecoveryOptions
dictionaryWithDictionary:
lib_serverDialogID
lib_addRecoveryOptions:
setClusterID:
setClusterVersion:
setUsageWeight:
switchArcadeUserURL
useArcadeSwitchUser
switchArcadeUserFallbackURL
_getSinf
_getReceipt
_newBaseRequestBodyDictionary
initWithAccount:fromUserName:proxy:
_performRequestWithError:
_repairSINFUsingContentRestore
_repairReceiptForAppProxyIOS:receiptData:
_swithUserForMacOS
_refreshReceiptForAppProxyForMacOS
_fromUserName
_swithUserBagUrl
initWithURL:forBundleID:
initWithDictionary:applyingAssetStrategy:installedItem:
_parseAssetsFromDictionary:applyingAssetStrategy:withInstalledItem:
_parseMetadataFromDictionary:
copyWritableMetadataForAccount:includeVariant:
assetWithDictionary:
deltaAssetsWithDictionary:
selectAssetFromArray:usingStategy:
selectAssetFromArray:usingStategy:withDeltaForInstalledItem:
itemWithDictionary:
copyWritableMetadataForAccount:
appReceiptData
artistName
assetDeltaPackage
gameCenterEnabled
gameCenterEverEnabled
genre
hasWatchIndependentApp
hasWatchOnlyApp
iAdAttribution
iAdConversionString
iAdImpressionString
isPurchasedRedownload
ratingLabel
ratingRank
subGenres
nameTranscriptions
_automatic
_gameCenterEnabled
_gameCenterEverEnabled
_hasMessagesExtension
_hasWatchApp
_hasWatchIndependentApp
_hasWatchOnlyApp
_purchasedRedownload
_supports32BitOnly
_appReceiptData
_artistName
_artworkURL
_assetDeltaPackage
_assetFullPackage
_cancelDownloadURL
_capabilities
_genre
_genreID
_iAdAttribution
_iAdConversionString
_iAdImpressionString
_kind
_messagesArtworkURL
_preflightPackageURL
_purchaseDate
_ratingLabel
_ratingRank
_storeTransactionID
_subGenres
_optimalDownloadWindow
_nameTranscriptions
setLenient:
timeZoneForSecondsFromGMT:
iAdConversionDate
iAdImpressionDate
_newCoordinatorWithType:forBundleID:createIfNotExisting:wasCreated:error:
_cancelOwnedCoordinatorsForBundleID:
coordinatorType
shouldCreate
setShouldCreate:
completeODRPromises
setCompleteODRPromises:
enforceImportance
setEnforceImportance:
importance
wasCreated
_createAsMobileBackup
_shouldCreate
_completeODRPromises
_enforceImportance
_wasCreated
_coordinatorType
_importance
initWithApplicationProxy:ignoreEVID:
storefrontID
initWithStoreItemID:externalVersionID:
_storefrontID
contentRestoreURL
_newBodyDictionaryWithAccountID:
keybag
_failedItems
lib_thinningHeaders
URLByDeletingPathExtension
_metadataURLForURL:
_metadataFromURL:
_suggestedLocalFilename
writeMetadata:forAssetPackAtURL:
dataWithContentsOfURL:
downloaderDSID
initWithAccount:proxy:clientIdentifierHeader:
_proxy
initWithReceiptFlags:
authenticationPromptStyle
needsAuthentication
performSinfMirartionCheckBeforeFailing
setPerformSinfMirartionCheckBeforeFailing:
skipAttribution
targetAccountID
setTargetAccountID:
_needsAuthentication
_performSinfMirartionCheckBeforeFailing
_skipAttribution
_authenticationPromptStyle
_targetAccountID
initWithTask:
originalRequest
newTaskInfoForTask:
exchangeTaskForTaskInfo:withTask:
removeAllTaskInfo
_ignoreAssetCache
_action
_promise
_requestOffset
_signpostId
_task
setProtectionType:
_checkIfFirstBoot
_markHasBooted
_hasItemComplete:
_addItemComplete:
isDeviceLocked
isScreenLocked
_deviceLockToken
_dataMigrationComplete
_deviceLocked
_setupComplete
_screenLocked
fetchPromiseID:orCreateUsingSpecification:withError:
_resetStreamAdapterWithError:
_notifyDelegateForCurrentDataPromise
preflightWithCompletion:
resetPromiseID:withError:
truncatePromiseID:usingSpecification:withError:
coordinatorPromiseDataConsumer:willBeginUsingPromise:forReference:
initWithExtractor:toPath:
_dataPromise
_promiseProvider
_specification
_streamAdapter
intent
gizmoPairingID
setGizmoPairingID:
setIntent:
_gizmoPairingID
_intent
infoEnumerator
purchase_purchaseWithPurchaseInfo:
purchase_itemResponseWithError:usingPurchaseInfo:
purchase_itemResponseFromDictionary:usingPurchaseInfo:
initWithPurchaseBatch:
sharedConnection
isDiagnosticSubmissionAllowed
effectiveBoolValueForSetting:
_featureNameForMediaType:
effectiveValueForSetting:
initWithInteger:
setClientId:
setOwnerAccountId:
_initWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
knownApps
_requestingAccount
_purchaseHistoryContext
_handleUpdatesResponse:forAccount:
_enumerateAppsByAccountUsingBlock:
initWithApps:context:
initWithUUIDBytes:
_lib_getBytes:count:
getUUIDBytes:
repairAppWithOptions:replyHandler:
initWithCatalog:andListener:
newClientForConnection:withCatalog:
unregisterNotificationClient:
registerNotificationClient:
_activeClients
_catalog
_sendJobsChanged:
_sendJobsCompleted:finalPhases:
_sendJobStatesUpdated:
_sendJobProgressUpdated:
persistenceIdentifier
shouldFilterExternalOriginatedDownloads
shouldReportDownloadProgress
_dequeuePendingJobChanges
addBarrierBlock:
_dequeuePendingJobsCompleted
_dequeuePendingStateUpdates
_dequeuePendingProgressUpdates
canAccessJob:
_persistenceIdentifier
_queuedChangedJobs
_queuedCompletedJobs
_queuedCompletedJobsPhases
_queuedProgressUpdates
_queuedStateUpdates
_shouldFilterExternalJobs
_shouldReportDownloadProgress
_deleteLastValidComponentOfPath:
_isFileSignedAtPath:withRequirement:basicCheck:
isAppleSignedFileAtPath:basicCheck:
isDeveloperSignedFileAtPath:basicCheck:
adopt:withReplyHandler:
adoptableBundleIdentifiersWithReplyHandler:
processPurchase:withReplyHandler:
startPurchase:withReplyHandler:
adoptionInterface
setAdoptionInterface:
legacyPurchaseInterface
setLegacyPurchaseInterface:
purchaseInterface
setPurchaseInterface:
_adoptionInterface
_legacyPurchaseInterface
_purchaseInterface
requiredProperties
_initWithInstall:package:coordinator:
initWithMemoryEntity:
_applyInstallOptions
initWithInstallKey:code:shouldPost:
setStoreVersionID:
setDrmMode:
setDeltaPackage:
postFailureWithError:reason:
finishInstallID:
continueInstallID:
operationForInstallID:packageID:inSession:withCoordinator:
installResponse
_installResponse
_initWithInstallID:result:error:
approveInstallID:
registerCacheDeleteInfoCallbacks
scheduledTimer
_requestFreeSpace:completionBlock:
_purgeable:urgency:
_purge:urgency:
_cancelPurge
odrPurgeCoordinator
updatePurgeableStorage
_updatePurgeableStorageWithCoaleseInterval:refresh:
setScheduledTimer:
_isStale
_refreshPurgeableStorage:
_pushUpdatedAvailableStorage:
requestFreeSpace:completionBlock:
invaldateCaches
updatePurgeableStorageRightAway
watchAppsUpdated
_periodic:urgency:
_combinedSpaceByUrgency
_freeSpaceQueue
_runQueue
_lastUpdate
_appPurgeCoordinator
_odrPurgeCoordinator
_scheduledTimer
_performFamilyInfoRequestForAccount:error:
_processURLResult:
_cachedFamilyInfoLookupResultForAccount:
_cacheFamilyInfoLookupResult:forAccount:
performTaskWithBlock:
completionHandlerAdapter
_pathForCachedFamilyInfoLookupResult
_currentCachedFamilyInfo
_updateEntity:
predicate
limitCount
entityClass
_newSelectSQLWithProperties:columns:
_newSelectSQLWithProperties:
copyEntityIdentifiers
createTemporaryTableWithName:properties:
queryDescriptor
_descriptor
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_returnsDistinctEntities
_aggregateValueForProperty:function:predicate:onConnection:
initWithFormat:
maxValueForProperty:predicate:onConnection:
_valueFromKeychainForKey:error:
_generateKeyDataError:
_saveValueToKeychain:forKey:error:
initWithBytesNoCopy:length:deallocator:
_copyErrorForOSStatus:
base64EncodedDataWithOptions:
initWithBase64EncodedData:options:
fetchKeyWithIdentifier:error:
generateKeyWithIdentifier:error:
hasFeedback
hasApplication
hasDevice
hasAppleWatch
posixTimestampMillis
setHasPosixTimestampMillis:
hasPosixTimestampMillis
appleWatch
_posixTimestampMillis
_appleWatch
_feedback
_applyChangesForChangeset:transaction:
_applyExternalChangesForChangeset:
dispatchAfterTransaction:
_initWithDictionary:applyingAssetStrategy:installedItem:
_initWithError:accountID:
_errorWithFailureType:customerMessage:
_optimalDownloadWindowFromDictionary:
dateBySettingHour:minute:second:ofDate:options:
dateByAddingUnit:value:toDate:options:
errorItemResponseWithError:accountID:
updateItemResponseWithDictionary:installedItem:
errorForItemID:
anonymousPings
shouldCancelPurchaseBatch
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
_itemErrors
_isPreorder
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_anonymousPings
_clusterMappings
_keybag
setRemaining:
setUpdate:
_remaining
_bytes
copyEvaluatorDownloadUsingConnection:
_isFactoryInstallAppProxy:logUUID:
establishesActiveAccount
_attemptAuthenticationWithRequest:error:
_lastClaimBuildVersionWithAccount:
ignoresPreviousClaimAttempts
_copyUnclaimedApplicationsWithLogUUID:
_performClaimForAccount:unclaimedApplications:error:
_updateAppsUsingResponseDictionary:account:
_setClaimBuildVersion:forAccount:
lib_storeMetadata
isFactoryInstall
claimHistory
_requestParametersWithAccount:unclaimedApps:logUUID:
upToDateClaimURL
lib_newDefaultSessionWithDelegate:
setClaimHistory:
updateSINFWithData:forApplication:options:error:
lib_updateMetadataForApplication:error:
setEstablishesActiveAccount:
setIgnoresPreviousClaimAttempts:
_establishesActiveAccount
_ignoresPreviousClaimAttempts
screenshotsCount
clearScreenshots
screenshotsAtIndex:
screenshotsType
hasEmail
hasComment
hasIncidentId
screenshots
setScreenshots:
comment
incidentId
_comment
_email
_incidentId
_screenshots
_predicateFromQuery:
sortOptions
_propertyForSortOptionName:
ascending
_valueForDatabaseProperty:withError:
searchTerm
storeIDs
hashTableWithOptions:
_performMigrationIfNeededForStore:
transactionClass
_modifyUsingTransactionClass:withBlock:
_reentrantSafePerformBlock:
sessionClass
_readUsingSession:withBlock:
databasePath
encryptionKeyId
sleepForTimeInterval:
schemaName
connectionNeedsResetForReopen:
connectionNeedsResetForCorruption:
modifyStore:usingTransaction:
modifyStore:usingTransactionClass:withBlock:
readStore:usingSession:
verifyDatabaseIntegrity
_transactionQueue
_migratedStores
setBytes:
setAutomatic:
_valueDictionaryWithStoreItem:
initWithStoreItem:
bestPackageFromArray:
_packages
applyBinding:atIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
joinClauseForProperty:
_property
initWithLongLong:
bindUUID:atPosition:
value
comparisonType
disambiguatedSQLForProperty:
_comparisonTypeString
_comparisonType
_value
isNegative
values
query
copySelectSQLWithProperties:
containsPredicateWithProperty:query:queryProperty:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
_matchesNull
predicateMatchingAnyPredicates:
predicates
unionSet:
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
downloadRequestUUIDs
setDownloadRequestUUIDs:
purgeReason
setDownloadIdentifier:
addDownloadRequestUUID:
removeDownloadRequestUUID:
setLaunchesWeight:
_clusterID
_clusterVersion
URLResponse
lib_addUserInfoValue:forKey:
lib_objectForCaseInsensitiveKey:
initWithManagerIdentifier:
addPurchases:withCompletionBlock:
purchaseManager:didFinishPurchasesWithResponses:
_hasDisplayedRequestFailure
_pendingPurchases
_purchaseManager
pendingBootstrap
_queryActiveInstallationStatisticsOnConnection:
_queryJettisonCandidatesOnConnection:
_verifyBootstrapCompleteOrNotRequired:
_findJettisonCandidateForPriority:
setActiveInstallsCount:
setStartedInstalls:
_verifyActiveInstallation:
removeObjectsAtIndexes:
_jettisonCandidates
_activeInstallsCount
_startedInstalls
shouldPostAppUsageMetrics
appTasteProfileEnabled
_getGroupingToken:
_getClusterMappingsWithCompletionBlock:
_importClusterMappings:
_recordInternalEventsForBundleIDs:eventType:installType:
_recordMetrics
_reloadClusterMappings:
setAppUsageActorID:
clearAppUsageRecordMetricsForActorIDSession
_resetWithReason:
_setClusterMappings:completionBlock:
_fullResetWithReason:
_getClusterMappingIDs:
setClusters:
_getPriorAppEventsWithMetadata:context:
_getCrashAppEventsWithContext:
setFlushTimerEnabled:
resetAppUsageActorIDDateWithReason:nextPostDate:
_clearClusterMappingsForBundleIDs:
shouldResetAppUsageActorID:
_clearActorID:nextPostDate:
flush
scheduleAppUsageFlushDnuWithReason:
appUsageActorID
setEncodingVersion:
initWithDurationInDays:bundleIDs:
_getClusterMappings:
clusterKey
weightedForgroundUsage
setWeightedForgroundUsage:
weightedAppLaunches
setWeightedAppLaunches:
appCount
setAppCount:
clusterID
clusterVersion
addClusterID:
addClusterVersion:
addWeightedAppForgroundUsage:
addWeightedAppLaunches:
addClusterAppCount:
clearAppUsageIntervalStartDate
cancelBackgroundTaskWithIdentifier:
_shouldEnableAppUsageMetricsForSession
setAppUsageEnableMetricsForActorIDSession:
appUsageEnableMetricsForActorIDSession
enqueueEvents:
underlyingDictionary
_clearClusterMappings
clusterMappings
resetClusterMappingRefreshTaskWithReason:
resetAppUsageTaskWithReason:
initWithExternalMapping:
getGroupingToken:
getClusterMappingsWithCompletionBlock:
importClusterMappings:
reloadClusterMappingsWithCompletionBlock:
resetActorIDWithCompletionBlock:
setClusterMappings:completionBlock:
_weightedAppLaunches
_weightedForgroundUsage
_appCount
_validateSession
sessionIdentifier
_finalizeSessionWithReason:
beginSession
importSession:
_setTrackingSessionState:
_findActiveSessionForBundleID:andSessionID:
heartbeatReceived
endSessionWithReason:
_flushSession
updateSession:
markAsFlushed
lastHeartbeatDate
unrecordedSessionLength
_suspendTimerIfNecessary
_currentSession
_currentlyTrackingSessions
_sessionValidationTimer
_handleInstalledEventNotification:
_handleUninstalledEventNotification:
_handleBetaAppCrashedNotification:
applicationsDidInstall:isPlaceholder:
_parseRegistrationNotification:usingBlock:
_parseProgressNotification:usingBlock:
_supervisor
_systemAppRequests
_close
_verifiedStatementForPreparedStatement:error:
executePreparedStatement:error:bindings:
_executeStatement:error:
_verifiedStatementForSQL:error:
finalizeStatement
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
isReadOnly
_finalizeAllStatements
_executeWithError:usingBlock:
step
_resetAfterCorruptionError
_resetAfterIOError
_performResetAfterCorruptionError
initWithStatement:onConnection:
_statementForPreparedStatement:error:
executePreparedQuery:withResults:
executePreparedStatement:error:
finalizePreparedStatement:error:
lastChangeCount
prepareStatement:error:
truncate
_afterTransactionBlocks
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
cacheDeleteUpdatJobWithInterval:
updateCheckJobWithDate:allowsCellular:requireScreenSleep:gracePeriod:
usageCheckJob
xpcMaintenanceActivityWithDuration:
xpcActivityWithDuration:
xpcUpdatesCheck
copyBackgroundTaskAgentJob
requestIdentifier
_job
_requestIdentifier
watchSuppressDialogs
ams_setDSID:
ams_setAltDSID:
previousExternalVersionID
previousVariantID
lib_setAppExtVrsId:
_appAlreadyInstalledForPurchaseInfo:hasVersionOfBundleIDInstalled:
initWithPurchaseInfo:requestThrottle:
_appAlreadyRequestedForPurchaseInfo:
lib_appExtVrsId
_companionBundleIDForItemID:requestToken:
_buyParams
_authenticateWithClientInfo:error:
initWithPurchaseType:buyParams:
setAccountId:
productIdentifier
enquePurchases:
triggeredQueueCheck
_processPurchaseResult:
excludeReceiptFromRequest
quantity
requestData
discountIdentifier
discountKeyIdentifier
discountNonceString
discountSignature
discountTimestamp
responseDictionary
accountId
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleAuthenticateRequest:context:purchaseQueue:completion:
handleDialogRequest:context:purchaseQueue:completion:
hideConfirmation
setTransaction:
_purchaseQueue
_excludeReceiptFromRequest
_hideConfirmation
_productIdentifier
_quantity
_discountIdentifier
_discountKeyIdentifier
_discountNonceString
_discountSignature
_discountTimestamp
_requestData
_transaction
lib_defaultConstraintsWithError:
initWithHoldTime:
_holdTime
_associatedReaderForObject:
_setAssociatedReader:forObject:
_predicateForKindOfClass:
numberWithUnsignedLong:
setDefaultButtonTag:
setOptionFlags:
_optionFlags
_processInstalledApps
clusterMappingURL
_createClusterMappings:
_itemIDToBundleIDMappings
_installedApps
_copyEntitlementsForTask:withPID:
_hasLegacyEntitlement:forTask:withPID:
initWithAuditToken:forPID:
hasEntitlement:
_entitlements
_assetPacks
initSandboxed:
weakObjectsHashTable
_bagChanged:
_fetchStorefrontNotifyClient:
countryCode
storefront:changed:
valueWithCompletion:
sandboxManager
addObserver:
_accessQueue
_observers
_storefrontCountry
_updateSemaphore
_initWithAddedIAPs:removedIAPs:revision:isUpdate:forAccount:
newRefreshResponseWithIAPs:revision:forAccount:
newUpdateResponseWithAddedIAPs:removedIAPs:revision:forAccount:
addedIAPs
removedIAPs
_update
_addedIAPs
_removedIAPs
globallyUniqueString
initWithPath:flags:size:
size
fileDescriptor
_fStore
_fileDescriptor
_updatePhaseForJobWithBundleID:phase:
installProgress
_predicateForBundleID:toUpdateToPhase:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
presentFirstUsageDialogIfNeededForBundleID:
moveItemAtURL:toURL:error:
lowercaseString
chunkDigests
chunkType
_chunkSize
_chunkDigests
_chunkType
isSharingPurchases
ams_setNullableObject:forKey:
iCloudUsername
iTunesUsername
lastName
_currentSignedInUser
_askToBuyEnabled
_sharingPurchases
_firstName
_iCloudDSID
_iCloudUsername
_iTunesDSID
_iTunesUsername
_lastName
_titleForItemName:andTotalCount:
dialogWithItemName:
_readConfigurationFromUserDefaultsRepresentation:
_writeConfigurationToUserDefaultsRepresentation:
_configuration
_parseDictionary:
removeObjectIdenticalTo:
_notificationClients
_notificationSources
setInstallCode:
setInstallKey:
installCode
installKey
queueDate
completionDate
storeVersionID
lib_sanitizedDescription
setCompletionDate:
_postIfAllowed
aim_postEventWithPropertyValues:
_didPost
_shouldPost
_appleID
_hasRecentlyAttemptedToLaunchApplication:
_recordAttemptToLaunchApplication:
optionsWithDictionary:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
_currentClient
appAdamID
offerID
flushMetricsWithCompletionBlock:
reportAppEvent:completionBlock:
sbsyncWithCompletionBlock:
sbsyncWithDuration:completionBlock:
subscriptionDetailsWithCompletionBlock:
subscriptionStateWithCompletionBlock:
_webkit_encodeHostName
lib_stringSantiziedAndTruncatedToLength:
lib_stringByLimitingToLength:addElipsis:
coordinatorForJobID:
coordinatorForBundleID:error:
failAppPromiseID:withReason:
cancelForReason:
_removeCoordinatorForJobID:
_agentForCoordinator:
uniqueID
_uniqueIDToAgent
willChangeValueForKey:
didChangeValueForKey:
setExecuting:
setFinished:
isExecuting
_executing
_finished
_setupDynamicStoreSingleton
reachabilityWithAddress:
_dynamicStoreSingleton
stopNotifier
localWiFiStatusForFlags:
networkStatusForFlags:
reachabilityWithHostName:
reachabilityForInternetConnection
reachabilityForLocalWiFi
isEthernetActive
startNotifier
connectionRequired
currentReachabilityStatus
_alwaysReturnLocalWiFiStatus
_reachabilityRef
setNextPostTargetDate:forActivity:
_nextPostDateForActivity:validatedRefreshInterval:
_addIntervalActivity:activityShortName:scheduledDate:refreshInverval:forceReset:reason:
isActivityEnabled:
_addActivityType:reason:forceReset:
_addUpdateActivityWithReason:
_addOcelotResetPayoutActivityWithReason:
postIntervalSecondsOverrideForActivity:
crossfirePostIntervalSeconds
ocelotPostIntervalSeconds
ocelotPostPayoutIntervalSeconds
sbsyncRefreshIntervalSeconds
_activityTypeForName:
nextPostDateForActivity:
lib_isBefore:
handleWakeWithName:
lastOSBuildVersion
setLastOSBuildVersion:
registerActivity:withReason:
_activityNameForType:
nextOcelotPayoutResetDate
_handleWakeupForActivity:
_registerActivity:activityShortName:criteria:reason:
_runXPCActivityIfNeeded:withActivityName:
_setupActivities
notificationForRefreshWithDeviceID:
notificationForInstalls:withDeviceID:
notificationForUninstalls:withDeviceID:
_selector
_target
enumeratorForObjectsOfClass:
_array
queuePurchaseInfo:
_failPurchaseWithError:usingPurchaseInfo:
_completePurchaseBatch
_setPurchase:
_setSuccess:
initWithPurchaseResponseItems:
_setError:
initWithPurchaseInfo:requestToken:
cancelPurchaseBatchWithError:
_responseItems
_machineBased
commitExternalChanges
ams_iTunesAccounts
setPreventSampling:
setEventVersion:
_aim_defaultProperties
_initWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
lib_firstActivity
setAcquireFunction:
setRelinquishFunction:
setHashFunction:
setIsEqualFunction:
setSizeFunction:
setDescriptionFunction:
isDSIDLess
affiliateIdentifier
_purchase_clientInfoUsingRequestToken:
purchase_purchaseInfoWithRequestToken:
setExternalIDs:
externalIDs
addExternalIDs:
responseWithExternalIDs:
initWithSandbox:
_keySet
bagForProfile:profileVersion:processInfo:
createSnapshotWithCompletion:
addBagKey:valueType:
isExpired
profile
profileVersion
adoptProductsURL
adoptionEligibilityURL
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
crossfireSamplingPercentage
appUsageSamplingPercentage
subscriptionEntitlementsTimeout
doNotUpdateList
v2UpdateSchedulingEnabled
updatesReloadInterval
updatesReloadIntervalCellular
appleIDLookupURL
renewVPPReceiptURL
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
sbsyncSandboxURL
expired
copyMetricsDictionary
requestCount
packageURL
lib_URLByStrippingQuery
deltaPackage
drmMode
taskMetrics
lib_statusCode
isCellular
networkProtocolName
setPackageURL:
setTaskMetrics:
setRequestCount:
_refreshReceiptForApplication:withOptions:error:
_preformMigrationCheckForApp:
_optionsForApplication:
_receiptExperationDataForApp:
_vppFlagsForApp:
initWithItemIdentifer:externalVersionIdentifier:bundleIdentifier:bundleVersion:skipDownloads:
_postBodyDataWithApplication:options:error:
provider
setDataProvider:
setURLBagKey:
setPromptStyle:
setAccountScope:
setURLBagType:
setAuthenticationContext:
output
_handleResponse:forApp:options:
_checkExpirationNotificationDate:
_receptForApp:
_operationResult
_resultsBlock
ams_configurationWithProcessInfo:bag:
setAdamId:
setLastModifiedDate:
setPurchaseDate:
setExpirationDate:
setAppAdamId:
setHasUsedFreeOffer:
setHasUsedIntroPricingOffer:
setSubscriptionFamilyId:
setAutoRenewStatus:
_deletedItems
_currentItemsArray
_serverRevision
pendingInstalls
createsPlaceholders
initWithApplicationMetadata:
setCompleteDataPromise:
_parseResponseData:
IAPInfoBaseURL
IAPInfoDatabaseID
isSuccess
serverRevision
lib_setPropertiesWithStoreItem:
setReferrerApp:
setBundleShortVersionString:
setGameCenterEverEnabled:
setNameTranscriptions:
updateiTunesMetadataWithData:forApplication:options:error:
lib_setPropertiesWithPurchaseInfo:
lib_metadataFromApplication:error:
lib_metadataFromDatabaseRepresentation:error:
failureError
setStatusCode:
prepareMetricsProperties
applicationSite
setApplicationSite:
No StoreKit User Messages Database migration function for %li => %li
Received SIGTERM, stopping appstored
Got message URL from response
Error in messages response: %{public}@
Error parsing messages response: %{public}@
No URL in messages response: %{public}@
Error parsing URL in messages response: %{public}@
Failed to get messages request URL, error: %{public}@
Failed to add parameters to messages request URL
Error inserting message info: %{public}@ for DSID: %@, bundle ID: %@, status: %@
Failed to check messages, account has no DSID
No message in database for DSID: %@, bundle ID: %@
StoreKit: Opening message URL: %@
StoreKit: Failed to create message URL
Error removing message info: %{public}@ for DSID: %@, bundle ID: %@
Throttle: Deleted all records at: %{public}@
Throtle: Deleting records at: %{public}@ failed: %{public}@
Throttle: Read %lu records from: %{public}@
Throttle: Reading from: %{public}@ failed: %{public}@
Throttle: Wrote %lu records to: %{public}@
Throttle: Writing %lu records to: %{public}@ failed: %{public}@
[%@]: Began showing dialog
[%@]: End showing dialog
[%{public}@]: Starting appstored (Built: %s %s)
[%{public}@]: Started with migrations required...
[%{public}@]: Received low memory warning
Received locale change, stopping appstored
[%{public}@]: Startup complete
[%@]: Creating listener for service name: %@
[%@]: Handling dialog from notification: %@
Failed to initialize ODR library paths
Registering for XPC Maintenance Task
Registering for XPC Data Migration Event
Initializing ODRManager
[%@]: Starting Diagnostic service
[%@]: Starting IAP Info service
[%@]: Starting Installation service
[%@]: Starting Library Service
[%@]: Starting Purchase History service
[%@]: Starting Purchase service
[%@]: Starting Repair Service
[%@]: Starting Update Service
[Daemon]: Fresh install detected upgrading to %@
[Daemon]: OS version has updated from %@ to %@
[Daemon]: OS version %@ is current
[%@]: Running the registered maintenance block
[%@]: XPC Maintenance activity checking in
[%@]: No criteria set, correcting that
[%@]: Setting the criteria to: %@
Throttle: Discarding expired record for %{public}@ / %{public}@ (%.0f seconds)
Throttle: Blocking further requests for %{public}@ / %{public}@: %{public}@
Throttle: Unblocking further requests for %{public}@
Throttle: Unblocking requests after expiry for %{public}@
Throttle: Blocking request for %{public}@ will unblock after %.0f seconds
Throttle: Unblocking requests for new version of %{public}@
Message info init userID nil
Message info init bundleID nil
Diagnostic clock enabled, current offset: %.0f
Diagnostic clock offset updated: %.0f
[%@]: Cancelling ... 
[%@]: Starting ... 
[%@]: Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@]: Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@
[%{public}@]: Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@ hasMetadata: %d
[%{public}@]: Created app event for bundleID: %{public}@ with type: %{public}@
[%@]: Type: %ld : %{public}@
[%@]: Failed to create event with topic: %{public}@
[%@]: Not recording uninstall for offloaded bundleID: %{public}@
[%@]: Not recording uninstall for placeholder bundleID: %{public}@
[%@]: Warning: Did not find a corresponding delete event for bundleIDs: [%{public}@]
[%@]: Not recording uninstall for ineligible bundleID: %{public}@
[%@]: Not recording uninstall for bundleID: %{public}@ due to lack of metadata
[%{public}@]: Looking for launch events from: %{public}@ to: %{public}@ for: %ld apps(s)
[%{public}@]: Could not find app metdata for: %{public}@
[%{public}@]: Non candiate app with bundleID: %{public}@
[%{public}@]: Skipping too short launch for: %{public}@. minTime: %ld runningTime: %lld
[%{public}@] [%{public}@:%lld] Writing metadata
[%{public}@]: Unable to record current apps due to error: %{public}@
[%{public}@]: Recorded metadata for %ld app(s)
[%{public}@]: Stitching together an idle event for %{public}@
[%@]: Canceling %lu job(s) for client %@: %@
[%@]: Finishing %lu job(s) for client %@: %@
[%@]: Fetching all jobs for client %@
[%@]: Fetching %lu job(s) for client %@: %@
[%@]: Pausing %lu job(s) for client %@: %@
[%@]: Registered legacy client: %@
[%@]: Resuming %lu job(s) for client %@: %@
[%@]: Treating %i as legacy client
[%@]: Connection denied for pid: %i for non entitled client
[%@]: Client %@ disconnected
[%{public}@]: Got connection from pid: %i
[%{public}@]: Connection interrupted for pid: %i
[%{public}@]: Connection invalidated from pid: %i
[%@]: Sending progress: %@ -> %@
[%@]: NOTIFY STATES: %@
[%@]: NOTIFY CLIENT: %@ -> %@
[%@]: Mismatched capabilites: %{public}@
[%{public}@]: Using old bag for key: %@
[%@]: Cancel progress %@ progress: %@
[Claim] Skipping claim for %{public}@: Bundle ID not eligible
[Claim] Skipping claim for %{public}@: Not installed
[Claim] Skipping claim for %{public}@: Not store vended
[Claim] Skipping claim for %{public}@: Not missing SINF
[Claim] Skipping claim for %{public}@: Missing store identifiers
[Claim] Skipping claim for %{public}@: Not missing storeFront
[Claim] Skipping claim for %{public}@: Not missing account
[Claim] Attempting claim for %{public}@: Passes eligible for corrupted metadata
[%@]: No placeholder, skipping uninstall for: %@
[%@]: Uninstall placeholder: %@
[%@]: A consumer of type: %{public}@ was already registered for action type: %ld
[%@]: A consumer was never registered for action type: %ld
[%@]: Flushing %lu message(s) for action type: %{public}@
[%@]: %lu message(s) pending but no consumer available for action type: %{public}@
[%@]: Skipping environment check and defaulting to: %{public}@
[%@]: Shutting down existing connection before starting up in new environment: %{public}@
[%@]: Environment is invalid, using existing connection instead error: %{public}@
[%@]: Environment is invalid, and no other connection is available error: %{public}@
[%@]: Failed cache app with no bundleID
[%@]: Failed to cancel progress with no bundleID
[%@]: Canceling progress for bundleID: %{public}@
[%@]: Removing placeholder for bundleID: %{public}@
[%@]: Failed find existing app with no bundleID
[%@]: Failed find existing progress with no bundleID
[%@]: Failed to finish progress with no bundleID
[%@]: Finished progress for bundleID: %{public}@ reason: %{pulbic}@
[%@]: Failed to finish progress for bundleID for: %{public}@
[%@]: Clearing out dirty progress for bundleID: %{public}@ reason: %{public}@
[%@]: Failed to preFinish progress with no bundleID
[%@]: Updating progress for bundleID: %{public}@ to installed with reason: %{public}@
[%@]: Updated evid for bundleID: %{public}@ to %lld
[%@]: Marked progress as %lld for bundleID: %{public}@ reason: %{public}@
[%@]: Failed to set fraction completed: %.2f with no bundleID
[%@]: No progress exists for: %{public}@ trying to begin anyway
[%@]: Setting fraction completed: %.2f for bundleID: %{public}@
[%@]: Failed to set fraction completed: %.2f for: %{public}@
Skipping app for catalog query since it is reporting remotely: %{public}@
[%@]: Failed to begin progress with no bundleID (storeItemID: %{public}@)
[%@]: Progress already begun for bundleID: %{public}@ storeItemID: %{public}@
[%@]: Beginning %{public}@ for bundleID: %{public}@ storeItemID: %{public}@
Flushing progress: %{public}@
Forcing refresh after unexpected failure validating manifest during preflight for %{public}@ error: %{public}@
[%@]: Posting bulletin with title: %@ message: %@ for client %@
[%@]: Synchronizing active iTunes account after account store change notification: %@
[%@]: Current iTunes account has no DSID: %{public}@
[%@]: Posting notification after active iTunes account changed: %{public}@
[%@]: Posting notification after active iTunes account updated: %{public}@
[%@]: Ignoring update because active iTunes account did not change: %{public}@
[%@]: Received account change notification but there is still no active iTunes account
[%@]: Received account change notification but the account type didn't match: %@
[%@]: Should notify after iTunes account became active: %{public}@
[%@]: Should notify after iTunes account became inactive: %{public}@
[%@]: Should notify after iTunes account changed: %{public}@
Refusing to bootstrap system app with missing bundle identifier
Attempting to bootstrap %lu system app(s)
[%{public}@] Bootstrap completed
Received item for unexpected system app: %{public}@
Bootstrap for %lu system app(s) failed with error: %{public}@
Import success for job: %{public}@ / %{public}@
Import failed for bundleID: %{public}@ error: %{public}@
Skipped duplicate job: %{public}@ / %{public}@
Purchase failed for batch: %{public}@ error: %{public}@
Resetting update state following failed purchase for: %{public}@
Perform updates start with reason: %{public}@
Could not find update for bundleID: %{public}@
Skipping %{public}@ due to restrictions, parentalControlsRank: %ld restrictionsRank: %ld
[%{public}@]: Created purchase info for app with bundle ID %{public}@ and item ID: %lld
Adding update purchase for bundleID: %{public}@ account: %{public}@
Perform updates complete with reason: %{public}@
Error performing purchase for account: %{public}@ error: %{public}@
Performing %lu purchase(s) for account: %{public}@
Error performing purchases for account: %{public}@ error: %{public}@
[%{public}@] Showing cellular prompt for 'update all'
[%{public}@] Allowing download over cellular for 'update all'
[%{public}@] Showing low data prompt for 'update all'
[%{public}@] Allowing download over low data for 'update all'
[%@]: Parser canceled
[%@]: Parser failed with error: %{public}@
Failed find matching device for: %{public}@
Failed to get destination identifier for: %{public}@
Unsupported device: %{public}@
[%@]: Purgeable request with volume: %@ urgency: %ld client: %@
[%@]: Purgable app request resulted in error: %@
[%@]: Purgeable request complete for volume: %@ urgency: %ld client: %@ purgeableSize: %lld
[%{public}@] Restore failed permanently with error: %{public}@
[%{public}@] Restore failed temporarily with error: %{public}@
[%{public}@]: gamePlayDidBeginWithCompletionHandler called by %{public}@
[%{public}@]: gamePlayDidEndWithReason:andSessionID:andCompletionHandler called by %{public}@
[%{public}@]: heartBeatForSessionIDWithCompletionHandler called by %{public}@
Logged into accountID: %{public}@ appleID: %{public}@
[%{public}@] Completing coordinator for restore type: %ld reason: %{public}@
[%{public}@] Failed to find existing coordinator. Error: %{public}@ reason: %{public}@
[%{public}@] Failing coordinator with reason: %{public}@
[%{public}@] Failed to find existing coordinator to fail with reason: %{public}@
[%{public}@] Using downloader-dsid
[%{public}@] Using purchaser-dsid
[%{public}@] Setting accountID: %{public}@ discovered using alt-dsid: %{public}@
Bootstrapping restores for accountID: %{public}@ with reason: %{public}@ userIntiated: %d
Bootstrapping all restores with reason: %{public}@
Bootstrapped %ld ordered / %ld non-ordered restores for accountID: %{public}@
Bootstrapped %ld ordered / %ld non-ordered restores
Bootstrap completed. Pending lookup: %ld hard failures: %ld soft failures: %ld
Bootstrap completed. Will attempt to process failures if needed
Bootstrap completed. Will not attempt to process failures if needed
%{public}@: Attempting metadata lookup for %ld apps
%{public}@[%{public}@]: Hard failing %ld non ordered restores due to token failure
%{public}@[%{public}@]: Failing %ld token failures. Failing coordinators: %d
%{public}@[%{public}@]: Lookup complete with %ld successful lookups and %ld failures
%{public}@: Bootstrap completed with successful lookups: %ld hard failures: %ld
%{public}@: No restores to bootstrap
Creating observer to bootstrap restore for reason: %{public}@. Setup complete: %d migrator complete: %d
Using previously soft fail scheduled date: %{public}@ for activity: %{public}@ interval: %lld
Keeping previously soft fail scheduled date: %{public}@ for activity: %{public}@ interval: %lld
Using new date: %{public}@ for activity: %{public}@ interval: %lld
Hydrate: Finishing completed content restore items
Ordered: Finishing completed content restore items
Non Ordered: Finishing completed content restore items
Device state changed and ready to restore. Setup complete: %d migrator complete: %d
Device state changed setup not ready for restore. Setup complete: %d migrator complete: %d
Restore attempted without metadata
[%{public}@] %{public}@ start
[%{public}@] Moving install phase to with coordinatorID: %{public}@
[%{public}@] %{public}@ : Encountered a token error: %{public}@ for account: %{public}@
[%{public}@] %{public}@ : Retrying restore with account: %{public}@/%{public}@
[%{public}@] %{public}@ : Failed to obtain fresh account for appleID: %{public}@
[%{public}@] %{public}@ : Not prompting do to userInitiated: %d appleID: %{public}@
[%{public}@] %{public}@ metadata lookup succeeded
[%{public}@] %{public}@ Promoting all other apps for account: %{public}@/%{public}@ following successful hydration
[%{public}@] %{public}@ failed metadata lookup
[%{public}@] %{public}@ complete with error: %{public}@
Failed %ld items for accountID: %{public}@ due to token error
Failing out remaining %ld items for accountID: %{public}@ due to token error
Batch complete for accountID: %{public}@ batch successes: %ld batch failures: %ld batch remaining: %ld
[%{public}@] Couldn't find an appleID
[%{public}@] Couldn't find a downloaderID or purchaserID
Skipping previously attempted preflight of account: %{public}@/%{public}@
Preflighting account: %{public}@/%{public}@
Error authenticating for appleID: %{public}@ error: %{public}@
Failing all coordinators for appleID: %{public}@ error: %{public}@ following a user canceled dialog
Updated attempted preflight accountIDs to: [%{public}@]
Screen sync not preflighting accounts: %{public}@
Retrying restore of apps for account: %{public}@/%{public}@
[%{public}@] Making a promoting coordinator
Re-bootstrapping account: %{public}@/%{public}@ apps: [%{public}@]
[%{public}@] Retrying following authentication of account: %{public}@/%{public}@
Non-matched failed restore apps are: [%{public}@]
[%{public}@] Downloading payload to: %{public}@
Downloading asset for request: %{public}@
Error downloading IAP asset for %{public}@: %{public}@
Extracting %{public}s to %{public}s
%@: BOMCopier failed with error: %d
Moved download %{public}@ to %{public}@
[%@]: Received connection from client: %{public}@
[%{public}@] Initiating re-purchase for expired update
[%{public}@] Successfully to re-purchased expired update
[%{public}@] Failed to re-purchase expired update error: %{public}@
[%{public}@] Timeout while waiting to re-purchase expired update
[%{public}@]: Error obtaining app history: %{public}@
[%{public}@]: Checking store availability for %ld purgeable app(s)
[%{public}@]: Encountered store availability check error: %{public}@
[%{public}@]: Found %ld available in store app(s)
[%{public}@]: Adding purge app: %{public}@
[%{public}@]: App: %{public}@ longer available in the store
[%{public}@]: Purge store availability check failed with error: %{public}@
[%{public}@]: Found %ld app(s) available in store
[%{public}@]: Skipping app: %{public}@ availableInStore: %d
[%{public}@]: Default blacklist is: [%{public}@]
[%{public}@]: May purge app: %{public}@
[%{public}@]: Purgeable is: %lld bytes from %ld app%{public}@ for urgency: %ld
[%{public}@]: Purged %ld app(s) for total purge of %ld bytes performAvailabilityCheck: %d
Purgeable availability lookup resulted in error: %{public}@
[%{public}@]: Getting app launch history from %{public}@ urgency: %ld
[%{public}@]: Found inside launch for bundleID: %{public}@ launch date: %{public}@
[%{public}@]: Found outside launch for bundleID: %{public}@ launch date: %{public}@
[%{public}@]: Found inside bucket launches for bundleID: %{public}@ launch inside window: %{public}@ count: %{public}@
[%{public}@]: Found outside bucket launches for bundleID: %{public}@ launch outside window: %{public}@ count: %{public}@
[%{public}@]: Returning purgeable apps based on app last modified date: %{public}@
[%{public}@]: Found inside last modified for bundleID: %{public}@ last modified date: %{public}@
[%{public}@]: Found outside last modified for bundleID: %{public}@ last modified date: %{public}@
[%{public}@]: Skipping bundleID: %{public}@ last modified date: %{public}@
[%{public}@]: Checking for purgeable apps with last modified grace period date: %{public}@
[%{public}@]: Grace period start date: %{public}@ offloading grace period start date: %{public}@ beyondGracePeriod: %d
[%{public}@]: offloading date not set
[%{public}@]: Error finding modified date for bundleID: %{public}@ error: %{public}@
[%{public}@]: Adding: %{public}@ with reason: %{public}@
[%{public}@]: Skipping: %{public}@ with reason: %{public}@
[%{public}@]: Skipping: %{public}@ with reason: Has usage in window
Not purging candidate: %{public}@ because duet says its extension was last used: %{public}@
Not purging candidate: %{public}@ because duet says it was last used: %{public}@
Added Purge candidate: %{public}@ purged: %lld
Purge stopped at app: %{public}@ purged: %lld
Error obtaining termination assertion before offloading bundleID: %{public}@
Timeout waiting for assertion for bundleID: %{public}@
Purged app: %{public}@ purged: %lld
Unable to purged app: %{public}@ result: %d error: %{public}@
Could not purge bundleID: %{public}@ becasue we could not get a termination assertion
[%{public}@]: Error fetching install applications on paired device: %{public}@
[%{public}@]: Timed out getting watch apps for %{public}@
[%{public}@]: Active app bundles with watch apps are: [%{public}@]
Creating listener to initialize network dependent items
[%{public}@] User not opted-in to list app events
[Arcade] Record app event: [%{public}@]
[Arcade] User not opted-in to record app event: [%{public}@]
[Arcade] Apps deleted: [%{public}@]
[Arcade] Not recording apps deleted: [%{public}@]
[Arcade] Recording launch events
[Arcade] Not enabled to send Ocelot metrics
[Arcade] Not recording apps install: [%{public}@]
[Arcade] Apps installed [%{public}@] arcade install count: %ld arcade app count: %ld
[%{public}@] Posting metrics
[%{public}@] Not enabled
[%{public}@] Resetting metrics
[%{public}@] Payout metrics reset with current payout reset time: %{public}@
[%{public}@] External payout metrics reset with current interval start time: %{public}@
[AccountEvent] Recorded signout account event for account: %{public}@/%{public}@ with pid: %{public}@
[AccountEvent] Unable to record signout account event for account: %{public}@/%{public}@
[AccountEvent] Skipping due to no accountID for account: %{public}@
Error looking up subscription bag status for account: %{public}@/%{public}@
Error looking up fsEntitlement status for account: %{public}@/%{public}@ error: %{public}@
[Sbsync] Starting sbsync with account %{public}@/%{public}@ bag subscribed: %d fsEntitlement subscribed: %d
[Sbsync] Skipping sync for accountID: %{public}@ subscription bag subscribed: %d fsEntitlement subscribed: %d
[%{public}@] Not enabled to send Ocelot metrics
Setup with reason: %{public}@
[%{public}@] Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@] Skipping app lauch event without an end time for bundleID: %{public}@
[%{public}@] Unable to find account for launch event with bundleID: %{public}@ with launch time: %{public}@
[%{public}@] Unable to find launch account for event with bundleID: %{public}@ due to no active accounts
[%{public}@] Found app launch accountID: %{public}@ for event with bundleID: %{public}@
[%{public}@] Importing launch event(s) error: %{public}@
[%{public}@] Imported %ld launch event(s) with result: %d
[%{public}@] Found %ld total events
[%{public}@] Adding event for app with bundleID: %{public}@
[%{public}@] Using retail demo account: %{public}@/%{public}@ for event
[%{public}@] Type: %ld : %{public}@
[Arcade] Resetting device ID because of device mismatch
[Arcade] Resetting device ID because its creation date is invalid
[Arcade] Error reading device id days valid bag key: %{public}@
[Arcade] Resetting device ID because it has expired
[%{public}@] Error sending metrics events. Error: %{public}@
[%{public}@] Completed sending metrics events reason: %{public}@
[%{public}@] Error creating context
Initializing now that there is network
Updated cached subscription state as: %{public}@
fsEntitlement subscription state: %{public}@
[Arcade] Repair change notfication with userInfo: %{public}@
[Arcade] Starting repair for bundlePath: %{public}@
[Arcade] Starting repair forbundleID: %{public}@
[Arcade] Repair for bundlePath: %{public}@ complete with result: %d
[Arcade] Repair for bundleID: %{public}@ complete with result: %d
Using retail demo account: %{public}@/%{public}@
Skipping as subscription state has not changed for account: %{public}@/%{public}@
Handling subscription change due to fsEntitlement change with account: %{public}@/%{public}@ original: %{public}@
Resetting arcade activites due to fsEntitlement change with account: %{public}@/%{public}@
fsEntitlement changed to Unsubscribed from: %{public}@ originalAccountID: %{public}@ currentAccount: %{public}@/%{public}@
Not subscribed prior fsEntitlement change
Error creating context to post
[%{public}@] Posting arcade metrics
[%{public}@] Queuing %ld metrics event(s) in AMS metrics DB
[%{public}@] Marked event with bundleID: %{public}@ pid: %lld as posted
[%{public}@] No events to report
[%{public}@] Error reading qualifying duration bag key: %{public}@
[%{public}@] Found %ld raw launch events
[%{public}@] Skipping app launch event without an end time for bundleID: %{public}@
[%{public}@] Accounts for week: %{public}@ are: [%{public}@]
[%{public}@] Skipping app launch event with bundleID: %{public}@ due to no active account at launch time ending: %{public}@
[%{public}@] Qualified for week are now: [%{public}@]
[%{public}@] Skipping event with bundleID: %{public}@. We have already have a qualifying event this week with eventKey: %{public}@
[%{public}@] Added payout event with eventKey: %{public}@ cumulativeAccountCount: %{public}@ weekStart: %{public}@ 
[%{public}@] Looking for qualified in with week: %{public}@
[%{public}@] Added existing qualified event for bundleID: %{public}@ accountID: %{public}@
[Arcade] BundleID required for event: %{public}@
[Arcade] Error creating entity for bundleID: %{public}@ result: %{public}@
[Arcade] Created app event entity with bundleID: %{public}@
[%{public}@] Importing launch events resulted in error: %{public}@
[AccountEvent] There is not an initial account event for account: %{public}@/%{public}@. Attempting to add one. hasIntialEventForCurrentAccount: %d eventCount: %ld
[AccountEvent] Recorded initial account event for account: %{public}@/%{public}@
[AccountEvent] Unable to recorded initial account event for account: %{public}@/%{public}@
[AccountEvent] Not adding an initial account event hasIntialEventForCurrentAccount: %d eventCount: %ld
[%{public}@] Clearing qualified event bundleID: %{public}@ weekDate: %{public}@ currentWeek: %{public}@ pid: %lld
%{public}@ Error looking up subscription status. Error: %{public}@
%{public}@ Opting out of slot since no apps are installed.
%{public}@ Retrying opt-out of slot because a previous attempt failed
%{public}@ Clearing previous failed attempt to opt-out.
%{public}@ Failed to opt-out, will attempt again next time.
%{public}@ Skipping sbsync because there are no arcade apps
%{public}@ Complete with error: %{public}@
[TopApps] Unable to generate the path in order to load cached
[TopApps] Load cached top apps data
[TopApps] Failed to deserialize the top apps. Error: %{public}@
Attempting to terminate app with bundleID: %{public}@
Failed to terminate app with bundleID: %{public}@
App with bundleID: %{public}@ is terminated
Timed out waiting to terminate bundleID: %{public}@
[TopApps] Start for account: %{public}@/%{public}@
[TopApps] No account to lookup top apps
[TopApps] Clearing cached top apps data for account: %{public}@ cache age: %llu seconds
[TopApps] Returning cached top apps data for account: %{public}@ cache age: %llu seconds apps: [%{public}@]
[TopApps] No handler to return cached top apps for account: %{public}@ cache age: %llu seconds
[TopApps] topAppsForAccount: %{public}@/%{public}@ completed in %f seconds
[TopApps] Skipping app launch event without an end time for bundleID: %{public}@
[TopApps] Skipping top app launch event with bundleID: %{public}@ due to no active account at launch time ending: %{public}@
[TopApps] Found apps: [%{public}@]
[TopApps] Failed to serialize. Error: %{public}@
[TopApps] Serialized top apps with result: %d
[Arcade] Error writing duet launch wakeup file: %{public}@
[Arcade] Wrote duet launch wakeup file
[Arcade] Error removing duet launch wakeup file: %{public}@
[Arcade] Removed duet launch wakeup file
Checking for crashes of %ld files since: %@
%@ - %@
Error reading file: %@ error: %@
Skipping simulated crash for type: %@ date: %@ process: %@ bundleID: %@ 
Found type: %@ date: %@ process: %@ bundleID: %@ 
Error finding modified date for url: %@ error: %@
Bad item data
No bundleID
Skipping non supported claim user apps complete for clientID: %{public}@
Disabling automatic download for reason: %{public}@
Enabling automatic download for reason: %{public}@
Automatic download queue check following enable complete for reason: %{public}@
Ignoring automatic download queue check: disabled
Start for clientID: %{public}@ with requestType: %ld itemID: %{public}@ bundleID: %{public}@ skipDownloads: %d
Complete for clientID: %{public}@ with error: %{public}@
Complete for clientID: %{public}@ with result: %d changeType: %ld
Import success for job: %{public}@ / %{public}@ reason: %{public}@
Import failed for bundleID: %{public}@ error: %{public}@ reason: %{public}@
Skipped duplicate job: %{public}@ / %{public}@ reason: %{public}@
[%{public}@]: Skipping import due to lack for bundleID / clusterID / clusterID for mapping: %{public}@
[%{public}@]: Updated existing cluster mapping for: %{public}@
Unable to create account event entity with: %{public}@
Using the slow path to locate coordinator: %{public}@
Unable to determine intent for coordinator: %{public}@
Failed to create service: %{public}@
Listening for service: %{public}@
Sending: %{public}@ failed with error: %{public}@
Received reply without outgoing identifier for type: %u from: %{public}@
Updating after devices changed: %{public}@
Sending message: %ld to: %{public}@ with payload: %{public}@
Sending: %{public}@ to: %{public}@ failed with error: %{public}@
Received reply but no handler exists for: %{public}@ type: %u from: %{public}@
Received reply for: %{public}@ type: %u from: %{public}@
No handler for received request for: %{public}@ type: %u from: %{public}@
Cancelling maintenance operations.
All maintenance operations should now be complete.
%{public}s
[%{public}@]: Launable apps request by client: %{public}@ for bundleIDs: [%{public}@]
[%{public}@]: App: %{public}@ is not launchable
Invalid hash '%@' expected '%@'
Receipt data string is not valid base64 %{public}@
Receipt format invalid in response %{public}@
No receipt in response
[%{public}@] Sucessfully wrote receipt (%lu bytes)
[%{public}@] Receipt was missing or invalid, attempting to request new receipt
[%@]: Unable to launch because there is no bundle path for app: %{public}@
[%@]: Found mappings for %lu system apps: %@
[%@]: Failed to fetch system application map error: %{public}@
[%@]: Error parsing unknown segment string: %{public}@
[%{public}@]: Starting check of queue type: %{public}@ 
[%{public}@]: Error encountered check queue type: %{public}@ error: %{public}@
[%{public}@]: Successfully completed check of queue of type: %{public}@ nnumber of items: %ld
Completing previously queued downloads failed with error: %{public}@
[%@]: Inserting metric event: %@
[%@]: Inserting metric events: %@
[%{public}@]: Flushing metrics with reason: %{public}@
[%{public}@]: Error sending metrics events. Error: %{public}@
[%{public}@]: Completed sending metrics events
Executing the Validate On Device Asset Packs Operation.
Removing %{public}@ [%{public}@]
Unable to remove %{public}@ [%{public}@] error: %{public}@
ValidateOnDeviceManifestsOperation has been cancelled.
Path for asset packs is unset.
Examining %{public}@
Validate On Device Asset Packs operation has been cancelled.
Sanity checking the on-disk asset packs failed.  Error: %{public}@
Asset Pack Name: %{public}@
Asset pack at %{public}@ has no entry in the database, checking to see if it matches any entry
Entry for asset pack at %{public}@ found and has been updated in the database
No entry found for asset pack %{public}@, it has been deleted
Examining metadata at URL: %{public}@
Examining asset pack at URL: %{public}@
[%{public}@]: BundleID required for event: %{public}@
Skipping foreground event with timestamp: %{public}@ duration: %{public}@
[%{public}@] Starting with subscriptionInfo: %{public}@
[%{public}@] Starting with sbsyncType: %{public}@
[%{public}@] Starting with active account: %{public}@/%{public}@
[%{public}@] Starting with provided account: %{public}@/%{public}@
[%{public}@] Subscribed status updated to: %ld
[%{public}@] Subscribed status unchanged due to sbKeyBag not in response
[%{public}@] Successfully completed with subscription status: %ld time: %f
[%{public}@] Encountered error: %{public}@ time: %f
[%{public}@] Skipping non user initiated dialog request
[%{public}@] Encountered dialog request: %{public}@
[%{public}@] Sending dialog request
[%{public}@] Error sending dialog request: %{public}@
[%{public}@] Importing sbKeyBag
[%{public}@] Server responded with LoginRequired status code.
[%{public}@] No delegate to handle authentication request
[%{public}@] Handling authentication request
[%{public}@] Fetching receipt for %{public}@
[%{public}@] Receipt format invalid for %{public}@
[%{public}@] Using family primary account: %{private}@ to restore bundleID: %{public}@ storeFront: %{public}@
[%{public}@] Using app account: %{private}@ item with bundleID %{public}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@] Received dialog request from AMSURLSession
[%{public}@] No delegate to handle dialog request
[%{public}@] Handling dialog request
[%{public}@] Received authentication request from AMSURLSession
Starting with newsAccountID: %{public}@ appStoreAccountID: %{public}@ lastAccount: %{public}@
[%{public}@]: Requesting subscription entitlements for clientID: %{public}@
[%{public}@]: Returning %lu subscription entitlement(s)
[%{public}@]: Requesting cached subscription entitlements for clientID: %{public}@
[%{public}@]: Setting cached subscriptions for account: %{public}@/%{public}@
[%{public}@]: Not setting cached subscriptions because accountID: %{public}@ does not match active accountID: %{public}@
Setting arcade ad status condition
Aborting setting arcade ad status condition, too soon
Did not find arcade sub group id bag key, error: %@
Did set status condition: %{public}@ error: %{public}@
Did set status condition: %{public}@
Did clear status condition: %{public}@ error: %{public}@
Did clear status condition: %{public}@
Clearing cached subscription entitlements after push notification
Not clearing cached subscription entitlements after push notification. lastAccountID: %{public}@ messageAccountID: %{public}@
[%{public}@]: Failed to read the subscription entitlements from disk error: %{public}@
[%{public}@]: Unable to determine the path
[%{public}@]: Path to cached entitlement is nil
[%{public}@]: Cached subscription entitlements have expired
[%{public}@]: No active account when fetching subscriptions for clientID: %{public}@
Getting fresh fsEntitlements refresh for this boot
Not getting fresh fsEntitlements on this boot. Expired: %d ignoresCaches: %d
[%{public}@]: Refreshing subscriptions for account: %{public}@/%{public}@ for clientID: %{public}@
[%{public}@]: Returning updated subscriptions response
[%{public}@]: No cached subscriptions available, returning error: %{public}@
[%{public}@]: Returning cached subscription response due to request error: %{public}@
[%{public}@]: Returning cached subscriptions response for account: %{public}@/%{public}@
Updating after account changed
Updating after account changed - inside dispatch queue
[%{public}@]: Marking the cached subscription entitlements as expired
[%{public}@]: Notifying external subscription changed
[%{public}@]: Notifying internal subscription changed
[%@]: [%{public}@]: Unable to cache invalid segment
[%{public}@]: Clearing cached subscription entitlements
[%{public}@]: Failed to write the subscription entitlements to disk error: %{public}@
[%{public}@]: Clearing cached after account sign out
[%{public}@]: Active account has nil DSID. Clearing cached subscription entitlements
[%{public}@]: Clearing cachedsubscription entitlements after account change to: %{public}@/%{public}@
[%{public}@]: Failed to create a request with %{public}@
Owns check completed sucessfully
Error doing sbysnc. error: %{public}@
Tap-to-radar failed: %{public}@ error: %{public}@
Completed request %{public}@
Error writing receipt (%ld bytes): %{public}@
Writing receipt (%ld bytes) to %{public}@
Failed to launch TestFlight app: %{public}@
Application %{public}@ wasn't installed, ignoring the install notification from LaunchServices
Application %{public}@ is invalid, ignoring the install notification from LaunchServices
Placeholder for application %{public}@ removed, re-verifying installed application
Handling application demotion: %{public}@
Ignoring installation for %{public}@ as it does not appear to support ODR
Handling application un-installation: %{public}@
[%{public}@]: Client was disconnected: %{public}@
[%{public}@]: Client lost connection: %{public}@
[%@]: Broker client connected: %@
[%@]: Starting request broker
Handling %s wake: %s
Obliterated stale background sessions
 uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ 
RequestStart
[%{public}@] Request cancelled
[%{public}@] %lld/%lld
 uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ 
ConsumerError
[%{public}@] Data consumer for task: %{public}@ failed with error: %{public}@
 uuid=%{public, signpost.description:attribute}@ 
ConsumerComplete
ReceiveResponse
[%{public}@] Received response: %{public}@
[%{public}@] Task: %{public}@ CDNUUID: %{public}@
ConsumerReset
[%{public}@] Resetting data consumer for task: %{public}@ after receiving status code: %ld
[%{public}@] Data consumer for task: %{public}@ failed to prepare with unexpected resumption offset: %llu
[%{public}@] Data consumer for task: %{public}@ failed to prepare with error: %{public}@
[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@
RequestExpired
[%{public}@] Canceling task: %{public}@ after receiving status code: %ld
RequestTimeout
[%{public}@] Restarting task: %{public}@ after receiving status code: %ld
RequestRange
[%{public}@] Truncate and restart task: %{public}@ after receiving status code: %ld
 uuid=%{public, signpost.description:attribute}@  status=%{public, signpost.description:attribute}ld 
RequestStatus
[%{public}@] Canceling task: %{public}@ after receiving invalid status code: %ld
[%{public}@] Canceling task: %{public}@ after cache request failed with error: %{public}@
CacheFail
[%{public}@] Retry scheduled for task: %{public}@ error: %{public}@
WillRetry
Untracked task: %{public}@ completed with error: %{public}@
[%{public}@] Completed task: %{public}@
[%{public}@] Encountered failure while using local cache, restarting using original request: %{public}@
[%{public}@] Failed to finish data consumer with error: %{public}@
[%{public}@] Failed to suspend data consumer with error: %{public}@
Untracked task: %{public}@ did finish collecting metrics
[%{public}@] Collected metrics for task: %{public}@ metrics: %{public}@
[%{public}@] Response body bytes received speed: %.0f
[%{public}@] Using client certificate for authentication challenge
[%{public}@] Using server trust for authentication challenge
[%{public}@] Prompting for authentication is not permitted
[%{public}@] Prompting user for authentication challenge
[%{public}@] Canceling user authentication challenge
[%{public}@] Completed user authentication challenge
TaskWaiting
[%{public}@] Task: %{public}@ is waiting for connection with error: %{public}@
TaskConnecting
[%{public}@] Task: %{public}@ will send request
RequestEnd
[%{public}@] Finishing asset promise
[%{public}@] Finished asset promise
[%{public}@] Request completed but promise had already finished
RecordMetrics
[%{public}@] Recording LoadURL Metrics
Retry
[%{public}@] Retrying request
[%{public}@] Failed to reset data consumer with error: %{public}@
[%{public}@] Stopping early because request has been canceled
[%{public}@] Data consumer is missing
[%{public}@] Preparing data consumer failed with error: %{public}@
[%{public}@] Lookup complete for: %{public}@ found replacement: %{public}@ with advice: %{public}@ error: %{public}@
[%{public}@] Error occuring while locating caching server: %{public}@
SessionError
[%{public}@] Error creating session for URL: %{public}@
TaskError
[%{public}@] Error creating task for URL: %{public}@
TaskCreated
[%{public}@] Created task: %{public}@ in session: %{public}@ for URL: %{public}@ 
[%{public}@] Task priority was unspecified, defaulting to non-user initiated!
[%{public}@] QOS class was unspecified, defaulting to utility!
TaskStarted
[%{public}@] Started task: %{public}@
[%@]: %{public}@ Starting legacy request to refresh IAPs
[%@]: %{public}@ Legacy request completed with error: %{public}@
[%{public}@] Validating existing partial download: %{public}@
[%{public}@] Validated %llu bytes at: %{public}@
[%{public}@] Error attempting to truncate partial download: %{public}@
[%{public}@] Error attempting to close file handle: %{public}@
[%{public}@] Unable to delete previous download: %{public}@
[%{public}@] Deleted partially downloaded file due to previous errors: %{public}@
Skipping transported update with no bundle identifier
Skipping transported update where uninstalled or demoted: %{public}@
Skipping transported update where pending: %{public}@
Unable to transport update with known bundle identifier: %{public}@
Sucessfully transported update for: %{public}@
Unable to transport update for: %{public}@
[%{public}@] Performing preflight checks
[%{public}@] Application only supports 32-bit architecture
[%{public}@] Found duplicate application `%{public}@` for item `%{public}@`
[%{public}@] Found duplicate application `%{public}@` for bundle `%{public}@`
[%{public}@] Automatic downloads have been disabled
[%{public}@] Automatic downloads are not permitted
Executing the Validate Manifests task.
Validate manifests operation has been cancelled.
Validating application with id [%{public}@]
Launch services does not know about [%{public}@].  Deleting.
Validate Manifests task has finished.
[%{public}@] Timeout during looking up timeout value with elapsedTime: %f
[%{public}@] Non fatal error loading timeout value for error: %{public}@ elapsedTime: %f
[%{public}@] Using override timeout: %f
[%{public}@] Started arcade fairplay recovery with timeout: %f
[%{public}@] Arcade fairplay recovery complete with result: %d elapsedTime: %f
[%{public}@] Logged into accountID: %{public}@ appleID: %{public}@
%{public}@ Timeout during fsEntitlements lookup elapsedTime: %f
[%{public}@] Repairing subscription with status: %ld elapsedTime: %f
[%{public}@] Exiting due to non-recoverable sbsync error: %{public}@
[%{public}@] Timeout during sbsync elapsedTime: %f
[%{public}@] Subscription bag was repaired with elapsedTime: %f
[%{public}@] Attempting to relauch app following sucessful repair
[%{public}@] Failed to repair subscription. Launching app store. Status: %ld elapsedTime: %f
[%{public}@] Showing dialog for app removed from arcade
[%{public}@] Sign in required to play arcade games
[Crossfire]: Initialized with initial analytics switch: %d
Crossfire: Record app event: [%{public}@]
Crossfire: Apps deleted: [%{public}@]
Crossfire: Posting crossfire metrics
Crossfire: Apps installed: [%{public}@]
Crossfire: Resetting crossfire metrics
Crossfire: Sending crossfire metrics
Crossfire: Setup with reason: %{public}@
Crossfire: Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@]: Importing launch event(s) error: %{public}@
[%{public}@]: Imported %ld launch event(s) with result: %d
[%{public}@]: Found %ld raw launch event(s)
Adding event for app with bundleID: %{public}@ type: %ld
Crossfire: Error sending metrics events. Error: %{public}@
Crossfire: Completed sending metrics events reason: %{public}@
[Crossfire]: Analytics switched to on
[Crossfire]: Analytics switched to off
Crossfire: Crossfire interval not in session
Crossfire: Queuing %ld crossfire metrics event(s)
Crossfire: No events to report
Crossfire: Error creating entity for bundleID: %{public}@ result: %{public}@
Crossfire: Created app event entity with bundleID: %{public}@
Crossfire: Error creating entity for bundleIDs: [%{public}@] result: %{public}@
Crossfire: Created app event entity with bundleIDs: [%{public}@] result: %d
Crossfire: Importing launch events error: %{public}@
Crossfire: Imported %ld launch event(s) with result: %d
[Crossfire]: Error writing duet launch wakeup file: %{public}@
[Crossfire]: Wrote duet launch wakeup file
[Crossfire]: Error removing duet launch wakeup file: %{public}@
[Crossfire]: Removed duet launch wakeup file
Device has no destination ID: %{public}@
Device not found for from ID: %{public}@
Unable to find device with ID: %{public}@
Skipping device with no destination ID: %{public}@
[Bag] Failed to fetch value for '%{public}@' error: %{public}@
[Bag] Returning live value '%{public}@' = '%{public}@'
[Bag] Returning memoized value '%{public}@' = '%{public}@'
[Bag] Resetting memoized value for '%{public}@'
ODRMemorySampler failed to take sample with error %{public}s.  Sampler stopped.
[%@]: %{public}@: Rejecting delta - version %{public}@ does not match installed version %{public}@
[%@]: %{public}@: Rejecting delta - no applicable variants (%{public}@) for installed variant %{public}@
[%@]: %{public}@: Rejecting delta - installed app is universal
[%@]: %{public}@: Selected delta for version %{public}@ variant %{public}@
[%@]: Attempting silent auth for account: %{public}@
[%{public}@]: Encountered failure: %{public}@
[UPP] Received authentication challenge
[UPP] Using client certificate for authentication challenge
[UPP] Using server trust for authentication challenge
[UPP] Prompting user for authentication challenge
[UPP] Canceling user authentication challenge
[UPP] Completed user authentication challenge
[UPP] Using default handling for authentication challenge
[%{public}@]: No URL provided for request from client: %{public}@
[%{public}@]: The manifest URL isn't external: %{public}@
[%{public}@]: Cannot load non-https manifest URL: %{public}@
[%{public}@]: Downloading requested manifest at URL: %{public}@
[UPP]: Manifest is missing required metadata
[UPP]: Manifest references %{public}@ which must be uninstalled first
[UPP]: Failed to encode metadata from manifest
[UPP]: Manifest resulted in no assets imported
[UPP] Skipping item: %{public}@ for an incompatible platform: %{public}@
[UPP]: [%{public}@] No manifest data was received
[UPP]: [%{public}@] Manifest has changed, original was: %{public}@ this request: %{public}@
[UPP]: [%{public}@] Could not parse manifest data: %{public}@
[UPP]: [%{public}@] User cancelled manifest confirmation
[%{public}@] Unable to determine download size error: %{public}@
[%{public}@] Unable to determine policy error: %{public}@
[%{public}@] Package for this installation is now missing
[UPP]: [%{public}@] Request failed with error: %@
[UPP]: [%{public}@] Failed to present dialog, trying system dialog error: %{public}@
Starting StoreKit Service
Cannot initialize StoreKitClient for %{public}@[%ld]
%{public}@: Accepting new connection (%{public}@) %{public}@
%{public}@: Connection to %{public}@ invalidated
Failed to delete ODRDownload %{public}@ 
Error removing tags for %{public}@: %{public}@
Error resetting state for %{public}@: %{public}@
Error importing tag with properites %{public}@ for %{public}@
Finished updating manifest.
Skipping import due to lack of identifiers. bundleID: %{public}@ bundleKey: %{public}@
Skipping import due to lack of a source URL. bundleID: %{public}@ bundleKey: %{public}@
Failed to create a new asset pack entity for bundleID: %{public}@ bundleKey: %{public}@
Unable to lookup asset pack with bundleID: %{public}@ and bundleKey: %{public}@
[%{public}@]: Synchronizing shared defaults to watch.
[%{public}@]: Received notification that settings changed externally.
Received a notification that preferences have changed externally.
Skipping invalid product identifier %{public}@
Error fetching in app products: %{public}@
[%{public}@]: Invalid response for micro payment products request: %{public}@
%{public}@: Received invalid identifier %{public}@ in product dictionary
%{public}@: Received invalid locale %{public}@ in product dictionary
%{public}@: Received invalid price %{public}@ in product dictionary
[%{public}@]: Starting feedback upload for %{public}@
[%{public}@]: Fetching %lu image URL(s) for feedback
[%{public}@]: Successfully fetched %lu image URL(s)
[%{public}@]: Error fetching image upload URL(s): %{public}@
[%{public}@]: No images to upload for feedback
[%{public}@]: Successfully submitted feedback
[%{public}@]: Failed to upload feedback: %{public}@
[%{public}@]: Successfully updated entity with state: %lu
[%{public}@]: Failed to update entity with state: %lu
[%{public}@]: [%{public}@] Starting image upload to %{public}@
[%{public}@]: [%{public}@] Successfully uploaded image
[%{public}@]: [%{public}@] Failed to upload image: %{public}@
Generating new encryption key for identifier: %{public}@
Unable to fetch/generate key with identifier: %{public}@ error: %{public}@
Skipping legacy finish notification because we don't have an identifier.
->> %{public}@
[%@]: Recieved command: %ld
No active paired device is available
%{public}@ >> SENDING PING
%{public}@ >> SENDING FAILED: %{public}@
%{public}@ >> RECEIVED PONG
NETWORK: isConnected = %d, isExpensive = %d, isConstrained = %d, isRoaming = %d
Authorizing account: %@
Authorize complete with error: %@
Authorize complete for account: %@
Command not supported
Client not supported
Recieved detailed command: %ld
%{public}@ >> RECEIVED PING FROM %{public}@
Starting server purchase queue check for %{public}@
No account to check server purchase queue for %{public}@
Error building pending queue count request for %{public}@: %{public}@
Error checking pending queue count for %{public}@: %{public}@
Invalid pending transactions range for %{public}@: %{public}@
Error building pending queue request for %{public}@: %{public}@
Error checking pending queue for %{public}@: %{public}@
Found %lu transactions in pending queue for %{public}@
[%{public}@] availableSpaceOnDiskAtPath:%{public}@ failed: %{public}@
[%{public}@] Free space (%lld) is less than required (%lld). Checking cache delete.
[%{public}@] Cache delete does not have enough recoverable space (%{public}@).
[%{public}@] Cache delete has %{public}@ recoverable bytes
[%{public}@] Recovered %{public}@ bytes
[%{public}@] Timed out waiting for cache delete
[%{public}@]: Requires unconstrained network, but not prompting for automatic download.
[%{public}@]: Requires unconstrained network, but not prompting for current network.
[%{public}@]: We were asked to download now. Ignoring constrained network.
[%{public}@]: We were asked to cancel download. Denying network access.
[%{public}@] Setting ForceAppDRMMode: %d
[%@]: ** RECEIVED CONNECTION TEST: %@ **
[%{public}@] Unable to clear completed purchases prior to queue check: %{public}@
[%{public}@] Loading queue for account: %{public}@
[%{public}@] Importing queued purchase failed: %{public}@
[%{public}@] Server sent us to the queue to complete the purchase but the item was not there
[%{public}@] Completed queue check with %lu download(s)
[%{public}@] Failed to check queue: %{public}@
[%{public}@] Failed to check queue: No account available
[%{public}@] Queue check found update for %{public}@ to %{public}@. Installed version = %{public}@ (%lld)
[%@]: Response data 0 length
[%@]: Error decoding response
[%@]: Error parsing item: %@
[%{public}@]: Installing manifest: %{public}@ for client: %{public}@
[%{public}@] Import failed - error: %{public}@
[%{public}@] Import failed - no packages
[%{public}@] Failed to build coordinator error: %{public}@
[%{public}@] Explicitly denied for low data network - canceling installation
[%{public}@] Import failed - already exists
[%{public}@] Import completed successfully
Failed to copy bundle tag manifest for %{public}@, error: %{public}@
Failed to import manifest
Failed to import any asset packs even though some were reported to be local
Unable to begin legacy database tranportation
The legacy database directory failed to be removed with error: %{public}@
The legacy database told us that an asset pack was on the device but it wasn't, skipping the import for it.
Failed to create a %{public}@ entity with values: %{public}@ 
[%{public}@]: Unable to initialze with data
[%{public}@]: Unable to set value: %@ for propery: %@
[%@]: Status changed: %d
[%{public}@] Importing keybag
[%{public}@] Failing authorization: could not get kbsync
[%{public}@] Unable to find account for account required to authorize
[%{public}@] Non fatal error looking up token for account: %{public}@ token error: %{public}@
[%{public}@] Authorizing complete. Needs displaysDialogs: %d
[%{public}@]: Attempting hydrate bundleID: %{public}@
[%{public}@]: Failed to hydrate bundleID: %{public}@ error: %{public}@
[%{public}@]: Hydrating placeholder for bundleID: %{public}@ itemID: %{public}@ installType: %ld
[%{public}@]: Unable to hydrate placeholder for bundleID: %{public}@ installType: %ld due to lack of store itemID
[%{public}@]: Application does not need rescue, bundleID: %@ is already installed!
[%{public}@]: Cannot find application with bundleID: %@
Ignoring request to set update state of %{public}@, current state is already %ld
Updated state to installed for bundleID: %{public}@
Resetting update state for: %{public}@ to %ld
Reset purchase state update for bundleID: %{public}@
Failed to reset purchase state update for bundleID: %{public}@
Setting update state for bundleID: %{public}@ to %ld
No app updates migration function for %li => %li
[%{public}@]: Syncing updates with server 
[%{public}@]: Hiding update for %{public}@ following server sync
Unable to record update download time without a bundle ID
Unable to set update state to %ld with bundle ID: %{public}@ EVID: %{public}@
[%{public}@]: Transitioning %{public}@ to state "%s"
[%{public}@]: Update does not exist for purchase: %{public}@ with storeID: %{public}@
[%{public}@]: Could not find update for purchase: %{public}@ due to missing storeID
[%{public}@] Error looking up invalid build tool version: %{public}@
[%{public}@] Error looking up DRM recovery key: %{public}@
[%{public}@]: Reset app usage task with reason: %{public}@
[%{public}@]: Not opted in to reset metrics for reason: %{public}@
[%{public}@]: Reset cluster mapping refresh task with reason: %{public}@
[%{public}@]: Not opted in to reset cluster mapping refresh task for reason: %{public}@
[%@]: Reset clientUsageID with reason: %{public}@
[%@]: Not opted in to reset clientUsageID with reason: %{public}@
[%{public}@]: Scheduled app usage flush with reason: %{public}@
[%{public}@]: Should reset actorID with post date: %{public}@ reset cutoffDate: %{public}@ result: %d
[%{public}@]: Should reset actorID returnin no due to reset date not being set.
[%{public}@]: App usage grace period bag interval: %{public}@
[%{public}@]: Failed to find bag value for app post grace period. Error: %{public}@
[%{public}@]: Added background task: %{public}@ targetDate: %{public}@ gracePeriod: %lld posts: %ld
[%{public}@]: Using previously scheduled cluster mapping refresh date: %{public}@ reason: %{public}@
[%{public}@]: Cluster mapping bag interval: %{public}@
[%{public}@]: Failed to find bag value for cluster mapping refresh interval. Error: %{public}@
[%{public}@]: Added background task: %{public}@ targetDate: %{public}@ interval: %lld
[%{public}@]: Failed to find bag value for app usage flush interval. Error: %{public}@
[%{public}@]: Using previously scheduled flush date: %{public}@ for activity: %{public}@ reason: %{public}@
[%{public}@]: App usage flush timer interval: %lld
[%{public}@]: Scheduling app usage flush for date: %{public}@ reason: %{public}@
[%{public}@]: Posts per day bag interval: %{public}@
[%{public}@]: Failed to find bag value for posts per day. Error: %{public}@
[%{public}@]: Unable to find update interval for bag keys: [%{public}@] using default: %f
[%@]: Error re-scheduling clientUsageID reset date. postDate is nil
[%@]: Using previously scheduled clientUsageID reset date: %{public}@ reason: %{public}@
[%@]: Reset clientUsageID bag interval: %{public}@
[%@]: Failed to find bag value to reset clientUsageID interval error: %{public}@
[%@]: Scheduled clientUsageID reset to targetDate: %{public}@ reset interval: %lld time interval based date: %{public}@ postDate: %{public}@ reason: %{public}@
[%{public}@]: Launched by nsurlsessiond: %{public}@
[%{public}@]: %{public}@ xpc activity event
[%{public}@]: %{public}@ xpc activity event complete with result: %d
Stopping for idle-exit
There are %lu open transaction(s):
[%{public}@]: Error, tried to start a game session that has already begun.
[%{public}@]: session began
[%{public}@]: Error, tried to end a game session that has already ended.
[%{public}@]: session ended with reason %ld
[%{public}@]: heartbeat received
Restoring completed purchases for %{public}@
Restored %ld purchases for %@
Error restoring purchases for %{public}@: %{public}@
[%{public}@] Interval start date not set. Using interval start date: %{public}@
[%{public}@] Interval start date not set
[%{public}@]: Recorded start interval as: %{public}@
[%{public}@]: Recorded launches start interval as: %{public}@
Removed temporary download folder: %{public}@
Error when trying to remove temporary download folder: %{public}@ : %{public}@
Cleaned up temporary download folder: %{public}@
Error when trying to clean up temporary download folder: %{public}@ : %{public}@
Download path exists but is not a directory: %{public}@
Creating temporary download folder: %{public}@
Failed to create directory: %{public}@ error: %{public}@
Unable to determine path for directory: %ld domain mask: %lu with path component: %{public}@
Failed to determine container path error: %llu
Failed to set attributes for: %{public}@ error: %{public}@
Deleted file that didn't match whitelist: %{public}@
Failed to delete file that didn't match whitelist: %{public}@ error: %{public}@
Keeping whitelisted file: %{public}@
Failed to fetch contents of: %{public}@ error: %{public}@
Application Identifier is: %{public}@
Connected with [%{public}@]
Application: %{public}@ Version: %{public}@
Lost connection to '%{public}@'.
Created ODRClient from %{public}@
Asset Pack : %{public}@ has no localURLString.
This URL is invalid, we need to refresh the manifest. [%{public}@]
Refreshing manifest for application: %{public}@
Completed manifest refresh for application: %{public}@
Manifest refresh failed for application: %{public}@ error: %{public}@
Doing the inital handshake with Application [%{public}@]
Connected application does not support ODR: %{public}@
Granted sandbox extension to: %{public}@ %@
No storage ID found in manifest for bundle ID %{public}@
No manfiest found for bundle ID %{public}@
Application handshake failed with no applicationID. No sandbox extensions will be granted.
%{public}@
%{public}s BundleURL [%{public}@]
Pin tags failed for invalid tag in set [%{public}@], bundleURL: %{public}@
Going to pin asset %lu pack ids.
Going to pin asset packs: %{public}@
Trying to pin asset pack with ID: %{public}@
Pinning asset pack [%{public}@]
Progress was cancelled...
Error pinning asset pack: %{public}@
Creating Result [%{public}@] [%{public}@]
Calling the completion handler. Result [%{public}@] Error [%{public}@]
Conditional pin failed with no tags fetched from set for bundleURL: %{public}@, tags in set: %{public}@
Asset Pack [%{public}@] is on the device but due to space constraint it can not be pinned, not doing any conditional pinning.
Asset Pack [%{public}@] is NOT on the device, not doing any conditional pinning.
Asset Pack [%{public}@] is on the device.
A required asset pack is not available locally. Not continuing with the conditionally pin.
AssetPack will be newly pinned, attempting to get sandbox extension. [BundleID: %{public}@ Path: %{public}s]
Got a sandbox token for url [%{public}s]
Unable to get sandbox token for path [%{public}s]
AssetPack [%{public}@] pin count is going from [%lld] to [%lld]
No asset packs found for tags %{public}@ when asked to set the loading priority to %f
Found %lu asset packs for tags %{public}@, set the loading priority to %f
Unpin tags failed for invalid tag in set [%{public}@], bundleURL: %{public}@
Asset pack %{public}@ was not pinned when unpinning tags %{public}@
The asset pack we were cleared to purge [%{public}@] has a pin count [%lld]. AssetPack will not be marked as purgeable.
Error downloading asset %{public}@: %{public}@
Tags aren't valid for [%{public}@].
Tag %{public}@ isn't valid for [%{public}@].
Changed Pin Count from %lld to %lld for asset pack %{public}@
Pin count for asset pack with ID: %{public}@ was %lld when trying to unpin
Unable to unpin asset pack.  We cannot determine the calling app's bundleID.
There is no asset at the specified URL: %{public}@
Dictionary did not specify a URL: %{public}@
[%{public}@]: %{public}@ Starting legacy request to get IAPs for active account
[%@]: Nil IAP adamId, app adamId: %{public}@
[%{public}@]: %{public}@ Timed out on semaphore
Starting batch restore for %ld items with accountID: %{public}@
Using the active account for content restore call
Skipping initial lastest version fetch for batch
Error running content restore request. Error: %{public}@
Retry complete for items: [%{public}@]
[%{public}@] Hard failing after %ld attempts
[%{public}@] Soft failing item not in the server response, and not encontering an error. Soft failure retry count: %ld
itemID: %{public}@ not in restore map
Skipping post processing to server item missing missing itemID for item: %{public}@
Skipping post processing of failed itemID: %{public}@ due to missing mapped item
Skipping post processing of failed itemID: %{public}@ due to missing mapped install item
[%{public}@] Soft failing with %ld attempts
[%{public}@] Skipping item due to missing itemID on metadata
[%{public}@] Content lookup succeeded
%{public}@: Forcing sandbox for %{public}@ until %{public}@
%{public}@ Cannot find process path for %{public}@[%ld]
%{public}@ Cannot find application bundle for %{public}@[%ld]
%{public}@: Initializing client from bundle URL: %{public}@
%{public}@: Client initialized with bundle ID %{public}@ and request bundle ID %{public}@
%{public}@: Invalid override dictionary: %{public}@
Error generating keybag for account: %{public}@
[%{public}@] Ignoring, unsupported action for enterprise request: %{public}@
[%{public}@] Ignoring, missing URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid enterprise request with missing URL
Deleting asset pack at URL: %{public}@
Deleting storage at path: %{public}@
Received request to cancel download requests for %{public}@ - %{public}@
[%{public}@]: Canceling download request
Received request to pause download requests for %{public}@ - %{public}@
[%{public}@]: Pausing download request
[%{public}@]: Received request to resume download requests for %{public}@ - %{public}@
[%{public}@]: Recreating promises on resume request for %{public}@
[%{public}@]: No paused initial requests found
[%{public}@]: Found %lu download(s) to resume
[%{public}@]: Recreating promises for %{public}@
Failed to remove %{public}@ from the scratch directory: %{public}@
Successfully removed %{public}@ from the scratch directory
[%{public}@]: Checking for prefetch downloads for %{public}@ - %{public}@
[%{public}@]: Starting %lu prefetch downloads for %{public}@ - %{public}@
[%{public}@]: Starting prefetch download with priority %f
[%{public}@]: Failed prefetch download with error: %{public}@
[%{public}@]: Successfully finished prefetch download
[%{public}@]: Checking for initial downloads for %{public}@ - %{public}@
[%{public}@]: Fetching manifest
[%{public}@]: Found %ld initial download(s)
[%{public}@]: Requesting download %{public}@
[%{public}@] ODR Download requested for %{public}@ : %{public}@
[%{public}@]: resource request exceeds maximum limit.
[%{public}@]: Expected asset already exists.
[%{public}@]: request is a duplicate of [%{public}@]
[%{public}@]: There was not enough space available to download the requested resource.
[%{public}@] No download size, attempting to look it up
[%{public}@] Error fetching size: %{public}@
[%{public}@] Starting ODR Download with download size: %lu and expected disk usage: %lld
[%{public}@] Successfully downloaded asset
[%{public}@] Successfully moved the asset into its destination path
[%{public}@] Asset already exists at the destination path, validating
[%{public}@] Failed to move the downloaded asset into place: %{public}@
[%{public}@] Error creating path for download: %{public}@
[%{public}@] Nil destination path for asset
Rate Limit : %llu (Ethernet : %{public}@)
[%{public}@]: Error fetching coordinator with ID %{public}@: %{public}@
[%{public}@]: Error setting initial ODR promises
[%{public}@]: Setting initial ODR promises failed, canceling promises
[%{public}@] Download made progress: %{public}@
[%public}@]: Error removing download from scratch directory: %{public}@
[%{public}@]: Successfully removed download from scratch directory
[%{public}@]: No download files to remove, skipping.
[%{public}@] Error downloading asset: %{public}@
[%{public}@] Failing download, exceeded maximum retry time
[%{public}@] Restarting download after previous attempt timed out
[%{public}@] Failing download after connection lost
[%{public}@] Restarting download after connection lost
[%{public}@] Pin exceeded maximum pinned assets limit (%lu > %lu)
[%{public}@]: Success updating manifest
[%{public}@]: Failed updating manifest: %{public}@
[%{public}@]: Failed to find asset pack to update
[%{public}@]: Updated pin count: %lld
[%{public}@] Handling manifest refresh for expired URL
[%{public}@] Refresh failed with error: %{public}@
Performing cleanup on startup
Cleanup on startup complete
Cleaning up updates following app being registered
Removed update with bundleID: %{public}@ due to newly installed app evid: %{public}@ being greater than update evid: %{public}@
Updated update state of bundleID: %{public}@ to installed app evid: %{public}@ equals update evid: %{public}@
Skipping changing update state of bundleID: %{public}@ to installed app evid: %{public}@ with update evid: %{public}@
[%@]: Bundle was not an application: %@
[%@]: Application: %@ has no item ID: %@
[%@]: Application is not installed: %{public}@ and not 32-bit: %ld
[%@]: Application is not installed: %{public}@ and is 32-bit: %ld
[%@]: Including application: %@
 Cleaning up stale coordinators. %lu active coordinator IDs:
   %{public}@
   <none>
 Untracked: %{public}@
 Active:    %{public}@
 Coordinator cleanup complete with result: %d cancel count: %ld
 Coordinator cleanup complete with error: %{public}@
Cleaning up updates
[%{public}@] Scheduling install cancellation following app deletion
Canceling jobs for deletedApps: [%{public}@]
Update clean up complete with %ld changes
Removed uninstalled update with bundleID: %{public}@
Removed update with bundleID: %{public}@ due to no matching app
Updating purchasing state for update with bundleID: %{public}@ currentState: %ld
Updating purchased state for update with bundleID: %{public}@ currentState: %ld
Created the developer tools client.
%{public}s BundleID [%{public}@]
%{public}s TagName [%{public}@] BundleID [%{public}@]
There are [%ld] tags with name [%{public}@] for bundleID [%{public}@]
Requesting purge of asset pack [%{public}@]
[DT] Importing %lu byte manifest for %{public}@
[%{public}@] Failed to establish promise error: %{public}@
[%{public}@] Failed to establish decryption consumer error: %{public}@
[%{public}@] Established consumer with decryption successfully: %{public}@
[%{public}@] Established consumer successfully: %{public}@
[%{public}@]: Allowing access to cellular (result = %ld)
[%{public}@]: Denying access to cellular (result = %ld)
[%{public}@]: Allowing access to low data network (result = %ld)
[%{public}@]: Denying access to low data network (result = %ld)
[%{public}@] Package `%lld` has no location set
[%{public}@] Will download package using request: %{public}@
Created the launch services client.
[%@]: Purge request with volume: %@ urgency: %ld desired amount: %@ perfrom store check: %d client: %@
[%@]: Purge app request resulted in error: %@
[%@]: Purge %ld app%@ for volume: %@ urgency: %ld purged size: %ld client: %@
[%{public}@]: Account lookup request by client: %{public}@ for authIfNeeded: %d
[%{public}@]: Account lookup request complete with accountID: %{public}@ for askToBuy: %ld
[%{public}@]: flushMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: getGroupingToken for client: %{public}@
[%{public}@]: getClusterMappingsWithCompletionBlock for client: %{public}@
[%{public}@]: getPersonalizationEventsWithCompletionBlock for client: %{public}@
[%{public}@]: recordMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: recordLaunchesWithCompletionBlock for client: %{public}@
[%{public}@]: reportAppEvent for client: %{public}@
[%{public}@]: reloadClusterMappingsWithCompletionBlock for client: %{public}@
[%{public}@]: resetActorIDWithCompletionBlock for client: %{public}@
[%{public}@]: resetMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: sendMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: setClusterMapping for client: %{public}@
[%@]: Connection: %{public}@ received incomming message: %{public}@
[%@]: Received invalid message: %{public}@
[%@]: Received new token: %{public}@ for environment: %{public}@ but we don't post tokens.
[%@]: Push type registration returned data: %{public}@
[%@]: Error registering for push types: %{public}@
[%{public}@]: Not prompting during device setup
[%{public}@]: No bundle ids
[%{public}@]: No active account `op
[%{public}@]: Error reading bag finding adam ID for: %{public}@, error: %{public}@
[%{public}@]: No adam ID in bag for %{public}@
[%{public}@]: No proxy for %{public}@
[%{public}@]: Proxy missing name for %{public}@
[%{public}@]: Checking status for %{public}@
[%{public}@]: Subscription enabled for %{public}@
[%{public}@]: Filtering subscription for %{public}@
[%{public}@]: Subscription not enabled for %{public}@, status %li
[%{public}@]: No cached subscription info for %{public}@
[%{public}@]: Error getting subscription info for %{public}@, %{public}@
[%{public}@]: No entitlements for %{public}@
[%{public}@]: Found subscription info for %{public}@
[%{public}@]: Filtering an entitlement for %{public}@
[%{public}@]: Found %li IAPs for bundle ID: %{public}@
[%{public}@]: Found %li apps for bundle IDs %{public}@
[%{public}@]: Found %li IAPs for bundle IDs %{public}@
[%{public}@]: Promptable IAP: %{public}@
[%{public}@]: Not prompting for IAP: %{public}@, type: %hhu, expiration date: %{public}@, auto-renew: %i
[%{public}@]: Prompting single for %lld
[%{public}@]: Prompting multiple for %lld
[%@]: Purchase History DAAP data not NSData
Compatibility updates for apps: [%{public}@] requested by client: %{public}@
%{public}@ getUpdates requested for client: %{public}@
%{public}@ getUpdates completed sucessfully
%{public}@ refreshUpdateCount requested for client: %{public}@
%{public}@ refreshUpdateCount completed with error: %{public}@
%{public}@ refreshUpdateCount completed sucessfully
%{public}@ reloadFromServer requested for client: %{public}@
%{public}@ reloadFromServer completed with error: %{public}@
%{public}@ reloadFromServer completed sucessfully
%{public}@ Update all requested with client: %{public}@
%{public}@ updateAllWithOrder completed with error: %{public}@
%{public}@ updateAllWithOrder completed sucessfully
%{public}@ reloadFromServerInBackgroundWithCompletionBlock requested for client: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed with error: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed sucessfully
Refusing to begin transportation for known path: %{public}@
Refusing to begin transportation as path does not exist: %{public}@
Remembering path after ending transportation: %{public}@
[%{public}@]: Manifest for UPP: %{public}@ clientID: %{public}@
Posting purchase intent bulletin with app bundle ID: %@ for client %@
[%{public}@]: Unable to evaluate cellular download: %{public}@
[%{public}@]: Unable to evaluate low data download: %{public}@
[Thermal] Registration for thermal pressure notification failed: %u
[Thermal] Thermal pressure is now %@ (%llu)
[%{public}@] Running HEAD operation to get size for URL: %{public}@ task: %{public}@
[%{public}@] Unexpected data received for URL: %{public}@
[%{public}@] Invalid size: %lld for URL: %{public}@
[%{public}@] Found size: %lld for URL: %{public}@
[%{public}@] Invalid status: %ld for URL: %{public}@
[%{public}@] Failed to find size for URL: %{public}@ error: %{public}@
[Network] Unable to fetch current cellular data subscription: %{public}@
[Network] Cellular data subscription became: %{public}@
[Network] Unable to identify cellular data subscription: %{public}@
[Network] There is no cellular data subscription
[Network] Interface type: %ld
[Network] Network available (expensive = %d, constrained = %d)
[Network] Network unavailable
[%{public}@]: Refreshing SAP session following bag change
[%{public}@]: Using using new bag for mescal
[%{public}@]: Falling back to old bag for mescal
Primary content hash matched new primary content hash: %{public}@
Primary hash wasn't a match.  Checking the known hashes.
Primary content hash matched known hash [%{public}@, %{public}@]: %{public}@
No hash matched, and this client is not currently connected, removing assets from device and resetting the localURL.
Setting the fileSize : %{public}@
Setting the downloadSize : %{public}@
Setting the chunk size : %{public}@
Setting the hashes : %{public}@
Setting the MD5 : %{public}@
Setting Download Priority: %{public}@
Setting isStreamable: %{public}@
Setting bundleID: %{public}@
Setting local URL: %{public}@
BundleID: %{public}@
Setting SourceURL: %{public}@
[%{public}@]: getAppEventsWithCompletionBlock for client: %{public}@
[%{public}@] Received cancellation request.
[%{public}@]: Unable to get network constraints, not allowing cellular access: %{public}@
[%{public}@]: No download size available, not allowing cellular access
[%{public}@]: Download size exceeds cellular limit, not allowing cellular access
[%{public}@] Cleaning up symlink (success %d)....
[%{public}@] Simulated download path already existed. success(YES): %{public}@
[%{public}@] Simulated download success(%d): existed(%d) was symlink(%d)
[%{public}@] simulated download failed with error %{public}@
[%{public}@]: Completing coordinator promise: %{public}@
[%{public}@]: Completing coordinator promise
[%{public}@] Resource was located at URL: %{public}@
[%{public}@] Resource was not found with error: %{public}@
Failed to mark all downloads done error: %{public}@
[%{public}@] Unable to find headboard url: %{public}@
[%{public}@] Error encoding headboard request: %{public}@
[%{public}@] Headboard error looking up data: %{public}@
[%@]: %{public}@ Getting IAPs for active account for client: %{public}@
[%@]: %{public}@ Getting specific IAPs for active account for client: %{public}@
[%@]: %{public}@ Refreshing IAPs for active account for client: %{public}@
[%@]: Setting subscriptions for clientID: %{public}@ accountID: %{public}@ segment: %lu
[%@]: %{public}@ Handling News subscriptions request for: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling subscription entitlements request for segment: %lu: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling cached subscription entitlements request for segment: %lu: %{public}@
Cancelled download requests for: %{public}@
Removed manifest for %{public}@: %{public}@
[%{public}@] Error saving download to database
Created the app review client.
[App Review] Importing %lu byte manifest for %{public}@
[%{public}@] Factory VPP claim using evid: %{public}@
[%{public}@] Unable to find options account using accountID: %{public}@
[%{public}@] Using options account: %{public}@/%{public}@
[%{public}@] Using active account: %{public}@/%{public}@
[%{public}@] Not using an account
[%{public}@] Preflight error: %{public}@
[%{public}@] Preflight complete free: %d owned: %d
[%{public}@] Using VPP enndpoint for request
[%{public}@] Purchasing free app
[%{public}@] Free purchase failed with error: %{public}@
[%{public}@] Free purchase succeeded with jobResults %{public}@
[%{public}@] App is not eligible for free VPP
[%{public}@] An itemID is needed for per device calls could not be discovered
[%{public}@] Complete for evid: %{public}@ changeType: %ld success: %d
[%{public}@] bundleDisplayName: %{public}@ metatdata: %{public}@
[%{public}@] Request resulted in error: %{public}@ storeCorrelationID: %{public}@
[%{public}@]: Will not attempt sinf update for app due to variantID: %{public}@
[%{public}@] Inline sinf update complete with result: %d has replacement sinf data: %d
[%{public}@] No app to attempt an inline update
[%{public}@] Installing vpp application with evid: %{public}@
[%{public}@] Checking purchase history for items
[%{public}@] Timed out looking though purchase history
[%{public}@] App owned by accountID: %{public}@
[%{public}@] Lookup resulted in error: %{public}@
[%{public}@] Performed owns check with owns: %d
[%{public}@] Owns check resulted in error: %{public}@
[%{public}@] Free purchase failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Free purchase failed with buyParams: %{public}@ error: %{public}@
[%{public}@] Attempting to update sinf
[%{public}@] sinf update failed due to MD5 miss-match
[%{public}@] Updated sinf with MD5 match
[%{public}@] Skipping sinf swap. Installed: %d evid matches: %d
[%{public}@]  Attempting sinf swap for matching. Installed: %d evid matches: %d
[%{public}@] Using sinf data for from download
[%{public}@] Sucessfully updated sinf
[%{public}@] Sinf update resulted in error: %{public}@
[%{public}@] Did not perform an inline update of the sinf
[%{public}@] Updated iTunesMetadata.plist
[%{public}@] iTunesMetadata.plist update failed with error: %{public}@
[%{public}@] Fetching receipt
[%{public}@] Receipt refresh failed with error: %{public}@
[AccountEvent] Intialized Coordinator
[AccountEventTimeline]: Clearing internal cache which is %f seconds old
[AccountEventTimeline]: Accounts for week: %{public}@ are: [%{public}@]
[AccountEvent] Active account changed notification accountID: %{public}@ active: %d
[AccountEvent] Recorded account event for account: %{public}@/%{public}@ active: %d
[AccountEvent] Unable to recorded active account event for account: %{public}@/%{public}@
[AccountEvent] No account found following active account change notification: %{public}@
[AccountEventTimeline]: Completed account event: %{public}@
[AccountEventTimeline]: Skipping signout event where last activeStart / initial event accountID: %{public}@ did not match accountID: %{public}@
[AccountEventTimeline]: Skipping activeEnd account event without a start event: %{public}@
[AccountEventTimeline]: Dropping event with type: %ld because it is the same account as the current event: %{public}@ with type: %ld
[AccountEventTimeline]: Dropping orphan account event due to a new new activeStart / initial event: %{public}@
[AccountEventTimeline]: Setting current account event to: %{public}@
[AccountEventTimeline]: Using current time as the end time for last active account event
[AccountEventTimeline]: Skipping final event where last activeStart / initial event accountID: %{public}@ did not match accountID: %{public}@
[AccountEventTimeline]: Date diagnostics
Starting date: %@ week: %@
Date: %@ payout week: %@
[%{public}@]: Looking up system applications
[%{public}@]: Received %lu asset(s) error: %{public}@
[%{public}@]: Discovered matching asset: %{public}@
[%{public}@]: Failed to lookup asset(s): %{public}@
%{public}@ Query failed for %{public}@: %{public}@ error: %{public}@
%{public}@ Starting query for %{public}@: %{public}@
%{public}@ Completed with no results
%{public}@ Completed with 1 result: %{public}@
%{public}@ Completed with %lu result(s)
%{public}@ Launching messages extension for %{public}@: %{public}@
%{public}@ Launching app for %{public}@ on %{public}@: %{public}@
%{public}@ Launching app for %{public}@: %{public}@
%{public}@ Uninstalling app for %{public}@: %{public}@
[%{public}@]: Implicitly denied - automatic downloads are disabled
[%{public}@]: Overriding cellular prompt - network is roaming
[%{public}@]: Implicitly allowed - cellular prompt disabled
[%{public}@]: Implicitly denied - cellular prompt required
[%{public}@]: Implicitly denied - download size is unavailable
[%{public}@]: Implicitly denied - failed to load constraints: %{public}@
[%{public}@]: Implicitly allowed - cellular limit applies
[%{public}@]: Implicitly denied - exceeded cellular limit
Dropping anonymous pings - DNU submission disabled
Successfully sent ping to: %{public}@
Ping failed to: %{public}@ error: %{public}@
[%@]: Querying purchase history for account: %{public}@
[%@]: Ignoring update request - there is no active account
[%@]: Force refresh interval: %{public}@
[%@]: Failed to receive refresh interval error: %{public}@
[%@]: Update polling frequency interval: %{public}@
[%@]: Failed to receive update polling frequency interval error: %{public}@
[%@]: Begin observing, current account: %{public}@
[%@]: Updating after account changed
[%@]: Failed to refresh after active account changed error: %{public}@
[%@]: Error decoding response metadata, isUpdate not parsed
[%@]: Error decoding response metadata, revision not parsed
[%@]: Starting update for account: %{public}@, context: %lu
[%@]: Error getting last updated date: %@
[%@]: Not updating for account: %{public}@, authenticated account: %{public}@, context: %lu
[%@]: Completed update for account: %{public}@ authenticated account: %{public}@
[%@]: Error updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%@]: Failed update for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%@]: Update call success, but failed updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%{public}@]: Error generating updates URL. Error: %{public}@
[%{public}@]: Error encoding request: %{public}@
[%{public}@]: Error fetching updates: %{public}@
[%{public}@]: Error generating keybag for account: %{public}@
[%{public}@]: Using default cancelation reason because none was passed for coordinator: %{public}@
[%{public}@]: Refusing to cancel coordinator that we're not responsible for and don't own: %{public}@
[%{public}@]: Using default cancelation reason because none was passed for coordinator: %{public}@ promise: %{public}@
[%{public}@]: Could not fail existing app promise: %{public}@ not found for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not set fake app promise to cancel: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Cordinator: %{public}@ canceling a completed promise: %{public}@
[%{public}@]: Failed to fetch existing app promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Resetting app promise: %{public}@ failed for coordinator: %{public}@ error: %{public}@
[%{public}@]: Completing ODR configuration for coordinator: %{public}@
[%{public}@]: Failed to complete ODR configuration for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not fail existing ODR promise: %{public}@ not found for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to fetch existing ODR promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to fetch paused state for coordinator: %{public}@ error: %{public}@
[%{public}@]: Resetting ODR promise: %{public}@ failed for coordinator: %{public}@ error: %{public}@
[%{public}@]: Could not fetch responsible client for coordinator: %@ error: %@
[%{public}@]: Existing app promise: %{public}@ doesn't match expected promise: %{public}@ for coordinator: %{public}@
[%{public}@]: Coordinator: %{public}@ did not contain ODR promise: %{public}@
[%{public}@]: Coordinator: %{public}@ has no existing ODR promises when fetching: %{public}@
[%{public}@]: Failed to fetch current ODR promises for coordinator: %{public}@ error: %{public}@
[%{public}@]: Failed to remove ODR promise: %{public}@ for coordinator: %{public}@ error: %{public}@
[%{public}@]: Coordinator: %{public}@ has no existing ODR promises when removing: %{public}@
[%{public}@]: Suppressing further dialogs and handling purchase on Watch
[%{public}@]: Dropping invalid purchase: %{public}@
[%{public}@] Overriding automatic installation flag
[%{public}@] Purchase import failed with error: %{public}@
[%{public}@] Purchase import succeeded
[%{public}@] There's no paired device to install this app on!
[%{public}@] Paired device: %{public}@ does not support WKWatchOnly!
[%{public}@] Using workaround for missing buy parameters
[%{public}@] Using workaround for incorrect pricing parameters
[%{public}@]: Queued remote installation on paired device: %{public}@
[%{public}@]: Failed to queue remote installation to paired device: %{public}@
[%{public}@]: No images to upload, skipping FetchImageUploadURLsTask
[%{public}@]: Unable to create a valid URL with the provided string %{public}@
Dropping update to finshing due to no bundleID
Dropping failed TestFlight install due to no bundleID
Dropping failed TestFlight install for %{public}@ due to no error provided
Dropping failed TestFlight install due to no devicePairingID
Created the diagnostics client.
Creating [%d] fake work items.
[Diagnostics] Importing %lu byte manifest for %{public}@
set auto updates enabled
Resetting update state to available on startup: %@
[%{public}@] Received local installation request
[%{public}@] Unable to install system app with missing identifier
Failed to find system app mapping: %{public}@
[%{public}@] Blocking delta after encountering error: %{public}@
[%{public}@] Finishing hard fail with final phase: %{public}@
[%{public}@] Finishing with final phase: %{public}@, current phase %{public}@
Failed to finish installation `%lld` does not exist in the database
[%{public}@] Import failed silently with error: %{public}@
[%{public}@] Refreshing existing installation (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Skipping duplicate install (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Importing new installation (order = '%{public}@')
Skipping legacy import notification because we don't have an identifier.
[%{public}@] Already paused with phase: %{public}@, ignoring request for reason: %{public}@
[%{public}@] Pausing with phase: %{public}@ for reason: %{public}@
Failed to pause installation `%lld` does not exist in the database
[%{public}@] Resuming installation
Failed to resume installation `%lld` does not exist in the database
Skipping legacy state notification because we don't have an identifier.
[%{public}@] Failed to update install
[%{public}@] Current phase is not restartable (phase = '%{public}@')
[%{public}@] Restarting as user initiated (phase = '%{public}@')
Finishing payment %lu for %{public}@
Finishing payment with no transaction identifier for %{public}@
Error finishing payment %lu for %{public}@ - %{public}@
Extractor reset
TRUNCATE
%{public}@: %{public}@ sandboxed: %{public}@
%{public}@: %{public}@ allows client override: %{public}@
%{public}@: Loading %lu products for %{public}@
Returning %lu products, %lu invalid identifiers for %{public}@
Could not process payment for product %{public}@ and quantity %lu
%{public}@: No transaction identifier to finish payment
No download ID to start
No downloads for ID %{public}@
Download with ID %{public}@ completed with error: %{public}@
Download with ID %{public}@ completed
Starting downloads for ID %{public}@
%{public}@: renewing receipt with options: %{public}@
%{public}@: fetched storefront %{public}@ (%{public}@)
Failed to check messages, no active account
PaymentQueue delegate returned NO: not showing message
%{public}@: Notifying client of Storefront change
%{public}@: registerArcadeAppWithRandomFromLib API is not supported on the simulator
%{public}@: arcadeSubscriptionStatusWithNonce API is not supported on the simulator
%{public}@: repairArcadeApp API is not supported on the simulator
[%{public}@]: Found commonly used apps: [%{public}@]
[%{public}@]: Persisting based on duet
[%{public}@]: Looking for %ld apps out of %ld
[%{public}@]: Wrote app usage for %ld apps: 
%{public}@
[%{public}@]: No app usage to save
[%{public}@]: Persisting based on launch counts
 [%{public}@]: Error creating common app list: %{public}@
[%{public}@]: Wrote app usage for total userApp count: %ld popular count: %ld apps: 
%{public}@
[%{public}@]: Failed to write app usage
[%{public}@]: Wrote app usage to path: %@
[%{public}@]: Unable to write apps usage due to not being able to find the container path
[%{public}@]: Unable to write apps usage due serialization: %{public}@
[%{public}@]: checkQueueWithOptionsclient: %{public}@
[%{public}@]: claimApplicationsWithOptions client: %{public}@
[%{public}@]: getDownloadQueueWithCompletionBlock client: %{public}@
[%{public}@]: getAutomaticDownloadQueueWithCompletionBlock client: %{public}@
Start for client: %{public}@
[%{public}@]: Treating %i as legacy client
[%{public}@]: Connection denied for pid: %i for non entitled client
[%{public}@]: Client %{public}@ disconnected
[%{public}@]: Error canceling coordinator for bundleID: %{public}@ intent: %{public}@ error: %{public}@
[%{public}@]: Canceled coordinator: %{public}@ with result: %d cancelError: %{public}@
[%{public}@]: Error canceling coordinator: %{public}@ error: %{public}@
[%{public}@]: Not canceling non-owned coordinator coordinator: %{public}@
[%{public}@]: Error canceling coordinator for bundleID: %{public}@ error: %@
[%{public}@]: Inserting metric event: %@
No Purchase History Database migration function for %li => %li
Registering event handlers
Received distributed event with invalid name
Posting notification: %@ userInfo: %@
Posting notification: %@
Received distributed event with invalid type
Registered handler for distributed events
Received notification event with invalid name
Received notification event with invalid type
Registered handler for notification events
%{public}s avail: %lld cushion: %lld required: %lld delta: %lld
Handling application installation: %{public}@
Ignoring installation for %{public}@ but it does not appear to support ODR
Ignoring installation for %{public}@ as it already up to date
Cleaning up after installation for %{public}@ as ODR is no longer supported
Handling installation for %{public}@ as a new ODR application
Handling installation for %{public}@ as an ODR application needing repair
Handling installation for %{public}@ as an updated ODR application
%{public}s App %{public}@ is running: %{public}@
%{public}s %{public}@ is not being monitored; not running or connected.
Not removing asset pack with id %{public}@ because the app %{public}@ is running and the asset is not purgeable
[%{public}@] Could not find handler to repair application
[%{public}@] Unable to relaunch due to error: %{public}@
[%{public}@] Relaunched application after repair completed
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for automatic download.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for inexpensive network.
[%{public}@]: Download of size %llu exceeds cellular limit, asking how to proceed.
[%{public}@]: Error delivering dialog request: %{public}@
[%{public}@]: We were asked to download now.  Not requiring inexpensive data.
[%{public}@]: We were asked to download later.  Requiring inexpensive data.
[%{public}@]: Evaluation for download completed with result: %ld
[%{public}@]: Error looking up family history for accountID: %{public}@ error: %{public}@
[%{public}@]: Family member found with accountID: %{public}@ askToBuyEnabled: %d
[%{public}@]: Bootstrapping family : refresh from server: %d
[%{public}@]: Family circle request resulted in error: [%{public}@] isBackground: %d
[%{public}@]: Set family accounts to: [%{public}@]
[%{public}@]: Cleared family
Purchasing %ld app(s) for client: %{public}@
[%{public}@]: Starting purchase
[%{public}@]: Purchase completed with error: %{public}@
[%{public}@]: Purchase completed successfully
Purchasing complete for client: %{public}@
Unable to create URL data detector.  Error: %{public}@
clearExpiredUpdateHistoryWithCompletionBlock for client: %{public}@
[%{public}@] getUpdatesWithCompletionBlock for client: %{public}@
[%{public}@] getManagedUpdatesWithCompletionBlock for client: %{public}@
hideApplicationBadgeForPendingUpdates for client: %{public}@
migrateUpdatesStoreWithCompletionBlock
%{public}@ refreshUpdateCountWithCompletionBlock for client: %{public}@
%{public}@ refreshUpdateCountWithCompletionBlock completed
refreshUpdatesWithCompletionBlock for client: %{public}@
showApplicationUpdatesBanner for client: %{public}@
showApplicationBadgeForPendingUpdates for client: %{public}@
removeUpdateBulletins for client: %{public}@
[%{public}@] reloadFromServerInBackgroundWithCompletionBlock from client: %{public}@
[%{public}@] reloadFromServerInBackgroundWithCompletionBlock completed
[%{public}@] reloadFromServerWithCompletionBlock for client: %{public}@
[%{public}@] reloadManagedWithCompletionBlock for client: %{public}@
[%{public}@] updateAllWithJobResults for client: %{public}@
[%{public}@] updateAllWithJobResults completed
[%{public}@] updateAllWithOrder for client: %{public}@
[%{public}@] updateAllWithOrder completed
Treating %i as legacy client
Connection denied for pid: %i for non entitled client
Client %{public}@ disconnected
Got connection from pid: %i client: %{public}@
Connection interrupted for pid: %i
Connection invalidated from pid: %i
Looking up system apps using predicate: %{public}@
Received %lu system app asset(s)
Discovered matching asset: %{public}@
Failed to lookup system app asset(s): %{public}@
[%@]: %{public}@ Get IAPs for accountID: %@
[%@]: %{public}@ Got %li IAPs for accountID: %@
[%@]: %{public}@ Failed to get IAPs with error: %{public}@
[%@]: %{public}@ Failed to get IAPs - no active account
[%@]: %{public}@ Failed to get IAPs: %{public}@ with no active account DSID error: %{public}@
[%@]: %{public}@ Get IAPs: %@ for account: %{public}@
[%@]: %{public}@ Got %li IAPs for account: %@
[%@]: %{public}@ Failed to get IAPs for app adam IDs: %{public}@ with no active account DSID error: %{public}@
[%@]: %{public}@ Get IAPs for app adam IDs: %@ for account: %{public}@
[%@]: %{public}@ Failed to get IAPs - no active account DSID
[%@]: %{public}@ Get IAPs for account: %{public}@
[%@]: %{public}@ Failed to update IAPs - no active account DSID
[%@]: %{public}@ Update not needed. Last updated: %{public}@
[%@]: %{public}@ Removing all IAPs
[%@]: %{public}@ Refreshing IAPs after account change for: %{public}@
[%@]: %{public}@ Failed to refresh after active account changed error: %{public}@
[%@]: %{public}@ Ignoring update request - there is no active account DSID
[%@]: %{public}@ Starting update for account: %{public}@
[%@]: %{public}@ Ignoring update request - currently updating
[%@]: %{public}@ Polling update not needed. Last updated: %{public}@
[%@]: %{public}@ Completed update for account: %{public}@
[%@]: %{public}@ Failed to import for account %{public}@ error: %{public}@
[%@]: %{public}@ Failed update for acccount %{public}@ error: %{public}@
[%{public}@]: Timeout occurred waiting for existing notifications
[%{public}@]: Removing existing bulletins
[%{public}@]: Settings did change
[%{public}@]: Failed to post notification. Error: %{public}@
[%{public}@]: Notificaiton posted successfully
[%{public}@]: Authorization granted
[%{public}@]: Failed to aquire authorization. Error: %{public}@
%{public}@ error getting email address for bundleID %{public}@: %{public}@
%{public}@ error getting feedback metadata for bundleID %{public}@: %{public}@
%{public}@ error getting launch info for bundleID %{public}@: %{public}@
%{public}@ error checking launch screen enabled state for bundleID %{public}@: %{public}@
Error getting proxy for beta app with bundleID %{public}@: %{public}@
User pressed share on dialog for crash of beta app with bundleID: %{public}@
User pressed cancel on dialog for crash of beta app with bundleID: %{public}@
Failed to find a beta app with bundleID: %{public}@
%{public}@ error updating feedback enabled state for version %{public}@: %{public}@
%{public}@ error updating launch info for version %{public}@: %{public}@
%{public}@ error updating launch screen enabled state for version %{public}@: %{public}@
Attempt to establish primary account resulted in error: %{public}@
Logged into account: %{public}@
%{public}@ error submitting feedback for version %{public}@: %{public}@
Unable to submit feedback for version %{public}@ because there is no active account
%{public}@ error updating test notes for version %{public}@: %{public}@
%{public}@ error getting display names for bundleID %{public}@: %{public}@
No delay specified for attempt %d for %{public}@, deleting it
[%{public}@]: Error uploading TestFlightFeedback (attempt %d): %{public}@
[%{public}@]: Failed to connect to the internet to upload feedback, waiting for connectivity at state: %lu
[%{public}@]: We were told by the server the the payload is malformed.  We're dropping this feedback
[%{public}@]: We were told by the server the the payload is too large.  We're dropping this feedback
[%{public}@]: The server asked us to throttle our requests, rescheduling to try again later
[%{public}@]: We need to authenticate before we can submit feedback
[%{public}@]: Error authenticating account: %{public}@
[%{public}@]: Successfully authenticated
%{public}@ error checking feedback enabled state for bundleID %{public}@: %{public}@
Failed to find a beta app with version %{public}@
Scheduling next submission attempt for %{public}@
Found %lu pending TestFlight feedback submissions
Skipping system app bootstrap - pending task already exists
Queuing %lu system app(s) for bootstrap
Skipping system app bootstrap - no installations pending
Bootstrapping system applications will be reset after error: %{public}@
Ignoring monitor state change notifications
Jettisoned %lu installation(s) due to thermal pressure: %{public}@
[%{public}@] Installation remaining paused for expensive network
[%{public}@] Installation remaining paused for low data network
[%{public}@] Resuming installation paused for policy
Polling scheduler: [%{public}@]
Limiting maximum active count due to thermal pressure
No waiting installations, ignoring monitor state change notifications
%{public}@ waiting installation(s), observing monitor state change notifications
Polling completed, started %lu installation(s): %{public}@
Polling completed, started 0 installations
[%{public}@] Resetting installation phase after daemon restart
[%{public}@] Resetting bootstrap phase after daemon restart
Requesting scheduler poll for %lu reset installation(s) after daemon start
Scheduling next optimal download for %{public}@
[%{public}@]: Allowing start, no policy set, allowing install to start unconditionally
[%{public}@]: Denying start, device security not approved
[%{public}@]: Denying start, no network available
[%{public}@]: Denying start, no identity when checking policy: %{public}@
[%{public}@]: Denying start, implicitly denied cellular by evalulator
[%{public}@]: Denying start, explicitly denied cellular by user
[%{public}@]: Denying start, implicitly denied low data by evalulator
[%{public}@]: Denying start, explicitly denied low databy user
[%{public}@]: Denying start, no power available
[%{public}@]: Denying start, battery saver enabled
[%{public}@]: Denying start, pending data migration
[%{public}@]: Denying start, pending setup assistant
[%{public}@]: Denying start, pending optimal download window
[%{public}@]: Allowing start, all policy conditions were met
[%{public}@]: Handling notification response with actionId: %{public}@
[%{public}@]: Error opening URL. Error: %{public}@
[%{public}@] Repair complete with result: %d
[%{public}@] Attempting keybag refresh for accountID: %{public}@
[%{public}@] Encountered error opening store. Error: %{public}@
Failed to determine if %{public}@ exists: %{public}s
Failed to realpath %{public}s : %{public}s at %{public}s
Rejecting %{public}@ with base %{public}@ because real component counts don't make sense (reals %{public}@ ; %{public}@)
Rejecting %{public}@ with base %{public}@ because base component count is greater or equal to child component count (reals %{public}@ ; %{public}@)
Rejecting %{public}@ with base %{public}@ (reals %{public}@ ; %{public}@) because components diverge at %{public}@ != %{public}@
Realpathed %{public}@ ; appending non-existing components %{public}@
fts_open failed for %{public}s with error %{public}sos_log_error(LOG_ODR, 
No container when fetching store metadata for %{public}@
Error getting store metadata for %{public}@ from %{public}@: %{public}@
[%{public}@]: Implicitly denied low data - automatic downloads are disabled
[%{public}@]: Evaluating download, size = %llu automatic = %d
Defaulting low data threshold to zero because loading value failed: %{public}@
[%{public}@]: Implicitly allowed low data - threshold disabled
[%{public}@]: Implicitly denied low data - download size is unavailable
[%{public}@]: Implicitly allowed low data - threshold applies
[%{public}@]: Implicitly denied low data - over threshold, or threshold unavailable
No update available for 32-bit app: %{public}@, error: %{public}@
Hydrating apps: [%{public}@]
[%{public}@]: Checking if we can re-hydrate bunleIDs: [%{public}@]
[%{public}@]: Not presenting dialog for bundleID: %{public}@ error: %{public}@
[%{public}@]: Failed to look up appleID for bundleID: %{public}@ error: %{public}@
[%{public}@]: Presenting dialog for bundleID: %{public}@
[%{public}@]: Failed to lookup other apps purchased by the same acount as: %{public}@
[%{public}@]: Searching for apps similar to %{public}@ that have purcharser DSID matching: %@
[%{public}@]: %{public}@ has matching purchaser DSID: %@
[%{public}@]: Identified %ld other app(s) purchased by the same acount as: %{public}@ %{public}@
[%{public}@]: Promoting system app %{public}@ failed: %{public}@
[%{public}@]: Promoting system app %{public}@ (%{public}@)
Observing installation notifications
[%{public}@] Canceling installation after receiving reason: %{public}@
[%{public}@] Failing installation after receiving error: %{public}@
coordinatorDidCompleteSuccessfully for bundleID: %{public}@
[%{public}@] Completing installation after receiving notification
[%{public}@] Prioritization requested via coordinator
[%{public}@] Reviewing network policy
Ignoring pausing request for unknown coordinator: %{public}@
[%{public}@] Reviewing network policy before resuming by user request
[%{public}@] Resuming by user request
[%{public}@] Ignoring duplicate resumption request
Ignoring resumption request for unknown coordinator: %{public}@
[%{public}@]: Prioritize for %{public}@
[%{public}@]: Unable to prioritize due to no bundleID
[%{public}@] SINF mismatch error has been detected
Skipping rehydrate of %@ - no network available
Canceling coordinator for oprhaned app update %{public}@
Received app may be uninstalled notification for bundleID: %{public}@
Received app may be uninstalled notification but no bundleID was included
[%{public}@] Unable to re-pause after cellular access declined: %{public}@
[%{public}@] Stopping because the installation is no longer paused
[%{public}@] Pausing after cellular network access was denied
[Power] Battery saver is enabled
[Power] Power source is plugged in
[Power] Power source is battery
[Power] Registration for power notification failed: %u
[%@]: Trying to insert IAP with nil adamId. App adamId: %{public}@, accountID: %@
[%{public}@]: Migrating from build: %{public}@ to build: %{public}@ updateType: %ld
[%{public}@]: Upgrade Migration
[%{public}@]: Restore From Backup Migration
[%{public}@]: Migrate from Different Device Migration
[%{public}@]: Queued demoted app restore for bundleIDs: %{public}@
[%{public}@]: Network changed
[%{public}@]: Attempting migration anyway following bag load error: %{public}@
[%{public}@]: Attempting migration anyway following bag
[%{public}@]: Running checks after adding first migration.
[%{public}@]: Wating for network to migrate store data.
[%{public}@]: Waiting for checks to complete.
[%@]: There is no current connection - tokens can only be created at the point an XPC call enters
[%@]: There is no connection context - tokens can only be created from service client connections
[%@]: There is no service client - call was probably racing the teardown of the connection
Checking for incomplete coordinators
Commonly used count: %ld apps: [%{public}@]
Ordered: Max app count: %ld
Ordered: App count: %ld apps: [%{public}@]
Ordered: Added an additional %ld springboard apps to the end of the prioritized list
Using Modern Restore Path
Not responsible for coordinator: %{public}@ or error occurred: %{public}@
[%{public}@] Skipping store item coordinator due to exisiting restore
Coordinator: %{public}@ had no placeholder error: %{public}@
Coordinator: %{public}@ had no metadata error: %{public}@
Coordinator: %{public}@ was not installed from the store
Failing coordinator: %{public}@ with reason: %{public}@
Could not find coordinator to cancel: %{public}@ error: %{public}@
Could not fail coordinator: %{public}@ error: %{public}@
No incomplete coordinators were found.
Discovered %ld coordinators to complete
Failed to enumerate restoring coordinators error: %{public}@
[%{public}@]: Unable to obtain correct restore order: %{public}@
[%{public}@] Sending authentication request to client %{public}@
[%{public}@] No client available to handle authentication request
[%{public}@] Authenticated successfully
[%{public}@] Error prompting for account: %{public}@
[%{public}@] Showing system alert authentication
Failed to deserialize JSON data for `%{public}@` error: %{public}@
[%{public}@]: Connection invalidated for pid: %i
[%{public}@]: Connection denied for pid: %i for non-entitled client
[%{public}@]: Failed to unarchive app version: %{public}@
[%{public}@]: Failed to unarchive feedback: %{public}@
[%{public}@]: Error archiving feedback: %{public}@
[%{public}@]: Failed to convert pending image upload to data %{public}@
[%{public}@]: Failed to convert image uploads to data %{public}@
[%{public}@]: Failed to convert data from property '%{public}@' to array of %{public}@: %{public}@
[%{public}@]: Failed to create a valid URL from %{public}@
Could not find max-item-count bag value. Defaulting to 5
[%{public}@] Skipping restore accountID: %{public}@ not matching accountID: %{public}@
[%{public}@] Bootstrap has been started
Failing %ld restores due to account failures
Queued task: %{public}@ for: %{public}@
Canceling all system applications for: %{public}@
Finished canceling all system applications for: %{public}@
Received request: %{public}@ from: %{public}@
[%{public}@]: Requesting auth for accountID: %{public}@ accountName: %{public}@
[%{public}@]: Success requesting auth for accountID: %{public}@ accountName: %{public}@ additionalApps: [%{public}@
[%{public}@]: Restoring for accountID: %{public}@ accountName: %{public}@ items: [%{public}@]
[%{public}@]: Error preflighting accountID: %{public}@ accountName: %{public}@ error: %{public}@
[%{public}@]: Opening url: %{public}@ 
[%{public}@]: Preflight account: %{public}@
[%{public}@]: Error preflighting account: %{public}@ error: %{public}@
Creating placeholders for %ld app(s)
Created %ld coordinators with %ld remaining
Created coordinators for %ld apps out of %ld requested apps
Creating coordinators for apps: [%{public}@]
Looking up artwork for itemID(s): %{public}@
Failed to set artwork promise for bundleID: %{public}@ error: %{public}@
Failed to create artwork promise for bundleID: %{public}@ error: %{public}@
Failed to load artwork for bundleID: %{public}@ path: %{public}@ error: %{public}@
Failed to load artwork template for itemID: %{public}@ with bundleID: %{public}@
Artwork lookup failed with error: %{public}@ for itemID(s): %{public}@
Network not available when loading artwork for itemID(s): %{public}@
Creating restore coordinator for bundleID: %{public}@ completeDataPromise: %d
Completing data promise for restore coordinator for bundleID: %{public}@ 
Failed to create placeholder for %{public}@ due to error: %{public}@
Creating placeholder for bundleID: %@ templateURL: %{public}@
Error getting scratch path for bundleID: %{public}@
Error writing artwork for bundleID: %{public}@ path: %{public}@ error: %{public}@
Wrote artwork for bundleID: %{public}@ path: %{public}@
Error getting artwork for bundleID: %{public}@ error: %{public}@ dataLength: %ld
Lookup error: %{public}@
Timed out attempting to fetch artwork from %{public}@
[VPP/%{public}@] Will attempt vpp SINF recovery
[VPP/%{public}@] Will not attempt vpp SINF recovery with hasMIDBasedSINF: %d missingRequireSINF: %d
[%{public}@] Attempting VPP SINF migration
[%{public}@] Completed with result: %d SINF migrated: %d
[%{public}@] Attempting VPP SINF migration 
[%{public}@] Completed VPP SINF migration VPP migrated: %d
Validating active installations on daemon start
[%{public}@] Resetting phase `%{public}@` for rescheduling
[%{public}@] Restarting installation from phase `%{public}@`
Install::InvalidPhase
[%{public}@] Unexpected phase `%{public}@` marking as failed
[%{public}@]: Skipping start, appears to already be running
Data promise began using promise but promiseID `%{public}@` or referenceID `%{public}@` was missing
Skipping legacy progress notification because we don't have an identifier for it.
Install::DownloadStart
[%{public}@] Beginning downloading
Install::InstallStart
[%{public}@] Beginning installation
Install::FinishStart
[%{public}@] Beginning final
Install::PreambleQueue
[%{public}@] Queuing preflight operation
Install::Installing
[%{public}@] Waiting for installation to complete
Install::PreambleCancel
[%{public}@] Preflight canceled with coordinator: %{public}@
Install::PreambleContinue
[%{public}@] Preflight suceeded with coordinator: %{public}@
Install::PreambleFail
[%{public}@] Preflight failed with error: %{public}@
Install::PreambleFinish
[%{public}@}] Preflight finished and will proceed to installation
Install::DownloadCancel
[%{public}@] Download canceled
Install::DownloadFail
[%{public}@] Download failed with error: %{public}@
[%{public}@] Attempting expired download recovery for update
[%{public}@] Cannot recover from expired download for this installation
[%{public}@] Restarting after successful recovery
[%{public}@] Failing after unsuccessful recovery error %{public}@
%{public}@ getDisplaynamesForBundleID: %{public}@ for client: %{public}@
%{public}@ getEmailAddressForBundleID: %{public}@ for client: %{public}@
%{public}@ getFeedbackMetadataForBundleID: %{public}@ for client: %{public}@
%{public}@ getLaunchInfoForBundleID: %{public}@ for client: %{public}@
%{public}@ getLaunchInfoForVersion: %{public}@ for client: %{public}@
%{public}@ isFeedbackEnabledForBundleID: %{public}@ for client: %{public}@
%{public}@ isLaunchScreenEnabledForBundleID: %{public}@ for client: %{public}@
%{public}@ setFeedbackEnabled:forVersion: %{public}@ for client: %{public}@
%{public}@ setLaunchInfo: %{public}@ for client: %{public}@
%{public}@ setLaunchScreenEnabled:forVersion: %{public}@ for client: %{public}@
%{public}@ submitFeedback: %{public}@ for client: %{public}@
%{public}@ updateTestNotes:forVersion: %{public}@ for client: %{public}@
Migrating %{public}@ to %llu
Migrating %{public}@ to %llu failed!
We did not receive any hash data, skipping hash verification
Guessing MD5 hashing type - but we received an unknown value (%{public}@)
Guessing MD5 hashing type - but we received no value
[%@]: IAP Info DAAP data not NSData
No TestFlightFeedback Database migration function for %li => %li
Failed to get host reachability flags.
[%@]: Failed to construct request URL error: %{public}@
Edu Mode Enabled : %{public}@
Error getting system container: %llu
System container URL : %{public}@
Sentinel files : %{public}@
BaseURL for ODR content : %{public}@
Going to verify/create all of our library paths.
Check/Creating the base library path.
Unable to create hase path for ODR content.
Underlying error : %{public}@
Base path for ODR content : %{public}@
Check/Creating the asset packs path.
AssetPacks path is: %{public}@
Unable to create or find the Asset Packs path [%{public}@]. Error: %{public}@
appstored is pondering accepting a new connection...
[%{public}@]: Logging watchdog timeout: %{public}@
[SwitchArcade]: Error reading switch bag key. Error: %{public}@
[SwitchArcade]: Starting switch bundleID: %{public}@ fromUserName: %{public}@ toUserName: %{public}@ usingSwithArcadeUserEndpoint: %d hadURL: %d
[SwitchArcade]: Resulted with error: %{public}@
Failed to repair application %{public}@ error: %{public}@
Failed to find tag manifest for %{public}@ error: %{public}@
Error fetching manifest for %{public}@: %{public}@
Ingesting asset and tag manifest for %{public}@
Updating tag manifest for %{public}@
Failed to find asset manifest for %{public}@ error: %{public}@
Failed to import manifests for %{public}@ error: %{public}@
Successfully imported manifest for %{public}@
Metadata lookup encountered error: %{public}@
Content restore keybag resulted in error: %{public}@
Successfully completed content restore call with %ld appinstall(s)
Content restore setting ForceAppDRMMode: %d
KBSync unavailable for account: %{public}@ error: %{public}@
[%{public}@] item: %{public}@ due to lack of required metadata
[%{public}@] ContentRestore lookup: %{public}@
No local URL provided.  Nothing will be removed.
The URL we are trying to delete is not in the usual asset pack storage location. [URL: %{public}@ AssetPacksPath: %{public}@]
Removed : %{public}@
Error removing [%{public}@]: %{public}@
Going to attempt to remove asset packs parent directory [%{public}@]
Error removing [%{public}@].  Error: %{public}@
Removed: %{public}@
AssetPack's parent directory could not be removed. [%{public}@].  Error: %{public}@
Path has children, >>NOT<< removing: %{public}@
Succesfully purged %{public}@ for reason %ld
Failed to purge %{public}@ for reason %ld
[%{public}@] Running async authorize operation for accountID: %{public}@ familyMemberAccountID: %{public}@
[%{public}@] Error async requesting authorizion. Error: %{public}@
[%{public}@] Authorize async request succeeded
[%{public}@] Running sync authorize operation for accountID: %{public}@
[%{public}@] Running sync authorize operation for accountID: %{public}@ familyMemberAccountID: %{public}@
[%{public}@] Error authorizing. Error: %{public}@
[%{public}@] Authorize sync operation succeeded
[Device] First boot. Clearing once per boot items
[Device] Starting
[Device] Marked once per boot complete for: %{public}@
[Device] Failed to create first-run semaphore: %s sem: %s
Truncating promise after failure to reset promise %{public}@ with error: %{public}@
[%{public}@] Invalid coordinator intent, treating as initiating instead
[%{public}@] Establishing coordinator for intent `%{public}@` with importance `%{public}@`
Error setting the gizmo pairing ID: %{public}@
[%{public}@] Client %{public}@ failed authentication request with error %{public}@
[%{public}@] Sending dialog request to client %{public}@
[%{public}@] Client %{public}@ failed dialog request with error %{public}@
[%{public}@] No client available to handle dialog request
[%{public}@] No account required for AMSPurchaseTypeDownloadProduct
[%{public}@] No account required for machine based purchase
[%{public}@] Account provided but we couldn't find it on this device
[%{public}@] No account provided
[%{public}@] Active iTunes account found, using that
[%{public}@] No active iTunes account found
[%{public}@] No account for discretionary purchase
[%{public}@] Purchase has a dsID but no username to authenticate
[%{public}@] Prompting for account
[%{public}@] Purchasing with parameters: %{public}@
[%{public}@] No account for purchase: %{public}@
Failed purchase had a trigger queue check.
Purchase finished but it was not found in the batch so dropping the response on the floor
[%{public}@] Failed to fetch updates for account: %{public}@ error: %{public}@
[%{public}@] Received %lu forced update(s)
[%{public}@] Failed to run forced updates task: %{public}@
[%{public}@] Received %lu %{public}@server update(s) for account: %{public}@
[%{public}@] %{public}@
[%@]: Client connected: %@
[%@]: sendJobsCompleted to client: %@ for jobs: [%@] with finalPhases: %@ 
[%@]: %{public}@ Adoption requested by %{public}@ but is not supported on this platform
[%@]: %{public}@ Adoptable bundle identifiers requested by %{public}@ but is not supported on this platform
[%@]: Checking server queue for clientID: %{public}@
[%@]: selector not implemented
[%@]: Notify dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: Notify dialog completed for clientID: %{public}@ with error: %{public}@
[%@]: Notify dialog completed successfully for client: %{public}@ 
[%@]: Notify authentication dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: %{public}@ Notify authentication dialog completed for purchaseID: %{public}@ with error: %{public}@
[%@]: %{public}@ Purchase authentication dialog completed successfully for purchaseID: %{public}@
[%@]: Purchase completed for clientID: %{public}@ with error: %{public}@
[%@]: Purchase completed successfully for client %{public}@
[%@]: %{public}@ Starting purchase of %{public}@:%{public}@ by %{public}@
[%@]: %{public}@ Purchase completed with error: %{public}@
[%@]: %{public}@ Purchase completed successfully
[%{public}@] Looking for existing coordinator to resynchronize installation
[%{public}@] No coordinator identifier was set
[%{public}@] Coordinator is missing - checking if application is installed
[%{public}@] Expected application appears to be installed with evid: %{public}@, proceeding to postamble
[%{public}@] Expected application with evid: %{public}@ not installed. Installed version is: %{public}@
[%{public}@] Application `%{public}@` could not be found
[%{public}@]: Registered cache delete callbacks for clienID: %{public}@ with osResult: %d
[%{public}@]: Invalidating caches
[%{public}@]: watchKitAppsUpdated
[%{public}@]: Requested cancel purge for service
[%{public}@]: ODR has not been set please make sure everything is configured correctly.
[%@]: Failed to get purgable space from Cache Delete: %{public}@
[%@]: %@
[%@]: Requesing free space for %llu bytes needed, %llu bytes available.  %llu bytes can be purged, requesting %llu bytes be purged.
[%@]: Success: %llu bytes purged, bytesNeeded: %llu bytesAvailable: %llu
[%{public}@]: Periodic purge request %{public}@ with urgency %ld
[%{public}@]: Purge request with desired bytes: %{public}@ with urgency: %ld
[%{public}@]: Nothing to purge for urgency %ld
[%{public}@]: Purged %ld bytes for apps
[%{public}@]: Purged %ld bytes for odr
[%{public}@]: Purged total bytes: %ld desiredPurge: %{public}@ urgency: %ld
[%{public}@]: Purgeable request with urgency: %ld
[%{public}@]: Purgeable total bytes: %lld  for urgency: %ld cached value: %d
[%{public}@]: Pushed combined purgeable amounts: %{public}@
[%{public}@]: Nothing to push
[%{public}@]: Refreshing purgeable storage with reason: %{public}@
[%{public}@]: Refreshed app purgeable: %{public}@
[%{public}@]: Refreshed ODR purgeable: %{public}@
[%{public}@]: Unknown urgency value, defaulting to low urgency
%{public}@: [%{public}@] Performing LoadFamilyCircleTask
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because there's no active account.
%{public}@: [%{public}@] Failed to load the family info because the network call failed. error = %{public}@
%{public}@: [%{public}@] Failed to load the family info because we were unable to process the server response.
%{public}@: [%{public}@] Returning cached family info.
%{public}@: [%{public}@] We failed to load the family info, and we have no cached family info to return.
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because the bag didn't give us the URL. error = %{public}@
%{public}@: [%{public}@] Unable to generate the path in order to cache a family info lookup.
%{public}@: [%{public}@] Unable to cache a family info lookup because the given account has no DSID. account = %{public}@
%{public}@: [%{public}@] Failed to serialize the family info. error = %{public}@
%{public}@: [%{public}@] Failed to write the serialized family info to disk. error = %{public}@
%{public}@: [%{public}@] Wrote the serialized family info to: %{public}@
%{public}@: [%{public}@] Unable to load cached family info because the account has no DSID. account = %{public}@
%{public}@: [%{public}@] Our cached family info isn't for the given account.
%{public}@: [%{public}@] We have cached family info for the account, but it's too old to return.
%{public}@: [%{public}@] Unable to generate the path in order to load cached family info.
%{public}@: [%{public}@] Load cached family info.
%{public}@: [%{public}@] Failed to deserialize the cached family info. error = %{public}@
Auto updates completed
Restore completed
Finishing progress for bundleID: %{public}@
Received an optimal download window but we weren't able to create valid dates with the provided data: %{public}@ %ld
Received optimal download window of %{public}@ to %{public}@
[%{public}@] Prompting to request authentication to establish an active account
[%{public}@] Attempt to establish primary account resulted in error: %{public}@
[%{public}@] Logged into account: %{public}@
[%{public}@] Skipping claim, no active account
[%{public}@] Skipping claim, already did claim for this build: %@ and user: %@
[%{public}@] Skipping claim, wasn't able to discover any unclaimed apps
[%{public}@] Running claim for %ld app(s) for accountID: %{public}@. Last claim was on build: %{public}@
[%{public}@] Claim completed for: %{public}@
[%{public}@] Claim failed with error: %{public}@
[%{public}@] Discovered claimable application: %{public}@
[%{public}@] Skipping claim for %{public}@: Bundle ID not eligible
[%{public}@] Skipping claim for %{public}@: Not installed
[%{public}@] Skipping claim for %{public}@: Not store vended
[%{public}@] Skipping claim for %{public}@: Not missing SINF
[%{public}@] Skipping claim for %{public}@: Missing store identifiers
[%{public}@] Skipping claim for %{public}@: Not missing storeFront
[%{public}@] Skipping claim for %{public}@: Not missing account
[%{public}@] Attempting claim for %{public}@: Passes eligible for corrupted metadata
[%{public}@] Failed to generate keybag for account: %{public}@ error: %{public}@
[%{public}@] Importing keybag data (%lu bytes) following claim(s)
[%{public}@] Importing keybag data failed with error: %{public}@
[%{public}@] Attempting to claim %ld item(s) for accountID: %{public}@
[%{public}@] Skipping update bundleID: %{public}@ as it doesn't appear to be installed
[%{public}@] Skipping update bundleID: %{public}@ unable to make launchable
[%{public}@] Updating app metadata for bundleID: %{public}@ for accountID: %{public}@
[%{public}@] Skipping update bundleID: %{public}@ unable to make launchable error: %{public}@
[%{public}@] Metadata could not be updated for  bundleID: %{public}@ for accountID: %{public}@ error: %{public}@
[%{public}@] Claim completed for bundleID: %{public}@ for accountID: %{public}@
[%{public}@] Claim complete for bundleIDs: [%{public}@] for accountID: %@
[%{public}@] Presenting dialog request: %{public}@
[%{public}@] Dialog request failed with error: %{public}@
[%{public}@] Presenting authentication request: %{public}@
[%{public}@] Authenticate request failed with error: %{public}@
[%@]: Unknown sort option: %@
Requring all stores to migrate after truncating corrupt database at: %{public}@
Exiting after truncating corrupt database at: %{public}@
Exiting after deleting corrupt database at: %{public}@
Database opened at: %{public}@
Database created at: %{public}@
[%{public}@]: BundleID required for mapping: %{public}@
[%{public}@}] Failing installation with bootstrap error: %{public}@
[%{public}@}] Reset bootstrap phase, ready for next attempt
Active installations: %lu/%lu Lowest Priority: %ld Highest Priority: %ld
No contention, starting: %{public}@
Jettison candidate (%ld), starting: %{public}@
Prioritized (%ld >= %ld), starting: %{public}@
Polling complete with %lu active installation(s)
[%{public}@] Encountered invalid installation which was not really running
[%{public}@] Sanity check failed - this installation doesn't appear need bootstrap, starting anyway
[%@]: Record app event: [%{public}@]
[%@]: User not opted-in to record app event: [%{public}@]
[%@]: Apps deleted: [%{public}@]
[%@]: Not recording apps deleted: [%{public}@]
[%@]: Apps installed: [%{public}@]
[%@]: Not recording app installs: [%{public}@]
[%@]: Not enabled to record personalization metrics
[%@]: Reloading cluster mappings
[%@]: Resetting actorID
[%@]: Resetting personalization metrics
[%@]: Not enabled to send personalization metrics
[%@]: Setup following migration
[DNU]: Skipping %{public}@ which is not a candiate
[%@]: Importing launch events error: %{public}@
[%@]: Imported %ld launch event(s) with result: %d
[%@]: Importing crash events error: %{public}@
[%@]: Imported %ld crash event(s) with result: %d
[%@]: Cleared actorID with reason: %{public}@
[%@]: Completed recording metrics events
[%@]: Clearing cluster mappings for: %{public}@
[%@]: Error sending metrics events. Error: %{public}@
[%@]: Completed sending metrics events
[%@]: Adding usage for bundleID: %{public}@ foregroundUsage: %lld usageCount: %ld 
[%@]: Cluster: %@
[%@]: ClusterID: %@ clusterVersion: %@ app count: %ld weighted launches: %d weighted usage: %d
[%@]: Proto data length: %ld base64 encoded length: %ld
[%@]: Encoded Token: %@
[%@]: Found %ld raw crash events
[%@]: Could not find app metdata for bundleID: %{public}@
[%@]: Resetting dnu analytics gathering
[%@]: Stopping analytics gathering
[%@]: Importing cluster mappings error: %{public}@
[%@]: Imported mappings with result: %d
[%@]: BundleID required for event: %{public}@
[%@]: Error creating entity for bundleID: %{public}@ result: %{public}@
[%@]: Created launches app event with bundleID: %{public}@
[%@]: Error creating entity for bundleIDs: [%{public}@] result: %{public}@
[%@]: Created app event with bundleIDs: [%{public}@]
[%{public}@]: Error generating context
[%@]: Initiated session with actorID: %{public}@ with samping enabled: %d
[%@]: Skipping metrics for actorID session.
[%@]: Queuing %ld personalization metrics event(s)
[%@]: Error generating transparancey metrics: %{public}@
[%@]: No events to report
[%@]: Cluster mapping requires a bundleID, clusterID, and clusterVesion mapping: %{public}@
[%@]: Error creating cluster mapping entity for bundleID: %{public}@ result: %{public}@
[%@]: Imported mappings for bundleID: %{public}@ result: %d
gamePlayDidBeginForBundleID:withCompletionHandler: called by %{public}@
[%{public}@]: Requested to start a session for %{public}@ which already has an active session.  Returning the existing session ID.
[%{public}@]: Received a request for a game session for %{public}@ when we had an active session for %{public}@.  Ending current session and starting a new one per request.
[%{public}@]: Created session for %{public}@ with session ID %{public}@
gamePlayDidEndForBundleID:withReason:andSessionID:andCompletionHandler: called by %{public}@
No active session in memory, but recovered session %{public}@
heartBeatForBundleID:andSessionID:withCompletionHandler: called by %{public}@
[%{public}@]: Flushing session
[%{public}@]: Removing inactive session: %{public}@
[%{public}@]: Apps offloaded: [%{public}@]
[%{public}@]: Received Apple ID did change notification.
Received a beta app crash notification for %{public}@
Received a beta app crash notification without the required metadata: %{public}@
Connection taken down HARD, please call close before deallocating: %{public}@
Encountered exception while in transaction: %{public}@
[%@]: Asking delegate to reset database after corruption: %{public}@
[%@]: Truncating database after corruption: %{public}@
[%@]: Reopening database after IO error: %{public}@
[%@]: Asking delegate to reset database after reopen: %{public}@
[%{public}@] Redownload request throttled with error: %{public}@
[%{public}@] Starting purchase for redownload
[%{public}@] Redownload request failed with error: %{public}@
[%{public}@] Redownload purchase failed with error: %{public}@
[%{public}@] Active installation already exists: %{public}@
Error checking for previously installed app for internal install %{public}@ %{public}@: %{public}@
Internal install requested for %{public}@ %{public}@ but it is already installed.
Timed out checking for %{public}@ %{public}@ on an internal install
No way to check for an existing app, continuing
Running payment [%@, %@]
Payment failed: %{public}@
Failed payment had a trigger queue check.
Payment complete
Payment result contained error: %{public}@
Payment completed with no transactions
Payment received more than one transaction: %@ Using only the first.
Sending authentication request for %{public}@
No account for %{public}@: %{public}@
Setting News subscription entitlements for %{public}@ accountID: %{private}@
Setting App Store subscription entitlements for %{public}@ accountID: %{private}@
[%{public}@] Handling authentication request for purchase %{public}@
[%{public}@] No client available to handle authentication request for purchase %{public}@
[%{public}@] Handling dialog request for purchase %{public}@
[%{public}@] No client available to handle dialog request for purchase %{public}@
[Transaction] Started transaction: %{public}@
[Transaction] Joined transaction: %{public}@
[Transaction] Ended transaction: %{public}@
[Transaction] Left transaction: %{public}@
Connection to %@ interface permitted with suitable entitlements
Connection to %@ interface failed: client is not suitably entitled
Starting legacy request from: %{public}@ for system application: %{public}@
Completed legacy request from: %{public}@ for system application: %{public}@ (%{public}@)
[%{public}@]: No apps to lookup
[%{public}@]: Error retrieving cluster mappings: %{public}@
[%{public}@]: Load cluster map complete
[%{public}@]: Missing cluster data for bundleID: %{public}@ itemID: %{public}@
[%{public}@]: Missing cluster data for bundleID: %{public}@ itemID: %{public}@ clusterID: %{public}@ launchWeight: %{public}@  usageWeight: %{public}@
[%{public}@]: Error parsing cluster mappings response: %{public}@
%{public}@: Bag changed. Fetching new storefront.
%{public}@: Timed out waiting for resource
%{public}@: storefront changed to %{public}@
%{public}@: storefront changed from %{public}@ to %{public}@
%{public}@: Error fetching bag storefront %{public}@
%{public}@: Notifying observer %{public}@ of storefront change
Canceling remote job for %{public}@
Unable to cancel remote job for %{public}@, no XDC support
Canceling local job for %{public}@
Unable to cancel, no job found for bundle ID: %{public}@
Canceled local job for %{public}@
Pausing local job for %{public}@
Unable to pause, no job found for bundle ID: %{public}@
Paused local job for %{public}@
Resuming local job for %{public}@
Unable to resume, no job found for bundle ID: %{public}@
Resumed local job for %{public}@
[%{public}@]: Presenting first usage dialog for: %{public}@
[%{public}@]: Failed to present first usage dialog for: %{public}@ error: %d
Application %{public}@ did not need repair error: %{public}@
Asset %{public}@ for application %{public}@ does not need repair: %{public}@
Asset %{public}@ for application %{public}@ has gone: %{public}@
Asset %{public}@ for application %{public}@ moved successfully
Asset %{public}@ for application %{public}@ could not be moved error: %{public}@
Asset %{public}@ for application %{public}@ already repaired
FamilyMember: Received an invalid server response for FamilyMember. serverResponse = %@
[%@]: Registered notification client: %{public}@
Looking for demoted applications for accountID: %{public}@ appleID: %{public}@
Failed to log into account due to error: %{public}@
Could not find account for accountID: %{public}@] appleID: %{public}@
Creating jobs for demoted apps: [%{public}@]
Completed request with error: %{public}@
Completed Restore Demoted request successfully
[%@]: flushMetricsWithCompletionBlock for client: %{public}@
[%@]: getAppPayoutEventsWithCompletionBlock for client: %{public}@
[%@]: getAppSummaryEventsWithCompletionBlock for client: %{public}@
[%@]: recordLaunchesWithCompletionBlock for client: %{public}@
[%@]: recordMetricsWithCompletionBlock for client: %{public}@
[%@]: reportAppEvent for client: %{public}@
[%@]: resetMetricsWithCompletionBlock for client: %{public}@
[%@]: sendPayoutMetricsWithCompletionBlock for client: %{public}@
[%@]: sendSummaryMetricsWithCompletionBlock for client: %{public}@
[%@]: sbsyncIfSubscribedWithAccount:completionBlock for client: %{public}@
[%@]: sbsyncWithCompletionBlock for client: %{public}@
[%@]: sbsyncWithDuration:completionBlock for client: %{public}@
[%@]: subscriptionDetailsWithCompletionBlock for client: %{public}@
[%@]: subscriptionStateWithCompletionBlock for client: %{public}@
topAppForAccount for client: %{public}@
[%{public}@]: Could not load download manifest with underlying error: %{public}@
There is no coordinator in the store, searching for exising coordinator for bundle ID: %@
Failed to find coordinator for bundle ID: %@ error: %@
Coordinator has already been completed
Failed to cancel coordinator for: %@ error: %@
Successfully canceled coordinator for: %@
[%{public}@]: %{public}@ did complete successfully
[%{public}@]: %{public}@ did complete successfully but is untracked
[%{public}@]: %{public}@ with UUID %{public}@ was canceled with reason: %{public}@
[%{public}@]: %{public}@ was canceled but is untracked
[%@]: Removing coordinator for %lld from store: %@
[%@]: No coordinator for %lld exists in the store
Attempting to hydrate applications with bundleIDs: [%{public}@]
Skipping register of non-enabled activity: %{public}@
Activity registered: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity check-in: %{public}@ found deadline was missing, now set for: %{public}@
Activity check-in: %{public}@ with no deadline for reason: %{public}@
Activity check-in: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity exceeded its deadline, forcing run now: %{public}@
Activity fired within deadline (%@), running now: %{public}@
[%{public}@] Reset with reason: %{public}@
[%{public}@] Skipping reset due to activity not enabled activity
[%{public}@] Skipping register of non-enabled
[%{public}@] Using refresh override interval: %lld
[%{public}@] Failed to find bag value due to error: %{public}@. Will default to interval: %lld
Skipping unknown activity: %{public}@
[%{public}@] Completed activity with error: %{public}@
[%{public}@] Completed activity with result: %d
[%{public}@] Handling activity wakeup
[%{public}@] Skipping non-enabled activity
[%{public}@] Activity date too far in the future, using the current date
Migrating from build: %{public}@ to build: %{public}@
Setting up activities with build: %{public}@
[%{public}@] Canceling purchase due to error: %{public}@
[%{public}@] Refusing to re-complete purchase
[%{public}@] Failing purchase with error: %{public}@
[%{public}@] Refusing to fail completed purchase (error was: %{public}@)
[%{public}@] Cannot mix machine based and non-machine based purchases
[%{public}@] Created batch for machine based purchases
No ODR Database migration function for %li => %li
[Validation] Scanning installed applications for outdated metadata
[Validation] Skipping validation for %{public}@: No owner available or unowned application
[Validation] Skipping validation for %{public}@: No account available for %{public}@
[Validation] Skipping validation for %{public}@: Could not read existing metadata
[Validation] Completed validation for %{public}@: Metadata already up to date
[Validation] Updating metadata for: %{public}@, current Apple ID: '%{public}@' updated Apple ID: '%{public}@'
[Validation] Failed to update metadata for: %{public}@, error occurred: %{public}@
[Validation] Completed validation for %{public}@: Metadata successfully updated
[Validation] Completed scan for installed applications with outdated metadata
[%{public}@]: Receipt refresh migrating VPP app with bundleIdentifier: %{public}@.
[%{public}@]: Falling back to default threshold following error loading bag key: %{public}@
[%{public}@]: Receipt expiration in %ld days [%{public}@] [%{public}@ v %{public}@]
[%{public}@]: Receipt expiration in %ld days [%{public}@] -- [Silent] --  [%{public}@ v %{public}@]
[%{public}@]: Unexpected status code: %{public}@
[%{public}@]: No new receipt for %{public}@
[%{public}@]: Failed to re-write the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of server revoked app with bundleIdentifier: %{public}@ with result: %d
[%{public}@]: Re-wrote the receipt for app: [%{public}@] [%ld bytes]
[%{public}@]: Attempted VPP migration of revoked app with bundleIdentifier: %{public}@ with result: %d
[%{public}@]: Re-wrote a Revoked receipt for app: [%{public}@] [%{public}@] [%ld bytes]
SINF refresh for bundleIdentifier: %{public}@ was sucessful
[%{public}@]: Using family primary account: %{public}@ to restore bundleID: %{public}@ storeFront: %{public}@
[%{public}@]: Using app account: %{public}@ item with bundleID %{public}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@]: App receipt request for bundleIdentifier: %{public}@ failed to encode with error: %{public}@
[%{public}@]: Updating receipt for: %{public}@
[%{public}@]: Receipt refresh failed for: %{public}@, error: %{public}@
[%@]: Created transaction: %@
[%@]: Purgeable update request for client: %@
Checking for incomplete coordinators at request of: %{public}@
Check completed successfully
Check failed with error: %{public}@
[%@]: Parsed response
status: %i
isUpdate: %@
serverRevision: %@
iaps: %@
deletedIaps: %@
[%@]: Failed to decode response
[IAPInfoItemsResponseParserDelegate]: Error parsing item: %@
Restoring %ld app(s)
Error creating coordinators error: %{public}@
No items to restore
StoreKitMessagesDatabaseStore
ClockFactory
WallClock
Clock
NSObject
StoreKitMessagesDatabaseEntity
StoreKitMessagesServerRequest
StoreKitMessagesManager
PushMessageConsumer
RequestThrottlePersistence
Daemon
RequestThrottleRecord
NSSecureCoding
NSCoding
StoreKitMessagesDatabaseSession
SQLiteDatabaseSession
RequestThrottle
StoreKitMessageInfo
StoreKitMessagesDatabaseTransaction
SQLiteDatabaseTransaction
DiagnosticClock
PurchaseOwner
NSCopying
AppReceiptTaskResult
RequestProxy
ASDRequestProxy
NSXPCProxyCreating
CellularDataPromptDialogRequest
AppUsageDatabaseStore
AppUsageBaseManager
ASDJobManager
ASDJobManagerClient
JobManagerListener
AppInstallPolicy
URLRequestProperties
PushMessage
LegacyPurchaseContext
UpdatesContext
StoreURLOperation
WorkspaceTool
AccountCacheDBClient
PushService
PushConnectionDelegate
URLRequest
Purchase
ProgressCache
LibraryCatalog
AppMetadataEntityOcelotPayout
ODRDatabaseSession
PostBulletinRequestTask
ODRInstallContext
JobErrorController
ActiveAccountObserver
Extensions
BetaAppFeedbackEntity
IAPInfoIAPEntity
AppUpdateEntity
SystemAppBootstrapTask
InstallCoordinationUninstaller
LibraryUninstall
UploadTestFlightImageTask
DataPromiseSpecification
PerformUpdatesTask
PurchaseHistoryItemsDAAPResponseMetadataParser
DKDAAPParserDelegate
XDCDevice
TFAppleWatch
LibraryStore
Task
TestFlightFeedbackDatabaseSession
SQLiteDatabaseStore
UserNotification
PurgeableAppRequestTask
RestoreAppInstall
AssetPromise
InGameAnalyticsService
ASDInGameAnalyticsServiceProtocol
RestoreManager
RestoreBatchInfo
InAppDownloadTask
AMSURLProtocolDelegate
DataMigrationObserver
XPCServiceClient
ASDServiceProtocol
ExpiredUpdateRecoveryTask
XDCRegisterAppMessage
ODRManifestEntity
FamilyInfoLookupResult
AppPurgeCoordinator
CacheDeletePurgeableProvider
UsedApp
PurgeContext
BetaAppFeedbackMetadataMemoryEntity
SQLiteDatabaseStoreSchema
PurchaseIntentBulletin
ASDExtensions
TypeCheckedDictionaryReader
AssetRequestProperties
SQLiteStatement
SubmitTestFlightFeedbackTask
XDCMessage
OcelotManager
CrashParser
AppUpdatesDatabaseSession
StoreQueueManager
InGameAnalyticsDatabaseSession
AppUsageDatabaseTransaction
IXCoordinatorWithDeviceSecurityPromise
IXCoordinatorWithInitialODRAssetPromises
IXCoordinatorWithPlaceholderPromise
IXCoordinatorWithAppAssetPromise
IXCoordinatorWithInstallOptions
IXCoordinatorWithUserDataPromise
IXCoordinatorWithImportance
LibAppStoreDaemon
lib_IXAppInstallCoordinatorTag
XDCService
IDSServiceDelegate
AppEventEntityPersonalization
ODRBackgroundMaintenance
LaunchableAppRequestTask
DigestVerifier
ODRTaskQueue
MigrationRequestTask
ODRBundleTagManifest
AppInstallPostambleOperation
URLResponseDecoder
AMSResponseDecoding
AuthenticationChallenge
LaunchServicesCatalog
LibraryOpen
LibraryQueryEvaluator
URLSessionManager
SubscriptionEntitlementsResponse
LogPushConnection
AppUpdateMemoryEntity
CheckDownloadQueueTask
CheckDownloadQueueURLRequestEncoder
AppMetrics
AccountEventEntity
ODRAssetPackValidationMaintenanceTask
AppEvent
DAAPURLRequest
SbsyncTask
NSURLSessionDelegate
SbsyncTaskRequestEncoder
FetchReceiptTask
SubscriptionEntitlementsCoordinator
TestFlightUploadSubTask
OwnsCheckTask
OwnsCheckTaskRequestEncoder
PresentTapToRadarRequestFlow
XDCInstallResponse
RequestController
ODRSpaceReduction
WriteReceiptTask
NotifyTestFlightClientTask
AppInstallInfo
ODRLaunchServicesObserver
BetaAppInfoEntity
Environment
RequestBroker
NSXPCListenerDelegate
AssetSession
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegatePrivate
NSURLSessionTaskDelegatePrivate
IAPInfoUpdateRequestTask
OSVersion
FileUtilities
FileWriteStreamAdapter
UpdateMigratorUpdateHistoryOperation
AppInstallPreambleOperation
AppInstallPreambleResponse
ODRManifestValidationMaintenanceTask
IAPInfoUpdateRequestContext
PurchaseMetrics
ODRLaunchServicesListener
Supervisor
AssetRequest
ArcadeRepair
ApplicationRepair
UPPManifestItem
CrossfireManager
XDCDeviceManager
InstallationService
ASDInstallationServiceProtocol
SQLiteQueryResults
SQLiteBinding
AppEventEntityOcelotPayout
UpdateMigratorTestFlightFeedbackOperation
TFApplication
URLBagMemoizedValue
ODRMemorySampler
StoreAsset
StoreSinf
JobSchedulerRequestTask
AuthenticateRequest
AdPlatformsStatusConditionsActivity
Activity
DaemonProtocolDataProvider
UPPManifestDownloadTask
ASDStoreKitClientProtocol
ASDStoreKitServiceProtocol
StoreKitServiceListener
ODRDatabaseTransaction
ODRTagEntity
SQLiteMemoryEntity
SQLiteTypeChecking
WatchSettingsManager
LoadInAppProductsTask
TestFlightFeedbackUploadTask
Legacy
ODRDataSampler
RequestTask
SQLiteConnectionOptions
TypeCheckedStringReader
AppInstallEntity
DiagnosticService
ASDDiagnosticServiceProtocol
LoadUnfinishedInAppTransactionsTask
TFUploadFeedbackResponse
DiskSpaceManager
XDCProgress
LowDataEvaluatorTask
PurchaseInfo
PushDiagnostic
PurchaseHistoryService
ASDPurchaseHistoryServiceProtocol
CheckStoreQueueTask
PurchaseHistoryItemsDAAPPartialResponse
PurchaseHistoryItemsDAAPResponseDecoder
LegacyManifestRequestTask
DialogCoordinator
PurchaseHistoryItemsRequest
AppEventEntityCrossfire
UpdateMigratorODROperation
AppEventEntityOcelot
UpdateItemMetrics
BatterySaverWatcher
AuthorizeTask
AuthorizeURLRequestEncoder
RescueAbandonedPlaceholderOperation
AppUpdatesDatabaseStore
PurchaseHistoryDatabaseStore
ZipDataStreamAdapter
AppUpdatesDatabaseTransaction
ODRManifestRequestTask
ForcedUpdatesTask
DownloadDRM
DownloadSinf
SinfsArray
LibraryCatalogObserver
LegacyActivityManager
ODRContentHash
TFDisplay
DaemonAdditions
RunLoop
GameSession
UpdateMigratorOperation
CoordinatorPromiseProvider
RestoreInAppTransactionsTask
MetricsContext
Storage
ODRClient
ODRServerProtocol
IAPInfoRequestTask
RestoreBatchTask
RestoreBatchContext
KeepAlive
StoreKitClient
ASDNotificationCenterDialogObserver
FetchReceiptTaskDelegate
URLRequestEncoder
AMSRequestEncoding
InstallEnterpriseAppsTask
ODRDatabaseExternalTransaction
ODRDownloadManager
SoftwareUpdateAppMetadata
CleanupManager
ODRDeveloperToolsProtocol
ODRDeveloperToolsClient
AppInstallsDatabaseSession
AppInstallDownloadOperation
AppInstallDownloadResponse
ODRLaunchServicesProtocol
ODRLaunchServicesClient
HashDigest
PurgeAppsRequestTask
AccountLookupRequestTask
PersonalizationService
ASDPersonalizationServiceProtocol
ODRTag
AppMetadataEntityCrossfire
TFImageUpload
PushConnection
APSConnectionDelegate
ManageSubscriptionsPrompter
LibraryExpressionClassifier
TFGetImageUploadUrlsRequest
AppEventEntity
TFDevice
PurchaseHistoryHideShowRequestEncoder
DAAPRequestDataProvider
XDCCancelInstallRequest
UpdatesService
ASDUpdatesServiceProtocol
SQLiteTransporter
LibraryErrorResultEnumerator
LibraryResultEnumerator
NSFastEnumeration
ExternalManifestRequestTask
PostPurchaseIntentBulletinRequestTask
AIMInstallEvent
AppPackageEntity
ReviewNetworkPolicyTask
UpdateMetricsEvent
ThermalPressureMonitor
VariantDescriptor
_UniversalVariantDescriptor
UpdateMigratorConfiguration
DetermineSizeForURLTask
NetworkMonitor
CoreTelephonyClientDelegate
CoreTelephonyClientDataDelegate
LowDataModePromptDialogRequest
BagManager
PIDHashTable
XDCInstallRequest
TaskQueue
ODRAssetPackEntity
CrossfireService
ASDCrossfireServiceProtocol
ODRAssetDownloadResponse
ODRAssetDownloadRequest
SZExtractorDelegate
IAPInfoItemsRequestContext
AppDownloadDoneTask
FetchWhitelistedDSIDLessTVAppsTask
AccountEvent
IAPHistoryService
ASDIAPHistoryServiceProtocol
ODRApplicationCleanTask
ODRAssetDownloadEntity
ODRAssetDownload
ODRAppReviewProtocol
ODRAppReviewClient
ManagedApplicationTask
AccountEventCoordinator
AccountActiveTime
SystemAppLookupOperation
DemotedApplication
NetworkLimitDialog
Dialog
GameSessionEntity
LibraryService
ASDAppLibraryServiceProtocol
Diagnostics
XDCProgressMessage
AppMetadataEntityOcelot
AppDoneEntity
AssetResult
CellularNetworkEvaluator
AnonymousPingTask
AuthenticationChallengeDialogRequest
PurchaseHistoryManager
SQLiteEntity
ODRDatabaseChangeset
ASFSimulateCrash
TypeCheckedObjectReader
UpdatesTask
SQLiteDatabaseStoreMigrator
BetaAppLaunchInfoMemoryEntity
Coordinator
PurchaseImportTask
LoadStoreQueueTask
LoadRequestEncoder
FetchImageUploadURLsTask
PurchaseHistoryUpdateDAAPResponseDecoder
IAPInfoUpdateRequest
JobError
AppInstallsDatabaseChangeset
SystemAppLookupItem
ContextObject
ODRDiagnosticsProtocol
ODRDiagnosticsClient
UpdatesManager
UpdatesControllerInterface
UPPManifestAsset
TFMemoryUsage
InstallSystemAppsTask
UpdatesResponse
AppInstallRemote
LogTransactions
PurgeableApp
AppInstallsDatabaseTransaction
XPCClient
FinishInAppTransactionTask
ODRZipStreamDataConsumer
ODRPlatformPolicies
ODRSimulatedDownloadsManager
AssetSessionConfiguration
StoreKitServiceConnection
StoreKitStorefrontObserver
InAppDownloadTaskProgressDelegate
XDCCancelInstallResponse
AppUsageManager
AppUsageManagerApp
AppPackage
Identity
DaemonIdentity
UpdateMigratorValidateAppleIDsOperation
AppInstallsDatabaseSchema
ASDStoreQueueProtocol
StoreQueueListener
BlockTask
CoordinatorUtility
SQLiteDatabaseStoreDescriptor
LibraryQueryPlanner
NSPredicateVisitor
UpdateMetricsManager
IAPInfoDatabaseStore
XDCPingMessage
XPCNotificationSource
XPCServiceCatalog
XPCEventRelay
TFPendingImageUpload
PIDMapTable
ODRManager
RepairApplicationTask
ApplicationRepairDelegate
CellularNetworkEvaluatorTask
FamilyManager
PurchaseRequestTask
ODRApplication
NSMutableCopying
ODRMutableApplication
ASDSoftwareUpdateProtocol
SoftwareUpdateListener
SystemAppLookupTask
AppMetadataEntityPersonalization
AssetResponse
UserNotificationCenter
IAPInfoManager
UserNotificationManager
UNUserNotificationCenterDelegate
TestFlightFeedbackManager
AppInstallScheduler
ODRDevtoolsListener
InstallTestFlightAppsTask
IAPInfoDatabaseSession
Bulletin
PredicateValidator
FairPlayRepair
ASDRemoteJobListener
RemoteJobListener
DecryptDataConsumer
ODRFileUtilities
AppReceipt
TFGetImageUploadUrlsResponse
PurchaseManager
PurchaseManagerInterface
PurchaseTask
PurchaseHistoryUpdateDAAPRequestEncoder
LibraryLazyResultsEnumerator
LowDataNetworkEvaluator
PurchaseHistoryDatabaseTransaction
SQLitePreparedStatement
ApplicationProxy
ImportJobsForDemotedAppsTask
AppInstallObserver
IXAppInstallObserverDelegate
IXAppInstallCoordinatorObserver
ODRMaintenanceTask
PowerMonitor
IAPInfoDatabaseTransaction
UpdateMigrator
XPCRequestToken
_XPCInternalRequestToken
XPCNotificationClient
CompleteRestoreCoordinatorsTask
PromptForAccountTask
SQLiteCursor
InGameAnalyticsListener
BetaAppFeedbackMemoryEntity
AppInstallRemoteEntity
RestoreInfo
AppUsageMetricsEvent
XDCLaunchAppRequest
RequestBrokerClient
ASDRequestService
AppConduit
JobDoesNotOwnError
CreatePlaceholdersRequestTask
VPPRepair
AppInstallQueue
CoordinatorPromiseDataConsumerDelegate
AppInstallPipeline
SQLiteSchemaMigration
TimeWindow
TestFlightFeedbackService
ASDTestFlightFeedbackServiceProtocol
SQLiteSchema
IAPInfoDAAPRequestEncoder
TestFlightFeedbackDatabaseStore
NSURL_ODR
PurchaseHistoryUpdateRequest
ODRServiceDelegate
ODRTagsRequest
PurchaseHistoryHideShowRequestContextItem
PurchaseHistoryHideShowRequestContext
BaseListener
SubscriptionEntitlementsRequest
AppUsageInstallHistoryMap
PurchaseHistoryItemsDAAPRequestEncoder
ODRAppReviewListener
AppDefaultsManager
ASFWatchdog
XDCAppMetadata
AppMetadata
ODRApplicationPurgeTask
AppClusterMappingEntity
SwitchAppOwnerTask
SwitchAppOwnerURLRequestEncoder
ODRManifestDownloadTask
NetworkEvaluator
StoreItem
Deprecated
CreateCoordinatorOperation
UpdatableApp
ODRApplicationImportTask
ContentRestoreTask
ContentRestoreURLRequestEncoder
KeybagRequestTask
AppReceiptTaskOptions
AssetTaskInfo
InGameAnalyticsDatabaseStore
DeviceStateMonitor
CoordinatorPromiseDataConsumer
AssetDataConsumer
CoordinatorBuilder
LocalPurchaseTask
Restrictions
PurchaseHistoryItemsRequestContext
UpdatesBatchTask
DeviceSecurityActivity
RepairService
ASDRepairServiceProtocol
XPCServiceBroker
JobManagerClient
PurchaseService
ASDPurchaseServiceProtocol
AppInstallInstallOperation
AppInstallInstallResponse
CacheDeleteCoordinator
FamilyInfoLookupTask
InGameAnalyticsDatabaseTransaction
XDCLaunchAppResponse
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
SecureCoding
SQLiteKeychainHelper
TFUploadFeedbackRequest
AppInstallsDatabaseStore
StoreItemResponse
EvaluatorDownload
FactoryApplicationRepair
TFFeedback
PurchaseHistoryDatabaseSession
SQLiteDatabase
SQLiteConnectionDelegate
UpdateMigratorAutoUpdateOperation
AppInstall
LibraryQueryEvalulator
SQLitePredicate
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteCompoundPredicate
ODRAssetPack
AppClusterMapping
ClusterKey
RemotePurchaseTask
SSPurchaseManagerDelegate
AppSchedulerDatabaseTransaction
AppSchedulerResult
UPPManifest
ODRDiagnosticsListener
PersonalizationManager
AggregatedClusterMapping
InGameAnalyticsManager
AppInstallLogKey
LaunchServicesObserver
SQLiteConnection
InstallAppReviewAppsTask
BackgroundTaskRequest
InstallWatchAppsTask
InAppTransactionTask
AMSPurchaseResponseProtocol
AIMSummaryEvent
TransactionStore
TypeCheckedAbstractReader
TypeCheckedReader
ODRBaseListener
PurchaseHistoryAppEntity
UserDialog
LoadClusterMappingsOperation
XPCServiceEntitlements
AssetSessionCache
ODRManifest
StoreKitStorefront
IAPInfoItemsRequestResponse
ODRPreallocatedFile
LaunchServicesProgress
LSApplicationWorkspaceObserverProtocol
LibraryProgress
TelephonyUtility
StoreItemContext
AppUsageDatabaseSession
ODRApplicationRepairTask
ChunkedDigest
FamilyMember
IncompatibleDialog
UpdateMigratorConfigurationStore
StoreItemSubGenre
XPCNotificationCenter
AIMEvent
RestoreDemotedApplicationsRequestTask
ApplicationContext
_ApplicationContext
OcelotService
ASDOcelotServiceProtocol
UPPManifestDialogRequest
CoordinatorStore
AsyncTask
TestFlightFeedbackDatabaseTransaction
UpdateMigratorPromotionOperation
Reachability
ActivityManager
XDCMessageHandler
TypeCheckedArrayReader
PurchaseBatch
ODRDatabaseStore
ValidateAppleIDsTask
PurchaseHistoryUpdateRequestContext
URLBag
AMSBagProtocol
AdoptionContract
AppUsageBagContract
ArcadeBagContract
AutoUpdateBagContract
BuildToolsBagContract
DRMRecovery
CrossfireBagContract
OnDemandResourcesBagContract
OwnsCheckBagContract
PlatformConextBagContract
PersonalizationBagContract
IAPInfoBagContract
PurchaseHistoryBagContract
SubscriptionEntitlementsBagContract
UpdatesBagContract
StoreKitBagContract
StoreQueueBagContract
PushNotificationBagcontract
SystemAppsBagContract
TestFlightFeedbackBagContract
WatchSyncBagContract
WelcomeToAppStoreNotificationBagContract
AppMetadataEntity
AIMDownloadEvent
AppReceiptTask
PushCacheDeleteUpdateRequestTask
AppStoreFoundation
CompleteCoordinatorsRequestTask
IAPInfoDAAPResponseDecoder
AppInstallPredicates
RestoreApplicationsRequestTask
PurchaseHistoryHideShowRequest
IAPInfoItemsRequest
AIMPurchaseEvent
@16@0:8
B24@0:8@16
B16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDate"16@0:8
@48@0:8@16@24@32q40
v24@0:8@?16
@24@0:8@16
v16@0:8
@"<StoreKitBagContract>"
@"ACAccount"
@"NSString"
v32@0:8@16@24
v32@0:8@"PushService"16@"PushMessage"24
v40@0:8@16@24@?32
v40@0:8@16@24@32
@"StoreKitMessagesDatabaseStore"
@"NSObject<OS_dispatch_queue>"
B32@0:8@16^@24
@32@0:8@16^@24
B40@0:8@16@24^@32
v24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSURL"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
v20@0:8B16
v32@0:8@16@?24
@32@0:8@16@24
@"InGameAnalyticsListener"
@"NSXPCListener"
@"JobManagerListener"
@"LaunchServicesObserver"
@"ODRAppReviewListener"
@"ODRDiagnosticsListener"
@"ODRDevtoolsListener"
@"ODRServiceDelegate"
@"ODRLaunchServicesListener"
@"RequestBroker"
@"RequestListener"
@"SoftwareUpdateListener"
@"StoreQueueListener"
@"NSCountedSet"
@"XPCServiceBroker"
@"DownloadAgentSupervisor"
@"JobAgentSupervisor"
@"JobScheduler"
@"AppMetricsMonitor"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8@16@24@32@40
d24@0:8@16
@"NSError"
@"NSDate"
@24@0:8@"SQLiteConnection"16
@"SQLiteConnection"16@0:8
@"SQLiteConnection"
@40@0:8@16d24@32
@"<Clock>"
@"RequestThrottlePersistence"
@40@0:8@16@24q32
q16@0:8
@"NSNumber"
d16@0:8
v24@0:8d16
@24@0:8^{_NSZone=}16
@32@0:8q16@24
@"NSMutableSet"
@"LSApplicationProxy"
@24@0:8@?16
@24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?@"NSError">16
@40@0:8@16@24@32
@"RequestBrokerClient"
@"<ASDRequestDelegate>"
@"ASDRequest<RequestController>"
@32@0:8Q16B24B28
@40@0:8@16Q24B32B36
@28@0:8Q16B24
@36@0:8C16@20@28
@48@0:8@16C24C28@32@40
@36@0:8@16C24@28
@28@0:8C16@20
B28@0:8@16B24
B32@0:8@16@24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSArray"16@?<v@?>24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
v32@0:8@"ASDJobManagerOptions"16@?<v@?B@"NSError"@"NSArray">24
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSDictionary"24
v24@0:8@"NSDictionary"16
q24@0:8q16
v36@0:8@16@24B32
@"NSMapTable"
v24@0:8q16
v24@0:8Q16
@"AMSBagValue"
@"AMSProcessInfo"
@"NSData"
@"NSDictionary"
@"APSIncomingMessage"
@"ASDPurchase"
@"AMSPurchase"
@24@0:8q16
@?16@0:8
@"XPCRequestToken"
@"SSSQLiteDatabase"
v32@0:8@"PushConnection"16@"PushMessage"24
@"PushConnection"
@"AMSPushHandler"
@"PushDiagnostic"
@"URLBag"
@"URLRequestProperties"
v40@0:8@"NSPredicate"16@"NSSet"24@?<v@?@"NSArray"@"NSError">32
@"<LibraryCatalogObserver>"16@0:8
v24@0:8@"<LibraryCatalogObserver>"16
@"XPCNotificationCenter"
@"<LibraryCatalogObserver>"
@"ODRMutableApplication"
@28@0:8^v16i24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}24@0:8r*16
@"NSArray"
v32@0:8@"ASDApp"16@?<v@?@"NSError">24
@"TFPendingImageUpload"
@"TFImageUpload"
q52@0:8@16B24@28@36^@44
v40@0:8@16@24q32
@"NSMutableArray"
@"UpdatesContext"
v32@0:8@16q24
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
@"NRDevice"
@32@0:8@16@?24
@40@0:8@16Q24@?32
v32@0:8@16Q24
^{__CFUserNotification=}16@0:8
^{__CFUserNotification=}
@"NSUUID"
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
^{__CFBundle=}24@0:8@16
@20@0:8i16
^{__CFDictionary=}24@0:8@16
B44@0:8@16@24B32^@36
v48@0:8@16@24@32@?40
B40@0:8@16@24@32
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSDialogRequest"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSAuthenticateRequest"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
B40@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"NSError"32
v40@0:8@"AMSURLSession"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSURLSession"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
B32@0:8@"AMSURLSession"16@"NSError"24
B40@0:8@"AMSURLSession"16@"ACAccount"24@"NSDictionary"32
B32@0:8@"AMSURLSession"16@"NSDictionary"24
@"AssetPromise"
@"StoreKitClient"
@"<InAppDownloadTaskProgressDelegate>"
v24@0:8@?<v@?@"<ASDCrossfireServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDDiagnosticServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDIAPHistoryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallationServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppLibraryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDOcelotServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPersonalizationServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPrivilegedTaskServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseHistoryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDRepairServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDTestFlightFeedbackServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDUpdatesServiceProtocol>"@"NSError">16
v48@0:8@?16{_ASDServiceEntitlement=@@}24@?40
@"XPCServiceEntitlements"
@"AppInstallLogKey"
@24@0:8Q16
@28@0:8@16B24
q32@0:8@16q24
q40@0:8@16q24@32
q36@0:8@16q24B32
@"NSDictionary"24@0:8@"NSString"16
q32@0:8@"NSString"16q24
q40@0:8@"NSString"16q24@"NSNumber"32
q36@0:8@"NSString"16q24B32
@36@0:8@16q24B32
@64@0:8@16q24@32B40@44B52@56
@32@0:8q16^@24
B48@0:8q16@24@32^@40
v40@0:8q16@24@32
@40@0:8q16@24^@32
@44@0:8@16q24^Q32B40
B32@0:8q16@?24
#24@0:8Q16
Q24@0:8#16
@32@0:8#16@24
Q24@0:8@16
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
@32@0:8@16q24
@"XDCDevice"
B36@0:8B16d20^@28
v28@0:8@16C24
v32@0:8q16@?24
@32@0:8d16^@24
B40@0:8B16B20d24^@32
v40@0:8@16C24C28@32
v36@0:8@16B24@28
B36@0:8@16B24^@28
@"TaskQueue"
@40@0:8@16#24^@32
@24@0:8^@16
B32@0:8@"IXPromisedOutOfBandTransfer"16^@24
@"IXPromisedOutOfBandTransfer"24@0:8^@16
B32@0:8@"NSArray"16^@24
@"NSArray"24@0:8^@16
B32@0:8@"IXPlaceholder"16^@24
@"IXPlaceholder"24@0:8^@16
B32@0:8Q16^@24
Q24@0:8^@16
B32@0:8^B16^@24
B32@0:8@"IXOwnedDataPromise"16^@24
@"IXOwnedDataPromise"24@0:8^@16
B32@0:8@"MIInstallOptions"16^@24
@24@0:8^B16
@"NSError"24@0:8^B16
B24@0:8^@16
@52@0:8@16Q24Q32B40^@44
@52@0:8@16Q24B32^B36^@44
@32@0:8@16B24B28
@40@0:8@16B24B28@32
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16:24q32
v40@0:8@16q24@32
v48@0:8@16q24@32@?40
v44@0:8@16@24B32@?36
@"IDSService"
@"<XDCServiceDelegate>"
@"HashDigest"
v36@0:8@16q24B32
r*24@0:8q16
@"AppInstall"
@"AMSURLResult"32@0:8@"AMSURLResult"16^@24
@"NSURLAuthenticationChallenge"
@"<LibraryResultEnumerator>"32@0:8@"NSPredicate"16^@24
@"<LibraryResultEnumerator>"32@0:8@"NSArray"16^@24
@"LibraryQueryPlanner"
@"ProgressCache"
q24@0:8@16
@20@0:8C16
q20@0:8C16
C16@0:8
@"<DAAPRequestDataProvider>"
B40@0:8@16^q24^@32
q32@0:8@16^@24
@40@0:8@16q24^@32
@48@0:8@16q24@32^@40
B56@0:8@16@24@32^q40^@48
q40@0:8@16@24^@32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
@"AMSURLSession"
@"<FetchReceiptTaskDelegate>"
@"ApplicationProxy"
@"ASFReceipt"
v48@0:8Q16@24B32B36@?40
v40@0:8Q16@24@?32
v44@0:8@16@24Q32B40
v24@0:8B16B20
@32@0:8Q16^B24
v48@0:8@16Q24B32B36@?40
v28@0:8Q16B24
v36@0:8@16Q24B32
@48@0:8q16@24@32^@40
@"BetaAppFeedbackMemoryEntity"
v20@0:8i16
i16@0:8
{?="error"b1}
v32@0:8@"RequestProxy"16@?<v@?@"NSError">24
v40@0:8@16@24^@32
@"IXAppInstallCoordinator"
@"AIMDownloadEvent"
@"NSProgress"
@"NSOperation"
@"AIMInstallEvent"
@"SQLiteDatabase"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
@"NSOperationQueue"
@"NSURLSession"
@40@0:8{_OSVersion=qqq}16
{_OSVersion="major"q"minor"q"patch"q}
@"NSOutputStream"
@"DigestVerifier"
@"ChunkedDigest"
@"AppInstallInfo"
@"AppPackage"
@"AppInstallPreambleResponse"
@40@0:8q16@24@32
@48@0:8q16q24@32@40
@"Supervisor"
@40@0:8@16Q24d32
@"AssetRequestProperties"
i32@0:8@16@24
B32@0:8@"ApplicationProxy"16^@24
@"NSArray"16@0:8
@"<ApplicationRepairDelegate>"16@0:8
v24@0:8@"<ApplicationRepairDelegate>"16
B40@0:8@"ApplicationProxy"16@"ASDRepairOptions"24@"NSString"32
B32@0:8d16d24
@"ASDRepairOptions"
@"<ApplicationRepairDelegate>"
v28@0:8@16B24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@16@?24@32
v48@0:8@16@24@?32@40
@"AppInstallsDatabaseStore"
@"RequestThrottle"
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
v28@0:8@"NSDate"16i24
v28@0:8@"NSUUID"16i24
v28@0:8@"NSURL"16i24
v28@0:8@"NSArray"16i24
v28@0:8@"NSDictionary"16i24
@"SQLiteStatement"
{?="applicationAdamId"b1"uptimeMillis"b1}
@"NSByteCountFormatter"
@"VariantDescriptor"
r*16@0:8
@"NSObject<OS_xpc_object>"16@0:8
@48@0:8@16@24@32^@40
@36@0:8@16@24B32
@"NSOrderedSet"
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?B>32
v36@0:8@16I24@?28
v32@0:8Q16@?24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"NSDate"24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v24@0:8@"NSString"16
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v24@0:8@"NSNumber"16
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSString"@"NSString">16
v36@0:8@"NSData"16I24@?<v@?@"NSData"I@"NSData"I@"NSError">28
v32@0:8Q16@?<v@?@"NSData"I@"NSData"I@"NSError">24
B28@0:8B16@20
B32@0:8@16q24
B44@0:8@16@24@32B40
B36@0:8@16@24B32
@"ODRDatabaseChangeset"
v40@0:8^@16r^@24q32
@"AMSBag"
@"NPSDomainAccessor"
@"NPSManager"
@"TestFlightFeedbackDatabaseStore"
@"NSTimer"
@"ASDRequestResponse"
@"XPCClient"
@"ASDRequestOptions"
i24@0:8^{sqlite3=}16
v24@0:8@?<v@?>16
v32@0:8q16@?<v@?@"NSDictionary">24
v32@0:8q16@?<v@?>24
v32@0:8@"ASDPurchaseHistoryQuery"16@?<v@?@"NSArray"@"NSError">24
v36@0:8B16q20@?<v@?@"NSError">28
v40@0:8q16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
@"ASDPurchaseHistoryApp"
@"NSConditionLock"
@"PurchaseHistoryItemsRequestContext"
B48@0:8@16@24@32@40
@"<BatterySaverWatcherDelegate>"
@32@0:8Q16^@24
@32@0:8^B16^@24
B32@0:8q16@24
@"<SZExtractor>"
v32@0:8q16@24
B24@0:8d16
B56@0:8@16q24^q32^B40^@48
B40@0:8q16@24@32
B52@0:8q16@24@32@40B48
@"ODRApplication"
@"ODRManifest"
v28@0:8r*16B24
v52@0:8@16@24B32B36B40@44
@52@0:8@16B24@28@36q44
d24@0:8q16
d40@0:8d16@24^@32
{?="heightPixels"b1"widthPixels"b1}
@"<IXCoordinatorWithAppAssetPromise>"
@"AppUsageInstallHistoryMap"
@"KeepAlive"
@40@0:8Q16Q24@32
v48@0:8@16@24d32@?40
v40@0:8d16@24@32
v36@0:8B16@20@28
v32@0:8@"NSURL"16@?<v@?@"NSDictionary">24
v32@0:8@"NSURL"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSSet"16@"NSURL"24d32@?<v@?@"NSDictionary"@"NSError">40
v40@0:8@"NSSet"16@"NSURL"24@?<v@?B@"NSDictionary">32
v40@0:8d16@"NSSet"24@"NSURL"32
v40@0:8@"NSSet"16@"NSURL"24@?<v@?@"NSDictionary"@"NSError">32
v36@0:8B16@"NSSet"20@"NSURL"28
v48@0:8@16d24@32@?40
@"<ODRClientProtocol>"
@"NSLock"
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
@36@0:8@16B24@28
q28@0:8B16@20
v44@0:8B16@20^q28^q36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
@"<AppInstallPipeline>"
@"AppInstallDownloadResponse"
@48@0:8q16@24@32@40
@64@0:8q16q24@32@40@48@56
v32@0:8Q16q24
@"AssetRequest"
@"CoordinatorPromiseDataConsumer"
v32@0:8@"NSString"16@?<v@?q@"NSError">24
@28@0:8*16I24
v32@0:8@"ASDAppClusterMapping"16@?<v@?B@"NSError">24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@"<PushConnectionDelegate>"
v48@0:8@16@24@32q40
@40@0:8@16@24^@32
@"<LibraryQueryEvaluator>"
{?="dsid"b1"count"b1}
i24@0:8@16
I16@0:8
v20@0:8I16
@"TFMemoryUsage"
@"TFDisplay"
{?="batteryPercentage"b1"connection"b1}
@"NSData"24@0:8^@16
v36@0:8@16B24@?28
v28@0:8B16@?20
v24@0:8@?<v@?B>16
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?q@"NSError">16
v28@0:8B16@?<v@?>20
v32@0:8@"NSArray"16@?<v@?B@"NSArray"@"NSError">24
@"<UpdatesControllerInterface>"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"EvaluatorDownload"
@32@0:8{?=QQ}16
v36@0:8@16i24@28
v32@0:8@16i24i28
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatus"16
@"NWPathEvaluator"
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
@36@0:8@16Q24B32
@"SSVFairPlaySAPSession"
@24@0:8d16
@32@0:8d16@?24
@"IXPromisedOutOfBandTransfer"
@"ODRTagsRequest"
@"AMSPromise"
@56@0:8@16@24@32@40@48
v24@0:8^@16
@"NSSet"
v36@0:8Q16B24@?28
v40@0:8@"NSDictionary"16@"NSNumber"24Q32
v36@0:8Q16B24@?<v@?@"NSArray"BB@"NSError">28
v32@0:8Q16@?<v@?@"NSArray"B@"NSError">24
v24@0:8@?<v@?@"NSArray"B@"NSError">16
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
B48@0:8^@16@24^q32^@40
B48@0:8^@16^B24^B32^@40
@"ASDManagedApplicationRequestOptions"
@"AccountEvent"
@"NSPredicate"
@32@0:8q16q24
@"<Dialog>"24@0:8@"<Dialog>"16
v40@0:8@16q24@?32
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSPredicate"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?@"NSError">32
v40@0:8@"ASDApp"16q24@?<v@?q>32
v32@0:8@"ASDApp"16@?<v@?q>24
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?q>32
@"<LibraryOpen>"
@"<LibraryProgress>"
@"<LibraryUninstall>"
@"NSURLSessionTaskMetrics"
@"AMSNetworkConstraints"
@"ASDCellularSettings"
v36@0:8B16q20@?28
v40@0:8q16Q24@?32
@48@0:8q16@24Q32^@40
v48@0:8q16Q24@32@?40
@"<PurchaseHistoryBagContract>"
@"PurchaseHistoryDatabaseStore"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v32@0:8@16@"NSString"24
@"NSSet"16@0:8
@"UpdatesResponse"
@32@0:8@16Q24
@"PurchaseBatch"
@"PurchaseInfo"
@"AMSURLRequestEncoder"
@"NSMutableOrderedSet"
@"IAPInfoUpdateRequestContext"
B24@0:8q16
@24@0:8*16
v44@0:8@16B24d28@?36
v48@0:8@16@24B32B36@?40
v40@0:8q16B24i28@?32
v36@0:8q16i24@?28
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSNumber"16@?<v@?>24
v28@0:8B16@?<v@?@"NSString"@"NSError">20
v44@0:8@"NSString"16B24d28@?<v@?@"NSString"@"NSError">36
v48@0:8@"NSURL"16@"NSURL"24B32B36@?<v@?@"NSError">40
v40@0:8@"NSURL"16@"NSURL"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSData"@"NSError">40
v24@0:8@?<v@?@"NSMutableString"@"NSError">16
v40@0:8q16B24i28@?<v@?q@"NSError">32
v36@0:8q16i24@?<v@?@"NSMutableString"@"NSError">28
v32@0:8Q16@?<v@?Q@"NSError">24
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?B@"NSArray"@"NSError">32
{?="availableBytes"b1"totalBytes"b1}
v32@0:8q16q24
{?=qq}32@0:8@16^@24
v40@0:8q16q24q32
@"AppInstallsDatabaseChangeset"
v24@0:8^{__CFBundle=}16
@"SZExtractor"
@"<SZExtractorDelegate>"
v40@0:8Q16Q24@?32
v32@0:8@"StoreKitStorefront"16@"NSDictionary"24
v40@0:8@16d24d32
v40@0:8@"InAppDownloadTask"16d24d32
@"<ASDStoreKitClientProtocol>"
{?="errorCode"b1}
f16@0:8
v20@0:8f16
@"NSString"24@0:8@"NSString"16
v32@0:8@"ASDCheckQueueRequestOptions"16@?<v@?B@"NSError">24
v32@0:8@"ASDClaimApplicationsRequestOptions"16@?<v@?B@"NSArray"@"NSError">24
v32@0:8@"ASDManagedApplicationRequestOptions"16@?<v@?B@"NSDictionary"q@"NSError">24
@40@0:8@16^Q24^@32
B32@0:8^@16@?24
B40@0:8Q16^@24@?32
v24@0:8#16
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@"LibraryExpressionClassifier"
d40@0:8@16@24@32
@"AMSMetrics"
@48@0:8@16{_ASDServiceEntitlement=@@}24@?40
{_ASDServiceEntitlement=@@}16@0:8
{_ASDServiceEntitlement="name"@"NSString""legacyName"@"NSString"}
v32@0:8{_ASDServiceEntitlement=@@}16
v32@0:8@?16@24
q28@0:8q16B24
@"NSRecursiveLock"
v32@0:8@"<ApplicationRepair>"16@"NSError"24
v32@0:8@"<ApplicationRepair>"16@"ApplicationProxy"24
@"<ApplicationRepair>"
@"ASDCellularIdentity"
B36@0:8B16^@20^@28
B28@0:8B16^@20
@28@0:8B16^@20
v32@0:8@16^{_NSZone=}24
v24@0:8@?<v@?@"ASDSoftwareUpdateMetrics"@"NSError">16
v24@0:8@?<v@?B@"NSArray"@"NSError">16
v32@0:8^{__CFUserNotification=}16Q24
@"IAPInfoDatabaseStore"
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@"UNUserNotificationCenter"
v44@0:8B16@20@28@?36
v32@0:8^Q16Q24
[32B]
v32@0:8@"NSDictionary"16@?<v@?B>24
@"NSObject<OS_dispatch_group>"
@"SSDownloadManager"
B40@0:8@16^@24@?32
B40@0:8@16@24q32
B48@0:8@16@24q32^@40
{?="expiresTimeMillis"b1}
v44@0:8@16q24B32@?36
v44@0:8@16B24q28@?36
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResponse"@"NSError">32
v44@0:8@"NSNumber"16q24B32@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v40@0:8@"ASDPurchase"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResult"@"NSError">32
@32@0:8q16@?24
@"<NSFastEnumeration>"
B36@0:8B16q20^@28
@32@0:8r^v16@24
r^v16@0:8
@"NSValue"
v40@0:8@16@24Q32
v24@0:8@"IXAppInstallCoordinator"16
v32@0:8@"IXAppInstallCoordinator"16Q24
v40@0:8@"IXAppInstallCoordinator"16@"NSError"24Q32
v32@0:8@"IXAppInstallCoordinator"16@"NSError"24
@"IXAppInstallObserver"
@"AppInstallScheduler"
B24@0:8Q16
@"UpdateMigratorConfigurationStore"
@"<XPCNotificationClient>"
v40@0:8@16Q24^@32
@"AMSAuthenticateResult"
d20@0:8i16
i20@0:8i16
q20@0:8i16
C20@0:8i16
^{sqlite3_stmt=}
@32@0:8@16#24
v20@0:8C16
v40@0:8@"ASDRequest"16@"<ASDRequestDelegate>"24@?<v@?@"<ASDRequestProxy>"@"NSError">32
@"NSXPCConnection"
B48@0:8@16@24^@32^@40
v40@0:8@"CoordinatorPromiseDataConsumer"16@"NSUUID"24@"NSNumber"32
v32@0:8@"NSOrderedSet"16@"AppInstallsDatabaseTransaction"24
v40@0:8@"NSOrderedSet"16q24@"AppInstallsDatabaseTransaction"32
v48@0:8@16@24@32^v40
@"AssetSession"
@32@0:8d16d24
v36@0:8B16@20@?28
v32@0:8@"NSString"16@?<v@?@"ASDBetaAppDisplayNames">24
v32@0:8@"NSString"16@?<v@?@"NSString">24
v32@0:8@"NSString"16@?<v@?@"ASDBetaAppFeedbackMetadata"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"ASDBetaAppLaunchInfo"@"NSError">24
v32@0:8@"ASDBetaAppVersion"16@?<v@?@"ASDBetaAppLaunchInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B>24
v36@0:8B16@"ASDBetaAppVersion"20@?<v@?@"NSError">28
v32@0:8@"ASDBetaAppLaunchInfo"16@?<v@?@"NSError">24
v32@0:8@"ASDBetaAppFeedback"16@?<v@?@"NSError">24
v40@0:8@"NSDictionary"16@"ASDBetaAppVersion"24@?<v@?@"NSError">32
@28@0:8@16I24
@"PurchaseHistoryUpdateRequestContext"
B24@0:8^B16
v40@0:8@16d24Q32
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
B36@0:8^{__CFString=}16^{__CFString=}24B32
v36@0:8B16^{__CFString=}20^{__CFString=}28
d40@0:8^{__CFString=}16^{__CFString=}24d32
v40@0:8d16^{__CFString=}24^{__CFString=}32
@32@0:8^{__CFString=}16^{__CFString=}24
v32@0:8^v16^{__CFString=}24
B32@0:8d16^@24
{?="downloaderID"b1"externalVersionID"b1"itemID"b1"purchaserID"b1"type"b1"containsMessagesExtension"b1"isBeta"b1"isStoreApp"b1"isSystemApp"b1"launchProhibited"b1"skipIfInstalled"b1"suppressDialogs"b1}
@40@0:8@16q24@32
@"StoreAsset"
@"TimeWindow"
@52@0:8Q16@24B32^B36^@44
@"NSNumber"16@0:8
@"NSURLRequest"
@"NSURLSessionTask"
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?Q@"NSError">16
@"IXDataPromise"
@"<CoordinatorPromiseDataConsumerDelegate>"
@"CoordinatorPromiseProvider"
@"DataPromiseSpecification"
@"<AssetDataConsumer>"
@64@0:8@16@24q32@40@48Q56
v32@0:8^v16Q24
v32@0:8@"ASDRepairOptions"16@?<v@?B@"NSArray"@"NSError">24
@"XPCServiceCatalog"
B36@0:8@16^{__CFData=}24B32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResponse"@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResult"@"NSError">24
@"<AdoptionManagerInterface>"
@"<PurchaseManagerInterface>"
@"AppInstallInstallResponse"
@40@0:8q16q24@32
@28@0:8@16i24
v24@0:8f16B20
@"<CacheDeletePurgeableProvider>"
@"<AMSBagProtocol>"
@"SQLiteQueryDescriptor"
@"SQLitePredicate"
@"TFAppleWatch"
@"TFApplication"
@"TFDevice"
@"TFFeedback"
{?="dsid"b1"posixTimestampMillis"b1}
B24@0:8@"SQLiteConnection"16
v40@0:8@16#24@?32
v32@0:8#16@?24
v32@0:8@16N^i24
@24@0:8#16
@"SQLiteQuery"
v32@0:8@"SSPurchaseManager"16@"NSArray"24
@"SSPurchaseManager"
@32@0:8Q16q24
@32@0:8Q16@?24
v32@0:8@16C24C28
@"GameSession"
B24@0:8@?16
^{sqlite3=}
@"<SQLiteConnectionDelegate>"
@"SQLiteConnectionOptions"
@36@0:8@16B24B28B32
@"NSObject<OS_xpc_object>"
B32@0:8@16^B24
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchaseContext"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchaseContext"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
@40@0:8@16Q24@32
@"AMSPurchaseQueue"
@"<PersonalizationBagContract>"
@28@0:8^{__SecTask=}16i24
B36@0:8@16^{__SecTask=}24i32
@52@0:8{?=[8I]}16i48
B32@0:8{_ASDServiceEntitlement=@@}16
^{__SecTask=}
@20@0:8B16
@"NSHashTable"
@"NSObject<OS_dispatch_semaphore>"
@52@0:8@16@24@32B40@44
@36@0:8@16i24q28
{fstore="fst_flags"I"fst_posmode"i"fst_offset"q"fst_length"q"fst_bytesalloc"q}
v32@0:8@"NSArray"16@"NSArray"24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"ASDAppEvent"16@?<v@?B@"NSError">24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
v32@0:8@"NSNumber"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"ACAccount"16@?<v@?@"NSArray"@"NSError">24
@40@0:8@16@24Q32
@"PIDMapTable"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
^{__SCDynamicStore=}16@0:8
q20@0:8I16
^{__SCNetworkReachability=}
v48@0:8q16@24@32@40
v44@0:8q16@24B32@?36
v36@0:8q16@24B32
@60@0:8q16@24@32q40B48@52
:16@0:8
v24@0:8:16
@56@0:8@16q24@32@40Q48
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"AMSBagValue"16@0:8
@"URLBagMemoizedValue"16@0:8
@"AppReceiptTaskResult"
@"AppReceiptTaskOptions"
@"ASDMutableIAPInfo"
@"PurchaseHistoryHideShowRequestContext"
@"<IAPInfoBagContract>"
@"IAPInfoItemsRequestContext"
MbP?
Available
Installed
User Notified
Purchasing
Purchased
@333333
 A(knN
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391024</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>App Store Daemon</string>
<key>CFBundleExecutable</key>
<string>appstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.appstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>appstored</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11O62d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.4</string>
<key>DTSDKBuild</key>
<string>17E232x</string>
<key>DTSDKName</key>
<string>iphonesimulator13.4.internal</string>
<key>DTXcode</key>
<string>1140</string>
<key>DTXcodeBuild</key>
<string>11O62d</string>
<key>MinimumOSVersion</key>
<string>13.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.appstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>backupd-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.ap.adservicesd.statusconditionclient.allow_write</key>
<true/>
<key>com.apple.appconduitd.device-connection.connect.allow</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.developer.pass-type-identifiers</key>
<array>
<string>*.pass.com.apple.itunes.storecredit</string>
</array>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.app-badge-value-access</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.itunesstored.purchase</key>
<true/>
<key>com.apple.keybagd.UserManager.suspendquota</key>
<true/>
<key>com.apple.keystore.auth-token</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.xpc</key>
<true/>
<key>com.apple.multitasking.newsstandassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.odr.itunesstored</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>PURGE_ENTITLEMENT</string>
<string>CLIENT_ENTITLEMENT</string>
<string>ITEMIZED_PURGEABLE_ENTITLEMENT</string>
</array>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>UniqueDeviceID</string>
<string>UniqueDeviceIDData</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SystemApp</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CheckCapabilitiesMatch</string>
<string>Install</string>
<string>Lookup</string>
<string>UpdateiTunesMetadataForLaunchServices</string>
<string>UpdateSinfForLaunchServices</string>
</array>
<key>com.apple.private.network.delegation-whitelist</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.perform-media-downloads</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.AppStore</string>
</array>
<key>com.apple.remotenotification.preferences</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.enterprise-volume-access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.itunescloud.music-subscription-status-service</string>
<string>com.apple.corefollowup.agent</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.SBUserNotification</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.FileCoordination</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.ondemandresources</string>
<string>systemgroup.com.apple.osanalytics</string>
</array>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.iconState</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlswhenlocked</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.setbadgestring</key>
<true/>
<key>com.apple.symptom_analytics.query</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>appstored</string>
</array>
</dict>
</plist>
aH7,
