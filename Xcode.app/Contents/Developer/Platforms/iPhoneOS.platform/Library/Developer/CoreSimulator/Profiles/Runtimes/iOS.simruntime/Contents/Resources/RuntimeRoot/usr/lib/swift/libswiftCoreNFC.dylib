_pGIegg_
ySay
_pGIegg_
_pGIegn_
_pSgIegg_
_pGIegg_
_pGIegn_
_pGIegg_
SaySiG
_pGIegn_
$s7CoreNFC27NFCTagReaderSessionDelegateP
So8NSObjectC
_pSgXw
So6NFCTag_p
ySiG
_pGIegn_
_pGIegg_
_Say
_pGIegn_
_pGIegn_
_pGIegn_
_pGIegn_
So12NFCFeliCaTag_p
So13NFCISO7816Tag_p
So14NFCISO15693Tag_p
So12NFCMiFareTag_p
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
v16@?0@"NSError"8
v28@?0C8@"NSData"12@"NSError"20
CoreNFC/NFCISO15693Tag.swift
Fatal error
NFCFeliCaTag
@16@0:8
v48@0:8@16q24q32@?40
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
currentSystemCode
T@"NSData",N,R
currentIDm
@"NSData"16@0:8
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
NFCISO7816Tag
B16@0:8
initialSelectedAID
T@"NSString",N,R
identifier
historicalBytes
applicationData
proprietaryApplicationDataCoding
TB,N,R
@"NSString"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
NFCISO15693Tag
q16@0:8
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
icManufacturerCode
Tq,N,R
icSerialNumber
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
NFCMiFareTag
mifareFamily
TQ,N,R
type
session
T@"<NFCReaderSession>",N,R
available
@"<NFCReaderSession>"16@0:8
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
NFCNDEFTag
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
NSObject
#16@0:8
@24@0:8:16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@?0@"NSData"8C16C20@"NSError"24
_TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper
v32@0:8@16@24
v16@0:8
swiftDelegate
CoreNFC/NFCTag.swift
Unsupported type
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
CoreNFC.NFCTagReaderSessionDelegateSwiftWrapper
init()
B24@0:8@16
@32@0:8:16@24
Q16@0:8
superclass
description
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
NFCTag
NSSecureCoding
@24@0:8@16
v32@?0@"NSData"8@"NSData"16@"NSError"24
v24@?0q8@"NSError"16
v40@?0q8q16@"NSArray"24@"NSError"32
v32@?0q8q16@"NSError"24
v56@?0q8q16q24@"NSArray"32@"NSArray"40@"NSError"48
v48@?0q8q16@"NSData"24@"NSData"32@"NSError"40
NFCISO15693SystemInfo
NFCISO15693MultipleBlockSecurityStatus
NFCFeliCaEncryptionId
NFCISO15693ResponseFlag
NFCISO7816ResponseAPDU
CoreNFC
NFCTagReaderSessionDelegate
NFCTagReaderSessionDelegateSwiftWrapper
NFCFeliCaPollingResponse
NFCFeliCaStatusFlag
NFCFeliCaRequsetServiceV2Response
NFCFeliCaRequestSpecificationVersionResponse
NFCTag
uniqueIdentifier
dataStorageFormatIdentifier
applicationFamilyIdentifier
blockSize
totalBlocks
icReference
blockSecurityStatus
rawValue
statusWord1
statusWord2
payload
swiftDelegate
manufactureParameter
requestData
statusFlag1
statusFlag2
encryptionIdentifier
nodeKeyVersionListAES
nodeKeyVersionListDES
basicVersion
optionVersion
feliCa
iso7816
iso15693
miFare
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
readBufferWithRequestFlags:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
integerValue
currentSystemCode
currentIDm
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestResponseWithCompletionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
requestSystemCodeWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
resetModeWithCompletionHandler:
sendFeliCaCommandPacket:completionHandler:
initialSelectedAID
identifier
historicalBytes
applicationData
proprietaryApplicationDataCoding
sendCommandAPDU:completionHandler:
icManufacturerCode
icSerialNumber
sendCustomCommandWithConfiguration:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
stayQuietWithCompletionHandler:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
selectWithRequestFlags:completionHandler:
resetToReadyWithRequestFlags:completionHandler:
writeAFIWithRequestFlag:afi:completionHandler:
lockAFIWithRequestFlag:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
mifareFamily
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
type
session
isAvailable
asNFCISO15693Tag
asNFCISO7816Tag
asNFCFeliCaTag
asNFCMiFareTag
queryNDEFStatusWithCompletionHandler:
readNDEFWithCompletionHandler:
writeNDEF:completionHandler:
writeLockWithCompletionHandler:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
connectedTag
init
initWithPollingOption:swiftDelegate:queue:
connectToTag:completionHandler:
wellKnownTypeTextPayloadWithLocale:
tagReaderSessionDidBecomeActive:
tagReaderSession:didInvalidateWithError:
tagReaderSession:didDetectTags:
.cxx_destruct
dealloc
NFCISO15693SystemInfo
NFCISO15693MultipleBlockSecurityStatus
NFCFeliCaEncryptionId
NFCISO15693ResponseFlag
NFCISO7816ResponseAPDU
CoreNFC
NFCTagReaderSessionDelegate
NFCTagReaderSessionDelegateSwiftWrapper
NFCFeliCaPollingResponse
NFCFeliCaStatusFlag
NFCFeliCaRequsetServiceV2Response
NFCFeliCaRequestSpecificationVersionResponse
NFCTag
_pGIegg_
ySay
_pGIegg_
_pGIegn_
_pSgIegg_
_pGIegg_
_pGIegn_
_pGIegg_
SaySiG
_pGIegn_
$s7CoreNFC27NFCTagReaderSessionDelegateP
So8NSObjectC
_pSgXw
So6NFCTag_p
ySiG
_pGIegn_
_pGIegg_
_Say
_pGIegn_
_pGIegn_
_pGIegn_
_pGIegn_
So12NFCFeliCaTag_p
So13NFCISO7816Tag_p
So14NFCISO15693Tag_p
So12NFCMiFareTag_p
v24@?0@"NSData"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v64@?0@"NSData"8q16q24q32q40q48@"NSError"56
v16@?0@"NSError"8
v28@?0C8@"NSData"12@"NSError"20
CoreNFC/NFCISO15693Tag.swift
Fatal error
NFCFeliCaTag
@16@0:8
v48@0:8@16q24q32@?40
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
currentSystemCode
T@"NSData",N,R
currentIDm
@"NSData"16@0:8
v48@0:8@"NSData"16q24q32@?<v@?@"NSData"@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"NSArray"16@"NSArray"24@?<v@?qq@"NSArray"@"NSError">32
v48@0:8@"NSArray"16@"NSArray"24@"NSArray"32@?<v@?qq@"NSError">40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?qqq@"NSArray"@"NSArray"@"NSError">24
v24@0:8@?<v@?qq@"NSData"@"NSData"@"NSError">16
v24@0:8@?<v@?qq@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
NFCISO7816Tag
B16@0:8
initialSelectedAID
T@"NSString",N,R
identifier
historicalBytes
applicationData
proprietaryApplicationDataCoding
TB,N,R
@"NSString"16@0:8
v32@0:8@"NFCISO7816APDU"16@?<v@?@"NSData"CC@"NSError">24
NFCISO15693Tag
q16@0:8
v32@0:8C16C20@?24
v40@0:8C16C20@24@?32
v44@0:8C16{_NSRange=QQ}20@?36
v52@0:8C16{_NSRange=QQ}20@36@?44
v28@0:8C16@?20
v44@0:8C16q20@28@?36
v36@0:8C16q20@?28
v48@0:8q16q24@32@?40
icManufacturerCode
Tq,N,R
icSerialNumber
v32@0:8@"NFCISO15693CustomCommandConfiguration"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NFCISO15693ReadMultipleBlocksConfiguration"16@?<v@?@"NSData"@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8C16C20@?<v@?@"NSData"@"NSError">24
v40@0:8C16C20@"NSData"24@?<v@?@"NSError">32
v32@0:8C16C20@?<v@?@"NSError">24
v44@0:8C16{_NSRange=QQ}20@?<v@?@"NSArray"@"NSError">36
v52@0:8C16{_NSRange=QQ}20@"NSArray"36@?<v@?@"NSError">44
v28@0:8C16@?<v@?@"NSError">20
v28@0:8C16@?<v@?qqqqq@"NSError">20
v28@0:8C16@?<v@?@"NSData"qqqqq@"NSError">20
v44@0:8C16q20@"NSData"28@?<v@?@"NSData"@"NSError">36
v36@0:8C16q20@?<v@?@"NSData"@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?@"NSError">36
v36@0:8C16q20@?<v@?@"NSError">28
v44@0:8C16q20@"NSData"28@?<v@?C@"NSData"@"NSError">36
v28@0:8C16@?<v@?C@"NSData"@"NSError">20
v48@0:8q16q24@"NSData"32@?<v@?C@"NSData"@"NSError">40
NFCMiFareTag
mifareFamily
TQ,N,R
type
session
T@"<NFCReaderSession>",N,R
available
@"<NFCReaderSession>"16@0:8
@"<NFCISO15693Tag>"16@0:8
@"<NFCISO7816Tag>"16@0:8
@"<NFCFeliCaTag>"16@0:8
@"<NFCMiFareTag>"16@0:8
NFCNDEFTag
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NFCNDEFMessage"@"NSError">16
v32@0:8@"NFCNDEFMessage"16@?<v@?@"NSError">24
NSObject
#16@0:8
@24@0:8:16
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
supportsSecureCoding
NSCopying
@24@0:8^{_NSZone=}16
NSCoding
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@?0@"NSData"8C16C20@"NSError"24
_TtC7CoreNFC39NFCTagReaderSessionDelegateSwiftWrapper
v32@0:8@16@24
v16@0:8
swiftDelegate
CoreNFC/NFCTag.swift
Unsupported type
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
CoreNFC.NFCTagReaderSessionDelegateSwiftWrapper
init()
B24@0:8@16
@32@0:8:16@24
Q16@0:8
superclass
description
v32@0:8@"NFCTagReaderSession"16@"NSError"24
v24@0:8@"NFCTagReaderSession"16
v32@0:8@"NFCTagReaderSession"16@"NSArray"24
NFCTag
NSSecureCoding
@24@0:8@16
v32@?0@"NSData"8@"NSData"16@"NSError"24
v24@?0q8@"NSError"16
v40@?0q8q16@"NSArray"24@"NSError"32
v32@?0q8q16@"NSError"24
v56@?0q8q16q24@"NSArray"32@"NSArray"40@"NSError"48
v48@?0q8q16@"NSData"24@"NSData"32@"NSError"40
uniqueIdentifier
dataStorageFormatIdentifier
applicationFamilyIdentifier
blockSize
totalBlocks
icReference
blockSecurityStatus
rawValue
statusWord1
statusWord2
payload
swiftDelegate
manufactureParameter
requestData
statusFlag1
statusFlag2
encryptionIdentifier
nodeKeyVersionListAES
nodeKeyVersionListDES
basicVersion
optionVersion
feliCa
iso7816
iso15693
miFare
readSingleBlockWithRequestFlags:blockNumber:completionHandler:
readMultipleBlocksWithRequestFlags:blockRange:completionHandler:
getSystemInfoAndUIDWithRequestFlag:completionHandler:
fastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
customCommandWithRequestFlag:customCommandCode:customRequestParameters:completionHandler:
extendedReadSingleBlockWithRequestFlags:blockNumber:completionHandler:
extendedWriteMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
authenticateWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
keyUpdateWithRequestFlags:keyIdentifier:message:completionHandler:
challengeWithRequestFlags:cryptoSuiteIdentifier:message:completionHandler:
readBufferWithRequestFlags:completionHandler:
extendedGetMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedFastReadMultipleBlocksWithRequestFlag:blockRange:completionHandler:
sendRequestWithFlag:commandCode:data:completionHandler:
integerValue
currentSystemCode
currentIDm
pollingWithSystemCode:requestCode:timeSlot:completionHandler:
requestServiceWithNodeCodeList:completionHandler:
requestResponseWithCompletionHandler:
readWithoutEncryptionWithServiceCodeList:blockList:completionHandler:
writeWithoutEncryptionWithServiceCodeList:blockList:blockData:completionHandler:
requestSystemCodeWithCompletionHandler:
requestServiceV2WithNodeCodeList:completionHandler:
requestSpecificationVersionWithCompletionHandler:
resetModeWithCompletionHandler:
sendFeliCaCommandPacket:completionHandler:
initialSelectedAID
identifier
historicalBytes
applicationData
proprietaryApplicationDataCoding
sendCommandAPDU:completionHandler:
icManufacturerCode
icSerialNumber
sendCustomCommandWithConfiguration:completionHandler:
readMultipleBlocksWithConfiguration:completionHandler:
stayQuietWithCompletionHandler:
writeSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
lockBlockWithRequestFlags:blockNumber:completionHandler:
writeMultipleBlocksWithRequestFlags:blockRange:dataBlocks:completionHandler:
selectWithRequestFlags:completionHandler:
resetToReadyWithRequestFlags:completionHandler:
writeAFIWithRequestFlag:afi:completionHandler:
lockAFIWithRequestFlag:completionHandler:
writeDSFIDWithRequestFlag:dsfid:completionHandler:
lockDFSIDWithRequestFlag:completionHandler:
lockDSFIDWithRequestFlag:completionHandler:
getSystemInfoWithRequestFlag:completionHandler:
getMultipleBlockSecurityStatusWithRequestFlag:blockRange:completionHandler:
extendedWriteSingleBlockWithRequestFlags:blockNumber:dataBlock:completionHandler:
extendedLockBlockWithRequestFlags:blockNumber:completionHandler:
extendedReadMultipleBlocksWithRequestFlags:blockRange:completionHandler:
mifareFamily
sendMiFareCommand:completionHandler:
sendMiFareISO7816Command:completionHandler:
type
session
isAvailable
asNFCISO15693Tag
asNFCISO7816Tag
asNFCFeliCaTag
asNFCMiFareTag
queryNDEFStatusWithCompletionHandler:
readNDEFWithCompletionHandler:
writeNDEF:completionHandler:
writeLockWithCompletionHandler:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
connectedTag
init
initWithPollingOption:swiftDelegate:queue:
connectToTag:completionHandler:
wellKnownTypeTextPayloadWithLocale:
tagReaderSessionDidBecomeActive:
tagReaderSession:didInvalidateWithError:
tagReaderSession:didDetectTags:
.cxx_destruct
dealloc
