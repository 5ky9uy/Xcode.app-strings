@(#)PROGRAM:TypistFramework  PROJECT:Typist-
?333333
@UUUUUU
?UUUUUU
??5^
AVUUUUU
?UUUUUU
?VUUUUU
1E@333333
ffffff
33333
333333
[TypistHWKeyboard]: No keyboard language has been provided.
[TypistHWKeyboard]: Unrecognized Keyboard Language Identifier (%@)
PrimaryUsagePage
PrimaryUsage
KeyboardLanguage
StandardType
CountryCode
%x,%x
keyCode: %#x, unmodifiedCharacters: %@, dead key: %@, key exists: %@
Yes - skipping
keyCode: %#x, shiftModifiedCharacters: %@, dead key: %@, key exists: %@
%x,%x/%x,%x
Generating hardware keystroke stream for input: [%@]
bx %@
The character "%@" is not in the character map and cannot be normalized to a known character.
/%@/%@
bx %@/%@
 %f 
bx %x,%x
sender %@ %@
sender %@ 
launchRecapQueue
v8@?0
%x,%x/%x,%x/%x,%x
%x,%x/%x,%x/%x,%x/%x,%x
v32@?0@"NSString"8@"NSNumber"16^B24
Unknown
German
French
Japanese Keyboard
USInternational-PC
British
Spanish - ISO
Swedish - Pro
Italian - Pro
Canadian - CSA
Simplified Chinese Keyboard
Danish
Belgian
Norwegian
2SetHangul
Dutch
Swiss German
Zhuyin Bopomofo
Arabic
Bulgarian
Croatian
Czech
Greek
Hebrew
Icelandic
Hungarian
Polish
Portuguese
Persian
Romanian
Russian
Slovak
Thai
Turkish-QWERTY-PC
Ukrainian
Turkish-Standard
Latin America
%02ld:%02ld:%02ld
/usr/bin/killall
/usr/local/bin/pidof kbd
ERROR: The device under test does not appear to have software input support by Typist
ja_JP-Kana@sw=Kana-RTL;hw=Automatic
ja_JP-Kana@sw=Kana-RTL-Flick;hw=Automatic
emoji
HWModelStr
_Cannot_Obtain_
SysCfgDict
CFG#
%@/%@
IOMedia
IOService
Controller Characteristics
capacity
%ldGB
Tigris
Bursa
Cinar
Dalaman
Emet
Fatsa
TigrisG
Peace
PeaceB
PeaceC
PeaceD
PeaceE
Yukon
YukonB
YukonC
YukonD
YukonE
%@%@
640x1136
N69u
N102
750x1334
N71m
D101
D20a
D201
D201a
1242x2208
N66m
D111
D21a
D211
D211a
1125x2436
D221
D321
D421
828x1792
N841
N104
1242x2688
D331
D331p
D431
1536x2048Mini
J85m
J86m
J87m
1536x2048
J71s
J72s
J71t
J72t
J71b
J72b
J127
J128
1620x2160
J171
J172
1668x2224
J207
J208
1668x2388
J317
J317x
J318
J318x
2048x2732
J120
J121
J98a
J99a
J320
J320x
J321
J321x
BuildVersion
buildVersion
serialNumber
SerialNumber
hardwareModel
regionInfo
RegionInfo
nandCapacity
hardwareRevision
build
dateGenerated
displaySize
8olRm6C1xqr7AJGpLRnpSw
HV7WDiidgMf7lwAu++Lk5w
yhHcB0iH0d1XzPO/CFd3ow
%dx%d
main-screen-pitch
Mini
Portrait
LandscapeRight
LandscapeLeft
UpsideDown
PortraitUpsideDown
/usr/local/bin/coreautomationd
-command
settings.setDNDManualEnabled:
-int
networking.setAirplaneModeEnabled:
-bool
Creating a new instance of Recap's inline player
Tearing down Recap's inline player
com.apple.International.Typist.waitForRecapQueue
com.apple.International.Typist.launchRecapQueue
### Recap Command [%@]:
actions
action
waitfor
%@ %@ 
plane
Waiting for plane: %@
wait
time
drag
d %@ %@ %@ 
Dragging to %@ on %@. 
flick
flick-down
flick-down-left
flick-down-right
flick-up
flick-left
flick-right
f %@ %@ %@ 
Flicking to %@ on %@. 
Waiting for plane: %@. 
taphold
t %@ %@ %@ 
0.75
Tap+hold for %@ on %@. 
mt %@
argumentList
multitouch: 
st %@
stylustouch: 
t %@ %@ 
Tapping %@ on %@. 
v32@?0@"NSDictionary"8Q16^B24
Waiting done. Expected keyboard plane has been detected.
### Expected keyboard plane not detected! Timeout after %@ seconds; Recap operation aborted!
wait %@ 
Waiting %f in lieu of detecting keyplane availability
Unexpected keyboard plane: [%@]. Waiting for: [%@]
CPPATHGEN_TIME_INTERVAL
d16@?0d8
0.##
[%@ %@ %@ %@] %@ 
MmLlHhVvCcSsQqTtAaZ
Command letter misssing, use the preceded one "%@"
strokes
width
height
_%lu
hans
hant
There is no path data found for character: [%@]
perCharacterScale
characterCluster
isCursive
Handwriting/strokes
File path: %@
/AppleInternal/Library/Frameworks/TypistFramework.framework/Handwriting/strokes.db
SELECT pathData.pathData, pathData.width, pathData.height, characters.character, pathData.variant_id, pathData.isCursive FROM pathData INNER JOIN characters ON characters.characterid = pathData.character_id
 WHERE characters.character IN (%@)
shift
vowelKeyMap
dictation
shouldShowDictationKey
shouldShowGlobeKey
Triggering all one time actions to YES
[Typist]: Automation session - halting alerts
LowerCaseKeyboard
floatingKeyboard
CPPATHGEN_VELOCITY
ALPHA
CPPATHGEN_TIMING_ALGORITHM
EQUIDISTANT
Invalid typeInterval was provided: %@. The default value of %@ will be used instead.
Invalid typeInterval was provided: %@. The existing value of (%@) will continue to be used!
ja_JP
zh_Han
yue_Hant
ko_KR
cs_CZ
el_GR
ta@sw=Tamil-QWERTY
pa@sw=Punjabi-Phonetic
my@sw=Burmese
Initializing TypistKeyboard: [%@]
sentenceTrailingCharacters
sentenceDelimitingCharacters
sentencePrefixingCharacters
anyInRect
normal
uniform
typeInterval
fastTyping
flickTyping
usePredictionBar
FORCE_SPACE
SIGMA
P_PIVOT
tapNoiseStyle
tapNoiseSigma
tapNoiseBounds
P_ERRANT
SIGMA_PIVOT
P_CONVEX
SIGMA_CONVEX
^.+@sw=.+;hw=.+$
CRITICAL WARNING: The keyboard ID (%@) is not valid on this device (%@)
TypistUnsupportedKeyboardIDError
######## SPECIFIED KEYBOARD OPTIONS FOR %@
%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@
appendKeyboard
perfConditions
######## ACTUAL KEYBOARD AND ACCESSIBILITY SETTINGS ON SYSTEM
%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d; 
########
preprocessing
[%@]
\A|\n|(?:%@){3}|((?:\b\w++(?:\.\w++)*)?(?:%@))(?:%@)*(?:%@)
(?:%@)(?:%@)*(?:%@)*\Z
Failed to create autoshift regular expression: %@
Switching keyboard to %@
######## SETTING ONE HANDED (REACHABLE) KEYBOARD
### WARNING: setOneHandedPosition - The one handed mode is not supported on this device with current orientation. Nothing to do...
Keyboard is not currently in a floating state.
%@/System/Library/TextInput/TextInput_%@.bundle/%@
NONE
keyPlanes
defaultPlaneName
planeSwitchTable
space-key
return-key
delete
international
writeboard-key
tab-key
more-key
undo
redo
ko_KR@sw=Korean;hw=Automatic
Generating swipe stream for input: [%@]
CRITICAL WARNING: key '%@' cannot be found in any of the keyboard planes, or is not supported.
small-letter
type
popover
basekey
gesture
keystroke
Generating keystroke (tap) stream for input: [%@]
rect
%.2f
Right
Candidate-Selection
Generating %@ stream for input: [%@]
stylus
handwriting
cumulativeWidth
fixedScaleHeight
rotationBias
ANGULAR
Left
Gesture %u is not supported
%@: !!! Unable to find a valid switch path !!!
self.keyPlanes[%@][self.planeSwitchTable[%@][%@]]
more-after
ERROR: This function is for CJ based candidate bar only! Aborting.
word
text
keystrokeStream
separator
ERROR: Predictive setting or QuickType bar is not enabled with the keyboard. Aborting.
Unable to attach hardware keyboard with language %@
A call to typeStringWithHardwareKeyboard was made but no hardware keyboard is attached.
%@ is not an understood action in the context of hardware keyboards. Aborting...
keyboardID
hardwareKeyboard
candidatebar
layoutName
languageID
regionCode
keyboardSW
keyboardType
usePopupKeys
dictationSupported
isTenKey
isKana
isHandwriting
hasCandidatesToCommit
autoshiftRegex
Keyboard-zh.plist
zh_hant-zhuyin
pinyin
wubihua
TenKey-Chinese-Wubihua-Alphabet-Keyplane-Switch-Key
alphabet-plane
TenKey-Number-To-Number-Alternative-Keyplane-Switch-Key
number-alternative-plane
TenKey-Pinyin-Keyplane-Switch-Key
pinyin-plane
TenKey-Chinese-Number-Keyplane-Switch-Key
number-plane
TenKey-Wubihua-Keyplane-Switch-Key
wubihua-plane
Roman-Accent-%@-Pinyin-Plane
Strings
Roman-Accent-%@
Direction
%@ - setupTenKey: WARNING! More than 4 flicks found for %@ - %@
direction
sw=Pinyin10
sw=Wubihua
zh_Hans-HWR@
zh_Hant-HWR@
yue_Hant-HWR@
Handwriting-Input
flickTable
pinyinMap
whiteSpaceRegex
%@ (%@)
.0123456789
acuteKeys
caronKeys
acuteDiacriticKey
caronDiacriticKey
v32@?0@"NSString"8Q16^B24
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
UIRemoteKeyboardWindow
v24@?0@"UIScene"8^B16
ERROR: No active keyboard found to capture
v16@?0@"UIGraphicsImageRendererContext"8
iPhone
letters
CRITICAL WARNING: Neither the '%@' nor the %@ key are found!!
capital-letters
small-letters-small-display
smallLettersInitialVowelMap
capitalLettersInitialVowelMap
WARNING: Unsupported key or value class in -setTIPreferences: key=%@, class(key)=%@, class(obj)=%@
v32@?0@"NSString"8@16^B24
WARNING: Unsupported key or value class in -setKeyboardUISettings: key=%@, class(key)=%@, class(obj)=%@
Warning: -setKeyboards: Some keyboards not set successfully. Current keyboards: %@
Warning: -addKeyboards: Some keyboards not added successfully. Current keyboards: %@
Warning: -removeKeyboards: The keyboards cannot be removed. Need to have one keyboard at least after removal.
Warning: -removeKeyboards: Some keyboards not removed successfully. Current keyboards: %@
typistCandidateBarTypeMecabra
typistCandidateBarTypeFavonious
+[TypistKeyboardDataInputUIClient addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneKeycaps:]
TypistKeyboardDataInputUIClient.m
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneCaps:]"
+[TypistKeyboardDataInputUIClient floatingKeyboardDraggablePoint]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient floatingKeyboardDraggablePoint]"
+[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTable:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTable:]"
+[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTableFor10Key:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTableFor10Key:]"
+[TypistKeyboardDataInputUIClient getRepresentedStringFromKey:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient getRepresentedStringFromKey:]"
ITTKeyboardProxy
Unable to find class %s
ITTKeyboardConfiguration
UIKeyboardEmojiCollectionInputView
UIKeyboardEmojiCollectionView
DidEndSmoothScrolling
v16@?0@"NSNotification"8
{?=ii}
%@%C
keycapAndPopoverVowels
keycapAndPopoverConstants
name
isLetters
isAlphabeticPlane
isShiftKeyplane
usesAutoShift
postfixedKeys
accentKey
kahakoKeys
kahakoDiacriticKey
plist
HWKeyboardEumlator: Layout: %@, keyboardType: %u
TypistHWKeyboard.queue
R119
Exiting deatch
J217
J218
J98A
J99A
B249
J210
J211
B259
keyCode: %#x, characters: %@, unmodifiedCharacters: %@, shiftModifiedCharacters: %@, markedCharacters: %@ 
keyCode
modifier
globeKey
Canada_Bi
French-Canadian
Denmark
Finnish
France
Germany
Italian
Japan
Korea
Latin-American
Netherland
Norway
Portugal
Russia
Slovakian
Spain
Sweden
Switzerland
Switzerland_Ge
Taiwan
TurkeyQ
UK-English
US-English
TurkeyF
kana
iPad
Keyboard-ja_JP-Kana-%@.plist
-Flick
TenKey-Alphabet-Keyplane-Switch
FiftyOn-Alphabet-Keyplane-Switch
alphabet-small-letter-plane
FiftyOn-SymbolNumber-Keyplane-Switch
symbolnumber-plane
FiftyOn-Kana-Keyplane-Switch
kana-plane
Fullwidth-Key-To-
-plane
-fullwidth
Japanese keys to be typed: %@
Japanese keys to be typed (in Kana): %@
sw=QWERTY
Japanese keys to be typed (in Romaji): %@
The current input mode is unknown or unsupported at this time. Please file a radar.
taps
[a-z]
baseCharacters
updownKey
multiTapCompleteKey
doubleAccentCharacterSet
multiTapOrbit
%@%@%@
automaticallyTapsArrowKey
Keyboard-ko.plist
10Key
Korean10Key-SymbolNumber-Keyplane-Switch
Korean10Key-Keyplane-Switch
korean10key-plane
small-letters
Korean keys to be typed: %@
Korean keys to be swiped: %@
Roman-Accent-%@-Korean10Key-Plane
%@ - setupTenKey: WARNING! More than 5 flicks found for %@ - %@
alphabet-capital-letter-plane
hangul
doubleConsonantJong
doubleConsonantSplitJong
doubleVowel
doubleVowelSplit
radicalBreakdownMultiTap
radicalBreakdownFlick
automaticallyInsertsArrowKey
joinedVowelForms
[\u0F90-\u0FBC|\u0F71]
subjoinedExpression
#####  DEFAULT PLANE: %@
planeSwitchTable = %@
------------------------------------ PREPROCESSING Plane:%@
Changing AutoCapitalization Settings: Current=%d ChangeTo=%d
Changing AutoCorrection Settings: Current=%d ChangeTo=%d
Changing CheckSpelling Settings: Current=%d ChangeTo=%d
Changing PeriodShortcut Settings: Current=%d ChangeTo=%d
Changing CapsLock Settings: Current=%d ChangeTo=%d
Changing Predictive Settings: Current=%d ChangeTo=%d
Changing Fuzzy Settings: Current=%d ChangeTo=%d
Changing Smart Dashes Settings: Current=%d ChangeTo=%d
Changing Smart Quotes Settings: Current=%d ChangeTo=%d
Changing KeyPaddle Settings: Current=%d ChangeTo=%d
Changing Typology Settings: Current=%d ChangeTo=%d
Changing Smart Full-width Settings: Current=%d ChangeTo=%d
Changing Use CapsLock as Roman Switch Settings: Current=%d ChangeTo=%d
Changing Wubi Standard Settings: Current=%i, ChangeTo=%i
Changing Shaungpin Settings: Current=%i, ChangeTo=%i
Changing Floating Settings: Current=%@ ChangeTo=%@
Floating
Not floating
Dock and Merge
Localizable
UIKeyboardSplitControlMenu
Changing GestureKey Settings: Current=%d ChangeTo=%d
Changing SmallDisplay Settings: Current=%d ChangeTo=%d
com.apple.Accessibility
Changing Dictation Settings: Current=%d ChangeTo=%d
Changing Dictation Settings: Current=%@ ChangeTo=%@
Replacing keyboards with: %@
Current Keyboards are
New Keyboard is
Appending keyboards: %@
 to current list: %@
Keyboard [%@] already exists. Skipping...
Added [%@] to list of keyboard IDs.
New Keyboards are:
Removing keyboard: %@
[%@] cannot be removed, becuase it's the only keyboard enabled. Aborting...
Removed [%@] from the list of keyboards.
Unable to remove [%@] since the ID does not match any keyboard in the current set
New Keyboards are
Switched keyboard to %@
Unable to switch to keyboard [%@] after %ld
TUICandidateView
TUICandidateArrowButton
UIKeyboardCandidateUnsplitKeyboardToggleButton
TUICandidateCell
UIMorphingLabel
[%@]: An error was encountered when trying to tap candidate at index %li: "%@"
########  PLANE NAME: %@
-split
                      ===> IGNORED
          { isAlphabet:%d, isShift:%d, isShiftChooser:%d, isLetters:%d }
shift-alternate
shift-alternate-small-display
      --> Shift --> %@
more-alternate
more-alternate-small-display
      --> More  --> %@
maybeDefaultPlane
      --> Switch --> %@
copy-
cut-
paste-
Dictation
Emoji
visible
Plane: %@, Keys -> %@
[addKeyboardGestureKeys] - FAILURE - keys or planeName is missing!
Too many secondaryRepresentedStrings on key '%@'. Unable to determine gesture direction.
[%@{%@}]
Plane: %@, Gesture keys -> %@
Plane: %@, Popup keys -> %@
v16@?0@"NSMutableArray"8
Assist
NumberPad-
-0-Plus
NumberPad
B32@?0@"NSString"8Q16^B24
None
left
right
Changing HandBias for One-Handed Keyboard: Current=%@ ChangeTo=%@
HandBias for One-Handed Keyboard is changed to %@  %@
[Timeout...]
HandBias for One-Handed Keyboard is already set to %@
Active input mode list now contains %@
Timed out while waiting for activeInputMode to contain %@
MecabraWubixingStandard86
MecabraWubixingStandard98
MecabraWubixingStandardNewCentury
ShuangpinTypeNone
ShuangpinTypeZhinengABC
ShuangpinTypeMicrosoft
ShuangpinTypeZiguang
ShuangpinTypeXiaohe
ShuangpinTypeZiranma
ShuangpinTypePinyinJiajia
ShuangpinTypeSogou
UIKeyboardCandidateBarCell
UIKeyboardCandidateGridCell
UnsupportedMethodInBaseClassException
Method should not be called from this class. This should be called from a subclass of this object.
v32@?0@"TIKeyboardCandidate"8Q16^B24
TypistKeyNotFoundError
No tap information was found for %@
No key information was found for %@
No popover information was found for %@
No key information was found for %@ with direction %@
TypistKeyboardNotTenKeyError
The current keyboard is not a ten key implementation or is not a ten key implementation known to this version of Typist. Please file a radar.
No gesture information was found for %@
TypistKeyNotFoundInSpecifiedDirectionError
No gesture or flick information was found for %@ in direction "%@" 
UIKeyboardCandidateInlineFloatingView
candidateString
candidateNumberString
isFocused
rowSelected
centerX
centerY
%@: Waiting for visible candidates
The candidate at position %@ is %@
scrollCandidateBar: Invalid scroll direction for candidate view mode: %@
Extended View
Bar View
UIKeyboardCandidateBar
UIKeyboardCandidateGridCollectionView
UICollectionView
com.apple.typist
TypistFramework
yyyy-MM-dd HH:mm:ss
%@ %@
yyyy-MM-dd'T'HH:mm:ss
%@_Console-%@.log
Console-%@.log
Closing log file
v32@?0@"TIZephyrCandidate"8Q16^B24
index %li
candidate bar
0 1 
"% $ a
 " {
j"k"
`$t$
a$u$
b$v$
c$w$
d$x$
2$2mQF
e$y$
f$z$
2&2kQLc
g${$
2'2]N
h$|$
0 1 
"% $ a
 " {
j"k"
0e0q0t0w0z0}0
11E1
41H1
41N1
9111
91A1
91B1
91E1
91L1
91M1
91N1
B1E1
W1O1
W1P1
W1c1
\1S1
\1T1
\1c1
a1c1
1c1c1
1c1c1
O1c1
Q1c1
S1c1
U1c1
W1[1\1`1a1
O1P1Q1R1S1T1U1V1c1
X1Y1Z1]1^1_1b1
112141718191A1B1C1E1F1G1H1I1J1K1L1M1N1
1121314151617191:1;1<1=1>1?1@1A1B1D1E1F1G1H1J1K1L1M1N1
1121K1
softlink:r:path:/System/Library/../../AppleInternal/Library/Frameworks/InputTeletype.framework/InputTeletype
MathUtilities
TypistHWKeyboard
TypistKeyboardUtilities
SystemSettings
RecapUtilities
TextsMatch
TypistPathUtilities
TypistKeyboardCherokee
TypistKeyboardPunjabi
KeyboardSettings
TypistKeyboard
NSSecureCoding
NSCoding
TypistKeyboardChinese
TYRecapCommand
TypistKeyboardCzech
TYUsagePairs
RecapSPIs
Grapheme
KeyboardUI
Cursive
TypistKeyboardUyghur
TypistKeyboardDataInputUIClient
TypistKeyboardDataProtocol
NSObject
TypistKeyboardEmoji
Hangul
HangulJamo
TypistKeyboardAmharic
TypistKeyboardData
TypistKeyplane
TypistKeyboardBurmese
TypistKeyboardFrench
TypistKeyboardGreek
TypistKeyboardHawaiian
TypistHWKeyboard_Deprecated
TypistKeyboardJapanese
TypistKeyboardKorean
TypistKeyboardTamil
PointUtilities
TypistKeyboardTibetan
TypistKeyboardDataInProcess
TypistKeyboardSinhala
ViewRecursion
TypistCandidateBar
TypistThaiSyllable
TypistKoreanHangulSyllable
DiscreteKeyActions
TypistKoreanHangulJamo
TypistCandidateBarMecabra
TYLogger
TypistCandidateBarFavonious
T@"NSNumber",C,N,V_typeInterval
CGPath
TS,N,V_syllable
CGRectValue
_autoshiftRegex
T#,R
_hangul
T@"NSArray",&,N,V_doubleConsonantSplitJong
_layout
T@"NSArray",&,N,V_doubleVowelSplit
activationState
T@"NSCharacterSet",&,N,V_doubleAccentCharacterSet
allKeys
T@"NSCharacterSet",&,N,V_keycapAndPopoverVowels
applyTransform:
T@"NSDictionary",&,N,V_acuteDiacriticKey
arrayWithArray:
T@"NSDictionary",&,N,V_baseCharacters
connectedScenes
T@"NSDictionary",&,N,V_caronDiacriticKey
containsString:
T@"NSDictionary",&,N,V_flickTable
dealloc
T@"NSDictionary",&,N,V_kahakoDiacriticKey
dismissKeyboard
T@"NSDictionary",&,N,V_modifierCharMap
factory
T@"NSDictionary",&,N,V_pinyinMap
getTextClustersFrom:withRegion:
T@"NSDictionary",&,N,V_radicalBreakdownFlick
initWithFormat:
T@"NSDictionary",&,N,V_smallLettersInitialVowelMap
initWithString:
T@"NSDictionary",&,N,V_vowelKeyMap
isAtEnd
T@"NSMutableArray",&,N,V__usagePages
isProxy
T@"NSMutableDictionary",&,N,V_characterToKeycodeMap
isVerticalVowel
T@"NSMutableDictionary",&,N,V_multiTapOrbit
killKbd
T@"NSNumber",&,N,V_keyboardLanguage
modifierCharMap
T@"NSNumber",&,N,V_swipeConvexProbability
numberWithBool:
T@"NSNumber",&,N,V_swipeErrantProbability
release
T@"NSNumber",&,N,V_swipePivotProbability
samples
T@"NSNumber",&,N,V_tapBounds
setCommandType:
T@"NSObject<OS_dispatch_group>",&,N,V_group
setDoubleVowel:
T@"NSRegularExpression",&,N,V_autoshiftRegex
setFlickTyping:
T@"NSRegularExpression",&,N,V_whiteSpaceRegex
setSmallLettersInitialVowelMap:
T@"NSString",&,N,V_commandString
set_usagePages:
T@"NSString",&,N,V_propertyDictionaryString
stringByAppendingPathComponent:
T@"NSString",&,N,V_sentencePrefixingCharacters
swipeForceSpace
T@"NSString",C,N,V_defaultPlaneName
synchronizeFile
T@"NSString",C,N,V_keyboardSW
tryLock
T@"NSString",C,N,V_layoutName
typeStringWithHardwareKeyboard:
T@"NSString",C,N,V_regionCode
whiteSpaceRegex
T@"RCPSyntheticEventStream",&,N,V_eventStream
.cxx_destruct
T@"NSString",C,N,V_keyboardType
CGPointValue
Ti,N,V_tapStyle
GSEventMaskToKeyboardMask:
_baseCharacters
T@"NSArray",&,N,V_doubleConsonantJong
_isKana
T@"NSArray",&,N,V_doubleVowel
_usages
T@"NSArray",&,N,V_hangul
addLineToPoint:
T@"NSCharacterSet",&,N,V_keycapAndPopoverConstants
alternativeText
T@"NSDictionary",&,N,V_accentKey
arrayByExcludingObjectsInArray:
T@"NSDictionary",&,N,V_acuteKeys
bundleForClass:
T@"NSDictionary",&,N,V_capitalLettersInitialVowelMap
containsObject:
T@"NSDictionary",&,N,V_caronKeys
correctForRotation:orientation:
T@"NSDictionary",&,N,V_joinedVowelForms
detach:
T@"NSDictionary",&,N,V_kahakoKeys
displayTypeHint
T@"NSDictionary",&,N,V_multiTapCompleteKey
getNandCapacity
T@"NSDictionary",&,N,V_postfixedKeys
hidKeyboardType
T@"NSDictionary",&,N,V_radicalBreakdownMultiTap
initWithParams:
T@"NSDictionary",&,N,V_updownKey
interactionType
T@"NSDictionary",C,N,V_planeSwitchTable
isEmpty
T@"NSMutableArray",&,N,V__usages
isShiftKeyplane
T@"NSMutableDictionary",&,N,V_keyPlanes
jamosInSyllable
T@"NSNumber",&,N,V_keyboardCountryCode
lowercaseString
T@"NSNumber",&,N,V_swipeAlpha
moveFloatingKeyboardToPosition:
T@"NSNumber",&,N,V_swipeConvexSigma
pointOnSineCurve:withHeight:withStartPoint:withEndPoint:atTime:
T@"NSNumber",&,N,V_swipeErrantSigma
removeObserver:
T@"NSNumber",&,N,V_swipeSigma
T@"NSNumber",&,N,V_tapSigma
setDisplayType:
T@"NSObject<OS_dispatch_queue>",&,N,V_TypistHWKeyboardQueue
setEventStream:
T@"NSRegularExpression",&,N,V_subjoinedExpression
setSentencePrefixingCharacters:
T@"NSString",&,N,V_commandDescription
setVowelKeyMap:
T@"NSString",&,N,V_emulatedModel
splitGraphemeIntoCharacterArray
T@"NSString",&,N,V_sentenceDelimitingCharacters
stringFromDate:
T@"NSString",&,N,V_sentenceTrailingCharacters
switchKeyPlaneOnActiveKeyboard:
T@"NSString",C,N,V_keyboardID
toggleExtendedCandidateViewMode
T@"NSString",C,N,V_languageID
typeKeystrokeStream:completion:
T@"NSString",C,N,V_name
visible
T@"NSString",R,C
windows
T@"TypistCandidateBar",&,N,V_candidatebar
T@"TypistHWKeyboard",&,N,V_hardwareKeyboard
TB,N,GdictationSupported,V_dictationSupported
TB,N,GisHandwriting,V_isHandwriting
TB,N,GisKanaKeyboard,V_isKana
TB,N,GisTenKey,V_isTenKey
TB,N,GshouldShowDictationKey,V_shouldShowDictationKey
TB,N,GshouldShowGlobeKey,V_shouldShowGlobeKey
TB,N,V_automaticallyInsertsArrowKey
TB,N,V_fastTyping
TB,N,V_flickTyping
TB,N,V_hasCandidatesToCommit
TB,N,V_isAlphabeticPlane
TB,N,V_isCapsLockedState
TB,N,V_isLetters
TB,N,V_isShiftKeyplane
TB,N,V_requiresRecapWaitOverride
TB,N,V_swipeForceSpace
TB,N,V_usePopupKeys
TB,N,V_usePredictionBar
TB,N,V_usesAutoShift
TB,R
TC,N,V_usagePage
TI,N,V_hidKeyboardType
TQ,R
T^{__GSKeyboard=},N,V_hardwareKeyboard
T^{__IOHIDUserDevice=},N,V_emulatedKeyboard
Td,N,V_recapWaitOverrideInterval
Td,N,V_typeInterval
Ti,N,V_commandType
TypistHWKeyboardQueue
T{?=ii},R
UTF8String
_TypistHWKeyboardQueue
__usagePages
__usages
_accentKey
_activeInputModesContainsInputMode:
_acuteDiacriticKey
_acuteKeys
_addDoubleVowelKeys:withMapping:
_addPoint:andPoint:
_automaticallyInsertsArrowKey
_bailWithError:completion:
_canMultiTap
_candidatebar
_capitalLettersInitialVowelMap
_caronDiacriticKey
_caronKeys
_changeToKeyplane:
_characterToKeycodeMap
_character_set_pattern_from_string:
_commandDescription
_commandString
_commandType
_connectPath:forCharacters:withRegion:
_constructSwitchPath:toPlane:fromPlane:
_convertCountryCodeToHIDKeyboardType:
_convertGSKeyboardTypeToIOHIDKeyboardType:
_convertHIDKeyboardTypeToGSKeyboardType:
_convertKanaStringstoMultiTapNecessary:
_convertKanaStringstoRomajiIfNecessary:
_convertKeyboardLanguageToHIDCountryCode:
_convertKeyboardLanguageToHIDKeyboardType:
_convertRadicalIfNeeded:
_convertToMultiTapIfNecessary:
_decomposeCharactersWhereNeeded:
_decomposeGraphemeIntoSeparateCharactersIfNeeded:
_defaultPlaneName
_determineAppropriatePropertyDictionaryForHWModelStr:
_determineHandwritingBound
_determinePointBetween:nextPoint:
_determineShiftBasedOnDirection:
_determineSyllableStructure:vowelPositionType:
_determineTapStyleNoise:
_determineTransformationinFrame:cumulativeWidth:scale:characterHeight:rotationBias:
_determineWritingStyle:forCharacters:
_dictationSupported
_dotProduct:and:
_doubleAccentCharacterSet
_doubleConsonantJong
_doubleConsonantSplitJong
_doubleVowel
_doubleVowelSplit
_emulatedKeyboard
_emulatedModel
_eventStream
_fastTyping
_flickGestureDirection
_flickGestureDirection:
_flickTable
_flickTyping
_floatingKeyboardDraggableRect
_generateArgumentList:
_generateHandwritingStream:inFrame:isPencil:dimensions:
_generateKeystrokeStream:appendTypeInterval:
_getAutocorrectionList
_getCurrentKeyplaneName
_getJamoType:withOrderInSyllable:
_getLocalizedInputMode
_getModifierMaskMap
_getScaleInFrame:isPencil:dimensions:
_getScribbleRuleFromRegion:
_getTextClustersFrom:forCharacters:
_getWidthAndHeight:forCharacters:
_group
_guardAgainstOffScreenPoint:
_hangulJamoPosition
_hardwareKeyboard
_hasCandidatesToCommit
_hasConsonantVariants
_hasConsonantVariants:
_hidKeyboardType
_insertCharacterForKeyCode:logOutput:
_insertKey:gsKeyInfo:
_insertKey:logOutput:
_insertStaticKeys
_isAlphabeticPlane
_isCapsLockedState
_isConsonantVariant
_isConsonantVariant:
_isHandwriting
_isLetters
_isPinyin
_isPlaneControlKey:
_isShiftKeyplane
_isTenKey
_isVerticalVowel
_isVerticalVowel:
_isWubihua
_jamo
_jamoShiftsForStructure:
_joinedVowelForms
_kahakoDiacriticKey
_kahakoKeys
_keyPlanes
_keyboardCountryCode
_keyboardID
_keyboardLanguage
_keyboardSW
_keyboardType
_keycapAndPopoverConstants
_keycapAndPopoverVowels
_languageID
_layoutName
_makeTranslationWithOffset:
_mappingRegionToVariantID:
_modifierCharMap
_multiTapCompleteKey
_multiTapOrbit
_name
_openDatabaseFromFile:
_pinyinMap
_planeSwitchTable
_postfixedKeys
_processCharacters:withPathMap:forLocale:
_processHangulCharacter:withPathMap:forLocale:
_processThaiCharacter:withPathMap:forLocale:
_propertyDictionaryString
_queryDatabase:withSql:forRegion:
_queryHandwritingSourceForCharactersInString:withRegion:
_radicalBreakdownFlick
_radicalBreakdownMultiTap
_recapWaitOverrideInterval
_referenceBounds
_reflectPoint:origin:
_regionCode
_requiresRecapWaitOverride
_sanitizedStringForAutoShiftCheck:
_scalarMultiplyPoint:by:
_sentenceDelimitingCharacters
_sentencePrefixingCharacters
_sentenceTrailingCharacters
_separateUniqueCharacters:
_setKeyboardUserPreferences:
_setupAutoShiftRegex
_setupCharacterToKeycodeMap
_shiftPath:forCharacters:withRule:
_shiftThaiStrokes:withRatio:ofHeight:
_shouldShowDictationKey
_shouldShowGlobeKey
_showSmallDisplayKeyplane
_smallLettersInitialVowelMap
_subjoinedExpression
_subsequentKeyPressPairForCharacter:
_subtractPoint:byPoint:
_swipeAlpha
_swipeConvexProbability
_swipeConvexSigma
_swipeErrantProbability
_swipeErrantSigma
_swipeForceSpace
_swipePivotProbability
_swipeSigma
_syllable
_syllableStructure
_tapBounds
_tapSigma
_tapStyle
_typeInterval
_updownKey
_usagePage
_usagePages
_usePopupKeys
_usePredictionBar
_usesAutoShift
_validatePoints:To:
_variantsByAppendingDualStringKey:toVariants:
_vowelKeyMap
_whiteSpaceRegex
accentKey
actionForItem:
activate:
activeInputModes
activeInstance
activeInterfaceOrientation
activeKeyboard
acuteDiacriticKey
acuteKeys
addAccentKeyAction:
addCharactersInString:
addCurveToPoint:controlPoint1:controlPoint2:
addKeyboardGestureKeys:keys:inPlane:addTo:
addKeyboardPopupKeys:inPlane:addTo:keyplaneKeycaps:
addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneKeycaps:
addKeyboards:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addQuadCurveToPoint:controlPoint:
allKeysForObject:
allObjects
allOneTimeActionsAlreadyTriggered
allSubViews
allWindowsIncludingInternalWindows:onlyVisibleWindows:
appendFormat:
appendKeyboardForKeyboardSetting:
appendPath:
appendString:
appendingSecondaryStringToVariantsTop:secondaryString:withDirection:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
asPropertyList
attachHardwareKeyboard:
attachHardwareKeyboardWithCountryCode:
attemptToFindKeystrokeAsGesture:
autocorrectPrompt
automaticHardwareLayout
automaticallyInsertsArrowKey
autorelease
autoshiftRegex
baseCharacters
baseKeyForString:
boolForPreferenceKey:
boolValue
bounds
bundleIdentifier
cache
calculateCoordinatesForFlickGesture:direction:offset:
candidate
candidateList
candidateNumberLabel
candidateUIInformation:
candidatebar
candidatesAsStringArray:
canonicalConversion:
capitalLettersInitialVowelMap
captureCurrentKeyboardImage
caronDiacriticKey
caronKeys
caseInsensitiveCompare:
categoryForType:
centerOfCandidate:
centerOfKey:withOffset:
changeKeyNameToGenericCharacter:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
characterSetWithRange:
characterToKeycodeMap
class
cleanUpSwitchTableBasedOnDefaultPlane:defaultPlaneName:
closeFile
closeLogFile
commandDescription
commandString
commandType
commitCandidate:
commitCandidateAtIndex:
compare:
componentName
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
conformsToProtocol:
connectToRemoteKeyboard:
contentOffset
contentSize
convertCurveDeleteTouchPoints:endPoint:curveHeight:curveDensity:tilt:
convertHIDCountryCodeToLanguage:
convertPoint:toLayer:
convertPoint:toView:
convertRecapCommands:
convertRecapCommandsFromListOfActions:
convertRect:toView:
convertRepresentedStringsIfNecessary:
convertSVGPaths:withTransformation:
convertSVGStringPathToUIBezierPath:
convertSingleSVGPaths:withTransformation:
convertUIBezierPathToTouchPoints:
copy
count
countByEnumeratingWithState:objects:count:
countryCode
createAutoshiftRegularExpressionWithDelimitingCharacters:sentenceTrailingCharacters:sentencePrefixingCharacters:
createFileAtPath:contents:attributes:
currentDevice
currentEnvironment
currentKeyplaneView
currentLanguageIdentifier
currentLocale
currentPoint
currentRunLoop
cyrillicCharacters
cyrillicCharactersWithUniqueWritingRule
data
dataUsingEncoding:
dataWithJSONObject:options:error:
date
dateWithTimeIntervalSinceNow:
debugDescription
decimalDigitCharacterSet
decodeBoolForKey:
decodeObjectOfClass:forKey:
decomposeAmharicChar:
decomposeAmharicStrings:
decomposeKoreanStrings:
decomposeSyllableForScribble:
decomposedStringWithCanonicalMapping
defaultCenter
defaultFormat
defaultManager
defaultPlaneName
delegate
description
detach
detachHardwareKeyboard
determineDefaultPlane10Key:basePlaneName:
determineDefaultPlane:basePlaneName:
deviceInfo
dictationIsEnabled
dictationIsSupportedForLanguageCode:error:
dictationSupported
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didTriggerOneTimeAction:
disconnectFromRemoteKeyboard
dismissOneTimeTIActions:
displayString
displayType
doubleAccentCharacterSet
doubleConsonantJong
doubleConsonantSplitJong
doubleValue
doubleVowel
doubleVowelSplit
downActionFlagsForKey:plane:keyplaneKeycaps:
dragFromKey:toKey:completion:
dragPopoverKey:completion:
drawAtPoint:
drawViewHierarchyInRect:afterScreenUpdates:
dynamicLayout
emulatedKeyboard
emulatedModel
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
errorWithDomain:code:userInfo:
escapedPatternForString:
eventStream
eventStreamWithCLIArguments:
exceptionWithName:reason:userInfo:
fastTyping
fileExistsAtPath:
fileHandleForWritingAtPath:
findEmojiScrollView
findKey:inPlane:
findKeyBoundsInKeyboard:
findKeyInOtherPlanes:currentPlane:
findKeyOnAnyPlane:
findKeyOnCurrentPlane:
firstCachedKeyWithName:
firstMatchInString:options:range:
firstObject
flickKey:withDirection:completion:
flickTable
flickTyping
floatValue
floatingKeyboardDraggablePoint
formUnionWithCharacterSet:
formattedKeyplaneName
frame
fullRepresentedString
generateGaussianPoint:withSeed:andSigma:
generateGaussianPointWithMean:andSigma:
generateHandwritingStream:inFrame:isPencil:
generateHandwritingStream:inFrame:isPencil:rotationBias:
generateHandwritingStream:inFrame:isPencil:rotationBias:isCursive:
generateKeyboardList
generateKeyplaneSwitchTable:
generateKeyplaneSwitchTableFor10Key:
generateKeystrokeStream:
generateKeystrokeStream:position:
generatePathArgumentStringWithParameters:fromPoints:
generatePathFromInflectionPoints:segmentTiming:keys:string:layout:
generatePencilGestureStream:gestureStyle:inFrame:
generatePopupKeySubtrees:key:plane:layout:keyplaneKeycaps:
generateSwipeStream:
generateUniformPointWithMean:andBounds:
generateUniformPointWithMean:andRange:
gestureKey
getAggregatedTIPreferences
getAllCandidates
getAlternatePlanesForDefaultPlane
getAlternativeKeyPlaneName:
getAutoCapitalizationPrefSetting
getAutoCorrectionPrefSetting
getCandidateBarHeight
getCandidateBarRect
getCandidateBarWidth
getCandidateCenter:
getCandidateCenterAtIndex:
getCandidateCenterWithIndex:
getCandidateRectWithString:
getCapsLockPrefSetting
getCheckSpellingPrefSetting
getDescriptionOfKeyplane:
getDictationEnabled
getExpectedPlaneNameForKey:currentPlane:
getExtendedCandidateViewToggleButtonCenter
getFuzzyPinyinPrefSetting
getGestureKeyPrefSetting
getHIDKeyboardType
getHWKeyboardCapsLockRomanSwitchPrefSetting
getHwRevision
getIndexOfCandidate:
getIndexOfCandidate:withAlternativeText:
getKeyPaddlePrefSetting
getKeyboardLayout:
getKeyboardLayoutWithConfiguration:
getKeyboardPlaneKeys:keys:inPlane:
getKeyboardUISettings
getKeyboardsForKeyboardSetting
getKeyplaneDescription:
getMobileGestalt:
getOneHandedKeyboardHandBias
getPathData:fromPathMap:
getPathDataForCharacters:withRegion:isCursive:
getPeriodShortcutPrefSetting
getPostfixKey:
getPredictivePrefSetting
getPropertyDictionaryString
getRepresentedStringFromKey:
getRootViewControllerViaScene
getSameScreenSizeModel
getScreenSize
getSentenceBoundaryStrings
getShiftPlaneForAlternatePlane
getShiftPlaneForDefaultPlane
getShiftedKeyPlaneName:
getShuangpinEnumeration:
getShuangpinPrefSetting
getSmallDisplayPrefSetting
getSmartDashesPrefSetting
getSmartFullWidthSetting
getSmartQuotesPrefSetting
getStrokesForJamo:forVariant:ofType:fromPath:forLocale:
getTIPreferences
getTrainBuildVersion:
getTypologyEnabled
getUIDeviceOrientationAsString
getUIDeviceOrientationFromString:
getUIInterfaceOrientation
getValue:
getVisibleCandidateList:
getVisibleCandidates
getVisibleCandidates:
getVisibleKeyplaneName
getWubiEnumeration:
getWubiPrefSetting
globeKeyDisplaysAsEmojiKey
graphemeArray
graphemeAtIndex:
graphemeCount
group
hangul
hangulConsonantVariants
hangulHorizontalVowels
hangulJamoPosition
hangulJamoTransformationDataValue
hangulJamoTransformationDataValueWithJamoType:direction:
hangulLeadingConsonants
hangulMixedVowels
hangulTrailingConsonants
hangulVerticalVowels
hardwareInputMode
hardwareKeyboard
hasCandidate:
hasCandidate:inRange:
hasCandidate:withAlternativeText:
hasCandidate:withAlternativeText:inRange:
hasCandidates
hasCandidates:
hasCandidates:inRange:
hasCandidatesToCommit
hasConsonantVariants
hasFaceID
hasHomeButton
hasMarkedText
hasPrefix:
hasSuffix:
hasVisibleCandidate:
hash
hideExtendedCandidateView
highlightedVariantsList
identifier
imageWithActions:
indexOfObject:
indexesOfObjectsPassingTest:
inhibitGlobalAlerts:
init
init:
init:options:
init:options:locale:
initWithArray:copyItems:
initWithCapacity:
initWithClassKey:isTenKey:isKana:flickTyping:showDictationKey:showGlobeKey:usePopupKeys:flickTable:flickGestureDirection:whiteSpaceRegex:multiTapOrbit:
initWithCoder:
initWithCommandType:commandString:commandDescription:
initWithContentsOfFile:
initWithContentsOfFile:options:error:
initWithCountryCode:
initWithCountryCode:andPropertyDictionaryAtPath:
initWithData:encoding:
initWithFormat:arguments:
initWithHardwareKeyboard:
initWithJamo:position:
initWithLanguage:
initWithObjects:
initWithPattern:options:error:
initWithSize:format:
initWithSyllable:
initWithTypistKeyboard:
insertObject:atIndex:
intValue
integerValue
intersectsSet:
isAlphabeticPlane
isAutoShifted
isAutoshiftedToCapitalPlane:
isAvailableFlickOnCurrentPlane:withDirection:
isAvailableGestureOnCurrentPlane:withDirection:
isAvailableKeyOnCurrentPlane:
isAvailablePopoverOnCurrentPlane:
isCandidateCellVisible:
isCapsLockedState
isConsonant:
isConsonantVariant
isDictationSupported:
isEnabled
isEqual:
isEqualToSet:
isEqualToString:
isExtendedCandidateViewMode
isExtendedList
isFloating
isFocused
isHandwriting
isHidden
isJoinedConsonantAndVowelCharacter:
isKana
isKanaKeyboard
isKeyWindow
isKeyboardUIOutOfProcess
isKindOfClass:
isKoreanConsonantVariant:
isKoreanSyllable:
isLetters
isMainThread
isMemberOfClass:
isPinyinCharacter:
isPopoverCombo:withIndex:
isShiftKeyPlaneChooser
isShifted
isSubsetOfSet:
isSwitchedToCapitalPlane:previous:currentPlane:context:
isSwitchedToDefaultPlane:
isTapKey:
isTenKey
isThaiCharacter:
jamo
jamos
joinedVowelForms
kahakoDiacriticKey
kahakoKeys
keyHasAccentedVariants:plane:keyplaneKeycaps:
keyPlanes
keyWillCommitCandidate:
keyboard
keyboardCountryCode
keyboardCountryCodes
keyboardData
keyboardID
keyboardLanguage
keyboardLanguageValueMap
keyboardLayoutValueMap
keyboardSW
keyboardType
keycapAndPopoverConstants
keycapAndPopoverVowels
keyplaneNamed:
keys
keysDataForInputMode:andFileName:
languageID
lastObject
launchRecap:
launchRecap:completion:
layer
layoutName
leadingConsonants
length
localeWithLocaleIdentifier:
localizedStringForKey:value:table:
logToFile:
logToSTDERR:
lowercaseStringWithLocale:
mainBundle
mainQueue
mainScreen
markedText
matchText:withPattern:
minusSet:
model
modifiesKeyplane
moveToPoint:
multiTapCompleteKey
multiTapOrbit
mutableCopy
name
null
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
oneTimeActionCompleted:
openLogFile:
openLogFile:inDirectory:
orientation
origin
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pinyinMap
planeSwitchTable
playEventStream:options:completion:
point
pointOnCurve:atTime:
postfixedKeys
precomposedStringWithCanonicalMapping
precomposedStringWithCompatibilityMapping
preferencesActions
preparePopupVariantsForKey:onKeyplane:
preprocessing
pressAndHoldHardwareKeys:forDuration:withValidation:validateAfter:
pressAndHoldKey:completion:
pressAndHoldKeys:forDuration:withValidation:after:
pressKeycode:
prewarmForEventStream:completion:
propertyDictionaryString
propertyListWithData:options:format:error:
punctuationCharacterSet
radicalBreakdownFlick
radicalBreakdownMultiTap
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:options:
recapWaitOverrideInterval
regionCode
regularExpressionWithPattern:options:error:
releaseKeyPressWithCompletion:
removeAllObjects
removeAutocorrectPromptAndCandidateList
removeItemAtPath:error:
removeKeyboardForKeyboardSetting:
removeKeyboards:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
replaceObjectAtIndex:withObject:
replaceWaitForKeyboardPlane:withWait:
representedString
requiresRecapWaitOverride
resetSelectedCategory
respondsToSelector:
retain
retainCount
rivenTranslationPreference
rootViewController
runCommandLineProcess:
runOnMainThread:
runUntilDate:
safeAreaInsets
scale
scanCharactersFromSet:intoString:
scanDouble:
scanHexInt:
scanInteger:
scanPoint
scanUpToCharactersFromSet:intoString:
scannerWithString:
scriptCode
scrollCandidateBar:
scrollCandidateBarByOneScreen
scrollEmojiKeyboard
scrollToCandidateOnBar:
scrollToCandidateOnBarByPosition:
searchForViewInKeyboardWindow:
searchForWindow:
secondaryDisplayStrings
secondaryRepresentedStrings
selectCandidate:
selectCandidateAtIndex:
selectedVariantIndex
self
sentenceDelimitingCharacters
sentencePrefixingCharacters
sentenceTrailingCharacters
setAccentKey:
setAcuteDiacriticKey:
setAcuteKeys:
setAirplaneMode:
setAutomaticallyInsertsArrowKey:
setAutoshiftRegex:
setBaseCharacters:
setCandidatebar:
setCapitalLettersInitialVowelMap:
setCaronDiacriticKey:
setCaronKeys:
setCharacterToKeycodeMap:
setCommandDescription:
setCommandString:
setDateFormat:
setDefaultPlaneName:
setDictationIsEnabled:
setDictationSupported:
setDisplayString:
setDoNotDisturb:
setDoubleAccentCharacterSet:
setDoubleConsonantJong:
setDoubleConsonantSplitJong:
setDoubleVowelSplit:
setEmojiCategoryDefaultsIndex:forCategory:
setEmulatedKeyboard:
setEmulatedModel:
setFastTyping:
setFlickTable:
setFloatingKeyboard:
setGroup:
setHangul:
setHardwareKeyboard:
setHasCandidatesToCommit:
setHidKeyboardType:
setHighlightedVariantsList:
setIgnoresCompletionDelay:
setInputMode:userInitiated:
setIsAlphabeticPlane:
setIsCapsLockedState:
setIsHandwriting:
setIsKana:
setIsLetters:
setIsShiftKeyplane:
setIsTenKey:
setJoinedVowelForms:
setKahakoDiacriticKey:
setKahakoKeys:
setKeyPlanes:
setKeyboardCountryCode:
setKeyboardDictation:
setKeyboardForKeyboardSetting:
setKeyboardID:
setKeyboardLanguage:
setKeyboardSW:
setKeyboardType:
setKeyboardUISettings:
setKeyboards:
setKeycapAndPopoverConstants:
setKeycapAndPopoverVowels:
setLanguageID:
setLayoutName:
setModifierCharMap
setModifierCharMap:
setMultiTapCompleteKey:
setMultiTapOrbit:
setName:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOneHandedKeyboardHandBias:
setOneHandedPosition:
setOverrideDisplayString:
setPinyinMap:
setPlaneSwitchTable:
setPositiveFormat:
setPostfixedKeys:
setPrefSettings:
setPropertyDictionaryString:
setRadicalBreakdownFlick:
setRadicalBreakdownMultiTap:
setRecapFastMode:
setRecapWaitOverrideInterval:
setRegionCode:
setRepresentedString:
setRequiresRecapWaitOverride:
setSelectedCategoryType:
setSelectedVariantIndex:
setSentenceDelimitingCharacters:
setSentenceTrailingCharacters:
setShouldShowDictationKey:
setShouldShowGlobeKey:
setState:
setString:
setSubjoinedExpression:
setSubtrees:
setSuppressDictationOptIn:
setSwipeAlpha:
setSwipeConvexProbability:
setSwipeConvexSigma:
setSwipeErrantProbability:
setSwipeErrantSigma:
setSwipeForceSpace:
setSwipePivotProbability:
setSwipeSigma:
setSyllable:
setTIPreferences:
setTapBounds:
setTapSigma:
setTapStyle:
setTypeInterval:
setTypistHWKeyboardQueue:
setUpdownKey:
setUsagePage:
setUsePopupKeys:
setUsePredictionBar:
setUsesAutoShift:
setValue:forKey:
setValue:forPreferenceKey:
setVariantPopupBias:
setWhiteSpaceRegex:
setWithArray:
set_usages:
setup50OnFlick:forKey:keyName:planeName:
setupKeyboardInfo:options:
setupSentenceBoundryStrings
setupTenKey:forKey:keyName:planeName:
sharedApplication
sharedFBSOrientationObserver
sharedInputModeController
sharedInstance
sharedPreferences
sharedPreferencesController
sharedRecapInlinePlayer
sharedSettings
shiftJamosInSyllable:withPath:forLocale:
shiftStrokesForJamo:withDirection:
shouldShowDictationKey
shouldShowGlobeKey
shouldShowInternationalKey
showCandidateAtIndex:
showExtendedCandidateView
showPopupVariantsForKey:key:plane:keyplaneKeycaps:
showsDedicatedEmojiKeyAlongsideGlobeButton
size
sleepForTimeInterval:
smallCharacers
smallLettersInitialVowelMap
splitKeystrokeStreamByWord:originalText:
state
string
stringByAppendingFormat:
stringByAppendingString:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForProperty:
stringFromNumber:
stringValue
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subjoinedExpression
substringFromIndex:
substringToIndex:
substringWithRange:
subtrees
subviews
superclass
superview
supportsFloating
supportsPencil
supportsSecureCoding
swipeAlpha
swipeConvexProbability
swipeConvexSigma
swipeErrantProbability
swipeErrantSigma
swipeGestureKey:withDirection:completion:
swipeGestureOrFlickKey:withDirection:completion:
swipePivotProbability
swipeSigma
swipeString:
switchToKeyboard:
switchToPlane:
switchToPlane:fromPlane:
syllable
syllableStructure
synchronize
synchronizePreferences
tallCharacters
tapBounds
tapGlobeKey
tapKey:tapCount:completion:
tapKey:tapCount:overriddenTypeInterval:completion:
tapMoreKey
tapSigma
tapStyle
tearDown
tearDownRecapInlinePlayer
text
textLabel
timeInStringFromTimeInterval:
timeIntervalSinceDate:
toUIDeviceOrientation:
toUIInterfaceOrientation:
toggleCapsLock
touchScanRate
trailingConsonants
traitsForKey:onKeyplane:
triggerAllTIOneTimeActions
tryAlternateVariationsOfKey:
tryConnection
typeInterval
typeKeyStrokeStream:
typeKeystrokeStream:
typeKeystrokeStreamWithPredictive:originalText:completion:
typeString:
typeString:completion:
typeString:withCommit:
typeStringOnHardwareKeyboard:withLanguage:
typeWordKeystrokeWithPredictive:atIndex:completion:
typeWordKeystrokes:expectedWord:atIndex:completion:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedShortValue
updateCachedKeyplaneKeycaps:
updateCommand:commandString:commandDescription:
updateInputModes:
updateKeyboardHandBias:
updateVariantTypeForActions:
updownKey
upperCombiningCharacters
uppercaseLetterCharacterSet
uppercaseStringWithLocale:
usagePage
usagePages
usagePairsForText:
usages
usePopupKeys
usePredictionBar
userInterfaceIdiom
usesAutoShift
usesInputSystemUI
usesMecabraCandidateBar
validateProbability:
valueForKey:
valueForPreferenceKey:
valueWithBytes:objCType:
valueWithCGPoint:
valueWithCGRect:
valueWithHangulJamoTransformationData:
variantType
view
viewExistsOnScreen:
visibleCandidates
vowelKeyMap
vowels
waitFor:
waitForKeyboardPlane:
whiteSpaceCharSet
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
willDirectlyCommitNumbersAndPunctuationSet
willSwitchToDefaultPlaneCharacterSet
window
writeData:
writePencilGesture:inStyle:gestureRange:inFrame:
writePencilGesture:inStyle:inFrame:
writeString:inFrame:
writeString:inFrame:isCursive:
writeString:inFrame:rotationBias:
writeString:inFrame:rotationBias:isCursive:
zone
{CGPoint=dd}48@0:8{CGPoint=dd}16q32d40
{CGPoint=dd}40@0:8{CGPoint=dd}16d32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGVector=dd}32
@24@0:8@16
C20@0:8I16
I24@0:8@16
@16@0:8
@24@0:8q16
v16@0:8
I16@0:8
v28@0:8S16@20
@28@0:8@16B24
v20@0:8S16
v24@0:8@16
v48@0:8@16d24@?32d40
d16@0:8
v24@0:8d16
^{__GSKeyboard=}16@0:8
v24@0:8^{__GSKeyboard=}16
v20@0:8I16
C16@0:8
v20@0:8C16
^{__GSKeyboard=}
@"NSMutableDictionary"
@"NSNumber"
@"NSString"
@"NSDictionary"
v20@0:8B16
v24@0:8@?16
@24@0:8d16
v24@0:8^*16
i16@0:8
B16@0:8
q24@0:8q16
q16@0:8
q24@0:8@16
v32@0:8@16@?24
B24@0:8@16
@32@0:8@16d24
@32@0:8@16@24
d48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGPoint=dd}32@0:8@16d24
{CGPoint=dd}72@0:8d16d24{CGPoint=dd}32{CGPoint=dd}48d64
@72@0:8{CGPoint=dd}16{CGPoint=dd}32d48q56d64
@72@0:8@16{CGAffineTransform=dddddd}24
B48@0:8{CGPoint=dd}16{CGPoint=dd}32
@36@0:8S16@20Q28
@40@0:8@16@24Q32
@40@0:8@16d24@32
{CGAffineTransform=dddddd}24@0:8d16
i24@0:8@16
@36@0:8@16@24i32
@36@0:8@16@24B32
@40@0:8@16@24@32
^{sqlite3=}24@0:8@16
Q40@0:8^{sqlite3=}16@24@32
B20@0:8B16
{CGPoint=dd}16@0:8
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8{CGPoint=dd}16
v48@0:8@16@24@32@40
{CGPoint=dd}44@0:8{CGPoint=dd}16@32f40
@48@0:8@16@24@32@40
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56d64d72
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@60@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56d60
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56d60B68
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60
d60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48@52
@56@0:8i16i20{CGRect={CGPoint=dd}{CGSize=dd}}24
B48@0:8@16@24@32@40
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v60@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
v68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56B64
v72@0:8i16i20{_NSRange=QQ}24{CGRect={CGPoint=dd}{CGSize=dd}}40
v56@0:8i16i20{CGRect={CGPoint=dd}{CGSize=dd}}24
B40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24@?32
v40@0:8@16q24@?32
v48@0:8@16@24q32@?40
v20@0:8i16
@"TypistCandidateBar"
@"TypistHWKeyboard"
@"NSRegularExpression"
B20@0:8S16
@36@0:8i16@20@28
v36@0:8i16@20@28
@"RCPSyntheticEventStream"
@"NSMutableArray"
Q16@0:8
@24@0:8Q16
v32@0:8^{CGVector=dd}16q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
B24@0:8d16
{CGPoint=dd}24@0:8@16
v24@0:8q16
@56@0:8@16@24@32@40@48
{CGPoint=dd}24@0:8q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"TypistKeyboard"16
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"NSString"16
@"TypistKeyplane"24@0:8@"NSString"16
@"NSArray"16@0:8
@"NSArray"24@0:8@"NSString"16
{CGPoint=dd}24@0:8@"NSString"16
@"NSMutableDictionary"56@0:8@"TypistKeyboard"16@"NSArray"24@"NSString"32@"NSMutableDictionary"40@"NSMutableSet"48
@"NSMutableDictionary"24@0:8@"NSArray"16
@"NSString"24@0:8@"NSString"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"NSString"16
@20@0:8i16
@48@0:8@16B24i28@32Q40
@28@0:8@16i24
{CGAffineTransform=dddddd}20@0:8i16
{?=ii}16@0:8
@24@0:8{?=ii}16
@24@0:8i16i20
B32@0:8@16q24
@20@0:8S16
@"NSCharacterSet"
C20@0:8C16
I20@0:8I16
v28@0:8S16^{?=SSSSS[24S]S[24S]S[24S]SS}20
@32@0:8@16^i24
^{__IOHIDUserDevice=}16@0:8
v24@0:8^{__IOHIDUserDevice=}16
^{__IOHIDUserDevice=}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSArray"
B56@0:8@16@24@32@40@48
Q40@0:8@16@24@32
B40@0:8@16@24@32
S16@0:8
i28@0:8Q16i24
B32@0:8@16@24
v40@0:8@16Q24@?32
v48@0:8@16Q24@32@?40
@28@0:8S16Q20
i28@0:8S16Q20
B48@0:8@16@24{_NSRange=QQ}32
q32@0:8@16@24
B20@0:8i16
B24@0:8q16
33333
@(#)PROGRAM:TypistFramework  PROJECT:Typist-
*>Rf
?333333
@UUUUUU
?UUUUUU
??5^
AVUUUUU
?UUUUUU
?VUUUUU
(B\s
&+4?JS[fp|
1E@333333
>@ffffff
33333
333333
WY\{
[TypistHWKeyboard]: No keyboard language has been provided.
[TypistHWKeyboard]: Unrecognized Keyboard Language Identifier (%@)
PrimaryUsagePage
PrimaryUsage
KeyboardLanguage
StandardType
CountryCode
%x,%x
keyCode: %#x, unmodifiedCharacters: %@, dead key: %@, key exists: %@
Yes - skipping
keyCode: %#x, shiftModifiedCharacters: %@, dead key: %@, key exists: %@
%x,%x/%x,%x
Generating hardware keystroke stream for input: [%@]
bx %@
The character "%@" is not in the character map and cannot be normalized to a known character.
/%@/%@
bx %@/%@
 %f 
bx %x,%x
sender %@ %@
sender %@ 
launchRecapQueue
v8@?0
%x,%x/%x,%x/%x,%x
%x,%x/%x,%x/%x,%x/%x,%x
v32@?0@"NSString"8@"NSNumber"16^B24
Unknown
German
French
Japanese Keyboard
USInternational-PC
British
Spanish - ISO
Swedish - Pro
Italian - Pro
Canadian - CSA
Simplified Chinese Keyboard
Danish
Belgian
Norwegian
2SetHangul
Dutch
Swiss German
Zhuyin Bopomofo
Arabic
Bulgarian
Croatian
Czech
Greek
Hebrew
Icelandic
Hungarian
Polish
Portuguese
Persian
Romanian
Russian
Slovak
Thai
Turkish-QWERTY-PC
Ukrainian
Turkish-Standard
Latin America
%02ld:%02ld:%02ld
/usr/bin/killall
/usr/local/bin/pidof kbd
ERROR: The device under test does not appear to have software input support by Typist
ja_JP-Kana@sw=Kana-RTL;hw=Automatic
ja_JP-Kana@sw=Kana-RTL-Flick;hw=Automatic
emoji
HWModelStr
_Cannot_Obtain_
SysCfgDict
CFG#
%@/%@
IOMedia
IOService
Controller Characteristics
capacity
%ldGB
Tigris
Bursa
Cinar
Dalaman
Emet
Fatsa
TigrisG
Peace
PeaceB
PeaceC
PeaceD
PeaceE
Yukon
YukonB
YukonC
YukonD
YukonE
%@%@
640x1136
N69u
N102
750x1334
N71m
D101
D20a
D201
D201a
1242x2208
N66m
D111
D21a
D211
D211a
1125x2436
D221
D321
D421
828x1792
N841
N104
1242x2688
D331
D331p
D431
1536x2048Mini
J85m
J86m
J87m
1536x2048
J71s
J72s
J71t
J72t
J71b
J72b
J127
J128
1620x2160
J171
J172
1668x2224
J207
J208
1668x2388
J317
J317x
J318
J318x
2048x2732
J120
J121
J98a
J99a
J320
J320x
J321
J321x
BuildVersion
buildVersion
serialNumber
SerialNumber
hardwareModel
regionInfo
RegionInfo
nandCapacity
hardwareRevision
build
dateGenerated
displaySize
8olRm6C1xqr7AJGpLRnpSw
HV7WDiidgMf7lwAu++Lk5w
yhHcB0iH0d1XzPO/CFd3ow
%dx%d
main-screen-pitch
Mini
Portrait
LandscapeRight
LandscapeLeft
UpsideDown
PortraitUpsideDown
/usr/local/bin/coreautomationd
-command
settings.setDNDManualEnabled:
-int
networking.setAirplaneModeEnabled:
-bool
Creating a new instance of Recap's inline player
Tearing down Recap's inline player
com.apple.International.Typist.waitForRecapQueue
com.apple.International.Typist.launchRecapQueue
### Recap Command [%@]:
actions
action
waitfor
%@ %@ 
plane
Waiting for plane: %@
wait
time
drag
d %@ %@ %@ 
Dragging to %@ on %@. 
flick
flick-down
flick-down-left
flick-down-right
flick-up
flick-left
flick-right
f %@ %@ %@ 
Flicking to %@ on %@. 
Waiting for plane: %@. 
taphold
t %@ %@ %@ 
0.75
Tap+hold for %@ on %@. 
mt %@
argumentList
multitouch: 
st %@
stylustouch: 
t %@ %@ 
Tapping %@ on %@. 
v32@?0@"NSDictionary"8Q16^B24
Waiting done. Expected keyboard plane has been detected.
### Expected keyboard plane not detected! Timeout after %@ seconds; Recap operation aborted!
wait %@ 
Waiting %f in lieu of detecting keyplane availability
Unexpected keyboard plane: [%@]. Waiting for: [%@]
CPPATHGEN_TIME_INTERVAL
d16@?0d8
0.##
[%@ %@ %@ %@] %@ 
MmLlHhVvCcSsQqTtAaZ
Command letter misssing, use the preceded one "%@"
strokes
width
height
_%lu
hans
hant
There is no path data found for character: [%@]
perCharacterScale
characterCluster
isCursive
Handwriting/strokes
File path: %@
/AppleInternal/Library/Frameworks/TypistFramework.framework/Handwriting/strokes.db
SELECT pathData.pathData, pathData.width, pathData.height, characters.character, pathData.variant_id, pathData.isCursive FROM pathData INNER JOIN characters ON characters.characterid = pathData.character_id
 WHERE characters.character IN (%@)
shift
vowelKeyMap
dictation
shouldShowDictationKey
shouldShowGlobeKey
Triggering all one time actions to YES
[Typist]: Automation session - halting alerts
LowerCaseKeyboard
floatingKeyboard
CPPATHGEN_VELOCITY
ALPHA
CPPATHGEN_TIMING_ALGORITHM
EQUIDISTANT
Invalid typeInterval was provided: %@. The default value of %@ will be used instead.
Invalid typeInterval was provided: %@. The existing value of (%@) will continue to be used!
ja_JP
zh_Han
yue_Hant
ko_KR
cs_CZ
el_GR
ta@sw=Tamil-QWERTY
pa@sw=Punjabi-Phonetic
my@sw=Burmese
Initializing TypistKeyboard: [%@]
sentenceTrailingCharacters
sentenceDelimitingCharacters
sentencePrefixingCharacters
anyInRect
normal
uniform
typeInterval
fastTyping
flickTyping
usePredictionBar
FORCE_SPACE
SIGMA
P_PIVOT
tapNoiseStyle
tapNoiseSigma
tapNoiseBounds
P_ERRANT
SIGMA_PIVOT
P_CONVEX
SIGMA_CONVEX
^.+@sw=.+;hw=.+$
CRITICAL WARNING: The keyboard ID (%@) is not valid on this device (%@)
TypistUnsupportedKeyboardIDError
######## SPECIFIED KEYBOARD OPTIONS FOR %@
%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@;%@=%@
appendKeyboard
perfConditions
######## ACTUAL KEYBOARD AND ACCESSIBILITY SETTINGS ON SYSTEM
%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d;%@=%d; 
########
preprocessing
[%@]
\A|\n|(?:%@){3}|((?:\b\w++(?:\.\w++)*)?(?:%@))(?:%@)*(?:%@)
(?:%@)(?:%@)*(?:%@)*\Z
Failed to create autoshift regular expression: %@
Switching keyboard to %@
######## SETTING ONE HANDED (REACHABLE) KEYBOARD
### WARNING: setOneHandedPosition - The one handed mode is not supported on this device with current orientation. Nothing to do...
Keyboard is not currently in a floating state.
%@/System/Library/TextInput/TextInput_%@.bundle/%@
NONE
keyPlanes
defaultPlaneName
planeSwitchTable
space-key
return-key
delete
international
writeboard-key
tab-key
more-key
undo
redo
ko_KR@sw=Korean;hw=Automatic
Generating swipe stream for input: [%@]
CRITICAL WARNING: key '%@' cannot be found in any of the keyboard planes, or is not supported.
small-letter
type
popover
basekey
gesture
keystroke
Generating keystroke (tap) stream for input: [%@]
rect
%.2f
Right
Candidate-Selection
Generating %@ stream for input: [%@]
stylus
handwriting
cumulativeWidth
fixedScaleHeight
rotationBias
ANGULAR
Left
Gesture %u is not supported
%@: !!! Unable to find a valid switch path !!!
self.keyPlanes[%@][self.planeSwitchTable[%@][%@]]
more-after
ERROR: This function is for CJ based candidate bar only! Aborting.
word
text
keystrokeStream
separator
ERROR: Predictive setting or QuickType bar is not enabled with the keyboard. Aborting.
Unable to attach hardware keyboard with language %@
A call to typeStringWithHardwareKeyboard was made but no hardware keyboard is attached.
%@ is not an understood action in the context of hardware keyboards. Aborting...
keyboardID
hardwareKeyboard
candidatebar
layoutName
languageID
regionCode
keyboardSW
keyboardType
usePopupKeys
dictationSupported
isTenKey
isKana
isHandwriting
hasCandidatesToCommit
autoshiftRegex
Keyboard-zh.plist
zh_hant-zhuyin
pinyin
wubihua
TenKey-Chinese-Wubihua-Alphabet-Keyplane-Switch-Key
alphabet-plane
TenKey-Number-To-Number-Alternative-Keyplane-Switch-Key
number-alternative-plane
TenKey-Pinyin-Keyplane-Switch-Key
pinyin-plane
TenKey-Chinese-Number-Keyplane-Switch-Key
number-plane
TenKey-Wubihua-Keyplane-Switch-Key
wubihua-plane
Roman-Accent-%@-Pinyin-Plane
Strings
Roman-Accent-%@
Direction
%@ - setupTenKey: WARNING! More than 4 flicks found for %@ - %@
direction
sw=Pinyin10
sw=Wubihua
zh_Hans-HWR@
zh_Hant-HWR@
yue_Hant-HWR@
Handwriting-Input
flickTable
pinyinMap
whiteSpaceRegex
%@ (%@)
.0123456789
acuteKeys
caronKeys
acuteDiacriticKey
caronDiacriticKey
v32@?0@"NSString"8Q16^B24
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
UIRemoteKeyboardWindow
v24@?0@"UIScene"8^B16
ERROR: No active keyboard found to capture
v16@?0@"UIGraphicsImageRendererContext"8
iPhone
letters
CRITICAL WARNING: Neither the '%@' nor the %@ key are found!!
capital-letters
small-letters-small-display
smallLettersInitialVowelMap
capitalLettersInitialVowelMap
WARNING: Unsupported key or value class in -setTIPreferences: key=%@, class(key)=%@, class(obj)=%@
v32@?0@"NSString"8@16^B24
WARNING: Unsupported key or value class in -setKeyboardUISettings: key=%@, class(key)=%@, class(obj)=%@
Warning: -setKeyboards: Some keyboards not set successfully. Current keyboards: %@
Warning: -addKeyboards: Some keyboards not added successfully. Current keyboards: %@
Warning: -removeKeyboards: The keyboards cannot be removed. Need to have one keyboard at least after removal.
Warning: -removeKeyboards: Some keyboards not removed successfully. Current keyboards: %@
typistCandidateBarTypeMecabra
typistCandidateBarTypeFavonious
+[TypistKeyboardDataInputUIClient addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneKeycaps:]
TypistKeyboardDataInputUIClient.m
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneCaps:]"
+[TypistKeyboardDataInputUIClient floatingKeyboardDraggablePoint]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient floatingKeyboardDraggablePoint]"
+[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTable:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTable:]"
+[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTableFor10Key:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient generateKeyplaneSwitchTableFor10Key:]"
+[TypistKeyboardDataInputUIClient getRepresentedStringFromKey:]
false && "Do no expect calls to -[TypistKeyboardDataInputUIClient getRepresentedStringFromKey:]"
ITTKeyboardProxy
Unable to find class %s
ITTKeyboardConfiguration
UIKeyboardEmojiCollectionInputView
UIKeyboardEmojiCollectionView
DidEndSmoothScrolling
v16@?0@"NSNotification"8
{?=ii}
%@%C
keycapAndPopoverVowels
keycapAndPopoverConstants
name
isLetters
isAlphabeticPlane
isShiftKeyplane
usesAutoShift
postfixedKeys
accentKey
kahakoKeys
kahakoDiacriticKey
plist
HWKeyboardEumlator: Layout: %@, keyboardType: %u
TypistHWKeyboard.queue
R119
Exiting deatch
J217
J218
J98A
J99A
B249
J210
J211
B259
keyCode: %#x, characters: %@, unmodifiedCharacters: %@, shiftModifiedCharacters: %@, markedCharacters: %@ 
keyCode
modifier
globeKey
Canada_Bi
French-Canadian
Denmark
Finnish
France
Germany
Italian
Japan
Korea
Latin-American
Netherland
Norway
Portugal
Russia
Slovakian
Spain
Sweden
Switzerland
Switzerland_Ge
Taiwan
TurkeyQ
UK-English
US-English
TurkeyF
kana
iPad
Keyboard-ja_JP-Kana-%@.plist
-Flick
TenKey-Alphabet-Keyplane-Switch
FiftyOn-Alphabet-Keyplane-Switch
alphabet-small-letter-plane
FiftyOn-SymbolNumber-Keyplane-Switch
symbolnumber-plane
FiftyOn-Kana-Keyplane-Switch
kana-plane
Fullwidth-Key-To-
-plane
-fullwidth
Japanese keys to be typed: %@
Japanese keys to be typed (in Kana): %@
sw=QWERTY
Japanese keys to be typed (in Romaji): %@
The current input mode is unknown or unsupported at this time. Please file a radar.
taps
[a-z]
baseCharacters
updownKey
multiTapCompleteKey
doubleAccentCharacterSet
multiTapOrbit
%@%@%@
automaticallyTapsArrowKey
Keyboard-ko.plist
10Key
Korean10Key-SymbolNumber-Keyplane-Switch
Korean10Key-Keyplane-Switch
korean10key-plane
small-letters
Korean keys to be typed: %@
Korean keys to be swiped: %@
Roman-Accent-%@-Korean10Key-Plane
%@ - setupTenKey: WARNING! More than 5 flicks found for %@ - %@
alphabet-capital-letter-plane
hangul
doubleConsonantJong
doubleConsonantSplitJong
doubleVowel
doubleVowelSplit
radicalBreakdownMultiTap
radicalBreakdownFlick
automaticallyInsertsArrowKey
joinedVowelForms
[\u0F90-\u0FBC|\u0F71]
subjoinedExpression
#####  DEFAULT PLANE: %@
planeSwitchTable = %@
------------------------------------ PREPROCESSING Plane:%@
Changing AutoCapitalization Settings: Current=%d ChangeTo=%d
Changing AutoCorrection Settings: Current=%d ChangeTo=%d
Changing CheckSpelling Settings: Current=%d ChangeTo=%d
Changing PeriodShortcut Settings: Current=%d ChangeTo=%d
Changing CapsLock Settings: Current=%d ChangeTo=%d
Changing Predictive Settings: Current=%d ChangeTo=%d
Changing Fuzzy Settings: Current=%d ChangeTo=%d
Changing Smart Dashes Settings: Current=%d ChangeTo=%d
Changing Smart Quotes Settings: Current=%d ChangeTo=%d
Changing KeyPaddle Settings: Current=%d ChangeTo=%d
Changing Typology Settings: Current=%d ChangeTo=%d
Changing Smart Full-width Settings: Current=%d ChangeTo=%d
Changing Use CapsLock as Roman Switch Settings: Current=%d ChangeTo=%d
Changing Wubi Standard Settings: Current=%i, ChangeTo=%i
Changing Shaungpin Settings: Current=%i, ChangeTo=%i
Changing Floating Settings: Current=%@ ChangeTo=%@
Floating
Not floating
Dock and Merge
Localizable
UIKeyboardSplitControlMenu
Changing GestureKey Settings: Current=%d ChangeTo=%d
Changing SmallDisplay Settings: Current=%d ChangeTo=%d
com.apple.Accessibility
Changing Dictation Settings: Current=%d ChangeTo=%d
Changing Dictation Settings: Current=%@ ChangeTo=%@
Replacing keyboards with: %@
Current Keyboards are
New Keyboard is
Appending keyboards: %@
 to current list: %@
Keyboard [%@] already exists. Skipping...
Added [%@] to list of keyboard IDs.
New Keyboards are:
Removing keyboard: %@
[%@] cannot be removed, becuase it's the only keyboard enabled. Aborting...
Removed [%@] from the list of keyboards.
Unable to remove [%@] since the ID does not match any keyboard in the current set
New Keyboards are
Switched keyboard to %@
Unable to switch to keyboard [%@] after %ld
TUICandidateView
TUICandidateArrowButton
UIKeyboardCandidateUnsplitKeyboardToggleButton
TUICandidateCell
UIMorphingLabel
[%@]: An error was encountered when trying to tap candidate at index %li: "%@"
########  PLANE NAME: %@
-split
                      ===> IGNORED
          { isAlphabet:%d, isShift:%d, isShiftChooser:%d, isLetters:%d }
shift-alternate
shift-alternate-small-display
      --> Shift --> %@
more-alternate
more-alternate-small-display
      --> More  --> %@
maybeDefaultPlane
      --> Switch --> %@
copy-
cut-
paste-
Dictation
Emoji
visible
Plane: %@, Keys -> %@
[addKeyboardGestureKeys] - FAILURE - keys or planeName is missing!
Too many secondaryRepresentedStrings on key '%@'. Unable to determine gesture direction.
[%@{%@}]
Plane: %@, Gesture keys -> %@
Plane: %@, Popup keys -> %@
v16@?0@"NSMutableArray"8
Assist
NumberPad-
-0-Plus
NumberPad
B32@?0@"NSString"8Q16^B24
None
left
right
Changing HandBias for One-Handed Keyboard: Current=%@ ChangeTo=%@
HandBias for One-Handed Keyboard is changed to %@  %@
[Timeout...]
HandBias for One-Handed Keyboard is already set to %@
Active input mode list now contains %@
Timed out while waiting for activeInputMode to contain %@
MecabraWubixingStandard86
MecabraWubixingStandard98
MecabraWubixingStandardNewCentury
ShuangpinTypeNone
ShuangpinTypeZhinengABC
ShuangpinTypeMicrosoft
ShuangpinTypeZiguang
ShuangpinTypeXiaohe
ShuangpinTypeZiranma
ShuangpinTypePinyinJiajia
ShuangpinTypeSogou
UIKeyboardCandidateBarCell
UIKeyboardCandidateGridCell
UnsupportedMethodInBaseClassException
Method should not be called from this class. This should be called from a subclass of this object.
v32@?0@"TIKeyboardCandidate"8Q16^B24
TypistKeyNotFoundError
No tap information was found for %@
No key information was found for %@
No popover information was found for %@
No key information was found for %@ with direction %@
TypistKeyboardNotTenKeyError
The current keyboard is not a ten key implementation or is not a ten key implementation known to this version of Typist. Please file a radar.
No gesture information was found for %@
TypistKeyNotFoundInSpecifiedDirectionError
No gesture or flick information was found for %@ in direction "%@" 
UIKeyboardCandidateInlineFloatingView
candidateString
candidateNumberString
isFocused
rowSelected
centerX
centerY
%@: Waiting for visible candidates
The candidate at position %@ is %@
scrollCandidateBar: Invalid scroll direction for candidate view mode: %@
Extended View
Bar View
UIKeyboardCandidateBar
UIKeyboardCandidateGridCollectionView
UICollectionView
com.apple.typist
TypistFramework
yyyy-MM-dd HH:mm:ss
%@ %@
yyyy-MM-dd'T'HH:mm:ss
%@_Console-%@.log
Console-%@.log
Closing log file
v32@?0@"TIZephyrCandidate"8Q16^B24
index %li
candidate bar
0 1 
"% $ a
 " {
j"k"
`$t$
a$u$
b$v$
c$w$
d$x$
2$2mQF
e$y$
f$z$
2&2kQLc
g${$
2'2]N
h$|$
0 1 
"% $ a
 " {
j"k"
0e0q0t0w0z0}0
11E1
41H1
41N1
9111
91A1
91B1
91E1
91L1
91M1
91N1
B1E1
W1O1
W1P1
W1c1
\1S1
\1T1
\1c1
a1c1
1c1c1
1c1c1
O1c1
Q1c1
S1c1
U1c1
W1[1\1`1a1
O1P1Q1R1S1T1U1V1c1
X1Y1Z1]1^1_1b1
112141718191A1B1C1E1F1G1H1I1J1K1L1M1N1
1121314151617191:1;1<1=1>1?1@1A1B1D1E1F1G1H1J1K1L1M1N1
1121K1
softlink:r:path:/System/Library/../../AppleInternal/Library/Frameworks/InputTeletype.framework/InputTeletype
MathUtilities
TypistHWKeyboard
TypistKeyboardUtilities
SystemSettings
RecapUtilities
TextsMatch
TypistPathUtilities
TypistKeyboardCherokee
TypistKeyboardPunjabi
KeyboardSettings
TypistKeyboard
NSSecureCoding
NSCoding
TypistKeyboardChinese
TYRecapCommand
TypistKeyboardCzech
TYUsagePairs
RecapSPIs
Grapheme
KeyboardUI
Cursive
TypistKeyboardUyghur
TypistKeyboardDataInputUIClient
TypistKeyboardDataProtocol
NSObject
TypistKeyboardEmoji
Hangul
HangulJamo
TypistKeyboardAmharic
TypistKeyboardData
TypistKeyplane
TypistKeyboardBurmese
TypistKeyboardFrench
TypistKeyboardGreek
TypistKeyboardHawaiian
TypistHWKeyboard_Deprecated
TypistKeyboardJapanese
TypistKeyboardKorean
TypistKeyboardTamil
PointUtilities
TypistKeyboardTibetan
TypistKeyboardDataInProcess
TypistKeyboardSinhala
ViewRecursion
TypistCandidateBar
TypistThaiSyllable
TypistKoreanHangulSyllable
DiscreteKeyActions
TypistKoreanHangulJamo
TypistCandidateBarMecabra
TYLogger
TypistCandidateBarFavonious
T@"NSNumber",C,N,V_typeInterval
CGPath
TS,N,V_syllable
CGRectValue
_autoshiftRegex
T#,R
_hangul
T@"NSArray",&,N,V_doubleConsonantSplitJong
_layout
T@"NSArray",&,N,V_doubleVowelSplit
activationState
T@"NSCharacterSet",&,N,V_doubleAccentCharacterSet
allKeys
T@"NSCharacterSet",&,N,V_keycapAndPopoverVowels
applyTransform:
T@"NSDictionary",&,N,V_acuteDiacriticKey
arrayWithArray:
T@"NSDictionary",&,N,V_baseCharacters
connectedScenes
T@"NSDictionary",&,N,V_caronDiacriticKey
containsString:
T@"NSDictionary",&,N,V_flickTable
dealloc
T@"NSDictionary",&,N,V_kahakoDiacriticKey
dismissKeyboard
T@"NSDictionary",&,N,V_modifierCharMap
factory
T@"NSDictionary",&,N,V_pinyinMap
getTextClustersFrom:withRegion:
T@"NSDictionary",&,N,V_radicalBreakdownFlick
initWithFormat:
T@"NSDictionary",&,N,V_smallLettersInitialVowelMap
initWithString:
T@"NSDictionary",&,N,V_vowelKeyMap
isAtEnd
T@"NSMutableArray",&,N,V__usagePages
isProxy
T@"NSMutableDictionary",&,N,V_characterToKeycodeMap
isVerticalVowel
T@"NSMutableDictionary",&,N,V_multiTapOrbit
killKbd
T@"NSNumber",&,N,V_keyboardLanguage
modifierCharMap
T@"NSNumber",&,N,V_swipeConvexProbability
numberWithBool:
T@"NSNumber",&,N,V_swipeErrantProbability
release
T@"NSNumber",&,N,V_swipePivotProbability
samples
T@"NSNumber",&,N,V_tapBounds
setCommandType:
T@"NSObject<OS_dispatch_group>",&,N,V_group
setDoubleVowel:
T@"NSRegularExpression",&,N,V_autoshiftRegex
setFlickTyping:
T@"NSRegularExpression",&,N,V_whiteSpaceRegex
setSmallLettersInitialVowelMap:
T@"NSString",&,N,V_commandString
set_usagePages:
T@"NSString",&,N,V_propertyDictionaryString
stringByAppendingPathComponent:
T@"NSString",&,N,V_sentencePrefixingCharacters
swipeForceSpace
T@"NSString",C,N,V_defaultPlaneName
synchronizeFile
T@"NSString",C,N,V_keyboardSW
tryLock
T@"NSString",C,N,V_layoutName
typeStringWithHardwareKeyboard:
T@"NSString",C,N,V_regionCode
whiteSpaceRegex
T@"RCPSyntheticEventStream",&,N,V_eventStream
.cxx_destruct
T@"NSString",C,N,V_keyboardType
CGPointValue
Ti,N,V_tapStyle
GSEventMaskToKeyboardMask:
_baseCharacters
T@"NSArray",&,N,V_doubleConsonantJong
_isKana
T@"NSArray",&,N,V_doubleVowel
_usages
T@"NSArray",&,N,V_hangul
addLineToPoint:
T@"NSCharacterSet",&,N,V_keycapAndPopoverConstants
alternativeText
T@"NSDictionary",&,N,V_accentKey
arrayByExcludingObjectsInArray:
T@"NSDictionary",&,N,V_acuteKeys
bundleForClass:
T@"NSDictionary",&,N,V_capitalLettersInitialVowelMap
containsObject:
T@"NSDictionary",&,N,V_caronKeys
correctForRotation:orientation:
T@"NSDictionary",&,N,V_joinedVowelForms
detach:
T@"NSDictionary",&,N,V_kahakoKeys
displayTypeHint
T@"NSDictionary",&,N,V_multiTapCompleteKey
getNandCapacity
T@"NSDictionary",&,N,V_postfixedKeys
hidKeyboardType
T@"NSDictionary",&,N,V_radicalBreakdownMultiTap
initWithParams:
T@"NSDictionary",&,N,V_updownKey
interactionType
T@"NSDictionary",C,N,V_planeSwitchTable
isEmpty
T@"NSMutableArray",&,N,V__usages
isShiftKeyplane
T@"NSMutableDictionary",&,N,V_keyPlanes
jamosInSyllable
T@"NSNumber",&,N,V_keyboardCountryCode
lowercaseString
T@"NSNumber",&,N,V_swipeAlpha
moveFloatingKeyboardToPosition:
T@"NSNumber",&,N,V_swipeConvexSigma
pointOnSineCurve:withHeight:withStartPoint:withEndPoint:atTime:
T@"NSNumber",&,N,V_swipeErrantSigma
removeObserver:
T@"NSNumber",&,N,V_swipeSigma
T@"NSNumber",&,N,V_tapSigma
setDisplayType:
T@"NSObject<OS_dispatch_queue>",&,N,V_TypistHWKeyboardQueue
setEventStream:
T@"NSRegularExpression",&,N,V_subjoinedExpression
setSentencePrefixingCharacters:
T@"NSString",&,N,V_commandDescription
setVowelKeyMap:
T@"NSString",&,N,V_emulatedModel
splitGraphemeIntoCharacterArray
T@"NSString",&,N,V_sentenceDelimitingCharacters
stringFromDate:
T@"NSString",&,N,V_sentenceTrailingCharacters
switchKeyPlaneOnActiveKeyboard:
T@"NSString",C,N,V_keyboardID
toggleExtendedCandidateViewMode
T@"NSString",C,N,V_languageID
typeKeystrokeStream:completion:
T@"NSString",C,N,V_name
visible
T@"NSString",R,C
windows
T@"TypistCandidateBar",&,N,V_candidatebar
T@"TypistHWKeyboard",&,N,V_hardwareKeyboard
TB,N,GdictationSupported,V_dictationSupported
TB,N,GisHandwriting,V_isHandwriting
TB,N,GisKanaKeyboard,V_isKana
TB,N,GisTenKey,V_isTenKey
TB,N,GshouldShowDictationKey,V_shouldShowDictationKey
TB,N,GshouldShowGlobeKey,V_shouldShowGlobeKey
TB,N,V_automaticallyInsertsArrowKey
TB,N,V_fastTyping
TB,N,V_flickTyping
TB,N,V_hasCandidatesToCommit
TB,N,V_isAlphabeticPlane
TB,N,V_isCapsLockedState
TB,N,V_isLetters
TB,N,V_isShiftKeyplane
TB,N,V_requiresRecapWaitOverride
TB,N,V_swipeForceSpace
TB,N,V_usePopupKeys
TB,N,V_usePredictionBar
TB,N,V_usesAutoShift
TB,R
TC,N,V_usagePage
TI,N,V_hidKeyboardType
TQ,R
T^{__GSKeyboard=},N,V_hardwareKeyboard
T^{__IOHIDUserDevice=},N,V_emulatedKeyboard
Td,N,V_recapWaitOverrideInterval
Td,N,V_typeInterval
Ti,N,V_commandType
TypistHWKeyboardQueue
T{?=ii},R
UTF8String
_TypistHWKeyboardQueue
__usagePages
__usages
_accentKey
_activeInputModesContainsInputMode:
_acuteDiacriticKey
_acuteKeys
_addDoubleVowelKeys:withMapping:
_addPoint:andPoint:
_automaticallyInsertsArrowKey
_bailWithError:completion:
_canMultiTap
_candidatebar
_capitalLettersInitialVowelMap
_caronDiacriticKey
_caronKeys
_changeToKeyplane:
_characterToKeycodeMap
_character_set_pattern_from_string:
_commandDescription
_commandString
_commandType
_connectPath:forCharacters:withRegion:
_constructSwitchPath:toPlane:fromPlane:
_convertCountryCodeToHIDKeyboardType:
_convertGSKeyboardTypeToIOHIDKeyboardType:
_convertHIDKeyboardTypeToGSKeyboardType:
_convertKanaStringstoMultiTapNecessary:
_convertKanaStringstoRomajiIfNecessary:
_convertKeyboardLanguageToHIDCountryCode:
_convertKeyboardLanguageToHIDKeyboardType:
_convertRadicalIfNeeded:
_convertToMultiTapIfNecessary:
_decomposeCharactersWhereNeeded:
_decomposeGraphemeIntoSeparateCharactersIfNeeded:
_defaultPlaneName
_determineAppropriatePropertyDictionaryForHWModelStr:
_determineHandwritingBound
_determinePointBetween:nextPoint:
_determineShiftBasedOnDirection:
_determineSyllableStructure:vowelPositionType:
_determineTapStyleNoise:
_determineTransformationinFrame:cumulativeWidth:scale:characterHeight:rotationBias:
_determineWritingStyle:forCharacters:
_dictationSupported
_dotProduct:and:
_doubleAccentCharacterSet
_doubleConsonantJong
_doubleConsonantSplitJong
_doubleVowel
_doubleVowelSplit
_emulatedKeyboard
_emulatedModel
_eventStream
_fastTyping
_flickGestureDirection
_flickGestureDirection:
_flickTable
_flickTyping
_floatingKeyboardDraggableRect
_generateArgumentList:
_generateHandwritingStream:inFrame:isPencil:dimensions:
_generateKeystrokeStream:appendTypeInterval:
_getAutocorrectionList
_getCurrentKeyplaneName
_getJamoType:withOrderInSyllable:
_getLocalizedInputMode
_getModifierMaskMap
_getScaleInFrame:isPencil:dimensions:
_getScribbleRuleFromRegion:
_getTextClustersFrom:forCharacters:
_getWidthAndHeight:forCharacters:
_group
_guardAgainstOffScreenPoint:
_hangulJamoPosition
_hardwareKeyboard
_hasCandidatesToCommit
_hasConsonantVariants
_hasConsonantVariants:
_hidKeyboardType
_insertCharacterForKeyCode:logOutput:
_insertKey:gsKeyInfo:
_insertKey:logOutput:
_insertStaticKeys
_isAlphabeticPlane
_isCapsLockedState
_isConsonantVariant
_isConsonantVariant:
_isHandwriting
_isLetters
_isPinyin
_isPlaneControlKey:
_isShiftKeyplane
_isTenKey
_isVerticalVowel
_isVerticalVowel:
_isWubihua
_jamo
_jamoShiftsForStructure:
_joinedVowelForms
_kahakoDiacriticKey
_kahakoKeys
_keyPlanes
_keyboardCountryCode
_keyboardID
_keyboardLanguage
_keyboardSW
_keyboardType
_keycapAndPopoverConstants
_keycapAndPopoverVowels
_languageID
_layoutName
_makeTranslationWithOffset:
_mappingRegionToVariantID:
_modifierCharMap
_multiTapCompleteKey
_multiTapOrbit
_name
_openDatabaseFromFile:
_pinyinMap
_planeSwitchTable
_postfixedKeys
_processCharacters:withPathMap:forLocale:
_processHangulCharacter:withPathMap:forLocale:
_processThaiCharacter:withPathMap:forLocale:
_propertyDictionaryString
_queryDatabase:withSql:forRegion:
_queryHandwritingSourceForCharactersInString:withRegion:
_radicalBreakdownFlick
_radicalBreakdownMultiTap
_recapWaitOverrideInterval
_referenceBounds
_reflectPoint:origin:
_regionCode
_requiresRecapWaitOverride
_sanitizedStringForAutoShiftCheck:
_scalarMultiplyPoint:by:
_sentenceDelimitingCharacters
_sentencePrefixingCharacters
_sentenceTrailingCharacters
_separateUniqueCharacters:
_setKeyboardUserPreferences:
_setupAutoShiftRegex
_setupCharacterToKeycodeMap
_shiftPath:forCharacters:withRule:
_shiftThaiStrokes:withRatio:ofHeight:
_shouldShowDictationKey
_shouldShowGlobeKey
_showSmallDisplayKeyplane
_smallLettersInitialVowelMap
_subjoinedExpression
_subsequentKeyPressPairForCharacter:
_subtractPoint:byPoint:
_swipeAlpha
_swipeConvexProbability
_swipeConvexSigma
_swipeErrantProbability
_swipeErrantSigma
_swipeForceSpace
_swipePivotProbability
_swipeSigma
_syllable
_syllableStructure
_tapBounds
_tapSigma
_tapStyle
_typeInterval
_updownKey
_usagePage
_usagePages
_usePopupKeys
_usePredictionBar
_usesAutoShift
_validatePoints:To:
_variantsByAppendingDualStringKey:toVariants:
_vowelKeyMap
_whiteSpaceRegex
accentKey
actionForItem:
activate:
activeInputModes
activeInstance
activeInterfaceOrientation
activeKeyboard
acuteDiacriticKey
acuteKeys
addAccentKeyAction:
addCharactersInString:
addCurveToPoint:controlPoint1:controlPoint2:
addKeyboardGestureKeys:keys:inPlane:addTo:
addKeyboardPopupKeys:inPlane:addTo:keyplaneKeycaps:
addKeyboardPopupKeys:keys:inPlane:addTo:keyplaneKeycaps:
addKeyboards:
addObject:
addObjectsFromArray:
addObserverForName:object:queue:usingBlock:
addQuadCurveToPoint:controlPoint:
allKeysForObject:
allObjects
allOneTimeActionsAlreadyTriggered
allSubViews
allWindowsIncludingInternalWindows:onlyVisibleWindows:
appendFormat:
appendKeyboardForKeyboardSetting:
appendPath:
appendString:
appendingSecondaryStringToVariantsTop:secondaryString:withDirection:
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
asPropertyList
attachHardwareKeyboard:
attachHardwareKeyboardWithCountryCode:
attemptToFindKeystrokeAsGesture:
autocorrectPrompt
automaticHardwareLayout
automaticallyInsertsArrowKey
autorelease
autoshiftRegex
baseCharacters
baseKeyForString:
boolForPreferenceKey:
boolValue
bounds
bundleIdentifier
cache
calculateCoordinatesForFlickGesture:direction:offset:
candidate
candidateList
candidateNumberLabel
candidateUIInformation:
candidatebar
candidatesAsStringArray:
canonicalConversion:
capitalLettersInitialVowelMap
captureCurrentKeyboardImage
caronDiacriticKey
caronKeys
caseInsensitiveCompare:
categoryForType:
centerOfCandidate:
centerOfKey:withOffset:
changeKeyNameToGenericCharacter:
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
characterSetWithRange:
characterToKeycodeMap
class
cleanUpSwitchTableBasedOnDefaultPlane:defaultPlaneName:
closeFile
closeLogFile
commandDescription
commandString
commandType
commitCandidate:
commitCandidateAtIndex:
compare:
componentName
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
conformsToProtocol:
connectToRemoteKeyboard:
contentOffset
contentSize
convertCurveDeleteTouchPoints:endPoint:curveHeight:curveDensity:tilt:
convertHIDCountryCodeToLanguage:
convertPoint:toLayer:
convertPoint:toView:
convertRecapCommands:
convertRecapCommandsFromListOfActions:
convertRect:toView:
convertRepresentedStringsIfNecessary:
convertSVGPaths:withTransformation:
convertSVGStringPathToUIBezierPath:
convertSingleSVGPaths:withTransformation:
convertUIBezierPathToTouchPoints:
copy
count
countByEnumeratingWithState:objects:count:
countryCode
createAutoshiftRegularExpressionWithDelimitingCharacters:sentenceTrailingCharacters:sentencePrefixingCharacters:
createFileAtPath:contents:attributes:
currentDevice
currentEnvironment
currentKeyplaneView
currentLanguageIdentifier
currentLocale
currentPoint
currentRunLoop
cyrillicCharacters
cyrillicCharactersWithUniqueWritingRule
data
dataUsingEncoding:
dataWithJSONObject:options:error:
date
dateWithTimeIntervalSinceNow:
debugDescription
decimalDigitCharacterSet
decodeBoolForKey:
decodeObjectOfClass:forKey:
decomposeAmharicChar:
decomposeAmharicStrings:
decomposeKoreanStrings:
decomposeSyllableForScribble:
decomposedStringWithCanonicalMapping
defaultCenter
defaultFormat
defaultManager
defaultPlaneName
delegate
description
detach
detachHardwareKeyboard
determineDefaultPlane10Key:basePlaneName:
determineDefaultPlane:basePlaneName:
deviceInfo
dictationIsEnabled
dictationIsSupportedForLanguageCode:error:
dictationSupported
dictionary
dictionaryWithDictionary:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
didTriggerOneTimeAction:
disconnectFromRemoteKeyboard
dismissOneTimeTIActions:
displayString
displayType
doubleAccentCharacterSet
doubleConsonantJong
doubleConsonantSplitJong
doubleValue
doubleVowel
doubleVowelSplit
downActionFlagsForKey:plane:keyplaneKeycaps:
dragFromKey:toKey:completion:
dragPopoverKey:completion:
drawAtPoint:
drawViewHierarchyInRect:afterScreenUpdates:
dynamicLayout
emulatedKeyboard
emulatedModel
encodeBool:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
errorWithDomain:code:userInfo:
escapedPatternForString:
eventStream
eventStreamWithCLIArguments:
exceptionWithName:reason:userInfo:
fastTyping
fileExistsAtPath:
fileHandleForWritingAtPath:
findEmojiScrollView
findKey:inPlane:
findKeyBoundsInKeyboard:
findKeyInOtherPlanes:currentPlane:
findKeyOnAnyPlane:
findKeyOnCurrentPlane:
firstCachedKeyWithName:
firstMatchInString:options:range:
firstObject
flickKey:withDirection:completion:
flickTable
flickTyping
floatValue
floatingKeyboardDraggablePoint
formUnionWithCharacterSet:
formattedKeyplaneName
frame
fullRepresentedString
generateGaussianPoint:withSeed:andSigma:
generateGaussianPointWithMean:andSigma:
generateHandwritingStream:inFrame:isPencil:
generateHandwritingStream:inFrame:isPencil:rotationBias:
generateHandwritingStream:inFrame:isPencil:rotationBias:isCursive:
generateKeyboardList
generateKeyplaneSwitchTable:
generateKeyplaneSwitchTableFor10Key:
generateKeystrokeStream:
generateKeystrokeStream:position:
generatePathArgumentStringWithParameters:fromPoints:
generatePathFromInflectionPoints:segmentTiming:keys:string:layout:
generatePencilGestureStream:gestureStyle:inFrame:
generatePopupKeySubtrees:key:plane:layout:keyplaneKeycaps:
generateSwipeStream:
generateUniformPointWithMean:andBounds:
generateUniformPointWithMean:andRange:
gestureKey
getAggregatedTIPreferences
getAllCandidates
getAlternatePlanesForDefaultPlane
getAlternativeKeyPlaneName:
getAutoCapitalizationPrefSetting
getAutoCorrectionPrefSetting
getCandidateBarHeight
getCandidateBarRect
getCandidateBarWidth
getCandidateCenter:
getCandidateCenterAtIndex:
getCandidateCenterWithIndex:
getCandidateRectWithString:
getCapsLockPrefSetting
getCheckSpellingPrefSetting
getDescriptionOfKeyplane:
getDictationEnabled
getExpectedPlaneNameForKey:currentPlane:
getExtendedCandidateViewToggleButtonCenter
getFuzzyPinyinPrefSetting
getGestureKeyPrefSetting
getHIDKeyboardType
getHWKeyboardCapsLockRomanSwitchPrefSetting
getHwRevision
getIndexOfCandidate:
getIndexOfCandidate:withAlternativeText:
getKeyPaddlePrefSetting
getKeyboardLayout:
getKeyboardLayoutWithConfiguration:
getKeyboardPlaneKeys:keys:inPlane:
getKeyboardUISettings
getKeyboardsForKeyboardSetting
getKeyplaneDescription:
getMobileGestalt:
getOneHandedKeyboardHandBias
getPathData:fromPathMap:
getPathDataForCharacters:withRegion:isCursive:
getPeriodShortcutPrefSetting
getPostfixKey:
getPredictivePrefSetting
getPropertyDictionaryString
getRepresentedStringFromKey:
getRootViewControllerViaScene
getSameScreenSizeModel
getScreenSize
getSentenceBoundaryStrings
getShiftPlaneForAlternatePlane
getShiftPlaneForDefaultPlane
getShiftedKeyPlaneName:
getShuangpinEnumeration:
getShuangpinPrefSetting
getSmallDisplayPrefSetting
getSmartDashesPrefSetting
getSmartFullWidthSetting
getSmartQuotesPrefSetting
getStrokesForJamo:forVariant:ofType:fromPath:forLocale:
getTIPreferences
getTrainBuildVersion:
getTypologyEnabled
getUIDeviceOrientationAsString
getUIDeviceOrientationFromString:
getUIInterfaceOrientation
getValue:
getVisibleCandidateList:
getVisibleCandidates
getVisibleCandidates:
getVisibleKeyplaneName
getWubiEnumeration:
getWubiPrefSetting
globeKeyDisplaysAsEmojiKey
graphemeArray
graphemeAtIndex:
graphemeCount
group
hangul
hangulConsonantVariants
hangulHorizontalVowels
hangulJamoPosition
hangulJamoTransformationDataValue
hangulJamoTransformationDataValueWithJamoType:direction:
hangulLeadingConsonants
hangulMixedVowels
hangulTrailingConsonants
hangulVerticalVowels
hardwareInputMode
hardwareKeyboard
hasCandidate:
hasCandidate:inRange:
hasCandidate:withAlternativeText:
hasCandidate:withAlternativeText:inRange:
hasCandidates
hasCandidates:
hasCandidates:inRange:
hasCandidatesToCommit
hasConsonantVariants
hasFaceID
hasHomeButton
hasMarkedText
hasPrefix:
hasSuffix:
hasVisibleCandidate:
hash
hideExtendedCandidateView
highlightedVariantsList
identifier
imageWithActions:
indexOfObject:
indexesOfObjectsPassingTest:
inhibitGlobalAlerts:
init
init:
init:options:
init:options:locale:
initWithArray:copyItems:
initWithCapacity:
initWithClassKey:isTenKey:isKana:flickTyping:showDictationKey:showGlobeKey:usePopupKeys:flickTable:flickGestureDirection:whiteSpaceRegex:multiTapOrbit:
initWithCoder:
initWithCommandType:commandString:commandDescription:
initWithContentsOfFile:
initWithContentsOfFile:options:error:
initWithCountryCode:
initWithCountryCode:andPropertyDictionaryAtPath:
initWithData:encoding:
initWithFormat:arguments:
initWithHardwareKeyboard:
initWithJamo:position:
initWithLanguage:
initWithObjects:
initWithPattern:options:error:
initWithSize:format:
initWithSyllable:
initWithTypistKeyboard:
insertObject:atIndex:
intValue
integerValue
intersectsSet:
isAlphabeticPlane
isAutoShifted
isAutoshiftedToCapitalPlane:
isAvailableFlickOnCurrentPlane:withDirection:
isAvailableGestureOnCurrentPlane:withDirection:
isAvailableKeyOnCurrentPlane:
isAvailablePopoverOnCurrentPlane:
isCandidateCellVisible:
isCapsLockedState
isConsonant:
isConsonantVariant
isDictationSupported:
isEnabled
isEqual:
isEqualToSet:
isEqualToString:
isExtendedCandidateViewMode
isExtendedList
isFloating
isFocused
isHandwriting
isHidden
isJoinedConsonantAndVowelCharacter:
isKana
isKanaKeyboard
isKeyWindow
isKeyboardUIOutOfProcess
isKindOfClass:
isKoreanConsonantVariant:
isKoreanSyllable:
isLetters
isMainThread
isMemberOfClass:
isPinyinCharacter:
isPopoverCombo:withIndex:
isShiftKeyPlaneChooser
isShifted
isSubsetOfSet:
isSwitchedToCapitalPlane:previous:currentPlane:context:
isSwitchedToDefaultPlane:
isTapKey:
isTenKey
isThaiCharacter:
jamo
jamos
joinedVowelForms
kahakoDiacriticKey
kahakoKeys
keyHasAccentedVariants:plane:keyplaneKeycaps:
keyPlanes
keyWillCommitCandidate:
keyboard
keyboardCountryCode
keyboardCountryCodes
keyboardData
keyboardID
keyboardLanguage
keyboardLanguageValueMap
keyboardLayoutValueMap
keyboardSW
keyboardType
keycapAndPopoverConstants
keycapAndPopoverVowels
keyplaneNamed:
keys
keysDataForInputMode:andFileName:
languageID
lastObject
launchRecap:
launchRecap:completion:
layer
layoutName
leadingConsonants
length
localeWithLocaleIdentifier:
localizedStringForKey:value:table:
logToFile:
logToSTDERR:
lowercaseStringWithLocale:
mainBundle
mainQueue
mainScreen
markedText
matchText:withPattern:
minusSet:
model
modifiesKeyplane
moveToPoint:
multiTapCompleteKey
multiTapOrbit
mutableCopy
name
null
numberOfMatchesInString:options:range:
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedShort:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
objectsAtIndexes:
oneTimeActionCompleted:
openLogFile:
openLogFile:inDirectory:
orientation
origin
pathForResource:ofType:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
pinyinMap
planeSwitchTable
playEventStream:options:completion:
point
pointOnCurve:atTime:
postfixedKeys
precomposedStringWithCanonicalMapping
precomposedStringWithCompatibilityMapping
preferencesActions
preparePopupVariantsForKey:onKeyplane:
preprocessing
pressAndHoldHardwareKeys:forDuration:withValidation:validateAfter:
pressAndHoldKey:completion:
pressAndHoldKeys:forDuration:withValidation:after:
pressKeycode:
prewarmForEventStream:completion:
propertyDictionaryString
propertyListWithData:options:format:error:
punctuationCharacterSet
radicalBreakdownFlick
radicalBreakdownMultiTap
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfComposedCharacterSequenceAtIndex:
rangeOfString:options:
recapWaitOverrideInterval
regionCode
regularExpressionWithPattern:options:error:
releaseKeyPressWithCompletion:
removeAllObjects
removeAutocorrectPromptAndCandidateList
removeItemAtPath:error:
removeKeyboardForKeyboardSetting:
removeKeyboards:
removeLastObject
removeObject:
removeObjectAtIndex:
removeObjectForKey:
replaceObjectAtIndex:withObject:
replaceWaitForKeyboardPlane:withWait:
representedString
requiresRecapWaitOverride
resetSelectedCategory
respondsToSelector:
retain
retainCount
rivenTranslationPreference
rootViewController
runCommandLineProcess:
runOnMainThread:
runUntilDate:
safeAreaInsets
scale
scanCharactersFromSet:intoString:
scanDouble:
scanHexInt:
scanInteger:
scanPoint
scanUpToCharactersFromSet:intoString:
scannerWithString:
scriptCode
scrollCandidateBar:
scrollCandidateBarByOneScreen
scrollEmojiKeyboard
scrollToCandidateOnBar:
scrollToCandidateOnBarByPosition:
searchForViewInKeyboardWindow:
searchForWindow:
secondaryDisplayStrings
secondaryRepresentedStrings
selectCandidate:
selectCandidateAtIndex:
selectedVariantIndex
self
sentenceDelimitingCharacters
sentencePrefixingCharacters
sentenceTrailingCharacters
setAccentKey:
setAcuteDiacriticKey:
setAcuteKeys:
setAirplaneMode:
setAutomaticallyInsertsArrowKey:
setAutoshiftRegex:
setBaseCharacters:
setCandidatebar:
setCapitalLettersInitialVowelMap:
setCaronDiacriticKey:
setCaronKeys:
setCharacterToKeycodeMap:
setCommandDescription:
setCommandString:
setDateFormat:
setDefaultPlaneName:
setDictationIsEnabled:
setDictationSupported:
setDisplayString:
setDoNotDisturb:
setDoubleAccentCharacterSet:
setDoubleConsonantJong:
setDoubleConsonantSplitJong:
setDoubleVowelSplit:
setEmojiCategoryDefaultsIndex:forCategory:
setEmulatedKeyboard:
setEmulatedModel:
setFastTyping:
setFlickTable:
setFloatingKeyboard:
setGroup:
setHangul:
setHardwareKeyboard:
setHasCandidatesToCommit:
setHidKeyboardType:
setHighlightedVariantsList:
setIgnoresCompletionDelay:
setInputMode:userInitiated:
setIsAlphabeticPlane:
setIsCapsLockedState:
setIsHandwriting:
setIsKana:
setIsLetters:
setIsShiftKeyplane:
setIsTenKey:
setJoinedVowelForms:
setKahakoDiacriticKey:
setKahakoKeys:
setKeyPlanes:
setKeyboardCountryCode:
setKeyboardDictation:
setKeyboardForKeyboardSetting:
setKeyboardID:
setKeyboardLanguage:
setKeyboardSW:
setKeyboardType:
setKeyboardUISettings:
setKeyboards:
setKeycapAndPopoverConstants:
setKeycapAndPopoverVowels:
setLanguageID:
setLayoutName:
setModifierCharMap
setModifierCharMap:
setMultiTapCompleteKey:
setMultiTapOrbit:
setName:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setOneHandedKeyboardHandBias:
setOneHandedPosition:
setOverrideDisplayString:
setPinyinMap:
setPlaneSwitchTable:
setPositiveFormat:
setPostfixedKeys:
setPrefSettings:
setPropertyDictionaryString:
setRadicalBreakdownFlick:
setRadicalBreakdownMultiTap:
setRecapFastMode:
setRecapWaitOverrideInterval:
setRegionCode:
setRepresentedString:
setRequiresRecapWaitOverride:
setSelectedCategoryType:
setSelectedVariantIndex:
setSentenceDelimitingCharacters:
setSentenceTrailingCharacters:
setShouldShowDictationKey:
setShouldShowGlobeKey:
setState:
setString:
setSubjoinedExpression:
setSubtrees:
setSuppressDictationOptIn:
setSwipeAlpha:
setSwipeConvexProbability:
setSwipeConvexSigma:
setSwipeErrantProbability:
setSwipeErrantSigma:
setSwipeForceSpace:
setSwipePivotProbability:
setSwipeSigma:
setSyllable:
setTIPreferences:
setTapBounds:
setTapSigma:
setTapStyle:
setTypeInterval:
setTypistHWKeyboardQueue:
setUpdownKey:
setUsagePage:
setUsePopupKeys:
setUsePredictionBar:
setUsesAutoShift:
setValue:forKey:
setValue:forPreferenceKey:
setVariantPopupBias:
setWhiteSpaceRegex:
setWithArray:
set_usages:
setup50OnFlick:forKey:keyName:planeName:
setupKeyboardInfo:options:
setupSentenceBoundryStrings
setupTenKey:forKey:keyName:planeName:
sharedApplication
sharedFBSOrientationObserver
sharedInputModeController
sharedInstance
sharedPreferences
sharedPreferencesController
sharedRecapInlinePlayer
sharedSettings
shiftJamosInSyllable:withPath:forLocale:
shiftStrokesForJamo:withDirection:
shouldShowDictationKey
shouldShowGlobeKey
shouldShowInternationalKey
showCandidateAtIndex:
showExtendedCandidateView
showPopupVariantsForKey:key:plane:keyplaneKeycaps:
showsDedicatedEmojiKeyAlongsideGlobeButton
size
sleepForTimeInterval:
smallCharacers
smallLettersInitialVowelMap
splitKeystrokeStreamByWord:originalText:
state
string
stringByAppendingFormat:
stringByAppendingString:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringByReplacingOccurrencesOfString:withString:options:range:
stringByTrimmingCharactersInSet:
stringForProperty:
stringFromNumber:
stringValue
stringWithCharacters:length:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subjoinedExpression
substringFromIndex:
substringToIndex:
substringWithRange:
subtrees
subviews
superclass
superview
supportsFloating
supportsPencil
supportsSecureCoding
swipeAlpha
swipeConvexProbability
swipeConvexSigma
swipeErrantProbability
swipeErrantSigma
swipeGestureKey:withDirection:completion:
swipeGestureOrFlickKey:withDirection:completion:
swipePivotProbability
swipeSigma
swipeString:
switchToKeyboard:
switchToPlane:
switchToPlane:fromPlane:
syllable
syllableStructure
synchronize
synchronizePreferences
tallCharacters
tapBounds
tapGlobeKey
tapKey:tapCount:completion:
tapKey:tapCount:overriddenTypeInterval:completion:
tapMoreKey
tapSigma
tapStyle
tearDown
tearDownRecapInlinePlayer
text
textLabel
timeInStringFromTimeInterval:
timeIntervalSinceDate:
toUIDeviceOrientation:
toUIInterfaceOrientation:
toggleCapsLock
touchScanRate
trailingConsonants
traitsForKey:onKeyplane:
triggerAllTIOneTimeActions
tryAlternateVariationsOfKey:
tryConnection
typeInterval
typeKeyStrokeStream:
typeKeystrokeStream:
typeKeystrokeStreamWithPredictive:originalText:completion:
typeString:
typeString:completion:
typeString:withCommit:
typeStringOnHardwareKeyboard:withLanguage:
typeWordKeystrokeWithPredictive:atIndex:completion:
typeWordKeystrokes:expectedWord:atIndex:completion:
unlock
unsignedIntValue
unsignedIntegerValue
unsignedShortValue
updateCachedKeyplaneKeycaps:
updateCommand:commandString:commandDescription:
updateInputModes:
updateKeyboardHandBias:
updateVariantTypeForActions:
updownKey
upperCombiningCharacters
uppercaseLetterCharacterSet
uppercaseStringWithLocale:
usagePage
usagePages
usagePairsForText:
usages
usePopupKeys
usePredictionBar
userInterfaceIdiom
usesAutoShift
usesInputSystemUI
usesMecabraCandidateBar
validateProbability:
valueForKey:
valueForPreferenceKey:
valueWithBytes:objCType:
valueWithCGPoint:
valueWithCGRect:
valueWithHangulJamoTransformationData:
variantType
view
viewExistsOnScreen:
visibleCandidates
vowelKeyMap
vowels
waitFor:
waitForKeyboardPlane:
whiteSpaceCharSet
whitespaceAndNewlineCharacterSet
whitespaceCharacterSet
willDirectlyCommitNumbersAndPunctuationSet
willSwitchToDefaultPlaneCharacterSet
window
writeData:
writePencilGesture:inStyle:gestureRange:inFrame:
writePencilGesture:inStyle:inFrame:
writeString:inFrame:
writeString:inFrame:isCursive:
writeString:inFrame:rotationBias:
writeString:inFrame:rotationBias:isCursive:
zone
{CGPoint=dd}48@0:8{CGPoint=dd}16q32d40
{CGPoint=dd}40@0:8{CGPoint=dd}16d32
{CGPoint=dd}36@0:8{CGPoint=dd}16I32
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGVector=dd}32
@24@0:8@16
C20@0:8I16
I24@0:8@16
@16@0:8
@24@0:8q16
v16@0:8
I16@0:8
v28@0:8S16@20
@28@0:8@16B24
v20@0:8S16
v24@0:8@16
v48@0:8@16d24@?32d40
d16@0:8
v24@0:8d16
^{__GSKeyboard=}16@0:8
v24@0:8^{__GSKeyboard=}16
v20@0:8I16
C16@0:8
v20@0:8C16
^{__GSKeyboard=}
@"NSMutableDictionary"
@"NSNumber"
@"NSString"
@"NSDictionary"
v20@0:8B16
v24@0:8@?16
@24@0:8d16
v24@0:8^*16
i16@0:8
B16@0:8
q24@0:8q16
q16@0:8
q24@0:8@16
v32@0:8@16@?24
B24@0:8@16
@32@0:8@16d24
@32@0:8@16@24
d48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGPoint=dd}48@0:8{CGPoint=dd}16{CGPoint=dd}32
{CGPoint=dd}32@0:8@16d24
{CGPoint=dd}72@0:8d16d24{CGPoint=dd}32{CGPoint=dd}48d64
@72@0:8{CGPoint=dd}16{CGPoint=dd}32d48q56d64
@72@0:8@16{CGAffineTransform=dddddd}24
B48@0:8{CGPoint=dd}16{CGPoint=dd}32
@36@0:8S16@20Q28
@40@0:8@16@24Q32
@40@0:8@16d24@32
{CGAffineTransform=dddddd}24@0:8d16
i24@0:8@16
@36@0:8@16@24i32
@36@0:8@16@24B32
@40@0:8@16@24@32
^{sqlite3=}24@0:8@16
Q40@0:8^{sqlite3=}16@24@32
B20@0:8B16
{CGPoint=dd}16@0:8
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8{CGPoint=dd}16
v48@0:8@16@24@32@40
{CGPoint=dd}44@0:8{CGPoint=dd}16@32f40
@48@0:8@16@24@32@40
{CGPoint=dd}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48d56d64d72
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@60@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56d60
@72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56d60B68
@68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56@60
d60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48@52
@56@0:8i16i20{CGRect={CGPoint=dd}{CGSize=dd}}24
B48@0:8@16@24@32@40
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v60@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24B56
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56
v68@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56B64
v72@0:8i16i20{_NSRange=QQ}24{CGRect={CGPoint=dd}{CGSize=dd}}40
v56@0:8i16i20{CGRect={CGPoint=dd}{CGSize=dd}}24
B40@0:8@16{_NSRange=QQ}24
v40@0:8@16@24@?32
v40@0:8@16q24@?32
v48@0:8@16@24q32@?40
v20@0:8i16
@"TypistCandidateBar"
@"TypistHWKeyboard"
@"NSRegularExpression"
B20@0:8S16
@36@0:8i16@20@28
v36@0:8i16@20@28
@"RCPSyntheticEventStream"
@"NSMutableArray"
Q16@0:8
@24@0:8Q16
v32@0:8^{CGVector=dd}16q24
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
B24@0:8d16
{CGPoint=dd}24@0:8@16
v24@0:8q16
@56@0:8@16@24@32@40@48
{CGPoint=dd}24@0:8q16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"TypistKeyboard"16
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
B24@0:8@"NSString"16
@"TypistKeyplane"24@0:8@"NSString"16
@"NSArray"16@0:8
@"NSArray"24@0:8@"NSString"16
{CGPoint=dd}24@0:8@"NSString"16
@"NSMutableDictionary"56@0:8@"TypistKeyboard"16@"NSArray"24@"NSString"32@"NSMutableDictionary"40@"NSMutableSet"48
@"NSMutableDictionary"24@0:8@"NSArray"16
@"NSString"24@0:8@"NSString"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"NSString"16
@20@0:8i16
@48@0:8@16B24i28@32Q40
@28@0:8@16i24
{CGAffineTransform=dddddd}20@0:8i16
{?=ii}16@0:8
@24@0:8{?=ii}16
@24@0:8i16i20
B32@0:8@16q24
@20@0:8S16
@"NSCharacterSet"
C20@0:8C16
I20@0:8I16
v28@0:8S16^{?=SSSSS[24S]S[24S]S[24S]SS}20
@32@0:8@16^i24
^{__IOHIDUserDevice=}16@0:8
v24@0:8^{__IOHIDUserDevice=}16
^{__IOHIDUserDevice=}
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSArray"
B56@0:8@16@24@32@40@48
Q40@0:8@16@24@32
B40@0:8@16@24@32
S16@0:8
i28@0:8Q16i24
B32@0:8@16@24
v40@0:8@16Q24@?32
v48@0:8@16Q24@32@?40
@28@0:8S16Q20
i28@0:8S16Q20
B48@0:8@16@24{_NSRange=QQ}32
q32@0:8@16@24
B20@0:8i16
B24@0:8q16
33333
