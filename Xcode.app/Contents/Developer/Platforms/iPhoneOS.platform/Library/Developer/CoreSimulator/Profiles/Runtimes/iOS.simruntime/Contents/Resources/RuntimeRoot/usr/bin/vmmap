@(#)PROGRAM:vmmap  PROJECT:SamplingTools-64552.23.1
Gives you an indication of the VM used by a process
[-wide] [-pages] [-interleaved] [-submap] [-allSplitLibs] [-noCoalesce] [-summary] [-stacks] [-forkCorpse] <pid | partial-process-name | memory-graph-file> [<address>]
wide
print wide output
v8@?0
verbose
equivalent to -w -submap -allSplitLibs -noCoalesce
resident
dirty
swapped
purge
pages
print region sizes in page counts rather than kilobytes
interleaved
print all regions in order, rather than non-writable then writable
submaps
print info about submaps
allSplitLibs
print info about all system split libraries, even those not loaded by this process
noCoalesce
do not coalesce adjacent identical regions (default is to coalesce for more concise output)
noMalloc
omit malloc zone details, useful in cases where gathering that is slow
summary
only print overall summary, not individual regions
stacks
show region allocation backtraces if target process uses MallocStackLogging (implies -interleaved -noCoalesce)
-stacks also implies -interleaved -noCoalesce
fullStacks
show region allocation backtraces with one line per frame
forkCorpse
generate a corpse fork from process and run vmmap on it
getCorpseFromParent
physFootprint
excludePersonalInfo
showTiming
initialization
help
allProcesses
minimumPid
run vmmap against all processes (or those >= minimumPid), with the given arguments
v24@?0@"NSString"8^@16
shortenedOutput
print less output by e.g. not showing any region in dyld shared cache that has (dirty + swapped == 0) etc
excResource
Produce output for ExcResource report
bad address '%@' specified
unknown argument: %@
no process specified
%s[%d]: [fatal] unable to read input graph: %s
vmmap
generate analysis task
v16@?0i8I12
Virtual Memory Map of process %d (%s)
Output report format:  2.4  -- %u-bit process
VM page size:  %u bytes
Process VM page size:  %u bytes    Kernel VM page size:  %u bytes
Reporting VM page counts in terms of %u bytes
==== Summary for process %d
B32@?0@"VMUVMRegion"8Q16^B24
MALLOC_PROB_GUARD
==== regions for process %d  (non-writable and writable regions are interleaved)
==== Non-writable regions for process %d
==== Writable regions for process %d
Stack
STACK GUARD
    object_id %lx
    ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    REGION EXTENDS PAST ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    Call stack: %s
SM=sharing mode:  
%s=copy_on_write %s=private %s=empty %s=aliased 
%s=shared %s=zero_filled %s=shared_alias
PURGE=purgeable mode:  
%c=volatile %c=nonvolatile %c=empty   otherwise is unpurgeable
Showing shortened output:
    - not showing any region in DSC that has (dirty + swapped == 0)
    - not showing 'unused system shared lib __DATA, on dirty page' regions
    - paths shortened (e.g. /System/Library/Frameworks -> /S/L/F, /usr/lib/system -> /u/l/s)
Probabilistic Guard Malloc is enabled for this process which can increase memory footprint. See `man malloc` for more information.
Collected with vm.self_region_footprint enabled
==== Legend
.memgraph
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
i24@?0r^v8r^v16
%s-%d-%s
DT_RESPAWN_FOR_NONNATIVE
/tmp/%s-allProcesses[%d].XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing output files into %s
Skipping process of wrong architecture:  %d %s
ANALYZING PROCESS %5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
    CHILD ANALYSIS TOOL CRASHED with %s
    %s for %5d: %s
Exception '%s', reason: '%s'
v40@?0i8r*12B20I24I28^B32
Child analysis tool crashed for these processes:
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
: terminated; resuming target task
: interrupted; resuming target task
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s[%d]: [fatal] Corpse generated for the process is incomplete, which can happen with processes that use a lot of memory
%s[%d]: Failed to generate corpse from the process: corpse was incomplete which can happen for processes that use a lot of memory
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
sharedCode.m
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
v12@?0I8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
Running in DT_RESPAWN_FOR_NONNATIVE mode -- respawning only if necessary to match target process arch and/or platform.
com.apple.dt.instruments
setPurposeDescription:
setSyntaxDescription:
setSingleHyphenLongNames:
sharedTimer
startWithMessage:
usage:
length
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
hasPrefix:
UTF8String
parseArguments:withBlock:
directedGraphWithData:error:
localizedDescription
initWithGraph:options:
vmPageSize
kernelPageSize
descriptionOfRegionsAroundAddress:options:maximumLength:memorySizeDivisor:
stackLogReader
regionTracker
processDescriptionString
processName
is64bit
showsPhysFootprint
signpostID
logHandle
endEvent:
startWithCategory:message:
initWithTask:getBinariesList:
description
initWithTask:options:
initWithTask:symbolicator:
stop
intValue
regions
hasFractionalPageSizes
descriptionForRegionTotalsWithOptions:memorySizeDivisor:
type
isEqualToString:
indexOfObjectPassingTest:
columnHeadersWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
countByEnumeratingWithState:objects:count:
protection
isSubmap
range
descriptionWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
vmRegionRangeInfoForRange:
userTag
address
size
stackIdentifier
symbolicatedBacktraceForStackID:options:
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
executablePath
parentPid
parentProcessPath
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
initWithTask:
shouldAnalyzeWithCorpse
numberWithInt:
stringValue
initWithPid:
name
reason
callStackSymbols
valueForEnvVar:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
is64Bit
stringWithFormat:
numberWithUnsignedInt:
generate analysis task
vmmap
examining %@ [%u]
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.vmmap</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19E217</string>
<key>DTSDKName</key>
<string>iphonesimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.rootless.datavault.metadata</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.system-task-ports</key>
<true/>
<key>com.apple.system-task-ports.read</key>
<true/>
<key>com.apple.system-task-ports.read.safe</key>
<true/>
<key>com.apple.system-task-ports.safe</key>
<true/>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
@(#)PROGRAM:vmmap  PROJECT:SamplingTools-64552.23.1
Gives you an indication of the VM used by a process
[-wide] [-pages] [-interleaved] [-submap] [-allSplitLibs] [-noCoalesce] [-summary] [-stacks] [-forkCorpse] <pid | partial-process-name | memory-graph-file> [<address>]
wide
print wide output
v8@?0
verbose
equivalent to -w -submap -allSplitLibs -noCoalesce
resident
dirty
swapped
purge
pages
print region sizes in page counts rather than kilobytes
interleaved
print all regions in order, rather than non-writable then writable
submaps
print info about submaps
allSplitLibs
print info about all system split libraries, even those not loaded by this process
noCoalesce
do not coalesce adjacent identical regions (default is to coalesce for more concise output)
noMalloc
omit malloc zone details, useful in cases where gathering that is slow
summary
only print overall summary, not individual regions
stacks
show region allocation backtraces if target process uses MallocStackLogging (implies -interleaved -noCoalesce)
-stacks also implies -interleaved -noCoalesce
fullStacks
show region allocation backtraces with one line per frame
forkCorpse
generate a corpse fork from process and run vmmap on it
getCorpseFromParent
physFootprint
excludePersonalInfo
showTiming
initialization
help
allProcesses
minimumPid
run vmmap against all processes (or those >= minimumPid), with the given arguments
v24@?0@"NSString"8^@16
shortenedOutput
print less output by e.g. not showing any region in dyld shared cache that has (dirty + swapped == 0) etc
excResource
Produce output for ExcResource report
bad address '%@' specified
unknown argument: %@
no process specified
%s[%d]: [fatal] unable to read input graph: %s
vmmap
generate analysis task
v16@?0i8I12
Virtual Memory Map of process %d (%s)
Output report format:  2.4  -- %u-bit process
VM page size:  %u bytes
Process VM page size:  %u bytes    Kernel VM page size:  %u bytes
Reporting VM page counts in terms of %u bytes
==== Summary for process %d
B32@?0@"VMUVMRegion"8Q16^B24
MALLOC_PROB_GUARD
==== regions for process %d  (non-writable and writable regions are interleaved)
==== Non-writable regions for process %d
==== Writable regions for process %d
Stack
STACK GUARD
    object_id %lx
    ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    REGION EXTENDS PAST ORIGINAL VM ALLOCATION: %#llx-%#llx[%s]
    Call stack: %s
SM=sharing mode:  
%s=copy_on_write %s=private %s=empty %s=aliased 
%s=shared %s=zero_filled %s=shared_alias
PURGE=purgeable mode:  
%c=volatile %c=nonvolatile %c=empty   otherwise is unpurgeable
Showing shortened output:
    - not showing any region in DSC that has (dirty + swapped == 0)
    - not showing 'unused system shared lib __DATA, on dirty page' regions
    - paths shortened (e.g. /System/Library/Frameworks -> /S/L/F, /usr/lib/system -> /u/l/s)
Probabilistic Guard Malloc is enabled for this process which can increase memory footprint. See `man malloc` for more information.
Collected with vm.self_region_footprint enabled
==== Legend
.memgraph
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %@ [%u]
Parent process:  %@ [%u]
Target process of memgraph:  %@ [%u]
%s[%d]: Unable to deallocate target task port: %d (%s)
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: [fatal] Target task not available for analysis
SAMPLING_TOOLS_ALL_PROCESSES
Target process is using %s so not generating corpse for better performance.
Target process is an ancestor and permitting live process for ancestors so not generating a corpse to save resources by default.
__check_mach_ports_lookup
i24@?0r^v8r^v16
%s-%d-%s
DT_RESPAWN_FOR_NONNATIVE
/tmp/%s-allProcesses[%d].XXXXXX
%s[%d]: [fatal] Couldn't create output directory from template %s, exiting
%s[%d]: [fatal] Couldn't change directory to %s
stderr.txt
Couldn't create error file stderr.txt (%s)
Couldn't replace stderr file with stderr.txt (%s)
Writing output files into %s
Skipping process of wrong architecture:  %d %s
ANALYZING PROCESS %5d: %s
.txt
Couldn't open output file %s (%s)
Couldn't replace output file with %s (%s)
    CHILD ANALYSIS TOOL CRASHED with %s
    %s for %5d: %s
Exception '%s', reason: '%s'
v40@?0i8r*12B20I24I28^B32
Child analysis tool crashed for these processes:
Wrote output files into %s
To print all files in pid order use:  (cd %s; cat `/bin/ls -tr1 *.txt`) 
: terminated; resuming target task
: interrupted; resuming target task
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
SIMULATOR_ROOT
SIMULATOR_SHARED_RESOURCES_DIRECTORY
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
v24@?0{_CSTypeRef=QQ}8
%s[%d]: [fatal] Corpse generated for the process is incomplete, which can happen with processes that use a lot of memory
%s[%d]: Failed to generate corpse from the process: corpse was incomplete which can happen for processes that use a lot of memory
Failed to generate corpse from the process: %d (%s)
%s[%d]: [fatal] %s, exiting
%s[%d]: %s - examining live process instead
BOOL _respawnToolIfNecessaryWithExitStatus(pid_t, task_read_t, VMURespawnToolOptions, int *)
sharedCode.m
Only one of kVMURespawnForAllProcesses and kVMURespawnForAllNonNativeProcesses can be set
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
DT_FORCE_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
%s[%d]: respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but the analysis process does not match the SDK variant of the target process %d.
Analysis of malloc zones may fail.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
DYLD_FORCE_PLATFORM
arm64
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
--al
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
v12@?0I8
%s/usr/bin/%s
v20@?0I8@?<v@?>12
Running in DT_RESPAWN_FOR_NONNATIVE mode -- respawning only if necessary to match target process arch and/or platform.
com.apple.dt.instruments
setPurposeDescription:
setSyntaxDescription:
setSingleHyphenLongNames:
sharedTimer
startWithMessage:
usage:
length
registerOptionWithLongName:shortName:argumentKind:argumentName:optionDescription:flags:handler:
hasPrefix:
UTF8String
parseArguments:withBlock:
directedGraphWithData:error:
localizedDescription
initWithGraph:options:
vmPageSize
kernelPageSize
descriptionOfRegionsAroundAddress:options:maximumLength:memorySizeDivisor:
stackLogReader
regionTracker
processDescriptionString
processName
is64bit
showsPhysFootprint
signpostID
logHandle
endEvent:
startWithCategory:message:
initWithTask:getBinariesList:
description
initWithTask:options:
initWithTask:symbolicator:
stop
intValue
regions
hasFractionalPageSizes
descriptionForRegionTotalsWithOptions:memorySizeDivisor:
type
isEqualToString:
indexOfObjectPassingTest:
columnHeadersWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
countByEnumeratingWithState:objects:count:
protection
isSubmap
range
descriptionWithOptions:maximumLength:memorySizeDivisor:hasFractionalPageSizes:
vmRegionRangeInfoForRange:
userTag
address
size
stackIdentifier
symbolicatedBacktraceForStackID:options:
containsString:
hasSuffix:
stringByResolvingSymlinksInPath
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
attributesOfItemAtPath:error:
fileSize
dataWithContentsOfFile:options:error:
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
appendFormat:
executablePath
parentPid
parentProcessPath
mainBundle
stringByDeletingLastPathComponent
stringByAppendingPathComponent:
stringByStandardizingPath
fileExistsAtPath:
initWithTask:
shouldAnalyzeWithCorpse
numberWithInt:
stringValue
initWithPid:
name
reason
callStackSymbols
valueForEnvVar:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
is64Bit
stringWithFormat:
numberWithUnsignedInt:
generate analysis task
vmmap
examining %@ [%u]
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_port_deallocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dt.SamplingTools.vmmap</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>15.4</string>
<key>DTSDKBuild</key>
<string>19E217</string>
<key>DTSDKName</key>
<string>iphonesimulator15.4.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>15.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.iosurfaceinfo</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>com.apple.rootless.datavault.metadata</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.system-task-ports</key>
<true/>
<key>com.apple.system-task-ports.read</key>
<true/>
<key>com.apple.system-task-ports.read.safe</key>
<true/>
<key>com.apple.system-task-ports.safe</key>
<true/>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
