GLByteCodes
core2
StringRef
StringRef.h
(data || length == 0) && "StringRef cannot be built from a NULL argument with non-null length"
drop_front
size() >= N && "Dropping more elements than exist"
com.apple.opengles
i386
x86_64
/tmp/vertex_shader_llvm_ir%d.txt
/tmp/fragment_shader_llvm_ir%d.txt
getStorage
ErrorOr.h
!HasError && "Cannot get value when an error exists!"
castArgTy
Twine
Twine.h
isValid() && "Invalid twine!"
Str && "StringRef cannot be built from a NULL argument"
back
ilist.h
!empty() && "Called back() on empty list!"
getElementType
DerivedTypes.h
N < NumContainedTys && "Element number out of range!"
doit
Casting.h
Val && "isa<> used on a null pointer"
cast
isa<X>(Val) && "cast<Ty>() argument of incompatible type!"
operator*
Value.h
U && "Cannot dereference end iterator!"
operator++
U && "Cannot increment end iterator!"
operator[]
SmallVector.h
begin() + idx < end()
setPointer
PointerIntPair.h
(PtrWord & ~PointerBitMask) == 0 && "Pointer is not sufficiently aligned"
initEmpty
DenseMap.h
(getNumBuckets() & (getNumBuckets()-1)) == 0 && "# initial buckets must be a power of two!"
setPointerAndInt
(IntWord & ~IntMask) == 0 && "Integer too large for field"
LookupBucketFor
!KeyInfoT::isEqual(Val, EmptyKey) && !KeyInfoT::isEqual(Val, TombstoneKey) && "Empty/Tombstone value shouldn't be inserted into map!"
InsertIntoBucketImpl
TheBucket
moveFromOldBuckets
!FoundVal && "Key already in new map?"
operator--
NodePtr && "--'d off the beginning of an ilist!"
gleLLVMSubmitFunc
gleLLVMTempsDummy
gleLLVMStartFromCurrent
gleLLVMConvertFunc
gleLLVMStartFromVertex
gleLLVMArrayFunc
gleLLVMStartFromArray
gleLLVMElemFunc
gleLLVMStartFromElem
gleLLVMPredicateFALSE
gleLLVMLoadIndexOrOffset
gleLLVMLoadDataFromCtxDoubleInDouble
gleLLVMLoadDataFromVtxFloatInVector
gleLLVMLoadDataFromCtxFloatInVector
gleLLVMLoadDataFromVtxFloatInDouble
gleLLVMLoadDataFromCtxFloatInDouble
gleLLVMLoadDataFromVtxFloatInFloat
gleLLVMLoadDataFromCtxFloatInFloat
gleLLVMLoadDataFromArgFloatInFloat
gleLLVMSetLoadBaseForArray
gleLLVMLoadDataFromAry1ByteInULong
gleLLVMLoadDataFromAry2ByteInULong
gleLLVMLoadDataFromAryIntegerInULong
gleLLVMLoadDataFromAryFloatInDouble
gleLLVMLoadDataFromAryFloatInFloat
gleLLVMLoadDataFromAryFloatInVector
gleLLVMLoadDataFromAryDoubleInDouble
gleLLVMStoreDataToOut1ByteInULong
gleLLVMStoreDataToOut2ByteInULong
gleLLVMStoreDataToOutIntegerInULong
gleLLVMStoreDataToOutFloatInDouble
gleLLVMStoreDataToOutFloatInFloat
gleLLVMStoreDataToOutFloatInVector
gleLLVMStoreDataToOutDoubleInDouble
gleLLVMStoreDataToCtxIntegerInULong
gleLLVMStoreDataToCtxFloatInDouble
gleLLVMStoreDataToCtxFloatInFloat
gleLLVMStoreDataToCtxFloatInVector
gleLLVMLoadDataFromMatFloatInDouble
gleLLVMLoadDataFromMatFloatInFloat
gleLLVMStoreMaterial
gleLLVMStoreVertexIndex
gleLLVMStoreInstanceIndex
gleLLVMLoadStorePrimitiveIndex
gleLLVMLoadDataFromCtxULongInULong
gleLLVMStoreDataToOutULongInULong
gleLLVMIncrementVtx
gleLLVMPredicateIncrementIndex
gleLLVMEndStoreVertex
gleLLVMEnd
glgRunProcessor
glgRunDeclarationDummy
loadColor
loadVecColor
loadColor_NOOP
loadVecColor_NOOP
loadColor_LUM_UB
loadVecColor_LUM_UB
loadColor_LUM_B
loadVecColor_LUM_B
loadColor_LUM_US
loadVecColor_LUM_US
loadColor_LUM_S
loadVecColor_LUM_S
loadColor_LUM_UI
loadVecColor_LUM_UI
loadColor_LUM_BM
loadVecColor_LUM_BM
loadColor_RGBA_UB
loadVecColor_RGBA_UB
loadColor_RGBA_B
loadVecColor_RGBA_B
loadColor_RGBA_US
loadVecColor_RGBA_US
loadColor_RGBA_S
loadVecColor_RGBA_S
loadColor_RGBA_UI
loadVecColor_RGBA_UI
loadColor_RGBA_US4444
loadVecColor_RGBA_US4444
loadColor_RGBA_US4444R
loadVecColor_RGBA_US4444R
loadColor_RGBA_US5551
loadVecColor_RGBA_US5551
loadColor_RGBA_US1555R
loadVecColor_RGBA_US1555R
loadColor_RGBA_UI8888
loadVecColor_RGBA_UI8888
loadColor_RGBA_UI8888R
loadVecColor_RGBA_UI8888R
loadColor_RGBA_UI1010102
loadVecColor_RGBA_UI1010102
loadColor_RGBA_UI2101010R
loadVecColor_RGBA_UI2101010R
loadColor_ARGB_UB
loadVecColor_ARGB_UB
loadColor_ARGB_B
loadVecColor_ARGB_B
loadColor_ARGB_US
loadVecColor_ARGB_US
loadColor_ARGB_S
loadVecColor_ARGB_S
loadColor_ARGB_UI
loadVecColor_ARGB_UI
loadColor_BGRA_UB
loadVecColor_BGRA_UB
loadColor_BGRA_B
loadVecColor_BGRA_B
loadColor_BGRA_US
loadVecColor_BGRA_US
loadColor_BGRA_S
loadVecColor_BGRA_S
loadColor_BGRA_UI
loadVecColor_BGRA_UI
loadColor_BGRA_US4444
loadVecColor_BGRA_US4444
loadColor_BGRA_US4444R
loadVecColor_BGRA_US4444R
loadColor_BGRA_US5551
loadVecColor_BGRA_US5551
loadColor_BGRA_US1555R
loadVecColor_BGRA_US1555R
loadColor_BGRA_UI8888
loadVecColor_BGRA_UI8888
loadColor_BGRA_UI8888R
loadVecColor_BGRA_UI8888R
loadColor_BGRA_UI1010102
loadVecColor_BGRA_UI1010102
loadColor_BGRA_UI2101010R
loadVecColor_BGRA_UI2101010R
loadColor_ABGR_UB
loadVecColor_ABGR_UB
loadColor_ABGR_B
loadVecColor_ABGR_B
loadColor_ABGR_US
loadVecColor_ABGR_US
loadColor_ABGR_S
loadVecColor_ABGR_S
loadColor_ABGR_UI
loadVecColor_ABGR_UI
loadColor_RGB_UB
loadVecColor_RGB_UB
loadColor_RGB_B
loadVecColor_RGB_B
loadColor_RGB_US
loadVecColor_RGB_US
loadColor_RGB_S
loadVecColor_RGB_S
loadColor_RGB_UI
loadVecColor_RGB_UI
loadColor_RGB_UB332
loadVecColor_RGB_UB332
loadColor_RGB_UB233R
loadVecColor_RGB_UB233R
loadColor_RGB_US565
loadVecColor_RGB_US565
loadColor_RGB_US565R
loadVecColor_RGB_US565R
loadColor_RGB_UI10F11F11FR
loadVecColor_RGB_UI10F11F11FR
loadColor_RGB_UI5E999MR
loadVecColor_RGB_UI5E999MR
loadColor_BGR_UB
loadVecColor_BGR_UB
loadColor_BGR_B
loadVecColor_BGR_B
loadColor_BGR_US
loadVecColor_BGR_US
loadColor_BGR_S
loadVecColor_BGR_S
loadColor_BGR_UI
loadVecColor_BGR_UI
loadColor_RG_UB
loadVecColor_RG_UB
loadColor_RG_B
loadVecColor_RG_B
loadColor_RG_US
loadVecColor_RG_US
loadColor_RG_S
loadVecColor_RG_S
loadColor_RG_UI
loadVecColor_RG_UI
loadColor_LA_UB
loadVecColor_LA_UB
loadColor_LA_B
loadVecColor_LA_B
loadColor_LA_US
loadVecColor_LA_US
loadColor_LA_S
loadVecColor_LA_S
loadColor_LA_UI
loadVecColor_LA_UI
loadColor_LA_US88
loadVecColor_LA_US88
loadColor_422
loadVecColor_422
storeColor
storeVecColor
storeColor_NOOP
storeVecColor_NOOP
storeColor_LUM_UB
storeVecColor_LUM_UB
storeColor_LUM_US
storeVecColor_LUM_US
storeColor_LUM_UI
storeVecColor_LUM_UI
storeColor_RGBA_UB
storeVecColor_RGBA_UB
storeColor_RGBA_US
storeVecColor_RGBA_US
storeColor_RGBA_UI
storeVecColor_RGBA_UI
storeColor_RGBA_US4444
storeVecColor_RGBA_US4444
storeColor_RGBA_US4444R
storeVecColor_RGBA_US4444R
storeColor_RGBA_US5551
storeVecColor_RGBA_US5551
storeColor_RGBA_US1555R
storeVecColor_RGBA_US1555R
storeColor_RGBA_UI8888
storeVecColor_RGBA_UI8888
storeColor_RGBA_UI8888R
storeVecColor_RGBA_UI8888R
storeColor_RGBA_UI1010102
storeVecColor_RGBA_UI1010102
storeColor_RGBA_UI2101010R
storeVecColor_RGBA_UI2101010R
storeColor_ARGB_UB
storeVecColor_ARGB_UB
storeColor_ARGB_US
storeVecColor_ARGB_US
storeColor_ARGB_UI
storeVecColor_ARGB_UI
storeColor_BGRA_UB
storeVecColor_BGRA_UB
storeColor_BGRA_US
storeVecColor_BGRA_US
storeColor_BGRA_UI
storeVecColor_BGRA_UI
storeColor_BGRA_US4444
storeVecColor_BGRA_US4444
storeColor_BGRA_US4444R
storeVecColor_BGRA_US4444R
storeColor_BGRA_US5551
storeVecColor_BGRA_US5551
storeColor_BGRA_US1555R
storeVecColor_BGRA_US1555R
storeColor_BGRA_UI8888
storeVecColor_BGRA_UI8888
storeColor_BGRA_UI8888R
storeVecColor_BGRA_UI8888R
storeColor_BGRA_UI1010102
storeVecColor_BGRA_UI1010102
storeColor_BGRA_UI2101010R
storeVecColor_BGRA_UI2101010R
storeColor_ABGR_UB
storeVecColor_ABGR_UB
storeColor_ABGR_US
storeVecColor_ABGR_US
storeColor_ABGR_UI
storeVecColor_ABGR_UI
storeColor_RGB_UB
storeVecColor_RGB_UB
storeColor_RGB_US
storeVecColor_RGB_US
storeColor_RGB_UI
storeVecColor_RGB_UI
storeColor_RGB_UB332
storeVecColor_RGB_UB332
storeColor_RGB_UB233R
storeVecColor_RGB_UB233R
storeColor_RGB_US565
storeVecColor_RGB_US565
storeColor_RGB_US565R
storeVecColor_RGB_US565R
storeColor_RGB_UI10F11F11FR
storeVecColor_RGB_UI10F11F11FR
storeColor_RGB_UI5E999MR
storeVecColor_RGB_UI5E999MR
storeColor_BGR_UB
storeVecColor_BGR_UB
storeColor_BGR_US
storeVecColor_BGR_US
storeColor_BGR_UI
storeVecColor_BGR_UI
storeColor_RG_UB
storeVecColor_RG_UB
storeColor_RG_US
storeVecColor_RG_US
storeColor_RG_UI
storeVecColor_RG_UI
storeColor_LA_UB
storeVecColor_LA_UB
storeColor_LA_US
storeVecColor_LA_US
storeColor_LA_UI
storeVecColor_LA_UI
storeColor_LA_US88
storeVecColor_LA_US88
storeColor_422
storeVecColor_422
glgSetupFloatConversion
glgVectorFloatConversion
glgScalarFloatConversion
glgProcessColor
loadDepth
loadVecDepth
loadDepth_NOOP
loadVecDepth_NOOP
loadDepth_DEPTH_UB
loadVecDepth_DEPTH_UB
loadDepth_DEPTH_B
loadVecDepth_DEPTH_B
loadDepth_DEPTH_US
loadVecDepth_DEPTH_US
loadDepth_DEPTH_S
loadVecDepth_DEPTH_S
loadDepth_DEPTH_UI
loadVecDepth_DEPTH_UI
loadDepth_DEPTH_STENCIL
loadVecDepth_DEPTH_STENCIL
storeDepth
storeVecDepth
storeDepth_NOOP
storeVecDepth_NOOP
storeDepth_DEPTH_UB
storeVecDepth_DEPTH_UB
storeDepth_DEPTH_US
storeVecDepth_DEPTH_US
storeDepth_DEPTH_UI
storeVecDepth_DEPTH_UI
storeDepth_DEPTH_STENCIL
storeVecDepth_DEPTH_STENCIL
glgProcessDepth
storeStencil
storeVecStencil
loadStencil
loadVecStencil
glgProcessStencil
storeDepthStencil
storeVecDepthStencil
loadDepthStencil
loadVecDepthStencil
glgProcessDepthStencil
PUSHA
POPA
PK2H
PK2US
PK4B
PK4UB
UP2H
UP2US
UP4B
UP4UB
DP2A
LOOP
ELSE
ENDIF
ENDLOOP
ENDREP
program
result
state
vertex
OPTION
ADDRESS
TEMP
PARAM
ATTRIB
OUTPUT
ALIAS
fragment
texture
DP4 dst.x, mat[0], vec;
DP4 dst.y, mat[1], vec;
DP4 dst.z, mat[2], vec;
DP4 dst.w, mat[3], vec;
MUL tmp, mat[0], vec.x;
MAD tmp, mat[1], vec.y, tmp;
MAD tmp, mat[2], vec.z, tmp;
MAD dst, mat[3], vec.w, tmp;
MVMULT
TMVMULT
position
half
start
main
%sC0
%sC1
%s_SAT
%sC_SAT
%sC0_SAT
%sC1_SAT
%sRC
%sHC
%sXC
%sR_SAT
%sH_SAT
%sX_SAT
%sRC_SAT
%sHC_SAT
%sXC_SAT
missing or invalid version
unrecognised option
unrecognised statement
unrecognised block parameter
unexpected option
unexpected statement
malformed declaration
malformed array specifier
malformed destination mask
malformed source swizzle
malformed source texture
malformed extended swizzle code
invalid condition mask
invalid texture coordinate plane
invalid identifier name
invalid attribute pair
invalid swizzle for scalar op
invalid number
invalid address identifier
invalid source identifier
invalid dest identifier
undefined destination identifier
undefined source identifier
undefined branch label
an identifier with this name already exists
duplicate branch label
missing semicolon
missing comma
identifier is not an array
identifier is an array
use of result.position illegal with ARB_position_invariant
out of range array index
out of range indirect offset
incorrect array component count
incorrect argument count for macro
conflicting option specification
conflicting texture target
impossible array
precision qualifier only allowed for temporaries or outputs
unpack instructions cannot take SHORT source
pack instructions cannot take SHORT destination
unexpected end of program
program env limit exceeded
program local limit exceeded
program matrices limit exceeded
program matrix stack depth exceeded
program instruction count exceeded
program temporary count exceeded
program parameter count exceeded
program attribute count exceeded
program address registers limit exceeded
texture unit limit exceeded
vertex unit limit exceeded
palette matrix limit exceeded
clip plane limit exceeded
light limit exceeded
vertex attribute limit exceeded
draw buffer index exceeded
Error in macro %s on line %u: %s (hint: '%s')
Error on line %u: %s (hint: '%s')
ARB_Program
#main
returnValue
air.perspective
air.position
air.center
air.arg_type_name
air.arg_name
air.front_facing
user(front_color)
user(sec_front_color)
user(tex_coord%u)
user(slot%u)
air.fragment_input
air.location
air.render_target
air.depth
air.depth_qualifier
air.any
air.fragment
air.vertex_input
air.location_index
attr%d
air.clip_vertex
air.point_size
air.clip_distance
user(back_color)
user(sec_back_color)
air.vertex_output
air.vertex
gleLLVMVPTransform
glvmInterpretVPTransformFour
glvmTempDeclarationDummyVP
glvmOperationInitSub
glvmOperationInitMasksVP
glvmOperationInitMasksForNested
glvmOperationFUNCSTART
glvmPredicateFALSE
glvmLoadSourceAttribVP
glvmLoadSourceTemp
glvmLoadSourceAddress
glvmLoadSourceParam
glvmOperationARL
glvmOperationARR
glvmOperationARA
glvmOperationDispatchVP
glvmPredicateBRA
glvmOperationRET
glvmOperationTARGBRA
glvmPredicateWHILE
glvmPredicateENDWHILE
glvmPredicateBRK
glvmOperationTARGBRK
glvmPredicateCONT
glvmOperationTARGCONT
glvmPredicateIF
glvmPredicateELSE
glvmPredicateENDIF
glvmPredicateSWITCH
glvmPredicateENDSWITCH
glvmPredicateCASE
glvmPredicateDEFAULT
glvmOperationABS
glvmOperationACS
glvmOperationALL
glvmOperationANY
glvmOperationASN
glvmOperationCEI
glvmOperationCOS
glvmOperationDEG
glvmOperationEX2
glvmOperationEXPE
glvmOperationFLR
glvmOperationFRC
glvmOperationLEN
glvmOperationLG2
glvmOperationLOGE
glvmOperationNOT
glvmOperationNRM
glvmOperationNSE
glvmOperationRAD
glvmOperationSIN
glvmOperationSQT
glvmOperationSSG
glvmOperationTAN
glvmOperationROUND
glvmOperationROUNDEVEN
glvmOperationTRUNCATE
glvmOperationCOMP
glvmOperationINVERSESQRT
glvmOperationCOSH
glvmOperationSINH
glvmOperationTANH
glvmOperationASINH
glvmOperationACOSH
glvmOperationATANH
glvmOperationISNAN
glvmOperationISINF
glvmOperationTO_BITS
glvmOperationFROM_BITS
glvmOperationEXTRACT_EXPONENT
glvmOperationEXTRACT_SIGNIFICAND
glvmOperationBITFIELD_REVERSE
glvmOperationBITCOUNT
glvmOperationFIND_LSB
glvmOperationFIND_MSB
glvmOperationPK2US
glvmOperationPK4UB
glvmOperationPK4B
glvmOperationPK2H
glvmOperationUP2US
glvmOperationUP4UB
glvmOperationUP4B
glvmOperationUP2H
glvmOperationPK2W
glvmOperationUP2W
glvmOperationADD
glvmOperationANL
glvmOperationDIV
glvmOperationDOT
glvmOperationMAX
glvmOperationMIN
glvmOperationMLC
glvmOperationMOD
glvmOperationMUL
glvmOperationORL
glvmOperationPOW
glvmOperationRFL
glvmOperationSEQ
glvmOperationSGE
glvmOperationSGT
glvmOperationSLE
glvmOperationSLT
glvmOperationSNE
glvmOperationSUB
glvmOperationXPD
glvmOperationXRL
glvmOperationAND
glvmOperationOR
glvmOperationXOR
glvmOperationSHL
glvmOperationSHR
glvmOperationDISTANCE
glvmOperationLDEXP
glvmOperationMUL_HB
glvmOperationCLM
glvmOperationFFW
glvmOperationLRP
glvmOperationRFR
glvmOperationMAD
glvmOperationSMS
glvmOperationEXP
glvmOperationLIT
glvmOperationLOG
glvmOperationMOV
glvmOperationRCC
glvmOperationRCP
glvmOperationRSQ
glvmOperationSCS
glvmOperationDP3
glvmOperationDP4
glvmOperationDPH
glvmOperationDST
glvmOperationSEL
glvmOperationSTR
glvmOperationSFL
glvmOperationCMP
glvmOperationSWZ
glvmOperationZERO
glvmSamplerFetch
glvmSamplerLoadTexels
glvmSamplerSize
glvmSamplerSample
glvmSamplerInvalid
glvmOperationATN
glvmOperationATN2
glvmLoadDestTemp
glvmOperationDSL
glvmOperationBDL
glvmOperationLOAD
glvmOperationSTOREWithMaskVP
glvmStoreDestOutputVP
glvmStoreDestTemp
glvmStoreDestAddress
glvmStoreDestOutputWithMaskVP
glvmStoreDestTempWithMask
glvmStoreDestAddressWithMask
glvmOperationNoOp
glvmZeroViewportIndex
glvmWindowTransformVP
glvmInterpretVPTransformFourInner
gleLLVMCPTransform
glvmInterpretCPTransformPatch
glvmTempDeclarationDummyCP
glvmOperationInitMasksCP
glvmLoadSourceAttribCP
glvmOperationVRLCP
glvmOperationVRLWithMaskCP
glvmOperationDispatchCP
glvmOperationBARRIER
glvmOperationSTOREWithMaskCP
glvmStoreDestOutputCP
glvmStoreDestOutputWithMaskCP
glvmInterpretCPTransformPatchInner
gleLLVMEPTransform
glvmInterpretEPTransformPatch
glvmTempDeclarationDummyEP
glvmOperationInitMasksEP
glvmLoadSourceAttribEP
glvmOperationVRLEP
glvmOperationVRLWithMaskEP
glvmOperationDispatchEP
glvmOperationSTOREWithMaskEP
glvmStoreDestOutputEP
glvmStoreDestOutputWithMaskEP
glvmWindowTransformEP
glvmInterpretEPTransformPatchInner
gleLLVMGPTransform
glvmInterpretGPTransformPrimitive
glvmTempDeclarationDummyGP
glvmOperationInitMasksGP
glvmOperationInitMasksForNestedGP
glvmLoadSourceAttribGP
glvmOperationVRLGP
glvmOperationVRLWithMaskGP
glvmOperationDispatchGP
glvmOperationEMITSTREAMVERTEX
glvmOperationEMITSTREAMVERTEXWithMask
glvmOperationENDSTREAMPRIMITIVE
glvmOperationENDSTREAMPRIMITIVEWithMask
glvmOperationSTOREWithMaskGP
glvmStoreDestOutputGP
glvmStoreDestOutputWithMaskGP
glvmOperationENDSTREAMPRIMITIVES
glvmWindowTransformGP
glvmInterpretGPTransformPrimitiveInner
gldLLVMFPTransformFallback2x2
gldLLVMFPTransformFallback
gldLLVMFPTransform2x2
gldLLVMFPTransform
glvmPreloadFPTransformFour
glvmPreloadDeclarationDummyFP
glvmOperationStackPreloadBuffer
glvmOperationStackPreloadDepth
glvmOperationStackPreloadStencil
glvmOperationStackPreload
glvmInterpretFPTransformFour
glvmInterpretDeclarationDummyFP
glvmPreloadPositionAttrib
glvmPackDepthAndW
glvmRasterOpDepthBoundsTest
glvmRasterOpMultisampleCoverageMask
glvmRasterOpDepthStencilTest
glvmOperationInitMasksFP
glvmPreloadSourceAttribs
glvmPreloadFrontFacingAttrib
glvmPreloadPrimitiveIDAttrib
glvmPreloadSampleIDAttrib
glvmPreloadSamplePositionAttrib
glvmPreloadSampleMaskAttrib
glvmInitializeDepthOutput
glvmTestForEmptyMask
glvmLoadSourceAttribFP
glvmOperationDispatchFP
glvmPredicateENDWHILEFP
glvmPredicateCONTFP
glvmOperationDDX
glvmOperationDDY
glvmOperationFWD
glvmOperationINTERPOLATE_AT_SAMPLE
glvmOperationINTERPOLATE_AT_CENTROID
glvmOperationINTERPOLATE_AT_OFFSET
glvmSamplerQueryLOD
glvmOperationSAT
glvmOperationKIL
glvmOperationDISCARD
glvmOperationKILWithMask
glvmOperationDISCARDWithMask
glvmOperationSTOREWithMaskFP
glvmStoreDestOutputFP
glvmStoreDestOutputWithMaskFP
glvmApplyAA
glvmRasterOpMultisampleAlphaCoverage
glvmMoveColorSource
glvmRasterOpMultisampleAlphaOne
glvmRasterOpMultisampleSampleMask
glvmRasterOpAlphaTest
glvmPackXYZWRGBAOutput
glvmRasterOpWriteFallback
glvmPackDepthOutput
glvmRasterOpFragmentCount
glvmRasterOpRead
glvmRasterOpBlend
glvmRasterOpPack
glvmRasterOpLogicOp
glvmRasterOpMask
glvmRasterOpWrite
glvmInterpretFPTransformFourInner
Hash (Pointer)
Hash Storage (Pointer)
Hash (Data)
Hash Storage (Data)
Hash Storage (String, growth)
Hash Storage (Pointer, growth)
llvm codegen extra
glsl shader
air.tess_evaluation
OpenGL ES GLSL
air.language_version
air.compile.fast_math_disable
air.compile_options
air.compile.fast_math_enable
air.compile.denorms_disable
air.compile.native_double_disable
Vector Storage (unsigned)
Vector Storage (unsigned, growth)
functionParameters
subroutines
Vector Storage (GLPLLVMSubroutine *, growth)
Vector Storage (GLPLLVMTextureSampler, growth)
struct._depth_1d_t
struct._texture_1d_t
struct._depth_1d_array_t
struct._texture_1d_array_t
struct._depth_2d_t
struct._texture_2d_t
struct._texture_3d_t
struct._depth_cube_t
struct._texture_cube_t
struct._depth_2d_array_t
struct._texture_2d_array_t
struct._texture_buffer_1d_t
struct._depth_cube_array_t
struct._texture_cube_array_t
struct._texture_2d_ms_t
struct._texture_2d_ms_array_t
struct._sampler_t
LLVM Buffer Object description
Vector Storage (GLPLLVMBufferDescription *, growth)
TF Buffer description
Vector Storage (GLPLLVMTFBufferDescription *, growth)
unhandled primitive type: %s
%s%s.%s%s.%s
air.convert
v2f16
v2f32
v3f16
v3f32
v4f16
v4f32
v2i16
v2i32
v3i16
v3i32
v4i16
v4i32
v2f64
v3f64
v4f64
v2i1
v3i1
v4i1
air.ceil
air.floor
air.fract
air.fast_sqrt
air.sqrt
air.fast_exp2
air.exp2
air.fast_log2
air.log2
air.fast_sin
air.sin
air.fast_cos
air.cos
air.fast_tan
air.tan
air.fast_asin
air.asin
air.fast_acos
air.acos
air.fast_sinh
air.sinh
air.fast_cosh
air.cosh
air.fast_tanh
air.tanh
air.fast_asinh
air.asinh
air.fast_acosh
air.acosh
air.fast_atanh
air.atanh
air.fast_exp
air.exp
air.fast_log
air.log
air.trunc
air.fast_rsqrt
air.rsqrt
air.round
air.rint
air.fwidth
air.dfdx
air.dfdy
air.mad
air.gamma_compress
air.gamma_expand
air.gamma_compress_xr
air.gamma_expand_xr
air.all
air.sign
air.convert.f.v2f32.f.v2f16
air.pack.unorm2x16
air.unpack.unorm2x16
air.pack.snorm4x8
air.pack.unorm4x8
air.unpack.snorm4x8
air.unpack.unorm4x8
air.clamp
air.noise1
air.noise2
air.noise3
air.noise4
air.fast_atan2
air.atan2
air.fast_atan
air.atan
air.mod
air.dot
air.fast_powr
air.powr
air.abs
air.fabs
air.min
air.fast_fmin
air.fmin
air.max
air.fast_fmax
air.fmax
air.gs_tf_store
air.popcount
air.fast_ldexp
air.ldexp
air.mul_hi
air.reverse_bits
air.ctz
air.clz
air.cs_barrier
air.emit_vertex
air.end_primitive
air.fma
GEPList
Vector Storage (GLPGepEntry)
Vector Storage (GLPGepEntry, growth)
afterSwitch
case
%s.%s
air.convert.f.%s.f.%s
%s%s.%s
air.mix
air.sample_
air.gather_compare_
air.gather_compare_offsets_
air.sample_compare_
air.gather_
air.gather_offsets_
air.read_
_grad
%s%s%s%s.%s
texVal
depth_1d
texture_1d
texture_buffer_1d
depth_1d_array
texture_1d_array
depth_2d
texture_2d
texture_3d
depth_cube
texture_cube
depth_2d_array
texture_2d_array
depth_cube_array
texture_cube_array
texture_2d_ms
texture_2d_ms_array
air.get_width_
air.get_height_
air.get_array_size_
air.get_depth_
%s%s
air.compute_lod_%s
air.interpolate_offset_no_perspective
air.interpolate_centroid_no_perspective
air.interpolate_sample_no_perspective
air.interpolate_center_no_perspective
air.interpolate_offset_perspective
air.interpolate_centroid_perspective
air.interpolate_sample_perspective
air.interpolate_center_perspective
Vector Storage (GLPVariableObject *, growth)
struct._interpolant_t
subroutine
Vector Storage (GLPLLVMSubroutineFunction *, growth)
air.vertex_id
air.instance_id
attrib%d
air.sample_id
uint
air.buffer
air.buffer_size
air.read
air.default_uniform
air.uniform
air.binding
air.write
air.vertex_transform_feedback
air.stride
air.stream
air.texture
air.sample
air.sampler
void
%s%u
%s%ux%u
float
double
bool
short
ushort
air.geometry_input
user(sec_back_color
user(patch%u)
air.primitive_id
air.invocation_id
air.patch_vertices_in
air.position_in_patch
air.edge_tessellation_factor
air.inside_tessellation_factor
air.point_coord
air.sample_mask_in
air.color
air.secondary_color
air.flat
air.no_perspective
air.interpolation_function
air.centroid
air.geometry_output
air.render_target_array_index
air.viewport_array_index
air.front_color
air.back_color
air.front_secondary_color
air.back_secondary_color
air.vec4_size
%s<%s, %s>
depth2d
texture1d
texture_buffer
depth2d_array
texture1d_array
texture2d
texture3d
depthcube
texturecube
texture2d_array
depthcube_array
texturecube_array
texture2d_ms
texture2d_ms_array
sample
read
Unsupported PP_TEX_TARGET: %d
allocaBlock
globalBlock
block
air.get_vertex_id.i32
air.get_instance_id.i32
air.get_sample_position.v2f32
if.then
if.else
if.end
while.body0
while.body1
while.header
while.end
default
air.discard_fragment
air.get_num_samples.i32
air.tess_control
air.geometry
air.sample_mask
_sampler_t
uSampler
_sampler_shadow_t
uShadowSampler
_image1d_t
PU3AS110_image1d_t
_image2d_t
PU3AS110_image2d_t
_image3d_t
PU3AS110_image3d_t
_imageCube_t
PU3AS112_imageCube_t
_image2d_array_t
PU3AS116_image2d_array_t
_Z%d%s
LLVMInt64TypeInContext
LLVMInt32TypeInContext
LLVMInt16TypeInContext
LLVMInt8TypeInContext
LLVMInt1TypeInContext
LLVMFloatTypeInContext
LLVMHalfTypeInContext
LLVMVoidTypeInContext
LLVMDoubleTypeInContext
LLVMVectorType
LLVMPointerType
LLVMFunctionType
LLVMAddFunctionAttr
LLVMAddFunction
LLVMGetNamedFunction
LLVMSetGlobalConstant
LLVMSetInitializer
LLVMGetParam
LLVMCreateBuilderInContext
LLVMDisposeBuilder
LLVMAppendBasicBlock
LLVMGetInsertBlock
LLVMMoveBasicBlockBefore
LLVMPositionBuilderAtEnd
LLVMBuildRetVoid
LLVMBuildRet
LLVMEmitBranch
LLVMMDNodeInContext
LLVMMDStringInContext
LLVMNamedMetadata
LLVMConstInt
LLVMConstUint64
LLVMConstReal
LLVMConstVector
LLVMConstArray
LLVMConstNull
LLVMConstAllOnes
LLVMGetUndef
LLVMArrayType
LLVMStructTypeInContext
LLVMTypeOf
LLVMGetElementType
LLVMGetNamedType
LLVMBuildFunctionCall
LLVMBuildAlloca
LLVMBuildLoad
LLVMBuildStore
LLVMBuildExtractElement
LLVMBuildInsertElement
LLVMBuildShuffleVector
LLVMBuildGEP
LLVMBuildInsertValue
LLVMBuildExtractValue
LLVMBuildAdd
LLVMBuildFAdd
LLVMBuildSub
LLVMBuildFSub
LLVMBuildMul
LLVMBuildFMul
LLVMBuildUDiv
LLVMBuildSDiv
LLVMBuildFDiv
LLVMBuildURem
LLVMBuildSRem
LLVMBuildFRem
LLVMBuildShl
LLVMBuildLShr
LLVMBuildAShr
LLVMBuildAnd
LLVMBuildOr
LLVMBuildXor
LLVMBuildNeg
LLVMBuildFNeg
LLVMBuildNot
LLVMBuildTrunc
LLVMBuildZExt
LLVMBuildSExt
LLVMBuildFPToSI
LLVMBuildFPToUI
LLVMBuildUIToFP
LLVMBuildSIToFP
LLVMBuildFPTrunc
LLVMBuildFPExt
LLVMBuildPtrToInt
LLVMBuildIntToPtr
LLVMBuildBitCast
LLVMBuildPointerCast
LLVMBuildIntCast
LLVMBuildFPCast
LLVMBuildICmp
LLVMBuildFCmp
LLVMBuildSelect
LLVMBuildSwitch
LLVMAddCase
LLVMBuildPhi
LLVMAddIncoming
LLVMGetSwitchDefaultDest
LLVMBuildBr
LLVMBuildCondBr
LLVMDIBuilderCreate
LLVMDIBuilderDelete
LLVMDIBuilderCreateCompileUnit
LLVMDIBuilderCreateFile
LLVMDIBuilderCreateSubProgram
LLVMSetCurrentLine
LLVMClearCurrentLine
LLVMPackVector
LLVMUnpackVector
LLVMCallFunction
LLVMGetInfinityProxy
LLVMAddGlobalInAddressSpace
Dv%d_
S%d_
vec2
vec3
vec4
ivec2
ivec3
ivec4
bvec2
bvec3
bvec4
mat2
mat3
mat4
sampler1D
sampler2D
sampler3D
samplerCube
sampler1DShadow
sampler2DShadow
mat2x3
mat2x4
mat3x2
mat3x4
mat4x2
mat4x3
sampler2DRect
sampler2DRectShadow
sampler1DArray
sampler2DArray
samplerBuffer
sampler1DArrayShadow
sampler2DArrayShadow
samplerCubeShadow
unsigned int
uvec2
uvec3
uvec4
isampler1D
isampler2D
isampler3D
isamplerCube
isampler2DRect
isampler1DArray
isampler2DArray
isamplerBuffer
usampler1D
usampler2D
usampler3D
usamplerCube
usampler2DRect
usampler1DArray
usampler2DArray
usamplerBuffer
sampler2DMS
sampler2DMSArray
isampler2DMS
isampler2DMSArray
usampler2DMS
usampler2DMSArray
dvec2
dvec3
dvec4
dmat2
dmat3
dmat4
dmat2x3
dmat2x4
dmat3x2
dmat3x4
dmat4x2
dmat4x3
samplerCubeArray
samplerCubeArrayShadow
isamplerCubeArray
usamplerCubeArray
no error
too little data
unseen pointer
invalid magic number
invalid version
invalid entry offset
invalid entry length
Vector Storage (void *)
GLProgrammability: deserial error (%s) at offset %u into data of length %u with SHA1 %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
/System/Library/Frameworks/OpenGLES.framework/libGLProgrammability.dylib
glpGetPrimitiveType
copyBitCodeStorage
glp_llvm_ir_util.cpp
storage.size() + headerSize <= bufferSize
air64-apple-ios
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-n8:16:32
createFunction
lexicalBlocks.size() == 1
main(
uint4
float2
float4
half4
entry
OpenGL ES Program
binding
opengl.texture_unit
opengl.sampler_unit
opengl.context_state
opengl.kernel_arg_info
graphics.interpolate.center.4xi
graphics.vertex.readAttribute.4xi
graphics.interpolate.center.%dx%s
graphics.vertex.readAttribute.%dxf
clamp
native_sqrt
__cl_fabs
native_rsqrt
native_recip
__cl_fmin
__cl_fmax
native_exp
native_exp2
cross
native_powr
if_entry_block
if_else_or_end_block
if_end_block
rep_entry_block
rep_end_block
%s<float, sample>
read_imagef
read_imageh
vextexId
graphics.vertex.writeOutput
graphics.vertex.writePosition
graphics.vertex.writePointSize
graphics.vertex.writeClipVertex
graphics.vertex.writeClipDistance
Vertex_State_Program
vertexShader
graphics.vertexOutputs
graphics.pixel.readFrontFacing
graphics.pixel.readPointCoordf
graphics.pixel.writeOutput
graphics.pixel.writeDepth
Fragment_State_Program
fragmentShader
graphics.fragmentInputs
on_hint_fastest
ARB_precision_hiion_hint_nicest
NV_fragment_progagment_program2
_program_shadow
ARB_fragment_proition_invariant
ARB_position_invvertex_program2
NV_vertex_progravertex_program3
nt_size
APPLE_vertex_poiruntime_compile
APPLE_no_runtimeAPPLE_special_ops
vH7B
W4vC
9Y>)F$
MbP?-C
]r2<
 9^;Q
cwz}
DDDDDD
D *0<
<<<<<<<<<<<<<<<<<<<
9bo}GU
WW\WWWWWWWWWWWWWWWWWW-WW'WWWW
WWWWWWWT8QKKVKKKKKKKKKKKKKKKKKK8KK2KKKK
KKKKKKKF
3333
9999
[[[[
_bbHHO
5555
vH7B
W4vC
9Y>)F$
MbP?-C
]r2<
 9^;Q
NSZblsby
*0*******49***>
TPZVa]PPPPPPPPPPPPPPPPPPPPPPPPPPTPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPaaPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPT
$-69<?
KT]f
#:?DI~NS
kkkkk
################!
######
####!
#############
%1(BH
GLByteCodes
StringRef
StringRef.h
(data || length == 0) && "StringRef cannot be built from a NULL argument with non-null length"
drop_front
size() >= N && "Dropping more elements than exist"
com.apple.opengles
armv7
arm64
/tmp/vertex_shader_llvm_ir%d.txt
/tmp/fragment_shader_llvm_ir%d.txt
cortex-a8
cyclone
core2
getStorage
ErrorOr.h
!HasError && "Cannot get value when an error exists!"
castArgTy
Twine
Twine.h
isValid() && "Invalid twine!"
Str && "StringRef cannot be built from a NULL argument"
back
ilist.h
!empty() && "Called back() on empty list!"
getElementType
DerivedTypes.h
N < NumContainedTys && "Element number out of range!"
doit
Casting.h
Val && "isa<> used on a null pointer"
cast
isa<X>(Val) && "cast<Ty>() argument of incompatible type!"
operator*
Value.h
U && "Cannot dereference end iterator!"
operator++
U && "Cannot increment end iterator!"
operator[]
SmallVector.h
begin() + idx < end()
setPointer
PointerIntPair.h
(PtrWord & ~PointerBitMask) == 0 && "Pointer is not sufficiently aligned"
initEmpty
DenseMap.h
(getNumBuckets() & (getNumBuckets()-1)) == 0 && "# initial buckets must be a power of two!"
setPointerAndInt
(IntWord & ~IntMask) == 0 && "Integer too large for field"
LookupBucketFor
!KeyInfoT::isEqual(Val, EmptyKey) && !KeyInfoT::isEqual(Val, TombstoneKey) && "Empty/Tombstone value shouldn't be inserted into map!"
InsertIntoBucketImpl
TheBucket
moveFromOldBuckets
!FoundVal && "Key already in new map?"
operator--
NodePtr && "--'d off the beginning of an ilist!"
gleLLVMSubmitFunc
gleLLVMTempsDummy
gleLLVMStartFromCurrent
gleLLVMConvertFunc
gleLLVMStartFromVertex
gleLLVMArrayFunc
gleLLVMStartFromArray
gleLLVMElemFunc
gleLLVMStartFromElem
gleLLVMPredicateFALSE
gleLLVMLoadIndexOrOffset
gleLLVMLoadDataFromCtxDoubleInDouble
gleLLVMLoadDataFromVtxFloatInDouble
gleLLVMLoadDataFromCtxFloatInDouble
gleLLVMLoadDataFromVtxFloatInFloat
gleLLVMLoadDataFromCtxFloatInFloat
gleLLVMLoadDataFromArgFloatInFloat
gleLLVMSetLoadBaseForArray
gleLLVMLoadDataFromAry1ByteInULong
gleLLVMLoadDataFromAry2ByteInULong
gleLLVMLoadDataFromAryIntegerInULong
gleLLVMLoadDataFromAryFloatInDouble
gleLLVMLoadDataFromAryFloatInFloat
gleLLVMLoadDataFromAryDoubleInDouble
gleLLVMStoreDataToOut1ByteInULong
gleLLVMStoreDataToOut2ByteInULong
gleLLVMStoreDataToOutIntegerInULong
gleLLVMStoreDataToOutFloatInDouble
gleLLVMStoreDataToOutFloatInFloat
gleLLVMStoreDataToOutDoubleInDouble
gleLLVMStoreDataToCtxIntegerInULong
gleLLVMStoreDataToCtxFloatInDouble
gleLLVMStoreDataToCtxFloatInFloat
gleLLVMLoadDataFromMatFloatInDouble
gleLLVMLoadDataFromMatFloatInFloat
gleLLVMStoreMaterial
gleLLVMStoreVertexIndex
gleLLVMStoreInstanceIndex
gleLLVMLoadStorePrimitiveIndex
gleLLVMLoadDataFromCtxULongInULong
gleLLVMStoreDataToOutULongInULong
gleLLVMIncrementVtx
gleLLVMPredicateIncrementIndex
gleLLVMEndStoreVertex
gleLLVMEnd
glgRunProcessor
glgRunDeclarationDummy
loadColor
loadVecColor
loadColor_NOOP
loadVecColor_NOOP
loadColor_LUM_UB
loadVecColor_LUM_UB
loadColor_LUM_B
loadVecColor_LUM_B
loadColor_LUM_US
loadVecColor_LUM_US
loadColor_LUM_S
loadVecColor_LUM_S
loadColor_LUM_UI
loadVecColor_LUM_UI
loadColor_LUM_BM
loadVecColor_LUM_BM
loadColor_RGBA_UB
loadVecColor_RGBA_UB
loadColor_RGBA_B
loadVecColor_RGBA_B
loadColor_RGBA_US
loadVecColor_RGBA_US
loadColor_RGBA_S
loadVecColor_RGBA_S
loadColor_RGBA_UI
loadVecColor_RGBA_UI
loadColor_RGBA_US4444
loadVecColor_RGBA_US4444
loadColor_RGBA_US4444R
loadVecColor_RGBA_US4444R
loadColor_RGBA_US5551
loadVecColor_RGBA_US5551
loadColor_RGBA_US1555R
loadVecColor_RGBA_US1555R
loadColor_RGBA_UI8888
loadVecColor_RGBA_UI8888
loadColor_RGBA_UI8888R
loadVecColor_RGBA_UI8888R
loadColor_RGBA_UI1010102
loadVecColor_RGBA_UI1010102
loadColor_RGBA_UI2101010R
loadVecColor_RGBA_UI2101010R
loadColor_ARGB_UB
loadVecColor_ARGB_UB
loadColor_ARGB_B
loadVecColor_ARGB_B
loadColor_ARGB_US
loadVecColor_ARGB_US
loadColor_ARGB_S
loadVecColor_ARGB_S
loadColor_ARGB_UI
loadVecColor_ARGB_UI
loadColor_BGRA_UB
loadVecColor_BGRA_UB
loadColor_BGRA_B
loadVecColor_BGRA_B
loadColor_BGRA_US
loadVecColor_BGRA_US
loadColor_BGRA_S
loadVecColor_BGRA_S
loadColor_BGRA_UI
loadVecColor_BGRA_UI
loadColor_BGRA_US4444
loadVecColor_BGRA_US4444
loadColor_BGRA_US4444R
loadVecColor_BGRA_US4444R
loadColor_BGRA_US5551
loadVecColor_BGRA_US5551
loadColor_BGRA_US1555R
loadVecColor_BGRA_US1555R
loadColor_BGRA_UI8888
loadVecColor_BGRA_UI8888
loadColor_BGRA_UI8888R
loadVecColor_BGRA_UI8888R
loadColor_BGRA_UI1010102
loadVecColor_BGRA_UI1010102
loadColor_BGRA_UI2101010R
loadVecColor_BGRA_UI2101010R
loadColor_ABGR_UB
loadVecColor_ABGR_UB
loadColor_ABGR_B
loadVecColor_ABGR_B
loadColor_ABGR_US
loadVecColor_ABGR_US
loadColor_ABGR_S
loadVecColor_ABGR_S
loadColor_ABGR_UI
loadVecColor_ABGR_UI
loadColor_RGB_UB
loadVecColor_RGB_UB
loadColor_RGB_B
loadVecColor_RGB_B
loadColor_RGB_US
loadVecColor_RGB_US
loadColor_RGB_S
loadVecColor_RGB_S
loadColor_RGB_UI
loadVecColor_RGB_UI
loadColor_RGB_UB332
loadVecColor_RGB_UB332
loadColor_RGB_UB233R
loadVecColor_RGB_UB233R
loadColor_RGB_US565
loadVecColor_RGB_US565
loadColor_RGB_US565R
loadVecColor_RGB_US565R
loadColor_RGB_UI10F11F11FR
loadVecColor_RGB_UI10F11F11FR
loadColor_RGB_UI5E999MR
loadVecColor_RGB_UI5E999MR
loadColor_BGR_UB
loadVecColor_BGR_UB
loadColor_BGR_B
loadVecColor_BGR_B
loadColor_BGR_US
loadVecColor_BGR_US
loadColor_BGR_S
loadVecColor_BGR_S
loadColor_BGR_UI
loadVecColor_BGR_UI
loadColor_RG_UB
loadVecColor_RG_UB
loadColor_RG_B
loadVecColor_RG_B
loadColor_RG_US
loadVecColor_RG_US
loadColor_RG_S
loadVecColor_RG_S
loadColor_RG_UI
loadVecColor_RG_UI
loadColor_LA_UB
loadVecColor_LA_UB
loadColor_LA_B
loadVecColor_LA_B
loadColor_LA_US
loadVecColor_LA_US
loadColor_LA_S
loadVecColor_LA_S
loadColor_LA_UI
loadVecColor_LA_UI
loadColor_LA_US88
loadVecColor_LA_US88
loadColor_422
loadVecColor_422
storeColor
storeVecColor
storeColor_NOOP
storeVecColor_NOOP
storeColor_LUM_UB
storeVecColor_LUM_UB
storeColor_LUM_US
storeVecColor_LUM_US
storeColor_LUM_UI
storeVecColor_LUM_UI
storeColor_RGBA_UB
storeVecColor_RGBA_UB
storeColor_RGBA_US
storeVecColor_RGBA_US
storeColor_RGBA_UI
storeVecColor_RGBA_UI
storeColor_RGBA_US4444
storeVecColor_RGBA_US4444
storeColor_RGBA_US4444R
storeVecColor_RGBA_US4444R
storeColor_RGBA_US5551
storeVecColor_RGBA_US5551
storeColor_RGBA_US1555R
storeVecColor_RGBA_US1555R
storeColor_RGBA_UI8888
storeVecColor_RGBA_UI8888
storeColor_RGBA_UI8888R
storeVecColor_RGBA_UI8888R
storeColor_RGBA_UI1010102
storeVecColor_RGBA_UI1010102
storeColor_RGBA_UI2101010R
storeVecColor_RGBA_UI2101010R
storeColor_ARGB_UB
storeVecColor_ARGB_UB
storeColor_ARGB_US
storeVecColor_ARGB_US
storeColor_ARGB_UI
storeVecColor_ARGB_UI
storeColor_BGRA_UB
storeVecColor_BGRA_UB
storeColor_BGRA_US
storeVecColor_BGRA_US
storeColor_BGRA_UI
storeVecColor_BGRA_UI
storeColor_BGRA_US4444
storeVecColor_BGRA_US4444
storeColor_BGRA_US4444R
storeVecColor_BGRA_US4444R
storeColor_BGRA_US5551
storeVecColor_BGRA_US5551
storeColor_BGRA_US1555R
storeVecColor_BGRA_US1555R
storeColor_BGRA_UI8888
storeVecColor_BGRA_UI8888
storeColor_BGRA_UI8888R
storeVecColor_BGRA_UI8888R
storeColor_BGRA_UI1010102
storeVecColor_BGRA_UI1010102
storeColor_BGRA_UI2101010R
storeVecColor_BGRA_UI2101010R
storeColor_ABGR_UB
storeVecColor_ABGR_UB
storeColor_ABGR_US
storeVecColor_ABGR_US
storeColor_ABGR_UI
storeVecColor_ABGR_UI
storeColor_RGB_UB
storeVecColor_RGB_UB
storeColor_RGB_US
storeVecColor_RGB_US
storeColor_RGB_UI
storeVecColor_RGB_UI
storeColor_RGB_UB332
storeVecColor_RGB_UB332
storeColor_RGB_UB233R
storeVecColor_RGB_UB233R
storeColor_RGB_US565
storeVecColor_RGB_US565
storeColor_RGB_US565R
storeVecColor_RGB_US565R
storeColor_RGB_UI10F11F11FR
storeVecColor_RGB_UI10F11F11FR
storeColor_RGB_UI5E999MR
storeVecColor_RGB_UI5E999MR
storeColor_BGR_UB
storeVecColor_BGR_UB
storeColor_BGR_US
storeVecColor_BGR_US
storeColor_BGR_UI
storeVecColor_BGR_UI
storeColor_RG_UB
storeVecColor_RG_UB
storeColor_RG_US
storeVecColor_RG_US
storeColor_RG_UI
storeVecColor_RG_UI
storeColor_LA_UB
storeVecColor_LA_UB
storeColor_LA_US
storeVecColor_LA_US
storeColor_LA_UI
storeVecColor_LA_UI
storeColor_LA_US88
storeVecColor_LA_US88
storeColor_422
storeVecColor_422
glgSetupFloatConversion
glgVectorFloatConversion
glgScalarFloatConversion
glgProcessColor
loadDepth
loadVecDepth
loadDepth_NOOP
loadVecDepth_NOOP
loadDepth_DEPTH_UB
loadVecDepth_DEPTH_UB
loadDepth_DEPTH_B
loadVecDepth_DEPTH_B
loadDepth_DEPTH_US
loadVecDepth_DEPTH_US
loadDepth_DEPTH_S
loadVecDepth_DEPTH_S
loadDepth_DEPTH_UI
loadVecDepth_DEPTH_UI
loadDepth_DEPTH_STENCIL
loadVecDepth_DEPTH_STENCIL
storeDepth
storeVecDepth
storeDepth_NOOP
storeVecDepth_NOOP
storeDepth_DEPTH_UB
storeVecDepth_DEPTH_UB
storeDepth_DEPTH_US
storeVecDepth_DEPTH_US
storeDepth_DEPTH_UI
storeVecDepth_DEPTH_UI
storeDepth_DEPTH_STENCIL
storeVecDepth_DEPTH_STENCIL
glgProcessDepth
storeStencil
storeVecStencil
loadStencil
loadVecStencil
glgProcessStencil
storeDepthStencil
storeVecDepthStencil
loadDepthStencil
loadVecDepthStencil
glgProcessDepthStencil
PUSHA
POPA
PK2H
PK2US
PK4B
PK4UB
UP2H
UP2US
UP4B
UP4UB
DP2A
LOOP
ELSE
ENDIF
ENDLOOP
ENDREP
program
result
state
vertex
OPTION
ADDRESS
TEMP
PARAM
ATTRIB
OUTPUT
ALIAS
fragment
texture
DP4 dst.x, mat[0], vec;
DP4 dst.y, mat[1], vec;
DP4 dst.z, mat[2], vec;
DP4 dst.w, mat[3], vec;
MUL tmp, mat[0], vec.x;
MAD tmp, mat[1], vec.y, tmp;
MAD tmp, mat[2], vec.z, tmp;
MAD dst, mat[3], vec.w, tmp;
MVMULT
TMVMULT
position
half
start
main
%sC0
%sC1
%s_SAT
%sC_SAT
%sC0_SAT
%sC1_SAT
%sRC
%sHC
%sXC
%sR_SAT
%sH_SAT
%sX_SAT
%sRC_SAT
%sHC_SAT
%sXC_SAT
missing or invalid version
unrecognised option
unrecognised statement
unrecognised block parameter
unexpected option
unexpected statement
malformed declaration
malformed array specifier
malformed destination mask
malformed source swizzle
malformed source texture
malformed extended swizzle code
invalid condition mask
invalid texture coordinate plane
invalid identifier name
invalid attribute pair
invalid swizzle for scalar op
invalid number
invalid address identifier
invalid source identifier
invalid dest identifier
undefined destination identifier
undefined source identifier
undefined branch label
an identifier with this name already exists
duplicate branch label
missing semicolon
missing comma
identifier is not an array
identifier is an array
use of result.position illegal with ARB_position_invariant
out of range array index
out of range indirect offset
incorrect array component count
incorrect argument count for macro
conflicting option specification
conflicting texture target
impossible array
precision qualifier only allowed for temporaries or outputs
unpack instructions cannot take SHORT source
pack instructions cannot take SHORT destination
unexpected end of program
program env limit exceeded
program local limit exceeded
program matrices limit exceeded
program matrix stack depth exceeded
program instruction count exceeded
program temporary count exceeded
program parameter count exceeded
program attribute count exceeded
program address registers limit exceeded
texture unit limit exceeded
vertex unit limit exceeded
palette matrix limit exceeded
clip plane limit exceeded
light limit exceeded
vertex attribute limit exceeded
draw buffer index exceeded
Error in macro %s on line %u: %s (hint: '%s')
Error on line %u: %s (hint: '%s')
ARB_Program
#main
returnValue
air.perspective
air.position
air.center
air.arg_type_name
air.arg_name
air.front_facing
user(front_color)
user(sec_front_color)
user(tex_coord%u)
user(slot%u)
air.fragment_input
air.location
air.render_target
air.depth
air.depth_qualifier
air.any
air.fragment
air.vertex_input
air.location_index
attr%d
air.clip_vertex
air.point_size
air.clip_distance
user(back_color)
user(sec_back_color)
air.vertex_output
air.vertex
gleLLVMVPTransform
glvmInterpretVPTransformFour
glvmTempDeclarationDummyVP
glvmOperationInitSub
glvmOperationInitMasksVP
glvmOperationInitMasksForNested
glvmOperationFUNCSTART
glvmPredicateFALSE
glvmLoadSourceAttribVP
glvmLoadSourceTemp
glvmLoadSourceAddress
glvmLoadSourceParam
glvmOperationARL
glvmOperationARR
glvmOperationARA
glvmOperationDispatchVP
glvmPredicateBRA
glvmOperationRET
glvmOperationTARGBRA
glvmPredicateWHILE
glvmPredicateENDWHILE
glvmPredicateBRK
glvmOperationTARGBRK
glvmPredicateCONT
glvmOperationTARGCONT
glvmPredicateIF
glvmPredicateELSE
glvmPredicateENDIF
glvmPredicateSWITCH
glvmPredicateENDSWITCH
glvmPredicateCASE
glvmPredicateDEFAULT
glvmOperationABS
glvmOperationACS
glvmOperationALL
glvmOperationANY
glvmOperationASN
glvmOperationCEI
glvmOperationCOS
glvmOperationDEG
glvmOperationEX2
glvmOperationEXPE
glvmOperationFLR
glvmOperationFRC
glvmOperationLEN
glvmOperationLG2
glvmOperationLOGE
glvmOperationNOT
glvmOperationNRM
glvmOperationNSE
glvmOperationRAD
glvmOperationSIN
glvmOperationSQT
glvmOperationSSG
glvmOperationTAN
glvmOperationROUND
glvmOperationROUNDEVEN
glvmOperationTRUNCATE
glvmOperationCOMP
glvmOperationINVERSESQRT
glvmOperationCOSH
glvmOperationSINH
glvmOperationTANH
glvmOperationASINH
glvmOperationACOSH
glvmOperationATANH
glvmOperationISNAN
glvmOperationISINF
glvmOperationTO_BITS
glvmOperationFROM_BITS
glvmOperationEXTRACT_EXPONENT
glvmOperationEXTRACT_SIGNIFICAND
glvmOperationBITFIELD_REVERSE
glvmOperationBITCOUNT
glvmOperationFIND_LSB
glvmOperationFIND_MSB
glvmOperationPK2US
glvmOperationPK4UB
glvmOperationPK4B
glvmOperationPK2H
glvmOperationUP2US
glvmOperationUP4UB
glvmOperationUP4B
glvmOperationUP2H
glvmOperationPK2W
glvmOperationUP2W
glvmOperationADD
glvmOperationANL
glvmOperationDIV
glvmOperationDOT
glvmOperationMAX
glvmOperationMIN
glvmOperationMLC
glvmOperationMOD
glvmOperationMUL
glvmOperationORL
glvmOperationPOW
glvmOperationRFL
glvmOperationSEQ
glvmOperationSGE
glvmOperationSGT
glvmOperationSLE
glvmOperationSLT
glvmOperationSNE
glvmOperationSUB
glvmOperationXPD
glvmOperationXRL
glvmOperationAND
glvmOperationOR
glvmOperationXOR
glvmOperationSHL
glvmOperationSHR
glvmOperationDISTANCE
glvmOperationLDEXP
glvmOperationMUL_HB
glvmOperationCLM
glvmOperationFFW
glvmOperationLRP
glvmOperationRFR
glvmOperationMAD
glvmOperationSMS
glvmOperationEXP
glvmOperationLIT
glvmOperationLOG
glvmOperationMOV
glvmOperationRCC
glvmOperationRCP
glvmOperationRSQ
glvmOperationSCS
glvmOperationDP3
glvmOperationDP4
glvmOperationDPH
glvmOperationDST
glvmOperationSEL
glvmOperationSTR
glvmOperationSFL
glvmOperationCMP
glvmOperationSWZ
glvmOperationZERO
glvmSamplerFetch
glvmSamplerLoadTexels
glvmSamplerSize
glvmSamplerSample
glvmSamplerInvalid
glvmOperationATN
glvmOperationATN2
glvmLoadDestTemp
glvmOperationDSL
glvmOperationBDL
glvmOperationLOAD
glvmOperationSTOREWithMaskVP
glvmStoreDestOutputVP
glvmStoreDestTemp
glvmStoreDestAddress
glvmStoreDestOutputWithMaskVP
glvmStoreDestTempWithMask
glvmStoreDestAddressWithMask
glvmOperationNoOp
glvmZeroViewportIndex
glvmWindowTransformVP
glvmInterpretVPTransformFourInner
gleLLVMCPTransform
glvmInterpretCPTransformPatch
glvmTempDeclarationDummyCP
glvmOperationInitMasksCP
glvmLoadSourceAttribCP
glvmOperationVRLCP
glvmOperationVRLWithMaskCP
glvmOperationDispatchCP
glvmOperationBARRIER
glvmOperationSTOREWithMaskCP
glvmStoreDestOutputCP
glvmStoreDestOutputWithMaskCP
glvmInterpretCPTransformPatchInner
gleLLVMEPTransform
glvmInterpretEPTransformPatch
glvmTempDeclarationDummyEP
glvmOperationInitMasksEP
glvmLoadSourceAttribEP
glvmOperationVRLEP
glvmOperationVRLWithMaskEP
glvmOperationDispatchEP
glvmOperationSTOREWithMaskEP
glvmStoreDestOutputEP
glvmStoreDestOutputWithMaskEP
glvmWindowTransformEP
glvmInterpretEPTransformPatchInner
gleLLVMGPTransform
glvmInterpretGPTransformPrimitive
glvmTempDeclarationDummyGP
glvmOperationInitMasksGP
glvmOperationInitMasksForNestedGP
glvmLoadSourceAttribGP
glvmOperationVRLGP
glvmOperationVRLWithMaskGP
glvmOperationDispatchGP
glvmOperationEMITSTREAMVERTEX
glvmOperationEMITSTREAMVERTEXWithMask
glvmOperationENDSTREAMPRIMITIVE
glvmOperationENDSTREAMPRIMITIVEWithMask
glvmOperationSTOREWithMaskGP
glvmStoreDestOutputGP
glvmStoreDestOutputWithMaskGP
glvmOperationENDSTREAMPRIMITIVES
glvmWindowTransformGP
glvmInterpretGPTransformPrimitiveInner
gldLLVMFPTransformFallback2x2
gldLLVMFPTransformFallback
gldLLVMFPTransform2x2
gldLLVMFPTransform
glvmPreloadFPTransformFour
glvmPreloadDeclarationDummyFP
glvmOperationStackPreloadBuffer
glvmOperationStackPreloadDepth
glvmOperationStackPreloadStencil
glvmOperationStackPreload
glvmInterpretFPTransformFour
glvmInterpretDeclarationDummyFP
glvmPreloadPositionAttrib
glvmPackDepthAndW
glvmRasterOpDepthBoundsTest
glvmRasterOpMultisampleCoverageMask
glvmRasterOpDepthStencilTest
glvmOperationInitMasksFP
glvmPreloadSourceAttribs
glvmPreloadFrontFacingAttrib
glvmPreloadPrimitiveIDAttrib
glvmPreloadSampleIDAttrib
glvmPreloadSamplePositionAttrib
glvmPreloadSampleMaskAttrib
glvmInitializeDepthOutput
glvmTestForEmptyMask
glvmLoadSourceAttribFP
glvmOperationDispatchFP
glvmPredicateENDWHILEFP
glvmPredicateCONTFP
glvmOperationDDX
glvmOperationDDY
glvmOperationFWD
glvmOperationINTERPOLATE_AT_SAMPLE
glvmOperationINTERPOLATE_AT_CENTROID
glvmOperationINTERPOLATE_AT_OFFSET
glvmSamplerQueryLOD
glvmOperationSAT
glvmOperationKIL
glvmOperationDISCARD
glvmOperationKILWithMask
glvmOperationDISCARDWithMask
glvmOperationSTOREWithMaskFP
glvmStoreDestOutputFP
glvmStoreDestOutputWithMaskFP
glvmApplyAA
glvmRasterOpMultisampleAlphaCoverage
glvmMoveColorSource
glvmRasterOpMultisampleAlphaOne
glvmRasterOpMultisampleSampleMask
glvmRasterOpAlphaTest
glvmPackXYZWRGBAOutput
glvmRasterOpWriteFallback
glvmPackDepthOutput
glvmRasterOpFragmentCount
glvmRasterOpRead
glvmRasterOpBlend
glvmRasterOpPack
glvmRasterOpLogicOp
glvmRasterOpMask
glvmRasterOpWrite
glvmInterpretFPTransformFourInner
Hash (Pointer)
Hash Storage (Pointer)
Hash (Data)
Hash Storage (Data)
Hash Storage (String, growth)
Hash Storage (Pointer, growth)
llvm codegen extra
glsl shader
air.tess_evaluation
OpenGL ES GLSL
air.language_version
air.compile.fast_math_disable
air.compile_options
air.compile.fast_math_enable
air.compile.denorms_disable
air.compile.native_double_disable
Vector Storage (unsigned)
Vector Storage (unsigned, growth)
functionParameters
subroutines
Vector Storage (GLPLLVMSubroutine *, growth)
Vector Storage (GLPLLVMTextureSampler, growth)
struct._depth_1d_t
struct._texture_1d_t
struct._depth_1d_array_t
struct._texture_1d_array_t
struct._depth_2d_t
struct._texture_2d_t
struct._texture_3d_t
struct._depth_cube_t
struct._texture_cube_t
struct._depth_2d_array_t
struct._texture_2d_array_t
struct._texture_buffer_1d_t
struct._depth_cube_array_t
struct._texture_cube_array_t
struct._texture_2d_ms_t
struct._texture_2d_ms_array_t
struct._sampler_t
LLVM Buffer Object description
Vector Storage (GLPLLVMBufferDescription *, growth)
TF Buffer description
Vector Storage (GLPLLVMTFBufferDescription *, growth)
unhandled primitive type: %s
%s%s.%s%s.%s
air.convert
v2f16
v2f32
v3f16
v3f32
v4f16
v4f32
v2i16
v2i32
v3i16
v3i32
v4i16
v4i32
v2f64
v3f64
v4f64
v2i1
v3i1
v4i1
air.ceil
air.floor
air.fract
air.fast_sqrt
air.sqrt
air.fast_exp2
air.exp2
air.fast_log2
air.log2
air.fast_sin
air.sin
air.fast_cos
air.cos
air.fast_tan
air.tan
air.fast_asin
air.asin
air.fast_acos
air.acos
air.fast_sinh
air.sinh
air.fast_cosh
air.cosh
air.fast_tanh
air.tanh
air.fast_asinh
air.asinh
air.fast_acosh
air.acosh
air.fast_atanh
air.atanh
air.fast_exp
air.exp
air.fast_log
air.log
air.trunc
air.fast_rsqrt
air.rsqrt
air.round
air.rint
air.fwidth
air.dfdx
air.dfdy
air.mad
air.gamma_compress
air.gamma_expand
air.gamma_compress_xr
air.gamma_expand_xr
air.all
air.sign
air.convert.f.v2f32.f.v2f16
air.pack.unorm2x16
air.unpack.unorm2x16
air.pack.snorm4x8
air.pack.unorm4x8
air.unpack.snorm4x8
air.unpack.unorm4x8
air.clamp
air.noise1
air.noise2
air.noise3
air.noise4
air.fast_atan2
air.atan2
air.fast_atan
air.atan
air.mod
air.dot
air.fast_powr
air.powr
air.abs
air.fabs
air.min
air.fast_fmin
air.fmin
air.max
air.fast_fmax
air.fmax
air.gs_tf_store
air.popcount
air.fast_ldexp
air.ldexp
air.mul_hi
air.reverse_bits
air.ctz
air.clz
air.cs_barrier
air.emit_vertex
air.end_primitive
air.fma
GEPList
Vector Storage (GLPGepEntry)
Vector Storage (GLPGepEntry, growth)
afterSwitch
case
%s.%s
air.convert.f.%s.f.%s
%s%s.%s
air.mix
air.sample_
air.gather_compare_
air.gather_compare_offsets_
air.sample_compare_
air.gather_
air.gather_offsets_
air.read_
_grad
%s%s%s%s.%s
texVal
depth_1d
texture_1d
texture_buffer_1d
depth_1d_array
texture_1d_array
depth_2d
texture_2d
texture_3d
depth_cube
texture_cube
depth_2d_array
texture_2d_array
depth_cube_array
texture_cube_array
texture_2d_ms
texture_2d_ms_array
air.get_width_
air.get_height_
air.get_array_size_
air.get_depth_
%s%s
air.compute_lod_%s
air.interpolate_offset_no_perspective
air.interpolate_centroid_no_perspective
air.interpolate_sample_no_perspective
air.interpolate_center_no_perspective
air.interpolate_offset_perspective
air.interpolate_centroid_perspective
air.interpolate_sample_perspective
air.interpolate_center_perspective
Vector Storage (GLPVariableObject *, growth)
struct._interpolant_t
subroutine
Vector Storage (GLPLLVMSubroutineFunction *, growth)
air.vertex_id
air.instance_id
attrib%d
air.sample_id
uint
air.buffer
air.buffer_size
air.read
air.default_uniform
air.uniform
air.binding
air.write
air.vertex_transform_feedback
air.stride
air.stream
air.texture
air.sample
air.sampler
void
%s%u
%s%ux%u
float
double
bool
short
ushort
air.geometry_input
user(sec_back_color
user(patch%u)
air.primitive_id
air.invocation_id
air.patch_vertices_in
air.position_in_patch
air.edge_tessellation_factor
air.inside_tessellation_factor
air.point_coord
air.sample_mask_in
air.color
air.secondary_color
air.flat
air.no_perspective
air.interpolation_function
air.centroid
air.geometry_output
air.render_target_array_index
air.viewport_array_index
air.front_color
air.back_color
air.front_secondary_color
air.back_secondary_color
air.vec4_size
%s<%s, %s>
depth2d
texture1d
texture_buffer
depth2d_array
texture1d_array
texture2d
texture3d
depthcube
texturecube
texture2d_array
depthcube_array
texturecube_array
texture2d_ms
texture2d_ms_array
sample
read
Unsupported PP_TEX_TARGET: %d
allocaBlock
globalBlock
block
air.get_vertex_id.i32
air.get_instance_id.i32
air.get_sample_position.v2f32
if.then
if.else
if.end
while.body0
while.body1
while.header
while.end
default
air.discard_fragment
air.get_num_samples.i32
air.tess_control
air.geometry
air.sample_mask
_sampler_t
uSampler
_sampler_shadow_t
uShadowSampler
_image1d_t
PU3AS110_image1d_t
_image2d_t
PU3AS110_image2d_t
_image3d_t
PU3AS110_image3d_t
_imageCube_t
PU3AS112_imageCube_t
_image2d_array_t
PU3AS116_image2d_array_t
_Z%d%s
LLVMInt64TypeInContext
LLVMInt32TypeInContext
LLVMInt16TypeInContext
LLVMInt8TypeInContext
LLVMInt1TypeInContext
LLVMFloatTypeInContext
LLVMHalfTypeInContext
LLVMVoidTypeInContext
LLVMDoubleTypeInContext
LLVMVectorType
LLVMPointerType
LLVMFunctionType
LLVMAddFunctionAttr
LLVMAddFunction
LLVMGetNamedFunction
LLVMSetGlobalConstant
LLVMSetInitializer
LLVMGetParam
LLVMCreateBuilderInContext
LLVMDisposeBuilder
LLVMAppendBasicBlock
LLVMGetInsertBlock
LLVMMoveBasicBlockBefore
LLVMPositionBuilderAtEnd
LLVMBuildRetVoid
LLVMBuildRet
LLVMEmitBranch
LLVMMDNodeInContext
LLVMMDStringInContext
LLVMNamedMetadata
LLVMConstInt
LLVMConstUint64
LLVMConstReal
LLVMConstVector
LLVMConstArray
LLVMConstNull
LLVMConstAllOnes
LLVMGetUndef
LLVMArrayType
LLVMStructTypeInContext
LLVMTypeOf
LLVMGetElementType
LLVMGetNamedType
LLVMBuildFunctionCall
LLVMBuildAlloca
LLVMBuildLoad
LLVMBuildStore
LLVMBuildExtractElement
LLVMBuildInsertElement
LLVMBuildShuffleVector
LLVMBuildGEP
LLVMBuildInsertValue
LLVMBuildExtractValue
LLVMBuildAdd
LLVMBuildFAdd
LLVMBuildSub
LLVMBuildFSub
LLVMBuildMul
LLVMBuildFMul
LLVMBuildUDiv
LLVMBuildSDiv
LLVMBuildFDiv
LLVMBuildURem
LLVMBuildSRem
LLVMBuildFRem
LLVMBuildShl
LLVMBuildLShr
LLVMBuildAShr
LLVMBuildAnd
LLVMBuildOr
LLVMBuildXor
LLVMBuildNeg
LLVMBuildFNeg
LLVMBuildNot
LLVMBuildTrunc
LLVMBuildZExt
LLVMBuildSExt
LLVMBuildFPToSI
LLVMBuildFPToUI
LLVMBuildUIToFP
LLVMBuildSIToFP
LLVMBuildFPTrunc
LLVMBuildFPExt
LLVMBuildPtrToInt
LLVMBuildIntToPtr
LLVMBuildBitCast
LLVMBuildPointerCast
LLVMBuildIntCast
LLVMBuildFPCast
LLVMBuildICmp
LLVMBuildFCmp
LLVMBuildSelect
LLVMBuildSwitch
LLVMAddCase
LLVMBuildPhi
LLVMAddIncoming
LLVMGetSwitchDefaultDest
LLVMBuildBr
LLVMBuildCondBr
LLVMDIBuilderCreate
LLVMDIBuilderDelete
LLVMDIBuilderCreateCompileUnit
LLVMDIBuilderCreateFile
LLVMDIBuilderCreateSubProgram
LLVMSetCurrentLine
LLVMClearCurrentLine
LLVMPackVector
LLVMUnpackVector
LLVMCallFunction
LLVMGetInfinityProxy
LLVMAddGlobalInAddressSpace
Dv%d_
S%d_
vec2
vec3
vec4
ivec2
ivec3
ivec4
bvec2
bvec3
bvec4
mat2
mat3
mat4
sampler1D
sampler2D
sampler3D
samplerCube
sampler1DShadow
sampler2DShadow
mat2x3
mat2x4
mat3x2
mat3x4
mat4x2
mat4x3
sampler2DRect
sampler2DRectShadow
sampler1DArray
sampler2DArray
samplerBuffer
sampler1DArrayShadow
sampler2DArrayShadow
samplerCubeShadow
unsigned int
uvec2
uvec3
uvec4
isampler1D
isampler2D
isampler3D
isamplerCube
isampler2DRect
isampler1DArray
isampler2DArray
isamplerBuffer
usampler1D
usampler2D
usampler3D
usamplerCube
usampler2DRect
usampler1DArray
usampler2DArray
usamplerBuffer
sampler2DMS
sampler2DMSArray
isampler2DMS
isampler2DMSArray
usampler2DMS
usampler2DMSArray
dvec2
dvec3
dvec4
dmat2
dmat3
dmat4
dmat2x3
dmat2x4
dmat3x2
dmat3x4
dmat4x2
dmat4x3
samplerCubeArray
samplerCubeArrayShadow
isamplerCubeArray
usamplerCubeArray
no error
too little data
unseen pointer
invalid magic number
invalid version
invalid entry offset
invalid entry length
Vector Storage (void *)
GLProgrammability: deserial error (%s) at offset %u into data of length %u with SHA1 %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
/System/Library/Frameworks/OpenGLES.framework/libGLProgrammability.dylib
glpGetPrimitiveType
copyBitCodeStorage
glp_llvm_ir_util.cpp
storage.size() + headerSize <= bufferSize
air64-apple-ios
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-n8:16:32
createFunction
lexicalBlocks.size() == 1
main(
uint4
float2
float4
half4
entry
OpenGL ES Program
binding
opengl.texture_unit
opengl.sampler_unit
opengl.context_state
opengl.kernel_arg_info
4 x float
nonperspective
perspective
graphics.interpolate.center.4xi
graphics.vertex.readAttribute.4xi
graphics.interpolate.center.%dx%s
graphics.vertex.readAttribute.%dxf
clamp
native_sqrt
__cl_fabs
native_rsqrt
native_recip
__cl_fmin
__cl_fmax
native_exp
native_exp2
cross
native_powr
if_entry_block
if_else_or_end_block
if_end_block
rep_entry_block
rep_end_block
%s<float, sample>
read_imagef
read_imageh
vextexId
graphics.vertex.writeOutput
graphics.vertex.writePosition
graphics.vertex.writePointSize
graphics.vertex.writeClipVertex
graphics.vertex.writeClipDistance
Vertex_State_Program
vertexShader
graphics.vertexOutputs
graphics.pixel.readFrontFacing
graphics.pixel.readPointCoordf
graphics.pixel.writeOutput
graphics.pixel.writeDepth
Fragment_State_Program
fragmentShader
graphics.fragmentInputs
