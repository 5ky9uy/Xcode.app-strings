com.apple.sosd.usernotification
CRASH
CFBundleName
NOTIFICATION_TITLE
NOTIFICATION_BODY
SACriticalNotification
com.apple.UNNotificationDefaultActionIdentifier
v8@?0
-[SATelephonyManager placeVoiceCall:completionHandler:]
-[SATelephonyManager placeVoiceCall:completionHandler:]_block_invoke
v16@?0@"TUCall"8
v12@?0B8
-[SATelephonyManager _canPlaceNewCall:]_block_invoke
-[SATelephonyManager _canPlaceNewCall:]_block_invoke_2
-[SATelephonyManager handleCallChanged:force:]_block_invoke
-[SATelephonyManager _callStatusChanged:]
com.apple.SafetyKit
-[SAClient init]
com.apple.SafetyKit.SAClient
-[SAClient requestMostRecentCrashDetectionEvent]
-[SAClient requestCrashDetectionAuthorization:]
v24@?0q8@"NSError"16
-[SAClient updateMostRecentCrashDetectionEvent:]
-[SAClient dialVoiceCallToPhoneNumber:completionHandler:]
-[SAClient updateVoiceCallStatus:]
v16@?0@"NSError"8
-[SAClient serverProxy]_block_invoke
-[SAClient connection]
SAErrorDomain
Place holder for future private errors
SAErrorNotAuthorized
SAErrorNotAllowed
SAErrorInvalidArgument
SAErrorOperationFailed
SAErrorNotAuthorizedRecovery
SAErrorNotAvailableRecovery
-[SAEmergencyResponseManager dialVoiceCallToPhoneNumber:completionHandler:]
-[SAEmergencyResponseManager updateVoiceCallStatus:]
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
+[SABundleManager approvedBundleIdsForService:]
-[SABundleManager approvedApps]
v24@?0@"NSObject<OS_tcc_authorization_record>"8^{__CFError=}16
q24@?0@"SABundleManagerApp"8@"SABundleManagerApp"16
kTCCServiceCrashDetection
+[SABundleManager bundleURLForAuditToken:]
-[SABundleManager wakeApprovedAppsWithReason:completion:]
-[SABundleManager openApplicationInBackgroundWithBundleId:withReason:completion:]
-[SABundleManager openApplicationInForegroundWithBundleId:withReason:completion:]
__LaunchOrigin
__PromptUnlockDevice
__UnlockDevice 
-[SABundleManager openApplicationInForegroundWithBundleId:withReason:completion:]_block_invoke
v20@?0B8@"NSError"12
v24@?0@"ACXRemoteApplication"8@"NSError"16
LocationBundles
Emergency SOS.bundle
SafetyCallNotice
SafetyNotification
SafetyUserNotification
-[SALocationManager notifyLocation:]
-[SALocationManager startMonitoringLocation]
-[SALocationManager stopMonitoringLocation]
-[SALocationManager locationManager:didUpdateLocations:]
-[SALocationManager locationManager:didFailWithError:]
-[SAWatchApplicationLauncher openApplicationInBackgroundWithBundleId:withReason:completion:]
SAEmergencyResponseVoiceCallTimeout
-[SAServer init]
com.apple.SafetyKit.SAServer
-[SAServer mostRecentCrashEvent]
SAMostRecentCrashDetectionEvent
-[SAServer setMostRecentCrashEvent:]
-[SAServer recoverMostRecentCrashEvent]
-[SAServer updateMostRecentCrashDetectionEvent:completion:]
-[SAServer notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:completion:]_block_invoke
-[SAServer numberOfVoiceCallAttempts]
SANumberOfVoiceCallAttempts
-[SAServer setNumberOfVoiceCallAttempts:]
-[SAServer updateVoiceCallStatus:]
-[SAServer updateVoiceCallStatus:]_block_invoke_2
-[SAServer updateVoiceCallStatus:]_block_invoke
v24@?0@"NSXPCConnection"8@"<SAClientProtocol>"16
-[SAServer sendCrashEventToClients]
-[SAServer sendCrashEventToClients]_block_invoke_2
-[SAServer sendCrashEventToClients]_block_invoke
-[SAServer iterateClientProxies:]_block_invoke_2
v32@?0@"NSXPCConnection"8Q16^B24
-[SAServer requestMostRecentCrashDetectionEvent]
-[SAServer requestCrashDetectionAuthorization:]
-[SAServer dialVoiceCallToPhoneNumber:completionHandler:]
-[SAServer dialVoiceCallToPhoneNumber:completionHandler:]_block_invoke
-[SAServer listener:shouldAcceptNewConnection:]
SACrashDetectionManagerAvailable
SACrashDetectionManager.m
SafetyKit Crash Detection entitlement is required for this API
-[SACrashDetectionManager init]
UIApplicationDidBecomeActiveNotification
-[SACrashDetectionManager authorizationStatus]
SafetyKit Crash Detection entitlement is required to use this API
-[SACrashDetectionManager setDelegate:]
-[SACrashDetectionManager requestAuthorizationWithCompletionHandler:]
-[SACrashDetectionManager requestAuthorizationWithCompletionHandler:]_block_invoke
-[SACrashDetectionManager _appDidBecomeActive:]
-[SACrashDetectionManager _callDelegateWithCrashEvent:]
-[SACrashDetectionManager updateMostRecentCrashDetectionEvent:]
SACrashDetectionEventTimeout
kSACrashDetectionEventTimeOfDetection
kSACrashDetectionEventTimeOfResolution
kSACrashDetectionEventResponse
kSACrashDetectionEventLocation
kSACrashDetectionEventIsNotified
SACrashDetectionEvent - date: %@, response: %ld, location: %@, notified: %d
-[SAPhoneApplicationLauncher openApplicationInBackgroundWithBundleId:withReason:completion:]
com.apple.developer.severe-vehicular-crash-event
default
SAServerMockAuthorizationPromptAnswer
SAKappaThirdPartyBundleId
Authorization, isInFlight: %d, from: %@ (%@), to: %@ (%@)
+[SAAuthorization showAuthorizationPrompt]
ALERT_HEADER_LONG_PHONE
ALERT_HEADER_LONG_MISSING_APP_PHONE
ALERT_LONG_PHONE
DEFAULT_BUTTON_TITLE_LONG
ALTERNATE_BUTTON_TITLE_LONG
ALTERNATE_BUTTON_TITLE_MISSING_APP_LONG
ALERT_HEADER_SHORT_PHONE
ALERT_SHORT_PHONE
DEFAULT_BUTTON_TITLE_SHORT
ALTERNATE_BUTTON_TITLE_SHORT
+[SAAuthorization showAuthorizationPrompt]_block_invoke
mobile
void authorizationPromptResponseHandler(CFUserNotificationRef, CFOptionFlags)
AirplaneMode
SigningFuse
InternalBuild
_Bool localMGGetBoolAnswer(CFStringRef)
SAGestalt.m
MGGetBoolAnswer
void *libMobileGestaltLibrary(void)
/usr/lib/libMobileGestalt.dylib
/usr/local/lib/libMobileGestalt.dylib
Unable to get Bundle for currently authorized app: %@
Notification response: %@
Launching app in foreground because of 3P notification interaction
%s, phoneNumberString: %{private}@
%s - request is valid, request: %@
%s - request is valid, request.URL: %{private}@
%s - request is not valid, request: %@, request.URL: %@
%s - unable to place voice call, error: %@
%s - unable to place voice call, in airplane mode
%s - current call out of sync, cleaning up
%s - cannot place new call because there is already a call in progress
%s, result: %d
%s - we found our call, call: %@
%s - updating status for call, call: %@, status: %lu
%s - unhandled status for call, call: %@
%s - ignoring status for call since it didn't change, call: %@, status: %lu
%s - ignoring status for non-current call, call: %@
%s, call: %@
%s - Unable to request authorization because there is already an active request.
%s, event: %@
Received malformed message from server for updateMostRecentCrashDetectionEvent: event should never be nil.
%s, phoneNumber: %@
%s, status: %lu
%s - unable to get serverProxy, error: %@
%s - Creating New SAClient Connection
SA server connection interrupted
SA server connection invalidated
%s, status: %ld
Unable to get Bundle for app with previous authorization: %@
Unable to get remote app bundleId for fromBundleId: %@, error: %@
%s, service: %@
%s - Found more than one approved app for service, revoking access for duplicate app, bundleId: %@
%s - Unable to revoke access for duplicate app, bundleId: %@
%s - unable to get bundle information for audit token, error: %@
%s, reason: %lu, service: %@
%s - Need to wake app, app: %@
%s - attempting to launch app in background, bundleId: %@
%s - attempting to launch app in foreground, bundleId: %@
%s - Unable to launch bundle application in foreground, bundleId: %@, reason: %lu, error: %@
%s - Successfully launched bundle application in foreground, bundleId: %@, reason: %lu
Unable to get remote app for fromBundleId: %@, error: %@
%{public}s, Unable to deliver location updates
%s, Starting location updates
%s, Stopping location updates
%s, Location update received, %@
%s, Location manager error, %@
%s - attempted to use watch launcher on non watch platform, bundleId: %@
%s - no crash event found in NSUserDefaults
%s - Unable to load mostRecentCrashEvent from NSUserDefaults, error: %@
%s - loaded crash event found in NSUserDefaults, crashEvent: %@
%s, mostRecentCrashEvent: %@
%s - mostRecentCrashEvent nil, removing from NSUserDefaults
%s - Unable to save mostRecentCrashEvent in NSUserDefaults, mostRecentCrashEvent: %@, error: %@
%s - saving crash event in NSUserDefaults, mostRecentCrashEvent: %@
%s - Recovered crash event, crashEvent: %@, numberOfVoiceCallAttempts: %ld
%s, crashEvent: %@
Reentrant notification, waiting for location on older semaphore
Timeout getting location
%s - Crash event resolved
%s - no call attempts found in NSUserDefaults
%s - Unable to load numberOfVoiceCallAttempts from NSUserDefaults, error: %@
%s - loaded call attempts found in NSUserDefaults, numberOfVoiceCallAttempts: %@
%s, numberOfCallAttempts: %ld
%s - Unable to save numberOfVoiceCallAttempts in NSUserDefaults, numberOfVoiceCallAttempts: %ld, error: %@
%s - saving call attempts in NSUserDefaults, numberOfVoiceCallAttempts: %ld
%s - authorized, sending, connection: %@, status: %ld
%s - unauthorized, not sending, connection: %@, status: %ld
%s - not sending nil event
%s - not sending already notified event, event: %@
%s - authorized, sending, connection: %@, crashEvent: %@
Critical notification scheduled
Error scheduling critical notification: %@
%s - unauthorized, not sending, connection: %@, crashEvent: %@
%s - Error from remoteObjectProxyWithErrorHandler: %@
%s - app requesting authorization has already been authorized
%s - app requesting authorization but we are already prompting user for authorization.
%s - unable to start authorization for bundleURL, bundleURL: %@
%s - not authorized,
%s - not placing voice call because request was not made around an emergency event.
%s - not placing voice call because number of call attempts have exceeded, attempts, %ld
%s - attempting to place voice call, phoneNumber: %@, callAttempts: %ld
%s - voice call accepted
%s - voice call not accepted, error: %@
%s, newConnection: %@
SA client connection interrupted
SA client connection invalidated
[WARN] New connection %@ missing entitlement: %@
shouldAcceptNewConnection: %d for connection: %@
Updating voice call attempts due to active call: 1
Updating voice call attempts due to failure: %ld
%s - Manager is unavailable, all API calls will fail.
%s - Manager is unavailable, returning SAAuthorizationStatusDenied
%s - Manager is unavailable, not setting delegate.
%s, %@
%s - Manager is unavailable, responding with SAAuthorizationStatusDenied
%s - Authorization already granted, status: %lu
%s - Application not in foreground, not requesting authorization, status: %lu, application: %lu
%s - Requesting authorization from server, currentStatus: %lu
%s - Authorization requested from server, newStatus: %lu
%s - Unable to launch bundle, bundleId: %@, reason: %lu, error: %@
%s - Successfully launched bundle, bundleId: %@, reason: %lu, process: %@
[WARN] Unexpected value %@ for %@ entitlement: %@
[WARN] Unexpected NULL value returned from SecTaskCreateFromSelf()
Unable to get Bundle for app requesting authorization: %@
%s - Authorization prompt for, authorization: %@
%s - Asked to display authorization prompt but not currently authorizing.
%s - Would have presented notification, details: %@
%s - Mocking answer to authorization prompt, mockAnswer: %@, responseFlags: %lu
%s - CFUserNotificationCreate failed, error: %d
attempting to set third party bundleId that doesn't exist: %@
setting third party bundleId: %@
%s - Authorization not in flight, this shouldn't be called.
%s - No button was pressed and the notification timed out.
%s - Authorization granted, revoking permissions from previous app, bundleId: %@
%s - Failed to revoke permissions from previous app, bundleId: %@
%s - Authorization granted, granting permissions to app, bundleId: %@
%s - Failed to grant permissions to app, bundleId: %@
%s - Failed to reinstate permissions to app, no app is authorized, bundleId: %@
%s - Successfully granted permissions to app, bundleId: %@
%s - Authorization not granted, denying permissions to app, bundleId: %@
%s - Failed to successfully apply permissions to app, bundleId: %@
SACriticalNotification
UNUserNotificationCenterDelegate
NSObject
SATelephonyManager
SAServerProtocol
SACrashDetectionServerProtocol
SAEmergencyResponseServerProtocol
SAClientProtocol
SACrashDetectionClientProtocol
SAEmergencyResponseClientProtocol
SAClient
SAError
SAEmergencyResponseManager
SABundleManagerApp
SABundleManager
SALocationManager
CLLocationManagerDelegate
SAWatchApplicationLauncher
SAApplicationLauncher
SafetyKit
SAServer
SATelephonyDelegateProtocol
SALocationManagerProtocol
NSXPCListenerDelegate
SACrashDetectionManager
SACrashDetectionEvent
NSSecureCoding
NSCoding
NSCopying
SAPhoneApplicationLauncher
SAEntitlement
SAAuthorizationInFlight
SAAuthorization
SAGestalt
T@"NSString",&,N,V_fromBundleId
SASyncedBundleId
_callInProgress
T@"<SACrashDetectionClientProtocol>",W,N,V_crashDetectionClientDelegate
_pairedBundleId
T@"<SAEmergencyResponseClientProtocol>",W,N,V_emergencyResponseClientDelegate
allKeys
T@"<SALocationManagerProtocol>",W,N,V_delegate
bundleForClass:
T@"CLLocation",C,N,V_mostRecentLocation
elapsed
T@"CLLocationManager",&,N,V_locationManager
fromApp
T@"NSDate",R,N,V_date
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_callQueue
locationAquired
T@"NSString",&,N,V_name
locationManager:didEnterRegion:
T@"NSString",C,N,V_bundleId
T@"NSString",R,C
setExplanation:
.cxx_destruct
T#,R
_center
T@"<SACrashDetectionDelegate>",W,N,V_delegate
_server
T@"<SAEmergencyResponseDelegate>",W,N,V_delegate
applicationName
T@"<SATelephonyDelegateProtocol>",W,N,V_delegate
defaultProvider
T@"CLLocation",R,N,V_location
emergencyResponseClientDelegate
T@"NSDate",&,N,V_authorizationDate
isInternalBuild
T@"NSDate",R,N,V_timeOfResolution
isValid
T@"NSObject<OS_dispatch_semaphore>",&,N,V_locationAquired
locationManager
T@"NSString",&,N,V_toBundleId
notifyLocation:
T@"NSString",C,N,V_pairedBundleId
release
T@"NSString",R,N,GgetFromBundleLocalizedName
T@"NSString",R,N,GgetToBundleLocalizedName,VtoBundleLocalizedName
T@"NSXPCConnection",R,N,V_connection
T@"SABundleManagerApp",&,N,V_fromApp
T@"SAClient",R,N
T@"SACrashDetectionEvent",C,N
T@"TUCall",&,N,V_call
T@?,C,N,V_completionHandler
TB,N,GisInFlight,V_inFlight
TB,N,V_callFailed
TB,N,V_callInProgress
TB,N,V_isNotified
TB,R
TB,R,N
TB,R,N,GisAvailable
TB,R,N,GisInFlight
TB,R,N,Gsa_hasFailed
TQ,R
Td,R,N
Tq,N
Tq,N,V_deviceType
Tq,N,V_preflightAuthorizationStatus
Tq,R,N
Tq,R,N,V_response
URLByAppendingPathComponent:
URLsForDirectory:inDomains:
_appDidBecomeActive:
_applicationLauncher
_assertionMap
_authenticationRequestHandler
_authorizationDate
_bundleId
_bundleManager
_call
_callDelegateWithCrashEvent:
_callFailed
_callQueue
_callStatusChanged:
_canPlaceNewCall:
_clientConnections
_completionHandler
_connection
_copyPrefsValueForKey:
_crashDetectionClientDelegate
_createNotification
_criticalNotification
_currentCallEnded
_date
_delegate
_deviceType
_emergencyResponseClientDelegate
_fromApp
_fromBundleId
_inFlight
_isNotified
_listener
_location
_locationAquired
_locationManager
_messageQueue
_mostRecentLocation
_name
_options
_preflightAuthorizationStatus
_response
_service
_setPrefsValue:forKey:
_synchronizePrefs
_telephonyManager
_timeOfResolution
_toBundleId
actionIdentifier
addAssertion:forProcessId:
addNotificationRequest:withCompletionHandler:
addObject:
addObserver:selector:name:object:
allObjects
allocWithZone:
applicationOnPairedDevice:withBundleID:error:
applicationState
approvedAppExcludingBundleId:
approvedApps
approvedBundleId
approvedBundleIdsForService:
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
attributeWithDomain:name:
auditToken
auditTokenAuthorizedForAnyEmergency:
auditTokenAuthorizedForCrashDetection:
authorizationDate
authorizationStatus
authorizationStatusForCurrentConnection
authorizationStatusWithTCCPreflightResult:
autorelease
available
availableOverrideSetting
boolValue
bundleId
bundleIdentifier
bundleRecordForAuditToken:error:
bundleURLForAuditToken:
bundleURLForCurrentConnection
bundleWithIdentifier:
bundleWithURL:
call
callAuthenticationRequestHandlerWithError
callAuthenticationRequestHandlerWithStatus:error:
callFailed
callInProgress
callQueue
categoryWithIdentifier:actions:intentIdentifiers:options:
class
cleanupInvalidAssertions
client
code
companionAppBundleID
compare:
completionHandler
conformsToProtocol:
connection
connectionAuthorizedForAnyEmergency:
connectionAuthorizedForCrashDetection:
contextWithIdentity:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
crashDetectionClientDelegate
crashDetectionEventTimeout
crashDetectionManager
crashDetectionManager:didDetectEvent:
currentCalls
currentConnection
currentConnectionAuthorizedForAnyEmergency
currentConnectionAuthorizedForCrashDetection
currentHandler
currentProcessHasEntitlement:
date
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
defaultSound
defaultWorkspace
delegate
description
deviceSupportsKappa
deviceType
dialVoiceCallToPhoneNumber:completionHandler:
dialWithRequest:completion:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
disconnectedReason
doubleValue
emergencyResponseManager:didUpdateVoiceCallStatus:
emergencyResponseVoiceCallTimeout
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateObjectsUsingBlock:
errorWithCode:
errorWithCode:description:recoverySuggestion:
errorWithCode:description:recoverySuggestion:underlyingError:
errorWithDomain:code:userInfo:
execute:assertion:error:
fetchApplicationOnPairedDevice:withBundleID:completion:
fetchWatchAppBundleIDForCompanionAppBundleID:completion:
firstObject
fromBundleId
fromBundleLocalizedName
getActivePairedDevice
getFromBundleLocalizedName
getFromBundleLocalizedNameWithCompletion:
getLocalizedName
getLocalizedNameForPairedDeviceWithCompletion:
getRemoteApplicationNameWithBundleId:withCompletion:
getToBundleLocalizedName
handle
handleCallChanged:force:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hash
iconForApplicationIdentifier:
identityForEmbeddedApplicationIdentifier:
inAirplaneMode
inFlight
init
initWithBundleId:deviceType:
initWithBundleIdentifier:
initWithBundleManager:
initWithCapacity:
initWithCoder:
initWithContext:
initWithEffectiveBundle:delegate:onQueue:
initWithMachServiceName:
initWithMachServiceName:options:
initWithProvider:
initWithQueue:
initWithServiceName:
initWithTimeIntervalSinceReferenceDate:
initWithTimeOfDetection:timeOfResolution:response:location:
initWithTimeOfDetection:timeOfResolution:response:location:isNotified:
initWithType:value:
integerValue
interfaceWithProtocol:
invalidate
isAvailable
isEqual:
isEqualToCall:
isEqualToString:
isInFlight
isKindOfClass:
isMemberOfClass:
isNotified
isProductionFused
iterateClientProxies:
listener:shouldAcceptNewConnection:
localizedStringForKey:value:table:
locallyAvailableApplicationWithBundleID:forPairedDevice:error:
location
locationBundle
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
mostRecentCrashEvent
mostRecentLocation
name
notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:
notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:completion:
numberOfVoiceCallAttempts
numberWithInt:
numberWithInteger:
object
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openApplicationInBackgroundWithBundleId:withReason:completion:
openApplicationInForegroundWithBundleId:withReason:completion:
openApplicationWithBundleIdentifier:usingConfiguration:completionHandler:
pairedBundleId
pairedDeviceBundleIdForId:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
placeVoiceCall:completionHandler:
preflightAuthorizationStatus
reasonToAttributeName:
recoverMostRecentCrashEvent
remoteApplicationWithBundleId:error:
remoteObjectProxyWithErrorHandler:
removeObject:
removeObjectForKey:
requestAuthorizationWithCompletionHandler:
requestCrashDetectionAuthorization:
requestMostRecentCrashDetectionEvent
requestWithIdentifier:content:trigger:
reset
respondsToSelector:
response
resume
retain
retainCount
sa_failed
sa_hasFailed
self
sendCrashEventToClients
sendNotificationWithCompletionHandler:
serverProxy
setAccess:forBundleId:
setAttributes:
setAuthorizationDate:
setBody:
setBundleId:
setCall:
setCallFailed:
setCallInProgress:
setCallQueue:
setCategoryIdentifier:
setClasses:forSelector:argumentIndex:ofReply:
setCompletionHandler:
setConnection:
setCrashDetectionClientDelegate:
setDelegate:
setDesiredAccuracy:
setDeviceType:
setEmergencyResponseClientDelegate:
setExportedInterface:
setExportedObject:
setFromApp:
setFromBundleId:
setFrontBoardOptions:
setHandle:
setIcon:
setInFlight:
setInterruptionHandler:
setInvalidationHandler:
setIsNotified:
setLocationAquired:
setLocationManager:
setMostRecentCrashEvent:
setMostRecentLocation:
setName:
setNotificationCategories:
setNumberOfVoiceCallAttempts:
setObject:forKey:
setObject:forKeyedSubscript:
setPairedBundleId:
setPreflightAuthorizationStatus:
setRemoteObjectInterface:
setShouldBackgroundDefaultAction:
setShouldIgnoreDoNotDisturb:
setShouldShowSubordinateIcon:
setShowUIPrompt:
setSound:
setThirdPartyBundleId:
setTitle:
setToBundleId:
setWantsNotificationResponsesDelivered
setWithObject:
sharedApplication
sharedDeviceConnection
sharedInstance
showAuthorizationPrompt
sortedArrayUsingComparator:
standardUserDefaults
startAuthorizationForBundleURL:preflightAuthorizationStatus:completionHandler:
startMonitoringLocation
startUpdatingLocation
status
stopMonitoringLocation
stopUpdatingLocation
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
superclass
supportsSecureCoding
synchronize
synchronizeUserDefaultsDomain:keys:
telephonyManager:didUpdateVoiceCallStatus:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeOfResolution
toBundleId
toBundleLocalizedName
unarchivedObjectOfClass:fromData:error:
updateMostRecentCrashDetectionEvent:
updateMostRecentCrashDetectionEvent:completion:
updateVoiceCallStatus:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
validityErrors
value
valueForEntitlement:
valueForKey:
wakeApprovedAppsWithReason:completion:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@24@0:8@16
v24@0:8@?16
v16@0:8
@"UNUserNotificationCenter"
@"SABundleManager"
v32@0:8@16@?24
v28@0:8@16B24
v24@0:8@16
v20@0:8B16
@"<SATelephonyDelegateProtocol>"
@"TUCall"
@"NSObject<OS_dispatch_queue>"
v24@0:8@?<v@?q@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"SACrashDetectionEvent"16
v24@0:8q16
v32@0:8q16@24
@"NSXPCConnection"
@"<SACrashDetectionClientProtocol>"
@"<SAEmergencyResponseClientProtocol>"
@24@0:8q16
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@"<SAEmergencyResponseDelegate>"
@32@0:8@16q24
q16@0:8
@"NSString"
@"NSDate"
@24@0:8^{__CFString=}16
@48@0:8{?=[8I]}16
@32@0:8@16^@24
v32@0:8q16@?24
v40@0:8@16q24@?32
@"<SAApplicationLauncher>"
@"NSObject<OS_tcc_server>"
@"NSObject<OS_tcc_service>"
@"NSObject<OS_tcc_message_options>"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"<SALocationManagerProtocol>"
@"CLLocationManager"
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
d16@0:8
v32@0:8@16q24
v32@0:8@"SATelephonyManager"16q24
v32@0:8@"SALocationManager"16@"CLLocation"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
@"SATelephonyManager"
@"SALocationManager"
@"NSXPCListener"
@"NSMutableArray"
@"SACriticalNotification"
@"CLLocation"
@"NSObject<OS_dispatch_semaphore>"
@"<SACrashDetectionDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24q32@40
@52@0:8@16@24q32@40B48
@"NSMutableDictionary"
@?16@0:8
@"SABundleManagerApp"
B48@0:8{?=[8I]}16
q20@0:8i16
B40@0:8@16q24@?32
B28@0:8B16@20
^v24@0:8@16
com.apple.sosd.usernotification
CRASH
CFBundleName
NOTIFICATION_TITLE
NOTIFICATION_BODY
SACriticalNotification
com.apple.UNNotificationDefaultActionIdentifier
v8@?0
-[SATelephonyManager placeVoiceCall:completionHandler:]
-[SATelephonyManager placeVoiceCall:completionHandler:]_block_invoke
v16@?0@"TUCall"8
-[SATelephonyManager placeVoiceCall:completionHandler:]_block_invoke_4
v12@?0B8
-[SATelephonyManager _canPlaceNewCall:]_block_invoke
-[SATelephonyManager _canPlaceNewCall:]_block_invoke_2
-[SATelephonyManager handleCallChanged:force:]_block_invoke
-[SATelephonyManager _callStatusChanged:]
com.apple.SafetyKit
-[SAClient init]
com.apple.SafetyKit.SAClient
-[SAClient requestMostRecentCrashDetectionEvent]
-[SAClient requestCrashDetectionAuthorization:]
v24@?0q8@"NSError"16
-[SAClient updateMostRecentCrashDetectionEvent:]
-[SAClient dialVoiceCallToPhoneNumber:completionHandler:]
-[SAClient updateVoiceCallStatus:]
v16@?0@"NSError"8
-[SAClient serverProxy]_block_invoke
-[SAClient connection]
SAErrorDomain
Place holder for future private errors
SAErrorNotAuthorized
SAErrorNotAllowed
SAErrorInvalidArgument
SAErrorOperationFailed
SAErrorNotAuthorizedRecovery
SAErrorNotAvailableRecovery
-[SAEmergencyResponseManager dialVoiceCallToPhoneNumber:completionHandler:]
-[SAEmergencyResponseManager updateVoiceCallStatus:]
v16@?0@"NSString"8
v24@?0@"NSString"8@"NSError"16
+[SABundleManager approvedBundleIdsForService:]
-[SABundleManager approvedApps]
v24@?0@"NSObject<OS_tcc_authorization_record>"8^{__CFError=}16
q24@?0@"SABundleManagerApp"8@"SABundleManagerApp"16
kTCCServiceCrashDetection
+[SABundleManager bundleURLForAuditToken:]
-[SABundleManager wakeApprovedAppsWithReason:completion:]
-[SABundleManager openApplicationInBackgroundWithBundleId:withReason:completion:]
-[SABundleManager openApplicationInForegroundWithBundleId:withReason:completion:]
__LaunchOrigin
__PromptUnlockDevice
__UnlockDevice 
-[SABundleManager openApplicationInForegroundWithBundleId:withReason:completion:]_block_invoke
v20@?0B8@"NSError"12
v24@?0@"ACXRemoteApplication"8@"NSError"16
LocationBundles
Emergency SOS.bundle
SafetyCallNotice
SafetyNotification
SafetyUserNotification
-[SALocationManager notifyLocation:]
-[SALocationManager startMonitoringLocation]
-[SALocationManager stopMonitoringLocation]
-[SALocationManager locationManager:didUpdateLocations:]
-[SALocationManager locationManager:didFailWithError:]
-[SAWatchApplicationLauncher openApplicationInBackgroundWithBundleId:withReason:completion:]
SAEmergencyResponseVoiceCallTimeout
-[SAServer init]
com.apple.SafetyKit.SAServer
-[SAServer mostRecentCrashEvent]
SAMostRecentCrashDetectionEvent
-[SAServer setMostRecentCrashEvent:]
-[SAServer recoverMostRecentCrashEvent]
-[SAServer updateMostRecentCrashDetectionEvent:completion:]
-[SAServer notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:completion:]_block_invoke
-[SAServer numberOfVoiceCallAttempts]
SANumberOfVoiceCallAttempts
-[SAServer setNumberOfVoiceCallAttempts:]
-[SAServer updateVoiceCallStatus:]
-[SAServer updateVoiceCallStatus:]_block_invoke_2
-[SAServer updateVoiceCallStatus:]_block_invoke
v24@?0@"NSXPCConnection"8@"<SAClientProtocol>"16
-[SAServer sendCrashEventToClients]
-[SAServer sendCrashEventToClients]_block_invoke_2
-[SAServer sendCrashEventToClients]_block_invoke
-[SAServer iterateClientProxies:]_block_invoke_2
v32@?0@"NSXPCConnection"8Q16^B24
-[SAServer requestMostRecentCrashDetectionEvent]
-[SAServer requestCrashDetectionAuthorization:]
-[SAServer dialVoiceCallToPhoneNumber:completionHandler:]
-[SAServer dialVoiceCallToPhoneNumber:completionHandler:]_block_invoke
-[SAServer listener:shouldAcceptNewConnection:]
SACrashDetectionManagerAvailable
SACrashDetectionManager.m
SafetyKit Crash Detection entitlement is required for this API
-[SACrashDetectionManager init]
UIApplicationDidBecomeActiveNotification
-[SACrashDetectionManager authorizationStatus]
SafetyKit Crash Detection entitlement is required to use this API
-[SACrashDetectionManager setDelegate:]
-[SACrashDetectionManager requestAuthorizationWithCompletionHandler:]
-[SACrashDetectionManager requestAuthorizationWithCompletionHandler:]_block_invoke
-[SACrashDetectionManager _appDidBecomeActive:]
-[SACrashDetectionManager _callDelegateWithCrashEvent:]
-[SACrashDetectionManager updateMostRecentCrashDetectionEvent:]
SACrashDetectionEventTimeout
kSACrashDetectionEventTimeOfDetection
kSACrashDetectionEventTimeOfResolution
kSACrashDetectionEventResponse
kSACrashDetectionEventLocation
kSACrashDetectionEventIsNotified
SACrashDetectionEvent - date: %@, response: %ld, location: %@, notified: %d
-[SAPhoneApplicationLauncher openApplicationInBackgroundWithBundleId:withReason:completion:]
com.apple.developer.severe-vehicular-crash-event
default
SAServerMockAuthorizationPromptAnswer
SAKappaThirdPartyBundleId
Authorization, isInFlight: %d, from: %@ (%@), to: %@ (%@)
+[SAAuthorization showAuthorizationPrompt]
ALERT_HEADER_LONG_PHONE
ALERT_HEADER_LONG_MISSING_APP_PHONE
ALERT_LONG_PHONE
DEFAULT_BUTTON_TITLE_LONG
ALTERNATE_BUTTON_TITLE_LONG
ALTERNATE_BUTTON_TITLE_MISSING_APP_LONG
ALERT_HEADER_SHORT_PHONE
ALERT_SHORT_PHONE
DEFAULT_BUTTON_TITLE_SHORT
ALTERNATE_BUTTON_TITLE_SHORT
+[SAAuthorization showAuthorizationPrompt]_block_invoke
mobile
void authorizationPromptResponseHandler(CFUserNotificationRef, CFOptionFlags)
AirplaneMode
SigningFuse
InternalBuild
_Bool localMGGetBoolAnswer(CFStringRef)
SAGestalt.m
MGGetBoolAnswer
void *libMobileGestaltLibrary(void)
/usr/lib/libMobileGestalt.dylib
/usr/local/lib/libMobileGestalt.dylib
Unable to get Bundle for currently authorized app: %@
Notification response: %@
Launching app in foreground because of 3P notification interaction
%s, phoneNumberString: %{private}@
%s - request is valid, request: %@
%s - request is valid, request.URL: %{private}@
%s - request is not valid, request: %@, request.URL: %@
%s - unable to place voice call, error: %@
%s - unable to place voice call, in airplane mode
%s - current call out of sync, cleaning up
%s - cannot place new call because there is already a call in progress
%s, result: %d
%s - we found our call, call: %@
%s - updating status for call, call: %@, status: %lu
%s - unhandled status for call, call: %@
%s - ignoring status for call since it didn't change, call: %@, status: %lu
%s - ignoring status for non-current call, call: %@
%s, call: %@
%s - Unable to request authorization because there is already an active request.
%s, event: %@
Received malformed message from server for updateMostRecentCrashDetectionEvent: event should never be nil.
%s, phoneNumber: %@
%s, status: %lu
%s - unable to get serverProxy, error: %@
%s - Creating New SAClient Connection
SA server connection interrupted
SA server connection invalidated
%s, status: %ld
Unable to get Bundle for app with previous authorization: %@
Unable to get remote app bundleId for fromBundleId: %@, error: %@
%s, service: %@
%s - Found more than one approved app for service, revoking access for duplicate app, bundleId: %@
%s - Unable to revoke access for duplicate app, bundleId: %@
%s - unable to get bundle information for audit token, error: %@
%s, reason: %lu, service: %@
%s - Need to wake app, app: %@
%s - attempting to launch app in background, bundleId: %@
%s - attempting to launch app in foreground, bundleId: %@
%s - Unable to launch bundle application in foreground, bundleId: %@, reason: %lu, error: %@
%s - Successfully launched bundle application in foreground, bundleId: %@, reason: %lu
Unable to get remote app for fromBundleId: %@, error: %@
%{public}s, Unable to deliver location updates
%s, Starting location updates
%s, Stopping location updates
%s, Location update received, %@
%s, Location manager error, %@
%s - attempted to use watch launcher on non watch platform, bundleId: %@
%s - no crash event found in NSUserDefaults
%s - Unable to load mostRecentCrashEvent from NSUserDefaults, error: %@
%s - loaded crash event found in NSUserDefaults, crashEvent: %@
%s, mostRecentCrashEvent: %@
%s - mostRecentCrashEvent nil, removing from NSUserDefaults
%s - Unable to save mostRecentCrashEvent in NSUserDefaults, mostRecentCrashEvent: %@, error: %@
%s - saving crash event in NSUserDefaults, mostRecentCrashEvent: %@
%s - Recovered crash event, crashEvent: %@, numberOfVoiceCallAttempts: %ld
%s, crashEvent: %@
Reentrant notification, waiting for location on older semaphore
Timeout getting location
%s - Crash event resolved
%s - no call attempts found in NSUserDefaults
%s - Unable to load numberOfVoiceCallAttempts from NSUserDefaults, error: %@
%s - loaded call attempts found in NSUserDefaults, numberOfVoiceCallAttempts: %@
%s, numberOfCallAttempts: %ld
%s - Unable to save numberOfVoiceCallAttempts in NSUserDefaults, numberOfVoiceCallAttempts: %ld, error: %@
%s - saving call attempts in NSUserDefaults, numberOfVoiceCallAttempts: %ld
%s - authorized, sending, connection: %@, status: %ld
%s - unauthorized, not sending, connection: %@, status: %ld
%s - not sending nil event
%s - not sending already notified event, event: %@
%s - authorized, sending, connection: %@, crashEvent: %@
Critical notification scheduled
Error scheduling critical notification: %@
%s - unauthorized, not sending, connection: %@, crashEvent: %@
%s - Error from remoteObjectProxyWithErrorHandler: %@
%s - app requesting authorization has already been authorized
%s - app requesting authorization but we are already prompting user for authorization.
%s - unable to start authorization for bundleURL, bundleURL: %@
%s - not authorized,
%s - not placing voice call because request was not made around an emergency event.
%s - not placing voice call because number of call attempts have exceeded, attempts, %ld
%s - attempting to place voice call, phoneNumber: %@, callAttempts: %ld
%s - voice call accepted
%s - voice call not accepted, error: %@
%s, newConnection: %@
SA client connection interrupted
SA client connection invalidated
[WARN] New connection %@ missing entitlement: %@
shouldAcceptNewConnection: %d for connection: %@
Updating voice call attempts due to active call: 1
Updating voice call attempts due to failure: %ld
%s - Manager is unavailable, all API calls will fail.
%s - Manager is unavailable, returning SAAuthorizationStatusDenied
%s - Manager is unavailable, not setting delegate.
%s, %@
%s - Manager is unavailable, responding with SAAuthorizationStatusDenied
%s - Authorization already granted, status: %lu
%s - Application not in foreground, not requesting authorization, status: %lu, application: %lu
%s - Requesting authorization from server, currentStatus: %lu
%s - Authorization requested from server, newStatus: %lu
%s - Unable to launch bundle, bundleId: %@, reason: %lu, error: %@
%s - Successfully launched bundle, bundleId: %@, reason: %lu, process: %@
[WARN] Unexpected value %@ for %@ entitlement: %@
[WARN] Unexpected NULL value returned from SecTaskCreateFromSelf()
Unable to get Bundle for app requesting authorization: %@
%s - Authorization prompt for, authorization: %@
%s - Asked to display authorization prompt but not currently authorizing.
%s - Would have presented notification, details: %@
%s - Mocking answer to authorization prompt, mockAnswer: %@, responseFlags: %lu
%s - CFUserNotificationCreate failed, error: %d
attempting to set third party bundleId that doesn't exist: %@
setting third party bundleId: %@
%s - Authorization not in flight, this shouldn't be called.
%s - No button was pressed and the notification timed out.
%s - Authorization granted, revoking permissions from previous app, bundleId: %@
%s - Failed to revoke permissions from previous app, bundleId: %@
%s - Authorization granted, granting permissions to app, bundleId: %@
%s - Failed to grant permissions to app, bundleId: %@
%s - Failed to reinstate permissions to app, no app is authorized, bundleId: %@
%s - Successfully granted permissions to app, bundleId: %@
%s - Authorization not granted, denying permissions to app, bundleId: %@
%s - Failed to successfully apply permissions to app, bundleId: %@
SACriticalNotification
UNUserNotificationCenterDelegate
NSObject
SATelephonyManager
SAServerProtocol
SACrashDetectionServerProtocol
SAEmergencyResponseServerProtocol
SAClientProtocol
SACrashDetectionClientProtocol
SAEmergencyResponseClientProtocol
SAClient
SAError
SAEmergencyResponseManager
SABundleManagerApp
SABundleManager
SALocationManager
CLLocationManagerDelegate
SAWatchApplicationLauncher
SAApplicationLauncher
SafetyKit
SAServer
SATelephonyDelegateProtocol
SALocationManagerProtocol
NSXPCListenerDelegate
SACrashDetectionManager
SACrashDetectionEvent
NSSecureCoding
NSCoding
NSCopying
SAPhoneApplicationLauncher
SAEntitlement
SAAuthorizationInFlight
SAAuthorization
SAGestalt
T@"NSString",&,N,V_fromBundleId
SASyncedBundleId
_callInProgress
T@"<SACrashDetectionClientProtocol>",W,N,V_crashDetectionClientDelegate
_pairedBundleId
T@"<SAEmergencyResponseClientProtocol>",W,N,V_emergencyResponseClientDelegate
allKeys
T@"<SALocationManagerProtocol>",W,N,V_delegate
bundleForClass:
T@"CLLocation",C,N,V_mostRecentLocation
elapsed
T@"CLLocationManager",&,N,V_locationManager
fromApp
T@"NSDate",R,N,V_date
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_callQueue
locationAquired
T@"NSString",&,N,V_name
locationManager:didEnterRegion:
T@"NSString",C,N,V_bundleId
T@"NSString",R,C
setExplanation:
.cxx_destruct
T#,R
_center
T@"<SACrashDetectionDelegate>",W,N,V_delegate
_server
T@"<SAEmergencyResponseDelegate>",W,N,V_delegate
applicationName
T@"<SATelephonyDelegateProtocol>",W,N,V_delegate
defaultProvider
T@"CLLocation",R,N,V_location
emergencyResponseClientDelegate
T@"NSDate",&,N,V_authorizationDate
isInternalBuild
T@"NSDate",R,N,V_timeOfResolution
isValid
T@"NSObject<OS_dispatch_semaphore>",&,N,V_locationAquired
locationManager
T@"NSString",&,N,V_toBundleId
notifyLocation:
T@"NSString",C,N,V_pairedBundleId
release
T@"NSString",R,N,GgetFromBundleLocalizedName
T@"NSString",R,N,GgetToBundleLocalizedName,VtoBundleLocalizedName
T@"NSXPCConnection",R,N,V_connection
T@"SABundleManagerApp",&,N,V_fromApp
T@"SAClient",R,N
T@"SACrashDetectionEvent",C,N
T@"TUCall",&,N,V_call
T@?,C,N,V_completionHandler
TB,N,GisInFlight,V_inFlight
TB,N,V_callFailed
TB,N,V_callInProgress
TB,N,V_isNotified
TB,R
TB,R,N
TB,R,N,GisAvailable
TB,R,N,GisInFlight
TB,R,N,Gsa_hasFailed
TQ,R
Td,R,N
Tq,N
Tq,N,V_deviceType
Tq,N,V_preflightAuthorizationStatus
Tq,R,N
Tq,R,N,V_response
URLByAppendingPathComponent:
URLsForDirectory:inDomains:
_appDidBecomeActive:
_applicationLauncher
_assertionMap
_authenticationRequestHandler
_authorizationDate
_bundleId
_bundleManager
_call
_callDelegateWithCrashEvent:
_callFailed
_callQueue
_callStatusChanged:
_canPlaceNewCall:
_clientConnections
_completionHandler
_connection
_copyPrefsValueForKey:
_crashDetectionClientDelegate
_createNotification
_criticalNotification
_currentCallEnded
_date
_delegate
_deviceType
_emergencyResponseClientDelegate
_fromApp
_fromBundleId
_inFlight
_isNotified
_listener
_location
_locationAquired
_locationManager
_messageQueue
_mostRecentLocation
_name
_options
_preflightAuthorizationStatus
_response
_service
_setPrefsValue:forKey:
_synchronizePrefs
_telephonyManager
_timeOfResolution
_toBundleId
actionIdentifier
addAssertion:forProcessId:
addNotificationRequest:withCompletionHandler:
addObject:
addObserver:selector:name:object:
allObjects
allocWithZone:
applicationOnPairedDevice:withBundleID:error:
applicationState
approvedAppExcludingBundleId:
approvedApps
approvedBundleId
approvedBundleIdsForService:
archivedDataWithRootObject:requiringSecureCoding:error:
arrayWithObjects:count:
attributeWithDomain:name:
auditToken
auditTokenAuthorizedForAnyEmergency:
auditTokenAuthorizedForCrashDetection:
authorizationDate
authorizationStatus
authorizationStatusForCurrentConnection
authorizationStatusWithTCCPreflightResult:
autorelease
available
availableOverrideSetting
boolValue
bundleId
bundleIdentifier
bundleRecordForAuditToken:error:
bundleURLForAuditToken:
bundleURLForCurrentConnection
bundleWithIdentifier:
bundleWithURL:
call
callAuthenticationRequestHandlerWithError
callAuthenticationRequestHandlerWithStatus:error:
callFailed
callInProgress
callQueue
categoryWithIdentifier:actions:intentIdentifiers:options:
class
cleanupInvalidAssertions
client
code
companionAppBundleID
compare:
completionHandler
conformsToProtocol:
connection
connectionAuthorizedForAnyEmergency:
connectionAuthorizedForCrashDetection:
contextWithIdentity:
copyWithZone:
count
countByEnumeratingWithState:objects:count:
crashDetectionClientDelegate
crashDetectionEventTimeout
crashDetectionManager
crashDetectionManager:didDetectEvent:
currentCalls
currentConnection
currentConnectionAuthorizedForAnyEmergency
currentConnectionAuthorizedForCrashDetection
currentHandler
currentProcessHasEntitlement:
date
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
defaultSound
defaultWorkspace
delegate
description
deviceSupportsKappa
deviceType
dialVoiceCallToPhoneNumber:completionHandler:
dialWithRequest:completion:
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
disconnectedReason
doubleValue
emergencyResponseManager:didUpdateVoiceCallStatus:
emergencyResponseVoiceCallTimeout
encodeBool:forKey:
encodeDouble:forKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeWithCoder:
enumerateObjectsUsingBlock:
errorWithCode:
errorWithCode:description:recoverySuggestion:
errorWithCode:description:recoverySuggestion:underlyingError:
errorWithDomain:code:userInfo:
execute:assertion:error:
fetchApplicationOnPairedDevice:withBundleID:completion:
fetchWatchAppBundleIDForCompanionAppBundleID:completion:
firstObject
fromBundleId
fromBundleLocalizedName
getActivePairedDevice
getFromBundleLocalizedName
getFromBundleLocalizedNameWithCompletion:
getLocalizedName
getLocalizedNameForPairedDeviceWithCompletion:
getRemoteApplicationNameWithBundleId:withCompletion:
getToBundleLocalizedName
handle
handleCallChanged:force:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
hash
iconForApplicationIdentifier:
identityForEmbeddedApplicationIdentifier:
inAirplaneMode
inFlight
init
initWithBundleId:deviceType:
initWithBundleIdentifier:
initWithBundleManager:
initWithCapacity:
initWithCoder:
initWithContext:
initWithEffectiveBundle:delegate:onQueue:
initWithMachServiceName:
initWithMachServiceName:options:
initWithProvider:
initWithQueue:
initWithServiceName:
initWithTimeIntervalSinceReferenceDate:
initWithTimeOfDetection:timeOfResolution:response:location:
initWithTimeOfDetection:timeOfResolution:response:location:isNotified:
initWithType:value:
integerValue
interfaceWithProtocol:
invalidate
isAvailable
isEqual:
isEqualToCall:
isEqualToString:
isInFlight
isKindOfClass:
isMemberOfClass:
isNotified
isProductionFused
iterateClientProxies:
listener:shouldAcceptNewConnection:
localizedStringForKey:value:table:
locallyAvailableApplicationWithBundleID:forPairedDevice:error:
location
locationBundle
locationManager:didChangeAuthorizationStatus:
locationManager:didDetermineState:forRegion:
locationManager:didExitRegion:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didFailWithError:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didRangeBeacons:inRegion:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didStartMonitoringForRegion:
locationManager:didUpdateHeading:
locationManager:didUpdateLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didVisit:
locationManager:monitoringDidFailForRegion:withError:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManagerDidChangeAuthorization:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManagerShouldDisplayHeadingCalibration:
mostRecentCrashEvent
mostRecentLocation
name
notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:
notifyCrashDetectedAt:resolvedAt:resolvedWithResponse:completion:
numberOfVoiceCallAttempts
numberWithInt:
numberWithInteger:
object
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
openApplicationInBackgroundWithBundleId:withReason:completion:
openApplicationInForegroundWithBundleId:withReason:completion:
openApplicationWithBundleIdentifier:usingConfiguration:completionHandler:
pairedBundleId
pairedDeviceBundleIdForId:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
placeVoiceCall:completionHandler:
preflightAuthorizationStatus
reasonToAttributeName:
recoverMostRecentCrashEvent
remoteApplicationWithBundleId:error:
remoteObjectProxyWithErrorHandler:
removeObject:
removeObjectForKey:
requestAuthorizationWithCompletionHandler:
requestCrashDetectionAuthorization:
requestMostRecentCrashDetectionEvent
requestWithIdentifier:content:trigger:
reset
respondsToSelector:
response
resume
retain
retainCount
sa_failed
sa_hasFailed
self
sendCrashEventToClients
sendNotificationWithCompletionHandler:
serverProxy
setAccess:forBundleId:
setAttributes:
setAuthorizationDate:
setBody:
setBundleId:
setCall:
setCallFailed:
setCallInProgress:
setCallQueue:
setCategoryIdentifier:
setClasses:forSelector:argumentIndex:ofReply:
setCompletionHandler:
setConnection:
setCrashDetectionClientDelegate:
setDelegate:
setDesiredAccuracy:
setDeviceType:
setEmergencyResponseClientDelegate:
setExportedInterface:
setExportedObject:
setFromApp:
setFromBundleId:
setFrontBoardOptions:
setHandle:
setIcon:
setInFlight:
setInterruptionHandler:
setInvalidationHandler:
setIsNotified:
setLocationAquired:
setLocationManager:
setMostRecentCrashEvent:
setMostRecentLocation:
setName:
setNotificationCategories:
setNumberOfVoiceCallAttempts:
setObject:forKey:
setObject:forKeyedSubscript:
setPairedBundleId:
setPreflightAuthorizationStatus:
setRemoteObjectInterface:
setShouldBackgroundDefaultAction:
setShouldIgnoreDoNotDisturb:
setShouldShowSubordinateIcon:
setShowUIPrompt:
setSound:
setThirdPartyBundleId:
setTitle:
setToBundleId:
setWantsNotificationResponsesDelivered
setWithObject:
sharedApplication
sharedDeviceConnection
sharedInstance
showAuthorizationPrompt
sortedArrayUsingComparator:
standardUserDefaults
startAuthorizationForBundleURL:preflightAuthorizationStatus:completionHandler:
startMonitoringLocation
startUpdatingLocation
status
stopMonitoringLocation
stopUpdatingLocation
stringWithCString:encoding:
stringWithFormat:
stringWithUTF8String:
superclass
supportsSecureCoding
synchronize
synchronizeUserDefaultsDomain:keys:
telephonyManager:didUpdateVoiceCallStatus:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timeOfResolution
toBundleId
toBundleLocalizedName
unarchivedObjectOfClass:fromData:error:
updateMostRecentCrashDetectionEvent:
updateMostRecentCrashDetectionEvent:completion:
updateVoiceCallStatus:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
userNotificationCenter:willPresentNotification:withCompletionHandler:
validityErrors
value
valueForEntitlement:
valueForKey:
wakeApprovedAppsWithReason:completion:
zone
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@24@0:8@16
v24@0:8@?16
v16@0:8
@"UNUserNotificationCenter"
@"SABundleManager"
v32@0:8@16@?24
v28@0:8@16B24
v24@0:8@16
v20@0:8B16
@"<SATelephonyDelegateProtocol>"
@"TUCall"
@"NSObject<OS_dispatch_queue>"
v24@0:8@?<v@?q@"NSError">16
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"SACrashDetectionEvent"16
v24@0:8q16
v32@0:8q16@24
@"NSXPCConnection"
@"<SACrashDetectionClientProtocol>"
@"<SAEmergencyResponseClientProtocol>"
@24@0:8q16
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@"<SAEmergencyResponseDelegate>"
@32@0:8@16q24
q16@0:8
@"NSString"
@"NSDate"
@24@0:8^{__CFString=}16
@48@0:8{?=[8I]}16
@32@0:8@16^@24
v32@0:8q16@?24
v40@0:8@16q24@?32
@"<SAApplicationLauncher>"
@"NSObject<OS_tcc_server>"
@"NSObject<OS_tcc_service>"
@"NSObject<OS_tcc_message_options>"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"<SALocationManagerProtocol>"
@"CLLocationManager"
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
d16@0:8
v32@0:8@16q24
v32@0:8@"SATelephonyManager"16q24
v32@0:8@"SALocationManager"16@"CLLocation"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@16@24q32
v48@0:8@16@24q32@?40
@"SATelephonyManager"
@"SALocationManager"
@"NSXPCListener"
@"NSMutableArray"
@"SACriticalNotification"
@"CLLocation"
@"NSObject<OS_dispatch_semaphore>"
@"<SACrashDetectionDelegate>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24q32@40
@52@0:8@16@24q32@40B48
@"NSMutableDictionary"
@?16@0:8
@"SABundleManagerApp"
B48@0:8{?=[8I]}16
q20@0:8i16
B40@0:8@16q24@?32
B28@0:8B16@20
^v24@0:8@16
