@(#)PROGRAM:AMPIDService  PROJECT:MetricsKit-1
MetricsKit: AMPIDService shared secret store created
MetricsKit: AMPIDService XPC connection invalidated
MetricsKit: AMPIDService shared secret store released
MetricsKit: AMPIDService XPC connection from client interrupted!
MetricsKit: AMPIDService XPC connection made from pid %ld
MetricsKit: Failed to setup dir suffix for sandbox environment (error code: %d)
MetricsKit: AMPIDService XPC Service started
MetricsKit: Expected a path but got a full url for MTFrameworkEnvironment.setLocalDataPath. Please remove file:// from %@
MetricsKit: Failed to read entitlement %@ error: %@
MetricsKit: Error occurred with code %ld: %@
MetricsKit: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %@ error = %@
MetricsKit: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
MetricsKit: Someone is attempting to finish a finished MTPromise.
MetricsKit: AMPIDService is using iCloud container in the sandbox environment
MetricsKit: Restarting ID sync engine because account has changed
MetricsKit: Creating new zone with ID %@
MetricsKit: Started fetching record with IDs
MetricsKit: Failed to fetch records with ID. error %@
MetricsKit: Started fetching record with ID %@
MetricsKit: Started fetching all record changes
MetricsKit: Started saving %ld records with qos %ld
MetricsKit: Server has a newer version of record with ID %@, use server record instead
MetricsKit: Failed to save record with ID %@ error %@
MetricsKit: Failed to fetch records with error %@
MetricsKit: Failed to delete record with ID %@ error %@
MetricsKit: Updating record %@ for namespace %@ key %@
MetricsKit: Updating reference record %@ with current date
MetricsKit: Failed to save local record data with ID %@ error %@
MetricsKit: Updated user record with ID %@
MetricsKit: Error starting sync engine: %@
MetricsKit: Started sync engine with %d unsynchronized records
MetricsKit: Started sync engine with all records synchronized
MetricsKit: Failed to read local record data with ID %@ error %@
MetricsKit: Failed to delete local record data with ID %@ error %@
MetricsKit: Loaded reference record %@ dsId %@ %@
MetricsKit: Performing maintenance on %d ID schemes
MetricsKit: Error: %@
MetricsKit: Failed to load user record ID with error %@
MetricsKit: CloudKit user has changed
MetricsKit: Failed to write user record ID with error %@
MetricsKit: Failed to write fetch file with error %@
MetricsKit: Failed to load sync engine status with error %@
MetricsKit: Failed to write sync engine status with error %@
MetricsKit: Saving synchronized record with ID %@ for namespace %@
MetricsKit: Saving unsynchronized record with ID %@ for namespace %@
MetricsKit: Failed to delete corrupted data file %@ error %@
MetricsKit: Clearing local CloudKit record cache
MetricsKit: Failed to remove local record data %@ with error %@
MTXPCServiceInterface
NSObject
ServiceDelegate
NSXPCListenerDelegate
MTXPCConnection
MTFrameworkEnvironment
Utilities
SHA1Base62
Base62
MTInterprocessChangeNotifier
MTWeakRef
MTNonretainedCache
MTPromise
MTIDSyncEngine
MTIDSpan
Composition
MTPromiseResult
MTPromiseCompletionBlocks
MTPromiseWithTimeout
MTIDScheme
NSSecureCoding
NSCoding
MTIDSecret
MTIDCloudKitStore
MTIDCloudKitLocalDBDelegate
MTIDSyncEngineDelegate
MTIDSecretStore
MTIDCloudKitPromiseManager
MTIDCloudKitLocalDB
SyncState
MTIDCompositeSecretStore
T@"CKContainer",&,N,V_container
T#,R
T@"NSDate",C,N,V_expirationDate
T@"<MTIDSecretStore>",R,N,V_secretStore
Tq,N,V_lifespan
T@"CKRecordZoneID",&,N,V_recordZoneID
_expirationDate
T@"MTIDCloudKitLocalDB",&,N,V_localDB
_idType
T@"MTIDSyncEngine",&,N,V_syncEngine
_promiseManager
T@"MTPromiseCompletionBlocks",&,N,V_completionBlocks
_stores
T@"NSArray",C,N,V_correlations
_topics
T@"NSConditionLock",&,N,V_stateLock
addFinishBlock:
T@"NSDate",&,N,V_referenceDate
catchWithBlock:
T@"NSDate",C,N,V_effectiveDate
correlationHash
T@"NSMutableArray",W,N,V_transactions
dealloc
T@"NSMutableDictionary",&,N,V_dict
fetchAllRecords
T@"NSMutableDictionary",&,N,V_stores
initWithZoneID:
T@"NSMutableSet",&,N,V_queuedRecordIDs
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
mt_base62String
T@"NSObject<OS_dispatch_source>",&,N,V_dispatchSourceTimer
notify:
T@"NSString",&,N,V_containerIdentifier
pathURL
T@"NSString",&,N,V_syncStatusCode
promiseWithAll:
T@"NSString",C,N
queuedRecordIDs
T@"NSString",C,N,V_idNamespace
release
T@"NSString",C,N,V_version
T@"NSURL",&,N,V_pathURL
setDay:
T@,W,N,V_value
setIdNamespace:
TB,N,V_isDefault
setZoneCreated:
TB,N,V_zoneCreated
version
.cxx_destruct
T@"CKRecordZoneID",&,N,V_zoneID
T@"<MTIDCloudKitLocalDBDelegate>",W,N,V_delegate
T@,R,N,V_result
T@"<MTIDSyncEngineDelegate>",W,N,V_delegate
_endTransaction
T@"MTFrameworkEnvironment",&
_generatedDates
T@"MTIDCloudKitPromiseManager",&,N,V_promiseManager
_isSynchronized
T@"MTPromise",&,N,V_promise
_result
T@"MTPromiseResult",&,N,V_promiseResult
_syncStatusCode
T@"NSArray",C,N,V_topics
_zoneID
T@"NSDate",&,N,V_endDate
bundleForClass:
T@"NSDate",&,N,V_startDate
containsObject:
T@"NSError",R,C,N,V_error
T@"NSMutableDictionary",&,N,V_cache
endDate
T@"NSMutableDictionary",&,N,V_generatedDates
fullIdentifier:
T@"NSMutableSet",&,N,V_pendingRecordIDs
isInternalBuild
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
localDB
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
mt_map:
T@"NSString",&,N,Gmt_secretValue,Smt_setSecretValue:
numberWithBool:
T@"NSString",&,N,V_recordType
promise
T@"NSString",&,V_applicationBundleIdentifierOverrideForNetworkAttribution
promiseWithAny:
T@"NSString",C,N,V_containerIdentifier
recordWasSaved:
T@"NSString",C,N,V_value
serviceListener
T@"NSString",R,C
setAccessQueue:
T@"NSXPCConnection",R,W,N,V_connection
setFetchRecordsCompletionBlock:
TB,N,Gmt_isSynchronized,Smt_setSynchronized:
setRecordWithIDWasDeletedBlock:
TB,N,V_isSynchronized
storagePoolSize
TB,R
TB,R,N,GisCancelled
TB,R,N,GisFinished
TB,V_canSyncBetweenDevices
TQ,N,V_correlationHash
TQ,N,V_localHash
TQ,N,V_serialNumber
TQ,R
TQ,R,N
Td,N
Td,R,N
Tq,N,V_idType
Tq,N,V_qualityOfService
Tq,N,V_rotationSchedule
Tq,N,V_state
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLWithString:
UTF8String
UUID
UUIDString
_accessQueue
_addBlock:orCallWithResult:
_applicationBundleIdentifierOverrideForNetworkAttribution
_beginTransaction
_cache
_callbackQueue
_canSyncBetweenDevices
_completionBlocks
_configuration
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPromises:currentPromiseIndex:
_connection
_container
_containerIdentifier
_correlationHash
_correlations
_delegate
_dict
_dispatchSourceTimer
_effectiveDate
_endDate
_error
_errorIsCanceledError:
_findUnfinishedPromise:
_finishPromise:withPromise:
_generateFutureRecordsForScheme:referenceRecord:
_globalPromiseStorage
_globalPromiseStorageAccessQueue
_idNamespace
_identifier
_isDefault
_isFinished
_lifespan
_localDB
_localDataPath
_localHash
_pathURL
_pendingRecordIDs
_promise
_promiseResult
_qualityOfService
_queue
_queuedRecordIDs
_recordType
_recordZoneID
_referenceDate
_resultOfComposition:errors:
_rotationSchedule
_secretStore
_serialNumber
_setupCompositePromise:composition:
_shouldCallImmediately
_startDate
_state
_stateLock
_syncEngine
_token
_transactions
_value
_version
_zoneCreated
accessQueue
accountDidChange:
accountDidChangeWithUserRecordID:
accountInfoWithCompletionHandler:
accountStatus
addCompletionBlock:
addEntriesFromDictionary:
addErrorBlock:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addPendingRecordID:
addRecordIDsToSave:recordIDsToDelete:qualityOfService:
addSuccessBlock:
allObjects
allRecords
applicationBundleIdentifierOverrideForNetworkAttribution
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
boolCompletionHandlerAdapter
boolValue
bundleIdentifier
bytes
cache
calculateHash
callCompletionBlock:withPromiseResult:
callErrorBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
callbackQueue
canSyncBetweenDevices
cancel
cancelPromisesInComposition:
cancelled
caseInsensitiveCompare:
class
classesForSelector:argumentIndex:ofReply:
clearData
clearLocalData
cloudKitLocalDB:didChangeRecord:
code
commit
compare:
compare:options:
completionBlocks
completionHandlerAdapter
components:fromDate:
components:fromDateComponents:toDateComponents:options:
condition
configuration
conformsToProtocol:
connection
container
containerID
containerIdentifier
copy
correlations
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataForName:error:
dataUsingEncoding:
dataWithContentsOfURL:options:error:
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
debugInfo
decodeArrayOfObjectsOfClass:forKey:
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeRecordFromData:recordID:isSynchronized:
defaultCenter
defaultManager
delegate
deleteIfExists:error:
deleteRecordWithID:error:
deleteRecordsWithIDs:
description
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
dispatchSourceTimer
distantFuture
doClearLocalData
doMaintainSchemes:options:
doResetSchemes:options:completion:
domain
doubleValue
effectiveDate
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeRecord:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
encryptedValuesByKey
enumerateKeysAndObjectsUsingBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
environment
error
errorOnlyCompletionHandlerAdapter
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
expirationDate
exportedInterface
fetchChangesIfNeeded
fetchRecordWithID:
fetchRecordWithIDs:
fetchRecordZoneWithID:completionHandler:
fetchUserRecordIDWithCompletionHandler:
fileExists:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
finishPromisesOfRecord:
finishWithError:
finishWithResult:
finishWithResult:error:
finished
firstObject
flushCompletionBlocksWithPromiseResult:
generateFutureRecordsForScheme:referenceRecord:
generatedDates
getUUIDBytes:
handleDeletedRecordID:error:
handleEngineStartedWithError:
handleFetchedRecords:error:
handleSavedRecord:error:
handleUserRecordID:
hasPrefix:
hasSuffix:
hash
hostProcessBundleIdentifier
idNamespace
idType
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithBytes:length:encoding:
initWithCalendarIdentifier:
initWithCallbackQueue:
initWithCoder:
initWithCondition:
initWithContainerID:
initWithContainerIdentifer:enableSync:
initWithContainerIdentifier:environment:
initWithContainerIdentifier:recordType:recordZoneID:
initWithContainerIdentifier:zoneID:queue:delegate:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithFormat:arguments:
initWithIdentifier:onChange:
initWithNamespace:options:
initWithNamespace:type:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordsToSave:recordIDsToDelete:
initWithResult:error:
initWithScheme:date:referenceDate:
initWithTimeout:queue:timeoutBlock:
initWithUUIDBytes:
initWithValue:effectiveDate:expirationDate:isSynchronize:
initWithXPCConnection:secretStore:
initWithZoneName:ownerName:
initialize
integerForKey:
interfaceWithProtocol:
isCancelled
isDefault
isEqual:
isEqualToString:
isEqualToTimeZone:
isFinished
isKindOfClass:
isMemberOfClass:
isSynchronized
keyOfReferenceDate:
length
lifespan
listener:shouldAcceptNewConnection:
localCalendar
localDataPath
localHash
localTimeZone
localizedDescription
lock
lockWhenCondition:beforeDate:
longLongValue
mainBundle
maintainSchemes:options:
maxFutureTimeInterval
maxPastTimeInterval
metricsKitBundleIdentifier
mt_SHA1Base62String
mt_condensedArray
mt_deepCopy
mt_isSynchronized
mt_secretValue
mt_setSecretValue:
mt_setSynchronized:
mt_syncedFileExtension
mt_syncedFileName
mt_syncingFileExtension
mt_syncingFileName
mt_verifyEventData
mutableCopy
needsFetchRecords
nextObject
nilValueCompletionHandlerAdapter
notify
null
numberWithLongLong:
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectForKeyedSubscript:creation:
overrideLifespanMaybe
path
pendingRecordIDs
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
privateCloudDatabase
processIdentifier
processInfo
processName
promiseForRecordWithID:timeout:qualityOfService:existingOnly:updateRecordMaybe:
promiseManager
promiseResult
promiseWithComposition:
promiseWithError:
promiseWithResult:
qualityOfService
queue
raise:format:
recordID
recordName
recordType
recordWasDeleted:
recordWasFailedToSave:
recordWasFetched:
recordWithID:
recordWithID:error:
recordWithID:qualityOfService:updateRecordMaybe:error:
recordZoneID
referenceDate
referenceDateOfRecord:
referenceRecordForScheme:dsId:date:reset:timeout:existingOnly:qualityOfService:
referenceRecordIDForScheme:dsId:
removeAllObjects
removeItemAtURL:error:
removeObject:
removePendingRecordID:
resetSchemes:options:
respondsToSelector:
result
resultBeforeDate:error:
resultWithError:
resultWithTimeout:error:
resume
retain
retainCount
rotationSchedule
saveRecordZone:completionHandler:
saveRecordsWithIDs:qualityOfService:
schemesGroupedByStore:
secretForScheme:options:
secretForScheme:options:completion:
secretStore
secretStoreForScheme:
self
serialNumber
setApplicationBundleIdentifierOverrideForNetworkAttribution:
setAtomic:
setCache:
setCallbackQueue:
setCanSyncBetweenDevices:
setClasses:forSelector:argumentIndex:ofReply:
setCompletionBlock:
setCompletionBlocks:
setContainer:
setContainerIdentifier:
setCorrelationHash:
setCorrelations:
setDelegate:
setDict:
setDispatchSourceTimer:
setEffectiveDate:
setEndDate:
setExpirationDate:
setExportedInterface:
setExportedObject:
setGeneratedDates:
setIdType:
setInterruptionHandler:
setInvalidationHandler:
setIsDefault:
setIsSynchronized:
setLifespan:
setLocalDB:
setLocalDataPath:
setLocalHash:
setNeedsFetchRecords:
setObject:forKeyedSubscript:
setPathURL:
setPendingRecordIDs:
setPerRecordCompletionBlock:
setPromise:
setPromiseManager:
setPromiseResult:
setQualityOfService:
setQueue:
setQueuedRecordIDs:
setRecordChangedBlock:
setRecordType:
setRecordZoneFetchCompletionBlock:
setRecordZoneID:
setReferenceDate:
setRequiresSecureCoding:
setRotationSchedule:
setSavePolicy:
setSerialNumber:
setSharedEnvironment:
setStartDate:
setState:
setStateLock:
setStores:
setSyncEngine:
setSyncStatusCode:
setTopics:
setTransactionTimeout:
setTransactions:
setUserRecordIDName:
setValue:
setVersion:
setZoneID:
setupContainerWithIdentifier:
sharedEnvironment
spanForScheme:date:referenceDate:
spanRecordForScheme:span:timeout:existingOnly:qualityOfService:referenceRecord:
spanRecordIDForScheme:referenceRecordID:serialNumber:
spanRecordKeyWithReferenceRecord:serialNumber:
standardUserDefaults
start
startDate
startEngine
state
stateLock
stop
storeKeyForScheme:
stores
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
substringToIndex:
superclass
supportsDeviceToDeviceEncryption
supportsSecureCoding
syncEngine
syncEngineDidStartWithError:
syncForSchemes:options:
syncForSchemes:options:completion:
syncStatusCode
thenWithBlock:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeZone
topics
transactionTimeout
transactions
unlock
unlockWithCondition:
unsignedLongLongValue
updateRecord:isSpanRecord:scheme:expectedKey:expiration:reset:
useCloudKitSandbox
userInfo
userRecordIDName
value
valueForEntitlement:
valueForKey:
waitForRecordToSync:timeout:
waitUntilFinished
waitUntilFinishedWithTimeout:
withEnvironment:execute:
writeData:forName:error:
writeRecord:error:
writeToURL:options:error:
zone
zoneCreated
zoneID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
Vv32@0:8@16@24
v40@0:8@"MTIDScheme"16@"NSDictionary"24@?<v@?@"MTIDSecret"@"NSError">32
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"NSError">32
Vv32@0:8@"NSArray"16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v16@0:8
@"<MTIDSecretStore>"
@32@0:8@16@24
@"NSDictionary"
@"NSXPCConnection"
v32@0:8@16@?24
v24@0:8@16
@24@0:8@16
@"NSString"
@24@0:8@?16
@32@0:8@16@?24
v32@0:8@16@24
@"NSMutableDictionary"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
v24@0:8@?16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8d16^@24
v24@0:8d16
@?16@0:8
v32@0:8@?16@?24
@"MTPromiseCompletionBlocks"
@"MTPromiseResult"
@"NSConditionLock"
d16@0:8
@48@0:8@16@24@32@40
v24@0:8q16
v32@0:8@16q24
v40@0:8@16@24q32
q16@0:8
@"<MTIDSyncEngineDelegate>"
@"NSObject<OS_dispatch_queue>"
@"CKContainer"
@"CKRecordZoneID"
@"NSMutableSet"
@"NSMutableArray"
@40@0:8@16@24@32
v24@0:8Q16
@"NSDate"
@"NSError"
v32@0:8@?16@24
@40@0:8d16@24@?32
@"MTPromise"
@"NSObject<OS_dispatch_source>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
v20@0:8B16
@"NSArray"
@44@0:8@16@24@32B40
@40@0:8@16@24Q32
@32@0:8@16Q24
B56@0:8@16B24@28@36@44B52
v32@0:8@"MTIDCloudKitLocalDB"16@"CKRecord"24
v24@0:8@"CKRecordID"16
v24@0:8@"NSError"16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
@"MTPromise"32@0:8@"MTIDScheme"16@"NSDictionary"24
@"MTPromise"32@0:8@"NSArray"16@"NSDictionary"24
@"NSDictionary"16@0:8
@28@0:8@16B24
@48@0:8@16q24@?32^@40
@52@0:8@16d24q32B40@?44
@64@0:8@16@24@32B40d44B52q56
@60@0:8@16@24d32B40q44@52
@"MTIDSyncEngine"
@"MTIDCloudKitLocalDB"
@"MTIDCloudKitPromiseManager"
@32@0:8@16d24
B40@0:8@16@24^@32
B32@0:8@16^@24
@36@0:8@16@24B32
@"<MTIDCloudKitLocalDBDelegate>"
@"NSURL"
v8@?0
v24@?0@"MTIDSecret"8@"NSError"16
v24@?0@8@"NSError"16
com.apple.AMPIDService
InternalBuild
file://
MTIDCompositeSecretStore
MTIDXPCSecretStore
com.apple.security.exception.mach-lookup.global-name
MTMetricsKitContainerEnvironment
com.apple.developer.icloud-container-environment
Development
MTMetricsKit
Event data item at index %ld is of invalid type %@. Event data items must be of NSDictionary or MTPromise type.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
v12@?0i8
MTMetricsKit:%@
com.apple.amp-ae-eng.MetricsKit
general
MTError
MetricsKit error
MTException
v16@?0@"MTPromiseResult"8
v20@?0B8@"NSError"12
v16@?0@"NSError"8
v16@?0@8
com.apple.MetricsKit.globalPromiseStorageAccessQueue
iCloud account is not available. Account status: %ld
iCloud account for container %@ doesn't support device to device encryption
v24@?0@"CKRecordZone"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecord"8@"NSError"16
com.apple.AMPIDService.SyncEngineQueue
date
waitTime
reset
dsId
appBundleID
existingOnly
namespace
type
lifespan
rotation
correlations
version
container
topics
default
MTCloudKitAccountDidChangeNotification
userid
user
client
daily
com.apple.amp-ae.metricskit.identifiers
MTIDServiceLifespanOverride~%@
MTIDServiceLifespanOverride
<%@: %p, namespace: %@, lifespan: %lld correlations: %@ >
localHash
correlationHash
NotImplemented
Use initWithScheme:date: instead
<%@: %p, value: %@, effective: %@, expiration: %@ >
value
effectiveDate
expirationDate
isSynchronized
syncStatusCode
MT_IDSecret
MT_IDZone
MT_ID
.accessqueue
B16@?0@"CKRecord"8
_%llx
%lld
%@_%02lx
%llx
@"MTPromise"16@?0@"NSDictionary"8
%@-%ld
Ready
synchronized
unsynchronized
Namespace date is null, are you sending multiple reset requests too quickly?
%@%@
@"MTPromise"16@?0@"CKRecord"8
@"MTPromise"16@?0@8
secrets
@16@?0@"CKRecord"8
v16@?0@"MTPromiseWithTimeout"8
UserRecordID
NeedsFetch
SyncEngineStatus
MetricsIdentifiers
MTIDCloudKitLocalDB
MTFrameworkEnvironment.sharedEnvironment.localDataPath is not valid: %@
Application doesn't have write access to %@
systemFields
Starting
.local
.cloud
secretValue
secretKey
expiration
Cloud
Local
%@-%@
v32@?0@8@"<MTIDSecretStore>"16^B24
v32@?0@8@16^B24
subStores
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.AMPIDService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.amp-ae.metricskit.identifiers</key>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>Library/com.apple.AMPIDService/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.apsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AMPIDService</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.AMPIDService</string>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
s00
application-identifier
com.apple.AMPIDService0
aps-connection-initiate
aps-environment
serverPreferred0]0com.apple.developer.icloud-container-identifiers0)'com.apple.amp-ae.metricskit.identifiers01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
T0R'com.apple.amp-ae.metricskit.identifiers'com.apple.amp-ae.metricskit.identifiers0.)com.apple.private.cloudkit.setEnvironment
com.apple.private.cloudkit.spi
0-(com.apple.private.cloudkit.systemService
com.apple.private.tcc.allow0
kTCCServiceLiverpool0e@com.apple.security.exception.files.home-relative-path.read-write0!
Library/com.apple.AMPIDService/0H4com.apple.security.exception.mach-lookup.global-name0
com.apple.apsd0U9com.apple.security.exception.shared-preference.read-write0
com.apple.AMPIDService0*%com.apple.security.ts.cloudkit-client
com.apple.security.ts.tmpdir
com.apple.AMPIDService0
platform-application
seatbelt-profiles0
temporary-sandbox
@(#)PROGRAM:AMPIDService  PROJECT:MetricsKit-1
MetricsKit: AMPIDService shared secret store created
MetricsKit: AMPIDService XPC connection invalidated
MetricsKit: AMPIDService shared secret store released
MetricsKit: AMPIDService XPC connection from client interrupted!
MetricsKit: AMPIDService XPC connection made from pid %ld
MetricsKit: Failed to setup dir suffix for sandbox environment (error code: %d)
MetricsKit: AMPIDService XPC Service started
MetricsKit: Expected a path but got a full url for MTFrameworkEnvironment.setLocalDataPath. Please remove file:// from %@
MetricsKit: Failed to read entitlement %@ error: %@
MetricsKit: Error occurred with code %ld: %@
MetricsKit: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %@ error = %@
MetricsKit: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
MetricsKit: Someone is attempting to finish a finished MTPromise.
MetricsKit: AMPIDService is using iCloud container in the sandbox environment
MetricsKit: Restarting ID sync engine because account has changed
MetricsKit: Creating new zone with ID %@
MetricsKit: Started fetching record with IDs
MetricsKit: Failed to fetch records with ID. error %@
MetricsKit: Started fetching record with ID %@
MetricsKit: Started fetching all record changes
MetricsKit: Started saving %ld records with qos %ld
MetricsKit: Server has a newer version of record with ID %@, use server record instead
MetricsKit: Failed to save record with ID %@ error %@
MetricsKit: Failed to fetch records with error %@
MetricsKit: Failed to delete record with ID %@ error %@
MetricsKit: Updating record %@ for namespace %@ key %@
MetricsKit: Updating reference record %@ with current date
MetricsKit: Failed to save local record data with ID %@ error %@
MetricsKit: Updated user record with ID %@
MetricsKit: Error starting sync engine: %@
MetricsKit: Started sync engine with %d unsynchronized records
MetricsKit: Started sync engine with all records synchronized
MetricsKit: Failed to read local record data with ID %@ error %@
MetricsKit: Failed to delete local record data with ID %@ error %@
MetricsKit: Loaded reference record %@ dsId %@ %@
MetricsKit: Performing maintenance on %d ID schemes
MetricsKit: Error: %@
MetricsKit: Failed to load user record ID with error %@
MetricsKit: CloudKit user has changed
MetricsKit: Failed to write user record ID with error %@
MetricsKit: Failed to write fetch file with error %@
MetricsKit: Failed to load sync engine status with error %@
MetricsKit: Failed to write sync engine status with error %@
MetricsKit: Saving synchronized record with ID %@ for namespace %@
MetricsKit: Saving unsynchronized record with ID %@ for namespace %@
MetricsKit: Failed to delete corrupted data file %@ error %@
MetricsKit: Clearing local CloudKit record cache
MetricsKit: Failed to remove local record data %@ with error %@
MTXPCServiceInterface
NSObject
ServiceDelegate
NSXPCListenerDelegate
MTXPCConnection
MTFrameworkEnvironment
Utilities
SHA1Base62
Base62
MTInterprocessChangeNotifier
MTWeakRef
MTNonretainedCache
MTPromise
MTIDSyncEngine
MTIDSpan
Composition
MTPromiseResult
MTPromiseCompletionBlocks
MTPromiseWithTimeout
MTIDScheme
NSSecureCoding
NSCoding
MTIDSecret
MTIDCloudKitStore
MTIDCloudKitLocalDBDelegate
MTIDSyncEngineDelegate
MTIDSecretStore
MTIDCloudKitPromiseManager
MTIDCloudKitLocalDB
SyncState
MTIDCompositeSecretStore
T@"CKContainer",&,N,V_container
T#,R
T@"NSDate",C,N,V_expirationDate
T@"<MTIDSecretStore>",R,N,V_secretStore
Tq,N,V_lifespan
T@"CKRecordZoneID",&,N,V_recordZoneID
_expirationDate
T@"MTIDCloudKitLocalDB",&,N,V_localDB
_idType
T@"MTIDSyncEngine",&,N,V_syncEngine
_promiseManager
T@"MTPromiseCompletionBlocks",&,N,V_completionBlocks
_stores
T@"NSArray",C,N,V_correlations
_topics
T@"NSConditionLock",&,N,V_stateLock
addFinishBlock:
T@"NSDate",&,N,V_referenceDate
catchWithBlock:
T@"NSDate",C,N,V_effectiveDate
correlationHash
T@"NSMutableArray",W,N,V_transactions
dealloc
T@"NSMutableDictionary",&,N,V_dict
fetchAllRecords
T@"NSMutableDictionary",&,N,V_stores
initWithZoneID:
T@"NSMutableSet",&,N,V_queuedRecordIDs
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
mt_base62String
T@"NSObject<OS_dispatch_source>",&,N,V_dispatchSourceTimer
notify:
T@"NSString",&,N,V_containerIdentifier
pathURL
T@"NSString",&,N,V_syncStatusCode
promiseWithAll:
T@"NSString",C,N
queuedRecordIDs
T@"NSString",C,N,V_idNamespace
release
T@"NSString",C,N,V_version
T@"NSURL",&,N,V_pathURL
setDay:
T@,W,N,V_value
setIdNamespace:
TB,N,V_isDefault
setZoneCreated:
TB,N,V_zoneCreated
version
.cxx_destruct
T@"CKRecordZoneID",&,N,V_zoneID
T@"<MTIDCloudKitLocalDBDelegate>",W,N,V_delegate
T@,R,N,V_result
T@"<MTIDSyncEngineDelegate>",W,N,V_delegate
_endTransaction
T@"MTFrameworkEnvironment",&
_generatedDates
T@"MTIDCloudKitPromiseManager",&,N,V_promiseManager
_isSynchronized
T@"MTPromise",&,N,V_promise
_result
T@"MTPromiseResult",&,N,V_promiseResult
_syncStatusCode
T@"NSArray",C,N,V_topics
_zoneID
T@"NSDate",&,N,V_endDate
bundleForClass:
T@"NSDate",&,N,V_startDate
containsObject:
T@"NSError",R,C,N,V_error
T@"NSMutableDictionary",&,N,V_cache
endDate
T@"NSMutableDictionary",&,N,V_generatedDates
fullIdentifier:
T@"NSMutableSet",&,N,V_pendingRecordIDs
isInternalBuild
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
localDB
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
mt_map:
T@"NSString",&,N,Gmt_secretValue,Smt_setSecretValue:
numberWithBool:
T@"NSString",&,N,V_recordType
promise
T@"NSString",&,V_applicationBundleIdentifierOverrideForNetworkAttribution
promiseWithAny:
T@"NSString",C,N,V_containerIdentifier
recordWasSaved:
T@"NSString",C,N,V_value
serviceListener
T@"NSString",R,C
setAccessQueue:
T@"NSXPCConnection",R,W,N,V_connection
setFetchRecordsCompletionBlock:
TB,N,Gmt_isSynchronized,Smt_setSynchronized:
setRecordWithIDWasDeletedBlock:
TB,N,V_isSynchronized
storagePoolSize
TB,R
TB,R,N,GisCancelled
TB,R,N,GisFinished
TB,V_canSyncBetweenDevices
TQ,N,V_correlationHash
TQ,N,V_localHash
TQ,N,V_serialNumber
TQ,R
TQ,R,N
Td,N
Td,R,N
Tq,N,V_idType
Tq,N,V_qualityOfService
Tq,N,V_rotationSchedule
Tq,N,V_state
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLWithString:
UTF8String
UUID
UUIDString
_accessQueue
_addBlock:orCallWithResult:
_applicationBundleIdentifierOverrideForNetworkAttribution
_beginTransaction
_cache
_callbackQueue
_canSyncBetweenDevices
_completionBlocks
_configuration
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPromises:currentPromiseIndex:
_connection
_container
_containerIdentifier
_correlationHash
_correlations
_delegate
_dict
_dispatchSourceTimer
_effectiveDate
_endDate
_error
_errorIsCanceledError:
_findUnfinishedPromise:
_finishPromise:withPromise:
_generateFutureRecordsForScheme:referenceRecord:
_globalPromiseStorage
_globalPromiseStorageAccessQueue
_idNamespace
_identifier
_isDefault
_isFinished
_lifespan
_localDB
_localDataPath
_localHash
_pathURL
_pendingRecordIDs
_promise
_promiseResult
_qualityOfService
_queue
_queuedRecordIDs
_recordType
_recordZoneID
_referenceDate
_resultOfComposition:errors:
_rotationSchedule
_secretStore
_serialNumber
_setupCompositePromise:composition:
_shouldCallImmediately
_startDate
_state
_stateLock
_syncEngine
_token
_transactions
_value
_version
_zoneCreated
accessQueue
accountDidChange:
accountDidChangeWithUserRecordID:
accountInfoWithCompletionHandler:
accountStatus
addCompletionBlock:
addEntriesFromDictionary:
addErrorBlock:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addOperation:
addPendingRecordID:
addRecordIDsToSave:recordIDsToDelete:qualityOfService:
addSuccessBlock:
allObjects
allRecords
applicationBundleIdentifierOverrideForNetworkAttribution
array
arrayByAddingObject:
arrayWithCapacity:
arrayWithObjects:count:
autorelease
boolCompletionHandlerAdapter
boolValue
bundleIdentifier
bytes
cache
calculateHash
callCompletionBlock:withPromiseResult:
callErrorBlock:withPromiseResult:
callSuccessBlock:withPromiseResult:
callbackQueue
canSyncBetweenDevices
cancel
cancelPromisesInComposition:
cancelled
caseInsensitiveCompare:
class
classesForSelector:argumentIndex:ofReply:
clearData
clearLocalData
cloudKitLocalDB:didChangeRecord:
code
commit
compare:
compare:options:
completionBlocks
completionHandlerAdapter
components:fromDate:
components:fromDateComponents:toDateComponents:options:
condition
configuration
conformsToProtocol:
connection
container
containerID
containerIdentifier
copy
correlations
count
countByEnumeratingWithState:objects:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataForName:error:
dataUsingEncoding:
dataWithContentsOfURL:options:error:
date
dateByAddingTimeInterval:
dateFromComponents:
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
debugDescription
debugInfo
decodeArrayOfObjectsOfClass:forKey:
decodeBoolForKey:
decodeInt64ForKey:
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeRecordFromData:recordID:isSynchronized:
defaultCenter
defaultManager
delegate
deleteIfExists:error:
deleteRecordWithID:error:
deleteRecordsWithIDs:
description
dict
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
dispatchSourceTimer
distantFuture
doClearLocalData
doMaintainSchemes:options:
doResetSchemes:options:completion:
domain
doubleValue
effectiveDate
encodeBool:forKey:
encodeInt64:forKey:
encodeInt:forKey:
encodeObject:forKey:
encodeRecord:
encodeSystemFieldsWithCoder:
encodeWithCoder:
encodedData
encryptedValuesByKey
enumerateKeysAndObjectsUsingBlock:
enumeratorAtPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
environment
error
errorOnlyCompletionHandlerAdapter
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
expirationDate
exportedInterface
fetchChangesIfNeeded
fetchRecordWithID:
fetchRecordWithIDs:
fetchRecordZoneWithID:completionHandler:
fetchUserRecordIDWithCompletionHandler:
fileExists:
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileURLWithPath:
finishPromisesOfRecord:
finishWithError:
finishWithResult:
finishWithResult:error:
finished
firstObject
flushCompletionBlocksWithPromiseResult:
generateFutureRecordsForScheme:referenceRecord:
generatedDates
getUUIDBytes:
handleDeletedRecordID:error:
handleEngineStartedWithError:
handleFetchedRecords:error:
handleSavedRecord:error:
handleUserRecordID:
hasPrefix:
hasSuffix:
hash
hostProcessBundleIdentifier
idNamespace
idType
init
initForReadingFromData:error:
initRequiringSecureCoding:
initWithBytes:length:encoding:
initWithCalendarIdentifier:
initWithCallbackQueue:
initWithCoder:
initWithCondition:
initWithContainerID:
initWithContainerIdentifer:enableSync:
initWithContainerIdentifier:environment:
initWithContainerIdentifier:recordType:recordZoneID:
initWithContainerIdentifier:zoneID:queue:delegate:
initWithData:encoding:
initWithDomain:code:userInfo:
initWithFormat:arguments:
initWithIdentifier:onChange:
initWithNamespace:options:
initWithNamespace:type:
initWithRecordIDs:
initWithRecordName:zoneID:
initWithRecordType:recordID:
initWithRecordZoneIDs:configurationsByRecordZoneID:
initWithRecordsToSave:recordIDsToDelete:
initWithResult:error:
initWithScheme:date:referenceDate:
initWithTimeout:queue:timeoutBlock:
initWithUUIDBytes:
initWithValue:effectiveDate:expirationDate:isSynchronize:
initWithXPCConnection:secretStore:
initWithZoneName:ownerName:
initialize
integerForKey:
interfaceWithProtocol:
isCancelled
isDefault
isEqual:
isEqualToString:
isEqualToTimeZone:
isFinished
isKindOfClass:
isMemberOfClass:
isSynchronized
keyOfReferenceDate:
length
lifespan
listener:shouldAcceptNewConnection:
localCalendar
localDataPath
localHash
localTimeZone
localizedDescription
lock
lockWhenCondition:beforeDate:
longLongValue
mainBundle
maintainSchemes:options:
maxFutureTimeInterval
maxPastTimeInterval
metricsKitBundleIdentifier
mt_SHA1Base62String
mt_condensedArray
mt_deepCopy
mt_isSynchronized
mt_secretValue
mt_setSecretValue:
mt_setSynchronized:
mt_syncedFileExtension
mt_syncedFileName
mt_syncingFileExtension
mt_syncingFileName
mt_verifyEventData
mutableCopy
needsFetchRecords
nextObject
nilValueCompletionHandlerAdapter
notify
null
numberWithLongLong:
objectAtIndexedSubscript:
objectForKeyedSubscript:
objectForKeyedSubscript:creation:
overrideLifespanMaybe
path
pendingRecordIDs
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
privateCloudDatabase
processIdentifier
processInfo
processName
promiseForRecordWithID:timeout:qualityOfService:existingOnly:updateRecordMaybe:
promiseManager
promiseResult
promiseWithComposition:
promiseWithError:
promiseWithResult:
qualityOfService
queue
raise:format:
recordID
recordName
recordType
recordWasDeleted:
recordWasFailedToSave:
recordWasFetched:
recordWithID:
recordWithID:error:
recordWithID:qualityOfService:updateRecordMaybe:error:
recordZoneID
referenceDate
referenceDateOfRecord:
referenceRecordForScheme:dsId:date:reset:timeout:existingOnly:qualityOfService:
referenceRecordIDForScheme:dsId:
removeAllObjects
removeItemAtURL:error:
removeObject:
removePendingRecordID:
resetSchemes:options:
respondsToSelector:
result
resultBeforeDate:error:
resultWithError:
resultWithTimeout:error:
resume
retain
retainCount
rotationSchedule
saveRecordZone:completionHandler:
saveRecordsWithIDs:qualityOfService:
schemesGroupedByStore:
secretForScheme:options:
secretForScheme:options:completion:
secretStore
secretStoreForScheme:
self
serialNumber
setApplicationBundleIdentifierOverrideForNetworkAttribution:
setAtomic:
setCache:
setCallbackQueue:
setCanSyncBetweenDevices:
setClasses:forSelector:argumentIndex:ofReply:
setCompletionBlock:
setCompletionBlocks:
setContainer:
setContainerIdentifier:
setCorrelationHash:
setCorrelations:
setDelegate:
setDict:
setDispatchSourceTimer:
setEffectiveDate:
setEndDate:
setExpirationDate:
setExportedInterface:
setExportedObject:
setGeneratedDates:
setIdType:
setInterruptionHandler:
setInvalidationHandler:
setIsDefault:
setIsSynchronized:
setLifespan:
setLocalDB:
setLocalDataPath:
setLocalHash:
setNeedsFetchRecords:
setObject:forKeyedSubscript:
setPathURL:
setPendingRecordIDs:
setPerRecordCompletionBlock:
setPromise:
setPromiseManager:
setPromiseResult:
setQualityOfService:
setQueue:
setQueuedRecordIDs:
setRecordChangedBlock:
setRecordType:
setRecordZoneFetchCompletionBlock:
setRecordZoneID:
setReferenceDate:
setRequiresSecureCoding:
setRotationSchedule:
setSavePolicy:
setSerialNumber:
setSharedEnvironment:
setStartDate:
setState:
setStateLock:
setStores:
setSyncEngine:
setSyncStatusCode:
setTopics:
setTransactionTimeout:
setTransactions:
setUserRecordIDName:
setValue:
setVersion:
setZoneID:
setupContainerWithIdentifier:
sharedEnvironment
spanForScheme:date:referenceDate:
spanRecordForScheme:span:timeout:existingOnly:qualityOfService:referenceRecord:
spanRecordIDForScheme:referenceRecordID:serialNumber:
spanRecordKeyWithReferenceRecord:serialNumber:
standardUserDefaults
start
startDate
startEngine
state
stateLock
stop
storeKeyForScheme:
stores
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
substringToIndex:
superclass
supportsDeviceToDeviceEncryption
supportsSecureCoding
syncEngine
syncEngineDidStartWithError:
syncForSchemes:options:
syncForSchemes:options:completion:
syncStatusCode
thenWithBlock:
timeIntervalSince1970
timeIntervalSinceDate:
timeIntervalSinceNow
timeZone
topics
transactionTimeout
transactions
unlock
unlockWithCondition:
unsignedLongLongValue
updateRecord:isSpanRecord:scheme:expectedKey:expiration:reset:
useCloudKitSandbox
userInfo
userRecordIDName
value
valueForEntitlement:
valueForKey:
waitForRecordToSync:timeout:
waitUntilFinished
waitUntilFinishedWithTimeout:
withEnvironment:execute:
writeData:forName:error:
writeRecord:error:
writeToURL:options:error:
zone
zoneCreated
zoneID
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
Vv32@0:8@16@24
v40@0:8@"MTIDScheme"16@"NSDictionary"24@?<v@?@"MTIDSecret"@"NSError">32
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"NSError">32
Vv32@0:8@"NSArray"16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v16@0:8
@"<MTIDSecretStore>"
@32@0:8@16@24
@"NSDictionary"
@"NSXPCConnection"
v32@0:8@16@?24
v24@0:8@16
@24@0:8@16
@"NSString"
@24@0:8@?16
@32@0:8@16@?24
v32@0:8@16@24
@"NSMutableDictionary"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
v24@0:8@?16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8d16^@24
v24@0:8d16
@?16@0:8
v32@0:8@?16@?24
@"MTPromiseCompletionBlocks"
@"MTPromiseResult"
@"NSConditionLock"
d16@0:8
@48@0:8@16@24@32@40
v24@0:8q16
v32@0:8@16q24
v40@0:8@16@24q32
q16@0:8
@"<MTIDSyncEngineDelegate>"
@"NSObject<OS_dispatch_queue>"
@"CKContainer"
@"CKRecordZoneID"
@"NSMutableSet"
@"NSMutableArray"
@40@0:8@16@24@32
v24@0:8Q16
@"NSDate"
@"NSError"
v32@0:8@?16@24
@40@0:8d16@24@?32
@"MTPromise"
@"NSObject<OS_dispatch_source>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
v20@0:8B16
@"NSArray"
@44@0:8@16@24@32B40
@40@0:8@16@24Q32
@32@0:8@16Q24
B56@0:8@16B24@28@36@44B52
v32@0:8@"MTIDCloudKitLocalDB"16@"CKRecord"24
v24@0:8@"CKRecordID"16
v24@0:8@"NSError"16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
@"MTPromise"32@0:8@"MTIDScheme"16@"NSDictionary"24
@"MTPromise"32@0:8@"NSArray"16@"NSDictionary"24
@"NSDictionary"16@0:8
@28@0:8@16B24
@48@0:8@16q24@?32^@40
@52@0:8@16d24q32B40@?44
@64@0:8@16@24@32B40d44B52q56
@60@0:8@16@24d32B40q44@52
@"MTIDSyncEngine"
@"MTIDCloudKitLocalDB"
@"MTIDCloudKitPromiseManager"
@32@0:8@16d24
B40@0:8@16@24^@32
B32@0:8@16^@24
@36@0:8@16@24B32
@"<MTIDCloudKitLocalDBDelegate>"
@"NSURL"
v8@?0
v24@?0@"MTIDSecret"8@"NSError"16
v24@?0@8@"NSError"16
com.apple.AMPIDService
InternalBuild
file://
MTIDCompositeSecretStore
MTIDXPCSecretStore
com.apple.security.exception.mach-lookup.global-name
MTMetricsKitContainerEnvironment
com.apple.developer.icloud-container-environment
Development
MTMetricsKit
Event data item at index %ld is of invalid type %@. Event data items must be of NSDictionary or MTPromise type.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
v12@?0i8
MTMetricsKit:%@
com.apple.amp-ae-eng.MetricsKit
general
MTError
MetricsKit error
MTException
v16@?0@"MTPromiseResult"8
v20@?0B8@"NSError"12
v16@?0@"NSError"8
v16@?0@8
com.apple.MetricsKit.globalPromiseStorageAccessQueue
iCloud account is not available. Account status: %ld
iCloud account for container %@ doesn't support device to device encryption
v24@?0@"CKRecordZone"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecord"8@"NSError"16
com.apple.AMPIDService.SyncEngineQueue
date
waitTime
reset
dsId
appBundleID
existingOnly
namespace
type
lifespan
rotation
correlations
version
container
topics
default
MTCloudKitAccountDidChangeNotification
userid
user
client
daily
com.apple.amp-ae.metricskit.identifiers
MTIDServiceLifespanOverride~%@
MTIDServiceLifespanOverride
<%@: %p, namespace: %@, lifespan: %lld correlations: %@ >
localHash
correlationHash
NotImplemented
Use initWithScheme:date: instead
<%@: %p, value: %@, effective: %@, expiration: %@ >
value
effectiveDate
expirationDate
isSynchronized
syncStatusCode
MT_IDSecret
MT_IDZone
MT_ID
.accessqueue
B16@?0@"CKRecord"8
_%llx
%lld
%@_%02lx
%llx
@"MTPromise"16@?0@"NSDictionary"8
%@-%ld
Ready
synchronized
unsynchronized
Namespace date is null, are you sending multiple reset requests too quickly?
%@%@
@"MTPromise"16@?0@"CKRecord"8
@"MTPromise"16@?0@8
secrets
@16@?0@"CKRecord"8
v16@?0@"MTPromiseWithTimeout"8
UserRecordID
NeedsFetch
SyncEngineStatus
MetricsIdentifiers
MTIDCloudKitLocalDB
MTFrameworkEnvironment.sharedEnvironment.localDataPath is not valid: %@
Application doesn't have write access to %@
systemFields
Starting
.local
.cloud
secretValue
secretKey
expiration
Cloud
Local
%@-%@
v32@?0@8@"<MTIDSecretStore>"16^B24
v32@?0@8@16^B24
subStores
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.AMPIDService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.amp-ae.metricskit.identifiers</key>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>Library/com.apple.AMPIDService/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.apsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AMPIDService</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.AMPIDService</string>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
s00
application-identifier
com.apple.AMPIDService0
aps-connection-initiate
aps-environment
serverPreferred0]0com.apple.developer.icloud-container-identifiers0)'com.apple.amp-ae.metricskit.identifiers01#com.apple.developer.icloud-services0
CloudKit0C>com.apple.private.appleaccount.app-hidden-from-icloud-settings
0*%com.apple.private.cloudkit.masquerade
5com.apple.private.cloudkit.serviceNameForContainerMap
T0R'com.apple.amp-ae.metricskit.identifiers'com.apple.amp-ae.metricskit.identifiers0.)com.apple.private.cloudkit.setEnvironment
com.apple.private.cloudkit.spi
0-(com.apple.private.cloudkit.systemService
com.apple.private.tcc.allow0
kTCCServiceLiverpool0e@com.apple.security.exception.files.home-relative-path.read-write0!
Library/com.apple.AMPIDService/0H4com.apple.security.exception.mach-lookup.global-name0
com.apple.apsd0U9com.apple.security.exception.shared-preference.read-write0
com.apple.AMPIDService0*%com.apple.security.ts.cloudkit-client
com.apple.security.ts.tmpdir
com.apple.AMPIDService0
platform-application
seatbelt-profiles0
temporary-sandbox
