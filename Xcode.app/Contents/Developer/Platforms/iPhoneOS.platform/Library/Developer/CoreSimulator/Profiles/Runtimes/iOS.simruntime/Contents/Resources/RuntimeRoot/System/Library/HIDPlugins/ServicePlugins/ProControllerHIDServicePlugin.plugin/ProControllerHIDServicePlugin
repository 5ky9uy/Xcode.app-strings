GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
_GCHapticEvent
NSSecureCoding
NSCoding
GCHapticMotor
NSCopying
_GCDriverClientInterface
_GCDriverClientHapticInterface
_GCDriverServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
GCGamepadHIDServicePlugin
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCMotionServiceClientInterface
GCMotionServiceServerInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
ProControllerHIDServicePlugin
GCBatteryServiceClientInterface
homeButtonLongPressGesture:
interfaceWithProtocol:
triggerGameIntentWithEvent:
setEnableGlobalGameControllerFunctionality:
dataWithBytes:length:
countByEnumeratingWithState:objects:count:
identifier
value
valueForNoteParam:inParameters:
init
tokenAndParams
time
token
params
evaluateDeviceNoteParams:
eventID
stringWithFormat:
initWithSyntheticCommand:
description
setIdentifier:
type
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
decodeIntegerForKey:
decodeBoolForKey:
decodeDoubleForKey:
encodeInteger:forKey:
encodeBool:forKey:
encodeDouble:forKey:
initWithCoder:
encodeWithCoder:
supportsSecureCoding
TB,R
array
initWithIndex:name:features:frequency:amplitude:
initWithIndex:name:features:
initWithIndex:
encodeObject:forKey:
encodeFloat:forKey:
decodeObjectOfClass:forKey:
decodeFloatForKey:
allocWithZone:
name
copyWithZone:
index
features
frequency
amplitude
setFrequency:
setAmplitude:
addObject:
removeAllObjects
initWithIndex:name:
applyValuesFrom:
enqueueHapticTransientEvent:
drainQueuedTransients
queuedTransients
setQueuedTransients:
.cxx_destruct
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
stringWithCapacity:
appendString:
stringWithString:
uppercaseString
initWithSuiteName:
boolForKey:
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
setInterface:forSelector:argumentIndex:ofReply:
driverCheckIn
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
initWithMachServiceName:options:
setInterruptionHandler:
setInvalidationHandler:
invalidate
remoteObjectProxy
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
resume
boolValue
isEqualToString:
defaultIdleTimeoutDuration
scheduleIdleTimer
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultHapticDispatchFrequency
defaultHapticMotors
defaultLeftThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightThumbstickDeadzoneRadius
defaultRightAxisSnapRadius
createHIDDeviceForService:
open
isBluetoothClassic
createVirtualHIDDeviceForBattery
setupRawReportHandling
initGameControllerDaemonXPC
stringWithCString:encoding:
dealloc
initWithInt:
initWithBool:
setObject:forKeyedSubscript:
numberWithBool:
propertyForKey:client:
propertyForKey:
device
setProperty:forKey:
objectForKeyedSubscript:
unsignedIntValue
initWithType:timestamp:senderID:
setCancelHandler:
activate
cancel
close
setDispatchQueue:
initWithService:
cStringUsingEncoding:
shouldCreateBatteryDevice
dictionary
numberWithUnsignedLongLong:
initWithProperties:
updateBattery:isCharging:
updateClientBattery
dataWithBytesNoCopy:length:freeWhenDone:
handleReport:error:
updateIdleState
isIdle
shouldDisconnectWhenIdle
disconnect
lastEventTime
timestamp
dispatchEvent:
dispatchEvent:updateLastEventTime:
createEvent:timestamp:
setIntegerValue:forField:
setDoubleValue:forField:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
hapticMotors
count
numberOfTimesToSendZeroHapticReport
dispatchHapticEvent
objectAtIndex:
isAnyHapticMotorEnabled
stopHaptics
updateHapticMotor:
batteryReport
matchService:options:score:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
clientNotification:added:
ping
requestServiceWithReply:
sendBatteryReport
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
updateHaptics:
isHapticsActive
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
batteryUserDevice
uniqueIdentifier
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
updateSensorsActive:
readSensorsActiveWithReply:
updateLightWithRed:green:blue:
readLightWithReply:
intValue
defaultManager
fileExistsAtPath:isDirectory:
fileExistsAtPath:
initWithCapacity:
setPlayerLights:
setLowPower:
setVibrationEnabled:
refreshDeviceInfo
refreshCalibrationData
refreshLowPowerSetting
switchToInputMode:
io_serialNumber:value:modify:
numberWithUnsignedShort:
io_calibrationInfo:value:modify:
io_lowPowerSetting:value:modify:
io_playerLights:value:modify:
io_vibrationEnabled:value:modify:
handleHIDControllerPayload:withData:timestamp:
handleStandardFullPayload:withData:timestamp:
handleSubcommandReply:withData:timestamp:
setInputReportHandler:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedChar:
dispatchSetPlayerLightsSubcommandWithNewState:completion:
dispatchSetInputReportModeSubcommandWithRequestedMode:completion:
dispatchSetLowPowerStateSubcommandWithChange:completion:
dispatchSetVibrationEnabledSubcommandWithChange:completion:
bytes
length
dispatchSPIFlashReadSubcommandWithAddress:length:completion:
dispatchRequestDeviceInfoSubcommandWithCompletion:
initWithBytes:length:encoding:
subdataWithRange:
initWithFormat:
initWithDomain:code:userInfo:
dispatchPendingSubcommandIfReady
currentRumbleData
addObjectsFromArray:
fourBitAmplitudeLookup:
firstObject
setReport:reportLength:withIdentifier:forType:error:
removeObjectAtIndex:
enqueueSubcommand:data:length:replyHandler:
dispatchCurrentRumbleData
arrayWithObjects:count:
nextGlobalPacketNumber
_globalPacketNumber
_serialNumber
_properties
_calibration
_battery
_lowPowerSetting
_playerLights
_pendingSubcommands
_outstandingSubcommand
_sensorsActive
_motionClient
objectForKey:
objectAtIndexedSubscript:
v20@0:8B16
v24@0:8q16
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8@16
@24@0:8@16
@16@0:8
Q16@0:8
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
v16@0:8
i16@0:8
f16@0:8
v20@0:8f16
@"NSString"
@"NSMutableArray"
v32@0:8Q16f24f28
v32@0:8@16Q24
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
B36@0:8I16@20^q28
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
^{?=CCC}16@0:8
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
^{?=CCC}
@"NSArray"
v24@0:8@?<v@?B>16
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
B36@0:8@16^@24B32
v20@0:8{?=[4C]}16
v20@0:8C16
v40@0:8q16@24Q32
C20@0:8f16
v44@0:8C16r^v20Q28@?36
v28@0:8C16@?20
v36@0:8I16Q20@?28
v28@0:8{?=[4C]}16@?20
{?=C(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})}16@0:8
C16@0:8
{?="hasDeviceInfo"B"deviceInfo"{?="firmwareVersion"S"type"C"bluetoothMAC"[6C]"unknown1"C"unknown2"C"unknown3"C}}
{?="stick"{?="factory"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1}"user"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1"hasLeft"b1"hasRight"b1}"parameters"{?="left"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"right"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"fetchedLeft"b1"fetchedRight"b1}}"motion"{?="factory"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetchedCalibration"b1"fetchedHorizontalOffset"b1}"user"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetched"b1"hasData"b1}"coefficients"{?="accel"{?="x"f"y"f"z"f}"gyro"{?="x"f"y"f"z"f}}}}
{?="initialized"B"info"{?="charging"B"level"C}}
{?="LED"[4C]}
{?="identifier"C"voucher"@"NSObject<OS_voucher>""responseHandler"@?"requestTimestamp"Q}
@"<GCMotionServiceClientInterface>"
v24@0:8C16B20
v8@?0
com.apple.gamecontroller
com.apple.GameController
com.apple.GameController.HID
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
%02x%@
GCPartnersEnable
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
XboxOneHIDServicePlugin
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
FirmwareInfo
ControllerType
CalibrationInfo
LowPowerSetting
PlayerLights
VibrationEnabled
ProControllerError
ProController
/AppleInternal
/var/db/disableProControllerHIDServicePlugin
Manufacturer
Nintendo
v48@?0@"HIDDevice"8Q16q24q32@"NSData"40
ProControllerHIDServicePlugin
Left
Right
Stick
Factory
User
Parameters
v20@?0B8@"NSError"12
v24@?0@"NSData"8@"NSError"16
v24@?0^{?=SCC[6C]CC}8@"NSError"16
Received reply for a different sub-command [%#x].
Refusing to send sub-command [%#x] with length [%zd bytes] > maxSubcommandLength [%zd bytes].
Too many pending sub-commands.
Payload for sub-command [%#x] response has length [%ld bytes], which is less than the expected length [%lu bytes].
Requesting SPI flash read with length [%zd bytes] > MAX_READ_SIZE [%zd bytes].
Left (Lower)
Left (Higher)
Right (Lower)
Right (Higher)
enable
disable
Pro Controller
center
noise_buffer
outer_dead_zone
inner_dead_zone
unknown1
unknown2
unknown4
unknown5
unknown6
unknown7
unknown8
unknown9
unknown10
unknown11
unknown12
ON-SOLID
ON-FLASH
?(knN
#BBZ
?N###DR
Partners mode enabled? %d
listening for XPC daemon
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
processing io_service
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Received unknown report: type=%li, reportID=%#lx, data=%@
Set Player Indicator Lights
Failed to set player inidcator lights. %{public}@
Switch Input Mode
Switch to input mode %#x
Failed to switch input mode. %{public}@
Modify Low-power Setting
Modify low-power mode setting with change %x
Failed to modify low-power setting. %{public}@
Modify Vibration Enabled
Modify vibration enabled setting with change %x
Failed to modify vibration enabled setting. %{public}@
Read Low-power Setting
Failed to read low-power setting. %{public}@
Read low-power setting has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Request Device Info
Failed to retrieve device info. %{public}@
Failed to read device serial number. %{public}@
Read serial number has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Request Calibration Data
Failed to read stick factory calibration data. %{public}@
Read stick factory calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read stick user calibration data. %{public}@
Read stick user calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read left stick parameters data. %{public}@
Read left stick parameters data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read right stick parameters data. %{public}@
Read right stick parameters data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read motion calibration data. %{public}@
Read motion calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Read motion horizontal offset data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Payload for input report [%{bytes}ld] has length [%{bytes}ld], which is less than the minimum expected length [%{bytes}lu]. Ignoring.
Payload for input report [%#lx] has length [%{bytes}lu], which is less than the minimum expected length [%{bytes}lu]. Ignoring.
Received sub-command reply: identifier = %#x, ACK = %i, type = %i
Received reply for sub-command [%#x].  Expected reply for [%#x].
Received an unexpected reply for sub-command [%#x].
Send report: type = %li, reportID = %#x, length = %{bytes}lu
Enqueue sub-command [%#x].
Dispatch sub-command [%#x].
Read SPI Flash Request: address = %#.4x, length = %{bytes}u
Read SPI Flash Response: address = %#.4x, size = %{bytes}u
updateSensorsEnabled %d
Failed to %{public}@ IMU with error: %{public}@
connectToMotionServiceWithClient %@
GCNintendoJoyConFusionGestureServiceClientInterface
GCNintendoJoyConFusionGestureServiceServerInterface
GCGameIntentServiceClientInterface
GCGameIntentServiceServerInterface
_GCHapticEvent
NSSecureCoding
NSCoding
GCHapticMotor
NSCopying
_GCDriverClientInterface
_GCDriverClientHapticInterface
_GCDriverServerInterface
GCAdaptiveTriggersServiceClientInterface
GCAdaptiveTriggersServiceServerInterface
GCGamepadHIDServicePlugin
GCBatteryServiceServerInterface
HIDServicePlugin
NSObject
GCHIDXPCInterface
GCMotionServiceClientInterface
GCMotionServiceServerInterface
GCLightServiceClientInterface
GCLightServiceServerInterface
ProControllerHIDServicePlugin
GCBatteryServiceClientInterface
time
propertyForKey:
dataWithBytesNoCopy:length:freeWhenDone:
setExportedInterface:
appendString:
objectAtIndex:
encodeInteger:forKey:
unsignedIntValue
uppercaseString
firstObject
eventID
interfaceWithProtocol:
setObject:forKeyedSubscript:
setInterface:forSelector:argumentIndex:ofReply:
subdataWithRange:
initWithBool:
stringWithCString:encoding:
setDoubleValue:forField:
initWithFormat:
dictionaryWithObjects:forKeys:count:
decodeObjectOfClass:forKey:
cStringUsingEncoding:
initWithProperties:
setReport:reportLength:withIdentifier:forType:error:
bytes
params
encodeFloat:forKey:
countByEnumeratingWithState:objects:count:
setIntegerValue:forField:
numberWithUnsignedShort:
addObject:
removeObjectAtIndex:
dataWithBytes:length:
count
initWithDomain:code:userInfo:
setInputReportHandler:
resume
decodeIntegerForKey:
isEqualToString:
open
intValue
initWithMachServiceName:options:
encodeDouble:forKey:
tokenAndParams
defaultManager
length
dictionary
fileExistsAtPath:isDirectory:
handleReport:error:
array
numberWithUnsignedLongLong:
numberWithUnsignedChar:
boolValue
setRemoteObjectInterface:
stringWithString:
decodeFloatForKey:
initWithCapacity:
encodeBool:forKey:
objectForKey:
token
fileExistsAtPath:
objectForKeyedSubscript:
initWithInt:
allocWithZone:
initWithType:timestamp:senderID:
setInvalidationHandler:
decodeDoubleForKey:
initWithBytes:length:encoding:
stringWithFormat:
timestamp
boolForKey:
removeAllObjects
close
setProperty:forKey:
numberWithBool:
addObjectsFromArray:
setExportedObject:
invalidate
encodeObject:forKey:
arrayWithObjects:count:
initWithSuiteName:
setInterruptionHandler:
objectAtIndexedSubscript:
remoteObjectProxy
decodeBoolForKey:
stringWithCapacity:
value
homeButtonLongPressGesture:
triggerGameIntentWithEvent:
setEnableGlobalGameControllerFunctionality:
init
valueForNoteParam:inParameters:
evaluateDeviceNoteParams:
initWithSyntheticCommand:
description
identifier
setIdentifier:
type
setType:
startTime
setStartTime:
intensity
setIntensity:
sharpness
setSharpness:
stopped
setStopped:
transientBeganAsContinuousEvent
setTransientBeganAsContinuousEvent:
_stopped
_transientBeganAsContinuousEvent
_identifier
_type
_startTime
_intensity
_sharpness
TQ,N,V_identifier
Tq,N,V_type
Td,N,V_startTime
Td,N,V_intensity
Td,N,V_sharpness
TB,N,V_stopped
TB,N,V_transientBeganAsContinuousEvent
initWithCoder:
encodeWithCoder:
supportsSecureCoding
TB,R
copyWithZone:
initWithIndex:name:features:frequency:amplitude:
initWithIndex:name:features:
initWithIndex:name:
initWithIndex:
applyValuesFrom:
enqueueHapticTransientEvent:
drainQueuedTransients
name
index
features
frequency
setFrequency:
amplitude
setAmplitude:
queuedTransients
setQueuedTransients:
.cxx_destruct
_index
_frequency
_amplitude
_name
_features
_queuedTransients
T@"NSMutableArray",&,N,V_queuedTransients
T@"NSString",R,C,N,V_name
Ti,R,N,V_index
TQ,R,N,V_features
Tf,N,V_frequency
Tf,N,V_amplitude
setHapticMotor:frequency:amplitude:
enqueueTransient:hapticMotor:
enableHaptics
fetchDeviceRegistryIDWithReply:
connectToLightServiceWithClient:reply:
connectToAdaptiveTriggersServiceWithClient:reply:
connectToMotionServiceWithClient:reply:
connectToBatteryServiceWithClient:reply:
connectToNintendoJoyConFusionGestureServiceWithClient:reply:
connectToGameIntentServiceWithClient:reply:
connectToGenericDeviceDriverConfigurationServiceWithClient:reply:
driverCheckIn
updateAdaptiveTriggerStatusWithLeftMode:leftStatus:leftArmPosition:rightMode:rightStatus:rightArmPosition:
setAdaptiveTriggerModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithStartPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeFeedbackWithResistiveStrengths:forIndex:
setAdaptiveTriggerModeWeaponWithStartPosition:endPosition:resistiveStrength:forIndex:
setAdaptiveTriggerModeVibrationWithStartPosition:amplitude:frequency:forIndex:
setAdaptiveTriggerModeVibrationWithAmplitudes:frequency:forIndex:
setAdaptiveTriggerModeOffForIndex:
readAdaptiveTriggerStatusWithReply:
dealloc
matchService:options:score:
readBatteryWithReply:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithService:
propertyForKey:client:
setProperty:forKey:client:
eventMatching:forClient:
setEventDispatcher:
setCancelHandler:
activate
cancel
setDispatchQueue:
clientNotification:added:
ping
requestServiceWithReply:
initGameControllerDaemonXPC
createHIDDeviceForService:
setupRawReportHandling
disconnect
createVirtualHIDDeviceForBattery
updateClientBattery
sendBatteryReport
shouldCreateBatteryDevice
scheduleIdleTimer
updateIdleState
isIdle
shouldDisconnectWhenIdle
createEvent:timestamp:
dispatchEvent:updateLastEventTime:
dispatchEvent:
applyDeadzone:axisSnapRadius:input:
isTwoAxisInputIdle:prevInput:noiseBuffer:
dispatchMotionEventWithState:timestamp:
dispatchGameControllerExtendedEventWithState:timestamp:
dispatchHomeButtonEventWithValue:timestamp:
dispatchMenuButtonEventWithValue:timestamp:
dispatchOptionsButtonEventWithValue:timestamp:
dispatchShareButtonEventWithValue:timestamp:
isAnyHapticMotorEnabled
dispatchHapticEvent
updateHaptics:
isHapticsActive
numberOfTimesToSendZeroHapticReport
stopHaptics
updateHapticMotor:
defaultLeftThumbstickNoiseBuffer
defaultRightThumbstickNoiseBuffer
defaultIdleTimeoutDuration
defaultLeftThumbstickDeadzoneRadius
defaultRightThumbstickDeadzoneRadius
defaultLeftAxisSnapRadius
defaultRightAxisSnapRadius
defaultHapticMotors
defaultHapticDispatchFrequency
client
setClient:
dispatcher
setDispatcher:
service
dispatchQueue
device
batteryUserDevice
lastEventTime
uniqueIdentifier
batteryReport
isBluetoothClassic
isUSB
isBluetoothLE
isVirtualDevice
idleTimeoutDuration
setIdleTimeoutDuration:
leftThumbstickNoiseBuffer
setLeftThumbstickNoiseBuffer:
rightThumbstickNoiseBuffer
setRightThumbstickNoiseBuffer:
hapticMotors
setHapticMotors:
leftThumbstickDeadzoneRadius
setLeftThumbstickDeadzoneRadius:
leftThumbstickAxisSnapRadius
setLeftThumbstickAxisSnapRadius:
rightThumbstickDeadzoneRadius
setRightThumbstickDeadzoneRadius:
rightThumbstickAxisSnapRadius
setRightThumbstickAxisSnapRadius:
_cancelHandler
_prop
_activated
_clientAdded
_idleDispatchSource
_session
_buttonHome
_buttonMenu
_buttonOptions
_buttonShare
_gameControllerState
_gameControllerExtendedState
_motionSequenceNumber
_motionState
_hapticsActive
_pendingHapticZeroReports
_hapticDispatchFrequency
_currentHapticClipTime
_currentHapticDispatchTime
_loopHapticEvent
_hapticDispatchSource
_daemonConnection
_batteryClient
_internalQueue
_bluetoothClassic
_usb
_bluetoothLE
_virtualDevice
_service
_idleTimeoutDuration
_leftThumbstickNoiseBuffer
_rightThumbstickNoiseBuffer
_leftThumbstickDeadzoneRadius
_leftThumbstickAxisSnapRadius
_rightThumbstickDeadzoneRadius
_rightThumbstickAxisSnapRadius
_client
_dispatcher
_dispatchQueue
_device
_batteryUserDevice
_regID
_lastEventTime
_uniqueIdentifier
_batteryReport
_hapticMotors
T@"HIDConnection",W,N,V_client
T@"<HIDEventDispatcher>",W,N,V_dispatcher
TI,R,N,V_service
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
T@"HIDDevice",R,N,V_device
T@"HIDUserDevice",R,N,V_batteryUserDevice
TQ,R,N,V_lastEventTime
T@"NSString",R,N,V_uniqueIdentifier
T^{?=CCC},R,N,V_batteryReport
bluetoothClassic
TB,R,N,GisBluetoothClassic,V_bluetoothClassic
TB,R,N,GisUSB,V_usb
bluetoothLE
TB,R,N,GisBluetoothLE,V_bluetoothLE
virtualDevice
TB,R,N,GisVirtualDevice,V_virtualDevice
Tf,N,V_idleTimeoutDuration
Tf,N,V_leftThumbstickNoiseBuffer
Tf,N,V_rightThumbstickNoiseBuffer
T@"NSArray",&,N,V_hapticMotors
Tf,N,V_leftThumbstickDeadzoneRadius
Tf,N,V_leftThumbstickAxisSnapRadius
Tf,N,V_rightThumbstickDeadzoneRadius
Tf,N,V_rightThumbstickAxisSnapRadius
updateSensorsActive:
readSensorsActiveWithReply:
updateLightWithRed:green:blue:
readLightWithReply:
io_serialNumber:value:modify:
io_calibrationInfo:value:modify:
io_lowPowerSetting:value:modify:
io_playerLights:value:modify:
io_vibrationEnabled:value:modify:
setPlayerLights:
switchToInputMode:
setLowPower:
setVibrationEnabled:
refreshLowPowerSetting
refreshDeviceInfo
refreshCalibrationData
handleHIDControllerPayload:withData:timestamp:
handleStandardFullPayload:withData:timestamp:
handleSubcommandReply:withData:timestamp:
fourBitAmplitudeLookup:
dispatchCurrentRumbleData
dispatchPendingSubcommandIfReady
enqueueSubcommand:data:length:replyHandler:
dispatchRequestDeviceInfoSubcommandWithCompletion:
dispatchSetInputReportModeSubcommandWithRequestedMode:completion:
dispatchSetLowPowerStateSubcommandWithChange:completion:
dispatchSPIFlashReadSubcommandWithAddress:length:completion:
dispatchSetPlayerLightsSubcommandWithNewState:completion:
dispatchSetVibrationEnabledSubcommandWithChange:completion:
currentRumbleData
nextGlobalPacketNumber
_globalPacketNumber
_serialNumber
_properties
_calibration
_battery
_lowPowerSetting
_playerLights
_pendingSubcommands
_outstandingSubcommand
_sensorsActive
_motionClient
updateBattery:isCharging:
v20@0:8B16
v24@0:8q16
{pair<bool, float>=Bf}28@0:8I16@20
v24@0:8@16
@24@0:8@16
@16@0:8
Q16@0:8
v24@0:8Q16
q16@0:8
d16@0:8
v24@0:8d16
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@44@0:8i16@20Q28f36f40
@36@0:8i16@20Q28
@28@0:8i16@20
@20@0:8i16
v16@0:8
i16@0:8
f16@0:8
v20@0:8f16
@"NSString"
@"NSMutableArray"
v32@0:8Q16f24f28
v32@0:8@16Q24
v32@0:8@"_GCHapticEvent"16Q24
v24@0:8@?16
v32@0:8@16@?24
v24@0:8@?<v@?@"NSNumber"q>16
v32@0:8@"<GCLightServiceClientInterface>"16@?<v@?@"<GCLightServiceServerInterface>"@"NSError">24
v32@0:8@"<GCAdaptiveTriggersServiceClientInterface>"16@?<v@?@"<GCAdaptiveTriggersServiceServerInterface>"@"NSError">24
v32@0:8@"<GCMotionServiceClientInterface>"16@?<v@?@"<GCMotionServiceServerInterface>"@"NSError">24
v32@0:8@"<GCBatteryServiceClientInterface>"16@?<v@?@"<GCBatteryServiceServerInterface>"@"NSError">24
v32@0:8@"<GCNintendoJoyConFusionGestureServiceClientInterface>"16@?<v@?@"<GCNintendoJoyConFusionGestureServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGameIntentServiceClientInterface>"16@?<v@?@"<GCGameIntentServiceServerInterface>"@"NSError">24
v32@0:8@"<GCGenericDeviceDriverConfigurationServiceClientInterface>"16@?<v@?@"<GCGenericDeviceDriverConfigurationServiceServerInterface>"@"NSError">24
v40@0:8C16C20C24C28C32C36
v36@0:8f16f20f24f28i32
v28@0:8f16f20i24
v28@0:8@16i24
v32@0:8f16f20f24i28
v32@0:8@16f24i28
v20@0:8i16
v28@0:8@"NSArray"16i24
v32@0:8@"NSArray"16f24i28
v24@0:8@?<v@?CCCCCC>16
B36@0:8I16@20^q28
v24@0:8@?<v@?CB>16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@20@0:8I16
@32@0:8@16@24
B40@0:8@16@24@32
v28@0:8@16B24
@32@0:8@"NSString"16@"HIDConnection"24
B40@0:8@16@"NSString"24@"HIDConnection"32
@"HIDEvent"32@0:8@"NSDictionary"16@"HIDConnection"24
v24@0:8@"<HIDEventDispatcher>"16
v24@0:8@?<v@?>16
B36@0:8I16@"NSDictionary"20^q28
v24@0:8@"NSObject<OS_dispatch_queue>"16
v28@0:8@"HIDConnection"16B24
v24@0:8@?<v@?@"NSNumber">16
@28@0:8I16Q20
v32@0:8f16f20^24
B36@0:8^16^24f32
v128@0:8{?=BdddBdddBdddd}16Q120
v216@0:8{?=Q[45f]}16Q208
v28@0:8B16Q20
I16@0:8
^{?=CCC}16@0:8
@"NSNumber"
@"NSObject<OS_dispatch_source>"
^{BTSessionImpl=}
{?="directionPadUp"d"directionPadDown"d"directionPadLeft"d"directionPadRight"d"buttonA"d"buttonB"d"buttonX"d"buttonY"d"buttonL1"d"buttonR1"d"buttonL2"d"buttonR2"d"leftThumbstick""rightThumbstick""buttonL3"B"buttonR3"B"controllerType"I}
{?="mask"Q"buttons"[45f]}
{?="supportsGyro"B"gyroPitch"d"gyroYaw"d"gyroRoll"d"supportsAccelerometer"B"accelerometerX"d"accelerometerY"d"accelerometerZ"d"supportsAttitude"B"attitudeX"d"attitudeY"d"attitudeZ"d"attitudeW"d}
{timespec="tv_sec"q"tv_nsec"q}
@"NSXPCConnection"
@"<GCBatteryServiceClientInterface>"
@"NSObject<OS_dispatch_queue>"
@"HIDConnection"
@"<HIDEventDispatcher>"
@"HIDDevice"
@"HIDUserDevice"
^{?=CCC}
@"NSArray"
v24@0:8@?<v@?B>16
v28@0:8f16f20f24
v24@0:8@?<v@?fff>16
B36@0:8@16^@24B32
v20@0:8{?=[4C]}16
v20@0:8C16
v40@0:8q16@24Q32
C20@0:8f16
v44@0:8C16r^v20Q28@?36
v28@0:8C16@?20
v36@0:8I16Q20@?28
v28@0:8{?=[4C]}16@?20
{?=C(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})(?={?=[2C][2C]}{?=b4b1b4b1b4b1b4b1b4b1b4b1b2})}16@0:8
C16@0:8
{?="hasDeviceInfo"B"deviceInfo"{?="firmwareVersion"S"type"C"bluetoothMAC"[6C]"unknown1"C"unknown2"C"unknown3"C}}
{?="stick"{?="factory"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1}"user"{?="left"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"right"{?="center"{?="x"S"y"S}"min"{?="x"S"y"S}"max"{?="x"S"y"S}}"fetchedLeft"b1"fetchedRight"b1"hasLeft"b1"hasRight"b1}"parameters"{?="left"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"right"{?="noiseBuffer"S"outerDeadZone"S"unknown1"S"unknown2"S"innerDeadZone"S"unknown4"S"unknown5"S"unknown6"S"unknown7"S"unknown8"S"unknown9"S"unknown10"S"unknown11"S"unknown12"S}"fetchedLeft"b1"fetchedRight"b1}}"motion"{?="factory"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetchedCalibration"b1"fetchedHorizontalOffset"b1}"user"{?="data"{?="accel"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}"horizontalOffset"{?="x"s"y"s"z"s}}"gyro"{?="origin"{?="x"s"y"s"z"s}"sensitivity"{?="x"s"y"s"z"s}}}"fetched"b1"hasData"b1}"coefficients"{?="accel"{?="x"f"y"f"z"f}"gyro"{?="x"f"y"f"z"f}}}}
{?="initialized"B"info"{?="charging"B"level"C}}
{?="LED"[4C]}
{?="identifier"C"voucher"@"NSObject<OS_voucher>""responseHandler"@?"requestTimestamp"Q}
@"<GCMotionServiceClientInterface>"
v24@0:8C16B20
v8@?0
com.apple.gamecontroller
com.apple.GameController
com.apple.GameController.HID
<%@ %lu (%@), i=%f s=%f (started at %f)>
transient
continuous
type
identifier
stopped
startTime
intensity
sharpness
_index
_name
_features
_frequency
_amplitude
GCHapticMotor - %@(%d) f=%f a=%f
%02x%@
GCPartnersEnable
com.apple.GameController.gamecontrollerd.driver
com.apple.gamecontroller.serviceplugin
Transport
isVirtual
Bluetooth
BluetoothLowEnergy
SerialNumber
GCGamepadHIDServicePlugin
BatteryCapacity
IsPowerSupplyConnected
ServicePluginDebug
XboxOneHIDServicePlugin
PluginName
cancelHandler
dispatchQueue
activated
clientAdded
GameControllerPointer
EventType
IOService
ReportDescriptor
PhysicalDeviceUniqueID
ProductID
VendorID
Product
GameControllerType
 - will disconnect if permitted
FirmwareInfo
ControllerType
CalibrationInfo
LowPowerSetting
PlayerLights
VibrationEnabled
ProControllerError
ProController
/AppleInternal
/var/db/disableProControllerHIDServicePlugin
Manufacturer
Nintendo
v48@?0@"HIDDevice"8Q16q24q32@"NSData"40
ProControllerHIDServicePlugin
Left
Right
Stick
Factory
User
Parameters
v20@?0B8@"NSError"12
v24@?0@"NSData"8@"NSError"16
v24@?0^{?=SCC[6C]CC}8@"NSError"16
Received reply for a different sub-command [%#x].
Refusing to send sub-command [%#x] with length [%zd bytes] > maxSubcommandLength [%zd bytes].
Too many pending sub-commands.
Payload for sub-command [%#x] response has length [%ld bytes], which is less than the expected length [%lu bytes].
Requesting SPI flash read with length [%zd bytes] > MAX_READ_SIZE [%zd bytes].
Left (Lower)
Left (Higher)
Right (Lower)
Right (Higher)
enable
disable
Pro Controller
center
noise_buffer
outer_dead_zone
inner_dead_zone
unknown1
unknown2
unknown4
unknown5
unknown6
unknown7
unknown8
unknown9
unknown10
unknown11
unknown12
ON-SOLID
ON-FLASH
>(knN
?N###DR
#BBZ
Partners mode enabled? %d
listening for XPC daemon
Connect To Daemon
Connection to com.apple.GameController.gamecontrollerd.driver invalidated
Connection to com.apple.GameController.gamecontrollerd.driver interrupted.  Attempting to re-establish.
initWithService: %d
processing io_service
creating HIDDevice for service %d
opening HIDDevice
registering for BTSessionCallbacks sessionEvent
dealloc
Freeing HIDDevice on %@
PropertyForKey: %@
setProperty: %@ forKey: %@
eventMatching: %@ client: %@
setEventDispatcher %@
setCancelHandler %p
calling cancel handler
activate
cancel
setDispatchQueue %p
clientNotification %@ added: %d
GCHIDLog::disconnect: unable to get BTDevice; no valid BTSession
GCHIDLog::disconnect: SUCCESS
GCHIDLog::disconnect: error code = %d
GCHIDLog::disconnect: unable to get BTDevice; error code = %d
GCHIDLog::disconnect: unable to get device address from %s; errCode = %d
creating battery device
created battery device %@ with properties %@
updateClientBattery reporting battery level %d%%
updateBatteryStats reporting battery level %d%%
scheduleIdleTimer
disconnectIfIdle disconnecting...
isIdle for %.2f seconds%@
Stopping timer...
Dispatching event...
ping
requestServiceWithReply
connectToBatteryServiceWithClient %@
BTSessionEventCallback: attached session = %p
BTSessionEventCallback: detached session = %p
BTSessionEventCallback: terminated session = %p
BTSessionEventCallback: failed session = %p
Received unknown report: type=%li, reportID=%#lx, data=%@
Set Player Indicator Lights
Failed to set player inidcator lights. %{public}@
Switch Input Mode
Switch to input mode %#x
Failed to switch input mode. %{public}@
Modify Low-power Setting
Modify low-power mode setting with change %x
Failed to modify low-power setting. %{public}@
Modify Vibration Enabled
Modify vibration enabled setting with change %x
Failed to modify vibration enabled setting. %{public}@
Read Low-power Setting
Failed to read low-power setting. %{public}@
Read low-power setting has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Request Device Info
Failed to retrieve device info. %{public}@
Failed to read device serial number. %{public}@
Read serial number has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Request Calibration Data
Failed to read stick factory calibration data. %{public}@
Read stick factory calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read stick user calibration data. %{public}@
Read stick user calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read left stick parameters data. %{public}@
Read left stick parameters data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read right stick parameters data. %{public}@
Read right stick parameters data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Failed to read motion calibration data. %{public}@
Read motion calibration data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Read motion horizontal offset data has length [%{bytes}ld], which is less than the expected length [%{bytes}lu]. Ignoring.
Payload for input report [%{bytes}ld] has length [%{bytes}ld], which is less than the minimum expected length [%{bytes}lu]. Ignoring.
Payload for input report [%#lx] has length [%{bytes}lu], which is less than the minimum expected length [%{bytes}lu]. Ignoring.
Received sub-command reply: identifier = %#x, ACK = %i, type = %i
Received reply for sub-command [%#x].  Expected reply for [%#x].
Received an unexpected reply for sub-command [%#x].
Send report: type = %li, reportID = %#x, length = %{bytes}lu
Enqueue sub-command [%#x].
Dispatch sub-command [%#x].
Read SPI Flash Request: address = %#.4x, length = %{bytes}u
Read SPI Flash Response: address = %#.4x, size = %{bytes}u
updateSensorsEnabled %d
Failed to %{public}@ IMU with error: %{public}@
connectToMotionServiceWithClient %@
