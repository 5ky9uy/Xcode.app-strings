BDSMediaLibraryUtils No daap item found for %@
BDSMediaLibraryUtils No collections for %@
BDSMediaLibraryUtils Could not find audiobookQuery.
Starting up BDSServiceProxy.
The connection to service was interrupted.
The connection to service was invalidated.
Remote proxy hit an error: %{public}@
Attempting to re-form connection to XPC service %f seconds after invalidation.
[ServiceProxy]:  Shutting down service proxy.
BDSServiceProxy updatePolitely:%i reason:%ld Error %@
BDSServiceProxy updatePolitely: connection unhealthy
BDSServiceProxy updateFamilyPolitely:%i reason:%ld Error %@
BDSServiceProxy updateFamilyPolitely: connection unhealthy
BDSServiceProxy setItemHidden:%i forStoreID:%@ Error %@
BDSServiceProxy setItemHidden: connection unhealthy
BDSServiceProxy hideItemsWithStoreIDs:%@ Error %@
BDSServiceProxy hideItemsWithStoreIDs: connection unhealthy
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Handled Exception {%@}
[BDSSaltVersionIdentifierManager] init with %@ %@. Adding to zone:(%@)
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ ---1. %@  
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.
[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError 
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
Unable to create CKAsset local cache at %@ error=%@
Failed to create cache URL. directory: %@ assetID: %@
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
Error adding storeItem for storeID: %@
Error <BCCloudCollectionMemberManager setCollectionMember:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchCollectionMembersIncludingDeleted:completion:> {%@}
Error <BCCloudCollectionMemberManager fetchMaxSortOrderInCollectionID:> {%@}
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
[BCCloudKitTransactionManager] Creating syncToCKTransaction %@
[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@
[BCCloudKitTransactionManager] Transaction completed %@
Calling block %@ for transaction %@ 
Cannot determine valid salt establishedSalt:%{BOOL}d systemFields:%{BOOL}d for record %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
Trying to remove without IDs
BCAssetAnnotations configureFromCloudData wrong class passed in.
BCAssetAnnotations %{public}@ Mismatch assetID from record assetID %{public}@
BCAssetAnnotations No readable annotations in serialized local data for assetID %{public}@
BCAssetAnnotations No readable annoatations in incoming data for assetID %{public}@
BCAssetAnnotations No readable annotations in serialized cloud data for assetID %{public}@
BCAssetAnnotations %{public}@ No Record supplied
BCMutableAssetAnnotations init with no assetID supplied
BCAssetAnnotations initWithCloudData invalid assetID.
BCAssetAnnotations initWithCloudData wrong class passed in.
No readable annotations for asset %@
BCMutableAssetAnnotations init record has invalid assetID
BCMutableAssetAnnotations init with no record supplied
Unable to write annotations protobuf to URL %@
skipping annotation not valid for sync %@
skipping annotation not valid for sync %@.
proto annotation found missing required properties %@
trying to incorrectly sync global annotation in BCAssetAnnotations %@
*** Assertion failure: %s in %s - %@:%@ %@
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
acknowledgeiCloudIdentity
Done acknowledge iCloud identity: %{mask.hash}@
_coalescedNotification in %@ did not call notification within 10s.
_coalescedArchive (%@)
did not call completion after 10s in %{public}@
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container: %@
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%@
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@
[BCCloudKitDatabaseController (%@)] attachToZones detaching because error fetching changes, ERROR:%@
BCCloudKitDatabaseController - detaching because error establishing record salt:%{public}@
[BCCloudKitDatabaseController (%@)] attachToZones p_createRecordZones failed, ERROR:%@
BCCloudKitDatabaseController - Detaching Container:%{public}@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation (%{public}@) failed: %{public}@
CKModifySubscriptionsOperation Success for: (%{public}@)
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes %@
[BCCloudKitDatabaseController (%@)] 2. p_createRecordZones:%@ database:%{public}@
3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]
5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@
CKModifyRecordZonesOperation failed: %{public}@
CKModifyRecordZonesOperation success saving: %{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@
BCCloudKitDatabaseController - No PCS Identity available
BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@
CKFetchRecordZonesOperation failed: %{public}@
CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@
BCCloudKitDatabaseController - calling saveResultsBlock
CKFetchRecordZonesOperation Wanted:%@ Received:%@
(%{public}@) Establishing record salt
(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion
(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover
(%{public}@) Will save record salt
(%{public}@) Saving record salt....
(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)
(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@
(%{public}@) *** Got record salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@)- No record zone changes to fetch
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) - p_internetReachabilityChanged reachable:%@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@
%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP
p_informObserversOfSaltVersionIdentifierChanged DONE
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%{public}lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController %{public}@ - missing encryption identity.  Recreating zones
BCCloudKitDatabaseController %{public}@ Reason:%{public}@  Detaching.
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@
BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
BCLiverpoolStatusMonitor CloudKit=%{public}@ optedIn=%{public}@
iCloud identity changed. {Refreshing with optedIn: %{public}@}
BDSLiverpoolStatusMonitor: restartObserving was called
BDSLiverpoolStatusMonitor: notifying observers of a token change
BDSLiverpoolStatusMonitor: tokens match ... so we are not notifying anyone
iCloud identity changed. {iCloudEnabled: %@}
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@
<%@ BCCloudChangeTokenController - No change yet we tried updating %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
BCSecureUserDatum configureFromCloudData wrong class passed in.
BCSecureUserDatum %@ Mismatch key from record key %@
BCSecureUserDatum %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCSecureUserDatum %@ No Record supplied
BCMutableSecureUserDatum init with no key supplied
BCMutableSecureUserDatum init with no record supplied
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
Initializing BCCloudAssetManager - Proxy Build
Dealloc BCCloudAssetManager
BCCloudAssetManager - Proxy build -  #enableCloudSync setEnableCloudSync %@ enableReadingNowSync %@
BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion - Proxy modee
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Total success saving %lu records and deleting %lu records OperationID: %{public}@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %{public}@.  Operation ID: %{public}@
BCCloudKitController - registerForSecureNotifications
BCCloudKitController - CKAccountStatusCouldNotDetermine: %@
BCCloudKitConttoller - Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available
BCCloudKitConttoller - Error connecting user to database error=%{public}@
BCCloudKitConttoller - connectUserToConteinr subscription completed.
BCCloudKitController - CKAccountStatusRestricted
BCCloudKitController - CKAccountStatusNoAccount
BCCloudKitController - CKAccountStatusTemporarilyUnavailable. Account Temporarily Unavailable
BCCloudKitController (%{public}@) _coalescedAttachment
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %{public}@ serviceMode:%{public}@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed for %{public}@
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
Account Restricted.  Not syncing anything.  Account status error=%{public}@
Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
Unable to create persistent stores on the coordinator:%@
Error %{public}@: %{public}@ %d
Unable to migrate legacy database since file does not exist at URL %@
Unable to create cloud data source persistent store. Attempting to remove files and start over
Unable to recreate cloud data source persistent store. Giving up
Migrating legacy cloud data source from %@ to %@
Destroying legacy cloud data source at %@
Adding cloud data source persistent store for %@
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
Synced preference %@ changed in group, copying value locally (new value %@, old value %@)
Preference %@ was unchanged
Checking local preferences with appSuite: %@ container: %@ groupName: %@ groupContainer: %@
Synced preference %@ changed locally, copying value to group container (new value %@, old value %@)
Updating npsManager with sync keys: %@
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
BCGlobalMetadatum configureFromCloudData wrong class passed in.
BCGlobalMetadatum %@ Mismatch key from record key %@
BCGlobalMetadatum %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCGlobalMetadatum %@ No Record supplied
BCMutableGlobalMetadatum init with no key supplied
BCMutableGlobalMetadatum init with no record supplied
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
BCCloudDataManager Incremented cloudSyncVersion to %lld
No managed object context!
BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{public}@ data:%@
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@
Did not find %{public}@ to update sync gen from cloudData:%@
BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager resolveConflictsForRecords:%{public}@ did not find existing record.  Creating new from %@
BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@
BCCloudDataManager #recordChange failedRecordIDs:%{public}@
BCCloudDataManager %@ #dissociateCloudData
BCCloudDataManager %@ #hasSaltChangedWithCompletion
No managed object context! #hasSaltChangedWithCompletion
BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc
BDSErrorDomain
com.apple.iBooks.BookDataStoreService
v8@?0
v16@?0@"NSError"8
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
v32@?0@"NSArray"8{_NSRange=QQ}16
v20@?0B8@"NSError"12
v24@?0B8B12@"NSError"16
v12@?0B8
v16@?0@"NSSet"8
name
collectionDescription
hidden
sortOrder
sortMode
collectionDetail
collectionID
modificationDate
the same
newer
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
iBooks
BCCloudKitFetchChangesTransaction-
NSManagedObjectContextIMAdditionsSafeAccessState
objectID
<%@:%p zoneName=%@ zoneDataManager=%@>
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
com.apple.iBooks
BookDataStore.CloudKit
BookDataStore.CloudKitSync
BookDataStore.CloudKitAudiobook
BookDataStore.ServiceCenter
BookDataStore.Service
BookDataStore.ArtworkImporter
BookDataStore.BDSCtl
BCCloudKitDataChangedTransaction-
BCSyncCloudKit
BDSSyncUserDefaults
@"NSDictionary"8@?0
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentityExists
BCCloudAssetAnnotationManagerChanged
BCAssetAnnotations
BCCloudAssetAnnotationManagerAssetCache
com.apple.BCCloudAssetAnnotationManager
assetID = %@
assetID IN %@
assetID
v28@?0B8@"NSArray"12@"NSError"20
%@ %@
location
length
storeItem
storeID
storeID: %@, 
v12@?0i8
v24@?0@"BCMutableCollectionMember"8@"NSError"16
v20@?0i8@"NSError"12
starRating
reviewTitle
reviewBody
assetReview
userID
assetReviewID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
com.apple.iBooks.CloudKitTransactionManager
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
localRecordID
localRecordIDEncrypted
editGeneration
syncGeneration
systemFields
deletedFlag
%@.%@
AssetZone
CollectionZone
ReadingStatistics
GlobalMetadata
ReadingHistoryModel
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
BCCloudKit-iBooks
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
BCCloudSecureUserDataManagerChanged
BCCloudSecureUserDataManagerFetchedRecordsChanged
BCCloudSecureUserData
momd
BCSecureUserDatum
key = %@
key IN %@
saltedHashedID IN %@
key = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"<BCCloudData>"8@"NSError"16
v24@?0@"BCMutableSecureUserDatum"8@"NSError"16
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
assetVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
readingProgressHighWaterMark
spineIndexUpdated
readingProgress
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
-[BCProtoAnnotation writeTo:]
BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
CFBundleShortVersionString
assetAnnotations
assetID: %@, assetVersion: %@, statistics: %@
assetID: %@, assetVersion: %@, annotations: %@
BDSCloudGlobalMetadataManagerChanged
BDSCloudGlobalMetadataManagerFetchedRecordsChanged
BCCloudGlobalMetadata
BCGlobalMetadatum
key = %@  AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"BCMutableGlobalMetadatum"8@"NSError"16
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
com.apple.iBooks.CloudKitTransaction.
v16@?0@?<v@?>8
_coalescedNotification in %@
v16@?0@"NSString"8
BCCloudKitTransaction-
hasUpdatedSubscription
serverChangeToken
containerIdentifier
userRecordID
recordIDSalt
salt
saltEncrypted
Missing encryption identity due to the keychain not being synced yet
Account Temporarily Unavailable - missing encryption identity
<%@: %p recordZone:%@>
com.apple.iBooks.CloudKitDatabaseController
kNetworkReachabilityChangedNotification
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
attachToZone
v32@?0@"NSString"8Q16^B24
BCCloudKitDatabaseController - detaching because error creating record zones
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
No Books Record Salt
Nil weak self after save record %@
Unable to generate random salt %@
No Books Salt
Nil weak self after fetch salt record %@
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
liverpoolIdentityToken
nonNilLiverpoolIdentityToken
com.apple.tcc.access.changed
com.apple.iBooks.BDSLiverpoolStatusMonitor.dispatchQueue
com.apple.iBooks.BDSLiverpoolStatusMonitor.notifyQueue
/Library/Caches/com.apple.xbs/Sources/AlderServices_Sim/AlderServices-605/frameworks/BookDataStore/Utilities/BDSLiverpoolStatusMonitor.m
-[BDSLiverpoolStatusMonitor addObserver:]_block_invoke
[self.observers containsObject:observer] == NO
%p is already an observer
<%@(%p) CloudKit=%@ optedIn=%@
BDSArrayAdditionsErrorDomain
BCServerChangeToken
SecureUserData
value
key: %@, value: %@
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
BDSReachabilityErrorDomain
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
com.apple.iBooks.CloudDataSyncManager
v16@?0B8B12
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
SecureUserDataZone
com.apple.iBooks.SecureCloudKitController
com.apple.iBooks.secureData
BCCloudKit-iBooksSecure
BCPrivateDatabaseSecure
com.apple.iBooks.BCCloudKitSecure
v24@?0q8@"NSError"16
_coalescedAttachment in BCCloudKitController
v24@?0@"CKAccountInfo"8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
BCCloudData-iBooks
BCCloudAsset-iBooks
creating directory for store
deleting directory for store
[MIGRATE] migrate legacy store
[MIGRATE] destroy legacy store
removing read-only cloud data source persistent store
adding cloud data source persistent store
readingNowDetail
isTrackedAsRecent
lastEngagedDate
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@
appVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
collectionMember
collectionMemberID
collectionMemberID: %@, sortOrder:%d modificationDate:%@
BCSaltVersionIdentifier
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
<%@=%p %@>
assetDetail
isFinished
notFinished
taste
tasteSyncedToStore
dateFinished
lastOpenDate
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCCloudKitSyncToCKTransaction-
globalMetadata
XCTestConfigurationFilePath
BDSUnitTest
Documents
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
deletedFlag == NO
saltedHashedID
syncGeneration >= 1
%@-%@
v32@?0@"CKRecord"8Q16^B24
BDSMediaLibraryUtils
BDSServiceProtocol
BCCloudAssetDetailManager
NSObject
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BDSCloudKitSupportSignOutDissociate
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSJaliscoDAAPClientService
BDSNBPinningManagerService
BCCloudSecureUserDataManager
BDSServiceProxy
NSXPCProxyCreating
BCCollectionDetail
BCCloudData
BCMutableCollectionDetail
NSSecureCoding
NSCoding
BCCloudKitFetchChangesTransaction
IMAdditions
BatchDelete
Common_Stores
BDSSaltVersionIdentifierManager
BCCloudKitDatabaseZoneObserver
BCCloudSyncVersions
BCMutableCloudSyncVersions
BDSJaliscoDAAPClient
BCCloudKitDataChangedTransaction
BDSSyncUserDefaults
BDSAdditions
BDSAnnotation
BCCloudAssetAnnotationManager
BCCloudDataSyncManagerDelegate
BDSAppBundleIdentifier
BCAnnotationRange
NSCopying
BCStoreItem
BCMutableStoreItem
BDSServiceCenter
BCAssetReview
BCMutableAssetReview
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
CoreDataExtras
BDSNBPinningManager
BCCloudDataNullPrivacyDelegate
BCCloudDataPrivacyDelegate
BCMutableCloudData
BCCloudKitConfiguration
BCContainerConfiguration
BDSCloudKitSupportSignOutDeleteWithoutInstance
BCProtoAnnotation
BDSAppVersion
BCAssetAnnotations
BCMutableAssetAnnotations
BDSCloudGlobalMetadataManager
BDSCloudKitSupportZoneRecovery
BDSICloudIdentityTokenTracker
BCCloudKitTransaction
BCCloudKitRecordZone
BCCloudKitDatabaseController
BDSLiverpoolStatusMonitor
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BCSecureUserDatum
BCMutableSecureUserDatum
BCCloudCollectionsManager
BDSReachability
BDSOSTransaction
BCCloudAssetManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BCCloudKitSecureConfiguration
BCCloudKitController
BCCloudDataSource
BCReadingNowDetail
BCMutableReadingNowDetail
BCAnnotationsProtoBook
BDSApplication
BCCollectionMember
BCMutableCollectionMember
BCSaltVersionIdentifier
BookDataStoreBundleLookupClass
BDSUserPreferencesSync
BDSICloudIdentityToken
BCAssetDetail
BCMutableAssetDetail
BCCloudKitSyncToCKTransaction
BCGlobalMetadatum
BCMutableGlobalMetadatum
BDSAppGroupContainer
BCCloudManagerBatchSupport
BCCloudDataManager
audiobooksQuery
setIgnoreSystemFilterPredicates:
predicateWithValue:forProperty:
addFilterPredicate:
collections
count
lastObject
_storeRepresentativeItem:
items
countByEnumeratingWithState:objects:count:
valueForProperty:
mediaType
longLongValue
representativeDAAPMediaItemsWithAssetId:
init
formXPCConnection
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
currentAssetDetailCloudSyncVersions:
setAssetDetail:completion:
setAssetDetails:completion:
deleteAssetDetailForAssetID:completion:
assetDetailForAssetID:completion:
assetDetailsForAssetIDs:completion:
resolvedAssetDetailForAssetID:completion:
fetchAssetDetailsIncludingDeleted:completion:
fetchAssetDetailsForUnsyncedTastes:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
getAssetDetailChangesSince:completion:
currentReadingNowDetailCloudSyncVersions:
setReadingNowDetails:completion:
deleteReadingNowDetailForAssetID:completion:
readingNowDetailsForAssetIDs:completion:
getReadingNowDetailChangesSince:completion:
setAssetReview:completion:
setAssetReviews:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
assetReviewForAssetReviewID:completion:
assetReviewsForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
getAssetReviewChangesSince:completion:
addStoreItem:completion:
addStoreItems:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
storeItemForStoreID:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
dissociateCloudDataFromSyncWithCompletion:
currentCollectionDetailCloudSyncVersions:
setCollectionDetail:completion:
setCollectionDetails:completion:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
collectionDetailForCollectionID:completion:
collectionDetailsForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
getCollectionDetailChangesSince:completion:
currentCollectionMemberCloudSyncVersions:
setCollectionMember:completion:
setCollectionMembers:completion:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
collectionMemberForCollectionMemberID:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
fetchMaxSortOrderInCollectionID:completion:
getCollectionMemberChangesSince:completion:
setEnableCollectionSync:
setEnableCloudSync:enableReadingNowSync:
setEnableSecureUserDataCloudSync:
setCloudSyncPaused:
deleteCloudDataWithCompletion:
signalFetchChangesTransaction:
updatePolitely:reason:completion:
updateFamilyPolitely:reason:completion:
setItemHidden:forStoreID:completion:
hideItemsWithStoreIDs:completion:
deleteItemsWithStoreIDs:completion:
fetchMostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
currentCloudSyncVersions:
setUserDatum:completion:
setUserData:completion:
deleteUserDatumForKey:completion:
userDatumForKey:completion:
userDatumIncludingDeleted:forKey:completion:
fetchUserDataIncludingDeleted:completion:
getUserDataChangesSince:completion:
resolvedUserDataValueForKey:completion:
userDataValueForKey:completion:
setUserDataValue:forKey:completion:
audiobookStoreEnabledWithCompletion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setInterruptionHandler:
setConnectionHealthy:
scheduleRestart
setInvalidationHandler:
remoteObjectProxyWithErrorHandler:
connectionHealthy
resume
invalidate
remoteObjectProxy
errorWithDomain:code:userInfo:
addObjectsFromArray:
bds_traverseBatchesOfSize:block:
allKeys
bds_subDictionaryWithKeys:
progressWithTotalUnitCount:
setTotalUnitCount:
synchronousRemoteObjectProxyWithErrorHandler:
shutdown
connection
.cxx_destruct
_connectionHealthy
_remoteObjectProxy
_connection
T@"<BDSServiceProtocol><NSXPCProxyCreating>",R,N,V_remoteObjectProxy
T@"NSXPCConnection",R,N,V_connection
TB,N,V_connectionHealthy
initWithCloudData:
incrementEditGeneration
recordType
identifier
zoneName
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
TB,R,N
T@"NSDate",R,C,N
Tq,R,N
T@"CKRecord",R,C,N
T@"NSData",R,C,N
T@"<BCCloudDataPrivacyDelegate>",W,N
collectionID
name
collectionDescription
hidden
sortOrder
sortMode
T@"NSString",R,C,N
Ti,R,N
_configureFromCollectionDetail:withMergers:
isEqualExceptForDate:
isEqualToString:
configureFromCloudData:withMergers:
setDifferentString:forKey:
numberWithBool:
setDifferentNumber:forKey:
numberWithInteger:
resolveConflictsFromRecord:withResolvers:
localIdentifierFromRecord:
setCollectionID:
timeIntervalSinceReferenceDate
objectForKey:
setName:
setDifferentDate:forKey:
hasChanges
recordID
recordName
stringWithFormat:
propertyIDKey
mutableCopy
T@"NSString",C,D,N
TB,D,N
Ti,D,N
copy
initWithRecord:
boolValue
intValue
configuredRecordFromAttributes
establishedSalt
setObject:forKey:
numberWithInt:
encodeWithCoder:
encodeObject:forKey:
encodeBool:forKey:
encodeInt:forKey:
initWithCoder:
localRecordID
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeIntForKey:
supportsSecureCoding
TB,R
initWithCollectionID:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
initWithEntityName:delegate:
stringByAppendingString:
cloudKitController
privateCloudDatabaseController
fetchChangesWithCompletion:
transactionNameForEntityName:
initWithCloudKitController:delegate:
performWorkWithCompletion:
coalescingDelay
transactionLifetimeTimout
setCloudKitController:
_cloudKitController
T@"BCCloudKitController",W,N,V_cloudKitController
initWithObjects:
andPredicateWithSubpredicates:
entityForName:inManagedObjectContext:
setEntity:
setPredicate:
countForFetchRequest:error:
logRecursively
objectAtIndex:
setResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
arrayWithObject:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
insertNewObjectForEntityForName:inManagedObjectContext:
setIncludesPropertyValues:
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
setFetchLimit:
setFetchBatchSize:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
im_pushSafeAccessState
im_popSafeAccessState
countEntity:withPredicate:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
deleteObject:
save:
batchDeleteEntity:matching:prefetchRelationships:
persistentStores
valueForKey:
setWithArray:
intersectsSet:
hasStoreInCommonWith:
addObserver:zoneID:
zoneDataManager
tokenController
updateSaltVersionIdentifier:completion:
code
hasSaltChangedWithCompletion:
zoneNeedsUpdate:completion:
databaseController:saltVersionIdentifierChanged:completion:
initWithZoneDataManager:tokenController:databaseController:
setZoneDataManager:
setTokenController:
setZoneName:
_zoneDataManager
_tokenController
_zoneName
T@"NSObject<BDSCloudKitSupportZoneRecovery>",W,N,V_zoneDataManager
T@"BCCloudChangeTokenController",W,N,V_tokenController
T@"NSString",C,N,V_zoneName
setValue:forKey:
setDifferentValue:forKey:klass:
dictionary
setDifferentObject:forKey:
propertiesForKeys:
initWithCloudSyncVersions:
cloudVersion
setCloudVersion:
localVersion
setLocalVersion:
syncVersion
setSyncVersion:
historyToken
setHistoryToken:
historyTokenOffset
setHistoryTokenOffset:
archivedDataWithRootObject:requiringSecureCoding:error:
setRawHistoryToken:
rawHistoryToken
unarchivedObjectOfClass:fromData:error:
dataType
T@"NSPersistentHistoryToken",R,C,N
configureFromSyncVersions:
T@"NSData",C,D,N
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
encodeInt64:forKey:
setDataType:
decodeInt64ForKey:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
serviceProxy
setFamilyUpdateInProgress:
sharedClient
T@"BDSJaliscoDAAPClient",R,N
familyUpdateInProgress
setServiceProxy:
_familyUpdateInProgress
_serviceProxy
T@"BDSServiceProxy",&,N,V_serviceProxy
TB,N,V_familyUpdateInProgress
defaultCenter
notificationName
postNotificationName:object:
initWithEntityName:notificationName:delegate:
setNotificationName:
_notificationName
T@"NSString",C,N,V_notificationName
primaryAppleAccount
accountType
standardUserDefaults
boolForKey:
isGlobalICloudDriveSyncOptedIn
aa_altDSID
_stateForLog
initWithTitle:block:
_isBundleIdentifierInArray:
isSignedIntoICloud
isCloudKitSyncOptedIn
iCloudIdentity
dictionaryWithObjects:forKeys:count:
makeOSStateHandler
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
addObject:
bds_addObjectIfNotNil:
initWithCloudKitController:
setDelegate:
entityName
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
applicationCacheDirectory
stringByAppendingPathComponent:
fileURLWithPath:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dealloc
syncManager
addObserver:recordType:
transactionManager
signalSyncToCKTransactionForEntityName:syncManager:
sharedInstance
removeObserver:recordType:
dataManager
setAssetID:
appVersion
setAppVersion:
annotationCreationDate
annotationCreatorIdentifier
isAnnotationDeleted
annotationIsUnderline
annotationLocation
annotationModificationDate
annotationNote
annotationRepresentativeText
annotationSelectedText
annotationStyleNumber
annotationTypeNumber
annotationUuid
plAbsolutePhysicalLocation
plLocationRangeStart
plLocationRangeEnd
plUserData
plStorageUUID
physicalPageNumber
annotationVersion
assetVersion
attachments
chapterTitle
userModificationDate
annotationSelectedTextRange
readingProgressHighWaterMark
readingProgress
spineIndexUpdated
locationModificationDate
futureProofing12
T@"NSDate",R,&,N
T@"NSString",R,&,N
annotationDeleted
TB,R,N,GisAnnotationDeleted
T@"NSNumber",R,&,N
T@"NSData",R,&,N
T{_NSRange=QQ},R,N
Tf,R,N
setAssetVersion:
setCreatorIdentifier:
setUuid:
setModificationDate:
setCreationDate:
setDeleted:
setIsUnderline:
setLocationCFIString:
setNote:
setRepresentativeText:
setSelectedText:
setStyle:
setType:
setPhysicalPageNumber:
setAnnotationVersion:
setAttachments:
setChapterTitle:
setUserModificationDate:
setLocation:
setLength:
setSelectedTextRange:
setReadingProgressHighWaterMark:
setSpineIndexUpdated:
setReadingProgress:
setFutureProofing12:
setPlAbsolutePhysicalLocation:
setPlLocationRangeEnd:
setPlLocationRangeStart:
setPlLocationStorageUUID:
setPlUserData:
setLocationModificationDate:
addAnnotation:
initWithAssetID:
writeTo:
immutableData
setBookAnnotations:
predicateWithFormat:
setCloudData:predicate:completion:
dataUsingEncoding:
bu_md5
length
ckAssetStoreDirectory
URLByAppendingPathComponent:
enableCloudSync
startSyncToCKWithCompletion:
dictionaryWithCapacity:
assetID
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
resolveConflictsForRecords:completion:
failedRecordIDs:completion:
getChangesSince:forEntityClass:completion:
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
syncManager:removeCloudDataForIDs:completion:
syncManager:updateSyncGenerationFromCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:failedRecordIDs:completion:
syncManager:fetchedAllRecordsInZone:
assetWithID:updatedAnnotations:completion:
fileURLForCachingCKAssetWithAssetID:
getAnnotationChangesSince:completion:
initWithCloudDataSource:cloudKitController:
setEnableCloudSync:
annotationsDataSource
setAnnotationsDataSource:
setSyncManager:
setDataManager:
setCkAssetStoreDirectory:
_accessQueue
_enableCloudSync
_annotationsDataSource
_syncManager
_dataManager
_ckAssetStoreDirectory
T@"BCCloudDataSource",&,N,V_annotationsDataSource
T@"BCCloudDataSyncManager",&,N,V_syncManager
T@"BCCloudDataManager",&,N,V_dataManager
T@"NSURL",&,N,V_ckAssetStoreDirectory
TB,N,V_enableCloudSync
bdsAppBundleIdentifier
dictionaryRepresentation
numberWithUnsignedLongLong:
allocWithZone:
copyWithZone:
readFrom:
copyTo:
mergeFrom:
location
_length
_location
TQ,N,V_location
TQ,N,V_length
storeID
_configureFromStoreItem:withMergers:
setStoreID:
initWithStoreID:
_storeID
T@"NSString",C,N,V_storeID
sharedManager
storeAssetManager
collectionMemberManager
collectionMemberIDWithCollectionID:assetID:
initWithCollectionMemberID:
setDeletedFlag:
_nextSortOrderForCollectionMemberManager:collectionID:completion:
addStoreID:toCollectionID:completion:
fetchIsAssetID:inCollectionID:completion:
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
Ts,R,N
Td,R,N
_configureFromAssetReview:withMergers:
userIDFromAssetReviewID:
numberWithShort:
setAssetReviewID:
floatValue
numberWithDouble:
integerValue
setStarRating:
rangeOfString:
substringFromIndex:
substringToIndex:
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
setNormalizedStarRating:
userID
Ts,D,N
Td,N
initWithAssetReviewID:
setReviewTitle:
setReviewBody:
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
transactionAccessQueue
transactions
transactionName
clientConnected
signal
signalSyncToCKTransactionForEntityName:syncManager:completion:
initWithEntityName:syncManager:delegate:
transactionCompletionCallbacks
setObject:forKeyedSubscript:
objectForKeyedSubscript:
subscriptionID
removeObjectForKey:
transactionCompleted:
signalDataChangeTransactionForEntityName:notificationName:
signalFetchChangesTransactionInService:
setTransactionAccessQueue:
setTransactions:
setTransactionCompletionCallbacks:
_transactionAccessQueue
_transactions
_transactionCompletionCallbacks
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
T@"NSMutableDictionary",&,N,V_transactions
T@"NSMutableDictionary",&,N,V_transactionCompletionCallbacks
userInfo
localizedDescription
localizedFailureReason
localizedRecoverySuggestion
localizedRecoveryOptions
nullPrivacyDelegate
recordNameFromRecordType:identifier:
recordChangeTag
setSystemFields:
setSaltedHashedID:
saltedHashedID
decodeRecordFromSystemFields:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
initWithRecordType:recordID:
encodeRecordSystemFields:
setCkSystemFields:
setEditGeneration:
encryptedValuesByKey
hasValidSalt
_privacyDelegate
T@"NSDate",C,D,N
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
data
setSyncGeneration:
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
setQueueIdentifier:
setContainerIdentifier:
arrayWithObjects:count:
setAppZones:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
containerIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",R,N
T@"NSArray",R,N
_requiresDeviceToDeviceEncryption
_queueIdentifier
_containerIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
sharedClientXPCProxy
bundleForClass:
pathForResource:ofType:
fileURLWithPath:isDirectory:
initWithContentsOfURL:
secureSharedInstance
arrayWithCapacity:
removeUserDataForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
changeTokenController
setCloudData:predicate:propertyIDKey:completion:
removeCloudDataForPredicate:completion:
deleteCloudDataForPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
fetchCloudDataIncludingDeleted:completion:
initWithKey:
value
resolvedCloudDataForCloudData:predicate:completion:
setValue:
objectModel
proxyMode
setProxyMode:
secureUserDataSource
setSecureUserDataSource:
setObjectModel:
setChangeTokenController:
_proxyMode
_secureUserDataSource
_objectModel
_changeTokenController
TB,N,V_proxyMode
T@"BCCloudDataSource",&,N,V_secureUserDataSource
T@"NSManagedObjectModel",&,N,V_objectModel
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
numberWithUnsignedInt:
numberWithFloat:
setFutureProofing11:
setHasDeleted:
hasDeleted
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setHasStyle:
hasStyle
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAssetVersion
hasAttachments
hasChapterTitle
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
selectedTextRange
futureProofing11
plLocationStorageUUID
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_assetVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_readingProgress
_readingProgressHighWaterMark
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
TB,N
TB,N,V_deleted
TB,N,V_isUnderline
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
T@"NSString",&,N,V_note
T@"NSString",&,N,V_representativeText
T@"NSString",&,N,V_selectedText
TI,N,V_style
TI,N,V_type
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_physicalPageNumber
T@"NSString",&,N,V_annotationVersion
T@"NSString",&,N,V_assetVersion
T@"NSString",&,N,V_attachments
T@"NSString",&,N,V_chapterTitle
Td,N,V_userModificationDate
T@"BCAnnotationRange",&,N,V_selectedTextRange
Tf,N,V_readingProgressHighWaterMark
TB,N,V_spineIndexUpdated
Tf,N,V_readingProgress
T@"NSString",&,N,V_futureProofing11
T@"NSString",&,N,V_futureProofing12
Ti,N,V_plAbsolutePhysicalLocation
Ti,N,V_plLocationRangeEnd
Ti,N,V_plLocationRangeStart
T@"NSString",&,N,V_plLocationStorageUUID
T@"NSData",&,N,V_plUserData
Td,N,V_locationModificationDate
mainBundle
objectForInfoDictionaryKey:
bookAnnotations
T@"NSData",R,N
_configureFromAssetAnnotations:withMergers:
_mergeInAssetID:assetVersion:serializedData:
initWithData:
fileURL
dataWithContentsOfURL:
T@"NSData",&,D,N
assetAnnotationManager
writeToURL:atomically:
initWithFileURL:
_assetID
_bookAnnotations
T@"NSString",C,N,V_assetVersion
T@"NSData",&,N,V_bookAnnotations
T@"NSString",R,C,N,V_assetID
array
annotations
removeObjectsInArray:
initWithFormat:arguments:
stringWithCString:encoding:
lastPathComponent
initWithManagedObjectModel:nameOnDisk:
initWithCloudDataSource:
managedObjectContext
initWithMOC:zoneName:cloudKitController:
conflictResolvers
setConflictResolvers:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
removeMetadataForSaltedHashedRecordIDs:completion:
resolveConflictsForRecords:withResolvers:completion:
metadatumForKey:completion:
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
setMetadatum:completion:
setMetadata:completion:
deleteMetadatumForKey:completion:
metadatumIncludingDeleted:forKey:completion:
fetchMetadataIncludingDeleted:completion:
getMetadataChangesSince:completion:
resolvedMetadataValueForKey:completion:
metadataValueForKey:completion:
setMetadataValue:forKey:completion:
setConflictResolver:forKey:
removeConflictResolverForKey:
globalMetadataDataSource
setGlobalMetadataDataSource:
saltVersionIdentifierManager
setSaltVersionIdentifierManager:
_globalMetadataDataSource
_saltVersionIdentifierManager
_conflictResolvers
T@"BCCloudDataSource",&,N,V_globalMetadataDataSource
T@"BDSSaltVersionIdentifierManager",&,N,V_saltVersionIdentifierManager
T@"NSMutableDictionary",&,N,V_conflictResolvers
dictionaryWithContentsOfURL:
trackLiverpool
tokenForCurrentIdentityIfCloudKitEnabled
initWithCurrentIdentity
setCurrentToken:
initWithToken:
dispatchQueue
currentToken
plistContents
initFromArchive:
token
plistURL
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
setPlistContents:
setPlistURL:
setDispatchQueue:
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
_dispatchQueue
T@"NSMutableDictionary",&,N,V_plistContents
T@"NSURL",&,N,V_plistURL
T@"BDSICloudIdentityToken",&,N,V_currentToken
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
TB,N,V_trackLiverpool
cStringUsingEncoding:
initWithTransactionName:
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
setCoalescingDelay:
lifecycleAccessQueue
clientCount
setClientCount:
transactionLifetime
coalescedNotification
laq_scheduleTransactionLifetime
signalWithCompletion:
delegate
setTransactionLifetime:
setEntityName:
setCoalescedNotification:
osTransaction
setOsTransaction:
setLifecycleAccessQueue:
_entityName
_coalescedNotification
_osTransaction
_lifecycleAccessQueue
_transactionLifetime
_delegate
_clientCount
T@"NSString",C,N,V_entityName
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
T@"BDSOSTransaction",&,N,V_osTransaction
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
Tq,N,V_clientCount
recordZone
initWithRecordZone:
_recordZone
T@"CKRecordZone",R,N,V_recordZone
strongToWeakObjectsMapTable
p_unarchive
p_internetReachabilityChanged:
sharedReachabilityForInternetConnection
addObserver:selector:name:object:
accessQueue
p_archiveToData
database
attachedToContainer
fetchRecordZoneChangesSuccess
setAttachedToContainer:
p_informObserversOfAttachmentChange
p_fetchZoneChanges:
changedRecordZoneIDs
allObjects
coalescedZoneFetch
p_fetchDatabaseChanges:
fetchRecordWithID:completionHandler:
containerWithIdentifier:
p_unsubscribeToContainer:
setHasSubscription:
setServerChangeToken:
p_scheduleArchiveWithCompletion:
p_subscribeWithCompletion:
fetchUserRecordIDWithCompletionHandler:
endTransaction
enumerateObjectsUsingBlock:
desiredRecordZoneIDs
detach
p_createRecordIDSaltWithCompletion:
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableWithReason:completion:
p_createRecordZones:completionHandler:
detachWithCompletion:
isOffline
recordZones
recordIDSalt
bytes
UTF8String
dataWithBytes:length:
base64EncodedStringWithOptions:
saltedAndHashedIDFromLocalID:
privateCloudDatabase
initWithSubscriptionsToSave:subscriptionIDsToDelete:
bds_defaultConfiguration
setContainer:
setConfiguration:
setDatabase:
doubleValue
setModifySubscriptionsCompletionBlock:
addOperation:
hasSubscription
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
container
operationID
serverChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithRecordZoneIDs:
zoneID
allValues
minusSet:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
arrayByAddingObjectsFromArray:
setModifyRecordZonesCompletionBlock:
isEqualToSet:
setFetchRecordZonesCompletionBlock:
initWithRecordName:
setRecordIDSalt:
p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:
domain
null
initWithName:reason:userInfo:
saveRecord:completionHandler:
serverFetchPostponed
tokenStores
containsObject:
cloudSyncEnabled
p_informObserversOfCompletedFetchOfZone:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
serverChangeTokenWithCompletion:
setPreviousServerChangeToken:
removeObject:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
setBackOffInterval:
backOffInterval
initWithRecordZoneIDs:configurationsByRecordZoneID:
p_informObserversOfRecordsChanged:forRecordType:
removeAllObjects
setRecordChangedBlock:
observers
databaseController:recordWithIDWasDeleted:recordType:
setRecordWithIDWasDeletedBlock:
p_informObserversOfRecordsChanged:
storeServerChangeToken:completion:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setServerFetchPostponed:
p_updateRetryParametersFromFetchZoneChangesOperationError:
setFetchRecordZoneChangesSuccess:
setFetchRecordZoneChangesCompletionBlock:
databaseController:reachabilityChanged:
databaseController:attachmentChanged:
enumerateKeysAndObjectsUsingBlock:
zoneObservers
initWithArray:copyItems:
databaseController:recordsChanged:
databaseController:fetchedAllRecordsInZone:
coalescedArchive
archiveURL
p_unarchiveFromData:
initRequiringSecureCoding:
encodeInteger:forKey:
userRecordID
finishEncoding
encodedData
initForReadingFromData:error:
decodeIntegerForKey:
setUserRecordID:
finishDecoding
encodeSystemFieldsWithCoder:
startNotifier
setQualityOfService:
attachToZones:completion:
_deleteRecordZonesWithIDs:qualityOfService:completion:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
startInternetConnectionReachabilityNotifier
initWithSubscriptionID:appBundleIdentifier:archiveURL:
fetchRecordForRecordID:completion:
willAttachToContainer:serviceMode:completion:
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
getAttached:
recordZoneWithName:completionHandler:
removeObserver:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
setSubscriptionID:
setArchiveURL:
setDesiredRecordZoneIDs:
setChangedRecordZoneIDs:
setAccessQueue:
setCoalescedArchive:
setRecordZones:
setObservers:
setZoneObservers:
setTokenStores:
setCoalescedZoneFetch:
_zoneObserversLock
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_container
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_observers
_zoneObservers
_tokenStores
_coalescedZoneFetch
_backOffInterval
T@"CKDatabase",&,N,V_database
T@"CKContainer",&,N,V_container
T@"NSURL",C,N,V_archiveURL
T@"NSArray",C,N,V_desiredRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
T@"NSString",C,N,V_subscriptionID
T@"NSString",C,N,V_containerIdentifier
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
T@"NSMutableDictionary",&,N,V_recordZones
T@"NSMutableDictionary",&,N,V_observers
T@"NSMapTable",&,N,V_zoneObservers
T@"NSMutableDictionary",&,N,V_tokenStores
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
TB,N,V_attachedToContainer
Td,N,V_backOffInterval
TB,N,V_serverFetchPostponed
TB,N,V_fetchRecordZoneChangesSuccess
TB,N,V_hasSubscription
componentsJoinedByString:
hashTableWithOptions:
isPrimaryAccountManagedAppleID
dq_refreshICloudAvailabilityStatus
p_iCloudIdentityDidChange:
setTccNotifyToken:
isCloudKitEnabled
optedInKnown
setOptedIn:
refreshICloudTokensAndUpdateWithOptedIn:
optedIn
dq_archiveCurrentICloudIdentityToken
tccNotifyToken
lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
lastArchivedNonNilICloudIdentityToken
currentICloudIdentityToken
dq_isCloudKitEnabled
setCoordinatingObserver:
lastArchivedICloudIdentityToken
_notifyObserversWithCurrentToken:lastToken:
synchronize
liverpoolStatusChangedToAvailableWithNewIdentity:oldIdentity:
notifyQueue
coordinatingObserver
updateWithOptedIn:
userIdentityPreviouslyRecordedOnThisDevice
iCloudIdentityToken
addObserver:
registerCoordinatingObserver:
restartObserving
setLastArchivedICloudIdentityToken:
setLastArchivedNonNilICloudIdentityToken:
setCurrentICloudIdentityToken:
setOptedInKnown:
setLastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch:
containerQueue
setContainerQueue:
setNotifyQueue:
_optedIn
_optedInKnown
_lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
_tccNotifyToken
_lastArchivedICloudIdentityToken
_lastArchivedNonNilICloudIdentityToken
_currentICloudIdentityToken
_containerQueue
_notifyQueue
_coordinatingObserver
T@"BDSICloudIdentityToken",C,N,V_lastArchivedICloudIdentityToken
T@"BDSICloudIdentityToken",C,N,V_lastArchivedNonNilICloudIdentityToken
T@"BDSICloudIdentityToken",C,N,V_currentICloudIdentityToken
TB,N,V_optedIn
TB,N,V_optedInKnown
TB,N,V_lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
Ti,N,V_tccNotifyToken
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"NSHashTable",&,N,V_observers
T@"<BDSLiverpoolStatusChangeObserving>",W,N,V_coordinatingObserver
T@"BCICloudIdentityToken",R,C,N
pointerAtIndex:
methodForSelector:
removePointerAtIndex:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
subarrayWithRange:
initWithOptions:
addPointer:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNulls
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:
bds_UUID
didChangeContainer
fetchRequest
firstObject
localSaltVersionIdentifier
performBlock:
objectAtIndexedSubscript:
initIntoManagedObjectContext:
setLocalSaltVersionIdentifier:
setServerSaltVersionIdentifier:
fetchRequestWithEntityName:
initWithFetchRequest:
executeRequest:error:
result
postNotificationName:object:userInfo:
initWithEntityName:
setMoc:
_moc
T@"NSManagedObjectContext",W,N,V_moc
_configureFromUserDatum:withMergers:
setKey:
_key
_value
T@"NSString",C,N,V_value
T@"NSString",R,C,N,V_key
initClientXPCProxy
collectionDataSource
setCollectionDataSource:
collectionDetailManager
setCollectionDetailManager:
setCollectionMemberManager:
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
T@"BCCloudDataSource",&,N,V_collectionDataSource
stopNotifier
reachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
currentReachabilityStatus
reachabilityForInternetConnection
reachabilityWithHostName:
reachabilityForLocalWiFi
_updateIsOffline
connectionRequired
localWiFiRef
reachabilityRef
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
assetDataSource
setAssetDataSource:
setAssetAnnotationManager:
assetDetailManager
setAssetDetailManager:
readingNowDetailManager
setReadingNowDetailManager:
assetReviewManager
setAssetReviewManager:
setStoreAssetManager:
_assetDataSource
_assetAnnotationManager
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
T@"BCCloudAssetAnnotationManager",&,N,V_assetAnnotationManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
T@"BCCloudDataSource",&,N,V_assetDataSource
initWithCloudKitController:dataMapper:
syncQueue
_syncQueueSyncForCloudData:completion:
serverPushPostponed
tooBigBatch
_maxCloudDataPerBatch
dataMapper
recordFromCloudData:
setTooBigBatch:
_leaveDispatchGroup:times:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
setServerPushPostponed:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
setProcessingCloudData:
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:
setModifyRecordsCompletionBlock:
syncCloudData:completion:
signalSyncToCK
setDataMapper:
setSyncQueue:
processingCloudData
_processingCloudData
_serverPushPostponed
_dataMapper
_syncQueue
_tooBigBatch
T@"BCCloudKitController",&,N,V_cloudKitController
T@"<BCCloudDataMapper>",&,N,V_dataMapper
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
TB,N,V_processingCloudData
TQ,N,V_tooBigBatch
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
initWithConfiguration:
setTransactionManager:
p_privateDatabaseArchiveURLForConfiguration:
setSourceApplicationBundleIdentifier:
registerForSecureNotifications
accountStatusWithCompletionHandler:
p_accountChanged:
p_identityChanged:
serviceMode
p_updateAttachment
coalescedAttachment
gettingAccountInfo
p_getAccountInfo
databaseFolderURLForConfiguration:
removeItemAtURL:error:
applicationDocumentsDirectory
initFileURLWithPath:isDirectory:
p_createDatabaseArchiveDirectoryForConfiguration:
stringByAppendingPathExtension:
accountInfoWithCompletionHandler:
setGettingAccountInfo:
supportsDeviceToDeviceEncryption
p_getNecessaryAccountInfoFromContainer:completion:
notificationFromRemoteNotificationDictionary:
T@"BCCloudKitController",R
setEnableCloudSync:serviceMode:
applicationDidBecomeActive
handleRemoteNotification:
setPrivateCloudDatabaseController:
setDidChangeContainer:
setServiceMode:
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_coalescedAttachment
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
TB,N,V_gettingAccountInfo
TB,N,V_serviceMode
TB,N,V_didChangeContainer
T@"<BCContainerConfiguration>",&,N,V_configuration
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
initWithManagedObjectModel:
_persistentStoreOptions
addPersistentStoreWithType:configuration:URL:options:error:
_setupManagedObjectContext
_sharedRootDirectoryURL
_sharedLegacyRootDirectoryURL
initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_documentsDirectoryURL
URLByAppendingPathComponent:isDirectory:
_directoryExistsForStoreAtURL:
_createDirectoryForStoreAtURL:
_migrateAndDestroyStoreAtLegacyURL:toModernURL:
_addStoreAtURL:
_deleteDirectoryForStoreAtURL:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
_logIf:error:operation:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
destroyPersistentStoreAtURL:withType:options:error:
isReadOnly
removePersistentStore:error:
setManagedObjectContext:
persistentStoreCoordinator
_managedObjectContext
_persistentStoreCoordinator
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
isTrackedAsRecent
lastEngagedDate
_configureFromReadingNowDetail:withMergers:
isEqualToDate:
compare:
setIsTrackedAsRecent:
setLastEngagedDate:
_isTrackedAsRecent
_lastEngagedDate
T@"NSString",C,N,V_assetID
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
initWithCapacity:
annotationsCount
clearAnnotations
annotationAtIndex:
annotationType
setAnnotations:
_annotations
_appVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
T@"NSMutableArray",&,N,V_annotations
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
T@"NSString",R
collectionMemberID
_configureFromCollectionMember:withMergers:
setCollectionMemberID:
assetIDFromCollectionMemberID:
collectionIDFromCollectionMemberID:
_collectionMemberID
T@"NSString",C,N,V_collectionMemberID
initWithEntity:insertIntoManagedObjectContext:
T@"NSString",&,D,N
serverSaltVersionIdentifier
bundleURL
containerURL
_initWithSuiteName:container:
syncedPreferenceKeys
copyChangedLocalPreferencesToGroupContainerWithAppSuiteName:container:groupName:groupContainer:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:
objectFromGroupPreferencesForKey:
copyChangedGroupPreferencesToLocalContainer
copyChangedLocalPreferencesToGroupContainer
_hashFor:
bu_md5UpperCase
setToken:
_token
T@"NSString",C,N,V_token
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
_configureFromAssetDetail:withMergers:
setDifferentBookmarkTime:
setBookmarkTime:
isAudiobook
Tf,D,N
Td,D,N
encodeInt32:forKey:
encodeDouble:forKey:
decodeInt32ForKey:
decodeDoubleForKey:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
_configureFromMetadatum:withMergers:
processInfo
environment
isUnitTesting
removeItemAtPath:error:
bu_booksGroupContainerURL
setUnitTesting:
documentsURL
unitTesting
TB,GisUnitTesting
T@"NSURL",R
changes
changeType
changedObjectID
existingObjectWithID:error:
isDeleted
refreshObject:mergeChanges:
entity
tombstone
processPendingChanges
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
mq_cloudSyncVersions
responseQueue
_logError:
signalDataChangedTransaction
setCloudData:predicate:mergers:completion:
mq_incrementCloudVersion
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:propertyIDKey:mergers:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
cloudDataFromRecord:
mutableClass
resolveConflictsForRecords:withResolvers:mergers:completion:
immutableClass
predicateWithValue:
cloudDatasWithPredicate:completion:
fetchHistoryAfterToken:
countWithPredicate:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
dataSource
setDataSource:
setResponseQueue:
setImmutableClass:
setMutableClass:
setSignalDataChangedTransaction:
_signalDataChangedTransaction
_dataSource
_responseQueue
_immutableClass
_mutableClass
T@"BCCloudDataSource",&,N,V_dataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
T#,V_immutableClass
T#,V_mutableClass
TB,N,V_signalDataChangedTransaction
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v32@0:8@16@?24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v36@0:8@16B24@?28
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v20@0:8B16
v24@0:8B16B20
v24@0:8@16
v24@0:8@"NSString"16
v36@0:8B16q20@?28
v36@0:8B16@20@?28
v36@0:8B16q20@?<v@?B>28
v36@0:8B16@"NSString"20@?<v@?B>28
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
@28@0:8B16@?20
@24@0:8@?16
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSError">20
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v40@0:8@16@24@?32
v32@0:8@"<BCSecureUserDatum>"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableSecureUserDatum"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"BCMutableSecureUserDatum"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSNumber"@"NSError">16
@24@0:8@?<v@?@"NSError">16
v16@0:8
@"<BDSServiceProtocol><NSXPCProxyCreating>"
@"NSXPCConnection"
q16@0:8
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
i16@0:8
v32@0:8@16@24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8i16
@"NSString"
@32@0:8@16@24
d16@0:8
@"BCCloudKitController"
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@40@0:8@16@24@32
@24@0:8#16
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
v40@0:8@"BCCloudKitDatabaseController"16@"NSString"24@?<v@?B>32
@"NSObject<BDSCloudKitSupportZoneRecovery>"
@"BCCloudChangeTokenController"
B40@0:8@16@24#32
B32@0:8@16@24
@"NSPersistentHistoryToken"16@0:8
v24@0:8q16
@"NSPersistentHistoryToken"
@"BDSServiceProxy"
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
{_NSRange=QQ}16@0:8
f16@0:8
@"NSNumber"16@0:8
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
v40@0:8@"NSString"16@"NSArray"24@?<v@?BB@"NSError">32
@"NSURL"24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"BCCloudDataSource"
@"BCCloudDataSyncManager"
@"BCCloudDataManager"
@"NSURL"
@24@0:8^{_NSZone=}16
v24@0:8Q16
s16@0:8
v24@0:8d16
v20@0:8s16
v24@0:8@"BCCloudKitTransaction"16
@"NSMutableDictionary"
@"NSString"32@0:8@"NSString"16@"NSString"24
@"<BCCloudDataPrivacyDelegate>"
@"NSDate"
@"CKRecord"
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
@"NSArray"
@"NSManagedObjectModel"
v20@0:8I16
v20@0:8f16
I16@0:8
@"NSData"
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v32@0:8@"<BCGlobalMetadatum>"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableGlobalMetadatum"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"BCMutableGlobalMetadatum"@"NSError">28
v32@0:8@?16@24
@"BDSSaltVersionIdentifierManager"
@28@0:8@16B24
@"BDSICloudIdentityToken"
@"BUCoalescingCallBlock"
@"BDSOSTransaction"
@"NSObject<OS_dispatch_source>"
@"<BCCloudKitTransactionDelegate>"
@"CKRecordZone"
v52@0:8@16@24B32@?36@?44
v40@0:8@16q24@?32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKDatabase"
@"CKContainer"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSMapTable"
@"NSHashTable"
@"<BDSLiverpoolStatusChangeObserving>"
v44@0:8:16B24@28@?36
v32@0:8Q16@?24
v32@0:8:16@?24
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
@"NSManagedObjectContext"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
i20@0:8I16
^{__SCNetworkReachability=}
@24@0:8r*16
@"NSObject<OS_os_transaction>"
@"BCCloudAssetAnnotationManager"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
v28@0:8@16B24
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?48@0:8@16@24Q32@40
@"<BCCloudDataSyncManagerDelegate>"
@"<BCCloudDataMapper>"
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@48@0:8@16@24@32@40
v36@0:8B16@20@28
B40@0:8@16@24@32
@"NSPersistentStoreCoordinator"
@24@0:8Q16
@"NSMutableArray"
v48@0:8@16@24@32@40
B24@0:8d16
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
