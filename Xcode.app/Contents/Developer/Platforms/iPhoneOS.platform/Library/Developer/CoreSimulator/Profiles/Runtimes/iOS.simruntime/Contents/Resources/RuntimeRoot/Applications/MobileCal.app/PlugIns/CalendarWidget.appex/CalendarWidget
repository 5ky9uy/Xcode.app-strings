0@333333
<333333
xV42?
calshow://
v8@?0
-[CalendarWidgetViewController initWithNibName:bundle:]
-[CalendarWidgetViewController _dayView]_block_invoke
-[CalendarWidgetViewController _listView]
No Events
TodayWidget
v12@?0B8
Remind me about this
Creating Reminder...
v32@?0@"NSUUID"8@"NSString"16@"NSError"24
v24@?0@"NSUserActivity"8@"NSError"16
-[CalendarWidgetViewController _shouldShowAsListView]
-[CalendarWidgetViewController viewDidLoad]
-[CalendarWidgetViewController didReceiveMemoryWarning]
-[CalendarWidgetViewController viewWillLayoutSubviews]
-[CalendarWidgetViewController _adjustLayout]
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
-[CalendarWidgetViewController viewWillAppear:]
-[CalendarWidgetViewController viewWillDisappear:]
-[CalendarWidgetViewController _databaseDidChange]
-[CalendarWidgetViewController _selectedCalendarsDidChange]
-[CalendarWidgetViewController _significantTimeDidChange]
-[CalendarWidgetViewController _significantTimeChange:]_block_invoke
-[CalendarWidgetViewController _contentCategorySizeChanged:]_block_invoke
-[CalendarWidgetViewController _debugRefreshButtonPushed]_block_invoke
-[CalendarWidgetViewController _localeChanged]_block_invoke
-[CalendarWidgetViewController _shouldShowAsListViewChanged]_block_invoke
-[CalendarWidgetViewController _refreshTodayView]
-[CalendarWidgetViewController _eventFetchCompleted]
-[CalendarWidgetViewController _updateContent]
-[CalendarWidgetViewController _setShowingNoEventsMode:]
-[CalendarWidgetViewController _setTimeViewHourRangeToRender:]
-[CalendarWidgetViewController _relayoutDayViewOccurrences]
-[CalendarWidgetViewController _adjustFirstVisibleSecond]
-[CalendarWidgetViewController preferredViewSize]
-[CalendarWidgetViewController _displayedHoursRange]
-[CalendarWidgetViewController _startOfViewedTimeSpanWithOccurrences:]
-[CalendarWidgetViewController _endOfViewedTimeSpanWithOccurrences:]
q24@?0@"EKEvent"8@"EKEvent"16
v32@?0@8Q16^B24
-[CalendarWidgetViewController _fetchedVisibleTimedOccurences]_block_invoke
-[CalendarWidgetViewController _fetchedVisibleTimedOccurences]
%@-%d
-[CalendarWidgetViewController tableView:willSelectRowAtIndexPath:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
refreshCompletionHandler
T@?,C,N,V_refreshCompletionHandler
updateSnapshotSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_updateSnapshotSemaphore
com.apple.calendar.widget
CalendarWidget
com.apple.mobilecal.today.kEventFetchCompletedNotfification
com.apple.mobilecal.today.loading
com.apple.mobilecal.today.notifications
@"EKEventStore"8@?0
-[CalendarWidgetModel _selectedCalendars]
-[CalendarWidgetModel reloadEvents:]_block_invoke
-[CalendarWidgetModel _fetchUpcomingOccurrences:]
hasEverCompletedFetch
TB,N,V_hasEverCompletedFetch
eventStorePurger
T@"EKTimedEventStorePurger",&,N,V_eventStorePurger
loadedEventCollection
T@"CalendarOccurrencesCollection",R,N
active
TB,N,V_active
init
initWithNibName:bundle:
sharedPreferences
_setUpDarwinNotificationListeners
defaultCenter
_significantTimeChange:
addObserver:selector:name:object:
_shouldShowAsListViewChanged
_contentCategorySizeChanged:
_tapGestureReceived:
initWithTarget:action:
extensionContext
widgetActiveDisplayMode
_removeAllDarwinNotificationListeners
initWithCapacity:
_databaseDidChange
initWithNotificationName:callback:
addObject:
_occurrenceCacheDidChange
visibilityChangedNotificationName
_selectedCalendarsDidChange
_significantTimeDidChange
countByEnumeratingWithState:objects:count:
activate
deactivate
removeObserver:name:object:
dealloc
_currentDateComponents
view
bounds
interfaceOrientation
clearColor
initWithFrame:sizeClass:orientation:displayDate:backgroundColor:opaque:scrollbarShowsInside:
systemRedColor
setTintColor:
setAllowsOccurrenceSelection:
setDataSource:
setDelegate:
setAllowsScrolling:
setAnimatesTimeMarker:
setAllowPinchingHourHeights:
setUsesVibrantGridDrawing:
setEventsFillGrid:
setSizeTimeViewUsingOnlyHourText:
setAdditionalLeftPadding:
setOccurrenceBackgroundStyle:
_updateTimeMarkerState
addGestureRecognizer:
allDayView
setShowsLabel:
setBackgroundColor:
setHideOccurrenceBackground:
setForceSingleColumnLayout:
setShowsBorderLines:
setTopBorderLineHidden:
widgetEffectForVibrancyStyle:
setDividerLineVisualEffect:
setTimeViewVisualEffect:
setGridVisualEffect:
hour
_visibleSecondForHour:
setFirstVisibleSecond:
performWithoutAnimation:
initWithFrame:
setAutoresizingMask:
setOpaque:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setScrollEnabled:
setRowHeight:
frame
cellHeightForWidth:
setEstimatedRowHeight:
reuseIdentifier
registerClass:forCellReuseIdentifier:
bundleForClass:
localizedStringForKey:value:table:
widgetContentUnavailableViewWithTitle:
setTranslatesAutoresizingMaskIntoConstraints:
_noEventsViewTapped
URLWithString:
openURL:completionHandler:
shared
remindMeAboutThisInCalendarWidgetEnabled
buttonWithType:
setTitle:forState:
colorWithWhite:alpha:
setTitleColor:forState:
_remindMeAboutThisTapped
addTarget:action:forControlEvents:
addSubview:
setNeedsLayout
_currentUserActivityUUIDWithOptions:completionHandler:
removeFromSuperview
setEnabled:
reminderWithEventStore:
defaultCalendarForNewReminders
setCalendar:
updateWithAppLink:usedSelectedText:
saveReminder:commit:error:
_fetchUserActivityWithUUID:completionHandler:
_shouldShowAsListView
_listView
_dayView
showListView
setRefreshCompletionHandler:
_refreshTodayView
_updateBirthdayEvents
preferredContentSize
preferredViewSize
setPreferredContentSize:
animateWithDuration:animations:
_anyOccurrencesAvailable
_loadAndShowAppropriateContentView
_updateContent
viewWillLayoutSubviews
widgetMaximumSizeForDisplayMode:
_viewWidth
didReceiveMemoryWarning
_adjustLayout
sizeToFit
size
setOrigin:
superview
_preferredListViewHeight
setSize:
layoutSubviews
visibleCells
count
setWidgetLargestAvailableDisplayMode:
_now
components:fromDate:
setDisplayDate:
_desiredTotalTopPadding
hourHeightForSizeClass:orientation:
_displayedHoursRange
occurrenceViews
_requiredHeightForBirthdayEvents
setFrame:
_setTimeViewHourRangeToRender:
_adjustFirstVisibleSecond
_dayViewVisibleHeightRequired
_shouldShowBirthdayCountInsteadOfEventsInCompact
viewWillTransitionToSize:withTransitionCoordinator:
setOrientation:
animateAlongsideTransition:completion:
_eventFetchCompleted
_localeChanged
sharedModel
setActive:
_showRemindMeAboutThisViewIfNeeded
_setViewStatesForCachedEventCollection
hasEverCompletedFetch
setUpdateSnapshotSemaphore:
updateSnapshotSemaphore
numberWithBool:
_showingNoEventsView
_hideRemindMeAboutThisViewIfNeeded
resetOccurrenceViewColors
subviews
touches
firstObject
locationInView:
occurrenceViewAtPoint:
occurrence
_dayViewTappedEvent:
reloadEvents:
refreshCompletionHandler
_updateContentLayoutAndPreferredSize
_fetchedVisibleTimedOccurences
_birthdayEventCount
_shouldShowNoEventsView
_setShowingNoEventsMode:
_relayoutDayViewOccurrences
setShowOnlyAllDayArea:
reloadData
_updateBirthdayEventCount
_fetchedVisibleAllDayOccurences
calendar
type
setOccurrences:
setShowBirthdayCountInsteadOfEvents:
showBirthdayCountInsteadOfEvents
naturalHeight
_dayContentView
_stopHoldingDayContentViews
_showNoEventsView
_hideNoEventsView
_noEventsView
setHidden:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
arrayWithObjects:count:
addConstraints:
hoursToRender
setHoursToRender:
reloadDataSynchronously
setShowsTimeMarker:
setShowsTimeLine:
currentTimeRectInView:requireThumb:
visibleBounds
setShowsTimeLabel:
timeView
preferredFontForTextStyle:
_scaledValueForValue:
_eventsSortedByEarliestStartFirst:
startDate
_shouldUseStartTimeFromEvent:
year
month
minute
second
_pointsPerHour
heightOfHourTextForHour:orientation:
timeMarker
setTopYBoundaryForOccurrenceText:
dayStart
dateWithTimeIntervalSinceReferenceDate:
dateFromComponents:
timeIntervalSinceReferenceDate
firstVisibleSecond
_eventsSortedByFarthestEndLast:
lastObject
endDate
dayEnd
_preferredNoEventsViewHeight
isHidden
contentView
sizeThatFits:
_startOfViewedTimeSpanWithOccurrences:
_endOfViewedTimeSpanWithOccurrences:
_rangeLimitedToMidnight:
startDateIncludingTravel
timeIntervalSinceDate:
copy
setHour:
title
compare:
setMinute:
setSecond:
sortedArrayUsingComparator:
_fetchedVisibleOccurences
loadedEventCollection
occurrences
allDayOccurrences
timedOccurrences
array
_debugPrintOccurrencesVerbose
enumerateObjectsUsingBlock:
initWithOccurrences:timedOccurrences:allDayOccurrences:
externalURI
dequeueReusableCellWithIdentifier:forIndexPath:
setDrawsOwnRowSeparators:
setPrimaryVisualEffect:
setSecondaryVisualEffect:
objectAtIndex:
eventIdentifier
isProposedTimeEvent
stringWithFormat:
objectForKey:
currentCalendar
setTimeZone:
updateWithEvent:calendar:placedUnderDayWithStartDate:opaque:drawsDimmedForPast:
setObject:forKey:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
dayView:eventsForStartDate:endDate:
dayViewDidTapEmptySpace:
dayView:firstVisibleSecondChanged:
dayViewDidFinishScrollingToOccurrence:
dayView:didCreateOccurrenceViews:
dayView:didSelectEvent:
dayView:didScaleDayViewWithScale:
dayView:isPinchingDayViewWithScale:
dayView:didUpdateScrollPosition:
dayViewDidCompleteAsyncLoadAndLayout:
dayView:scrollViewWillBeginDragging:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:
tableView:didBeginMultipleSelectionInteractionAtIndexPath:
tableViewDidEndMultipleSelectionInteraction:
tableView:contextMenuConfigurationForRowAtIndexPath:point:
tableView:previewForHighlightingContextMenuWithConfiguration:
tableView:previewForDismissingContextMenuWithConfiguration:
tableView:willCommitMenuWithAnimator:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
widgetPerformUpdateWithCompletionHandler:
widgetActiveDisplayModeDidChange:withMaximumSize:
widgetMarginInsetsForProposedMarginInsets:
viewDidLoad
viewWillAppear:
viewWillDisappear:
traitCollectionDidChange:
_debugRefreshButtonPushed
tableView:wantsHeaderForSection:
.cxx_destruct
_contentView
__shouldShowAsListView
_lastSeenFrame
_cachedListViewCells
_noEventsViewConstraints
_tapGestureRecognizer
_remindMeAboutThisButton
_currentlyVisible
_currentDisplayMode
_darwinNotificationListeners
_refreshCompletionHandler
_updateSnapshotSemaphore
setEventStorePurger:
setTimeout:
calendarTimeZone
setCreationBlock:
_timeZoneChanged:
eventStorePurger
acquireCachedEventStoreOrCreate:
initWithEventStore:visibilityChangedCallback:
visibleCalendars
numberWithUnsignedInteger:
setPurgingAllowed:
_fetchUpcomingOccurrences:
_selectedCalendars
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
sortedArrayUsingFunction:context:
isAllDay
setHasEverCompletedFetch:
postNotificationName:object:
active
_eventLoadingQueue
_notificationQueue
_loadedEventCollection
_hasEverCompletedFetch
_active
_eventStorePurger
%s complete
%s _dayView created
%s _listView created
Failed to open URL %@
error getting current activity UUID: %@
got a nil user activity uuid
error fetching current activity from UUID: %@
got a nil user activity
Error saving new reminder: %@
%s value read from prefs: %d
%s generated a height for the Day View based on (hourHeight: %lu) * (number of hours: %lu) + (padding: %lu) = (%lu)
%s starting
Finished blocking main thread on first-launch fetch! Did time out: %@
%s finished
%s Darwin notification received
%@ Darwin notification  received
%s received
%s beginning
%s going to _relayoutDayViewOccurrences
%s going to call reloadData on _listView
%s setting mode to %@
%s: Time view hour range set to (%lu:00 -> %lu:00).
%s called
%s scrolled Day View top edge to hour %lu
%s returning %@
%s uncapped range: %@ representing time span (%lu:00 -> %lu:00)
%s returning capped range: %@ representing time span (%lu:00 -> %lu:00)
%s called with no occurrences, and there is no future event either. We should be showing the 'No Events' label.
%s anchorEvent started on date '%@', but today's date is '%@'.
%s has an earliest current event '%@' starting at '%@'. Returning a range location for the hour-mark preceeding.
%s has no current event, and no future events.
%s returning hour: %ld
%s eventWithLatestEndDate ends on date '%@', but today's date is '%@'.
%s eventWithLatestEndDate '%@' ends at '%@'.
%s was given no events. Returning next hour.
%s _fetchedVisibleTimedOccurences found: %@
%s _fetchedVisibleTimedOccurences asked for events to show today. We found %ld events. They range from %@ to %@.
%s _fetchedVisibleTimedOccurences asked for events to show today. We found %ld events.
%s _fetchedVisibleTimedOccurences asked for events to show today. But events have not finished fetching.
%s will not activate, since it attempted to read an EKEvent from a nil backing NSArray
%s found [%@] selected calendars
%s fetched [%@] timed occurrences for today
%s fetched [%@] all-day occurrences for today
[%@] received notification: [%@]
Changed the cached event store's time zone to [%@]
CalendarWidgetViewController
EKDayViewDataSource
NSObject
EKDayViewDelegate
UITableViewDelegate
UIScrollViewDelegate
UITableViewDataSource
NCWidgetProviding
CalendarWidgetModel
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24@32
@"CalendarOccurrencesCollection"40@0:8@"EKDayView"16@"EKCalendarDate"24@"EKCalendarDate"32
v24@0:8@16
v32@0:8@16Q24
v32@0:8@16@24
v32@0:8@16d24
v40@0:8@16{CGPoint=dd}24
v24@0:8@"EKDayView"16
v32@0:8@"EKDayView"16Q24
v32@0:8@"EKDayView"16@"NSArray"24
v32@0:8@"EKDayView"16@"EKEvent"24
v32@0:8@"EKDayView"16d24
v40@0:8@"EKDayView"16{CGPoint=dd}24
v32@0:8@"EKDayView"16@"UIScrollView"24
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@16B24
@24@0:8@16
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v40@0:8@16@24@32
v40@0:8@16@24q32
d32@0:8@16@24
d32@0:8@16q24
@32@0:8@16q24
q32@0:8@16@24
B32@0:8@16@24
@32@0:8@16@24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
B40@0:8@16@24@32
@48@0:8@16@24{CGPoint=dd}32
v40@0:8@"UITableView"16@"UITableViewCell"24@"NSIndexPath"32
v40@0:8@"UITableView"16@"UIView"24q32
d32@0:8@"UITableView"16@"NSIndexPath"24
d32@0:8@"UITableView"16q24
@"UIView"32@0:8@"UITableView"16q24
q32@0:8@"UITableView"16@"NSIndexPath"24
v32@0:8@"UITableView"16@"NSIndexPath"24
B32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSString"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSArray"32@0:8@"UITableView"16@"NSIndexPath"24
@"UISwipeActionsConfiguration"32@0:8@"UITableView"16@"NSIndexPath"24
@"NSIndexPath"40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
B48@0:8@"UITableView"16:24@"NSIndexPath"32@40
v48@0:8@"UITableView"16:24@"NSIndexPath"32@40
B32@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24
v40@0:8@"UITableView"16@"UITableViewFocusUpdateContext"24@"UIFocusAnimationCoordinator"32
@"NSIndexPath"24@0:8@"UITableView"16
B40@0:8@"UITableView"16@"NSIndexPath"24@"<UISpringLoadedInteractionContext>"32
v24@0:8@"UITableView"16
@"UIContextMenuConfiguration"48@0:8@"UITableView"16@"NSIndexPath"24{CGPoint=dd}32
@"UITargetedPreview"32@0:8@"UITableView"16@"UIContextMenuConfiguration"24
v32@0:8@"UITableView"16@"<UIContextMenuInteractionCommitAnimating>"24
q32@0:8@16q24
q24@0:8@16
q40@0:8@16@24q32
v40@0:8@16q24@32
q32@0:8@"UITableView"16q24
@"UITableViewCell"32@0:8@"UITableView"16@"NSIndexPath"24
q24@0:8@"UITableView"16
@"NSString"32@0:8@"UITableView"16q24
@"NSArray"24@0:8@"UITableView"16
q40@0:8@"UITableView"16@"NSString"24q32
v40@0:8@"UITableView"16q24@"NSIndexPath"32
v40@0:8@"UITableView"16@"NSIndexPath"24@"NSIndexPath"32
v24@0:8@?16
v40@0:8q16{CGSize=dd}24
{UIEdgeInsets=dddd}48@0:8{UIEdgeInsets=dddd}16
v24@0:8@?<v@?Q>16
v16@0:8
v40@0:8{CGSize=dd}16@32
v20@0:8B16
q16@0:8
d16@0:8
v32@0:8{_NSRange=QQ}16
Q24@0:8Q16
{CGSize=dd}16@0:8
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
B32@0:8@16q24
@?16@0:8
@"UIView"
@"EKDayView"
@"UITableView"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"NSMutableDictionary"
@"NSArray"
@"UITapGestureRecognizer"
@"UIButton"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
@"CalendarOccurrencesCollection"
@"EKTimedEventStorePurger"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CoreRoutine.LocationOfInterest</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.calendar.allow-suggestions</key>
<true/>
<key>com.apple.private.coreservices.cangetcurrentactivityinfo</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.routined.registration</string>
</array>
</dict>
</plist>
