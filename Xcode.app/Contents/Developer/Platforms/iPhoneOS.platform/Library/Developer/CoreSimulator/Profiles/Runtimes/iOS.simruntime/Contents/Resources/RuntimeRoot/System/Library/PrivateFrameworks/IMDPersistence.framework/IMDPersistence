@(#)PROGRAM:IMDPersistence  PROJECT:IMDPersistence-
333333
IMDPersistence
SpotlightReindexer
IMDPersistenceHelloWorldClass
IMDPersistenceHelloWorld
com.apple.imdpersistence.IMDPersistenceAgent
AttachmentsSizeCheck
IMDSuggestions
Exception caught trying to create the SGSuggestionsService: %@
Exception caught trying to get suggestions for message: %@
BEGIN EXCLUSIVE;
Database
COMMIT;
REVERT;
UPDATE _SqliteDatabaseProperties SET value = %ld WHERE key = '_ClientVersion';
PRAGMA dest.table_info(%@);
name
, %@
INSERT INTO dest.%@ SELECT %@ FROM main.%@
PRAGMA foreign_keys = OFF;
ATTACH '%@' AS 'dest';
v20@?0B8@"NSError"12
DETACH DATABASE 'dest';
Open database
PRAGMA page_size = 4096;
PRAGMA auto_vacuum = 2;
PRAGMA journal_mode = wal;
SELECT value FROM _SqliteDatabaseProperties WHERE key = '_ClientVersion';
SELECT count(*) FROM %@;
SELECT value FROM kvtable WHERE key = ?
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}24
Contacts
IMDContactCache - asked to remove cached contact for nil key %@
IMDContactCache
Removing cached contact for key %@
IMDContactCache - not caching fetchResults as aliases: %@, fetchResults: %@
Caching contacts for Spotlight Contacts cache
DONE Caching contacts for Spotlight
IMDContactCache - asked to udpate cache with %@
Udpating cache with %lu aliases
v32@?0@"NSString"8@"CNContact"16^B24
IMDContactCache - asked to cache contact for nil key %@
Not caching nil contact:%@ for key:%@
IMDContactCache - Cannot get cached contact for nil key
IMDCoreSpotlight: Contacts store reported a change, updating our contacts cache
IMDCoreSpotlight: Could not fetch Change History from CNContactStore error:%@
%s Couldn't read data from file %@ ; error %@
+[IMDContactCache contactsForVCardAtPath:]
%s Failed to generate vcard summary from file %@ ; error %@
maps.apple.com
maps.google.com
%s urls %@
+[IMDContactCache vCardMapURLForContact:]
%s url host %@
%s got mapURL %@ value %@
IMDContactChangeHandler: Handling a Drop everything change history event
IMDContactChangeHandler: Handling a Add Contact change history event
IMDContactChangeHandler: Updating contact cache for handle IDs: %@
IMDContactChangeHandler: Handling a Update Contact change history event
IMDContactChangeHandler: Removing entries from contact cache for handle IDs: %@
IMDContactChangeHandler: Updating contact cache with the new CNContact for handle IDs: %@
IMDContactChangeHandler: Handling a Delete Contact change history event
INSERT INTO message_processing_task (guid, task_flags) VALUES (?, ?);
SELECT * FROM message_processing_task ORDER BY ROWID ASC LIMIT ?;
array_result
guid
task_flags
B24@?0Q8@"NSObject<OS_xpc_object>"16
v16@?0@"NSObject<OS_xpc_object>"8
UPDATE message_processing_task SET task_flags = ? WHERE guid = ?;
Delete from message_processing_task WHERE task_flags = 0;
ROWID
text
replace
service_center
handle_id
subject
country
attributedBody
version
type
service
account
account_guid
error
date
date_read
date_delivered
is_delivered
is_finished
is_emote
is_from_me
is_empty
is_delayed
is_auto_reply
is_prepared
is_read
is_system_message
is_sent
has_dd_results
is_service_message
is_forward
was_downgraded
is_archive
cache_has_attachments
cache_roomnames
was_data_detected
was_deduplicated
is_audio_message
is_played
date_played
item_type
other_handle
group_title
group_action_type
share_status
share_direction
is_expirable
expire_state
message_action_type
message_source
associated_message_guid
associated_message_type
balloon_bundle_id
payload_data
expressive_send_style_id
associated_message_range_location
associated_message_range_length
time_expressive_send_played
message_summary_info
ck_sync_state
ck_record_id
ck_record_change_tag
destination_caller_id
is_corrupt
reply_to_guid
sort_id
is_spam
has_unseen_mention
thread_originator_guid
thread_originator_part
syndication_ranges
synced_syndication_ranges
was_delivered_quietly
did_notify_recipient
date_retracted
date_edited
was_detonated
part_count
is_stewie
is_kt_verified
%K > %lld
statement == nil || statement->query == nil || statement->sql_statement == nil
void IMDSqlStatementBindTextFromCFString(IMDSqlStatement *, CFStringRef)
string
strings
void IMDSqlStatementBindTextFromArrayOfCFStrings(IMDSqlStatement *, CFArrayRef)
void IMDSqlStatementBindInt64(IMDSqlStatement *, int64_t)
statement == nil || statement->sql_statement == nil
void IMDSqlStatementBindInt(IMDSqlStatement *, int32_t)
void IMDSqlStatementBindDouble(IMDSqlStatement *, double)
void IMDSqlStatementBindBlob(IMDSqlStatement *, CFDataRef)
column.statement
int IMDIntFromSqlColumn(IMDSqlColumn)
statement
double IMDDoubleFromSqlColumn(IMDSqlColumn)
int64_t IMDInt64FromSqlColumn(IMDSqlColumn)
CFStringRef IMDStringFromSqlColumn(IMDSqlColumn)
CFDataRef IMDBlobFromSqlColumn(IMDSqlColumn)
block
void IMDSqlStatementIterateRow(IMDSqlStatement *, IMDSqlOperationColumnIterator)
sql_statement
IMDSqlColumn IMDSqlStatementColumnByIndex(IMDSqlStatement *, int)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlStatement.m
IMDSqlStatementColumnByIndex
Unexpected false '%@' in %s at %s:%d. %@
index >= 0 && index < count
ASSERTION FAILED: %@
IMDSqlColumn IMDSqlStatementColumnByName(IMDSqlStatement *, const char *)
dictionary
void IMDSqlColumnSetColumnValueInXPCDictionary(xpc_object_t, IMDSqlColumn)
xpc_object_t IMDSqlStatementGetXPCRow(IMDSqlStatement *)
CFDictionaryRef IMDSqlStatementGetRow(IMDSqlStatement *)
uint32_t IMDSqlStatementColumnCount(IMDSqlStatement *)
statement->sql_statement
public.jpeg
__kmessageItemTypeKey
__kmessageRowIDKey
__kmessageGUIDKey
__kmessageDateKey
__kmessageDateReadKey
__kmessageDateDeliveredKey
__kmessageTextKey
__kmessageAttributedBodyKey
__kmessageFlagsKey
__kmessageServiceKey
__kmessageSubjectKey
__kmessageErrorKey
__kmessageMadridTypeKey
__kmessageHasAttachmentsKey
__kmessageAttachmentsKey
__kmessageAssociatedMessageGUIDKey
__kmessageAssociatedMessageTypeKey
__kmessageAssociatedMessageRangeKey
__kmessageBalloonBundleIDKey
__kmessagePayloadDataKey
__kmessageExpressiveSendStyleIDKey
__kmessageSummaryInfoDataKey
__kmessageHandleKey
__kmessageCNContactForSenderKey
__kmessageDestinationCallerIDKey
__kmessageAccountKey
__kmessageThreadOriginatorGUIDKey
__kmessageThreadOriginatorKey
__kmessageDateEditedKey
__kchatStyleKey
__kchatPropertiesDataKey
__kchatChatIdentifierKey
__kchatChatGUIDKey
__kchatGroupNameKey
__kchatGroupPhotoGuidKey
__kchatParticipantsKey
__kchatLastAddressedHandleStringKey
__kchatGroupIDKey
__kchatOriginalGroupIDKey
__kchatIsFilteredKey
__kchatHasDNDSetKey
__kchatWasDetectedAsSMSSpamKey
__kchatSMSCategoryKey
__kchatSMSSubCategoryKey
__kchatWasDetectedAsiMessageSpamKey
__kchatWasReportedAsiMessageSpamKey
__kchatHandlesForChatKey
__kchatLastMessageTimestamp
com.apple.MobileSMS
com.apple.messages.notifications
com.apple.MobileSMS.CKDNDList
com.apple.carrier
MigratedPreferencesDomain
LastIMDNotificationPostedDate
LastFailedMessageIMDNotificationPostedDate
LastBulletinboardPostedMessageRowID
LastBulletinboardPostedDate
wasAutoDetectedForSpam
wasDetectedAsiMessageSpam
wasDetectedAsSMSSpam
SMSCategory
SMSSubCategory
CKDNDListKey
kSpokenMessageWhitelistLevel
kSpokenMessageWhitelistLevelVersion
IncomingMessageAlertFiltrationKnownSenders
IncomingMessageAlertFiltrationUnknownSenders
IncomingMessageAlertFiltrationTransactions
IncomingMessageAlertFiltrationPromotions
ShowMessagesConversationListFilteringPrompt
MessageFilteringSettingsConfirmed
IncomingMessageAlertFiltration
IncomingMessageAlertSpamFiltration
RaiseToListenEnabled
AddressMeInGroupchat
messageIsAddressedToMe
messageMentionsMe
com.apple.MobileSMS.IncomingMessageAlertCount.changed
MessageExtension
MessageExtension-Madrid
MessageExtension-MadridGroup
MessageExtension-MadridBusiness
MessageExtension-SMS
MessageExtension-NoRelay
MessageExtension-AudioRaise
MADRID_MESSAGE_FORMAT
SINGLE_SUMMARY_FORMAT
GROUP_SUMMARY_FORMAT
MADRID_BUSINESS_MESSAGE_FORMAT
TEXT_MESSAGE_FORMAT
We have not migrated the SMSBBPlugin preferences to the new UserNotifications domain...doing so now with last posted date %@
The SMSBBPlugin last posted date was null, so migrating the rowid
lastAlertedMessage is null for the old rowid: %@ -- this device hasn't posted any message notifications
The last posted rowid is %@ and the date for that message is %@
We are setting the date to be %@
Setup first load lastAlertedMessageDate %@ lastAlertedFailedMessageDate %@
setting last alerted message date to %@
setting last processing message date to %@
q24@?0@"IMDMessageRecord"8@"IMDMessageRecord"16
Skipping posting guid as we already posted messages newer: %@
   FromChat: { chatChatGUIDKey: %@
      chatGroupIDKey: %@
      chatGroupNameKey: %@ }
B24@?0@"IMDMessageRecord"8@"NSDictionary"16
Found last processing date [%lld] later then last alerted date: [%lld]
iterating new messages for newMessageDate: [%lld]-[%@], last alerted date: [%lld]-[%@]
Generated notification request for identifier %@ with category identifier %@
IMDNotificationsController
Finished posting notification: %@
v16@?0@"NSError"8
v12@?0B8
Generated notification request for failed delivery identifier %@
Finished adding notification request %@ for failed delivery with error %@
Advancing last failed message date to %@ but not posting the notification
v32@?0@"IMDMessageRecord"8Q16^B24
Post notifications after coalescing, background threading
newMessages
lastFailedDate
new messages number: [%lu] lastAlertedDate: [%lld]-[%@] lastFailedMessageAlertDate: [%lld]-[%@] lastFailedMessageDate: [%lld]-[%@]
v16@?0@"UNNotificationSettings"8
Post notifications called from client with context %@
Withdrew message notifications for message guids %@
Retract and re-post iMessage notifications sent before first unlock
We need to post these urgent message requests %@ with context %@
Updating posted notifications for messages %@
Generated an updated notification request for notification: %@
Finished updating edited message content for notification request: %@
Could not generate an updated notification request for edited message, message may have been retracted. Retracting outstanding notifications for messageGUID: %@
Retracting notifications for messageGUIDs: %@
MADRID_MESSAGE
IMSharedUtilities
CKBBContextKeyMessageGUID
CKBBContextKeyIsFirstUnlock
adding notification request under first unlock %@ with content %@
we added the notification request under first unlock %@ with error %@
IMDNotificationsController - %s asked to post notification with nil messageGUID
-[IMDNotificationsController postFirstUnlockMessage:forIdentifier:]
Not posting SharePlay notification because chatGUID (%@), faceTimeConversationUUID (%@), or handleIdentifier (%@) were missing.
Posting SharePlay notification for chat GUID %@ and handle identifier %@ with app name %@
No chat record for guid: %@
No handle record for identifier: %@
%@-%@
SharePlay Together
Not posting SharePlay notification because shouldPost was evaluated to NO
Failed to generate SharePlay notification request for chat GUID %@ and handle identifier %@
We have never set the raise to listen default, marking it as enabled
We got an audio message and raise to listen is enabled setting audio notification category
This was not an audio message
Setting the date %@ category identifier %@ thread identifier %@
Message sent with Invisible Ink
We don't have a message body for message guid %@
Unable to create formatted display string for other recipient handle from messageGUID %@
PARTICIPANT_ADDRESS_TO_YOU_ITEM
PARTICIPANT_ADDRESS_FINAL_ITEM
PARTICIPANT_ADDRESS_NON_FINAL_ITEM
GROUP_MENTION_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TO_YOU_TITLE
MESSAGE_SEND_RECEIVED_AS_JUNK_DEFAULT
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_DEFAULT
MESSAGE_SEND_TO_%@_RECEIVED_AS_JUNK
CKBBContextKeySenderName
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_EMAIL_ADDRESS_%@
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_PHONE_NUMBER_%@
Sender (self) ID "%@" type not identified as email or phone number. Displaying default summary for received-as-junk notification
Sender (self) ID not found (senderID is NULL). Displaying default summary for received-as-junk notification
CKBBContextKeyIsFailedMessage
MESSAGE_SEND_FAILED
MESSAGE_SEND_TO_UNKNOWN_FAILED
MESSAGE_SEND_TO_PERSON_FAILED_FORMAT
Unable to create formatted display string for handle from messageGUID %@
MENTION_RECEIVED_TITLE
REPLY_RECEIVED_TITLE
ignoreMute is YES. Contact is Emergency Broadcast enabled. Expecting notification to bypass system mute and/or system DND.
messageCNContactForSenderKey not found in messageDictionary.
Coordinated Alerts -- this is not the most active device, suppressing the screen from lighting up and not playing sound for message %@
Populating sound and display isMostActive %@ sound %@ ignoreDND %@ suppress screen light up %@
CKBBUserInfoKeyChatIdentifier
CKBBContextKeyChatGUIDs
CKBBContextKeyChatGroupID
CKBBContextKeySenderPersonCentricID
CKBBContextKeyIsAcknowledgment
CKBBContextKeyIsSticker
CKBBContextKeyIsBalloonPluginBulletin
CKBBContextKeyBalloonBundleID
CKBBContextKeyEffectIdentifier
CKBBContextKeyIsAttachmentWithEffectBulletin
CKBBContentKeyAttachmentSummary
CKBBContentKeyAttachmentCount
CKBBContentKeyCountByAttachmentType
Set userInfo for dictionaries %@
Set userInfo for message content dictionaries %@
public.vlocation
Failed to deserialize contact for message %@, error %@
IMDNotificationsController_CommSafety
CommSafety Sensitive value on the record: %@
generated previewfile url %@ for transfer %@ as unnotificationattachment %@ with error %@
We didn't generate a previewFileURL for transfer %@ to generate a notification preview
Filename was null (%@) or transfer state was not finished (%@) for file transfer %@ -- did not generate attachment preview
B56@?0@"NSString"8^@16^@24^B32^B40^@48
IncomingMessageAlertCount
Setting repeat alert count to %d
Chat has DND key set %@, not marking as spoken message allowlisted
Contact %@ isSpokenMessageAllowlisted: %d
Coordinated Alerts -- this is not the most active device, suppressing spoken messages
CoordinatedAlertQueue
v28@?0@"NSError"8B16@"NSDictionary"20
timeout waiting for completionHandler from SFCoordinatedAlertRequest
UTI might be animated (%@) but it was sent by an unknown sender, so skipping preview.
Error when copy preview image: [%@]
SpokenMessageAllowlistLevel: %lu
Last message timestamp: %f
Last message date: %@
Missing last read date for chatID %@
Message: %@ is spoken message allowlisted: %d
We don't have a contact to use. Fetching one
Stripped address: %@, contactToUse: %@
Contact to use valid. AddressBookName : %@
Address: %@, displayName = %@. Contact = %@
We don't have an address book name, so going to try and suggest a name
Defaulting to the handle for the display name
Handle display name is equal to lowercase uncanonicalized address, falling back to preserve case
Display name = %@
@"NSString"16@?0@"NSString"8
v16@?0@"NSString"8
IMBusinessNameManager
Business name lookup timed out
BUSINESS_NOTIFICATION_TITLE
IMNotificationsController
 deviceIsiPad %@ allowPromptToConfirmSetting %@ carrier setting %@
We have never set the filtering default, check if we should be doing it by default %@
isSMS %@ unknownFilterinOn %@ smsSpamFilteringOn %@ chatIsFiltered %@ isSpam %@ isContact %@
We are not posting the notification because chat has DND set (%@)                                                 or it's from a filtered unknown sender (%@)                                                 or the chat category is muted (%@)
v40@?0@"NSString"8{_NSRange=QQ}16^B32
not overriding chat silencing because override message mentions me is (%@) isSMS (%@) isBusinessChat (%@).
Request %@ is already delivered {deliveredRequest: %@ currentRequest: %@}
Reposting notification %@ that has already been delivered
Not reposting notification %@ that has already been delivered
We will post the notification request %@
We will NOT post the notification request %@
We don't post notifications during system migration
Will re-post notification request %@ because the notification has been escalated to notifyAnyway
Will re-post notification request %@ because the message content has been edited
Will re-post notification request %@ because attachment are different
Disallowing notifications during ScreenTime Downtime
Disallowing notifications during ScreenTime Comm Limits
fetch screenTimeNotificationOption for handleIDs: [%@]
STConversation
ScreenTimeCore
STConversationContext
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDNotificationsController.m
-[IMDNotificationsController screenTimeNotificationOptionsForChatDictionary:]_block_invoke
Unexpected nil '%@' in %s at %s:%d. %@
IMSTConversationClass
IMSTConversationContextClass
get screenTimeNotificationOption: [%tu]
Not synthesizing notification content from intent, message is a business chat message
INInteraction updated, re-posting notifications
Not synthesizing notification content from intent, intent was not generated for message
This notification %@ hasn't been associated with a chat yet
Not notifying for %@ because it is a silent business chat message
Not generating notification request for %@ because all message parts have been retracted
Not generating notification request for %@ because it's already highlighted in an ongoing FaceTime call
Device under first unlock, skip checking screentime
Not notifying for %@ because it is not allowed by Screen Time
shouldIgnoreDowntime for %@ : %@ 
suppressed notification generation for silenced message %@.
This notification %@ mark as sending from unknown senders
Delegating retracted check to IMExtensionNotificationManager for BalloonBundleID %@ messageGUID %@
Determined that all message parts have been retracted for messageGUID %@
LPLinkMetadataPresentationTransformer
LinkPresentation
We don't notify for delivery non-failures or failures of non-messages for messageDictionary %@
We didn't get any chat records for message record %@
We got 0 handles back for chatRecord with guid %@
DND is %@ for chat %@ based on style %lld chatIdentifier %@ groupID %@
DND is %@ for chat %@ based on group participant hash %@ handles %@ lastAddressedHandleString %@
DND is %@ for chat %@ based on originalGroupID %@
CNContact for sender %@
@"NSString"16@?0@"IMDHandleRecord"8
Re-Alert setting has changd
value
INSERT OR REPLACE INTO kvtable (key, value) VALUES (?, ?)
DELETE FROM kvtable WHERE key = ?
operation
BOOL _IMDSqlOperationRunQuery(IMDSqlOperation *, CFStringRef, IMDBlock, IMDBlock, IMFileLocation_t *)
query
operationBlock
BOOL IMDRunSqlOperation(IMDSqlOperationBlock)
BOOL _IMDSqlOperationRunQueryWithString(CFStringRef, NSError **, IMDSqlOperationBlock, IMFileLocation_t *)
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND m.ROWID >= ( SELECT * FROM (SELECT mm.rowid FROM message mm WHERE mm.GUID = ? UNION SELECT 0 ) ORDER BY ROWID DESC LIMIT 1   ) 
 AND m.item_type == 0 AND m.associated_message_type == 0 
ORDER BY cm.chat_id, cm.message_id DESC 
LIMIT ?
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?)
 AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.chat_id, cm.message_date DESC, cm.message_id DESC 
q24@?0@8@16
v24@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16
SELECT FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY cm.chat_id
message
__kIMDCNPersonNotFound
aliasMap
historyToken
dictionary_result
IMDCNRecordIDForAliases ASYNC returning updated map count %lu. Old map count %lu
IMDCNRecordIDForAliases returning map count %lu for aliases count %lu
IMDCNAliasResolver
IMDAreAllAliasesUnknown result is %d
bool_result
predicate
sortDescriptors
limit
ascending
olderThan
identifier
pinningIdentifier
serviceName
displayName
groupID
style
groupIDs
v32@?0@"NSString"8@"IMSandboxedFileURL"16^B24
v16@?0@"NSDictionary"8
chatRowID
v16@?0@"IMDMessageRecord"8
chatGUID
messageGUID
excludeRecoverableMessages
attachmentGUID
shouldHideFromSyndication
messageGUIDs
deleteDate
chatGUIDs
recoverableMessagesMetadataDictionary
days
deletedChatGUIDs
resultLimit
recoverableMessagesMetadataPendingCloudKitSave
recoverableMessagesMetadataPendingCloudKitDelete
recoverableSyncState
messageRowID
partIndex
messagePartBody
faceTimeConversationUUID
handleIdentifier
localizedApplicationName
transferGUIDs
result
v16@?0q8
Migration
!success && op.error == nil
BOOL _IMDDatabasePerformOneMigration(IMDDatabaseVersioner *, CSDBSqliteDatabase *, CSDBSqliteConnection *, int, int *, NSError **)
can't have migration %d to %d fail without error!! (Begin Transaction)
can't have migration %d to %d fail without error!! (Drop Triggers)
can't have migration %d to %d fail without error!! (Drop unknown indexes)
can't have migration  %d to %d fail without error!! (Actual migration))
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDDatabaseMigration.m
BOOL IMDCreateTriggersAndIndexes(IMDSqlOperation *, BOOL)
IMDCreateTriggersAndIndexes
success || operation->error != nil
can't have migration fail without error!!
/Library/Caches/com.apple.xbs/Binaries/MessagesCore_Sim/install/Symbols/BuiltProducts/IMDPersistence.framework/PrivateHeaders/IMDUtils.h
BOOL IMDSetOutError(NSError **, NSError *)
IMDSetOutError
Unexpected not nil '%@' in %s at %s:%d. %@
*outError
outError is already pointing at an error, this could be a leak
v16@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE display_name IS NOT NULL AND display_name != "" ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat INDEXED BY chat_idx_is_archived WHERE IS_ARCHIVED = 0 ORDER BY chat.ROWID ASC;
IMDChatQueries
Copying recent chats
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid WHERE    chat.is_archived = 0 AND chat.is_filtered = ? GROUP BY    chat.rowid ORDER BY    MAX(chat_message_join.message_date) DESC LIMIT    ?;
Found %llu recent chats for filter mode %lld
Found %lld recent subclassified chats for filter mode %lld having action: %lld and subaction: %lld
Found %llu recent chats (knownSenderLimit: %lld, otherFilterLimit: %lld)
Trying to update chats wuth lastAddressedSIMID %@ to new simID %@ and new handle %@
Old lastAddressedSIMID passed is nil, returning.
Both new lastAddressedSIMID and lastAddressedSIMID are nil, not updating chats with simID %@ and returning.
UPDATE chat                 SET last_addressed_handle = ?, last_addressed_sim_id = ?                 WHERE service_name = ? AND last_addressed_sim_id = ?;
Error executing IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs %@ 
Last addressed handles/simIDs got modified to %@ and %@. Posting notification to reload chat registry.
com.apple.imdpersistenceagent.notification.lastaddressedidsmodified
Trying to find last address labelID/date from chatIds %@ and labelIDs %@
select max(cm.message_date),last_addressed_sim_id from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_sim_id in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedLabelID: running with query %@
last_addressed_sim_id
max(cm.message_date)
GetMessageDateAndLastAddressedLabelID: found results from db %@
labelID
SELECT guid,display_Name,chat_id from chat c INNER JOIN chat_handle_join ch ON c.ROWID = ch.chat_id INNER JOIN handle h on h.ROWID = ch.handle_id WHERE c.state = 3 AND h.id = ?
v16@?0^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}8
chat_id
SELECT handle_id FROM chat_handle_join WHERE chat_id = ?
display_name
Handle records from kIMDChatTableSelectHandleIDFromChatID query is empty.
Trying to find last address handles/date from chatIds %@ and handles %@
select max(cm.message_date),last_addressed_handle from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_handle in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedHandle: running with query %@
last_addressed_handle
GetMessageDateAndLastAddressedHandle: found results from db %@
handle
select chat_id, max(message_date) from chat_message_join group by chat_id order by message_date desc;
max(message_date)
Unable to find most recent ChatRow IDs from chat_message_join error: %@
Received empty batch in IMDChatRecordCopyAllActiveChatsProgressivelyWithLimitAndBlock
Copying active chats progressively: total number copied was %ld
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE guid = ? ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE ROWID = (SELECT chat_id from chat_message_join WHERE message_id = ?)
Did not get results for chat guid %@
No handle provided to IMDChatRecordCopyChatsWithHandleOnService
No service provided to IMDChatRecordCopyChatsWithHandleOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    chat_identifier = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No identifier provided to IMDChatRecordCopyChatsWithIdentifierOnService
No service provided to IMDChatRecordCopyChatsWithIdentifierOnService
No roomname provided to IMDChatRecordCopyChatsWithRoomnameOnService
No service provided to IMDChatRecordCopyChatsWithRoomnameOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    room_name = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No group ID provided to IMDChatRecordCopyChatsWithGroupID
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    group_id = ? ORDER BY chat.ROWID ASC;
No roomname provided to IMDChatRecordCopyNewestChatForGroupIDOnService
No service provided to IMDChatRecordCopyNewestChatForGroupIDOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    original_group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
guid == NULL || guid.length == 0
void IMDChatRecordDeleteChatForGUID_Fast(NSString *)
DELETE FROM chat WHERE guid = ?;
Query for GUID yields %d results, deleting all
GroupPhotoImage
   => file doesn't exist at path: %@
  => failed to remove item at path: %@ 
  => Successfully deleted item at path: %@ 
Unable to associate message with chat, the chat is NULL (chat guid: %@)
Unable to associate message with chat, the message is NULL (message guid: %@)
Unable to disassociate message from chat, the chat is NULL.
Unable to disassociate message from chat, the message is NULL.
Unable to update filter flag, the chat record is NULL.
Deleting all empty chats.
DELETE FROM chat WHERE ((SELECT COUNT(*) FROM chat_message_join WHERE chat_id = chat.ROWID) == 0 AND (SELECT COUNT(*) FROM chat_recoverable_message_join WHERE chat_id = chat.ROWID) == 0);
Error occured while deleting empty chats %@
Finished deleting all empty chats.
Request to insert guid %@ recordID %@ timeStamp %lld
INSERT INTO sync_deleted_chats (guid, recordID, timestamp) VALUES (?, ?, ?);
Returned from IMDP after inserting in synd deleted table guid %@ recordID %@ timeStamp %lld
Request to load deleted chat recordIDs with limit %lld
select guid, recordID, timestamp from sync_deleted_chats where LENGTH(recordID) > 0;
recordID
timeStamp
Returned from DB call after loading messages to delete messages count %lu
Request to clear pending deletes from chat table
delete from sync_deleted_chats;
IMDMessageQueries
IMDChatClearPendingDeleteChatsTable cleared pending delete chat table
Returned from DB call after marking clearing all pending delete chats
Request to reset messages with error %lld to error %lld on chatGUIDS %@
deleting attachment failed at path: %@: %@
Removed attachment at path: %@
No attachment to remove at path: %@
Resetting downloadState for attachment guid: %@
Attachment already marked as needing download for guid: %@
Purging attachment files for chat guid: %@
Found %ld messages for chat
Found %ld attachments for message: %@
Failed to load attachments for message: %@
Failed to load message at index: %ld
Updated %lld attachments on %ld messages
No messages load for chat: %@
Chat record not loaded for chat: %@
Reindexing %ld messages
chat
state
account_id
properties
chat_identifier
service_name
room_name
account_login
is_archived
group_id
is_filtered
successful_query
engram_id
server_change_token
original_group_id
last_read_message_timestamp
cloudkit_record_id
is_blackholed
syndication_date
syndication_type
is_recovered
uncanonicalized_id
person_centric_id
SELECT DISTINCT  c.guid FROM   chat c INNER JOIN chat_message_join cm ON   c.ROWID = cm.chat_id INNER JOIN message m ON   m.ROWID = cm.message_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.style = 45 
rowIDCount
CFStringRef kIMDChatRemapMessagesWithErrorCodeToErrorCode(int)
theQuery
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?
)) AND error=?
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?)) AND error=?
op == nil || op->connection == nil || op->database == nil
void IMDSqlOperationWasInitialized(IMDSqlOperation *)
chat_message_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id)
chat_handle_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id)
message_attachment_join
message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id)
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, person_centric_id TEXT, UNIQUE (id, service) 
deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL
message_processing_task
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, task_flags INTEGER NOT NULL 
sync_deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT 
sync_deleted_chats
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT,timestamp INTEGER
sync_deleted_attachments
kvtable
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, key TEXT UNIQUE NOT NULL, value BLOB NOT NULL
chat_recoverable_message_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, delete_date INTEGER, ck_sync_state INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id), CHECK (delete_date != 0)
unsynced_removed_recoverable_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, chat_guid TEXT NOT NULL, message_guid TEXT NOT NULL, part_index INTEGER
recoverable_message_part
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, part_index INTEGER, delete_date INTEGER, part_text BLOB NOT NULL, ck_sync_state INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id, part_index), CHECK (delete_date != 0)
CREATE TABLE IF NOT EXISTS %@ (%@);
select name from sqlite_master where type = 'table'
v40@?0{IMDSqlColumn=^{IMDSqlStatement}*ii}8^B32
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDTables.m
int64_t IMDRowCountForTable(NSString *, NSError **)
IMDRowCountForTable
tableName
select count(*) from %@
void IMDCreateLegacyTables(IMDSqlOperation *)
IMDCreateLegacyTables
BOOL IMDCreateTablesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTablesWithOperation
BOOL IMDDropTableWithOperation(IMDSqlOperation *, NSString *, BOOL)
IMDDropTableWithOperation
DROP TABLE IF EXISTS %@;
sqlite_stat1
IF NOT EXISTS
SELECT name, sql FROM sqlite_master WHERE type = 'table';
Expected: %@
  Actual: %@
BOOL IMDConfirmTablesCreatedAsExpected(NSError **)
IMDTables.m
index check failed
attachment
created_date
start_date
filename
mime_type
transfer_state
is_outgoing
user_info
transfer_name
total_bytes
is_sticker
sticker_user_info
attribution_info
hide_attachment
ck_server_change_token_blob
original_guid
is_commsafety_sensitive
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat  c WHERE ( c.ROWID IN ( 
SELECT chat_id FROM chat_handle_join WHERE handle_id IN (SELECT ROWID FROM handle WHERE id = ?)
 INTERSECT 
 AND c.service_name = ?
 AND c.display_name = ?
 AND c.group_id = ?
 AND style = ?
 AND (SELECT COUNT(handle_id) FROM chat_handle_join WHERE chat_id = c.ROWID) = ?
%s WHERE %@
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat 
WHERE %@
ORDER BY %@ 
%s %@ %@ LIMIT ?
AND (%@)
DESC
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid    AND chat_message_join.message_date = (SELECT MAX(message_date) FROM chat_message_join WHERE chat_message_join.chat_id = chat.rowid) WHERE    chat.is_archived = 0 %@ GROUP BY    chat.rowid HAVING    chat_message_join.message_date < ? ORDER BY    chat_message_join.message_date %@ LIMIT    ?;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid    AND chat_message_join.message_date = (SELECT MAX(message_date) FROM chat_message_join WHERE chat_message_join.chat_id = chat.rowid) WHERE    chat.is_archived = 0 %@ GROUP BY    chat.rowid ORDER BY    chat_message_join.message_date %@ LIMIT    ?;
void _IMDPerformBlockWithDelay(NSTimeInterval, dispatch_block_t, IMFileLocation_t *)
recordStore
void _IMDPerformBlock(dispatch_block_t, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlock(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlockWithoutInitialize(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedDatabaseBlock(CSDBLockedDatabase, IMFileLocation_t *)
threadedRecordStore
recordStoreRef
void _IMDPerformLockedStatementBlockWithQuery(CFStringRef, CSDBLockedStatement, IMFileLocation_t *)
void _IMDPerformLockedConnectionBlock(CSDBLockedConnection, IMFileLocation_t *)
com.apple.IMDPersistenceIPCQueue
void IMDSqlOperationInvalidateCaches(IMDSqlOperation *)
operation == nil || operation->connection == nil
void IMDSqlOperationUpdateLastDeleteSequenceNumber(IMDSqlOperation *)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperationCoreSDB.m
IMDSqlOperationUpdateLastDeleteSequenceNumber
IMDSharedThreadedRecordStore()
CSDBRecordStoreRefFromThreadedRecordStoreRef(IMDSharedThreadedRecordStore())
operation->connection
connection
__CSDBRecordSequenceNumber
IMDSqlOperation IMDSqlOperationInitWithCSDBConnection(CSDBSqliteConnection *, CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBConnection
IMDSqlOperation IMDSqlOperationInitWithCSDBDatabase(CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBDatabase
sqlConnection
CSDBSqliteDatabaseConnectionForWriting returned a nil CSDBSqliteConnection
database
IMDSqlOperation IMDSqlOperationInitWithSharedCSDBDatabase(void)
IMDSharedSqliteDatabase() should not be nil
IMDSqlOperation IMDSqlOperationInitWithThreadedMessageStore(CSDBThreadedRecordStoreRef)
IMDSqlOperationInitWithThreadedMessageStore
messageStore
IMDSqlOperation IMDSqlOperationInitAndCreateIfNeededWithPath(NSString *)
IMDSqlOperationInitAndCreateIfNeededWithPath
path
IMDSqlOperation IMDSqlOperationInitWithPath(NSString *)
IMDSqlOperationInitWithPath
Database not found at %@
void IMDSqlOperationSetThreadedMessageStore(IMDSqlOperation *, CSDBThreadedRecordStoreRef)
IMDSqlOperationSetThreadedMessageStore
Error IMDMessageRecordCreateFromRecordIDWithLock could not create message for id %lld
CFStringRef IMDMessageRecordCopyGUID(CFAllocatorRef, IMDMessageRecordRef)
CFStringRef IMDMessageRecordCopyGUIDUnlocked(CFAllocatorRef, IMDMessageRecordRef)
CFStringRef IMDMessageRecordCopyText(CFAllocatorRef, IMDMessageRecordRef)
int64_t IMDMessageRecordGetItemType(IMDMessageRecordRef, Boolean)
int64_t IMDMessageRecordGetDate(IMDMessageRecordRef, Boolean)
SELECT chat_id FROM chat_message_join WHERE message_id = ?;
SELECT c.rowid FROM chat c INNER JOIN chat_message_join j   ON c.rowid = j.chat_id INNER JOIN message m   ON m.rowid = j.message_id WHERE m.guid = ?;
SELECT attachment_id FROM message_attachment_join WHERE message_id = ? LIMIT ?;
MessageRecord
Found legacy GUID %@ in list of attachments
void IMDMessageRecordBulkCopy(IMDMessageRecordRef, IMDMessageRecordItemType *, int64_t *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFNumberRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, Boolean *, Boolean *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, int64_t *, NSRange *, CFStringRef *, CFDataRef *, CFStringRef *, int64_t *, CFDataRef *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, int64_t *)
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?);
void IMDMessageRecordAddAttachmentIfNeededUnlocked(IMDMessageRecordRef, IMDAttachmentRecordRef)_block_invoke
void IMDMessageRecordBulkUpdate(IMDMessageRecordRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, CFStringRef, CFDataRef, CFNumberRef, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, int64_t, CFStringRef, int64_t, NSRange, CFDataRef, CFStringRef, int64_t, CFDataRef, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, int64_t)
recordIdentifier
flags
void _IMDMessageRecordBulkCopyXPCDictionary(IMDMessageRecordRef, xpc_object_t, Boolean, Boolean, Boolean)
handle_cache
other_handle_cache
attachments_cache
Messages
Request to markAllUnsuccessFullySyncedMessagesAsNeedingSync 
update message set ck_sync_state=0 where ck_sync_state=2;
Executed query to mark all unsuccessfuly synced messages as needing sync
Error executing markAllUnsuccessFullySyncedMessagesAsNeedingSync %@ 
IMDMessageRecord
<IMDMessageRecord %p [%p]>{}
void _IMDMessageRecordSetHandleID(IMDMessageRecordRef, int64_t)
void _IMDMessageRecordSetOtherHandleID(IMDMessageRecordRef, int64_t)
threadCountsByPart
B24@?0r*8@"NSObject<OS_xpc_object>"16
v32@?0@"NSString"8@"NSNumber"16^B24
IMActiveAccountAliasesKey
iMessage
SELECT person_centric_id FROM handle where ID = '%@' and service = 'iMessage'
IMDHandleRecord
We are setting the person_centric_id for a non-iMessage handle to be %@
CFStringRef IMDHandleRecordCopyID(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyCountry(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyUncanonicalizedID(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyPersonCentricID(CFAllocatorRef, IMDHandleRecordRef)
void IMDHandleRecordBulkCopy(IMDHandleRecordRef, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *)
void IMDHandleRecordBulkUpdate(IMDHandleRecordRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
IMDHandle
Updating handle: %@   ID: %@   Country: %@   Service: %@  Unformatted: %@ PersonCentricID: %@
void _IMDHandleRecordBulkCopyXPCDictionary(IMDHandleRecordRef, xpc_object_t, Boolean)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCFHandleRecord.m
BOOL IMDDeleteOrphanedHandles(IMDSqlOperation *)
IMDDeleteOrphanedHandles
DELETE FROM handle WHERE ROWID IN (SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL));
SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL);
<IMDHandleRecord %p [%p]>{}
Fetched last message %@ for chat with rowID: %lld
No chat record for chat with rowID: %lld
Bad predicate provided to %s (%@)
-[IMDDatabase(Messages) fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:]
Bad sort descriptor provided to %s (%@)
Fetching messages for chat: %@ filtered by predicate: %@ sortDescriptors: %llu limit: %llu
Database | One or more invalid required parameters: messageGUID: %@, completionHandler: %@
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE message.guid = ?;
Updating syndication ranges for message item with guid %@. newSyndicationRange: %@
Updated syndication ranges for message: %@
Did NOT update syndication ranges for message: %@
New Range:
Original Ranges:
-[IMDDatabase(Messages) updateAttachmentSyndicationRanges:shouldHideFromSyndication:]
%s Found corresponding IMMessageItem for attachment GUID %@
v32@?0@"NSString"8Q16^B24
%s Found corresponding IMMessagePartDescriptor for attachment GUID %@ (actualAttachmentGUID %@)
messageItem is CMM, routing to alternative path to handle IMMessagePartSyndicationAssetDescriptors
%s message item with GUID %@ did not update its syndication ranges
Failed to find matching messagePart for attachment GUID %@
-[IMDDatabase(Messages) _updateMessageItemSyndicationRanges:messagePartDescriptor:shouldHideFromSyndication:]
%s Updating syndication ranges for message guid: %@, part %ld, range: %@
%s Removing message part range from syndication %@ for message item with GUID %@
%s Unhiding syndication for message part range %@ for message item with GUID %@
%s NOT updating message syndication ranges for message item with GUID %@ because it is already unhidden. currentSyndicationRange: %@
%s Updating message syndication ranges for message item with GUID %@. newSyndicationRange: %@
%s newSyndicationRange was nil. Did not update syndication ranges for message with GUID %@
+[IMDDatabase(Messages) _newSyndicationRangeForCMMMessageItem:syndicationIdentifier:shouldHideFromSyndication:]
Attachment is CMM preview, aborting since we don't care about donating preview to CoreSpotlight
%s Found corresponding IMMessagePartDescriptor for fileTransferGUID %@ (actualAttachmentGUID %@)
%s Updating asset syndication descriptor to be hidden for part index %ld on message item with GUID %@
%s Updating asset syndication descriptor to be not hidden for part index %ld on message item with GUID %@
%s NOT updating CMM asset syndication for message item with GUID %@ because it is already unhidden. current syndications: %@
-[IMDDatabase(Messages) updateMessageSyndicationRanges:shouldHideFromSyndication:]
%s Found IMMessageItem for message GUID %@
%s Found partNumber %ld for message GUID %@
%s messagePart number not foound for message GUID %@, updating all %ld parts
Recently Deleted | Will begin moving messages to recoverable message table with deleteDate: %@ for %lu unique messages
INSERT INTO chat_recoverable_message_join (chat_id, message_id, delete_date)   SELECT chat_id, message_id, ?   FROM chat_message_join AS cmj   JOIN message AS m   ON m.ROWID = cmj.message_id AND m.guid = ?;
DELETE FROM chat_message_join WHERE message_id = ? AND message_id IN ( SELECT message_id FROM chat_recoverable_message_join WHERE message_id = ?);
Recently Deleted | Finished moving messages to recoverable message table for %lu unique messages
Recently Deleted | Will begin permanently deleting recoverable messages for %lu chatGUIDs
Recently Deleted | Cannot delete recoverable messages in chats without chatGUIDs or beforeDate
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, -1 FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID=crmj.chat_id AND c.guid = ? JOIN message AS m  ON m.ROWID=crmj.message_id AND crmj.delete_date < ? AND crmj.ck_sync_state=1 UNION ALL SELECT c.guid, m.guid, rmp.part_index FROM recoverable_message_part AS rmp JOIN chat AS c  ON c.ROWID=rmp.chat_id JOIN message AS m  ON m.ROWID=rmp.message_id AND rmp.delete_date < ? AND rmp.ck_sync_state=1;
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, -1 FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID=crmj.chat_id AND c.guid=? JOIN message AS m  ON m.ROWID=crmj.message_id AND crmj.ck_sync_state=1;
DELETE FROM message AS m WHERE m.ROWID IN (  SELECT crmj.message_id   FROM chat_recoverable_message_join AS crmj   JOIN message AS m   ON crmj.message_id = m.ROWID   JOIN chat AS c ON crmj.chat_id = c.ROWID and c.guid = ?   WHERE crmj.delete_date < ?    AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join))) );
DELETE FROM message WHERE NOT (group_action_type IN (1,3) AND (ROWID IN (SELECT message_id FROM message_attachment_join))) AND (ROWID IN (SELECT message_id                FROM chat_recoverable_message_join AS crmj                JOIN chat AS c                ON c.ROWID = crmj.chat_id AND c.guid = ?));
DELETE FROM recoverable_message_part AS rmp WHERE rmp.chat_id IN (  SELECT c.ROWID  FROM chat AS c  WHERE c.guid = ?);
Recently Deleted | Finished permanently deleting recoverable messages for %lu chatGUIDs
SELECT m.date FROM chat_recoverable_message_join AS crmj JOIN chat AS c ON c.ROWID = crmj.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = crmj.message_id ORDER BY m.date DESC LIMIT 1 
Unexpected column in count chat messages query with index %d
Junk Messages | Will begin permanently deleting junk messages
Junk Messages | Cannot delete junk messages in chats without beforeDate
DELETE FROM message AS m WHERE m.ROWID IN (  SELECT cmj.message_id   FROM chat_message_join AS cmj   JOIN message AS m   ON cmj.message_id = m.ROWID   JOIN chat AS c ON cmj.chat_id = c.ROWID and c.guid = ?   WHERE m.date < ? );
Junk Messages | Finished permanently deleting junk messages for %lu chatGUIDs
SELECT m.date FROM chat_message_join AS cmj JOIN chat AS c ON c.ROWID = cmj.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = cmj.message_id ORDER BY m.date DESC LIMIT 1 
SELECT COUNT(*) FROM chat_recoverable_message_join AS crmj JOIN message AS m ON crmj.message_id = m.ROWID JOIN chat AS c ON crmj.chat_id = c.ROWID WHERE c.guid = ? AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))
SELECT COUNT(*) FROM chat_message_join AS cmj JOIN message AS m ON cmj.message_id = m.ROWID JOIN chat AS c ON cmj.chat_id = c.ROWID WHERE c.guid = ? AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))
SELECT c.guid, crmj.message_id, m.guid, crmj.delete_date, -1, NULL FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID = crmj.chat_id JOIN message AS m  ON m.ROWID = crmj.message_id WHERE crmj.ck_sync_state = 0  UNION ALL SELECT c.guid, rmp.message_id, m.guid, rmp.delete_date, rmp.part_index, rmp.part_text  FROM recoverable_message_part AS rmp  JOIN chat AS c   ON c.ROWID = rmp.chat_id  JOIN message AS m   ON m.ROWID = rmp.message_id  WHERE rmp.ck_sync_state = 0 LIMIT ?;
Recently Deleted | Unexpected column in messages pending update query with index %d
Recently Deleted | Error in column values returned: %@|%@|%@|%@|%@
deleteDateInterval
partBody
SELECT urrm.chat_guid, urrm.message_guid, urrm.part_index FROM unsynced_removed_recoverable_messages AS urrm LIMIT ?;
Recently Deleted | Unexpected column in messages pending delete query with index %d
Error in column values returned: %@|%@|%@
UPDATE chat_recoverable_message_join AS crmj SET ck_sync_state = ? WHERE crmj.message_id = ?;
UPDATE recoverable_message_part AS rmp SET ck_sync_state = ? WHERE rmp.message_id = ? AND rmp.part_index = ?;
INSERT INTO recoverable_message_part (chat_id, message_id, part_index, delete_date, part_text, ck_sync_state)   SELECT cmj.chat_id, cmj.message_id, ?, ?, ?, 0   FROM chat_message_join AS cmj   JOIN message AS m   ON m.ROWID = cmj.message_id AND m.guid = ?;
DELETE FROM unsynced_removed_recoverable_messages;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMAbstractDatabaseArchiver.m
-[IMAbstractDatabaseArchiver initWithSourceDatabasePath:destinationDatabasePath:]
sourcePath
destinationPath
-[IMAbstractDatabaseArchiver copyDatabase:]
Failure in %s at %s:%d. %@
required override
Attempting to delete failed anonymized database...
unable to delete failed anonymous database: %@ at %@
%@: guid: %@, total_bytes: %lld, ck_sync_state: %@, transfer_state: %@, file path: %@
SELECT guid, original_guid, filename, total_bytes, ck_sync_state, transfer_state, hide_attachment FROM attachment;
before_delete_on_attachment
BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END
after_delete_on_attachment
AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END
after_delete_on_chat_message_join
AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1) AND OLD.message_id NOT IN (SELECT chat_recoverable_message_join.message_id from chat_recoverable_message_join WHERE chat_recoverable_message_join.message_id = OLD.message_id LIMIT 1); END
after_delete_on_chat_recoverable_message_join
AFTER DELETE ON chat_recoverable_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1) AND OLD.message_id NOT IN (SELECT chat_recoverable_message_join.message_id from chat_recoverable_message_join WHERE chat_recoverable_message_join.message_id = OLD.message_id LIMIT 1); END
after_insert_on_chat_message_join 
AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END
after_delete_on_message_attachment_join
AFTER DELETE ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 0     WHERE       message.ROWID = OLD.message_id       AND       (SELECT 1 from message_attachment_join WHERE message_id = OLD.message_id LIMIT 1) IS NULL; END
after_insert_on_message_attachment_join
AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END
after_delete_on_message
AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
after_delete_on_chat_handle_join
AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END
add_to_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END
add_to_sync_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO sync_deleted_messages (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
add_to_sync_deleted_attachments
AFTER DELETE ON attachment BEGIN     INSERT INTO sync_deleted_attachments (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
after_delete_on_chat
AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END
delete_associated_messages_after_delete_on_message
AFTER DELETE ON message BEGIN DELETE FROM message WHERE (OLD.associated_message_guid IS NULL AND associated_message_guid IS NOT NULL AND guid = OLD.associated_message_guid); END
update_message_date_after_update_on_message
AFTER UPDATE OF date ON message BEGIN UPDATE chat_message_join SET message_date = NEW.date WHERE message_id = NEW.ROWID AND message_date != NEW.date; END
after_delete_on_message_plugin
AFTER DELETE ON message WHEN OLD.balloon_bundle_id IS NOT NULL BEGIN   SELECT after_delete_message_plugin(OLD.ROWID, OLD.guid); END
update_last_failed_message_date
AFTER UPDATE OF error ON message WHEN   NEW.error != 0 AND NEW.date > COALESCE((SELECT value FROM kvtable WHERE key = 'lastFailedMessageDate'), 0) BEGIN   INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', NEW.date);   INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageRowID', NEW.rowID); END
IMDCKDatabase
Not adding trigger for external builds %@
CREATE TRIGGER IF NOT EXISTS %@ %@
SELECT name FROM sqlite_master WHERE type = 'trigger'
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDTriggers.m
DROP TRIGGER IF EXISTS %@
select * from sqlite_master where type = 'trigger'
BOOL IMDCreateTriggersWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTriggersWithOperation
BOOL IMDDropTriggersWithTriggerNames(NSArray *, BOOL)
IMDDropTriggersWithTriggerNames
names
BOOL IMDCreateTriggersWithTriggerNames(NSArray *, BOOL)
IMDCreateTriggersWithTriggerNames
IMDCoreSpotlightIndexer - Invalid to call IMDCoreSpotlightBaseIndexer directly, use subclass
com_apple_mobilesms_indexType
com_apple_mobilesms_fromMe
com_apple_mobilesms_businessChat
com_apple_mobilesms_service
com_apple_mobilesms_chatUniqueIdentifier
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
com_apple_mobilesms_groupPhotoPath
IMDCoreRecentsApiInitProfilingKey
participants
time
lalh
%@:%@
IMDCoreSpotlightRecipientIndexer
Got %lu participants, date %@ service %@ lastAddressedLocalHandle %@ isFromMe %@ senderID %@ sendingAddress %@
IMDCoreSpotlightFullNameForContactProfilingKey
IMDCoreSpotlightContactsHandleIDForHandler
IMDCoreSpotlightCoreRecentsRecentEventForAddress
IMDCoreSpotlightCreateCoreSpotlightPerson
Adding name %@
groupPhotoGUID
groupPhotoPath
groupName
plainBody
destinationCallerID
threadOriginator
Not donating INInteraction for message without a date, to prevent message send from appearing to have taken place now.
Not donating INInteraction for non-text message.
Not donating INInteraction during re-indexing
Not donating INInteraction for message from me
chatIdentifier
uncanonicalizedHandle
IMDCoreSpotlightIndexer
generated CSPersons %@
IMDCoreSpotlightCreateCoreSpotlightPersonForHandleID
generated self person %@
IMDCoreSpotlightAddAuthorDataTimingKey
 Adding profile name of length %@ 
 Adding profile avatar path 
Adding author %@ author senderID %@
IMDCoreSpotlightRecipientIndexer - Failed to get author CSPerson for !isFromMe message
@"NSString"16@?0@"CSPerson"8
Setting primary recipients %@
Setting primary recipient IDs %@
Setting author %@
Setting author IDs %@
balloonBundleID
IMDCoreSpotlightMessageBodyIndexer
Message is a balloon plugin type, deferring to later indexers
com.apple.IMCoreSpotlight
IMCSPoisonPillEnabled
poison_abort
IMDCoreSpotlightMessageBodyIndexer - Poison pill abort detected, crashing!
poison_spin
(IMDCoreSpotlightMessageBodyIndexer - Poison pill spin detected, hanging!
setting text content %@
associatedMessageType
IMDCoreSpotlightMessageMetadataIndexer
Item is of type %ld
%s GUID %@ is of type %ld, not indexing
+[IMDCoreSpotlightMessageMetadataIndexer cancelIndexingForItem:]
accountID
setting date %@ accountID %@ lastAddressedLocalHandle %@ service %@
payloadData
isFiltered
IMDCoreSpotlightMessageBalloonPluginIndexer
known sender: %@
Indexing balloon with bundle ID %@
Found a rich link to index
IMDCoreSpotlightMessageBalloonPluginIndexer - Failed to get summary text
IMDCoreSpotlightMessageBalloonPluginIndexer - Failed to get Title from LP for url.
Found a non-rich SMS link to index
com_apple_mobilesms_lpDescription
com_apple_mobilesms_lpTitle
attachments
https://
com_apple_mobilesms_lpRichMedia
com_apple_mobilesms_lpPluginPaths
hasAttachments
IMDCoreSpotlightMessageAttachmentIndexer
Adding attachment name %@
Failed to determine attachment name!
Adding attachment UTI type to %@
Failed to determine attachment UTI type!
No attachment Paths to add
No attachment names to add
No attachment types to add
messageSummaryInfo
Not donating CMM preview attachment to CoreSpotlight. attachmentIndex: %lu, cmmOffset: %lu, attachmentGUID: %@, syndicationIdentifier: %@
attributionInfo
Not donating attachment to CoreSpotlight because preview generation failed. attachmentGUID: %@
setting attachment name %@
isCommSafetySensitive
Setting attachment index type to %@
Failed to determine attachment index type!
Setting attachment UTI type to %@
Got address to index %@
Setting address to %@
Indexing .loc.vcf with attributes %@
syndicationRanges
Appended Shared with You meta-data
Creating new attribute set with messageGUID %@ chatGUID %@
Not donating the chat's unique identifier to spotlight because it was nil.
attachmentDomain
Generated %lu aux items for message guid %@
pluginpayload
pluginpayloadattachment
pkpass
order
UTI Type is %@ generator class is %@
csspto
apto
isSticker
messageSummaryInfo: %@
messageHasAttachments %@ isPlugin %@ isCMM %@ messageSupportsIndexing %@
com_apple_mobilesms_isSyndicatableMedia
com_apple_mobilesms_livePhotoComplementPath
com_apple_mobilesms_momentShareURL
com_apple_mobilesms_PHAssetUUID
IMDCoreSpotlightMessageHighlightIndexer
Message highlight indexer updating SearchableItem with identifier %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqliteUtilities.m
NSString *IMDGetTimeStampedFilePath(NSString *, NSString *)
IMDGetTimeStampedFilePath
yyMMdd-HHmmss
-%@.%@
-%@-%@.%@
NSString *IMDGetDestinationFilePath(NSString *, NSString *, NSString *)
IMDGetDestinationFilePath
originalPath
destFolder
fileName
newFileName
NSString *IMDGetDatabasePath(void)
IMDGetDatabasePath
/var/mobile/Library/Logs/CrashReporter/Messages/AnonymizedDatabases
anon
trimmed
Tried to change DB on non gizmo device. This is not supported!!
Database QuickSwitch tried to downgraded incompatible database versioin %ld
Database QuickSwitch Downgrade got unsuccessful result
BOOL _IMDArchiveDatabase(IMAbstractDatabaseArchiver *, NSError **)
_IMDArchiveDatabase
copier
%@ %@
IMDCoreDueDonation
 => Nuking chat: %@
 => Nuking messages: %@
Donate a Chat with a Message to Interaction Store
IMDCoreDueDonation 
donation failed with error %@
Cannot create a CDInteraction with the chat and message record
 => Before first unlock, skipping donation
isBlackholed
IMDCoreDueDonation - Skipping donation %@, denylisted
IMDCoreDueDonation - Skipping donation %@, bailed out
Created interaction for message %@
Donating next batch of messages. Batch size of %lu
IMDCoreDueDonation %s - Not donate. Batch size %lu needsDonation %@ hasMigrated %@
-[IMDCoreSpotlightManager(CoreDuetDonation) donateNextMessageBatchIfNeeded:completion:]
totalTime
sqlQuery
interactionCreation
DonationRecording
Batch donation failed with error %@
Donation complete!
Setting lastDonatedRowID to %lu
IMDCoreDueDonation: %s - Generated no interaction items :(
IMDCoreDueDonation %s - Got no records from IMDMessageRecordCopyMessagesFromRowIDDescLimit. Stopping donation
IMCoreSpotlight
Timing %@
IMCSNeedsDonation
IMCSLastDonatedRowID
Getting chat for message id %lld
%s starting batch donation
-[IMDCoreSpotlightManager(CoreDuetDonation) setNeedsDonateAllMessagesWithCompletion:]
%s max cmj rowID %lld
IMDCoreDueDonation: Failed to get max cmj row ID for indexing!
_CDInteractionRecorder
Class get_CDInteractionRecorderClass(void)_block_invoke
IMDCoreSpotlight_CoreDuetDonation.m
Unable to find class %s
void *CoreDuetLibrary(void)
_CDInteraction
Class get_CDInteractionClass(void)_block_invoke
_CDContact
Class get_CDContactClass(void)_block_invoke
SELECT   c.ROWID, c2.ROWID, ch.handle_id FROM   chat c INNER JOIN chat c2 ON   c2.chat_identifier = lower(c.chat_identifier)   AND c2.style = c.style INNER JOIN chat_handle_join ch ON   c2.ROWID = ch.chat_id WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = (SELECT ch.handle_id FROM chat_handle_join ch WHERE ch.chat_id = ? LIMIT 1) 
UPDATE   chat_message_join SET   chat_id = ? WHERE   chat_id = ?   AND message_id NOT IN (SELECT cm.message_id FROM chat_message_join cm WHERE cm.chat_id = ?) 
DELETE FROM   chat WHERE   rowid = ? 
SELECT   c.ROWID, c.guid, c.chat_identifier FROM   chat c WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   chat SET     guid = ?,     chat_identifier = ? WHERE     ROWID = ?
SELECT   h.rowid, h2.rowid FROM   handle h INNER JOIN handle h2 ON   h2.id = lower(h.id)   AND h2.service = h.service WHERE   h.id != lower(h.id) 
UPDATE   chat_handle_join SET   handle_id = ? WHERE   handle_id = ?   AND chat_id NOT IN (SELECT ch2.chat_id FROM chat_handle_join ch2 WHERE ch2.handle_id = ?) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = ? 
DELETE FROM   handle WHERE   rowid = ? 
UPDATE   handle SET     uncanonicalized_id = id,     id = lower(id) WHERE     id != lower(id)
SELECT ROWID, id, country, service, uncanonicalized_id, person_centric_id FROM handle WHERE   id = ? AND   service = ? ORDER BY handle.ROWID ASC;
object
v32@?0@"NSString"8@16^B24
__xpc__event_code__
IMDDatabaseClient | One or more invalid required parameters: xpc_object_t message: %@, messageGUID: %@, completionHandler: %@
IMDDatabaseClient
Not sending XPC message for SharePlay notification because message (%@), chatGUID (%@), faceTimeConversationUUID (%@), or handleIdentifier (%@) were nil
Recently Deleted | Could not create xpc message. Not clearing message tombstones
IMDDatabaseClient | Early return: Recently Deleted:storeRecoverableMessagePartWithBody given messageGUID: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDPersistenceTests/IMDSqlQuery.m
-[IMDSqlQuery createQueryString]
Use one of the subclasses
SELECT %@ FROM %@
 WHERE %@
 LIMIT %lld
Attachments
Not deleting at original path %@ because we're storing at an external path %@
   => transfer has empty file name, bailing: %@
   => transfer is not ready to save
   => persistent path is zero length for transfer: %@
   => transfer could not ensure persistent path: %@
   => local path is already the same as destination path. Not moving or copying.
   => file already exists for transfer: %@
   => file is already in attachment store: %@
Failed to consume sandbox token, %@ token: %@
   => successfully copied file to path: %@
   => checking if file has any siblings to copy
   => copying video complement: %@
        ...removing old file in 10: %@
        ...removing old file: %@
        ...removing old sibling file: %@
   => ** failed copying file to path: %@
          The error was %@
   => failed copy file to path: %@, will try move
      The error was %@
   => ** failed moving file to path: %@
   => ** failed copying file from path, file not on disk: %@
Failed to release sandbox token, %@ token: %@
Changing permissions on attachment file at %@
    => Permissions changed: %@  error: %@
   => Success! returning path: %@
Not deleting attachment path, last component is Attachments
Not deleting attachment path, last component is not guid-like %@ guidPathComponent: %@
/var/mobile/Library/SMS/Attachments
Not deleting attachment path, not in attachment store: %@
Bailing out of legacy attachment path deletion, %@ has other contents in path
Bailing out of legacy attachment path deletion, %@ is not an eligible path
Path was in attachment store, removing %@
Can't migrate sibling attachments to the same folder
Looking for sibling files of %@ in %@
Sibling search found orig filename %@, skipping
Will migrate sibling at path %@ to %@
Failed to copy sibling attachment to dst. Orig %@ sibling %@ dst %@ error %@
Successfully migrated %@ to %@
Failed to update permissions on sibling file dst path %@ error %@
Request to delete attachment for transfer: %@ high quality: %@
  => No persistent path for transfer found: %@
  => failed to remove item at path: %@  for transfer: %@
  => Successfully deleted item at path: %@  for transfer: %@
Generating path for sticker transfer %@ isSticker %@
Overriding guid for transfer in _persistentPathForTransfer %@
Storing group photo at an accessible location.
%02x
%02d
Resulting path %@   for transfer: %@
/var/mobile/Library/SMS
Input path: %@
DB Path: %@
Anonymizing database at: '%@'...
Copying database (to be anonymized) from %@ to %@ failed: %@
Anonymizing data:
Failed to anonymize attachments with error: %@
Anonymizing failed with error: %@
Failed to delete partially anonymized database at with error: %@
IMPORTANT -- Please manually delete database here:
Successfully Deleted partially anonymized database at '%@'
%@: %d%% completed
%@: %d%% completed; %@ elapsed
%@: %d%% completed; %@ elapsed; ~%@ remaining
  no query function set
  Replacing '%@' in '%@' with '%@ <ROWNUM>'
UPDATE %@ SET %@ = "[%@ " || ROWID || "]" WHERE %@ IS NOT NULL AND %@ != '';
Cleaning text
SELECT ROWID, attributedBody, text, message_summary_info FROM message
UPDATE message SET text = ?, attributedBody = ?, message_summary_info = ? WHERE ROWID = ?
v32@?0@"NSDictionary"8Q16^B24
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
UPDATE attachment SET filename = ((SELECT rtrim(filename, (SELECT transfer_name FROM attachment WHERE ROWID = a1.ROWID)) FROM attachment a1) || ROWID || ".JPG");
Cleaning attachment path
UPDATE attachment SET transfer_name = ROWID || ".JPG" WHERE transfer_name IS NOT NULL AND transfer_name != '';
Cleaning attachment name
UPDATE attachment SET mime_type = "image/jpeg";
Updating attachment mimetype
UPDATE attachment SET uti = "public.jpeg";
Updating attachment uti
UPDATE attachment SET total_bytes = 67946;
setting attachment size
  %@
~/Library/SMS/Attachments/
/9j/4AAQSkZJRgABAQAASABIAAD/4QCCRXhpZgAATU0AKgAAAAgAAwESAAMAAAABAAEAAAExAAIAAAAeAAAAModpAAQAAAABAAAAUAAAAABBZG9iZSBQaG90b3Nob3AgQ1M1IE1hY2ludG9zaAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAACWKADAAQAAAABAAADdwAAAAD/4QtAaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLwA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/PiA8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA1LjQuMCI+IDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+IDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxuczpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjFCMEVCM0I0NTIzQzExRTJBM0E2ODQ5MUE3OTRBRTAxIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjFCMEVCM0IzNTIzQzExRTJBM0E2ODQ5MUE3OTRBRTAxIiB4bXBNTTpPcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6Rjc3RjExNzQwNzIwNjgxMTk0NTdGMDkzMzk4RDAwMTUiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpGNzdGMTE3NDA3MjA2ODExOTQ1N0YwOTMzOThEMDAxNSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpGNzdGMTE3NDA3MjA2ODExOTQ1N0YwOTMzOThEMDAxNSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3hwYWNrZXQgZW5kPSJ3Ij8+AP/tADhQaG90b3Nob3AgMy4wADhCSU0EBAAAAAAAADhCSU0EJQAAAAAAENQdjNmPALIE6YAJmOz4Qn7/wAARCAN3AlgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9sAQwAcHBwcHBwwHBwwRDAwMERcRERERFx0XFxcXFx0jHR0dHR0dIyMjIyMjIyMqKioqKioxMTE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
-Attachments
Creating anonymous attachments in directory at %@
SELECT filename FROM attachment
Cleaning attachments
rowID
expressiveSendStyleID
loginID
syndicationType
syndicationDate
lastMessageDate
Icons
SOS_lt_60.png
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCoreSpotlightIndexHelpers.m
NSString *_IMDCoreSpotlightHandleID(IMDHandleRecord *__strong _Nonnull)
_IMDCoreSpotlightHandleID
CNContact * _Nonnull _IMDCoreSpotlightCNContactForHandle(IMDHandleRecord *__strong _Nonnull)
_IMDCoreSpotlightCNContactForHandle
IMDCoreSpotlight: Address is nil, we are returning nil.
IMDCoreSpotlight: Validated Address is nil, we are returning nil. Address: %@
IMDCoreSpotlight: No cached contact for ID:%@. We are refetching.
IMDCoreSpotlight: Contact Store (email)fetch failed: %@
IMDCoreSpotlight: Got a Contact for address %@. Caching and returning contact.
IMDCoreSpotlight: Contact Store (phone)fetch failed: %@
IMDCoreSpotlight: Did not get a Contact for address %@ from Contact Store. Caching mutable contact: %@
IMDCoreSpotlight: Return contact: %@
CSPerson *_IMDCoreSpotlightPerson(NSString *__strong _Nonnull, NSString *__strong _Nonnull, CNContact *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDCoreSpotlightPerson
handleID
Created CSPerson: %@, fullName: %@, handleID: %@, contact: %@, service: %@
NSString *_IMDContactsKindForID(NSString *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDContactsKindForID
NSString *_IMDCoreRecentsKindForHandleID(NSString *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDCoreRecentsKindForHandleID
pendingNicknamesKeyStore.db
pendingNicknameUpdatesStore
handledNicknamesKeyStore.db
handledNicknamesStore
We got an error loading the nickname info from the kv store for notifications %@
We got an error unarchiving the nickname dictionary %@
We have a nickname dictionary for %@ %@
MAYBE
CRRecentWeightMessagesReceivedAddress
CoreRecents
map url
_AddLocationsFromVCFToCoreRecents() was passed a nil filePath
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentContactMetadataEventTime
CRRecentContactMetadataReferenceURL
CRRecentContactMetadataFromAddress
CRRecentContactMetadataFromAddressKind
CRRecentContactMetadataFrom
sms:/open?message-guid=%@
DataDetectors
CoreRecents metadata:%@
Screenshot
v24@?0@"NSArray"8@"NSError"16
Suggestion service request timed out
Using suggested name "%@" for handle %@
Business name updated to "%@", calling interaction updated handler
For handle %@ used contacts to determine displayName "%@" and image. Using contactID: %@
For handle %@ used nickname to determine displayName "%@" and image %@
For handle %@ used nickname to determine displayName "%@" and no image
For handle %@ used uncanonicalized address to determine displayName "%@" and no image
Using image file path: %@
Image file path is nil
Image does not exist at nickname file path
Chat
None of the current chat participants match the current senderID, creating a new person.
speakableGroupName
CNPhoneNumber
INPersonHandleLabelForCNLabeledValue
Intents
VIEW_ATB_OPTIONS
notificationCaption
DROP TRIGGER IF EXISTS delete_attachment_files;
SELECT ROWID, address, date, text, flags, replace, svc_center, group_id, association_id, height, UIFlags, version, subject, country, headers, recipients, read, madrid_attributedBody, madrid_handle, madrid_version, madrid_guid, madrid_type, madrid_roomname, madrid_service, madrid_account, madrid_account_guid, madrid_flags, madrid_attachmentInfo, madrid_url, madrid_error, is_madrid, madrid_date_read, madrid_date_delivered FROM message_legacy ORDER BY ROWID ASC
analyze;
CREATE TABLE IF NOT EXISTS V21_MIGRATION_GROUP_CHAT_MAP (chat_id INTEGER REFERENCES chat(ROWID), group_id INTEGER NOT NULL, is_broadcast INTEGER NOT NULL, UNIQUE (chat_id, group_id, is_broadcast) );
CREATE TABLE IF NOT EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id INTEGER REFERENCES msg_group_legacy(ROWID), handle_id INTEGER REFERENCES handle(rowid), UNIQUE (group_id, handle_id) );
INSERT INTO message (  guid,   text,   replace,   service_center,   subject,   country,   attributedBody,   version,   type,   service,   account,   account_guid,   error,   date,   date_read,   date_delivered ) SELECT   madrid_guid,   text,   replace,   svc_center,   subject,   country,   madrid_attributedBody,   1,   madrid_type,   'iMessage',   madrid_account,   madrid_account_guid,   madrid_error,   date,   madrid_date_read,   madrid_date_delivered FROM   message_legacy WHERE   ROWID = ?
UPDATE   message SET   is_delivered = ?,   is_finished = ?,   is_emote = ?,   is_from_me = ?,   is_empty = ?,   is_delayed = ?,   is_auto_reply = ?,   is_prepared = ?,   is_read = ?,   is_system_message = ?,   is_sent = ?,   has_dd_results = ?,   is_service_message = ?,   is_forward = ?,   was_downgraded = ?,   is_archive = ? WHERE   ROWID = ? 
SELECT   ROWID FROM   chat WHERE   room_name = ?     OR    chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT   ROWID FROM   chat WHERE   chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   room_name = ?     OR   chat_identifier = ? LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   chat_identifier = ? LIMIT 1
INSERT INTO chat (  guid,   style,   state,   account_id,   properties,   chat_identifier,   service_name,   room_name,   account_login ) SELECT   guid,   style,   state,   account_id,   properties,   chat_identifier,   'iMessage',   room_name,   account_login FROM   madrid_chat_legacy WHERE   ROWID = ?
UPDATE chat SET room_name = ? WHERE ROWID = ? AND room_name is NULL
UPDATE chat SET guid = ? WHERE ROWID = ?
INSERT INTO chat_handle_join (handle_id, chat_id) values (?, ?)
INSERT INTO chat_message_join (   chat_id,   message_id ) VALUES (   ?,   ? )
SELECT   ROWID FROM   handle WHERE   id = ?   AND service = ? LIMIT 1 
int64_t __createHandleRecord(CSDBSqliteConnection *, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
INSERT INTO handle (  id,   service,   country,   uncanonicalized_id ) VALUES (   ?,   ?,   ?,   ? ) 
missed call
UPDATE   message SET   handle_id = ? WHERE   ROWID = ? 
Boolean __findOrCreateiMessageAttachmentsForLegacyGUID(CSDBSqliteConnection *, CFStringRef, int64_t)
SELECT   ROWID FROM   attachment WHERE   guid = ? LIMIT 1 
SELECT   ROWID FROM   madrid_attachment_legacy WHERE   attachment_guid = ? 
INSERT INTO attachment (  guid,   created_date,   start_date,   filename,   uti,   mime_type,   transfer_state ) SELECT   attachment_guid,   created_date,   start_date,   filename,   uti_type,   mime_type,   transfer_state FROM   madrid_attachment_legacy WHERE   ROWID = ?
INSERT INTO message_attachment_join (   message_id,   attachment_id ) VALUES (   ?,   ? )
INSERT INTO message (guid, text) values (?, ?);
DELETE FROM message WHERE ROWID = ?;
UPDATE message SET     attributedBody = ?,     text = ?,     date = ?,     date_read = ?,     date_delivered = ?,     service_center = ?,     version = ?,     country = ?,     service = ?,     is_delivered = ?,     is_finished = ?,     is_emote = ?,     is_from_me = ?,     is_empty = ?,     is_delayed = ?,     is_auto_reply = ?,     is_prepared = ?,     is_read = ?,     is_system_message = ?,     is_sent = ?,     has_dd_results = ?,     is_service_message = ?,     is_forward = ?,     was_downgraded = ?,     subject = ?,     error = ?,     handle_id = ? WHERE     ROWID = ?
SELECT   COUNT(ROWID) FROM   message_legacy WHERE   ROWID < ?   AND group_id = ?   AND association_id = ?   AND is_madrid = 0 
INSERT INTO chat (   guid,   style,   state,   chat_identifier,   service_name,   room_name ) VALUES (   ?,   ?,   ?,   ?,   ?,   ? )
SELECT count(rowid) FROM group_member_legacy WHERE group_id = ?
SELECT ROWID, group_id, address, country FROM group_member_legacy WHERE group_id = ?
SELECT handle_id from V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP where group_id = ?
SELECT address from message_legacy where group_id = ?
INSERT INTO V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id, handle_id) values (?, ?)
SELECT chat_id from V21_MIGRATION_GROUP_CHAT_MAP where group_id = ? AND is_broadcast = ?
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived FROM chat WHERE     style = ? AND     service_name = ? ORDER BY ROWID ASC
SELECT handle_id from chat_handle_join where chat_id = ? ORDER BY handle_id ASC
INSERT INTO V21_MIGRATION_GROUP_CHAT_MAP (chat_id,group_id,is_broadcast) values (?, ?, ?)
SELECT   id FROM   handle WHERE   ROWID = ? LIMIT 1
SELECT   COUNT(message_id) FROM   chat_message_join WHERE   chat_id = ? 
CKPlaceholderTimeSince1970Property
UPDATE   chat SET   properties = ? WHERE   ROWID = ? 
SELECT ROWID, message_id, data, part_id, preview_part, content_type, height, version, flags, content_id, content_loc, headers FROM msg_pieces_legacy WHERE message_id = ? AND preview_part < 0 ORDER BY part_id ASC
application/smil
text/plain
INSERT INTO attachment (guid, mime_type, uti, created_date, transfer_state) values (?, ?, ?, ?, 5);
INSERT INTO message_attachment_join (message_id, attachment_id) values (?, ?);
UPDATE attachment SET filename  = ? WHERE guid = ?
%d-%d
/var/mobile/Library/SMS/Parts/
DROP TABLE IF EXISTS V21_MIGRATION_GROUP_CHAT_MAP
DROP TABLE IF EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP
BOOL _IMDSqlOperationBeginQuery(IMDSqlOperation *, CFStringRef, IMFileLocation_t *)
operation->statement.sql_statement
void IMDSqlOperationSetError(IMDSqlOperation *, CFErrorRef)
BOOL IMDSqlOperationFinishQuery(IMDSqlOperation *)
BOOL IMDSqlOperationBeginTransaction(IMDSqlOperation *)
BEGIN IMMEDIATE;
BOOL IMDSqlOperationCommitTransaction(IMDSqlOperation *)
operation->transaction
trying to commit transaction when we don't have one.
BOOL IMDSqlOperationRevertTransaction(IMDSqlOperation *)
Trying to revert transaction when we don't have one. This may mean we have a transaction open on this same sql_connection with another IMDSqlOperation
ROLLBACK;
BOOL IMDSqlOperationCommitOrRevertTransaction(IMDSqlOperation *)
BOOL IMDSqlOperationRelease(IMDSqlOperation *, NSError **)
NSArray *_IMDSqlOperationGetRowsWithBindingBlock(IMDSqlOperation *, CFStringRef, dispatch_block_t)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperation.m
_IMDSqlOperationGetRowsWithBindingBlock
binder
rows
NSArray *_IMDSqlOperationGetRowsForQueryWithBindingBlock(CFStringRef, NSError **, IMDSqlOperationBlock)
_IMDSqlOperationGetRowsForQueryWithBindingBlock
binderBlock
BOOL IMDSqlOperationExecuteQuery(IMDSqlOperation *, NSString *, IMDBlock)
IMDSqlOperationExecuteQuery
BOOL IMDSqlOperationHasRows(IMDSqlOperation *)
void IMDSqlOperationIterateRow(IMDSqlOperation *, IMDSqlOperationColumnIterator)
IMDSqlColumn IMDSqlOperationColumnByIndex(IMDSqlOperation *, int)
IMDSqlColumn IMDSqlOperationColumnByName(IMDSqlOperation *, const char *)
IMDSqlOperationColumnByName
uint32_t IMDSqlOperationColumnCount(IMDSqlOperation *)
void _IMDSqlOperationSetQuery(IMDSqlOperation *, CFStringRef)
operation->statement.query
void _IMDSqlOperationReleaseQuery(IMDSqlOperation *)
(operation->error == nil && operation->statement.stepCount == 0)
SQL operation results never read from statement
Saving new chat record to database with identifier: %@ displayName: %@ groupID: %@ originalGroupID: %@ service: %@
CFStringRef IMDChatRecordCopyGUID(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyChatIdentifier(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyGUIDUnlocked(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyDisplayName(CFAllocatorRef, IMDChatRecordRef)
SELECT cm.message_id from chat_message_join cm where cm.chat_id = ? ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT 1;
SELECT ROWID from message m WHERE m.item_type == 0 AND m.ROWID in (SELECT message_id FROM chat_message_join where chat_id = ?) ORDER BY date DESC, ROWID DESC LIMIT 1
SELECT message_id FROM chat_message_join WHERE chat_id = ? ORDER BY ROWID DESC LIMIT ?;
void _IMDChatRecordBulkCopy(IMDChatRecordRef, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *)
void IMDChatRecordSetIsArchived(IMDChatRecordRef, int64_t)
void IMDChatRecordSetIsBlackholed(IMDChatRecordRef, int64_t)
void IMDChatRecordSetIsRecovered(IMDChatRecordRef, int64_t)
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?);
SQLite returned %d from IMDChatRecordAddMessageIfNeededUnlocked
void IMDChatRecordRemoveMessage(IMDChatRecordRef, IMDMessageRecordRef)
DELETE FROM chat_message_join WHERE chat_id = ? AND message_id = ?;
IMDSpotlight
INSERT INTO chat_handle_join (chat_id, handle_id) VALUES (?, ?)
DELETE FROM chat_handle_join WHERE chat_id = ? AND handle_id = ?
void IMDChatRecordBulkUpdate(IMDChatRecordRef, int64_t, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, CFStringRef, CFStringRef, int64_t, int64_t, int64_t, int64_t)
void _IMDChatRecordBulkCopyXPCDictionary(IMDChatRecordRef _Nonnull, xpc_object_t _Nonnull, Boolean, Boolean, Boolean, Boolean)
handles_cache
last_message_cache
unread_count_cache
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCFChatRecord.m
BOOL IMDMergeDuplicateChatsWithOperation(IMDSqlOperation * _Nonnull, NSArray<NSString *> * _Nonnull, NSString * _Nonnull, NSString * _Nullable)
IMDMergeDuplicateChatsWithOperation
losingChatGUIDs
winningChatGUID
ForkMerge
failed dropping triggers: %@
UPDATE chat_message_join SET chat_id = (SELECT ROWID FROM chat WHERE guid = ?) WHERE (chat_id = (SELECT ROWID FROM chat WHERE guid = ?) AND message_id NOT IN (SELECT message_id from chat_message_join WHERE chat_id =  (SELECT ROWID FROM chat WHERE guid = ?)));
failed updating chat_message_join table: %@ for unwanted chat: %@
DELETE FROM chat_handle_join WHERE chat_id IN (SELECT ROWID FROM chat WHERE guid %@)
failed deleting chat_handle_join rows failed (%@) - for unwanted chats: %@
UPDATE chat SET display_name = '%@' WHERE guid = '%@';
failed recreating the triggers: (%@) - for unwanted chats: %@
Finished merging %ld (%@) unwanted chats into %@ 
Being to merge %lld (%@) duplicate chats into winning chat %@
IMDMergeDuplicateChatsWithOperation failed in db with error: %@
Finished repairing %lld duplicate chats in %f seconds
error_domain
error_code
error_localized_description
Finished merging duplicated chats in %f seconds
IMDMergeDuplicateChatsWithOperation in agent failed with error: %@
IMDChatRecord
<IMDChatRecord %p [%p]>[%lld]{}
Could not get chat record for identifier %lld
last_message_date_on_load
SELECT   m.ROWID, m.attributedBody FROM   message m WHERE   m.text IS NULL   AND m.attributedBody IS NOT NULL   AND (    SELECT       COUNT(*)     FROM       message_attachment_join     WHERE       message_id = m.ROWID   ) = 0 
UPDATE   message SET     text = ? WHERE     ROWID = ?
%@, error: %@
SQL_ERROR
DMIsMigrationNeeded
DataMigration
IMDSystemMigration
system migration finished: %@
system needs to finish migration still, not allowing indexing
com.apple.imdsmsrecordstore
mobile
kIMDPersistenceLastBuild
Needs migration, not allowing indexing, lastBuild: %@, currentBuild: %@
Migration not needed, allowing indexing, lastBuild: %@ currentBuild: %@
No current build version, allowing indexing
We have migrated, lastBuild: %@
IMDCoreSpotlightIndexerProfiler
All Indexers
%@-%ld
IMDCoreSpotlightClientQueue
Indexing %lu number of items with Index %@
IMDChatAddMessageToSpotlight: [async] indexing searchable items failed with error %@. Using Index %@
Indexing item ID %@ domain %@
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
Number of pseudo-contacts %@
Number of pseudo-event %@
 => Before first unlock, skipping indexing
%s reindexing message
CSSearchableItem *_IMDChatAddMessageToSpotlight(IMDChatRecord *__strong, IMDMessageRecord *__strong, BOOL, IMDCoreSpotlightFiltered *)
bailing early, chatGUID (%@) or sender handle (%@) was nil
v32@?0@"IMDHandleRecord"8Q16^B24
Adding selfName %@ selfPerson %@ lastAddressedLocalHandle: %@
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
_IMDChatAddMessageToSpotlight
IMDChatAddMessageToSpotlight: deleting message for searchable items failed with error %@
 => Nuking attachment message parts: %@
IMDCoreSpotlightDeleteAttachmentParts: deleting attachment message part for searchable items failed with error %@
 => Deleting this chat
IMDCoreRecentDeleteChat bailing because we were passed no handles
performRecentsSearch: not performing recents SEARCH since a valid handleAlias was not found for handleRecord: gi%@
performRecentsSearch - recents = %@
Recents remove failed with error %@
performRecentsSearch: recents SEARCH failed with error %@
IMDCoreSpotlightDeleteChatGUID: Failed to delete items with domain identifier %@ with error %@
 => Indexing chat: %@
No chats to add
Adding %lu chats to CoreSpotlight
 => Before first unlock, skipping re-indexing of messages
Trying to reindex messages with an empty guids array
Request to re-index messages with messages count: %d
total time for indexing messages
generate indexable item
Done re-indexing messages, time: %@
 => %s Before first unlock, skipping indexing
void IMDCoreSpotlightSetNeedsMessageReindex(__strong dispatch_block_t)
void IMDCoreSpotlightIndexNextMessageBatchIfNeeded(NSUInteger, __strong dispatch_block_t)
Found %ld messages guids to remove from spotlight
Found 0 messages guids to remove from spotlight
kIMDPersistenceHasFixedIsFiltered
Needs to fix is filtered: %@
Doesnt to fix is filtered: %@
We fixed isFiltered
SLCollaborationHandshakeController
SocialLayer
IMCSDoNotIndex
Current blocklist size is %lu
Blocklist size > %d on load, truncating
-[IMDCoreSpotlightManager setMessageGUIDUnderScrutiny:]
-[IMDCoreSpotlightManager clearMessageGUIDFromScrutiny:]
IMDCoreSpotlight - Skipping indexing %@, denylisted - isBlackholed: %@
Indexing placing %@ under scrutiny
post-processor
Indexing %@ threw exception %@
Indexing removing %@ from scrutiny
Indexing NOT removing %@ from scrutiny, exception was thrown
spamFiltrationExtensionID
com.apple.smsFilter.extension
Skipping adding resolvedURL since link is older than %d days: %@
Setting CS Item with uniqueidentifier  %@ to be updatable
GEO request to geocode %lu items
GEO Created and enqueuing geo ticket %p for %@ 
GEO ticket complete for item %@
IMDCoreSpotlight %s - Geocoding failed with error %@
-[IMDCoreSpotlightManager _geocodeItems:]_block_invoke_3
v16@?0@"<GEOMapServiceThrottlableTicket>"8
IMDCoreSpotlight %s: item %@ returned invalid coordinate from geocode
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]
IMDCoreSpotlight %s: indexing geocoded searchable item %@ failed with error %@
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]_block_invoke
IMDCoreSpotlightChatIndexer
Appending autodonation state %@ for chat with guid: %@
Appending autodonation server date %@ for chat with guid: %@
chatDomain
com_apple_mobilesms_isChatAutoDonating
com_apple_mobilesms_chatAutoDonatingServerDate
com_apple_mobilesms_chatStyle
com_apple_mobilesms_localIdentityProof
com_apple_mobilesms_localIdentity
com_apple_mobilesms_handleToIdentityMap
IMDCoreSpotlight: Failed to add chat searchable items with error %@
IMDCoreSpotlight: Failed to delete chat searchable items with unique identifier %@ with error %@
%s starting reindex
-[IMDCoreSpotlightManager setNeedsMessageReindexingWithCompletion:]
IMDCoreSpotlight: Failed to create index!
IMDCoreSpotlight: Failed to get max cmj row ID for indexing!
_sanitizeIndexesForCurrentVersionIfNeeded complete, kicking off standard indexes
Bypassing index version comparisons. **NOT** deleting indexes
Current idx version is %llu, expected is %llu, deleting prior indexes
CSDeleteAllIndexes
Index deletion complete - %@
IMDCoreSpotlight: Version mismatch failed to delete all indexes! %@
Current idx version is %llu, index does not need deletion
copyAllActiveChats
generateItems
Indexing %ld chat records
IMDCoreSpotlight: Failed to get chats to index!
indexChats timing %@
Chat count: %ld
Not indexing UID %@, already indexed newer record
Passing chat records to Spotlight.Using index %@
IMDCoreSpotlight: indexing all chats failed with error %@
IMDCoreSpotlight: indexing all chats completed with error %@. Index: %@
Spotlight finished ingesting chat records, client state updated to %@
Indexing next batch of messages. Batch size of %lu
IMDCoreSpotlight %s - Not indexing. Batch size %lu needsIndexing %@ hasMigrated %@
-[IMDCoreSpotlightManager indexNextMessageBatchIfNeeded:completion:]
indexCreation
CSIngest
IMDCoreSpotlight: %s - Generated no indexable items :(
IMDCoreSpotlight %s - Got no records from IMDMessageRecordCopyMessagesFromRowIDDescLimit. Stopping indexing
Using legacy path for searchable item generation
Got %lu records from IMDMessageRecordCopyMessagesFromRowIDDescLimit
IMDCoreSpotlight: %s - Failed to get chat for message
-[IMDCoreSpotlightManager _newLegacySearchableIndexesForMessages:]
%s Generated %lu items to index!. Using Index %@
-[IMDCoreSpotlightManager _indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:]
IMDCoreSpotlight: endIndexBatchWithClientState failed with error %@. Using index %@
Indexing complete!
Setting lastIndexedRowID to %lu
IMDChatAddMessageToSpotlight: indexing searchable items failed with error %@. Using index %@
IMCSNeedsIndexing
IMCSIndexLastIndexDate
IMCSNeedsDeferredIndexing
IMCSIndexTotalRecords
IMCSLastIndexedRowID
IMCSIdxVersion
IMCSIdxProductVersion
IMCSBypassIndexVersionCheckV2
Reducing batch size to %lu, last batch?
Not donating to spotlight since it is not enabled
Deriving attachment index because attachment GUID in item dictionary is in legacy format. attachmentGUID: %@
IMDAttachmentSyndicationUtilities
Using existing attachment GUID for syndication identifier. attachmentGUID: %@
%s Found corresponding IMMessagePartDescriptor for attachment GUID %@ (syndicationIdentifier %@)
+[IMDAttachmentSyndicationUtilities _attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:]_block_invoke
v32@?0@"IMMessagePartDescriptor"8Q16^B24
+[IMDAttachmentSyndicationUtilities _attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:]
%@ not syndicatable because it was explcitly hidden
Setting isSyndicatableMedia to be NO because the attachment is flagged as IMMessagePartSyndicationTypeHidden. attachmentGUID: %@ (syndicationIdentifier: %@)
+[IMDAttachmentSyndicationUtilities _attachmentGUIDForCMMIsSyndicatable:syndicationIdentifier:encodedSyndicationRanges:isSyndicatable:verbose:]
attachmentGUID %@, syndicationIdentifier %@, isSyndicatable: %d
%@ not syndicatable because it was an unsupported UTI %@
syndicationType == %lu for attachmentGUID %@ based on UTI type %@
%@ not syndicatable because it was comm safety sensitive
Setting syndicationType to be Other because the attachment is flagged as CommSafety sensitive. attachmentGUID: %@
Library
sms.db
sms-temp.db
uint64_result
select type,name,tbl_name,sql from sqlite_master;
<t:%@, n:%@, tn:%@, sql:%@>
schema
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteConnection=^{CSDBSqliteDatabase}^{sqlite3}^{__CFDictionary}^v^?I}24
counter_in_all
counter_out_all
counter_last_reset
RecordStore
Beginning record store clean.
Beginning file cleanse.
Sticker with path is not in use.
XPC connection failed, not deleting sticker
Found %lld sticker(s), path is in use
Beginning sticker attachment cleanse.
Beginning browser snapshot deletion
Attachments. Could not delete browser snapshot cache at path %@
ProtectionMerge: unprotected database: %s, found: %s, error: %d
%@-shm
%@-wal
ProtectionMerge: unprotected database: %s, deleted: %s, error: %d
counter_out_lifetime
counter_in_lifetime
Skipping '%@' as its level is %d and our target level is %d.
Examining '%@' as it looks like it contains a guid '%@'.
To Delete: %@
Cleaned up '%@'
Keeping '%@' we have a record for it in the DB.
  Deleting preview: %@
  Not deleting the actual attachment: %@
Beginning iteration of _IMDCleanseOrphanedAttachmentsWithEnumerator attachments
File cleanse ended %@
successfully.
Attachments _IMDCleanseOrpanedStickersInStickerCachePath nil stickerCachePath
Sticker cache path %@
Attachments. Error getting contents of directory %@ error %@
Searching db for filename: %@
Will delete %@
Attachments. Could not delete sticker at path %@
IMDDonationManager
early returning from copyGroupPhotoToExternalPathIfNecessary - nil argument. groupPhotoGUID %@ chatGUID %@ filepath %@
File already exists at path %@
File missing at path %@. Will attempt to copy from Attachments directory
Error creating intermediate directories for path: %@
Error copying to path %@ from path %@ success: %@ error: %@
Successfully copied to path %@ from path %@
Boolean IMDAttachmentRecordIsSticker(IMDAttachmentRecordRef)
Attempted to get record identifier for NULL attachment record: %@
CFStringRef IMDAttachmentRecordCopyGUID(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetCreatedDate(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetStartDate(IMDAttachmentRecordRef)
Boolean IMDAttachmentRecordGetIsOutgoing(IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyFilename(CFAllocatorRef, IMDAttachmentRecordRef, BOOL)
CFStringRef IMDAttachmentRecordCopyTransferName(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyUTIType(CFAllocatorRef, IMDAttachmentRecordRef)
CFDictionaryRef IMDAttachmentRecordCopyAttributionInfo(CFAllocatorRef, IMDAttachmentRecordRef)
CFDictionaryRef IMDAttachmentRecordCopyUserInfo(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyMIMEType(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTransferState(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTotalBytes(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetCommSafetySensitive(IMDAttachmentRecordRef)
void _IMDAttachmentRecordBulkCopy(IMDAttachmentRecordRef, CFStringRef *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, Boolean *, int64_t *, CFDictionaryRef *, Boolean *, CFDictionaryRef *, CFDictionaryRef *, Boolean *, int64_t *, CFDataRef *, CFStringRef *, CFStringRef *, int64_t *)
void IMDAttachmentRecordBulkUpdate(IMDAttachmentRecordRef, CFStringRef, int64_t, int64_t, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, Boolean, int64_t, CFDictionaryRef, Boolean, CFDictionaryRef, CFDictionaryRef, Boolean, int64_t, CFDataRef, CFStringRef, CFStringRef, int64_t)
void _IMDAttachmentRecordBulkCopyXPCDictionary(IMDAttachmentRecordRef, xpc_object_t, Boolean)
IMDAttachmentRecord
CFStringRef _IMDAttachmentCopyDescription(_IMDAttachmentRecord *)
<IMDAttachmentRecord %p [%p]>{}
-[IMDDatabase(Attachments) deleteAttachmentsDirectWithPredicate:]
Deleting attachments filtered by predicate %@
SQLite returned %d from deleteAttachmentsByPredicate
-[IMDDatabase(Attachments) fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:]
Fetching attachments filtered by predicate: %@ limit: %llu
CREATE TABLE _SqliteDatabaseProperties (key TEXT, value TEXT, UNIQUE(key));
CREATE TABLE message (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, text TEXT, replace INTEGER DEFAULT 0, service_center TEXT, handle_id INTEGER DEFAULT 0, subject TEXT, country TEXT, attributedBody BLOB, version INTEGER DEFAULT 0, type INTEGER DEFAULT 0, service TEXT, account TEXT, account_guid TEXT, error INTEGER DEFAULT 0, date INTEGER, date_read INTEGER, date_delivered INTEGER, is_delivered INTEGER DEFAULT 0, is_finished INTEGER DEFAULT 0, is_emote INTEGER DEFAULT 0, is_from_me INTEGER DEFAULT 0, is_empty INTEGER DEFAULT 0, is_delayed INTEGER DEFAULT 0, is_auto_reply INTEGER DEFAULT 0, is_prepared INTEGER DEFAULT 0, is_read INTEGER DEFAULT 0, is_system_message INTEGER DEFAULT 0, is_sent INTEGER DEFAULT 0, has_dd_results INTEGER DEFAULT 0, is_service_message INTEGER DEFAULT 0, is_forward INTEGER DEFAULT 0, was_downgraded INTEGER DEFAULT 0, is_archive INTEGER DEFAULT 0, cache_has_attachments INTEGER DEFAULT 0, cache_roomnames TEXT, was_data_detected INTEGER DEFAULT 0, was_deduplicated INTEGER DEFAULT 0, is_audio_message INTEGER DEFAULT 0, is_played INTEGER DEFAULT 0, date_played INTEGER, item_type INTEGER DEFAULT 0, other_handle INTEGER DEFAULT -1, group_title TEXT, group_action_type INTEGER DEFAULT 0, share_status INTEGER, share_direction INTEGER, is_expirable INTEGER DEFAULT 0, expire_state INTEGER DEFAULT 0, message_action_type INTEGER DEFAULT 0, message_source INTEGER DEFAULT 0);
CREATE TABLE chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, room_name TEXT, account_login TEXT, is_archived INTEGER DEFAULT 0, last_addressed_handle TEXT, display_name TEXT, group_id TEXT, is_filtered INTEGER DEFAULT 0, successful_query INTEGER DEFAULT 1);
CREATE TABLE attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, created_date INTEGER DEFAULT 0, start_date INTEGER DEFAULT 0, filename TEXT, uti TEXT, mime_type TEXT, transfer_state INTEGER DEFAULT 0, is_outgoing INTEGER DEFAULT 0, user_info BLOB, transfer_name TEXT, total_bytes INTEGER DEFAULT -1);
CREATE TABLE handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) );
CREATE TABLE message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
CREATE TABLE chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, PRIMARY KEY (chat_id, message_id));
CREATE TABLE chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
CREATE TABLE deleted_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL);
_SqliteDatabaseProperties
CREATE INDEX message_idx_is_read ON message(is_read, is_from_me, is_finished);
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error);
CREATE INDEX message_idx_handle ON message(handle_id, date);
CREATE INDEX message_idx_was_downgraded ON message(was_downgraded);
CREATE INDEX chat_message_join_idx_message_id ON chat_message_join(message_id, chat_id);
CREATE INDEX message_idx_date ON message(date);
CREATE INDEX chat_idx_chat_identifier_service_name ON chat(chat_identifier, service_name);
CREATE INDEX chat_idx_chat_identifier ON chat(chat_identifier);
CREATE INDEX chat_idx_chat_room_name_service_name ON chat(room_name, service_name);
CREATE INDEX message_attachment_join_idx_message_id ON message_attachment_join(message_id);
CREATE INDEX chat_handle_join_idx_handle_id ON chat_handle_join(handle_id);
CREATE INDEX message_attachment_join_idx_attachment_id ON message_attachment_join(attachment_id);
CREATE INDEX message_idx_handle_id ON message(handle_id);
CREATE INDEX chat_message_join_idx_chat_id ON chat_message_join(chat_id);
CREATE INDEX message_idx_other_handle ON message(other_handle);
CREATE INDEX message_idx_expire_state ON message(expire_state);
CREATE INDEX chat_message_join_idx_message_id_only ON chat_message_join(message_id);
CREATE INDEX chat_idx_is_archived ON chat(is_archived);
CREATE TRIGGER after_delete_on_chat AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END;
CREATE TRIGGER after_delete_on_message_attachment_join AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_insert_on_message_attachment_join AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END;
CREATE TRIGGER add_to_deleted_messages AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END;
CREATE TRIGGER after_delete_on_chat_message_join AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1); END;
CREATE TRIGGER after_delete_on_chat_handle_join AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_delete_on_message AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER before_delete_on_attachment BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END;
CREATE TRIGGER after_delete_on_attachment AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END;
CREATE TRIGGER after_insert_on_chat_message_join  AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END;
Database downgrade failed with error: %@
SELECT ROWID FROM chat WHERE GUID = ?
SELECT ROWID FROM message WHERE GUID = ?
SELECT ROWID FROM attachment WHERE GUID = ?
SELECT ROWID FROM handle WHERE id = ? AND service = ?
INSERT INTO chat (  guid,   style,   state,   properties,   chat_identifier,   service_name,   room_name,   is_archived ) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO handle ( id,  service )  VALUES (  ?,  ? );
INSERT OR IGNORE INTO chat_handle_join ( chat_id,  handle_id )  VALUES (  ?,  ? );
INSERT INTO attachment ( guid,  created_date,  start_date,  filename,  uti,  mime_type,  transfer_state,  is_outgoing,  transfer_name,  total_bytes) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO message ( guid,  text,  handle_id,  subject,  attributedBody,  service,  account,  account_guid,  error,  date,  date_read,  date_delivered,  is_delivered,  is_finished,  is_emote,  is_from_me,  is_empty,  is_delayed,  is_auto_reply,  is_prepared,  is_read,  is_system_message,  is_sent,  is_service_message,  is_forward,  is_archive,  order_date ) VALUES ( ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ? );
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?)
importbackup
MessageImport
Backing up database to %@
ALTER TABLE message ADD COLUMN order_date INTEGER DEFAULT 0
UPDATE message SET order_date = date
SELECT ROWID, date FROM message ORDER BY ROWID ASC
UPDATE message SET order_date = ? where ROWID = ?
DROP INDEX IF EXISTS %@
IMDMessageImportEnd
ALTER TABLE message RENAME TO message_import
CREATE INDEX message_import_idx ON message_import(date, ROWID)
INSERT INTO message (guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated) SELECT guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC;
CREATE TABLE IF NOT EXISTS message_new_to_old (            ROWID        INTEGER PRIMARY KEY,            old_rowid    INTEGER            ); 
INSERT INTO message_new_to_old (old_rowid) SELECT message_import.ROWID FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC
CREATE INDEX message_new_to_old_idx ON message_new_to_old(old_rowid);
ALTER TABLE chat_message_join RENAME TO chat_message_join_import
CREATE TABLE IF NOT EXISTS chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id));
INSERT INTO chat_message_join    SELECT cmi.chat_id, mno.ROWID, mno.date    FROM      chat_message_join_import cmi    INNER JOIN message_new_to_old mno ON      cmi.message_id = mno.old_rowid    ; 
ALTER TABLE message_attachment_join RENAME TO message_attachment_join_import
CREATE TABLE IF NOT EXISTS message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
INSERT INTO message_attachment_join   SELECT mno.ROWID, mai.attachment_id   FROM     message_attachment_join_import mai   INNER JOIN message_new_to_old mno ON     mai.message_id = mno.old_rowid   ;
UPDATE message SET cache_has_attachments = IFNULL((SELECT 1 FROM message_attachment_join maj WHERE message.ROWID = maj.message_id LIMIT 1), 0)
UPDATE message SET cache_roomnames = (                           SELECT group_concat(c.room_name)                           FROM                             chat c                           INNER JOIN                             chat_message_join j                           ON                             c.ROWID = j.chat_id                           WHERE                             j.message_id = message.ROWID                           ) WHERE message.ROWID = (select j.message_id FROM chat c INNER JOIN chat_message_join j ON c.rowid = j.chat_id WHERE c.room_name IS NOT NULL); 
DELETE FROM message WHERE (SELECT 1 from chat_message_join cmj WHERE message.ROWID = cmj.message_id LIMIT 1) IS NULL;
DELETE FROM attachment WHERE (SELECT 1 from message_attachment_join maj WHERE attachment.ROWID = maj.attachment_id LIMIT 1) IS NULL
Successful import! This is not an internal install so let's delete the backup database stored at %@
IMDCopyGUIDForImportedOneToOneChat
Creating chat for guid: %@
Created new chat with row id: %lld
Creating handle for: %lld
Already have chat for guid: %@
IMDCopyGUIDForImportedChat
Created new chat: %lld
Creating handle for: %@
Import attachment %@ with data
Import attachment %@ with filePath %@
IMDImportMessage
SELECT MIN(ROWID) FROM message m WHERE m.ROWID IN (SELECT message_id FROM chat_message_join where chat_id = ?) AND m.text = ? AND m.date > ? AND m.date < ?
Found duplicate for %@ at %lld
Found chat for guid: %@
Created message for guid: %@  associating with chat: %@
Not inserting %@  already have message in chat: %@
Associated attachment GUID %@ with message GUID: %@
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?)
_IMDServerImportAttachmentWithDataOrPath
Created attachment id %lld with path %@ for guid %@
Already have an attachment for guid %@
Attempted to create IMDMessageRecordRef from nil IMItem.
Attempting to create a TU Conversation item with guid %@ conversationUUID: %@
Exception caught creating IMDMessageRecordRef from IMItem: %@   (%@)
Attempting to create participant change item with GUID: %@  %@  %@ => %@
invite
remove
Attempting to create title item with GUID: %@   title: %@
Attempting to create title item with GUID: %@
Attempting to add group leave GUID: %@ %@ => %@
start sharing
stop sharing
unknown
incoming
outgoing
Attempting location share update to chat guid GUID: %@  (%@:%@) %@ => %@
save audio
save video
save app
Attempting to add message action GUID: %@ (%@) %@ => %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDMessageStore_PersistenceUtilities.m
IMDMessageRecordRef IMDCreateIMDMessageRecordRefFromIMMessageItem(IMItem *)
IMDCreateIMDMessageRecordRefFromIMMessageItem
Unexpected not equal '%@ (%@) != %@ (%@)' in %s at %s:%d. %@
[imMessageItem type]
IMDMessageRecordItemTypeMessage
[imMessageItem isKindOfClass:[IMAssociatedMessageItem class]]
msg-room-%@
msg-handle-%@
Updating IMMessageItem: %@ from IMMessageItem: %@
Updating IMItem: %@ from IMItem: %@
APPROVE_FOR_15_MINUTES
APPROVE_FOR_AN_HOUR
APPROVE_ALL_DAY
DONT_APPROVE
CSDBSqliteDatabase *IMDSharedSqliteDatabase(void)
NSString *IMDSharedSqliteDatabasePath(void)
Sqlite database path is nil
com.apple.IMDSMSRecordStore.MessagesRecordStore
_MessagesRecordStore
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore(void)_block_invoke
CSDBCreateThreadedRecordStore failed
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore(void)
CSDBCreateThreadedRecordStore should not be nil. Did attempt to init: %@
CSDBRecordStoreRef CSDBSharedRecordStore(void)
void IMDEnsureSharedRecordStoreInitialized(void)
recordStore is nil, will not initialize
^{__CFString=}8@?0
store
void _initializeDB(CSDBRecordStoreRef, CSDBSqliteConnection *)
void _initializeConnection(CSDBSqliteDatabase *, CSDBSqliteConnection *)
PRAGMA foreign_keys = ON;
delete_attachment_path
before_delete_attachment_path
after_delete_message_plugin
im_trim
vacuum;
ANALYZE;
PRAGMA wal_checkpoint(RESTART);
v16@?0@"CSDBThreadedRecordStore"8
DeleteSequenceNumber
_Bool _databaseVersionCanBeMigrated(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
CSDBSqliteMigrationContinuation _performMigrationCallback(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
vacuum
com.apple.MobileSMS.Migration.Migration_Successful
com.apple.MobileSMS.Migration.Migration_Failure
BOOL _IMDCheckDatabaseIntegrity(CSDBSqliteDatabase *, CSDBSqliteConnection *)
com.apple.MobileSMS.InitialIntegrityCheck_Failure
REINDEX
com.apple.MobileSMS.Migration.Reindex_Success
com.apple.MobileSMS.Migration.Reindex_Failure
com.apple.MobileSMS.PostReindex.IntegrityCheck_Failure
com.apple.MobileSMS.Migration.Vacuum_Success
com.apple.MobileSMS.Migration.Vacuum_Failure
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Success
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Failure
com.apple.MobileSMS.PostReindex.IntegrityCheck_Success
com.apple.MobileSMS.InitialIntegrityCheck_Success
BOOL IMDSqliteDatabaseCheckIntegrity(CSDBSqliteConnection *)
com.apple.MobileSMS.Migration.IntegrityCheck_Failure
BOOL IMDSqlOperationIsQueryIndexed(IMDSqlOperation *, NSArray **)
detail
SCAN TABLE
*** Query is indexed: %@
    query: %@
         : %@
BOOL IMDSqlOperationColumnExistsOnTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef)
columnName
PRAGMA table_info(%@);
BOOL IMDSqlOperationAddColumnIfNotExistsToTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef, CFStringRef)
typeAndDefault
ALTER TABLE %@ ADD COLUMN %@ %@;
BOOL IMDSqlOperationAddColumnIfNotExistsToTable(CFStringRef, CFStringRef, CFStringRef)
uint64_t IMDSqlOperationGetRowCountForTable(CFStringRef)
SELECT count(*) from %@;
CFStringRef IMDSqlOperationGetDatabasePath(IMDSqlOperation *)
main
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperationUtilities.m
BOOL IMDDatabaseCopy(NSString *, NSString *, NSError **)
IMDDatabaseCopy
fromPath
toPath
[[fromPath pathExtension] isEqualToString:@"db"]
[[toPath pathExtension] isEqualToString:@"db"]
Unable to open source database at %@ (%d)
Unable to open destination database at %@ (%d)
Unable to replace database at %@ (%d)
chat_message_join_idx_message_id_only
chat_message_join(message_id)
chat_message_join_idx_chat_id
chat_message_join(chat_id)
chat_message_join_idx_message_date_id_chat_id
chat_message_join(chat_id, message_date, message_id)
chat_handle_join_idx_handle_id
chat_handle_join(handle_id)
message_attachment_join_idx_attachment_id
message_attachment_join(attachment_id)
message_attachment_join_idx_message_id
message_attachment_join(message_id)
message_idx_failed
message(is_finished, is_from_me, error)
message_idx_handle
message(handle_id, date)
message_idx_handle_id
message(handle_id)
message_idx_other_handle
message(other_handle)
message_idx_is_read
message(is_read, is_from_me, is_finished)
message_idx_was_downgraded
message(was_downgraded)
message_idx_date
message(date)
message_idx_cache_has_attachments
message(cache_has_attachments)
message_idx_is_sent_is_from_me_error
message(is_sent, is_from_me, error)
message_idx_expire_state
message(expire_state)
message_idx_associated_message
message(associated_message_guid)
message_idx_isRead_isFromMe_itemType
message(is_read, is_from_me, item_type)
message_idx_thread_originator_guid
message(thread_originator_guid)
chat_idx_is_archived
chat(is_archived)
chat_idx_chat_identifier_service_name
chat(chat_identifier, service_name)
chat_idx_chat_identifier
chat(chat_identifier)
chat_idx_chat_room_name_service_name
chat(room_name, service_name)
chat_idx_group_id
chat(group_id)
message_processing_task_idx_guid_task_flags
message_processing_task(guid, task_flags)
attachment_idx_purged_attachments_v2
attachment(hide_attachment,ck_sync_state,transfer_state) WHERE hide_attachment=0 AND (ck_sync_state=1 OR ck_sync_state=4) AND transfer_state=0
message_idx_undelivered_one_to_one_imessage
message(cache_roomnames,service,is_sent,is_delivered,was_downgraded,item_type) where cache_roomnames IS NULL AND service = 'iMessage' AND is_sent = 1 AND is_delivered = 0 AND was_downgraded = 0 AND item_type == 0
CREATE INDEX IF NOT EXISTS %@ ON %@;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDIndexes.m
BOOL IMDCreateIndexesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateIndexesWithOperation
SELECT name, sql FROM sqlite_master WHERE type = 'index'
sqlite_autoindex
DROP INDEX %@
SELECT name FROM sqlite_master WHERE type = 'index';
SELECT name, sql FROM sqlite_master WHERE type = 'index';
expected: %@:%@
  actual: %@:%@
xpc_object_t IMDSqlOperationGetXpcRows(IMDSqlOperation *)
xpc_object_t IMDSqlOperationGetXpcRowsForQuery(CFStringRef)
IMDPersistenceXPCNotAllowedInTest
Called into IMDPersistence XPC layer while in a test
__xpc_wants_reply__
createdDate
startDate
transferName
utiType
mimeType
transferState
isOutgoing
userInfo
stickerUserInfo
hideAttachment
totalBytes
cloudKitSyncState
cloudKitServerChangeTokenBlob
cloudKitRecordID
originalGUID
isLegacyGUID
spath
options
attachmentClass
numRecents
bytesToFreeUp
chatLimit
attachmentLimit
watermark
startingOffset
queryType
rowid
updatedGuid
chatIdentifiers
services
aliases
cnRecordID
unformattedID
personCentricID
uncanonicalizedID
associatedMessageGUID
guids
lowerRowID
maxRowID
rowIDs
roomname
threadIdentifier
only_messages
only_unread
numberOfMessagesBefore
numberOfMessagesAfter
lastAddressedHandles
oldLastAddressedSIMID
newLastAddressedSIMID
newLastAddressedHandle
lastAddressedLabelIDs
body
servicesToSkip
guidsToSkip
searchAfter
chatServices
includeFromMe
replaceID
afterRowID
originalMessageGUID
chatID
dateRef
fromMe
fallbackGUID
addresses
dateRead
dateDelivered
datePlayed
accountGUID
handleString
countryCode
itemType
otherHandleID
groupActionType
shareStatus
shareDirection
groupTitle
expireState
messageActionType
associatedMessageRangeLocation
associatedMessageRangeLength
timeExpressiveSendPlayed
cloudKitRecordChangeTag
dataDetectorsInfo
replyToGUID
sortID
threadOriginatorGUID
threadOriginatorPart
syncedSyndicationRanges
partCount
dateEdited
messageID
fzGuid
fzDate
fzDateRead
fzDateDelivered
fzDatePlayed
fzBody
fzAttributedBody
fzFlags
fzService
fzAccount
fzAccountGUID
fzSubject
fzError
fzType
timePlayedExpressiveSend
propertiesData
lastAddressedLocalHandle
accountLogin
isArchived
hasHadSuccessfulQuery
engramID
serverChangeToken
ckSyncState
originalGroupID
lastReadMessageTimeStamp
lastAddressedSIMID
isRecovered
complete
request
IMDPersistence
Progressive copy of all chats started
Progressive copy of all chats completed with %d messages
knownSenderLimit
otherFilterLimit
batchSize
messageGUIDS
__xpc_event_code__
winning_guid
losing_guids
display_name_update
backup_path
message_count
target_db_path
sender
file
Could not generate sandbox extension for path %@, errno %d
Could not generate sandbox extension for path %@
extension
recipients
isIncoming
source
destination
ckRecordID
recordIDs
fromError
toError
syncCounts
afterRow
data
context
Asked to post Started SharePlay from Messages notification for chat GUID %@, FaceTime conversation UUID %@, handleIdentifier %@, and localizedApplicationName %@
IMAutomaticHistoryDeletionAgent
Cleansing orphaned attachments
IMDMessageAutomaticHistoryDeletion
Deleting previews older than last 200
Finished previews older than last 200
Cleansing orphaned sticker transfer user info
Cleansing orphaned sticker attachments
Cleansing browser snapshot cache
permanently deleting messages not in recently deleted older than %ld days
deleting attachments older than %ld days
permanently deleting messages in recently deleted older than %lld days
permanently deleting messages filtered as junk older than %lld days
  => Cleaning up orphaned messages
Cleansing database
deleting spotlight archive files
~/Library/Messages/Archive
main folder path found %@
could not messages archive director, error:
deleteDirectoryAtPath: Deleting directory at path %@
deleteDirectoryAtPath:  path is nil
isFileHeaderDateAtPathOlderThanDays: checking file at path %@
EndTime
isFileHeaderDateAtPathOlderThanDays: date modified %@
isFileHeaderDateAtPathOlderThanDays: dateCreated or dateMod is nil
isDirCreationDateAtPathOlderThanDays: checking how old dir at %@ is
isDirCreationDateAtPathOlderThanDays:path attributes are %@
isDirCreationDateAtPathOlderThanDays: Could not locate directory at path
_getiChatFileMetadataForPath: data %@
metadata
Failed to unarchive iChat file metadata. Error: %@
.DS_Store
age-category
TEEN
IMDFamilyInviteNotificationContext
FAFetchFamilyCircleRequest returned nil
VIEW_INVITATION
messageSubTitle
messageSubTitleTeen
messageTitle
Cleaning Database
%@ is not implemented
UPDATE OR IGNORE handle SET id = CASE ROWID 
WHEN %@ THEN '%@' 
%@, 
END WHERE ROWID IN %@
No predicate provided to %s
-[IMDDatabase(Chats) chatRecordsFilteredByPredicate:]
Fetching chats filtered by predicate: %@
-[IMDDatabase(Chats) fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:]
Fetching chats filtered by predicate: %@ sortDescriptors: %llu limit: %llu
-[IMDDatabase(Chats) fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:]
Fetching chats sorted by recent and filtered by predicate: %@ olderThan: %@ limit: %llu
No identifier provided to %s
-[IMDDatabase(Chats) chatRecordsWithIdentifier:]
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    chat_identifier = ? ORDER BY chat.ROWID ASC;
No pinning identifier (%@) provided to %s
-[IMDDatabase(Chats) fetchChatRecordsWithPinningIdentifier:completionHandler:]
Found %llu pinned chats using chatIdentifier %@
Found %llu pinned chats using groupID %@
%K = %@
Found %llu pinned chats using participantHash %@
No handles (%llu) or service (%@) provided to %s
-[IMDDatabase(Chats) _fetchChatRecordsWithHandles:allowSubsetMatching:serviceName:displayName:groupID:style:completionHandler:]
No group IDs provided to %s
-[IMDDatabase(Chats) fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:]
Found groupPhotoGUID %@ for chat with groupID %@
Transfer invalid for groupPhotoGUID: %@ filename: %@ state: %d
Recently Deleted | Will begin moving messages to recoverable message table with deleteDate: %@ for %lu chatGUIDs
INSERT OR REPLACE INTO chat_recoverable_message_join (chat_id, message_id, delete_date) SELECT cmj.chat_id, cmj.message_id, ? FROM chat_message_join AS cmj JOIN chat ON cmj.chat_id = chat.ROWID AND chat.guid = ? AND cmj.message_date < ?;
DELETE FROM chat_message_join WHERE chat_id = ? AND message_id IN ( SELECT message_id FROM chat_recoverable_message_join WHERE chat_id = ?);
Recently Deleted | Finished moving messages to recoverable message table for %lu chatGUIDs
Recently Deleted | Will begin recovering messages for %lu unique chatGUIDs
 SELECT m.guid FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON crmj.chat_id = c.ROWID AND c.guid = ? JOIN message AS m  ON crmj.message_id = m.ROWID;
Recently Deleted: Unexpected column in recoverable message in chat %@ with index %d
INSERT INTO chat_message_join (chat_id, message_id, message_date) SELECT crmj.chat_id, crmj.message_id, m.date FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON crmj.chat_id = c.ROWID AND c.guid = ? JOIN message AS m  ON crmj.message_id = m.ROWID;
DELETE FROM chat_recoverable_message_join WHERE message_id IN ( SELECT message_id FROM chat_message_join);
Recently Deleted | Finished recovering messages for %lu unique chatGUIDs
v32@?0@"NSString"8@"NSArray"16^B24
Recently Deleted | Finished recovering message parts for %lu unique chatGUIDs
UPDATE message SET attributedBody = ?, text = ?   WHERE message.guid = ?;
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, rmp.part_index  FROM recoverable_message_part AS rmp  JOIN chat AS c   ON c.ROWID=rmp.chat_id  JOIN message AS m   ON m.ROWID=rmp.message_id AND m.guid=? AND rmp.ck_sync_state=1;
DELETE FROM recoverable_message_part WHERE message_id IN (  SELECT ROWID  FROM message AS m  WHERE m.guid = ?);
SELECT attributedBody FROM message WHERE message.guid = ?;
Recently Deleted: Unexpected column in recoverable message parts metadata query with index %d
SELECT m.guid, rmp.part_text FROM recoverable_message_part AS rmp JOIN chat AS c ON c.ROWID = rmp.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = rmp.message_id;
Unexpected column in recoverable message parts metadata query with index %d
Parts: Error in column values returned: %@|%@
WITH recoverable_tables_union_all (chat_guid, message_id, delete_date) as (  SELECT c.guid, crmj.message_id, crmj.delete_date  FROM chat_recoverable_message_join AS crmj  JOIN chat AS c  ON c.ROWID = crmj.chat_id   UNION ALL  SELECT c.guid, rmp.message_id, rmp.delete_date  FROM recoverable_message_part AS rmp  JOIN chat AS c  ON c.ROWID = rmp.chat_id ) SELECT chat_guid, COUNT(message_id), MIN(delete_date), MAX(delete_date)  FROM recoverable_tables_union_all AS rtua  JOIN message as m  ON rtua.message_id = m.ROWID  WHERE NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))  GROUP BY rtua.chat_guid;
Unexpected column in recoverable message metadata query with index %d
Error in column values returned: %@|%llu|%llu|%llu
recoverableMessagesCount
earliestDeleteDateInterval
latestDeleteDateInterval
SELECT c.guid FROM chat_recoverable_message_join AS crmj JOIN message AS m ON m.ROWID = crmj.message_id  JOIN chat AS c ON c.ROWID = crmj.chat_id WHERE (   crmj.delete_date < ?  AND   NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))  ) GROUP BY    c.guid  
Unexpected column in affected chat query with index %d
Found %llu chats affected by message deletion
SELECT c.guid FROM chat_message_join AS cmj JOIN message AS m ON m.ROWID = cmj.message_id  JOIN chat AS c ON c.ROWID = cmj.chat_id WHERE (   m.date < ?  AND   c.is_filtered = 2 ) GROUP BY    c.guid  
Chat with guid %@ has %lld messages and %lld recoverable messages
Deleting empty chat %@, cloud sync enabled is %@
Recently Deleted | Parts: Deleting transfer GUID: %@ for recoverable message part for messageGUID: %@
Recently Deleted | Parts: Finished deleting recoverable message parts transfers for chatGUID: %@
Exception attempting to generate SQL where clause: %@
BETWEEN
Invalid predicate, contains unsupported operator
 AND 
 OR 
Invalid predicate, contains unsupported compound predicate type
Invalid predicate, unsupported constant %@
( %@ )
Invalid predicate, unsupported column %@
Invalid predicate, contains unsupported expression type
( %@ %@ %@ )
Invalid predicate, unsupported predicate type
SELECT   c.ROWID, c.guid FROM   chat c WHERE   c.style != 45 
UPDATE   chat SET     chat_identifier = ?,     room_name = ? WHERE     ROWID = ?
%s%@
DELETE FROM attachment 
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment 
wrong number of arguments
Failed to create index pieces_message_index.
Created index pieces_message_index.
CREATE INDEX pieces_message_index ON msg_pieces(message_id);
Failed to create index madrid_handle_index.
Created index madrid_handle_index.
CREATE INDEX madrid_handle_index ON message(madrid_handle);
Failed to create index madrid_guid_index.
Created index madrid_guid_index.
CREATE INDEX madrid_guid_index ON message(madrid_guid);
Failed to create index madrid_roomname_index.
Created index madrid_roomname_index.
CREATE INDEX madrid_roomname_index ON message(madrid_roomname);
Failed to create index madrid_service_index.
Created index madrid_service_index.
CREATE INDEX madrid_service_index ON message(madrid_service);
Failed to create index madrid_account_index.
Created index madrid_account_index.
CREATE INDEX madrid_account_index ON message(madrid_account);
Failed to create index madrid_url_index.
Created index madrid_url_index.
CREATE INDEX madrid_url_index ON message(madrid_url);
Failed to create index madrid_flags_index.
Created index madrid_flags_index.
CREATE INDEX madrid_flags_index ON message(madrid_flags);
Failed to drop index madrid_handle_index.
Dropped index madrid_handle_index.
DROP INDEX madrid_handle_index;
Failed to drop index madrid_roomname_index.
Dropped index madrid_roomname_index.
DROP INDEX madrid_roomname_index;
Failed to drop index madrid_service_index.
Dropped index madrid_service_index.
DROP INDEX madrid_service_index;
Failed to drop index madrid_account_index.
Dropped index madrid_account_index.
DROP INDEX madrid_account_index;
Failed to drop index madrid_url_index.
Dropped index madrid_url_index.
DROP INDEX madrid_url_index;
Failed to drop index madrid_flags_index.
Dropped index madrid_flags_index.
DROP INDEX madrid_flags_index;
Failed to create index madrid_roomname_service_index.
Created index madrid_roomname_service_index.
CREATE INDEX madrid_roomname_service_index ON message(madrid_roomname, madrid_service);
Failed to create index madrid_handle_service_index.
Created index madrid_handle_service_index.
CREATE INDEX madrid_handle_service_index ON message(madrid_handle, madrid_service);
CREATE INDEX message_group_index ON message(group_id, ROWID);
Failed to create index madrid_attachment_message_index.
Created index madrid_attachment_message_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_message_index ON madrid_attachment(message_id);
Failed to create index madrid_attachment_guid_index.
Created index madrid_attachment_guid_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_guid_index ON madrid_attachment(attachment_guid);
Failed to create index madrid_attachment_filename_index.
Created index madrid_attachment_filename_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_filename_index ON madrid_attachment(filename);
Failed to create madrid_attachment table
Created madrid_attachment table
CREATE TABLE IF NOT EXISTS madrid_attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, attachment_guid TEXT, created_date INTEGER, start_date INTEGER, filename TEXT, uti_type TEXT, mime_type TEXT, transfer_state INTEGER, is_incoming INTEGER, message_id INTEGER)
Failed to create madrid_chat table
Created madrid_chat table
CREATE TABLE madrid_chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, guid TEXT, room_name TEXT, account_login TEXT, participants BLOB)
Failed to create index madrid_chat_style_index.
Created index madrid_chat_style_index.
CREATE INDEX IF NOT EXISTS madrid_chat_style_index ON madrid_chat(style)
Failed to create index madrid_chat_state_index.
Created index madrid_chat_state_index.
CREATE INDEX IF NOT EXISTS madrid_chat_state_index ON madrid_chat(state)
Failed to create index madrid_chat_account_id_index.
Created index madrid_chat_account_id_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_id_index ON madrid_chat(account_id)
Failed to create index madrid_chat_chat_identifier_index.
Created index madrid_chat_chat_identifier_index.
CREATE INDEX IF NOT EXISTS madrid_chat_chat_identifier_index ON madrid_chat(chat_identifier)
Failed to create index madrid_chat_service_name_index.
Created index madrid_chat_service_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_service_name_index ON madrid_chat(service_name)
Failed to create index madrid_chat_guid_index.
Created index madrid_chat_guid_index.
CREATE INDEX IF NOT EXISTS madrid_chat_guid_index ON madrid_chat(guid)
Failed to create index madrid_chat_room_name_index.
Created index madrid_chat_room_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_room_name_index ON madrid_chat(room_name)
Failed to create index madrid_chat_account_login_index.
Created index madrid_chat_account_login_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_login_index ON madrid_chat(account_login)
Failed to drop table: %@
Successfully dropped table: %@
Failed to drop index: %@
Successfully dropped index: %@
DROP INDEX IF EXISTS %@;
Failed to create index: %@
Successfully created index: %@
Failed to create table msg_pieces.
Created table msg_pieces.
CREATE TABLE IF NOT EXISTS msg_pieces (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, message_id INTEGER, data BLOB, part_id INTEGER, preview_part INTEGER, content_type TEXT, height INTEGER, version INTEGER, flags INTEGER, content_id TEXT, content_loc TEXT, headers BLOB);
Failed to add column subject.
Added column subject.
ALTER TABLE message ADD COLUMN subject TEXT
Failed to add column country.
Added column country.
ALTER TABLE message ADD COLUMN country TEXT
Failed to add column headers.
Added column headers.
ALTER TABLE message ADD COLUMN headers BLOB
Failed to add column recipients.
Added column recipients.
ALTER TABLE message ADD COLUMN recipients BLOB
Failed to add column hash.
Added column hash.
ALTER TABLE msg_group ADD COLUMN hash INTEGER
Failed to add index hash_index.
Added index hash_index.
CREATE INDEX hash_index ON msg_group(hash)
ALTER TABLE group_member ADD COLUMN country TEXT
Failed to add column content_id.
Added column content_id.
ALTER TABLE msg_pieces ADD COLUMN content_id TEXT;
Failed to add column content_loc.
Added column content_loc.
ALTER TABLE msg_pieces ADD COLUMN content_loc TEXT;
ALTER TABLE msg_pieces ADD COLUMN headers BLOB;
Failed to add column madrid_attributedBody.
Added column madrid_attributedBody.
ALTER TABLE message ADD COLUMN madrid_attributedBody BLOB
Failed to add column madrid_handle.
Added column madrid_handle.
ALTER TABLE message ADD COLUMN madrid_handle TEXT
Failed to add column madrid_version.
Added column madrid_version.
ALTER TABLE message ADD COLUMN madrid_version INTEGER
Failed to add column madrid_guid.
Added column madrid_guid.
ALTER TABLE message ADD COLUMN madrid_guid TEXT
Failed to add column madrid_type.
Added column madrid_type.
ALTER TABLE message ADD COLUMN madrid_type INTEGER
Failed to add column madrid_roomname.
Added column madrid_roomname.
ALTER TABLE message ADD COLUMN madrid_roomname TEXT
Failed to add column madrid_service.
Added column madrid_service.
ALTER TABLE message ADD COLUMN madrid_service TEXT
Failed to add column madrid_account.
Added column madrid_account.
ALTER TABLE message ADD COLUMN madrid_account TEXT
Failed to add column madrid_flags.
Added column madrid_flags.
ALTER TABLE message ADD COLUMN madrid_flags INTEGER
Failed to add column madrid_attachmentInfo.
Added column madrid_attachmentInfo.
ALTER TABLE message ADD COLUMN madrid_attachmentInfo BLOB;
Failed to add column madrid_url.
Added column madrid_url.
ALTER TABLE message ADD COLUMN madrid_url TEXT
Failed to add column madrid_error.
Added column madrid_error.
ALTER TABLE message ADD COLUMN madrid_error INTEGER
Failed to add column is_madrid.
Added column is_madrid.
ALTER TABLE message ADD COLUMN is_madrid INTEGER;
Failed to add column read.
Added column read.
ALTER TABLE message ADD COLUMN read INTEGER
Failed to update flags.
Updated flags.
UPDATE message SET read = ((flags >> 1) & 1)
Failed to create index update message_groupid_read_index.
Created index message_groupid_read_index.
CREATE INDEX message_groupid_read_index ON message(group_id, read)
CREATE TABLE IF NOT EXISTS handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) )
BOOL IMDLegacyMigrator(IMDSqlOperation *, int)
read
MobileSMS DB Migration failed while dropping message_group_index.
Successfully dropped index message_group_index.
DROP INDEX message_group_index;
MobileSMS DB Migration failed while creating message_group_index.
Created index message_group_index
MobileSMS DB Migration failed adding madrid_error column to message table.
Added madrid_error column.
ALTER TABLE message ADD COLUMN madrid_error INTEGER;
MobileSMS DB Migration failed adding is_madrid column to message table.
Added column is_madrid
MobileSMS DB Migration failed creating index madrid_flags_index.
Added index madrid_flags_index.
MobileSMS DB Migration failed adding column madrid_date_read.
Added column madrid_date_read.
ALTER TABLE message ADD COLUMN madrid_date_read INTEGER;
MobileSMS DB Migration failed adding column madrid_date_delivered.
Added column madrid_date_delivered.
ALTER TABLE message ADD COLUMN madrid_date_delivered INTEGER;
MobileSMS DB Migration failed adding index group_id_index
Added index group_id_index
CREATE INDEX group_id_index ON group_member(group_id);
MobileSMS DB Migration failed updating the values for is_madrid.
Updated values for is_madrid.
UPDATE message SET is_madrid = 0 WHERE is_madrid IS NULL;
MobileSMS DB Migration failed adding column madrid_account_guid.
Added column madrid_account_guid.
ALTER TABLE message ADD COLUMN madrid_account_guid TEXT;
MobileSMS DB migration failed to rename group_member table.
Renamed group_member table.
ALTER TABLE group_member RENAME TO group_member_legacy;
MobileSMS DB migration failed to rename madrid_attachment table.
Renamed madrid_attachment table.
ALTER TABLE madrid_attachment RENAME TO madrid_attachment_legacy;
MobileSMS DB migration failed to rename madrid_chat table.
Renamed madrid_chat table.
ALTER TABLE madrid_chat RENAME TO madrid_chat_legacy;
Renamed message table.
ALTER TABLE message RENAME TO message_legacy;
MobileSMS DB migration failed to rename msg_group table.
Renamed msg_group table.
ALTER TABLE msg_group RENAME TO msg_group_legacy;
MobileSMS DB migration failed to rename msg_pieces table.
Renamed msg_pieces table.
ALTER TABLE msg_pieces RENAME TO msg_pieces_legacy;
SELECT is_archived FROM chat
MobileSMS DB migration failed to add column is_archived to the chat table.
Added is_archived column to the chat table.
ALTER TABLE chat ADD COLUMN is_archived DEFAULT 0
PRAGMA vacuum
SELECT was_data_detected FROM message
MobileSMS DB migration failed to add column was_data_detected to the message table.
Added was_data_detected column to the message table.
ALTER TABLE message ADD COLUMN was_data_detected INTEGER DEFAULT 0
SELECT last_addressed_handle FROM chat
MobileSMS DB migration failed to add column last_addressed_handle to the chat table.
Added last_addressed_handle column to the chat table.
ALTER TABLE chat ADD COLUMN last_addressed_handle TEXT
MobileSMS DB migration failed to delete V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
Dropped unneeded V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
SELECT was_deduplicated FROM message
MobileSMS DB migration failed to add column was_deduplicated to the message table.
Added was_deduplicated column to the message table.
ALTER TABLE message ADD COLUMN was_deduplicated INTEGER DEFAULT 0
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error)
CREATE INDEX IF NOT EXISTS message_idx_handle ON message(handle_id, date);
chat_idx_identifier
CREATE INDEX IF NOT EXISTS chat_idx_identifier ON chat(chat_identifier)
chat_idx_room_name
CREATE INDEX IF NOT EXISTS chat_idx_room_name ON chat(room_name)
CREATE INDEX IF NOT EXISTS message_idx_was_downgraded ON message(was_downgraded);
chat_message_join_idx_message_id
CREATE INDEX IF NOT EXISTS chat_message_join_idx_message_date_id_chat_id ON chat_message_join(chat_id, message_date, message_id)
madrid_attachment_legacy
group_member_legacy
madrid_chat_legacy
message_legacy
msg_group_legacy
msg_pieces_legacy
SELECT is_outgoing FROM attachment
MobileSMS DB migration failed to add column is_outgoing to the attachment table.
Added is_outgoing column to the attachment table.
ALTER TABLE attachment ADD COLUMN is_outgoing INTEGER DEFAULT 0
SELECT user_info FROM attachment
MobileSMS DB migration failed to add column user_info to the attachment table.
Added user_info column to the attachment table.
ALTER TABLE attachment ADD COLUMN user_info BLOB
SELECT transfer_name FROM attachment
MobileSMS DB migration failed to add column transfer_name to the attachment table.
Added transfer_name column to the attachment table.
ALTER TABLE attachment ADD COLUMN transfer_name TEXT
SELECT display_name FROM chat
MobileSMS DB migration failed to add column display_name to the display_name table.
Added display_name column to the display_name table.
ALTER TABLE chat ADD COLUMN display_name TEXT
SELECT total_bytes FROM attachment
MobileSMS DB migration failed to add column total_bytes to the attachment table.
Added total_bytes column to the attachment table.
ALTER TABLE attachment ADD COLUMN total_bytes INTEGER DEFAULT -1
Purged orphaned messages failed :-(.
Purged orphaned messages.
SELECT is_audio_message, is_played, date_played FROM message
MobileSMS DB migration failed to add column is_audio_message to the message table.
Added is_audio_message column to the message table.
ALTER TABLE message ADD COLUMN is_audio_message INTEGER DEFAULT 0
MobileSMS DB migration failed to add column is_played to the message table.
Added is_played column to the message table.
ALTER TABLE message ADD COLUMN is_played INTEGER DEFAULT 0
MobileSMS DB migration failed to add column date_played to the message table.
Added date_played column to the message table.
ALTER TABLE message ADD COLUMN date_played INTEGER
SELECT item_type, other_handle, group_title, group_action_type, share_status, share_direction FROM message
MobileSMS DB migration failed to add column item_type to the message table.
Added item_type column to the message table.
ALTER TABLE message ADD COLUMN item_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column other_handle to the message table.
Added other_handle column to the message table.
ALTER TABLE message ADD COLUMN other_handle INTEGER DEFAULT -1
MobileSMS DB migration failed to add column group_title to the message table.
Added group_title column to the message table.
ALTER TABLE message ADD COLUMN group_title TEXT
MobileSMS DB migration failed to add column group_action_type to the message table.
Added group_action_type column to the message table.
ALTER TABLE message ADD COLUMN group_action_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column share_status to the message table.
Added share_status column to the message table.
ALTER TABLE message ADD COLUMN share_status INTEGER
MobileSMS DB migration failed to add column share_direction to the message table.
Added share_direction column to the message table.
ALTER TABLE message ADD COLUMN share_direction INTEGER
SELECT group_id FROM chat
MobileSMS DB migration failed to add column group_id to the chat table.
Added group_id column to the chat table.
ALTER TABLE chat ADD COLUMN group_id TEXT
SELECT is_expirable, expire_state, message_action_type FROM message LIMIT 1
MobileSMS DB migration failed to add column is_expirable to the message table.
Added is_expirable column to the message table.
ALTER TABLE message ADD COLUMN is_expirable INTEGER DEFAULT 0
MobileSMS DB migration failed to add column expire_state to the message table.
Added expire_state column to the message table.
ALTER TABLE message ADD COLUMN expire_state INTEGER DEFAULT 0
MobileSMS DB migration failed to add column message_action_type to the message table.
Added message_action_type column to the message table.
ALTER TABLE message ADD COLUMN message_action_type INTEGER DEFAULT 0
SELECT message_source FROM message LIMIT 1
MobileSMS DB migration failed to add column message_source to the message table.
Added message_source column to the message table.
ALTER TABLE message ADD COLUMN message_source INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
INTEGER DEFAULT 0
INTEGER DEFAULT 1
STRING DEFAULT NULL
BLOB
BLOB DEFAULT NULL
UPDATE message SET message_summary_info = NULL WHERE message_summary_info IS NOT NULL;
TEXT
TEXT DEFAULT NULL
message_date
UPDATE chat_message_join SET message_date = (select m.date from message m where m.ROWID = message_id);
update attachment set original_guid=guid;
UPDATE message SET date = date * 1000000000.0 WHERE date < 1000000000.0 ;
sr_server_change_token
sr_ck_sync_state
sr_ck_record_id
sr_ck_record_change_tag
sr_ck_server_change_token_blob
UPDATE chat SET room_name = chat_identifier WHERE style = 43 AND room_name is null;
sr_cloudkit_record_id
ck_record_system_property_blob
sr_ck_record_system_property_blob
UPDATE chat SET ck_record_system_property_blob = NULL, sr_ck_record_system_property_blob = NULL;
UPDATE chat SET ck_record_system_property_blob = NULL;
UPDATE chat SET sr_ck_record_system_property_blob = NULL;
UPDATE chat SET is_filtered = 1 WHERE is_filtered = 0 AND service_name = 'SMS';
UPDATE message SET ck_sync_state=8 WHERE thread_originator_guid is not null and ck_sync_state=1
UPDATE chat SET syndication_type = 0
UPDATE chat SET syndication_date = 0
INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', COALESCE((SELECT m.date FROM message m WHERE m.error != 0 AND m.is_from_me == 1 AND m.is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1), 0)), ('lastFailedMessageRowID', COALESCE((SELECT m.ROWID FROM message m WHERE m.error != 0 AND m.is_from_me == 1 AND m.is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1), 0));
INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', 0), ('lastFailedMessageRowID', 0);
select name from sqlite_master where sql LIKE '%_legacy%' and type = 'index';
INTEGER DEFAULT -1
INTEGER
part_index
UPDATE chat SET state = 3 WHERE state = 4
select name from sqlite_master where sql LIKE '%_legacy%';
UPDATE chat_message_join SET message_date = (select m.date from message m where m.ROWID = message_id) where message_date = 0;
SELECT ROWID, id FROM handle
IMDMessageRecordCloudKitStatisticTotalMessageCountKey
IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
IMDMessageRecordCloudKitStatisticTotalChatCountKey
IMDMessageRecordCloudKitStatisticSyncedChatCountKey
IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
IMDMessageRecordCloudKitStatisticAllSyncedCountKey
IMDMessageRecordCloudKitStatisticTotalCountKey
Cannot unassociate attachment from empty message GUID
Cannot unassociate attachment with empty attachment GUID
DELETE FROM message_attachment_join WHERE   ROWID IN (     SELECT       j.ROWID     FROM       message_attachment_join j     INNER JOIN message m ON j.message_id = m.ROWID     INNER JOIN attachment a ON j.attachment_id = a.ROWID     WHERE       m.guid = ?       AND a.guid = ?   ) 
DELETE FROM message WHERE message.ROWID NOT IN (SELECT message_id from chat_message_join);
Unable to associate message and attachment, empty attachment GUID.
Unable to associate message and attachment, empty message GUID.
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE associated_message_guid = ? ORDER BY message.ROWID ASC;
CFArrayRef IMDMessageRecordCopyMessagesForGUIDs(CFArrayRef)_block_invoke
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE guid = ? ORDER BY message.ROWID ASC;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join j ON m.ROWID = j.message_id INNER JOIN chat c ON c.ROWID = j.chat_id WHERE c.chat_identifier = ? AND m.is_read == 1 AND is_from_me == 0 AND is_finished == 1 ORDER BY m.date DESC LIMIT 1
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message INNER JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE error == 0 AND is_from_me == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message INNER JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE error == 0 AND is_from_me == 0 AND item_type == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID = ? ORDER BY message.ROWID ASC;
SELECT MAX(message_id) FROM chat_message_join
sint64_result
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID IN (SELECT message_id FROM chat_message_join WHERE message_id < ?) AND item_type = 0 ORDER BY ROWID DESC LIMIT ?
readMessageIDs
IMDMessageRecordCopyMessageForGUIDUnlocked failed to get results
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDMessageQueries.m
BOOL IMDMessageRecordDeleteBatchOfDeletedMessageGuids(int, NSArray **, NSError **)
IMDMessageRecordDeleteBatchOfDeletedMessageGuids
batchAmount > 0
rowIDs.count == guids.count
IMDMessageRecordDeleteMessagesForGUIDs has no GUIDs to delete.
SELECT guid from message WHERE date >= 1000000000.0 AND date < ?;
SELECT guid from message WHERE date >= 1000000000.0 AND date < ? LIMIT 100;
SELECT * from deleted_messages ORDER BY ROWID ASC LIMIT ?;
SELECT * from deleted_messages ORDER BY ROWID ASC;
BOOL _IMDDeleteDeletedMessagesWithRangeOfRowIDs(IMDSqlOperation *, uint64_t, uint64_t)
_IMDDeleteDeletedMessagesWithRangeOfRowIDs
lastRowID >= firstRowID
DELETE FROM deleted_messages where ROWID >= ? AND ROWID <= ?;
DELETE from message WHERE date >= 1000000000.0  AND date < ?  AND NOT (group_action_type IN (1,3) AND (ROWID IN (SELECT message_id FROM message_attachment_join)))  AND NOT (ROWID IN (SELECT message_id FROM chat_recoverable_message_join));
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join j ON   m.ROWID = j.message_id INNER JOIN chat c ON   c.ROWID = j.chat_id WHERE   c.room_name = ?   AND c.service_name = ? ORDER BY   m.ROWID DESC LIMIT ?
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL ORDER BY m.ROWID DESC LIMIT ?
CFMutableArrayRef IMDMessageRecordLoadMessagesInSet(NSSet *, uint64_t, BOOL)
IMDMessageRecordLoadMessagesInSet
comparator
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)
results
sqlite-timing
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)_block_invoke
history query:
rowID == 0
history query: rowID should be > 0
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke
firstLoadResults
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke_2
Paged history query with numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
Paged history query: rowID should be > 0
secondLoadResults
Paged history query with numberOfMessagesAfter: %lld for second load
Paged history query: rowID should be > 0 for second load
has_messages_before
has_messages_after
SELECT m.guid FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)
UPDATE   message SET   is_read = 0, date_read = 0 WHERE   rowid in (     select m.rowid from message m       INNER JOIN chat_message_join       cm ON m.ROWID = cm.message_id     WHERE       cm.chat_id = ?       AND m.item_type == 0       AND m.is_from_me == ?   )
SQLite returned %d from IMDMessageRecordMarkMessagesAsUnreadWithChatGUIDUpToGUIDFromMe
update message set is_read = 0 where guid = ?;
SQLite returned %d from IMDMessageRecordMarkMessageGUIDUnread
IMDMessageRecordRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs(CFStringRef, CFStringRef, CFArrayRef, CFArrayRef, NSTimeInterval)
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INDEXED BY message_idx_undelivered_one_to_one_imessage WHERE   m.cache_roomnames IS NULL   AND m.service = '%@'   AND m.is_sent = 1   AND m.is_delivered = 0   AND m.was_downgraded = 0   AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INDEXED BY message_idx_expire_state WHERE   (m.expire_state = %d OR m.expire_state = %d)  AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m WHERE   m.is_from_me = 1   AND m.is_sent = 0   AND m.error = 0   AND m.item_type = 0   AND m.ROWID > ? 
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE subject = ?   AND item_type = ? ORDER BY message.ROWID ASC;
SELECT   COUNT(m.ROWID) FROM   message m INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
SELECT   COUNT(m.ROWID) FROM   message m   INDEXED BY message_idx_isRead_isFromMe_itemType INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
void _IMDMessageRecordCountAllUnreadMessagesForChatQuery(CFStringRef, void (^)(int64_t, SInt64))
_IMDMessageRecordCountAllUnreadMessagesForChatQuery
IMDIsRunningInDatabaseServerProcess()
_IMDMessageRecordCountAllUnreadMessagesForAllUnreadChats can only be called from IMDPersistenceAgent
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY +cm.chat_id
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered == 0  ORDER BY m.date DESC
SELECT   m.thread_originator_part, SUM(IFNULL(part_count, 1)) FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid == ?   AND m.associated_message_guid IS NULL GROUP BY  m.thread_originator_part
Unexpected column in reply count query with index %d
Reply count query got invalid column data back: %@|%@
IMDMessageRecordCountMessagesWithThreadOriginatorGroupedByParts called by client
lastFailedMessageRowID
select ROWID from message where LENGTH(ck_record_id) > 0 AND ck_sync_state=1 ORDER BY ROWID DESC limit 1;
lastFailedMessageDate
SELECT date FROM message ORDER BY date DESC, ROWID DESC LIMIT 1;
Most recent date: %@
UPDATE message SET error = ? WHERE (is_sent = 0 AND is_from_me = 1 AND error = 0)
IMDMessageRecordRetractNotificationsForMessagesMatchingChatGUIDs
IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingChatGUIDs
1. QueryHighestRowID
2. QueryChatRecordIDs
3. MarkAsRead
4. QueryMessageGUIDsFromRowIDs
Time to mark 1:1 as read when tapping/reflecting read receipt: %@
Time to mark 1:1 as read when receiving read receipt from receiver: %@
SELECT seq FROM SQLITE_SEQUENCE WHERE name = 'message';
int64_result
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE rowID >= ?   AND rowID <= ?   AND item_type == 0 ORDER BY message.ROWID ASC;
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID limit: %lld  rowID: %lld
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
IMDMessageRecordCopyNewestUnreadIncomingMessagesAfterRowID got back %ld rows
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %zu rows from XPC
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %d rows after deserialization
Asked to load up to oldest unread or fallback message: %@
SELECT * FROM (  SELECT ROWID from (      SELECT m1.ROWID FROM message m1 WHERE m1.GUID = ?    UNION      SELECT m2.ROWID FROM message m2        INNER JOIN chat_message_join cm ON          m2.ROWID = cm.message_id        WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)        AND m2.is_read = 0        AND m2.item_type = 0        AND m2.is_from_me = 0  )) ORDER BY ROWID ASC LIMIT 1;
Query failed to look up message for guid: %@ error: %d
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND m.ROWID >= ? AND m.item_type == 0  AND m.is_read == 0 ORDER BY cm.chat_id, cm.message_id DESC LIMIT ?;
IMDMessageRecordCopyNewestFailedOutgoingMessagesToLimitAfterDate limit: %lld  date: %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE date > ?   AND item_type == 0   AND error != 0   AND is_from_me == 1   AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID > ?   AND item_type == 0   AND has_dd_results == 1 ORDER BY ROWID DESC LIMIT ?;
CFArrayRef IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender(NSString *, NSString *, NSError **)
IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE (associated_message_guid = ?) AND (handle_id IN (SELECT ROWID FROM handle where id = ?));
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ((associated_message_guid = ?) AND (is_from_me = 1));
error_description
IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message where ck_sync_state == 0 AND (service == 'iMessage' OR service == 'SMS') and was_detonated == 0 order by date limit ? ;
Number of results %ld
Number of results 0
Returned from DB call.
IMDMessageRecordCopyMessagesPendingUpdateT1ToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, thread_originator_guid, thread_originator_part FROM message where ck_sync_state == 8 AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
Unexpected column in Message Update v1 with index %d
Message Update v1 query got invalid column data back: rowid %lld messageId:%@ threadOriginatorGUID:%@
Message Update v1 Query - unable to create row dictionary for messageId: %@, skipping!
Found message %lld/%@ to update : originator GUID/part: %@/%@ (dict %@)
TOID
TOPart
IMDMessageRecordCopyMessagesPendingUpdateT2ToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, syndication_ranges, synced_syndication_ranges FROM message where syndication_ranges is not null AND (synced_syndication_ranges is null or syndication_ranges != synced_syndication_ranges) AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
Message Update T2 query got invalid column data back: rowid %lld messageId:%@ syndicationRanges:%@ syncedSyndicationRanges:%@
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync
update message set ck_sync_state=0,ck_record_id='',ck_record_change_tag='';update attachment set ck_sync_state=0, ck_server_change_token_blob='';
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync updated messages as dirty 
update message set synced_syndication_ranges=NULL where synced_syndication_ranges is not null;
IMDMarkMessageForT2UpdateSync updated messages with syndicationRanges as dirty for T2 update
Returned from DB call after marking all msgs as dirty.
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in IMDP with limit %lld
 select * from sync_deleted_messages where LENGTH(recordID) > 0 limit ?;
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in imagent with limit %lld
Request to add message with guid (%@) and recordID (%@) to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) VALUES (?, ?);
Finished adding message with guid (%@) and recordID (%@) to delete table
Request to add incompatible group photo to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) SELECT guid,ck_record_id FROM message WHERE item_type = 3 AND group_action_type != 0 AND length(ck_record_id) > 0;
Finished adding incompatible group photo to delete table
IMDMessageRecordClearDeleteTombStones
delete from sync_deleted_messages;
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync deleted pending sync table
Returned from DB call after marking clearing all tombstones
IMDMessageRecordDeleteTombStonedMessagesWithGUIDs has no GUIDs to delete.
Returned from DB call after deleting RecordIDs from Tombstone table
Request to mark message with ROWID %lld as ignore but needing sync
update message set ck_sync_state = 2 where rowid=?
Finised marking message with ROWID %lld as ignore but needing sync
Request to mark message with ROWID %lld as clean
update message set ck_sync_state = 1 where rowid=?
Finised marking message with ROWID %lld as clean
SELECT ck_sync_state
 FROM message WHERE (ROWID in (SELECT message_id FROM chat_message_join));
 FROM chat;
SELECT ck_sync_state FROM attachment WHERE (ROWID in (SELECT attachment_id FROM message_attachment_join));
UPDATE %@ SET ck_sync_state = 0;
SELECT ROWID from %@ LIMIT %lld
UPDATE %@ SET ck_sync_state = 1 WHERE ROWID = %lld;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE reply_to_guid = ?;
Bad thread identifier given to paged history query, identifier: %@ guid: %@ part: %@
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date DESC LIMIT ?
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date ASC LIMIT ? + 1
Threaded history query got %llu items
Performing threaded history query ref msg: %@ originator guid: %@ part: %@ limit: %llu results: %@
void _IMDPerformQueryForPagedHistoryWithThreadIdentifier(CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, NSMutableSet *)_block_invoke
Performing threaded history query for thread originator associated messages without thread_originator_guid with associated message GUID: %@
SELECT   m.ROWID FROM   message m WHERE   m.associated_message_guid = ?  AND m.thread_originator_guid IS NULL
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL   AND m.replace = ? ORDER BY m.ROWID DESC LIMIT ?
SELECT   m.guid FROM   message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.guid = ? ORDER BY m.ROWID ASC
_IMDMessageRecordCopyUnreadMessagesMatchingRecoverableChatIDs
SELECT   message_id FROM chat_recoverable_message_join WHERE message_id in (SELECT rowid FROM message INDEXED BY message_idx_isRead_isFromMe_itemType  WHERE (is_read == 0     AND is_finished == 1     AND is_from_me == 0     AND item_type == 0     AND is_system_message == 0 )) AND chat_id %@
_IMDMessageRecordCopyAndMarkAsReadMessagesReceivedPriorToGuidMatchingChatGUIDs
SELECT   message_id FROM chat_message_join WHERE message_id in (SELECT rowid FROM message INDEXED BY message_idx_isRead_isFromMe_itemType  WHERE (is_read == 0     AND is_finished == 1     AND is_from_me == 0     AND item_type == 0     AND is_system_message == 0     %s )) AND chat_id %@
 AND rowid <= ?
Query1
UPDATE   message SET   is_read = 1,   date_read = ? WHERE rowid %@
Query2-Update
Query results were null or empty bulk reading messages for %@
Time to run db query for marking 1:1 as read when tapping/reflecting read receipt: %@
Unable to create message record for guid %@
Time to run db query for marking 1:1 as read when receiving remote read receipt: %@
LPSharedObjectMetadata
LPSpecializationMetadata
com.apple.IMDPersistenceAgent.IMDSharedWithYouMetadataManager
IMDSharedWithYouMetadataManager
Setting highlight metadata for Message: %@ to be hidden because flagged as CommSafety sensitive.
NOT Appending highlight metadata for Message: %@ since its been marked as Do not donate
Appending highlight metadata for Message: %@
Appending highlight server date for Message: %@
NOT Appending highlight metadata for Message since sender %@ is not known. Contact: %@
Highlight type for Message: %@. automatic %@ starred %@ hidden %@ userInteracted %@
NOT Appending highlight metadata Message: %@ shared by business chat with ID: %@
TUConversation matches chatRecord for conversation: %@
Going to update Conversation Manager with highlightDictionary: %@
Generating highlight dictionary
Nil attributes: %@ passed in. Skipping generating highlight dictionary 
com_apple_mobilesms_collaborationIdentifier
com_apple_mobilesms_ckBundleIDs
ckAppBundleIDs
Returning highlight dictionary: %@
com_apple_mobilesms_highlightedContentServerDate
com_apple_mobilesms_syndicationContentType
com_apple_mobilesms_collaborationMetadata
Requests
Is database full? %@
Database schema version? %u
Fetched Database schema
Created attachment record for guid: %@ with filename %@
Failed to create attachment record for guid: %@
rrid
Copied attachment record for guid: %@
No attachment record found for guid: %@
Copied attachment record for path: %@
No attachment record found for path: %@
Delete attachment for guid: %@
Deleting attachments older than %lld days
Query space saved by deleting attachments older than %lld days
bytes
Clean database
Query largest conversations
Query largest attachment GUIDs
Query space taken by attachment class
Does attachment exist for guid: %@? %@
Attachment count at sticker: %@ is %lld
Copying filenames for most recent %lld attachments (Results: %ld)
Copying most recent %lld attachments for queryType: %lld (Results: %ld)
Getting message record for attachment GUID %@
Failed to copy message for attachment GUID %@
Purgeable disk space is %lld
purgeableDiskSpace
Non synced attachment disk space is %lld
diskSpace
Copying oldest attachments to delete to free up: %lld bytes (Results: %ld)
Copying most recent attachments %ld from %ld most recent chats: (Results: %ld)
Copying oldest attachments to delete to free up: %lld bytes starting offset: %d (Results: %ld)
Deleting files older than %lld recent attachments
Copying filenames for attachments for chat identifiers: %@ on services: %@   (Results: %ld)
Copying purged attachments for chat %@ services %@ limit %@
All chats that have %@ as a participant.
Copying purged attachments count for chat %@ services %@
purgedCount
Copying filenames for sticker attachments
accessibility_string
Updating attachment for guid: %@
No attachment found to update for guid: %@
_IMDPersistenceQueueForAsyncIPAction
Creating handle record for ID: %@  service: %@
Failed to create handle record for ID: %@  service: %@
Updating handle record for handle ID: %lld   ID: %@  country: %@  unformatted: %@  service: %@ personCentricID: %@
Failed handle record record ID: %lld
Copied handle record for ID: %@  service: %@
No handle record found for ID: %@  service: %@
Unassociating message guid: %@  from attachment: %@
Associating message guid: %@  from attachment: %@
Copying messages for associated guid: %@   (Results: %ld)
Copying messages for guids: %@   (Results: %ld)
Copying messages between rowID: %lld  and rowID: %lld   (Results: %ld)
Copy message for guid: %@   (Result: %@)
Failed to copy message for guid: %@
Copy last read message for chat identifier: %@   (Result: %@)
Failed to copy last read message for chat identifier: %@
Copy message for RowID: %lld   (Result: %@)
Failed to copy message for rowID: %lld
Copy last received message (Result: %@)
Failed to copy last received message
Copying last received messages with limit: %lld   (Results: %ld)
Copying messages for rowIDs: %@   (Results: %ld)
Copying messages for rowIDs: %@
Delete messages for guids: %@
Delete messages older than %lld days
Copying messages for room name: %@ on service: %@   (Results: %ld)
Copying messages for chat identifiers: %@ on services: %@ onlyMessages: %@   (Results: %ld)
Copying limited number of messages for chat identifiers: %@ on services: %@  (Results: %ld) numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
Copying frequent replies for chat identifiers: %@ on services: %@   (Results: %ld)
Copying guids for chat identifiers: %@ on services: %@   (Results: %ld)
Getting last addressed labelID and last message date for chat identifiers: %@ and last addressed labelIDs: %@   (Results: %@)
Getting last addressed handle and last message date for chat identifiers: %@ and last addressed handles: %@   (Results: %@)
Delete messages guids: %@ for chat identifiers: %@ on services: %@
Copy messages with for handle: %@ on service: %@  limit: %lld  (Results: %ld)
Copy messages with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@  (Result: %@)
No message found with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@
Copy messages with handle: %@ matching body skipping services: %@  (Result: %@)
No message found with handle: %@ matching body skipping services: %@
Copy message with handle: %@ on service: %@  replaceID: %lld (Result: %@)
No message found with handle: %@ on service: %@  replaceID: %lld
Copy undelivered 1-1 messages (Results: %ld)
Copy expiring or expired messages (Results: %ld)
Copy unsent messages (Results: %ld)
Copy message action items for original message guid (Results: %ld)
Unread message count: %lld
Unread message count: %lld  for chat GUID: %@
Unread message count: %lld  for chat rowID: %lld
Copy all unread messages: %@ (Results: %ld)
Last failed message rowID: %lld
Last synced message rowID: %lld
Most recent message date: %lld
Get identifier for message guid: %@  result: %lld
Get messages sequence number: %lld
Mark all unsent messages failed
Delete orphaned messages
Copy messages guids, and mark read, for chatGUIDs: %@ up to guid: %@  (Results: %ld)
Copy unplayed audio messages guids, for chat guid: %@  (Results: %ld)
Copy unread incoming messages chatIdentifiers:%@   services: %@   limit: %lld  fallbackGUID:%@ (Result: %lu)
Copy DD result messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy messages with reply to guid %@
Copy newest unread incoming messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy newest failed outgoing messages up to date: %lld  limit: %lld   (Result: %lu)
Copy most recent usage of addresses: %@   result: %@
Created message with guid: %@
Failed to create message with guid: %@
Copy chats from message ID: %lld  (Results: %lu)
Tried to copy chats from message ID: %lld, but no message found
Found chat: %@  for message GUID: %@
Tried to find chat from message GUID: %@, but no chat was found
Copy attachments from message ID: %lld  (Results: %lu)
Tried to copy attachments from message ID: %lld, but no attachments found
Setting handle ID: %lld  on message ID: %lld
Failed to set handle (%lld) on message (%lld)   (Message: %@  Handle: %@)
Copied handle: %@  for message ID: %lld
Tried to copy handle from Message ID: %lld, but no handle was found
Tried to copy handle from Message ID: %lld, but no message was found
Copied other handle: %@  for message ID: %lld
Tried to copy other handle from Message ID: %lld, but no handle was found
Tried to copy other handle from Message ID: %lld, but no message was found
Inserting Message Processing Task with (guid: %@, taskflags: %ld)
Coping first %ld Message Processing Task (Results: %ld)
Updating task_flags to %ld for Message Processing Task with guid: %@
Deleting all completed task from Message Processing Table
Created chat with guid: %@  (0x%p)
Failed to create chat with guid: %@
goFetchAllActiveChatsProgressively
Got nil for all active chats, aborting progressive copy all chats request early
Enforcing lastMessage load limit of %lld, found %lu chats with messages
v24@?0q8q16
Request
Received new copy all chats request (total: %ld, batch size: %ld)
Progressive chat send progress: %lu out of %lu
Progressive chat send complete with %lu chats sent
goFetchAllActiveChats
Enforing lastMessage load limit of %lld, found %lu chats with messages
v32@?0@8@16^B24
Finished timing goFetchAllActiveChats with time: %@
copyRecentChats
An unread chat was not included in recent chats with rowID: %llu unreadCount: %lld
Finished timing copyRecentChats with time: %@
Backing up database failed with error: %@
IMDChatRecordRepairDuplicateChats is returned %@
got NO success with error: %@
got NO success with NO error!?
file-read-data
Denying access to attachment, (check %d, errno %d) client with audit token: %u not allowed to access request path: %@
Mark file %@ succedded ? %@
Downgrade Database to version %ld
timestamp
is_orphaned
IMDAttachmentRecordCopyAttachmentsForQueryWithLimit_IPCAction
IMDAttachmentRecordMarkAttachmentWithROWIDAsFailedToUploadToCloudKit_IPCAction
IMDAttachmentRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit_IPCAction
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync_IPCAction
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState_IPCAction
IMDAttachmentRecordCopyMessageForAttachmentGUID_IPCAction
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID_IPCAction
IMDAttachmentRecordGetPurgeableDiskSpace_IPCAction
IMDAttachmentRecordGetNonSyncedAttachmentDiskSpace_IPCAction
IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace_IPCAction
IMDAttachmentRecordCopyMostRecentAttachmentsInMostRecentChats_IPCAction
IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark_IPCAction
IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace_IPCAction
Clean database requested
DBServer
In server for IMDAttachmentRecordDeleteAttachmentsDirectWithPredicate_IPCAction
In server for IMDAttachmentRecordCopyAttachmentsDirectWithPredicate_IPCAction
com.apple.private.imcore.spi.database-access
com.apple.private.imcore.imdpersistence.data-detection-access
com.apple.private.imcore.imdpersistence.database-access
com.apple.imdpersistence.IMDPersistenceAgent-UnreadChatList
com.apple.imdpersistence.IMDPersistenceAgent-StorageManagement
com.apple.imdpersistence.IMDPersistenceAgent-GroupMetadata
com.apple.imdpersistence.IMDPersistenceAgent-Syndication
peer(%d) received XPC_ERROR_CONNECTION_INVALID
peer(%d) received XPC_ERROR_CONNECTION_INTERRUPTED
peer(%d) received XPC_ERROR_TERMINATION_IMMINENT
Denying xpc connection, task does not have entitlement for message: %@  (%@:%d)
__IMDPersistenceIPCServer_peer_event_handler
com.apple.messages
DisablePriorityInversionFixForIMDP
Database client wants response: %@, but DisablePriorityInversionFixIMDP is YES
DELETE FROM sync_deleted_messages WHERE (recordID = ?
 OR recordID = ?
DELETE FROM message WHERE (guid = ?
 OR guid = ?
SELECT cm.message_id FROM chat_message_join cm 
INNER JOIN message m ON m.ROWID = cm.message_id 
WHERE cm.chat_id IN (SELECT c.ROWID FROM chat c WHERE (c.chat_identifier = ? and c.service_name = ?)) 
AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT ?;
ORDER BY cm.message_date DESC, cm.message_id DESC;
SELECT message_id from chat_message_join cmj 
INNER JOIN message m ON m.ROWID = cmj.message_id 
WHERE cmj.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?) 
AND cmj.message_date <= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ? + 1
AND cmj.message_date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ?
AND cmj.message_date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date ASC LIMIT ? + 1
DELETE
SELECT *
guidCount
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery1(int)
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid IN (?
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id = (SELECT m.ROWID FROM message m WHERE m.guid = ?);
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery2(int)
cleanOrphanedMessageString
DELETE FROM message WHERE (     SELECT 1 FROM chat_message_join     WHERE message_id = message.rowid     LIMIT 1 ) IS NULL AND message.guid 
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery3(int)
updateCacheRoomnamesString
UPDATE message SET cache_roomnames = (SELECT group_concat(c.room_name)                    FROM chat c INNER JOIN chat_message_join j                    ON c.ROWID = j.chat_id                    WHERE j.message_id = message.ROWID) WHERE message.guid 
AND h.service NOT %@
AND m.guid NOT %@
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE  (   %@  m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@)  )   AND m.date >= ?   AND m.was_deduplicated = 0   AND m.cache_has_attachments = 0   %@   AND im_trim(m.text) = im_trim(?)   AND m.ROWID IN (     SELECT        cm.message_id      FROM        chat_message_join cm      WHERE        m.ROWID = cm.message_id        AND cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)   ) 
m.is_from_me = 1 OR
m.is_from_me = 0 AND
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE   m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@  )  AND m.date >= ?   AND m.is_from_me = 0   AND m.was_deduplicated = 0   AND m.cache_roomnames IS NULL   %@   AND im_trim(m.text) = im_trim(?) 
CFStringRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDsQuery(int, int)
CFStringRef IMDMessageRecordCopyMostRecentUseageOfAddressesQuery(int)
SELECT   MAX(cm.message_id), h.ID FROM chat_message_join cm   INNER JOIN chat_handle_join j     ON cm.chat_id = j.chat_id       INNER JOIN handle h         ON h.ROWID = j.handle_id WHERE h.ID 
 GROUP BY h.ID 
 ORDER BY cm.message_id DESC 
CFStringRef IMDMessageRecordCopyMessagesForGUIDsQuery(int)
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message 
WHERE guid 
ORDER BY message.ROWID ASC;
rowCount
CFStringRef IMDCreateDeleteDeletedMessagesGuidsQuery(int)
DELETE from deleted_messages where (ROWID = ?
 OR ROWID = ?
CFStringRef _IMDCreateQueryRemoveMessagesFromChatMessageJoinWithArrayOfMessageGuids(CFArrayRef, NSArray **)
spotlightMessageGuids
DELETE FROM chat_message_join WHERE message_id = ?
message_guid=%@
 OR message_id = ?
inboxesToExcludeCount
CFStringRef IMDMessageRecordCountAllUnreadMessagesQuery(int)
SELECT COUNT(1) FROM (SELECT m.rowid , cm.message_id FROM message m INNER JOIN chat_message_join cm ON cm.message_id = m.rowid INNER JOIN chat c ON c.ROWID = cm.chat_id WHERE   m.is_read == 0   AND NOT (m.ROWID in (SELECT message_id FROM chat_recoverable_message_join))  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_blackholed != 1  AND c.is_filtered NOT IN (?
SELECT   COUNT(1) FROM (SELECT   m.rowid , cm.message_id FROM   message m INNER JOIN chat_message_join cm ON  cm.message_id = m.rowid INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_read == 0   AND NOT (m.ROWID in (SELECT message_id FROM chat_recoverable_message_join))  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_blackholed != 1  AND c.is_filtered != ?)
AND %@
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message JOIN chat_message_join ON    chat_message_join.message_id == message.rowid WHERE    chat_message_join.chat_id = (SELECT c.rowid FROM chat c WHERE c.guid = ?) %@ %@ LIMIT    ?;
SELECT count(rowid) FROM Attachment where guid = ?
IMDAttachmentQueries
*** IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID called with isLegacyGUID %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE original_guid = ? ORDER BY ROWID DESC;
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE guid = ? ORDER BY ROWID DESC;
Getting message record for attachment guid %@
SELECT ROWID FROM attachment WHERE guid = ? LIMIT 1;
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Got ROWID %lu for GUID %@
Looking up message ID that corresponds to attachment ID %lld
SELECT message_id FROM message_attachment_join WHERE attachment_id = ?;
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned error %@
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned zero results
message_id
Looking up message record corresponding to %lld
Failed to look up message record for messsage_id %llu
SELECT sticker_user_info, filename, created_date, attribution_info FROM attachment a INNER JOIN message_attachment_join ma ON a.ROWID = ma.attachment_id INNER JOIN message m ON ma.message_id = m.ROWID WHERE a.sticker_user_info IS NOT NULL AND m.is_from_me=1 AND a.transfer_state=5 GROUP BY filename ORDER BY a.ROWID DESC LIMIT ?;
accessl
Invalid parameter to IMDAttachmentCountAttachmentsWithStickerPath stickerCachePath %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE filename LIKE ?;
StickerAttachmentCount
There appears to be more than one sticker with sticker path [%@]
SELECT count(rowid) FROM Attachment WHERE filename LIKE ?;
SELECT filename from attachment where mime_type in ("image/jpeg", "image/png", "image/gif")  order by ROWID DESC LIMIT ?
Request to mark attachment with ROWID %lld as failed to upload to cloudKit
update attachment set ck_sync_state = 2 where rowid=?
Finished marking attachment with ROWID %lld as failed to upload (2)
Request to mark attachment with ROWID %lld as clean
update attachment set ck_sync_state = 1,transfer_state = 5 where rowid=?
Finished marking attachment with ROWID %lld as clean
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync
update attachment set ck_sync_state=0, ck_server_change_token_blob='', ck_record_id='';
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync updated attachments as dirty 
Returned from DB call after marking all attachments as dirty.
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState
UPDATE attachment SET ck_sync_state == 1 WHERE ck_sync_state == 5;
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState update all failed cloud attachment downloads 
UPDATE attachment SET ck_sync_state=0 where ck_sync_state in (2,3,5) OR (ck_sync_state==1 AND guid not like "at_%");
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState reset all failed cloud attachments 
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState Returned from DB call after resetting all failed cloud attachment downloads.
Request to fetch the non synced attachment disk space
SELECT sum(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment == 0 ORDER BY created_date ASC;
Returning non synced attachment disk space with: %lld bytes
/var/mobile
Request to fetch the purgeable disk space
SELECT filename, total_bytes FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
File does not exist at path %@
returning purgeable disk space results (%lld) to delete number of attachments to delete (%lld) number of attachments total (%lld) 
Request to copy attachments to metric what we would purge
SELECT COUNT(*) FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
Offset we are choosing: %@ number of available records: %@
SELECT DISTINCT chat_id FROM (SELECT chat_id,message_date FROM chat_message_join ORDER BY message_date desc) ORDER BY message_date DESC LIMIT ?;
SELECT a.ROWID, a.guid, a.is_sticker, a.transfer_name, a.filename FROM attachment a JOIN (SELECT ma.attachment_id as a_id, message_date as m_date FROM message_attachment_join ma JOIN (SELECT cm.message_id as message_id, cm.message_date as message_date FROM message m JOIN chat_message_join cm WHERE m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id = ? AND m.rowid = cm.message_id) as tmp WHERE ma.message_id = tmp.message_id) as tmp2 WHERE a.rowid = tmp2.a_id ORDER BY tmp2.m_date DESC LIMIT ?
Request to copy attachments to purge from disk that have been synced to CloudKit with bytes to free up: %lld starting offset: %d
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL ORDER BY created_date ASC LIMIT ? OFFSET ?;
Going to try and free up disk space with remaining bytes to free up: %lld
returning results (%d) to delete 
SELECT * FROM attachment a WHERE a.ck_sync_state == 0 ORDER BY ROWID LIMIT ? 
SELECT * FROM attachment a WHERE a.ck_sync_state == 1 AND transfer_state == 0 ORDER BY ROWID DESC LIMIT ? 
IMDAttachmentQueryStringForIMAttachmentsQuery unknown IMAttachmentsQuery type %lld
transfernames
filenames
/var/mobile/Library/Caches/
Previews
StickerCache
sticker
%@-%@-sticker
Examining pewview folder name'%@'.
Sticker preview %@ is part of 200 last attachments, not deleting
Skipping folder %@ as it does not have a valid transfername
Could ~not~ clean up sticker previews due to error '%@'.
Sticker Preview to Delete: %@
Cleaned up sticker preview '%@'
Could ~not~ clean up sticker preview '%@' due to error '%@'.
Beginning iteration of _IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep File cleanse ended
Could ~not~ clean up '%@' due to error '%@'.
Beginning iteration of _IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep File cleanse ended
DELETE FROM attachment WHERE created_date < ? AND transfer_name != 'GroupPhotoImage';
Request to fetch estimate space taken by attachments older than days %llu
SELECT filename FROM attachment WHERE created_date < ?;
Request to fetch estimate space taken by attachments older than days %llu returning %llu
Request to fetch largest non synced conversations
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.hide_attachment=0 AND attachment.transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state != 1 AND attachment.hide_attachment=0 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state = 1 AND attachment.hide_attachment=0 AND transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
size
Returning %lu conversations
Photo
Video
GIFOrSticker
Other
Request to fetch non synced attachment guids for attachment class
Returning %lu non synced attachments
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 0 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
UPDATE attachment set total_bytes = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new filesize %@ with success %@
UPDATE attachment set transfer_state = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new transfer_state %@ with success %@
SELECT filename,rowid,total_bytes,ck_sync_state,is_sticker,hide_attachment,transfer_state FROM attachment WHERE rowid > ? AND hide_attachment = 0 AND filename != '' ORDER BY rowid ASC LIMIT 20;
For rowID %@ bytes %@ is not equal to new byte count %@ for file.
File on disk, but not in finished state: %@, filename: %@.
Live Photo bundle on disk, but failed to delete it: %@, error: %@
Live Photo bundle deleted: %@
Failed getting filesize at rowID %@ and path %@.
File not on disk, lets switch it to tap to download rowID: %@, filename: %@.
No more attachments found to update
SELECT c.rowid FROM chat c WHERE (c.chat_identifier = ? AND c.service_name = ?)
 OR (c.chat_identifier = ? AND c.service_name = ?)
select a.filename, a.guid, a.is_sticker, a.created_date, a.transfer_state from attachment a join  (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma join (select cm.message_id as message_id, cm.message_date as message_date from message m join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND     a.hide_attachment == 0 ORDER BY tmp2.m_date ASC;
IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServicesQuery %@
SELECT * FROM attachment a INNER JOIN message_attachment_join ma ON   a.ROWID = ma.attachment_id INNER JOIN chat_message_join cm ON   ma.message_id = cm.message_id INNER JOIN message m ON   ma.message_id = m.ROWID WHERE   m.cache_has_attachments   AND m.expire_state != %d   AND cm.chat_id IN (%@)   AND a.hide_attachment == 0   AND a.ck_sync_state == 1   AND a.transfer_state == 0 ORDER BY m.date DESC limit %d
SELECT c.rowid FROM chat c INDEXED BY chat_idx_chat_identifier_service_name WHERE (c.chat_identifier = ? AND c.service_name = ?)
select count(*) from attachment a INDEXED BY attachment_idx_purged_attachments_v2 join (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma INDEXED BY message_attachment_join_idx_attachment_id join (select cm.message_id as message_id, cm.message_date as message_date from message m INDEXED BY message_idx_cache_has_attachments join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND a.hide_attachment == 0 AND (a.ck_sync_state == 1 OR a.ck_sync_state == 4) AND a.transfer_state == 0 ORDER BY tmp2.m_date ASC;
IMDAttachment
Copy purged attachments for chat %@ services %@ limit %@
%@ assets that have been purged for chat %@ outQuery %@
Copy purged attachments count for chat %@ services %@
DELETE FROM attachment WHERE guid = ?;
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Updating GUID for attachment at rowID %lld
UPDATE attachment set guid = ? WHERE ROWID = ?;
kIMDAttachmentRecordUpdateAttachmentGUIDWithGUID Success: %@
IMDAttachmentCopyGUIDsAfterRowWithLimit is in IMDP with limit %lld
 select ROWID, guid, maj.rowid is null as is_orphaned from attachment left join message_attachment_join maj on attachment.ROWID=maj.attachment_id where ROWID > ? ORDER BY ROWID limit ?;
IMDAttachmentCopyGUIDsAfterRowWithLimit is in imagent afterRow %llu with limit %lld
Returned from DB call after loading attachments to delete messages count %lu
IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit is in IMDP with limit %lld
 select ROWID, * from sync_deleted_attachments where LENGTH(recordID) > 0 AND ROWID > ? limit ?;
IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit is in imagent afterRow %llu with limit %lld
DELETE FROM sync_deleted_attachments WHERE (recordID = ?
IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs has no GUIDs to delete.
IMDAttachmentRecordClearDeleteTombStones
delete from sync_deleted_attachments;
IMDAttachmentRecordClearDeleteTombStones deleted pending sync table
Returned from DB call after clearing all tombstones
Request to markAllUnsuccessFullySyncedAttachmentsAsNeedingSync 
Executed query to mark all unsuccessfuly synced attachments as needing sync
Error executing markAllFailedAttachmentsAsNeedingSync %@ 
AND is_sticker = 0 AND mime_type LIKE 'image/%' AND NOT mime_type = 'image/gif'
AND mime_type LIKE 'video/%'
AND (is_sticker = 1 OR mime_type = 'image/gif')
AND NOT (mime_type LIKE 'image/%' OR mime_type LIKE 'video/%' OR is_sticker = 1 OR mime_type = 'image/gif')
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state != 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state = 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
image/gif
image/
video/
SELECT message_id FROM message_attachment_join WHERE attachment_id = ? LIMIT 1
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
UPDATE message set attributedBody = ?, text = ? where guid = ?
_IMDSMSRecordStoreCustomFunctionDeleteAttachment: wrong number of arguments
%@-%d
_IMDSMSRecordStoreCustomFunctionAfterDeleteMessagePlugin: wrong number of arguments
_IMDSMSRecordStoreCustomFunctionTrim: wrong number of arguments
_IMDSMSRecordStoreCustomFunctionTrim: sqlite3_value was NULL.
_IMDSMSRecordStoreCustomFunctionTrim: SQLite text of value[0] was NULL.
INSERT INTO message SELECT %@ from source.message WHERE date >= ?;
ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified 
INSERT INTO message SELECT %@ from source.message ORDER BY ROWID DESC LIMIT ?;
INSERT INTO chat SELECT %@ from source.chat WHERE ROWID IN (SELECT chat_id from source.chat_message_join where message_id IN (SELECT ROWID from message));
ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered 
INSERT OR IGNORE INTO message SELECT %@ from source.message WHERE ROWID IN (SELECT MAX(m.ROWID) FROM source.message m, chat c, source.chat_message_join cm WHERE m.ROWID=cm.message_id AND c.ROWID=cm.chat_id AND m.group_action_type IN (1,3) GROUP BY c.ROWID);
INSERT INTO chat_message_join SELECT * from source.chat_message_join WHERE message_id IN (SELECT ROWID from message);
INSERT INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from source.chat_handle_join where chat_id IN (select ROWID from chat));
INSERT INTO chat_handle_join SELECT * from source.chat_handle_join WHERE chat_id IN (SELECT ROWID from chat);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from message);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT other_handle from message);
INSERT INTO attachment SELECT %@ from source.attachment WHERE ROWID IN (SELECT attachment_id from source.message_attachment_join where message_id IN (select ROWID from message));
ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive 
UPDATE attachment SET transfer_state = 0; 
INSERT INTO message_attachment_join SELECT * from source.message_attachment_join WHERE attachment_id IN (SELECT ROWID from attachment);
Trimming database at: '%@'...
ATTACH '%@' AS source;
__kIMDSMSFailedToSendNotification
__kIMDSMSMarkAsReadCompletedNotification
**************************************************************************
****** Database access off the database thread, please file a radar ******
com.apple.runtime-issues
IN (
? ) 
Aggregate
Submitting persistence event: %@
IMDSavedDeviceStateDidUpgradeKey
IMDSavedDeviceStateDidRestoreFromBackupKey
IMDSavedDeviceStateDidMigrateFromDifferentDeviceKey
IMDSavedDeviceStateDidRestoreFromCloudBackupKey
IMDSavedDeviceStateDidMigrateKey
IMDSavedDeviceStateBuildVersionKey
IMDSavedDeviceStateIsMigratingKey
IMDSavedDeviceStateDateKey
IMDSavedDeviceState
_IMDPersistenceClientQueue
IMDCNPersonAliasResolver: Error! being called in a process that is not in IMDPersistenceAgent!
CNContactStore
IMDCNPersonAliasResolver: Passed in nil email _fetchCNContactForEmail
IMDCNPersonAliasResolver: Could not get predicate for alias %@
IMDCNPersonAliasResolver: Requesting a CNContact from Contact Store for Alias %@ and Predicate %@
IMDCNPersonAliasResolver: Error getting contact from Contact Store for alias %@ error %@
IMDCNPersonAliasResolver: No contact for alias %@
IMDCNPersonAliasResolver: CNContact Identifier %@ for alias %@
IMDCNPersonAliasResolver: Passed in empty set of aliases
IMDCNPersonAliasResolver: Dispatching a contacts batch query for %lu aliases
batchFetchForAliases
IMDCNPersonAliasResolver: Contacts batch fetch from Contact Store completed. Took %f seconds
IMDCNPersonAliasResolver: No results obtained from the Contacts batch Fetchrequest. Error: %@
IMDCNPersonAliasResolver: Contacts batch fetch from Contact Store FAILED with an exception %@.
_fetchAliasToCNIDMapForAliases
IMDCNPersonAliasResolver: _fetchAliasToCNIDMapForAliases returning aliasIDMap
IMDCNPersonAliasResolver: Generating aliasToIDMap completed. Took %f seconds
IMDCNPersonAliasResolver: Updating aliasToCNIDMap using Contact Change History events
IMDCNPersonAliasResolver: Could not fetch Change History from CNContactStore error:%@
IMDCNPersonAliasResolver: Skipping Contact change history events after the Drop Everything Event
IMDCNPersonAliasResolver: Refetching CNID for ALL Aliases.
IMDCNPersonAliasResolver: _updateAliasToCNIDMap returning aliasIDMap
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
CNContactInstantMessageAddressesKey
CNContact
CNContactFormatter
CNContactFetchRequest
CNChangeHistoryFetchRequest
CNFavorites
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDCNPersonAliasResolver.m
void _IMDContactsApiInit(void)
_IMDContactsApiInit
kIMContactsContactEmailAddressesKey
kIMContactsContactPhoneNumbersKey
kIMContactsContactInstantMessageAddressesKey
Action: Save
Query: Is Full
Query: Schema Version
Query: Schema
Action: Create Attachment
Query: Attachment Record ID for GUID
Query: Copy Attachment for GUID
Action: Delete Attachment
Action: Deleting Attachments older than a certain number of days
Query: Copy recent attachment filenames
Query: Delete attachment previews older than recent
Query: Copy media attachment filenames for Chat Identifiers
Query: Copy purged attachments for chat identifiers
Query: Copy purged attachments count for chat identifiers
Query: Copy sticker attachment filename and user info
Query: Does attachment with GUID exist
Query: Does sticker path have attachments
Action: Update Attachment
Action: Get contacts record id for aliases
Action: Get contacts record id and history token for aliases
Action: Async Get contacts record id and history token for aliases
Action: Create Handle
Action: Update Handle
Query: Copy Handle
Action: Unassociate Message from Attachment
Action: Associate Message from Attachment
Query: Copy Messages Between row IDs
Query: Copy Messages for GUIDs
Query: Copy Messages for associated GUID
Query: Copy Message for RowID
Query: Copy Last Received Message
Query: Copy a Limited Number of Last Received Messages
Query: Get Most Recent Message Date
Query: Copy Messages for RowIDs
Query: Copy new messages using rowIDs
Query: Copy Message for GUID
Query: Copy Last Message for Chat RowID
Query: Copy Last Read Message for Chat Identifier
Action: Delete Messages for GUIDs
Action: Delete Messages older than a certain number of days
Query: Copy Messages with Roomname
Query: Copy Messages with Chat Identifiers
Query: Copy a Limited Number of Messages Before and or After GUID with Chat Identifiers
Query: Copy Sorted Messages For Chat GUID Filter Using Predicate With Limit
Query: Copy Messages for GUID with Option to Exclude Recoverable Messages
Query: Copy Frequent Replies for Chat Identifiers
Query: Copy GUIDs for Messages with Chat Identifiers
Query: Copy message date and last addressed handle from chat with chat identfiers and last addressed handles
Query: Copy message date and last addressed labelID from chat with chat identfiers and last addressed labelIDs
Query: Update chat last addressed simID and handle for chats with the old last addressed simID
Action: Delete Messages with GUIDs on ChatIdentifiers
Query: Copy Messages with Handle on Service
Query: Copy Message Matching Body on Chat Identifiers
Query: Copy Message Matching Body with Handle
Query: Copy Messages with Handle and ReplaceID
Query: Copy undelivered 1-1 Messages
Query: Copy Expiring or Expired Messages
Query: Copy Unsent Unfailed Messages
Query: Copy Message Action Items for Original Message GUID
Query: Unread Message Count
Query: Unread Message Count for Chat GUID
Query: Unread Message Count for Row ID
Query: All Unread Messages from All Chats
Query: Last Failed Message ID
Query: Last Synced Message row ID
Query: Last Failed Message Date
Query: Message Row ID for GUID
Query: Max CMJ Message ID
Query: Messages Sequence Number
Action: Mark message as deduplicated
Action: Mark failed all unsent messages
Action: Delete Orphaned Messages
Query: Copy and mark as read matching chat guids prior to guid
Query: Copy all guids for unplayed messages for a chat guid
Query: Copy Unread Incoming Messages for chat
Query: Copy newest Unread Incoming Messages after Row ID
Query: Copy newest Failed Outgoing Messages after date
Query: Copy messages with Data Detected Results after Row ID
Query: Copy most recent usage of address
Action: Create Message
Query: Copy Chats from Message
Query: Find Chat from Message GUID
Query: Copy Attachments from Message
Action: Set Handle on Message
Query: Copy Handle from Message
Query: Copy Other Handle from Message
Action: Update Message
Action: Insert Message Processing Task
Query: Select Message Processing Task with Limit
Action: Update Message Processing Task
Action: Delete all Complete Message Processing Task
Action: Create Chat
Query: Copy Handles from Chat
Query: Copy Messages from Chat with limit
Action: Set Chat is Archived
Action: Set Chat is Blackholed
Action: Set Chat is Recovered
Action: Add Handle to Chat
Action: Remove Handle from Chat
Action: Update Chat
Query: Copy all chats
Query: Copy all named chats
Query: Copy all active chats
Query: Copy all active chats progressively
Query: Copy recent chats
Action: Add message with GUID to Spotlight
Action: Add messages with GUIDs to Spotlight
Action: Add chat with GUID to Spotlight
Action: Delete chat with GUID from Spotlight
Query: Reindex the given messages
Query: Copy Chat for GUID
Query: Copy Chat for Message ID
Query: Copy Chats with Handle
Query: Copy Chats with Handles, Display Name, Group ID and Style
Query: Copy Chats with Handle Subset, Service and Style
Query: Copy Chats Filtered Using Predicate
Query: Copy Sorted Chats Filtered Using Predicate With Limit
Query: Copy Chats Sorted By Last Message Date And Filtered Using Predicate With Limit
Query: Copy Chats with Identifier
Query: Copy Chats with Identifier On Service
Query: Copy Chats with Pinning Identifier
Query: Copy Chats with Roomname
Query: Copy Chats with Group ID
Query: Copy Newest chat for Group ID
Action: Delete Chat for GUID
Action: Associate Message with Chat
Action: Disassociate Message from Chat
Action: Copy Chat guids with unplayed audio messages
Action: Set Chat isFiltered
Action: Delete Empty Chats
Action: Repair Duplicate Chats
Action: Anonymize Database
Action: Split DB by days
Action: Split DB by recent message count
Action: Copy array of associated message items from sender
Action: Mark attachment with Spotlight attributes
Action: Downgrade database
Query: Estimate space taken by attachments older than days
Query: Find largest conversations
Query: Find largest attachments
Query: Find all unread chats and count of unread messages in each
Query: Purge attachments in chat
Action: Move messages for given message guids to recoverable message table
Action: Move messages for given chat guids to recoverable message table
Action: Recover messages for given chat guids
Query: Load recoverable messages metadata: recoverable message count and earliest delete date of all messages for chat ID
Action: Delete messages with a delete date older than the given days
Action: Permanently delete recoverable messages in chats for the given guids
Query: Load recoverable messages metadata pending cloud kit update
Action: update ck_sync_state for given recoverable messages ROWIDs
Action: Store message part body for future recovery in recently deleted
Query: Load recoverable messages metadata pending cloud kit delete
Action: Clear unsynced removed recoverable messages table
Query: Post notification for started SharePlay from Messages
Action: Delete junk messages with a delete date older than the given days
Unknown
v8@?0
Deferring reindexing for %ld seconds.
No handles to update Core Spotlight indexes for
Queuing up first chat reindex: %s
No chats to reindex recent messages
Scheduling fetching the next batch of messages for re-indexing in chat with GUID %s after %s seconds
Kicking off indexing of %ld searchable items for chat with GUID %s
Incrementing chat to reindex to %s
No more messages to reindex for %s
No more chats to reindex, stopping
Fetching batch of messages to reindex for %s
IMDPersistence.SpotlightReindexer
init()
IMDCoreSpotlightReindexer
@48@0:8@16q24d32@40
v16@0:8
@16@0:8
index
deferralTime
handles
messageAge
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Found %ld messages to reindex
Handle (%s) or service (%s) is empty
v16@?0@"NSArray"8
Computed %ld chats to update CoreSpotlight indexes for.
Finding chats to re-index with CoreSpotlight for handles: %s
IMDCoreSpotlightReindexingQueue
IMDPersistenceHelloWorldClass_Impl
inner
IMDCoreSpotlight
Nil or empty path parameter
Failed to get file size for item at path: %@, with error: %@
Writing incorrect size for attachment at path: %@. Incorrect size %lld, correct size: %lld (allocation size on disk: %lld)
Writing correct size for attachment at path: %@. Size: %lld (allocation size on disk: %lld)
Skipping commit of a non-existent transaction in Downgraded database
Skipping revert of a non-existant transaction in Downgraded database.
Cloning and downgrading table '%@' into Downgraded Database
Downgrade: turning off foreign keys
Downgrade: attaching new (empty so far) downgraded database to the real database
Downgrade: Beginning transaction
Downgrade: Copying table: %@
Downgrade: Detaching database
Downgraded database SQL query '%@' got error: '%@'
Downgraded database SQL query ran ok: '%@'
Opening Downgraded database at: '%@'...
Closed Downgraded database at: '%@'...
IMDContactCache: Error! being called in a process that is not in IMDPersistenceAgent!
Unable to insert row (guid:%@ taskFlag:%ld) into Message PTask Table: %@
Unable to select rows from Message PTask Table: %@
Unable to update row (guid:%@ taskFlag:%ld) for Message PTask Table: %@
Unable to delete completed task from Message PTask Table: %@
ASSERTION FAILED: Condition is unexpectedly true: %s in "%s" at line %d [%@]
ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
Error posting notification request %@. Error: %@
Error updating edited message content for notification request %@. Error: %@
We don't have a chat identifier to set as the thread identifier for chat dictionary %@
We don't have a message guid for message dictionary %@
Not synthesizing notification content from intent, contentByUpdatingWithProvider returned error %@
Caught exception generating notification %@
SQL ERROR: %@
No handles or services specified. Or handleCount != serviceCount. No rows will be returned.
Database version is newer, but internal build allows this state (dbver %d, expected %d)
Unable to perform database migration to %d - NO MIGRATOR FOUND
Migration from %d to %d failed with error: %@
Migrated from %d to %d ok in %f seconds
Unable to perform database migration from %d to %d
IMDSMSRecordStoreCopyAllChats
IMDSMSRecordStoreCopyAllNamedChats
IMDSMSRecordStoreCopyAllActiveChats
No chatIdentifiers or lastAddressedLabelIDsCount provided. No rows will be returned.
Unable to find last addressed lablID & date from chat identifiers: %@
No chatIdentifiers or lastAddressedHandles provided. No rows will be returned.
Unable to find last addressed handles & date from chat identifiers: %@
IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
Unable to insert row (guid:%@ recordID: %@ timeStamp:%ld, error %@) into sync_deleted_chats Table
Unable to select rows from Message Deleted Messages Table: %@
Unable to update messages to new error (%@)
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
ASSERTION FAILED: Conditions are unexpectedly equal: %s == %s in "%s" at line %d [%@]
Failed to create table %@ with error %@
Created table (if needed) ok: %@
Failed to drop table %@ with error %@
Dropped table (if needed) ok: %@
message table 'values' array size (%lld) and properties array size (%lld) and recordPropertiesSize (%lld) aren't the same size. The size and indexes MUST be the same. Prepare for lots of debugging pain. 
Setting IMDMessageRecord property %d of %lld
New message record [%@] has ID [%lld]  [%@].
Attempted to get record identifier for NULL message record: %@
Attempted to get record identifier for NULL record: %@
NULL message passed to %s
NULL message passed when trying to get property: %ld
NULL message passed when trying to set property: %ld  (value:%d)
Remote set other handle not implemented
Trying to associate attachment [%lld] with message [%lld]
Error adding attachment join: %d (%s)
NULL dictionary passed to %s
NULL record passed to %s
_IMDMessageRecordCreate()
new IMDHandleRecordRef [%@] has id [%lld].
Attempted to get record identifier for NULL handle record: %@
NULL handle passed to %s
_IMDHandleRecordCreate()
originalMessageItem was nil when attempting to update a message
newMessageItem was nil when attempting to update a message
newSyndicationRange was nil when attempting to update a message
%s Tried to remove nil attachment GUID from syndication
%s Could not derive message GUID from attachment GUID %@
%s Could not derive attachment index from attachment GUID %@
%s IMItem was not an IMMessageItem for attachment GUID %@, messageGUID %@
%s Message record was nil for attachment GUID %@, messageGUID %@
%s Could not derive message item from attachment GUID %@
%s Could not derive actual attachment GUID from given attachment GUID %@. attachmentIndex: %lu, messageItem.fileTransferGUIDs.count: %lu
%s messageItem.fileTransferGUIDs for failing messageItem: %@
%s Tried to update syndicationRanges on nil messageItem
%s Tried to update syndicationRanges on nil messagePart
%s Tried to update syndication range for message GUID %@ with zeroed message range
%s Tried to update CMM syndicationRanges on nil messageItem
%s No file transfer guids when updating CMM syndicationRanges on message %@
%s No valid CMM assets present for message %@
%s No file transfer guids present for message %@
%s Did not find a valid range for attachment GUID %@ and message %@
%s Tried to syndication ranges for nil message GUID
%s Message record was nil for messageGUID %@
%s IMItem was not an IMMessageItem for messageGUID %@
%s Could not load message item for message GUID %@
%s Could not load message part %ld for message GUID %@
Recently Deleted | Insert to recoverable message table failed for message guid %@: %@
Recently Deleted | Failed to remove entries from chat_message_join: %@
Recently Deleted | Query returned an error: %@
Recently Deleted | Failed to add chat entry to unsynced_removed_recoverable_messages: %@
Recently Deleted | Permanent recoverable message deletion failed for chat guid %@: %@
Recently Deleted | Parts: Permanent recoverable message part deletion failed for chat guid %@: %@
Junk Messages | Permanent junk message deletion failed for chat guid %@: %@
Recently Deleted | retrieving recoverable messages pending cloudkit update with resultLimit: %@
Recently Deleted | Finished fetching messages metadata pending update
Recently Deleted | retrieving recoverable messages pending cloudkit delete with resultLimit: %@
Recently Deleted | Finished fetching messages metadata pending delete
Recently Deleted | setting recoverable sync state: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Failed setting recoverable sync state: %@ with op finish error: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Successfully set recoverable sync state: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Failed setting recoverable sync state: %@ with op release error: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Will begin storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody could not find part attribute name
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody Failed to encode message part body with exception: %@
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody message part body data is nil.
Recently Deleted | Failed with error: %@ storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Finished storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Will begin clearing recoverable message tombstones
Recently Deleted | Failed with error: %@ clearing out message tombstones
Recently Deleted | Finished clearing recoverable message tombstones
Loaded %ld IMDAttachment info objects from database
Dropped trigger failed: %@: %@
Dropped trigger: %@
Create trigger failed: %@: %@
Created trigger ok: %@, trigger: %@
dropping trigger failed: %@: %@
dropped trigger ok: %@
Created trigger ok: %@ trigger %@
Error donating intent interaction = %@
Not donating INInteraction, interaction generated is nil
QuickSwitch about to downgrade database at path %@ to %@
Quickswitch Downgrade Sending XPC now...
Error fetching suggested name for handle "%@" Error: %@
No cached business name, using placeholder business name, will call interaction update handler if business name fetch completes
Starting migration from V21 to V22.
Failed to delete trigger delete_attachment_files [SQLite result %d reason %s]
Failed to delete trigger delete_attachment_files [SQLite result %d]
Whoa, pardner, where is the V21_MIGRATION_GROUP_CHAT_MAP ?!
Whoa, pardner, where is the V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP ?!
[Database] ERROR: **** Failed ingesting legacy message with row ID: %d
Successful migration for legacy message [%d]
No message rows available to migrate, great success!!
Whoa pardner, we didn't drop the group to chat map table. C'est la vie.
Whoa pardner, we didn't drop the non-canonical group to handle map table. C'est la vie.
Asking DB to analyze.
Migration ended with result %d
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ORPHAN: Unable to find/create a chat for handle[%@] and roomname[%@] for legacy messageID[%d]. Skipping this message.
[Database] ERROR: Unable to migrate message row %d with error: %d
Unable to update flags row %d with error: %d
[DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
Unable to migrate chat row %lld with error: %d
Unable to update chatID[%lld]'s room_name.
Unable to update chatID[%lld] with guid[%@]
[Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
ORPHAN: Unable to find a legacy madrid chat record for handle[%@] and roomname[%@] with sqlite status (%d). This usually means that a chat was deleted but the messages it contained weren't. Failing chat creation.
** You attempted to bind HandleID [%lld] to ChatID [%lld]. One of these values is bogus.
[Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
[Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
AWOL handle for uncanonicalizedID [%@]  canonicalizedID [%@] Service [%@] Country [%@]
Got an invalid IDs uncanon: (%@) canon: (%@) in %s.
Got an invalid service (%@) in %s.
Got an invalid identifier (%@) (%@) in %s.
[Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
Invalid handleID[%lld] or messageID[%lld] passed for binding
Unable to update handle id on message row %lld with error: %d
Invalid legacy guid provided in %s - this is bad but non-fatal.
Unable to find legacy attachment for guid[%@]. Not fatal, but bailing.
Fatal error binding attachmentID[%lld - %@] to messageID[%lld]
Unable to migrate attachment row %lld with error: %d
Unable to bind attachmentID[%lld] to messageID[%lld]: %d
ORPHAN: Could not find an appropriate chat to use for messageID[%d]. Skipping this message.
[Database] ERROR: Failed to create new message row. SQLite error: %d
This message is empty, and we should NOT keep it.
This message lacks a handle, and we should NOT keep it.
Message [%lld] Legacy [%d] was problematic, thus we skip it.
Problems deleting message [%lld], SQLite error: %d
Unable to delete message.
[Database] Bailing early on a problematic message.
[Database] ORPHAN: Failed to update message. SQLite error: %d
[Database] ORPHAN: Failed to insert message. SQLite error was: %d
[Database] ****** Result from select query: %d
[Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
ORPHAN: Unable to find handles for groupID[%d]. This means we have message rows without a matching group. Failing the chat lookup.
[Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
[Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Failed to create chat record. SQLite error: %d
Ugh, the address '%@' wouldn't canonicalize.
MsgAddress '%@' was null, we won't even try to canonicalize it.
Got an invalid rowid looking for a handle mapped to group id: %lld
[Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
Got an invalid rowid looking for a chat mapped to group id: %lld
[Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
[Database] ERROR: Unable to set properties for chat[%lld]: %d
[Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
[Database] ERROR: Failed joining new attachment to message with SQLite result: %d
[Database] ERROR: Failed to create directory [%@]: %@
[Database] ERROR: Failed to write piece data to FS.
[Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
Starting new query with pending error: : %@
reverting uncommitted transation with error: %@
committing uncommitted transation
ASSERTION FAILED: %s is unexpectedly NOT nil in "%s" at line %d [%@]
_IMDChatRecordSetProperty [%d of %d]
Attempted to get identifier for NULL chat record: %@
NULL chat passed to %s
Trying to associate message [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddMessageIfNeeded
Finished remove message [%@] from chat [%@], updating the spotlight index for this chat.
Trying to associate handle [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddHandle
SQLite returned %d from IMDChatRecordRemoveHandle
IMDChatRecordBulkUpdateChat %@
_IMDChatRecordCreate()
Got record in _IMDChatRecordCreateFromRecordIDWithLock (%lld) : %@
Sqlite3 Error: %@
Can't start main timer, we're already profiling
Starting profiling -- we have %ld seconds to finish
Unexpected nil key
Main timer not started, can't start timing: %@
Trying to start a timing key that is already running: %@
Main timer not started, can't stop timing: %@
Spotlight Indexer trying to stop an unknown timing key: %@
Timing '%@' was ABORTED after %fs
Timing '%@' was never run
Timing '%@' ran ok in %fs
ABORTED -- %ld timings ran in %fs (%fs remaining before timeout).
Finished %ld timings in %fs (%fs remaining before timeout). Slowest timing: %@ at %fs
Bailing on profiling but we never started timing
Bailed on profiling (not an error)
Aleady stopped profiling
ABORTED profiling after error
Timing '%@' was is still running after profiler was stopped
Error! being called in a process that is not in IMDPersistenceAgent!
Invalid guid passed in. Skipping %s
Timed out indexing %@, likely have a hung thread, exiting!
Not setting syndication identifier because attachment index was not found in attributed body. attachmentGUID: %@
%s Could not derive message part range from attachment GUID %@ (syndicationIdentifier %@)
%s no ranges deserialized from encodedSyndicationRanges %@ for attachmentGUID %@, syndicationIdentifier %@
%s no asset syndications from range %@ for attachmentGUID %@, syndicationIdentifier %@
%s no asset info from CMM asset info %@ for attachmentGUID %@, syndicationIdentifier %@
%s no syndication found for attachment part %li from CMM asset info %@ for attachmentGUID %@, syndicationIdentifier %@
Unable to create record for attachment.
NULL attachment passed to %s
_IMDAttachmentRecordCreate()
Downgrade: Opening new coral database
Downgrade: Creating Tables
Downgrade: Creating Indexes
Downgrade: Committing phase 1
Downgrade: Beginning to copy tables
Downgrade: Creating triggers
Downgrade: Updating Version
Downgrade: Committing phase 2
Downgrade completed ok! :-D
Unable to perform query %@. Error %d
Couldn't update %lld with order date %lld
MessageImport failed in ImportBegin
%s called, but not during import, ignoring
%s called for chat: %@, but not during import, ignoring
Failed to create new chat for guid: %@
Failed to add handle: %lld to chat: %lld
Failed to create message for guid: %@
No chat found for guid: %@   failing message import for GUID: %@
MessageImport - IMDImportAttachmentWithPath - empty guid
Unable to create directories for %@ when saving attachment %@
MessageImport - couldn't link/copy attachment from %@ to %@ - %@
Could not write attachmentData to path %@
Saving database.
Destroying database.
Closed database.
Create tables...
Setting page size.
Enabling WAL journal mode.
Enabling Foreign Key support.
Registering external functions.
Performing a pre-checkpoint vacuum.
Performing Analyze to optimize the database
Performing a WAL checkpoint.
Database Clean up took: %f seconds
No valid database handle, cannot perform a clean
Creating triggers for %p after db init failed: %@
The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
Initial Integrity checked success
Message database migration passed post migrate integrity check
Message database migration failed post migrate integrity check
Migration failed, made it to version: %d: error: %@
Message database migration failed - Database integrity check failed
Message's DB migration took %f seconds.
Reindexing the DB worked.
Database Reindexing the DB failed with SQLite result: %d
Vacuuming DB success
Database Vacuuming failed with SQLite result: %d
Post Vacuuming integrity check success
Database Post Vacuuming integrity checked failed failed
Integrity checked success
Found column %@ on %@, no need to add it
Adding column %@ to %@ succeeded: %@
Create index failed: %@: %@
Created index ok: %@
Dropped index failed: %@: %@
Dropped index: %@
Dropping unknown index failed: %@: %@
Dropped unknown index: %@
__syncXPCIMDMessageStoreSendXPCMessage got a bogus message to send...bailing!
__syncXPCIMDMessageStoreSendXPCMessage: You should not be hitting the database in a unit test. Please check your dependencies
__syncXPCIMDMessageStoreSendXPCMessage has failed %lu time(s)!
__syncXPCIMDMessageStoreSendXPCMessage failed to copy the xpc_connection_t!
__syncXPCIMDMessageStoreSendXPCMessage failed several consecutive times - sleeping for 1+ the launchd throttle time.
__syncXPCIMDMessageStoreSendXPCMessage failed too many times...bailing!
FAFetchFamilyCircleRequest failed %@
Recently Deleted | Insert to recoverable message table failed for chat guid %@: %@
Recently Deleted: message GUID in recovery for chat %@, iterating
Recently Deleted | Failed to finish query for messages to be restored in chat %@: %@
Recently Deleted | Insert to chat message table failed for chat guid %@: %@
Recently Deleted | Failed to remove entries from chat_recoverable_message_join: %@
Recently Deleted | Parts: Will begin recovering message parts for %lu unique chatGUIDs
Recently Deleted | Parts: No parts metadata found for chatGUID: %@. This state is valid if there are no message part deletions.
Recently Deleted | Cannot recover: Could not find attributed body for messageGUID: %@
Recently Deleted | Cannot recover: message part number already exists. Not inserting into main message body for messageGUID: %@
Recently Deleted | Parts: Writing restored part to message GUID: %@
Recently Deleted | updated attributedbody for messageGUID: %@
Recently Deleted | Failed to update attributedbody for messageGUID: %@ with error: %@
Recently Deleted | Parts: Finished writing restored part to message GUID: %@
Recently Deleted | Parts: Removing recoverable message parts for message GUID: %@
Recently Deleted | Failed to add entries into unsynced_removed_recoverable_messages: %@
Recently Deleted | Failed to remove entries from recoverable message part: %@
Recently Deleted | Parts: Finished removing recoverable message parts for message GUID: %@
Recently Deleted | Parts: Loading attributed message body for message GUID: %@
Recently Deleted: body will iterate
Recently Deleted: body iterating
Recently Deleted:Parts: Success in column values returned: %@
Recently Deleted:Parts: Error in column values returned: %@
Recently Deleted | Parts: Finished loading attributed message body for message GUID: %@
Recently Deleted | Parts: Loading message parts metadata for chat GUID: %@
Recently Deleted | Parts: Finished loading message parts metadata for chat GUID: %@
Recently Deleted | Will begin counting recoverable messages per chat
Recently Deleted | Finished counting recoverable messages per chat
Updating madrid indices.
Nuking bogus madrid message indices.
%@ SQLiteResult: %d SQLite Message: %s
No migration block to execute!
Table for handle was created successfully.
Failed to create table for handle. SQLiteError: %d
Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
Updating DB to sort by ROWID instead of date.
Updating DB to support madrid.
Updating DB from version 12 to current.
Updating DB from version 13 to current.
Updating DB from version 14 to current.
Adding index for group_id on group_member
Adding support for Chats and Participants.
Ensuring sanity of is_madrid column.
Cleaning message indices for iMessage.
Adding column for iMessage Account GUID
Moving old tables to *_legacy and adding tables for the new schema.
The is_archived column already exists on chat, skipping this step.
Fixing missing text in group field
The was_data_detected column already exists on message, skipping this step.
SQLite result was %d
The last_addressed_handle column already exists on chat, skipping this step.
The was_deduplicated column already exists on message, skipping this step.
Fixing busted chat identifiers for group chats
Adding attachment is_outgoing column
The is_outgoing column already exists on attachment, skipping this step.
Fixing up uncanonicalized identifiers that had previously been incorrectly treated as canonicalized.
Fixing up uncanonicalized handle identifiers that failed to migrate due to conflicts.
Adding attachment user_info column
The user_info column already exists on attachment, skipping this step.
Adding attachment transfer_name column
Adding chat display_name column
The display_name column already exists on chat, skipping this step.
Adding attachment total_bytes column
The transfer_name column already exists on attachment, skipping this step.
Purging orphaned messages
Adding message is_audio_message, is_played, and date_played column
The is_audio_message, is_played, and date_played columns already exist on message, skipping this step.
Purging orphaned messages - again
Adding message item_type, other_handle, group_title, group_action_type, share_status, share_direction
The item_type, other_handle, group_title, group_action_type, share_status, share_direction columns already exist on message, skipping this step.
The group_id columns already exist on chat, skipping this step.
Adding message is_expirable, expire_state, and message_action_type column
The is_expirable, expire_state, and message_action_type columns already exist on message, skipping this step.
Adding message message_source column
The message_source column already exists on message, skipping this step.
Migration failed, made it to version: %d
Join table for Chat <--> Message was created successfully.
Failed to create join table for Chat <--> Message. SQLiteError: %d
Join table for Chat <--> Handle was created successfully.
Failed to create join table for Chat <--> Handle. SQLiteError: %d
Join table for Message <--> Attachment was created successfully.
Failed to create join table for Message <--> Attachment. SQLiteError: %d
Failed to assign lastFailedMessageDate with query, attempting to set to zero instead
Found an index referencing *_legacy!
Did not find index referencing *_legacy!
Attempting to re-add iOS 6, 7 and 8 column additions
Finished re-adding iOS 6, 7 and 8 column additions
Found table referencing *_legacy!
Did not find any table referencing *_legacy!
IMDMigrateTo16200 canonicalize handles with query: %@
IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
Orphaned messages cleanup complete
IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
IMDMessageRecordCopyMessagesForAssociatedGUID [%@]
IMDMessageRecordCopyMessagesForGUIDs [%@]
IMDMessageRecordCopyGUID [%@]
IMDMessageRecordCopyLastReadMessageForChatGUID [%@]
results from last received: %@
IMDMessageRecordCopyLastReceivedMessageLimit with limit %lld
IMDMessageRecordCopyLastReceivedMessageLimit syncXPC
IMDMessageRecordCopyMessageForRowID [%lld]
IMDMessageRecordCopyMessageForGUID [%@]
IMDMessageRecordDeleteMessagesForGUIDs %@
IMDSelectMessagesForDeletionAfterDaysWithQuery %lld
IMDMessageRecordDeleteMessagesOlderThanDays %lld
IMDMessageRecordDeleteMessagesOlderThanDays interval is %f
No roomname or service specified. No rows will be returned.
history query got %lu rows
sqlite query timing: %@
history query: IMDP client got at least one message: %@
IMDP client got null array_result back: %@
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID No handles or services specified for loading a limited number of messages up to guid. No rows will be returned
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID We have a NULL messageGUID, early returning ****--We should have not gotten to this point if we had a null messageGUID, please file a radar--****
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID with ids: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld threadIdentifier: %@
Paged history query got %lu rows
Paged history query got %lu rows for second load
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID IMDP client got null array_result back: %@
No handles or services specified. Or handleCount != serviceCount. Or guidCount == 0. No rows will be returned.
Deleted %ld messages in %f seconds on %ld chats and %ld services
No handle or service specified. No rows will be returned.
IMDMessageRecordCopyUndeliveredOneToOneMadridMessages
IMDMessageRecordCopyExpiredOrExpiringiMessages
IMDMessageRecordCopyUnsentUnfailedMessages
IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID [%@]
Can't determine unread count when GUID is NULL or empty.
IMDMessageRecordCopyAllUnreadMessages
Can't determine unplayed audio messages GUID is NULL or empty.
Marking all unsent and failed messages as sent.
Row ID is %lld for message with guid [%@]
 enableTelemetry=YES 
MarkAsRead-Database
MarkAsRead-XPC+Database
IMDMessageRecordCopyMessagesBetweenRowIDs [%lld:%lld]
The RowID is out of bounds.  We were asked for rows after [%lld] which exceeds the current sequence number [%lld]
Final adjusted row ID: %lld
The date is out of bounds.  We were asked for rows after date: [%lld] which exceeds the most recent message [%lld]
IMDMessageRecordCopyMessagesDataDetectionResults limit: %lld  rowID: %lld
No addresses provided to IMDMessageRecordCopyMostRecentUseageOfAddresses().
No addresses to lookup, no results for you.
Matching addresses (in order) are %@
Found %ld associated messages for messageGUID: %@, forSender: %@
IMDMessageRecordCalculateLocalCloudKitStatistics failed with error: %@
Calculated sync stats in %f seconds. All Records: %lld of %lld, %lld remaining. Messages : %lld of %lld, %lld remaining. Chats : %lld of %lld, %lld remaining. Attachments : %lld of %lld, %lld remaining.
Expected dictionary of cloudkit stats is nil 2
IMDMessageRecordCalculateLocalCloudKitStatistics loaded stats: %@
_IMDMessageRecordSetSyncCountOnTable got error: %@
Write cloudkit sync counts: %@
setting new stats: messageSyncCount: %lld, chatSyncCount: %lld, attachmentCount: %lld
new stats: %@
We don't have a guid to find messages with this reply to guid
IMDMessageRecordCopyAllUnplayedMessageGUIDsForChatGUID
Unexpected nil attribute set
Highlight Server Date is nil!
There appears to be more than one attachment with GUID [%@]
Could not initialize query.
Skipping an attachment because of incomplete data filename %@ guid %@ isSticker %@ createdDate %@ transferState %@
Not removing attachments, we got a NULL or 0 length GUID [%@]
Unable to select rows from Attachment table: %@
Unable to select rows from Attachment Deleted Table: %@
TRIGGER: custom function is already executing -- this is not reentrant!
TRIGGER: Before deleting attachment, finding messageRowID for attachment rowID %d
TRIGGER: Before deleting attachment, message row id: %lli
TRIGGER: Before deleting attachment, messageRecord: %@
TRIGGER: Before deleting attachment, we found attachment guid: %@
TRIGGER: Before deleting attachment, guid in message part: %@
TRIGGER: Before deleting attachment, was equal, deleting range
TRIGGER: Before deleting attachment,deleted messages for guid
TRIGGER: deferred deletion of messageGUID: %@
TRIGGER: Before deleting attachment, updated attributedBody and text
TRIGGER: Before deleting attachment, no message record found
TRIGGER: Before deleting attachment, all done!
TRIGGER: Deleting attachment files based on path: %@, pathIsInStickerCache %@
Deleting this guid directory too: %@
Just deleting the original path: %@
Did not delete attachment at path %@
TRIGGER: Deleting plugin snapshot at path: %@
Failure to delete file at path with error: %@
This method should not be called off the database thread because it may lead to threading issues and database corruption.
Set device state test user defaults domain to: %@
Saved device state: %@
Read stored device state: %@
Device state not set, return default version: %@
IMDCNPersonAliasResolver: Error! Contact Store failed to get initialized!
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
ySo14NSUnitDurationCG
So28IMDMessageRecordBatchFetcherC
SaySSG
SaySo16CSSearchableItemCG
SaySo16CSSearchableItemCGz_Xx
So8NSObjectC
So17IMDSpotlightIndex_p
yypG
yyXlG
ySSG
SaySSGz_Xx
index
deferralTime
handles
messageAge
inner
IMDSuggestions
SGMessagesSuggestionsServiceDelegate
IMDDatabaseDowngradeHelper
Testing
KeyValue
IMDKeyValueQueries
NSObject
Database
IMDDatabaseQueries
IMDContactCache
IMDContactChangeHandler
CNChangeHistoryEventVisitor
IMDMessageRecord
IMDBridgedRecord
IMDMessageRecordBatchFetcher
Handles
IMDHandleQueries
IMDNotificationsController
IMDCNAliasResolver
IMDDatabaseServer
IMDHandleRecord
IMDChatRecord
IMExtensionNotificationManager
Messages
IMDMessageQueries
IMAbstractDatabaseArchiver
IMDAttachmentDiagnosticInfo
IMDCoreSpotlightBaseIndexer
IMDCoreSpotlightIndexer
IMDCoreSpotlightRecipientIndexer
IMDCoreSpotlightMessageBodyIndexer
IMDCoreSpotlightMessageSubjectIndexer
IMDCoreSpotlightMessageMetadataIndexer
IMDCoreSpotlightMessageBalloonPluginIndexer
IMDCoreSpotlightMessageDataDetectorsIndexer
IMDCoreSpotlightMessageAttachmentIndexer
IMDCoreSpotlightChatParticipant
IMDCoreSpotlightMessageHighlightIndexer
IMDSortDescriptorToSQLConverter
CoreDuetDonation
IMDDatabase
IMDDatabaseLegacyXPCBridge
IMDDatabaseClient
IMDRemoteDatabaseProtocol
IMDChatQueries
IMDAttachmentQueries
IMDNotificationQueries
IMDSqlQuery
IMDSqlSelectQuery
IMDPersistentAttachmentController
IMDatabaseAnonymizer
IMDTaskProgress
IMDCoreSpotlightDispatchObject
IMDAskToBuyNotificationContext
IMDFamilyNotificationContextProtocol
IMDPersistenceHelloWorldClass
IMDSpotlightIndexerTimingProfiler
IMDCoreSpotlightManager
IMDAttachmentSyndicationUtilities
IMDDonationManager
Attachments
IMDWhitetailToCoralDowngrader
IMDWhitetailToCoralDowngradeHelper
IMDAbstractDatabaseDowngrader
IMDScreenTimeAskNotificationContext
Notifications
IMDMessageAutomaticHistoryDeletion
IMDFamilyInviteNotificationContext
IMDRecordBatchFetcher
NSFastEnumeration
Chats
IMDAttachmentRecord
IMDPredicateToSQLConverter
IMDSharedWithYouMetadataManager
IMTrimDatabaseToDays
IMTrimDatabaseToMessageCount
IMAbstractDatabaseTrimmer
IMDCNPersonAliasResolver
IMDChatRecordBatchFetcher
IMDRecord
IMDSpotlightIndex
T@"NSArray",&,N,V_abortedTimers
CNRecordIDForAliases:completionHandler:
T@"NSPredicate",&,N,V_predicate
IMDeviceRegionIsEligibleToBeForcedIntoFilteringUnknownSender
T@"NSString",R,C,N,V_expression
LPSharedObjectMetadataClass
SMSCategoryWithIdentifier:actions:
_chatHasDNDSet:
T#,R
_ckBundleIDsKey
T@"<NSObject><SGSuggestionsServiceMessagesProtocol>",&,V_sgService
_fetchAliasToCNIDMapForAliases:
T@"CNContact",R,N,V_contact
_serverResponse
T@"CRRecentContactsLibrary",&,N,V_recentsInstance
_transfer_state
T@"IMDChatRecord",R,N
account
T@"IMDHandleRecord",R,N
allKeys
T@"IMTimingCollection",&,N,V_timingCollection
assetDescriptor
T@"NSArray",&,N,V_createTablesSQL
authorAddresses
T@"NSArray",&,N,V_tableNames
balloonBundleID
T@"NSArray",R,C,N
beginIndexBatch
T@"NSCache",&,N,V_cache
chatRecordsFilteredByPredicate:
T@"NSData",R,C,N
contact
T@"NSDictionary",R,C,N
containsString:
T@"NSDictionary",R,N
countForObject:
T@"NSMutableArray",&,N,V_notificationsContext
createTablesSQL
T@"NSMutableDictionary",&,N,V_aliasToCNIDMap
currentCalendar
T@"NSMutableSet",&,N,V_runningTimers
defaultInstance
T@"NSSet",&,N,V_meTokens
fetchLastMessageRecordForChatRecordWithRowID:completionHandler:
T@"NSString",&,N,V_guid
handleIMDChatRecordCopyChatsFilteredUsingPredicate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
T@"NSString",C,N,V_columns
hide_attachment
T@"NSString",R,C
initWithEncodedMessagePartGUID:
T@"NSString",R,C,N,V_associatedChatGUID
initWithString:
T@"NSString",R,C,N,V_tableName
integerValueForKey:withDefault:
T@"NSString",R,N,V_destinationPath
isEqualToArray:
T@"NSString",R,N,V_taskName
isReply
T@"UNNotificationCategory",&,N,V_incomingMessageNotificationCategory
TB,N,V_allowsOverrideOfObjects
loginID
TB,N,V_shouldAddToSpotlight
messageSupportsIndexingForItem:
TB,R,N
newChatSearchableItemForChatDictionary:optionalLastMessageDate:
TB,R,N,GisCommSafetySensitive
numberWithBool:
TB,R,N,GisOutgoing
rawDate
TB,R,N,GisSticker
reindex
TQ,N,V_batchSize
removeAllDeliveredNotifications
TQ,N,V_total_bytes
rightExpression
TQ,R,N,V_totalCount
seconds
Td,N,V_timeout
Tq,N,V_ck_sync_state
setAuthorNames:
Tq,N,V_limit
setContentType:
Tq,R,N
setDay:
Tq,R,N,V_messageCount
setEligibleForPhotosProcessing:
URLByAppendingPathComponent:isDirectory:
setFileManager:
UTF8String
setOtherHandle:
UUIDString
setReplyToGUID:
_IMDContactStore
setTextContent:
_UTITypeMightBeAnimated:
setURL:
__imArrayByApplyingBlock:
sharedThrottler
__im_apfsCompatibleFilename
sticker
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
stopMainTimerAndLogAfterFailure
__im_insertionIndexForMessagePartBody:
stringByAppendingPathComponent:
__im_messagePartMatchingPartIndex:
stringFromDate:
__im_visitMessageParts:
syndicationType
_abortedTimers
uppercaseString
_activeAccountAliases
.cxx_destruct
T@"NSArray",R,N
IDsFromCNContact:
T@"NSString",&,N,V_originalGUID
IMMessagesFilteringSettingForPreferedSubscription
TB,R,N,GisReply
LPSpecializationMetadataClass
_aliasToCNIDMap
Sha256ForData:withSalt:
_chatRecordsCopiedFromXPCArray:
T@"<IMDRemoteDatabaseProtocol>",R,N
_contactForURI:
T@"CNContact",&,N,V_meContact
_propertyDescriptorForProperty:
T@"CNContactStore",&,N,V_contactStore
_setupFirstLoad
T@"IMBusinessNameManager",&,N,V_businessNameManager
_xpcArrayWithAttachmentRecords:
T@"IMDContactStoreChangeHistoryEventsHandler",&,N,V_contactsEventhandler
actions
T@"IMDMessageRecord",R,N
arrayWithArray:
T@"NSArray",&,N,V_createIndexesSQL
attributionInfo
T@"NSArray",&,N,V_createTriggersSQL
authors
T@"NSArray",C,N,V_actions
base64EncodedStringWithOptions:
T@"NSAttributedString",R,C,N
cfMessageRecord
T@"NSData",&,N,V_currentHistoryToken
columns
T@"NSDate",R,N
containsObject:
T@"NSDictionary",R,C,N,V_keyPathsToColumns
content
T@"NSFileManager",&,N,V_fileManager
country
T@"NSMutableArray",&,N,V_runTimers
createTriggers:
T@"NSMutableOrderedSet",&,N,V_blocklistMessageGUIDs
dealloc
T@"NSSet",&,N,V_activeAccountAliases
destinationPath
T@"NSString",&,N,V_filePath
groupID
T@"NSString",&,N,V_path
handles
T@"NSString",C,N,V_where
initWithDouble:
T@"NSString",R,C,N
initWithFormat:
T@"NSString",R,C,N,V_handleID
insertAttributedString:atIndex:
T@"NSString",R,N
isEmpty
T@"NSString",R,N,V_sourcePath
isProxy
T@"UNNotificationCategory",&,N,V_incomingFilesNotificationCategory
isServerProcess
T@"UNUserNotificationCenter",&,N,V_notificationCenter
keyPath
TB,N,V_shouldAddToCoreRecents
lowercaseString
TB,N,V_shouldAddToSuggestions
moveMessageRecordsToRecoveryForChatRecordsWithGUIDs:deleteDate:
TB,R,N,GisAssociatedMessage
TB,R,N,GisFromMe
postalAddresses
TB,R,N,GisRecovered
recentsInstance
TB,R,N,V_isSender
release
TQ,N,V_hide_attachment
request
TQ,R
searchableIndex
T^{sqlite3=},R,N,V_database
service
setAttachments:
Tq,N,V_lastRowID
setCachePolicy:
Tq,N,V_transfer_state
setCountryCode:
Tq,R,N,V_downgradesToVersion
setDisplayName:
Tq,R,N,V_newerThanDays
setExpireState:
URLWithString:
setMessageGUID:
UTITypeOfPathExtension:
setPayloadData:
_FPProviderIDForItems:
setShouldSuppressScreenLightUp:
_IMDCoreSpotlightCNContactForAddress:
setTotal_bytes:
__SLCollaborationHandshakeController
setUrl:
__im_URLForChatIdentifier:entryBody:messageGUID:
shortNameFormatPrefersNicknames
__im_dateByAddingDays:
stickerUserInfo
__im_filePathWithVariant:
stopMainTimerAndLogAfterSuccess
__im_makeDirectoriesInPath:mode:
stringByAppendingPathExtension:
__im_nanosecondTimeInterval
subject
__postNotificationsIsMostActiveDevice:
timeout
_actions
valueWithRange:
_addressBookNameForAddress:orContact:
_addressForHandle:
_allowsOverrideOfObjects
_amIMentionedInMessage:
_appearsToBeEmail
_appearsToBePhoneNumber
_areAllMessagePartsRetractedForMessageDictionary:
_associatedChatGUID
_asyncPersistenceBlock:
_attachmentGUIDForCMMIsSyndicatable:syndicationIdentifier:encodedSyndicationRanges:isSyndicatable:verbose:
_attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:
_attachmentIsSticker:
_attachmentRecordsCopiedFromXPCArray:
_attachmentSyndicationTypeForAttachmentGUID:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCommSafetySensitive:verbose:
_authorizeOutgoingSandboxedResource:connection:
_auxVideoPathIfItExists
_batchFetchContactRecordIDForAliases:
_batchSize
_batchSizeForTargetBatchSize:lastIndexedRowID:lastBatch:
_blocklistMessageGUIDs
_businessNameManager
_bypassIndexVersionCheck
_cache
_canDeleteAttachmentPath:
_cfTypeID
_chatCountForChats:
_chatDictionaryForChatAtIndex:withChats:
_chatDictionaryForChatGUID:
_chatDictionaryForChatRecord:
_chatDictionaryForMessageRecord:
_chatGUIDsForChatsWithJunkMessagesOlderThanDate:operation:
_chatGUIDsForChatsWithRecoverableMessagesOlderThanDate:operation:
_chatHasCategoryMuted:isFromContact:
_chatHasDNDSetBasedOnChatGUID:chatIdentifier:groupID:handles:lastAddressedHandleString:originalGroupID:style:
_chatHasDNDSetBasedOnDNDIdentifier:
_ck_sync_state
_coalescePostNotifications
_codableDictionaryCopiedFromXPCDictionary:objectClass:
_codableObjectsCopiedFromXPCArray:objectClass:
_collaborationIdentifierKey
_columnWithSortDescriptor:
_columns
_contact
_contactStore
_contactsEventhandler
_copyAttachmentRecordsFromCoreSDBResults:
_copyChatRecordsFromCoreSDBResults:
_copyMessageRecordsFromCoreSDBResults:
_copyMessagesForIndexingWithLastRowID:batchSize:
_coreSpotlightChatParticipantsFromChatDictionary:senderHandleID:
_countMessagesExcludingGroupPhotosInChatWithGUID:isRecoverable:operation:
_countryCodeForHandle:
_createIndexesSQL
_createTablesSQL
_createTriggersSQL
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_currentHistoryToken
_currentIndexVersion
_database
_deleteAttachmentForTransfer:highQuality:
_deleteChatIfEmptyWithGUID:lastMessageDate:operation:
_deleteTransfersInMessagePartsForChatGUID:
_destinationPath
_deviceIsElgibileToBeForcedIntoFilteringUnknownSenders
_deviceUnderFirstUnlock
_displayNameForBusinessChatAddress:businessNameManager:
_displayNameForHandle:andContact:
_displayNameForHandle:andContact:businessNameManager:suggestionProvider:
_donationManager
_downgradesToVersion
_expectedIndexVersion
_expression
_fastEnumerationBuffer
_fastEnumerationBufferSize
_fastEnumerationLastBatch
_fetchChatRecordsWithHandles:allowSubsetMatching:serviceName:displayName:groupID:style:completionHandler:
_fetchContactIdentifierForAlias:
_fetchUpdatedRecord
_fileManager
_filePath
_fileURLIsActuallyAnimated:
_filteringSettingConfirmed
_formattedDisplayStringForAddress:countryCode:
_foundParameters
_generateNotificationRequestForDeliveryError:isCarouselUITriggered:
_generateNotificationRequestForMessageRecord:isUrgentMessageTrigger:isCarouselUITriggered:isMostActive:shouldAdvanceLastAlertedMessageDate:
_generateNotificationRequestForMessageRecord:messageDictionary:chatDictionary:isUrgentMessageTrigger:isCarouselUITriggered:isMostActive:shouldAdvanceLastAlertedMessageDate:
_geocodeItems:
_getDirSubDirURLsForDirPath:error:
_getFilePathNotDSStore:
_getMessagesSpokenAllowlistLevel:
_getPathAttributesForPath:
_getSpokenMessageAllowlistLevelVersion
_getiChatFileMetadataForPath:
_groupHashForHandles:lastAddressedHandle:
_groupPhotoInternalFilePathForGroupPhotoGuid:
_guid
_handleID
_handleIDForHandleID:
_handleIsSpokenMessageAllowlisted:chat:message:
_handlesMatchingContactIdentifier:
_hasMigratedPreferences
_haveMigrated
_hide_attachment
_highlightedContentServerDateKey
_inTransaction
_incomingFilesNotificationCategory
_incomingMessageNotificationCategory
_indexSearchableChatItems:withIndex:
_indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:
_indexTypeCustomKey
_intervalFormatter
_isAttachmentType:
_isFacetimeHighlighted:
_isLNKTypeMessage:
_isMostActiveDeviceWithCompletionBlock:
_isRaiseGestureEnabled
_isSender
_isUnknownSenders:
_keyPathsToColumns
_lastAlertedFailedMessageDate
_lastAlertedMessageDate
_lastDonatedRowID
_lastIndexedRowID
_lastMessageTimeForChat:
_lastPercentComplete
_lastProcessingMessageDate
_lastRowID
_lastTwoMessagesForChat:
_legacyDateForMessageWithRowIDPreference:
_legacyDatePreference
_legacyRowIDPreference
_limit
_loadAttributedBodyTextForMessageWithGUID:
_loadRecoverableMessagePartsMetadataForChatGUID:
_localCache
_lpLinkMetadataForItem:attachmentPaths:originalURL:
_lpLinkMetadataForMessage:attachmentPaths:originalURL:
_lpTitleCustomKey
_makeNotificationCategories
_meContact
_meTokens
_messageCount
_messageDictionaryForMessageRecord:
_messageDictionaryForMessageRecord:copyThreadOriginator:
_messageIsBusiness:
_messageIsFromFavorite:
_messageIsFromKnownContact:
_messageRecordsCopiedFromXPCArray:
_messageShouldBeSilentlyDeliveredForBusinessChat:
_messageShouldBeSpoken:chatDictionary:isMostActive:
_messages:newerThanDate:
_messagesSortedByDate:
_migrateLastedPostedPreferencesIfNeeded
_migrateSiblingAssetsInAttachmentStoreWithOriginalPath:destinationPath:withFileManager:
_mostRecentJunkMessageDateForChatWithGUID:operation:
_mostRecentRecoverableMessageDateForChatWithGUID:operation:
_newCDInteractionForMessages:
_newLegacySearchableIndexesForMessages:
_newSearchableChatItemsForChats:
_newSearchableIndexesForMessages:
_newSummaryTextForPayloadData:item:
_newSyndicationRangeForCMMMessageItem:syndicationIdentifier:shouldHideFromSyndication:
_newerThanDays
_nicknameDisplayNameForID:
_notificationCenter
_notificationIsFromAFilteredSender:messageDictionary:
_notificationsContext
_orderByClauseWithSortDescriptor:
_originalGUID
_overrideDNDForMessagesAddressingMe
_path
_permanentlyDeleteJunkMessagesBeforeDate:
_permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:beforeDate:
_persistentPathForTransfer:filename:highQuality:chatGUID:storeAtExternalPath:
_personIdentityQueue
_pluginPayloadAttachmentPathsForItem:
_pluginPayloadAttachmentPathsForMessage:
_populateAttachmentsForNotificationContent:messageDictionary:messageRecord:knownSender:
_populateBasicNotificationIdentifyingContent:chatDictionary:messageDictionary:isCarouselUITriggered:
_populateBodyAndTitleForSendFailedNotificationContent:messageDictionary:
_populateBodyAndTitleForSendReceivedAsJunkNotificationContent:messageDictionary:
_populateBodyForNotificationContent:messageDictionary:
_populateIgnoresDoNotDisturb:chatDictionary:messageDictionary:
_populateNotificationCategoryContent:messageDictionary:chatDictionary:
_populateRealertCountForNotificationContent:
_populateSoundAndDisplayActivationForNotificationContent:chatDictionary:messageDictionary:isMostActive:
_populateSubtitleForNotificationContent:chatDictionary:messageDictionary:
_populateTitleForNotificationContent:chatDictionary:messageDictionary:
_populateUserInfoForMessageContent:messageDictionary:messageIsAddressedToMe:
_populateUserInfoOnContentForWatch:messageDictionary:chatDictionary:isCarouselUITriggered:
_possibleVideoComplementExtensions
_postNotifications
_postProcessIndexingForItem:chatDictionary:isReindexing:
_predicate
_predicateForAlias:
_predicateForEmailAddress:
_predicateForPhoneNumber:
_previewFileURLForTransferURL:utiType:knownSender:
_proceedMostActiveDevice:isBlockCalled:completionHandler:
_propertyIDForProperty:
_randomTemporaryPathWithFileName:
_readIntegerFromQuery:resultBlock:
_recentsInstance
_recoverMessagePartsForChatRecordsWithGUIDs:operation:
_registerUserNotificationsForFailedDeliveryMessageRecords:isCarouselUITriggered:
_registerUserNotificationsForMessageRecords:newerThanDate:isUrgentMessageTrigger:isCarouselUITriggered:isMostActiveDevice:
_removeFromRecoverableMessagePartForMessageGUID:operation:
_removeLegacyAttachmentPathsInAttachmentStoreWithOriginalPath:withFileManager:
_resolvedURLForItems:
_respondWithAttachmentRecords:responseMessage:completionHandler:
_respondWithChatRecords:responseMessage:completionHandler:
_respondWithMessageRecords:responseMessage:completionHandler:
_restoredAttributedBodyForMessageGUID:withRecoveredAttributedParts:
_richLinkPluginHasRichContentForItem:attachmentPaths:originalURL:outURL:outTitle:
_runTimers
_runningTimers
_sanitizeIndexesForCurrentVersionIfNeeded:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:chatGUID:storeAtExternalPath:
_selfCSPersonFromHandleID:messageService:
_sendAsyncXPCMessage:action:responseHandler:
_sendSyncXPCMessage:action:responseHandler:
_setBypassIndexVersionCheck
_setContactInMessageDictionary:messageDictionary:
_setCurrentIndexVersion:
_setHasMigratedPreferenceTrue
_setLastDonatedRowID:
_setLastIndexedRowID:
_setLastPostedDateFromMigration:
_setLaunchId:
_setMaxIndexRowID:
_setMessageID:
_setMessagesSpokenAllowlistLevelInPreferences:
_setNeedsDeferredIndexing:
_setNeedsDonation:
_setNeedsIndexing:
_setSpokenMessageAllowlistLevelVersion:
_setUpNotificationCenter
_setupBusinessNameManager
_setupMeContactAndTokens
_sgService
_shouldAddToCoreRecents
_shouldAddToSpotlight
_shouldAddToSuggestions
_shouldBypassForTesting
_shouldDeleteOriginalPath:copyWithinAttachmentStore:destPath:storeAtExternalPath:
_shouldDonateNextBatchForBatchSize:
_shouldIndexNextBatchForBatchSize:
_shouldOverrideChatSilencingBecauseImMentioned:
_shouldPostNotificationForChat:messageDictionary:
_shouldPostNotificationRequest:withCompletionHandler:
_shouldRepostNotification:withAlreadyPostedNotification:
_sourcePath
_startTime
_storeLastAlertedFailedMessageDate:
_storeLastAlertedMessageDate:
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stripFZIDPrefix
_suggestedDisplayNameForAddress:
_swiftImpl
_syncPersistenceBlock:
_syndicationContentTypeKey
_syndicationIdentifierForAttachmentGUID:messageGUID:attributedBody:verbose:
_synthesizedMessagingNotificationContentWithContent:chatDictionary:messageDictionary:isUrgentMessageTrigger:
_tableName
_tableNames
_taskName
_timeout
_timingCollection
_totalCount
_total_bytes
_truncateNameIfNeeded:
_uncanonicalizedAddressForHandle:
_uniqueIdentifierForResourceURL:
_updateAliasToCNIDMap:withHistoryToken:
_updateAttributesWithCollaborationMetadata:withItem:chat:shouldAddSharedWithYouMetadata:
_updateItem:withGeoMapItem:
_updateMessageItemSyndicationRanges:messagePartDescriptor:shouldHideFromSyndication:
_updateMessageRecordForGUID:withAttributedBody:operation:
_updateSyndicatedMessageItem:newMessageItem:newSyndicationRange:
_where
_xpcArrayWithChatRecords:
_xpcArrayWithCodableObjects:
_xpcArrayWithMessageRecords:
_xpcDictionaryWithCodableObjects:
abortCurrentTimers
abortedTimers
absoluteString
acceptEventVisitor:
accountID
actionType
actionWithIdentifier:title:options:
activeAccountAliases
activeConversations
addCharactersInString:
addChatSearchableItemForChatGUID:
addCollaborationDictionary:forConversation:fromMe:
addIndexesInRange:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
advanceLastAlertedFailedMessageDate:
advanceLastAlertedMessageDate:
aliasToCNIDMap
allObjects
allTokens
allValues
allocWithZone:
allowableByContactsHandles:
allowedByScreenTime
allowsOverrideOfObjects
allowsWeakReference
andPredicateWithSubpredicates:
appendAttributedString:
appendFormat:
appendString:
applicationCurrentlyLimited
areKeysAvailable:
areMyTokens:inMessage:
array
arrayByAddingObject:
arrayByApplyingSelector:
arrayOfCreateIndexesSQL
arrayOfCreateTablesSQL
arrayOfCreateTriggersSQL
arrayOfTableNames
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
ascending
assetSyndications
assetUUIDKey
associatedChatGUID
associatedMessage
associatedMessageGUID
associatedMessageRange
associatedMessageType
attachmentIndexTypeForPath:filename:isSticker:isCommSafetySensitive:
attachmentIsSyndicatableMediaKey
attachmentRecordIsSyndicatable:verbose:
attachmentRecords
attachmentRecordsFromAttachments:
attachmentWithIdentifier:URL:options:error:
attachments
attribute:atIndex:effectiveRange:
attribute:atIndex:longestEffectiveRange:inRange:
attribute:existsInRange:
attributeDictionary
attributeSet
attributedBodyData
attributedBodyText
attributesAtIndex:effectiveRange:
attributesAtIndex:longestEffectiveRange:inRange:
attributesOfItemAtPath:error:
authorizationStatus
authorizeForPID:
autorelease
auxiliaryItemsForPrimaryAttributes:withItem:chat:isReindexing:timingProfiler:
avatar
batchSize
beginEditing
beginTransaction:
bindParametersToSqliteWithStatement:
blocklistMessageGUIDs
body
bodyData
boolValue
boolValueForKey:withDefault:
businessNameForUID:updateHandler:
businessNameManager
bypassIndexVersionCheck
bytes
cStringUsingEncoding:
cache
cacheContact:forKey:
cacheContactsFromFetchResults:forAliases:
cachedContactForKey:
canPopulateUserInfoForMessageBalloonBundleID:
cancelIndexingForItem:
cancelPreviousPerformRequestsWithTarget:selector:object:
canonicalizedURIString
caseInsensitiveCompare:
categoryIdentifier
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
cfAttachmentRecord
cfChatRecord
cfHandleRecord
changeType
charValue
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
chatAutoDonatingCutomKey
chatAutoDonatingServerDateCustomKey
chatDictionary:matchesFaceTimeConversation:
chatRecord
chatRecordsWithHandles:serviceName:displayName:groupID:style:
chatRecordsWithIdentifier:
chatStyleCustomKey
chatUniqueIdentifierKey
city
ck_sync_state
class
cleanDatabase
cleanUpOrphanAttachments
cleanseOrphanedFileTransfers
clearMessageGUIDFromScrutiny:
clearRecoverableMessageTombStones
cloneTableContents:withOperation:resultBlock:
close:
cloudKitRecordChangeTag
cloudKitRecordID
cloudKitServerChangeTokenBlob
cloudKitSyncState
code
collaborationMetadataKey
commSafetySensitive
commSafetyUIEnabled
commitTransaction:
communicationContext
compare:
componentsForContact:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
compoundPredicateType
conformsToProtocol:
constantValue
contactIdentifier
contactStore
contactStoreDidChange:
contactsEventhandler
contactsForVCardAtPath:
contactsWithData:error:
containsIndex:
contentByUpdatingWithProvider:error:
contentCreationDate
contentType
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
conversationUUID
coordinate
copy
copyDatabase:
copyGroupPhotoToExternalPathIfNecessary:chatGUID:attachmentFilepath:
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
coreSpotlightDeleteAttachmentGUIDs:
count
countByEnumeratingWithState:objects:count:
countryCode
countryCodeString
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDowngradeHelper
createIndexes:
createIndexesSQL
createMutableContactWithID:
createQueryString
createTables:
createTriggersSQL
currentHandler
currentHistoryToken
currentIndexVersion
customAttributeDictionary
data
dataForKey:error:
dataUsingEncoding:
dataWithContentsOfURL:
dataWithContentsOfURL:options:error:
dataWithMessageSummaryInfoDictionary:
database
databaseQuery:
date
dateByAddingComponents:toDate:options:
dateByAddingUnit:value:toDate:options:
dateDelivered
dateEdited
dateRead
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultHFSFileManager
defaultManager
defaultsSharedInstance
deleteAllSearchableItemsWithCompletionHandler:
deleteAttachmentsDirectWithPredicate:
deleteAttachmentsForTransfer:
deleteCharactersInRange:
deleteChatSearchableItemForChatGUID:
deleteDirectoryAtPath:
deleteFailedArchiveAtPath:error:
deleteInteractionsMatchingPredicate:sortDescriptors:limit:completionHandler:
deleteJunkMessagesEligibleForPermanentRemovalOldThanDays:
deleteJunkMessagesOlderThanDays:
deleteMessagesAndAttachmentsAfterDays:
deleteRecoverableMessagesEligibleForPermanentRemoval
deleteRecoverableMessagesOlderThanDays:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
deleteSpolightArchivedFiles
description
descriptorForRequiredKeysForStyle:
destinationCallerID
deviceIsLockedDown
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithMessageSummaryInfoData:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
direction
displayNameForContact:
distantFuture
domain
domainIdentifier
donateChat:withMessage:
donateInteractionWithCompletion:
donateNextMessageBatchIfNeeded:completion:
doubleValue
downgradesToVersion
emailAddresses
endEditing
endIndexBatchWithClientState:completionHandler:
enqueueTicket:submissionHandler:
entriesForContact:
enumerateAttachmentGUIDsWithBlock:
enumerateAttribute:inRange:options:usingBlock:
enumerateAttributesInRange:options:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumeratorAtPath:
error
errorCode
errorFromResult:query:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
expectedIndexVersion
expireState
expression
expressionType
expressiveSendStyleID
fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:
fetchChatRecordsWithAtLeastHandles:serviceName:style:completionHandler:
fetchChatRecordsWithPinningIdentifier:completionHandler:
fetchDataForKey:completionHandler:
fetchFamilyCircleWithError:
fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:
fetchInteger64ForKey:completionHandler:
fetchMessageRecordWithGUID:excludeRecoverableMessages:completionHandler:
fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchSMSFilterExtensionParams
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileManager
filePath
fileSize
fileSystemRepresentation
fileTransferGUIDs
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
filterMode
filteredArrayUsingPredicate:
finishDecoding
firstName
firstNameForCNContact:
firstObject
fixIMDPersistenceAgentPriorityInversion
flags
fromMe
generatedRoomNameForGroupChat
getAliasToCNIDMap
getBoolFromDomain:forKey:
getCMMAssetOffset
getDeliveredNotificationsWithCompletionHandler:
getNotificationSettingsWithCompletionHandler:
getObjects:range:
getValueFromDomain:forKey:
groupName
groupPhotoPathCustomKey
groupUUID
guid
guidByStrippingAuxPrefix:
handle
handleDeleteAttachmentsDirectWithPredicate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleFailureInFunction:file:lineNumber:description:
handleID
handleIMDAttachmentRecordCopyFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsSortedByLastMessageDateAndFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithAtLeastHandlesOnServiceWithStyle_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithHandlesOnServiceWithDisplayNameGroupIDStyle_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithIdentifier_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithPinningIdentifier_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyGroupPhotoPaths_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopySortedChatsFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordLoadRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordMoveMessagesToRecoverableMessage_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordPermanentlyDeleteRecoverableMessagesInChatsWithGUIDs_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordRecoverMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDCoreSpotlightDeleteAttachment_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDKVIntegerForKey_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordClearUnsyncedRemovedRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopyLastMessageForChatWithRowID_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopyMessageWithGUIDExcludingRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopySortedMessagesForChatGUIDFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordDeleteJunkMessagesOlderThanDays_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordDeleteRecoverableMessagesOlderThanDays_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordLoadRecoverableMessagesPendingCloudKitDelete_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordLoadRecoverableMessagesPendingCloudKitUpdate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordMoveToRecoverableMessage_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordStoreRecoverableMessagePartBody_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateAttachmentSyndicationRanges_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateMessagesSyndicationRanges_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateRecoverableMessageSyncState_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDNotificationsPostSharePlayNotification_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleRecord
handleRecords
handleToIdentityMapKey
hasDataDetectorResults
hasMedia
hasPrefix:
hasSuffix:
hasUnseenMention
hash
highlightDictionaryFromAttributes:withItem:chat:
host
identifier
ignoreMute
im_lastPathComponent
im_livePhotoBundlePath
im_livePhotoVideoPath
im_stripCategoryLabel
imageExists
imageFilePath
imageWithURL:
importDataFromWhitetailDatabaseWithSqlOperation:resultBlock:
incomingFilesNotificationCategory
incomingMessageNotificationCategory
indexChats
indexItem:withChat:isReindexing:metadataToUpdate:timingProfiler:
indexNextMessageBatchIfNeeded:completion:
indexOfObject:
indexSearchableItems:completionHandler:
indexSetWithIndexesInRange:
indexTypeCustomKey
init
initForReadingFromData:error:
initSynchronouslyWithBundleIdentifier:
initWithAliasToCNIDMap:
initWithArray:
initWithAssetSyndications:
initWithAssociatedChatGUID:
initWithBase64EncodedString:options:
initWithBool:
initWithBundleIdentifier:
initWithBytes:length:
initWithCString:encoding:
initWithCapacity:
initWithCode:userActivity:
initWithConfiguration:
initWithContactStore:
initWithDictionaryRepresentation:
initWithDisplayName:handles:handleIdentifier:
initWithDomain:code:userInfo:
initWithFileURL:
initWithHandleID:contact:isSender:
initWithHandles:batchDeferralTime:messageAge:index:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:messageType:serviceName:
initWithIdentifier:type:displayName:personId:personIdType:
initWithInteger:
initWithIntent:response:
initWithItemContentType:
initWithItemType:text:date:dateRead:dateDelivered:datePlayed:error:type:replaceID:flags:guid:attributedBody:service:account:accountGUID:subject:handleID:countryCode:unformattedID:otherHandleID:groupTitle:groupActionType:shareStatus:shareDirection:expireState:messageActionType:associatedMessageGUID:associatedMessageType:associatedMessageRange:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:messageSummaryInfo:cloudKitSyncState:cloudKitRecordID:cloudKitServerChangeTokenBlob:cloudKitRecordChangeTag:dataDetectorsInfo:destinationCallerID:replyToGUID:sortID:threadOriginatorGUID:threadOriginatorPart:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithKey:ascending:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeysToFetch:
initWithLongLong:
initWithMessageItem:
initWithName:bundleIdentifier:
initWithObjects:
initWithObjectsAndKeys:
initWithPath:
initWithPath:storeName:dataProtectionClass:
initWithPath:tableNames:createTablesSQL:createIndexesSQL:createTriggersSQL:downgradesToVersion:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isContactSuggestion:suggestionType:
initWithPredicate:keyPathsToColumns:
initWithRecipients:content:speakableGroupName:conversationIdentifier:serviceName:sender:
initWithSender:time:guid:messageSummaryInfo:
initWithSender:time:guid:type:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:messageSummaryInfo:partCount:threadIdentifier:
initWithSortDescriptor:keyPathsToColumns:
initWithSourceDatabasePath:destinationDatabasePath:
initWithSourceDatabasePath:destinationDatabasePath:messageCount:
initWithSourceDatabasePath:destinationDatabasePath:newerThanDays:
initWithStartDate:duration:
initWithString:attributes:
initWithStringValue:
initWithSyndicationType:messagePartRange:syndicationStartDate:
initWithSyndicationType:messagePartRange:syndicationStartDate:syndicationStatus:assetDescriptor:
initWithTableName:
initWithTaskName:totalCount:
initWithTimeIntervalSinceReferenceDate:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithValue:type:
initWithValue:type:label:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
insertObject:atIndex:
intValue
integerValue
intent
interactionRecorder
invalidate
inviteeIsTeen
isAbsolutePath
isAssociatedMessage
isAuxVideo
isBusinessChatCustomKey
isCMM
isCNContactAKnownContact:
isCNContactFavorited:
isCommSafetySensitive
isCorrupt
isDateInToday:
isDateInYesterday:
isDelivered
isDirCreationDateAtPath:olderThanDays:
isEqual:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isFavoritedContact:
isFileAtDirPath:olderThanDays:
isFileHeaderDateAtPath:olderThanDays:
isFromMe
isFromMeCustomKey
isGelatoCoreEnabled
isIncoming
isInternalInstall
isKindOfClass:
isLikePhoneNumber:
isMainThread
isMemberOfClass:
isNotificationActionsEnabled
isOlderThanDays:fromDate:
isOpen
isOscarEnabled
isOutgoing
isRead
isRecovered
isSafeToDeleteAttachmentPath:
isSender
isSent
isShared
isSpam
isSpamFilteringOn
isSticker
isUnderFirstDataProtectionLock
isUnknownSenderFilteringOn
itemType
keyEnumerator
keyPathsToColumns
label
lastAlertedFailedMessageDate
lastAlertedMessageDate
lastDonatedRowID
lastIndexedRowID
lastMessageRecord
lastName
lastObject
lastPathComponent
lastProcessingMessageDate
lastRowID
lastUsedDate
leftExpression
length
level
limit
linkItemAtURL:toURL:error:
linkMetadataForPluginPayload:
livePhotoComplementKey
loadAllChatsProgressivelyEnabled
loadRecoverableMessagesMetadataGroupedByChatGUID
localIdentityKey
localIdentityProofKey
localPath
localizedDescription
localizedStringForKey:value:table:
localizedStringWithFormat:
localizedUserNotificationStringForKey:arguments:
logDictionary:
logResults:
longLongValue
longValue
lpDescriptionCustomKey
lpHasRichMediaCustomKey
lpPluginPathsCustomKey
lpTitleCustomKey
madridBusinessCategoryWithIdentifier:actions:
madridCategoryWithIdentifier:actions:
madridGroupCategoryWithIdentifier:actions:
mainBundle
makeDirectoriesInPath:mode:
mapTableRepresentation
maxRowID
meContact
meTokens
messageCount
messageIndexBatchSize:
messagePartIndex
messagePartRange
messageParts
messageRecord
messageServiceCustomKey
messageSummaryInfo
mimeType
minusSet:
momentShareURLKey
moveAttachmentsForTransfer:completion:
moveItemAtPath:toPath:error:
moveMessageRecordsToRecoveryForMessageGUIDs:deleteDate:
mutableCopy
name
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
needsDonation
needsIndexing
newCDContactForURI:
newCDInteractionForChat:message:
newCDInteractionForMessage:
newSearchableItemsForMessage:reindexing:
newSearchableItemsForMessageGUID:reindexing:
newerThanDays
nextBatch
nextBatchWithSize:
nextObject
nickname
noRelayCategoryWithIdentifier:actions:
normalizedHandleWithDestinationID:
notificationCategories
notificationCenter
notificationsContext
notifyRecipientAnyway
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
open:
operatingSystemVersionString
organizationName
originalGUID
originalMessageGUID
originalURL
otherHandle
outgoing
parameters
partCount
partKeyForAttachmentFromItem:withGUID:
partKeyForAttachmentGUID:inBody:
partNumber
path
pathExtension
pathExtensionForMIMEType:
pathExtensionForUTIType:
pathWithComponents:
payloadData
performMessageSelectionWithOperation:
performRecentsSearch:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performanceClass
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:completionHandler:
phoneNumberWithStringValue:
phoneNumbers
placeholderBusinessName
plainBody
populateUserInfoForNotificationContent:messageBalloonBundleID:payloadData:
postFirstUnlockMessage:forIdentifier:
postNotificationsWithContext:
postSharePlayNotificationForChatGUID:faceTimeConversationUUID:handleIdentifier:localizedApplicationName:
postUrgentNotificationForMessages:withContext:
postalCode
predicate
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingHandleStrings:
predicateForContactsMatchingPhoneNumber:
predicateForKey:inCollection:
predicateOperatorType
predicateWithBlock:
predicateWithFormat:
previewGeneratorClassForUTIType:
previewSummaryWithPluginPayload:
primaryRecipients
printGreeting
processInfo
productVersion
properties
query
queryItems
rangeOfString:
rangesFromSerializedString:
rawDateDelivered
rawDateEdited
rawDateRead
reIndexWithLocalProofOfInclusionForItemsAsync:
readDatabaseVersion:
readRowCountForTable:resultBlock:
reason
receivedDropEverythingEvent
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recipientAddresses
recordContactEvents:recentsDomain:sendingAddress:source:userInitiated:
recordInteractions:completionHandler:
recoverMessageRecordsForChatRecordsWithGUIDs:
recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:
recoverableMessagesMetadataPendingCloudKitSaveWithLimit:
recovered
reminderAlertCount
remoteMembers
removeAllObjects
removeCachedContactForKey:
removeDeliveredNotificationsWithIdentifiers:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeRecentContacts:error:
replaceCharactersInRange:withString:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
replaceID
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
reply
replyToGUID
repostNotificationsFromFirstUnlockWithContext:
requestWithIdentifier:content:trigger:
requestWithIdentifier:content:trigger:destinations:
resetCache
resourcePath
respondsToSelector:
retain
retainCount
retainWeakReference
retractNotificationsForReadMessages:
reverseObjectEnumerator
revertTransaction:
roomName
rowID
runArrayOfQueries:resultBlock:
runSimpleQuery:resultBlock:
runTimers
runningTimers
sandboxToken
saveAttachmentsForTransfer:chatGUID:storeAtExternalLocation:completion:
saveAttachmentsForTransfer:completion:
scheme
screenTimeNotificationOptionsForChatDictionary:
screenTimeNotificationOptionsForContext:
selectQueryForTable:
selectQueryForTable:withColumns:
selectQueryForTable:withColumns:where:
self
sender
serializedString
serializedStringFromArray:
serviceForContacts
serviceForMessages
serviceName
setAbortedTimers:
setAccount:
setAccountHandles:
setAccountID:
setAccountIdentifier:
setActionType:
setActions:
setActiveAccountAliases:
setAdditionalContactKeyDescriptors:
setAlertTopic:
setAliasToCNIDMap:
setAllowsOverrideOfObjects:
setAlternateNames:
setAssociatedMessageGUID:
setAssociatedMessageRange:
setAssociatedMessageType:
setAttachmentNames:
setAttachmentPaths:
setAttachmentTypes:
setAttributes:ofItemAtPath:error:
setAttributes:range:
setAuthorAddresses:
setAuthors:
setBalloonBundleID:
setBatchSize:
setBlocklistMessageGUIDs:
setBody:
setBodyData:
setBundleId:
setBusinessNameManager:
setByAddingObjectsFromSet:
setCache:
setCategoryIdentifier:
setChangeType:
setCity:
setCk_sync_state:
setCloudKitRecordChangeTag:
setCloudKitRecordID:
setCloudKitServerChangeTokenBlob:
setCloudKitSyncState:
setColumns:
setComplete:
setCompletionHandler:
setContactIdentifier:
setContactStore:
setContactsEventhandler:
setContentCreationDate:
setContentURL:
setCountry:
setCreateIndexesSQL:
setCreateTablesSQL:
setCreateTriggersSQL:
setCurrentHistoryToken:
setData:
setDate:
setDateEdited:
setDateFormat:
setDateInterval:
setDefaultActionURL:
setDestinationCallerID:
setDirection:
setDispatchQueue:
setDomainIdentifier:
setDomains:
setDonationMetadata:
setEndDate:
setErrorCode:
setExpirationDate:
setFamilyName:
setFilePath:
setFileTransferGUIDs:
setFlags:
setFullyFormattedAddress:
setGivenName:
setGroupIdentifier:
setGroupName:
setGroupPhotoPath:
setGuid:
setHasUnseenMention:
setHeader:
setHide_attachment:
setIdentifier:
setImage:forParameterNamed:
setIncomingFilesNotificationCategory:
setIncomingMessageNotificationCategory:
setInstantMessageAddresses:
setIntentHandlingStatus:
setInterruptionLevel:
setIsFromMe:
setIsMe:
setIsUpdate:
setLastAlertedFailedMessageDate:
setLastAlertedMessageDate:
setLastProcessingMessageDate:
setLastRowID:
setLastUsedDate:
setLatitude:
setLimit:
setLocal:
setLongitude:
setMeContact:
setMeTokens:
setMechanism:
setMentionsCurrentUser:
setMessageGUIDUnderScrutiny:
setMessageSummaryInfo:
setMetadata:
setNeedsDonateAllMessagesWithCompletion:
setNeedsMessageReindexingWithCompletion:
setNotificationCategories:
setNotificationCenter:
setNotificationThreadIdentifier:
setNotificationsContext:
setNotifyRecipientAnyway:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalGUID:
setOriginalMessageGUID:
setOtherCountryCode:
setOtherUnformattedID:
setOwnerIdentifier:
setPartCount:
setPath:
setPlainBody:
setPostalCode:
setPotentialEventMessage:
setPredicate:
setPreferredSizeClass:
setPrimaryRecipients:
setRealertCount:
setRecentsInstance:
setRecipientAddresses:
setRecipientCount:
setRecipientNames:
setRecipients:
setRelatedUniqueIdentifier:
setReplaceID:
setReplyCountsByPart:
setReplyToCurrentUser:
setRunTimers:
setRunningTimers:
setSearchPredicate:
setSender:
setSentMessages:
setService:
setSgService:
setShared:
setShouldAddToCoreRecents:
setShouldAddToSpotlight:
setShouldAddToSuggestions:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
setShouldIgnoreRingerSwitch:
setSortID:
setSound:
setStartDate:
setStartingToken:
setStateOrProvince:
setStatus:
setStreet:
setSubject:
setSubtitle:
setSyncedSyndicationRanges:
setSyndicationRanges:
setSyndicationStatus:
setTableNames:
setThoroughfare:
setThreadIdentifier:
setThreadOriginator:
setThumbnailURL:
setTime:
setTimeDelivered:
setTimeExpressiveSendPlayed:
setTimePlayed:
setTimeRead:
setTimeout:
setTimingCollection:
setTitle:
setToneIdentifier:
setTransfer_state:
setType:
setUnformattedID:
setUnitsStyle:
setUseInProcessMapperExclusively:
setUserInfo:
setUuid:
setValue:forCustomKey:
setValue:forDomain:forKey:
setVibrationIdentifier:
setWatchesDataProtectionLockState:
setWhere:
setWithArray:
sgService
sharedDatabase
sharedDefaults
sharedFeatureFlags
sharedInstance
sharedServer
sharedService
shouldAddToCoreRecents
shouldAddToSpotlight
shouldAddToSuggestions
shouldBeAllowedByScreenTimeWhenLimited
shouldIgnoreDoNotDisturb
shouldIgnoreDowntime
shouldRetractedMessageForBalloonBundleID:
shouldSuppressScreenLightUp
singleLineStringFromPostalAddress:addCountryName:
sortID
sortUsingComparator:
sortedArrayUsingComparator:
sound
soundWithAlertType:
sourcePath
start
startDate
startMainTimerWithExpectedTimeoutInterval:
startOfDayForDate:
startTimingForKey:
startTimingForKey:iteration:
startTimingWithProfiler:
startTrackingTime
state
status
stopProfilingAfterIndexersBailed
stopTimingForKey:
stopTimingForKey:iteration:
stopTimingWithProfiler:
storeData:forKey:
storeRecoverableMessagePartWithBody:forMessageWithGUID:deleteDate:
street
string
stringByAbbreviatingWithTildeInPath
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByRemovingCharactersFromSet:
stringByReplacingOccurrencesOfString:withString:
stringByResolvingAndStandardizingPath
stringFromContact:style:
stringFromTimeInterval:
stringGUID
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
subarrayWithRange:
submitWithHandler:networkActivity:
subpredicates
substringFromIndex:
substringToIndex:
substringWithRange:
suggestedContactNameCustomKey
suggestedContactPhotoCustomKey
suggestionsFromMessage:options:completionHandler:
suggestionsService:needsContextForConversationIdentifier:numberOfMessagesNeeded:
superclass
supportsDataDetectors
supportsSpotlight
syncedSyndicationRanges
syndicationForPartIndex:asset:
syndicationRanges
syndicationStartDate
syndicationStatus
syndicationTypeForAttachmentRecord:verbose:
tableName
tableNames
taskName
temporaryHighQualityLocalPath
text
thoroughfare
threadIdentifier
threadOriginatorGUID
ticketForForwardGeocodePostalAddress:maxResults:traits:
time
timeDelivered
timeExpressiveSendPlayed
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePlayed
timeRead
timingCollection
timingProfileKey
title
titleFromLPLinkMetadata:
totalCount
totalTimeForKey:
total_bytes
trackEvent:withDictionary:
transferGUID
transferName
transferState
transfer_state
triggerWithTimeInterval:repeats:
trimDatabaseWithOperation:
trimmedString
tuManagerQueue
type
uncanonicalizedURIString
unformattedID
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueIdentifier
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateAssetInfoWith:asset:range:
updateAttachmentSyndicationRanges:shouldHideFromSyndication:
updateAttributes:withAddressFromContact:
updateAttributesWithSharedWithYouMetadata:withItem:chat:
updateCacheForAliases:
updateConversationManagerWithItem:chat:attributes:
updateMessageSyndicationRanges:shouldHideFromSyndication:
updateMessagesRanges:withMessagePartSyndicationRanges:didUpdate:
updatePostedNotificationsForMessages:withContext:
updateRecoverableMessageSyncState:forMessageRowID:onPartIndex:
updateWithCompletedCount:
urlAddresses
userInfo
utiString
vCardCoordinateForMapURL:outLatitude:outLongitude:
vCardMapURLForContact:
vCardNameForContact:
validateAlertCount:
validateAndCleanupID:
value
value:withObjCType:
valueForCustomKey:
valueForKey:
valueWithBytes:objCType:
verboseLoggingEnabled
vibration
videoComplementPathForResourceURL:
visitAddContactEvent:
visitAddGroupEvent:
visitAddMemberToGroupEvent:
visitAddSubgroupToGroupEvent:
visitDeleteContactEvent:
visitDeleteGroupEvent:
visitDropEverythingEvent:
visitRemoveMemberFromGroupEvent:
visitRemoveSubgroupFromGroupEvent:
visitUpdateContactEvent:
visitUpdateGroupEvent:
where
writeDatabaseVersion:resultBlock:
writeToFile:atomically:
writeToURL:options:error:
zone
@40@0:8@16@24Q32
@"NSArray"40@0:8@"NSObject<SGSuggestionsServiceMessagesProtocol>"16@"NSString"24Q32
@16@0:8
v40@0:8@16Q24@?32
v24@0:8@16
v16@0:8
@"<NSObject><SGSuggestionsServiceMessagesProtocol>"
@64@0:8@16@24@32@40@48q56
B32@0:8@16@?24
B24@0:8@?16
B16@0:8
B32@0:8q16@?24
B40@0:8@16^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24@?32
B32@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16@?24
@28@0:8i16@20
^{sqlite3=}16@0:8
q16@0:8
^{sqlite3=}
@"NSString"
@"NSArray"
v32@0:8@16@?24
v32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSString"16@?<v@?@"NSData">24
v32@0:8@"NSString"16@?<v@?q>24
v32@0:8@"NSData"16@"NSString"24
@24@0:8@16
v40@0:8@16^f24^f32
@"NSData"
@"NSCache"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@24@0:8^{_NSZone=}16
^v16@0:8
^{__CFArray=}16@0:8
{?=*q^{?}I^v}24@0:8q16
i24@0:8q16
^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}16@0:8
@408@0:8q16@24q32q40q48q56q64q72q80@88@96@104@112@120@128@136@144@152@160@168@176q184q192q200q208q216@224q232{_NSRange=QQ}240@256@264@272q280@288q296@304@312@320@328@336@344q352@360@368@376@384q392q400
@24@0:8Q16
i20@0:8i16
i16@0:8
@32@0:8@16@24
@48@0:8@16@24@32@?40
@40@0:8@16@24@32
q24@0:8q16
v24@0:8q16
@32@0:8@16q24
v44@0:8@16q24B32B36B40
v28@0:8@16B24
v20@0:8B16
v48@0:8@16@24@32@40
v44@0:8@16@24@32B40
v40@0:8@16@24@32
v36@0:8@16@24B32
B36@0:8@16@24B32
v24@0:8@?16
v36@0:8B16^B20@?28
@36@0:8@16@24B32
B40@0:8@16@24@32
v24@0:8Q16
Q24@0:8^B16
B32@0:8@16@24
B28@0:8@16B24
Q24@0:8@16
@44@0:8@16@24@32B40
@44@0:8@16B24B28B32^B36
@60@0:8@16@24@32B40B44B48^B52
@28@0:8@16B24
B72@0:8@16@24@32@40@48@56q64
@"UNUserNotificationCenter"
@"UNNotificationCategory"
@"IMBusinessNameManager"
@"CNContact"
@"NSSet"
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
^{_IMDHandleRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16@0:8
^{_IMDChatRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{__CFArray}q^{_IMDMessageRecordStruct}q}16@0:8
@"NSMutableArray"
v32@0:8q16@?24
v56@0:8@16@24@32Q40@?48
v36@0:8@16B24@?28
@32@0:8@16^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24
q36@0:8@16B24^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}28
v40@0:8q16q24q32
@24@0:8q16
v32@0:8q16@?<v@?@"IMDMessageRecord">24
v56@0:8@"NSString"16@"NSPredicate"24@"NSArray"32Q40@?<v@?@"NSArray">48
v36@0:8@"NSString"16B24@?<v@?@"IMDMessageRecord">28
v28@0:8@"NSString"16B24
v32@0:8@"NSArray"16@"NSDate"24
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
@"NSArray"24@0:8q16
v40@0:8@"NSAttributedString"16@"NSString"24@"NSDate"32
B32@0:8@16^@24
v52@0:8@16@24B32@36@44
@52@0:8@16@24@32B40@44
B24@0:8@"NSDictionary"16
v52@0:8@"NSDictionary"16@"NSDictionary"24B32@"CSSearchableItemAttributeSet"36@"IMDSpotlightIndexerTimingProfiler"44
@"NSArray"52@0:8@"CSSearchableItemAttributeSet"16@"NSDictionary"24@"NSDictionary"32B40@"IMDSpotlightIndexerTimingProfiler"44
v24@0:8@"IMDSpotlightIndexerTimingProfiler"16
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24B32B36
Q32@0:8@16@24
@"NSDictionary"
v32@0:8Q16@?24
B24@0:8Q16
@32@0:8@16#24
v48@0:8@16@24Q32@?40
v44@0:8@16B24Q28@?36
v52@0:8@16B24@28Q36@?44
@52@0:8@16@24@32@40C48
v44@0:8@16@24C32@?36
@"NSArray"24@0:8@"NSPredicate"16
v48@0:8@"NSPredicate"16@"NSArray"24Q32@?<v@?@"NSArray">40
v44@0:8@"NSPredicate"16B24Q28@?<v@?@"NSArray">36
v52@0:8@"NSPredicate"16B24@"NSDate"28Q36@?<v@?@"NSArray">44
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSArray">24
@"NSArray"52@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSString"40C48
v44@0:8@"NSArray"16@"NSString"24C32@?<v@?@"NSArray">36
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v24@0:8@"NSArray"16
@"NSDictionary"16@0:8
v24@0:8@"NSPredicate"16
v40@0:8@"NSPredicate"16Q24@?<v@?@"NSArray">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@16q24@?32
v44@0:8@16@24B32@?36
@32@0:8@16B24B28
B40@0:8@16B24@28B36
@44@0:8@16B24B28@32B40
@48@0:8@16@24B32@36B44
@32@0:8@16Q24
@"NSDateComponentsFormatter"
@"CRRecentContactsLibrary"
B24@0:8@"NSString"16
v40@0:8@"UNMutableNotificationContent"16@"NSString"24@"NSData"32
@"NSArray"16@0:8
@"IMDPersistenceHelloWorldClass_Impl"
v24@0:8d16
v32@0:8@16q24
d16@0:8
@"IMTimingCollection"
@"NSMutableSet"
q24@0:8@16
@32@0:8Q16@24
@32@0:8Q16Q24
v60@0:8@16Q24Q32B40@44@?52
Q40@0:8Q16Q24^B32
@"NSMutableOrderedSet"
B64@0:8@16@24@32@40@48B56B60
v52@0:8@16@24@32^B40B48
Q64@0:8@16@24@32@40@48B56B60
Q28@0:8@16B24
@"NSFileManager"
B32@0:8@16q24
B32@0:8q16@24
@32@0:8@16^@24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSPredicate"
v64@0:8@16B24@28@36@44C52@?56
v200@0:8@16{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24
v208@0:8@16@24{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}32
B40@0:8@16@24^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}32
^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16@0:8
v24@0:8^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}16
@40@0:8@16@24q32
v24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
B24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
@"CNContactStore"
@"NSMutableDictionary"
@"IMDContactStoreChangeHistoryEventsHandler"
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
@(#)PROGRAM:IMDPersistence  PROJECT:IMDPersistence-
'333333
&0:D
\+@$cjG
"-8CN_pv
IMDPersistence
SpotlightReindexer
IMDPersistenceHelloWorldClass
IMDPersistenceHelloWorld
com.apple.imdpersistence.IMDPersistenceAgent
AttachmentsSizeCheck
IMDSuggestions
Exception caught trying to create the SGSuggestionsService: %@
Exception caught trying to get suggestions for message: %@
BEGIN EXCLUSIVE;
Database
COMMIT;
REVERT;
UPDATE _SqliteDatabaseProperties SET value = %ld WHERE key = '_ClientVersion';
PRAGMA dest.table_info(%@);
name
, %@
INSERT INTO dest.%@ SELECT %@ FROM main.%@
PRAGMA foreign_keys = OFF;
ATTACH '%@' AS 'dest';
v20@?0B8@"NSError"12
DETACH DATABASE 'dest';
Open database
PRAGMA page_size = 4096;
PRAGMA auto_vacuum = 2;
PRAGMA journal_mode = wal;
SELECT value FROM _SqliteDatabaseProperties WHERE key = '_ClientVersion';
SELECT count(*) FROM %@;
SELECT value FROM kvtable WHERE key = ?
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}24
Contacts
IMDContactCache - asked to remove cached contact for nil key %@
IMDContactCache
Removing cached contact for key %@
IMDContactCache - not caching fetchResults as aliases: %@, fetchResults: %@
Caching contacts for Spotlight Contacts cache
DONE Caching contacts for Spotlight
IMDContactCache - asked to udpate cache with %@
Udpating cache with %lu aliases
v32@?0@"NSString"8@"CNContact"16^B24
IMDContactCache - asked to cache contact for nil key %@
Not caching nil contact:%@ for key:%@
IMDContactCache - Cannot get cached contact for nil key
IMDCoreSpotlight: Contacts store reported a change, updating our contacts cache
IMDCoreSpotlight: Could not fetch Change History from CNContactStore error:%@
%s Couldn't read data from file %@ ; error %@
+[IMDContactCache contactsForVCardAtPath:]
%s Failed to generate vcard summary from file %@ ; error %@
maps.apple.com
maps.google.com
%s urls %@
+[IMDContactCache vCardMapURLForContact:]
%s url host %@
%s got mapURL %@ value %@
IMDContactChangeHandler: Handling a Drop everything change history event
IMDContactChangeHandler: Handling a Add Contact change history event
IMDContactChangeHandler: Updating contact cache for handle IDs: %@
IMDContactChangeHandler: Handling a Update Contact change history event
IMDContactChangeHandler: Removing entries from contact cache for handle IDs: %@
IMDContactChangeHandler: Updating contact cache with the new CNContact for handle IDs: %@
IMDContactChangeHandler: Handling a Delete Contact change history event
INSERT INTO message_processing_task (guid, task_flags) VALUES (?, ?);
SELECT * FROM message_processing_task ORDER BY ROWID ASC LIMIT ?;
array_result
guid
task_flags
B24@?0Q8@"NSObject<OS_xpc_object>"16
v16@?0@"NSObject<OS_xpc_object>"8
UPDATE message_processing_task SET task_flags = ? WHERE guid = ?;
Delete from message_processing_task WHERE task_flags = 0;
ROWID
text
replace
service_center
handle_id
subject
country
attributedBody
version
type
service
account
account_guid
error
date
date_read
date_delivered
is_delivered
is_finished
is_emote
is_from_me
is_empty
is_delayed
is_auto_reply
is_prepared
is_read
is_system_message
is_sent
has_dd_results
is_service_message
is_forward
was_downgraded
is_archive
cache_has_attachments
cache_roomnames
was_data_detected
was_deduplicated
is_audio_message
is_played
date_played
item_type
other_handle
group_title
group_action_type
share_status
share_direction
is_expirable
expire_state
message_action_type
message_source
associated_message_guid
associated_message_type
balloon_bundle_id
payload_data
expressive_send_style_id
associated_message_range_location
associated_message_range_length
time_expressive_send_played
message_summary_info
ck_sync_state
ck_record_id
ck_record_change_tag
destination_caller_id
is_corrupt
reply_to_guid
sort_id
is_spam
has_unseen_mention
thread_originator_guid
thread_originator_part
syndication_ranges
synced_syndication_ranges
was_delivered_quietly
did_notify_recipient
date_retracted
date_edited
was_detonated
part_count
is_stewie
is_kt_verified
%K > %lld
statement == nil || statement->query == nil || statement->sql_statement == nil
void IMDSqlStatementBindTextFromCFString(IMDSqlStatement *, CFStringRef)
string
strings
void IMDSqlStatementBindTextFromArrayOfCFStrings(IMDSqlStatement *, CFArrayRef)
void IMDSqlStatementBindInt64(IMDSqlStatement *, int64_t)
statement == nil || statement->sql_statement == nil
void IMDSqlStatementBindInt(IMDSqlStatement *, int32_t)
void IMDSqlStatementBindDouble(IMDSqlStatement *, double)
void IMDSqlStatementBindBlob(IMDSqlStatement *, CFDataRef)
column.statement
int IMDIntFromSqlColumn(IMDSqlColumn)
statement
double IMDDoubleFromSqlColumn(IMDSqlColumn)
int64_t IMDInt64FromSqlColumn(IMDSqlColumn)
CFStringRef IMDStringFromSqlColumn(IMDSqlColumn)
CFDataRef IMDBlobFromSqlColumn(IMDSqlColumn)
block
void IMDSqlStatementIterateRow(IMDSqlStatement *, IMDSqlOperationColumnIterator)
sql_statement
IMDSqlColumn IMDSqlStatementColumnByIndex(IMDSqlStatement *, int)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlStatement.m
IMDSqlStatementColumnByIndex
Unexpected false '%@' in %s at %s:%d. %@
index >= 0 && index < count
ASSERTION FAILED: %@
IMDSqlColumn IMDSqlStatementColumnByName(IMDSqlStatement *, const char *)
dictionary
void IMDSqlColumnSetColumnValueInXPCDictionary(xpc_object_t, IMDSqlColumn)
xpc_object_t IMDSqlStatementGetXPCRow(IMDSqlStatement *)
CFDictionaryRef IMDSqlStatementGetRow(IMDSqlStatement *)
uint32_t IMDSqlStatementColumnCount(IMDSqlStatement *)
statement->sql_statement
public.jpeg
__kmessageItemTypeKey
__kmessageRowIDKey
__kmessageGUIDKey
__kmessageDateKey
__kmessageDateReadKey
__kmessageDateDeliveredKey
__kmessageTextKey
__kmessageAttributedBodyKey
__kmessageFlagsKey
__kmessageServiceKey
__kmessageSubjectKey
__kmessageErrorKey
__kmessageMadridTypeKey
__kmessageHasAttachmentsKey
__kmessageAttachmentsKey
__kmessageAssociatedMessageGUIDKey
__kmessageAssociatedMessageTypeKey
__kmessageAssociatedMessageRangeKey
__kmessageBalloonBundleIDKey
__kmessagePayloadDataKey
__kmessageExpressiveSendStyleIDKey
__kmessageSummaryInfoDataKey
__kmessageHandleKey
__kmessageCNContactForSenderKey
__kmessageDestinationCallerIDKey
__kmessageAccountKey
__kmessageThreadOriginatorGUIDKey
__kmessageThreadOriginatorKey
__kmessageDateEditedKey
__kchatStyleKey
__kchatPropertiesDataKey
__kchatChatIdentifierKey
__kchatChatGUIDKey
__kchatGroupNameKey
__kchatGroupPhotoGuidKey
__kchatParticipantsKey
__kchatLastAddressedHandleStringKey
__kchatGroupIDKey
__kchatOriginalGroupIDKey
__kchatIsFilteredKey
__kchatHasDNDSetKey
__kchatWasDetectedAsSMSSpamKey
__kchatSMSCategoryKey
__kchatSMSSubCategoryKey
__kchatWasDetectedAsiMessageSpamKey
__kchatWasReportedAsiMessageSpamKey
__kchatHandlesForChatKey
__kchatLastMessageTimestamp
com.apple.MobileSMS
com.apple.messages.notifications
com.apple.MobileSMS.CKDNDList
com.apple.carrier
MigratedPreferencesDomain
LastIMDNotificationPostedDate
LastFailedMessageIMDNotificationPostedDate
LastBulletinboardPostedMessageRowID
LastBulletinboardPostedDate
wasAutoDetectedForSpam
wasDetectedAsiMessageSpam
wasDetectedAsSMSSpam
SMSCategory
SMSSubCategory
CKDNDListKey
kSpokenMessageWhitelistLevel
kSpokenMessageWhitelistLevelVersion
IncomingMessageAlertFiltrationKnownSenders
IncomingMessageAlertFiltrationUnknownSenders
IncomingMessageAlertFiltrationTransactions
IncomingMessageAlertFiltrationPromotions
ShowMessagesConversationListFilteringPrompt
MessageFilteringSettingsConfirmed
IncomingMessageAlertFiltration
IncomingMessageAlertSpamFiltration
RaiseToListenEnabled
AddressMeInGroupchat
messageIsAddressedToMe
messageMentionsMe
com.apple.MobileSMS.IncomingMessageAlertCount.changed
MessageExtension
MessageExtension-Madrid
MessageExtension-MadridGroup
MessageExtension-MadridBusiness
MessageExtension-SMS
MessageExtension-NoRelay
MessageExtension-AudioRaise
MADRID_MESSAGE_FORMAT
SINGLE_SUMMARY_FORMAT
GROUP_SUMMARY_FORMAT
MADRID_BUSINESS_MESSAGE_FORMAT
TEXT_MESSAGE_FORMAT
We have not migrated the SMSBBPlugin preferences to the new UserNotifications domain...doing so now with last posted date %@
The SMSBBPlugin last posted date was null, so migrating the rowid
lastAlertedMessage is null for the old rowid: %@ -- this device hasn't posted any message notifications
The last posted rowid is %@ and the date for that message is %@
We are setting the date to be %@
Setup first load lastAlertedMessageDate %@ lastAlertedFailedMessageDate %@
setting last alerted message date to %@
setting last processing message date to %@
q24@?0@"IMDMessageRecord"8@"IMDMessageRecord"16
Skipping posting guid as we already posted messages newer: %@
   FromChat: { chatChatGUIDKey: %@
      chatGroupIDKey: %@
      chatGroupNameKey: %@ }
B24@?0@"IMDMessageRecord"8@"NSDictionary"16
Found last processing date [%lld] later then last alerted date: [%lld]
iterating new messages for newMessageDate: [%lld]-[%@], last alerted date: [%lld]-[%@]
Generated notification request for identifier %@ with category identifier %@
IMDNotificationsController
Finished posting notification: %@
v16@?0@"NSError"8
v12@?0B8
Generated notification request for failed delivery identifier %@
Finished adding notification request %@ for failed delivery with error %@
Advancing last failed message date to %@ but not posting the notification
v32@?0@"IMDMessageRecord"8Q16^B24
Post notifications after coalescing, background threading
newMessages
lastFailedDate
new messages number: [%lu] lastAlertedDate: [%lld]-[%@] lastFailedMessageAlertDate: [%lld]-[%@] lastFailedMessageDate: [%lld]-[%@]
v16@?0@"UNNotificationSettings"8
Post notifications called from client with context %@
Withdrew message notifications for message guids %@
Retract and re-post iMessage notifications sent before first unlock
We need to post these urgent message requests %@ with context %@
Updating posted notifications for messages %@
Generated an updated notification request for notification: %@
Finished updating edited message content for notification request: %@
Could not generate an updated notification request for edited message, message may have been retracted. Retracting outstanding notifications for messageGUID: %@
Retracting notifications for messageGUIDs: %@
MADRID_MESSAGE
IMSharedUtilities
CKBBContextKeyMessageGUID
CKBBContextKeyIsFirstUnlock
adding notification request under first unlock %@ with content %@
we added the notification request under first unlock %@ with error %@
IMDNotificationsController - %s asked to post notification with nil messageGUID
-[IMDNotificationsController postFirstUnlockMessage:forIdentifier:]
Not posting SharePlay notification because chatGUID (%@), faceTimeConversationUUID (%@), or handleIdentifier (%@) were missing.
Posting SharePlay notification for chat GUID %@ and handle identifier %@ with app name %@
No chat record for guid: %@
No handle record for identifier: %@
%@-%@
SharePlay Together
Not posting SharePlay notification because shouldPost was evaluated to NO
Failed to generate SharePlay notification request for chat GUID %@ and handle identifier %@
We have never set the raise to listen default, marking it as enabled
We got an audio message and raise to listen is enabled setting audio notification category
This was not an audio message
Setting the date %@ category identifier %@ thread identifier %@
Message sent with Invisible Ink
We don't have a message body for message guid %@
Unable to create formatted display string for other recipient handle from messageGUID %@
PARTICIPANT_ADDRESS_TO_YOU_ITEM
PARTICIPANT_ADDRESS_FINAL_ITEM
PARTICIPANT_ADDRESS_NON_FINAL_ITEM
GROUP_MENTION_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TITLE
GROUP_REPLY_RECEIVED_TO_YOU_TITLE
MESSAGE_SEND_RECEIVED_AS_JUNK_DEFAULT
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_DEFAULT
MESSAGE_SEND_TO_%@_RECEIVED_AS_JUNK
CKBBContextKeySenderName
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_EMAIL_ADDRESS_%@
MESSAGE_SEND_RECEIVED_AS_JUNK_BODY_PHONE_NUMBER_%@
Sender (self) ID "%@" type not identified as email or phone number. Displaying default summary for received-as-junk notification
Sender (self) ID not found (senderID is NULL). Displaying default summary for received-as-junk notification
CKBBContextKeyIsFailedMessage
MESSAGE_SEND_FAILED
MESSAGE_SEND_TO_UNKNOWN_FAILED
MESSAGE_SEND_TO_PERSON_FAILED_FORMAT
Unable to create formatted display string for handle from messageGUID %@
MENTION_RECEIVED_TITLE
REPLY_RECEIVED_TITLE
ignoreMute is YES. Contact is Emergency Broadcast enabled. Expecting notification to bypass system mute and/or system DND.
messageCNContactForSenderKey not found in messageDictionary.
Coordinated Alerts -- this is not the most active device, suppressing the screen from lighting up and not playing sound for message %@
Populating sound and display isMostActive %@ sound %@ ignoreDND %@ suppress screen light up %@
CKBBUserInfoKeyChatIdentifier
CKBBContextKeyChatGUIDs
CKBBContextKeyChatGroupID
CKBBContextKeySenderPersonCentricID
CKBBContextKeyIsAcknowledgment
CKBBContextKeyIsSticker
CKBBContextKeyIsBalloonPluginBulletin
CKBBContextKeyBalloonBundleID
CKBBContextKeyEffectIdentifier
CKBBContextKeyIsAttachmentWithEffectBulletin
CKBBContentKeyAttachmentSummary
CKBBContentKeyAttachmentCount
CKBBContentKeyCountByAttachmentType
Set userInfo for dictionaries %@
Set userInfo for message content dictionaries %@
public.vlocation
Failed to deserialize contact for message %@, error %@
IMDNotificationsController_CommSafety
CommSafety Sensitive value on the record: %@
generated previewfile url %@ for transfer %@ as unnotificationattachment %@ with error %@
We didn't generate a previewFileURL for transfer %@ to generate a notification preview
Filename was null (%@) or transfer state was not finished (%@) for file transfer %@ -- did not generate attachment preview
B56@?0@"NSString"8^@16^@24^B32^B40^@48
IncomingMessageAlertCount
Setting repeat alert count to %d
Chat has DND key set %@, not marking as spoken message allowlisted
Contact %@ isSpokenMessageAllowlisted: %d
Coordinated Alerts -- this is not the most active device, suppressing spoken messages
CoordinatedAlertQueue
v28@?0@"NSError"8B16@"NSDictionary"20
timeout waiting for completionHandler from SFCoordinatedAlertRequest
UTI might be animated (%@) but it was sent by an unknown sender, so skipping preview.
Error when copy preview image: [%@]
SpokenMessageAllowlistLevel: %lu
Last message timestamp: %f
Last message date: %@
Missing last read date for chatID %@
Message: %@ is spoken message allowlisted: %d
We don't have a contact to use. Fetching one
Stripped address: %@, contactToUse: %@
Contact to use valid. AddressBookName : %@
Address: %@, displayName = %@. Contact = %@
We don't have an address book name, so going to try and suggest a name
Defaulting to the handle for the display name
Handle display name is equal to lowercase uncanonicalized address, falling back to preserve case
Display name = %@
@"NSString"16@?0@"NSString"8
v16@?0@"NSString"8
IMBusinessNameManager
Business name lookup timed out
BUSINESS_NOTIFICATION_TITLE
IMNotificationsController
 deviceIsiPad %@ allowPromptToConfirmSetting %@ carrier setting %@
We have never set the filtering default, check if we should be doing it by default %@
isSMS %@ unknownFilterinOn %@ smsSpamFilteringOn %@ chatIsFiltered %@ isSpam %@ isContact %@
We are not posting the notification because chat has DND set (%@)                                                 or it's from a filtered unknown sender (%@)                                                 or the chat category is muted (%@)
v40@?0@"NSString"8{_NSRange=QQ}16^B32
not overriding chat silencing because override message mentions me is (%@) isSMS (%@) isBusinessChat (%@).
Request %@ is already delivered {deliveredRequest: %@ currentRequest: %@}
Reposting notification %@ that has already been delivered
Not reposting notification %@ that has already been delivered
We will post the notification request %@
We will NOT post the notification request %@
We don't post notifications during system migration
Will re-post notification request %@ because the notification has been escalated to notifyAnyway
Will re-post notification request %@ because the message content has been edited
Will re-post notification request %@ because attachment are different
Disallowing notifications during ScreenTime Downtime
Disallowing notifications during ScreenTime Comm Limits
fetch screenTimeNotificationOption for handleIDs: [%@]
STConversation
ScreenTimeCore
STConversationContext
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDNotificationsController.m
-[IMDNotificationsController screenTimeNotificationOptionsForChatDictionary:]_block_invoke
Unexpected nil '%@' in %s at %s:%d. %@
IMSTConversationClass
IMSTConversationContextClass
get screenTimeNotificationOption: [%tu]
Not synthesizing notification content from intent, message is a business chat message
INInteraction updated, re-posting notifications
Not synthesizing notification content from intent, intent was not generated for message
This notification %@ hasn't been associated with a chat yet
Not notifying for %@ because it is a silent business chat message
Not generating notification request for %@ because all message parts have been retracted
Not generating notification request for %@ because it's already highlighted in an ongoing FaceTime call
Device under first unlock, skip checking screentime
Not notifying for %@ because it is not allowed by Screen Time
shouldIgnoreDowntime for %@ : %@ 
suppressed notification generation for silenced message %@.
This notification %@ mark as sending from unknown senders
Delegating retracted check to IMExtensionNotificationManager for BalloonBundleID %@ messageGUID %@
Determined that all message parts have been retracted for messageGUID %@
LPLinkMetadataPresentationTransformer
LinkPresentation
We don't notify for delivery non-failures or failures of non-messages for messageDictionary %@
We didn't get any chat records for message record %@
We got 0 handles back for chatRecord with guid %@
DND is %@ for chat %@ based on style %lld chatIdentifier %@ groupID %@
DND is %@ for chat %@ based on group participant hash %@ handles %@ lastAddressedHandleString %@
DND is %@ for chat %@ based on originalGroupID %@
CNContact for sender %@
@"NSString"16@?0@"IMDHandleRecord"8
Re-Alert setting has changd
value
INSERT OR REPLACE INTO kvtable (key, value) VALUES (?, ?)
DELETE FROM kvtable WHERE key = ?
operation
BOOL _IMDSqlOperationRunQuery(IMDSqlOperation *, CFStringRef, IMDBlock, IMDBlock, IMFileLocation_t *)
query
operationBlock
BOOL IMDRunSqlOperation(IMDSqlOperationBlock)
BOOL _IMDSqlOperationRunQueryWithString(CFStringRef, NSError **, IMDSqlOperationBlock, IMFileLocation_t *)
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND m.ROWID >= ( SELECT * FROM (SELECT mm.rowid FROM message mm WHERE mm.GUID = ? UNION SELECT 0 ) ORDER BY ROWID DESC LIMIT 1   ) 
 AND m.item_type == 0 AND m.associated_message_type == 0 
ORDER BY cm.chat_id, cm.message_id DESC 
LIMIT ?
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?)
 AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.chat_id, cm.message_date DESC, cm.message_id DESC 
q24@?0@8@16
v24@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16
SELECT FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid 
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY cm.chat_id
message
__kIMDCNPersonNotFound
aliasMap
historyToken
dictionary_result
IMDCNRecordIDForAliases ASYNC returning updated map count %lu. Old map count %lu
IMDCNRecordIDForAliases returning map count %lu for aliases count %lu
IMDCNAliasResolver
IMDAreAllAliasesUnknown result is %d
bool_result
predicate
sortDescriptors
limit
ascending
olderThan
identifier
pinningIdentifier
serviceName
displayName
groupID
style
groupIDs
v32@?0@"NSString"8@"IMSandboxedFileURL"16^B24
v16@?0@"NSDictionary"8
chatRowID
v16@?0@"IMDMessageRecord"8
chatGUID
messageGUID
excludeRecoverableMessages
attachmentGUID
shouldHideFromSyndication
messageGUIDs
deleteDate
chatGUIDs
recoverableMessagesMetadataDictionary
days
deletedChatGUIDs
resultLimit
recoverableMessagesMetadataPendingCloudKitSave
recoverableMessagesMetadataPendingCloudKitDelete
recoverableSyncState
messageRowID
partIndex
messagePartBody
faceTimeConversationUUID
handleIdentifier
localizedApplicationName
transferGUIDs
result
v16@?0q8
Migration
!success && op.error == nil
BOOL _IMDDatabasePerformOneMigration(IMDDatabaseVersioner *, CSDBSqliteDatabase *, CSDBSqliteConnection *, int, int *, NSError **)
can't have migration %d to %d fail without error!! (Begin Transaction)
can't have migration %d to %d fail without error!! (Drop Triggers)
can't have migration %d to %d fail without error!! (Drop unknown indexes)
can't have migration  %d to %d fail without error!! (Actual migration))
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDDatabaseMigration.m
BOOL IMDCreateTriggersAndIndexes(IMDSqlOperation *, BOOL)
IMDCreateTriggersAndIndexes
success || operation->error != nil
can't have migration fail without error!!
/Library/Caches/com.apple.xbs/Binaries/MessagesCore_Sim/install/Symbols/BuiltProducts/IMDPersistence.framework/PrivateHeaders/IMDUtils.h
BOOL IMDSetOutError(NSError **, NSError *)
IMDSetOutError
Unexpected not nil '%@' in %s at %s:%d. %@
*outError
outError is already pointing at an error, this could be a leak
v16@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE display_name IS NOT NULL AND display_name != "" ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat INDEXED BY chat_idx_is_archived WHERE IS_ARCHIVED = 0 ORDER BY chat.ROWID ASC;
IMDChatQueries
Copying recent chats
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid WHERE    chat.is_archived = 0 AND chat.is_filtered = ? GROUP BY    chat.rowid ORDER BY    MAX(chat_message_join.message_date) DESC LIMIT    ?;
Found %llu recent chats for filter mode %lld
Found %lld recent subclassified chats for filter mode %lld having action: %lld and subaction: %lld
Found %llu recent chats (knownSenderLimit: %lld, otherFilterLimit: %lld)
Trying to update chats wuth lastAddressedSIMID %@ to new simID %@ and new handle %@
Old lastAddressedSIMID passed is nil, returning.
Both new lastAddressedSIMID and lastAddressedSIMID are nil, not updating chats with simID %@ and returning.
UPDATE chat                 SET last_addressed_handle = ?, last_addressed_sim_id = ?                 WHERE service_name = ? AND last_addressed_sim_id = ?;
Error executing IMDChatRemapChatsWithLastAddressedSIMIDToNewLastAddressedIDs %@ 
Last addressed handles/simIDs got modified to %@ and %@. Posting notification to reload chat registry.
com.apple.imdpersistenceagent.notification.lastaddressedidsmodified
Trying to find last address labelID/date from chatIds %@ and labelIDs %@
select max(cm.message_date),last_addressed_sim_id from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_sim_id in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedLabelID: running with query %@
last_addressed_sim_id
max(cm.message_date)
GetMessageDateAndLastAddressedLabelID: found results from db %@
labelID
SELECT guid,display_Name,chat_id from chat c INNER JOIN chat_handle_join ch ON c.ROWID = ch.chat_id INNER JOIN handle h on h.ROWID = ch.handle_id WHERE c.state = 3 AND h.id = ?
v16@?0^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}8
chat_id
SELECT handle_id FROM chat_handle_join WHERE chat_id = ?
display_name
Handle records from kIMDChatTableSelectHandleIDFromChatID query is empty.
Trying to find last address handles/date from chatIds %@ and handles %@
select max(cm.message_date),last_addressed_handle from (select * from chat where chat_identifier in (%@?) AND style=45 and service_name=? and last_addressed_handle in (%@?)) c INNER JOIN chat_message_join cm ON c.ROWID=cm.chat_id;
GetMessageDateAndLastAddressedHandle: running with query %@
last_addressed_handle
GetMessageDateAndLastAddressedHandle: found results from db %@
handle
select chat_id, max(message_date) from chat_message_join group by chat_id order by message_date desc;
max(message_date)
Unable to find most recent ChatRow IDs from chat_message_join error: %@
Received empty batch in IMDChatRecordCopyAllActiveChatsProgressivelyWithLimitAndBlock
Copying active chats progressively: total number copied was %ld
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE guid = ? ORDER BY chat.ROWID ASC;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE ROWID = (SELECT chat_id from chat_message_join WHERE message_id = ?)
Did not get results for chat guid %@
No handle provided to IMDChatRecordCopyChatsWithHandleOnService
No service provided to IMDChatRecordCopyChatsWithHandleOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    chat_identifier = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No identifier provided to IMDChatRecordCopyChatsWithIdentifierOnService
No service provided to IMDChatRecordCopyChatsWithIdentifierOnService
No roomname provided to IMDChatRecordCopyChatsWithRoomnameOnService
No service provided to IMDChatRecordCopyChatsWithRoomnameOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    room_name = ? AND    service_name = ? ORDER BY chat.ROWID ASC;
No group ID provided to IMDChatRecordCopyChatsWithGroupID
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    group_id = ? ORDER BY chat.ROWID ASC;
No roomname provided to IMDChatRecordCopyNewestChatForGroupIDOnService
No service provided to IMDChatRecordCopyNewestChatForGroupIDOnService
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    original_group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join on    chat_id == chat.rowid WHERE    group_id = ? AND    service_name = ? ORDER BY    chat_message_join.message_date DESC LIMIT    1;
guid == NULL || guid.length == 0
void IMDChatRecordDeleteChatForGUID_Fast(NSString *)
DELETE FROM chat WHERE guid = ?;
Query for GUID yields %d results, deleting all
GroupPhotoImage
   => file doesn't exist at path: %@
  => failed to remove item at path: %@ 
  => Successfully deleted item at path: %@ 
Unable to associate message with chat, the chat is NULL (chat guid: %@)
Unable to associate message with chat, the message is NULL (message guid: %@)
Unable to disassociate message from chat, the chat is NULL.
Unable to disassociate message from chat, the message is NULL.
Unable to update filter flag, the chat record is NULL.
Deleting all empty chats.
DELETE FROM chat WHERE ((SELECT COUNT(*) FROM chat_message_join WHERE chat_id = chat.ROWID) == 0 AND (SELECT COUNT(*) FROM chat_recoverable_message_join WHERE chat_id = chat.ROWID) == 0);
Error occured while deleting empty chats %@
Finished deleting all empty chats.
Request to insert guid %@ recordID %@ timeStamp %lld
INSERT INTO sync_deleted_chats (guid, recordID, timestamp) VALUES (?, ?, ?);
Returned from IMDP after inserting in synd deleted table guid %@ recordID %@ timeStamp %lld
Request to load deleted chat recordIDs with limit %lld
select guid, recordID, timestamp from sync_deleted_chats where LENGTH(recordID) > 0;
recordID
timeStamp
Returned from DB call after loading messages to delete messages count %lu
Request to clear pending deletes from chat table
delete from sync_deleted_chats;
IMDMessageQueries
IMDChatClearPendingDeleteChatsTable cleared pending delete chat table
Returned from DB call after marking clearing all pending delete chats
Request to reset messages with error %lld to error %lld on chatGUIDS %@
deleting attachment failed at path: %@: %@
Removed attachment at path: %@
No attachment to remove at path: %@
Resetting downloadState for attachment guid: %@
Attachment already marked as needing download for guid: %@
Purging attachment files for chat guid: %@
Found %ld messages for chat
Found %ld attachments for message: %@
Failed to load attachments for message: %@
Failed to load message at index: %ld
Updated %lld attachments on %ld messages
No messages load for chat: %@
Chat record not loaded for chat: %@
Reindexing %ld messages
chat
state
account_id
properties
chat_identifier
service_name
room_name
account_login
is_archived
group_id
is_filtered
successful_query
engram_id
server_change_token
original_group_id
last_read_message_timestamp
cloudkit_record_id
is_blackholed
syndication_date
syndication_type
is_recovered
uncanonicalized_id
person_centric_id
SELECT DISTINCT  c.guid FROM   chat c INNER JOIN chat_message_join cm ON   c.ROWID = cm.chat_id INNER JOIN message m ON   m.ROWID = cm.message_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.style = 45 
rowIDCount
CFStringRef kIMDChatRemapMessagesWithErrorCodeToErrorCode(int)
theQuery
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?
)) AND error=?
UPDATE message SET error=? WHERE rowid IN (SELECT message_id FROM chat_message_join WHERE chat_id IN (?)) AND error=?
op == nil || op->connection == nil || op->database == nil
void IMDSqlOperationWasInitialized(IMDSqlOperation *)
chat_message_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id)
chat_handle_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id)
message_attachment_join
message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id)
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, person_centric_id TEXT, UNIQUE (id, service) 
deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL
message_processing_task
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, task_flags INTEGER NOT NULL 
sync_deleted_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT 
sync_deleted_chats
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL, recordID TEXT,timestamp INTEGER
sync_deleted_attachments
kvtable
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, key TEXT UNIQUE NOT NULL, value BLOB NOT NULL
chat_recoverable_message_join
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, delete_date INTEGER, ck_sync_state INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id), CHECK (delete_date != 0)
unsynced_removed_recoverable_messages
ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, chat_guid TEXT NOT NULL, message_guid TEXT NOT NULL, part_index INTEGER
recoverable_message_part
chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, part_index INTEGER, delete_date INTEGER, part_text BLOB NOT NULL, ck_sync_state INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id, part_index), CHECK (delete_date != 0)
CREATE TABLE IF NOT EXISTS %@ (%@);
select name from sqlite_master where type = 'table'
v40@?0{IMDSqlColumn=^{IMDSqlStatement}*ii}8^B32
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDTables.m
int64_t IMDRowCountForTable(NSString *, NSError **)
IMDRowCountForTable
tableName
select count(*) from %@
void IMDCreateLegacyTables(IMDSqlOperation *)
IMDCreateLegacyTables
BOOL IMDCreateTablesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTablesWithOperation
BOOL IMDDropTableWithOperation(IMDSqlOperation *, NSString *, BOOL)
IMDDropTableWithOperation
DROP TABLE IF EXISTS %@;
sqlite_stat1
IF NOT EXISTS
SELECT name, sql FROM sqlite_master WHERE type = 'table';
Expected: %@
  Actual: %@
BOOL IMDConfirmTablesCreatedAsExpected(NSError **)
IMDTables.m
index check failed
attachment
created_date
start_date
filename
mime_type
transfer_state
is_outgoing
user_info
transfer_name
total_bytes
is_sticker
sticker_user_info
attribution_info
hide_attachment
ck_server_change_token_blob
original_guid
is_commsafety_sensitive
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat  c WHERE ( c.ROWID IN ( 
SELECT chat_id FROM chat_handle_join WHERE handle_id IN (SELECT ROWID FROM handle WHERE id = ?)
 INTERSECT 
 AND c.service_name = ?
 AND c.display_name = ?
 AND c.group_id = ?
 AND style = ?
 AND (SELECT COUNT(handle_id) FROM chat_handle_join WHERE chat_id = c.ROWID) = ?
%s WHERE %@
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat 
WHERE %@
ORDER BY %@ 
%s %@ %@ LIMIT ?
AND (%@)
DESC
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid    AND chat_message_join.message_date = (SELECT MAX(message_date) FROM chat_message_join WHERE chat_message_join.chat_id = chat.rowid) WHERE    chat.is_archived = 0 %@ GROUP BY    chat.rowid HAVING    chat_message_join.message_date < ? ORDER BY    chat_message_join.message_date %@ LIMIT    ?;
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat LEFT OUTER JOIN chat_message_join ON    chat_message_join.chat_id == chat.rowid    AND chat_message_join.message_date = (SELECT MAX(message_date) FROM chat_message_join WHERE chat_message_join.chat_id = chat.rowid) WHERE    chat.is_archived = 0 %@ GROUP BY    chat.rowid ORDER BY    chat_message_join.message_date %@ LIMIT    ?;
void _IMDPerformBlockWithDelay(NSTimeInterval, dispatch_block_t, IMFileLocation_t *)
recordStore
void _IMDPerformBlock(dispatch_block_t, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlock(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedMessageStoreBlockWithoutInitialize(CSDBLockedRecordStore, IMFileLocation_t *)
void _IMDPerformLockedDatabaseBlock(CSDBLockedDatabase, IMFileLocation_t *)
threadedRecordStore
recordStoreRef
void _IMDPerformLockedStatementBlockWithQuery(CFStringRef, CSDBLockedStatement, IMFileLocation_t *)
void _IMDPerformLockedConnectionBlock(CSDBLockedConnection, IMFileLocation_t *)
com.apple.IMDPersistenceIPCQueue
void IMDSqlOperationInvalidateCaches(IMDSqlOperation *)
operation == nil || operation->connection == nil
void IMDSqlOperationUpdateLastDeleteSequenceNumber(IMDSqlOperation *)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperationCoreSDB.m
IMDSqlOperationUpdateLastDeleteSequenceNumber
IMDSharedThreadedRecordStore()
CSDBRecordStoreRefFromThreadedRecordStoreRef(IMDSharedThreadedRecordStore())
operation->connection
connection
__CSDBRecordSequenceNumber
IMDSqlOperation IMDSqlOperationInitWithCSDBConnection(CSDBSqliteConnection *, CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBConnection
IMDSqlOperation IMDSqlOperationInitWithCSDBDatabase(CSDBSqliteDatabase *)
IMDSqlOperationInitWithCSDBDatabase
sqlConnection
CSDBSqliteDatabaseConnectionForWriting returned a nil CSDBSqliteConnection
database
IMDSqlOperation IMDSqlOperationInitWithSharedCSDBDatabase(void)
IMDSharedSqliteDatabase() should not be nil
IMDSqlOperation IMDSqlOperationInitWithThreadedMessageStore(CSDBThreadedRecordStoreRef)
IMDSqlOperationInitWithThreadedMessageStore
messageStore
IMDSqlOperation IMDSqlOperationInitAndCreateIfNeededWithPath(NSString *)
IMDSqlOperationInitAndCreateIfNeededWithPath
path
IMDSqlOperation IMDSqlOperationInitWithPath(NSString *)
IMDSqlOperationInitWithPath
Database not found at %@
void IMDSqlOperationSetThreadedMessageStore(IMDSqlOperation *, CSDBThreadedRecordStoreRef)
IMDSqlOperationSetThreadedMessageStore
Error IMDMessageRecordCreateFromRecordIDWithLock could not create message for id %lld
CFStringRef IMDMessageRecordCopyGUID(CFAllocatorRef, IMDMessageRecordRef)
CFStringRef IMDMessageRecordCopyGUIDUnlocked(CFAllocatorRef, IMDMessageRecordRef)
CFStringRef IMDMessageRecordCopyText(CFAllocatorRef, IMDMessageRecordRef)
int64_t IMDMessageRecordGetItemType(IMDMessageRecordRef, Boolean)
int64_t IMDMessageRecordGetDate(IMDMessageRecordRef, Boolean)
SELECT chat_id FROM chat_message_join WHERE message_id = ?;
SELECT c.rowid FROM chat c INNER JOIN chat_message_join j   ON c.rowid = j.chat_id INNER JOIN message m   ON m.rowid = j.message_id WHERE m.guid = ?;
SELECT attachment_id FROM message_attachment_join WHERE message_id = ? LIMIT ?;
MessageRecord
Found legacy GUID %@ in list of attachments
void IMDMessageRecordBulkCopy(IMDMessageRecordRef, IMDMessageRecordItemType *, int64_t *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFNumberRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, Boolean *, Boolean *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *, int64_t *, CFStringRef *, int64_t *, NSRange *, CFStringRef *, CFDataRef *, CFStringRef *, int64_t *, CFDataRef *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, int64_t *)
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?);
void IMDMessageRecordAddAttachmentIfNeededUnlocked(IMDMessageRecordRef, IMDAttachmentRecordRef)_block_invoke
void IMDMessageRecordBulkUpdate(IMDMessageRecordRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, CFStringRef, CFDataRef, CFNumberRef, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, int64_t, int64_t, int64_t, int64_t, int64_t, CFStringRef, int64_t, NSRange, CFDataRef, CFStringRef, int64_t, CFDataRef, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, CFStringRef, int64_t, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, int64_t)
recordIdentifier
flags
void _IMDMessageRecordBulkCopyXPCDictionary(IMDMessageRecordRef, xpc_object_t, Boolean, Boolean, Boolean)
handle_cache
other_handle_cache
attachments_cache
Messages
Request to markAllUnsuccessFullySyncedMessagesAsNeedingSync 
update message set ck_sync_state=0 where ck_sync_state=2;
Executed query to mark all unsuccessfuly synced messages as needing sync
Error executing markAllUnsuccessFullySyncedMessagesAsNeedingSync %@ 
IMDMessageRecord
<IMDMessageRecord %p [%p]>{}
void _IMDMessageRecordSetHandleID(IMDMessageRecordRef, int64_t)
void _IMDMessageRecordSetOtherHandleID(IMDMessageRecordRef, int64_t)
threadCountsByPart
B24@?0r*8@"NSObject<OS_xpc_object>"16
v32@?0@"NSString"8@"NSNumber"16^B24
IMActiveAccountAliasesKey
iMessage
SELECT person_centric_id FROM handle where ID = '%@' and service = 'iMessage'
IMDHandleRecord
We are setting the person_centric_id for a non-iMessage handle to be %@
CFStringRef IMDHandleRecordCopyID(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyCountry(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyUncanonicalizedID(CFAllocatorRef, IMDHandleRecordRef)
CFStringRef IMDHandleRecordCopyPersonCentricID(CFAllocatorRef, IMDHandleRecordRef)
void IMDHandleRecordBulkCopy(IMDHandleRecordRef, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *)
void IMDHandleRecordBulkUpdate(IMDHandleRecordRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
IMDHandle
Updating handle: %@   ID: %@   Country: %@   Service: %@  Unformatted: %@ PersonCentricID: %@
void _IMDHandleRecordBulkCopyXPCDictionary(IMDHandleRecordRef, xpc_object_t, Boolean)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCFHandleRecord.m
BOOL IMDDeleteOrphanedHandles(IMDSqlOperation *)
IMDDeleteOrphanedHandles
DELETE FROM handle WHERE ROWID IN (SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL));
SELECT ROWID FROM handle h1 WHERE ((SELECT 1 from chat_handle_join WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE handle_id = h1.ROWID LIMIT 1) IS NULL AND (SELECT 1 from message WHERE other_handle = h1.ROWID LIMIT 1) IS NULL);
<IMDHandleRecord %p [%p]>{}
Fetched last message %@ for chat with rowID: %lld
No chat record for chat with rowID: %lld
Bad predicate provided to %s (%@)
-[IMDDatabase(Messages) fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:]
Bad sort descriptor provided to %s (%@)
Fetching messages for chat: %@ filtered by predicate: %@ sortDescriptors: %llu limit: %llu
Database | One or more invalid required parameters: messageGUID: %@, completionHandler: %@
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE message.guid = ?;
Updating syndication ranges for message item with guid %@. newSyndicationRange: %@
Updated syndication ranges for message: %@
Did NOT update syndication ranges for message: %@
New Range:
Original Ranges:
-[IMDDatabase(Messages) updateAttachmentSyndicationRanges:shouldHideFromSyndication:]
%s Found corresponding IMMessageItem for attachment GUID %@
v32@?0@"NSString"8Q16^B24
%s Found corresponding IMMessagePartDescriptor for attachment GUID %@ (actualAttachmentGUID %@)
messageItem is CMM, routing to alternative path to handle IMMessagePartSyndicationAssetDescriptors
%s message item with GUID %@ did not update its syndication ranges
Failed to find matching messagePart for attachment GUID %@
-[IMDDatabase(Messages) _updateMessageItemSyndicationRanges:messagePartDescriptor:shouldHideFromSyndication:]
%s Updating syndication ranges for message guid: %@, part %ld, range: %@
%s Removing message part range from syndication %@ for message item with GUID %@
%s Unhiding syndication for message part range %@ for message item with GUID %@
%s NOT updating message syndication ranges for message item with GUID %@ because it is already unhidden. currentSyndicationRange: %@
%s Updating message syndication ranges for message item with GUID %@. newSyndicationRange: %@
%s newSyndicationRange was nil. Did not update syndication ranges for message with GUID %@
+[IMDDatabase(Messages) _newSyndicationRangeForCMMMessageItem:syndicationIdentifier:shouldHideFromSyndication:]
Attachment is CMM preview, aborting since we don't care about donating preview to CoreSpotlight
%s Found corresponding IMMessagePartDescriptor for fileTransferGUID %@ (actualAttachmentGUID %@)
%s Updating asset syndication descriptor to be hidden for part index %ld on message item with GUID %@
%s Updating asset syndication descriptor to be not hidden for part index %ld on message item with GUID %@
%s NOT updating CMM asset syndication for message item with GUID %@ because it is already unhidden. current syndications: %@
-[IMDDatabase(Messages) updateMessageSyndicationRanges:shouldHideFromSyndication:]
%s Found IMMessageItem for message GUID %@
%s Found partNumber %ld for message GUID %@
%s messagePart number not foound for message GUID %@, updating all %ld parts
Recently Deleted | Will begin moving messages to recoverable message table with deleteDate: %@ for %lu unique messages
INSERT INTO chat_recoverable_message_join (chat_id, message_id, delete_date)   SELECT chat_id, message_id, ?   FROM chat_message_join AS cmj   JOIN message AS m   ON m.ROWID = cmj.message_id AND m.guid = ?;
DELETE FROM chat_message_join WHERE message_id = ? AND message_id IN ( SELECT message_id FROM chat_recoverable_message_join WHERE message_id = ?);
Recently Deleted | Finished moving messages to recoverable message table for %lu unique messages
Recently Deleted | Will begin permanently deleting recoverable messages for %lu chatGUIDs
Recently Deleted | Cannot delete recoverable messages in chats without chatGUIDs or beforeDate
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, -1 FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID=crmj.chat_id AND c.guid = ? JOIN message AS m  ON m.ROWID=crmj.message_id AND crmj.delete_date < ? AND crmj.ck_sync_state=1 UNION ALL SELECT c.guid, m.guid, rmp.part_index FROM recoverable_message_part AS rmp JOIN chat AS c  ON c.ROWID=rmp.chat_id JOIN message AS m  ON m.ROWID=rmp.message_id AND rmp.delete_date < ? AND rmp.ck_sync_state=1;
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, -1 FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID=crmj.chat_id AND c.guid=? JOIN message AS m  ON m.ROWID=crmj.message_id AND crmj.ck_sync_state=1;
DELETE FROM message AS m WHERE m.ROWID IN (  SELECT crmj.message_id   FROM chat_recoverable_message_join AS crmj   JOIN message AS m   ON crmj.message_id = m.ROWID   JOIN chat AS c ON crmj.chat_id = c.ROWID and c.guid = ?   WHERE crmj.delete_date < ?    AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join))) );
DELETE FROM message WHERE NOT (group_action_type IN (1,3) AND (ROWID IN (SELECT message_id FROM message_attachment_join))) AND (ROWID IN (SELECT message_id                FROM chat_recoverable_message_join AS crmj                JOIN chat AS c                ON c.ROWID = crmj.chat_id AND c.guid = ?));
DELETE FROM recoverable_message_part AS rmp WHERE rmp.chat_id IN (  SELECT c.ROWID  FROM chat AS c  WHERE c.guid = ?);
Recently Deleted | Finished permanently deleting recoverable messages for %lu chatGUIDs
SELECT m.date FROM chat_recoverable_message_join AS crmj JOIN chat AS c ON c.ROWID = crmj.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = crmj.message_id ORDER BY m.date DESC LIMIT 1 
Unexpected column in count chat messages query with index %d
Junk Messages | Will begin permanently deleting junk messages
Junk Messages | Cannot delete junk messages in chats without beforeDate
DELETE FROM message AS m WHERE m.ROWID IN (  SELECT cmj.message_id   FROM chat_message_join AS cmj   JOIN message AS m   ON cmj.message_id = m.ROWID   JOIN chat AS c ON cmj.chat_id = c.ROWID and c.guid = ?   WHERE m.date < ? );
Junk Messages | Finished permanently deleting junk messages for %lu chatGUIDs
SELECT m.date FROM chat_message_join AS cmj JOIN chat AS c ON c.ROWID = cmj.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = cmj.message_id ORDER BY m.date DESC LIMIT 1 
SELECT COUNT(*) FROM chat_recoverable_message_join AS crmj JOIN message AS m ON crmj.message_id = m.ROWID JOIN chat AS c ON crmj.chat_id = c.ROWID WHERE c.guid = ? AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))
SELECT COUNT(*) FROM chat_message_join AS cmj JOIN message AS m ON cmj.message_id = m.ROWID JOIN chat AS c ON cmj.chat_id = c.ROWID WHERE c.guid = ? AND NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))
SELECT c.guid, crmj.message_id, m.guid, crmj.delete_date, -1, NULL FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON c.ROWID = crmj.chat_id JOIN message AS m  ON m.ROWID = crmj.message_id WHERE crmj.ck_sync_state = 0  UNION ALL SELECT c.guid, rmp.message_id, m.guid, rmp.delete_date, rmp.part_index, rmp.part_text  FROM recoverable_message_part AS rmp  JOIN chat AS c   ON c.ROWID = rmp.chat_id  JOIN message AS m   ON m.ROWID = rmp.message_id  WHERE rmp.ck_sync_state = 0 LIMIT ?;
Recently Deleted | Unexpected column in messages pending update query with index %d
Recently Deleted | Error in column values returned: %@|%@|%@|%@|%@
deleteDateInterval
partBody
SELECT urrm.chat_guid, urrm.message_guid, urrm.part_index FROM unsynced_removed_recoverable_messages AS urrm LIMIT ?;
Recently Deleted | Unexpected column in messages pending delete query with index %d
Error in column values returned: %@|%@|%@
UPDATE chat_recoverable_message_join AS crmj SET ck_sync_state = ? WHERE crmj.message_id = ?;
UPDATE recoverable_message_part AS rmp SET ck_sync_state = ? WHERE rmp.message_id = ? AND rmp.part_index = ?;
INSERT INTO recoverable_message_part (chat_id, message_id, part_index, delete_date, part_text, ck_sync_state)   SELECT cmj.chat_id, cmj.message_id, ?, ?, ?, 0   FROM chat_message_join AS cmj   JOIN message AS m   ON m.ROWID = cmj.message_id AND m.guid = ?;
DELETE FROM unsynced_removed_recoverable_messages;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMAbstractDatabaseArchiver.m
-[IMAbstractDatabaseArchiver initWithSourceDatabasePath:destinationDatabasePath:]
sourcePath
destinationPath
-[IMAbstractDatabaseArchiver copyDatabase:]
Failure in %s at %s:%d. %@
required override
Attempting to delete failed anonymized database...
unable to delete failed anonymous database: %@ at %@
%@: guid: %@, total_bytes: %lld, ck_sync_state: %@, transfer_state: %@, file path: %@
SELECT guid, original_guid, filename, total_bytes, ck_sync_state, transfer_state, hide_attachment FROM attachment;
before_delete_on_attachment
BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END
after_delete_on_attachment
AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END
after_delete_on_chat_message_join
AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1) AND OLD.message_id NOT IN (SELECT chat_recoverable_message_join.message_id from chat_recoverable_message_join WHERE chat_recoverable_message_join.message_id = OLD.message_id LIMIT 1); END
after_delete_on_chat_recoverable_message_join
AFTER DELETE ON chat_recoverable_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1) AND OLD.message_id NOT IN (SELECT chat_recoverable_message_join.message_id from chat_recoverable_message_join WHERE chat_recoverable_message_join.message_id = OLD.message_id LIMIT 1); END
after_insert_on_chat_message_join 
AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END
after_delete_on_message_attachment_join
AFTER DELETE ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 0     WHERE       message.ROWID = OLD.message_id       AND       (SELECT 1 from message_attachment_join WHERE message_id = OLD.message_id LIMIT 1) IS NULL; END
after_insert_on_message_attachment_join
AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END
after_delete_on_message
AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
after_delete_on_chat_handle_join
AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END
AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END
add_to_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END
add_to_sync_deleted_messages
AFTER DELETE ON message BEGIN     INSERT INTO sync_deleted_messages (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
add_to_sync_deleted_attachments
AFTER DELETE ON attachment BEGIN     INSERT INTO sync_deleted_attachments (guid, recordID) VALUES (OLD.guid, OLD.ck_record_id); END
after_delete_on_chat
AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END
delete_associated_messages_after_delete_on_message
AFTER DELETE ON message BEGIN DELETE FROM message WHERE (OLD.associated_message_guid IS NULL AND associated_message_guid IS NOT NULL AND guid = OLD.associated_message_guid); END
update_message_date_after_update_on_message
AFTER UPDATE OF date ON message BEGIN UPDATE chat_message_join SET message_date = NEW.date WHERE message_id = NEW.ROWID AND message_date != NEW.date; END
after_delete_on_message_plugin
AFTER DELETE ON message WHEN OLD.balloon_bundle_id IS NOT NULL BEGIN   SELECT after_delete_message_plugin(OLD.ROWID, OLD.guid); END
update_last_failed_message_date
AFTER UPDATE OF error ON message WHEN   NEW.error != 0 AND NEW.date > COALESCE((SELECT value FROM kvtable WHERE key = 'lastFailedMessageDate'), 0) BEGIN   INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', NEW.date);   INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageRowID', NEW.rowID); END
IMDCKDatabase
Not adding trigger for external builds %@
CREATE TRIGGER IF NOT EXISTS %@ %@
SELECT name FROM sqlite_master WHERE type = 'trigger'
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDTriggers.m
DROP TRIGGER IF EXISTS %@
select * from sqlite_master where type = 'trigger'
BOOL IMDCreateTriggersWithOperation(IMDSqlOperation *, BOOL)
IMDCreateTriggersWithOperation
BOOL IMDDropTriggersWithTriggerNames(NSArray *, BOOL)
IMDDropTriggersWithTriggerNames
names
BOOL IMDCreateTriggersWithTriggerNames(NSArray *, BOOL)
IMDCreateTriggersWithTriggerNames
IMDCoreSpotlightIndexer - Invalid to call IMDCoreSpotlightBaseIndexer directly, use subclass
com_apple_mobilesms_indexType
com_apple_mobilesms_fromMe
com_apple_mobilesms_businessChat
com_apple_mobilesms_service
com_apple_mobilesms_chatUniqueIdentifier
com_apple_mobilesms_suggested_contact_name
com_apple_mobilesms_suggested_contact_photo
com_apple_mobilesms_groupPhotoPath
IMDCoreRecentsApiInitProfilingKey
participants
time
lalh
%@:%@
IMDCoreSpotlightRecipientIndexer
Got %lu participants, date %@ service %@ lastAddressedLocalHandle %@ isFromMe %@ senderID %@ sendingAddress %@
IMDCoreSpotlightFullNameForContactProfilingKey
IMDCoreSpotlightContactsHandleIDForHandler
IMDCoreSpotlightCoreRecentsRecentEventForAddress
IMDCoreSpotlightCreateCoreSpotlightPerson
Adding name %@
groupPhotoGUID
groupPhotoPath
groupName
plainBody
destinationCallerID
threadOriginator
Not donating INInteraction for message without a date, to prevent message send from appearing to have taken place now.
Not donating INInteraction for non-text message.
Not donating INInteraction during re-indexing
Not donating INInteraction for message from me
chatIdentifier
uncanonicalizedHandle
IMDCoreSpotlightIndexer
generated CSPersons %@
IMDCoreSpotlightCreateCoreSpotlightPersonForHandleID
generated self person %@
IMDCoreSpotlightAddAuthorDataTimingKey
 Adding profile name of length %@ 
 Adding profile avatar path 
Adding author %@ author senderID %@
IMDCoreSpotlightRecipientIndexer - Failed to get author CSPerson for !isFromMe message
@"NSString"16@?0@"CSPerson"8
Setting primary recipients %@
Setting primary recipient IDs %@
Setting author %@
Setting author IDs %@
balloonBundleID
IMDCoreSpotlightMessageBodyIndexer
Message is a balloon plugin type, deferring to later indexers
com.apple.IMCoreSpotlight
IMCSPoisonPillEnabled
poison_abort
IMDCoreSpotlightMessageBodyIndexer - Poison pill abort detected, crashing!
poison_spin
(IMDCoreSpotlightMessageBodyIndexer - Poison pill spin detected, hanging!
setting text content %@
associatedMessageType
IMDCoreSpotlightMessageMetadataIndexer
Item is of type %ld
%s GUID %@ is of type %ld, not indexing
+[IMDCoreSpotlightMessageMetadataIndexer cancelIndexingForItem:]
accountID
setting date %@ accountID %@ lastAddressedLocalHandle %@ service %@
payloadData
isFiltered
IMDCoreSpotlightMessageBalloonPluginIndexer
known sender: %@
Indexing balloon with bundle ID %@
Found a rich link to index
IMDCoreSpotlightMessageBalloonPluginIndexer - Failed to get summary text
IMDCoreSpotlightMessageBalloonPluginIndexer - Failed to get Title from LP for url.
Found a non-rich SMS link to index
com_apple_mobilesms_lpDescription
com_apple_mobilesms_lpTitle
attachments
https://
com_apple_mobilesms_lpRichMedia
com_apple_mobilesms_lpPluginPaths
hasAttachments
IMDCoreSpotlightMessageAttachmentIndexer
Adding attachment name %@
Failed to determine attachment name!
Adding attachment UTI type to %@
Failed to determine attachment UTI type!
No attachment Paths to add
No attachment names to add
No attachment types to add
messageSummaryInfo
Not donating CMM preview attachment to CoreSpotlight. attachmentIndex: %lu, cmmOffset: %lu, attachmentGUID: %@, syndicationIdentifier: %@
attributionInfo
Not donating attachment to CoreSpotlight because preview generation failed. attachmentGUID: %@
setting attachment name %@
isCommSafetySensitive
Setting attachment index type to %@
Failed to determine attachment index type!
Setting attachment UTI type to %@
Got address to index %@
Setting address to %@
Indexing .loc.vcf with attributes %@
syndicationRanges
Appended Shared with You meta-data
Creating new attribute set with messageGUID %@ chatGUID %@
Not donating the chat's unique identifier to spotlight because it was nil.
attachmentDomain
Generated %lu aux items for message guid %@
pluginpayload
pluginpayloadattachment
pkpass
order
UTI Type is %@ generator class is %@
csspto
apto
isSticker
messageSummaryInfo: %@
messageHasAttachments %@ isPlugin %@ isCMM %@ messageSupportsIndexing %@
com_apple_mobilesms_isSyndicatableMedia
com_apple_mobilesms_livePhotoComplementPath
com_apple_mobilesms_momentShareURL
com_apple_mobilesms_PHAssetUUID
IMDCoreSpotlightMessageHighlightIndexer
Message highlight indexer updating SearchableItem with identifier %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqliteUtilities.m
NSString *IMDGetTimeStampedFilePath(NSString *, NSString *)
IMDGetTimeStampedFilePath
yyMMdd-HHmmss
-%@.%@
-%@-%@.%@
NSString *IMDGetDestinationFilePath(NSString *, NSString *, NSString *)
IMDGetDestinationFilePath
originalPath
destFolder
fileName
newFileName
NSString *IMDGetDatabasePath(void)
IMDGetDatabasePath
/var/mobile/Library/Logs/CrashReporter/Messages/AnonymizedDatabases
anon
trimmed
Tried to change DB on non gizmo device. This is not supported!!
Database QuickSwitch tried to downgraded incompatible database versioin %ld
Database QuickSwitch Downgrade got unsuccessful result
BOOL _IMDArchiveDatabase(IMAbstractDatabaseArchiver *, NSError **)
_IMDArchiveDatabase
copier
%@ %@
IMDCoreDueDonation
 => Nuking chat: %@
 => Nuking messages: %@
Donate a Chat with a Message to Interaction Store
IMDCoreDueDonation 
donation failed with error %@
Cannot create a CDInteraction with the chat and message record
 => Before first unlock, skipping donation
isBlackholed
IMDCoreDueDonation - Skipping donation %@, denylisted
IMDCoreDueDonation - Skipping donation %@, bailed out
Created interaction for message %@
Donating next batch of messages. Batch size of %lu
IMDCoreDueDonation %s - Not donate. Batch size %lu needsDonation %@ hasMigrated %@
-[IMDCoreSpotlightManager(CoreDuetDonation) donateNextMessageBatchIfNeeded:completion:]
totalTime
sqlQuery
interactionCreation
DonationRecording
Batch donation failed with error %@
Donation complete!
Setting lastDonatedRowID to %lu
IMDCoreDueDonation: %s - Generated no interaction items :(
IMDCoreDueDonation %s - Got no records from IMDMessageRecordCopyMessagesFromRowIDDescLimit. Stopping donation
IMCoreSpotlight
Timing %@
IMCSNeedsDonation
IMCSLastDonatedRowID
Getting chat for message id %lld
%s starting batch donation
-[IMDCoreSpotlightManager(CoreDuetDonation) setNeedsDonateAllMessagesWithCompletion:]
%s max cmj rowID %lld
IMDCoreDueDonation: Failed to get max cmj row ID for indexing!
_CDInteractionRecorder
Class get_CDInteractionRecorderClass(void)_block_invoke
IMDCoreSpotlight_CoreDuetDonation.m
Unable to find class %s
void *CoreDuetLibrary(void)
_CDInteraction
Class get_CDInteractionClass(void)_block_invoke
_CDContact
Class get_CDContactClass(void)_block_invoke
SELECT   c.ROWID, c2.ROWID, ch.handle_id FROM   chat c INNER JOIN chat c2 ON   c2.chat_identifier = lower(c.chat_identifier)   AND c2.style = c.style INNER JOIN chat_handle_join ch ON   c2.ROWID = ch.chat_id WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = (SELECT ch.handle_id FROM chat_handle_join ch WHERE ch.chat_id = ? LIMIT 1) 
UPDATE   chat_message_join SET   chat_id = ? WHERE   chat_id = ?   AND message_id NOT IN (SELECT cm.message_id FROM chat_message_join cm WHERE cm.chat_id = ?) 
DELETE FROM   chat WHERE   rowid = ? 
SELECT   c.ROWID, c.guid, c.chat_identifier FROM   chat c WHERE   c.style = 45   AND c.chat_identifier != lower(c.chat_identifier) 
UPDATE   chat SET     guid = ?,     chat_identifier = ? WHERE     ROWID = ?
SELECT   h.rowid, h2.rowid FROM   handle h INNER JOIN handle h2 ON   h2.id = lower(h.id)   AND h2.service = h.service WHERE   h.id != lower(h.id) 
UPDATE   chat_handle_join SET   handle_id = ? WHERE   handle_id = ?   AND chat_id NOT IN (SELECT ch2.chat_id FROM chat_handle_join ch2 WHERE ch2.handle_id = ?) 
UPDATE   message SET   handle_id = ? WHERE   handle_id = ? 
DELETE FROM   handle WHERE   rowid = ? 
UPDATE   handle SET     uncanonicalized_id = id,     id = lower(id) WHERE     id != lower(id)
SELECT ROWID, id, country, service, uncanonicalized_id, person_centric_id FROM handle WHERE   id = ? AND   service = ? ORDER BY handle.ROWID ASC;
object
v32@?0@"NSString"8@16^B24
__xpc__event_code__
IMDDatabaseClient | One or more invalid required parameters: xpc_object_t message: %@, messageGUID: %@, completionHandler: %@
IMDDatabaseClient
Not sending XPC message for SharePlay notification because message (%@), chatGUID (%@), faceTimeConversationUUID (%@), or handleIdentifier (%@) were nil
Recently Deleted | Could not create xpc message. Not clearing message tombstones
IMDDatabaseClient | Early return: Recently Deleted:storeRecoverableMessagePartWithBody given messageGUID: %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDPersistenceTests/IMDSqlQuery.m
-[IMDSqlQuery createQueryString]
Use one of the subclasses
SELECT %@ FROM %@
 WHERE %@
 LIMIT %lld
Attachments
Not deleting at original path %@ because we're storing at an external path %@
   => transfer has empty file name, bailing: %@
   => transfer is not ready to save
   => persistent path is zero length for transfer: %@
   => transfer could not ensure persistent path: %@
   => local path is already the same as destination path. Not moving or copying.
   => file already exists for transfer: %@
   => file is already in attachment store: %@
Failed to consume sandbox token, %@ token: %@
   => successfully copied file to path: %@
   => checking if file has any siblings to copy
   => copying video complement: %@
        ...removing old file in 10: %@
        ...removing old file: %@
        ...removing old sibling file: %@
   => ** failed copying file to path: %@
          The error was %@
   => failed copy file to path: %@, will try move
      The error was %@
   => ** failed moving file to path: %@
   => ** failed copying file from path, file not on disk: %@
Failed to release sandbox token, %@ token: %@
Changing permissions on attachment file at %@
    => Permissions changed: %@  error: %@
   => Success! returning path: %@
Not deleting attachment path, last component is Attachments
Not deleting attachment path, last component is not guid-like %@ guidPathComponent: %@
/var/mobile/Library/SMS/Attachments
Not deleting attachment path, not in attachment store: %@
Bailing out of legacy attachment path deletion, %@ has other contents in path
Bailing out of legacy attachment path deletion, %@ is not an eligible path
Path was in attachment store, removing %@
Can't migrate sibling attachments to the same folder
Looking for sibling files of %@ in %@
Sibling search found orig filename %@, skipping
Will migrate sibling at path %@ to %@
Failed to copy sibling attachment to dst. Orig %@ sibling %@ dst %@ error %@
Successfully migrated %@ to %@
Failed to update permissions on sibling file dst path %@ error %@
Request to delete attachment for transfer: %@ high quality: %@
  => No persistent path for transfer found: %@
  => failed to remove item at path: %@  for transfer: %@
  => Successfully deleted item at path: %@  for transfer: %@
Generating path for sticker transfer %@ isSticker %@
Overriding guid for transfer in _persistentPathForTransfer %@
Storing group photo at an accessible location.
%02x
%02d
Resulting path %@   for transfer: %@
/var/mobile/Library/SMS
Input path: %@
DB Path: %@
Anonymizing database at: '%@'...
Copying database (to be anonymized) from %@ to %@ failed: %@
Anonymizing data:
Failed to anonymize attachments with error: %@
Anonymizing failed with error: %@
Failed to delete partially anonymized database at with error: %@
IMPORTANT -- Please manually delete database here:
Successfully Deleted partially anonymized database at '%@'
%@: %d%% completed
%@: %d%% completed; %@ elapsed
%@: %d%% completed; %@ elapsed; ~%@ remaining
  Replacing '%@' in '%@' with '%@ <ROWNUM>'
UPDATE %@ SET %@ = "[%@ " || ROWID || "]" WHERE %@ IS NOT NULL AND %@ != '';
Cleaning text
SELECT ROWID, attributedBody, text, message_summary_info FROM message
UPDATE message SET text = ?, attributedBody = ?, message_summary_info = ? WHERE ROWID = ?
v32@?0@"NSDictionary"8Q16^B24
Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 
v40@?0@"NSDictionary"8{_NSRange=QQ}16^B32
UPDATE attachment SET filename = ((SELECT rtrim(filename, (SELECT transfer_name FROM attachment WHERE ROWID = a1.ROWID)) FROM attachment a1) || ROWID || ".JPG");
Cleaning attachment path
UPDATE attachment SET transfer_name = ROWID || ".JPG" WHERE transfer_name IS NOT NULL AND transfer_name != '';
Cleaning attachment name
UPDATE attachment SET mime_type = "image/jpeg";
Updating attachment mimetype
UPDATE attachment SET uti = "public.jpeg";
Updating attachment uti
UPDATE attachment SET total_bytes = 67946;
setting attachment size
  %@
~/Library/SMS/Attachments/

-Attachments
Creating anonymous attachments in directory at %@
SELECT filename FROM attachment
Cleaning attachments
rowID
expressiveSendStyleID
loginID
syndicationType
syndicationDate
lastMessageDate
Icons
SOS_lt_60.png
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCoreSpotlightIndexHelpers.m
NSString *_IMDCoreSpotlightHandleID(IMDHandleRecord *__strong _Nonnull)
_IMDCoreSpotlightHandleID
CNContact * _Nonnull _IMDCoreSpotlightCNContactForHandle(IMDHandleRecord *__strong _Nonnull)
_IMDCoreSpotlightCNContactForHandle
IMDCoreSpotlight: Address is nil, we are returning nil.
IMDCoreSpotlight: Validated Address is nil, we are returning nil. Address: %@
IMDCoreSpotlight: No cached contact for ID:%@. We are refetching.
IMDCoreSpotlight: Contact Store (email)fetch failed: %@
IMDCoreSpotlight: Got a Contact for address %@. Caching and returning contact.
IMDCoreSpotlight: Contact Store (phone)fetch failed: %@
IMDCoreSpotlight: Did not get a Contact for address %@ from Contact Store. Caching mutable contact: %@
IMDCoreSpotlight: Return contact: %@
CSPerson *_IMDCoreSpotlightPerson(NSString *__strong _Nonnull, NSString *__strong _Nonnull, CNContact *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDCoreSpotlightPerson
handleID
Created CSPerson: %@, fullName: %@, handleID: %@, contact: %@, service: %@
NSString *_IMDContactsKindForID(NSString *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDContactsKindForID
NSString *_IMDCoreRecentsKindForHandleID(NSString *__strong _Nonnull, NSString *__strong _Nonnull)
_IMDCoreRecentsKindForHandleID
pendingNicknamesKeyStore.db
pendingNicknameUpdatesStore
handledNicknamesKeyStore.db
handledNicknamesStore
We got an error loading the nickname info from the kv store for notifications %@
We got an error unarchiving the nickname dictionary %@
We have a nickname dictionary for %@ %@
MAYBE
CRRecentWeightMessagesReceivedAddress
CoreRecents
map url
_AddLocationsFromVCFToCoreRecents() was passed a nil filePath
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentContactMetadataEventTime
CRRecentContactMetadataReferenceURL
CRRecentContactMetadataFromAddress
CRRecentContactMetadataFromAddressKind
CRRecentContactMetadataFrom
sms:/open?message-guid=%@
DataDetectors
CoreRecents metadata:%@
Screenshot
v24@?0@"NSArray"8@"NSError"16
Suggestion service request timed out
Using suggested name "%@" for handle %@
Business name updated to "%@", calling interaction updated handler
For handle %@ used contacts to determine displayName "%@" and image. Using contactID: %@
For handle %@ used nickname to determine displayName "%@" and image %@
For handle %@ used nickname to determine displayName "%@" and no image
For handle %@ used uncanonicalized address to determine displayName "%@" and no image
Using image file path: %@
Image file path is nil
Image does not exist at nickname file path
Chat
None of the current chat participants match the current senderID, creating a new person.
speakableGroupName
CNPhoneNumber
INPersonHandleLabelForCNLabeledValue
Intents
VIEW_ATB_OPTIONS
notificationCaption
DROP TRIGGER IF EXISTS delete_attachment_files;
SELECT ROWID, address, date, text, flags, replace, svc_center, group_id, association_id, height, UIFlags, version, subject, country, headers, recipients, read, madrid_attributedBody, madrid_handle, madrid_version, madrid_guid, madrid_type, madrid_roomname, madrid_service, madrid_account, madrid_account_guid, madrid_flags, madrid_attachmentInfo, madrid_url, madrid_error, is_madrid, madrid_date_read, madrid_date_delivered FROM message_legacy ORDER BY ROWID ASC
analyze;
CREATE TABLE IF NOT EXISTS V21_MIGRATION_GROUP_CHAT_MAP (chat_id INTEGER REFERENCES chat(ROWID), group_id INTEGER NOT NULL, is_broadcast INTEGER NOT NULL, UNIQUE (chat_id, group_id, is_broadcast) );
CREATE TABLE IF NOT EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id INTEGER REFERENCES msg_group_legacy(ROWID), handle_id INTEGER REFERENCES handle(rowid), UNIQUE (group_id, handle_id) );
INSERT INTO message (  guid,   text,   replace,   service_center,   subject,   country,   attributedBody,   version,   type,   service,   account,   account_guid,   error,   date,   date_read,   date_delivered ) SELECT   madrid_guid,   text,   replace,   svc_center,   subject,   country,   madrid_attributedBody,   1,   madrid_type,   'iMessage',   madrid_account,   madrid_account_guid,   madrid_error,   date,   madrid_date_read,   madrid_date_delivered FROM   message_legacy WHERE   ROWID = ?
UPDATE   message SET   is_delivered = ?,   is_finished = ?,   is_emote = ?,   is_from_me = ?,   is_empty = ?,   is_delayed = ?,   is_auto_reply = ?,   is_prepared = ?,   is_read = ?,   is_system_message = ?,   is_sent = ?,   has_dd_results = ?,   is_service_message = ?,   is_forward = ?,   was_downgraded = ?,   is_archive = ? WHERE   ROWID = ? 
SELECT   ROWID FROM   chat WHERE   room_name = ?     OR    chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT   ROWID FROM   chat WHERE   chat_identifier = ?   AND service_name = 'iMessage' LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   room_name = ?     OR   chat_identifier = ? LIMIT 1
SELECT ROWID, style, state, account_id, properties, chat_identifier, service_name, guid, room_name, account_login, participants FROM   madrid_chat_legacy WHERE   chat_identifier = ? LIMIT 1
INSERT INTO chat (  guid,   style,   state,   account_id,   properties,   chat_identifier,   service_name,   room_name,   account_login ) SELECT   guid,   style,   state,   account_id,   properties,   chat_identifier,   'iMessage',   room_name,   account_login FROM   madrid_chat_legacy WHERE   ROWID = ?
UPDATE chat SET room_name = ? WHERE ROWID = ? AND room_name is NULL
UPDATE chat SET guid = ? WHERE ROWID = ?
INSERT INTO chat_handle_join (handle_id, chat_id) values (?, ?)
INSERT INTO chat_message_join (   chat_id,   message_id ) VALUES (   ?,   ? )
SELECT   ROWID FROM   handle WHERE   id = ?   AND service = ? LIMIT 1 
int64_t __createHandleRecord(CSDBSqliteConnection *, CFStringRef, CFStringRef, CFStringRef, CFStringRef)
INSERT INTO handle (  id,   service,   country,   uncanonicalized_id ) VALUES (   ?,   ?,   ?,   ? ) 
missed call
UPDATE   message SET   handle_id = ? WHERE   ROWID = ? 
Boolean __findOrCreateiMessageAttachmentsForLegacyGUID(CSDBSqliteConnection *, CFStringRef, int64_t)
SELECT   ROWID FROM   attachment WHERE   guid = ? LIMIT 1 
SELECT   ROWID FROM   madrid_attachment_legacy WHERE   attachment_guid = ? 
INSERT INTO attachment (  guid,   created_date,   start_date,   filename,   uti,   mime_type,   transfer_state ) SELECT   attachment_guid,   created_date,   start_date,   filename,   uti_type,   mime_type,   transfer_state FROM   madrid_attachment_legacy WHERE   ROWID = ?
INSERT INTO message_attachment_join (   message_id,   attachment_id ) VALUES (   ?,   ? )
INSERT INTO message (guid, text) values (?, ?);
DELETE FROM message WHERE ROWID = ?;
UPDATE message SET     attributedBody = ?,     text = ?,     date = ?,     date_read = ?,     date_delivered = ?,     service_center = ?,     version = ?,     country = ?,     service = ?,     is_delivered = ?,     is_finished = ?,     is_emote = ?,     is_from_me = ?,     is_empty = ?,     is_delayed = ?,     is_auto_reply = ?,     is_prepared = ?,     is_read = ?,     is_system_message = ?,     is_sent = ?,     has_dd_results = ?,     is_service_message = ?,     is_forward = ?,     was_downgraded = ?,     subject = ?,     error = ?,     handle_id = ? WHERE     ROWID = ?
SELECT   COUNT(ROWID) FROM   message_legacy WHERE   ROWID < ?   AND group_id = ?   AND association_id = ?   AND is_madrid = 0 
INSERT INTO chat (   guid,   style,   state,   chat_identifier,   service_name,   room_name ) VALUES (   ?,   ?,   ?,   ?,   ?,   ? )
SELECT count(rowid) FROM group_member_legacy WHERE group_id = ?
SELECT ROWID, group_id, address, country FROM group_member_legacy WHERE group_id = ?
SELECT handle_id from V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP where group_id = ?
SELECT address from message_legacy where group_id = ?
INSERT INTO V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP (group_id, handle_id) values (?, ?)
SELECT chat_id from V21_MIGRATION_GROUP_CHAT_MAP where group_id = ? AND is_broadcast = ?
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived FROM chat WHERE     style = ? AND     service_name = ? ORDER BY ROWID ASC
SELECT handle_id from chat_handle_join where chat_id = ? ORDER BY handle_id ASC
INSERT INTO V21_MIGRATION_GROUP_CHAT_MAP (chat_id,group_id,is_broadcast) values (?, ?, ?)
SELECT   id FROM   handle WHERE   ROWID = ? LIMIT 1
SELECT   COUNT(message_id) FROM   chat_message_join WHERE   chat_id = ? 
CKPlaceholderTimeSince1970Property
UPDATE   chat SET   properties = ? WHERE   ROWID = ? 
SELECT ROWID, message_id, data, part_id, preview_part, content_type, height, version, flags, content_id, content_loc, headers FROM msg_pieces_legacy WHERE message_id = ? AND preview_part < 0 ORDER BY part_id ASC
application/smil
text/plain
INSERT INTO attachment (guid, mime_type, uti, created_date, transfer_state) values (?, ?, ?, ?, 5);
INSERT INTO message_attachment_join (message_id, attachment_id) values (?, ?);
UPDATE attachment SET filename  = ? WHERE guid = ?
%d-%d
/var/mobile/Library/SMS/Parts/
DROP TABLE IF EXISTS V21_MIGRATION_GROUP_CHAT_MAP
DROP TABLE IF EXISTS V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP
BOOL _IMDSqlOperationBeginQuery(IMDSqlOperation *, CFStringRef, IMFileLocation_t *)
operation->statement.sql_statement
void IMDSqlOperationSetError(IMDSqlOperation *, CFErrorRef)
BOOL IMDSqlOperationFinishQuery(IMDSqlOperation *)
BOOL IMDSqlOperationBeginTransaction(IMDSqlOperation *)
BEGIN IMMEDIATE;
BOOL IMDSqlOperationCommitTransaction(IMDSqlOperation *)
operation->transaction
trying to commit transaction when we don't have one.
BOOL IMDSqlOperationRevertTransaction(IMDSqlOperation *)
Trying to revert transaction when we don't have one. This may mean we have a transaction open on this same sql_connection with another IMDSqlOperation
ROLLBACK;
BOOL IMDSqlOperationCommitOrRevertTransaction(IMDSqlOperation *)
BOOL IMDSqlOperationRelease(IMDSqlOperation *, NSError **)
NSArray *_IMDSqlOperationGetRowsWithBindingBlock(IMDSqlOperation *, CFStringRef, dispatch_block_t)
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperation.m
_IMDSqlOperationGetRowsWithBindingBlock
binder
rows
NSArray *_IMDSqlOperationGetRowsForQueryWithBindingBlock(CFStringRef, NSError **, IMDSqlOperationBlock)
_IMDSqlOperationGetRowsForQueryWithBindingBlock
binderBlock
BOOL IMDSqlOperationExecuteQuery(IMDSqlOperation *, NSString *, IMDBlock)
IMDSqlOperationExecuteQuery
BOOL IMDSqlOperationHasRows(IMDSqlOperation *)
void IMDSqlOperationIterateRow(IMDSqlOperation *, IMDSqlOperationColumnIterator)
IMDSqlColumn IMDSqlOperationColumnByIndex(IMDSqlOperation *, int)
IMDSqlColumn IMDSqlOperationColumnByName(IMDSqlOperation *, const char *)
IMDSqlOperationColumnByName
uint32_t IMDSqlOperationColumnCount(IMDSqlOperation *)
void _IMDSqlOperationSetQuery(IMDSqlOperation *, CFStringRef)
operation->statement.query
void _IMDSqlOperationReleaseQuery(IMDSqlOperation *)
(operation->error == nil && operation->statement.stepCount == 0)
SQL operation results never read from statement
Saving new chat record to database with identifier: %@ displayName: %@ groupID: %@ originalGroupID: %@ service: %@
CFStringRef IMDChatRecordCopyGUID(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyChatIdentifier(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyGUIDUnlocked(CFAllocatorRef, IMDChatRecordRef)
CFStringRef IMDChatRecordCopyDisplayName(CFAllocatorRef, IMDChatRecordRef)
SELECT cm.message_id from chat_message_join cm where cm.chat_id = ? ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT 1;
SELECT ROWID from message m WHERE m.item_type == 0 AND m.ROWID in (SELECT message_id FROM chat_message_join where chat_id = ?) ORDER BY date DESC, ROWID DESC LIMIT 1
SELECT message_id FROM chat_message_join WHERE chat_id = ? ORDER BY ROWID DESC LIMIT ?;
void _IMDChatRecordBulkCopy(IMDChatRecordRef, int64_t *, int64_t *, CFStringRef *, CFDataRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, int64_t *, CFStringRef *, int64_t *, CFStringRef *, CFStringRef *, int64_t *, int64_t *, int64_t *, int64_t *)
void IMDChatRecordSetIsArchived(IMDChatRecordRef, int64_t)
void IMDChatRecordSetIsBlackholed(IMDChatRecordRef, int64_t)
void IMDChatRecordSetIsRecovered(IMDChatRecordRef, int64_t)
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?);
SQLite returned %d from IMDChatRecordAddMessageIfNeededUnlocked
void IMDChatRecordRemoveMessage(IMDChatRecordRef, IMDMessageRecordRef)
DELETE FROM chat_message_join WHERE chat_id = ? AND message_id = ?;
IMDSpotlight
INSERT INTO chat_handle_join (chat_id, handle_id) VALUES (?, ?)
DELETE FROM chat_handle_join WHERE chat_id = ? AND handle_id = ?
void IMDChatRecordBulkUpdate(IMDChatRecordRef, int64_t, int64_t, CFStringRef, CFDataRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, int64_t, int64_t, CFStringRef, CFStringRef, int64_t, CFStringRef, int64_t, CFStringRef, CFStringRef, int64_t, int64_t, int64_t, int64_t)
void _IMDChatRecordBulkCopyXPCDictionary(IMDChatRecordRef _Nonnull, xpc_object_t _Nonnull, Boolean, Boolean, Boolean, Boolean)
handles_cache
last_message_cache
unread_count_cache
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDCFChatRecord.m
BOOL IMDMergeDuplicateChatsWithOperation(IMDSqlOperation * _Nonnull, NSArray<NSString *> * _Nonnull, NSString * _Nonnull, NSString * _Nullable)
IMDMergeDuplicateChatsWithOperation
losingChatGUIDs
winningChatGUID
ForkMerge
failed dropping triggers: %@
UPDATE chat_message_join SET chat_id = (SELECT ROWID FROM chat WHERE guid = ?) WHERE (chat_id = (SELECT ROWID FROM chat WHERE guid = ?) AND message_id NOT IN (SELECT message_id from chat_message_join WHERE chat_id =  (SELECT ROWID FROM chat WHERE guid = ?)));
failed updating chat_message_join table: %@ for unwanted chat: %@
DELETE FROM chat_handle_join WHERE chat_id IN (SELECT ROWID FROM chat WHERE guid %@)
failed deleting chat_handle_join rows failed (%@) - for unwanted chats: %@
UPDATE chat SET display_name = '%@' WHERE guid = '%@';
failed recreating the triggers: (%@) - for unwanted chats: %@
Finished merging %ld (%@) unwanted chats into %@ 
Being to merge %lld (%@) duplicate chats into winning chat %@
IMDMergeDuplicateChatsWithOperation failed in db with error: %@
Finished repairing %lld duplicate chats in %f seconds
error_domain
error_code
error_localized_description
Finished merging duplicated chats in %f seconds
IMDMergeDuplicateChatsWithOperation in agent failed with error: %@
IMDChatRecord
<IMDChatRecord %p [%p]>[%lld]{}
Could not get chat record for identifier %lld
last_message_date_on_load
SELECT   m.ROWID, m.attributedBody FROM   message m WHERE   m.text IS NULL   AND m.attributedBody IS NOT NULL   AND (    SELECT       COUNT(*)     FROM       message_attachment_join     WHERE       message_id = m.ROWID   ) = 0 
UPDATE   message SET     text = ? WHERE     ROWID = ?
%@, error: %@
SQL_ERROR
DMIsMigrationNeeded
DataMigration
IMDSystemMigration
system migration finished: %@
system needs to finish migration still, not allowing indexing
com.apple.imdsmsrecordstore
mobile
kIMDPersistenceLastBuild
Needs migration, not allowing indexing, lastBuild: %@, currentBuild: %@
Migration not needed, allowing indexing, lastBuild: %@ currentBuild: %@
No current build version, allowing indexing
We have migrated, lastBuild: %@
IMDCoreSpotlightIndexerProfiler
All Indexers
%@-%ld
IMDCoreSpotlightClientQueue
Indexing %lu number of items with Index %@
IMDChatAddMessageToSpotlight: [async] indexing searchable items failed with error %@. Using Index %@
Indexing item ID %@ domain %@
v40@?0@"NSError"8@"NSArray"16@"NSArray"24@"NSArray"32
Number of pseudo-contacts %@
Number of pseudo-event %@
 => Before first unlock, skipping indexing
%s reindexing message
CSSearchableItem *_IMDChatAddMessageToSpotlight(IMDChatRecord *__strong, IMDMessageRecord *__strong, BOOL, IMDCoreSpotlightFiltered *)
bailing early, chatGUID (%@) or sender handle (%@) was nil
v32@?0@"IMDHandleRecord"8Q16^B24
Adding selfName %@ selfPerson %@ lastAddressedLocalHandle: %@
Caught exception: %@   name: %@   reason: %@   userInfo: %@ in function: %s
_IMDChatAddMessageToSpotlight
IMDChatAddMessageToSpotlight: deleting message for searchable items failed with error %@
 => Nuking attachment message parts: %@
IMDCoreSpotlightDeleteAttachmentParts: deleting attachment message part for searchable items failed with error %@
 => Deleting this chat
IMDCoreRecentDeleteChat bailing because we were passed no handles
performRecentsSearch: not performing recents SEARCH since a valid handleAlias was not found for handleRecord: gi%@
performRecentsSearch - recents = %@
Recents remove failed with error %@
performRecentsSearch: recents SEARCH failed with error %@
IMDCoreSpotlightDeleteChatGUID: Failed to delete items with domain identifier %@ with error %@
 => Indexing chat: %@
No chats to add
Adding %lu chats to CoreSpotlight
 => Before first unlock, skipping re-indexing of messages
Trying to reindex messages with an empty guids array
Request to re-index messages with messages count: %d
total time for indexing messages
generate indexable item
Done re-indexing messages, time: %@
 => %s Before first unlock, skipping indexing
void IMDCoreSpotlightSetNeedsMessageReindex(__strong dispatch_block_t)
void IMDCoreSpotlightIndexNextMessageBatchIfNeeded(NSUInteger, __strong dispatch_block_t)
Found %ld messages guids to remove from spotlight
Found 0 messages guids to remove from spotlight
kIMDPersistenceHasFixedIsFiltered
Needs to fix is filtered: %@
Doesnt to fix is filtered: %@
We fixed isFiltered
SLCollaborationHandshakeController
SocialLayer
IMCSDoNotIndex
Current blocklist size is %lu
Blocklist size > %d on load, truncating
-[IMDCoreSpotlightManager setMessageGUIDUnderScrutiny:]
-[IMDCoreSpotlightManager clearMessageGUIDFromScrutiny:]
IMDCoreSpotlight - Skipping indexing %@, denylisted - isBlackholed: %@
Indexing placing %@ under scrutiny
post-processor
Indexing %@ threw exception %@
Indexing removing %@ from scrutiny
Indexing NOT removing %@ from scrutiny, exception was thrown
spamFiltrationExtensionID
com.apple.smsFilter.extension
Skipping adding resolvedURL since link is older than %d days: %@
Setting CS Item with uniqueidentifier  %@ to be updatable
GEO request to geocode %lu items
GEO Created and enqueuing geo ticket %p for %@ 
GEO ticket complete for item %@
IMDCoreSpotlight %s - Geocoding failed with error %@
-[IMDCoreSpotlightManager _geocodeItems:]_block_invoke_3
v16@?0@"<GEOMapServiceThrottlableTicket>"8
IMDCoreSpotlight %s: item %@ returned invalid coordinate from geocode
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]
IMDCoreSpotlight %s: indexing geocoded searchable item %@ failed with error %@
-[IMDCoreSpotlightManager _updateItem:withGeoMapItem:]_block_invoke
IMDCoreSpotlightChatIndexer
Appending autodonation state %@ for chat with guid: %@
Appending autodonation server date %@ for chat with guid: %@
chatDomain
com_apple_mobilesms_isChatAutoDonating
com_apple_mobilesms_chatAutoDonatingServerDate
com_apple_mobilesms_chatStyle
com_apple_mobilesms_localIdentityProof
com_apple_mobilesms_localIdentity
com_apple_mobilesms_handleToIdentityMap
IMDCoreSpotlight: Failed to add chat searchable items with error %@
IMDCoreSpotlight: Failed to delete chat searchable items with unique identifier %@ with error %@
%s starting reindex
-[IMDCoreSpotlightManager setNeedsMessageReindexingWithCompletion:]
IMDCoreSpotlight: Failed to create index!
IMDCoreSpotlight: Failed to get max cmj row ID for indexing!
_sanitizeIndexesForCurrentVersionIfNeeded complete, kicking off standard indexes
Bypassing index version comparisons. **NOT** deleting indexes
Current idx version is %llu, expected is %llu, deleting prior indexes
CSDeleteAllIndexes
Index deletion complete - %@
IMDCoreSpotlight: Version mismatch failed to delete all indexes! %@
Current idx version is %llu, index does not need deletion
copyAllActiveChats
generateItems
Indexing %ld chat records
IMDCoreSpotlight: Failed to get chats to index!
indexChats timing %@
Chat count: %ld
Not indexing UID %@, already indexed newer record
Passing chat records to Spotlight.Using index %@
IMDCoreSpotlight: indexing all chats failed with error %@
IMDCoreSpotlight: indexing all chats completed with error %@. Index: %@
Spotlight finished ingesting chat records, client state updated to %@
Indexing next batch of messages. Batch size of %lu
IMDCoreSpotlight %s - Not indexing. Batch size %lu needsIndexing %@ hasMigrated %@
-[IMDCoreSpotlightManager indexNextMessageBatchIfNeeded:completion:]
indexCreation
CSIngest
IMDCoreSpotlight: %s - Generated no indexable items :(
IMDCoreSpotlight %s - Got no records from IMDMessageRecordCopyMessagesFromRowIDDescLimit. Stopping indexing
Using legacy path for searchable item generation
Got %lu records from IMDMessageRecordCopyMessagesFromRowIDDescLimit
IMDCoreSpotlight: %s - Failed to get chat for message
-[IMDCoreSpotlightManager _newLegacySearchableIndexesForMessages:]
%s Generated %lu items to index!. Using Index %@
-[IMDCoreSpotlightManager _indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:]
IMDCoreSpotlight: endIndexBatchWithClientState failed with error %@. Using index %@
Indexing complete!
Setting lastIndexedRowID to %lu
IMDChatAddMessageToSpotlight: indexing searchable items failed with error %@. Using index %@
IMCSNeedsIndexing
IMCSIndexLastIndexDate
IMCSNeedsDeferredIndexing
IMCSIndexTotalRecords
IMCSLastIndexedRowID
IMCSIdxVersion
IMCSIdxProductVersion
IMCSBypassIndexVersionCheckV2
Reducing batch size to %lu, last batch?
Not donating to spotlight since it is not enabled
Deriving attachment index because attachment GUID in item dictionary is in legacy format. attachmentGUID: %@
IMDAttachmentSyndicationUtilities
Using existing attachment GUID for syndication identifier. attachmentGUID: %@
%s Found corresponding IMMessagePartDescriptor for attachment GUID %@ (syndicationIdentifier %@)
+[IMDAttachmentSyndicationUtilities _attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:]_block_invoke
v32@?0@"IMMessagePartDescriptor"8Q16^B24
+[IMDAttachmentSyndicationUtilities _attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:]
%@ not syndicatable because it was explcitly hidden
Setting isSyndicatableMedia to be NO because the attachment is flagged as IMMessagePartSyndicationTypeHidden. attachmentGUID: %@ (syndicationIdentifier: %@)
+[IMDAttachmentSyndicationUtilities _attachmentGUIDForCMMIsSyndicatable:syndicationIdentifier:encodedSyndicationRanges:isSyndicatable:verbose:]
attachmentGUID %@, syndicationIdentifier %@, isSyndicatable: %d
%@ not syndicatable because it was an unsupported UTI %@
syndicationType == %lu for attachmentGUID %@ based on UTI type %@
%@ not syndicatable because it was comm safety sensitive
Setting syndicationType to be Other because the attachment is flagged as CommSafety sensitive. attachmentGUID: %@
Library
sms.db
sms-temp.db
uint64_result
select type,name,tbl_name,sql from sqlite_master;
<t:%@, n:%@, tn:%@, sql:%@>
schema
v32@?0^{CSDBRecordStore=^{__CFString}^{CSDBSqliteDatabase}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}^{__CFSet}B{?=b1b1}^?^{__CFSet}^{__CFDictionary}^vi{?=ii^q^{__CFSet}}}8^{CSDBSqliteDatabase=^{__CFString}^{CSDBSqliteConnection}^?^?^?^v^?^?B^vi{?=b1b1b1}{_opaque_pthread_mutex_t=q[56c]}i^?^v^{__CFString}I{CSDBLookAsideBufferConfig=iib1}}16^{CSDBSqliteConnection=^{CSDBSqliteDatabase}^{sqlite3}^{__CFDictionary}^v^?I}24
counter_in_all
counter_out_all
counter_last_reset
RecordStore
Beginning record store clean.
Beginning file cleanse.
Sticker with path is not in use.
XPC connection failed, not deleting sticker
Found %lld sticker(s), path is in use
Beginning sticker attachment cleanse.
Beginning browser snapshot deletion
Attachments. Could not delete browser snapshot cache at path %@
ProtectionMerge: unprotected database: %s, found: %s, error: %d
%@-shm
%@-wal
ProtectionMerge: unprotected database: %s, deleted: %s, error: %d
counter_out_lifetime
counter_in_lifetime
Skipping '%@' as its level is %d and our target level is %d.
Examining '%@' as it looks like it contains a guid '%@'.
To Delete: %@
Cleaned up '%@'
Keeping '%@' we have a record for it in the DB.
  Deleting preview: %@
  Not deleting the actual attachment: %@
Beginning iteration of _IMDCleanseOrphanedAttachmentsWithEnumerator attachments
File cleanse ended %@
successfully.
Attachments _IMDCleanseOrpanedStickersInStickerCachePath nil stickerCachePath
Sticker cache path %@
Attachments. Error getting contents of directory %@ error %@
Searching db for filename: %@
Will delete %@
Attachments. Could not delete sticker at path %@
IMDDonationManager
early returning from copyGroupPhotoToExternalPathIfNecessary - nil argument. groupPhotoGUID %@ chatGUID %@ filepath %@
File already exists at path %@
File missing at path %@. Will attempt to copy from Attachments directory
Error creating intermediate directories for path: %@
Error copying to path %@ from path %@ success: %@ error: %@
Successfully copied to path %@ from path %@
Boolean IMDAttachmentRecordIsSticker(IMDAttachmentRecordRef)
Attempted to get record identifier for NULL attachment record: %@
CFStringRef IMDAttachmentRecordCopyGUID(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetCreatedDate(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetStartDate(IMDAttachmentRecordRef)
Boolean IMDAttachmentRecordGetIsOutgoing(IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyFilename(CFAllocatorRef, IMDAttachmentRecordRef, BOOL)
CFStringRef IMDAttachmentRecordCopyTransferName(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyUTIType(CFAllocatorRef, IMDAttachmentRecordRef)
CFDictionaryRef IMDAttachmentRecordCopyAttributionInfo(CFAllocatorRef, IMDAttachmentRecordRef)
CFDictionaryRef IMDAttachmentRecordCopyUserInfo(CFAllocatorRef, IMDAttachmentRecordRef)
CFStringRef IMDAttachmentRecordCopyMIMEType(CFAllocatorRef, IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTransferState(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetTotalBytes(IMDAttachmentRecordRef)
int64_t IMDAttachmentRecordGetCommSafetySensitive(IMDAttachmentRecordRef)
void _IMDAttachmentRecordBulkCopy(IMDAttachmentRecordRef, CFStringRef *, int64_t *, int64_t *, CFStringRef *, CFStringRef *, CFStringRef *, CFStringRef *, int64_t *, Boolean *, int64_t *, CFDictionaryRef *, Boolean *, CFDictionaryRef *, CFDictionaryRef *, Boolean *, int64_t *, CFDataRef *, CFStringRef *, CFStringRef *, int64_t *)
void IMDAttachmentRecordBulkUpdate(IMDAttachmentRecordRef, CFStringRef, int64_t, int64_t, CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, Boolean, int64_t, CFDictionaryRef, Boolean, CFDictionaryRef, CFDictionaryRef, Boolean, int64_t, CFDataRef, CFStringRef, CFStringRef, int64_t)
void _IMDAttachmentRecordBulkCopyXPCDictionary(IMDAttachmentRecordRef, xpc_object_t, Boolean)
IMDAttachmentRecord
CFStringRef _IMDAttachmentCopyDescription(_IMDAttachmentRecord *)
<IMDAttachmentRecord %p [%p]>{}
-[IMDDatabase(Attachments) deleteAttachmentsDirectWithPredicate:]
Deleting attachments filtered by predicate %@
SQLite returned %d from deleteAttachmentsByPredicate
-[IMDDatabase(Attachments) fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:]
Fetching attachments filtered by predicate: %@ limit: %llu
CREATE TABLE _SqliteDatabaseProperties (key TEXT, value TEXT, UNIQUE(key));
CREATE TABLE message (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, text TEXT, replace INTEGER DEFAULT 0, service_center TEXT, handle_id INTEGER DEFAULT 0, subject TEXT, country TEXT, attributedBody BLOB, version INTEGER DEFAULT 0, type INTEGER DEFAULT 0, service TEXT, account TEXT, account_guid TEXT, error INTEGER DEFAULT 0, date INTEGER, date_read INTEGER, date_delivered INTEGER, is_delivered INTEGER DEFAULT 0, is_finished INTEGER DEFAULT 0, is_emote INTEGER DEFAULT 0, is_from_me INTEGER DEFAULT 0, is_empty INTEGER DEFAULT 0, is_delayed INTEGER DEFAULT 0, is_auto_reply INTEGER DEFAULT 0, is_prepared INTEGER DEFAULT 0, is_read INTEGER DEFAULT 0, is_system_message INTEGER DEFAULT 0, is_sent INTEGER DEFAULT 0, has_dd_results INTEGER DEFAULT 0, is_service_message INTEGER DEFAULT 0, is_forward INTEGER DEFAULT 0, was_downgraded INTEGER DEFAULT 0, is_archive INTEGER DEFAULT 0, cache_has_attachments INTEGER DEFAULT 0, cache_roomnames TEXT, was_data_detected INTEGER DEFAULT 0, was_deduplicated INTEGER DEFAULT 0, is_audio_message INTEGER DEFAULT 0, is_played INTEGER DEFAULT 0, date_played INTEGER, item_type INTEGER DEFAULT 0, other_handle INTEGER DEFAULT -1, group_title TEXT, group_action_type INTEGER DEFAULT 0, share_status INTEGER, share_direction INTEGER, is_expirable INTEGER DEFAULT 0, expire_state INTEGER DEFAULT 0, message_action_type INTEGER DEFAULT 0, message_source INTEGER DEFAULT 0);
CREATE TABLE chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, room_name TEXT, account_login TEXT, is_archived INTEGER DEFAULT 0, last_addressed_handle TEXT, display_name TEXT, group_id TEXT, is_filtered INTEGER DEFAULT 0, successful_query INTEGER DEFAULT 1);
CREATE TABLE attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, guid TEXT UNIQUE NOT NULL, created_date INTEGER DEFAULT 0, start_date INTEGER DEFAULT 0, filename TEXT, uti TEXT, mime_type TEXT, transfer_state INTEGER DEFAULT 0, is_outgoing INTEGER DEFAULT 0, user_info BLOB, transfer_name TEXT, total_bytes INTEGER DEFAULT -1);
CREATE TABLE handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) );
CREATE TABLE message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
CREATE TABLE chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, PRIMARY KEY (chat_id, message_id));
CREATE TABLE chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
CREATE TABLE deleted_messages (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, guid TEXT NOT NULL);
_SqliteDatabaseProperties
CREATE INDEX message_idx_is_read ON message(is_read, is_from_me, is_finished);
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error);
CREATE INDEX message_idx_handle ON message(handle_id, date);
CREATE INDEX message_idx_was_downgraded ON message(was_downgraded);
CREATE INDEX chat_message_join_idx_message_id ON chat_message_join(message_id, chat_id);
CREATE INDEX message_idx_date ON message(date);
CREATE INDEX chat_idx_chat_identifier_service_name ON chat(chat_identifier, service_name);
CREATE INDEX chat_idx_chat_identifier ON chat(chat_identifier);
CREATE INDEX chat_idx_chat_room_name_service_name ON chat(room_name, service_name);
CREATE INDEX message_attachment_join_idx_message_id ON message_attachment_join(message_id);
CREATE INDEX chat_handle_join_idx_handle_id ON chat_handle_join(handle_id);
CREATE INDEX message_attachment_join_idx_attachment_id ON message_attachment_join(attachment_id);
CREATE INDEX message_idx_handle_id ON message(handle_id);
CREATE INDEX chat_message_join_idx_chat_id ON chat_message_join(chat_id);
CREATE INDEX message_idx_other_handle ON message(other_handle);
CREATE INDEX message_idx_expire_state ON message(expire_state);
CREATE INDEX chat_message_join_idx_message_id_only ON chat_message_join(message_id);
CREATE INDEX chat_idx_is_archived ON chat(is_archived);
CREATE TRIGGER after_delete_on_chat AFTER DELETE ON chat BEGIN DELETE FROM chat_message_join WHERE chat_id = OLD.ROWID; END;
CREATE TRIGGER after_delete_on_message_attachment_join AFTER DELETE ON message_attachment_join BEGIN     DELETE FROM attachment         WHERE attachment.ROWID = OLD.attachment_id     AND         (SELECT 1 from message_attachment_join WHERE attachment_id = OLD.attachment_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_insert_on_message_attachment_join AFTER INSERT ON message_attachment_join BEGIN     UPDATE message       SET cache_has_attachments = 1     WHERE       message.ROWID = NEW.message_id; END;
CREATE TRIGGER add_to_deleted_messages AFTER DELETE ON message BEGIN     INSERT INTO deleted_messages (guid) VALUES (OLD.guid); END;
CREATE TRIGGER after_delete_on_chat_message_join AFTER DELETE ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = OLD.message_id       )       WHERE         message.ROWID = OLD.message_id;  DELETE FROM message WHERE message.ROWID = OLD.message_id AND OLD.message_id NOT IN (SELECT chat_message_join.message_id from chat_message_join WHERE chat_message_join.message_id = OLD.message_id LIMIT 1); END;
CREATE TRIGGER after_delete_on_chat_handle_join AFTER DELETE ON chat_handle_join BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER after_delete_on_message AFTER DELETE ON message BEGIN     DELETE FROM handle         WHERE handle.ROWID = OLD.handle_id     AND         (SELECT 1 from chat_handle_join WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE handle_id = OLD.handle_id LIMIT 1) IS NULL     AND         (SELECT 1 from message WHERE other_handle = OLD.handle_id LIMIT 1) IS NULL; END;
CREATE TRIGGER before_delete_on_attachment BEFORE DELETE ON attachment BEGIN   SELECT before_delete_attachment_path(OLD.ROWID, OLD.guid); END;
CREATE TRIGGER after_delete_on_attachment AFTER DELETE ON attachment BEGIN   SELECT delete_attachment_path(OLD.filename); END;
CREATE TRIGGER after_insert_on_chat_message_join  AFTER INSERT ON chat_message_join BEGIN     UPDATE message       SET cache_roomnames = (         SELECT group_concat(c.room_name)         FROM chat c         INNER JOIN chat_message_join j ON c.ROWID = j.chat_id         WHERE           j.message_id = NEW.message_id       )       WHERE         message.ROWID = NEW.message_id; END;
Database downgrade failed with error: %@
SELECT ROWID FROM chat WHERE GUID = ?
SELECT ROWID FROM message WHERE GUID = ?
SELECT ROWID FROM attachment WHERE GUID = ?
SELECT ROWID FROM handle WHERE id = ? AND service = ?
INSERT INTO chat (  guid,   style,   state,   properties,   chat_identifier,   service_name,   room_name,   is_archived ) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO handle ( id,  service )  VALUES (  ?,  ? );
INSERT OR IGNORE INTO chat_handle_join ( chat_id,  handle_id )  VALUES (  ?,  ? );
INSERT INTO attachment ( guid,  created_date,  start_date,  filename,  uti,  mime_type,  transfer_state,  is_outgoing,  transfer_name,  total_bytes) VALUES (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ? );
INSERT INTO message ( guid,  text,  handle_id,  subject,  attributedBody,  service,  account,  account_guid,  error,  date,  date_read,  date_delivered,  is_delivered,  is_finished,  is_emote,  is_from_me,  is_empty,  is_delayed,  is_auto_reply,  is_prepared,  is_read,  is_system_message,  is_sent,  is_service_message,  is_forward,  is_archive,  order_date ) VALUES ( ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ?,  ? );
INSERT OR IGNORE INTO chat_message_join (chat_id, message_id, message_date) VALUES (?, ?, ?)
importbackup
MessageImport
Backing up database to %@
ALTER TABLE message ADD COLUMN order_date INTEGER DEFAULT 0
UPDATE message SET order_date = date
SELECT ROWID, date FROM message ORDER BY ROWID ASC
UPDATE message SET order_date = ? where ROWID = ?
DROP INDEX IF EXISTS %@
IMDMessageImportEnd
ALTER TABLE message RENAME TO message_import
CREATE INDEX message_import_idx ON message_import(date, ROWID)
INSERT INTO message (guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated) SELECT guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC;
CREATE TABLE IF NOT EXISTS message_new_to_old (            ROWID        INTEGER PRIMARY KEY,            old_rowid    INTEGER            ); 
INSERT INTO message_new_to_old (old_rowid) SELECT message_import.ROWID FROM message_import ORDER BY message_import.order_date ASC, message_import.ROWID ASC
CREATE INDEX message_new_to_old_idx ON message_new_to_old(old_rowid);
ALTER TABLE chat_message_join RENAME TO chat_message_join_import
CREATE TABLE IF NOT EXISTS chat_message_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, message_date INTEGER DEFAULT 0, PRIMARY KEY (chat_id, message_id));
INSERT INTO chat_message_join    SELECT cmi.chat_id, mno.ROWID, mno.date    FROM      chat_message_join_import cmi    INNER JOIN message_new_to_old mno ON      cmi.message_id = mno.old_rowid    ; 
ALTER TABLE message_attachment_join RENAME TO message_attachment_join_import
CREATE TABLE IF NOT EXISTS message_attachment_join ( message_id INTEGER REFERENCES message (ROWID) ON DELETE CASCADE, attachment_id INTEGER REFERENCES attachment (ROWID) ON DELETE CASCADE, UNIQUE(message_id, attachment_id));
INSERT INTO message_attachment_join   SELECT mno.ROWID, mai.attachment_id   FROM     message_attachment_join_import mai   INNER JOIN message_new_to_old mno ON     mai.message_id = mno.old_rowid   ;
UPDATE message SET cache_has_attachments = IFNULL((SELECT 1 FROM message_attachment_join maj WHERE message.ROWID = maj.message_id LIMIT 1), 0)
UPDATE message SET cache_roomnames = (                           SELECT group_concat(c.room_name)                           FROM                             chat c                           INNER JOIN                             chat_message_join j                           ON                             c.ROWID = j.chat_id                           WHERE                             j.message_id = message.ROWID                           ) WHERE message.ROWID = (select j.message_id FROM chat c INNER JOIN chat_message_join j ON c.rowid = j.chat_id WHERE c.room_name IS NOT NULL); 
DELETE FROM message WHERE (SELECT 1 from chat_message_join cmj WHERE message.ROWID = cmj.message_id LIMIT 1) IS NULL;
DELETE FROM attachment WHERE (SELECT 1 from message_attachment_join maj WHERE attachment.ROWID = maj.attachment_id LIMIT 1) IS NULL
Successful import! This is not an internal install so let's delete the backup database stored at %@
IMDCopyGUIDForImportedOneToOneChat
Creating chat for guid: %@
Created new chat with row id: %lld
Creating handle for: %lld
Already have chat for guid: %@
IMDCopyGUIDForImportedChat
Created new chat: %lld
Creating handle for: %@
Import attachment %@ with data
Import attachment %@ with filePath %@
IMDImportMessage
SELECT MIN(ROWID) FROM message m WHERE m.ROWID IN (SELECT message_id FROM chat_message_join where chat_id = ?) AND m.text = ? AND m.date > ? AND m.date < ?
Found duplicate for %@ at %lld
Found chat for guid: %@
Created message for guid: %@  associating with chat: %@
Not inserting %@  already have message in chat: %@
Associated attachment GUID %@ with message GUID: %@
INSERT OR IGNORE INTO message_attachment_join (message_id, attachment_id) VALUES (?, ?)
_IMDServerImportAttachmentWithDataOrPath
Created attachment id %lld with path %@ for guid %@
Already have an attachment for guid %@
Attempted to create IMDMessageRecordRef from nil IMItem.
Attempting to create a TU Conversation item with guid %@ conversationUUID: %@
Exception caught creating IMDMessageRecordRef from IMItem: %@   (%@)
Attempting to create participant change item with GUID: %@  %@  %@ => %@
invite
remove
Attempting to create title item with GUID: %@   title: %@
Attempting to create title item with GUID: %@
Attempting to add group leave GUID: %@ %@ => %@
start sharing
stop sharing
unknown
incoming
outgoing
Attempting location share update to chat guid GUID: %@  (%@:%@) %@ => %@
save audio
save video
save app
Attempting to add message action GUID: %@ (%@) %@ => %@
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDMessageStore_PersistenceUtilities.m
IMDMessageRecordRef IMDCreateIMDMessageRecordRefFromIMMessageItem(IMItem *)
IMDCreateIMDMessageRecordRefFromIMMessageItem
Unexpected not equal '%@ (%@) != %@ (%@)' in %s at %s:%d. %@
[imMessageItem type]
IMDMessageRecordItemTypeMessage
[imMessageItem isKindOfClass:[IMAssociatedMessageItem class]]
msg-room-%@
msg-handle-%@
Updating IMMessageItem: %@ from IMMessageItem: %@
Updating IMItem: %@ from IMItem: %@
APPROVE_FOR_15_MINUTES
APPROVE_FOR_AN_HOUR
APPROVE_ALL_DAY
DONT_APPROVE
CSDBSqliteDatabase *IMDSharedSqliteDatabase(void)
NSString *IMDSharedSqliteDatabasePath(void)
Sqlite database path is nil
com.apple.IMDSMSRecordStore.MessagesRecordStore
_MessagesRecordStore
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore(void)_block_invoke
CSDBCreateThreadedRecordStore failed
CSDBThreadedRecordStoreRef IMDSharedThreadedRecordStore(void)
CSDBCreateThreadedRecordStore should not be nil. Did attempt to init: %@
CSDBRecordStoreRef CSDBSharedRecordStore(void)
void IMDEnsureSharedRecordStoreInitialized(void)
recordStore is nil, will not initialize
^{__CFString=}8@?0
store
void _initializeDB(CSDBRecordStoreRef, CSDBSqliteConnection *)
void _initializeConnection(CSDBSqliteDatabase *, CSDBSqliteConnection *)
PRAGMA foreign_keys = ON;
delete_attachment_path
before_delete_attachment_path
after_delete_message_plugin
im_trim
vacuum;
ANALYZE;
PRAGMA wal_checkpoint(RESTART);
v16@?0@"CSDBThreadedRecordStore"8
DeleteSequenceNumber
_Bool _databaseVersionCanBeMigrated(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
CSDBSqliteMigrationContinuation _performMigrationCallback(CSDBSqliteDatabase *, CSDBSqliteConnection *, int, void *)
vacuum
com.apple.MobileSMS.Migration.Migration_Successful
com.apple.MobileSMS.Migration.Migration_Failure
BOOL _IMDCheckDatabaseIntegrity(CSDBSqliteDatabase *, CSDBSqliteConnection *)
com.apple.MobileSMS.InitialIntegrityCheck_Failure
REINDEX
com.apple.MobileSMS.Migration.Reindex_Success
com.apple.MobileSMS.Migration.Reindex_Failure
com.apple.MobileSMS.PostReindex.IntegrityCheck_Failure
com.apple.MobileSMS.Migration.Vacuum_Success
com.apple.MobileSMS.Migration.Vacuum_Failure
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Success
com.apple.MobileSMS.Migration.PostVacuum.IntegrityCheck_Failure
com.apple.MobileSMS.PostReindex.IntegrityCheck_Success
com.apple.MobileSMS.InitialIntegrityCheck_Success
BOOL IMDSqliteDatabaseCheckIntegrity(CSDBSqliteConnection *)
com.apple.MobileSMS.Migration.IntegrityCheck_Failure
BOOL IMDSqlOperationIsQueryIndexed(IMDSqlOperation *, NSArray **)
detail
SCAN TABLE
*** Query is indexed: %@
    query: %@
         : %@
BOOL IMDSqlOperationColumnExistsOnTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef)
columnName
PRAGMA table_info(%@);
BOOL IMDSqlOperationAddColumnIfNotExistsToTableWithOperation(IMDSqlOperation *, CFStringRef, CFStringRef, CFStringRef)
typeAndDefault
ALTER TABLE %@ ADD COLUMN %@ %@;
BOOL IMDSqlOperationAddColumnIfNotExistsToTable(CFStringRef, CFStringRef, CFStringRef)
uint64_t IMDSqlOperationGetRowCountForTable(CFStringRef)
SELECT count(*) from %@;
CFStringRef IMDSqlOperationGetDatabasePath(IMDSqlOperation *)
main
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDSqlOperationUtilities.m
BOOL IMDDatabaseCopy(NSString *, NSString *, NSError **)
IMDDatabaseCopy
fromPath
toPath
[[fromPath pathExtension] isEqualToString:@"db"]
[[toPath pathExtension] isEqualToString:@"db"]
Unable to open source database at %@ (%d)
Unable to open destination database at %@ (%d)
Unable to replace database at %@ (%d)
chat_message_join_idx_message_id_only
chat_message_join(message_id)
chat_message_join_idx_chat_id
chat_message_join(chat_id)
chat_message_join_idx_message_date_id_chat_id
chat_message_join(chat_id, message_date, message_id)
chat_handle_join_idx_handle_id
chat_handle_join(handle_id)
message_attachment_join_idx_attachment_id
message_attachment_join(attachment_id)
message_attachment_join_idx_message_id
message_attachment_join(message_id)
message_idx_failed
message(is_finished, is_from_me, error)
message_idx_handle
message(handle_id, date)
message_idx_handle_id
message(handle_id)
message_idx_other_handle
message(other_handle)
message_idx_is_read
message(is_read, is_from_me, is_finished)
message_idx_was_downgraded
message(was_downgraded)
message_idx_date
message(date)
message_idx_cache_has_attachments
message(cache_has_attachments)
message_idx_is_sent_is_from_me_error
message(is_sent, is_from_me, error)
message_idx_expire_state
message(expire_state)
message_idx_associated_message
message(associated_message_guid)
message_idx_isRead_isFromMe_itemType
message(is_read, is_from_me, item_type)
message_idx_thread_originator_guid
message(thread_originator_guid)
chat_idx_is_archived
chat(is_archived)
chat_idx_chat_identifier_service_name
chat(chat_identifier, service_name)
chat_idx_chat_identifier
chat(chat_identifier)
chat_idx_chat_room_name_service_name
chat(room_name, service_name)
chat_idx_group_id
chat(group_id)
message_processing_task_idx_guid_task_flags
message_processing_task(guid, task_flags)
attachment_idx_purged_attachments_v2
attachment(hide_attachment,ck_sync_state,transfer_state) WHERE hide_attachment=0 AND (ck_sync_state=1 OR ck_sync_state=4) AND transfer_state=0
message_idx_undelivered_one_to_one_imessage
message(cache_roomnames,service,is_sent,is_delivered,was_downgraded,item_type) where cache_roomnames IS NULL AND service = 'iMessage' AND is_sent = 1 AND is_delivered = 0 AND was_downgraded = 0 AND item_type == 0
CREATE INDEX IF NOT EXISTS %@ ON %@;
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/Source/IMDIndexes.m
BOOL IMDCreateIndexesWithOperation(IMDSqlOperation *, BOOL)
IMDCreateIndexesWithOperation
SELECT name, sql FROM sqlite_master WHERE type = 'index'
sqlite_autoindex
DROP INDEX %@
SELECT name FROM sqlite_master WHERE type = 'index';
SELECT name, sql FROM sqlite_master WHERE type = 'index';
expected: %@:%@
  actual: %@:%@
xpc_object_t IMDSqlOperationGetXpcRows(IMDSqlOperation *)
xpc_object_t IMDSqlOperationGetXpcRowsForQuery(CFStringRef)
IMDPersistenceXPCNotAllowedInTest
Called into IMDPersistence XPC layer while in a test
__xpc_wants_reply__
createdDate
startDate
transferName
utiType
mimeType
transferState
isOutgoing
userInfo
stickerUserInfo
hideAttachment
totalBytes
cloudKitSyncState
cloudKitServerChangeTokenBlob
cloudKitRecordID
originalGUID
isLegacyGUID
spath
options
attachmentClass
numRecents
bytesToFreeUp
chatLimit
attachmentLimit
watermark
startingOffset
queryType
rowid
updatedGuid
chatIdentifiers
services
aliases
cnRecordID
unformattedID
personCentricID
uncanonicalizedID
associatedMessageGUID
guids
lowerRowID
maxRowID
rowIDs
roomname
threadIdentifier
only_messages
only_unread
numberOfMessagesBefore
numberOfMessagesAfter
lastAddressedHandles
oldLastAddressedSIMID
newLastAddressedSIMID
newLastAddressedHandle
lastAddressedLabelIDs
body
servicesToSkip
guidsToSkip
searchAfter
chatServices
includeFromMe
replaceID
afterRowID
originalMessageGUID
chatID
dateRef
fromMe
fallbackGUID
addresses
dateRead
dateDelivered
datePlayed
accountGUID
handleString
countryCode
itemType
otherHandleID
groupActionType
shareStatus
shareDirection
groupTitle
expireState
messageActionType
associatedMessageRangeLocation
associatedMessageRangeLength
timeExpressiveSendPlayed
cloudKitRecordChangeTag
dataDetectorsInfo
replyToGUID
sortID
threadOriginatorGUID
threadOriginatorPart
syncedSyndicationRanges
partCount
dateEdited
messageID
fzGuid
fzDate
fzDateRead
fzDateDelivered
fzDatePlayed
fzBody
fzAttributedBody
fzFlags
fzService
fzAccount
fzAccountGUID
fzSubject
fzError
fzType
timePlayedExpressiveSend
propertiesData
lastAddressedLocalHandle
accountLogin
isArchived
hasHadSuccessfulQuery
engramID
serverChangeToken
ckSyncState
originalGroupID
lastReadMessageTimeStamp
lastAddressedSIMID
isRecovered
complete
request
IMDPersistence
Progressive copy of all chats started
Progressive copy of all chats completed with %d messages
knownSenderLimit
otherFilterLimit
batchSize
messageGUIDS
__xpc_event_code__
winning_guid
losing_guids
display_name_update
backup_path
message_count
target_db_path
sender
file
Could not generate sandbox extension for path %@, errno %d
Could not generate sandbox extension for path %@
extension
recipients
isIncoming
source
destination
ckRecordID
recordIDs
fromError
toError
syncCounts
afterRow
data
context
Asked to post Started SharePlay from Messages notification for chat GUID %@, FaceTime conversation UUID %@, handleIdentifier %@, and localizedApplicationName %@
IMAutomaticHistoryDeletionAgent
Cleansing orphaned attachments
IMDMessageAutomaticHistoryDeletion
Deleting previews older than last 200
Finished previews older than last 200
Cleansing orphaned sticker transfer user info
Cleansing orphaned sticker attachments
Cleansing browser snapshot cache
permanently deleting messages not in recently deleted older than %ld days
deleting attachments older than %ld days
permanently deleting messages in recently deleted older than %lld days
permanently deleting messages filtered as junk older than %lld days
  => Cleaning up orphaned messages
Cleansing database
deleting spotlight archive files
~/Library/Messages/Archive
main folder path found %@
could not messages archive director, error:
deleteDirectoryAtPath: Deleting directory at path %@
deleteDirectoryAtPath:  path is nil
isFileHeaderDateAtPathOlderThanDays: checking file at path %@
EndTime
isFileHeaderDateAtPathOlderThanDays: date modified %@
isFileHeaderDateAtPathOlderThanDays: dateCreated or dateMod is nil
isDirCreationDateAtPathOlderThanDays: checking how old dir at %@ is
isDirCreationDateAtPathOlderThanDays:path attributes are %@
isDirCreationDateAtPathOlderThanDays: Could not locate directory at path
_getiChatFileMetadataForPath: data %@
metadata
Failed to unarchive iChat file metadata. Error: %@
.DS_Store
age-category
TEEN
IMDFamilyInviteNotificationContext
FAFetchFamilyCircleRequest returned nil
VIEW_INVITATION
messageSubTitle
messageSubTitleTeen
messageTitle
Cleaning Database
%@ is not implemented
UPDATE OR IGNORE handle SET id = CASE ROWID 
WHEN %@ THEN '%@' 
%@, 
END WHERE ROWID IN %@
No predicate provided to %s
-[IMDDatabase(Chats) chatRecordsFilteredByPredicate:]
Fetching chats filtered by predicate: %@
-[IMDDatabase(Chats) fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:]
Fetching chats filtered by predicate: %@ sortDescriptors: %llu limit: %llu
-[IMDDatabase(Chats) fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:]
Fetching chats sorted by recent and filtered by predicate: %@ olderThan: %@ limit: %llu
No identifier provided to %s
-[IMDDatabase(Chats) chatRecordsWithIdentifier:]
SELECT ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered FROM chat WHERE    chat_identifier = ? ORDER BY chat.ROWID ASC;
No pinning identifier (%@) provided to %s
-[IMDDatabase(Chats) fetchChatRecordsWithPinningIdentifier:completionHandler:]
Found %llu pinned chats using chatIdentifier %@
Found %llu pinned chats using groupID %@
%K = %@
Found %llu pinned chats using participantHash %@
No handles (%llu) or service (%@) provided to %s
-[IMDDatabase(Chats) _fetchChatRecordsWithHandles:allowSubsetMatching:serviceName:displayName:groupID:style:completionHandler:]
No group IDs provided to %s
-[IMDDatabase(Chats) fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:]
Found groupPhotoGUID %@ for chat with groupID %@
Transfer invalid for groupPhotoGUID: %@ filename: %@ state: %d
Recently Deleted | Will begin moving messages to recoverable message table with deleteDate: %@ for %lu chatGUIDs
INSERT OR REPLACE INTO chat_recoverable_message_join (chat_id, message_id, delete_date) SELECT cmj.chat_id, cmj.message_id, ? FROM chat_message_join AS cmj JOIN chat ON cmj.chat_id = chat.ROWID AND chat.guid = ? AND cmj.message_date < ?;
DELETE FROM chat_message_join WHERE chat_id = ? AND message_id IN ( SELECT message_id FROM chat_recoverable_message_join WHERE chat_id = ?);
Recently Deleted | Finished moving messages to recoverable message table for %lu chatGUIDs
Recently Deleted | Will begin recovering messages for %lu unique chatGUIDs
 SELECT m.guid FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON crmj.chat_id = c.ROWID AND c.guid = ? JOIN message AS m  ON crmj.message_id = m.ROWID;
Recently Deleted: Unexpected column in recoverable message in chat %@ with index %d
INSERT INTO chat_message_join (chat_id, message_id, message_date) SELECT crmj.chat_id, crmj.message_id, m.date FROM chat_recoverable_message_join AS crmj JOIN chat AS c  ON crmj.chat_id = c.ROWID AND c.guid = ? JOIN message AS m  ON crmj.message_id = m.ROWID;
DELETE FROM chat_recoverable_message_join WHERE message_id IN ( SELECT message_id FROM chat_message_join);
Recently Deleted | Finished recovering messages for %lu unique chatGUIDs
v32@?0@"NSString"8@"NSArray"16^B24
Recently Deleted | Finished recovering message parts for %lu unique chatGUIDs
UPDATE message SET attributedBody = ?, text = ?   WHERE message.guid = ?;
INSERT INTO unsynced_removed_recoverable_messages (chat_guid, message_guid, part_index) SELECT c.guid, m.guid, rmp.part_index  FROM recoverable_message_part AS rmp  JOIN chat AS c   ON c.ROWID=rmp.chat_id  JOIN message AS m   ON m.ROWID=rmp.message_id AND m.guid=? AND rmp.ck_sync_state=1;
DELETE FROM recoverable_message_part WHERE message_id IN (  SELECT ROWID  FROM message AS m  WHERE m.guid = ?);
SELECT attributedBody FROM message WHERE message.guid = ?;
Recently Deleted: Unexpected column in recoverable message parts metadata query with index %d
SELECT m.guid, rmp.part_text FROM recoverable_message_part AS rmp JOIN chat AS c ON c.ROWID = rmp.chat_id AND c.guid = ? JOIN message AS m ON m.ROWID = rmp.message_id;
Unexpected column in recoverable message parts metadata query with index %d
Parts: Error in column values returned: %@|%@
WITH recoverable_tables_union_all (chat_guid, message_id, delete_date) as (  SELECT c.guid, crmj.message_id, crmj.delete_date  FROM chat_recoverable_message_join AS crmj  JOIN chat AS c  ON c.ROWID = crmj.chat_id   UNION ALL  SELECT c.guid, rmp.message_id, rmp.delete_date  FROM recoverable_message_part AS rmp  JOIN chat AS c  ON c.ROWID = rmp.chat_id ) SELECT chat_guid, COUNT(message_id), MIN(delete_date), MAX(delete_date)  FROM recoverable_tables_union_all AS rtua  JOIN message as m  ON rtua.message_id = m.ROWID  WHERE NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))  GROUP BY rtua.chat_guid;
Unexpected column in recoverable message metadata query with index %d
Error in column values returned: %@|%llu|%llu|%llu
recoverableMessagesCount
earliestDeleteDateInterval
latestDeleteDateInterval
SELECT c.guid FROM chat_recoverable_message_join AS crmj JOIN message AS m ON m.ROWID = crmj.message_id  JOIN chat AS c ON c.ROWID = crmj.chat_id WHERE (   crmj.delete_date < ?  AND   NOT (m.group_action_type IN (1,3) AND (m.ROWID IN (SELECT message_id FROM message_attachment_join)))  ) GROUP BY    c.guid  
Unexpected column in affected chat query with index %d
Found %llu chats affected by message deletion
SELECT c.guid FROM chat_message_join AS cmj JOIN message AS m ON m.ROWID = cmj.message_id  JOIN chat AS c ON c.ROWID = cmj.chat_id WHERE (   m.date < ?  AND   c.is_filtered = 2 ) GROUP BY    c.guid  
Chat with guid %@ has %lld messages and %lld recoverable messages
Deleting empty chat %@, cloud sync enabled is %@
Recently Deleted | Parts: Deleting transfer GUID: %@ for recoverable message part for messageGUID: %@
Recently Deleted | Parts: Finished deleting recoverable message parts transfers for chatGUID: %@
Exception attempting to generate SQL where clause: %@
BETWEEN
Invalid predicate, contains unsupported operator
 AND 
 OR 
Invalid predicate, contains unsupported compound predicate type
Invalid predicate, unsupported constant %@
( %@ )
Invalid predicate, unsupported column %@
Invalid predicate, contains unsupported expression type
( %@ %@ %@ )
Invalid predicate, unsupported predicate type
SELECT   c.ROWID, c.guid FROM   chat c WHERE   c.style != 45 
UPDATE   chat SET     chat_identifier = ?,     room_name = ? WHERE     ROWID = ?
%s%@
DELETE FROM attachment 
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment 
wrong number of arguments
Failed to create index pieces_message_index.
Created index pieces_message_index.
CREATE INDEX pieces_message_index ON msg_pieces(message_id);
Failed to create index madrid_handle_index.
Created index madrid_handle_index.
CREATE INDEX madrid_handle_index ON message(madrid_handle);
Failed to create index madrid_guid_index.
Created index madrid_guid_index.
CREATE INDEX madrid_guid_index ON message(madrid_guid);
Failed to create index madrid_roomname_index.
Created index madrid_roomname_index.
CREATE INDEX madrid_roomname_index ON message(madrid_roomname);
Failed to create index madrid_service_index.
Created index madrid_service_index.
CREATE INDEX madrid_service_index ON message(madrid_service);
Failed to create index madrid_account_index.
Created index madrid_account_index.
CREATE INDEX madrid_account_index ON message(madrid_account);
Failed to create index madrid_url_index.
Created index madrid_url_index.
CREATE INDEX madrid_url_index ON message(madrid_url);
Failed to create index madrid_flags_index.
Created index madrid_flags_index.
CREATE INDEX madrid_flags_index ON message(madrid_flags);
Failed to drop index madrid_handle_index.
Dropped index madrid_handle_index.
DROP INDEX madrid_handle_index;
Failed to drop index madrid_roomname_index.
Dropped index madrid_roomname_index.
DROP INDEX madrid_roomname_index;
Failed to drop index madrid_service_index.
Dropped index madrid_service_index.
DROP INDEX madrid_service_index;
Failed to drop index madrid_account_index.
Dropped index madrid_account_index.
DROP INDEX madrid_account_index;
Failed to drop index madrid_url_index.
Dropped index madrid_url_index.
DROP INDEX madrid_url_index;
Failed to drop index madrid_flags_index.
Dropped index madrid_flags_index.
DROP INDEX madrid_flags_index;
Failed to create index madrid_roomname_service_index.
Created index madrid_roomname_service_index.
CREATE INDEX madrid_roomname_service_index ON message(madrid_roomname, madrid_service);
Failed to create index madrid_handle_service_index.
Created index madrid_handle_service_index.
CREATE INDEX madrid_handle_service_index ON message(madrid_handle, madrid_service);
CREATE INDEX message_group_index ON message(group_id, ROWID);
Failed to create index madrid_attachment_message_index.
Created index madrid_attachment_message_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_message_index ON madrid_attachment(message_id);
Failed to create index madrid_attachment_guid_index.
Created index madrid_attachment_guid_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_guid_index ON madrid_attachment(attachment_guid);
Failed to create index madrid_attachment_filename_index.
Created index madrid_attachment_filename_index.
CREATE INDEX IF NOT EXISTS madrid_attachment_filename_index ON madrid_attachment(filename);
Failed to create madrid_attachment table
Created madrid_attachment table
CREATE TABLE IF NOT EXISTS madrid_attachment (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, attachment_guid TEXT, created_date INTEGER, start_date INTEGER, filename TEXT, uti_type TEXT, mime_type TEXT, transfer_state INTEGER, is_incoming INTEGER, message_id INTEGER)
Failed to create madrid_chat table
Created madrid_chat table
CREATE TABLE madrid_chat (ROWID INTEGER PRIMARY KEY AUTOINCREMENT, style INTEGER, state INTEGER, account_id TEXT, properties BLOB, chat_identifier TEXT, service_name TEXT, guid TEXT, room_name TEXT, account_login TEXT, participants BLOB)
Failed to create index madrid_chat_style_index.
Created index madrid_chat_style_index.
CREATE INDEX IF NOT EXISTS madrid_chat_style_index ON madrid_chat(style)
Failed to create index madrid_chat_state_index.
Created index madrid_chat_state_index.
CREATE INDEX IF NOT EXISTS madrid_chat_state_index ON madrid_chat(state)
Failed to create index madrid_chat_account_id_index.
Created index madrid_chat_account_id_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_id_index ON madrid_chat(account_id)
Failed to create index madrid_chat_chat_identifier_index.
Created index madrid_chat_chat_identifier_index.
CREATE INDEX IF NOT EXISTS madrid_chat_chat_identifier_index ON madrid_chat(chat_identifier)
Failed to create index madrid_chat_service_name_index.
Created index madrid_chat_service_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_service_name_index ON madrid_chat(service_name)
Failed to create index madrid_chat_guid_index.
Created index madrid_chat_guid_index.
CREATE INDEX IF NOT EXISTS madrid_chat_guid_index ON madrid_chat(guid)
Failed to create index madrid_chat_room_name_index.
Created index madrid_chat_room_name_index.
CREATE INDEX IF NOT EXISTS madrid_chat_room_name_index ON madrid_chat(room_name)
Failed to create index madrid_chat_account_login_index.
Created index madrid_chat_account_login_index.
CREATE INDEX IF NOT EXISTS madrid_chat_account_login_index ON madrid_chat(account_login)
Failed to drop table: %@
Successfully dropped table: %@
Failed to drop index: %@
Successfully dropped index: %@
DROP INDEX IF EXISTS %@;
Failed to create index: %@
Successfully created index: %@
Failed to create table msg_pieces.
Created table msg_pieces.
CREATE TABLE IF NOT EXISTS msg_pieces (ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, message_id INTEGER, data BLOB, part_id INTEGER, preview_part INTEGER, content_type TEXT, height INTEGER, version INTEGER, flags INTEGER, content_id TEXT, content_loc TEXT, headers BLOB);
Failed to add column subject.
Added column subject.
ALTER TABLE message ADD COLUMN subject TEXT
Failed to add column country.
Added column country.
ALTER TABLE message ADD COLUMN country TEXT
Failed to add column headers.
Added column headers.
ALTER TABLE message ADD COLUMN headers BLOB
Failed to add column recipients.
Added column recipients.
ALTER TABLE message ADD COLUMN recipients BLOB
Failed to add column hash.
Added column hash.
ALTER TABLE msg_group ADD COLUMN hash INTEGER
Failed to add index hash_index.
Added index hash_index.
CREATE INDEX hash_index ON msg_group(hash)
ALTER TABLE group_member ADD COLUMN country TEXT
Failed to add column content_id.
Added column content_id.
ALTER TABLE msg_pieces ADD COLUMN content_id TEXT;
Failed to add column content_loc.
Added column content_loc.
ALTER TABLE msg_pieces ADD COLUMN content_loc TEXT;
ALTER TABLE msg_pieces ADD COLUMN headers BLOB;
Failed to add column madrid_attributedBody.
Added column madrid_attributedBody.
ALTER TABLE message ADD COLUMN madrid_attributedBody BLOB
Failed to add column madrid_handle.
Added column madrid_handle.
ALTER TABLE message ADD COLUMN madrid_handle TEXT
Failed to add column madrid_version.
Added column madrid_version.
ALTER TABLE message ADD COLUMN madrid_version INTEGER
Failed to add column madrid_guid.
Added column madrid_guid.
ALTER TABLE message ADD COLUMN madrid_guid TEXT
Failed to add column madrid_type.
Added column madrid_type.
ALTER TABLE message ADD COLUMN madrid_type INTEGER
Failed to add column madrid_roomname.
Added column madrid_roomname.
ALTER TABLE message ADD COLUMN madrid_roomname TEXT
Failed to add column madrid_service.
Added column madrid_service.
ALTER TABLE message ADD COLUMN madrid_service TEXT
Failed to add column madrid_account.
Added column madrid_account.
ALTER TABLE message ADD COLUMN madrid_account TEXT
Failed to add column madrid_flags.
Added column madrid_flags.
ALTER TABLE message ADD COLUMN madrid_flags INTEGER
Failed to add column madrid_attachmentInfo.
Added column madrid_attachmentInfo.
ALTER TABLE message ADD COLUMN madrid_attachmentInfo BLOB;
Failed to add column madrid_url.
Added column madrid_url.
ALTER TABLE message ADD COLUMN madrid_url TEXT
Failed to add column madrid_error.
Added column madrid_error.
ALTER TABLE message ADD COLUMN madrid_error INTEGER
Failed to add column is_madrid.
Added column is_madrid.
ALTER TABLE message ADD COLUMN is_madrid INTEGER;
Failed to add column read.
Added column read.
ALTER TABLE message ADD COLUMN read INTEGER
Failed to update flags.
Updated flags.
UPDATE message SET read = ((flags >> 1) & 1)
Failed to create index update message_groupid_read_index.
Created index message_groupid_read_index.
CREATE INDEX message_groupid_read_index ON message(group_id, read)
CREATE TABLE IF NOT EXISTS handle ( ROWID INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, id TEXT NOT NULL, country TEXT, service TEXT NOT NULL, uncanonicalized_id TEXT, UNIQUE (id, service) )
BOOL IMDLegacyMigrator(IMDSqlOperation *, int)
read
MobileSMS DB Migration failed while dropping message_group_index.
Successfully dropped index message_group_index.
DROP INDEX message_group_index;
MobileSMS DB Migration failed while creating message_group_index.
Created index message_group_index
MobileSMS DB Migration failed adding madrid_error column to message table.
Added madrid_error column.
ALTER TABLE message ADD COLUMN madrid_error INTEGER;
MobileSMS DB Migration failed adding is_madrid column to message table.
Added column is_madrid
MobileSMS DB Migration failed creating index madrid_flags_index.
Added index madrid_flags_index.
MobileSMS DB Migration failed adding column madrid_date_read.
Added column madrid_date_read.
ALTER TABLE message ADD COLUMN madrid_date_read INTEGER;
MobileSMS DB Migration failed adding column madrid_date_delivered.
Added column madrid_date_delivered.
ALTER TABLE message ADD COLUMN madrid_date_delivered INTEGER;
MobileSMS DB Migration failed adding index group_id_index
Added index group_id_index
CREATE INDEX group_id_index ON group_member(group_id);
MobileSMS DB Migration failed updating the values for is_madrid.
Updated values for is_madrid.
UPDATE message SET is_madrid = 0 WHERE is_madrid IS NULL;
MobileSMS DB Migration failed adding column madrid_account_guid.
Added column madrid_account_guid.
ALTER TABLE message ADD COLUMN madrid_account_guid TEXT;
MobileSMS DB migration failed to rename group_member table.
Renamed group_member table.
ALTER TABLE group_member RENAME TO group_member_legacy;
MobileSMS DB migration failed to rename madrid_attachment table.
Renamed madrid_attachment table.
ALTER TABLE madrid_attachment RENAME TO madrid_attachment_legacy;
MobileSMS DB migration failed to rename madrid_chat table.
Renamed madrid_chat table.
ALTER TABLE madrid_chat RENAME TO madrid_chat_legacy;
Renamed message table.
ALTER TABLE message RENAME TO message_legacy;
MobileSMS DB migration failed to rename msg_group table.
Renamed msg_group table.
ALTER TABLE msg_group RENAME TO msg_group_legacy;
MobileSMS DB migration failed to rename msg_pieces table.
Renamed msg_pieces table.
ALTER TABLE msg_pieces RENAME TO msg_pieces_legacy;
SELECT is_archived FROM chat
MobileSMS DB migration failed to add column is_archived to the chat table.
Added is_archived column to the chat table.
ALTER TABLE chat ADD COLUMN is_archived DEFAULT 0
PRAGMA vacuum
SELECT was_data_detected FROM message
MobileSMS DB migration failed to add column was_data_detected to the message table.
Added was_data_detected column to the message table.
ALTER TABLE message ADD COLUMN was_data_detected INTEGER DEFAULT 0
SELECT last_addressed_handle FROM chat
MobileSMS DB migration failed to add column last_addressed_handle to the chat table.
Added last_addressed_handle column to the chat table.
ALTER TABLE chat ADD COLUMN last_addressed_handle TEXT
MobileSMS DB migration failed to delete V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
Dropped unneeded V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP.
SELECT was_deduplicated FROM message
MobileSMS DB migration failed to add column was_deduplicated to the message table.
Added was_deduplicated column to the message table.
ALTER TABLE message ADD COLUMN was_deduplicated INTEGER DEFAULT 0
CREATE INDEX message_idx_failed ON message(is_finished, is_from_me, error)
CREATE INDEX IF NOT EXISTS message_idx_handle ON message(handle_id, date);
chat_idx_identifier
CREATE INDEX IF NOT EXISTS chat_idx_identifier ON chat(chat_identifier)
chat_idx_room_name
CREATE INDEX IF NOT EXISTS chat_idx_room_name ON chat(room_name)
CREATE INDEX IF NOT EXISTS message_idx_was_downgraded ON message(was_downgraded);
chat_message_join_idx_message_id
CREATE INDEX IF NOT EXISTS chat_message_join_idx_message_date_id_chat_id ON chat_message_join(chat_id, message_date, message_id)
madrid_attachment_legacy
group_member_legacy
madrid_chat_legacy
message_legacy
msg_group_legacy
msg_pieces_legacy
SELECT is_outgoing FROM attachment
MobileSMS DB migration failed to add column is_outgoing to the attachment table.
Added is_outgoing column to the attachment table.
ALTER TABLE attachment ADD COLUMN is_outgoing INTEGER DEFAULT 0
SELECT user_info FROM attachment
MobileSMS DB migration failed to add column user_info to the attachment table.
Added user_info column to the attachment table.
ALTER TABLE attachment ADD COLUMN user_info BLOB
SELECT transfer_name FROM attachment
MobileSMS DB migration failed to add column transfer_name to the attachment table.
Added transfer_name column to the attachment table.
ALTER TABLE attachment ADD COLUMN transfer_name TEXT
SELECT display_name FROM chat
MobileSMS DB migration failed to add column display_name to the display_name table.
Added display_name column to the display_name table.
ALTER TABLE chat ADD COLUMN display_name TEXT
SELECT total_bytes FROM attachment
MobileSMS DB migration failed to add column total_bytes to the attachment table.
Added total_bytes column to the attachment table.
ALTER TABLE attachment ADD COLUMN total_bytes INTEGER DEFAULT -1
Purged orphaned messages failed :-(.
Purged orphaned messages.
SELECT is_audio_message, is_played, date_played FROM message
MobileSMS DB migration failed to add column is_audio_message to the message table.
Added is_audio_message column to the message table.
ALTER TABLE message ADD COLUMN is_audio_message INTEGER DEFAULT 0
MobileSMS DB migration failed to add column is_played to the message table.
Added is_played column to the message table.
ALTER TABLE message ADD COLUMN is_played INTEGER DEFAULT 0
MobileSMS DB migration failed to add column date_played to the message table.
Added date_played column to the message table.
ALTER TABLE message ADD COLUMN date_played INTEGER
SELECT item_type, other_handle, group_title, group_action_type, share_status, share_direction FROM message
MobileSMS DB migration failed to add column item_type to the message table.
Added item_type column to the message table.
ALTER TABLE message ADD COLUMN item_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column other_handle to the message table.
Added other_handle column to the message table.
ALTER TABLE message ADD COLUMN other_handle INTEGER DEFAULT -1
MobileSMS DB migration failed to add column group_title to the message table.
Added group_title column to the message table.
ALTER TABLE message ADD COLUMN group_title TEXT
MobileSMS DB migration failed to add column group_action_type to the message table.
Added group_action_type column to the message table.
ALTER TABLE message ADD COLUMN group_action_type INTEGER DEFAULT 0
MobileSMS DB migration failed to add column share_status to the message table.
Added share_status column to the message table.
ALTER TABLE message ADD COLUMN share_status INTEGER
MobileSMS DB migration failed to add column share_direction to the message table.
Added share_direction column to the message table.
ALTER TABLE message ADD COLUMN share_direction INTEGER
SELECT group_id FROM chat
MobileSMS DB migration failed to add column group_id to the chat table.
Added group_id column to the chat table.
ALTER TABLE chat ADD COLUMN group_id TEXT
SELECT is_expirable, expire_state, message_action_type FROM message LIMIT 1
MobileSMS DB migration failed to add column is_expirable to the message table.
Added is_expirable column to the message table.
ALTER TABLE message ADD COLUMN is_expirable INTEGER DEFAULT 0
MobileSMS DB migration failed to add column expire_state to the message table.
Added expire_state column to the message table.
ALTER TABLE message ADD COLUMN expire_state INTEGER DEFAULT 0
MobileSMS DB migration failed to add column message_action_type to the message table.
Added message_action_type column to the message table.
ALTER TABLE message ADD COLUMN message_action_type INTEGER DEFAULT 0
SELECT message_source FROM message LIMIT 1
MobileSMS DB migration failed to add column message_source to the message table.
Added message_source column to the message table.
ALTER TABLE message ADD COLUMN message_source INTEGER DEFAULT 0
CREATE TABLE IF NOT EXISTS chat_handle_join ( chat_id INTEGER REFERENCES chat (ROWID) ON DELETE CASCADE, handle_id INTEGER REFERENCES handle (ROWID) ON DELETE CASCADE, UNIQUE(chat_id, handle_id));
INTEGER DEFAULT 0
INTEGER DEFAULT 1
STRING DEFAULT NULL
BLOB
BLOB DEFAULT NULL
UPDATE message SET message_summary_info = NULL WHERE message_summary_info IS NOT NULL;
TEXT
TEXT DEFAULT NULL
message_date
UPDATE chat_message_join SET message_date = (select m.date from message m where m.ROWID = message_id);
update attachment set original_guid=guid;
UPDATE message SET date = date * 1000000000.0 WHERE date < 1000000000.0 ;
sr_server_change_token
sr_ck_sync_state
sr_ck_record_id
sr_ck_record_change_tag
sr_ck_server_change_token_blob
UPDATE chat SET room_name = chat_identifier WHERE style = 43 AND room_name is null;
sr_cloudkit_record_id
ck_record_system_property_blob
sr_ck_record_system_property_blob
UPDATE chat SET ck_record_system_property_blob = NULL, sr_ck_record_system_property_blob = NULL;
UPDATE chat SET ck_record_system_property_blob = NULL;
UPDATE chat SET sr_ck_record_system_property_blob = NULL;
UPDATE chat SET is_filtered = 1 WHERE is_filtered = 0 AND service_name = 'SMS';
UPDATE message SET ck_sync_state=8 WHERE thread_originator_guid is not null and ck_sync_state=1
UPDATE chat SET syndication_type = 0
UPDATE chat SET syndication_date = 0
INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', COALESCE((SELECT m.date FROM message m WHERE m.error != 0 AND m.is_from_me == 1 AND m.is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1), 0)), ('lastFailedMessageRowID', COALESCE((SELECT m.ROWID FROM message m WHERE m.error != 0 AND m.is_from_me == 1 AND m.is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1), 0));
INSERT OR REPLACE INTO kvtable (key, value) VALUES ('lastFailedMessageDate', 0), ('lastFailedMessageRowID', 0);
select name from sqlite_master where sql LIKE '%_legacy%' and type = 'index';
INTEGER DEFAULT -1
INTEGER
part_index
UPDATE chat SET state = 3 WHERE state = 4
select name from sqlite_master where sql LIKE '%_legacy%';
UPDATE chat_message_join SET message_date = (select m.date from message m where m.ROWID = message_id) where message_date = 0;
SELECT ROWID, id FROM handle
IMDMessageRecordCloudKitStatisticTotalMessageCountKey
IMDMessageRecordCloudKitStatisticSyncedMessageCountKey
IMDMessageRecordCloudKitStatisticTotalChatCountKey
IMDMessageRecordCloudKitStatisticSyncedChatCountKey
IMDMessageRecordCloudKitStatisticTotalAttachmentCountKey
IMDMessageRecordCloudKitStatisticSyncedAttachmentCountKey
IMDMessageRecordCloudKitStatisticAllSyncedCountKey
IMDMessageRecordCloudKitStatisticTotalCountKey
Cannot unassociate attachment from empty message GUID
Cannot unassociate attachment with empty attachment GUID
DELETE FROM message_attachment_join WHERE   ROWID IN (     SELECT       j.ROWID     FROM       message_attachment_join j     INNER JOIN message m ON j.message_id = m.ROWID     INNER JOIN attachment a ON j.attachment_id = a.ROWID     WHERE       m.guid = ?       AND a.guid = ?   ) 
DELETE FROM message WHERE message.ROWID NOT IN (SELECT message_id from chat_message_join);
Unable to associate message and attachment, empty attachment GUID.
Unable to associate message and attachment, empty message GUID.
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE associated_message_guid = ? ORDER BY message.ROWID ASC;
CFArrayRef IMDMessageRecordCopyMessagesForGUIDs(CFArrayRef)_block_invoke
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE guid = ? ORDER BY message.ROWID ASC;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join j ON m.ROWID = j.message_id INNER JOIN chat c ON c.ROWID = j.chat_id WHERE c.chat_identifier = ? AND m.is_read == 1 AND is_from_me == 0 AND is_finished == 1 ORDER BY m.date DESC LIMIT 1
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message INNER JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE error == 0 AND is_from_me == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT 1;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message INNER JOIN chat_message_join AS cmj ON message.ROWID = cmj.message_id WHERE error == 0 AND is_from_me == 0 AND item_type == 0 AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID = ? ORDER BY message.ROWID ASC;
SELECT MAX(message_id) FROM chat_message_join
sint64_result
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID IN (SELECT message_id FROM chat_message_join WHERE message_id < ?) AND item_type = 0 ORDER BY ROWID DESC LIMIT ?
readMessageIDs
IMDMessageRecordCopyMessageForGUIDUnlocked failed to get results
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDMessageQueries.m
BOOL IMDMessageRecordDeleteBatchOfDeletedMessageGuids(int, NSArray **, NSError **)
IMDMessageRecordDeleteBatchOfDeletedMessageGuids
batchAmount > 0
rowIDs.count == guids.count
IMDMessageRecordDeleteMessagesForGUIDs has no GUIDs to delete.
SELECT guid from message WHERE date >= 1000000000.0 AND date < ?;
SELECT guid from message WHERE date >= 1000000000.0 AND date < ? LIMIT 100;
SELECT * from deleted_messages ORDER BY ROWID ASC LIMIT ?;
SELECT * from deleted_messages ORDER BY ROWID ASC;
BOOL _IMDDeleteDeletedMessagesWithRangeOfRowIDs(IMDSqlOperation *, uint64_t, uint64_t)
_IMDDeleteDeletedMessagesWithRangeOfRowIDs
lastRowID >= firstRowID
DELETE FROM deleted_messages where ROWID >= ? AND ROWID <= ?;
DELETE from message WHERE date >= 1000000000.0  AND date < ?  AND NOT (group_action_type IN (1,3) AND (ROWID IN (SELECT message_id FROM message_attachment_join)))  AND NOT (ROWID IN (SELECT message_id FROM chat_recoverable_message_join));
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join j ON   m.ROWID = j.message_id INNER JOIN chat c ON   c.ROWID = j.chat_id WHERE   c.room_name = ?   AND c.service_name = ? ORDER BY   m.ROWID DESC LIMIT ?
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL ORDER BY m.ROWID DESC LIMIT ?
CFMutableArrayRef IMDMessageRecordLoadMessagesInSet(NSSet *, uint64_t, BOOL)
IMDMessageRecordLoadMessagesInSet
comparator
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)
results
sqlite-timing
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)_block_invoke
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesUpToGUIDOrLimitWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, CFStringRef, Boolean, Boolean, int64_t)_block_invoke_2
history query:
rowID == 0
history query: rowID should be > 0
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke
firstLoadResults
CFArrayRef IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUIDWithOptionalThreadIdentifier(CFArrayRef, CFArrayRef, CFStringRef, int64_t, int64_t, CFStringRef, Boolean *, Boolean *)_block_invoke_2
Paged history query with numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
Paged history query: rowID should be > 0
secondLoadResults
Paged history query with numberOfMessagesAfter: %lld for second load
Paged history query: rowID should be > 0 for second load
has_messages_before
has_messages_after
SELECT m.guid FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)
UPDATE   message SET   is_read = 0, date_read = 0 WHERE   rowid in (     select m.rowid from message m       INNER JOIN chat_message_join       cm ON m.ROWID = cm.message_id     WHERE       cm.chat_id = ?       AND m.item_type == 0       AND m.is_from_me == ?   )
SQLite returned %d from IMDMessageRecordMarkMessagesAsUnreadWithChatGUIDUpToGUIDFromMe
update message set is_read = 0 where guid = ?;
SQLite returned %d from IMDMessageRecordMarkMessageGUIDUnread
IMDMessageRecordRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDs(CFStringRef, CFStringRef, CFArrayRef, CFArrayRef, NSTimeInterval)
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INDEXED BY message_idx_undelivered_one_to_one_imessage WHERE   m.cache_roomnames IS NULL   AND m.service = '%@'   AND m.is_sent = 1   AND m.is_delivered = 0   AND m.was_downgraded = 0   AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INDEXED BY message_idx_expire_state WHERE   (m.expire_state = %d OR m.expire_state = %d)  AND m.item_type == 0   AND m.ROWID > ? ORDER BY m.date ASC
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m WHERE   m.is_from_me = 1   AND m.is_sent = 0   AND m.error = 0   AND m.item_type = 0   AND m.ROWID > ? 
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE subject = ?   AND item_type = ? ORDER BY message.ROWID ASC;
SELECT   COUNT(m.ROWID) FROM   message m INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
SELECT   COUNT(m.ROWID) FROM   message m   INDEXED BY message_idx_isRead_isFromMe_itemType INNER JOIN chat_message_join   cm ON m.ROWID = cm.message_id WHERE   cm.chat_id = ?   AND m.item_type == 0   AND m.is_read == 0   AND m.is_from_me == 0 
void _IMDMessageRecordCountAllUnreadMessagesForChatQuery(CFStringRef, void (^)(int64_t, SInt64))
_IMDMessageRecordCountAllUnreadMessagesForChatQuery
IMDIsRunningInDatabaseServerProcess()
_IMDMessageRecordCountAllUnreadMessagesForAllUnreadChats can only be called from IMDPersistenceAgent
SELECT cm.chat_id, COUNT(1) FROM message m INNER JOIN chat_message_join cm ON m.ROWiD = cm.message_id WHERE m.item_type == 0 AND m.is_read == 0 AND m.is_from_me == 0 GROUP BY +cm.chat_id
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered == 0  ORDER BY m.date DESC
SELECT   m.thread_originator_part, SUM(IFNULL(part_count, 1)) FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid == ?   AND m.associated_message_guid IS NULL GROUP BY  m.thread_originator_part
Unexpected column in reply count query with index %d
Reply count query got invalid column data back: %@|%@
IMDMessageRecordCountMessagesWithThreadOriginatorGroupedByParts called by client
lastFailedMessageRowID
select ROWID from message where LENGTH(ck_record_id) > 0 AND ck_sync_state=1 ORDER BY ROWID DESC limit 1;
lastFailedMessageDate
SELECT date FROM message ORDER BY date DESC, ROWID DESC LIMIT 1;
Most recent date: %@
UPDATE message SET error = ? WHERE (is_sent = 0 AND is_from_me = 1 AND error = 0)
IMDMessageRecordRetractNotificationsForMessagesMatchingChatGUIDs
IMDMessageRecordCopyAndMarkAsReadMessagesPriorToGuidMatchingChatGUIDs
1. QueryHighestRowID
2. QueryChatRecordIDs
3. MarkAsRead
4. QueryMessageGUIDsFromRowIDs
Time to mark 1:1 as read when tapping/reflecting read receipt: %@
Time to mark 1:1 as read when receiving read receipt from receiver: %@
SELECT seq FROM SQLITE_SEQUENCE WHERE name = 'message';
int64_result
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE rowID >= ?   AND rowID <= ?   AND item_type == 0 ORDER BY message.ROWID ASC;
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID limit: %lld  rowID: %lld
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.date DESC, m.ROWID DESC LIMIT ?;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.ROWID > ?  AND m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m  INDEXED BY message_idx_isRead_isFromMe_itemType  INNER JOIN chat_message_join cm ON cm.message_id = m.rowid  INNER JOIN chat c ON c.ROWID = cm.chat_id  WHERE m.is_read == 0  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_filtered != ?  ORDER BY m.ROWID DESC;
IMDMessageRecordCopyNewestUnreadIncomingMessagesAfterRowID got back %ld rows
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %zu rows from XPC
IMDMessageRecordCopyNewestUnreadIncomingMessagesToLimitAfterRowID got back %d rows after deserialization
Asked to load up to oldest unread or fallback message: %@
SELECT * FROM (  SELECT ROWID from (      SELECT m1.ROWID FROM message m1 WHERE m1.GUID = ?    UNION      SELECT m2.ROWID FROM message m2        INNER JOIN chat_message_join cm ON          m2.ROWID = cm.message_id        WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)        AND m2.is_read = 0        AND m2.item_type = 0        AND m2.is_from_me = 0  )) ORDER BY ROWID ASC LIMIT 1;
Query failed to look up message for guid: %@ error: %d
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id WHERE cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND m.ROWID >= ? AND m.item_type == 0  AND m.is_read == 0 ORDER BY cm.chat_id, cm.message_id DESC LIMIT ?;
IMDMessageRecordCopyNewestFailedOutgoingMessagesToLimitAfterDate limit: %lld  date: %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE date > ?   AND item_type == 0   AND error != 0   AND is_from_me == 1   AND is_finished == 1 ORDER BY date DESC, ROWID DESC LIMIT ?;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ROWID > ?   AND item_type == 0   AND has_dd_results == 1 ORDER BY ROWID DESC LIMIT ?;
CFArrayRef IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender(NSString *, NSString *, NSError **)
IMDMessageRecordCopyArrayOfAssociatedMessagesForMessageGUIDFromSender
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE (associated_message_guid = ?) AND (handle_id IN (SELECT ROWID FROM handle where id = ?));
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE ((associated_message_guid = ?) AND (is_from_me = 1));
error_description
IMDMessageRecordCopyMessagesToUploadToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message where ck_sync_state == 0 AND (service == 'iMessage' OR service == 'SMS') and was_detonated == 0 order by date limit ? ;
Number of results %ld
Number of results 0
Returned from DB call.
IMDMessageRecordCopyMessagesPendingUpdateT1ToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, thread_originator_guid, thread_originator_part FROM message where ck_sync_state == 8 AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
Unexpected column in Message Update v1 with index %d
Message Update v1 query got invalid column data back: rowid %lld messageId:%@ threadOriginatorGUID:%@
Message Update v1 Query - unable to create row dictionary for messageId: %@, skipping!
Found message %lld/%@ to update : originator GUID/part: %@/%@ (dict %@)
TOID
TOPart
IMDMessageRecordCopyMessagesPendingUpdateT2ToCloudKitWithLimit called with limit %lld
SELECT ROWID, guid, syndication_ranges, synced_syndication_ranges FROM message where syndication_ranges is not null AND (synced_syndication_ranges is null or syndication_ranges != synced_syndication_ranges) AND (service == 'iMessage' OR service == 'SMS') order by date limit ? ;
Message Update T2 query got invalid column data back: rowid %lld messageId:%@ syndicationRanges:%@ syncedSyndicationRanges:%@
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync
update message set ck_sync_state=0,ck_record_id='',ck_record_change_tag='';update attachment set ck_sync_state=0, ck_server_change_token_blob='';
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync updated messages as dirty 
update message set synced_syndication_ranges=NULL where synced_syndication_ranges is not null;
IMDMarkMessageForT2UpdateSync updated messages with syndicationRanges as dirty for T2 update
Returned from DB call after marking all msgs as dirty.
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in IMDP with limit %lld
 select * from sync_deleted_messages where LENGTH(recordID) > 0 limit ?;
IMDMessageRecordCopyRecordIDsAndGUIDsToDeleteWithLimit is in imagent with limit %lld
Request to add message with guid (%@) and recordID (%@) to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) VALUES (?, ?);
Finished adding message with guid (%@) and recordID (%@) to delete table
Request to add incompatible group photo to delete table
 INSERT INTO sync_deleted_messages (guid, recordID) SELECT guid,ck_record_id FROM message WHERE item_type = 3 AND group_action_type != 0 AND length(ck_record_id) > 0;
Finished adding incompatible group photo to delete table
IMDMessageRecordClearDeleteTombStones
delete from sync_deleted_messages;
IMDMessageRecordMarkAllMessagesAsNeedingCloudKitSync deleted pending sync table
Returned from DB call after marking clearing all tombstones
IMDMessageRecordDeleteTombStonedMessagesWithGUIDs has no GUIDs to delete.
Returned from DB call after deleting RecordIDs from Tombstone table
Request to mark message with ROWID %lld as ignore but needing sync
update message set ck_sync_state = 2 where rowid=?
Finised marking message with ROWID %lld as ignore but needing sync
Request to mark message with ROWID %lld as clean
update message set ck_sync_state = 1 where rowid=?
Finised marking message with ROWID %lld as clean
SELECT ck_sync_state
 FROM message WHERE (ROWID in (SELECT message_id FROM chat_message_join));
 FROM chat;
SELECT ck_sync_state FROM attachment WHERE (ROWID in (SELECT attachment_id FROM message_attachment_join));
UPDATE %@ SET ck_sync_state = 0;
SELECT ROWID from %@ LIMIT %lld
UPDATE %@ SET ck_sync_state = 1 WHERE ROWID = %lld;
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message WHERE reply_to_guid = ?;
Bad thread identifier given to paged history query, identifier: %@ guid: %@ part: %@
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date DESC LIMIT ?
SELECT   m.ROWID FROM   message m INDEXED BY   message_idx_thread_originator_guid INNER JOIN   chat_message_join cmj ON cmj.message_id = m.ROWID WHERE   m.thread_originator_guid = ? AND m.thread_originator_part = ?   AND m.date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY   m.date ASC LIMIT ? + 1
Threaded history query got %llu items
Performing threaded history query ref msg: %@ originator guid: %@ part: %@ limit: %llu results: %@
void _IMDPerformQueryForPagedHistoryWithThreadIdentifier(CFStringRef, CFStringRef, CFStringRef, CFStringRef, int64_t, NSMutableSet *)_block_invoke
Performing threaded history query for thread originator associated messages without thread_originator_guid with associated message GUID: %@
SELECT   m.ROWID FROM   message m WHERE   m.associated_message_guid = ?  AND m.thread_originator_guid IS NULL
SELECT m.ROWID, m.guid, m.text, m.replace, m.service_center, m.handle_id, m.subject, m.country, m.attributedBody, m.version, m.type, m.service, m.account, m.account_guid, m.error, m.date, m.date_read, m.date_delivered, m.is_delivered, m.is_finished, m.is_emote, m.is_from_me, m.is_empty, m.is_delayed, m.is_auto_reply, m.is_prepared, m.is_read, m.is_system_message, m.is_sent, m.has_dd_results, m.is_service_message, m.is_forward, m.was_downgraded, m.is_archive, m.cache_has_attachments, m.cache_roomnames, m.was_data_detected, m.was_deduplicated, m.is_audio_message, m.is_played, m.date_played, m.item_type, m.other_handle, m.group_title, m.group_action_type, m.share_status, m.share_direction, m.is_expirable, m.expire_state, m.message_action_type, m.message_source, m.associated_message_guid, m.associated_message_type, m.balloon_bundle_id, m.payload_data, m.expressive_send_style_id, m.associated_message_range_location, m.associated_message_range_length, m.time_expressive_send_played, m.message_summary_info, m.ck_sync_state, m.ck_record_id, m.ck_record_change_tag, m.destination_caller_id, m.is_corrupt, m.reply_to_guid, m.sort_id, m.is_spam, m.has_unseen_mention, m.thread_originator_guid, m.thread_originator_part, m.syndication_ranges, m.synced_syndication_ranges, m.was_delivered_quietly, m.did_notify_recipient, m.date_retracted, m.date_edited, m.was_detonated, m.part_count, m.is_stewie, m.is_kt_verified FROM message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id INNER JOIN chat_handle_join ch ON   c.ROWID = ch.chat_id WHERE   ch.handle_id = ?   AND c.room_name IS NULL   AND m.replace = ? ORDER BY m.ROWID DESC LIMIT ?
SELECT   m.guid FROM   message m INNER JOIN chat_message_join cm ON   m.ROWID = cm.message_id INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_from_me = 0   AND m.is_played = 0   AND m.is_audio_message = 1   AND c.guid = ? ORDER BY m.ROWID ASC
_IMDMessageRecordCopyUnreadMessagesMatchingRecoverableChatIDs
SELECT   message_id FROM chat_recoverable_message_join WHERE message_id in (SELECT rowid FROM message INDEXED BY message_idx_isRead_isFromMe_itemType  WHERE (is_read == 0     AND is_finished == 1     AND is_from_me == 0     AND item_type == 0     AND is_system_message == 0 )) AND chat_id %@
_IMDMessageRecordCopyAndMarkAsReadMessagesReceivedPriorToGuidMatchingChatGUIDs
SELECT   message_id FROM chat_message_join WHERE message_id in (SELECT rowid FROM message INDEXED BY message_idx_isRead_isFromMe_itemType  WHERE (is_read == 0     AND is_finished == 1     AND is_from_me == 0     AND item_type == 0     AND is_system_message == 0     %s )) AND chat_id %@
 AND rowid <= ?
Query1
UPDATE   message SET   is_read = 1,   date_read = ? WHERE rowid %@
Query2-Update
Query results were null or empty bulk reading messages for %@
Time to run db query for marking 1:1 as read when tapping/reflecting read receipt: %@
Unable to create message record for guid %@
Time to run db query for marking 1:1 as read when receiving remote read receipt: %@
LPSharedObjectMetadata
LPSpecializationMetadata
com.apple.IMDPersistenceAgent.IMDSharedWithYouMetadataManager
IMDSharedWithYouMetadataManager
Setting highlight metadata for Message: %@ to be hidden because flagged as CommSafety sensitive.
NOT Appending highlight metadata for Message: %@ since its been marked as Do not donate
Appending highlight metadata for Message: %@
Appending highlight server date for Message: %@
NOT Appending highlight metadata for Message since sender %@ is not known. Contact: %@
Highlight type for Message: %@. automatic %@ starred %@ hidden %@ userInteracted %@
NOT Appending highlight metadata Message: %@ shared by business chat with ID: %@
TUConversation matches chatRecord for conversation: %@
Going to update Conversation Manager with highlightDictionary: %@
Generating highlight dictionary
Nil attributes: %@ passed in. Skipping generating highlight dictionary 
com_apple_mobilesms_collaborationIdentifier
com_apple_mobilesms_ckBundleIDs
ckAppBundleIDs
Returning highlight dictionary: %@
com_apple_mobilesms_highlightedContentServerDate
com_apple_mobilesms_syndicationContentType
com_apple_mobilesms_collaborationMetadata
Requests
Is database full? %@
Database schema version? %u
Fetched Database schema
Created attachment record for guid: %@ with filename %@
Failed to create attachment record for guid: %@
rrid
Copied attachment record for guid: %@
No attachment record found for guid: %@
Copied attachment record for path: %@
No attachment record found for path: %@
Delete attachment for guid: %@
Deleting attachments older than %lld days
Query space saved by deleting attachments older than %lld days
bytes
Clean database
Query largest conversations
Query largest attachment GUIDs
Query space taken by attachment class
Does attachment exist for guid: %@? %@
Attachment count at sticker: %@ is %lld
Copying filenames for most recent %lld attachments (Results: %ld)
Copying most recent %lld attachments for queryType: %lld (Results: %ld)
Getting message record for attachment GUID %@
Failed to copy message for attachment GUID %@
Purgeable disk space is %lld
purgeableDiskSpace
Non synced attachment disk space is %lld
diskSpace
Copying oldest attachments to delete to free up: %lld bytes (Results: %ld)
Copying most recent attachments %ld from %ld most recent chats: (Results: %ld)
Copying oldest attachments to delete to free up: %lld bytes starting offset: %d (Results: %ld)
Deleting files older than %lld recent attachments
Copying filenames for attachments for chat identifiers: %@ on services: %@   (Results: %ld)
Copying purged attachments for chat %@ services %@ limit %@
All chats that have %@ as a participant.
Copying purged attachments count for chat %@ services %@
purgedCount
Copying filenames for sticker attachments
accessibility_string
Updating attachment for guid: %@
No attachment found to update for guid: %@
_IMDPersistenceQueueForAsyncIPAction
Creating handle record for ID: %@  service: %@
Failed to create handle record for ID: %@  service: %@
Updating handle record for handle ID: %lld   ID: %@  country: %@  unformatted: %@  service: %@ personCentricID: %@
Failed handle record record ID: %lld
Copied handle record for ID: %@  service: %@
No handle record found for ID: %@  service: %@
Unassociating message guid: %@  from attachment: %@
Associating message guid: %@  from attachment: %@
Copying messages for associated guid: %@   (Results: %ld)
Copying messages for guids: %@   (Results: %ld)
Copying messages between rowID: %lld  and rowID: %lld   (Results: %ld)
Copy message for guid: %@   (Result: %@)
Failed to copy message for guid: %@
Copy last read message for chat identifier: %@   (Result: %@)
Failed to copy last read message for chat identifier: %@
Copy message for RowID: %lld   (Result: %@)
Failed to copy message for rowID: %lld
Copy last received message (Result: %@)
Failed to copy last received message
Copying last received messages with limit: %lld   (Results: %ld)
Copying messages for rowIDs: %@   (Results: %ld)
Copying messages for rowIDs: %@
Delete messages for guids: %@
Delete messages older than %lld days
Copying messages for room name: %@ on service: %@   (Results: %ld)
Copying messages for chat identifiers: %@ on services: %@ onlyMessages: %@   (Results: %ld)
Copying limited number of messages for chat identifiers: %@ on services: %@  (Results: %ld) numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld
Copying frequent replies for chat identifiers: %@ on services: %@   (Results: %ld)
Copying guids for chat identifiers: %@ on services: %@   (Results: %ld)
Getting last addressed labelID and last message date for chat identifiers: %@ and last addressed labelIDs: %@   (Results: %@)
Getting last addressed handle and last message date for chat identifiers: %@ and last addressed handles: %@   (Results: %@)
Delete messages guids: %@ for chat identifiers: %@ on services: %@
Copy messages with for handle: %@ on service: %@  limit: %lld  (Results: %ld)
Copy messages with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@  (Result: %@)
No message found with handle: %@ matching body with for chatidentifiers: %@ on services: %@  skipping: %@
Copy messages with handle: %@ matching body skipping services: %@  (Result: %@)
No message found with handle: %@ matching body skipping services: %@
Copy message with handle: %@ on service: %@  replaceID: %lld (Result: %@)
No message found with handle: %@ on service: %@  replaceID: %lld
Copy undelivered 1-1 messages (Results: %ld)
Copy expiring or expired messages (Results: %ld)
Copy unsent messages (Results: %ld)
Copy message action items for original message guid (Results: %ld)
Unread message count: %lld
Unread message count: %lld  for chat GUID: %@
Unread message count: %lld  for chat rowID: %lld
Copy all unread messages: %@ (Results: %ld)
Last failed message rowID: %lld
Last synced message rowID: %lld
Most recent message date: %lld
Get identifier for message guid: %@  result: %lld
Get messages sequence number: %lld
Mark all unsent messages failed
Delete orphaned messages
Copy messages guids, and mark read, for chatGUIDs: %@ up to guid: %@  (Results: %ld)
Copy unplayed audio messages guids, for chat guid: %@  (Results: %ld)
Copy unread incoming messages chatIdentifiers:%@   services: %@   limit: %lld  fallbackGUID:%@ (Result: %lu)
Copy DD result messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy messages with reply to guid %@
Copy newest unread incoming messages up to rowID: %lld  limit: %lld   (Result: %lu)
Copy newest failed outgoing messages up to date: %lld  limit: %lld   (Result: %lu)
Copy most recent usage of addresses: %@   result: %@
Created message with guid: %@
Failed to create message with guid: %@
Copy chats from message ID: %lld  (Results: %lu)
Tried to copy chats from message ID: %lld, but no message found
Found chat: %@  for message GUID: %@
Tried to find chat from message GUID: %@, but no chat was found
Copy attachments from message ID: %lld  (Results: %lu)
Tried to copy attachments from message ID: %lld, but no attachments found
Setting handle ID: %lld  on message ID: %lld
Failed to set handle (%lld) on message (%lld)   (Message: %@  Handle: %@)
Copied handle: %@  for message ID: %lld
Tried to copy handle from Message ID: %lld, but no handle was found
Tried to copy handle from Message ID: %lld, but no message was found
Copied other handle: %@  for message ID: %lld
Tried to copy other handle from Message ID: %lld, but no handle was found
Tried to copy other handle from Message ID: %lld, but no message was found
Inserting Message Processing Task with (guid: %@, taskflags: %ld)
Coping first %ld Message Processing Task (Results: %ld)
Updating task_flags to %ld for Message Processing Task with guid: %@
Deleting all completed task from Message Processing Table
Created chat with guid: %@  (0x%p)
Failed to create chat with guid: %@
goFetchAllActiveChatsProgressively
Got nil for all active chats, aborting progressive copy all chats request early
Enforcing lastMessage load limit of %lld, found %lu chats with messages
v24@?0q8q16
Request
Received new copy all chats request (total: %ld, batch size: %ld)
Progressive chat send progress: %lu out of %lu
Progressive chat send complete with %lu chats sent
goFetchAllActiveChats
Enforing lastMessage load limit of %lld, found %lu chats with messages
v32@?0@8@16^B24
Finished timing goFetchAllActiveChats with time: %@
copyRecentChats
An unread chat was not included in recent chats with rowID: %llu unreadCount: %lld
Finished timing copyRecentChats with time: %@
Backing up database failed with error: %@
IMDChatRecordRepairDuplicateChats is returned %@
got NO success with error: %@
got NO success with NO error!?
file-read-data
Denying access to attachment, (check %d, errno %d) client with audit token: %u not allowed to access request path: %@
Mark file %@ succedded ? %@
Downgrade Database to version %ld
timestamp
is_orphaned
IMDAttachmentRecordCopyAttachmentsForQueryWithLimit_IPCAction
IMDAttachmentRecordMarkAttachmentWithROWIDAsFailedToUploadToCloudKit_IPCAction
IMDAttachmentRecordMarkAttachmentWithROWIDAsSyncedWithCloudKit_IPCAction
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync_IPCAction
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState_IPCAction
IMDAttachmentRecordCopyMessageForAttachmentGUID_IPCAction
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID_IPCAction
IMDAttachmentRecordGetPurgeableDiskSpace_IPCAction
IMDAttachmentRecordGetNonSyncedAttachmentDiskSpace_IPCAction
IMDAttachmentRecordCopyAttachmentsToMetricForDiskSpace_IPCAction
IMDAttachmentRecordCopyMostRecentAttachmentsInMostRecentChats_IPCAction
IMDAttachmentUpdateAttachmentFileSizeWithRowIDGreaterThanWatermark_IPCAction
IMDAttachmentRecordCopyAttachmentsToPurgeForDiskSpace_IPCAction
Clean database requested
DBServer
In server for IMDAttachmentRecordDeleteAttachmentsDirectWithPredicate_IPCAction
In server for IMDAttachmentRecordCopyAttachmentsDirectWithPredicate_IPCAction
com.apple.private.imcore.spi.database-access
com.apple.private.imcore.imdpersistence.data-detection-access
com.apple.private.imcore.imdpersistence.database-access
com.apple.imdpersistence.IMDPersistenceAgent-UnreadChatList
com.apple.imdpersistence.IMDPersistenceAgent-StorageManagement
com.apple.imdpersistence.IMDPersistenceAgent-GroupMetadata
com.apple.imdpersistence.IMDPersistenceAgent-Syndication
peer(%d) received XPC_ERROR_CONNECTION_INVALID
peer(%d) received XPC_ERROR_CONNECTION_INTERRUPTED
peer(%d) received XPC_ERROR_TERMINATION_IMMINENT
Denying xpc connection, task does not have entitlement for message: %@  (%@:%d)
__IMDPersistenceIPCServer_peer_event_handler
com.apple.messages
DisablePriorityInversionFixForIMDP
Database client wants response: %@, but DisablePriorityInversionFixIMDP is YES
DELETE FROM sync_deleted_messages WHERE (recordID = ?
 OR recordID = ?
DELETE FROM message WHERE (guid = ?
 OR guid = ?
SELECT cm.message_id FROM chat_message_join cm 
INNER JOIN message m ON m.ROWID = cm.message_id 
WHERE cm.chat_id IN (SELECT c.ROWID FROM chat c WHERE (c.chat_identifier = ? and c.service_name = ?)) 
AND m.is_read == 0 AND m.is_finished == 1 AND m.is_from_me == 0 
ORDER BY cm.message_date DESC, cm.message_id DESC LIMIT ?;
ORDER BY cm.message_date DESC, cm.message_id DESC;
SELECT message_id from chat_message_join cmj 
INNER JOIN message m ON m.ROWID = cmj.message_id 
WHERE cmj.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) 
AND ((m.thread_originator_guid = ? AND m.thread_originator_part = ?) OR m.associated_message_guid = ?) 
AND cmj.message_date <= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ? + 1
AND cmj.message_date < (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date DESC LIMIT ?
AND cmj.message_date >= (SELECT om.date FROM message om WHERE om.guid = ?) ORDER BY cmj.message_date ASC LIMIT ? + 1
DELETE
SELECT *
guidCount
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery1(int)
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id IN (SELECT m.ROWID FROM message m WHERE m.guid IN (?
DELETE FROM chat_message_join WHERE chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?) AND message_id = (SELECT m.ROWID FROM message m WHERE m.guid = ?);
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery2(int)
cleanOrphanedMessageString
DELETE FROM message WHERE (     SELECT 1 FROM chat_message_join     WHERE message_id = message.rowid     LIMIT 1 ) IS NULL AND message.guid 
CFStringRef IMDMessageRecordDeleteMessagesWithGUIDsChatIdentifiersOnServicesQuery3(int)
updateCacheRoomnamesString
UPDATE message SET cache_roomnames = (SELECT group_concat(c.room_name)                    FROM chat c INNER JOIN chat_message_join j                    ON c.ROWID = j.chat_id                    WHERE j.message_id = message.ROWID) WHERE message.guid 
AND h.service NOT %@
AND m.guid NOT %@
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE  (   %@  m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@)  )   AND m.date >= ?   AND m.was_deduplicated = 0   AND m.cache_has_attachments = 0   %@   AND im_trim(m.text) = im_trim(?)   AND m.ROWID IN (     SELECT        cm.message_id      FROM        chat_message_join cm      WHERE        m.ROWID = cm.message_id        AND cm.chat_id = (SELECT c.rowid FROM chat c WHERE c.chat_identifier = ? AND c.service_name = ?)   ) 
m.is_from_me = 1 OR
m.is_from_me = 0 AND
SELECT   MAX(m.ROWID) FROM   message m   INDEXED BY message_idx_handle WHERE   m.handle_id IN (    SELECT       h.rowid     FROM       handle h     WHERE       h.id = ?       %@  )  AND m.date >= ?   AND m.is_from_me = 0   AND m.was_deduplicated = 0   AND m.cache_roomnames IS NULL   %@   AND im_trim(m.text) = im_trim(?) 
CFStringRef IMDMessageRecordCopyMessageMatchingBodyStringWithHandleSkippingServicesSkippingGUIDsQuery(int, int)
CFStringRef IMDMessageRecordCopyMostRecentUseageOfAddressesQuery(int)
SELECT   MAX(cm.message_id), h.ID FROM chat_message_join cm   INNER JOIN chat_handle_join j     ON cm.chat_id = j.chat_id       INNER JOIN handle h         ON h.ROWID = j.handle_id WHERE h.ID 
 GROUP BY h.ID 
 ORDER BY cm.message_id DESC 
CFStringRef IMDMessageRecordCopyMessagesForGUIDsQuery(int)
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message 
WHERE guid 
ORDER BY message.ROWID ASC;
rowCount
CFStringRef IMDCreateDeleteDeletedMessagesGuidsQuery(int)
DELETE from deleted_messages where (ROWID = ?
 OR ROWID = ?
CFStringRef _IMDCreateQueryRemoveMessagesFromChatMessageJoinWithArrayOfMessageGuids(CFArrayRef, NSArray **)
spotlightMessageGuids
DELETE FROM chat_message_join WHERE message_id = ?
message_guid=%@
 OR message_id = ?
inboxesToExcludeCount
CFStringRef IMDMessageRecordCountAllUnreadMessagesQuery(int)
SELECT COUNT(1) FROM (SELECT m.rowid , cm.message_id FROM message m INNER JOIN chat_message_join cm ON cm.message_id = m.rowid INNER JOIN chat c ON c.ROWID = cm.chat_id WHERE   m.is_read == 0   AND NOT (m.ROWID in (SELECT message_id FROM chat_recoverable_message_join))  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_blackholed != 1  AND c.is_filtered NOT IN (?
SELECT   COUNT(1) FROM (SELECT   m.rowid , cm.message_id FROM   message m INNER JOIN chat_message_join cm ON  cm.message_id = m.rowid INNER JOIN chat c ON   c.ROWID = cm.chat_id WHERE   m.is_read == 0   AND NOT (m.ROWID in (SELECT message_id FROM chat_recoverable_message_join))  AND m.is_finished == 1  AND m.is_from_me == 0  AND m.item_type == 0  AND m.is_system_message == 0  AND c.is_blackholed != 1  AND c.is_filtered != ?)
AND %@
SELECT ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified  FROM message JOIN chat_message_join ON    chat_message_join.message_id == message.rowid WHERE    chat_message_join.chat_id = (SELECT c.rowid FROM chat c WHERE c.guid = ?) %@ %@ LIMIT    ?;
SELECT count(rowid) FROM Attachment where guid = ?
IMDAttachmentQueries
*** IMDAttachmentRecordCopyAttachmentForGUIDIsLegacyGUID called with isLegacyGUID %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE original_guid = ? ORDER BY ROWID DESC;
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE guid = ? ORDER BY ROWID DESC;
Getting message record for attachment guid %@
SELECT ROWID FROM attachment WHERE guid = ? LIMIT 1;
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Got ROWID %lu for GUID %@
Looking up message ID that corresponds to attachment ID %lld
SELECT message_id FROM message_attachment_join WHERE attachment_id = ?;
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned error %@
kIMDAttachmentRecordGetMessageIDFromAttachmentID returned zero results
message_id
Looking up message record corresponding to %lld
Failed to look up message record for messsage_id %llu
SELECT sticker_user_info, filename, created_date, attribution_info FROM attachment a INNER JOIN message_attachment_join ma ON a.ROWID = ma.attachment_id INNER JOIN message m ON ma.message_id = m.ROWID WHERE a.sticker_user_info IS NOT NULL AND m.is_from_me=1 AND a.transfer_state=5 GROUP BY filename ORDER BY a.ROWID DESC LIMIT ?;
accessl
Invalid parameter to IMDAttachmentCountAttachmentsWithStickerPath stickerCachePath %@
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE filename LIKE ?;
StickerAttachmentCount
There appears to be more than one sticker with sticker path [%@]
SELECT count(rowid) FROM Attachment WHERE filename LIKE ?;
SELECT filename from attachment where mime_type in ("image/jpeg", "image/png", "image/gif")  order by ROWID DESC LIMIT ?
Request to mark attachment with ROWID %lld as failed to upload to cloudKit
update attachment set ck_sync_state = 2 where rowid=?
Finished marking attachment with ROWID %lld as failed to upload (2)
Request to mark attachment with ROWID %lld as clean
update attachment set ck_sync_state = 1,transfer_state = 5 where rowid=?
Finished marking attachment with ROWID %lld as clean
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync
update attachment set ck_sync_state=0, ck_server_change_token_blob='', ck_record_id='';
IMDAttachmentRecordMarkAllAttachmentsAsNeedingCloudKitSync updated attachments as dirty 
Returned from DB call after marking all attachments as dirty.
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState
UPDATE attachment SET ck_sync_state == 1 WHERE ck_sync_state == 5;
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState update all failed cloud attachment downloads 
UPDATE attachment SET ck_sync_state=0 where ck_sync_state in (2,3,5) OR (ck_sync_state==1 AND guid not like "at_%");
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState reset all failed cloud attachments 
IMDAttachmentResetAllAttachmentsInFailedCloudDownloadState Returned from DB call after resetting all failed cloud attachment downloads.
Request to fetch the non synced attachment disk space
SELECT sum(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment == 0 ORDER BY created_date ASC;
Returning non synced attachment disk space with: %lld bytes
/var/mobile
Request to fetch the purgeable disk space
SELECT filename, total_bytes FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
File does not exist at path %@
returning purgeable disk space results (%lld) to delete number of attachments to delete (%lld) number of attachments total (%lld) 
Request to copy attachments to metric what we would purge
SELECT COUNT(*) FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL;
Offset we are choosing: %@ number of available records: %@
SELECT DISTINCT chat_id FROM (SELECT chat_id,message_date FROM chat_message_join ORDER BY message_date desc) ORDER BY message_date DESC LIMIT ?;
SELECT a.ROWID, a.guid, a.is_sticker, a.transfer_name, a.filename FROM attachment a JOIN (SELECT ma.attachment_id as a_id, message_date as m_date FROM message_attachment_join ma JOIN (SELECT cm.message_id as message_id, cm.message_date as message_date FROM message m JOIN chat_message_join cm WHERE m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id = ? AND m.rowid = cm.message_id) as tmp WHERE ma.message_id = tmp.message_id) as tmp2 WHERE a.rowid = tmp2.a_id ORDER BY tmp2.m_date DESC LIMIT ?
Request to copy attachments to purge from disk that have been synced to CloudKit with bytes to free up: %lld starting offset: %d
SELECT ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive FROM attachment WHERE ck_sync_state == 1 AND transfer_state == 5 AND ck_server_change_token_blob != '' AND ck_server_change_token_blob NOT NULL ORDER BY created_date ASC LIMIT ? OFFSET ?;
Going to try and free up disk space with remaining bytes to free up: %lld
returning results (%d) to delete 
SELECT * FROM attachment a WHERE a.ck_sync_state == 0 ORDER BY ROWID LIMIT ? 
SELECT * FROM attachment a WHERE a.ck_sync_state == 1 AND transfer_state == 0 ORDER BY ROWID DESC LIMIT ? 
IMDAttachmentQueryStringForIMAttachmentsQuery unknown IMAttachmentsQuery type %lld
transfernames
filenames
/var/mobile/Library/Caches/
Previews
StickerCache
sticker
%@-%@-sticker
Examining pewview folder name'%@'.
Sticker preview %@ is part of 200 last attachments, not deleting
Skipping folder %@ as it does not have a valid transfername
Could ~not~ clean up sticker previews due to error '%@'.
Sticker Preview to Delete: %@
Cleaned up sticker preview '%@'
Could ~not~ clean up sticker preview '%@' due to error '%@'.
Beginning iteration of _IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteStickersExceptPreviewsToKeep File cleanse ended
Could ~not~ clean up '%@' due to error '%@'.
Beginning iteration of _IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep attachments
_IMDAttachmentRecordDeleteAttachmentsExceptPreviewsToKeep File cleanse ended
DELETE FROM attachment WHERE created_date < ? AND transfer_name != 'GroupPhotoImage';
Request to fetch estimate space taken by attachments older than days %llu
SELECT filename FROM attachment WHERE created_date < ?;
Request to fetch estimate space taken by attachments older than days %llu returning %llu
Request to fetch largest non synced conversations
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.hide_attachment=0 AND attachment.transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state != 1 AND attachment.hide_attachment=0 GROUP BY chat.guid ORDER BY s DESC;
SELECT chat.guid, sum(attachment.total_bytes) s FROM attachment INNER JOIN message_attachment_join ON message_attachment_join.attachment_id = attachment.rowid INNER JOIN chat_message_join ON chat_message_join.message_id = message_attachment_join.message_id INNER JOIN chat ON chat.ROWID = chat_message_join.chat_id WHERE attachment.ck_sync_state = 1 AND attachment.hide_attachment=0 AND transfer_state = 5 GROUP BY chat.guid ORDER BY s DESC;
size
Returning %lu conversations
Photo
Video
GIFOrSticker
Other
Request to fetch non synced attachment guids for attachment class
Returning %lu non synced attachments
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 1 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
SELECT mime_type, is_sticker, SUM(total_bytes) FROM attachment WHERE ck_sync_state != 0 AND hide_attachment=0 AND transfer_state = 5 GROUP BY mime_type, is_sticker ;
UPDATE attachment set total_bytes = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new filesize %@ with success %@
UPDATE attachment set transfer_state = ? WHERE rowid = ?;
Updated attachment at rowID %@ to new transfer_state %@ with success %@
SELECT filename,rowid,total_bytes,ck_sync_state,is_sticker,hide_attachment,transfer_state FROM attachment WHERE rowid > ? AND hide_attachment = 0 AND filename != '' ORDER BY rowid ASC LIMIT 20;
For rowID %@ bytes %@ is not equal to new byte count %@ for file.
File on disk, but not in finished state: %@, filename: %@.
Live Photo bundle on disk, but failed to delete it: %@, error: %@
Live Photo bundle deleted: %@
Failed getting filesize at rowID %@ and path %@.
File not on disk, lets switch it to tap to download rowID: %@, filename: %@.
No more attachments found to update
SELECT c.rowid FROM chat c WHERE (c.chat_identifier = ? AND c.service_name = ?)
 OR (c.chat_identifier = ? AND c.service_name = ?)
select a.filename, a.guid, a.is_sticker, a.created_date, a.transfer_state from attachment a join  (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma join (select cm.message_id as message_id, cm.message_date as message_date from message m join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND     a.hide_attachment == 0 ORDER BY tmp2.m_date ASC;
IMDAttachmentRecordCopyAttachmentGUIDsAndPathsForChatIdentifiersOnServicesQuery %@
SELECT * FROM attachment a INNER JOIN message_attachment_join ma ON   a.ROWID = ma.attachment_id INNER JOIN chat_message_join cm ON   ma.message_id = cm.message_id INNER JOIN message m ON   ma.message_id = m.ROWID WHERE   m.cache_has_attachments   AND m.expire_state != %d   AND cm.chat_id IN (%@)   AND a.hide_attachment == 0   AND a.ck_sync_state == 1   AND a.transfer_state == 0 ORDER BY m.date DESC limit %d
SELECT c.rowid FROM chat c INDEXED BY chat_idx_chat_identifier_service_name WHERE (c.chat_identifier = ? AND c.service_name = ?)
select count(*) from attachment a INDEXED BY attachment_idx_purged_attachments_v2 join (select ma.attachment_id as a_id, message_date as m_date from message_attachment_join ma INDEXED BY message_attachment_join_idx_attachment_id join (select cm.message_id as message_id, cm.message_date as message_date from message m INDEXED BY message_idx_cache_has_attachments join chat_message_join cm where m.cache_has_attachments = 1 AND cm.chat_id AND cm.chat_id IN (%@) AND m.rowid = cm.message_id) as tmp where ma.message_id = tmp.message_id) as tmp2 where a.rowid = tmp2.a_id AND a.hide_attachment == 0 AND (a.ck_sync_state == 1 OR a.ck_sync_state == 4) AND a.transfer_state == 0 ORDER BY tmp2.m_date ASC;
IMDAttachment
Copy purged attachments for chat %@ services %@ limit %@
%@ assets that have been purged for chat %@ outQuery %@
Copy purged attachments count for chat %@ services %@
DELETE FROM attachment WHERE guid = ?;
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned error %@
IMDAttachmentRecordUpdateAttachmentGUIDWithGUID - kIMDAttachmentRecordGetAttachmentRowIDForGUID returned zero results
Updating GUID for attachment at rowID %lld
UPDATE attachment set guid = ? WHERE ROWID = ?;
kIMDAttachmentRecordUpdateAttachmentGUIDWithGUID Success: %@
IMDAttachmentCopyGUIDsAfterRowWithLimit is in IMDP with limit %lld
 select ROWID, guid, maj.rowid is null as is_orphaned from attachment left join message_attachment_join maj on attachment.ROWID=maj.attachment_id where ROWID > ? ORDER BY ROWID limit ?;
IMDAttachmentCopyGUIDsAfterRowWithLimit is in imagent afterRow %llu with limit %lld
Returned from DB call after loading attachments to delete messages count %lu
IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit is in IMDP with limit %lld
 select ROWID, * from sync_deleted_attachments where LENGTH(recordID) > 0 AND ROWID > ? limit ?;
IMDAttachmentCopyRecordIDsToDeleteAfterRowWithLimit is in imagent afterRow %llu with limit %lld
DELETE FROM sync_deleted_attachments WHERE (recordID = ?
IMDAttachmentRecordDeleteTombStonedAttachmentsWithRecordIDs has no GUIDs to delete.
IMDAttachmentRecordClearDeleteTombStones
delete from sync_deleted_attachments;
IMDAttachmentRecordClearDeleteTombStones deleted pending sync table
Returned from DB call after clearing all tombstones
Request to markAllUnsuccessFullySyncedAttachmentsAsNeedingSync 
Executed query to mark all unsuccessfuly synced attachments as needing sync
Error executing markAllFailedAttachmentsAsNeedingSync %@ 
AND is_sticker = 0 AND mime_type LIKE 'image/%' AND NOT mime_type = 'image/gif'
AND mime_type LIKE 'video/%'
AND (is_sticker = 1 OR mime_type = 'image/gif')
AND NOT (mime_type LIKE 'image/%' OR mime_type LIKE 'video/%' OR is_sticker = 1 OR mime_type = 'image/gif')
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state != 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
SELECT guid, total_bytes, filename, created_date FROM attachment WHERE ck_sync_state = 1 AND transfer_state = 5 AND hide_attachment=0 %@ ORDER BY total_bytes DESC LIMIT ?;
image/gif
image/
video/
SELECT message_id FROM message_attachment_join WHERE attachment_id = ? LIMIT 1
v40@?0@"NSNumber"8{_NSRange=QQ}16^B32
UPDATE message set attributedBody = ?, text = ? where guid = ?
_IMDSMSRecordStoreCustomFunctionDeleteAttachment: wrong number of arguments
%@-%d
_IMDSMSRecordStoreCustomFunctionAfterDeleteMessagePlugin: wrong number of arguments
_IMDSMSRecordStoreCustomFunctionTrim: wrong number of arguments
_IMDSMSRecordStoreCustomFunctionTrim: sqlite3_value was NULL.
_IMDSMSRecordStoreCustomFunctionTrim: SQLite text of value[0] was NULL.
INSERT INTO message SELECT %@ from source.message WHERE date >= ?;
ROWID, guid, text, replace, service_center, handle_id, subject, country, attributedBody, version, type, service, account, account_guid, error, date, date_read, date_delivered, is_delivered, is_finished, is_emote, is_from_me, is_empty, is_delayed, is_auto_reply, is_prepared, is_read, is_system_message, is_sent, has_dd_results, is_service_message, is_forward, was_downgraded, is_archive, cache_has_attachments, cache_roomnames, was_data_detected, was_deduplicated, is_audio_message, is_played, date_played, item_type, other_handle, group_title, group_action_type, share_status,  share_direction, is_expirable, expire_state, message_action_type, message_source, associated_message_guid, associated_message_type, balloon_bundle_id, payload_data, expressive_send_style_id,  associated_message_range_location, associated_message_range_length, time_expressive_send_played, message_summary_info, ck_sync_state, ck_record_id, ck_record_change_tag, destination_caller_id, is_corrupt, reply_to_guid, sort_id, is_spam, has_unseen_mention, thread_originator_guid, thread_originator_part, syndication_ranges, synced_syndication_ranges, was_delivered_quietly, did_notify_recipient, date_retracted, date_edited, was_detonated, part_count, is_stewie, is_kt_verified 
INSERT INTO message SELECT %@ from source.message ORDER BY ROWID DESC LIMIT ?;
INSERT INTO chat SELECT %@ from source.chat WHERE ROWID IN (SELECT chat_id from source.chat_message_join where message_id IN (SELECT ROWID from message));
ROWID, guid, style, state, account_id, properties, chat_identifier, service_name, room_name, account_login, is_archived, last_addressed_handle, display_name, group_id, is_filtered, successful_query, engram_id, server_change_token, ck_sync_state, original_group_id, last_read_message_timestamp, cloudkit_record_id, last_addressed_sim_id, is_blackholed, syndication_date, syndication_type, is_recovered 
INSERT OR IGNORE INTO message SELECT %@ from source.message WHERE ROWID IN (SELECT MAX(m.ROWID) FROM source.message m, chat c, source.chat_message_join cm WHERE m.ROWID=cm.message_id AND c.ROWID=cm.chat_id AND m.group_action_type IN (1,3) GROUP BY c.ROWID);
INSERT INTO chat_message_join SELECT * from source.chat_message_join WHERE message_id IN (SELECT ROWID from message);
INSERT INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from source.chat_handle_join where chat_id IN (select ROWID from chat));
INSERT INTO chat_handle_join SELECT * from source.chat_handle_join WHERE chat_id IN (SELECT ROWID from chat);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT handle_id from message);
INSERT OR IGNORE INTO handle SELECT * from source.handle WHERE ROWID IN (SELECT other_handle from message);
INSERT INTO attachment SELECT %@ from source.attachment WHERE ROWID IN (SELECT attachment_id from source.message_attachment_join where message_id IN (select ROWID from message));
ROWID, guid, created_date, start_date, filename, uti, mime_type, transfer_state, is_outgoing, user_info, transfer_name, total_bytes, is_sticker, sticker_user_info, attribution_info, hide_attachment, ck_sync_state, ck_server_change_token_blob, ck_record_id, original_guid, is_commsafety_sensitive 
UPDATE attachment SET transfer_state = 0; 
INSERT INTO message_attachment_join SELECT * from source.message_attachment_join WHERE attachment_id IN (SELECT ROWID from attachment);
Trimming database at: '%@'...
ATTACH '%@' AS source;
__kIMDSMSFailedToSendNotification
__kIMDSMSMarkAsReadCompletedNotification
**************************************************************************
****** Database access off the database thread, please file a radar ******
com.apple.runtime-issues
IN (
? ) 
Aggregate
Submitting persistence event: %@
IMDSavedDeviceStateDidUpgradeKey
IMDSavedDeviceStateDidRestoreFromBackupKey
IMDSavedDeviceStateDidMigrateFromDifferentDeviceKey
IMDSavedDeviceStateDidRestoreFromCloudBackupKey
IMDSavedDeviceStateDidMigrateKey
IMDSavedDeviceStateBuildVersionKey
IMDSavedDeviceStateIsMigratingKey
IMDSavedDeviceStateDateKey
IMDSavedDeviceState
_IMDPersistenceClientQueue
IMDCNPersonAliasResolver: Error! being called in a process that is not in IMDPersistenceAgent!
CNContactStore
IMDCNPersonAliasResolver: Passed in nil email _fetchCNContactForEmail
IMDCNPersonAliasResolver: Could not get predicate for alias %@
IMDCNPersonAliasResolver: Requesting a CNContact from Contact Store for Alias %@ and Predicate %@
IMDCNPersonAliasResolver: Error getting contact from Contact Store for alias %@ error %@
IMDCNPersonAliasResolver: No contact for alias %@
IMDCNPersonAliasResolver: CNContact Identifier %@ for alias %@
IMDCNPersonAliasResolver: Passed in empty set of aliases
IMDCNPersonAliasResolver: Dispatching a contacts batch query for %lu aliases
batchFetchForAliases
IMDCNPersonAliasResolver: Contacts batch fetch from Contact Store completed. Took %f seconds
IMDCNPersonAliasResolver: No results obtained from the Contacts batch Fetchrequest. Error: %@
IMDCNPersonAliasResolver: Contacts batch fetch from Contact Store FAILED with an exception %@.
_fetchAliasToCNIDMapForAliases
IMDCNPersonAliasResolver: _fetchAliasToCNIDMapForAliases returning aliasIDMap
IMDCNPersonAliasResolver: Generating aliasToIDMap completed. Took %f seconds
IMDCNPersonAliasResolver: Updating aliasToCNIDMap using Contact Change History events
IMDCNPersonAliasResolver: Could not fetch Change History from CNContactStore error:%@
IMDCNPersonAliasResolver: Skipping Contact change history events after the Drop Everything Event
IMDCNPersonAliasResolver: Refetching CNID for ALL Aliases.
IMDCNPersonAliasResolver: _updateAliasToCNIDMap returning aliasIDMap
CNContactEmailAddressesKey
CNContactPhoneNumbersKey
CNContactInstantMessageAddressesKey
CNContact
CNContactFormatter
CNContactFetchRequest
CNChangeHistoryFetchRequest
CNFavorites
/Library/Caches/com.apple.xbs/Sources/MessagesCore_Sim/IMCore/IMDPersistence/IMDCNPersonAliasResolver.m
void _IMDContactsApiInit(void)
_IMDContactsApiInit
kIMContactsContactEmailAddressesKey
kIMContactsContactPhoneNumbersKey
kIMContactsContactInstantMessageAddressesKey
Action: Save
Query: Is Full
Query: Schema Version
Query: Schema
Action: Create Attachment
Query: Attachment Record ID for GUID
Query: Copy Attachment for GUID
Action: Delete Attachment
Action: Deleting Attachments older than a certain number of days
Query: Copy recent attachment filenames
Query: Delete attachment previews older than recent
Query: Copy media attachment filenames for Chat Identifiers
Query: Copy purged attachments for chat identifiers
Query: Copy purged attachments count for chat identifiers
Query: Copy sticker attachment filename and user info
Query: Does attachment with GUID exist
Query: Does sticker path have attachments
Action: Update Attachment
Action: Get contacts record id for aliases
Action: Get contacts record id and history token for aliases
Action: Async Get contacts record id and history token for aliases
Action: Create Handle
Action: Update Handle
Query: Copy Handle
Action: Unassociate Message from Attachment
Action: Associate Message from Attachment
Query: Copy Messages Between row IDs
Query: Copy Messages for GUIDs
Query: Copy Messages for associated GUID
Query: Copy Message for RowID
Query: Copy Last Received Message
Query: Copy a Limited Number of Last Received Messages
Query: Get Most Recent Message Date
Query: Copy Messages for RowIDs
Query: Copy new messages using rowIDs
Query: Copy Message for GUID
Query: Copy Last Message for Chat RowID
Query: Copy Last Read Message for Chat Identifier
Action: Delete Messages for GUIDs
Action: Delete Messages older than a certain number of days
Query: Copy Messages with Roomname
Query: Copy Messages with Chat Identifiers
Query: Copy a Limited Number of Messages Before and or After GUID with Chat Identifiers
Query: Copy Sorted Messages For Chat GUID Filter Using Predicate With Limit
Query: Copy Messages for GUID with Option to Exclude Recoverable Messages
Query: Copy Frequent Replies for Chat Identifiers
Query: Copy GUIDs for Messages with Chat Identifiers
Query: Copy message date and last addressed handle from chat with chat identfiers and last addressed handles
Query: Copy message date and last addressed labelID from chat with chat identfiers and last addressed labelIDs
Query: Update chat last addressed simID and handle for chats with the old last addressed simID
Action: Delete Messages with GUIDs on ChatIdentifiers
Query: Copy Messages with Handle on Service
Query: Copy Message Matching Body on Chat Identifiers
Query: Copy Message Matching Body with Handle
Query: Copy Messages with Handle and ReplaceID
Query: Copy undelivered 1-1 Messages
Query: Copy Expiring or Expired Messages
Query: Copy Unsent Unfailed Messages
Query: Copy Message Action Items for Original Message GUID
Query: Unread Message Count
Query: Unread Message Count for Chat GUID
Query: Unread Message Count for Row ID
Query: All Unread Messages from All Chats
Query: Last Failed Message ID
Query: Last Synced Message row ID
Query: Last Failed Message Date
Query: Message Row ID for GUID
Query: Max CMJ Message ID
Query: Messages Sequence Number
Action: Mark message as deduplicated
Action: Mark failed all unsent messages
Action: Delete Orphaned Messages
Query: Copy and mark as read matching chat guids prior to guid
Query: Copy all guids for unplayed messages for a chat guid
Query: Copy Unread Incoming Messages for chat
Query: Copy newest Unread Incoming Messages after Row ID
Query: Copy newest Failed Outgoing Messages after date
Query: Copy messages with Data Detected Results after Row ID
Query: Copy most recent usage of address
Action: Create Message
Query: Copy Chats from Message
Query: Find Chat from Message GUID
Query: Copy Attachments from Message
Action: Set Handle on Message
Query: Copy Handle from Message
Query: Copy Other Handle from Message
Action: Update Message
Action: Insert Message Processing Task
Query: Select Message Processing Task with Limit
Action: Update Message Processing Task
Action: Delete all Complete Message Processing Task
Action: Create Chat
Query: Copy Handles from Chat
Query: Copy Messages from Chat with limit
Action: Set Chat is Archived
Action: Set Chat is Blackholed
Action: Set Chat is Recovered
Action: Add Handle to Chat
Action: Remove Handle from Chat
Action: Update Chat
Query: Copy all chats
Query: Copy all named chats
Query: Copy all active chats
Query: Copy all active chats progressively
Query: Copy recent chats
Action: Add message with GUID to Spotlight
Action: Add messages with GUIDs to Spotlight
Action: Add chat with GUID to Spotlight
Action: Delete chat with GUID from Spotlight
Query: Reindex the given messages
Query: Copy Chat for GUID
Query: Copy Chat for Message ID
Query: Copy Chats with Handle
Query: Copy Chats with Handles, Display Name, Group ID and Style
Query: Copy Chats with Handle Subset, Service and Style
Query: Copy Chats Filtered Using Predicate
Query: Copy Sorted Chats Filtered Using Predicate With Limit
Query: Copy Chats Sorted By Last Message Date And Filtered Using Predicate With Limit
Query: Copy Chats with Identifier
Query: Copy Chats with Identifier On Service
Query: Copy Chats with Pinning Identifier
Query: Copy Chats with Roomname
Query: Copy Chats with Group ID
Query: Copy Newest chat for Group ID
Action: Delete Chat for GUID
Action: Associate Message with Chat
Action: Disassociate Message from Chat
Action: Copy Chat guids with unplayed audio messages
Action: Set Chat isFiltered
Action: Delete Empty Chats
Action: Repair Duplicate Chats
Action: Anonymize Database
Action: Split DB by days
Action: Split DB by recent message count
Action: Copy array of associated message items from sender
Action: Mark attachment with Spotlight attributes
Action: Downgrade database
Query: Estimate space taken by attachments older than days
Query: Find largest conversations
Query: Find largest attachments
Query: Find all unread chats and count of unread messages in each
Query: Purge attachments in chat
Action: Move messages for given message guids to recoverable message table
Action: Move messages for given chat guids to recoverable message table
Action: Recover messages for given chat guids
Query: Load recoverable messages metadata: recoverable message count and earliest delete date of all messages for chat ID
Action: Delete messages with a delete date older than the given days
Action: Permanently delete recoverable messages in chats for the given guids
Query: Load recoverable messages metadata pending cloud kit update
Action: update ck_sync_state for given recoverable messages ROWIDs
Action: Store message part body for future recovery in recently deleted
Query: Load recoverable messages metadata pending cloud kit delete
Action: Clear unsynced removed recoverable messages table
Query: Post notification for started SharePlay from Messages
Action: Delete junk messages with a delete date older than the given days
Unknown
v8@?0
Deferring reindexing for %ld seconds.
No handles to update Core Spotlight indexes for
Queuing up first chat reindex: %s
No chats to reindex recent messages
Scheduling fetching the next batch of messages for re-indexing in chat with GUID %s after %s seconds
Kicking off indexing of %ld searchable items for chat with GUID %s
Incrementing chat to reindex to %s
No more messages to reindex for %s
No more chats to reindex, stopping
Fetching batch of messages to reindex for %s
IMDPersistence.SpotlightReindexer
init()
IMDCoreSpotlightReindexer
@48@0:8@16q24d32@40
v16@0:8
@16@0:8
index
deferralTime
handles
messageAge
Fatal error
Down-casted Array element failed to match the target type
Expected 
NSArray element failed to match the Swift Array Element type
Expected 
Found %ld messages to reindex
Handle (%s) or service (%s) is empty
v16@?0@"NSArray"8
Computed %ld chats to update CoreSpotlight indexes for.
Finding chats to re-index with CoreSpotlight for handles: %s
IMDCoreSpotlightReindexingQueue
IMDPersistenceHelloWorldClass_Impl
inner
IMDCoreSpotlight
Nil or empty path parameter
Failed to get file size for item at path: %@, with error: %@
Writing incorrect size for attachment at path: %@. Incorrect size %lld, correct size: %lld (allocation size on disk: %lld)
Writing correct size for attachment at path: %@. Size: %lld (allocation size on disk: %lld)
Skipping commit of a non-existent transaction in Downgraded database
Skipping revert of a non-existant transaction in Downgraded database.
Cloning and downgrading table '%@' into Downgraded Database
Downgrade: turning off foreign keys
Downgrade: attaching new (empty so far) downgraded database to the real database
Downgrade: Beginning transaction
Downgrade: Copying table: %@
Downgrade: Detaching database
Downgraded database SQL query '%@' got error: '%@'
Downgraded database SQL query ran ok: '%@'
Opening Downgraded database at: '%@'...
Closed Downgraded database at: '%@'...
IMDContactCache: Error! being called in a process that is not in IMDPersistenceAgent!
Unable to insert row (guid:%@ taskFlag:%ld) into Message PTask Table: %@
Unable to select rows from Message PTask Table: %@
Unable to update row (guid:%@ taskFlag:%ld) for Message PTask Table: %@
Unable to delete completed task from Message PTask Table: %@
ASSERTION FAILED: Condition is unexpectedly true: %s in "%s" at line %d [%@]
ASSERTION FAILED: %s is unexpectedly nil in "%s" at line %d [%@]
Error posting notification request %@. Error: %@
Error updating edited message content for notification request %@. Error: %@
We don't have a chat identifier to set as the thread identifier for chat dictionary %@
We don't have a message guid for message dictionary %@
Not synthesizing notification content from intent, contentByUpdatingWithProvider returned error %@
Caught exception generating notification %@
SQL ERROR: %@
No handles or services specified. Or handleCount != serviceCount. No rows will be returned.
Database version is newer, but internal build allows this state (dbver %d, expected %d)
Unable to perform database migration to %d - NO MIGRATOR FOUND
Migration from %d to %d failed with error: %@
Migrated from %d to %d ok in %f seconds
Unable to perform database migration from %d to %d
IMDSMSRecordStoreCopyAllChats
IMDSMSRecordStoreCopyAllNamedChats
IMDSMSRecordStoreCopyAllActiveChats
No chatIdentifiers or lastAddressedLabelIDsCount provided. No rows will be returned.
Unable to find last addressed lablID & date from chat identifiers: %@
No chatIdentifiers or lastAddressedHandles provided. No rows will be returned.
Unable to find last addressed handles & date from chat identifiers: %@
IMDChatRecordAssociateMessageWithGUIDToChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
IMDChatRecordDisassociateMessageWithGUIDFromChatWithGUIDIfNeeded [ChatGUID: %@] [MessageGUID: %@]
Unable to insert row (guid:%@ recordID: %@ timeStamp:%ld, error %@) into sync_deleted_chats Table
Unable to select rows from Message Deleted Messages Table: %@
Unable to update messages to new error (%@)
IMDChatRecordCopyChatGUIDsWithUnplayedAudioMessages
ASSERTION FAILED: Conditions are unexpectedly equal: %s == %s in "%s" at line %d [%@]
Failed to create table %@ with error %@
Created table (if needed) ok: %@
Failed to drop table %@ with error %@
Dropped table (if needed) ok: %@
message table 'values' array size (%lld) and properties array size (%lld) and recordPropertiesSize (%lld) aren't the same size. The size and indexes MUST be the same. Prepare for lots of debugging pain. 
Setting IMDMessageRecord property %d of %lld
New message record [%@] has ID [%lld]  [%@].
Attempted to get record identifier for NULL message record: %@
Attempted to get record identifier for NULL record: %@
NULL message passed to %s
NULL message passed when trying to get property: %ld
NULL message passed when trying to set property: %ld  (value:%d)
Remote set other handle not implemented
Trying to associate attachment [%lld] with message [%lld]
Error adding attachment join: %d (%s)
NULL dictionary passed to %s
NULL record passed to %s
_IMDMessageRecordCreate()
new IMDHandleRecordRef [%@] has id [%lld].
Attempted to get record identifier for NULL handle record: %@
NULL handle passed to %s
_IMDHandleRecordCreate()
originalMessageItem was nil when attempting to update a message
newMessageItem was nil when attempting to update a message
newSyndicationRange was nil when attempting to update a message
%s Tried to remove nil attachment GUID from syndication
%s Could not derive message GUID from attachment GUID %@
%s Could not derive attachment index from attachment GUID %@
%s IMItem was not an IMMessageItem for attachment GUID %@, messageGUID %@
%s Message record was nil for attachment GUID %@, messageGUID %@
%s Could not derive message item from attachment GUID %@
%s Could not derive actual attachment GUID from given attachment GUID %@. attachmentIndex: %lu, messageItem.fileTransferGUIDs.count: %lu
%s messageItem.fileTransferGUIDs for failing messageItem: %@
%s Tried to update syndicationRanges on nil messageItem
%s Tried to update syndicationRanges on nil messagePart
%s Tried to update syndication range for message GUID %@ with zeroed message range
%s Tried to update CMM syndicationRanges on nil messageItem
%s No file transfer guids when updating CMM syndicationRanges on message %@
%s No valid CMM assets present for message %@
%s No file transfer guids present for message %@
%s Did not find a valid range for attachment GUID %@ and message %@
%s Tried to syndication ranges for nil message GUID
%s Message record was nil for messageGUID %@
%s IMItem was not an IMMessageItem for messageGUID %@
%s Could not load message item for message GUID %@
%s Could not load message part %ld for message GUID %@
Recently Deleted | Insert to recoverable message table failed for message guid %@: %@
Recently Deleted | Failed to remove entries from chat_message_join: %@
Recently Deleted | Query returned an error: %@
Recently Deleted | Failed to add chat entry to unsynced_removed_recoverable_messages: %@
Recently Deleted | Permanent recoverable message deletion failed for chat guid %@: %@
Recently Deleted | Parts: Permanent recoverable message part deletion failed for chat guid %@: %@
Junk Messages | Permanent junk message deletion failed for chat guid %@: %@
Recently Deleted | retrieving recoverable messages pending cloudkit update with resultLimit: %@
Recently Deleted | Finished fetching messages metadata pending update
Recently Deleted | retrieving recoverable messages pending cloudkit delete with resultLimit: %@
Recently Deleted | Finished fetching messages metadata pending delete
Recently Deleted | setting recoverable sync state: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Failed setting recoverable sync state: %@ with op finish error: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Successfully set recoverable sync state: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Failed setting recoverable sync state: %@ with op release error: %@ for message rowID: %@ partIndex: %@
Recently Deleted | Will begin storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody could not find part attribute name
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody Failed to encode message part body with exception: %@
Recently Deleted | Bailing:storeRecoverableMessagePartWithBody message part body data is nil.
Recently Deleted | Failed with error: %@ storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Finished storing message part body for message with GUID: %@ at deleteDate: %@
Recently Deleted | Will begin clearing recoverable message tombstones
Recently Deleted | Failed with error: %@ clearing out message tombstones
Recently Deleted | Finished clearing recoverable message tombstones
Loaded %ld IMDAttachment info objects from database
Dropped trigger failed: %@: %@
Dropped trigger: %@
Create trigger failed: %@: %@
Created trigger ok: %@, trigger: %@
dropping trigger failed: %@: %@
dropped trigger ok: %@
Created trigger ok: %@ trigger %@
Error donating intent interaction = %@
Not donating INInteraction, interaction generated is nil
QuickSwitch about to downgrade database at path %@ to %@
Quickswitch Downgrade Sending XPC now...
Error fetching suggested name for handle "%@" Error: %@
No cached business name, using placeholder business name, will call interaction update handler if business name fetch completes
Starting migration from V21 to V22.
Failed to delete trigger delete_attachment_files [SQLite result %d reason %s]
Failed to delete trigger delete_attachment_files [SQLite result %d]
Whoa, pardner, where is the V21_MIGRATION_GROUP_CHAT_MAP ?!
Whoa, pardner, where is the V21_MIGRATION_NONCANONICAL_GROUP_HANDLE_MAP ?!
[Database] ERROR: **** Failed ingesting legacy message with row ID: %d
Successful migration for legacy message [%d]
No message rows available to migrate, great success!!
Whoa pardner, we didn't drop the group to chat map table. C'est la vie.
Whoa pardner, we didn't drop the non-canonical group to handle map table. C'est la vie.
Asking DB to analyze.
Migration ended with result %d
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
ORPHAN: Unable to find/create a chat for handle[%@] and roomname[%@] for legacy messageID[%d]. Skipping this message.
[Database] ERROR: Unable to migrate message row %d with error: %d
Unable to update flags row %d with error: %d
[DATABASE] There don't appear to be any participants in this chat, so it will NOT be migrated. RowID: %lld Handle %@ Roomname %@
Unable to migrate chat row %lld with error: %d
Unable to update chatID[%lld]'s room_name.
Unable to update chatID[%lld] with guid[%@]
[Database] ERROR: Could not create chat from handle[%@] and roomname[%@].
ORPHAN: Unable to find a legacy madrid chat record for handle[%@] and roomname[%@] with sqlite status (%d). This usually means that a chat was deleted but the messages it contained weren't. Failing chat creation.
** You attempted to bind HandleID [%lld] to ChatID [%lld]. One of these values is bogus.
[Database] ERROR: Failed to join Handle [%lld] to Chat [%lld]. SQLite error: %d
[Database] ERROR: Unable to bind chat id[%lld] to message id[%lld]: %d
AWOL handle for uncanonicalizedID [%@]  canonicalizedID [%@] Service [%@] Country [%@]
Got an invalid IDs uncanon: (%@) canon: (%@) in %s.
Got an invalid service (%@) in %s.
Got an invalid identifier (%@) (%@) in %s.
[Database] ERROR: Unable to create handle row with uncanonid[%@] canonid[%@] service[%@] country[%@]
Invalid handleID[%lld] or messageID[%lld] passed for binding
Unable to update handle id on message row %lld with error: %d
Invalid legacy guid provided in %s - this is bad but non-fatal.
Unable to find legacy attachment for guid[%@]. Not fatal, but bailing.
Fatal error binding attachmentID[%lld - %@] to messageID[%lld]
Unable to migrate attachment row %lld with error: %d
Unable to bind attachmentID[%lld] to messageID[%lld]: %d
ORPHAN: Could not find an appropriate chat to use for messageID[%d]. Skipping this message.
[Database] ERROR: Failed to create new message row. SQLite error: %d
This message is empty, and we should NOT keep it.
This message lacks a handle, and we should NOT keep it.
Message [%lld] Legacy [%d] was problematic, thus we skip it.
Problems deleting message [%lld], SQLite error: %d
Unable to delete message.
[Database] Bailing early on a problematic message.
[Database] ORPHAN: Failed to update message. SQLite error: %d
[Database] ORPHAN: Failed to insert message. SQLite error was: %d
[Database] ****** Result from select query: %d
[Database] ERROR: * * * * * Holy Smokes, the group row id is bogus! * * * * * *
ORPHAN: Unable to find handles for groupID[%d]. This means we have message rows without a matching group. Failing the chat lookup.
[Database] ERROR: Got a NULL identifier for handleID[%lld]. Something is seriously wrong.
[Database] ERROR: Was slinging around an invalid handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Got a NULL handleID for messageID[%d] to create chat. Something is wrong.
[Database] ERROR: Failed to create chat record. SQLite error: %d
Ugh, the address '%@' wouldn't canonicalize.
MsgAddress '%@' was null, we won't even try to canonicalize it.
Got an invalid rowid looking for a handle mapped to group id: %lld
[Database] ERROR: You tried to join handle [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to asscociate handle [%lld] to group [%lld] with sqlite result: %d.
Got an invalid rowid looking for a chat mapped to group id: %lld
[Database] ERROR: You tried to join chat [%lld] to group [%lld] with an invalid row id.
[Database] ERROR: Failed to Asscociated chat [%lld] for group [%lld] (isBroadcast[%d]) with Sqlite result: %d.
[Database] ERROR: Unable to set properties for chat[%lld]: %d
[Database] ORPHAN: Failed to create new attachment record. SQLite error: %d.
[Database] ERROR: Failed joining new attachment to message with SQLite result: %d
[Database] ERROR: Failed to create directory [%@]: %@
[Database] ERROR: Failed to write piece data to FS.
[Database] ERROR: Failed updating the filename on the new attachment record with SQLite result: %d
Starting new query with pending error: : %@
reverting uncommitted transation with error: %@
committing uncommitted transation
ASSERTION FAILED: %s is unexpectedly NOT nil in "%s" at line %d [%@]
_IMDChatRecordSetProperty [%d of %d]
Attempted to get identifier for NULL chat record: %@
NULL chat passed to %s
Trying to associate message [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddMessageIfNeeded
Finished remove message [%@] from chat [%@], updating the spotlight index for this chat.
Trying to associate handle [%lld] with chat [%lld]
SQLite returned %d from IMDChatRecordAddHandle
SQLite returned %d from IMDChatRecordRemoveHandle
IMDChatRecordBulkUpdateChat %@
_IMDChatRecordCreate()
Got record in _IMDChatRecordCreateFromRecordIDWithLock (%lld) : %@
Sqlite3 Error: %@
Can't start main timer, we're already profiling
Starting profiling -- we have %ld seconds to finish
Unexpected nil key
Main timer not started, can't start timing: %@
Trying to start a timing key that is already running: %@
Main timer not started, can't stop timing: %@
Spotlight Indexer trying to stop an unknown timing key: %@
Timing '%@' was ABORTED after %fs
Timing '%@' was never run
Timing '%@' ran ok in %fs
ABORTED -- %ld timings ran in %fs (%fs remaining before timeout).
Finished %ld timings in %fs (%fs remaining before timeout). Slowest timing: %@ at %fs
Bailing on profiling but we never started timing
Bailed on profiling (not an error)
Aleady stopped profiling
ABORTED profiling after error
Timing '%@' was is still running after profiler was stopped
Error! being called in a process that is not in IMDPersistenceAgent!
Invalid guid passed in. Skipping %s
Timed out indexing %@, likely have a hung thread, exiting!
Not setting syndication identifier because attachment index was not found in attributed body. attachmentGUID: %@
%s Could not derive message part range from attachment GUID %@ (syndicationIdentifier %@)
%s no ranges deserialized from encodedSyndicationRanges %@ for attachmentGUID %@, syndicationIdentifier %@
%s no asset syndications from range %@ for attachmentGUID %@, syndicationIdentifier %@
%s no asset info from CMM asset info %@ for attachmentGUID %@, syndicationIdentifier %@
%s no syndication found for attachment part %li from CMM asset info %@ for attachmentGUID %@, syndicationIdentifier %@
Unable to create record for attachment.
NULL attachment passed to %s
_IMDAttachmentRecordCreate()
Downgrade: Opening new coral database
Downgrade: Creating Tables
Downgrade: Creating Indexes
Downgrade: Committing phase 1
Downgrade: Beginning to copy tables
Downgrade: Creating triggers
Downgrade: Updating Version
Downgrade: Committing phase 2
Downgrade completed ok! :-D
Unable to perform query %@. Error %d
Couldn't update %lld with order date %lld
MessageImport failed in ImportBegin
%s called, but not during import, ignoring
%s called for chat: %@, but not during import, ignoring
Failed to create new chat for guid: %@
Failed to add handle: %lld to chat: %lld
Failed to create message for guid: %@
No chat found for guid: %@   failing message import for GUID: %@
MessageImport - IMDImportAttachmentWithPath - empty guid
Unable to create directories for %@ when saving attachment %@
MessageImport - couldn't link/copy attachment from %@ to %@ - %@
Could not write attachmentData to path %@
Saving database.
Destroying database.
Closed database.
Create tables...
Setting page size.
Enabling WAL journal mode.
Enabling Foreign Key support.
Registering external functions.
Performing a pre-checkpoint vacuum.
Performing Analyze to optimize the database
Performing a WAL checkpoint.
Database Clean up took: %f seconds
No valid database handle, cannot perform a clean
Creating triggers for %p after db init failed: %@
The current SMS database is v%d.  The current schema version is v%d. Can be migrated: %@
The current SMS database has a NEWER version (%d) than expected (%d), internal build allows newer DB? %@
Beginning migration.  The SMS db is currently at v%d, upgrading to v%d.
Initial Integrity checked success
Message database migration passed post migrate integrity check
Message database migration failed post migrate integrity check
Migration failed, made it to version: %d: error: %@
Message database migration failed - Database integrity check failed
Message's DB migration took %f seconds.
Reindexing the DB worked.
Database Reindexing the DB failed with SQLite result: %d
Vacuuming DB success
Database Vacuuming failed with SQLite result: %d
Post Vacuuming integrity check success
Database Post Vacuuming integrity checked failed failed
Integrity checked success
Found column %@ on %@, no need to add it
Adding column %@ to %@ succeeded: %@
Create index failed: %@: %@
Created index ok: %@
Dropped index failed: %@: %@
Dropped index: %@
Dropping unknown index failed: %@: %@
Dropped unknown index: %@
__syncXPCIMDMessageStoreSendXPCMessage got a bogus message to send...bailing!
__syncXPCIMDMessageStoreSendXPCMessage: You should not be hitting the database in a unit test. Please check your dependencies
__syncXPCIMDMessageStoreSendXPCMessage has failed %lu time(s)!
__syncXPCIMDMessageStoreSendXPCMessage failed to copy the xpc_connection_t!
__syncXPCIMDMessageStoreSendXPCMessage failed several consecutive times - sleeping for 1+ the launchd throttle time.
__syncXPCIMDMessageStoreSendXPCMessage failed too many times...bailing!
FAFetchFamilyCircleRequest failed %@
Recently Deleted | Insert to recoverable message table failed for chat guid %@: %@
Recently Deleted: message GUID in recovery for chat %@, iterating
Recently Deleted | Failed to finish query for messages to be restored in chat %@: %@
Recently Deleted | Insert to chat message table failed for chat guid %@: %@
Recently Deleted | Failed to remove entries from chat_recoverable_message_join: %@
Recently Deleted | Parts: Will begin recovering message parts for %lu unique chatGUIDs
Recently Deleted | Parts: No parts metadata found for chatGUID: %@. This state is valid if there are no message part deletions.
Recently Deleted | Cannot recover: Could not find attributed body for messageGUID: %@
Recently Deleted | Cannot recover: message part number already exists. Not inserting into main message body for messageGUID: %@
Recently Deleted | Parts: Writing restored part to message GUID: %@
Recently Deleted | updated attributedbody for messageGUID: %@
Recently Deleted | Failed to update attributedbody for messageGUID: %@ with error: %@
Recently Deleted | Parts: Finished writing restored part to message GUID: %@
Recently Deleted | Parts: Removing recoverable message parts for message GUID: %@
Recently Deleted | Failed to add entries into unsynced_removed_recoverable_messages: %@
Recently Deleted | Failed to remove entries from recoverable message part: %@
Recently Deleted | Parts: Finished removing recoverable message parts for message GUID: %@
Recently Deleted | Parts: Loading attributed message body for message GUID: %@
Recently Deleted: body will iterate
Recently Deleted: body iterating
Recently Deleted:Parts: Success in column values returned: %@
Recently Deleted:Parts: Error in column values returned: %@
Recently Deleted | Parts: Finished loading attributed message body for message GUID: %@
Recently Deleted | Parts: Loading message parts metadata for chat GUID: %@
Recently Deleted | Parts: Finished loading message parts metadata for chat GUID: %@
Recently Deleted | Will begin counting recoverable messages per chat
Recently Deleted | Finished counting recoverable messages per chat
Updating madrid indices.
Nuking bogus madrid message indices.
%@ SQLiteResult: %d SQLite Message: %s
No migration block to execute!
Table for handle was created successfully.
Failed to create table for handle. SQLiteError: %d
Migration unsupported.  The SMS db is currently at v%d, cannot upgrade to v%d.
Updating DB to sort by ROWID instead of date.
Updating DB to support madrid.
Updating DB from version 12 to current.
Updating DB from version 13 to current.
Updating DB from version 14 to current.
Adding index for group_id on group_member
Adding support for Chats and Participants.
Ensuring sanity of is_madrid column.
Cleaning message indices for iMessage.
Adding column for iMessage Account GUID
Moving old tables to *_legacy and adding tables for the new schema.
The is_archived column already exists on chat, skipping this step.
Fixing missing text in group field
The was_data_detected column already exists on message, skipping this step.
SQLite result was %d
The last_addressed_handle column already exists on chat, skipping this step.
The was_deduplicated column already exists on message, skipping this step.
Fixing busted chat identifiers for group chats
Adding attachment is_outgoing column
The is_outgoing column already exists on attachment, skipping this step.
Fixing up uncanonicalized identifiers that had previously been incorrectly treated as canonicalized.
Fixing up uncanonicalized handle identifiers that failed to migrate due to conflicts.
Adding attachment user_info column
The user_info column already exists on attachment, skipping this step.
Adding attachment transfer_name column
Adding chat display_name column
The display_name column already exists on chat, skipping this step.
Adding attachment total_bytes column
The transfer_name column already exists on attachment, skipping this step.
Purging orphaned messages
Adding message is_audio_message, is_played, and date_played column
The is_audio_message, is_played, and date_played columns already exist on message, skipping this step.
Purging orphaned messages - again
Adding message item_type, other_handle, group_title, group_action_type, share_status, share_direction
The item_type, other_handle, group_title, group_action_type, share_status, share_direction columns already exist on message, skipping this step.
The group_id columns already exist on chat, skipping this step.
Adding message is_expirable, expire_state, and message_action_type column
The is_expirable, expire_state, and message_action_type columns already exist on message, skipping this step.
Adding message message_source column
The message_source column already exists on message, skipping this step.
Migration failed, made it to version: %d
Join table for Chat <--> Message was created successfully.
Failed to create join table for Chat <--> Message. SQLiteError: %d
Join table for Chat <--> Handle was created successfully.
Failed to create join table for Chat <--> Handle. SQLiteError: %d
Join table for Message <--> Attachment was created successfully.
Failed to create join table for Message <--> Attachment. SQLiteError: %d
Failed to assign lastFailedMessageDate with query, attempting to set to zero instead
Found an index referencing *_legacy!
Did not find index referencing *_legacy!
Attempting to re-add iOS 6, 7 and 8 column additions
Finished re-adding iOS 6, 7 and 8 column additions
Found table referencing *_legacy!
Did not find any table referencing *_legacy!
IMDMigrateTo16200 canonicalize handles with query: %@
IMDMessageRecordUnassociateMessageWithGUIDFromAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
Orphaned messages cleanup complete
IMDMessageRecordAssociateMessageWithGUIDToAttachmentWithGUID [MessageGUID: %@] [AttachmentGUID: %@
IMDMessageRecordCopyMessagesForAssociatedGUID [%@]
IMDMessageRecordCopyMessagesForGUIDs [%@]
IMDMessageRecordCopyGUID [%@]
IMDMessageRecordCopyLastReadMessageForChatGUID [%@]
results from last received: %@
IMDMessageRecordCopyLastReceivedMessageLimit with limit %lld
IMDMessageRecordCopyLastReceivedMessageLimit syncXPC
IMDMessageRecordCopyMessageForRowID [%lld]
IMDMessageRecordCopyMessageForGUID [%@]
IMDMessageRecordDeleteMessagesForGUIDs %@
IMDSelectMessagesForDeletionAfterDaysWithQuery %lld
IMDMessageRecordDeleteMessagesOlderThanDays %lld
IMDMessageRecordDeleteMessagesOlderThanDays interval is %f
No roomname or service specified. No rows will be returned.
history query got %lu rows
sqlite query timing: %@
history query: IMDP client got at least one message: %@
IMDP client got null array_result back: %@
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID No handles or services specified for loading a limited number of messages up to guid. No rows will be returned
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID We have a NULL messageGUID, early returning ****--We should have not gotten to this point if we had a null messageGUID, please file a radar--****
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID with ids: %@ services: %@ messageGUID: %@ numberOfMessagesBefore: %lld numberOfMessagesAfter: %lld threadIdentifier: %@
Paged history query got %lu rows
Paged history query got %lu rows for second load
IMDMessageRecordCopyMessagesWithChatIdentifiersOnServicesBeforeAndAfterGUID IMDP client got null array_result back: %@
No handles or services specified. Or handleCount != serviceCount. Or guidCount == 0. No rows will be returned.
Deleted %ld messages in %f seconds on %ld chats and %ld services
No handle or service specified. No rows will be returned.
IMDMessageRecordCopyUndeliveredOneToOneMadridMessages
IMDMessageRecordCopyExpiredOrExpiringiMessages
IMDMessageRecordCopyUnsentUnfailedMessages
IMDMessageRecordCopyMessageActionItemsForOriginalMessageGUID [%@]
Can't determine unread count when GUID is NULL or empty.
IMDMessageRecordCopyAllUnreadMessages
Can't determine unplayed audio messages GUID is NULL or empty.
Marking all unsent and failed messages as sent.
Row ID is %lld for message with guid [%@]
 enableTelemetry=YES 
MarkAsRead-Database
MarkAsRead-XPC+Database
IMDMessageRecordCopyMessagesBetweenRowIDs [%lld:%lld]
The RowID is out of bounds.  We were asked for rows after [%lld] which exceeds the current sequence number [%lld]
Final adjusted row ID: %lld
The date is out of bounds.  We were asked for rows after date: [%lld] which exceeds the most recent message [%lld]
IMDMessageRecordCopyMessagesDataDetectionResults limit: %lld  rowID: %lld
No addresses provided to IMDMessageRecordCopyMostRecentUseageOfAddresses().
No addresses to lookup, no results for you.
Matching addresses (in order) are %@
Found %ld associated messages for messageGUID: %@, forSender: %@
IMDMessageRecordCalculateLocalCloudKitStatistics failed with error: %@
Calculated sync stats in %f seconds. All Records: %lld of %lld, %lld remaining. Messages : %lld of %lld, %lld remaining. Chats : %lld of %lld, %lld remaining. Attachments : %lld of %lld, %lld remaining.
Expected dictionary of cloudkit stats is nil 2
IMDMessageRecordCalculateLocalCloudKitStatistics loaded stats: %@
_IMDMessageRecordSetSyncCountOnTable got error: %@
Write cloudkit sync counts: %@
setting new stats: messageSyncCount: %lld, chatSyncCount: %lld, attachmentCount: %lld
new stats: %@
We don't have a guid to find messages with this reply to guid
IMDMessageRecordCopyAllUnplayedMessageGUIDsForChatGUID
Unexpected nil attribute set
Highlight Server Date is nil!
There appears to be more than one attachment with GUID [%@]
Could not initialize query.
Skipping an attachment because of incomplete data filename %@ guid %@ isSticker %@ createdDate %@ transferState %@
Not removing attachments, we got a NULL or 0 length GUID [%@]
Unable to select rows from Attachment table: %@
Unable to select rows from Attachment Deleted Table: %@
TRIGGER: custom function is already executing -- this is not reentrant!
TRIGGER: Before deleting attachment, finding messageRowID for attachment rowID %d
TRIGGER: Before deleting attachment, message row id: %lli
TRIGGER: Before deleting attachment, messageRecord: %@
TRIGGER: Before deleting attachment, we found attachment guid: %@
TRIGGER: Before deleting attachment, guid in message part: %@
TRIGGER: Before deleting attachment, was equal, deleting range
TRIGGER: Before deleting attachment,deleted messages for guid
TRIGGER: deferred deletion of messageGUID: %@
TRIGGER: Before deleting attachment, updated attributedBody and text
TRIGGER: Before deleting attachment, no message record found
TRIGGER: Before deleting attachment, all done!
TRIGGER: Deleting attachment files based on path: %@, pathIsInStickerCache %@
Deleting this guid directory too: %@
Just deleting the original path: %@
Did not delete attachment at path %@
TRIGGER: Deleting plugin snapshot at path: %@
Failure to delete file at path with error: %@
This method should not be called off the database thread because it may lead to threading issues and database corruption.
Set device state test user defaults domain to: %@
Saved device state: %@
Read stored device state: %@
Device state not set, return default version: %@
IMDCNPersonAliasResolver: Error! Contact Store failed to get initialized!
softlink:r:path:/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
ySo14NSUnitDurationCG
So28IMDMessageRecordBatchFetcherC
SaySSG
SaySo16CSSearchableItemCG
SaySo16CSSearchableItemCGz_Xx
So8NSObjectC
So17IMDSpotlightIndex_p
yypG
yyXlG
ySSG
SaySSGz_Xx
index
deferralTime
handles
messageAge
inner
IMDSuggestions
SGMessagesSuggestionsServiceDelegate
IMDDatabaseDowngradeHelper
Testing
KeyValue
IMDKeyValueQueries
NSObject
Database
IMDDatabaseQueries
IMDContactCache
IMDContactChangeHandler
CNChangeHistoryEventVisitor
IMDMessageRecord
IMDBridgedRecord
IMDMessageRecordBatchFetcher
Handles
IMDHandleQueries
IMDNotificationsController
IMDCNAliasResolver
IMDDatabaseServer
IMDHandleRecord
IMDChatRecord
IMExtensionNotificationManager
Messages
IMDMessageQueries
IMAbstractDatabaseArchiver
IMDAttachmentDiagnosticInfo
IMDCoreSpotlightBaseIndexer
IMDCoreSpotlightIndexer
IMDCoreSpotlightRecipientIndexer
IMDCoreSpotlightMessageBodyIndexer
IMDCoreSpotlightMessageSubjectIndexer
IMDCoreSpotlightMessageMetadataIndexer
IMDCoreSpotlightMessageBalloonPluginIndexer
IMDCoreSpotlightMessageDataDetectorsIndexer
IMDCoreSpotlightMessageAttachmentIndexer
IMDCoreSpotlightChatParticipant
IMDCoreSpotlightMessageHighlightIndexer
IMDSortDescriptorToSQLConverter
CoreDuetDonation
IMDDatabase
IMDDatabaseLegacyXPCBridge
IMDDatabaseClient
IMDRemoteDatabaseProtocol
IMDChatQueries
IMDAttachmentQueries
IMDNotificationQueries
IMDSqlQuery
IMDSqlSelectQuery
IMDPersistentAttachmentController
IMDatabaseAnonymizer
IMDTaskProgress
IMDCoreSpotlightDispatchObject
IMDAskToBuyNotificationContext
IMDFamilyNotificationContextProtocol
IMDPersistenceHelloWorldClass
IMDSpotlightIndexerTimingProfiler
IMDCoreSpotlightManager
IMDAttachmentSyndicationUtilities
IMDDonationManager
Attachments
IMDWhitetailToCoralDowngrader
IMDWhitetailToCoralDowngradeHelper
IMDAbstractDatabaseDowngrader
IMDScreenTimeAskNotificationContext
Notifications
IMDMessageAutomaticHistoryDeletion
IMDFamilyInviteNotificationContext
IMDRecordBatchFetcher
NSFastEnumeration
Chats
IMDAttachmentRecord
IMDPredicateToSQLConverter
IMDSharedWithYouMetadataManager
IMTrimDatabaseToDays
IMTrimDatabaseToMessageCount
IMAbstractDatabaseTrimmer
IMDCNPersonAliasResolver
IMDChatRecordBatchFetcher
IMDRecord
IMDSpotlightIndex
T@"NSArray",&,N,V_abortedTimers
CNRecordIDForAliases:completionHandler:
T@"NSPredicate",&,N,V_predicate
IMDeviceRegionIsEligibleToBeForcedIntoFilteringUnknownSender
T@"NSString",R,C,N,V_expression
LPSharedObjectMetadataClass
SMSCategoryWithIdentifier:actions:
_chatHasDNDSet:
T#,R
_ckBundleIDsKey
T@"<NSObject><SGSuggestionsServiceMessagesProtocol>",&,V_sgService
_fetchAliasToCNIDMapForAliases:
T@"CNContact",R,N,V_contact
_serverResponse
T@"CRRecentContactsLibrary",&,N,V_recentsInstance
_transfer_state
T@"IMDChatRecord",R,N
account
T@"IMDHandleRecord",R,N
allKeys
T@"IMTimingCollection",&,N,V_timingCollection
assetDescriptor
T@"NSArray",&,N,V_createTablesSQL
authorAddresses
T@"NSArray",&,N,V_tableNames
balloonBundleID
T@"NSArray",R,C,N
beginIndexBatch
T@"NSCache",&,N,V_cache
chatRecordsFilteredByPredicate:
T@"NSData",R,C,N
contact
T@"NSDictionary",R,C,N
containsString:
T@"NSDictionary",R,N
countForObject:
T@"NSMutableArray",&,N,V_notificationsContext
createTablesSQL
T@"NSMutableDictionary",&,N,V_aliasToCNIDMap
currentCalendar
T@"NSMutableSet",&,N,V_runningTimers
defaultInstance
T@"NSSet",&,N,V_meTokens
fetchLastMessageRecordForChatRecordWithRowID:completionHandler:
T@"NSString",&,N,V_guid
handleIMDChatRecordCopyChatsFilteredUsingPredicate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
T@"NSString",C,N,V_columns
hide_attachment
T@"NSString",R,C
initWithEncodedMessagePartGUID:
T@"NSString",R,C,N,V_associatedChatGUID
initWithString:
T@"NSString",R,C,N,V_tableName
integerValueForKey:withDefault:
T@"NSString",R,N,V_destinationPath
isEqualToArray:
T@"NSString",R,N,V_taskName
isReply
T@"UNNotificationCategory",&,N,V_incomingMessageNotificationCategory
TB,N,V_allowsOverrideOfObjects
loginID
TB,N,V_shouldAddToSpotlight
messageSupportsIndexingForItem:
TB,R,N
newChatSearchableItemForChatDictionary:optionalLastMessageDate:
TB,R,N,GisCommSafetySensitive
numberWithBool:
TB,R,N,GisOutgoing
rawDate
TB,R,N,GisSticker
reindex
TQ,N,V_batchSize
removeAllDeliveredNotifications
TQ,N,V_total_bytes
rightExpression
TQ,R,N,V_totalCount
seconds
Td,N,V_timeout
Tq,N,V_ck_sync_state
setAuthorNames:
Tq,N,V_limit
setContentType:
Tq,R,N
setDay:
Tq,R,N,V_messageCount
setEligibleForPhotosProcessing:
URLByAppendingPathComponent:isDirectory:
setFileManager:
UTF8String
setOtherHandle:
UUIDString
setReplyToGUID:
_IMDContactStore
setTextContent:
_UTITypeMightBeAnimated:
setURL:
__imArrayByApplyingBlock:
sharedThrottler
__im_apfsCompatibleFilename
sticker
__im_dateWithNanosecondTimeIntervalSinceReferenceDate:
stopMainTimerAndLogAfterFailure
__im_insertionIndexForMessagePartBody:
stringByAppendingPathComponent:
__im_messagePartMatchingPartIndex:
stringFromDate:
__im_visitMessageParts:
syndicationType
_abortedTimers
uppercaseString
_activeAccountAliases
.cxx_destruct
T@"NSArray",R,N
IDsFromCNContact:
T@"NSString",&,N,V_originalGUID
IMMessagesFilteringSettingForPreferedSubscription
TB,R,N,GisReply
LPSpecializationMetadataClass
_aliasToCNIDMap
Sha256ForData:withSalt:
_chatRecordsCopiedFromXPCArray:
T@"<IMDRemoteDatabaseProtocol>",R,N
_contactForURI:
T@"CNContact",&,N,V_meContact
_propertyDescriptorForProperty:
T@"CNContactStore",&,N,V_contactStore
_setupFirstLoad
T@"IMBusinessNameManager",&,N,V_businessNameManager
_xpcArrayWithAttachmentRecords:
T@"IMDContactStoreChangeHistoryEventsHandler",&,N,V_contactsEventhandler
actions
T@"IMDMessageRecord",R,N
arrayWithArray:
T@"NSArray",&,N,V_createIndexesSQL
attributionInfo
T@"NSArray",&,N,V_createTriggersSQL
authors
T@"NSArray",C,N,V_actions
base64EncodedStringWithOptions:
T@"NSAttributedString",R,C,N
cfMessageRecord
T@"NSData",&,N,V_currentHistoryToken
columns
T@"NSDate",R,N
containsObject:
T@"NSDictionary",R,C,N,V_keyPathsToColumns
content
T@"NSFileManager",&,N,V_fileManager
country
T@"NSMutableArray",&,N,V_runTimers
createTriggers:
T@"NSMutableOrderedSet",&,N,V_blocklistMessageGUIDs
dealloc
T@"NSSet",&,N,V_activeAccountAliases
destinationPath
T@"NSString",&,N,V_filePath
groupID
T@"NSString",&,N,V_path
handles
T@"NSString",C,N,V_where
initWithDouble:
T@"NSString",R,C,N
initWithFormat:
T@"NSString",R,C,N,V_handleID
insertAttributedString:atIndex:
T@"NSString",R,N
isEmpty
T@"NSString",R,N,V_sourcePath
isProxy
T@"UNNotificationCategory",&,N,V_incomingFilesNotificationCategory
isServerProcess
T@"UNUserNotificationCenter",&,N,V_notificationCenter
keyPath
TB,N,V_shouldAddToCoreRecents
lowercaseString
TB,N,V_shouldAddToSuggestions
moveMessageRecordsToRecoveryForChatRecordsWithGUIDs:deleteDate:
TB,R,N,GisAssociatedMessage
TB,R,N,GisFromMe
postalAddresses
TB,R,N,GisRecovered
recentsInstance
TB,R,N,V_isSender
release
TQ,N,V_hide_attachment
request
TQ,R
searchableIndex
T^{sqlite3=},R,N,V_database
service
setAttachments:
Tq,N,V_lastRowID
setCachePolicy:
Tq,N,V_transfer_state
setCountryCode:
Tq,R,N,V_downgradesToVersion
setDisplayName:
Tq,R,N,V_newerThanDays
setExpireState:
URLWithString:
setMessageGUID:
UTITypeOfPathExtension:
setPayloadData:
_FPProviderIDForItems:
setShouldSuppressScreenLightUp:
_IMDCoreSpotlightCNContactForAddress:
setTotal_bytes:
__SLCollaborationHandshakeController
setUrl:
__im_URLForChatIdentifier:entryBody:messageGUID:
shortNameFormatPrefersNicknames
__im_dateByAddingDays:
stickerUserInfo
__im_filePathWithVariant:
stopMainTimerAndLogAfterSuccess
__im_makeDirectoriesInPath:mode:
stringByAppendingPathExtension:
__im_nanosecondTimeInterval
subject
__postNotificationsIsMostActiveDevice:
timeout
_actions
valueWithRange:
_addressBookNameForAddress:orContact:
_addressForHandle:
_allowsOverrideOfObjects
_amIMentionedInMessage:
_appearsToBeEmail
_appearsToBePhoneNumber
_areAllMessagePartsRetractedForMessageDictionary:
_associatedChatGUID
_asyncPersistenceBlock:
_attachmentGUIDForCMMIsSyndicatable:syndicationIdentifier:encodedSyndicationRanges:isSyndicatable:verbose:
_attachmentGUIDIsSyndicatable:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCMM:verbose:
_attachmentIsSticker:
_attachmentRecordsCopiedFromXPCArray:
_attachmentSyndicationTypeForAttachmentGUID:syndicationIdentifier:attachmentUTI:attributedBody:encodedSyndicationRanges:isCommSafetySensitive:verbose:
_authorizeOutgoingSandboxedResource:connection:
_auxVideoPathIfItExists
_batchFetchContactRecordIDForAliases:
_batchSize
_batchSizeForTargetBatchSize:lastIndexedRowID:lastBatch:
_blocklistMessageGUIDs
_businessNameManager
_bypassIndexVersionCheck
_cache
_canDeleteAttachmentPath:
_cfTypeID
_chatCountForChats:
_chatDictionaryForChatAtIndex:withChats:
_chatDictionaryForChatGUID:
_chatDictionaryForChatRecord:
_chatDictionaryForMessageRecord:
_chatGUIDsForChatsWithJunkMessagesOlderThanDate:operation:
_chatGUIDsForChatsWithRecoverableMessagesOlderThanDate:operation:
_chatHasCategoryMuted:isFromContact:
_chatHasDNDSetBasedOnChatGUID:chatIdentifier:groupID:handles:lastAddressedHandleString:originalGroupID:style:
_chatHasDNDSetBasedOnDNDIdentifier:
_ck_sync_state
_coalescePostNotifications
_codableDictionaryCopiedFromXPCDictionary:objectClass:
_codableObjectsCopiedFromXPCArray:objectClass:
_collaborationIdentifierKey
_columnWithSortDescriptor:
_columns
_contact
_contactStore
_contactsEventhandler
_copyAttachmentRecordsFromCoreSDBResults:
_copyChatRecordsFromCoreSDBResults:
_copyMessageRecordsFromCoreSDBResults:
_copyMessagesForIndexingWithLastRowID:batchSize:
_coreSpotlightChatParticipantsFromChatDictionary:senderHandleID:
_countMessagesExcludingGroupPhotosInChatWithGUID:isRecoverable:operation:
_countryCodeForHandle:
_createIndexesSQL
_createTablesSQL
_createTriggersSQL
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
_currentHistoryToken
_currentIndexVersion
_database
_deleteAttachmentForTransfer:highQuality:
_deleteChatIfEmptyWithGUID:lastMessageDate:operation:
_deleteTransfersInMessagePartsForChatGUID:
_destinationPath
_deviceIsElgibileToBeForcedIntoFilteringUnknownSenders
_deviceUnderFirstUnlock
_displayNameForBusinessChatAddress:businessNameManager:
_displayNameForHandle:andContact:
_displayNameForHandle:andContact:businessNameManager:suggestionProvider:
_donationManager
_downgradesToVersion
_expectedIndexVersion
_expression
_fastEnumerationBuffer
_fastEnumerationBufferSize
_fastEnumerationLastBatch
_fetchChatRecordsWithHandles:allowSubsetMatching:serviceName:displayName:groupID:style:completionHandler:
_fetchContactIdentifierForAlias:
_fetchUpdatedRecord
_fileManager
_filePath
_fileURLIsActuallyAnimated:
_filteringSettingConfirmed
_formattedDisplayStringForAddress:countryCode:
_foundParameters
_generateNotificationRequestForDeliveryError:isCarouselUITriggered:
_generateNotificationRequestForMessageRecord:isUrgentMessageTrigger:isCarouselUITriggered:isMostActive:shouldAdvanceLastAlertedMessageDate:
_generateNotificationRequestForMessageRecord:messageDictionary:chatDictionary:isUrgentMessageTrigger:isCarouselUITriggered:isMostActive:shouldAdvanceLastAlertedMessageDate:
_geocodeItems:
_getDirSubDirURLsForDirPath:error:
_getFilePathNotDSStore:
_getMessagesSpokenAllowlistLevel:
_getPathAttributesForPath:
_getSpokenMessageAllowlistLevelVersion
_getiChatFileMetadataForPath:
_groupHashForHandles:lastAddressedHandle:
_groupPhotoInternalFilePathForGroupPhotoGuid:
_guid
_handleID
_handleIDForHandleID:
_handleIsSpokenMessageAllowlisted:chat:message:
_handlesMatchingContactIdentifier:
_hasMigratedPreferences
_haveMigrated
_hide_attachment
_highlightedContentServerDateKey
_inTransaction
_incomingFilesNotificationCategory
_incomingMessageNotificationCategory
_indexSearchableChatItems:withIndex:
_indexSearchableItems:lastIndexedRowID:batchSize:lastBatch:withIndex:completion:
_indexTypeCustomKey
_intervalFormatter
_isAttachmentType:
_isFacetimeHighlighted:
_isLNKTypeMessage:
_isMostActiveDeviceWithCompletionBlock:
_isRaiseGestureEnabled
_isSender
_isUnknownSenders:
_keyPathsToColumns
_lastAlertedFailedMessageDate
_lastAlertedMessageDate
_lastDonatedRowID
_lastIndexedRowID
_lastMessageTimeForChat:
_lastPercentComplete
_lastProcessingMessageDate
_lastRowID
_lastTwoMessagesForChat:
_legacyDateForMessageWithRowIDPreference:
_legacyDatePreference
_legacyRowIDPreference
_limit
_loadAttributedBodyTextForMessageWithGUID:
_loadRecoverableMessagePartsMetadataForChatGUID:
_localCache
_lpLinkMetadataForItem:attachmentPaths:originalURL:
_lpLinkMetadataForMessage:attachmentPaths:originalURL:
_lpTitleCustomKey
_makeNotificationCategories
_meContact
_meTokens
_messageCount
_messageDictionaryForMessageRecord:
_messageDictionaryForMessageRecord:copyThreadOriginator:
_messageIsBusiness:
_messageIsFromFavorite:
_messageIsFromKnownContact:
_messageRecordsCopiedFromXPCArray:
_messageShouldBeSilentlyDeliveredForBusinessChat:
_messageShouldBeSpoken:chatDictionary:isMostActive:
_messages:newerThanDate:
_messagesSortedByDate:
_migrateLastedPostedPreferencesIfNeeded
_migrateSiblingAssetsInAttachmentStoreWithOriginalPath:destinationPath:withFileManager:
_mostRecentJunkMessageDateForChatWithGUID:operation:
_mostRecentRecoverableMessageDateForChatWithGUID:operation:
_newCDInteractionForMessages:
_newLegacySearchableIndexesForMessages:
_newSearchableChatItemsForChats:
_newSearchableIndexesForMessages:
_newSummaryTextForPayloadData:item:
_newSyndicationRangeForCMMMessageItem:syndicationIdentifier:shouldHideFromSyndication:
_newerThanDays
_nicknameDisplayNameForID:
_notificationCenter
_notificationIsFromAFilteredSender:messageDictionary:
_notificationsContext
_orderByClauseWithSortDescriptor:
_originalGUID
_overrideDNDForMessagesAddressingMe
_path
_permanentlyDeleteJunkMessagesBeforeDate:
_permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:beforeDate:
_persistentPathForTransfer:filename:highQuality:chatGUID:storeAtExternalPath:
_personIdentityQueue
_pluginPayloadAttachmentPathsForItem:
_pluginPayloadAttachmentPathsForMessage:
_populateAttachmentsForNotificationContent:messageDictionary:messageRecord:knownSender:
_populateBasicNotificationIdentifyingContent:chatDictionary:messageDictionary:isCarouselUITriggered:
_populateBodyAndTitleForSendFailedNotificationContent:messageDictionary:
_populateBodyAndTitleForSendReceivedAsJunkNotificationContent:messageDictionary:
_populateBodyForNotificationContent:messageDictionary:
_populateIgnoresDoNotDisturb:chatDictionary:messageDictionary:
_populateNotificationCategoryContent:messageDictionary:chatDictionary:
_populateRealertCountForNotificationContent:
_populateSoundAndDisplayActivationForNotificationContent:chatDictionary:messageDictionary:isMostActive:
_populateSubtitleForNotificationContent:chatDictionary:messageDictionary:
_populateTitleForNotificationContent:chatDictionary:messageDictionary:
_populateUserInfoForMessageContent:messageDictionary:messageIsAddressedToMe:
_populateUserInfoOnContentForWatch:messageDictionary:chatDictionary:isCarouselUITriggered:
_possibleVideoComplementExtensions
_postNotifications
_postProcessIndexingForItem:chatDictionary:isReindexing:
_predicate
_predicateForAlias:
_predicateForEmailAddress:
_predicateForPhoneNumber:
_previewFileURLForTransferURL:utiType:knownSender:
_proceedMostActiveDevice:isBlockCalled:completionHandler:
_propertyIDForProperty:
_randomTemporaryPathWithFileName:
_readIntegerFromQuery:resultBlock:
_recentsInstance
_recoverMessagePartsForChatRecordsWithGUIDs:operation:
_registerUserNotificationsForFailedDeliveryMessageRecords:isCarouselUITriggered:
_registerUserNotificationsForMessageRecords:newerThanDate:isUrgentMessageTrigger:isCarouselUITriggered:isMostActiveDevice:
_removeFromRecoverableMessagePartForMessageGUID:operation:
_removeLegacyAttachmentPathsInAttachmentStoreWithOriginalPath:withFileManager:
_resolvedURLForItems:
_respondWithAttachmentRecords:responseMessage:completionHandler:
_respondWithChatRecords:responseMessage:completionHandler:
_respondWithMessageRecords:responseMessage:completionHandler:
_restoredAttributedBodyForMessageGUID:withRecoveredAttributedParts:
_richLinkPluginHasRichContentForItem:attachmentPaths:originalURL:outURL:outTitle:
_runTimers
_runningTimers
_sanitizeIndexesForCurrentVersionIfNeeded:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:
_saveAttachmentForTransfer:highQuality:copyWithinAttachmentStore:chatGUID:storeAtExternalPath:
_selfCSPersonFromHandleID:messageService:
_sendAsyncXPCMessage:action:responseHandler:
_sendSyncXPCMessage:action:responseHandler:
_setBypassIndexVersionCheck
_setContactInMessageDictionary:messageDictionary:
_setCurrentIndexVersion:
_setHasMigratedPreferenceTrue
_setLastDonatedRowID:
_setLastIndexedRowID:
_setLastPostedDateFromMigration:
_setLaunchId:
_setMaxIndexRowID:
_setMessageID:
_setMessagesSpokenAllowlistLevelInPreferences:
_setNeedsDeferredIndexing:
_setNeedsDonation:
_setNeedsIndexing:
_setSpokenMessageAllowlistLevelVersion:
_setUpNotificationCenter
_setupBusinessNameManager
_setupMeContactAndTokens
_sgService
_shouldAddToCoreRecents
_shouldAddToSpotlight
_shouldAddToSuggestions
_shouldBypassForTesting
_shouldDeleteOriginalPath:copyWithinAttachmentStore:destPath:storeAtExternalPath:
_shouldDonateNextBatchForBatchSize:
_shouldIndexNextBatchForBatchSize:
_shouldOverrideChatSilencingBecauseImMentioned:
_shouldPostNotificationForChat:messageDictionary:
_shouldPostNotificationRequest:withCompletionHandler:
_shouldRepostNotification:withAlreadyPostedNotification:
_sourcePath
_startTime
_storeLastAlertedFailedMessageDate:
_storeLastAlertedMessageDate:
_strictlyUnarchivedObjectOfClasses:fromData:error:
_stripFZIDPrefix
_suggestedDisplayNameForAddress:
_swiftImpl
_syncPersistenceBlock:
_syndicationContentTypeKey
_syndicationIdentifierForAttachmentGUID:messageGUID:attributedBody:verbose:
_synthesizedMessagingNotificationContentWithContent:chatDictionary:messageDictionary:isUrgentMessageTrigger:
_tableName
_tableNames
_taskName
_timeout
_timingCollection
_totalCount
_total_bytes
_truncateNameIfNeeded:
_uncanonicalizedAddressForHandle:
_uniqueIdentifierForResourceURL:
_updateAliasToCNIDMap:withHistoryToken:
_updateAttributesWithCollaborationMetadata:withItem:chat:shouldAddSharedWithYouMetadata:
_updateItem:withGeoMapItem:
_updateMessageItemSyndicationRanges:messagePartDescriptor:shouldHideFromSyndication:
_updateMessageRecordForGUID:withAttributedBody:operation:
_updateSyndicatedMessageItem:newMessageItem:newSyndicationRange:
_where
_xpcArrayWithChatRecords:
_xpcArrayWithCodableObjects:
_xpcArrayWithMessageRecords:
_xpcDictionaryWithCodableObjects:
abortCurrentTimers
abortedTimers
absoluteString
acceptEventVisitor:
accountID
actionType
actionWithIdentifier:title:options:
activeAccountAliases
activeConversations
addCharactersInString:
addChatSearchableItemForChatGUID:
addCollaborationDictionary:forConversation:fromMe:
addIndexesInRange:
addNotificationRequest:withCompletionHandler:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
advanceLastAlertedFailedMessageDate:
advanceLastAlertedMessageDate:
aliasToCNIDMap
allObjects
allTokens
allValues
allocWithZone:
allowableByContactsHandles:
allowedByScreenTime
allowsOverrideOfObjects
allowsWeakReference
andPredicateWithSubpredicates:
appendAttributedString:
appendFormat:
appendString:
applicationCurrentlyLimited
areKeysAvailable:
areMyTokens:inMessage:
array
arrayByAddingObject:
arrayByApplyingSelector:
arrayOfCreateIndexesSQL
arrayOfCreateTablesSQL
arrayOfCreateTriggersSQL
arrayOfTableNames
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
ascending
assetSyndications
assetUUIDKey
associatedChatGUID
associatedMessage
associatedMessageGUID
associatedMessageRange
associatedMessageType
attachmentIndexTypeForPath:filename:isSticker:isCommSafetySensitive:
attachmentIsSyndicatableMediaKey
attachmentRecordIsSyndicatable:verbose:
attachmentRecords
attachmentRecordsFromAttachments:
attachmentWithIdentifier:URL:options:error:
attachments
attribute:atIndex:effectiveRange:
attribute:atIndex:longestEffectiveRange:inRange:
attribute:existsInRange:
attributeDictionary
attributeSet
attributedBodyData
attributedBodyText
attributesAtIndex:effectiveRange:
attributesAtIndex:longestEffectiveRange:inRange:
attributesOfItemAtPath:error:
authorizationStatus
authorizeForPID:
autorelease
auxiliaryItemsForPrimaryAttributes:withItem:chat:isReindexing:timingProfiler:
avatar
batchSize
beginEditing
beginTransaction:
bindParametersToSqliteWithStatement:
blocklistMessageGUIDs
body
bodyData
boolValue
boolValueForKey:withDefault:
businessNameForUID:updateHandler:
businessNameManager
bypassIndexVersionCheck
bytes
cStringUsingEncoding:
cache
cacheContact:forKey:
cacheContactsFromFetchResults:forAliases:
cachedContactForKey:
canPopulateUserInfoForMessageBalloonBundleID:
cancelIndexingForItem:
cancelPreviousPerformRequestsWithTarget:selector:object:
canonicalizedURIString
caseInsensitiveCompare:
categoryIdentifier
categoryWithIdentifier:actions:intentIdentifiers:hiddenPreviewsBodyPlaceholder:categorySummaryFormat:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
cfAttachmentRecord
cfChatRecord
cfHandleRecord
changeType
charValue
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
chatAutoDonatingCutomKey
chatAutoDonatingServerDateCustomKey
chatDictionary:matchesFaceTimeConversation:
chatRecord
chatRecordsWithHandles:serviceName:displayName:groupID:style:
chatRecordsWithIdentifier:
chatStyleCustomKey
chatUniqueIdentifierKey
city
ck_sync_state
class
cleanDatabase
cleanUpOrphanAttachments
cleanseOrphanedFileTransfers
clearMessageGUIDFromScrutiny:
clearRecoverableMessageTombStones
cloneTableContents:withOperation:resultBlock:
close:
cloudKitRecordChangeTag
cloudKitRecordID
cloudKitServerChangeTokenBlob
cloudKitSyncState
code
collaborationMetadataKey
commSafetySensitive
commSafetyUIEnabled
commitTransaction:
communicationContext
compare:
componentsForContact:
componentsJoinedByString:
componentsSeparatedByString:
componentsWithURL:resolvingAgainstBaseURL:
compoundPredicateType
conformsToProtocol:
constantValue
contactIdentifier
contactStore
contactStoreDidChange:
contactsEventhandler
contactsForVCardAtPath:
contactsWithData:error:
containsIndex:
contentByUpdatingWithProvider:error:
contentCreationDate
contentType
contentsOfDirectoryAtPath:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
conversationUUID
coordinate
copy
copyDatabase:
copyGroupPhotoToExternalPathIfNecessary:chatGUID:attachmentFilepath:
copyItemAtPath:toPath:error:
copyItemAtURL:toURL:error:
coreSpotlightDeleteAttachmentGUIDs:
count
countByEnumeratingWithState:objects:count:
countryCode
countryCodeString
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createDowngradeHelper
createIndexes:
createIndexesSQL
createMutableContactWithID:
createQueryString
createTables:
createTriggersSQL
currentHandler
currentHistoryToken
currentIndexVersion
customAttributeDictionary
data
dataForKey:error:
dataUsingEncoding:
dataWithContentsOfURL:
dataWithContentsOfURL:options:error:
dataWithMessageSummaryInfoDictionary:
database
databaseQuery:
date
dateByAddingComponents:toDate:options:
dateByAddingUnit:value:toDate:options:
dateDelivered
dateEdited
dateRead
dateWithTimeIntervalSince1970:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultHFSFileManager
defaultManager
defaultsSharedInstance
deleteAllSearchableItemsWithCompletionHandler:
deleteAttachmentsDirectWithPredicate:
deleteAttachmentsForTransfer:
deleteCharactersInRange:
deleteChatSearchableItemForChatGUID:
deleteDirectoryAtPath:
deleteFailedArchiveAtPath:error:
deleteJunkMessagesEligibleForPermanentRemovalOldThanDays:
deleteJunkMessagesOlderThanDays:
deleteMessagesAndAttachmentsAfterDays:
deleteRecoverableMessagesEligibleForPermanentRemoval
deleteRecoverableMessagesOlderThanDays:
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
deleteSpolightArchivedFiles
description
descriptorForRequiredKeysForStyle:
destinationCallerID
deviceIsLockedDown
dictionary
dictionaryWithCapacity:
dictionaryWithDictionary:
dictionaryWithMessageSummaryInfoData:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
direction
displayNameForContact:
distantFuture
domain
domainIdentifier
donateChat:withMessage:
donateInteractionWithCompletion:
donateNextMessageBatchIfNeeded:completion:
doubleValue
downgradesToVersion
emailAddresses
endEditing
endIndexBatchWithClientState:completionHandler:
enqueueTicket:submissionHandler:
entriesForContact:
enumerateAttachmentGUIDsWithBlock:
enumerateAttribute:inRange:options:usingBlock:
enumerateAttributesInRange:options:usingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
enumeratorAtPath:
errorCode
errorFromResult:query:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeFetchRequest:error:
expectedIndexVersion
expireState
expression
expressionType
expressiveSendStyleID
fetchAttachmentRecordsFilteredUsingPredicate:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:limit:completionHandler:
fetchChatRecordsFilteredUsingPredicate:sortedUsingLastMessageDateAscending:olderThan:limit:completionHandler:
fetchChatRecordsWithAtLeastHandles:serviceName:style:completionHandler:
fetchChatRecordsWithPinningIdentifier:completionHandler:
fetchDataForKey:completionHandler:
fetchFamilyCircleWithError:
fetchGroupPhotoPathsForChatsWithGroupIDs:completionHandler:
fetchInteger64ForKey:completionHandler:
fetchMessageRecordWithGUID:excludeRecoverableMessages:completionHandler:
fetchMessageRecordsForChatRecordWithGUID:filteredUsingPredicate:sortedUsingDescriptors:limit:completionHandler:
fetchSMSFilterExtensionParams
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileManager
filePath
fileSize
fileSystemRepresentation
fileTransferGUIDs
fileURLWithPath:
fileURLWithPath:isDirectory:
filename
filterMode
filteredArrayUsingPredicate:
firstName
firstNameForCNContact:
firstObject
fixIMDPersistenceAgentPriorityInversion
flags
fromMe
generatedRoomNameForGroupChat
getAliasToCNIDMap
getBoolFromDomain:forKey:
getCMMAssetOffset
getDeliveredNotificationsWithCompletionHandler:
getNotificationSettingsWithCompletionHandler:
getObjects:range:
getValueFromDomain:forKey:
groupName
groupPhotoPathCustomKey
groupUUID
guid
guidByStrippingAuxPrefix:
handle
handleDeleteAttachmentsDirectWithPredicate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleFailureInFunction:file:lineNumber:description:
handleID
handleIMDAttachmentRecordCopyFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsSortedByLastMessageDateAndFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithAtLeastHandlesOnServiceWithStyle_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithHandlesOnServiceWithDisplayNameGroupIDStyle_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithIdentifier_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyChatsWithPinningIdentifier_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopyGroupPhotoPaths_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordCopySortedChatsFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordLoadRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordMoveMessagesToRecoverableMessage_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordPermanentlyDeleteRecoverableMessagesInChatsWithGUIDs_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDChatRecordRecoverMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDCoreSpotlightDeleteAttachment_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDKVIntegerForKey_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordClearUnsyncedRemovedRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopyLastMessageForChatWithRowID_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopyMessageWithGUIDExcludingRecoverableMessages_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordCopySortedMessagesForChatGUIDFilteredUsingPredicateWithLimit_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordDeleteJunkMessagesOlderThanDays_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordDeleteRecoverableMessagesOlderThanDays_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordLoadRecoverableMessagesPendingCloudKitDelete_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordLoadRecoverableMessagesPendingCloudKitUpdate_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordMoveToRecoverableMessage_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordStoreRecoverableMessagePartBody_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateAttachmentSyndicationRanges_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateMessagesSyndicationRanges_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDMessageRecordUpdateRecoverableMessageSyncState_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleIMDNotificationsPostSharePlayNotification_IPCActionWithXPCConnection:requestMessage:responseMessage:completionHandler:
handleRecord
handleRecords
handleToIdentityMapKey
hasDataDetectorResults
hasMedia
hasPrefix:
hasSuffix:
hasUnseenMention
hash
highlightDictionaryFromAttributes:withItem:chat:
host
identifier
ignoreMute
im_lastPathComponent
im_livePhotoBundlePath
im_livePhotoVideoPath
im_stripCategoryLabel
imageExists
imageFilePath
imageWithURL:
importDataFromWhitetailDatabaseWithSqlOperation:resultBlock:
incomingFilesNotificationCategory
incomingMessageNotificationCategory
indexChats
indexItem:withChat:isReindexing:metadataToUpdate:timingProfiler:
indexNextMessageBatchIfNeeded:completion:
indexOfObject:
indexSearchableItems:completionHandler:
indexSetWithIndexesInRange:
indexTypeCustomKey
init
initForReadingFromData:error:
initSynchronouslyWithBundleIdentifier:
initWithAliasToCNIDMap:
initWithArray:
initWithAssetSyndications:
initWithAssociatedChatGUID:
initWithBase64EncodedString:options:
initWithBool:
initWithBundleIdentifier:
initWithBytes:length:
initWithCString:encoding:
initWithCapacity:
initWithCode:userActivity:
initWithConfiguration:
initWithContactStore:
initWithDictionaryRepresentation:
initWithDisplayName:handles:handleIdentifier:
initWithDomain:code:userInfo:
initWithFileURL:
initWithHandleID:contact:isSender:
initWithHandles:batchDeferralTime:messageAge:index:
initWithIdentifier:conversationIdentifier:content:dateSent:sender:recipients:groupName:messageType:serviceName:
initWithIdentifier:type:displayName:personId:personIdType:
initWithInteger:
initWithIntent:response:
initWithItemContentType:
initWithItemType:text:date:dateRead:dateDelivered:datePlayed:error:type:replaceID:flags:guid:attributedBody:service:account:accountGUID:subject:handleID:countryCode:unformattedID:otherHandleID:groupTitle:groupActionType:shareStatus:shareDirection:expireState:messageActionType:associatedMessageGUID:associatedMessageType:associatedMessageRange:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:messageSummaryInfo:cloudKitSyncState:cloudKitRecordID:cloudKitServerChangeTokenBlob:cloudKitRecordChangeTag:dataDetectorsInfo:destinationCallerID:replyToGUID:sortID:threadOriginatorGUID:threadOriginatorPart:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithKey:ascending:
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithKeysToFetch:
initWithLongLong:
initWithMessageItem:
initWithName:bundleIdentifier:
initWithObjects:
initWithObjectsAndKeys:
initWithPath:
initWithPath:storeName:dataProtectionClass:
initWithPath:tableNames:createTablesSQL:createIndexesSQL:createTriggersSQL:downgradesToVersion:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:isContactSuggestion:suggestionType:
initWithPredicate:keyPathsToColumns:
initWithRecipients:content:speakableGroupName:conversationIdentifier:serviceName:sender:
initWithSender:time:guid:messageSummaryInfo:
initWithSender:time:guid:type:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:bizIntent:locale:errorType:threadIdentifier:syndicationRanges:syncedSyndicationRanges:partCount:dateEdited:
initWithSenderInfo:time:timeRead:timeDelivered:timePlayed:subject:body:bodyData:attributes:fileTransferGUIDs:flags:guid:messageID:account:accountID:service:handle:roomName:unformattedID:countryCode:expireState:balloonBundleID:payloadData:expressiveSendStyleID:timeExpressiveSendPlayed:errorType:associatedMessageGUID:associatedMessageType:associatedMessageRange:bizIntent:locale:messageSummaryInfo:partCount:threadIdentifier:
initWithSortDescriptor:keyPathsToColumns:
initWithSourceDatabasePath:destinationDatabasePath:
initWithSourceDatabasePath:destinationDatabasePath:messageCount:
initWithSourceDatabasePath:destinationDatabasePath:newerThanDays:
initWithStartDate:duration:
initWithString:attributes:
initWithStringValue:
initWithSyndicationType:messagePartRange:syndicationStartDate:
initWithSyndicationType:messagePartRange:syndicationStartDate:syndicationStatus:assetDescriptor:
initWithTableName:
initWithTaskName:totalCount:
initWithTimeIntervalSinceReferenceDate:
initWithUTF8String:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
initWithUnsignedLong:
initWithUnsignedLongLong:
initWithValue:type:
initWithValue:type:label:
initWithVocabularyIdentifier:spokenPhrase:pronunciationHint:
insertObject:atIndex:
intValue
integerValue
intent
interactionRecorder
invalidate
inviteeIsTeen
isAbsolutePath
isAssociatedMessage
isAuxVideo
isBusinessChatCustomKey
isCMM
isCNContactAKnownContact:
isCNContactFavorited:
isCommSafetySensitive
isCorrupt
isDateInToday:
isDateInYesterday:
isDelivered
isDirCreationDateAtPath:olderThanDays:
isEqual:
isEqualToData:
isEqualToDate:
isEqualToDictionary:
isEqualToIgnoringCase:
isEqualToNumber:
isEqualToSet:
isEqualToString:
isFavoritedContact:
isFileAtDirPath:olderThanDays:
isFileHeaderDateAtPath:olderThanDays:
isFromMe
isFromMeCustomKey
isGelatoCoreEnabled
isIncoming
isInternalInstall
isKindOfClass:
isLikePhoneNumber:
isMainThread
isMemberOfClass:
isNotificationActionsEnabled
isOlderThanDays:fromDate:
isOpen
isOscarEnabled
isOutgoing
isRead
isRecovered
isSafeToDeleteAttachmentPath:
isSender
isSent
isShared
isSpam
isSpamFilteringOn
isSticker
isUnderFirstDataProtectionLock
isUnknownSenderFilteringOn
itemType
keyEnumerator
keyPathsToColumns
label
lastAlertedFailedMessageDate
lastAlertedMessageDate
lastDonatedRowID
lastIndexedRowID
lastMessageRecord
lastName
lastObject
lastPathComponent
lastProcessingMessageDate
lastRowID
lastUsedDate
leftExpression
length
level
limit
linkItemAtURL:toURL:error:
linkMetadataForPluginPayload:
livePhotoComplementKey
loadAllChatsProgressivelyEnabled
loadRecoverableMessagesMetadataGroupedByChatGUID
localIdentityKey
localIdentityProofKey
localPath
localizedDescription
localizedStringForKey:value:table:
localizedStringWithFormat:
localizedUserNotificationStringForKey:arguments:
logDictionary:
logResults:
longLongValue
longValue
lpDescriptionCustomKey
lpHasRichMediaCustomKey
lpPluginPathsCustomKey
lpTitleCustomKey
madridBusinessCategoryWithIdentifier:actions:
madridCategoryWithIdentifier:actions:
madridGroupCategoryWithIdentifier:actions:
mainBundle
makeDirectoriesInPath:mode:
mapTableRepresentation
maxRowID
meContact
meTokens
messageCount
messageIndexBatchSize:
messagePartIndex
messagePartRange
messageParts
messageRecord
messageServiceCustomKey
messageSummaryInfo
mimeType
minusSet:
momentShareURLKey
moveAttachmentsForTransfer:completion:
moveItemAtPath:toPath:error:
moveMessageRecordsToRecoveryForMessageGUIDs:deleteDate:
mutableCopy
name
namesForDetail:limitTo:prependMaybe:onlySignificant:withCompletion:
needsDonation
needsIndexing
newCDContactForURI:
newCDInteractionForChat:message:
newCDInteractionForMessage:
newSearchableItemsForMessage:reindexing:
newSearchableItemsForMessageGUID:reindexing:
newerThanDays
nextBatch
nextBatchWithSize:
nextObject
nickname
noRelayCategoryWithIdentifier:actions:
normalizedHandleWithDestinationID:
notificationCategories
notificationCenter
notificationsContext
notifyRecipientAnyway
null
numberWithDouble:
numberWithFloat:
numberWithInt:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
open:
operatingSystemVersionString
organizationName
originalGUID
originalMessageGUID
originalURL
otherHandle
outgoing
parameters
partCount
partKeyForAttachmentFromItem:withGUID:
partKeyForAttachmentGUID:inBody:
partNumber
path
pathExtension
pathExtensionForMIMEType:
pathExtensionForUTIType:
pathWithComponents:
payloadData
performMessageSelectionWithOperation:
performRecentsSearch:queue:completion:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:withObject:
performanceClass
permanentlyDeleteRecoverableMessagesInChatsWithGUIDs:completionHandler:
phoneNumberWithStringValue:
phoneNumbers
placeholderBusinessName
plainBody
populateUserInfoForNotificationContent:messageBalloonBundleID:payloadData:
postFirstUnlockMessage:forIdentifier:
postNotificationsWithContext:
postSharePlayNotificationForChatGUID:faceTimeConversationUUID:handleIdentifier:localizedApplicationName:
postUrgentNotificationForMessages:withContext:
postalCode
predicate
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingHandleStrings:
predicateForContactsMatchingPhoneNumber:
predicateForKey:inCollection:
predicateOperatorType
predicateWithBlock:
predicateWithFormat:
previewGeneratorClassForUTIType:
previewSummaryWithPluginPayload:
primaryRecipients
printGreeting
processInfo
productVersion
properties
query
queryItems
rangeOfString:
rangesFromSerializedString:
rawDateDelivered
rawDateEdited
rawDateRead
reIndexWithLocalProofOfInclusionForItemsAsync:
readDatabaseVersion:
readRowCountForTable:resultBlock:
reason
receivedDropEverythingEvent
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recipientAddresses
recordContactEvents:recentsDomain:sendingAddress:source:userInitiated:
recordInteractions:completionHandler:
recoverMessageRecordsForChatRecordsWithGUIDs:
recoverableMessagesMetadataPendingCloudKitDeleteWithLimit:
recoverableMessagesMetadataPendingCloudKitSaveWithLimit:
recovered
reminderAlertCount
remoteMembers
removeAllObjects
removeCachedContactForKey:
removeDeliveredNotificationsWithIdentifiers:
removeItemAtPath:error:
removeItemAtURL:error:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeRecentContacts:error:
replaceCharactersInRange:withString:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
replaceID
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
reply
replyToGUID
repostNotificationsFromFirstUnlockWithContext:
requestWithIdentifier:content:trigger:
requestWithIdentifier:content:trigger:destinations:
resetCache
resourcePath
respondsToSelector:
retain
retainCount
retainWeakReference
retractNotificationsForReadMessages:
reverseObjectEnumerator
revertTransaction:
roomName
rowID
runArrayOfQueries:resultBlock:
runSimpleQuery:resultBlock:
runTimers
runningTimers
sandboxToken
saveAttachmentsForTransfer:chatGUID:storeAtExternalLocation:completion:
saveAttachmentsForTransfer:completion:
scheme
screenTimeNotificationOptionsForChatDictionary:
screenTimeNotificationOptionsForContext:
selectQueryForTable:
selectQueryForTable:withColumns:
selectQueryForTable:withColumns:where:
self
sender
serializedString
serializedStringFromArray:
serviceForContacts
serviceForMessages
serviceName
setAbortedTimers:
setAccount:
setAccountHandles:
setAccountID:
setAccountIdentifier:
setActionType:
setActions:
setActiveAccountAliases:
setAdditionalContactKeyDescriptors:
setAlertTopic:
setAliasToCNIDMap:
setAllowsOverrideOfObjects:
setAlternateNames:
setAssociatedMessageGUID:
setAssociatedMessageRange:
setAssociatedMessageType:
setAttachmentNames:
setAttachmentPaths:
setAttachmentTypes:
setAttributes:ofItemAtPath:error:
setAttributes:range:
setAuthorAddresses:
setAuthors:
setBalloonBundleID:
setBatchSize:
setBlocklistMessageGUIDs:
setBody:
setBodyData:
setBundleId:
setBusinessNameManager:
setByAddingObjectsFromSet:
setCache:
setCategoryIdentifier:
setChangeType:
setCity:
setCk_sync_state:
setCloudKitRecordChangeTag:
setCloudKitRecordID:
setCloudKitServerChangeTokenBlob:
setCloudKitSyncState:
setColumns:
setComplete:
setCompletionHandler:
setContactIdentifier:
setContactStore:
setContactsEventhandler:
setContentCreationDate:
setContentURL:
setCountry:
setCreateIndexesSQL:
setCreateTablesSQL:
setCreateTriggersSQL:
setCurrentHistoryToken:
setData:
setDate:
setDateEdited:
setDateFormat:
setDateInterval:
setDefaultActionURL:
setDestinationCallerID:
setDirection:
setDispatchQueue:
setDomainIdentifier:
setDomains:
setDonationMetadata:
setEndDate:
setErrorCode:
setExpirationDate:
setFamilyName:
setFilePath:
setFileTransferGUIDs:
setFlags:
setFullyFormattedAddress:
setGivenName:
setGroupIdentifier:
setGroupName:
setGroupPhotoPath:
setGuid:
setHasUnseenMention:
setHeader:
setHide_attachment:
setIdentifier:
setImage:forParameterNamed:
setIncomingFilesNotificationCategory:
setIncomingMessageNotificationCategory:
setInstantMessageAddresses:
setIntentHandlingStatus:
setInterruptionLevel:
setIsFromMe:
setIsMe:
setIsUpdate:
setLastAlertedFailedMessageDate:
setLastAlertedMessageDate:
setLastProcessingMessageDate:
setLastRowID:
setLastUsedDate:
setLatitude:
setLimit:
setLocal:
setLongitude:
setMeContact:
setMeTokens:
setMechanism:
setMentionsCurrentUser:
setMessageGUIDUnderScrutiny:
setMessageSummaryInfo:
setMetadata:
setNeedsDonateAllMessagesWithCompletion:
setNeedsMessageReindexingWithCompletion:
setNotificationCategories:
setNotificationCenter:
setNotificationThreadIdentifier:
setNotificationsContext:
setNotifyRecipientAnyway:
setObject:forKey:
setObject:forKeyedSubscript:
setOriginalGUID:
setOriginalMessageGUID:
setOtherCountryCode:
setOtherUnformattedID:
setOwnerIdentifier:
setPartCount:
setPath:
setPlainBody:
setPostalCode:
setPotentialEventMessage:
setPredicate:
setPreferredSizeClass:
setPrimaryRecipients:
setRealertCount:
setRecentsInstance:
setRecipientAddresses:
setRecipientCount:
setRecipientNames:
setRecipients:
setRelatedUniqueIdentifier:
setReplaceID:
setReplyCountsByPart:
setReplyToCurrentUser:
setRunTimers:
setRunningTimers:
setSearchPredicate:
setSender:
setSentMessages:
setService:
setSgService:
setShared:
setShouldAddToCoreRecents:
setShouldAddToSpotlight:
setShouldAddToSuggestions:
setShouldIgnoreDoNotDisturb:
setShouldIgnoreDowntime:
setShouldIgnoreRingerSwitch:
setSortID:
setSound:
setStartDate:
setStartingToken:
setStateOrProvince:
setStatus:
setStreet:
setSubject:
setSubtitle:
setSyncedSyndicationRanges:
setSyndicationRanges:
setSyndicationStatus:
setTableNames:
setThoroughfare:
setThreadIdentifier:
setThreadOriginator:
setThumbnailURL:
setTime:
setTimeDelivered:
setTimeExpressiveSendPlayed:
setTimePlayed:
setTimeRead:
setTimeout:
setTimingCollection:
setTitle:
setToneIdentifier:
setTransfer_state:
setType:
setUnformattedID:
setUnitsStyle:
setUseInProcessMapperExclusively:
setUserInfo:
setUuid:
setValue:forCustomKey:
setValue:forDomain:forKey:
setVibrationIdentifier:
setWatchesDataProtectionLockState:
setWhere:
setWithArray:
sgService
sharedDatabase
sharedDefaults
sharedFeatureFlags
sharedInstance
sharedServer
sharedService
shouldAddToCoreRecents
shouldAddToSpotlight
shouldAddToSuggestions
shouldBeAllowedByScreenTimeWhenLimited
shouldIgnoreDoNotDisturb
shouldIgnoreDowntime
shouldRetractedMessageForBalloonBundleID:
shouldSuppressScreenLightUp
singleLineStringFromPostalAddress:addCountryName:
sortID
sortUsingComparator:
sortedArrayUsingComparator:
sound
soundWithAlertType:
sourcePath
start
startDate
startMainTimerWithExpectedTimeoutInterval:
startOfDayForDate:
startTimingForKey:
startTimingForKey:iteration:
startTimingWithProfiler:
startTrackingTime
state
status
stopProfilingAfterIndexersBailed
stopTimingForKey:
stopTimingForKey:iteration:
stopTimingWithProfiler:
storeData:forKey:
storeRecoverableMessagePartWithBody:forMessageWithGUID:deleteDate:
street
string
stringByAbbreviatingWithTildeInPath
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByExpandingTildeInPath
stringByRemovingCharactersFromSet:
stringByReplacingOccurrencesOfString:withString:
stringByResolvingAndStandardizingPath
stringFromContact:style:
stringFromTimeInterval:
stringGUID
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
stringWithValidatedFormat:validFormatSpecifiers:error:
subarrayWithRange:
submitWithHandler:networkActivity:
subpredicates
substringFromIndex:
substringToIndex:
substringWithRange:
suggestedContactNameCustomKey
suggestedContactPhotoCustomKey
suggestionsFromMessage:options:completionHandler:
suggestionsService:needsContextForConversationIdentifier:numberOfMessagesNeeded:
superclass
supportsDataDetectors
supportsSpotlight
syncedSyndicationRanges
syndicationForPartIndex:asset:
syndicationRanges
syndicationStartDate
syndicationStatus
syndicationTypeForAttachmentRecord:verbose:
tableName
tableNames
taskName
temporaryHighQualityLocalPath
text
thoroughfare
threadIdentifier
threadOriginatorGUID
ticketForForwardGeocodePostalAddress:maxResults:traits:
time
timeDelivered
timeExpressiveSendPlayed
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePlayed
timeRead
timingCollection
timingProfileKey
title
titleFromLPLinkMetadata:
totalCount
totalTimeForKey:
total_bytes
trackEvent:withDictionary:
transferGUID
transferName
transferState
transfer_state
triggerWithTimeInterval:repeats:
trimDatabaseWithOperation:
trimmedString
tuManagerQueue
type
uncanonicalizedURIString
unformattedID
unifiedContactWithIdentifier:keysToFetch:error:
unifiedContactsMatchingPredicate:keysToFetch:error:
uniqueIdentifier
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateAssetInfoWith:asset:range:
updateAttachmentSyndicationRanges:shouldHideFromSyndication:
updateAttributes:withAddressFromContact:
updateAttributesWithSharedWithYouMetadata:withItem:chat:
updateCacheForAliases:
updateConversationManagerWithItem:chat:attributes:
updateMessageSyndicationRanges:shouldHideFromSyndication:
updateMessagesRanges:withMessagePartSyndicationRanges:didUpdate:
updatePostedNotificationsForMessages:withContext:
updateRecoverableMessageSyncState:forMessageRowID:onPartIndex:
updateWithCompletedCount:
urlAddresses
userInfo
utiString
vCardCoordinateForMapURL:outLatitude:outLongitude:
vCardMapURLForContact:
vCardNameForContact:
validateAlertCount:
validateAndCleanupID:
value
value:withObjCType:
valueForCustomKey:
valueForKey:
verboseLoggingEnabled
vibration
videoComplementPathForResourceURL:
visitAddContactEvent:
visitAddGroupEvent:
visitAddMemberToGroupEvent:
visitAddSubgroupToGroupEvent:
visitDeleteContactEvent:
visitDeleteGroupEvent:
visitDropEverythingEvent:
visitRemoveMemberFromGroupEvent:
visitRemoveSubgroupFromGroupEvent:
visitUpdateContactEvent:
visitUpdateGroupEvent:
where
writeDatabaseVersion:resultBlock:
writeToFile:atomically:
writeToURL:options:error:
zone
@40@0:8@16@24Q32
@"NSArray"40@0:8@"NSObject<SGSuggestionsServiceMessagesProtocol>"16@"NSString"24Q32
@16@0:8
v40@0:8@16Q24@?32
v24@0:8@16
v16@0:8
@"<NSObject><SGSuggestionsServiceMessagesProtocol>"
@64@0:8@16@24@32@40@48q56
B32@0:8@16@?24
B24@0:8@?16
B16@0:8
B32@0:8q16@?24
B40@0:8@16^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24@?32
B32@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16@?24
@28@0:8i16@20
^{sqlite3=}16@0:8
q16@0:8
^{sqlite3=}
@"NSString"
@"NSArray"
v32@0:8@16@?24
v32@0:8@16@24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@"NSString"16@?<v@?@"NSData">24
v32@0:8@"NSString"16@?<v@?q>24
v32@0:8@"NSData"16@"NSString"24
@24@0:8@16
v40@0:8@16^f24^f32
@"NSData"
@"NSCache"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@24@0:8^{_NSZone=}16
^v16@0:8
^{__CFArray=}16@0:8
{?=*q^{?}I^v}24@0:8q16
i24@0:8q16
^{_IMDMessageRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{_IMDHandleRecordStruct}^{_IMDHandleRecordStruct}^{__CFArray}^{__CFDictionary}}16@0:8
@408@0:8q16@24q32q40q48q56q64q72q80@88@96@104@112@120@128@136@144@152@160@168@176q184q192q200q208q216@224q232{_NSRange=QQ}240@256@264@272q280@288q296@304@312@320@328@336@344q352@360@368@376@384q392q400
@24@0:8Q16
i20@0:8i16
i16@0:8
@32@0:8@16@24
@48@0:8@16@24@32@?40
@40@0:8@16@24@32
q24@0:8q16
v24@0:8q16
@32@0:8@16q24
v44@0:8@16q24B32B36B40
v28@0:8@16B24
v20@0:8B16
v48@0:8@16@24@32@40
v44@0:8@16@24@32B40
v40@0:8@16@24@32
v36@0:8@16@24B32
B36@0:8@16@24B32
v24@0:8@?16
v36@0:8B16^B20@?28
@36@0:8@16@24B32
B40@0:8@16@24@32
v24@0:8Q16
Q24@0:8^B16
B32@0:8@16@24
B28@0:8@16B24
Q24@0:8@16
@44@0:8@16@24@32B40
@44@0:8@16B24B28B32^B36
@60@0:8@16@24@32B40B44B48^B52
@28@0:8@16B24
B72@0:8@16@24@32@40@48@56q64
@"UNUserNotificationCenter"
@"UNNotificationCategory"
@"IMBusinessNameManager"
@"CNContact"
@"NSSet"
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
^{_IMDHandleRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16@0:8
^{_IMDChatRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}^{__CFArray}q^{_IMDMessageRecordStruct}q}16@0:8
@"NSMutableArray"
v32@0:8q16@?24
v56@0:8@16@24@32Q40@?48
v36@0:8@16B24@?28
@32@0:8@16^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24
q36@0:8@16B24^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}28
v40@0:8q16q24q32
@24@0:8q16
v32@0:8q16@?<v@?@"IMDMessageRecord">24
v56@0:8@"NSString"16@"NSPredicate"24@"NSArray"32Q40@?<v@?@"NSArray">48
v36@0:8@"NSString"16B24@?<v@?@"IMDMessageRecord">28
v28@0:8@"NSString"16B24
v32@0:8@"NSArray"16@"NSDate"24
v32@0:8@"NSArray"16@?<v@?@"NSArray">24
@"NSArray"24@0:8q16
v40@0:8@"NSAttributedString"16@"NSString"24@"NSDate"32
B32@0:8@16^@24
v52@0:8@16@24B32@36@44
@52@0:8@16@24@32B40@44
B24@0:8@"NSDictionary"16
v52@0:8@"NSDictionary"16@"NSDictionary"24B32@"CSSearchableItemAttributeSet"36@"IMDSpotlightIndexerTimingProfiler"44
@"NSArray"52@0:8@"CSSearchableItemAttributeSet"16@"NSDictionary"24@"NSDictionary"32B40@"IMDSpotlightIndexerTimingProfiler"44
v24@0:8@"IMDSpotlightIndexerTimingProfiler"16
B56@0:8@16@24@32^@40^@48
@40@0:8@16@24B32B36
Q32@0:8@16@24
@"NSDictionary"
v32@0:8Q16@?24
B24@0:8Q16
@32@0:8@16#24
v48@0:8@16@24Q32@?40
v44@0:8@16B24Q28@?36
v52@0:8@16B24@28Q36@?44
@52@0:8@16@24@32@40C48
v44@0:8@16@24C32@?36
@"NSArray"24@0:8@"NSPredicate"16
v48@0:8@"NSPredicate"16@"NSArray"24Q32@?<v@?@"NSArray">40
v44@0:8@"NSPredicate"16B24Q28@?<v@?@"NSArray">36
v52@0:8@"NSPredicate"16B24@"NSDate"28Q36@?<v@?@"NSArray">44
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSArray">24
@"NSArray"52@0:8@"NSArray"16@"NSString"24@"NSString"32@"NSString"40C48
v44@0:8@"NSArray"16@"NSString"24C32@?<v@?@"NSArray">36
v32@0:8@"NSArray"16@?<v@?@"NSDictionary">24
v24@0:8@"NSArray"16
@"NSDictionary"16@0:8
v24@0:8@"NSPredicate"16
v40@0:8@"NSPredicate"16Q24@?<v@?@"NSArray">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40
v40@0:8@16q24@?32
v44@0:8@16@24B32@?36
@32@0:8@16B24B28
B40@0:8@16B24@28B36
@44@0:8@16B24B28@32B40
@48@0:8@16@24B32@36B44
@32@0:8@16Q24
@"NSDateComponentsFormatter"
@"CRRecentContactsLibrary"
B24@0:8@"NSString"16
v40@0:8@"UNMutableNotificationContent"16@"NSString"24@"NSData"32
@"NSArray"16@0:8
@"IMDPersistenceHelloWorldClass_Impl"
v24@0:8d16
v32@0:8@16q24
d16@0:8
@"IMTimingCollection"
@"NSMutableSet"
q24@0:8@16
@32@0:8Q16@24
@32@0:8Q16Q24
v60@0:8@16Q24Q32B40@44@?52
Q40@0:8Q16Q24^B32
@"NSMutableOrderedSet"
B64@0:8@16@24@32@40@48B56B60
v52@0:8@16@24@32^B40B48
Q64@0:8@16@24@32@40@48B56B60
Q28@0:8@16B24
@"NSFileManager"
B32@0:8@16q24
B32@0:8q16@24
@32@0:8@16^@24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"NSPredicate"
v64@0:8@16B24@28@36@44C52@?56
v200@0:8@16{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}24
v208@0:8@16@24{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}32
B40@0:8@16@24^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}32
^{_IMDAttachmentRecordStruct={__CFRuntimeBase=QAQ}q^{__CFArray}}16@0:8
v24@0:8^{CSDBSqliteStatement=^{CSDBSqliteConnection}^{sqlite3_stmt}i}16
@40@0:8@16@24q32
v24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
B24@0:8^{IMDSqlOperation=^v^v^{__CFString}^v{IMDSqlStatement=^vi^{__CFString}^{sqlite3}iii{IMPerfMeasurement_t={IMFileLocation_t=****i}QQ^{__CFString}ddd}}^{__CFError}}16
@"CNContactStore"
@"NSMutableDictionary"
@"IMDContactStoreChangeHistoryEventsHandler"
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
v32@0:8@"NSData"16@?<v@?@"NSError">24
