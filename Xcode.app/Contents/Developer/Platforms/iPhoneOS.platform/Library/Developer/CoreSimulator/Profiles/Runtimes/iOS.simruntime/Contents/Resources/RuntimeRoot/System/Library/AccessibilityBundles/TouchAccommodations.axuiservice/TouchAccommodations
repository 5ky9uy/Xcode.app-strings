v8@?0
TOUCH-ACCOMMODATIONS-SUSPENEDED-DUE-TO-VOICEOVER-ON
TOUCH-ACCOMMODATIONS-ZOOM-CONTROLLER-ENABLED
TOGGLE-USING-TRIPLE-CLICK
TOUCH-ACCOMMODATIONS-ENABLED
TOUCH-ACCOMMODATIONS-UNCONFIGURED
TOUCH-ACCOMMODATIONS-DISABLED
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2790.36.1/TouchAccommodationsUIServer/AXTouchAccommodationsUIServer.m
-[AXTouchAccommodationsUIServer processMessage:withIdentifier:fromClientWithIdentifier:error:]
We were asked to show the Hold Duration triple click help alert without dismissing an earlier alert.
HOLD_DURATION_TRIPLE_CLICK_HELP_FORMAT
HOLD_DURATION_TRIPLE_CLICK_HELP_FORMAT_SUBTITLE
Touch Accommodations wants them
v16@?0q8
HOLD-DURATION-HELP-SUBTITLE
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
holdDurationTripleClickHelpAlertIdentifier
T@"NSString",C,N,V_holdDurationTripleClickHelpAlertIdentifier
touchAccommodationsAlertIdentifier
T@"NSString",C,N,V_touchAccommodationsAlertIdentifier
eventProcessor
T@"AXTouchAccommodationsEventProcessor",&,N,V_eventProcessor
usageConfirmationTimeoutTimer
T@"AXDispatchTimer",&,N,V_usageConfirmationTimeoutTimer
viewController
T@"AXTouchAccommodationsViewController",&,N,V_viewController
Localizable
tapAssistanceProgressTrack
holdDurationProgressTrack
shapeLayerDisc
shapeLayerDot
shapeLayerEmptyTrack
strokeEnd
drawCircleAnimation
TouchAccommodationsUIServer
TouchAccommodationsHIDDispatchQueue
B16@?0@"AXEventRepresentation"8
TouchAccommodationsEventsToReplay
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2790.36.1/Source/TouchAccommodationsUIServer/AXTouchAccommodationsEventProcessor.m
-[AXTouchAccommodationsEventProcessor _bypassForSwipeGestureDueToEvent:]
Should not have been allowed to try to bypass hold duration.
Attempted to bypass with swipe gesture, but neither Hold Duration nor Tap Assistance was in progress
TouchAccommodations
event
T@"AXEventRepresentation",&,N,V_event
initialTouchEvent
T@"AXEventRepresentation",&,N,V_initialTouchEvent
finalTouchEvent
T@"AXEventRepresentation",&,N,V_finalTouchEvent
shouldSendFakeTouchDownIfNeeded
TB,N,V_shouldSendFakeTouchDownIfNeeded
delegate
T@"<AXTouchAccommodationsEventProcessorDelegate>",W,N,V_delegate
init
setDelegate:
setEventProcessor:
setViewController:
defaultCenter
_suspendOrResumeTouchAccommodationsAsNeeded
addObserver:selector:name:object:
_zoomToggledShowController
sharedInstance
touchAccommodationsEnabled
_showBannerWithText:andSubtitleText:
sharedDisplayManager
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
setTouchAccommodationsAlertIdentifier:
eventProcessor
dealloc
zoomShouldShowSlug
setZoomShouldShowSlug:
_enableTouchAccommodations
touchAccommodationsAreConfigured
_disableTouchAccommodations
holdDurationTripleClickHelpAlertIdentifier
hideAlertWithIdentifier:forService:
touchAccommodationsHoldDuration
localizedStringWithFormat:
setHoldDurationTripleClickHelpAlertIdentifier:
beginHandlingHIDEventsForReason:
_handleUsageConfirmation
endHandlingHIDEventsForReason:
touchAccommodationsUsageConfirmed
server
setTouchAccommodationsUsageConfirmed:
setTouchAccommodationsEnabled:
usageConfirmationTimeoutTimer
cancel
showAlert:withHandler:
setUsageConfirmationTimeoutTimer:
hideAlert
afterDelay:processBlock:
parentViewController
addContentViewController:withUserInteractionEnabled:forService:
viewController
removeAllHandTouchMarkers
removeContentViewController:withUserInteractionEnabled:forService:
view
window
_convertPointFromSceneReferenceSpace:
countByEnumeratingWithState:objects:count:
pathLocation
pointWithRespectToSceneReferenceSpace:
valueWithCGPoint:
addObject:
_getPointsArrayFromPathInfoArray:
updateLocationOfHandTouchMarkerAtPoints:
resetProgressTrackOfHandTouchMarkerAtPoints:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
willStartTimersInEventProcessor:
didStopTimersInEventProcessor:
panickedHoldDurationInEventProcessor:
eventProcessor:didUpdateTouchAccommodationsAtPathInfos:
eventProcessor:didResetTouchAccommodationsProgressAtPathInfos:
desiredWindowLevelForContentViewController:userInteractionEnabled:
shouldPreventAutorotatingAllContentViewControllers
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
touchAccommodationsAlertIdentifier
.cxx_destruct
showZoomControllerEnabled
_startingTimers
_stoppingTimers
_holdDurationTripleClickHelpAlertIdentifier
_touchAccommodationsAlertIdentifier
_eventProcessor
_usageConfirmationTimeoutTimer
_viewController
bundleForClass:
localizedStringForKey:value:table:
viewDidLoad
mainScreen
bounds
initWithFrame:
setView:
setUserInteractionEnabled:
sublayers
name
isEqualToString:
removeFromSuperlayer
touchAccommodationsTapActivationMethod
touchAccommodationsTapActivationTimeout
clearColor
_createProgressLayerWithColor:withFilterName:forHoldDuration:
setName:
addSublayer:
whiteColor
layer
count
lastObject
setDisableActions:
begin
objectAtIndex:
CGPointValue
setPosition:
commit
_createLayerAtPoint:
touchAccommodationsHoldDurationEnabled
_createTransformLayerForHoldDuration:
colorWithRed:green:blue:alpha:
_drawFullCircleWithRadius:
setPath:
CGColor
setFillColor:
setLineWidth:
filterWithType:
setStrokeColor:
setCompositingFilter:
setCompletionBlock:
animationWithKeyPath:
setDuration:
numberWithInt:
setFromValue:
setToValue:
addAnimation:forKey:
scale
setContentsScale:
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
CGPath
makeObjectsPerformSelector:
_canShowWhileLocked
_transformLayer
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
touchAccommodationsIgnoreRepeatEnabled
_setTimerState:
registerUpdateBlock:forRetrieveSelector:withListener:
setHIDEventFilterMask:
type
_handleEvent:
setHIDEventHandler:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
invalidate
disableSleepTimer:
_initiateHoldDurationTimer
delegate
event
handInfo
paths
_handleHoldDurationAfterTimerBegan
_initiateTapTimeoutTimer
_handleTapActivationAfterTimerBegan
_initiateIgnoreRepeatTimer
_handleEventAfterTimerEnd
_updateTouchAccommodationsBasedOnTapActivation
_clearEventsToReplayForSwipeGestureBypass
setShouldSendFakeTouchDownIfNeeded:
_endHoldDurationAndAllowTapAssistance:
touchAccommodationsIgnoreRepeatDuration
eventType
_isLiftEvent:
_sendFakeEvent:forTheFirstTime:
_sendFakeEventAfterTimerEnded:
_processTimerEventsFromCurrentState
shouldSendFakeTouchDownIfNeeded
willBeUpdated
generationCount
numberWithLong:
isUpdate
removeObject:
handEventMask
setAdditionalHandEventFlagsForGeneratedEvents:
setUseOriginalHIDTime:
sharedManager
sendHIDSystemEvent:senderID:
_willSendEvent:
copy
setEventType:
resetInitialTouchCountValueForHidStreamIdentifier:
setIsGeneratedEvent:
_sendHIDEventUnconditionally:shouldUseOriginalTime:
sleepForTimeInterval:
initialTouchEvent
setWillUpdateMask:
setDidUpdateMask:
setInitialTouchEvent:
finalTouchEvent
setFinalTouchEvent:
pathIndex
_handleTapActivationMethodActivateOnTouch
_handleTapActivationMethodActivateOnRelease
_pathAtPreviousPointForPathIndex:
_distanceBetweenPath:otherPath:
callStackSymbols
containsObject:
touchAccommodationsAllowsSwipeGesturesToBypass
touchAccommodationsSwipeGestureMinimumDistance
_shouldAllowBypassForSwipeGestures
_pathAtInitialTouchForPathIndex:
_minimumDistanceForSwipeGestureBypass
removeAllObjects
_notifyUserEventOccurred
senderID
_shouldImmediatelySendEvent:
setEvent:
_handleTimerEvents
_bypassForSwipeGestureDueToEvent:
array
acquireAssertionToDisableIdleTimerWithReason:
userEventOccurred
_hidDispatchQueue
_tapTimeoutTimer
_holdDurationTimer
_ignoreRepeatTimer
_updateSetMaintenanceTimer
_sentGenerationsAnticipatingUpdate
_generationsLock
_state
_touchEventAfterIgnoreRepeatTimerBegan
_sleepTimerDisabledAssertion
_lastEventTime
_firstHoldDurationCancelTime
_holdDurationCancelCount
_pointOfReferencePaths
_eventsToReplayForSwipeGestureOnBypass
_eventsToReplayLock
_shouldSendFakeTouchDownIfNeeded
_event
_finalTouchEvent
_initialTouchEvent
_delegate
AXTouchAccommodationsUIServer
AXTouchAccommodationsEventProcessorDelegate
NSObject
AXUIContentViewControllerDelegate
AXUIService
AXTouchAccommodationsViewController
AXTouchAccommodationsEventProcessor
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v32@0:8@16@24
v24@0:8@"AXTouchAccommodationsEventProcessor"16
v32@0:8@"AXTouchAccommodationsEventProcessor"16@"NSArray"24
d28@0:8@16B24
d28@0:8@"UIViewController"16B24
@48@0:8@16Q24@32^@40
B24@0:8Q16
v48@0:8@16Q24@32@?40
@24@0:8Q16
v16@0:8
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
{CGPoint=dd}32@0:8{CGPoint=dd}16
@24@0:8@16
@"NSString"
@"AXTouchAccommodationsEventProcessor"
@"AXDispatchTimer"
@"AXTouchAccommodationsViewController"
@32@0:8{CGPoint=dd}16
@20@0:8B16
@36@0:8@16@24B32
^{CGPath=}24@0:8d16
@"CATransformLayer"
@40@0:8@16i24@28i36
v24@0:8q16
v28@0:8@16B24
B20@0:8I16
v20@0:8B16
d16@0:8
d32@0:8@16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<BSInvalidatable>"
@"NSArray"
@"NSMutableArray"
@"AXEventRepresentation"
@"<AXTouchAccommodationsEventProcessorDelegate>"
Unexpected state for ending hold duration: %ld
Ending hold duration %{public}@
Path moved far enough for bypass: %f points
Path with no initial touch path: %{private}@
Now bypassing hold duration
Clearing events to replay for swipe gesture bypass
HID has been quiesced for 30 seconds but there are still %lu generations anticipating update! This is a bug somewhere in the system! generations: %{public}@
Bypassed hold duration and tap assistance due to %{private}@
Should store potential event %{private}@
