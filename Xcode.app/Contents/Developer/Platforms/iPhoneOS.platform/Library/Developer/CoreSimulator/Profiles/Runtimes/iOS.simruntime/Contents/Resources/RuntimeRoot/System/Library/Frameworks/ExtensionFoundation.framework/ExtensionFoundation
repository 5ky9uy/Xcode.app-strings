@(#)PROGRAM:ExtensionFoundation  PROJECT:ExtensionKit-34.5
v8@?0
EXTENSION_KIT_EXTENSION_TYPE
false
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/EXRunningExtension.m
__TEXT
__swift5_entry
main
record && [record isKindOfClass:LSApplicationExtensionRecord.class]
_extension
[extensionClass isSubclassOfClass:_EXExtension.class]
_EXRunningUIViewServiceExtension
Unable to find class %s
_EXRunningUISceneExtension
EXDefaultScene
com.apple.
EXPresentsUserInterface
EXRequiresSceneHosting
EXSupportsNSExtensionPlistKeys
EXExtensionPrincipalClass
EXPrincipalClass
EXAppExtensionDelegateClass
NSExtensionPrincipalClass
EXExtensionContextClass
EXAppExtensionClass
_EXNSExtensionUIShimExtension
_EXNSExtensionShimExtension
EXConnectionHandlerClass
EXRequiredHostEntitlements
EXRequiredEntitlements
NSExtensionContextHostClass
_EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent
EXConcreteExtension.m
mainRunLoop != NULL
EXAssertionLoggingEnabled
NSExtensionDiscoveryLoggingEnabled
com.apple.foundation.NSExtension
connection
context
discovery
plugin
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
NSUserElection
v24@?0@"<PKPlugIn>"8@"NSError"16
com.apple.extension.global-state-queue
Unable to create null NSExtensions!
UIApplication
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
%@ {id = %@}
%@.%@
_connectionUUID != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension.m
v24@?0@"<NSCopying>"8@"NSError"16
extensionContext != nil
Failed to make extension context for extension: %@ request: %@
Extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
terminating extension to simulate jetsam after launch
v16@?0@"NSError"8
v24@?0@"NSUUID"8@"NSError"16
v24@?0@8@"NSError"16
Extension cancelled by host.
bundleURL != nil
UUID != nil
v20@?0B8@"NSError"12
self.infoDictionary != nil
XPCService
ServiceType
System
_MultipleInstances
NSExtension
NSExtensionDisableTeardownDelay
extensionContextHostClass != nil
The plugin has been invalidated.
__plugIn != nil
!__plugIn.spent
The plugin cannot be restarted.
firstDateIndicatedFor
lastDateManagedOn
extensionState
markedNew
safe plugin queue for NSExtension
plugin != nil
Unable to resolve bundle URL: %@
v24@?0@"NSDictionary"8@"NSError"16
Timed out attempting to resolve bundle!
com.apple.uifoundation-bundle-helper
MCProfileConnection
RunningBoard
manage_all_extensions
v16@?0^{__CFDictionary=}8
com.apple.extension.resolution-queue
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.extension.session
%@:%u
_extensionRequest
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXExtensionContextImplementation.m
CKShare
NSCloudKitShareProvider
UIImage
NSImage
com.apple.extension.protocol-creation
subclassProtocol != NULL
__NSX__HOST__PROTOCOL__
uuid
inputItems
auxVendorProtocol != nil && auxHostProtocol != nil
[self.extensionContext conformsToProtocol:auxHostProtocol.protocol]
v12@?0B8
%@ - UUID: %@ - _isHost: %@
_isDummyExtension:%@
inputItems:
__auxiliaryConnection == nil
com.apple.extension-completion
cpm.apple.extensionkit._EXDiscoveryController
com.apple.private.extensionkit.host.any-extension
B16@?0@"LSExtensionPointRecord"8
com.apple.private.extensionkit.extension-management
v16@?0@"LSExtensionPointRecord"8
NSRunLoop
apple-extension-service
_NSApplicationMain
viewbridge
_UIApplicationMain
viewservice
Application
RunLoopType
_AdditionalSubServices
EnvironmentVariables
CFBundlePackageType
XPC!
break_pk_dep
Launching extension %@(%@) for host %d
("%@")
", "
-AppleLanguages
_SandboxProfile
_OmitSandboxParameters
com.apple.pluginkit.plugin-service
[subservice isKindOfClass:NSString.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Service/EXService.m
Active query: %lx-%d
Connection observer for connection: `%@`
NSExtensionAttributes
NSExtensionActivationRule
extensionItems
attachments
registeredTypeIdentifiers
supportsJavaScript
public.url
com.apple.webarchive
com.apple.active-webpage
B24@?0@"NSExtensionItem"8@"NSDictionary"16
@"NSArray"16@?0@"NSDictionary"8
B24@?0@8@"NSDictionary"16
@"NSArray"16@?0@"NSExtensionItem"8
@"NSArray"16@?0@"NSItemProvider"8
B24@?0@"NSExtensionItem"8@"NSItemProvider"16
v24@?0@8Q16
B32@?0@8Q16^B24
_matchingDictionaryRepresentation
NSExtensionContainingViewControllerClass
00000000-0000-0000-0000-000000000000
extensionIdentity != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXHostConfiguration.m
%@ identity: %@ instance: %@
extension != nil
[extension isKindOfClass:_EXExtensionIdentity.class]
_identifier
[_EXExtensionInstanceIdentifier: %@]
Backoff
sandboxProfile
_AdditionalProperties
aClass == EXGetExtensionContextInternalClass()
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXNSExtensionContextShimImplementation.m
self.internalExtensionContext
[key isEqualToString:@"self.internalExtensionContext"]
@"<_NSExtensionContextInternalImplementation>"8@?0
-[_EXNSExtensionContextShimImplementation shoudAcceptConnection:]
-[_EXNSExtensionContextShimImplementation beginContextRequest:endpoint:reply:]
-[_EXNSExtensionContextShimImplementation cancelRequestWithError:]
-[_EXNSExtensionContextShimImplementation completeRequestReturningItems:completionHandler:]
-[_EXNSExtensionContextShimImplementation initWithInputItems:listenerEndpoint:contextUUID:extensionContext:]
-[_EXNSExtensionContextShimImplementation inputItems]
-[_EXNSExtensionContextShimImplementation _auxiliaryConnection]
resultType
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Query/EXQuery.m
record
_extensionPointIdentifier
_platform
_predicate
EXQuery: extension point %@ platforms: %d
EX Service client notify queue 
-[_EXServiceClient resultWithQuery:]_block_invoke
v24@?0@"_EXQueryResult"8@"NSError"16
-[_EXServiceClient resultWithQuery:]
-[_EXServiceClient fetchResultWithQuery:completionHandler:]_block_invoke
-[_EXServiceClient fetchResultWithQuery:completionHandler:]
v16@?0@"_EXQueryResult"8
-[_EXServiceClient _beginActiveQuery:]_block_invoke
-[_EXServiceClient launchWithConfiguration:error:]_block_invoke
v24@?0@"_EXExtensionProcessHandle"8@"NSError"16
EXQuery async execution queue
Notification queue
@count
NSDictionary
@avg
@max
@min
@sum
B16@?0@8
NSNumber
@distinctUnionOfObjects
@unionOfObjects
@distinctUnionOfArrays
@unionOfArrays
NSArray
@distinctUnionOfSets
NSSet
NSTruePredicate
EXExtensionIsPredicateSafeToExecuteWithObject
NSExtensionActivationDictionaryVersion
NSExtensionActivationUsesStrictMatching
SPECIFIED_COUNT
TYPE
predicate != NULL
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension+Filtering.m
OTHER_TYPES
OTHER_TYPE
Generated predicate %@ for rule %@
ACCEPT
REJECT
TYPES
EXCEPT_TYPES
v32@?0@8@16^B24
REJECTED_TYPES
NSExtensionUseAlternateRules
v32@?0@"NSNumber"8Q16^B24
NSExtensionActivationSupportsLocationWithMaxCount
NSString
length
NSOrderedSet
NSCompoundPredicate
NSComparisonPredicate
NSFalsePredicate
EXExtensionIsSafePredicateOperatorTypeForObjectWithSubquerySubstitutions
valueForKey:
valueForKeyPath:
EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions
path
from:subtract:
add:to:
public.plain-text
com.apple.mapkit.map-item
([rule isKindOfClass:objc_getClass("NSString")] || [rule isKindOfClass:objc_getClass("NSDictionary")])
NSExtension predicate cache
Generating predicate for predicate dictionary %@
Got predicate %@
activation_rules
plist
RULES
GENERIC_ACCEPT
GENERIC_REJECT_EXCEPT_ONE_OTHER_TYPE
GENERIC_REJECT_EXCEPT_MULTIPLE_OTHER_TYPES
GENERIC_ENFORCE_ALL_TYPES
GENERIC_ENFORCE_ANY_TYPE
GENERIC_ENFORCE_ALL_TYPES_WITH_EXCEPTIONS
GENERIC_ENFORCE_ANY_TYPE_WITH_EXCEPTIONS
Unable to load rules from internal property list, aborting. Error: %@
[configuration isKindOfClass:_EXSceneConfiguration.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Scene/EXSceneSession.m
class_conformsToProtocol(configuration.sceneClass, @protocol(_EXScene))
scene
[scene conformsToProtocol:@protocol(_EXScene)]
sceneDelegate
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXExtensionContext.m
-[_EXExtensionContext shouldAcceptXPCConnection:]
-[_EXExtensionContext completeRequestReturningItems:completionHandler:]
@"<NSSecureCoding><NSObject>"24@?0@"NSSet"8^@16
identifier
This class may only be encoded by an NSXPCCoder
endpoint
`_EXPromise` could not be decoded
@24@?0@"NSSet"8^@16
endpoint != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Promise/EXPromise.m
identifier != nil
[classes containsObject:NSObject.class] == NO
v16@?0@"<NSSecureCoding><NSObject>"8
[classes containsObject:NSObject.class]
promiseBlock != nil
_extensionIdentity != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXLaunchConfiguration.m
extension
instanceIdentifier
sandboxProfileName
preferredLanguages
bundleID: %@ instance ID: %@
com.apple.extensionkit.host.extension-point-identifiers
solePersonality
bundleInfoDictionary
__extensionPrincipalClass != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtensionContextVendor.m
_EXAllowedItemPayloadClasses
NSExtensionMainStoryboard
NSExtensionContextClass
%s - %s:%d: Unable to find NSExtensionContextClass (%@) in extension bundle - did you link the framework that declares the extension point?
__extensionContextClass != nil
com.apple.NSExtensionContest-completion-concurrent
NSExtensionShouldCreatePrincipalObject
%s - %s:%d: _extensionContextClass: (%@) returned nil from initializer!
com.apple.NSExtensionContext
[context isKindOfClass:_EXExtensionContext.class]
principalObject != nil
[__extensionPrincipalObjects objectForKey:UUID] == nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/EXExtensionIdentity.m
EXDefaultUserElection
LSSettingsStore
EXAppExtensionAttributes
extensionPointIdentifier
bundleIdentifier
containingBundleRecordIdentifier
platform
UUID
localizedName
containingURL
sdkDictionary
extensionDictionary
attributes
entitlements
userElection
defaultUserElection
Extension identity [%@]: %@ extension point: %@ platform: %u
EXRequiresLegacyInfrastructure
-[_EXExtensionIdentity entitlementNamed:ofClass:]
EXSceneManifest
com.apple.showsInExtensionsManager
_EXHostRequirements
_EXHostableByContainerAppOnly
EXSpotlightIndexable
_EXSandboxProfileName
EXSandboxProfileName
NSExtensionSandboxProfile
EXAlternateSandboxProfileNames
ISIcon
Unable to read plist at %@
Unable to deserialize %@
Extension cache at path [%@] not a dictionary: %@
com.apple.extensionKit.errorDomain
EXPromiseCoderException
%@ Request PK UUID: %@ with item count %lu
System/Library/Frameworks
System/Library/PrivateFrameworks
AppleInternal/Library/Frameworks
SIMULATOR_ROOT
envvar
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/Registration/EXFrameworkScanner.m
System/iOSSupport
AppleInternal
System/iOSSupport/AppleInternal
appexpt
framework
Frameworks
NSExtensionSDK
EXDeclaringPath
EXCatalystSDKVariant
v32@?0@"NSString"8@"NSDictionary"16^B24
appex
v24@?0@"NSURL"8^B16
v24@?0^{__CFBundle=}8^B16
_NSItemProviderIdentifierPayload
_NSItemProviderTypeIdentifierPayload
_NSItemProviderExpectedValueClassPayload
_NSItemProviderOptionsPayload
extensionContextIdentifier
loadedItems
item
error
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSString"8Q16^B24
resourceURL
sandboxExtensionToken
Cannot issue a sandbox extension for file "%@": %s
enabledCount
disabledCount
unelectedCount
query != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Query/EXExtensionAvailability.m
[token isKindOfClass:_EXExtensionAvailablilityObserver.class]
sceneIdentifier
initializationPromise
sizeBridgingOptions
extension-process-background-queue
NSExtensionMainStoryboard~ipad
_UIViewServiceSessionManager
[contextVendor isKindOfClass:EXConcreteExtensionContextVendor.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXNSExtensionShimExtension.m
[extension isKindOfClass:_EXNSExtensionShimExtension.class]
context.class != _EXExtensionContext.class
com.apple.extensionkit
default
registration
signpost
identities
availablility
removedUUIDs
EXActiveQueryUpdate added: %@ removed UUIDs: %@
launchConfiguration
auditToken
serviceListenerEndpoint
sandboxExtensions
Extension: %@ pid: %d
Failed to aquire assertion for pid: %d
processError
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXExtensionProcessHandle.m
System/Library/xpc/extensions.plist
System/Library/xpc/launchd.plist
System/Library/ExtensionKit
AppleInternal/System/Library/ExtensionKit
ExtensionPoints
Extensions
appexlist
AppExtensions
LegacyExtensionPointAllowList
EXExtensionPointDefinitionPath
EXNativeSDKVariant
NSExtensionPointIdentifier
NSExtensionPointName
NSExtensionPointVersion
EXExtensionPointConfiguration
'%@' platform `%d` SDK dictionary: %@'
config
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/Registration/EXEnumerator.m
/System/iOSSupport/
v24@?0@"NSString"8@"NSDictionary"16
/System/
/AppleInternal/System
NSExtensionPrincipalClassProhibited
/System/Library/Frameworks
/System/Library/PrivateFrameworks
v16@?0@"NSURL"8
B24@?0@"NSString"8@"NSDictionary"16
extensionkit.internal
com.apple.extension-kit
ExtensionKit
use_lsd_extensionkitservice_for_discovery
use_lsd_extensionkitservice_for_launch
prefer_inprocess_discovery
reject_extension_requests_with_insecure_input_items
requires_load_operator_secure_decoding
host_requires_entitlements
enforce_legacy_extension_point_allow_list
allow_prototype_api
allow_prototype_spi
assert_on_disallowed_prototype_api_ussage
assert_on_disallowed_prototype_spi_ussage
com.apple.share.AirDrop.send
com.apple.share.Mail.compose
com.apple.messages.ShareExtension
com.apple.share.CloudSharing.invite
automatically_sandbox_extensions
personaUniqueString != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXPersona.m
B24@?0@"_EXExtensionIdentity"8^B16
EXActiveQuery query: %@ observers: %@
hostEndpoint
parameters
scenenEndpoint
com.apple.lsd.extensions
com.apple.extensionkitservice
Class EXGetExtensionClass(void)
Class EXGetExtensionContextInternalClass(void)
Class EXGetExtensionContextVendorClass(void)
info
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/PK Subsystems/EXService_Subsystem.m
_connectionHandler
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/EXConnectionHandlerExtension.m
_principalObject
(_connectionHandler || presentsUserInterface == YES)
[extensionRep isKindOfClass:_EXExtensionIdentity.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/NSExtension+ExtensionKitAdditions.m
NSExtensionContext cannot accept connections in non-extension processes
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
IPHONE_SIMULATOR_ROOT
ProductVersion
%d.%d.%d
Unrecognized extension type: '%s'
%s - %s:%d: Unrecognized extension type: '%s'
SwiftUI: Swift entry point section not found in the current image
SwiftUI: Swift entry point data not found.
SwiftUI: Swift entry point address could not be determined.
SwiftUI: Falling back to main function lookup via dlsym().
%s - %s:%d: Invalid bundle record for current process: %@
PRE: swift entry point
POST: swift entry point
SwiftUI: Initialized extension with bundle ID '%@'.
SwiftUI: Unable to find entry point function for extension with bundle ID '%@'.
Falling back to delegate class lookup.
%s - %s:%d: Extension class '%@' must be a subclass of '%@'
%s - %s:%d: Unexpected nil EXExtension instance
PRE: -[%@ init]
POST: -[%@ init]
extensionkit-lifecycle
No value for 'EXAppExtensionDelegateClass' found, extension delegate is not specified
No extension delegate specified, that's ok.
Pinging launchd
launch
exit
Starting service listener.
Incoming service level XPC connection: %@
-shouldAcceptXPCConnection:
Will finish launching extension: %@
-willFinishLaunching
Did finish launching extension: %@
-didFinishLaunching
Failed to load extension context class '%@', does the appex link the extension point framework?
Failed to load connection handler class.
EXConnectionHandlerClass must conform to %@.
discovering extensions
discovered extension: %{public}@, uuid: %@
errors encountered while discovering extensions: %{public}@
discovered extension: %{public}@, url: %@
discovered extensions: attributes %@, extensionSet %{public}@
%@ Making host default XPC interface, allowed payload classes: %@, allowed error classes: %@
%s - %s:%d: _connectionUUID is required for process per request!
Making extension context and XPC connection for %@ request: %@
%s - %s:%d: Unable to initialize extension context class: %@
extension connection was interrupted! request: %@; plugin_identifier: %@
extension connection was invalidated! request: %@; plugin_identifier: %@
Failed to make extension context for extension: %@ request: %@
extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
could not terminate extension: %{darwin.errno}d
terminated extension with pid %d
%@ Finished making extension context: %@ and connection: %@
%@ really begining request: %@ synchronously: %s
Unable to setup extension context - error: %@
%@ Did begin request: %@ context UUID: %@
UUIDs did not match!
Extension request contains input items but the extension point does not specify a set of allowed payload classes. The extension point's NSExtensionContext subclass must implement `+_allowedItemPayloadClasses`. This must return the set of allowed NSExtensionItem payload classes. In future, this request will fail with an error.
%@ request %@ is valid: %s
async extension request
begin async extension request %@
Async Begin using error: %@
begin extension request %@ complete with identifier: %@
Async Begin using internal completion handler called multiple times. Due to error after initial completion: %@
Async Begin using internal completion handler called multiple times. Due to error before initial completion for request: %@
Async Begin using internal completion handler called multiple times. For unknow reasons. (request ID: %@ error: %@)
begin extension request %@ complete with error: %@
async extension request'
synchronus extension request
synchronus begin extension request %@
Failed to begin using with error: %@
completed synchronus begin extension request %@ with identifier: %@ error: %@
synchronus extension request'
nil service connection for UUID: %@
Unable to use extension bundle: %@
%s - %s:%d: Unable to fetch URL for plugIn!
%s - %s:%d: PlugIn's UUID is nil!
Unable to communicate with bundle helper: %@
Cannot access privacy settings for %@: %@
Timed out attempting to resolve bundle!
completing extension request
tear down extension request
cancelling extension request
in completeTearDown block
%s - %s:%d: infoDictionary is not available
%s - %s:%d: Unable to load host extension context class: %@
Attempt to reuse spect multi instance extension. Request will fail with error: %@
begin using plugin
Assertion invalidated: Invalidating XPC connection %@ 
Aquired asertion %@ for running extension with pid %d
%s - %s:%d: attempting to message a nil plugin!
%s - %s:%d: attempting to message a spent plugin!
Plugin %@ must have pid! Extension request will fail
Failed to aquire assertion for plugin: %@ pid: %d
BeginUsing: PluginKit responded for requesr: %@ with error: %@
Unable to acquire process assertion in beginUsing: with plugin identifier: %@, killing plugin
PlugInKit error in beginUsing: with plugin identifier: %@, killing plugin
BeginUsing: Calling into PluginKit plugin: %@ requestUUID: %@
EndUsing failed to endUsing extension %@with error: %@
EndUsing: Calling into PluginKit plugin: %@ requestUUID: %@
Client requested termination of extension %@ with signal: %d 
teardown requested for request %@ to extension %@ but no such request was issued, or the request already completed or canceled earlier.
tearing down extension request %@ to extension %@ (last known pid %d)
Schedule request '%@' assertion (%@) cleanup after %llu seconds.
Begining request '%@' assertion (%@) cleanup.
Completed request '%@' assertion (%@) cleanup.
__plugin endUsing for '%@' returned error: %@
%s - %s:%d: can't get info dictionary keys from a nil plugin
in EXConcreteExtensionTearDownRequestCompletion for plugin pid %d
Derived context: %@
%s - %s:%d: unexpected nil `_extensionRequest`
Setting allowed payload classes: %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented. Setting the allowed payload classes to %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented, the interface will not support NSExtensionItems in the request completion handler.
%s - %s:%d: unexpected nil subclass aux host protocol!
%@ initialized with inputItems: %@ endpoint: %@ UUID: %@ extensionContext: %@
%@ initialized with inputItems: %@ UUID: %@ 
_initializeAuxillaryConnectionWithListenerEndpoint: %@ - extensionContext: %@ auxVendorProtocol: %@ auxHostProtocol:%@
%s - %s:%d: must define both host and vendor aux protocols!
AUX connection created: %@
%@ : AUX connectino has already been created for endpoint '%@'.
%s - %s:%d: Class %@ does not conform to aux host protocol: %@
AUX Listener created: %@
%@ : AUX Listener has already been created.
invalidated extension context: %@
preparing to call _completeRequestReturningItems:forExtensionContextWithUUID: UUID: %@
completing request
completing request - consume items
completing request - completion part 1
completing request - completion part 2
call _completeRequestReturningItems:forExtensionContextWithUUID:
calling out to _completeRequestReturningItemsSecondHalf
preparing to call _cancelRequestWithError:forExtensionContextWithUUID: UUID: %@
cancelling request
cancelling request - teardown
opening URL
opening URL completion
failed to ping host: %@
%s - %s:%d: listener is one-shot!
New connection: %@ for listener: %@ interface: %@
in _NSExtensionCompleteRequestReturningItemsContinuation
Skipping host app record lookup for system extension point: %@
Extension point: '%@' has no parent app.
Extension point '%@' is declared by the Host, allowing discovery.
Failed to get LSExtensionPointRecord for extension point identifier '%@' platform: '%d'
%@ Adding observer '%@' for query '%@'
New active query '%@'
%@ LS database observing started.
%@ Cannot run query `%@` with error: `%@`
%@ Removing observer '%@' for query '%@'
%@ No more observers for query '%@'
%@ LS database observing stopped
Extesnsion has already been evaluated: %@
Resolved host app record: %@
Unable to resolve host app record for query: %@ error: %@
Extension %@ is enabled
Extension %@ is unelected
Extension %@ is disabled
Cannot run query `%@` with error: `%@`
%@ query '%@' completed with results: `%@`
Database changed
Settings changed
Received SIGTERM, exiting.
Failed to add service with status: [%d] %s 
%@ Overriding sandbox profile name: `%@`
Launched extension `%@` pid %d
Adding extension service sandbox extension for host pid %d
%s - %s:%d: Unexpected subservice class %@
Adding '%@'subservice sandbox extension for host pid %d
Could not acquire assertion for extension: %@, pid: %d, error: %@
RBSLaunchRequest error launching extension `%@` error: `%@`
Recieved connection request from '%d'
Createing interface for launch for connection request from '%d'
Createing interface for dicovery and launch for connection request from '%d'
Createing interface for dicovery for connection request from '%d'
Starting XPC listener for connection request from '%d'
No XPC interface available. XPC listener was *not* started for connection request from '%d'
Cannot run query `%@` for host process %d with error: `%@`
Connection invalidated: %@
Connection interupted: %@
Preparing extension %@ for host: %@
launched extension process: %@
Instance '%@' released so its asertion can be invalidated.
failed to launch extension process with error: %@
-extensionsWithQuery: failed with error: %@
Notifying client with pid `%d` of querie `%@` update: %@
Starting ExtensionKit service for discovery `%s`, launch `%s`
ExtensionKit service is disabled and will not start.
Initializing %@.
Calling main function at address %lx.
Extension 'main() returned EXIT_FAILURE'
Failed to find the 'main()' function in the main binary.
%@ - Begin using bunde %@ with personality: %@ personality.
SwiftUI: Process mach header not found.
Input items match active web page alternative.
Applying active web page alternative to items: %@ matching rule %@
Failed to locate LSApplicationExtensionRecord for %@
%s - %s:%d: Unexpected nil extension identity
%s - %s:%d: Unexpected nil extension representing
%s - %s:%d: Invalid extension class %@
Vending RBSProcessIdentity for: %@ with host: %@ 
%s - %s:%d: Sandbox profile name required
%@ Requesting sandbox profile name: `%@`
failed to obtain execPath
Created trusted extension rep from extension bundle ID: %@
Host %d is not entitled to launch extension %@ error: %@
Extension %@ requires legacy infrastructure.
Unexpected sandbox profile name `%@` specified in launch configuration.
Successfuly configured launch context for: %@ instance: %@ host: %@
Failed to get extecutable path for: %@ with error: %@
%s - %s:%d: Unexpected class for decoding
%s - %s:%d: Unexpected key for decoding
%s - %d: Unsupported method: %s
%s - %d: Unsupported initializer: %s
%s - %d: Unsupported property access: %s
%s - %s:%d: Abstract method called.
EXQuery<%lx> evaluating: %@ match: %s
Unable to resolve host app record for query: %@, error: %@
extension point not found for query `%@`
Enumerating all available extensions for host: %@
Remote query change notification %@
Remote availablility change notification
%s failed with error: %@
Running %s in remotely.
Failed to aquire assertion: %@
Execute queries sync
Execute queries async
Resuming Query observer: '%@'
Suspending Query observer: '%@'
Query result update
Query results update: To add: '%@'
Query results update: To remove UUIDs: '%@'
Query results: removing '%@'
Query results did change: %@
Update original results:
updated results:
Use of NSTruePredicate is forbidden: %@
%s: NSPredicate considered unsafe: %@
%s - %s:%d: Unable to create predicate!
%s: NSPredicateOperator considered unsafe: %ld
%s: Key%@ "%@" not safe to evaluate with %@
%s: Operand expression not safe to execute %@
%s: No operand expression
%s: Keypath not of expected class (%@, %@)
%s: Argument expression not safe to execute %@
%s: Unexpected number of arguments %ld
%s: Unsafe operand %@
%s: Unexpected selector name %@
%s: Unexpected NSExpression type %ld
%s: Expression considered unsafe: %@
%s - %s:%d: Unable to parse rule which is not either a string or a dictionary - type: %@
Generating predicate from dict: %@
Failed to get NSURLIsDirectoryKey property for URL '%@' with error '%{public}@'
Failed to get NSURLIsApplicationKey property for URL '%@' with error '%{public}@'
Extension `%s` of type: `%s` launched.
%@ allocated
%@ deallocated with identifier: '%@'
dealloc
Session connection request from '%d': Recieved 
XPC interface successfully configured for session %@, accepting connection.
-[EXSceneSession shouldAcceptXPCConnection:]
XPC interface invalidated for session '%@'.
XPC connection invalidate
Preparing for connection scene session extension: %@
%s - %s:%d: Unexpected configuration class '%@' expected '%@'
%s - %s:%d: Scene class %@ must conform to `%@`
Making scene of class '%@'
Scene is: %@
%s - %s:%d: Failed to create scene of class '%@'
%s - %s:%d: Scene %@ must conform to `%@`
Making UI scene delegate of class '%@'
UI scene delegate is: %@
%s - %s:%d: Failed to create UI scene delegate of class '%@'
ID: %@
Begin session: %@
PRE: -[EXSceneSession makeSceneWithError:]
POST: -[EXSceneSession makeSceneWithError:]
PRE: -[EXSceneSession connectToScene:]
POST: -[EXSceneSession connectToScene:]
Initialized
Failure
invalidate
%s - %d: Abstract method called: `%s` on class: `%@`
'%s' called with items. This is not supported!
Deallocating promise `%@`
`_EXPromise` %@ is only encodable using an `NSXPCCoder`
Registering promise to send over XPC connection: %@
%s - %s:%d: endpoint is nil
%s - %s:%d: identifier is nil
%s - %s:%d: `classes` contains `NSObject`
Promise `%@` registered
%s - %s:%d: promiseBlock is nil
Promise `%@` unregistered
Failed to resolve promise: %@
Failed to resolve, no promise with identifier %@
Failed to get audit token for current process: %llx
Host is missing entitlement: %@ : %@
Cecking in with launchd immediately
Scheduling launchd after initial event
%s - %s:%d: Unable to find NSExtensionPrincipalClass (%@) in extension bundle! Please verify that the extension links the required frameworks and that the value for NSExtensionPrincipalClass is prefixed with '$(PRODUCT_MODULE_NAME).' if the class is implemented in Swift.
NSExtensionPrincipalClass `%@` does not conform to NSExtensionRequestHandling protocol!
beginning request with UUID: %@ with endpoint: %@ for items: %@
beginning extension request
tearing down context in extension due to interruption
tearing down context in extension due to invalidation
error from host: %@
creating principle object: %@ - with extensionContext %@
view services will create object for extensionContext: %@
in _willPerformHostCallback: block ( UUID: %@ error: %@ )
tearing down extension context
%s - %s:%d: The extension point's EXExtensionContextClass class (%@) must be a subclass of `_EXExtensionContext`
%s - %s:%d: principal object cannot be nil!
%s - %s:%d: There is already a principal object (%@) for UUID (%@)
%s - %s:%d: %@ cannot be decoded.
Failed to locate container app bundle record. The process may not be entitled to access the LaunchServices database or the app may have moved.
%s - %s:%d: _EXExtensionIdentity subclass must implement '%s'
Make extension XPC connection
making XPC connection for extension: %@
Failed to make xpc connection for extension %@  (extension launch failed)
Extension delegate class is `%@`
Extension delegate is: %@
%s - %s:%d: getenv( "SIMULATOR_ROOT" ) returned NULL
NSExtensionSDK found in '%@'
failed to load file at `%@` with error: `%@`
Failed to parse extension point definition with error: `%@`
Extension point declaration `%@` found.
Updating catalyst SDK variant with definition from `%@`
Updating native SDK variant with definition from `%@`
Scanning bundle for AppExtensions at : `%@`
Discoverd App Extension: `%@`
Scanning frameworks at '%@'
Processing: %@
Failed to issue sandbox token for URL: '%@' with error: '%@'
Decoded URL: `%@` sandbox token: `%@`
Failed to attach sandbox extension to URL: '%@'
Encoding URL: `%@` sandbox token: `%@`
Issuing sandbox extension for URL: `%@` to pid: `%d`
%s - %s:%d: nil query
%s - %s:%d: invalid observer token
Failed to create extensionProcess for extension '%@' error: %@.
NSExtensionPrincipalClass could not be resolved to class!
NSExtension shim launched with principal class: %@
%s - %s:%d: Unexpected _NSExtensionContextVendor class (%@) must be of type `_NSExtensionContextVendor`
%s - %s:%d: Unexpected extension class '%@'
Failed to consume sandbox extension. Token is NULL
Failed to consume sandbox extension `%s` - errno=%{darwin.errno}d
Consumed sandbox extension `%s` -> %llu
Extending the sandbox for `%@` extensionProcess pid: `%d`.
Failed to consume sandbox extension for app extension: %@ pid: `%d`
Creating connection for extension withidentifier: '%@'
Failed to create connection for extension withidentifier: '%@'
Assertion for extension process '%@' invalidated
Invalidating connection '%@'
Informing process observer '%@' of extension process invalidation
new process %@ was created in a race and is valid, returning it.
created new process %@.
New process is nil.
%s - %s:%d: Process is nil with no error!
existing process %@ is valid, returning it.
Failed to load or create cache extension/extension point info.
extensionURLEnumerator
_extensionLiveEnumerator
extensionPointDefinitionEnumerator
_extensionPointLiveEnumerator
Empty definition for `%@`
Failed to read extension point cache at URL `%@` with error: `%@`
Translating SDK Dictionary: %@
Translated SDK Dictionary: %@
Extension point '%@' - Synthesized NSExtension dictionary: %@ -> %@
Extension point '%@' - flattened EXExtensionPointConfiguration dictionary: %@ -> %@
NSExtension Extension Point identifier: %@ is legacy: %s
Rejected invalid Extension Point `%@` targeting DEPRECATED NSExtension infrastructure!
New Extension Point `%@` targeting DEPRECATED NSExtension infrastructure!
NO list of legacy extension points found. All extension points are considered valid... for now.
[%d] Enumerator returning: '%@'
Discovered list of App Extension paths '%@'
unexpected class for entry in %@ extension list.
Looking for caches at URLs: %@ with know paths: %@
Discovered App Extension at '%@'
Discovered cached App Extension paths '%@'
Excluding extension at path: `%@`
%s - %s:%d: Persona unique string should not be nil
[%@] Sending initial observer update to %@
[%@] Sending observer update to %@
[%@] Skipping observer update to %@
%s returning %@
Initializing 'EXService_Subsystem'
Begin using %@ for bundle %@
%s - %s:%d: Failed to get extension info  for current process
NSRunLoop type detected. Start listening with imediate launchd checkin.
%@ (non-NSRunLoop) type detected. Start listening with delayed launchd checkin.
Creating connection handler of class `%@` with principal object `%@`
%s - %s:%d: Failed to instantiate connection handler: `%@`
%s - %s:%d: Failed to instantiate principal object: `%@`
Creating connection handler of class `%@` with nil principal object
%s - %d: Failed to instantiate connection handler class: `%@` principal class: `%@`
%s - %s:%d: Failed to instantiate connection handler class: `%@`
%s - %s:%d: Unexpected input type with class: `%@`
Errors encountered while discovering extensions: %{public}@
UUID not found for extension representation: %@
Setting preferred languages on %@: %@
Extension point not found for: %@ with error: %@
softlink:r:path:/System/Library/Frameworks/ExtensionKit.framework/ExtensionKit
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
_EXRunningExtension
NSXPCListenerDelegate
NSObject
_EX_LSExtensionPointRecord_
_EXConnectionHandler
Configuration
_EXExtensionConfigurationProviding
_EXExtensionPointConfigurationProviding
_EXDictionaryLike
EXConcreteExtension
ExtensionStateManagement
NSExtensionBundleHelper
EXExtensionPointCatalog
ExtensionKitAdditions
EXExtensionContextHosting
EXExtensionContextVending
_NSExtensionAuxHostingBase
EXExtensionContextImplementation
NSSecureCoding
NSCoding
NSCopying
_NSExtensionContextInternalImplementation
_EXDiscoveryController
LSObserverDelegate
_EXServiceDelegate
_EXService
_EXServiceProtocol
_EXConnectionActiveQueryObserver
_EXActiveQueryObserver
EXSwiftUI_Subsystem
PKModularService
NSExtensionActiveWebPageAlternative
_EXRunningExtensionInfo
EXExtensionInfoProviding
_EXHostConfiguration
_EXExtensionInstanceIdentifier
RBSProcessIdentity
Overlay
_EXDecoderHack
_EXNSExtensionContextShimImplementation
_EXNSExtensionShimExtensionXPCProtocol
_EXQuery
_EXRecordQuery
_EXValuesQuery
Execution
_EXActiveClientQuery
EXQueryResultsProtocol
_EXServiceClient
_EXSceneConfiguration
_EXQueryController
_EXServiceClientObserver
Deprecated
_EXQueryObserver
_EXQueryControllerDelegate
EXTransaction
_EXExtensionPredicateBuilder
Filtering
_EXSceneSessionExtensionXPCProtocol
_EXSceneSessionHostXPCProtocol
_EXScene
_EXSceneSession
_EXExtensionContext
_EXPromise
_EXPromiseManagerXPCProtocol
_EXPromiseManager
_EXLaunchConfiguration
NSExtensionRequestHandling
EXConcreteExtensionContextVendor
_EXExtensionRecordIdentity
_EXExtensionValueIdentity
_EXExtensionIdentity
_EXExtensionRepresenting
_EXExtension
EXExtensionRequest
EXFrameworkScanner
_EXItemProviderExtensionVendorLoadOperator
_EXItemProviderLoading
_EXItemProviderCopyingLoadOperator
_EXItemProviderSandboxedResource
_EXExtensionAvailablility
_EXExtensionAvailablilityObserver
Observer
_EXSceneSessionParameters
_EXExtensionProcess
_EXExtensionProcessObserver
EXUIKit_Subsystem
_EXNSExtensionShimExtension
_EXNSExtensionShimScene
_EXQueryResult
_EXQueryResultUpdate
_EXSandboxExtension
_EXExtensionProcessHandle
_EXExtensionProcessMannger
_EXSceneSessionManager
_EXExtensionPoint
EXExtensionPoint
EXEnumeratorConfig
EXEnumerator
EXExtensionPointEnumerator
EXOSExtensionEnumerator
_EXDefaults
_EXPersona
_EXActiveQuery
_EXSceneSessionConnectionRequest
_EXSceneSessionConnectionResponse
_EXDiscoveryServiceProtocol
_EXLaunchServiceProtocol
EXService
EXService_Subsystem
_EXMainConnectionHandler
_EXConnectionHandlerExtension
EXXPCUtil
currentProcess
hostProcess
auditToken
bundleRecordForCurrentProcess
initWithApplicationExtensionRecord:
configuration
entryPointFunction
setInternalRep:
setHasSwiftEntryPoint:
extension
bundleIdentifier
extensionClass
isSubclassOfClass:
principalClass
loadDelegateWithClass:
checkInWithLaunchd
_startWithArguments:count:
resume
checkIn
willFinishLaunching
serviceListener
setDelegate:
_queue
didFinishLaunching
shouldAcceptXPCConnection:
shouldAcceptConnection:
sharedInstance
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
startWithArguments:count:
setExtension:
hostAuditToken
signpost
.cxx_destruct
_extension
_configuration
_signpost
_hostAuditToken
T@"_EXExtension",&,N,V_extension
T@"<_EXExtensionConfigurationProviding>",R,V_configuration
T{?=[8I]},R,V_hostAuditToken
TQ,R,V_signpost
initWithIdentifier:platform:parentAppRecord:error:
initWithIdentifier:platform:error:
parentAppRecord
_EX_initWithIdentifier:platform:parentAppRecord:error:
_EX_parentAppRecord
T@"LSApplicationRecord",R
sdkDictionary
extensionPointConfiguration
_EX_boolForKey:
presentsUserInterface
platform
requiresSceneHosting
_EX_stringForKey:
attributes
objectForKeyedSubscript:
supportsNSExtensionPlistKeys
extensionDictionary
initWithUTF8String:
stringByAppendingFormat:
extensionContextClass
extensionPointIdentifier
stringByAppendingString:
type
connectionHandlerClass
requiredHostEntitlements
internalServiceName
serviceName
TB,R
T@"NSDictionary",R
T@"NSString",R
T#,R,D
T@"NSDictionary",R,D
TB,R,D
objectForKey:ofClass:
_EX_dictionaryForKey:
hasPrefix:
hostRequiresEntitlements
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
initializeFiltering
copy
extensionsWithMatchingAttributes:synchronously:completion:
defaultHost
countByEnumeratingWithState:objects:count:
_initWithPKPlugin:
addObject:
allObjects
discoverPlugInsForAttributes:flags:found:
extensionWithIdentifier:excludingDisabledExtensions:error:
numberWithInteger:
stringValue
extensionsWithMatchingAttributes:error:
firstObject
findPlugInByUUID:reply:
findPlugInByPathURL:reply:
continuouslyDiscoverPlugInsForAttributes:flags:found:
cancelPlugInDiscovery:
_init
identifier
version
bundleInfoDictionary
localizedName
localizedShortName
objectForKey:
launchPersonas
personaUniqueString
personaWithPersonaUniqueString:
_wantsProcessPerRequest
UUID
createInstanceWithUUID:
exceptionWithName:reason:userInfo:
allValues
setInvalidationHandler:
setInterruptionHandler:
invalidate
sharedApplication
defaultCenter
removeObserver:name:object:
dealloc
uuid
_plugIn
stringWithFormat:
userElection
setUserElection:
globalStateQueueForExtension:
_extensionBundle
_allowedItemPayloadClasses
initWithServiceName:
_extensionContextVendorProtocolWithAllowedErrorClasses:
setRemoteObjectInterface:
_extensionContextHostProtocolWithAllowedPayloadCompletionClasses:AllowedErrorClasses:
setExportedInterface:
setExportedObject:
_xpcConnection
getUUIDBytes:
makeExtensionContextAndXPCConnectionForRequest:error:
_reallyBeginExtensionRequest:synchronously:completion:
_hostContextClass
inputItems
initWithInputItems:
_UUID
internalImplementation
setExtensionRequest:
setObject:forKey:
_bareExtensionServiceConnection
requestInterruptionBlock
setContext:
errorWithDomain:code:userInfo:
setXpcConnection:
assertion
valid
allowSimulatedJetsam
options
_plugInProcessIdentifier
context
xpcConnection
localizedDescription
endpoint
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
_setExtensionVendorProxy:
_auxiliaryListener
_didCreateExtensionContext:
_beginRequestWithExtensionItems:listenerEndpoint:withContextUUID:completion:
count
containsObject:
rejectExtensionRequestsWithInsecureInputItems
_EX_parameterError
setOptions:
setInputItems:
_beginExtensionRequest:completion:
_beginExtensionRequest:error:
setEndpoint:
applyActiveWebPageAlternativeIfNeededForExtension:
setAssertion:
_reallyBeginExtensionRequest:completion:
validateRequest:error:
_safelyBeginUsingWithRequest:readyHandler:
_beginUsingAndCreateExtensionAssertionWithRequest:error:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:
beginExtensionRequestWithInputItems:listenerEndpoint:completion:
beginExtensionRequestWithInputItems:listenerEndpoint:error:
_requestPostCompletionBlock
processIdentifier
_shouldSendHostApplicationStateNotifications
_hostWillEnterForegroundNote:
addObserver:selector:name:object:
_hostDidEnterBackgroundNote:
_hostWillResignActiveNote:
_hostDidBecomeActiveNote:
_internalPersonas
__UIKit_upcall_icons
useBundle:error:
initWithURL:
attachments
_loadOperator
__queryPhotoServiceAuthorizationStatusForPlugInUUID:completion:
requestCompletionBlock
_requestPostCompletionBlockWithItems
requestCancellationBlock
requestTeardownDelay
_extensionContextForUUID:
_itemProviderForPayload:extensionContext:
UTF8String
currentConnection
objectWithItemProviderData:typeIdentifier:error:
_loadItemOfClass:forTypeIdentifier:options:coerceForCoding:completionHandler:
_loadPreviewImageOfClass:options:coerceForCoding:completionHandler:
__UI_upcall_openURL:completion:
infoDictionary
isEqualToString:
boolValue
pluginConnection
spent
set_stashedPlugInConnection:
pkUUID
_kill:
persona
launchRequestWithUUID:launchPersona:
sandboxProfileName
setSandboxProfile:
beginUsingRequest:error:
beginUsingWithError:
beginUsingRequest:completion:
beginUsing:
_safelyBeginUsingSynchronously:request:readyHandler:
_safelyEndUsingRequestWithPKUUID:processAssertion:continuation:
endUsingRequest:completion:
endUsing:
_killConnection:
_stashedPlugInConnection
extensionContexts
_processAssertion
_setProcessAssertion:
_extensionVendorProxy
_hostWillEnterForegroundForContextUUID:completion:
_hostDidEnterBackgroundForContextUUID:completion:
_hostWillResignActiveForContextUUID:completion:
_hostDidBecomeActiveForContextUUID:completion:
initialize
_shouldLogExtensionDiscovery
extensionsWithMatchingAttributes:completion:
extensionWithIdentifier:error:
extensionWithUUID:completion:
extensionWithURL:completion:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
init
optedIn
attemptOptIn:
attemptOptOut:
beginExtensionRequestWithOptions:inputItems:completion:
beginExtensionRequestWithOptions:inputItems:error:
beginExtensionRequestWithInputItems:completion:
beginExtensionRequestWithInputItems:error:
cancelExtensionRequestWithIdentifier:
pidForRequestIdentifier:
objectForInfoDictionaryKey:
_personas
icons
_isPhotoServiceAccessGranted
_completeRequestReturningItems:forExtensionContextWithUUID:completion:
_cancelRequestWithError:forExtensionContextWithUUID:completion:
_loadItemForPayload:contextIdentifier:completionHandler:
_loadPreviewImageForPayload:contextIdentifier:completionHandler:
_openURL:completion:
_isSystemExtension
_safelyBeginUsing:
_safelyEndUsing:
_dropAssertion
_localizedName
_localizedShortName
connectionUUID
setConnectionUUID:
_setPlugIn:
_extensionServiceConnections
_setExtensionServiceConnections:
_extensionExpirationIdentifiers
_setExtensionExpirationsIdentifiers:
_extensionContexts
_setExtensionContexts:
setRequestCompletionBlock:
setRequestCancellationBlock:
setRequestInterruptionBlock:
set_requestPostCompletionBlock:
set_requestPostCompletionBlockWithItems:
_allowedErrorClasses
_setAllowedErrorClasses:
_isObservingHostAppStateChanges
_setObservingHostAppStateChanges:
wantsDedicatedQueue
setWantsDedicatedQueue:
_unfairLock
_observingHostAppStateChanges
_identifier
_version
_attributes
_infoDictionary
__localizedName
__localizedShortName
_extensionPointIdentifier
_connectionUUID
__plugIn
__internalPersonas
__extensionServiceConnections
__extensionExpirationIdentifiers
__extensionContexts
__stashedPlugInConnection
_requestCompletionBlock
_requestCancellationBlock
_requestInterruptionBlock
__requestPostCompletionBlock
__requestPostCompletionBlockWithItems
__extensionBundle
__allowedErrorClasses
_wantsDedicatedQueue
T@"NSString",R,C,V__localizedName
T@"NSString",R,C,V__localizedShortName
T@"<PKPlugIn>",&,S_setPlugIn:,V__plugIn
T@"NSBundle",R,&,N,V__extensionBundle
T@?,C,V__requestPostCompletionBlock
T@?,C,V__requestPostCompletionBlockWithItems
Td,R
T@"NSUUID",C,N,V_connectionUUID
Tq,N,V_wantsDedicatedQueue
T@"NSMutableDictionary",&,N,S_setExtensionExpirationsIdentifiers:,V__extensionExpirationIdentifiers
T@"NSMutableDictionary",&,N,S_setExtensionServiceConnections:,V__extensionServiceConnections
T@"NSMutableDictionary",&,N,S_setExtensionContexts:,V__extensionContexts
_extensionState
T@"NSDictionary",C,D,N,G_extensionState,S_setExtensionState:
T@"NSSet",C,N,S_setAllowedErrorClasses:,V__allowedErrorClasses
observingHostAppStateChanges
TB,N,G_isObservingHostAppStateChanges,S_setObservingHostAppStateChanges:,V_observingHostAppStateChanges
T@,&,V__stashedPlugInConnection
T@"NSArray",R,V__internalPersonas
extensionState
setExtensionState:
valueForKey:
currentCalendar
date
components:fromDate:toDate:options:
mutableCopy
willChangeValueForKey:
_setExtensionState:
didChangeValueForKey:
dictionary
_isMarkedNew
_didShowExtensionManagementInterface
_didShowNewExtensionIndicator
_resetExtensionState
removeObjectForKey:
_pkUUID
localizedInfoDictionaryForKeys:completion:
__localizedInfoDictionaryObjectForKeys:withPlugInUUID:completion:
interfaceWithProtocol:
sharedConnection
mainBundle
allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:localAppBundleID:localAccountIsManaged:
isFileURL
initWithContentsOfURL:auditToken:error:
servicePidFromXPCConnection:
initWithPID:flags:reason:name:
acquire
extensionPointDefinitionEnumerator
initWithEnumerator:
setObject:forKeyedSubscript:
extensionPointForIdentifier:platform:
extensionPointForIdentifier:
extensionPointByIdentifierPlatform
_extensionPointByIdentifierPlatform
T@"NSDictionary",R,V_extensionPointByIdentifierPlatform
_derivedExtensionAuxiliaryHostProtocolWithContextClass:
_derivedExtensionAuxiliaryHostProtocol
setPkUUID:
setWithObjects:count:
_extensionContextHostProtocolAllowedClassesForItems
setClasses:forSelector:argumentIndex:ofReply:
setWithObject:
setByAddingObject:
_defaultExtensionContextVendorProtocol
_sharedExtensionContextVendor
_extensionAuxiliaryHostProtocol
protocol
___nsx_pingHost:
initWithCapacity:
initWithExtensionContextIdentifier:
set_loadOperator:
_initializeAuxillaryConnectionWithListenerEndpoint:
decodeObjectOfClass:forKey:
encodeObject:forKey:
extensionContext
_extensionAuxiliaryVendorProtocol
initWithListenerEndpoint:
anonymousListener
_setExtensionHostProxy:
_setTransaction:
_extensionHostProxy
_extensionHostAuditToken
initWithItemProvider:destinationProcessAuditToken:
_completeRequestReturningItemsSecondHalf:
_tearDownContextWithUUID:
_isHost
_isDummyExtension
didConnectToVendor:
_extensionContextForIdentifier:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
completeRequestReturningItems:completionHandler:
cancelRequestWithError:
openURL:completionHandler:
initWithInputItems:listenerEndpoint:contextUUID:extensionContext:
_auxiliaryConnection
_requestCleanUpBlock
_setRequestCleanUpBlock:
_principalObject
T@"NSArray",R,C
T@"NSUUID",R,C
T@"NSXPCConnection",R
T@?,C,S_setRequestCleanUpBlock:
T@,R
T{?=[8I]},R
set_pkUUID:
_loadItemForPayload:completionHandler:
_loadPreviewImageForPayload:completionHandler:
_willPerformHostCallback:
extensionRequest
_setExtensionHostAuditToken:
_transaction
_setPrincipalObject:
_setAuxiliaryListener:
set_UUID:
_setInputItems:
_setAuxiliaryConnection:
_setDummyExtension:
__dummyExtension
__requestCleanUpBlock
_extensionContext
_extensionRequest
__extensionHostProxy
__transaction
__principalObject
__extensionVendorProxy
__auxiliaryListener
__UUID
_inputItems
__auxiliaryConnection
__extensionHostAuditToken
T@"NSUUID",C,N,V__UUID
T@"NSArray",C,N,S_setInputItems:,V_inputItems
T@"NSXPCConnection",&,N,S_setAuxiliaryConnection:,V__auxiliaryConnection
_dummyExtension
TB,G_isDummyExtension,S_setDummyExtension:,V__dummyExtension
T@"NSExtensionContext",R,W,V_extensionContext
T@"EXExtensionRequest",&,V_extensionRequest
T@"<EXExtensionContextHosting>",&,S_setExtensionHostProxy:,V__extensionHostProxy
T{?=[8I]},S_setExtensionHostAuditToken:,V__extensionHostAuditToken
T@"NSObject<OS_os_transaction>",&,G_transaction,S_setTransaction:,V__transaction
T@,S_setPrincipalObject:,V__principalObject
T@,&,D,S_setProcessAssertion:
T@"<EXExtensionContextVending>",&,S_setExtensionVendorProxy:,V__extensionVendorProxy
T@"NSXPCListener",&,S_setAuxiliaryListener:,V__auxiliaryListener
T@"NSUUID",C,D
T@?,C,S_setRequestCleanUpBlock:,V__requestCleanUpBlock
processInfo
performExpiringActivityWithReason:usingBlock:
resourceURL
extensionPointRecords
SDKDictionary
canRunQuery:error:
initWithQuery:discoveryController:
addObserver:
observer
startObserving
observerDidObserveSettingsChange
addChangeObserver:
setSettingsStoreToken:
update
removeObserver:
observers
stopObserving
settingsStoreToken
removeChangeObserver:
extensionsMatchingQuery:
identities
unionSet:
initWithIdentities:
sharedDatabaseContext
startAccessingWithOptions:error:
enumeratorWithExtensionPointRecord:options:
enumeratorWithOptions:
matchesRecord:
targetsSystemExtensionPoint
bundleRecordForAuditToken:error:
containingBundleRecord
resultType
enablementState
requiresHostToBeContainerApp
predicate
evaluateWithObject:
enabledCount
setEnabledCount:
unelectedCount
setUnelectedCount:
disabledCount
setDisabledCount:
stopAccessing
initWithAvailablility:
observerDidObserveDatabaseChange:
addActiveQueryObserver:query:
removeActiveQueryObserver:query:
extensionsMatchingQueries:
activeQueries
setActiveQueries:
setObserver:
activeQueriesLock
setActiveQueriesLock:
queryQueue
setQueryQueue:
_activeQueriesLock
_activeQueries
_observer
_settingsStoreToken
_queryQueue
T@"NSMutableDictionary",&,V_activeQueries
T@"LSObserver",&,V_observer
T@,&,V_settingsStoreToken
T{os_unfair_lock_s=I},V_activeQueriesLock
T@"NSObject<OS_dispatch_queue>",&,V_queryQueue
sharedService
dictionaryWithDictionary:
addEntriesFromDictionary:
allKeys
getServiceConfigForExtension:overlay:subservices:
executableURL
path
addExternalServiceForPid:path:overlay:
extensionIdentity
identifierWithPid:
instanceIdentifier
extensionIdentityForPlugInKitIdentifier:hostIdentifier:UUID:
extensionIdentityForPlugInKitIdentifier:bundledURL:hostIdentifier:UUID:
contextWithIdentity:
setHostPid:
initWithFormat:
setExplanation:
preferredLanguages
componentsJoinedByString:
setObject:atIndexedSubscript:
setArguments:
setExtensionOverlay:
initWithContext:
execute:assertion:error:
initWithExtensionClass:machServiceName:process:
extensionOverlay
identity
initWithLaunchConfiguration:auditToken:processIdentity:sandboxExtensions:
aquireAsertionWithError:
useLSDExtensionKitServiceForDiscovery
useLSDExtensionKitServiceForLaunch
_EX_combinedServiceInterface
_EX_discoveryServiceInterface
_EX_launchServiceInterface
initWitConnection:
_EX_queryResultsInterface
launchWithConfiguration:clientConnection:error:
runAsXPCService
currentProcessIsService
extensionsWithQuery:reply:
beginExtensionsQuery:listenerEndpoint:reply:
prepareWithLaunchConfiguration:reply:
registerServiceForClientConnection:extension:error:
discoveryController
sigtermSource
_discoveryController
_sigtermSource
T@"_EXDiscoveryController",R,V_discoveryController
T@"NSObject<OS_dispatch_source>",R,V_sigtermSource
connection
query:resultsDidUpdate:reply:
query:resultDidUpdate:
setConnection:
transaction
setTransaction:
_connection
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"NSXPCConnection",&,V_connection
initWithMachServiceName:
_startListening
initialized
initForPlugInKit
beginUsing:withBundle:
communicationsFailed:
initForPlugInKitWithOptions:
_inputItemsMatchActiveWebPageAlternative:
_inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:
_evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:
registeredTypeIdentifiers
userInfo
predicateWithBlock:
filteredArrayUsingPredicate:
_genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:
objectAtIndexedSubscript:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
_evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:
_matchingDictionaryMatchesActiveWebPageAlternative:
_evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:
_dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:
initForCurrentProcess
extensionPointRecord
bundleURL
notifyExtensionMainCalled
extensionInfoForCurrentProcess
containerBundleIdentifier
containingViewControllerClassName
T@"NSString",R,N
T@"_EXRunningExtensionInfo",R,N
runLoopType
_bundleIdentifier
_containerBundleIdentifier
_containingViewControllerClassName
_runLoopType
T@"NSString",R,V_runLoopType
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_containerBundleIdentifier
T@"NSString",R,N,V_containingViewControllerClassName
initWithUUIDString:
_EK_nullUUID
initWithExtensionIdentity:
setInstanceIdentifier:
defaultInstanceIdentifier
initWithExtension:instanceIdentifier:
initWithExtensionIdentity:instanceIdentifier:
initWithExtension:
setExtensionIdentity:
interruptionHandler
setPreferredLanguages:
setSandboxProfileName:
_extensionIdentity
_interruptionHandler
_instanceIdentifier
_preferredLanguages
_sandboxProfileName
T@"<_EXExtensionRepresenting>",&,N,V_extension
T@"_EXExtensionIdentity",&,N,V_extensionIdentity
T@?,C,V_interruptionHandler
T@"_EXExtensionInstanceIdentifier",&,N,V_instanceIdentifier
T@"NSArray",C,V_preferredLanguages
T@"NSString",C,V_sandboxProfileName
initWithIdentifier:
isEqualInstanceIdentifier:
isDefault
T@"NSUUID",R,V_identifier
rbsProcessIdentity
forceSandbox
xpcOverlayDictionaryOverridingSandboxProfileName:multiInstance:
executableURLWithError:
hostIdentifier
xpcServiceIdentifier
oneShotUUID
hostPid
explanation
handleForIdentifier:error:
initWithBundleIdentifier:error:
requiresLegacyInfrastructure
alternateSandboxProfileNames
setIdentity:
_setOverrideExecutablePath:
initWithContextFactory:
contextFactory
setContextFactory:
_contextFactory
T@?,C,V_contextFactory
initWithSceneSession:
internalRep
sceneSession
makeXPCConnectionWithError:
makeContextWithSceneSession:
beginContextRequest:endpoint:reply:
shoudAcceptConnection:
set__principalObject:
setSceneSession:
_sceneSession
T@"_EXSceneSession",W,V_sceneSession
T@"_EXNSExtensionShimExtension",W,V_extension
T@,&,V__principalObject
T@"NSArray",R,C,D
T@"NSUUID",R,C,V_UUID
T@"NSXPCConnection",R,D
T@?,C,S_setRequestCleanUpBlock:,V_requestCleanUpBlock
T@,R,D
T{?=[8I]},R,V_extensionHostAuditToken
setExtensionPointIdentifier:
setPlatform:
initWithExtensionPointIdentifier:
allocWithZone:
initWithExtensionPointIdentifier:predicate:
initWithExtensionPoint:
encodeInteger:forKey:
decodeIntegerForKey:
setResultType:
extensionPointIdentifierQuery:
extensionPointIdentifierQuery:platform:
allExtensionsQuery
initWithExtensionPointIdentifier:platform:
matches:
_resultType
_extensionPointRecords
T{?=[8I]},D
TQ,V_resultType
T@"NSArray",R,V_extensionPointRecords
TI,D
T@"NSString",&,D
T@"NSPredicate",&,D
persistentIdentifier
initWithPersistentIdentifier:
setPredicate:
setHostAuditToken:
record
setRecord:
_predicate
_record
T@"LSExtensionPointRecord",&,V_record
decodeInt32ForKey:
queryPredicatesEvaluatedOutOfProcess
encodeInt32:forKey:
enumeratorWithParentApplicationRecord:
addObjectsFromArray:
isEqualToQuery:
_platform
executeQuery:
executeQuery:completionHandler:
executeQueries:
executeQueries:completionHandler:
removeObject:
availabilityDidChange:
isEqualToActiveQuery:
query
initWithQuery:
addQueryObserver:
removeQueryObserver:
isActive
reset
availabilityDidChange:reply:
setObservers:
started
setStarted:
xpcListener
_started
_query
_observers
_xpcListener
T@"_EXQuery",R,V_query
T@"NSSet",&,V_observers
T@"NSXPCListenerEndpoint",R
T@"NSXPCConnection",W,V_connection
active
TB,R,GisActive
TB,V_started
T@"NSXPCListener",R,V_xpcListener
connectionLock
initWithMachServiceName:options:
setDiscoveryConnection:
reconnectActiveQueries
setLaunchConnection:
_beginActiveQuery:
filteredSetUsingPredicate:
discoveryConnection
resultWithQuery:
fetchResultWithQuery:completionHandler:
member:
queries
_activeQueryForQuery:
launchConnection
extensionsWithQueries:
fetchExtensionsWithQueries:completionHandler:
launchWithConfiguration:error:
notifyQueue
_connectionLock
_discoveryConnection
_launchConnection
_notifyQueue
T@"NSXPCConnection",&,N,V_discoveryConnection
T@"NSXPCConnection",&,N,V_launchConnection
T^{os_unfair_lock_s=I},D,N
T@"NSMutableSet",&,N,V_activeQueries
T@"NSObject<OS_dispatch_queue>",R,V_notifyQueue
sceneIdentifier
initializationParametersPromise
initWithParameters:
sceneDelegateClass
setSceneDelegateClass:
sceneDelegateClassName
setSceneDelegateClassName:
sceneClass
setSceneClass:
resolveObjectOfClass:error:
role
initializationPromise
initializationParametersOfClass:error:
parameters
_parameters
_sceneDelegateClassName
_sceneDelegateClass
_sceneClass
T@"_EXSceneSessionParameters",R,V_parameters
T@"NSString",C,V_sceneDelegateClassName
T@"_EXPromise",R,D
T#,&,N,V_sceneClass
T#,&,N,V_sceneDelegateClass
T@"NSString",R,C,D
preferInProcessDiscovery
asyncQueryQueue
initWithQueries:
orderedSet
suspend
internalExtensions
array
extensionsLock
initWithCurrentExtensions:updatedExtensions:
resultDidUpdate:
addedExtensions
removedUUIDs
delegate
queryControllerDidUpdate:difference:
queryControllerDidUpdate:resultDifference:
initWithQueries:delegate:
extensionIdentities
setInternalExtensions:
notificationQueue
_extensionsLock
_internalExtensions
_unelectedCount
_delegate
_queries
_notificationQueue
T@"NSOrderedSet",&,N,V_internalExtensions
TQ,N,V_unelectedCount
T@"NSObject<OS_dispatch_queue>",R,V_notificationQueue
T@"<_EXQueryControllerDelegate>",W,V_delegate
T@"NSArray",R
T@"NSArray",R,C,V_queries
extensions
setInternalDelegate:
internalDelegate
observerDidUpdate:
queryControllerDidUpdate:enabledCount:disabledCount:unelectedCount:
_internalDelegate
T@"<_EXQueryObserverDelegate>",W,V_internalDelegate
_EX_transaction
_EX_setTransaction:
rangeOfString:
substringToIndex:
substringFromIndex:
unsignedIntegerValue
numberWithInt:
predicateWithSubstitutionVariables:
predicateForCountingRule:type:exceptTypes:specifiedCount:
intValue
objectAtIndex:
gatherChildrenPredicateWithRuleDictionary:parentType:parentAccepted:acceptedChildTypes:exceptChildTypes:
predicateForRejectExceptOtherTypesRule:type:otherTypes:
arrayWithObject:
applyRuleWithRuleName:acceptRule:rejectRule:types:exceptTypes:parentType:children:parentAccepted:accepted:acceptedTypesInSubtree:exceptTypesInSubtree:
enumerateKeysAndObjectsUsingBlock:
removeObjectsInArray:
initWithActivationRules:predicateDictionary:
makePredicate
strictMatchingSpecified
usesStrictMatching
predicateDictionary
activationRules
_strictMatchingSpecified
_usesStrictMatching
_predicateDictionary
_activationRules
TQ,R,V_version
TB,R,V_strictMatchingSpecified
TB,R,V_usesStrictMatching
T@"NSDictionary",R,V_predicateDictionary
T^{_EXExtensionActivationRules=@@@@@@@@},R,V_activationRules
enumerateObjectsUsingBlock:
evaluateActivationRule:withExtensionItemsRepresentation:
predicateForActivationRule:
length
characterAtIndex:
valueForKeyPath:
subpredicates
predicateOperatorType
leftExpression
rightExpression
expressionType
function
arguments
expressionValueWithObject:context:
operand
collection
initWithDictionary:
variable
predicateWithFormat:
andPredicateWithSubpredicates:
dictionaryWithObject:forKey:
setWithArray:
setWithObjects:
isEqualToSet:
setName:
dataWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
URLForResource:withExtension:
dataWithContentsOfURL:
bundleForClass:
URLByResolvingSymlinksInPath
getResourceValue:forKey:error:
absoluteURL
URLByDeletingLastPathComponent
_EX_isApplication
defaultManager
getRelationship:ofDirectoryAtURL:toItemAtURL:error:
_EX_isDirectory
_EX_containingApplicationBundleURL
_EX_isContainedInDirectory:
_defaultRun:arguments:
setSceneXPCConnection:
connectSceneSessionWithRequest:reply:
_setQueue:
sceneConnectionListener
removeSessionForIdentifier:
prepareForSceneConnectionWithConfiguration:
connectToSession:
T@,&
scene
setSceneEndpoint:
makeConfigurationWithParameters:
hostEndpoint
addSession:
makeSceneWithError:
setScene:
connectToScene:
makeConnectionResponse
addBarrierBlock:
setConfiguration:
setIdentifier:
setSceneConnectionListener:
sessionXPCConnection
setSessionXPCConnection:
sceneXPCConnection
hasSwiftUIContent
_hasSwiftUIContent
_scene
_sceneConnectionListener
_sessionXPCConnection
_sceneXPCConnection
_hostEndpoint
T@"NSXPCListener",&,V_sceneConnectionListener
T@"<_EXScene>",&,N,V_scene
T@"NSXPCConnection",&,N,V_sessionXPCConnection
T@"NSXPCConnection",&,N,V_sceneXPCConnection
T@"_EXExtension",R,W,N,V_extension
T@"NSUUID",&,V_identifier
T@"_EXSceneConfiguration",C,V_configuration
T@"NSXPCListenerEndpoint",R,V_hostEndpoint
TB,R,N,V_hasSwiftUIContent
completeRequestWithHandler:
unregisterPromise:
initWithName:reason:userInfo:
registerPromise:
resolveObjectOfClasses:forIdentifier:endpoint:error:
resolveObjectOfClasses:error:
resolveObjectOfClasses:completion:
initWithPromiseBlock:
resolveObjectOfClass:completion:
promiseBlock
_promiseBlock
T@?,R,C,V_promiseBlock
weakToWeakObjectsMapTable
resolvePromiseWithIdentifier:reply:
resolveObjectOfClasses:forIdentifier:endpoint:completion:
promises
listener
setListener:
_promises
_listener
T@"NSMapTable",R,V_promises
T@"NSXPCListener",&,V_listener
decodeObjectOfClasses:forKey:
isLaunchConfigurationEqual:
T@"_EXExtensionIdentity",R,V_extensionIdentity
T@"_EXExtensionInstanceIdentifier",&,V_instanceIdentifier
_EX_arrayForKey:
_startListening:
defaultService
_extensionDictionary
beginRequestWithExtensionContext:
assertIsExtensionProcess
_extensionContextClass
_EX_boolForKey:defaultValue:
_extensionMainStoryboard
_extensionPrincipalClass
_initializedByViewServices
initWithInputItems:listenerEndpoint:contextUUID:
_shouldCreatePrincipalObject
_onGlobalStateQueueOnly_setPrincipalObject:forUUID:
_completionConcurrentQueue
_expirationConcurrentQueue
_addExtensionContext:
_removeExtensionContext:
_setPrincipalObject:forUUID:
_extensionPrincipalObjects
_setExtensionPrincipalObjects:
__extensionPrincipalObjects
T@"NSMutableDictionary",&,N,S_setExtensionPrincipalObjects:,V__extensionPrincipalObjects
postNotificationName:object:userInfo:
initWithInputItems:contextUUID:
extensionPoint
teamIdentifier
_EX_objectForKey:ofClass:
integerValue
extensionSettingsKey
userElectionForExtensionKey:
setUserElection:forExtensionKey:error:
uniqueIdentifier
_expensiveDictionaryRepresentation
entitlements
initWithPlugInKitProxy:
classForCoder
defaultUserElection
setUserElection:error:
containingURL
entitlementNamed:ofClass:
_extensionPoint
T@"LSApplicationExtensionRecord",R,V_record
T@"LSExtensionPointRecord",R,V_extensionPoint
plistTypes
_userElection
_defaultUserElection
_containingBundleRecord
_url
_containingURL
_sdkDictionary
_entitlements
isEqualToExtension:
initWithBundleIdentifier:
extensionProcessWithConfiguration:error:
newXPCConnectionWithError:
isSystemComponent
alwaysEnabledExtensionBundleIdentifiers
defaultSandboxProfileName
enableExtension:error:
disableExtension:error:
requiresMacCatalystBehavior
roles
icon
T@"NSUUID",R
T@"ISIcon",R
hostContextClass
enabled
unelected
showsInExtensionsManager
canDisable
spotlightIndexable
spotlightImporterIdentifiers
systemComponent
TB,R,D,GisSystemComponent
T@"NSURL",R,V_containingURL
T@"NSUUID",R,V_UUID
T@"NSURL",R
T@"NSDictionary",R,V_sdkDictionary
T@"NSDictionary",R,V_extensionDictionary
TI,R,V_platform
TC,R,V_userElection
TC,R,V_defaultUserElection
T@"NSString",R,D
T@"NSArray",R,D
T@"<_EXExtensionConfigurationProviding>",R,D
T@"LSBundleRecord",R,D
T@"NSURL",R,V_url
T@"NSUUID",R,D
T@"ISIcon",R,D
dataWithContentsOfURL:options:error:
_EX_objectForKeys:ofClass:
setValuesForKeysWithDictionary:
_EX_dictionaryForKeys:
_EX_stringForKeys:
_EX_integerForKey:
_EX_dictionaryByRemovingObjectForKey:
_EX_dictionaryBySettingObject:forKey:
_EX_dictionaryBySettingValuesForKeysWithDictionary:
_EX_dictionaryWithSignedURL:error:
_EX_objectAtIndex:ofClass:
_EX_dictionaryAtIndex:
_EX_arrayAtIndex:
_EX_stringAtIndex:
_EX_boolAtIndex:
_EX_boolAtIndex:defaultValue:
_EX_unimplementedError
setStrongDelegate:
extensionWillFinishLaunching:
extensionDidFinishLaunching:
extension:prepareForSceneConnectionWithConfiguration:
strongDelegate
hasSwiftEntryPoint
_hasSwiftEntryPoint
_strongDelegate
_internalRep
TB,V_hasSwiftEntryPoint
T@"_EXExtensionIdentity",&,N,V_internalRep
T@,&,N,V_strongDelegate
T@,W,N,V_delegate
setPersona:
setProcessIdentifier:
plugIn
setPlugIn:
_options
_endpoint
_persona
_assertion
_processIdentifier
_context
T@"NSUUID",&,V_pkUUID
T@,&,V_assertion
T@"RBSProcessIdentifier",&,V_processIdentifier
T@"<PKPlugInPrivate>",&,V_plugIn
T@"NSXPCConnection",&,V_xpcConnection
T@"NSExtensionContext",W,V_context
TQ,V_options
T@"NSArray",C,V_inputItems
T@"NSXPCListenerEndpoint",&,V_endpoint
T@"_EXPersona",&,V_persona
allowsAppleInternalComponents
initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
sourceURL
URLByAppendingPathComponent:
lowercaseString
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
lastPathComponent
pathExtension
caseInsensitiveCompare:
processExtensionSDK:declaringURL:
isCatalystSupportURL:
isAppleInternalURL:
_combinedExtensionSDK
_combinedAppleInternalExtensionSDK
processExtensionsInDirectory:
stringByReplacingOccurrencesOfString:withString:options:range:
rootURL
fileURLWithPath:relativeToURL:
enumerateBundlesWithPathExtension:atURL:block:
frameworkPaths
processExtensionSDKFromBundle:
processExtensionsFromBundle:
enumerateFrameworksBundlesWithFrameworkURL:block:
initWithSourceURL:
combinedExtensionSDK
combinedAppleInternalExtensionSDK
extensionPaths
appleInternalExtensionPaths
enumerateAppexptAtURL:block:
processExtensionSDKFromFile:
main
set_combinedExtensionSDK:
set_combinedAppleInternalExtensionSDK:
_extensions
set_extensions:
_appleInternalExtensions
set_appleInternalExtensions:
_sourceURL
__combinedExtensionSDK
__combinedAppleInternalExtensionSDK
__extensions
__appleInternalExtensions
T@"NSMutableDictionary",&,V__combinedExtensionSDK
T@"NSMutableDictionary",&,V__combinedAppleInternalExtensionSDK
T@"NSMutableArray",&,V__extensions
T@"NSMutableArray",&,V__appleInternalExtensions
T@"NSURL",R,V_sourceURL
setExtensionContextIdentifier:
extensionContextIdentifier
dictionaryWithCapacity:
stringWithCString:encoding:
loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:
loadPreviewImageWithCompletionHandler:expectedValueClass:options:
_extensionContextIdentifier
T@"NSUUID",C,N,V_identifier
T@"NSUUID",C,N,V_extensionContextIdentifier
setItemProvider:
setDestinationProcessAuditToken:
setLoadedItems:
requiresLoadOperatorSecureDecoding
allowedClasses
itemProvider
_loadItemsForTypeIdentifiers:auditToken:itemProvider:
loadedItems
_sandboxedResourceForItemIfNeeded:auditToken:error:
loadItemForTypeIdentifier:options:completionHandler:
destinationProcessAuditToken
_itemProvider
_loadedItems
_destinationProcessAuditToken
T@"NSItemProvider",N,V_itemProvider
T@"NSDictionary",&,N,V_loadedItems
T{?=[8I]},N,V_destinationProcessAuditToken
setResourceURL:
setSandboxExtensionToken:
isAccessingSecurityScopedResource
setAccessingSecurityScopedResource:
sandboxExtensionToken
initWithContentsOfURL:
resolveURLAndReturnError:
_accessingSecurityScopedResource
_resourceURL
_sandboxExtensionToken
T@"NSData",C,N,V_sandboxExtensionToken
T@"NSURL",C,N,V_resourceURL
accessingSecurityScopedResource
TB,N,GisAccessingSecurityScopedResource,V_accessingSecurityScopedResource
startAccessingSecurityScopedResource
fileSystemRepresentation
stopAccessingSecurityScopedResource
dataWithBytesNoCopy:length:freeWhenDone:
_enabledCount
_disabledCount
Tq,V_enabledCount
Tq,V_disabledCount
Tq,V_unelectedCount
availablility
initWithObserver:
start
block
_block
T@?,R,V_block
setSceneIdentifier:
sizeBridgingOptions
setSizeBridgingOptions:
setInitializationParametersPromise:
_sceneIdentifier
_sizeBridgingOptions
_initializationParametersPromise
T@"NSString",&,V_sceneIdentifier
Tq,V_sizeBridgingOptions
T@"_EXPromise",&,V_initializationParametersPromise
processWithLaunchConfiguration:error:
initWithInternalExtensionProcess:
_extensionProcessBackgroundQueue
internalExtensionProcess
makeXPCConnectionRetainProcess:withError:
invalidationHandler
extensionProcessWithConfiguration:completionHandler:
processDidInvalidate:
setInternalExtensionProcess:
_internalExtensionProcess
_invalidationHandler
T@"_EXExtensionProcessHandle",&,V_internalExtensionProcess
T@?,C,V_invalidationHandler
setInfoDictionary:
startViewServiceSessionManagerAsPlugin:
isPlugInKitProcess
setPlugInKitProcess:
_initialized
_plugInKitProcess
T@"NSDictionary",C,N,V_infoDictionary
plugInKitProcess
TB,N,GisPlugInKitProcess,V_plugInKitProcess
setPrincipalClass:
setExtensionContextClass:
_principalClass
T#,&,V_principalClass
T#,&,V_extensionContextClass
makePrincipalObjectForExtension:
T@"NSExtensionContext",&,V_context
_initWithIdentities:availablility:
initWithIdentities:availablility:
_identities
_availablility
T@"NSSet",R,V_identities
T@"_EXExtensionAvailablility",R,V_availablility
setWithSet:
initWithAddedExtensions:removedUUIDs:
_removedUUIDs
T@"NSSet",R,D
T@"NSSet",R,V_removedUUIDs
stringWithUTF8String:
sandboxed
initWithURL:readonly:
consume
consumedSandboxExtension
setConsumedSandboxExtension:
_consumedSandboxExtension
TQ,V_consumedSandboxExtension
T@"NSString",&,V_sandboxExtensionToken
_EX_extensionProcess
_EX_setExtensionProcess:
T@"_EXExtensionProcessHandle",&,S_EX_setExtensionProcess:
weakObjectsHashTable
encodeBytes:length:forKey:
launchConfiguration
decodeBytesForKey:returnedLength:
_handleAssertionInvalidation
manager
makeXPCConnection
makeSessionXPCConnection
isValid
serviceListenerEndpoint
processIdentity
sandboxExtensions
setSandboxExtensions:
xpcConnectionLock
setXpcConnectionLock:
xpcConnections
setXpcConnections:
setManager:
observersLock
setObserversLock:
internalConnection
setInternalConnection:
_xpcConnectionLock
_observersLock
_launchConfiguration
_serviceListenerEndpoint
_processIdentity
_sandboxExtensions
_xpcConnections
_manager
_internalConnection
_auditToken
T@"NSArray",&,V_sandboxExtensions
T{os_unfair_lock_s=I},V_xpcConnectionLock
T@"NSHashTable",&,V_xpcConnections
T@"_EXExtensionProcessMannger",W,V_manager
T{os_unfair_lock_s=I},V_observersLock
T@"NSHashTable",&,V_observers
T@"_EXInternalHostConnection",W,V_internalConnection
T@"_EXLaunchConfiguration",R,V_launchConfiguration
T{?=[8I]},R,V_auditToken
T@"NSXPCListenerEndpoint",R,V_serviceListenerEndpoint
Ti,R
T@"BKSProcessAssertion",R,V_assertion
T@"RBSProcessIdentity",R,V_processIdentity
TB,R,D,GisValid
strongToWeakObjectsMapTable
processExtensionMap
setProcessExtensionMap:
processExtensionMapLock
setProcessExtensionMapLock:
_processExtensionMapLock
_processExtensionMap
T@"NSMapTable",&,V_processExtensionMap
T{os_unfair_lock_s=I},V_processExtensionMapLock
sessionForIdentifier:
sessions
_sessions
__sessions
T@"NSMutableDictionary",R,V__sessions
variant
TI,R
setSDKDictionary:
setVariant:
setUrl:
_SDKDictionary
_variant
T@"NSString",&,V_identifier
T@"NSDictionary",&,V_SDKDictionary
TI,V_platform
TQ,V_variant
T@"NSURL",&,V_url
dictionaryWithContentsOfURL:
URLByAppendingPathComponent:isDirectory:
xpcExtensionsCache
xpcExtensionPointsCache
extensionPointsConfigURL
legacyExtensionPointAllowList
_extensionPointsConfigURL
_legacyExtensionPointAllowList
_rootURL
_xpcExtensionsCache
_xpcExtensionPointsCache
T@"NSURL",R,V_rootURL
T@"NSURL",R,V_xpcExtensionsCache
T@"NSURL",R,V_xpcExtensionPointsCache
T@"NSURL",R,V_extensionPointsConfigURL
T@"NSDictionary",R,V_legacyExtensionPointAllowList
config
fileExistsAtPath:
supportExtensionKitConfigPath
appleInternal
extensionURLEnumerator
extensionCacheFileURLs
extensionInstallDirectoryURLs
arrayByAddingObjectsFromArray:
initWithCacheURLs:
_extensionLiveEnumerator
initWithCacheURLs:paths:
extensionPointCacheFileURLs
extensionPointDefinitionDirectoryURLs
initWithCacheURLs:config:
_extensionPointLiveEnumerator
initWithSDKDictionary:urls:config:
initWithSDKDictionary:config:
extensionEnumerator
extensionPointDefinitionEnumeratorWithSDKDictionary:
containsString:
translateAppexptDictionary:definitionURL:isCatalyst:
enumerateExtensionPointsInDirectoryAtURL:block:
enforceXPCCacheCodeSigning
hasSuffix:
translateXPCCacheDictionary:
keyEnumerator
enforceLegacyExtensionPointAllowList
nextObject
validateExtensionPointIdentifier:sdkDictionary:
fileURLWithPath:isDirectory:
synthesizeNSExtensionKeysInDictionary:identifier:
flattenEXExtensionPointConfigurationInDictionary:identifier:
validateExtensionPoints
extensionPoints
extensionPointsKeyEnumerator
currentExtensionPoint
currentIdentifier
currentNativeSDKDictionary
currentCatalystSDKDictionary
_validateExtensionPoints
_config
_extensionPoints
_extensionPointsKeyEnumerator
_currentExtensionPoint
_currentIdentifier
_currentNativeSDKDictionary
_currentCatalystSDKDictionary
T@"<EXEnumeratorConfig>",R,V_config
T@"NSDictionary",R,V_extensionPoints
T@"NSEnumerator",R,V_extensionPointsKeyEnumerator
T@"_EXExtensionPoint",R,V_currentExtensionPoint
TB,R,V_validateExtensionPoints
T@"NSString",R,V_currentIdentifier
T@"NSDictionary",R,V_currentNativeSDKDictionary
T@"NSDictionary",R,V_currentCatalystSDKDictionary
initWithArray:
enumerateExtensionsInDirectoryAtURL:block:
objectEnumerator
extensionPathsEnumerator
_extensionPaths
_extensionPathsEnumerator
T@"NSArray",R,V_extensionPaths
T@"NSEnumerator",R,V_extensionPathsEnumerator
startAccessingReturningError:
implementsNSExtension
errorTypes
plistAndValueTypes
allowPrototypeAPI
allowPrototypeSPI
assertOnDisallowedPrototypeAPIUse
assertOnDisallowedPrototypeSPIUse
startUIHostingSessionImmediately
T@"NSSet",R
sharedManager
currentPersona
userPersonaUniqueString
initWithPersonaUniqueString:
defaultPersona
_personaUniqueString
T@"NSString",R,N,V_personaUniqueString
internalObservers
internalNewObservers
removeAllObjects
currentUUIDs
minusSet:
setCurrentUUIDs:
objectsPassingTest:
_internalObservers
_internalNewObservers
_currentUUIDs
T@"NSMutableSet",R,V_internalObservers
T@"NSMutableSet",R,V_internalNewObservers
T@"_EXDiscoveryController",R,W,V_discoveryController
T@"NSSet",&,V_currentUUIDs
setHostEndpoint:
setParameters:
T@"NSXPCListenerEndpoint",&,V_hostEndpoint
T@"_EXSceneSessionParameters",&,V_parameters
sceneEndpoint
_sceneEndpoint
T@"NSXPCListenerEndpoint",&,V_sceneEndpoint
initWithPrincipalObject:
principalObject
connectionHandler
setPrincipalObject:
setConnectionHandler:
_connectionHandler
T@,&,V_principalObject
T@"<_EXConnectionHandler>",&,V_connectionHandler
UUIDString
anyObject
extensionRepresentedBy:error:
initWithUUID:error:
extensionIdentityWithError:
containingBundleIdentifier
beginExtensionRequest:error:
beginExtensionRequest:completion:
extensionWithIdentity:error:
T@"NSArray",&,N
T@"<EXExtensionInfoProviding>",R,N
@16@0:8
^?16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
i28@0:8r^*16i24
v16@0:8
v24@0:8@16
{?=[8I]}16@0:8
@"_EXExtension"
@"<_EXExtensionConfigurationProviding>"
{?="val"[8I]}
@44@0:8@16I24@28^@36
B24@0:8@"NSXPCConnection"16
@"NSDictionary"16@0:8
@24@0:8@16
@32@0:8@16^@24
v32@0:8@16@?24
v36@0:8@16B24@?28
@36@0:8@16B24^@28
@32@0:8@16@?24
B24@0:8^@16
B32@0:8@16^@24
v40@0:8Q16@24@?32
@40@0:8Q16@24^@32
v48@0:8Q16@24@32@?40
@48@0:8Q16@24@32^@40
v40@0:8@16@24@?32
@40@0:8@16@24^@32
i24@0:8@16
@32@0:8@16@24
d16@0:8
i16@0:8
v24@0:8@?16
v36@0:8B16@20@?28
v20@0:8i16
@?16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"NSDictionary"
@"NSUUID"
@"<PKPlugIn>"
@"NSArray"
@"NSMutableDictionary"
@"NSBundle"
@"NSSet"
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
@28@0:8@16I24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSError"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSDictionary"16@"NSUUID"24@?<v@?@@"NSError">32
v32@0:8@"NSURL"16@?<v@?B>24
v48@0:8@16@24@32@?40
v48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@?<v@?@"NSUUID"@"NSError">40
v32@0:8@"NSUUID"16@?<v@?>24
v24@0:8@?<v@?>16
@24@0:8#16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
v32@0:8@"NSArray"16@?<v@?B>24
v24@0:8@"NSError"16
@48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@"NSExtensionContext"40
@"NSArray"16@0:8
@"NSUUID"16@0:8
@"NSXPCConnection"16@0:8
@?<v@?>16@0:8
v48@0:8{?=[8I]}16
@"NSExtensionContext"
@"EXExtensionRequest"
@"<EXExtensionContextHosting>"
@"NSObject<OS_os_transaction>"
@"<EXExtensionContextVending>"
@"NSXPCListener"
@"NSXPCConnection"
v24@0:8@"LSObserver"16
v32@0:8@16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"LSObserver"
@"NSObject<OS_dispatch_queue>"
v32@0:8@"_EXQuery"16@?<v@?@"_EXQueryResult"@"NSError">24
v40@0:8@"_EXQuery"16@"NSXPCListenerEndpoint"24@?<v@?@"NSError">32
v32@0:8@"_EXLaunchConfiguration"16@?<v@?@"_EXExtensionProcessHandle"@"NSError">24
v40@0:8@16^@24^@32
B40@0:8@16@24^@32
@"_EXDiscoveryController"
@"NSObject<OS_dispatch_source>"
v32@0:8@"_EXQuery"16@"_EXQueryResultUpdate"24
v32@0:8@"<PKSubsystemServicePersonality>"16@"NSBundle"24
v24@0:8@"<PKSubsystemServicePersonality>"16
@"<PKModularService>"16@0:8
@"<PKModularService>"24@0:8@"NSDictionary"16
B48@0:8@16@?24@?32@?40
B40@0:8@16@24o^q32
@"_EXExtensionIdentity"
@"_EXExtensionInstanceIdentifier"
@"<_EXExtensionRepresenting>"
@28@0:8@16B24
@24@0:8^@16
@24@0:8@?16
@32@0:8#16@24
v40@0:8@"NSUUID"16@"NSXPCListenerEndpoint"24@?<v@?@"NSXPCListenerEndpoint">32
@"_EXNSExtensionShimExtension"
@"_EXSceneSession"
v24@0:8Q16
I16@0:8
@"NSPredicate"
@"LSExtensionPointRecord"
v20@0:8I16
v40@0:8@"_EXQuery"16@"_EXQueryResultUpdate"24@?<v@?>32
@"_EXQuery"
^{os_unfair_lock_s=I}16@0:8
@"NSMutableSet"
@32@0:8#16^@24
v24@0:8#16
@"_EXSceneSessionParameters"
v24@0:8@"_EXExtensionAvailablility"16
@"NSOrderedSet"
@"<_EXQueryControllerDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"_EXQueryController"16@"NSOrderedCollectionDifference"24
v48@0:8@"_EXQueryController"16Q24Q32Q40
@"<_EXQueryObserverDelegate>"
@32@0:8^{_EXExtensionActivationRules=@@@@@@@@}16@24
@44@0:8@16@24@32i40
@40@0:8@16@24@32
@100@0:8@16@24@32@40@48@56@64B72^B76^@84^@92
@52@0:8@16@24B32^@36^@44
^{_EXExtensionActivationRules=@@@@@@@@}16@0:8
^{_EXExtensionActivationRules=@@@@@@@@}
v32@0:8@"_EXSceneSessionConnectionRequest"16@?<v@?@"_EXSceneSessionConnectionResponse"@"NSError">24
v24@0:8@"_EXSceneSession"16
@"_EXSceneConfiguration"
@"<_EXScene>"
@"NSXPCListenerEndpoint"
v32@0:8#16@?24
v32@0:8@"NSUUID"16@?<v@?@"<NSSecureCoding><NSObject>">24
@48@0:8@16@24@32^@40
@"NSMapTable"
v24@0:8@"NSExtensionContext"16
C16@0:8
B28@0:8C16^@20
@32@0:8@16#24
@"LSApplicationExtensionRecord"
@"LSBundleRecord"
@"NSURL"
@32@0:8@"NSString"16#24
@"NSXPCConnection"24@0:8^@16
@"ISIcon"16@0:8
q24@0:8@16
B28@0:8@16B24
@32@0:8Q16#24
@24@0:8Q16
B24@0:8Q16
B28@0:8Q16B24
@"_EXPersona"
@"RBSProcessIdentifier"
@"<PKPlugInPrivate>"
v24@0:8^{__CFBundle=}16
@"NSMutableArray"
v48@0:8@16@?24#32@40
v40@0:8@?16#24@32
v48@0:8@"NSString"16@?<v@?@"<NSSecureCoding>"@"NSError">24#32@"NSDictionary"40
v40@0:8@?<v@?@"<NSSecureCoding>"@"NSError">16#24@"NSDictionary"32
@56@0:8@16{?=[8I]}24
@64@0:8@16{?=[8I]}24@56
@64@0:8@16{?=[8I]}24^@56
@"NSItemProvider"
@"NSData"
@"_EXPromise"
v24@0:8@"_EXExtensionProcessHandle"16
@"_EXExtensionProcessHandle"
@"_EXExtensionAvailablility"
@64@0:8@16@24{?=[8I]}32
@72@0:8@16{?=[8I]}24@56@64
@28@0:8B16^@20
@"_EXLaunchConfiguration"
@"BKSProcessAssertion"
@"RBSProcessIdentity"
@"NSHashTable"
@"_EXExtensionProcessMannger"
@"_EXInternalHostConnection"
@"NSURL"16@0:8
@36@0:8@16@24B32
@"<EXEnumeratorConfig>"
@"NSEnumerator"
@"_EXExtensionPoint"
@"<_EXConnectionHandler>"
i36@0:8i16@20@28
@(#)PROGRAM:ExtensionFoundation  PROJECT:ExtensionKit-34.5
3AZ|
v8@?0
EXTENSION_KIT_EXTENSION_TYPE
false
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/EXRunningExtension.m
__TEXT
__swift5_entry
main
record && [record isKindOfClass:LSApplicationExtensionRecord.class]
_extension
[extensionClass isSubclassOfClass:_EXExtension.class]
_EXRunningUIViewServiceExtension
Unable to find class %s
_EXRunningUISceneExtension
EXDefaultScene
com.apple.
EXPresentsUserInterface
EXRequiresSceneHosting
EXSupportsNSExtensionPlistKeys
EXExtensionPrincipalClass
EXPrincipalClass
EXAppExtensionDelegateClass
NSExtensionPrincipalClass
EXExtensionContextClass
EXAppExtensionClass
_EXNSExtensionUIShimExtension
_EXNSExtensionShimExtension
EXConnectionHandlerClass
EXRequiredHostEntitlements
EXRequiredEntitlements
NSExtensionContextHostClass
_EXExtensionInstallRunloopObserverToPingLaunchdAfterEvent
EXConcreteExtension.m
mainRunLoop != NULL
EXAssertionLoggingEnabled
NSExtensionDiscoveryLoggingEnabled
com.apple.foundation.NSExtension
connection
context
discovery
plugin
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSSet"8@"NSError"16
NSUserElection
v24@?0@"<PKPlugIn>"8@"NSError"16
com.apple.extension.global-state-queue
Unable to create null NSExtensions!
UIApplication
UIApplicationWillEnterForegroundNotification
UIApplicationDidEnterBackgroundNotification
UIApplicationWillResignActiveNotification
UIApplicationDidBecomeActiveNotification
%@ {id = %@}
%@.%@
_connectionUUID != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension.m
v24@?0@"<NSCopying>"8@"NSError"16
extensionContext != nil
Failed to make extension context for extension: %@ request: %@
Extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
terminating extension to simulate jetsam after launch
v16@?0@"NSError"8
v24@?0@"NSUUID"8@"NSError"16
v24@?0@8@"NSError"16
Extension cancelled by host.
bundleURL != nil
UUID != nil
v20@?0B8@"NSError"12
self.infoDictionary != nil
XPCService
ServiceType
System
_MultipleInstances
NSExtension
NSExtensionDisableTeardownDelay
extensionContextHostClass != nil
The plugin has been invalidated.
__plugIn != nil
!__plugIn.spent
The plugin cannot be restarted.
firstDateIndicatedFor
lastDateManagedOn
extensionState
markedNew
safe plugin queue for NSExtension
plugin != nil
Unable to resolve bundle URL: %@
v24@?0@"NSDictionary"8@"NSError"16
Timed out attempting to resolve bundle!
com.apple.uifoundation-bundle-helper
MCProfileConnection
RunningBoard
manage_all_extensions
v16@?0^{__CFDictionary=}8
com.apple.extension.resolution-queue
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.extension.session
%@:%u
_extensionRequest
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXExtensionContextImplementation.m
CKShare
NSCloudKitShareProvider
UIImage
NSImage
com.apple.extension.protocol-creation
subclassProtocol != NULL
__NSX__HOST__PROTOCOL__
uuid
inputItems
auxVendorProtocol != nil && auxHostProtocol != nil
[self.extensionContext conformsToProtocol:auxHostProtocol.protocol]
v12@?0B8
%@ - UUID: %@ - _isHost: %@
_isDummyExtension:%@
inputItems:
__auxiliaryConnection == nil
com.apple.extension-completion
cpm.apple.extensionkit._EXDiscoveryController
com.apple.private.extensionkit.host.any-extension
B16@?0@"LSExtensionPointRecord"8
com.apple.private.extensionkit.extension-management
v16@?0@"LSExtensionPointRecord"8
NSRunLoop
apple-extension-service
_NSApplicationMain
viewbridge
_UIApplicationMain
viewservice
Application
RunLoopType
_AdditionalSubServices
EnvironmentVariables
CFBundlePackageType
XPC!
break_pk_dep
Launching extension %@(%@) for host %d
("%@")
", "
-AppleLanguages
_SandboxProfile
_OmitSandboxParameters
com.apple.pluginkit.plugin-service
[subservice isKindOfClass:NSString.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Service/EXService.m
Active query: %lx-%d
Connection observer for connection: `%@`
NSExtensionAttributes
NSExtensionActivationRule
extensionItems
attachments
registeredTypeIdentifiers
supportsJavaScript
public.url
com.apple.webarchive
com.apple.active-webpage
B24@?0@"NSExtensionItem"8@"NSDictionary"16
@"NSArray"16@?0@"NSDictionary"8
B24@?0@8@"NSDictionary"16
@"NSArray"16@?0@"NSExtensionItem"8
@"NSArray"16@?0@"NSItemProvider"8
B24@?0@"NSExtensionItem"8@"NSItemProvider"16
v24@?0@8Q16
B32@?0@8Q16^B24
_matchingDictionaryRepresentation
NSExtensionContainingViewControllerClass
00000000-0000-0000-0000-000000000000
extensionIdentity != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXHostConfiguration.m
%@ identity: %@ instance: %@
extension != nil
[extension isKindOfClass:_EXExtensionIdentity.class]
_identifier
[_EXExtensionInstanceIdentifier: %@]
Backoff
sandboxProfile
_AdditionalProperties
aClass == EXGetExtensionContextInternalClass()
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXNSExtensionContextShimImplementation.m
self.internalExtensionContext
[key isEqualToString:@"self.internalExtensionContext"]
@"<_NSExtensionContextInternalImplementation>"8@?0
-[_EXNSExtensionContextShimImplementation shoudAcceptConnection:]
-[_EXNSExtensionContextShimImplementation beginContextRequest:endpoint:reply:]
-[_EXNSExtensionContextShimImplementation cancelRequestWithError:]
-[_EXNSExtensionContextShimImplementation completeRequestReturningItems:completionHandler:]
-[_EXNSExtensionContextShimImplementation initWithInputItems:listenerEndpoint:contextUUID:extensionContext:]
-[_EXNSExtensionContextShimImplementation inputItems]
-[_EXNSExtensionContextShimImplementation _auxiliaryConnection]
resultType
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Query/EXQuery.m
record
_extensionPointIdentifier
_platform
_predicate
EXQuery: extension point %@ platforms: %d
EX Service client notify queue 
-[_EXServiceClient resultWithQuery:]_block_invoke
v24@?0@"_EXQueryResult"8@"NSError"16
-[_EXServiceClient resultWithQuery:]
-[_EXServiceClient fetchResultWithQuery:completionHandler:]_block_invoke
-[_EXServiceClient fetchResultWithQuery:completionHandler:]
v16@?0@"_EXQueryResult"8
-[_EXServiceClient _beginActiveQuery:]_block_invoke
-[_EXServiceClient launchWithConfiguration:error:]_block_invoke
v24@?0@"_EXExtensionProcessHandle"8@"NSError"16
EXQuery async execution queue
Notification queue
@count
NSDictionary
@avg
@max
@min
@sum
B16@?0@8
NSNumber
@distinctUnionOfObjects
@unionOfObjects
@distinctUnionOfArrays
@unionOfArrays
NSArray
@distinctUnionOfSets
NSSet
NSTruePredicate
EXExtensionIsPredicateSafeToExecuteWithObject
NSExtensionActivationDictionaryVersion
NSExtensionActivationUsesStrictMatching
SPECIFIED_COUNT
TYPE
predicate != NULL
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtension+Filtering.m
OTHER_TYPES
OTHER_TYPE
Generated predicate %@ for rule %@
ACCEPT
REJECT
TYPES
EXCEPT_TYPES
v32@?0@8@16^B24
REJECTED_TYPES
NSExtensionUseAlternateRules
v32@?0@"NSNumber"8Q16^B24
NSExtensionActivationSupportsLocationWithMaxCount
NSString
length
NSOrderedSet
NSCompoundPredicate
NSComparisonPredicate
NSFalsePredicate
EXExtensionIsSafePredicateOperatorTypeForObjectWithSubquerySubstitutions
valueForKey:
valueForKeyPath:
EXExtensionIsSafeExpressionForObjectWithSubquerySubstitutions
path
from:subtract:
add:to:
public.plain-text
com.apple.mapkit.map-item
([rule isKindOfClass:objc_getClass("NSString")] || [rule isKindOfClass:objc_getClass("NSDictionary")])
NSExtension predicate cache
Generating predicate for predicate dictionary %@
Got predicate %@
activation_rules
plist
RULES
GENERIC_ACCEPT
GENERIC_REJECT_EXCEPT_ONE_OTHER_TYPE
GENERIC_REJECT_EXCEPT_MULTIPLE_OTHER_TYPES
GENERIC_ENFORCE_ALL_TYPES
GENERIC_ENFORCE_ANY_TYPE
GENERIC_ENFORCE_ALL_TYPES_WITH_EXCEPTIONS
GENERIC_ENFORCE_ANY_TYPE_WITH_EXCEPTIONS
Unable to load rules from internal property list, aborting. Error: %@
[configuration isKindOfClass:_EXSceneConfiguration.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Scene/EXSceneSession.m
class_conformsToProtocol(configuration.sceneClass, @protocol(_EXScene))
scene
[scene conformsToProtocol:@protocol(_EXScene)]
sceneDelegate
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXExtensionContext.m
-[_EXExtensionContext shouldAcceptXPCConnection:]
-[_EXExtensionContext completeRequestReturningItems:completionHandler:]
@"<NSSecureCoding><NSObject>"24@?0@"NSSet"8^@16
identifier
This class may only be encoded by an NSXPCCoder
endpoint
`_EXPromise` could not be decoded
@24@?0@"NSSet"8^@16
endpoint != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Promise/EXPromise.m
identifier != nil
[classes containsObject:NSObject.class] == NO
v16@?0@"<NSSecureCoding><NSObject>"8
[classes containsObject:NSObject.class]
promiseBlock != nil
_extensionIdentity != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXLaunchConfiguration.m
extension
instanceIdentifier
sandboxProfileName
preferredLanguages
bundleID: %@ instance ID: %@
com.apple.extensionkit.host.extension-point-identifiers
solePersonality
bundleInfoDictionary
__extensionPrincipalClass != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXConcreteExtensionContextVendor.m
_EXAllowedItemPayloadClasses
NSExtensionMainStoryboard
NSExtensionContextClass
%s - %s:%d: Unable to find NSExtensionContextClass (%@) in extension bundle - did you link the framework that declares the extension point?
__extensionContextClass != nil
com.apple.NSExtensionContest-completion-concurrent
NSExtensionShouldCreatePrincipalObject
%s - %s:%d: _extensionContextClass: (%@) returned nil from initializer!
com.apple.NSExtensionContext
[context isKindOfClass:_EXExtensionContext.class]
principalObject != nil
[__extensionPrincipalObjects objectForKey:UUID] == nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/EXExtensionIdentity.m
EXDefaultUserElection
LSSettingsStore
EXAppExtensionAttributes
extensionPointIdentifier
bundleIdentifier
containingBundleRecordIdentifier
platform
UUID
localizedName
containingURL
sdkDictionary
extensionDictionary
attributes
entitlements
userElection
defaultUserElection
Extension identity [%@]: %@ extension point: %@ platform: %u
EXRequiresLegacyInfrastructure
-[_EXExtensionIdentity entitlementNamed:ofClass:]
EXSceneManifest
com.apple.showsInExtensionsManager
_EXHostRequirements
_EXHostableByContainerAppOnly
EXSpotlightIndexable
_EXSandboxProfileName
EXSandboxProfileName
NSExtensionSandboxProfile
EXAlternateSandboxProfileNames
ISIcon
Unable to read plist at %@
Unable to deserialize %@
Extension cache at path [%@] not a dictionary: %@
com.apple.extensionKit.errorDomain
EXPromiseCoderException
%@ Request PK UUID: %@ with item count %lu
System/Library/Frameworks
System/Library/PrivateFrameworks
AppleInternal/Library/Frameworks
SIMULATOR_ROOT
envvar
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/Registration/EXFrameworkScanner.m
System/iOSSupport
AppleInternal
System/iOSSupport/AppleInternal
appexpt
framework
Frameworks
NSExtensionSDK
EXDeclaringPath
EXCatalystSDKVariant
v32@?0@"NSString"8@"NSDictionary"16^B24
appex
v24@?0@"NSURL"8^B16
v24@?0^{__CFBundle=}8^B16
_NSItemProviderIdentifierPayload
_NSItemProviderTypeIdentifierPayload
_NSItemProviderExpectedValueClassPayload
_NSItemProviderOptionsPayload
extensionContextIdentifier
loadedItems
item
error
v24@?0@"<NSSecureCoding>"8@"NSError"16
v32@?0@"NSString"8Q16^B24
resourceURL
sandboxExtensionToken
Cannot issue a sandbox extension for file "%@": %s
enabledCount
disabledCount
unelectedCount
query != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Query/EXExtensionAvailability.m
[token isKindOfClass:_EXExtensionAvailablilityObserver.class]
sceneIdentifier
initializationPromise
sizeBridgingOptions
extension-process-background-queue
NSExtensionMainStoryboard~ipad
_UIViewServiceSessionManager
[contextVendor isKindOfClass:EXConcreteExtensionContextVendor.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/Shim/EXNSExtensionShimExtension.m
[extension isKindOfClass:_EXNSExtensionShimExtension.class]
context.class != _EXExtensionContext.class
com.apple.extensionkit
default
registration
signpost
identities
availablility
removedUUIDs
EXActiveQueryUpdate added: %@ removed UUIDs: %@
launchConfiguration
auditToken
serviceListenerEndpoint
sandboxExtensions
Extension: %@ pid: %d
Failed to aquire assertion for pid: %d
processError
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/ExtensionProcess/EXExtensionProcessHandle.m
System/Library/xpc/extensions.plist
System/Library/xpc/launchd.plist
System/Library/ExtensionKit
AppleInternal/System/Library/ExtensionKit
ExtensionPoints
Extensions
appexlist
AppExtensions
LegacyExtensionPointAllowList
EXExtensionPointDefinitionPath
EXNativeSDKVariant
NSExtensionPointIdentifier
NSExtensionPointName
NSExtensionPointVersion
EXExtensionPointConfiguration
'%@' platform `%d` SDK dictionary: %@'
config
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/Registration/EXEnumerator.m
/System/iOSSupport/
v24@?0@"NSString"8@"NSDictionary"16
/System/
/AppleInternal/System
NSExtensionPrincipalClassProhibited
/System/Library/Frameworks
/System/Library/PrivateFrameworks
v16@?0@"NSURL"8
B24@?0@"NSString"8@"NSDictionary"16
extensionkit.internal
com.apple.extension-kit
ExtensionKit
use_lsd_extensionkitservice_for_discovery
use_lsd_extensionkitservice_for_launch
prefer_inprocess_discovery
reject_extension_requests_with_insecure_input_items
requires_load_operator_secure_decoding
host_requires_entitlements
enforce_legacy_extension_point_allow_list
allow_prototype_api
allow_prototype_spi
assert_on_disallowed_prototype_api_ussage
assert_on_disallowed_prototype_spi_ussage
com.apple.share.AirDrop.send
com.apple.share.Mail.compose
com.apple.messages.ShareExtension
com.apple.share.CloudSharing.invite
automatically_sandbox_extensions
personaUniqueString != nil
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/EXPersona.m
B24@?0@"_EXExtensionIdentity"8^B16
EXActiveQuery query: %@ observers: %@
hostEndpoint
parameters
scenenEndpoint
com.apple.lsd.extensions
com.apple.extensionkitservice
Class EXGetExtensionClass(void)
Class EXGetExtensionContextInternalClass(void)
Class EXGetExtensionContextVendorClass(void)
info
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/PK Subsystems/EXService_Subsystem.m
_connectionHandler
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/EXExtension/Extension/Internal/EXConnectionHandlerExtension.m
_principalObject
(_connectionHandler || presentsUserInterface == YES)
[extensionRep isKindOfClass:_EXExtensionIdentity.class]
/Library/Caches/com.apple.xbs/Sources/ExtensionFoundation_Sim/ExtensionFoundation/Source/NSExtension/NSExtensionSupport/NSExtension+ExtensionKitAdditions.m
NSExtensionContext cannot accept connections in non-extension processes
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
IPHONE_SIMULATOR_ROOT
ProductVersion
%d.%d.%d
Unrecognized extension type: '%s'
%s - %s:%d: Unrecognized extension type: '%s'
SwiftUI: Swift entry point section not found in the current image
SwiftUI: Swift entry point data not found.
SwiftUI: Swift entry point address could not be determined.
SwiftUI: Falling back to main function lookup via dlsym().
%s - %s:%d: Invalid bundle record for current process: %@
PRE: swift entry point
POST: swift entry point
SwiftUI: Initialized extension with bundle ID '%@'.
SwiftUI: Unable to find entry point function for extension with bundle ID '%@'.
Falling back to delegate class lookup.
%s - %s:%d: Extension class '%@' must be a subclass of '%@'
%s - %s:%d: Unexpected nil EXExtension instance
PRE: -[%@ init]
POST: -[%@ init]
extensionkit-lifecycle
No value for 'EXAppExtensionDelegateClass' found, extension delegate is not specified
No extension delegate specified, that's ok.
Pinging launchd
launch
exit
Starting service listener.
Incoming service level XPC connection: %@
-shouldAcceptXPCConnection:
Will finish launching extension: %@
-willFinishLaunching
Did finish launching extension: %@
-didFinishLaunching
Failed to load extension context class '%@', does the appex link the extension point framework?
Failed to load connection handler class.
EXConnectionHandlerClass must conform to %@.
discovering extensions
discovered extension: %{public}@, uuid: %@
errors encountered while discovering extensions: %{public}@
discovered extension: %{public}@, url: %@
discovered extensions: attributes %@, extensionSet %{public}@
%@ Making host default XPC interface, allowed payload classes: %@, allowed error classes: %@
%s - %s:%d: _connectionUUID is required for process per request!
Making extension context and XPC connection for %@ request: %@
%s - %s:%d: Unable to initialize extension context class: %@
extension connection was interrupted! request: %@; plugin_identifier: %@
extension connection was invalidated! request: %@; plugin_identifier: %@
Failed to make extension context for extension: %@ request: %@
extension assertion was invalidated! request: %@; plugin_identifier: %@
Failed to make XPC connection for extension: %@ request: %@
could not terminate extension: %{darwin.errno}d
terminated extension with pid %d
%@ Finished making extension context: %@ and connection: %@
%@ really begining request: %@ synchronously: %s
Unable to setup extension context - error: %@
%@ Did begin request: %@ context UUID: %@
UUIDs did not match!
Extension request contains input items but the extension point does not specify a set of allowed payload classes. The extension point's NSExtensionContext subclass must implement `+_allowedItemPayloadClasses`. This must return the set of allowed NSExtensionItem payload classes. In future, this request will fail with an error.
%@ request %@ is valid: %s
async extension request
begin async extension request %@
Async Begin using error: %@
begin extension request %@ complete with identifier: %@
Async Begin using internal completion handler called multiple times. Due to error after initial completion: %@
Async Begin using internal completion handler called multiple times. Due to error before initial completion for request: %@
Async Begin using internal completion handler called multiple times. For unknow reasons. (request ID: %@ error: %@)
begin extension request %@ complete with error: %@
async extension request'
synchronus extension request
synchronus begin extension request %@
Failed to begin using with error: %@
completed synchronus begin extension request %@ with identifier: %@ error: %@
synchronus extension request'
nil service connection for UUID: %@
Unable to use extension bundle: %@
%s - %s:%d: Unable to fetch URL for plugIn!
%s - %s:%d: PlugIn's UUID is nil!
Unable to communicate with bundle helper: %@
Cannot access privacy settings for %@: %@
Timed out attempting to resolve bundle!
completing extension request
tear down extension request
cancelling extension request
in completeTearDown block
%s - %s:%d: infoDictionary is not available
%s - %s:%d: Unable to load host extension context class: %@
Attempt to reuse spect multi instance extension. Request will fail with error: %@
begin using plugin
Assertion invalidated: Invalidating XPC connection %@ 
Aquired asertion %@ for running extension with pid %d
%s - %s:%d: attempting to message a nil plugin!
%s - %s:%d: attempting to message a spent plugin!
Plugin %@ must have pid! Extension request will fail
Failed to aquire assertion for plugin: %@ pid: %d
BeginUsing: PluginKit responded for requesr: %@ with error: %@
Unable to acquire process assertion in beginUsing: with plugin identifier: %@, killing plugin
PlugInKit error in beginUsing: with plugin identifier: %@, killing plugin
BeginUsing: Calling into PluginKit plugin: %@ requestUUID: %@
EndUsing failed to endUsing extension %@with error: %@
EndUsing: Calling into PluginKit plugin: %@ requestUUID: %@
Client requested termination of extension %@ with signal: %d 
teardown requested for request %@ to extension %@ but no such request was issued, or the request already completed or canceled earlier.
tearing down extension request %@ to extension %@ (last known pid %d)
Schedule request '%@' assertion (%@) cleanup after %llu seconds.
Begining request '%@' assertion (%@) cleanup.
Completed request '%@' assertion (%@) cleanup.
__plugin endUsing for '%@' returned error: %@
%s - %s:%d: can't get info dictionary keys from a nil plugin
in EXConcreteExtensionTearDownRequestCompletion for plugin pid %d
Derived context: %@
%s - %s:%d: unexpected nil `_extensionRequest`
Setting allowed payload classes: %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented. Setting the allowed payload classes to %@
+[NSExtensionContext _allowedItemPayloadClasses] not implemented, the interface will not support NSExtensionItems in the request completion handler.
%s - %s:%d: unexpected nil subclass aux host protocol!
%@ initialized with inputItems: %@ endpoint: %@ UUID: %@ extensionContext: %@
%@ initialized with inputItems: %@ UUID: %@ 
_initializeAuxillaryConnectionWithListenerEndpoint: %@ - extensionContext: %@ auxVendorProtocol: %@ auxHostProtocol:%@
%s - %s:%d: must define both host and vendor aux protocols!
AUX connection created: %@
%@ : AUX connectino has already been created for endpoint '%@'.
%s - %s:%d: Class %@ does not conform to aux host protocol: %@
AUX Listener created: %@
%@ : AUX Listener has already been created.
invalidated extension context: %@
preparing to call _completeRequestReturningItems:forExtensionContextWithUUID: UUID: %@
completing request
completing request - consume items
completing request - completion part 1
completing request - completion part 2
call _completeRequestReturningItems:forExtensionContextWithUUID:
calling out to _completeRequestReturningItemsSecondHalf
preparing to call _cancelRequestWithError:forExtensionContextWithUUID: UUID: %@
cancelling request
cancelling request - teardown
opening URL
opening URL completion
failed to ping host: %@
%s - %s:%d: listener is one-shot!
New connection: %@ for listener: %@ interface: %@
in _NSExtensionCompleteRequestReturningItemsContinuation
Skipping host app record lookup for system extension point: %@
Extension point: '%@' has no parent app.
Extension point '%@' is declared by the Host, allowing discovery.
Failed to get LSExtensionPointRecord for extension point identifier '%@' platform: '%d'
%@ Adding observer '%@' for query '%@'
New active query '%@'
%@ LS database observing started.
%@ Cannot run query `%@` with error: `%@`
%@ Removing observer '%@' for query '%@'
%@ No more observers for query '%@'
%@ LS database observing stopped
Extesnsion has already been evaluated: %@
Resolved host app record: %@
Unable to resolve host app record for query: %@ error: %@
Extension %@ is enabled
Extension %@ is unelected
Extension %@ is disabled
Cannot run query `%@` with error: `%@`
%@ query '%@' completed with results: `%@`
Database changed
Settings changed
Received SIGTERM, exiting.
Failed to add service with status: [%d] %s 
%@ Overriding sandbox profile name: `%@`
Launched extension `%@` pid %d
Adding extension service sandbox extension for host pid %d
%s - %s:%d: Unexpected subservice class %@
Adding '%@'subservice sandbox extension for host pid %d
Could not acquire assertion for extension: %@, pid: %d, error: %@
RBSLaunchRequest error launching extension `%@` error: `%@`
Recieved connection request from '%d'
Createing interface for launch for connection request from '%d'
Createing interface for dicovery and launch for connection request from '%d'
Createing interface for dicovery for connection request from '%d'
Starting XPC listener for connection request from '%d'
No XPC interface available. XPC listener was *not* started for connection request from '%d'
Cannot run query `%@` for host process %d with error: `%@`
Connection invalidated: %@
Connection interupted: %@
Preparing extension %@ for host: %@
launched extension process: %@
Instance '%@' released so its asertion can be invalidated.
failed to launch extension process with error: %@
-extensionsWithQuery: failed with error: %@
Notifying client with pid `%d` of querie `%@` update: %@
Starting ExtensionKit service for discovery `%s`, launch `%s`
ExtensionKit service is disabled and will not start.
Initializing %@.
Calling main function at address %lx.
Extension 'main() returned EXIT_FAILURE'
Failed to find the 'main()' function in the main binary.
%@ - Begin using bunde %@ with personality: %@ personality.
SwiftUI: Process mach header not found.
Input items match active web page alternative.
Applying active web page alternative to items: %@ matching rule %@
Failed to locate LSApplicationExtensionRecord for %@
%s - %s:%d: Unexpected nil extension identity
%s - %s:%d: Unexpected nil extension representing
%s - %s:%d: Invalid extension class %@
Vending RBSProcessIdentity for: %@ with host: %@ 
%s - %s:%d: Sandbox profile name required
%@ Requesting sandbox profile name: `%@`
failed to obtain execPath
Created trusted extension rep from extension bundle ID: %@
Host %d is not entitled to launch extension %@ error: %@
Extension %@ requires legacy infrastructure.
Unexpected sandbox profile name `%@` specified in launch configuration.
Successfuly configured launch context for: %@ instance: %@ host: %@
Failed to get extecutable path for: %@ with error: %@
%s - %s:%d: Unexpected class for decoding
%s - %s:%d: Unexpected key for decoding
%s - %d: Unsupported method: %s
%s - %d: Unsupported initializer: %s
%s - %d: Unsupported property access: %s
%s - %s:%d: Abstract method called.
EXQuery<%lx> evaluating: %@ match: %s
Unable to resolve host app record for query: %@, error: %@
extension point not found for query `%@`
Enumerating all available extensions for host: %@
Remote query change notification %@
Remote availablility change notification
%s failed with error: %@
Running %s in remotely.
Failed to aquire assertion: %@
Execute queries sync
Execute queries async
Resuming Query observer: '%@'
Suspending Query observer: '%@'
Query result update
Query results update: To add: '%@'
Query results update: To remove UUIDs: '%@'
Query results: removing '%@'
Query results did change: %@
Update original results:
updated results:
Use of NSTruePredicate is forbidden: %@
%s: NSPredicate considered unsafe: %@
%s - %s:%d: Unable to create predicate!
%s: NSPredicateOperator considered unsafe: %ld
%s: Key%@ "%@" not safe to evaluate with %@
%s: Operand expression not safe to execute %@
%s: No operand expression
%s: Keypath not of expected class (%@, %@)
%s: Argument expression not safe to execute %@
%s: Unexpected number of arguments %ld
%s: Unsafe operand %@
%s: Unexpected selector name %@
%s: Unexpected NSExpression type %ld
%s: Expression considered unsafe: %@
%s - %s:%d: Unable to parse rule which is not either a string or a dictionary - type: %@
Generating predicate from dict: %@
Failed to get NSURLIsDirectoryKey property for URL '%@' with error '%{public}@'
Failed to get NSURLIsApplicationKey property for URL '%@' with error '%{public}@'
Extension `%s` of type: `%s` launched.
%@ allocated
%@ deallocated with identifier: '%@'
dealloc
Session connection request from '%d': Recieved 
XPC interface successfully configured for session %@, accepting connection.
-[EXSceneSession shouldAcceptXPCConnection:]
XPC interface invalidated for session '%@'.
XPC connection invalidate
Preparing for connection scene session extension: %@
%s - %s:%d: Unexpected configuration class '%@' expected '%@'
%s - %s:%d: Scene class %@ must conform to `%@`
Making scene of class '%@'
Scene is: %@
%s - %s:%d: Failed to create scene of class '%@'
%s - %s:%d: Scene %@ must conform to `%@`
Making UI scene delegate of class '%@'
UI scene delegate is: %@
%s - %s:%d: Failed to create UI scene delegate of class '%@'
ID: %@
Begin session: %@
PRE: -[EXSceneSession makeSceneWithError:]
POST: -[EXSceneSession makeSceneWithError:]
PRE: -[EXSceneSession connectToScene:]
POST: -[EXSceneSession connectToScene:]
Initialized
Failure
invalidate
%s - %d: Abstract method called: `%s` on class: `%@`
'%s' called with items. This is not supported!
Deallocating promise `%@`
`_EXPromise` %@ is only encodable using an `NSXPCCoder`
Registering promise to send over XPC connection: %@
%s - %s:%d: endpoint is nil
%s - %s:%d: identifier is nil
%s - %s:%d: `classes` contains `NSObject`
Promise `%@` registered
%s - %s:%d: promiseBlock is nil
Promise `%@` unregistered
Failed to resolve promise: %@
Failed to resolve, no promise with identifier %@
Failed to get audit token for current process: %llx
Host is missing entitlement: %@ : %@
Cecking in with launchd immediately
Scheduling launchd after initial event
%s - %s:%d: Unable to find NSExtensionPrincipalClass (%@) in extension bundle! Please verify that the extension links the required frameworks and that the value for NSExtensionPrincipalClass is prefixed with '$(PRODUCT_MODULE_NAME).' if the class is implemented in Swift.
NSExtensionPrincipalClass `%@` does not conform to NSExtensionRequestHandling protocol!
beginning request with UUID: %@ with endpoint: %@ for items: %@
beginning extension request
tearing down context in extension due to interruption
tearing down context in extension due to invalidation
error from host: %@
creating principle object: %@ - with extensionContext %@
view services will create object for extensionContext: %@
in _willPerformHostCallback: block ( UUID: %@ error: %@ )
tearing down extension context
%s - %s:%d: The extension point's EXExtensionContextClass class (%@) must be a subclass of `_EXExtensionContext`
%s - %s:%d: principal object cannot be nil!
%s - %s:%d: There is already a principal object (%@) for UUID (%@)
%s - %s:%d: %@ cannot be decoded.
Failed to locate container app bundle record. The process may not be entitled to access the LaunchServices database or the app may have moved.
%s - %s:%d: _EXExtensionIdentity subclass must implement '%s'
Make extension XPC connection
making XPC connection for extension: %@
Failed to make xpc connection for extension %@  (extension launch failed)
Extension delegate class is `%@`
Extension delegate is: %@
%s - %s:%d: getenv( "SIMULATOR_ROOT" ) returned NULL
NSExtensionSDK found in '%@'
failed to load file at `%@` with error: `%@`
Failed to parse extension point definition with error: `%@`
Extension point declaration `%@` found.
Updating catalyst SDK variant with definition from `%@`
Updating native SDK variant with definition from `%@`
Scanning bundle for AppExtensions at : `%@`
Discoverd App Extension: `%@`
Scanning frameworks at '%@'
Processing: %@
Failed to issue sandbox token for URL: '%@' with error: '%@'
Decoded URL: `%@` sandbox token: `%@`
Failed to attach sandbox extension to URL: '%@'
Encoding URL: `%@` sandbox token: `%@`
Issuing sandbox extension for URL: `%@` to pid: `%d`
%s - %s:%d: nil query
%s - %s:%d: invalid observer token
Failed to create extensionProcess for extension '%@' error: %@.
NSExtensionPrincipalClass could not be resolved to class!
NSExtension shim launched with principal class: %@
%s - %s:%d: Unexpected _NSExtensionContextVendor class (%@) must be of type `_NSExtensionContextVendor`
%s - %s:%d: Unexpected extension class '%@'
Failed to consume sandbox extension. Token is NULL
Failed to consume sandbox extension `%s` - errno=%{darwin.errno}d
Consumed sandbox extension `%s` -> %llu
Extending the sandbox for `%@` extensionProcess pid: `%d`.
Failed to consume sandbox extension for app extension: %@ pid: `%d`
Creating connection for extension withidentifier: '%@'
Failed to create connection for extension withidentifier: '%@'
Assertion for extension process '%@' invalidated
Invalidating connection '%@'
Informing process observer '%@' of extension process invalidation
new process %@ was created in a race and is valid, returning it.
created new process %@.
New process is nil.
%s - %s:%d: Process is nil with no error!
existing process %@ is valid, returning it.
Failed to load or create cache extension/extension point info.
extensionURLEnumerator
_extensionLiveEnumerator
extensionPointDefinitionEnumerator
_extensionPointLiveEnumerator
Empty definition for `%@`
Failed to read extension point cache at URL `%@` with error: `%@`
Translating SDK Dictionary: %@
Translated SDK Dictionary: %@
Extension point '%@' - Synthesized NSExtension dictionary: %@ -> %@
Extension point '%@' - flattened EXExtensionPointConfiguration dictionary: %@ -> %@
NSExtension Extension Point identifier: %@ is legacy: %s
Rejected invalid Extension Point `%@` targeting DEPRECATED NSExtension infrastructure!
New Extension Point `%@` targeting DEPRECATED NSExtension infrastructure!
NO list of legacy extension points found. All extension points are considered valid... for now.
[%d] Enumerator returning: '%@'
Discovered list of App Extension paths '%@'
unexpected class for entry in %@ extension list.
Looking for caches at URLs: %@ with know paths: %@
Discovered App Extension at '%@'
Discovered cached App Extension paths '%@'
Excluding extension at path: `%@`
%s - %s:%d: Persona unique string should not be nil
[%@] Sending initial observer update to %@
[%@] Sending observer update to %@
[%@] Skipping observer update to %@
%s returning %@
Initializing 'EXService_Subsystem'
Begin using %@ for bundle %@
%s - %s:%d: Failed to get extension info  for current process
NSRunLoop type detected. Start listening with imediate launchd checkin.
%@ (non-NSRunLoop) type detected. Start listening with delayed launchd checkin.
Creating connection handler of class `%@` with principal object `%@`
%s - %s:%d: Failed to instantiate connection handler: `%@`
%s - %s:%d: Failed to instantiate principal object: `%@`
Creating connection handler of class `%@` with nil principal object
%s - %d: Failed to instantiate connection handler class: `%@` principal class: `%@`
%s - %s:%d: Failed to instantiate connection handler class: `%@`
%s - %s:%d: Unexpected input type with class: `%@`
Errors encountered while discovering extensions: %{public}@
UUID not found for extension representation: %@
Setting preferred languages on %@: %@
Extension point not found for: %@ with error: %@
softlink:r:path:/System/Library/Frameworks/ExtensionKit.framework/ExtensionKit
softlink:r:path:/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
softlink:r:path:/System/Library/PrivateFrameworks/IconServices.framework/IconServices
_EXRunningExtension
NSXPCListenerDelegate
NSObject
_EX_LSExtensionPointRecord_
_EXConnectionHandler
Configuration
_EXExtensionConfigurationProviding
_EXExtensionPointConfigurationProviding
_EXDictionaryLike
EXConcreteExtension
ExtensionStateManagement
NSExtensionBundleHelper
EXExtensionPointCatalog
ExtensionKitAdditions
EXExtensionContextHosting
EXExtensionContextVending
_NSExtensionAuxHostingBase
EXExtensionContextImplementation
NSSecureCoding
NSCoding
NSCopying
_NSExtensionContextInternalImplementation
_EXDiscoveryController
LSObserverDelegate
_EXServiceDelegate
_EXService
_EXServiceProtocol
_EXConnectionActiveQueryObserver
_EXActiveQueryObserver
EXSwiftUI_Subsystem
PKModularService
NSExtensionActiveWebPageAlternative
_EXRunningExtensionInfo
EXExtensionInfoProviding
_EXHostConfiguration
_EXExtensionInstanceIdentifier
RBSProcessIdentity
Overlay
_EXDecoderHack
_EXNSExtensionContextShimImplementation
_EXNSExtensionShimExtensionXPCProtocol
_EXQuery
_EXRecordQuery
_EXValuesQuery
Execution
_EXActiveClientQuery
EXQueryResultsProtocol
_EXServiceClient
_EXSceneConfiguration
_EXQueryController
_EXServiceClientObserver
Deprecated
_EXQueryObserver
_EXQueryControllerDelegate
EXTransaction
_EXExtensionPredicateBuilder
Filtering
_EXSceneSessionExtensionXPCProtocol
_EXSceneSessionHostXPCProtocol
_EXScene
_EXSceneSession
_EXExtensionContext
_EXPromise
_EXPromiseManagerXPCProtocol
_EXPromiseManager
_EXLaunchConfiguration
NSExtensionRequestHandling
EXConcreteExtensionContextVendor
_EXExtensionRecordIdentity
_EXExtensionValueIdentity
_EXExtensionIdentity
_EXExtensionRepresenting
_EXExtension
EXExtensionRequest
EXFrameworkScanner
_EXItemProviderExtensionVendorLoadOperator
_EXItemProviderLoading
_EXItemProviderCopyingLoadOperator
_EXItemProviderSandboxedResource
_EXExtensionAvailablility
_EXExtensionAvailablilityObserver
Observer
_EXSceneSessionParameters
_EXExtensionProcess
_EXExtensionProcessObserver
EXUIKit_Subsystem
_EXNSExtensionShimExtension
_EXNSExtensionShimScene
_EXQueryResult
_EXQueryResultUpdate
_EXSandboxExtension
_EXExtensionProcessHandle
_EXExtensionProcessMannger
_EXSceneSessionManager
_EXExtensionPoint
EXExtensionPoint
EXEnumeratorConfig
EXEnumerator
EXExtensionPointEnumerator
EXOSExtensionEnumerator
_EXDefaults
_EXPersona
_EXActiveQuery
_EXSceneSessionConnectionRequest
_EXSceneSessionConnectionResponse
_EXDiscoveryServiceProtocol
_EXLaunchServiceProtocol
EXService
EXService_Subsystem
_EXMainConnectionHandler
_EXConnectionHandlerExtension
EXXPCUtil
unionSet:
serviceListener
initWithMachServiceName:
arguments
removeObjectsAtIndexes:
dictionary
URLByAppendingPathComponent:isDirectory:
setObject:forKey:
initWithMachServiceName:options:
array
removeObjectsInArray:
sharedManager
member:
setObject:forKeyedSubscript:
dictionaryWithCapacity:
initWithName:reason:userInfo:
arrayByAddingObjectsFromArray:
unsignedIntegerValue
dictionaryWithContentsOfURL:
explanation
minusSet:
predicateOperatorType
arrayWithObject:
removeObserver:name:object:
mutableCopy
dictionaryWithDictionary:
setArguments:
arrayWithObjects:count:
initWithPID:flags:reason:name:
predicateWithBlock:
expressionType
isEqualToSet:
dictionaryWithObject:forKey:
predicateWithFormat:
expressionValueWithObject:context:
isEqualToString:
dictionaryWithObjects:forKeys:count:
useBundle:error:
setByAddingObject:
initWithPersistentIdentifier:
predicateWithSubstitutionVariables:
isFileURL
_killConnection:
fileExistsAtPath:
didChangeValueForKey:
setClasses:forSelector:argumentIndex:ofReply:
initWithArray:
spent
fileSystemRepresentation
setRemoteObjectInterface:
attachments
_extensionAuxiliaryHostProtocol
numberWithInt:
isSubclassOfClass:
fileURLWithPath:isDirectory:
numberWithInteger:
_extensionAuxiliaryVendorProtocol
initWithBundleIdentifier:
_loadItemOfClass:forTypeIdentifier:options:coerceForCoding:completionHandler:
fileURLWithPath:relativeToURL:
startAccessingReturningError:
initWithBundleIdentifier:error:
objectAtIndex:
userElectionForExtensionKey:
filteredArrayUsingPredicate:
containsObject:
startAccessingSecurityScopedResource
discoverPlugInsForAttributes:flags:found:
userInfo
objectAtIndexedSubscript:
absoluteURL
_loadOperator
startAccessingWithOptions:error:
filteredSetUsingPredicate:
containsString:
acquire
objectEnumerator
userPersonaUniqueString
findPlugInByPathURL:reply:
startObserving
keyEnumerator
objectForKey:
setSandboxProfile:
findPlugInByUUID:reply:
contextWithIdentity:
lastPathComponent
startViewServiceSessionManagerAsPlugin:
objectForKey:ofClass:
initWithCapacity:
firstObject
continuouslyDiscoverPlugInsForAttributes:flags:found:
_loadPreviewImageOfClass:options:coerceForCoding:completionHandler:
objectForKeyedSubscript:
addBarrierBlock:
encodeBytes:length:forKey:
copy
objectWithItemProviderData:typeIdentifier:error:
encodeInt32:forKey:
initWithServiceName:
initWithContentsOfURL:
launchPersonas
count
stopAccessing
valueForKey:
addEntriesFromDictionary:
setExplanation:
encodeInteger:forKey:
objectsPassingTest:
countByEnumeratingWithState:objects:count:
launchRequestWithUUID:launchPersona:
stopAccessingSecurityScopedResource
setExportedInterface:
encodeObject:forKey:
initWithContext:
initWithURL:
extensionIdentityForPlugInKitIdentifier:bundledURL:hostIdentifier:UUID:
valueForKeyPath:
createInstanceWithUUID:
stopObserving
function
addObject:
setExportedObject:
variable
initWithUTF8String:
beginUsing:
processInfo
extensionIdentityForPlugInKitIdentifier:hostIdentifier:UUID:
stringByAppendingFormat:
currentCalendar
addObjectsFromArray:
observerDidUpdate:
initWithUUID:error:
currentConnection
stringByAppendingString:
leftExpression
getRelationship:ofDirectoryAtURL:toItemAtURL:error:
initWithDictionary:
initWithUUIDString:
getResourceValue:forKey:error:
stringByReplacingOccurrencesOfString:withString:options:range:
addObserver:selector:name:object:
setExtensionOverlay:
oneShotUUID
weakObjectsHashTable
beginUsingWithError:
extensionOverlay
propertyListWithData:options:format:error:
_queue
currentProcess
stringValue
length
URLByAppendingPathComponent:
operand
weakToWeakObjectsMapTable
boolValue
protocol
getUUIDBytes:
stringWithCString:encoding:
willChangeValueForKey:
bundleForClass:
stringWithFormat:
loadItemForTypeIdentifier:options:completionHandler:
dataWithBytesNoCopy:length:freeWhenDone:
setExtensionState:
orderedSet
handleForIdentifier:error:
dataWithContentsOfFile:options:error:
stringWithUTF8String:
allKeys
setUserElection:
bundleInfoDictionary
intValue
hasPrefix:
localizedDescription
dataWithContentsOfURL:
strongToWeakObjectsMapTable
allObjects
bundleRecordForAuditToken:error:
integerValue
localizedInfoDictionaryForKeys:completion:
rightExpression
subpredicates
dataWithContentsOfURL:options:error:
hasSuffix:
allValues
path
setHostPid:
bundleRecordForCurrentProcess
interfaceWithProtocol:
setUserElection:forExtensionKey:error:
date
substringFromIndex:
pathExtension
bundleURL
setValuesForKeysWithDictionary:
localizedShortName
substringToIndex:
allowedAppBundleIDsForBidirectionalDataMovementAfterApplyingFilterToBundleIDs:localAppBundleID:localAccountIsManaged:
setIdentity:
xpcServiceIdentifier
enumerateKeysAndObjectsUsingBlock:
URLByDeletingLastPathComponent
lowercaseString
decodeBytesForKey:returnedLength:
initWithFormat:
enumerateObjectsUsingBlock:
allowedClasses
cancelPlugInDiscovery:
extensionPointRecord
rangeOfString:
setWithArray:
mainBundle
hostIdentifier
decodeInt32ForKey:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
internalImplementation
setWithObject:
caseInsensitiveCompare:
hostPid
decodeIntegerForKey:
initWithIdentifier:platform:error:
enumeratorWithExtensionPointRecord:options:
persistentIdentifier
characterAtIndex:
setWithObjects:
hostProcess
enumeratorWithOptions:
setWithObjects:count:
synchronousRemoteObjectProxyWithErrorHandler:
decodeObjectOfClasses:forKey:
enumeratorWithParentApplicationRecord:
andPredicateWithSubpredicates:
registeredTypeIdentifiers
setWithSet:
defaultCenter
URLByResolvingSymlinksInPath
errorWithDomain:code:userInfo:
initWithInputItems:
anonymousListener
extensionState
collection
defaultHost
identifierWithPid:
_setOverrideExecutablePath:
URLForResource:withExtension:
evaluateWithObject:
initWithInputItems:contextUUID:
anyObject
remoteObjectProxyWithErrorHandler:
UTF8String
teamIdentifier
exceptionWithName:reason:userInfo:
initWithInputItems:listenerEndpoint:contextUUID:
set_loadOperator:
identity
defaultManager
components:fromDate:toDate:options:
removeAllObjects
indexesOfObjectsPassingTest:
_setQueue:
UUIDString
componentsJoinedByString:
defaultService
pluginConnection
execute:assertion:error:
sharedConnection
removeObject:
_sharedExtensionContextVendor
postNotificationName:object:userInfo:
initWithListenerEndpoint:
setName:
_defaultRun:arguments:
removeObjectForKey:
sharedDatabaseContext
initFileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setObject:atIndexedSubscript:
sharedInstance
entryPointFunction
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
_startWithArguments:count:
checkIn
startWithArguments:count:
resume
shouldAcceptXPCConnection:
willFinishLaunching
didFinishLaunching
extension
setExtension:
hostAuditToken
configuration
signpost
.cxx_destruct
_extension
_configuration
_signpost
_hostAuditToken
T@"_EXExtension",&,N,V_extension
T@"<_EXExtensionConfigurationProviding>",R,V_configuration
T{?=[8I]},R,V_hostAuditToken
TQ,R,V_signpost
initWithIdentifier:platform:parentAppRecord:error:
parentAppRecord
_EX_initWithIdentifier:platform:parentAppRecord:error:
_EX_parentAppRecord
T@"LSApplicationRecord",R
extensionPointConfiguration
presentsUserInterface
requiresSceneHosting
type
supportsNSExtensionPlistKeys
principalClass
extensionContextClass
extensionClass
connectionHandlerClass
requiredHostEntitlements
internalServiceName
serviceName
TB,R
T@"NSDictionary",R
T@"NSString",R
T#,R,D
T@"NSDictionary",R,D
TB,R,D
_EX_dictionaryForKey:
_init
sharedApplication
dealloc
_shouldSendHostApplicationStateNotifications
_hostWillEnterForegroundNote:
_hostDidEnterBackgroundNote:
_hostWillResignActiveNote:
_hostDidBecomeActiveNote:
__UIKit_upcall_icons
__UI_upcall_openURL:completion:
_allowedItemPayloadClasses
beginUsingRequest:error:
beginUsingRequest:completion:
endUsingRequest:completion:
initialize
_shouldLogExtensionDiscovery
extensionsWithMatchingAttributes:error:
extensionsWithMatchingAttributes:completion:
extensionsWithMatchingAttributes:synchronously:completion:
extensionWithIdentifier:error:
extensionWithIdentifier:excludingDisabledExtensions:error:
extensionWithUUID:completion:
extensionWithURL:completion:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
globalStateQueueForExtension:
_initWithPKPlugin:
init
optedIn
attemptOptIn:
attemptOptOut:
_bareExtensionServiceConnection
_reallyBeginExtensionRequest:completion:
makeExtensionContextAndXPCConnectionForRequest:error:
_reallyBeginExtensionRequest:synchronously:completion:
validateRequest:error:
beginExtensionRequestWithOptions:inputItems:completion:
beginExtensionRequestWithOptions:inputItems:error:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:completion:
beginExtensionRequestWithOptions:inputItems:listenerEndpoint:error:
_beginExtensionRequest:completion:
_beginExtensionRequest:error:
beginExtensionRequestWithInputItems:listenerEndpoint:completion:
beginExtensionRequestWithInputItems:listenerEndpoint:error:
beginExtensionRequestWithInputItems:completion:
beginExtensionRequestWithInputItems:error:
cancelExtensionRequestWithIdentifier:
pidForRequestIdentifier:
_didCreateExtensionContext:
objectForInfoDictionaryKey:
_personas
icons
_extensionBundle
_extensionContextForUUID:
_itemProviderForPayload:extensionContext:
_isPhotoServiceAccessGranted
_completeRequestReturningItems:forExtensionContextWithUUID:completion:
_cancelRequestWithError:forExtensionContextWithUUID:completion:
_loadItemForPayload:contextIdentifier:completionHandler:
_loadPreviewImageForPayload:contextIdentifier:completionHandler:
_openURL:completion:
_isSystemExtension
_wantsProcessPerRequest
requestTeardownDelay
_hostContextClass
_plugInProcessIdentifier
_safelyBeginUsing:
_safelyBeginUsingSynchronously:request:readyHandler:
_safelyBeginUsingWithRequest:readyHandler:
_beginUsingAndCreateExtensionAssertionWithRequest:error:
_safelyEndUsing:
_safelyEndUsingRequestWithPKUUID:processAssertion:continuation:
_kill:
extensionContexts
_dropAssertion
identifier
version
attributes
infoDictionary
_localizedName
_localizedShortName
extensionPointIdentifier
connectionUUID
setConnectionUUID:
_plugIn
_setPlugIn:
_internalPersonas
_extensionServiceConnections
_setExtensionServiceConnections:
_extensionExpirationIdentifiers
_setExtensionExpirationsIdentifiers:
_extensionContexts
_setExtensionContexts:
_stashedPlugInConnection
set_stashedPlugInConnection:
requestCompletionBlock
setRequestCompletionBlock:
requestCancellationBlock
setRequestCancellationBlock:
requestInterruptionBlock
setRequestInterruptionBlock:
_requestPostCompletionBlock
set_requestPostCompletionBlock:
_requestPostCompletionBlockWithItems
set_requestPostCompletionBlockWithItems:
_allowedErrorClasses
_setAllowedErrorClasses:
_isObservingHostAppStateChanges
_setObservingHostAppStateChanges:
wantsDedicatedQueue
setWantsDedicatedQueue:
_unfairLock
_observingHostAppStateChanges
_identifier
_version
_attributes
_infoDictionary
__localizedName
__localizedShortName
_extensionPointIdentifier
_connectionUUID
__plugIn
__internalPersonas
__extensionServiceConnections
__extensionExpirationIdentifiers
__extensionContexts
__stashedPlugInConnection
_requestCompletionBlock
_requestCancellationBlock
_requestInterruptionBlock
__requestPostCompletionBlock
__requestPostCompletionBlockWithItems
__extensionBundle
__allowedErrorClasses
_wantsDedicatedQueue
T@"NSString",R,C,V__localizedName
T@"NSString",R,C,V__localizedShortName
T@"<PKPlugIn>",&,S_setPlugIn:,V__plugIn
T@"NSBundle",R,&,N,V__extensionBundle
T@?,C,V__requestPostCompletionBlock
T@?,C,V__requestPostCompletionBlockWithItems
Td,R
T@"NSUUID",C,N,V_connectionUUID
Tq,N,V_wantsDedicatedQueue
T@"NSMutableDictionary",&,N,S_setExtensionExpirationsIdentifiers:,V__extensionExpirationIdentifiers
T@"NSMutableDictionary",&,N,S_setExtensionServiceConnections:,V__extensionServiceConnections
T@"NSMutableDictionary",&,N,S_setExtensionContexts:,V__extensionContexts
_extensionState
T@"NSDictionary",C,D,N,G_extensionState,S_setExtensionState:
T@"NSSet",C,N,S_setAllowedErrorClasses:,V__allowedErrorClasses
observingHostAppStateChanges
TB,N,G_isObservingHostAppStateChanges,S_setObservingHostAppStateChanges:,V_observingHostAppStateChanges
T@,&,V__stashedPlugInConnection
T@"NSArray",R,V__internalPersonas
_setExtensionState:
_isMarkedNew
_didShowExtensionManagementInterface
_didShowNewExtensionIndicator
_resetExtensionState
__localizedInfoDictionaryObjectForKeys:withPlugInUUID:completion:
__queryPhotoServiceAuthorizationStatusForPlugInUUID:completion:
initWithEnumerator:
extensionPointForIdentifier:
extensionPointForIdentifier:platform:
extensionPointByIdentifierPlatform
_extensionPointByIdentifierPlatform
T@"NSDictionary",R,V_extensionPointByIdentifierPlatform
_derivedExtensionAuxiliaryHostProtocol
_beginRequestWithExtensionItems:listenerEndpoint:withContextUUID:completion:
_hostDidEnterBackgroundForContextUUID:completion:
_hostWillEnterForegroundForContextUUID:completion:
_hostWillResignActiveForContextUUID:completion:
_hostDidBecomeActiveForContextUUID:completion:
___nsx_pingHost:
didConnectToVendor:
_extensionContextHostProtocolAllowedClassesForItems
_extensionContextHostProtocolWithAllowedPayloadCompletionClasses:AllowedErrorClasses:
_defaultExtensionContextVendorProtocol
_extensionContextVendorProtocolWithAllowedErrorClasses:
_extensionContextForIdentifier:
supportsSecureCoding
_derivedExtensionAuxiliaryHostProtocolWithContextClass:
encodeWithCoder:
initWithCoder:
copyWithZone:
completeRequestReturningItems:completionHandler:
cancelRequestWithError:
openURL:completionHandler:
initWithInputItems:listenerEndpoint:contextUUID:extensionContext:
inputItems
_UUID
_auxiliaryConnection
_requestCleanUpBlock
_setRequestCleanUpBlock:
_principalObject
_extensionHostAuditToken
T@"NSArray",R,C
T@"NSUUID",R,C
T@"NSXPCConnection",R
T@?,C,S_setRequestCleanUpBlock:
T@,R
T{?=[8I]},R
set_pkUUID:
_pkUUID
_setProcessAssertion:
_processAssertion
_initializeAuxillaryConnectionWithListenerEndpoint:
invalidate
_isHost
_completeRequestReturningItemsSecondHalf:
_loadItemForPayload:completionHandler:
_loadPreviewImageForPayload:completionHandler:
_willPerformHostCallback:
extensionContext
extensionRequest
setExtensionRequest:
_extensionHostProxy
_setExtensionHostProxy:
_setExtensionHostAuditToken:
_transaction
_setTransaction:
_setPrincipalObject:
_extensionVendorProxy
_setExtensionVendorProxy:
_auxiliaryListener
_setAuxiliaryListener:
set_UUID:
_setInputItems:
_setAuxiliaryConnection:
_isDummyExtension
_setDummyExtension:
__dummyExtension
__requestCleanUpBlock
_extensionContext
_extensionRequest
__extensionHostProxy
__transaction
__principalObject
__extensionVendorProxy
__auxiliaryListener
__UUID
_inputItems
__auxiliaryConnection
__extensionHostAuditToken
T@"NSUUID",C,N,V__UUID
T@"NSArray",C,N,S_setInputItems:,V_inputItems
T@"NSXPCConnection",&,N,S_setAuxiliaryConnection:,V__auxiliaryConnection
_dummyExtension
TB,G_isDummyExtension,S_setDummyExtension:,V__dummyExtension
T@"NSExtensionContext",R,W,V_extensionContext
T@"EXExtensionRequest",&,V_extensionRequest
T@"<EXExtensionContextHosting>",&,S_setExtensionHostProxy:,V__extensionHostProxy
T{?=[8I]},S_setExtensionHostAuditToken:,V__extensionHostAuditToken
T@"NSObject<OS_os_transaction>",&,G_transaction,S_setTransaction:,V__transaction
T@,S_setPrincipalObject:,V__principalObject
T@,&,D,S_setProcessAssertion:
T@"<EXExtensionContextVending>",&,S_setExtensionVendorProxy:,V__extensionVendorProxy
T@"NSXPCListener",&,S_setAuxiliaryListener:,V__auxiliaryListener
T@"NSUUID",C,D
T@?,C,S_setRequestCleanUpBlock:,V__requestCleanUpBlock
performExpiringActivityWithReason:usingBlock:
canRunQuery:error:
observerDidObserveDatabaseChange:
addActiveQueryObserver:query:
removeActiveQueryObserver:query:
extensionsMatchingQueries:
extensionsMatchingQuery:
observerDidObserveSettingsChange
activeQueries
setActiveQueries:
observer
setObserver:
settingsStoreToken
setSettingsStoreToken:
activeQueriesLock
setActiveQueriesLock:
queryQueue
setQueryQueue:
_activeQueriesLock
_activeQueries
_observer
_settingsStoreToken
_queryQueue
T@"NSMutableDictionary",&,V_activeQueries
T@"LSObserver",&,V_observer
T@,&,V_settingsStoreToken
T{os_unfair_lock_s=I},V_activeQueriesLock
T@"NSObject<OS_dispatch_queue>",&,V_queryQueue
sharedService
runAsXPCService
currentProcessIsService
extensionsWithQuery:reply:
beginExtensionsQuery:listenerEndpoint:reply:
prepareWithLaunchConfiguration:reply:
getServiceConfigForExtension:overlay:subservices:
registerServiceForClientConnection:extension:error:
launchWithConfiguration:clientConnection:error:
discoveryController
sigtermSource
_discoveryController
_sigtermSource
T@"_EXDiscoveryController",R,V_discoveryController
T@"NSObject<OS_dispatch_source>",R,V_sigtermSource
query:resultDidUpdate:
initWitConnection:
connection
setConnection:
transaction
setTransaction:
_connection
T@"NSObject<OS_os_transaction>",&,V_transaction
T@"NSXPCConnection",&,V_connection
initialized
initForPlugInKit
beginUsing:withBundle:
endUsing:
communicationsFailed:
initForPlugInKitWithOptions:
applyActiveWebPageAlternativeIfNeededForExtension:
_inputItemsByApplyingActiveWebPageAlternative:ifNeededByActivationRule:
_matchingDictionaryMatchesActiveWebPageAlternative:
_inputItemsMatchActiveWebPageAlternative:
_genericValuesMatchActiveWebPageAlternativeWithExtensionItems:attachmentsLens:registeredTypeIdentifiersLens:isActiveWebPageAttachmentCheck:
_dictionaryIncludingOnlyItemsWithRegisteredTypeIdentifier:fromMatchingDictionary:
_evaluateActivationRule:withInputItemsIfTheyMatchActiveWebPageAlternative:matchResult:
_evaluateActivationRule:withDictionaryIfItMatchesActiveWebPageAlternative:matchResult:
notifyExtensionMainCalled
extensionInfoForCurrentProcess
bundleIdentifier
containerBundleIdentifier
containingViewControllerClassName
T@"NSString",R,N
T@"_EXRunningExtensionInfo",R,N
initForCurrentProcess
runLoopType
_bundleIdentifier
_containerBundleIdentifier
_containingViewControllerClassName
_runLoopType
T@"NSString",R,V_runLoopType
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_containerBundleIdentifier
T@"NSString",R,N,V_containingViewControllerClassName
_EK_nullUUID
initWithExtensionIdentity:
initWithExtensionIdentity:instanceIdentifier:
initWithExtension:
initWithExtension:instanceIdentifier:
extensionIdentity
setExtensionIdentity:
interruptionHandler
setInterruptionHandler:
instanceIdentifier
setInstanceIdentifier:
preferredLanguages
setPreferredLanguages:
sandboxProfileName
setSandboxProfileName:
_extensionIdentity
_interruptionHandler
_instanceIdentifier
_preferredLanguages
_sandboxProfileName
T@"<_EXExtensionRepresenting>",&,N,V_extension
T@"_EXExtensionIdentity",&,N,V_extensionIdentity
T@?,C,V_interruptionHandler
T@"_EXExtensionInstanceIdentifier",&,N,V_instanceIdentifier
T@"NSArray",C,V_preferredLanguages
T@"NSString",C,V_sandboxProfileName
defaultInstanceIdentifier
initWithIdentifier:
isEqualInstanceIdentifier:
isDefault
T@"NSUUID",R,V_identifier
rbsProcessIdentity
xpcOverlayDictionaryOverridingSandboxProfileName:multiInstance:
executableURLWithError:
initWithContextFactory:
decodeObjectOfClass:forKey:
contextFactory
setContextFactory:
_contextFactory
T@?,C,V_contextFactory
makeContextWithSceneSession:
beginContextRequest:endpoint:reply:
initWithSceneSession:
makeXPCConnectionWithError:
shoudAcceptConnection:
set__principalObject:
sceneSession
setSceneSession:
_sceneSession
T@"_EXSceneSession",W,V_sceneSession
T@"_EXNSExtensionShimExtension",W,V_extension
T@,&,V__principalObject
T@"NSArray",R,C,D
T@"NSUUID",R,C,V_UUID
T@"NSXPCConnection",R,D
T@?,C,S_setRequestCleanUpBlock:,V_requestCleanUpBlock
T@,R,D
T{?=[8I]},R,V_extensionHostAuditToken
allocWithZone:
extensionPointIdentifierQuery:
extensionPointIdentifierQuery:platform:
allExtensionsQuery
initWithExtensionPointIdentifier:
initWithExtensionPointIdentifier:platform:
initWithExtensionPointIdentifier:predicate:
initWithExtensionPoint:
matches:
matchesRecord:
resultType
setResultType:
extensionPointRecords
_resultType
_extensionPointRecords
T{?=[8I]},D
TQ,V_resultType
T@"NSArray",R,V_extensionPointRecords
platform
TI,D
T@"NSString",&,D
predicate
T@"NSPredicate",&,D
setPredicate:
setHostAuditToken:
record
setRecord:
_predicate
_record
T@"LSExtensionPointRecord",&,V_record
isEqualToQuery:
setExtensionPointIdentifier:
setPlatform:
_platform
executeQuery:
executeQuery:completionHandler:
executeQueries:
executeQueries:completionHandler:
availabilityDidChange:
query:resultsDidUpdate:reply:
initWithQuery:
addQueryObserver:
removeQueryObserver:
endpoint
isActive
reset
availabilityDidChange:reply:
isEqualToActiveQuery:
query
observers
setObservers:
started
setStarted:
xpcListener
_started
_query
_observers
_xpcListener
T@"_EXQuery",R,V_query
T@"NSSet",&,V_observers
T@"NSXPCListenerEndpoint",R
T@"NSXPCConnection",W,V_connection
active
TB,R,GisActive
TB,V_started
T@"NSXPCListener",R,V_xpcListener
connectionLock
discoveryConnection
launchConnection
reconnectActiveQueries
resultWithQuery:
fetchResultWithQuery:completionHandler:
extensionsWithQueries:
fetchExtensionsWithQueries:completionHandler:
_activeQueryForQuery:
_beginActiveQuery:
launchWithConfiguration:error:
setDiscoveryConnection:
setLaunchConnection:
notifyQueue
_connectionLock
_discoveryConnection
_launchConnection
_notifyQueue
T@"NSXPCConnection",&,N,V_discoveryConnection
T@"NSXPCConnection",&,N,V_launchConnection
T^{os_unfair_lock_s=I},D,N
T@"NSMutableSet",&,N,V_activeQueries
T@"NSObject<OS_dispatch_queue>",R,V_notifyQueue
initWithParameters:
role
initializationPromise
sceneDelegateClass
initializationParametersOfClass:error:
parameters
sceneDelegateClassName
setSceneDelegateClassName:
setSceneDelegateClass:
sceneClass
setSceneClass:
_parameters
_sceneDelegateClassName
_sceneDelegateClass
_sceneClass
T@"_EXSceneSessionParameters",R,V_parameters
T@"NSString",C,V_sceneDelegateClassName
T@"_EXPromise",R,D
T#,&,N,V_sceneClass
T#,&,N,V_sceneDelegateClass
T@"NSString",R,C,D
queryControllerDidUpdate:difference:
queryControllerDidUpdate:resultDifference:
asyncQueryQueue
queries
initWithQueries:delegate:
initWithQueries:
extensionsLock
extensionIdentities
internalExtensions
unelectedCount
suspend
resultDidUpdate:
setInternalExtensions:
setUnelectedCount:
delegate
setDelegate:
notificationQueue
_extensionsLock
_internalExtensions
_unelectedCount
_delegate
_queries
_notificationQueue
T@"NSOrderedSet",&,N,V_internalExtensions
TQ,N,V_unelectedCount
T@"NSObject<OS_dispatch_queue>",R,V_notificationQueue
T@"<_EXQueryControllerDelegate>",W,V_delegate
T@"NSArray",R
T@"NSArray",R,C,V_queries
extensions
queryControllerDidUpdate:enabledCount:disabledCount:unelectedCount:
internalDelegate
setInternalDelegate:
_internalDelegate
T@"<_EXQueryObserverDelegate>",W,V_internalDelegate
_EX_transaction
_EX_setTransaction:
initWithActivationRules:predicateDictionary:
predicateForCountingRule:type:exceptTypes:specifiedCount:
predicateForRejectExceptOtherTypesRule:type:otherTypes:
applyRuleWithRuleName:acceptRule:rejectRule:types:exceptTypes:parentType:children:parentAccepted:accepted:acceptedTypesInSubtree:exceptTypesInSubtree:
gatherChildrenPredicateWithRuleDictionary:parentType:parentAccepted:acceptedChildTypes:exceptChildTypes:
makePredicate
strictMatchingSpecified
usesStrictMatching
predicateDictionary
activationRules
_strictMatchingSpecified
_usesStrictMatching
_predicateDictionary
_activationRules
TQ,R,V_version
TB,R,V_strictMatchingSpecified
TB,R,V_usesStrictMatching
T@"NSDictionary",R,V_predicateDictionary
T^{_EXExtensionActivationRules=@@@@@@@@},R,V_activationRules
initializeFiltering
evaluateActivationRule:withExtensionItemsRepresentation:
_evaluateActivationRuleWithoutWorkarounds:withExtensionItemsRepresentation:
predicateForActivationRule:
_EX_isDirectory
_EX_isApplication
_EX_containingApplicationBundleURL
_EX_isContainedInDirectory:
shouldAcceptConnection:
connectSceneSessionWithRequest:reply:
connectToSession:
T@,&
makeConfigurationWithParameters:
makeSceneWithError:
connectToScene:
makeConnectionResponse
setConfiguration:
scene
setScene:
setIdentifier:
sceneConnectionListener
setSceneConnectionListener:
sessionXPCConnection
setSessionXPCConnection:
sceneXPCConnection
setSceneXPCConnection:
hostEndpoint
hasSwiftUIContent
_hasSwiftUIContent
_scene
_sceneConnectionListener
_sessionXPCConnection
_sceneXPCConnection
_hostEndpoint
T@"NSXPCListener",&,V_sceneConnectionListener
T@"<_EXScene>",&,N,V_scene
T@"NSXPCConnection",&,N,V_sessionXPCConnection
T@"NSXPCConnection",&,N,V_sceneXPCConnection
T@"_EXExtension",R,W,N,V_extension
T@"NSUUID",&,V_identifier
T@"_EXSceneConfiguration",C,V_configuration
T@"NSXPCListenerEndpoint",R,V_hostEndpoint
TB,R,N,V_hasSwiftUIContent
completeRequestWithHandler:
initWithPromiseBlock:
resolveObjectOfClass:error:
resolveObjectOfClass:completion:
resolveObjectOfClasses:error:
resolveObjectOfClasses:completion:
promiseBlock
_promiseBlock
T@?,R,C,V_promiseBlock
resolvePromiseWithIdentifier:reply:
resolveObjectOfClasses:forIdentifier:endpoint:error:
resolveObjectOfClasses:forIdentifier:endpoint:completion:
registerPromise:
unregisterPromise:
promises
listener
setListener:
_promises
_listener
T@"NSMapTable",R,V_promises
T@"NSXPCListener",&,V_listener
isLaunchConfigurationEqual:
T@"_EXExtensionIdentity",R,V_extensionIdentity
T@"_EXExtensionInstanceIdentifier",&,V_instanceIdentifier
beginRequestWithExtensionContext:
_initializedByViewServices
_startListening:
_startListening
_extensionDictionary
_extensionPrincipalClass
_extensionMainStoryboard
_extensionContextClass
_completionConcurrentQueue
_expirationConcurrentQueue
_shouldCreatePrincipalObject
_tearDownContextWithUUID:
_addExtensionContext:
_removeExtensionContext:
_setPrincipalObject:forUUID:
_onGlobalStateQueueOnly_setPrincipalObject:forUUID:
_extensionPrincipalObjects
_setExtensionPrincipalObjects:
__extensionPrincipalObjects
T@"NSMutableDictionary",&,N,S_setExtensionPrincipalObjects:,V__extensionPrincipalObjects
_expensiveDictionaryRepresentation
initWithPlugInKitProxy:
initWithApplicationExtensionRecord:
classForCoder
extensionSettingsKey
defaultUserElection
userElection
setUserElection:error:
containingBundleRecord
UUID
localizedName
containingURL
sdkDictionary
extensionDictionary
entitlements
entitlementNamed:ofClass:
extensionPoint
_extensionPoint
T@"LSApplicationExtensionRecord",R,V_record
T@"LSExtensionPointRecord",R,V_extensionPoint
_userElection
_defaultUserElection
_containingBundleRecord
_url
_containingURL
_sdkDictionary
_entitlements
enableExtension:error:
disableExtension:error:
uniqueIdentifier
requiresMacCatalystBehavior
roles
icon
requiresLegacyInfrastructure
T@"NSUUID",R
T@"ISIcon",R
isEqualToExtension:
executableURL
hostContextClass
enablementState
enabled
unelected
isSystemComponent
showsInExtensionsManager
canDisable
targetsSystemExtensionPoint
requiresHostToBeContainerApp
spotlightIndexable
spotlightImporterIdentifiers
alternateSandboxProfileNames
systemComponent
TB,R,D,GisSystemComponent
T@"NSURL",R,V_containingURL
T@"NSUUID",R,V_UUID
T@"NSURL",R
T@"NSDictionary",R,V_sdkDictionary
T@"NSDictionary",R,V_extensionDictionary
TI,R,V_platform
TC,R,V_userElection
TC,R,V_defaultUserElection
T@"NSString",R,D
T@"NSArray",R,D
T@"<_EXExtensionConfigurationProviding>",R,D
T@"LSBundleRecord",R,D
T@"NSURL",R,V_url
T@"NSUUID",R,D
T@"ISIcon",R,D
_EX_objectForKey:ofClass:
_EX_objectForKeys:ofClass:
_EX_dictionaryForKeys:
_EX_arrayForKey:
_EX_stringForKey:
_EX_stringForKeys:
_EX_integerForKey:
_EX_boolForKey:
_EX_boolForKey:defaultValue:
_EX_dictionaryByRemovingObjectForKey:
_EX_dictionaryBySettingObject:forKey:
_EX_dictionaryBySettingValuesForKeysWithDictionary:
_EX_dictionaryWithSignedURL:error:
_EX_objectAtIndex:ofClass:
_EX_dictionaryAtIndex:
_EX_arrayAtIndex:
_EX_stringAtIndex:
_EX_boolAtIndex:
_EX_boolAtIndex:defaultValue:
_EX_unimplementedError
_EX_parameterError
extensionWillFinishLaunching:
extensionDidFinishLaunching:
extension:prepareForSceneConnectionWithConfiguration:
loadDelegateWithClass:
setStrongDelegate:
prepareForSceneConnectionWithConfiguration:
strongDelegate
hasSwiftEntryPoint
setHasSwiftEntryPoint:
internalRep
setInternalRep:
_hasSwiftEntryPoint
_strongDelegate
_internalRep
TB,V_hasSwiftEntryPoint
T@"_EXExtensionIdentity",&,N,V_internalRep
T@,&,N,V_strongDelegate
T@,W,N,V_delegate
options
setOptions:
setInputItems:
setEndpoint:
persona
setPersona:
pkUUID
setPkUUID:
assertion
setAssertion:
processIdentifier
setProcessIdentifier:
plugIn
setPlugIn:
xpcConnection
setXpcConnection:
context
setContext:
_options
_endpoint
_persona
_assertion
_processIdentifier
_xpcConnection
_context
T@"NSUUID",&,V_pkUUID
T@,&,V_assertion
T@"RBSProcessIdentifier",&,V_processIdentifier
T@"<PKPlugInPrivate>",&,V_plugIn
T@"NSXPCConnection",&,V_xpcConnection
T@"NSExtensionContext",W,V_context
TQ,V_options
T@"NSArray",C,V_inputItems
T@"NSXPCListenerEndpoint",&,V_endpoint
T@"_EXPersona",&,V_persona
frameworkPaths
rootURL
initWithSourceURL:
combinedExtensionSDK
combinedAppleInternalExtensionSDK
extensionPaths
appleInternalExtensionPaths
isCatalystSupportURL:
isAppleInternalURL:
enumerateBundlesWithPathExtension:atURL:block:
enumerateAppexptAtURL:block:
enumerateFrameworksBundlesWithFrameworkURL:block:
processExtensionSDKFromBundle:
processExtensionSDKFromFile:
processExtensionSDK:declaringURL:
processExtensionsFromBundle:
processExtensionsInDirectory:
main
sourceURL
_combinedExtensionSDK
set_combinedExtensionSDK:
_combinedAppleInternalExtensionSDK
set_combinedAppleInternalExtensionSDK:
_extensions
set_extensions:
_appleInternalExtensions
set_appleInternalExtensions:
_sourceURL
__combinedExtensionSDK
__combinedAppleInternalExtensionSDK
__extensions
__appleInternalExtensions
T@"NSMutableDictionary",&,V__combinedExtensionSDK
T@"NSMutableDictionary",&,V__combinedAppleInternalExtensionSDK
T@"NSMutableArray",&,V__extensions
T@"NSMutableArray",&,V__appleInternalExtensions
T@"NSURL",R,V_sourceURL
loadItemForTypeIdentifier:completionHandler:expectedValueClass:options:
loadPreviewImageWithCompletionHandler:expectedValueClass:options:
initWithExtensionContextIdentifier:
extensionContextIdentifier
setExtensionContextIdentifier:
_extensionContextIdentifier
T@"NSUUID",C,N,V_identifier
T@"NSUUID",C,N,V_extensionContextIdentifier
initWithItemProvider:destinationProcessAuditToken:
_loadItemsForTypeIdentifiers:auditToken:itemProvider:
_sandboxedResourceForItemIfNeeded:auditToken:error:
itemProvider
setItemProvider:
loadedItems
setLoadedItems:
destinationProcessAuditToken
setDestinationProcessAuditToken:
_itemProvider
_loadedItems
_destinationProcessAuditToken
T@"NSItemProvider",N,V_itemProvider
T@"NSDictionary",&,N,V_loadedItems
T{?=[8I]},N,V_destinationProcessAuditToken
initWithContentsOfURL:auditToken:error:
resolveURLAndReturnError:
resourceURL
setResourceURL:
sandboxExtensionToken
setSandboxExtensionToken:
isAccessingSecurityScopedResource
setAccessingSecurityScopedResource:
_accessingSecurityScopedResource
_resourceURL
_sandboxExtensionToken
T@"NSData",C,N,V_sandboxExtensionToken
T@"NSURL",C,N,V_resourceURL
accessingSecurityScopedResource
TB,N,GisAccessingSecurityScopedResource,V_accessingSecurityScopedResource
enabledCount
setEnabledCount:
disabledCount
setDisabledCount:
_enabledCount
_disabledCount
Tq,V_enabledCount
Tq,V_disabledCount
Tq,V_unelectedCount
initWithObserver:
start
block
_block
T@?,R,V_block
addChangeObserver:
removeChangeObserver:
sceneIdentifier
setSceneIdentifier:
sizeBridgingOptions
setSizeBridgingOptions:
initializationParametersPromise
setInitializationParametersPromise:
_sceneIdentifier
_sizeBridgingOptions
_initializationParametersPromise
T@"NSString",&,V_sceneIdentifier
Tq,V_sizeBridgingOptions
T@"_EXPromise",&,V_initializationParametersPromise
extensionProcessWithConfiguration:error:
_extensionProcessBackgroundQueue
extensionProcessWithConfiguration:completionHandler:
processDidInvalidate:
initWithInternalExtensionProcess:
newXPCConnectionWithError:
auditToken
internalExtensionProcess
setInternalExtensionProcess:
invalidationHandler
setInvalidationHandler:
_internalExtensionProcess
_invalidationHandler
T@"_EXExtensionProcessHandle",&,V_internalExtensionProcess
T@?,C,V_invalidationHandler
setInfoDictionary:
isPlugInKitProcess
setPlugInKitProcess:
_initialized
_plugInKitProcess
T@"NSDictionary",C,N,V_infoDictionary
plugInKitProcess
TB,N,GisPlugInKitProcess,V_plugInKitProcess
setPrincipalClass:
setExtensionContextClass:
_principalClass
T#,&,V_principalClass
T#,&,V_extensionContextClass
makePrincipalObjectForExtension:
T@"NSExtensionContext",&,V_context
initWithIdentities:
initWithAvailablility:
initWithIdentities:availablility:
_initWithIdentities:availablility:
identities
availablility
_identities
_availablility
T@"NSSet",R,V_identities
T@"_EXExtensionAvailablility",R,V_availablility
initWithAddedExtensions:removedUUIDs:
initWithCurrentExtensions:updatedExtensions:
addedExtensions
removedUUIDs
_removedUUIDs
T@"NSSet",R,D
T@"NSSet",R,V_removedUUIDs
sandboxed
initWithExtensionClass:machServiceName:process:
initWithURL:readonly:
consume
consumedSandboxExtension
setConsumedSandboxExtension:
_consumedSandboxExtension
TQ,V_consumedSandboxExtension
T@"NSString",&,V_sandboxExtensionToken
_EX_extensionProcess
_EX_setExtensionProcess:
T@"_EXExtensionProcessHandle",&,S_EX_setExtensionProcess:
initWithLaunchConfiguration:auditToken:processIdentity:sandboxExtensions:
aquireAsertionWithError:
addObserver:
removeObserver:
makeXPCConnection
makeSessionXPCConnection
_handleAssertionInvalidation
isValid
makeXPCConnectionRetainProcess:withError:
launchConfiguration
serviceListenerEndpoint
processIdentity
sandboxExtensions
setSandboxExtensions:
xpcConnectionLock
setXpcConnectionLock:
xpcConnections
setXpcConnections:
manager
setManager:
observersLock
setObserversLock:
internalConnection
setInternalConnection:
_xpcConnectionLock
_observersLock
_launchConfiguration
_serviceListenerEndpoint
_processIdentity
_sandboxExtensions
_xpcConnections
_manager
_internalConnection
_auditToken
T@"NSArray",&,V_sandboxExtensions
T{os_unfair_lock_s=I},V_xpcConnectionLock
T@"NSHashTable",&,V_xpcConnections
T@"_EXExtensionProcessMannger",W,V_manager
T{os_unfair_lock_s=I},V_observersLock
T@"NSHashTable",&,V_observers
T@"_EXInternalHostConnection",W,V_internalConnection
T@"_EXLaunchConfiguration",R,V_launchConfiguration
T{?=[8I]},R,V_auditToken
T@"NSXPCListenerEndpoint",R,V_serviceListenerEndpoint
Ti,R
T@"BKSProcessAssertion",R,V_assertion
T@"RBSProcessIdentity",R,V_processIdentity
valid
TB,R,D,GisValid
processWithLaunchConfiguration:error:
processExtensionMap
setProcessExtensionMap:
processExtensionMapLock
setProcessExtensionMapLock:
_processExtensionMapLock
_processExtensionMap
T@"NSMapTable",&,V_processExtensionMap
T{os_unfair_lock_s=I},V_processExtensionMapLock
addSession:
sessionForIdentifier:
removeSessionForIdentifier:
sessions
_sessions
__sessions
T@"NSMutableDictionary",R,V__sessions
SDKDictionary
variant
TI,R
setSDKDictionary:
setVariant:
setUrl:
_SDKDictionary
_variant
T@"NSString",&,V_identifier
T@"NSDictionary",&,V_SDKDictionary
TI,V_platform
TQ,V_variant
T@"NSURL",&,V_url
xpcExtensionsCache
xpcExtensionPointsCache
extensionPointsConfigURL
legacyExtensionPointAllowList
_extensionPointsConfigURL
_legacyExtensionPointAllowList
_rootURL
_xpcExtensionsCache
_xpcExtensionPointsCache
T@"NSURL",R,V_rootURL
T@"NSURL",R,V_xpcExtensionsCache
T@"NSURL",R,V_xpcExtensionPointsCache
T@"NSURL",R,V_extensionPointsConfigURL
T@"NSDictionary",R,V_legacyExtensionPointAllowList
config
extensionCacheFileURLs
extensionPointCacheFileURLs
extensionPointDefinitionDirectoryURLs
extensionInstallDirectoryURLs
extensionEnumerator
extensionURLEnumerator
_extensionLiveEnumerator
extensionPointDefinitionEnumerator
_extensionPointLiveEnumerator
extensionPointDefinitionEnumeratorWithSDKDictionary:
enumerateExtensionPointsInDirectoryAtURL:block:
translateAppexptDictionary:definitionURL:isCatalyst:
initWithCacheURLs:config:
initWithSDKDictionary:config:
initWithSDKDictionary:urls:config:
translateXPCCacheDictionary:
synthesizeNSExtensionKeysInDictionary:identifier:
flattenEXExtensionPointConfigurationInDictionary:identifier:
validateExtensionPointIdentifier:sdkDictionary:
nextObject
validateExtensionPoints
extensionPoints
extensionPointsKeyEnumerator
currentExtensionPoint
currentIdentifier
currentNativeSDKDictionary
currentCatalystSDKDictionary
_validateExtensionPoints
_config
_extensionPoints
_extensionPointsKeyEnumerator
_currentExtensionPoint
_currentIdentifier
_currentNativeSDKDictionary
_currentCatalystSDKDictionary
T@"<EXEnumeratorConfig>",R,V_config
T@"NSDictionary",R,V_extensionPoints
T@"NSEnumerator",R,V_extensionPointsKeyEnumerator
T@"_EXExtensionPoint",R,V_currentExtensionPoint
TB,R,V_validateExtensionPoints
T@"NSString",R,V_currentIdentifier
T@"NSDictionary",R,V_currentNativeSDKDictionary
T@"NSDictionary",R,V_currentCatalystSDKDictionary
enumerateExtensionsInDirectoryAtURL:block:
initWithCacheURLs:
initWithCacheURLs:paths:
extensionPathsEnumerator
_extensionPaths
_extensionPathsEnumerator
T@"NSArray",R,V_extensionPaths
T@"NSEnumerator",R,V_extensionPathsEnumerator
implementsNSExtension
queryPredicatesEvaluatedOutOfProcess
errorTypes
plistTypes
plistAndValueTypes
appleInternal
useLSDExtensionKitServiceForDiscovery
useLSDExtensionKitServiceForLaunch
preferInProcessDiscovery
rejectExtensionRequestsWithInsecureInputItems
requiresLoadOperatorSecureDecoding
supportExtensionKitConfigPath
allowsAppleInternalComponents
hostRequiresEntitlements
enforceLegacyExtensionPointAllowList
allowSimulatedJetsam
allowPrototypeAPI
allowPrototypeSPI
assertOnDisallowedPrototypeAPIUse
assertOnDisallowedPrototypeSPIUse
startUIHostingSessionImmediately
alwaysEnabledExtensionBundleIdentifiers
enforceXPCCacheCodeSigning
forceSandbox
defaultSandboxProfileName
T@"NSSet",R
currentPersona
defaultPersona
personaWithPersonaUniqueString:
initWithPersonaUniqueString:
personaUniqueString
_personaUniqueString
T@"NSString",R,N,V_personaUniqueString
initWithQuery:discoveryController:
update
internalObservers
internalNewObservers
currentUUIDs
setCurrentUUIDs:
_internalObservers
_internalNewObservers
_currentUUIDs
T@"NSMutableSet",R,V_internalObservers
T@"NSMutableSet",R,V_internalNewObservers
T@"_EXDiscoveryController",R,W,V_discoveryController
T@"NSSet",&,V_currentUUIDs
setHostEndpoint:
setParameters:
T@"NSXPCListenerEndpoint",&,V_hostEndpoint
T@"_EXSceneSessionParameters",&,V_parameters
sceneEndpoint
setSceneEndpoint:
_sceneEndpoint
T@"NSXPCListenerEndpoint",&,V_sceneEndpoint
_EX_discoveryServiceInterface
_EX_launchServiceInterface
_EX_combinedServiceInterface
_EX_queryResultsInterface
initWithPrincipalObject:
principalObject
setPrincipalObject:
connectionHandler
setConnectionHandler:
_connectionHandler
T@,&,V_principalObject
T@"<_EXConnectionHandler>",&,V_connectionHandler
extensionIdentityWithError:
containingBundleIdentifier
beginExtensionRequest:error:
beginExtensionRequest:completion:
uuid
extensionRepresentedBy:error:
extensionWithIdentity:error:
T@"NSArray",&,N
T@"<EXExtensionInfoProviding>",R,N
checkInWithLaunchd
assertIsExtensionProcess
addExternalServiceForPid:path:overlay:
servicePidFromXPCConnection:
@16@0:8
^?16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
i28@0:8r^*16i24
v16@0:8
v24@0:8@16
{?=[8I]}16@0:8
@"_EXExtension"
@"<_EXExtensionConfigurationProviding>"
{?="val"[8I]}
@44@0:8@16I24@28^@36
B24@0:8@"NSXPCConnection"16
@"NSDictionary"16@0:8
@24@0:8@16
@32@0:8@16^@24
v32@0:8@16@?24
v36@0:8@16B24@?28
@36@0:8@16B24^@28
@32@0:8@16@?24
B24@0:8^@16
B32@0:8@16^@24
v40@0:8Q16@24@?32
@40@0:8Q16@24^@32
v48@0:8Q16@24@32@?40
@48@0:8Q16@24@32^@40
v40@0:8@16@24@?32
@40@0:8@16@24^@32
i24@0:8@16
@32@0:8@16@24
d16@0:8
i16@0:8
v24@0:8@?16
v36@0:8B16@20@?28
v20@0:8i16
@?16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"NSDictionary"
@"NSUUID"
@"<PKPlugIn>"
@"NSArray"
@"NSMutableDictionary"
@"NSBundle"
@"NSSet"
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
@28@0:8@16I24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSError"16@"NSUUID"24@?<v@?>32
v40@0:8@"NSDictionary"16@"NSUUID"24@?<v@?@@"NSError">32
v32@0:8@"NSURL"16@?<v@?B>24
v48@0:8@16@24@32@?40
v48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@?<v@?@"NSUUID"@"NSError">40
v32@0:8@"NSUUID"16@?<v@?>24
v24@0:8@?<v@?>16
@24@0:8#16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
v32@0:8@"NSArray"16@?<v@?B>24
v24@0:8@"NSError"16
@48@0:8@"NSArray"16@"NSXPCListenerEndpoint"24@"NSUUID"32@"NSExtensionContext"40
@"NSArray"16@0:8
@"NSUUID"16@0:8
@"NSXPCConnection"16@0:8
@?<v@?>16@0:8
v48@0:8{?=[8I]}16
@"NSExtensionContext"
@"EXExtensionRequest"
@"<EXExtensionContextHosting>"
@"NSObject<OS_os_transaction>"
@"<EXExtensionContextVending>"
@"NSXPCListener"
@"NSXPCConnection"
v24@0:8@"LSObserver"16
v32@0:8@16@24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"LSObserver"
@"NSObject<OS_dispatch_queue>"
v32@0:8@"_EXQuery"16@?<v@?@"_EXQueryResult"@"NSError">24
v40@0:8@"_EXQuery"16@"NSXPCListenerEndpoint"24@?<v@?@"NSError">32
v32@0:8@"_EXLaunchConfiguration"16@?<v@?@"_EXExtensionProcessHandle"@"NSError">24
v40@0:8@16^@24^@32
B40@0:8@16@24^@32
@"_EXDiscoveryController"
@"NSObject<OS_dispatch_source>"
v32@0:8@"_EXQuery"16@"_EXQueryResultUpdate"24
v32@0:8@"<PKSubsystemServicePersonality>"16@"NSBundle"24
v24@0:8@"<PKSubsystemServicePersonality>"16
@"<PKModularService>"16@0:8
@"<PKModularService>"24@0:8@"NSDictionary"16
B48@0:8@16@?24@?32@?40
B40@0:8@16@24o^q32
@"_EXExtensionIdentity"
@"_EXExtensionInstanceIdentifier"
@"<_EXExtensionRepresenting>"
@28@0:8@16B24
@24@0:8^@16
@24@0:8@?16
@32@0:8#16@24
v40@0:8@"NSUUID"16@"NSXPCListenerEndpoint"24@?<v@?@"NSXPCListenerEndpoint">32
@"_EXNSExtensionShimExtension"
@"_EXSceneSession"
v24@0:8Q16
I16@0:8
@"NSPredicate"
@"LSExtensionPointRecord"
v20@0:8I16
v40@0:8@"_EXQuery"16@"_EXQueryResultUpdate"24@?<v@?>32
@"_EXQuery"
^{os_unfair_lock_s=I}16@0:8
@"NSMutableSet"
@32@0:8#16^@24
v24@0:8#16
@"_EXSceneSessionParameters"
v24@0:8@"_EXExtensionAvailablility"16
@"NSOrderedSet"
@"<_EXQueryControllerDelegate>"
v48@0:8@16Q24Q32Q40
v32@0:8@"_EXQueryController"16@"NSOrderedCollectionDifference"24
v48@0:8@"_EXQueryController"16Q24Q32Q40
@"<_EXQueryObserverDelegate>"
@32@0:8^{_EXExtensionActivationRules=@@@@@@@@}16@24
@44@0:8@16@24@32i40
@40@0:8@16@24@32
@100@0:8@16@24@32@40@48@56@64B72^B76^@84^@92
@52@0:8@16@24B32^@36^@44
^{_EXExtensionActivationRules=@@@@@@@@}16@0:8
^{_EXExtensionActivationRules=@@@@@@@@}
v32@0:8@"_EXSceneSessionConnectionRequest"16@?<v@?@"_EXSceneSessionConnectionResponse"@"NSError">24
v24@0:8@"_EXSceneSession"16
@"_EXSceneConfiguration"
@"<_EXScene>"
@"NSXPCListenerEndpoint"
v32@0:8#16@?24
v32@0:8@"NSUUID"16@?<v@?@"<NSSecureCoding><NSObject>">24
@48@0:8@16@24@32^@40
@"NSMapTable"
v24@0:8@"NSExtensionContext"16
C16@0:8
B28@0:8C16^@20
@32@0:8@16#24
@"LSApplicationExtensionRecord"
@"LSBundleRecord"
@"NSURL"
@32@0:8@"NSString"16#24
@"NSXPCConnection"24@0:8^@16
@"ISIcon"16@0:8
q24@0:8@16
B28@0:8@16B24
@32@0:8Q16#24
@24@0:8Q16
B24@0:8Q16
B28@0:8Q16B24
@"_EXPersona"
@"RBSProcessIdentifier"
@"<PKPlugInPrivate>"
v24@0:8^{__CFBundle=}16
@"NSMutableArray"
v48@0:8@16@?24#32@40
v40@0:8@?16#24@32
v48@0:8@"NSString"16@?<v@?@"<NSSecureCoding>"@"NSError">24#32@"NSDictionary"40
v40@0:8@?<v@?@"<NSSecureCoding>"@"NSError">16#24@"NSDictionary"32
@56@0:8@16{?=[8I]}24
@64@0:8@16{?=[8I]}24@56
@64@0:8@16{?=[8I]}24^@56
@"NSItemProvider"
@"NSData"
@"_EXPromise"
v24@0:8@"_EXExtensionProcessHandle"16
@"_EXExtensionProcessHandle"
@"_EXExtensionAvailablility"
@64@0:8@16@24{?=[8I]}32
@72@0:8@16{?=[8I]}24@56@64
@28@0:8B16^@20
@"_EXLaunchConfiguration"
@"BKSProcessAssertion"
@"RBSProcessIdentity"
@"NSHashTable"
@"_EXExtensionProcessMannger"
@"_EXInternalHostConnection"
@"NSURL"16@0:8
@36@0:8@16@24B32
@"<EXEnumeratorConfig>"
@"NSEnumerator"
@"_EXExtensionPoint"
@"<_EXConnectionHandler>"
i36@0:8i16@20@28
